Natural Text
If I create a Python dataclass containing a Numpy ndarray, I can no longer use the automatically generated __eq__ anymore.ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()This is because ndarray.__eq__ sometimes returns a ndarray of truth values, by comparing a[0] to b[0], and so on and so forth to the longer of the 2. This is quite complex and unintuitive, and in fact only raises an error when the arrays are different shapes, or have different values or something.How do I safely compare @dataclasses holding Numpy arrays?@dataclass's implementation of __eq__ is generated using eval(). Its source is missing from the stacktrace and cannot be viewed using inspect, but it's actually using a tuple comparison, which calls bool(foo).excerpt:
The solution is to put in your own __eq__ method and set eq=False so the dataclass doesn't generate its own (although checking the docs that last step isn't necessary but I think it's nice to be explicit anyway).


Answer URL
https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass
