Natural Text
This question already has an answer here:Dynamic SQL WHERE clause generation                    1 answer                How to use variables in SQL statement in Python?                    4 answers                Python sqlite3 parameterized drop table                    1 answer                From my Python code (Flask application, actually), I need to execute sqlite query, of the following structure    Now, some_column recurs twice in the query, one way to execute it is:    Which is not very nice/Pythonic. Then I came up with:    Finally, I ended up using .format() all the way:    I am wondering if there is prettier and/or more Pythonic way to pass recurring arguments into sqlite's cursor.execute()?
First syntax is incorrect. In SQL parameterized queries can use parameters for values, not for table or column names.Third form is bad because it hard codes a value in a query which is forbidden per best practices. It used to be common some times ago and was the cause for SQL injection security problems.So the only possibility is second form: use string construction for table and column names, and parameters for values.But anyway, your query is close to non sense: you ask the value of one single column when you fix that column value. For each selected row, the value will be some_value!So, I assume that this was a simplified example of a more complex question, but without more context, I simply cannot imagine why you are asking this question and what is your real problem.
It's not a big improvement, but since you tagged Python 3, consider the f-string: As Klaus D. points out in a comment, however, it's not best practice to allow values to be format strings, as in some cases it makes your code vulnerable to SQL injection.  It's a little less compact, but you can use a mix of f-string (for column names) and sqlite ? syntax to input values (basically a mashup of your first two examples):


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#f-strings
