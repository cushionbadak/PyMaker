Natural Text
I'm trying to understand the proper way to use multiprocessing.Pipe to communicate two processes. I've come up with the following code, which seems to work:But it's not clear to me what parent_conn and child_conn really mean and why I have to call child_conn.close() and parent_conn.close() (assuming it's correct to close these connections in the first place). What are parent_conn and child_conn exactly? Does my code contain any error or bad practice?
What are parent_conn and child_conn exactlyThey are connection objects that are attached to the different ends of the pipe.The pipe is a communication channel.If one process holds one of these objects and another process holds the other, then they can communicate with each other by using send and recv methods of those connection objects.If some process has two ends of the pipe available, then it might want to close the one it is not going to use. It's probably a good idea to do that because then it cannot happen that two different processes would try to write into or read from the same pipe end (that may have some not so pleasant consequences as described here


Answer URL
https://docs.python.org/3/library/multiprocessing.html?highlight=multiprocessing%20pipe#multiprocessing.connection.Connection
https://docs.python.org/3/library/multiprocessing.html?highlight=multiprocessing%20pipe
