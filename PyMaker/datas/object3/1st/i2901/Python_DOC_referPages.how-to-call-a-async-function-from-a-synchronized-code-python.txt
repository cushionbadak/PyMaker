Natural Text
So I'm locked to a python 3.6.2 interpreter that follows my desktop application. What I want is to call an async function from a synchronized method or function.When calling the python function from the desktop application it has to be a normal function which can not be awaited. From the desktop application I am able to send a list of urls, and what I want is to send back response from every url in an async matter.here is my try I've marked the SyntaxError which I don't know how to bypass.I have tried making these changes:    import fme    import fmeobjects    import asyncio    import aiohttp    import async_timeout    logger = fmeobjects.FMELogFile()but now I end up with this error:
You would use an event loop to execute the asynchronous function to completion:(This technique is already used inside main. And I'm not sure why, since main is async you could/should use await fetch_all(...) there.)
@deceze answer is probably the best you can do in Python 3.6.But in Python 3.7, you could directly use asyncio.run in the following way:It will properly create, handle, and close an event_loop.


Answer URL
https://docs.python.org/3/library/asyncio-task.html?highlight=asyncio%20run#asyncio.run
