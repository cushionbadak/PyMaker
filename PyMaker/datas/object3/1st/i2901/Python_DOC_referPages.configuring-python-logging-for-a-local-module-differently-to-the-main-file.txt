Natural Text
With a Config Dict I want to configure the logging in a local Python 3 module to log level INFO while in the main file I want to configure the log level DEBUG. All the configuration should be done in the main file, not in the module, so that I can change the logging without touching the module.Here an example. Given the module file log_try_module.py:and the main file log_try_main.py:I am looking for an run output like this:Please note that there is no debug message from  log_try_module emitted!I have experimented with passing various config dicts, but I never get the output I am looking for. What is going wrong?
The problem with your code is two-fold:You use getLogger(__name__) in the main module log_try_main.py, but __main__ evauates to the string "__main__" when the main module is called from Python on the command line, not to "log_try_main".You configure a root logger. If you add another handler to root logger, the logs logged by module will display twice.So here I write an example which I think runs as you expect:main.py:moduel.py:Output:I explicitly name the two loggers instead of using __name__. I think this is more controllable and does not give different results when log_try_module.py is run on the command line.


Answer URL
https://docs.python.org/3/library/logging.config.html#dictionary-schema-details
https://docs.python.org/3/library/logging.html#logging.Logger.propagate
