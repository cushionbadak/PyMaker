Natural Text
When a python session/terminal is closed or killed forcefully does the memory occupied by lists other data structures in the code released automatically (I mean the garbage collection)?
Yes, the Python process attached to that terminal releases all the acquired memory. This applies not only to Python, but to standalone processes in terminals (with no dependencies).This is particularly important when using GPUs, since many modules (e.g. tensorflow/Pytorch) rely on full control of the GPU. 
Yes, assuming its the parent process. If you kill the parent process all memory should be release back. Python's garbage collector kicks in in cases where the parent is still running but the memory requirements are changing over time. Eg: You started by reading in a large file into a list and are removing items as you process items on the list. In this scenario you should see a decrease in memory usage, but it will never  go down to what it was before the list was created (even if you del the entire list). This is because python tries to "think ahead" and does't release some of the memory in case your process asks for it again.Another fun case is when using python's multiprocessing lib. If you don't close the pool correctly, the memory used by the child processes may not get released.I think you just cared about what would happen when you open up a REPL, ran some manipulations and killed the shell. In that case, the memory is released back.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.multiprocessing.Pool.close
https://docs.python.org/3/c-api/memory.html
