Natural Text
I am trying to write unit tests for my python package and I am finding that when I run the tests AssertionErrors are not being raised, when they should be. Here is a MWE:In exampleModule.py I have:and in testError.py I have:When I run testError.py I expect to see the AssertionError reported from the UnitTest in exampleModule.py, however, I simply see the following:Why is the AssertionError not being raised? If I place the UnitTest() class in testError.py (i.e. have everything in the same file) then the AssertionError is raised. So why when UnitTest is stored in a different file does the error not get raised? Thanks!
TestCase.run()creates or updates aTestResultobject, on the assumption you intend to do something interesting with those results.But you immediately throw them away:Any failures or errors --- including exceptions raised --- would have been in that results object.For example:This prints:Failures:  [(<exampleModule.UnitTest testMethod=runTest>, 'Traceback (most recent call last):\n  File "/home/kjc/tmp/exampleModule.py", line 11, in runTest\n    self.assertEqual(a, b)\nAssertionError: 4 != 5\n')]It catches all kinds of exceptions, like this example where I added sys.exit() before the assertion:Errors:  [(<exampleModule.UnitTest testMethod=runTest>, 'Traceback (most recent call last):\n  File "/home/kjc/tmp/exampleModule.py", line 11, in runTest\n    import sys; sys.exit()\nSystemExit\n')]For the record, the one passing test your example produced is testExample itself.You can verify this by calling self.fail() early in testExample.(As one commentator said, calling unit tests from a unit test is a very strange thing to do.)One SolutionYou seem to want to run tests normally, but from multiple files.If so, you can make a bunch of typicalunittest.main()-styletest modules, and then load them manually.Your test-everything script would look something like this:Your test modules would be the usual one-or-more TestCases, with conditional calls to unittest.main(), so each could be run independently:If that's not fiddly enough for you, you can also read up on thediscover() methodor the module-levelload_tests protocol.
The convention to structure unittests is like this:Hold all tests in tests directory.test module will be named as test_modulea.py with class TestClassAnosetests -vw tests to run all tests.


Answer URL
https://docs.python.org/3/library/unittest.html#unittest.TestCase.run
https://docs.python.org/3/library/unittest.html#unittest.TestResult
https://docs.python.org/3/library/unittest.html#unittest.main
https://docs.python.org/3/library/unittest.html#unittest.TestLoader.discover
https://docs.python.org/3/library/unittest.html#load-tests-protocol
