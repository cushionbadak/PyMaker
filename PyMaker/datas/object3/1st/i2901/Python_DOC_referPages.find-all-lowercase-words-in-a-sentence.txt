Natural Text
I have to to find all lowercase words in a sentence using Python. I've thought about using regular expression as follows:It works except for the case in which I have, for instance, Aword. How can I solve it?In general, the regex should match the following cases:
You can use [a-z]:Output:
You don't actually need regex for this task, you can use str methods. The regex-based approach is quite fast, but it's possible to do it even faster, using str.translate .Here's the fastest solution that I've found. We create a translation table (a dictionary) that maps each non-lowercase ASCII character to a space. Then we use str.split to split the resulting string up into a list; str.split() splits on any whitespace, and discards the whitespace, leaving only the desired words.Here's some test code that compares various approaches, including the regex solution of Ajax1234, as well as a few suggestions from regulars in the sopython chat room, including Kevin and user3483203. The test data for this code consists of strings containing datalen words, with datalen running from 32 to 1024. Each word consists of 8 random characters; the random word generator mostly chooses lowercase letters.As the timeit.Timer.repeat docs mention the important number in these results is the minimum one (the first in each list), the other numbers just indicate the impact on the results due to variations in the system load.outputThe results are for Python 3.6.0, on my ancient single core 32 bit 2GHz machine running a Debian derivative of Linux. YMMV.     user3483203 has added some Pandas and matplotlib code to produce a graph from the timeit results.
I believe this should do the trick:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
https://docs.python.org/3/library/stdtypes.html#str.split
https://docs.python.org/3/library/timeit.html#timeit.Timer.repeat
