Natural Text
I have 3 python classes A, B and C. A contains B object and B contains C's object. What I want is when I print A class object, it should pretty print in the below format. There can be more nesting also inside C class.Below are the classes for reference.
The following recursive funciton works from scratch using the __dict__ attr. of the classes to get key:value pairs of the class' attributes. From here, we just test if the value is another class (in which case we call ourselves again), otherwise we simply print it in your desired format.The only other thing to keep track of is the current indent of what level this line is currently printing at. This can be easily done with a default parameter (indent) that we increment before each recursion.and it works:
The following works by letting your classes inherit from a common base class implementing the __str__ method:In Python 3.6 and newer, this displays likeNote that all attributes are automatically printed. Their print order is determined by the vars function, which really looks in the __dict__ dictionary. This dictionary has a nondeterministic order in Python 3.5 and below, and so the printout is not nearly as nice as in 3.6 and up.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__str__
https://docs.python.org/3/library/pprint.html#prettyprinter-objects
