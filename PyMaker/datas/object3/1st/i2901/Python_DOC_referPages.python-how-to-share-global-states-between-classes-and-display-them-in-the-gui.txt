Natural Text
I'd like to share global states (e.g. is_online or num_items) between classes like services and the GUI.I'd like to be able to modify states everywhere: events, service init, etc.Currently I store all shared states in globals.py, which can be modified everywhere. To display a state in the GUI in almost live, I just check the states every x seconds and update the GUI label.It feels very dirty and as I'm new to Python I'd like to know how to do it properly. This question is not opinion based. There should be a convention or  best practice that I missed. The topic seems pretty common to me.Any ideas? Thank you!app.pyglobals.pyitem_service.pyGUI.py
There are several ways to store data like databases, files and so on.For example, you can simply store your "state" in a sqlite database.Source: https://docs.python.org/3/library/sqlite3.html


Answer URL
https://docs.python.org/3/library/sqlite3.html
https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes
