Natural Text
I'm writing a Python (3) wrapper for an API, and I'm trying to unit test a part of it that requires a file to be uploaded. I would like to verify the filename and the content are sent properly by my client.I'm using Python's unittest library, along with requests and requests_mock for testing this.The way that I was planning to approach this problem was to have a callback function for validating the file is sent and all the headers are properly set. Here's what I have so far:I have determined that, upon successful file upload, the request parameter to the validate_file_upload has a couple relevant bits of data, namely request.headers and request.text. Here is the content of both of them after the validate_file_upload function is called:request.headersrequest.textNow, here's the thing. I know that I can just parse the request.text  string and get the data I want; it's easy enough to validate. However, that sort of logic seems like it really doesn't belong in my unit testing. I can't imagine there isn't a better solution to this; either someone has implemented this functionality already in a different module or I'm overlooking something obvious.I shouldn't have to implement the HTTP spec for file uploads to unit test something as simple as a file upload, right? Is there a better way of doing this?Here is the output of dir(request):I have checked all of the non-underscore attributes for any other representation of the file upload data, to no avail. I've also tried searching StackOverflow and Google, and am no closer to finding a better way of doing this. This is the only post that shows up for either of the searches.
For the time being, I have decided to take this rather simple approach:While it is not perfect, it's significantly less logic than parsing the HTTP request and seems to do at least a basic validation that the file is being uploaded properly. As I mentioned before, I'm using the requests library, so I'm not too worried about messing up a file upload, and this should catch it in most cases, anyways. As a precaution against incorrectly matching the name file against something else in the request.text, I have changed it to rather_unique_filename.


Answer URL
https://docs.python.org/3/library/unittest.html
