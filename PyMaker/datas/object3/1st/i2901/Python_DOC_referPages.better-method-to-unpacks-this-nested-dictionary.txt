Natural Text
I got a nested dictionary as follows and it will return the third key while inputting the first key in the dictionary I feel that its bit more steps, is there any other way to do it?Regard
You can use dict.get method with a default value of empty dict to get the top level dict and then convert its values to a iter, use next to get the first value
You can simply use a try-excep expression in order to find out whether your name exist in the dictionary or not. If it exist there you can then return all the values of the respective value:Also note that about checking the existence of your name in dictionary what you're ding here is a membership checking at following line:Which will not check for equality but checks if check_con appears within the dictionary keys. However if this is what you want you have to loop over your items and find the intended one. But also note that this may have multiple answers or in other words there may be multiple keys matching your criteria which contradicts with the whole purpose of using a dictionary.Demo:
this is a variant where i use next(iter(...)) in order to get the 'first' element of your dict and set (note that you innermost curly brackets in your tree are sets and not dicts):as both sets and dict_values (which is the type dict(...).values() returns) are not indexable (have no __getitem__ method) i turn them into an iterator using iter and get the first element using next.


Answer URL
https://docs.python.org/3/library/functions.html?highlight=iter#iter
https://docs.python.org/3/library/functions.html?highlight=built#next
