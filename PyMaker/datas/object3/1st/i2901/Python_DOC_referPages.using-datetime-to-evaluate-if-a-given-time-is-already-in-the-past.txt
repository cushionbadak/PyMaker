Natural Text
This is my current code:    The JSON data looks like this:Time_1, 2 and 3 all contain different times where the train departs. I want to check if time_1 is already in the past, and time_2 now is the relevant time. In my opinion, using datetime.now to get the current time and then using If / elif to check if time_1 is sooner than datetime.now would be a viable option. I am new to coding, so I am unsure if this is a good way of doing it. Would this work and are there any better ways? PS: I am planning to make a display that displays the time the next train leaves. Therefore, it would have to check if the time is still relevant over and over again.
The following code extracts all the departure time strings from the JSON data, and converts the valid time strings to datetime objects. It then prints the current time, and then a list of the departure times that are still in the future. Sometimes the converted JSON has None for a departure time, so we need to deal with that. And we need to get the current time as a timezone-aware object. We could just use the UTC timezone, but it's more convenient to use the local timezone from the JSON data.outputThat query URL is a bit ugly, and not convenient if you want to check on other stations. It's better to let requests build the query URL for you from a dictionary of parameters. And we should also check that the request was successful, which we can do with the raise_for_status method.Just replace the top section of the script with this:If you've never used enumerate before, it can be a little confusing at first. Here's a brief demo of three different ways to loop over a list of items and print each item and its index number.
I didn't understand your question properly. I think you are trying to compare two time. First let's see the contents of time_1: {'departure': '2018-08-04T15:24:00+0200'}So add departure key to access time. To parse the date and time string to python understandable time we use datetime.strptime() method. See this link for further description on datatime.strptime()The modified version of your code that does time comparision:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior
https://docs.python.org/3/library/functions.html#enumerate
