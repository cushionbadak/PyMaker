Natural Text
I have 2 lists:In the nested ListA, I want to append the values of ListB if the first element in ListA == 'Download'I am trying to get this to be sequential, so that the first 'Download' list in ListA will append the first element in ListB etc.  I know there must be an easy way to do it.I tried:This doesn't work, as the index (i) of ListA will not correlate with that of ListB if the for loop skips one of its nested lists (as happens in the example), so i will be out of range.So I expect my final result to be:Any suggestions welcome.
You really don't need to care about indexes: you can create an iterator on ListB with iter and use next to get its elements when needed:
The problem is obvious: you cannot use the same index for ListA and ListB, as you've already noted.  Stop doing that.  Keep a separate index for each list:Code:Also, why are you doing this from indexing ListA?  You don't really need that: go straight to the items themselves:
Use a counter to track which position in ListB you've last appended:
Here is a solution that creates a new list, using itertools.count as a index variable
As you have noted, appending ListB[i] won't be correct, because the index of the item you want to append is different from i.There are two possible solutions:Creating another indexing variable, for example j, for ListB. Everytime you append item from ListB, you raise j by one, so next time, the item from ListB will be correct: If you won't use ListB again, you can use pop method, just like this:Method ListB.pop(0) returns and deletes the first item of ListB, which is exactly what you need, if you won't use ListB again (because it gets empty).Either way, you don't need variable i, you can iterate just over the list:
A python one liner solution:
Must have careful with index of ListB, it can get out of range if we don't control it and ListA has more sublists with Download at first than length of listB.Control it is simple, something like the following code will be enough:


Answer URL
https://docs.python.org/3/library/functions.html#iter
