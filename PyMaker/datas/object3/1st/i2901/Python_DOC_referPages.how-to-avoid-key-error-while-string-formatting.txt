Natural Text
I've run into a fairly simple issue that I can't come up with an elegant solution for.I'm creating a string using str.format in a function that is passed in a dict of substitutions to use for the format. I want to create the string and format it with the values if they're passed and leave them blank otherwise.Exshould returninstead of throwing a KeyError (Which is what would happen if we don't do anything).Embarrassingly, I can't even come up with an inelegant solution for this problem. I guess I could solve this by just not using str.format, but I'd rather use the built-in (which mostly does what I want) if possible.Note: I don't know in advance what keys will be used. I'm trying to fail gracefully if someone includes a key but doesn't put it in the kwargs dict. If I knew with 100% accuracy what keys would be looked up, I'd just populate all of them and be done with it.
You can follow the recommendation in PEP 3101 and use a subclass Formatter:As of Python 3.2, you can use .format_map as an alternative:which prints:
Here is one option which uses collections.defaultdict:Note that we aren't using ** to unpack the dictionary into keyword arguments anymore, and the format specifier uses {0[name]} and {0[adjective]}, which indicates that we should perform a key lookup on the first argument to format() using "name" and "adjective" respectively.  By using defaultdict a missing key will result in an empty string instead of raising a KeyError.
For the record:
Wanted to add a pretty simple solution to the substituting any default values needed.
A way to avoid the key error is to include in the dict but leave it blank:Keyword arguments expect their to be a key in kwargs. Another way to do it would be positional arguments:Prints "My name is Mark and I'm really." While Prints "My name is Mark and I'm really black."Alternatively, you can catch the ValueError. 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format_map
