Natural Text
I'm trying to do grouping in python in a one line expression. I want to build a dict of groups and number of items in the group:But g is an iterator and it does not work in second use with 'count': len(list(g)). How can I do counting and reusing g in one line expression?
You can't call list() on an iterator more than once, no. You have to store the result first.Your options are, in order of feasibility:To not use a one-liner. Use a regular for loop and assign the list() result to a separate variable first.Wrap the groupby() iterator in a generator expression that applies list() to the group object.Add a second loop over with a single element tuple, the list() call, so you can use the loop target as a variable for both keys in the dictionary you are building.Wait until Python 3.8 which adds PEP 572 assignment expressions and assign the list() call result to a name to re-use for len()The first should be the preferred option. Readability counts!Using a generator expression is perhaps the next best option:The generator expression loop is executed in parallel as for k, gl in list_group iterates.The second-loop option looks like this:Because this trick is surprising and hard to read, I strongly recommend against using it.In Python 3.8, with PEP 572 implemented, you can use:Iterators can be 'doubled' by using the itertools.tee() object, but that has to then cache the whole list in memory separately, doubling the memory cost and the code would become no more readable (as you'd have to use a similar trick then to store the tee() call iterators in variables too!).


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.tee
