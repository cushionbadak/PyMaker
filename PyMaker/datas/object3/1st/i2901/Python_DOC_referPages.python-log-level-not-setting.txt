Natural Text
In file 1:In file 2:Does not print anything (imports are in place of course). And if I go:The output is 0, instead of the expected 20. So it looks like the logger level isn't set at the level that I thought it was. Moreover, the level is lower than I thought it was, yet it still doesn't log on logger.info. What am I doing wrong here? Oh and bonus question (since I stole the above code and don't know any of python's logging intricacies), how does resolution of a log message happen if the logger's level and the handler's level clash?
File 2 only calls get_logger() and not init_logger(). Thus, setLevel is never called on the logger, so its given the default value of NOTSET. Take a look at: https://docs.python.org/3/library/logging.html#logging.Logger.setLevelBy default, the root logger is created with level WARNING. This is why logger.info(logger.level) does nothing as INFO is below WARNING. logger.critical(logger.level), on the other hand, outputs 0 as this is the numeric value of NOTSET. To have it do what you want, just call init_logger() in your second file: To answer your bonus question: the handler gets whatever messages get through the logger.If the level of the logger is DEBUG, and the level of the handler is INFO, the handler will receive all messages from the DEBUG Level and up, but will only output messages on the INFO level and up. 
You didn't call init_logger() (before calling logger.info()) so the level of your non-default _LOGGER_NAME was not set.Also note the typo: if name == '__main__': -> if __name__ == '__main__':


Answer URL
https://docs.python.org/3/library/logging.html#logging.Logger.setLevel
