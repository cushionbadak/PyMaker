Natural Text
How does Django translate this <bound method Child.parent_identity of <Child: >> object in a string object, and displays it as such in my django-admin  "inline" Child class idparent field ? What does Django do ?I have the following application structure:My inline idparent field displays the Parent id field CORRECTLY in the admin inline interface. Being a newbie, it's magic for me, because self.instance.parent_identity is initially not a string object.But how to explictly print the string content as follows That is, how to get it so as to deal with it in the ChildForm class ?UPDATEI do not mind specifically about "UUID in the form when the instance hasn't been created yet"and i do not want to provide an initial value myself.I want my still empty (extra) Child fields (one field in my example code: idparent) to contain by default something which is Parent variable.Is it possible ? 
Django templates automatically call any object that is callable; e.g. the callable() function returns True when you pass the object in. From the Variables section in the template documentation:If the resulting value is callable, it is called with no arguments. The result of the call becomes the template value.Bound methods are callable, so instead of using self.instance.parent_identity, the template uses the output of self.instance.parent_identity().In your own code, you generally already know that something is a method and you call it explicitly:You can treat the parent_identity method as an attribute; have Python call it automatically without you having to call it explicitly. If you never have to pass in an argument, then that might make sense. You do this by decorating the method with the @property decorator:at which point self.instance.parent_identity will give you the return value of that method.Take into account that the UUIDField only is given a value on pre-save; it'll be None until the object is saved in a database. If you really wanted to UUID in the form when the instance hasn't been created yet, you'll have to provide an initial value yourself:
You are calling a function, which means you need to use it as such:Alternately you could wrap it with the @property decorator and continue using it as you are, notice that you need to use self.parent.id if you want to access the parent's id:


Answer URL
https://docs.python.org/3/library/functions.html#callable
https://docs.python.org/3/library/functions.html#property
