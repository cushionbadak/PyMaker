Natural Text
Another Python newbie question, but I can't find an answer by Googling.  What am I doing wrong?[Update]  db is from db = sqlite3.connect(SQLITE_DATABSE_NAME)How do I go about getting those fields?  dbTrack = {tuple}(None, 'The Verve Pipe', 'Villains', 'The Freshmen')  Do I just use dbTracks[0], etc?  I agree with @ abarnert that that is not good practice. I would not do it in any other programming language, but being so new to Python, I can't seem to find how to getFieldByName
By default, any Python database library that meets the DB-API 2.0 standard will give you some kind of sequence for each row, usually a tuple or list. (In sqlite3, it's a tuple.) Obviously you can't call methods like getFieldByName on a tuple or list.Even though it isn't part of the standard, many libraries provide a way to specify a row_factory, and may provide built-in alternative row factories. For example, sqlite3.Row allows you to access it as if it were a tuple, or a dict (using the column names as keys).So, most likely, you copied and pasted your code from some other program that uses custom a row type that has a getFieldByName method, but you didn't copy the code that sets that custom row type as the row factory.As a side note, even if you fix this, this line isn't going to work:At this point, the variable genre either doesn't exist (in which case it'll raise an UnboundLocalError or NameError), or has some irrelevant value. You almost certainly wanted the literal string 'genre'.If you're using sqlite3, I think you'd be a lot better off using its built-in Row type than some custom type that's more verbose and not standardized, wherever it comes from. So:


Answer URL
https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.row_factory
https://docs.python.org/3/library/sqlite3.html#sqlite3.Row
