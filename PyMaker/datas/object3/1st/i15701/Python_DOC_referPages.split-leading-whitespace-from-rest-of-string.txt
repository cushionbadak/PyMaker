Natural Text
I'm not sure how to exactly convey what I'm trying to do, but I'm trying to create a function to split off a part of my string (the leading whitespace) so that I can edit it with different parts of my script, then add it again to my string after it has been altered.So lets say I have the string:I want to split it so I end up with:
You can use re.match:(\s*) captures zero or more whitespace characters at the start of the string and (.*) gets everything else.Remember though that strings are immutable in Python.  Technically, you cannot edit their contents; you can only create new string objects.For a non-Regex solution, you could try something like this:The main tools here are next, enumerate, and a generator expression.  This solution is probably faster than the Regex one, but I personally think that the first is more elegant.
Why don't you try matching instead of splitting?Explanation:^\s+ Matches one or more spaces at the start of a line.| OR .+ Matches all the remaining characters. 
One solution is to lstrip the string, then figure out how many characters you've removed. You can then 'modify' the string as desired and finish by adding the whitespace back to your string. I don't think this would work properly with tab characters, but for spaces only it seems to get the job done:And a simple test to ensure that we've done it right, which passes:
One thing you can do it make a list out of string.that is This is a non regex solution which will not require any imports 


Answer URL
https://docs.python.org/3/library/re.html#re.match
https://docs.python.org/3/library/functions.html#next
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression
