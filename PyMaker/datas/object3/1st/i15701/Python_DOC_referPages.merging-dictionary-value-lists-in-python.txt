Natural Text
I'm trying to merge three dictionaries, which all have the same keys, and either lists of values, or single values.What I need is for all the items in the values to be added to one list.I have tried several things, but most put the values into nested lists. E.g.I tried updating it by looping through the values:but the results was exactly the same.I have tried to simply add the lists, but because the third dictionary has only a float, I couldn't do it. So I tried to first add the lists in values of one and two, and then append the value of three. Adding the lists worked well, but then when I tried to append the float from the third dictionary, suddenly the whole value went to 'None'
As a one-liner, with a dictionary comprehension:This creates new lists, concatenating the list from one with the corresponding list from two, putting the single value in three into a temporary list to make concatenating easier.Or with a for loop updating one in-place:This uses list.extend() to update original list in-place with the list from two, and list.append() to add the single value from three.Where you went wrong:your first attempt creates a new list with the values from one, two and three nested within rather than concatenating the existing lists. Your attempt to clean that up just copied those nested lists across.Your second attempt didn't work because the value in three is not a list so could not be concatenated. I created a new list just for that one value.Your last attempt should not have used list.append() in a generator expression, because you store the return value of that method, which is always None (its change is stored in v directly and the list doesn't need returning again).Demo of the first approach:
Arbitrary dictionary number and keysThe issues with your attempt are covered by @MartijnPieters' solution.For a generalised solution, consider using itertools.chain to chain multiple dictionaries. You can also use a defaultdict for the more general case where you do not find the same keys in each dictionary.Note defaultdict is a subclass of dict so there's generally no need to convert the result to a regular dict.
See this help or not:  


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
