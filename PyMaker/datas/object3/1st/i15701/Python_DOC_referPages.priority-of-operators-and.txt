Natural Text
This question already has an answer here:Why does the expression 0 < 0 == 0 return False in Python?                    9 answers                I'm trying to guess which operator has priority: > (greater than) or == (equal). This is my experiment:As far as I know, this has two possible solutions.Neither one returns False, so how is the first code resolved by Python?
This has to do with operator chaining.  Unlike C/C++ and most other languages, Python allows you to chain comparison operators just like you would in normal mathematics. From the documentation:Comparisons can be chained arbitrarily, e.g., x < y <= z is  equivalent to x < y and y <= z, except that y is evaluated only once  (but in both cases z is not evaluated at all when x < y is found to be  false).So, this expression:is actually interpreted as:which becomes:which is False.Using parenthesis however changes how Python interprets your comparison.  This:becomes:which is True (see below for why).  Same goes for:which becomes:which is also True.Because of PEP 0285, bool was made a subclass of int and True == 1 while False == 0:


Answer URL
https://docs.python.org/3/reference/expressions.html#not-in
