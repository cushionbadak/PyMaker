Natural Text
I'm working on my python script as I'm created the variable outside of the loop so I can generate the list of numbers. I have a problem with generating the list of numbers.When I try this:I will get the output like this:The output should be like this:I will get the output like this:The problem are lie in this code:Can you please tell me how I can generate the numbers I want outside of the loop and how I can use the variable outside of the loop?EDIT: When I try this:I will get this:There are one value that are missing which it is 4547.EDIT: *Update 1:When I try to use this:Output:It will not store the value outside of the loop as it will get the same value 7 in row. I want to use the loop of for channels_id under the for index loop so I can then generating the list of values before I can use the control self.getControl(ID).setLabel(channel) to set the label using the variable channel for each value that I set in the label when I generating the values using the variable ID. I've been asking you how I can store the values outside of the loop for later use. If you can help, please update your code in your answer post.
You already can access the variable outside the loop. That's why it's printing out 4545, instead of giving you an UnboundLocalError or other exception.The problem is that "outside the loop" only happens once, with the last value from the loop. So, you set ID, then set it again, then set it again, 69 times, and then finally print the 69th value. If you want to print each of the 69 values, you have to do it each time through the loop. Instead of this:Do this:Or, if you want to do something with all 69 values, you have to accumulate them all, e.g., by adding them to a list, so all 69 of them are available, instead of just the last one:From your comments, it seems like your problem is even simpler. You don't want to print out all the values, only every 70th value. You're already got every 70th value in channels_id. So, just print that:But really, you don't seem to be doing anything with that ID value, or doing anything useful with the inner loop at all; instead of generating and then ignoring 69 out of every 70 values, why not just not generate them in the first place? Like this:Your last problem is that the loop doesn't include 4547.That's because a Python range only includes values less than the stop value, not less than or equal to it. For a simpler example:Notice that it didn't print 3.So, you could use range(4127, 4548, 70) or range(4127, 4617, 70) (it's hard to know which one is more "natural" in your use case without understanding what that use case is) to get all the values you want.


Answer URL
https://docs.python.org/3/library/stdtypes.html#typesseq-range
