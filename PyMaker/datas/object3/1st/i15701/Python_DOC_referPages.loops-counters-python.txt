Natural Text
second is an array of 113 and two is an array of 60. Basically what I want to do is to iterate through two and find any elements in second which are exactly the same to the element in two (I know they should be the other away around, just hear me out). Using the counter A, I can figure out the element number in the array second for the identical element that is in two, ie 0.1922574 is element position 1 in two but 0.1922574 is element position 15 in second (I need to find the element position so I can assign the element in that element position in RA1_order to RA1_matched). But it runs short (it finds only 44 matches instead of 60) because two is smaller than second. I tried swapping them around but then the counter only went up to 59 when I need the counter to go up to 113. What can I do? I've tried using,at the start of the two array loops, but that just made crazy things happen. I could have been doing it wrong though, I'm a newbie to coding and I just started learning for a physics project.--editAfter some feedback I'll expand and edit some variable names! The project is an astrophysics one, but I'll try to generalise my question.. I'm using a mixture of lists and numpy arrays as me and a partner swap code with each other, but it's easy enough to convert the arrays to lists.Basically say I've got two lists, X of length 100 and Y of length 60. I want to go through list Y and find identical elements in list X. Then when I find an identical element I want to know that element's position in the list. Using that position I can sort some data using some other code I wrote. Someone mentioned to use enumerate, but I'm not sure how I'd apply that to my problem.
Sets and list comprehensions should together solve your problem.Output:
To elaborate on my comment, this is what I was suggesting:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
