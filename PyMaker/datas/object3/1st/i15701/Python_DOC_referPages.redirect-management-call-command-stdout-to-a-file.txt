Natural Text
I've been trying to redirect the standard output of a custom django command using this piece of code:However, when I call this from manage.py the standard output appears on the console and the /tmp/output file is created but empty. Here's the django documentation of what I'm trying to do
Your command is probably just using print directly.  To be able to capture or redirect prints in a management command, you'll want to use the self.stdout handle of the command instance:  If you absolutely can not change the buggy print statements of the command (it's the code in 'basequery' command at fault in your example), then you can use a context manager to temporarily redirect stdout in order to capture that output.  It's important to restore the old stdout after redirection.  See contextlib.redirect_stdout. 
If you have control over the code of the management command, then you should follow the answer by @wim. This answer assumes you can't/won't change the command itself.The method by @Igor is the best way when available, but some commands ignore stdout argument. @Phob1a has a solution that is basically okay but has the problem of closing stdout (so future output to it doesn't work). With some changes:Note that if you want to just throw away output, you should replace the first command:
I am using this to redirect output to file
I tried Igor's approximation using the following code:I got the same result tough: empty file and stdout appearing in the console. Maybe that's because I'm calling django commands from a django command?Anyway, I managed to solve the problem this way:I know it is an ugly solution but it's the only way I made it work.


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.redirect_stdout
