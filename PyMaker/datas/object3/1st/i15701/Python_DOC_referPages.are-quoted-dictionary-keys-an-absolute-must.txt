Natural Text
Just curious, made an interesting observation that I got away with defining my dictionary keys without having to quote them. I guess this is a vulnerability in Python? Within a sample, and not in REPL, the following does not raise an exception:How do Pythonistas handle their keys? Do you advocate unquoted or quoted keys, and why?
A dictionary's keys can be any hashable object (a string, an integer, a tuple, etc.):Quoting a key simply means that the key is a string, as with 'a' above.As far as your claim that:I got away with defining my keys without having to quote themI assume that you mean you did something like this:There is really nothing special about the code above.  It just means that the names key1 and key2 refer to hashable objects, which now become the keys of the dictionary. An example is below:On the other hand, if you mean that you used the dict built-in to make a dictionary:Then you should know that the keys are still normal strings:Finally, regarding your question of whether or not you should always use string keys, the answer is it depends.  If you need your keys to hold data that can only be represented as a string (such as a person's name), use strings.  If you need the keys to hold numerical data (such as id numbers), use integers or floats or whatever is appropriate.Simply put, do whatever makes the most sense for your program.


Answer URL
https://docs.python.org/3/glossary.html#term-hashable
https://docs.python.org/3/library/functions.html#func-dict
