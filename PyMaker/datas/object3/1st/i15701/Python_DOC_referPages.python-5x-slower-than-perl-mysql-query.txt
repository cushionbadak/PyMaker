Natural Text
I am translating a code from perl to python.Even if it works exactly the same, there  is a part of the code that is 5x slower in python than in perl and I cannot figure out why.Both perl and python are in the same machine, as well as the mysql database.The code queries a db to download all columns of a table and then process each row.There are more than 5 million rows to process and the big issue is in retrieving the data from the database to the python processing.Here I attach the two code samples: Python:While here comes the Perl equivalent script:The runtime for these two scripts is:~40s for the Perl script~200s for the Python scriptI cannot figure out why this happens [I tried using fetchone() or fetchmany() to see if there are memory issues but the runtime at most reduces 10% from the 200s].My main problem is understanding why there is such a relevant performance difference between the two functionally equivalent code blocks.Any idea about how can I verify what is happening would be greatly appreciated.Thanks!UPDATE ABOUT SOLUTIONPeeyush'comment could be an answer and I'd like him to post it because it allowed me to find a solution.The problem is the python connector. I just changed that for mySqlDb module which is a C compiled module. That made the python code slightly faster than the perl code.I added the changes in the python code with a <---- "" to show how easy it has been to gain performance.
the cursor.fetchall means you load all your data in memory at once, instead of doing it slowly when needed.Replaceby 
The problem is the python connector. I just changed that for mySqlDb module which is a C compiled module. That made the python code slightly faster than the perl code.I added the changes in the python code with a <---- "" to show how easy it has been to gain performance
I encounter the same problem. With Python cx_Oracle, here's my environment performance stats -- Python takes very long to connect to Oracle DB.connect to DB, elaps:0.38108run query, elaps:0.00092get filename from table, elaps:8e-05run query to read BLOB, elaps:0.00058decompress data and write to file, elaps:0.00187close DB connection, elaps:0.00009Over all, elaps:0.38476same function in Perl, elaps:0.00213
Python for loops are quite slow. You should look into an alternative to treat your query.From python wiki : https://wiki.python.org/moin/PythonSpeed/PerformanceTips#Loops


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
