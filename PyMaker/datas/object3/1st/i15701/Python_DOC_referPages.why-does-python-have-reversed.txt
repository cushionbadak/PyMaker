Natural Text
Why does Python have the built-in function reversed?Why not just use x[::-1] instead of reversed(x)?Edit: @TanveerAlam pointed out that reversed is not actually a function, but rather a class, despite being listed on the page Built-in Functions.
reversed returns a reverse iterator.[::-1] asks the object for a slicePython objects try to return what you probably expectThis is convenient - particularly for strings and tuples.But remember the majority of code doesn't need to reverse strings.The most important role of reversed() is making code easier to read and understand.The fact that it returns an iterator without creating a new sequence is of secondary importanceFrom the docsPEP 322: Reverse Iteration A new built-in function, reversed(seq)(),  takes a sequence and returns an iterator that loops over the elements  of the sequence in reverse order.Compared to extended slicing, such as range(1,4)[::-1], reversed() is  easier to read, runs faster, and uses substantially less memory.Note that reversed() only accepts sequences, not arbitrary iterators.  If you want to reverse an iterator, first convert it to a list with  list().
The first notation is generating the reverse eagerly; the second is giving you a reverse iterator, which is possibly cheaper to acquire, as it has potential to only generate elements as needed
reversed return a reverse iterator.x[::-1] return a list.
First of all, reversed is not a built-in function.It's a class which itrates over a sequence and gives a reverse order of sequence.Try:And when we pass a parameter to it, it acts as a iterator,whereas a slice operation returns the whole list which is not memory efficient for larger lists.That is why, in Python 2, we have range (which returns whole list) as well as xrange (which generates each element on every iteration).
Output:The reversed function returns a reverse iterator. The [::-1] returns a list. 
Because reversed returns an iterator.


Answer URL
https://docs.python.org/3/library/functions.html#reversed
