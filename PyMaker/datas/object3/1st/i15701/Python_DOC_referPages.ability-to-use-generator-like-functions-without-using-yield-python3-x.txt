Natural Text
There are some cases where its convenient to use a generator with yield to pass back data, to the caller over an extended period. Is there a way to do something similar to yield, without having to make the function into a generator?The reason for this, is in some cases I end up having to make all callee's into generators when those nested functions may have useful return values.Instead I'd like to pass an object as an argument which I can pass arguments to (instead of using yield)
Generators are just one form of iterators. Anything that implements the iterator protocol will do.This means you can replace your nested function with an object with more attributes:I implemented the __iter__ method as a generator function even.Then use the object in your generator at will:Another method is to throw exceptions; if you are trying to communicate some out-of-band state change, throw an exception and catch it in the parent generator.


Answer URL
https://docs.python.org/3/library/stdtypes.html#iterator-types
