Natural Text
I have a few thousand blocks of text  which may or may not contain a date of death for the person in the record, which is always in the form:that is that it starts with parenthesis, followed by a d and ., then some date text and closes with the final parenthesis.I wrote the following code with a few test samples to test a Regex which I wrote:However it prints no results. I've tested the Regex in an online Regex tester and it works for valid test input.So, I guess my code is wrong. Can anyone suggest why, please?Finally - what I want to extract is date of death itself (not the parenthesis and d.)- any suggestions how I could do that?
re.match always matches from the start of the string.  From the docs:re.match(pattern, string, flags=0)If zero or more characters at the beginning of string match the regular expression pattern, return a corresponding match object.Emphasis mine.  You need to use re.search to have Python search for a pattern anywhere in the string:Also, in your pattern, I escaped the . after d to have Python match a literal period.  Otherwise, Python will match any character there (except a newline).
Use search instead of matchWhy match wont work?Tha match searches the pattern at the start of the string. In the test string, the matched part is not at the start of the string and hence match fails.  Where as search searches for the pattern anywhere in the string.re.search(pattern, string, flags=0)Scan through string looking for the first location where the regular expression pattern produces a match, and return a corresponding MatchObject instance. Return None if no position in the string matches the pattern;
Considering it is always in the form (d. xxxxxxxxxxxxx)  and your regex and the answers supplied catch anything in the format (r. then anything) unless you will have cases where you have an (r. followed a space and no closing paren then you can do this without a regex:  


Answer URL
https://docs.python.org/3/library/re.html#re.match
