Natural Text
Possible Duplicate:String comparison in Python: is vs. == I'm running it from the command line with the argument first, so why does that code output:
From the Python documentation: The operators is and is not test for object identity: x is y is true if and only if x and y are the same object.This means it doesn't check if the values are the same, but rather checks if they are in the same memory location. For example:Note the different memory locations:But since s3 is equal to s1, the memory locations are the same:When you use the is statement:But if you use the equality operator:Edit: just to be confusing, there is an optimisation (in CPython anyway, I'm not sure if it exists in other implementations) which allows short strings to be compared with is:Obviously, this is not something you want to rely on. Use the appropriate statement for the job - is if you want to compare identities, and == if you want to compare values.
You want:is checks for object identity (think memory address).But in your case the the objects have the same "value", but are not the same objects.Note that == is weaker than is.This means that if is returns True, then == will also return True, but the reverse is not always true.
Basically, is checks object's address (identity), not value,. For value comparison use == operator


Answer URL
