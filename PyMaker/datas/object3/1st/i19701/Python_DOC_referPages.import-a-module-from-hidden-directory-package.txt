Natural Text
I recently switched a Django project from sqlite3 to postgres. I'd like to read db password from a module placed in a hidden directory.How do I import DB_PASSWORD from the db module placed in the hidden .secrets directory? The following doesn't work (ImportError):Do I have to use the __import__ trick? For code styling conventions I'd prefer to stay with the from/import pattern.
From PEP 328, http://www.python.org/dev/peps/pep-0328/#rationale-for-relative-imports you should actually avoid naming a python module starting with a "dot" because it means relative imports in Python.If you really insist on doing so, you can but you will have to use the imp module.  Example usage:-So for your use case where you want to load in values from db.py, it would look something like this:-Won't advise on it though.
In Python, the from .module import something syntax is for relative imports.So, if you try to use a leading dot in a package name, Python will get confused and attempt a relative import, which will fail.On a related note, doing import .module is actually a SyntaxErrorI don't think this is so bad though. Just store your secret somewhere else and add that somewhere else to your path, or put it in a file that you can just open (like, a JSON configuration file, for instance).
You should make that db.py a configuration file and load it with configparser. Or you could store it as a JSON file and load it with json, or store it as YAML and load it with PyYAML.
I found a formal answer in the Python reference.The from forms are:orIn the first form the dot has nothing to do with the wrong concept of "hidden packages", it refers to relative imports (as mentioned by Thomas Orozco). In the second form the module is defined as follow:and identifier must start with a letter.As you suggested I'll use an external configuration file, not Python code.


Answer URL
