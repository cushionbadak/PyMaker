Natural Text
I have a code such that:And output:Why in the latter case I see a character code, instead of the character?How I can transform Byte string to Unicode string that in case of an output I saw the character, instead of its code?
In strings (or Unicode objects in Python 2), \u has a special meaning, namely saying, "here comes a Unicode character specified by it's Unicode ID". Hence u"\u0432" will result in the character Ð².The b'' prefix tells you this is a sequence of 8-bit bytes, and bytes object has no Unicode characters, so the \u code has no special meaning. Hence, b"\u0432" is just the sequence of the bytes \,u,0,4,3 and 2.Essentially you have an 8-bit string containing not a Unicode character, but the specification of a Unicode character.You can convert this specification using the unicode escape encoder.
Loved Lennart's answer. It put me on the right track for solving the particular problem I had faced. What I added was the ability to produce html-compatible code for \u???? specifications in strings. Basically, only one line was needed:This all came about from a need to convert JSON results to something that displays well in a browser. Here is some test code that is integrated with a cloud application:


Answer URL
