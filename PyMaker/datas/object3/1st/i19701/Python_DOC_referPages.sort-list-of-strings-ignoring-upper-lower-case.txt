Natural Text
I have a list which contains strings representing animal names. I need to sort the list. If I use sorted(list), it will give the list output with uppercase strings first and then lowercase. But I need the below output.Input:Output:
The sort() method and the sorted() function take a key argument:The function named in key is called for each value and the return value is used when sorting, without affecting the actual values:To sort Ant before ant, you'd have to include a little more info in the key, so that otherwise equal values are sorted in a given order:The more complex key generates ('ANT', False) for Ant, and ('ANT', True) for ant; True is sorted after False and so uppercased words are sorted before their lowercase equivalent.See the Python sorting HOWTO for more information.
New answer for Python 3, I'd like to add two points:Use str.casefold for case-insensitive comparisons.Use the method directly instead of inside of a lambda.That is:(which sorts in-place) and now:Or, to return a new list, use sortedWhy is this different from str.lower or str.upper? According to the documentation:Casefolding is similar to lowercasing but more aggressive because it is intended to remove all case distinctions in a string. For example, the German lowercase letter 'ß' is equivalent to "ss". Since it is already lowercase, str.lower() would do nothing to 'ß'; casefold() converts it to "ss".
We can use the 'sorted' function according to Python Sorting HOW TO documentation.Output1: 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.casefold
