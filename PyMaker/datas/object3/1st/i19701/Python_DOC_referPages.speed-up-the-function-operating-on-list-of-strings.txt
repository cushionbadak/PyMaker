Natural Text
I want to speed up the function from my code, which is called very frequently. This function receives as input list of strings (usually of length 4) and produce the list of strings in which corresponding entries substituted be capital letters in order which corresponds to the alphanumeric order of input string. Then this list is combined in one string.Example: input list ['wwTv', 'NzkT', 'wwTv', 'JhXc'], output string 'C,B,C,A'. In real examples there are many duplicates in each list.Could you propose more effective solution of this particular problem? Or my straightforward algorithm is good enough and cannot be significantly improved?Below is a sample of my code (Python 3.2). Here the sample of input data is randomly created and passed to the function f.Results:My function a is a little bit faster, then b proposed by Martijn Pieters
I'd use a dictionary to map labels to indices:Using a smaller labels set to facilitate multiple passes in a more managable time gives:but as you can see, for your small input sets, your method is faster. It appears that setting up the mapping takes more time than up to 4 .index() look-ups.If your label sequences consist of (much) more elements, my method would win:The most important lesson here is to use the timeit module to compare different methods. The timeit module uses the best timer for your platform, and compares many runs of the code-under-test to eliminate outside scheduling influences (disk I/O, other processes, etc).Even when timing just one run, using timeit.default_timer is preferable over using time.time; it may be the same timer still, but then it'll be the most accurate clock for your platform.
If you really want this to work quickly, have a look at cython too. Of course, do have a look at other proposed algorithms here, but once you select the fastest one, cython can still give it a good boost.Currently taking your original methods a and b, I just moved them without changes to another module and compiled with cython and gcc (-O3). Without type information, I got the following times:I'm sure marking the types of variables could give it another boost.


Answer URL
