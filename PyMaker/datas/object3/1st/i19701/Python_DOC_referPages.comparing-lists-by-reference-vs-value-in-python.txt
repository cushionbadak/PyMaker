Natural Text
I'm learning Python with version 3.2 at the moment.Given two list variables, how do you distinguish if the variables reference the same list vs two separate lists with the same values.For example:In the above, "foo" and "bar" are clearly referencing the same list. (as evidenced by appending "5" to foo and seeing that change reflected in bar as well).Now, let's define a third list, called "other" with the same values:They definitely look like the same list given the comparison operator here also returns True.  But if we modify "other", we can see that it is a different list where changes in either variable don't impact the other.I think it would be useful to know when two variables are aliases for each other vs. being identical in structure.  But I suspect I might be misunderstanding something else fundamental to the language.
You can use the is operator to determine object identity:To quote the documentation:The operators is and is not test for object identity: x is y is true if and only if x and y are the same object. x is not y yields the inverse truth value.Another way to detect if two variables refer to the same object (such as a list) is to check te return value of the id() function:


Answer URL
