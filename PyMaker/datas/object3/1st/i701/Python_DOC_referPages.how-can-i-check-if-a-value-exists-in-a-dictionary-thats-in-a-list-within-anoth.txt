Natural Text
I have a dictionary that contains multiple keys and values, one of which contains a list of more dictionaries. I need to be able to find if a given value exists within those dictionaries, but I'm unsure how to check against them when they exist not only within a list, but within an object property.While a for loop check could accomplish this, the property could end up holding hundreds of values, which would make this approach inefficient. I've also tried variations of:if <value> in <dict>[<list>][<dict2>]But, I keep getting TypeErrors that list indices must be an integer or slice (The values are strings).An example of the code would be:(I cannot upload the actual code, but this is roughly what I am facing.)Expected output would be that the code runs without errors, and is successfully able to find if the value is in the nested dictionary or not.
One example is to use the inbuilt any function which short circuits when the first match is found. However there are several options  
Just iterate over Check_Me and get all the values of key 'value' from dictionary.
You may need recursion:You may also want to change a line up there to isinstance(value, (list, tuple)) or something more complicated. Using recursion allows you to be more flexible on how deep your data hierarchy can go.


Answer URL
https://docs.python.org/3/library/functions.html#any
