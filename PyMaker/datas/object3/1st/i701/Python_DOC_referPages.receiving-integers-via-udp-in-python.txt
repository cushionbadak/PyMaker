Natural Text
I am receiving data from an external program (Max/MSP) over UDP.The data is coming into Python fine.Strings come in as expected. i.e if I send "89-90-10-10" it comes in as a string that I can use in Python.However, if I send a single integer, it comes in as "int�,i�����" despite using the decode() method.What is going wrong in my code?If I send "1" over udp from my other programme, I receive the following output in Python:b'int\x00,i\x00\x00\x00\x00\x00\x01'int,i
The issue is that UDP stream is receiving bytes, regardless of whether you send a string or integer.  So the program is likely packing the integer into bytes. The code below is a hack that is ignoring some of the data received.When you send an integer of 1 and receive b'int\x00,i\x00\x00\x00\x00\x00\x01' the "int" is telling the receiver that this is an integer.  This is followed by nine bytes, where-as integers are usually sent in 1, 2, 4, or 8 bytes.Using the last 8 bytes does not return the value 1, but using the last four bytes does, so the code below is slicing the bytes[-4:] to get only the last four.There is probably some documentation or open source project that properly handles Max/MSP data so I suggest looking into that.Here is the docs for the struct import that is used to unpack the data:https://docs.python.org/3/library/struct.html


Answer URL
https://docs.python.org/3/library/struct.html
https://docs.python.org/3/library/stdtypes.html#bytes.decode
