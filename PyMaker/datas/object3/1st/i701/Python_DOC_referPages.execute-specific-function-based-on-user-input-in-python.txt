Natural Text
This question already has an answer here:Calling a function of a module by using its name (a string)                    11 answers                I am making a python script which hashes a string using an algorithm that the user specifies in input using hashlib. After I hash the string, I want to do the same thing to it, no matter what hash algorithm the user chose. Because of that I wanted to make a function for it, not to repeat code but wouldn't know how to change the built-in hash function based on the input. My code right now looks like this:The function hashlib.algorithm(word).hexdigest() has to change depending on which algorithm the user chose. For example, if the user chose sha512, the code would look like this: hashlib.sha512(word).hexdigest(), instead, if the user chose md5, the code would look like this: hashlib.md5(word).hexdigest() and so on. However, the code under these lines is exactly the same and right now I am repeating it 3 times, and possibly more if I will add more algorithms in the future. Therefore how do I make a function that changes algorithm based on user input, so that I do not have to repeat so much code? I was thinking to take advantage of arguments, but wouldn't know how to work around it. This is kind of what I had in mind, but would not work since you can't change built-in methods:Then, under every if statement I would call the function with and passing it the user input (containing the hash algorithm) as an argument.I hope the question is clear and would appreciate any help!
Use getattr:
You could also simply extract the common code from the if/else block like this:


Answer URL
https://docs.python.org/3/library/functions.html#getattr
