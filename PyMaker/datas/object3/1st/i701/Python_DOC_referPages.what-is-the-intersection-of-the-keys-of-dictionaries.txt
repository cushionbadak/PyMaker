Natural Text
I'm trying to write a one liner function using map, filter, reduce that takes is a list of dictionaries (Ld) and returns a collection of the keys that are contained in all the dictionaries (the intersection of the keys).The function below attempts to do this. The map portion returns a collection of True/False if the key is in a particular dictionary. The reduce returns True if all of such elements are true. Lastly, the filter portion filters out all the keys that don't satisfy such conditions.The code should print a collection containing 1 and 3. But the variable key inside the map portion is undefined. Any ideas why key is not passed into the lambda function definition for the map? And any ideas of how to work around this?
filter, reduce, map, and lambda... oh my! This is Python, remember, so don't make this harder than it needs to be. Just using a good ol' for-loop:If you insist on using reduce, it's like this:
I can't reproduce your error. If I run the code you provided (replacing all_keys(Ld) with (k for d in Ld for k in d), and wrapping the call in list so it runs out the filter), I get:Try it online!which, while redundant, accurately describes the overlapping keys in the order they're seen.That said, if you don't need to write it with .keys()/map/filter/reduce, there is a much better way to do this, as long as the exact ordering of the keys, and redundancy of output seen above isn't needed:That's it; set.intersection takes varargs, so you can pass it many things to intersect with as a single operation.
You may consider using a one liner with set and &:If you can't use set and & and must stick with reduce:Finally if you can't even use list comprehensions and need to use filter:


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset.intersection
