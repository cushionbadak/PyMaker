Natural Text
I want to open an existing txt file and search for line of text appearing many times and in different places. Each time search found, insert 2 new rows below it with specified text.I tried this code but got 'AttributeError' on 'Path.write' line ('str' object has no attribute 'write').   I must also allocate to 'Direction' line a number, starting at 0 and increment by 15 until all file is read. So after first instance is found, two lines are inserted into existing txt file like this;0 then changes to 15 on next instance (ie Direction 15), then 30 (ie Direction 30) etc until end of file.EDITED CODE: Simplified coded. Anyone vote me up I'd appreciate
Instead of trying to reopen and insert lines into the original file, you should just write a new file.  So for each line in the old file, write it to the new file, and write the two additional lines if it contains the text in question.EDIT:  To explain more about this second with open statement: Remember earlier that you used with open(Path, 'r+') as f: to READ your file.  The Path part is where the name of the file is stored, the r+ part means that you're opening it for reading, and the "f" is just a variable that essentially says, "Anything we do on f, we do to the file".  Likewise, to start working with a new file, I wrote with open("newfile.txt", 'w') as g:.  The "newfile.txt" is the name of the file.  The "w" means you're opening up this file for writing to it instead of reading from it (if the file doesn't exist, it will create it; if it exists already, it will completely write over it).  Then the "g" is just a variable I picked to refer to this file.  So g.write(line) just writes the next line of text from the first file to the next line of text in the second file.  I suppose you could use "f" again here, since at this point you've already read all of the lines from the old file.  But using a different variable cuts down on any ambiguity of what file you're dealing with, especially if you ever wanted to change this so that you simultaneously have one file still open for reading as you have a second file open for writing.


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
