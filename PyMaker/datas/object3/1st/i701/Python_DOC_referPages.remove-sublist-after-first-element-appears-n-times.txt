Natural Text
I have a long nested list. Each sublist contains 2 elements. What I would like to do is iterate over the full list and remove sublists once I've found the first element more than 3 times. Example:
If the input is sorted by the first element, you could use groupby and islice:OutputThe idea is to group the elements by the first value using groupby, and then fetch the first 3 values, if they exist, using islice.
You can do it like below:Output:
Probably not the shortest answer.The idea is to count occurrences while you're iterating over ls
You can use collections.defaultdict to aggregate by first value in O(n) time. Then use itertools.chain to construct a list of lists.
Ghillas BELHADJ answer is good. But you should consider defaultdict for this task. The idea is taken from Raymond Hettinger who suggested to use defaultdict for grouping and counting tasks
If the list is already sorted, you can use itertools.groupby then just keep the first three items from each group
Here's an option that doesn't use any modules:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/collections.html
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
