Natural Text
I have a list that has 'index' values that I want to compare to a dictionary index. I want the dictionary values to be returned in the same order as the list. example below:The issue is, when I execute the following: I end up with a list:instead of:Is there a way to ensure that the sorting maintains the original list order?I cannot change the dictionary order to match the list because the list may have different combinations of values. 
Yes, there is, just iterate over the list and fetch the values from the dictionary:OutputAs a side note do not use built-in names as variable names. The above list comprehension is equivalent to the following for loop:If you want a more robust version, you could use the get method and provide a default value, like this:Output
Using 
Here's a simple way using operator.itemgetter:The problem with your code is that you are iterating over dict.items(), and thus you will be extracting values following the order in which the values appear in the dictionary. You want to do this the other way around, thus to get values from the dictionary by iterating over the values in the list to get them in the same order.By using itemgetter you are fetching from d all elements in l, so it is a more concise way of doing as I mentioned, which could also be done quite easily using a list comprehension.
a couple options depending on your needs:usage:https://docs.python.org/2/library/collections.html


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/stdtypes.html#dict.get
