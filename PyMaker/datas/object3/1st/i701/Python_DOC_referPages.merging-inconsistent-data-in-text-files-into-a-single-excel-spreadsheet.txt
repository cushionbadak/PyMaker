Natural Text
I have a large number of text files with data; each file can be imported into excel separately. However, while most of the columns are the same between the files, in many files there's a column or two added/missing so when I merge all the text files and put it into excel, many columns of data are shifted. I can make a 'master list' of all the possible data entries, but I'm not exactly sure how to tell excel to put certain types of data in specific columns. For instance, if I have two files that look like: Name Year Food ColorBob 2018 Cake Blue Charlie 2017 Figs Red and LastName Name Age Year Color SizeLily James 17 2021 green 0How would I go about merging them like this in excel: LastName Name Age Year Food Color Sizena Bob na 2018 Cake Blue nana Charlie na 2017 Figs Red naLily James 17 2021 na green 0 
Question: Merging inconsistent data in text files into a single excel spreadsheetThis solution is using the following build-in and moudules:  Set TypesListsCSV File Reading and WritingMapping Types — dictThe core of this solution is to normalize the columns names using a set() object andthe parameter .DictWriter(..., extrasaction='ignore') to handle the inconsistent columns.The output format is CSV, which can be read from MS-Excel.The given data, separated by blankOpen three files an get the headers.Aggregate all columns names, drop double names using a set().Create a DictReader object for the in_* files.  Note: Replace io.StringIO(... with open(<Path to file>)Create a DictWriter object using the normalized column names. The parameter extrasaction='ignore', handle the inconsistent columns.   Note: The column order is not guaranteed. If you need a defined order, sort the list(columns) to your needs before assigning to fieldnames=.Loop all DictReader objects reading all lines  and write it to the target .csv file.Output:Tested with Python: 3.4.2
If you were happy to work with the text files directly in Excel ... this will work but may need some refinement from yourself.I understand it’s probably not what you’re looking for but it provides another option.Open the Visual Basic editor, add a new module and copy the below code and paste in ...... I did some basic testing with the data you provided and it seemed to work.  If for some reason it fails over the data you're using and you can't work it out, let me know and I'll put a fix in.Some points ...The order of the columns depends on the order of your files and which columns appear first.  Of course, that could be enhanced upon but it is what it is for now.It assumes all files in the one folder and all files end in .txtThe separator within each file is assumed to be a TAB.Let me know if that helps.


Answer URL
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
https://docs.python.org/3/library/stdtypes.html#lists
https://docs.python.org/3/library/csv.html#module-csv
https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
