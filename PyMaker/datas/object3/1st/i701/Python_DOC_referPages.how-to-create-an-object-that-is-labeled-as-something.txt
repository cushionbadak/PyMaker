Natural Text
I'm using python and I want to create a class that has many variables, some of them will be normal variables and others will need to be updated to a server. I have a loop that runs over all the object's variables but I don't know how to identify which variables need to be updated. I could have those objects as a class with one variable but I would prefer not to. Is there an acceptable way to achieve this?I want something like Unity has in its C# library where you can define a regular int like public int health = 100; but you can also define it as [SyncVar] public int health =100; and then you can use the variable as you normally would except it has that extra data.The loop that checks the object's variable looks like this:
There is no way to add annotations to attributes like in C#. (Newer versions of python do support type annotations, but those are for, well, type annotations. I would advise against abusing them for a different purpose.)The easiest way label a bunch of attributes as SyncVars is probably to store their names in a class attribute:Another possibility would be to over-engineer the whole thing and implement those attributes as descriptors:


Answer URL
https://docs.python.org/3/library/typing.html
https://docs.python.org/3/howto/descriptor.html
