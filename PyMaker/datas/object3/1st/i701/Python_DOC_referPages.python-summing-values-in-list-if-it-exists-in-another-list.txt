Natural Text
I have a list and a set:I'm looking to correspond the items in b_list and sum their values from a_list so that the output is:What I've tried...But this is giving giving me an incorrect output.
You are on the right track! All you have to do is flip the order of your loops. For every value in b_list, you want to sum up all matching values in a_list, so b_list should be the external loop and a_list the internal. Also note your sum variable should be inside the first loop as it is different for every value in b_list.If you make this change your code works as expected: will give your desired output:EDIT: the above solution is a minimal fix to the code posted in the question, however there are more efficient solutions:Similar to wim's answer, you could use a defaultdictionary, which in this case would be (slightly) more efficient than using the built-in dict class:** credit to coldspeed for the idea for this second solution.
Accumulate numbers using a dict, and then gather the results using a list comprehension: 
Use a dict for grouping:prints:
This returns sums only for items defined in find.Outputs [['2', 1], ['1', 3]]
You can use sum of list or you can directly call sum. Here is a time performance of both approach:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
