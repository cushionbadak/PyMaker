Natural Text
I was fooling around with the recursion limit in Python, which may be dynamically altered using sys.setrecursionlimit(limit). The code below demonstrates that the integer limit exactly corresponds to the maximum depth allowed for recursive function calls.For recursive indexing using [], the same recursion limit seems to apply, but apparently with a factor of 3, meaning that I can index three times deeper than I can call:The above plot is generated by the code below.To test the recursive indexing I append a list l to itself and construct a long literal [-1][-1][-1]... which I then evaluate on l dynamically.Question: Explain this factor of 3.
There’s no recursion in l[-1][-1]…—it compiles to “push l; replace top of stack with its last element; replace…”.  Your RecursionError is from compiling the long string.There is very literally a factor of 3 used to approximate the stack usage of the byte-compiler vs. the interpreter proper.  (Python 2 has no such limit and just crashes on such expressions.)


Answer URL
https://docs.python.org/3/library/sys.html#sys.setrecursionlimit
