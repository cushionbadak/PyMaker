Natural Text
I want to know how to find the string with the biggest number in it and I also want the solution to be simple and easy to understand.I have a file that has these scores in it in this format:I want it so that these scores get printed largest to smallest like this:This is what I have tried:The result was this:
Your first attempt was halfway there, but you seem to have gotten hung up on the sorting. When you called sorted(f) there actually were a few things happening there.sorted asked the object f for something iterable, and f returned a bunch of strings representing each line of your file.txtThe strings were then sorted based on the ascii values of each character in lexicographic order (sorted like a dictionary).The sorted strings were put into a list and returned.The big takeaway here is that each line was sorted based on the text not based on the numerical value buried somewhere in the middle.If you want to sort using the built-in sorted function (ie: you don't want to write your own sorting algorithm), you'll need to either re-structure your data so that the default sorting method gives you the order you want, or you'll need to tell the sorted function how to slightly change its default behavior. The latter involves specifying the key parameter passed to sorted which other answers have covered.In order to get sorted to do what we want out of the gate we need to give it the value we want to sort first in each line. We can do this by extracting the number from each line and putting it first in a list, then getting rid of it again after we've sorted the list of strings.
Sorted  is what you want, add a key to get what you want.Replace the list with you file data.Output
I think this is a beginner friendly solution:EDIT: Add exception handling, in case you file.txt differs from my example file.
Use sorted:


Answer URL
https://docs.python.org/3/howto/sorting.html
