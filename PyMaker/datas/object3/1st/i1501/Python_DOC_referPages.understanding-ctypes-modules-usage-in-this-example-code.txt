Natural Text
Context:Some code I found which implements a XOR linked list. In XOR linked list, instead of each node having a next pointer, it has a both attribute which is the XOR of prev and next node.Questions:Don't understand the need of _get_obj() function and what it is tryingto do here?How is self.__nodes = [] useful? And how it implementsgarbage collection here?I have no idea what the following code is doing:
I can answer most of the sub-questions within your question.the _get_obj() function is the inverse Python's own id() function (with the CPython interpreter anyway).There are other ways to do it. See for example the question Is it possible to dereference variable id's?.& 3. The self.__nodes.append(node) adds the Node instance to a private list because adding it to the XOR linked-list doesn't create a reference to it as would likely happen in a more common normal implementation (the XOR trick eliminates the need for them). Without this, the Python garbage-collector might delete the Node instance while it was still part of the linked-list.


Answer URL
https://docs.python.org/3/library/functions.html#id
