Natural Text
I managed to reproduce this on both Python 3.4 and 3.7.Consider:Clearly one would expect b.__hash__ to be defined here, since it is defined under Comparable which B is a subclass of.Lo and behold, it is defined, but evaluates to None. What gives?The same behavior is reproduced if implementing __init__ as super().__init__() in Comparable and A.
Found it in the docs:A class that overrides __eq__() and does not define __hash__() will have its __hash__() implicitly set to None. andIf a class that overrides __eq__() needs to retain the implementation of __hash__() from a parent class, the interpreter must be told this explicitly by setting __hash__ = <ParentClass>.__hash__From ticket 1549:This was done intentionally -- if you define a comparison without  defining a hash, the default hash will not match your comparison, and  your objects will misbehave when used as dictionary keys.(Guido van Rossum)


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__hash__
