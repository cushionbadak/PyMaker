Natural Text
The following code outputs as follows:How can it be modified to run like this:I would like it to run so that both instances of the for loop begin executing at the same time. As each instance executes, they will encounter the first() function at the same time, then the second() function at the same time, thus printing in the order mentioned above.Code:
Looking at the desired output, it seems that the goal is to leave the individual iteration as it is - i.e. run first and second sequentially - but execute both loop iterations in parallel.Assuming you only want to modify main(), it could be achieved like this:Instead of iterating in sequence, the above creates a coroutine for each iteration task, and uses asyncio.gather to execute all the iterations in parallel.Note that simply creating a coroutine doesn't start executing it, so a large number of coros won't block the event loop.
With the aysncio library you can use aysncio.gather()This can come in handy if you are also sending HTTP requests in parallel:
To run the two functions simultaneously you can use gather. However, the results will be provided to you in the order you provide them. So for example if you do Then you will get [the result of first(), the result of second()] back. If you want to do something whenever each one returns then you should use Tasks explicitly and add callbacks.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.gather
https://docs.python.org/3/library/asyncio-task.html#asyncio.gather
https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.add_done_callback
