Natural Text
I am trying to filter a list where there are words line by line, by the length of the word(between 4 and 8 characters). So that if the input file has:hellocommunicationbedogtestThe output file is:hellotestSo I have this code: But the output file keeps all the words.By the way is there any more efficient way to do this?
Use the with-statement to automatically close files (even with exceptions are encountered).& in Python is really for bit twiddling only, use and.You don't actually need and, because comparisons can be chained. (len(word)>=4 and len(word)<=8 is equivalent to 4 <= len(word) <= 8).In your question you use .readlines() and here I use for line in fin:.  Either way the resulting strings will end in newline characters, so your length measurements will be off by one.  I correct for this by stripping the line before taking the length (len(line.strip())).  (Your code as written should have omitted 'be', but kept 'dog', because it's really 'dog\n' which has a length of 4).You said your code kept all of the words.  To my eye your code should have worked to omit 'communication\n' and 'be\n'.  I could imagine that 'be\n' might be kept if there were extra spaces after it in the file ('be  \n' has a length of 5 because of the two spaces).  But there seems to be no logical way that 'communication\n' would be kept in your output file.  You may want to double check that it really was there.  
There are more than one choice to do this.With filter() built-in functionCheck the docs here.Let's suppose you have  list of strings called data, then:Will return: You can change the lambda function to filter different conditions. Filter will "catch" every element that returns True.With list-comprehensionThis is probably the shortest way to achieve this. Just need to do:
List comprehension does let you choose which elements you want to construct your list from. Here's an example implementation:Output:
Is this what you're looking for? Here I use file context managers with the with reserved word, and I use and instead of & as noted in the comments.It's a bit tough to know if this will format exactly to your intentions in the outfile.
Your code should work if you replace & for and, i.e:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
