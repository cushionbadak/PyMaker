Natural Text
I donâ€™t understand how to do assignment checking to a variable, as it is done in Kivy.I know how this is done for class properties, and it looks like thisIn Kivy can do:I takeRenamed the question because it did not correspond to what was happening
I assume you want to do some checks on assignments, like type checking in the kivy case. Your example looks to me very unidiomatic, I'd write it the following way:How does it work? Actually it's a bit complicated, but here is a good ressource. property returns a descriptor which basically means that foo.var = x is translated to foo.var.__set__(x) (which then calls something "equivalent" to Foo.var.setter_function(foo, x)). It just says "instead of storing an assigned value, call this function".How is the kivy case different? Assume we have the following class:The behavior is very similar to the python code before, but the setter and getter methods are defined by kivy and not here in the class. But if you assign a value to a Bar instance bar.var = x a setter is called bar.var.__set__(x). The setter does not only check for types but also emits events if the value changed.You can also create properties with getters and setters already provided by implementing a descriptor. You need to implement __set__ and __get__:(The documentation speaks from get, set, delete and set_name, but I think in the common case one can get away with only implementing set and get.)
If you want to check the value, you simply add check code to your setter. For example, if you want var to be limited to int or float, you can modify your setter as:This code is a slight modification of Kivy check code.


Answer URL
https://docs.python.org/3/reference/datamodel.html#implementing-descriptors
https://docs.python.org/3/reference/datamodel.html#implementing-descriptors
