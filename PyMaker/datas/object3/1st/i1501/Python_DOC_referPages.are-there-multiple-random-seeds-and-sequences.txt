Natural Text
I want to make a game in micropython an implementation of python 3.4.  I want my monsters to be controlled by a random number generator. I was considering passing the current grid reference as a seed and todays date so the monster would always appear today. Play the game tomorrow and there will be new monsters.The problem is i need to use random.randint and random.randchoice for dice and other truely random events.If i were doing this in c I'd use erand48 from <stdlib.h> and keep and maintain multiple seeds.What are my solutions in python?I probably need a chaotic function to control monsters. Years ago i were given one by a maths professor, but it was simple and due to floating point rounding it tended to 0.0
You can use the random module of python to create random objects for each independent component. Example:These individual random objects each have their own independent seeds and can be called just like the regular random class:
The docs of random module mentionThe functions supplied by this module are actually bound methods of a hidden instance of the random.Random class. You can instantiate your own instances of Random to get generators that donâ€™t share state.
It would appear that there is only one random seed.You use getstate and setstate to save and restore previous random positions.produces the following output


Answer URL
https://docs.python.org/3/library/random.html
