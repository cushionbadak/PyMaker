Natural Text
I have a script that processes files using multiprocessing. Here's a snippet:Which runs fine, except that I had to do some other actions before I can call f_process_file, which has other arguments. Here's the snippet:I can't manage getting this executed using multiprocessing. Do you have any advise? 
I found this question and managed to work my question out with apply_async. Here's the snippet:
The problem here is that your workload is not ideally suited to multiprocessing.Pool. You are doing a nested iteration and as a result of that, you could have multiple workloads being accessed incrementally. There are two possible methods to solving your problem. The first is to do your single-threaded computation first and then use Pool. To do this, first construct an object, I'll call it ProcessingArgs:Then you can either modify f_process_file to take in a ProcessArgs or you can add a wrapper method that decomposes the class and then calls f_process_file. Either way, your for-loop now looks like this:The other option is to use the asyncio library:In this case you would need to prepend the async modifier to def f_process_file so asyncio knows it's an asynchronous function.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio-example-gather
