Natural Text
I need to be able to take a string (a sentence with nothing but letters and spaces) and split it into a dictionary where every term either has the label "spaces" (where i = " ") or "integers (where i = any number). So far i've managed this:I am aware this only gives me 2 items in my dictionary, but just to clarity i want an entry for every character, independantly assigned to the same label (my knowledge of dictionaries and python in general is not very good sorry)I have tried to do this using a list instead of a string but struggled to get around an issue later in my program where i try to reassign the list to another list (I always got the error TypeError: list indices must be integers or slices, not str)Thanks for the help, really
This seems to be the beginning to a ceasar cipher -- a beginners programming task. Use a defaultdict to collect all characters into a list. Use a lookup dict instead of .index() to get the "number" that belongs to each character:Output:shiftInt holds different things: Indexes into the string 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' for the key integers and the position in the original string for the key spaces.If it's going to be a ceasar cipher - look up related posts, f.e.:  Python Caesar Cipher


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
