Natural Text
How do you dynamically set variables as global in Python 3 functions?Something like this:How would I get the global variable to set whatever pre-existing variable is passed into the function? Such that:Would preform the operation on the variable foo globally rather than creating a new global variable called i?
If I got it right, your problem is: I've bound a name to some object at module level; now I want to write a function that changes the binding of that global name to another object passed as an argument to the function.In Python global names can be referenced inside a function (provided that you don't bind another object to the same name), but to change their binding you must first declare those names as global. The reason is simple: by default all names bound inside a function have function scope.When you call func(33), GLOBAL_NAME will be bound to the object 33. ANOTHER_GLOBAL_NAME is just a reference to a global name; since that name is not bound inside the function, Python look for that name in the global scope.For further insights on Python scope enclosing you can refer to the Python documentation on the global statement, to PEP-0227 and to PEP-3104.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-global-statement
