Natural Text
I'm having trouble getting my code to do this substitution cipher properly, my prompt is as follows: decrypt a cipher file assuming letter frequency correspondence between the cipher text and accepted English language frequency; i.e. if the most common letter in the cypher text is 'p' assume it is 'e' in plaintext; if the second most common letter in the cypher text is 'o' assume it is 't' in plaintext; etc.
Seems there's a potential for mix-up when you do the replace sequentially: suppose 'p' is the most common character in the cypher, and you replace it with 'e'. Later you're going to replace 'e' for something else, which will again scramble your result.I would try something like (after you've got alpha sorted as you like):Which creates a mapping from the cypher text to English text and applies it to the text directly.
You could also make the list alpha on the fly:Then sort it in descending order:Then extract letters and make a dictionary mapping ciphered letters to deciphered:Finally replace all letters using a string translation table:Output: eat tee


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
