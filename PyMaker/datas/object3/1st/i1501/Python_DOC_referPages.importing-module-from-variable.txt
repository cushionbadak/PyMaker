Natural Text
I have different config files which are basically python files that define variables and I want to import them in my main program.Usually I will have a "config_file1.py" and do something like:Now I want to be able to select which config_file I want to use, so I want to pass a parameter when calling my program that tells which config file to use. Something like:However this looks for a file named "config_filename". I want instead to import the file referenced by the value of config_filenameEDIT:Basically my program will run a set of experiments, and those experiments need a set of parameters to run.Eg:So I can run my program loading those variables into memory.However another config file (config2.py) might have another set of parameters, so I want to be able to select which experiment I want to run by loading the desired config file.
If you really want to do this, you can use the importlib module:Then you can use the var like this
This is in response to your details and not the question.If you want to load variables such as num_iterations = 100, initial_value1 = 10, initial_value2 = 20 from a file, then I'd really recommend some sort of config instead of abusing imports for global variables.Json would be the easiest way, where you'd load the file and you'd straight up get a dict:Alternatively you could use ConfigParser, which looks nicer, but I've found it to be quite prone to breaking.
You can do like this:
I wouldn't recommend such a risky approach.  You relinquish all controls over at the point of the sys.argv and your script can fail if any one of the named attribute doesn't exist within your module.Instead I would suggest explicitly controlling what are the supported modules being passed in:
Instead of using import statement, you can use __import__ function, like this:Definition:Reference:https://docs.python.org/3/library/importlib.html#importlib.import


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.__import__
