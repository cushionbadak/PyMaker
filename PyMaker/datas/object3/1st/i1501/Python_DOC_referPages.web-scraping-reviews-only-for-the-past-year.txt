Natural Text
I'm trying to scrape reviews which are only year old from tripadvisor for a specific airline Spicejet.Link : https://www.tripadvisor.com/Airline_Review-d8728949-Reviews-or60-SpiceJet#REVIEWSBut there is an inconsistency in storing the dates of the reviews as some are in span class value : <span class="ratingDate"> Reviewed October 22, 2018</span>And some are in the title:<span class="ratingDate relativeDate" title="October 23, 2018"> Reviewed 5 weeks ago</span>I want to extract dates and set a condition that extract reviews which are only a year old. I'm facing difficulty in handling two date formats so how should i compare it.Code : date = items.find(class_="ratingDate").get("title") date = dt.strptime(date, "%B %d, %Y") if (date > dt.strptime(('November 26 2017'),"%B %d %Y")):      date = items.find('span', class_='ratingDate')['title']Output : “its manageable”  ('October 23, 2018',)
You can do a lot of work, or you can track down where the data's coming from and fuzz the source a little until it spits out something more likeable. Here it looks like the data is being loaded from:https://www.tripadvisor.com/AirlineTipswhich, as you've noted, is ugly as hell.  The exact call it made for me was:https://www.tripadvisor.com/AirlineTips?d=8728949&inline=true Which spits out:  Mmm, hideous.  Let's try changing inline=false on that request...https://www.tripadvisor.com/AirlineTips?d=8728949&inline=falsegives us  Oh, sexy barnacles, Batman! There it is. Now we don't have to fight with dates in Python or whatever.  tl;drDon't scrape the soup, scrape the source. There's an API under any dynamic content.
From what I understand, you don't have to compare both date values since they will both mean the same date. So for each review, check if either the span class date or the title date exists. If both exists, just check one. The checking can be done with strptime. For the title date, you will need timedelta.
You can leverage the way CSS matches on class to pull be back all review dates with class selector .ratingDate. It will match on .ratingDate and .ratingDate.relativeDate.  You will find that the len of the matched element classes will be 2 for where the date is in the title attribute of the element ie. elements with class ratingDate relativeDate.You can grab the review text by class selector as well. Zip and turn to a list.Below is outline without date filtering.  Filter on dates either earlier than this (but then you will need an index to link across lists to match up date and review text) or from here. The dates are all in consistent format.


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
https://docs.python.org/3/library/datetime.html#timedelta-objects
