Natural Text
I have a numpy array of numbers. Below is an example:I want to know if each of the numbers is closer to 0 or 1. Is there a function in Python that could do it or do I have to do it manually?
numpy.rint is a ufunc that will round the elements of an array to the nearest integer.What if the numbers don't have to be between 0 and 1?In that case, I'd use numpy.where.
A straightforward way:Or you can use np:Note that >= 0.5 can be changed to > 0.5, however you choose to treat it.
Here is one simple way to do this:(Change np.float to np.int if you want integers.)
You could use numpy.where:OutputNote that this will return 1 for numbers above 1 (for instance 2).
You could use abs() to measure distances between your number and 0 and 1 and check which on is shorter.Output:
Here's a simple generalization for any arbitrary numbers a and b, instead of just 0 and 1:This'll return two lists, one with the indices of the numbers closer to a, and one with the indices of the numbers closer to b.Testing it out:This outputs:
Alternatively, you can use a ternary operator.
From the Python built-in function docs round(number[, ndigits]):Return the floating point value number rounded to ndigits digits after the decimal point. If ndigits is omitted, it defaults to zero. The result is a floating point number. Values are rounded to the closest multiple of 10 to the power minus ndigits; if two multiples are equally close, rounding is done away from 0 (so, for example, round(0.5) is 1.0 and round(-0.5) is -1.0).For numpy arrays in particular, you can use the numpy.round_ function.

You can use round:    


Answer URL
https://docs.python.org/3/library/functions.html#abs
