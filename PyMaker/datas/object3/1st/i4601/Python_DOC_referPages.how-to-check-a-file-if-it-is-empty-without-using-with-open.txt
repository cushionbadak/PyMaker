Natural Text
This question already has an answer here:How to check file size in python?                    8 answers                I am trying to read text files in a directory. However before doing any action I want to make sure it is not empty. If the text file is empty I need to create that empty file again (in the current directory that is), if not I need to perform some calculations with the each line of the text file and create corresponding file with same name. In short, I need to create as many files as the referred directory (path_in) has.So to check if the text file is empty I thought I should open it first. I opened it with open and  its handle is filename_handle. I checked if it is empty, but here it raises TypeError: argument should be string, bytes or integer, not _io.TextIOWrapper. I know why this error occured (because filename_handle is object), but I don't know the other way of how I can check if the file is empty.Can someone help me how to fix this.Here is my code
You can use the os.path.getsize() method to get the size in bytes of the file you pass as argument for it. If the file is empty, it's size will be 0 bytes. So you can use the code below to check it for you:
os.stat takes the file name or the integer file descriptor. It doesn't accept arbitrary file objects.So you need to either do:which extracts the file descriptor from the open file, or:which stats the file by name, with needing an open file handle. More properly, you should really be using os.path.join to build paths, so os.stat(os.path.join(path_in, filename)).st_size would be the cleaner approach when doing this by name.


Answer URL
https://docs.python.org/3/library/os.html#os.stat
