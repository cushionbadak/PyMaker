Natural Text
I have a dictionary with keys that look like this:My goal is to go through a file and replace occurrences of these keys with values that I've read in from another file. For instance:would be replaced with something like:However, I'm having issues with doing this, as the keys can be overlapping. I wrote this method using some code that I looked up previously for another assignment:However, this is the first time I've had overlapping keys in my dictionary, so I'm having a tough time tweaking this method to work properly. Currently, this is what my output looks like:Any ideas on a better way to approach this problem?
You could use re.sub() to find each << key >> and then replace it with the corresponding value from the dictionary.Output:Explanation:<<(.*?)>>:re.sub() will take a pattern, a replacement value, and a string, and will replace any pattern matches in the string, with the replacement value.  The function:Will lookup the match in the dictionary, and return the value for the key.
What you need is a customizable template engine. Luckily, Python is shipped with string.Template.Output: foo_content 123456 foobar_stufftail


Answer URL
https://docs.python.org/3/library/string.html#template-strings
https://docs.python.org/3/library/re.html
