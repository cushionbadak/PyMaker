Natural Text
Is there a an operation similar to PyInt_Check/PyLong_Check that takes into account whether or not the type has an __int__ method?The closest workaround I have been able to find so far isThe problem here is that I am effectively doing something likeHowever, this being C, I would prefer to do something likeI would expect such a check to already exist because PyInt_AsLong and PyLong_AsLongAndOverflow already perform it. I just want to be able to know if an object might be an integer without getting the integer value at all.That being said, I can see the point of actually getting the value, since hasattr(type(obj), '__int__') does not actually guarantee that the object can be reasonably used as an integer: e.g., if the attribute is not a function or just raises an error. In that case "no" may be a valid answer.
The closest thing to a function for that is PyNumber_Long, or PyNumber_Int on Python 2. Both of these functions actually perform the conversion. They will also consider methods like __trunc__, and convert strings to ints, just like calling int from Python-level code.If you want to check for the presence of an __int__ conversion method, you can look for the corresponding slot directly:


Answer URL
https://docs.python.org/3/c-api/number.html#c.PyNumber_Long
https://docs.python.org/3/c-api/number.html#c.PyIndex_Check
