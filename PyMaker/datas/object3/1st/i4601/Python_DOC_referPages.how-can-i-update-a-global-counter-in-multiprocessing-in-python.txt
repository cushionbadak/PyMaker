Natural Text
I have a use case where I am running two while loops simultaneously.Both the loops reference a counter variable which is global. One loop changes the counter variable and the other loop performs certain function based on the current value of the counter. This thing works great if I use threading module. But due to certain performance degradation, I am forced to use multiprocessing.The problems begins with that. The global variable remains unchanged by either of the 2 processes. I know that the two processes do not have shared memory space like threads and thus their copy of the counter value is different. So, my question is, How can I pass that global variable between the two function like I was able to do using threads. Below is the code sample to illustrate my problem -As you can see, I want the process-2 to update the global variable temp every 5 seconds. And, the process-1 should print the current value of the global variable temp.I am aware that passing global variables is a very bad code design. So, I am writing the value of the temp variable in a file in process-2 and continuously reading it in process-1. This is even worse idea because of so many file closing/opening operations. I want to replicate the functionality above, without reading/writing into files or using global variable (which doesn't work). Please help.Thank you.
Two separate processes don't share the same globals hence the result you get. I think this should help finding a way to share variables between processes https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes


Answer URL
https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes
