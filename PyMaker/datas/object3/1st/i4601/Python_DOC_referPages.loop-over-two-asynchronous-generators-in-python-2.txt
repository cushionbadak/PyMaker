Natural Text
I have two separate generators (in reality they are fed by two separate zero-mq subscribers). I would like to consume them from the same event loop.Something conceptually like this:Note that this is in Python 2.7.Right now I'm obviously getting 1,1,1,1...I could somehow nest the second iterator into the first one (not looping, but rather checking if there is something to read), but that, at best, would constrain the rate of  the inner consumer to the rate of the outer consumer, which is undesirable.Note that zip() is not a good option, for the same reason as mentioned above, in addition to forcing the two generators to have the same rate, which they don't.Any suggestions on how to achieve this?Based on suggestions in comments, something like this might work:Which gets the job done.Not as direct or elegant as I'd like, but definitely not terrible.
Could all generators simply push their products in one joint queue, and the main thread just fetch whatever in queue?The output would be like 2 1 1 2 1 2 1 2 1 1 2 1You may wrap your 'yielding' functions into 'putting' functions. If you do care about the source of products, add tag while putting object in the queue.


Answer URL
https://docs.python.org/3/library/asyncio-task.html
