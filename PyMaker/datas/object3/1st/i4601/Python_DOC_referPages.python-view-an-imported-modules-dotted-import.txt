Natural Text
I want to get all the modules imported from an arbitrary module m.When m imports a module in the following way:or:(where a and b are packages, and c is a module)The result of dir(m) would contain c (among other things).However, when I use:The result of dir(m) would contain a, and not c.I also tried iterating over sys._getframe(1).f_locals.items() after importing m, but got the same result.How can I, having the object of m that imports c that way, know that it actually imported c?
You can use the ast module to parse the module's source code and extract imports:Keep in mind that this only works if the module's source is available as plain python code.As an example, consider this module:The output for this module would beNotes:This code also catches imports in functions, not just imports in the global scope.If the code performs an import like from module import submodule, "module.submodule" will appear in the output. However, if the code performs an import like from module import non_module, only "module" will appear in the output.


Answer URL
https://docs.python.org/3/library/ast.html
