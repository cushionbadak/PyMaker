Natural Text
Let's say I have an excel file that has columns like:And another excel file that reads:What I want to do is make this into a new excel sheet or just a matrix that reads something like:So that in the end I get a matrix that has the names, and the following columns list out the food options and the values that the names are assigned (1 or 0) are for whether or not the item was bought for that day. Notice that in the matrix that I described above only values for the first date was found even though each person had a different initial date. More columns would describe the other dates.Please help.
In terms of reading your excel sheets, you can export them as CSV files and use Python's CSV Parser to read your values from the sheet. Personally, I would use a defaultdict from the collections module. This allows you to set default values for your dictionary keys. You can create a default dict with a default value of 0 for every unique name that you have, and as they buy new products, increase their values by 1. To create the output, you iterate through each customer, and then you iterate through the list of products that they can buy -- since it is a defaultdict with 0 as the default value, you will not have issues of keys not matching.  Rough example code:
Assuming you have the first spreadsheet in a data frame named df1 and the second in df2, the correct way to do this would be:Explanation: first use pd.concat to combine the two tables vertically. Then, use pd.get_dummies to one-hot encode the values in the "bought" columns -- this will add a column for each unique food and drink found, and a 1 when that row contains the value (so only one 1 per row). Then groupby "Name" to condense down into names, and finally take the sum for each person to aggregate the total items bought into one row for each person.To read excel files into python, use pd.read_excel
You can use pd.crosstab to do this. Ill assume you loaded your data into pandas and named your dataframe's df1 and df2. First rename both columns Food bought and Drink bought to a similar name (I chose Item) to easily concatenate valuesThen compute the cross tabulation Which will outputMoving on step further, you can compute the cross tabulation grouped by the date. To do this in pandas we need to convert Day of Shopping into datetime objects Now just add this information to pd.crosstab


Answer URL
https://docs.python.org/3/library/csv.html
