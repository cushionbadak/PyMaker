Natural Text
I want to log data, not just string in a python.I would like to avoid implementing this myself, since I think this was done before.I read the Logging HOWTO, but it does not cover this topicSame here: Logging CookbookI want to support these primitive data types:stringsintegersdatetimelistsdictionariesAfter logging I want to parse the log back to data again ...
The logging module already supports this, as explained in the documentation you already linked to:Output:If you need mixed strings and objects, use the formatting abilities (using % formatting by default):Note that the logging module is clever. If you do logging.debug("%s" % , obj), the __str__ method of obj will always be called, but if you do either logging.debug(obj) or logging.debug("%s", obj), it will only be called if the logging level is set to show debugging output. This saves some time, especially if this method is expensive.
If you don't want to use any explicit library, you may simply type-cast any object to str and concatenate it's value to your log string. For example:Personally I use str.format method for such tasks. It internall makes a call to __str__ function while filling the values.Firstly create a dict with the keys you want to log. For example:Now use unpacked version of the above dict with the string.format function on your string as:


Answer URL
https://docs.python.org/3/howto/logging.html#using-arbitrary-objects-as-messages
https://docs.python.org/3/howto/logging.html#using-arbitrary-objects-as-messages
