Natural Text
I'm attempting to walk through a directory containing over 650+ directories where each directory has 3 subdirectories, which then contain .png files. So that I have something that resembles:What I'm attempting to do is the extract the path from the .png in subfolder_01 and subfolder_03. Both those folders contain a single .png image and the file in subfolder_03 has the same name as the file in subfolder_01 with the addition of the prefix cm_.I would like to store the paths in a dictionary where the key is the image  name (without the extension) and the value is a tuple where the first entry is the path of the image found in  subfolder_01 and the second entry would be the path to the image found in subfolder_03, so that I have something like:to further complicate matters the image files are a 64 length hash. I have some code below, but I ran into a problem because it seems to go to subfolder_03 and pick out that image before going to subfolder_01. I've attempted to reverse the order of my if statement which resolves the problem but I'm hoping to find a solution that is a little more general, that is doesn't really depend on the order of the if statement.For completeness the code:
I think what you want to do is get an entry like this by the time you're done:â€¦ no matter which order you visit the two files.This will be easier if you're willing to have a list of the two files instead of a tuple. Then you can do something like:The setdefault will make sure that whichever file you find earlier will create a [None, None] before replacing the first or second element, but whichever one you find later will operate on the already-created pair.It sounds like you want to wrap up that setdefault so you don't have to repeat yourself. You could refactor it into a function:Or you could store the values in variables:(This relies on the fact that True and False are the same as 1 and 0. If that seems mysterious to you, change it to cm = 1 if filename.startswith('cm_') else 0.)Or you could combine the two.


Answer URL
https://docs.python.org/3/library/os.html#os.walk
