Natural Text
Given a path such as "mydir/myfile.txt", how do I find the file's absolute path relative to the current working directory in Python? E.g. on Windows, I might end up with:
Also works if it is already an absolute path:
You could use the new Python 3.4 library pathlib. (You can also get it for Python 2.6 or 2.7 using pip install pathlib.) The authors wrote: "The aim of this library is to provide a simple hierarchy of classes to handle filesystem paths and the common operations users do over them."To get an absolute path in Windows:Or on UNIX:Docs are here: https://docs.python.org/3/library/pathlib.html

Better still, install the path.py module, it wraps all the os.path functions and other related functions into methods on an object that can be used wherever strings are used:
Today you can also use the unipath package which was based on path.py: http://sluggo.scrapping.cc/python/unipath/I would recommend using this package as it offers a clean interface to common os.path utilities.
Update for Python 3.4+ pathlib that actually answers the question:If you only need a temporary string, keep in mind that you can use Path objects with all the relevant functions in os.path, including of course abspath:
I prefer to use globhere is how to list all file types in your current folder:here is how to list all (for example) .txt files in your current folder:here is how to list all file types in a chose directory:hope this helped you
Note that expanduser is necessary (on Unix) in case the given expression for the file (or directory) name and location may contain a leading ~/(the tilde refers to the user's home directory), and expandvars takes care of any other environment variables (like $HOME).
Module os provides a way to find abs path.BUT most of the paths in Linux start with ~ (tilde), which doesn't give a satisfactory result.so you can use srblib for that.install it using python3 -m pip install srblibhttps://pypi.org/project/srblib/
if you are on a mac this will give you a full path:will show the following path:
In case someone is using python and linux and looking for full path to file:
This always gets the right filename of the current script, even when it is called from within another script. It is especially useful when using subprocess.from there, you can get the script's full path with:It also makes easier to navigate folders by just appending /.. as many times as you want to go 'up' in the directories' hierarchy. To get the cwd:For the parent path:By combining "/.." with other filenames, you can access any file in the system.



Answer URL
https://docs.python.org/3/library/pathlib.html
https://docs.python.org/3/library/pathlib.html
https://docs.python.org/3/library/os.path.html
https://docs.python.org/3/library/os.path.html#os.path.abspath
