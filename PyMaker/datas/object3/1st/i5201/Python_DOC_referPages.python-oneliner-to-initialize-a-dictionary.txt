Natural Text
This question already has an answer here:Create a dictionary with list comprehension in Python                    11 answers                I am looking for a short and compact one-liner to initialize a dictionary from a list in Python. Is there an equivalent to the two constructs below?.I've see the use of Counter for the second case, but it is a very narrow case, and I'm looking for a generic syntax.
Summary of three pythonic solutions to instantiating dictionaries. Having a "one-line" solution should never be the most important consideration.1. Keys and default value defined in advance.Instead of setting a default value for every key, use dict.fromkeys. Also, do not name variables the same as classes, e.g. use lst instead.2. Default value defined in advance, but not keys.Alternatively, if you will be adding more keys in the future, consider using collections.defaultdict, which is a subclass of dict:3. Keys and values related by a function.For building a dictionary where keys and values are linked via a function, use a dictionary comprehension, as described in detail by @OmerB, e.g.
Well, dictionary comprehension is one-line, is that what you mean?Also - I'm suspecting that using the element's hash as the key is not what you're looking for:If your elements are immutable (e.g. strings), you could use the elements themselves as keys. If they're not immutable, you can use the element's location in the list.For the latter, to make sure you insert each value only once to the dict, clear duplicates from the list before iterating over it:
A simple one liner statement for case-01 using dict constructor, map and zip:For second situation:
Those two constructs can be built using dictionary comprehensions like:Code:Test Code:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
