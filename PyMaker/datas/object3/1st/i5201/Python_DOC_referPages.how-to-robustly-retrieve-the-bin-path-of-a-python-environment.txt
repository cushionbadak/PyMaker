Natural Text
I already figured out how one can retrieve the include and site-package paths of a python environment. For instance the following is one of multiple possibilities:However, I was not able to find a robust method to retrieve the bin folder of a python environment, that is, the folder where python itself and tools like pip, pyinstaller, easy_install, etc., typically reside. Does anyone know how I can get this path from within python?Some may want to suggest binpath = os.path.dirname(sys.executable). On Mac however, this does not work if python was installed as a Framework (binpath would point at: /Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS)What could I use instead that works cross-platform?
An installer could literally put the binaries anywhere on the filesystem (given permission).  But since the majority of packages are presumably installed with pip these days, a cross-platform approach will be to use where pip itself uses when installing distributions:Note that pip is included with current versions of Python, so this should work everywhere.  One other thing to mention is that distributions installed in the user site will put their console scripts etc into the user site instead, however you have an attribute for finding the user bin too:edit: Today I've found a stdlib way to get this info with sysconfig module. Works on 2.7 and 3.3+.


Answer URL
https://docs.python.org/3/library/sysconfig.html
