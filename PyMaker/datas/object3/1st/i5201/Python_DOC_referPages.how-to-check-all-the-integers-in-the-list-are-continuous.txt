Natural Text
I am trying to write a program which will print "YES" if all the numbers in the list are continuous and should return "NO" if the numbers are not continuous. By continuous I mean every number in the list should be greater than one from the previous element.For example:It should print "YES" for inputs: [3, 4, 5], [7, 8, 9], [1, 2, 3], [0, 1, 2, 3, 4, 5].. etcIt should print "NO" for inputs: [9, 1, 0], [3, 2, 4], [5, 5], [9, 8, 2, 3, 7].. etcI used enumerate for this purpose.Here's my code:The code works fine but i find it redundant.Is there a better way to do it using enumerate or without using enumerate?
You don't need enumerate in order to check the elements of your lists are continuous. You can simply achieve it via creating a function using zip and all as:Same result can be achieved by any with zip as (similar to all but with not and != for comparision):Above functions will return True/False depending upon whether your list is continuous or not.Sample run:In order to print "YES"/"NO", you may make a simple if..elsecheck outside the function call as:
I don't see why you need enumerate at all, given that you never use e. Try using the for...else block:You can also zip the list with its copy shifted by one (but that, well, makes a copy):Or make this into a function:


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/functions.html#any
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#all
