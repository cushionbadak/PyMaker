Natural Text
I don't know what to call this but I've done it in TCL and Elixir. It's when you substitute a variable to make the code simpler. That's a terrible way of explaining it. The example will make it clear:Here's regular code:I'd like to turn that into something like this:Where it interprets the value in the variable item as the name of a variable. like I said, I've done stuff like this in other languages but I don't know what it's called and I don't know how to do it in python.Can you help me? What is this ability/style called? Also, how do you do it in Python?PS. Here's a trivial example from TCLSee how [set $foo] essentially told the interpreter to interpret $foo's value as a variable name which was the variable bar then the command puts took bar as a variable and printed out its value which was the string baz You can even do this kind of thing with commands in Tcl
You can use getattr:getattr can also be used like getattr(object, attrname), and it behaves in the same way.However, having to do this is usually bad practice. You should probably be using a dictionary instead.An example with a dictionary:See also: thisIf you want to get variables from the global or local scopes, you can use:There is also a very general way (also very ugly and insecure):Please never use this.
You can try this approach:Updated my answer based on internet_user's comment.  Now it should return both instance and class attributes.Edit: Okay I don't know how to do the superclass attributes (I mean I can probably guess it's super().__dict__), but at the end of the day internet_user's answer is a better version.  I'll leave this answer here for future viewers to see the inefficient approach for comparison.


Answer URL
https://docs.python.org/3/library/stdtypes.html#object.__dict__
