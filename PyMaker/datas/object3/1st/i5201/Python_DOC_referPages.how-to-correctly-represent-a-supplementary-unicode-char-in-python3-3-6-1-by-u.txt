Natural Text
Recently I'm learing python and has encountered a problem with unicode escape literal in python 3.It seems that like Java, the \u escape is interpreted as UTF-16 code point which Java uses, but here comes the problem:For example, if I try to put a 3 bytes utf-8 char like "♬" (https://unicode-table.com/en/266C/) or even supplementary unicode char like "𠜎" (https://unicode-table.com/en/2070E/) by the format of \uXXXX or \UXXXXXXXX in a normal string as followed:So, I could see that python "doesn't support supplementary escape literal", and its behavior is also weird.Well, I already know that the correct way to decode and encode such characters:But still don't get how to do it right using \u & \U escape literal. Hopefully someone could point it out what I'm doing wrong and how it differs from Java's way, thanks! By the way, my environment is PyCharm win, python 3.6.1, source code is encoded as UTF-8
Python 3.6.3:


Answer URL
https://docs.python.org/3/howto/unicode.html
