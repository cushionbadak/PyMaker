Natural Text
While creating a dictionary from the list, the keys of the dictionary neglects the identical items in the List and stores the last item as the key.For example in this:Prints this As far as I understand it does so because the keys can't be identical, then why doesn't it group the values of identical keys in to one list. Like this Is there any way I could do this in pure Python?
You can't use a dictionary comprehension for this, that can't know about preceding keys already being present.You'll have to use a straight-up loop. Add all values to a list, not just the repeating ones. Don't mix structures here, that'll only create more headaches later on. If you don't you'll have to detect if you have a nested list or a flat list with one fruit and price later on.You can use a regular dictionary:The dict.setdefault() call adds an empty list to the dictionary if the key (the first argument) is missing. It then returns the value for the given key (which could be an already existing list or the new empty list). The line then call list.append() to add the fruit and price.Or you can use a collections.defaultdict() object to create the empty lists when a key is missing:Code using a defaultdict is a little more concise, but the downside is that this object will now continue to produce empty lists for missing keys, even when you perhaps didn't intend to due to a bug in your code.Both produce the desired result:
Those kind of "accumulation" problems cannot be done simply with list comprehensions (or with ugly side effects which impair readability).You want collections.defaultdict(list) to create a list of couples as values, and country as key:result:
As far as I am aware, this can't be done in a comprehension, but you can use setdefault to make every 2nd element of each list in lst1 a key in a dictionary which you can then immediately append the slice up to it (as you were doing). The neatness of setdefault is that we can append to a key if it is already there, or create that key and then append if it is not. Both actions being done without an if-statement.giving:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
