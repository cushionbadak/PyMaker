Natural Text
Last month I made a scraper for this Latin dictionary. It finally finished executing (that website gave me response times of 6 to 8 seconds per page). To bad I find out that a good chunk of my data is severely compromised...eg. commandūcor ----> command\xc5\xabcor || commandūcāris ----> command\xc5\xabc\xc4\x81risI made the stupid mistake of using the str() function on the raw data I got from requests. Just like this:I'd really appreciate it if anyone could help me restore the broken text.Thank you in advance!
r.content returns bytes. (In contrast, r.text returns a str. The requests module attempts to guess the correct decoding based on HTTP headers and decodes the bytes using that encoding for you. In the future maybe that is what you would want to use instead).If r.content contained bytes such as b'command\xc5\xabcor', thenstr(r.content) returns a str which begins with the characters b' and ends with a literal '. You can use ast.literal_eval to recover the bytes:You could then decode these bytes to a str. The URL you posted declares the content is UTF-8 encoded:Assuming all the data you downloaded uses the same encoding, you could recover the content as a str by calling the bytes.decode('utf-8') method:
Just .decode them using utf-8 (the default). You can read more about character encodings in Python's Unicode howto.


Answer URL
https://docs.python.org/3/library/ast.html
