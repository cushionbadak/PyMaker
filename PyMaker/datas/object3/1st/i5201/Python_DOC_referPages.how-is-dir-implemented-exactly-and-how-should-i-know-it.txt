Natural Text
So I'm trying to know the details of dir() function. First I looked at the implementation of it:https://github.com/python/cpython/blob/e76daebc0c8afa3981a4c5a8b54537f756e805de/Objects/object.c#L1450-L1477And found that the _dir_object function doesn't do any work itself, but invokes the __dir__ method of the introspected object. So how to know the implementation of it?
__dir__ is a special method, so looked up on the type, at least in Python 3:See the Special method lookup section of the datamodel:For custom classes, implicit invocations of special methods are only guaranteed to work correctly if defined on an object’s type, not in the object’s instance dictionary.This is exactly what the _PyObject_LookupSpecial() function does, see the typeobject.c source code:The Py_TYPE() call there is the important part, __dir__ is looked up on the type.The __dir__ method is implemented on the object type and inherited by the function type, so the implementation is in the object_dir() function.For Python 2, the dir() implementation is more elaborate, and actually also delegates to other functions! For function objects, it delegates to the _generic_dir() function. This function consults the __dict__ of the type:where merge_class_dict() recursively incorporates the class hierarchy attributes into the final result.
The code you're looking at is from a recent Python version, but you're testing on an old version.In the new version, an implementation __dir__ is automatically provided on all types.In the old version, objects do not have __dir__ unless it is manually provided. The implementation then takes this into account in _dir_object. This is from Python 2.7: For the implementation of object.__dir__ in Python 3, see object___dir___impl in Objects/typeobject.c.


Answer URL
https://docs.python.org/3/reference/datamodel.html#special-lookup
