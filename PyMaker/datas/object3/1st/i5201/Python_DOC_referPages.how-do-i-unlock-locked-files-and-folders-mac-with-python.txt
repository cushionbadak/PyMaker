Natural Text
As a "clean up" after my script's main purpose is complete, a function is called to recursively look through each folder and remove all files that end in a pre-determined set of extensions.I during my testing, I discovered that some files with a file extension in the list of ones to delete actually throw an error: [Errno 1] Operation not permitted: '/location/of/locked/file.png. Looking at the file itself, it appears to be Locked (on mac).How would I go about removing the locked attribute (should it exist) from every file/folder using Python, then delete the file if it ends in the extension?Preferably this can all be done in the same function below, as it takes a long time to traverse the input directory - handling each only once is the way to go.How does this affect the script's integrity on Windows?I have taken care of programming it in a way that makes it compatible between the OSs but (to my knowledge) the locked attribute does not exist on Windows the way it does on mac and could cause unknown side-effects.I would really appreciate if somebody could show me how to integrate such functionality into the sub-routine. Cheers.EDIT: Removed error handling as per request 
You can unlock the file with the chflags command:(There is a function os.chflags, but the flag associated with the locked status is not a regular one, but what the os module documentation calls a "user-defined" flag, as you can see by looking at os.stat(locked_filename).st_flags.)To solve your problem I'd add the chflags command above to a specific except: for the error you get trying to remove a locked file, along with a platform check:


Answer URL
https://docs.python.org/3/library/os.html#os.stat_result
