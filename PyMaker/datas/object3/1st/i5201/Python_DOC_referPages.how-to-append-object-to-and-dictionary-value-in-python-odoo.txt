Natural Text
Let's say we have dictionary like this:I want to make it like this:by appending values to customer_contacts_group['1'] one by one.
You can concatenate two tuples together to get your result.  One thing to note is that tuples are not mutable in Python, however, you can assign the result of concatenating two immutable tuples to the variable holding the initial tuple, like you are wanting to do here.Output:
You are dealing with tuples which can be concatenated:Or, for short:
You can access dictionary values using dictionary[key], but what you seem to be storing is not a list but a tuple. Tuples are immutable and so you cannot append values to them. You can, however, construct a new tuple by concatenation, e.g.x['1'] is now (20,30). As long as both arguments being added are tuples, concatenation will occur.
You cannot append to tuples like your (20,30,40,). But to lists like [20, 30, 40]. And what you are trying to do calls for defaultdict(list) like so:defaultdict(some_callable) saves you the hassle of checking whether a key exists etc. by defaulting to whatever some_callable returns.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
