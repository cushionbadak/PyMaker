Natural Text
Console output from function sync_lister():Good, that's what I expect. Now I want to put this in a worker pool and get it done about 4x as fast.I thought I did exactly that and correctly. Why do I not have any output?There is no console output when running async_lister() and the application returns immediately.Complete code below. Let me know if you need the source to the ffprobe wrapper or anything else.
As it states in the apply()/apply_async() documentation, each call to apply() or apply_async() is equivalent to one call to the function you pass as the first argument (i.e. run_ffprobe).In your synchronous code, you are passing each element of args_list to a separate run_ffprobe() call:In your async code, you are asking the pool to compute this:This is not what you want it to do.  You need to call apply_async() in a loop, just like you called run_ffprobe() in a loop.  Alternatively, you could use map_async(), but this only calls your callback once, with the entire list of results.  That does not appear to match what you are doing in the synchronous code, but you could rewrite your callback to fit this pattern, or use something like functools.partial(map, example_callback) as your callback for map_async().


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.apply
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map_async
