Natural Text
I am trying to create a regex filter that will be used to sanitize domains that are processed by a python script.  The domains could possibly be just regular domain namessomething.com, some.something.comor could have a url structurehttps://some.something.comor could have url structure with wwwhttps://www.something.comI currently have a crude regex to pull out domains out of these structures except I have not figured out a way to filter out the www. out.This regex does a decent job grabbing domains out of urls, but when I try to do any kind of negative lookahead to remove the www.,I can't seem to get the desired result.  I've tried (?!www.) which only took away one w not all 3 and the ., any help figuring this out would be most appreciated.
Unless you absolutely have to use regex, it's better to use something designed for this - like the built-in urlparse. For one thing, your regex (and the one linked in the comments) won't match domains with non-ASCII characters.Note that you might want to detect strings without scheme and add it:so you always get the domain in the netloc attribute of the ParseResult.Once you have the domain separated out, if you want to remove the 'www.', there are any number of simple ways to do it.
TryAnd examplesExplain:[a-z][a-z0-9-]*[a-z0-9]\.|[a-z]\. match a label as described by RFC 1034(?<!\bwww\.) assert that the domain does not begin with www.. The part matched by (?:[a-z][a-z0-9-]*[a-z0-9]\.|[a-z]\.) on the first line.To match the simplest URL scheme (no auth part) as well, use this:Note that re.VERBOSE is used to ignore whitespace in the pattern so it look like more readable.
Use urlparse. Below is a sample of using it. I find it easy using urlparse over regex. urlparse gives you a class of parse results, and we can choose to extract the item we want and then do desired logical operations to extract the required host.


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse
