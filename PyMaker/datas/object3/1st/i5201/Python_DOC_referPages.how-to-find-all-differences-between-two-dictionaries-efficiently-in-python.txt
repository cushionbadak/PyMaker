Natural Text
So, I have 2 dictionaries, I have to check for missing keys and for matching keys, check if they have same or different values.  What's the most efficient way to do this?
You can use dictionary view objects, which act as sets. Subtract sets to get the difference:For the keys that are the same, use the intersection, with the & operator:If you are still using Python 2, use dict.viewkeys().Using dictionary views to produce intersections and differences is very efficient,  the view objects themselves are very lightweight the algorithms to create the new sets from the set operations can make direct use of the O(1) lookup behaviour of the underlying dictionaries.Demo:and a performance comparison with creating separate set() objects:Using set() objects is slower, especially when your input dictionaries get larger.
One easy way is to create sets from the dict keys and subtract them:Or you can avoid casting the second dict to a set by using .difference():


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
