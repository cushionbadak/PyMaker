Natural Text
I want to create a random number using n numbers which are between i and j. For instance, for n=10 and i=1 and j=5, such an output is expected: 2414243211. I did it in R using this code:I want to do the same in Python. I found random.uniform but it generates 1 number and I don't want to use loops.update:i and j are integers between 0 and 9, while n could be any integer. i and j decide which number can be used in the string while n indicates the length of the numeric string.
If I understand your question (not sure I do), and you have Python 3.6, you can use random.choices:
The random.choices() function does what you want:
If you consider list-comprehensions being loops (which they actually in many ways are) there you will not be satisfied with this but I will try my luck:Notes:The result is a string! If you want an integer, cast to int.randint works incluselively; the start (1) and end (5) might be produced and returned. If you do not want that, modify them (start = 2 and end = 4)Is there a reason you are using random.uniform (and subsequently math.floor()) and not simply randint?



Answer URL
https://docs.python.org/3/library/random.html#random.choices
