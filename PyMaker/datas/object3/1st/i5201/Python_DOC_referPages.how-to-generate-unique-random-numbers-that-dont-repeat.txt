Natural Text
I'm trying to write a code that randomly chooses numbers and adds them to the list random_numbers, but if a random number was already generated, the code detects that and replaces the number with another, until every number is different.This part generates a random integer and appends it to the list random_numbers:This part is supposed to iterate over the list and check if the random number generated was already generated, and replace it:The output varies, but almost always the list has the same integer more than once. Can anybody help?
One straightforward way to do non-repeating 'random' (psudeorandom) whole numbers in a modest range is to create a list using range(1, n), then random.shuffle() the list, and then take as many numbers as you want from the list using pop() or a slice.Now every time you want a random number, just l.pop().Another is to use random.sample() -- see https://docs.python.org/3/library/random.html
This is one forceful way
Randomness is a concept that most people assume means "different every time" or some understanding like that.In reality, randomness is pretty hard to define and generally, it's safe to assume anyway that you will see repetition. If something is truly random, it (the algorithm) does not care if it repeats or not. It pays no attention to previous values when it creates new ones. This is the gist of what 'random' means in the programming world.If you roll a die and you get a 4 (1/6 chance), what are the chances you will get a 4 again? It's still 1/6. Getting a 4 once does not change the likelihood of getting it again.So you don't actually want randomness. You want to somewhat control the behavior of your output.What I would suggest is keeping another list of integers you have already inserted into the array and if the newest one generated is something you already have, produce another random number in order to hopefully get a different one this time.


Answer URL
https://docs.python.org/3/library/random.html
