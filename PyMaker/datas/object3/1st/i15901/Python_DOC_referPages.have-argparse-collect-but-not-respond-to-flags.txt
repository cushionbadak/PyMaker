Natural Text
I have a script which takes in some arguments, uses some of those argument to choose a script to run, and passes the rest of the arguments to that script. So it looks something like this:This works fine, unless I want to pass in arguments that start with -. For example, if I called python my_script.py a --foo, I'd get an error unrecognized arguments, when really I want to just have it run python a.py --foo (i.e. just pass the --foo along to the subprocess).Is there a way to get around this with argparse?
Perhaps you are looking for parse_known_args. It will parse all the options it recognizes, and returns all the unrecognized arguments in unknown:
I discovered the function parse_known_args, which provides a solution to this, albeit perhaps not ideal.What this does is use parse_known_args to parse what's known, and collect the rest in a list. Then those remaining arguments can be passed to the subprocess as desired.
The '*' works if you include '--' in the argument list:An alternative is to use REMAINDER ('...') instead of '*':Both the '--' and REMAINDER mean: 'treat what follows as positional arguments'.parse_known_args also works, though its logic is different - 'just return a list of the strings you didn't recognize'.  parse_args calls parse_known_args and raises an error is the rest value is not empty.But don't use REMAINDER as the first positional argument:  Using argparse.REMAINDER at beginning of parser / sub parser


Answer URL
https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.parse_known_args
