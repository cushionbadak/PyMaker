Natural Text
I have been experimenting with ways of storing some variables from my python project in a user readable/editable text file. The text file is laid out like this:As you can see, a is meant to be a string, b an integer, and c a list. The code I have so far goes as follows:It splits the line at the '=' and sets the first section as the variable name, and the second section as the value for that variable.However, when the program runs, instead of coming out as an integer and a list, b (123) and c ([4,5,6]) both are saved as strings.Is there any way that I can convert the strings into their proper types? Or is their a better (but still simple) way of doing what I am trying to do?Any help would be much appreciated. Thanks!
Here is one way, using ast.literal_eval:You'll probably want more beef in the for loop, like ignoring blank lines, removing comments, etc.Also note that this puts the data in a dict, and not into the vars() dict. You should keep data out of your variable names. If you do want to add your config variables to your namespace, you can still use my function like so:
"Or is their a better (but still simple) way of doing what I am trying to do?" Option 1One easy and good way is to use a dictionary in a python file just do an import.myConfig.pyIn your code:You can also use indvidual variables instead of dictionary and do the same. Option 2If you don't want a python file you can read any other file and use exec to executing the command line by line. Docs here: https://docs.python.org/2/reference/simple_stmts.html#exec You can use execfile but I believe it is discontinued in versoin 3.x Docs here: https://docs.python.org/2/library/functions.html#execfileOption 3You can also use other ways:Python ConfigParser:     https://docs.python.org/2/library/configparser.html YAML files:  http://pyyaml.org/wiki/PyYAMLDocumentationXML files: See this for an example:    parsing XML configuration file using Etree in python
In addition to answers below, for simple data structures you can use json format and dictionaries or namedtuples:For more advanced objects, see pickle module.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
