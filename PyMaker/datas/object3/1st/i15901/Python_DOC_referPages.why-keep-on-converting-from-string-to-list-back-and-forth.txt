Natural Text
I have a text file containing all the students' names and other information of my programing course like this:...Some of them contains tabs and other unnecessary spaces in between the text within each line. So that the first email address and the second are tabbed. Sometimes between both these and between 'Student'. But my intention is just making a new text file containing just the Name, Lastname in a nice column.I did manage to get my result but only by keep converting the text to list and back to string again. Is there a better way of doing this?Python 2.7
If you're trying to deal with a file where each line is a comma-separated list of values, that's exactly what the csv module is for.In your updated version, it looks like they're actually a tab-separated list of values… but that's just a dialect of CSV (known as TSV), which the module can also handle just fine:You can also use csv.writer to write the rows back out in CSV format. You can even use csv.writer(sys.stdout) if you want to write those rows to the terminal. You never have to deal with splitting and joining; that's all taken care of for you.However, the first column is itself a lastname, first, which you also need to parse. For that, I'd use either str.split or str.partition (depending on exactly what behavior you want to get if, say, Cher is in your class). I'm also not sure whether you want to split on ', ', or split on , and then strip out spaces. Either way is easy. For example:While we're at it, it's always better to use with statements with files, so let's do that too.But my intention is just making a new text file containing just the Name, Lastname in a nice column.I'm not entirely sure what your issue is with spaces. If there are spaces after the tabs in some cases and you want to ignore them, you should look at the skipinitialspaces option in the csv module. For example:But if there are tabs and spaces in the middle of the actual columns, and you want to strip those out, you probably want to use str.replace or a regular expression for that. For example:
You could use a regex ('(\w+),\W+(\w+)') to get Lastname, Name out of each line.Something like this:Took help (for the hyphenated regex) from here.
The other answers here will definitely work for you, but here's a simpler way to accomplish your task:If you don't like magic numbers, you can add the itemgetter module:


Answer URL
https://docs.python.org/3/library/csv.html
https://docs.python.org/3/library/csv.html#csv.Dialect.skipinitialspace
