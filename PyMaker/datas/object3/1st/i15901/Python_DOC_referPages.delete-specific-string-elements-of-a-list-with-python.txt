Natural Text
I have the following list:How can remove 'NCFS000', 'AQ0CS0' and the square brackets?, something like this:This is what i all ready tried:But the id still in the list, how can i drop the idÂ´s and get all the words in the desired format?. How can i declare a regex for this task?. Thanks
You can use a list comprehension and slicing:
The problem here is that you have a nested collection, but not a nested loop. The top-level list doesn't have any values == 'NCFS000', so after removing all such values, nothing has changed.What you want is: for each tuple in the list, remove each value == 'NCFS000', right? You've got two "each"es there, so you need two fors somewhere in your code.Of course this gives you a list of lists, not the list of tuples you started with. If that's a problem, Python doesn't have a "tuple comprehension", but it does that the tuple constructor and generator expressions, which is good enough:
You are only iterating over the tuples, instead of the values themselves. If you want to remove multiple values at once, you can do it like this:
You could compose your function by the following item:, the result is what you expect.
In your code given value != va compares 'NCFS000' with ('carga', 'NCFS000', 'superior', 'AQ0CS0') for example, not giving the desired result.  You need to have a nested list comprehension. This code filters based on a regexI can't post comments, so I have to do this here... My use of regex is not the same as what abarnert is thinking.  He thinks of turning the data structure into a string, and then running a regex on it.  That would be absurd, as he says.  But I am running a regex on the strings in the data structure.  This I think we could both agree is good.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
