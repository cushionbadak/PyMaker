Natural Text
This probably is very simple but can someone explain what the below is meant to achieve?It is called from In the for loop are the variables s and r assigned to '<' and '{' respectively and a replace is performed on the value field? Followed by the other two sets in for loop.
It loops through the tuple of tuples ('<', '{'), ('>', '}'), (' ', '_'), and "unpacks" s and r as the 1st and 2nd element in the tuple respectively. Then it does a replace, so ultimately replacing < with { etc
The first codefor s, r in (('<', '{'), ...) will assign < to s and { to r, and next items in next iteration (tuple unpacking).Inside the loop str.replace return a new string that replaced all occurrence of s with r. So it is meant to be there to replace < with {, > with },  with _.But, NO. It does not because str.replace returns a new string, and does not replace the string inplace.To be correct, it should assign back the return value. And the method should return the replaced string.BTW, here's more efficient way to do it.You can use str.translate.In Python 2.x, with string.maketrans:In python 3.x:The second codeThe second part is dict with generator expression:This is getting name, value values from fetched rows to make a new dictionary.With the fixed version of clean_param_value, it will result in something like:with dictionary comprehension:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.maketrans
