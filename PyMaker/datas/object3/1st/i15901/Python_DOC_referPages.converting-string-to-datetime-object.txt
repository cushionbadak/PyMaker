Natural Text
I was trying to convert a string to a datetime object.The string I got from a news feed is in the following format:"Thu, 16 Oct 2014 01:16:17 EDT"I tried using datetime.strptime() to convert it.i.e.,And got the following error:Traceback (most recent call last):      File "", line 1, in       datetime.strptime('Thu, 16 Oct 2014 01:16:17 EDT','%a, %d %b %Y %H:%M:%S %Z')      File "C:\Anaconda\lib_strptime.py", line 325, in _strptime      (data_string, format))  ValueError: time data 'Thu, 16 Oct 2014 01:16:17 EDT' does not match  format '%a, %d %b %Y %H:%M:%S %Z'However, if I tried the string without "EDT", it worked.i.e.,Does anyone know how to parse that "EDT" part?
To parse the date in RFC 2822 format, you could use email package:Note: parsedate_tz() assumes that EDT corresponds to -0400 UTC offset but it might be incorrect in Australia where EDT is +1100 (AEDT is used by pytz in this case) i.e., a timezone abbreviation may be ambiguous. See Parsing date/time string with timezone abbreviated name in Python?Related Python bug: %Z in strptime doesn't match EST and others.If your computer uses POSIX timestamps (likely), and you are sure the input date is within an acceptable range for your system (not too far into the future/past), and you don't need to preserve the microsecond precision then you could use datetime.utcfromtimestamp:


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.utcfromtimestamp
