Natural Text
I have a 2D array with 9 elements in total yielding into a 3x3 table as show below :The table above shows an invalid 2D array as there are 2 "Z" characters in the first columnA valid 2D array is shown above with each values distinct in their respective rows and column:I'm stucked at the looping part throughout the 2D array :How do i create a code that checks the 2D array such that every element in each row and column is unique in its own row and column ? 
Assuming you have an array arr which is of size N*N then you can iterate over the length of it and then create a set for each row and column. If the length of the set is less than the length than N then there must be a duplicate, because sets cannot contain duplicate elements.The code above will iterate over the range(N), meaning it will effectively iterate over your indices (0, 1, 2) of each row and column.For each index the code will then look at that row and create a set from it. Sets are unordered collections that cannot contain duplicates, meaning if you did set(['A', 'A', 'B']} you would have a {'A', 'B'}. You can then use this fact to check for duplicates, as if the length of the set is less than the length of what was used to create it, the list must have had duplicates.The use of zip is to be able to check the columns as well as the rows. In simple terms zip(*some_list) will convert the rows of some_list into columns and the columns into rows. You then do exactly the same as above, checking each row whether it is now duplicate. Of course, the "rows" we're checking are actually the columns of the original array.
will flesh out later but here is some quick code:call the function with your array (list of lists).   can change the return values to suit your needs.   Note it stops at the fist dupe found.   can change structure bit if you need different code.


Answer URL
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
https://docs.python.org/3/library/functions.html#zip
