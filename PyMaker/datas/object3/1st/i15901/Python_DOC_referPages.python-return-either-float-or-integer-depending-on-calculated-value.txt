Natural Text
I'm new to Python and have been writing out simple programs to get acquainted with the language.What I am trying to determine is how to calculate output value types dynamically and return them accordingly.  The only way I can get the code to accurately output values is to hard code the casting of type float but i'd like to be able to have dynamic output. Any pointers in the right direction would be much appreciated!Sample Input/Output:* Input = 0, Output = 32.0  (Desired Output: 32)* Input = 1, Output = 33.8Code Example:
Sticking with your approach, I would recommend this. Instead of changing types dynamically, the result is formatted with %g to display as an integer if it is one, so a float is used all along.Also, I think to_number() is a more descriptive name for is_number(), which was removed from the calc_fahrenheit() function as it doesn't really belong there but in the validation loopâ€”which has been made Pythonic.Hope that's what you're after.
Not sure if there is any more convenient way. You can do something like:
Your is_number() function is nicely done (although False is the same as 0, so if someone enters a non-number string, it will be treated as if he had entered 0), but it's not actually what you need here.Also, is_number() is misnamed since what it actually does is convert a string to a number.Then, any number you input will be converted to a float anyway (because you're doing a calculation with floats with it), so you need to do your int/float check at output time:Lastly, consider Floating Point Arithmetic: Issues and Limitations - a floating point calculation might yield results like 23.000000000001 that deviate from the actual result 23 because of rounding errors.So you should be doing something like 
Just use floats, operators work the way you expect on float's and int'sif you just remember tofrom __future__ import division.Your attmept - which is not very pythonic - can be written as shown below.


Answer URL
