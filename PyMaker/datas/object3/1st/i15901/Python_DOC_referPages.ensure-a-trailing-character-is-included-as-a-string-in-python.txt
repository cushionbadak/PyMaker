Natural Text
What is the best method in Python for ensuring a trailing character is included as a string in Python?One example: A user supplied URL in a script needs to be used to construct a URL, and so we want to ensure that a trailing slash is included in the URL, or else add one ourselves.So, given the strings http://www.so.com or http://www.so.com/, what is the best way to ensure you end up with http://www.so.com/?My solution uses the re module, but as I am still learning Python I was wondering if there was a better practice to solving this problem.UPDATEI should clarify that I am looking for a purely Python solution, without having to use any extra modules. Just a part of learning Python tricks and best practices.
you can access to end of a string with [-1] index : 
For an application like this, you should probably use urllib.parse.urljoin (urlparse.urljoin in Python 2) No need to manually manage the slashs.For file paths, os.path.join is an analogous function.
For a difficult-to-read one-liner, you could do this:(url or '') - This part sets the url to a string by default if it's false, null, empty list, etc...[(url or '')[-1] == '/'] - This part is an index lookup that should have a value of 0 if the url does not end in a string and 1 if it does.['/', ''] - Based on the value of the previously mentioned index lookup, we will append either a slash or an empty string to the end of url
Examples:


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urljoin
https://docs.python.org/3/library/os.path.html#os.path.join
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urljoin
