Natural Text
I am using Python 3.4 on Linux Mint.  The SQL statement is returning the DB data in a long list. I can loop through the list fine, but need to format the output properly.  I can set a delimiter in the list, such as '@' to indicate the end of the row data, but I don't know how to read that data back 1 row at a time from the list ('@' indicates end of row).  Tried using split() but data in list is mixed, integer values and strings, so split() fails.  Please help!
I am not sure if my question was clear, but I have resolved the issue anyway. My SQL statement would return customernames, customerid, productlines and productlinettls, that is, the total orders per productline for each customer.  The problem was that the SQL was returning multiple rows per customer since each each could have more than one productline.  Example...Alpha Cognac 242  Classic Cars 173998.00Alpha Cognac 242  Planes 16655.22Alpha Cognac 242  Ships  18279.26Alpha Cognac 242  Vintage Cars 8250.30Each row was being stored in a list[] and I needed to remove the duplicate customer names + ids and store the all the values in a 1 col/row (per cust) format and put 0.00 where no value for productline:Example:CustName     ID   Cl Cars   Bikes Planes   Trains Ships    Trucks&Buses Vintage CarsAlpha Cognac 242  173998.00  0.00 16655.22  0.00  18279.26      0.00      8250.30  The code I posted above would remove the duplicate custnames + ids and restructure the data into 1 unique row but without the missing columns (ie. Bikes, Trains, etc.).Since no value was available for some of the productlines, I needed to insert these. I used a listcomparator to obtain the index of where the productline value was in the unique row.Example:productlines = ['Classic Cars', 'Bikes', 'Planes', 'Trains', 'Ships', 'Trucks&Buses', 'Vintage', 'Cars']This is just an excerpt of the function that I used to get this problem resolved.  I hope this idea can help others, but I am sure there are other ways to do this.  I am quite new to Python.


Answer URL
https://docs.python.org/3/library/json.html
