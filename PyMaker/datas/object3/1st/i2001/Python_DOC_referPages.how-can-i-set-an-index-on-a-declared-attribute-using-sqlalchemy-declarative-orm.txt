Natural Text
When I try to define an index on a declared attributeI get the following error:Is there another way to do this? Can I set indices on a declared attribute? 
When dealing with inheritance/mixins you should pass indexes that you would like to create for all classes and their underlying Table as "inline" definitions using __table_args__, which also should be a declared attribute in this case, as explained in "Creating Indexes with Mixins":This will avoid name conflicts between indexes created for different (sub)classes. Note that here this "inline" form uses string names to identify columns to index, but cls.foo_id will work as well when in a declared attribute. In general there's no need to assign an Index as a model attribute, and in some situations it may even lead to confusion.The simple solution to indexing a column is to just pass index=True to Column. This is a shortcut for creating an anonymous index for the column in question:When you are not dealing with inheritance/mixins, you do not need the @declared_attr wrapping:The reason why you are getting the error is that during class construction the class definition's body is evaluated and the resulting namespace is then used as the class' namespace. During that evaluationresults in Index receiving the declared attribute descriptor object assigned to user_id in that namespace as is, and so SQLAlchemy complains.When you access descriptors through a constructed class object, or an instance of it, they get to do their thing, which in case of a declared attribute means that it evaluates to the mapped property or special declarative member it represents.


Answer URL
https://docs.python.org/3/howto/descriptor.html
