Natural Text
I'm using matplotlib to generate pgf files.Based on those, I use standalone tex files which only include necessary settings and the afore-built pgfs.In this scenario, I'm getting errors when using custom tex-macros for descriptions in my plot files.Here an example pgf generator:that can be used in a dir with the following foo.tex file:Running this results in the following error:Please note, that this is an error generated by matplotlib and not of compiling my standalone files.Also note, that the error goes away when the \foo macro is provided as part of the pgf.preamble(the line commented out) instead.I checked the pgf produced by this variant and indeed it uses \foo{}.I'm having trouble narrowing the problem further down.Here my concrete questions:Why does matplotlib invoke pdflatex at all?I'm generating pgf output and thus pdflatex should not be necessary.(For the reference: I straced the script above and indeed know that pdflatex is being called.)Is there a way of preserving the temporary file that matplotlib tries to compile?The error references texput.log by (of course) that file doesn't exist afterwards.Why can't I use a macro in a label which is provided in another tex file?
tl;dr Including tex-files in the pgf.preamble of matplotlib requires absolute paths.For the future, I recommend the following pdflatex "replacement script" for purposes of debugging:Make sure to save it as pdflatex, make sure it's executable, make sure /usr/bin/pdflatex is your actual pdflatex and ensure this wrapper is found first in yout PATH (cf. which pdflatex).When running the python generator, we preserve the final tex input in the dbg.tex.That answers (2).Considering the output, we see:I don't know what that should be useful for. But I'm guessing matplotlib is trying to adjust the font-setup for which it tries compiling this "test" document.That (sort of) answers (1).Now the conclusion (obvious in hindsight):matplotlib compiles this sample document in a temporary directory.Clearly there is no foo.tex available in this directory, so the subimport fails.From that point onwards it is obvious that \foo will not be available.Though not the cleanest solution, this can be fixed by including foo.tex via an absolute path.Working python generator to finally answer (3):(I use python3 and pathlib. For python2 we would rather fall back to os.getcwd.)


Answer URL
https://docs.python.org/3/library/os.html#os.getcwd
