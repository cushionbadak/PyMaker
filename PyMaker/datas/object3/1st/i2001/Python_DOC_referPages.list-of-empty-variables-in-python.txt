Natural Text
Is there any possibility of creating a list of variables/names* that have not been defined yet, and then loop through the list at a later stage to define them?Like this:The reason I'm asking is because I have a project where I could hypothetically batch fill 40+ variables/names* this way by looping through a Pandas series*. Unfortunately Python doesn't seem to allow undefined variables in a list.Does anyone have a creative workaround?EDIT: Since you asked for the specific problem, here goes:I have a Pandas series that looks like this (excuse the Swedish):I want to store each value in this array to a set of new variables/names*, the names of which I want to control. For example, I want the new variable/name* containing the first value to be called "förbKVVptp", the second one "förbKVVsflis", and so forth. The "normal" option is to assign each variable manually, like this:But that creates a not so nice looking long bunch of code just to name variables/names*. Instead I thought I could do something like this (obviously with all the variables/names*, not just the first three) which looks and feels cleaner:Obviously this becomes pointless if I have to write the name of my new variables/names* twice (first to define them, then to put them inside the varList) so that was why I asked.
You cannot create uninitialized variables in python. Python doesn't really have variables, it has names referring to values. An uninitialized variable would be a name that doesn't refer to a value - so basically just a string:You can turn these strings into variables by associating them with a value. One of the ways to do that is via globals:However, dynamically creating variables like this is often a code smell. Consider storing the values in a dictionary or list instead:See also How do I create a variable number of variables?.
The answer to your question is that you can not have undefined variables in a list.My solution is specific to solving this part of your problem  The reason I'm asking is that I have a project where I could hypothetically batch fill over 100 arrays this way by looping through a Pandas array.Below solution prefills the list with None and then you can change the values in the list.Code:  Output:[0, 0, 0]
So something you are trying to do in your example that won't do what you expect, is how you are trying to modify the list: When you do var = 0, it won't change the list, nor the values of varA, varB, varC (if they were defined.)Similarly, the following won't change the value of the list. It will just change the value of var.To change the value of the list, you need to do an assignment expression on an indexed item on the list:Note that by creating a list with empty slots before assigning the value is inefficient and not pythonic. A better way would be to just iterate through the source values, and append them to a list, or even better, use a list comprehension.


Answer URL
https://docs.python.org/3/library/functions.html#globals
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
