Natural Text
I have two modules in the same package, module1.py and module2.py.In module1.py I have a function reading command-line args with argparse:Now suppose in module2.py I import parse_arguments_module1() from module1.py and use it (this works):Use:Output:Namespace(argA='A', argB='B', argC='C', argD=None)The question is: how to read arguments in module2.py (required and/or optional) additional to those of module1.py? (I.e. have args in main contain more arguments, just for module2.py)
You'd need to use partial parsing with parser.parse_known_args() to achieve what you want, and / or pass your arguments as a list, explicitly.Normally, without arguments parser.parse_args() takes all values from sys.argv[1:] (so everything but the first element) as the input to parse. If there are elements in that list that can't be parsed, then an error message is printed and sys.exit(1) is called; your script would exit.So if you want some arguments on sys.argv to go to one parser, and the remainder to another, you want to use parser.parse_known_args() and pass the remainder to the other parser.I'd split out creating and configuring the ArgumentParser() instances from parsing; so in module1 do:and in module2, use the same structure, but re-use the parser from module1:


Answer URL
https://docs.python.org/3/library/argparse.html#partial-parsing
https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.parse_known_args
