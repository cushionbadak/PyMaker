Natural Text
I have doubt in python exception. Below code is taken from python document and I am confuse at one point. If any one can help, will be thankful.Here this codes gives output as:B C DIf I change except part of code like below code:output will be :B B BWhen I run this code without try block as shown below:Here output is:Similary for below code:Output is thisI confused because, if I run this code separately then it gives output as B or C or Dthen why in my second code snippet it is giving output as even though except is define for all 3 Class B, C, D
Python's documentation says:A class in an except clause is compatible with an exception if it is  the same class or a base classTherefore the given code:Can be simplified into the following:Then your modification would be turned into:So regardless whether foo is instance of B, C or D it will fulfil the first case, because isinstance yields True for instances of a subclass too.
Since B is the super class of C and D your second version will always use the first except block for B. Because the Python runtime will search for a matching except block from top to bottom. An except block is matching if the exception is an instance of the class in the except block. If you throw an instance C for instance this block will match because C() is (also) an instance of B.As a rule of thumb the except statements must decrease from the most specific condition to the most general condition, e. g.:
Let's first understand the class hierarchy involved in this code sampleB -> Base classC -> inherits from BD -> inherits from C and C -> inherits from Bthus D -> inherits from B and CA try statement may have more than one except clause for different exceptions. But at most one except clause will be executedUnless you are catching the raised the exception then base class is given the priority to be caught. i.e when exception classes are inherited then the priority in the except is given to the BASE class (in your code it's class B). Now the first case : Iteration 1 :   element : BFirst control checks the except D as it's not a base class nor the matching class to the raised one then control will move to except C and at last it will execute except B, thus prints B.Iteration 2 :   element : CFirst control checks the except D as it's not a base class nor the matching class to the raised one then control will move to except C and will execute except C, thus prints CIteration 3 :   element : DFirst control checks the except D as it's a matching class then control will  execute except D, thus prints DNow consider Second case : Here B is the base class for classes C and D so when you write except B at the top of except stack then the control does not go to subsequent except C and except D. So it prints output as B for each iteration of for loop.


Answer URL
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
