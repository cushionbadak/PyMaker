Natural Text
So I've got an interesting problem that's holding me back. I've got a massive list that contains around 150 lists of length 28. Each of these small lists looks something like this:It's worth pointing out that each of those items is a string that contains anything from \n characters, nothing at all, commas, etc... The first two items in each list is something like A 1, A 2, B 1, etc. My delimiter for csv files is the | character. The issue I'm having is that when I try to write this data back to a csv file I'm either only able to put the entire list as a string into the very first column on each row (meaning it looks exactly like what I've included above) or put each item on it's own row. Ideally what I need to accomplish is each small list within the large list being on its own row, with each item in the small list being in it's own cell on that row. So each row would utilize columns A-AB for one list. The code I have tried looks similar to:I've tried a variation of this that writes the entire small list item but that ends up putting each small list into one cell in the first column. Anyone have any ideas on how to go about this?
You should be able to use the writerows function of the csvwriter class to do this all at once without a loop.
Pandas can do this without you doing anything, really. I'll show you an example with your list just duplicated, so that you have each list in one row, utilizing columns a-ab (I think this is what you wanted):Then your csv file looks like this:Blank columns correspond to '' in the list.


Answer URL
https://docs.python.org/3/library/csv.html?highlight=writer%20writerows#csv.csvwriter.writerows
