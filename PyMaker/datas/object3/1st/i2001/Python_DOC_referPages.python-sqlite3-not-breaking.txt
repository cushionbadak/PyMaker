Natural Text
I am trying to build a log in using sqlite3 and I am following a YouTube tutorial.But when I run this code, it doesn't break and keeps going on instead:
Your break is never executed because Python can't get there. First, your while loop indentation differs:The break can't get out of the while True loop because it is not part of that loop. You'd have to adjust your indentation first:Next you test if results is the same object as the True object:This will never be true, because cursor.fetchall() will always produce a list. If you want to test if the list is not empty, just use:The if statement already checks if something is true or not, and you should almost never need to use is True or == True in Python.Next, you are using break in a for loop, so the for loop will be ended, and not the while loop. So even if you corrected the structure to:then the for loop would be broken out of. The while True: loop would happily continue.You could add another break to the structure:but that is all getting a bit.. verbose. Since you know results is not empty, you can drop the for loop and use:If you just wanted a single result, you wouldn't want to fetch all the rows that match, just the first row, so use cursor.fetchone():I cleaned up the code a bit here; I removed the with context manager use, as there is no need to use this when not making any changes to the database and there is just a single SELECT (no transaction management needed), and the above connects to the database just once (re-connecting for each attempt is a bit of a waste, changes to the database from another process are automatically picked up anyway). I also used name instead of i[1] to welcome the logged-in user. Good variable names help make the code easier to understand.
i see multiple problems with this, the main problem lies in this code sectionyour if condition is on the same level, as the while condition meaning it will run after the loop breaks, but the loop breaking is dependent on the if condition, fix the indenting and there should be no problemsecondly instead of cursor.fetchall() just do cursor.fetchone()thirdly instead of if results is True: just do `if results is not None:


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
