Natural Text
I'm writing a Python Flask app, and would like to set log levels for my own code only. If I set the root logger to DEBUG I get spammed with output, so I thought I'd set up my own logger that I can set the log level for.This is the code that run on startup:For some reason, even after adjusting the log level to DEBUG, the log.debug command doesn't output anything to file. Can anyone spot what I'm doing wrong? EDIT #1: When I add a handler, log.addHandler(logging.StreamHandler()) in my case, the DEBUG statements are output'ed to the console. I don't understand why I need to create another handler to get the output right. It also messes up my test code output, but I'll create another post for that issue. 
The following two paragraphs from the Logging HOWTO documentation explain why you have to set a handler:Loggers have a concept of effective level. If a level is not explicitly set on a logger, the level of its parent is used instead as its effective level. If the parent has no explicit level set, its parent is examined, and so on - all ancestors are searched until an explicitly set level is found. The root logger always has an explicit level set (WARNING by default). When deciding whether to process an event, the effective level of the logger is used to determine whether the event is passed to the loggerâ€™s handlers.Child loggers propagate messages up to the handlers associated with their ancestor loggers. Because of this, it is unnecessary to define and configure handlers for all the loggers an application uses. It is sufficient to configure handlers for a top-level logger and create child loggers as needed. (You can, however, turn off propagation by setting the propagate attribute of a logger to False.)There are two key points here:A logger passes its messages to a handler to decide if the message should be logged or not.Before you explicitly set the handler, the default one (with its level set to WARNING) was used.


Answer URL
https://docs.python.org/3/howto/logging.html#logging-basic-tutorial
