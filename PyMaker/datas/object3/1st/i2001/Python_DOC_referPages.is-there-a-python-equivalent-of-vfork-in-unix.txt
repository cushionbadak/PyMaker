Natural Text
I'm reading APUE. It's said that vfork() creates a child process without copying the address space the parent process has. And parent will wait until child process calls exit or exec. Is there anything similar in Python give this kind of low level control? How can this be achieved in Python if possible? 
vfork is a mostly-obsolete optimization of fork, intended solely for uses where it is immediately followed by an exec. It was designed back when fork didn't use copy-on-write, and has been rendered almost entirely pointless by copy-on-write.Your use of vfork is undefined behavior; modifying variables like globvar or var in the child is not allowed. Almost the only thing the child is allowed to do is call one of the exec* functions. The details are in the man page.If your goal is to share memory between Python processes, you should do that with the multiprocessing module and multiprocessing.sharedctypes.If your goal is to call vfork, go ahead and call it with ctypes, and watch your program immediately fall apart because it's impossible to call vfork safely from Python:


Answer URL
https://docs.python.org/3/library/multiprocessing.html
https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.sharedctypes
