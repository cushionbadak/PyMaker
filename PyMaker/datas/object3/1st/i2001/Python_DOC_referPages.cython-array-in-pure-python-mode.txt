Natural Text
I wish to unpack columnar data coming through a socket - a bunch of ints, then a bunch of floats etc., so it is faster than with struct.unpackI was thinking of using a cython array, but couldn't find how to use it inside a regular python script, as the cython example usesfrom cpython cimport arrayI was wondering whether it is possible to define a cython array in pure python mode (something akin to cython.locals), and if so, how.
Cython can handle C-type arrays (i.e. pointer to memory location) and typed memoryviews. In practice the memoryviews correspond to NumPy arrays or buffer objects.C-type arrays are hard to manage manually whereas NumPy arrays are more convenients in terms of memory management. In practice, the performance on NumPy arrays/memoryviews/buffer objects is the same as the storage of the data is done "Ã  la C" anyway (a pointer to a memory location), I advise strongly to manage the data with NumPy and pass it around. Any Cython or Python code aware of the buffer protocol with allow C-speed computations provided the computational code is Cython/C/C++.
My query was about deserializing columnar data with minimal overhead.I found the solution in pure Python to me memoryviews, using the cast() option:This allows to create a memoryview once, then unpack the data in chunks if needed.


Answer URL
https://docs.python.org/3/c-api/buffer.html#bufferobjects
https://docs.python.org/3/c-api/buffer.html
