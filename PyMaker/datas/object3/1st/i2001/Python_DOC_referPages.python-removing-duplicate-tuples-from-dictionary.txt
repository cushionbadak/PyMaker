Natural Text
I have this dictionary that has tuples as keys. All these tuples got two values, I'll use letters as values to keep things simple, e.g. the tuple (a, b).The order of the two values doesn't matter, this means that (a, b) is essentially the same as (b, a) (or a sorta duplicate). So I tried to write something that would remove all of these redundant key, value pairs, only it doesn't work and I'm seriously stuck with it. I'm sure that it's just something simple I'm overlooking, regardless I can't figure it out.I thought this would work:overlaps is the dictionary and I use the list dupes cause you can't delete things from a dict and loop over it at the same time. Any help or tips would be appreciated :)
You can convert the keys into a list separately from the dict and then modify the dict as you iterate through the keys.
Your if statement is wrong. It should be:Basically, you are asking that the current key, with element inverted is not already present inside the dupes list. Your piece of code does not work because you are looking at overlaps, and inserting the current key if the inverted one is present. That way, the "single" keys, i.e. those that do not have their counterpart, are never inserted in dupers.


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset
