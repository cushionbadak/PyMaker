Natural Text
I need something like this:I implemented it this way, but...Is there a built-in for this? Or a shorter way to do it? Maybe something combined with itertools.groupby()? – Tricks with len() are not accepted, because they don’t work with generators.
Is there some built-in which marks the last of a sequence?No, there isn't.Your function is fine except for two points:How does it handle an empty sequence?Instead of raise StopIteration you should just break; eventually a raise StopIteration will result in a RunTimeError (PEP 479).
You could define mark_last in terms of iwindow, which returns a slidingwindow over an iterable.yieldsNote that you might be able to solve your problem with iwindow directly, by-passing the need for mark_last.
A neater version of what you gave would beNote that using a bare next to raise StopIteration is deprecated, though, so you might want to use an explicit try...except.
In Python 3+This might be a little hard on performance for large lists...From the docs:If the target list contains one target prefixed with an asterisk,  called a “starred” target: The object must be a sequence with at least  as many items as there are targets in the target list, minus one. The  first items of the sequence are assigned, from left to right, to the  targets before the starred target. The final items of the sequence are  assigned to the targets after the starred target. A list of the  remaining items in the sequence is then assigned to the starred target  (the list can be empty).This is what's being done on the *others, last = iterable line, but in reverse.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
