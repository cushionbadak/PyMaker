Natural Text
I'm learning about python 3 asyncio library, and I've run into a small issue. I'm trying to adapt the EchoServer example from the python docs to prompt for user input rather than just echo what the client sends. I thought it would be as easy as just adding a call to input(), but of course input() will block until there is user input which causes the problems.Ideally I would like to continue receiving data from the client even when the server has nothing to "say". Somewhat like a chat client where each connection is chatting with the server. I'd like to be able to switch to-and-from each individual connection and send input as needed from stdin. Almost like a P2P chat client.Consider the following modified EchoServer code:How would I go about getting input form stdin on the server side and specify which connection to send it to while still received inputs from the connected clients?
You can use loop.add_reader schedule a callback to run when data is available on sys.stdin, and then use an asyncio.Queue to pass the stdin data received to your data_received method:The only tricky bit is how we call the Queue.put/Queue.get methods; both of them are coroutines, which can't be called using yield from in the callback or the Protocol instance methods. Instead, we just schedule them with the event loop using asyncio.async, and then use the add_done_callback method to handle the reply we retrieve from the get() call.


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.add_reader
https://docs.python.org/3/library/asyncio-queue.html#queue
