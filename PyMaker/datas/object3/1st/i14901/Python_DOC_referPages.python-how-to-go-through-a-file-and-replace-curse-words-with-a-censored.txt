Natural Text
Basically, I want a script that opens a file, and then goes through the file and sees if the file contains any curse words. If a line in the file contains a curse word, then I want to replace that line with "CENSORED". So far, I think I'm just messing up the code somehow because I'm new to Python:I am new to this, so I'm probably just messing something up...Line, as in This code (if "Hat" was a curse word):Would be:
You cannot write to the same file your are reading, for two reasons:You opened the file in read-only mode, you cannot write to such a file. You'd have to open the file in read-write mode (using open(filename, mode='r+')) to be able to do what you want.You are replacing data as you read, with lines that are most likely going to be shorter or longer. You cannot do that in a file. For example, replacing the word cute with censored would create a longer line, and that would overwrite not just the old line but the start of the next line as well.You need to write out your changed lines to a new file, and at the end of that process replace the old file with the new.Note that your replace() call is also incorrect; you'd call it on the line:The easiest way for you to achieve what you want is to use the fileinput module; it'll let you replace a file in-place, as it'll handle writing to another file and the file swap for you:The print() call is a little magic here; the fileinput module temporarily replaces sys.stdout meaning that print() will write to the replacement file rather than your console. The end='' tells print() not to include a newline; that newline is already part of the original line read from the input file.
Consider:We're using a list comprehension to censor the lines of the file.If you want to replace the entire line, and not just the word, replacewith 


You have only opened the file for reading.  Some options:Read the whole file in, do the replacement, and write it over the original file again.Read the file line-by-line, process and write the lines to a new file, then delete the old file and rename in the new file.Use the fileinput module, which does all the work for you.Here's an example of the last option:And use:Each file will be edited in place.


Answer URL
https://docs.python.org/3/library/fileinput.html
