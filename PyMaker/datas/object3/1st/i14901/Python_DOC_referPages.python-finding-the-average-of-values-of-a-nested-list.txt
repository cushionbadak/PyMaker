Natural Text
I have a list: This list (data) consists of lists (data[x]), which consists of lists (data[x][x]) containing the same word together, each with a number with it. I want to find the average of the number for each word (any floats rounded to integer). For example, there are 2 cakes in the list (data[1]) and in the same list are the numbers 5 and 8. I want the average out of those two numbers, which would be 7, and so data[1] would be changed to ["cake",7]If this is done for each element in the list, the result should be: How could this be done? Thanks :3
You can use zip within a list comprehension:The zip function here would separate your values from names in nested lists:Then you can loop over them and calculate the avg and use set to select the set of names!also note that is have used round function as you wanted the avg for the cake to be 7 as its 6.5 .the round function will do the job for you 
You can do it with 2 list comprehensions and numpy.mean function or statistics.mean function if you use python 3:If you don't have mean function, you can calculate it like this
You can tryOutput:


Answer URL
https://docs.python.org/3/library/statistics.html
