Natural Text
Description of problemI have to migrate some code to Python 3. The compilation terminated with success. But I have a problem on the runtime: In my python code, I have something like that:The code works well on Python 2. But on Python 3, I got:UpdateThe solution of @casevh works well in all test cases except one: when I wrap the stream:and I got:ValueError: iterable must return bytes like objects
One option is to open the file in binary mode:That should create an iterator that returns a sequence of bytes.Python 3 strings are assumed to be Unicode and without proper encoding/decoding, they shouldn't be interpreted as a sequence of bytes. If you are reading plain ASCII text, and not a binary data stream, you could also convert from Unicode to ASCII. See PyUnicode_AsASCIIString() and related functions.
As noted by @casevh, in Python you need to decide whether your data is binary or text. The fact that you are iterating lines makes me think that the latter is the case.works in Python 2, because iterating a str will yield 1-character strings; in Python 3, iterating over a bytes object will yield individual bytes that are integers in range 0 - 255. You can get the the code work identically in Python 2 and 3 (and identically to the Python 2 behaviour of the code above) by using range and slicing 1 byte/character at a time:P.S. You also have a mistake in your C extension code: Parser_read takes 3 arguments, 2 of which are named unused_x. Only a method annotated with METH_KEYWORDS takes 3 arguments (PyCFunctionWithKeywords); all others, including METH_NOARGS must be functions taking 2 arguments (PyCFunction).


Answer URL
https://docs.python.org/3/c-api/structures.html#METH_KEYWORDS
