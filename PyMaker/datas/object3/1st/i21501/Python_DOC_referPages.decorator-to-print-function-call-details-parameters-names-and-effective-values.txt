Natural Text
I want to make a function that being a decorator to another function will print that function call details - parameters names and effective values. My current implementation is this. Kinda works, but with some bugs:For call test(1, 2, 3, 4, 5, d = 6, g = 12.9)it prints test ( a = 1, b = 2, c = 3, d = 6, g = 12.9 ). The expected result is test ( a = 1, b = 2, c = 3, args = [4, 5], kwargs = {'d': 6, 'g': 12.9} )I got stuck here. Can you help me to find the right solution?
Sorry its a bit messy. I modified some code from http://wiki.python.org/moin/PythonDecoratorLibrary#Easy_Dump_of_Function_Argumentstest(1, 2, 3, 4, 5, d = 6, g = 12.9)output:test ( a=1, b=2, c=3, args=[4, 5], kwargs={'d': 6, 'g': 12.9})
Here is the updated version for Python 3.6+Old versionWorking version with default values:Result:
Here's how I solved it in Python 3, based on aliteralmind's answer, put more cleanly (PEP8) if I may say so.Majority of the inspiration for the cleanup came from the (currently) accepted answer by Robert King.Code:Output:Note: The wrapper string in the output represents the function name of whatever makes the logging.X() message call.Example in use:When I get the magical resources known as "time and energy", I'm interested in playing around with LOG_FORMAT, and figure out how I can replace the wrapper substring with say filename and linenumber of function invocation =)
@warvariuc's answer, upgraded to Python 3:
Its a bit old post but wanted to add my bit.Solution given by warvariuc does not work in all cases. If a method have default values as well as we send named arguments while calling, it does not give proper output. e.g. we get two values of b.Adding my modified code.Output


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.Signature.bind
