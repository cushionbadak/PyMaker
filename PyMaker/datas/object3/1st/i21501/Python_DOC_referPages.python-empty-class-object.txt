Natural Text
I'm teaching a python class on Object Oriented Programming and as I'm brushing up on how to explain Classes, I saw an empty class definition:the example then goes on to define a name and other attributes for an object of this class:interesting!I'm wondering if there's a way to dynamically define a function for an instance of a class like this? something like:this doesn't work in my python interpreter but is there another way of doing it?
A class is more or less a fancy wrapper for a dict of attributes to objects. When you instantiate a class you can assign to its attributes, and those will be stored in foo.__dict__; likewise, you can look in foo.__dict__ for any attributes you have already written.This means you can do some neat dynamic things like:as well as assigning to a particular instance. (EDIT: added self parameter)
Try with lambda:The you'll be able to do:EDIT: Thanks Thomas K for the note - this works on Python 3.2 and not for Python2, where print appeared to be statement. But this will work for lambdas, without statements (right? Sorry, I know only python3.2 (: )
You could use AttrDictInstall attrdict from PyPI: It's useful in other situations too - like when you need attribute access to dict keys.
You could also use "named tuples" from the collection standard module. Named tuples work like "ordinary" tuples but the elements have names and you can access the elements using the "dot syntax". From the collection docs:


Answer URL
https://docs.python.org/3/library/collections.html?highlight=named%20tuple#collections.namedtuple
