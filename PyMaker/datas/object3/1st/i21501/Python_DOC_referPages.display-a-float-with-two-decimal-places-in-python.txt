Natural Text
I have a function taking float arguments (generally integers or decimals with one significant digit), and I need to output the values in a string with two decimal places (5 -> 5.00, 5.5 -> 5.50, etc). How can I do this in Python?
You could use the string formatting operator for that:The result of the operator is a string, so you can store it in a variable, print etc.
Since this post might be here for a while, lets also point out python 3 syntax:
f-string formatting: This is new in Python 3.6 - the string is placed in quotation marks as usual, prepended with f'... in the same way you would r'... for a raw string. Then you place whatever you want to put within your string, variables, numbers, inside braces f'some string text with a {variable} or {number} within that text' - and Python evaluates as with previous string formatting methods, except that this method is much more readable. You can see in this example we format with decimal places in similar fashion to previous string formatting methods. NB a can be an number, variable, or even an expression eg f'{3*my_func(3.14):02f}'.Going forward, with new code f-strings should be preferred over common %s or str.format() methods as f-strings are much faster.
String formatting:
Using python string formatting.
Using Python 3 syntax:
If you actually want to change the number itself instead of only displaying it differently use format()Format it to 2 decimal places:
I know it is an old question, but I was struggling finding the answer myself. Here is what I have come up with:Python 3:


Answer URL
https://docs.python.org/3/library/string.html#format-examples
