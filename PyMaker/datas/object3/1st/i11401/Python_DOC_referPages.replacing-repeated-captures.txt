Natural Text
This is sort of a follow-up to Python regex - Replace single quotes and brackets thread.The task:Sample input strings:Desired outputs:The number of name['something']-like items is variable.The current solution:Currently, I'm doing it through two separate re.sub() calls:The question:Would it be possible to combine these two re.sub() calls into a single one?In other words, I want to replace something at the beginning of the string and then multiple similar things after, all of that in one go.I've looked into regex module - it's ability to capture repeated patterns looks very promising, tried using regex.subf() but failed to make it work.
You can indeed use the regex module and repeated captures. The main interest is that you can check the structure of the matched string:(Note that you can replace "name" by \w+ or anything you want without problems.)
Please do not do this in any code I have to maintain.You are trying to parse syntactically valid Python.  Use ast for that.  It's more readable, easier to extend to new syntax, and won't fall apart on some weird corner case. Working sample:Prints:
You could do this.  Though I don't think it's very readable.  And doing it this way could get unruly if you start adding more patterns to replace.  It takes advantage of the fact that the replacement string can also be a function.
You can use re.findall() and a simple string formatting:


Answer URL
https://docs.python.org/3/library/ast.html
