Natural Text
I'm testing the tuple structure, and I found it's strange when I use the == operator like:When I assign these two expressions to a variable, the result is true:This questions is different from Python tuple trailing comma syntax rule in my view. I ask the group of expressions between == operator. 
Other answers have already shown you that the behaviour is due to operator precedence, as documented here.  I'm going to show you how to find the answer yourself next time you have a question similar to this.  You can deconstruct how the expression parses using the ast module:From this we can see that the code gets parsed as Tim Peters explained: 
This is just operator precedence.  Your firstgroups like so:so builds a tuple with a single element from the result of comparing the one-element tuple 1, to the integer 1 for equality  They're not equal, so you get the 1-tuple False, for a result.
When you do it builds a tuple with the result from comparing the tuple (1,) with an integer and thus returning False.Instead when you assign to variables, the two equal tuples are compared with each other.You can try:


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
https://docs.python.org/3/library/ast.html
