Natural Text
As part of a script I am making, I want to sort a series of points in a counter-clockwise order around a central point, which we will call 'a'.I have a function that determines, for two points 'b' and 'c', if c is to the right of or left of the ray a->b. This function is right_of(a, b, c), and it is tested and works.I want to use this function to sort a list of tuples with 2-d coordinates e.g. [(0, 0), (0, 1), (1, 1),...]. However, each time I sort, there will be a different point 'a' to pass to the function right_of(). What I want is a 'function' returnSortFunction(a) that will return a function with two arguments, f(b, c),  and and when f(b, c) is called on each pair of coordinates as I sort, it should return the result of right_of(a, b, c) with 'a' already filled in.I have tried to implement this using a factory, but I don't think I understand factories well enough to do it correctly, or determine if that is not what a factory is for. How can I build this feature?
You can have a function return a function, no problem. A simple way to do it is something like
You need a wrapper function around your right_of function.  You could use a lambda, but I think your logic is going to be more complicated than that.  Assuming you want to pass in a function as a comparator to your sorting method, it's going to look something like this:
Functions are first class objects in python, so you can do something like this:For your specific context you should also check out functools module, specifically partial function. With it, you can 'partially' prepare arguments to your function like this:That will work, because right_of_5 will automatically fill right_of first argument - a - with number 5.


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
