Natural Text
I'd like to convert some ctypes code to use cython instead, but I'm struggling.Essentially, the ctypes code:copies the contents (floats)  of two lists into C-compatible structssends the structs to my binary via FFIreceives the structs back (the length is never modified)copies the contents to two new listssends the structs back across the FFI boundary so their memory can be freedMy ctypes code looks like this so far:rlib.hmylib.pxdutil_cython.pyxsetup.pyI have a few questions about how to proceed:Firstly, the compilation step is currently failing:Why is Cython failing to convert _Result_tuple?  Secondly, how do I define a cython function to accept lists (or arrays; anything that supports __iter__), and copy their contents into _FFIArray structs, so I can call call_convert_bng?
The following is untested, because I don't have the library code and have had to take some guesses as to how it works. But it should give you an idea as to how you go about it.I'd start by using a Python array type to store your input/output. Either the standard library array type, or numpy arrays. These store the arrays continuously in memory (like C would) and so provided the _FFIArray data attribute can just be pointed at this memory for input.


Answer URL
https://docs.python.org/3/library/array.html
