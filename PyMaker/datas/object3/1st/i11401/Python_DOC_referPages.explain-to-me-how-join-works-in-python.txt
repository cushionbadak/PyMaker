Natural Text
I have created an answer validation code for use in a troubleshooting program. I have used the obvious validators for number answers (using the try/except method), however I now have yes/no questions as well. I scoured the internet and stack exchange and found one method that removes any integers from the answer (not just ones on the edges of an answer like .strip()). It uses the join method:So if the user inputted 'Y312eS2', then it would accept that as a 'yes' answer. I want to know how it works though, because I have to explain it and all examples of .join() on the internet don't use it this time.Can anyone help me?
iterates over all characters in a and yields only the ones that are alpha but not numeric (c.isalpha() is True)concatenates the list of characters to one string without separators:
You have a str.join() method. This method simply puts all values in the iterable argument (which must be strings) together into a new string with the string object on which you called it as the joiner:In your example, the empty string '' is used, so there is nothing separating the strings being joined:The input to the method is a generator expression:This simply passes on all characters from a to the str.join() method if they are letters; str.isalpha() only returns true then, and not for numbers or whitespace or any other type of character:So ''.join(c for c in a if c.isalpha()) joins all characters from c that are letters into a new string, effectively filtering out anything else.
.join() it self has nothing do to with removing certain characters from a string, or validating anything..join() simply takes the string that it was called upon ('x' in case of 'x'.join()), concats it to every string in the iterable it got as a parameter and returns the whole thing as a single string.For example:In the example in your code, a conditional statement was added to the iterable that was passed to .join(), so it would take only the strings that are letters.
the .join() method is usually used to convert a list to a string.you have a list comprehension plugged in to the method.  https://docs.python.org/2/tutorial/datastructures.html#list-comprehensionsThe list is built, and the .join() method concatenates each character in the list you've built with a separation character (in your case, none '').https://docs.python.org/2/library/string.html#string.join


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/tutorial/classes.html#generator-expressions
https://docs.python.org/3/library/stdtypes.html#str.isalpha
