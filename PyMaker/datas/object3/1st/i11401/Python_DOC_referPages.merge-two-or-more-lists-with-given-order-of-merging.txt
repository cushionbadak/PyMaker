Natural Text
On start I have 2 lists and 1 list that says in what order I should merge those two lists.For example I have first list equal to [a, b, c] and second list equal to [d, e] and 'merging' list equal to [0, 1, 0, 0, 1].That means: to make merged list first I need to take element from first list, then second, then first, then first, then second... And I end up with [a, d, b, c, e]. To solve this I just used for loop and two "pointers", but I was wondering if I can do this task more pythonic... I tried to find some functions that could help me, but no real result.
You could create iterators from those lists, loop through the ordering list, and call next on one of the iterators:It's possible to generalize this solution to any number of lists as shown belowIf the ordering list contains strings, floats, or any other objects that can't be used as list indexes, use a dictionary:Of course, you can use integers as dictionary keys as well.Alternatively, you could remove elements from the left side of each of the original lists one by one and add them to the resulting list. Quick example:I would expect the first approach to be more efficient (list.pop(0) is slow).
How about this,


Answer URL
https://docs.python.org/3/library/functions.html#next
