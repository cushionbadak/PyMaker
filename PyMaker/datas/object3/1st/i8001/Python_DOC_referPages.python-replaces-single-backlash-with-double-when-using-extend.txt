Natural Text
This question already has an answer here:Why do backslashes appear twice?                    2 answers                Windows path in Python                    3 answers                I have a dictionary:I iterate over it:But I get this error:It can't find my file. Why does it think there are double backslashes in file path? 
The double backslash is not wrong, python represents it way that to the user. In each double backslash \\, the first one escapes the second to imply an actual backslash. If a = r'raw s\tring' and b = 'raw s\\tring' (no 'r' and explicit double slash) then they are both represented as 'raw s\\tring'.For clarification, when you print the string, you'd see it as it would get used, like in a path - with just one backslash:And in this printed string case, the \t doesn't imply a tab, it's a backslash \ followed by the letter 't'.Otherwise, a string with no 'r' prefix and a single backslash would escape the character after it, making it evaluate the 't' following it == tab:So in the PDF path+name:More info about escape sequences in the table here. Also see __str__ vs __repr__.
Double backslashes are due to r, raw string:It is used because the \ might escape some of the characters.
It doesn't. Double backslash is just the way of the computer of saying backslash. Yes, I know this sounds weird, but think of it this way - in order to represent special characters, backslash was chosen as an escaping character (e.g. \n means newline, and not the backslash character followed by the n character). But what happens if you actually want to print (or use) a backslash (possibly followed by more characters), but you don't want the computer to treat it as an escaping character? In that case we escape the backslash itself, meaning we use a double backslash so the computer will understand it's a single backslash.It's done automatically in your case because of the r you added before the string.
save yourself from getting a headache you can use other slashes as well. if you know what I saying. the opposite looking slashes.you're using nowPDF = 'C:\Users\user\Desktop\File_%s.pdf' %itemtry to use **PDF = 'C:/Users/user/Desktop/File_%s.pdf' %item**it won't be treated as a escaping character .
alwbtc @I dare say: "I found the bug..."replace with in fact you were really looking for File_pencil.pdf (not File_055123.pdf).You were sliding the index dictionary not its contents.This forum topic maybe a side-effect.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
