Natural Text
If I had a dict object say values = {'a': 'alpha', 'b': 'bravo'}.I've seen use cases where one may do values['a'] to get the value of the a key.Now I am aware this is a normal way to access dict values, but I have also seen it used with objects such as a Tk.Scrollbar['command'] = yadayada.Is there a name or documentation for this practice of using [ ] with objects?
The [ ] is called indexing or slicing (or sometimes array/sequence/mapping-like access). The x[idx] = val is called index or slice assigment.The methods that are responsible how the instance acts when indexed or sliced are:__getitem__, __setitem__ and __delitem__. (In Python-2.x there is also __getslice__, ... but these are deprecated since python 2.0 - if you don't inherit from a class that uses these you shouldn't need those)For example (missing any actual implementation, just some prints):For example:
This is briefly described in the python tkinter documentation. Tkinter does it simply as a convenience, the feature has no name that is specific to tkinter.https://docs.python.org/3.6/library/tkinter.html#setting-optionsOptions control things like the color and border width of a widget. Options can be set in three ways:At object creation time, using keyword argumentsfred = Button(self, fg="red", bg="blue")After object creation, treating the option name like a dictionary indexfred["fg"] = "red"fred["bg"] = "blue"Use the config() method to update multiple attrs subsequent to object creationfred.config(fg="red", bg="blue")For more general purpose information outside of the context of tkinter, see A python class that acts like dict


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getitem__
https://docs.python.org/3/reference/datamodel.html#object.__setitem__
https://docs.python.org/3/reference/datamodel.html#object.__delitem__
