Natural Text
I am working on an Python assignment and I am stuck here.Apparently, I have to write a code that counts the number of a given substring within a string. I thought I got it right, then I am stuck here.if I run this, I expect to get 2 as the result, rather, I get 3...See, other examples such as ana and banana works fine, but this specific example keeps making the error. I don't know what I did wrong here.Would you PLEASE help me out.
In your codecorrectly advances over the target string theStr, however thekeeps looking from the start of theStr.The str.find method accepts optional start and end arguments to limit the search:str.find(sub[, start[, end]])Return the lowest index in the string where substring sub is found  within the slice s[start:end]. Optional arguments start and end  are interpreted as in slice notation. Return -1 if sub is not found.We don't really need to use in here: we can just check that find doesn't return -1. It's a bit wasteful performing an in search when we then need to repeat the search using find to get the index of the substring.I assume that you want to find overlapping matches, since the str.count method can find non-overlapping matches, and since it's implemented in C it's more efficient than implementing it yourself in Python.outputThe core of this code isi is initialised to 0, so we start searching from the beginning of theStr, and because of i = j + 1 subsequent searches start looking from the index following the last found match.
The code change you need is -instead ofIn your code the substring is always found until i reaches position 4 or more. But while finding the index of the substring, you were using the original(whole) string which in turn returns the position as 1.In your example of banana, after first iteration i becomes 2. So, in next iteration str[i:] becomes nana. And the position of substring ana in this sliced string and the original string is 1. So, the bug in the code is just suppressed and the code seems to work fine.If your code is purely for learning purpose, the you can do this way. Otherwise you may want to make use of python provided functions (like count()) to do the job.



Answer URL
https://docs.python.org/3/library/stdtypes.html#str.find
https://docs.python.org/3/library/stdtypes.html#str.count
