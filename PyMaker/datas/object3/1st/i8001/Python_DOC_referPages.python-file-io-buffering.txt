Natural Text
I need to iterate over the lines of a couple of text files a couple of times.This is currently done with multipleAlthough performance is not an issue yet, I'd like to read the files only once into an io.StringIO buffer and then work with that.Python io docs:https://docs.python.org/3/library/io.htmlhttps://docs.python.org/3/library/io.html#io.IOBasehttps://docs.python.org/3/library/io.html#io.TextIOBasehttps://docs.python.org/3/library/io.html#io.StringIOThis is a working snippetor wrapping it in a with statement context managerQuestionsIs this a "good" way of doing it, what are alternatives?What happens to the file object used to read the file (there's no way to explicitly close() it this way)?Where can I read more about Python's io buffering (I think I read something about Python optimizing multiple file accesses by buffering automatically)?
What you're doing is already the right way. Quoting from this answer: How to read large file, line by line in pythonThe with statement handles opening and closing the file, including if an exception is raised in the inner block. The for line in f treats the file object f as an iterable, which automatically uses buffered IO and memory management so you don't have to worry about large files.


Answer URL
https://docs.python.org/3/library/io.html
https://docs.python.org/3/library/io.html#io.IOBase
https://docs.python.org/3/library/io.html#io.TextIOBase
https://docs.python.org/3/library/io.html#io.StringIO
https://docs.python.org/3/reference/compound_stmts.html#with
https://docs.python.org/3/reference/datamodel.html#context-managers
