Natural Text
I have the following dictionary:I want to get the following results:
You could do the following:Note that the order on the inner dict is random.There are two interesting points to this:the generator expression that counts the lists that contain item: sum(1 for x in dictA if item in dictA[x]).and the dict comprehension that gets the count in each list: {k: v.count(item) for k, v in dictA.items()}But they are both relatively easy to read so I will leave that to you for now. If you have any questions feel free to ask though.
If the lists are very large, it might pay off to create collection.Counter instances first, instead of repeatedly calling list.count:The result can then be assembles using a "simple" nested dictionary-comprehension:



Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
