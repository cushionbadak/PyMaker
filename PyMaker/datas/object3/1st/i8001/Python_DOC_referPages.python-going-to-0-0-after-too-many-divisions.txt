Natural Text
So, I have the following code:But right at the last part of the loop, python decides that half is now 0.0Did I reach python's limit? Do I need to install a package to go farther? I'm not sure why this is happening, but I'm assuming that python just reached  limit
TLDR: try Fractionwill giveYou can find out the smallest available positive float withthen following your example we will find thati.e. next division by 2 seems to be less than smallest available positive float.Btw their difference is equal tobut it is interesting thatwhileP. S.: dividing Fraction objects by floats will give us floatso your code with dividing by 2.0 will give the same result and for correct working with Fractions you should add/subtract/divide/multiply it with ints or other Fractions likeP. P. S.: there is a convention about using underscore as a name for unused object, so it will be better to write
Yes, essentially, you have reached the Python's limit. The decimals lose precision as you go on.One possible way would be to use the Fraction class, as suggested by Azat.However, you can also use the Decimal class.Here is the example provided on the page linked above. This treats the number as an object and not as a primitive/built-in variable:getcontext().prec = 6 line is the one that sets the precision. You can change the number 6 to whatever you need.Usually, the precision to 324th decimal place (as in your example) is not necessary, so Python only stores a few digits as binary fractions. Using the Fraction or the Decimal classes allows you to extend the functionality, but it can also slow down the code significantly if you use it repetitively (in loops for example).


Answer URL
https://docs.python.org/3/library/decimal.html
https://docs.python.org/3/tutorial/floatingpoint.html
https://docs.python.org/3/tutorial/floatingpoint.html
