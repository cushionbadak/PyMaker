Natural Text
I would like to initialise a global variable, in this case a dict called DOC, after passing a number of command line arguments and using the click library.I have tried the following:But when I run it, the output is:Could you please help me understand:Why I do not see hi! being printed?Why if I replace @click.command() with @cli.command() it does not recognise the command-line option --logger-file?
A couple of misunderstandings about how click works.Why I do not see hi! being printed?Click is a framework for writing cli programs.  After the framework calls your handlers, it does not return...What is @click.group()?This question:Why if I replace @click.command() with @cli.command() it does not recognize the command-line option --logger-file ?is related to what @click.group() does.  A group is a special processor intended to implement sub commands.  So in your case, using a group click will parse any --flags before the subcommand.  But you don't have any subcommands so the --flags will be consumed by the group.  Just remove the group as you don't need it.Code:Notes:You had set the --loggerfile to required but also specifying a default.I used os.path.expanduser() instead of directly using an environment variable.In setting the variable DOC, you need to tell python it is a global.But, why a global?  After you understand the answer to the first question at the top of this post, you will realize that any functionality that this program implements will need to be called from the the same function that you are parsing the yaml in.  So, you likely should just pass it as a variable....
Assigning to a global variable from a function requires a global declaration.Group commands are invoked by name, so when you use @cli.command you need to write:$ python3 etc.py cli_logger_file --logger-file=foo.yml


Answer URL
https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python
