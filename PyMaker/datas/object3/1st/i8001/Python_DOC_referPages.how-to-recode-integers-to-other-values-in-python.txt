Natural Text
I was surprised this question has not been asked yet. Given an array of integersHow can I (easily) change all values according to some systematic rule, such as The rule may be more complex than this, e.g. recode 1=2 and 2=1 so that the order plays a role.
While others may suggest just using a dictionary, I would suggest using something that is actually made for this particular type of behavior rather manually using a dictionary, Python's map function.map takes a function and applies it to each input, and returns the result of that as a list.  So you would create your if x == y, return z as a function and apply map(yourfunction, yourlist) to it. The nice thing about map is that you can use it on any iterable, and not just your listNormal python versionNumpy version (numpy uses vectorize as its map)Additionally if your number map function had a large amount of comparisons (larger than the 3 you list here) you might consider using python's dict in order to increase performance given O(1) armortized element access times, for example:You probably wouldn't want to do this in the simple case because of the armortized gotcha on dictionary run time performance and constant overhead.  Amortized basically means that taking into account all operations you will make that are armortized, the cost of the most expensive operations will be offset by the cheapness of the less expensive ones.  Occasionally dictionary mutation can be expensive; taken as a whole, many dictionary mutations will not be expensive compared to other data structures. Dictionaries also have larger indexing overheads compared to things like arrays.  In a naive implementation, you will typically have to iterate over lists given your key to find your value and in more complicated scenarios, often more guaranteed overhead is involved
The most straightforward way would just be to iterate over the array replacing values.
Use map to do the transformation. map takes a transformation function and a list of inputs and outputs the result of applying that function to all of the inputs systematically.For example:


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
