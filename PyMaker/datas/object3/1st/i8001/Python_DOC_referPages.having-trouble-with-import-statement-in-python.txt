Natural Text
My current projects are structured like so.I wanted to import a class from project_3/program_3.py, called INFO, from both project_1/program_1.py and project_2/program_2.py.  In both my program_1.py and program_2.py, I've tried the following import statements that didn't work.Edit - I typically "cd" into project_1 and run my program_1.py from there.The only way for me to import class INFO into program_1.py and program_2.py is by copying program_3.py in both program_1 and program_2's folder.  My import in program_1 and program_2's statement would become:This is quite inconvenience because now I have to update program_3.py in all 3 locations.  Assuming my the way I structured my project folder is retarded:What's the correct/best way to structure my folders so that I could call program_3.py from program_1/2.py?If there's nothing wrong with my current structure, how do I correctly import the INFO class into program_1/2.py?I have read the python documentation but it didn't say anything regarding importing classes from one subfolder to another.  I also looked at another post from Stack Overflow as well but it didn't have the same structure as mine.Update 1 - It's important to note that I'm merely using project_1/2 as folder to organized my projects.  I originally had init.py in all my folders because I have no clue what I'm doing.  The only module/package that I wanted to import in my project_1/program_1.py is from project_3/program_3.py.  Example:
When using submodules, you need to use relative imports. In the example provided, importing program_3 from program_1 should be :and then you can use the INFO class: program_3.INFO. This works if your executable file is outside the script, that is the file which uses the module python in the example should be outside the python module. If parts of the python package  are executed as a script, the -m option should be passed to the interpreter: I hope this helps.
The previous solution provides me the same error.I found a fix by using sys:This way, you setup 'python' folder as reference (in your case it's the parent folder but you can select the path you want)I hope it helps,


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages%22Python%20Documentation%22
