Natural Text
just doing a reveiw of my python class and noticed that I forgot how to do this. I know it's super simple and I'm overlooking something but I'd appreciate some help!I'm getting this error:middle1 = lst.pop((len(lst) / 2) - 1)TypeError: integer argument expected, got floatWhat am I doing wrong?
When you upgraded to Python 3, the '/' operator changed from giving you integer division to real division.  Switch to '//' operator.
You can use // operator:
The other answers explained why you are getting the error.  You need to use // instead of / (also, just for the record, you need to give list.insert integers, not lists).However, I'd like to suggest a different approach that uses Explain Python's slice notation:This method should be significantly faster than usinglist.pop and list.insert.As proof, I made the below script to compare the two methods with timeit.timeit:The results were as follows:As you can see, my proposed method was ~2 seconds faster.  However, you can run more tests if you would like to validate mine.
Using pop and insert (especially inserting at positions 0 and 1) can be fairly slow with Python lists.  Since the underlying storage for the list is an array, inserting at position 0 means that the element at position n-1 has to be moved to position n, then the element at n-2 has to be moved to n-1 and so on. pop has to do the same in reverse. So imagine in your little method how many element moves must be done. Roughly:So approximately 3n moves are done in this code.Breaking the list into 3 slices and reassembling a new list may be more optimal:Plus you won't run into any weird issues by pop changing the length of the list between the first and second call to pop. And the slices implicitly guard against index errors when you get a list that is shorter than 2 characters.


Answer URL
