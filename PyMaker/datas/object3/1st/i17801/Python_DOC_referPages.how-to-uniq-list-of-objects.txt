Natural Text
How to uniq list of objects in Python, saving order  ?Two object uniq, if 
If we use the objects in hashable collections, we should define __hash__ and __eq__ functions.I have used (self.p1 << 64) | self.p2 as hash, with the assumption that the numbers p1 and p2 will not exceed 2^64 (18446744073709551616).This works but don't do this. The class which you have created is mutable, which means the state of the object can be changed (basically you ll be changing p1 and p2). If the state of the object can change, the hash value will also change. As you see, we rely on __hash__ to store the object in OrderedDict.
I'm changing my answer to preserve order. You can define just equality (by adding an __eq__ method) and append your items one by one into a new list, while checking if they are already present:
Using collections.OrderedDict:prints
Alternatively, with a generator that keeps track of the keys it's already seen using a set:
You could do something that feels hacky, but should work for you:


Answer URL
