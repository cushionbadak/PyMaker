Natural Text
I am using Java to convert a double into a byte array. Like this:Now, I would like to convert this byte array back into a double. In Java I would do it like this:Now, how can I write the toDouble() method in Python?
Python has the struct module to convert bytes back to float values:Here 'd' signifies that a double value is expected (in native endianess, as 8 bytes). See the module documentation for more options, including specifying endianess.Another option is to turn your bytes value into an array object; you'd use this is if you had a homogenous sequence of doubles:where every 8 bytes is interpreted as a double value, making doubles_sequence a sequence of doubles, addressable by index. To support a different endianess, you can swap the byte order with doubles_sequence.byteswap().
You want the struct module:The pack method gives you a bytes in Python 3.x, or a str in Python 2.x. This type isn't mutable like a Java byte[], and in 2.x it also acts like a sequence of single-character strings, not a sequence of numbers from 0-255. If you need to fix either of those, just convert it to bytearray.Also, note that—in both Java and Python—you probably want to specify an explicit endianness more often than not, especially if you're planning to save the bytes to a file or send them over the network. See Format Strings for details.So:


Answer URL
