Natural Text
Is it okay to initialize the state of a multiprocessing.Process subclass in the __init__() method?  Or will this result in duplicate resource utilization when the process forks?  Take this example:As I note in the code, you cannot communicate with the process via the instance p, only via the Pipe so if I do a bunch of setup in the __init__ method such as create file handles, how is this duplicated when the process forks?Does this mean that subclassing multiprocessing.Process in the same way you would a threading.Thread a bad idea?Note that my processes are long running and meant to handle blocking IO.
This is easy to test. In __init__, add the following:Then run:That means that at least on my system, copying your code and adding that call, the file was opened once, and only once.For more about the wizardry that is strace, check out this fantastic blog post.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#the-process-class
