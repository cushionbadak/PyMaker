Natural Text
I have a key-value (ID, tag) formatted CSV file containing the following:1,art2,fine art;masterpiece3,modern art4,artifact;artefact5,articleMy goal is to use python to return only IDs 1, 2, and 3, which are the tags with the word "art" explicitly within them. When I use the find() function (myfile.find("art")), it finds IDs 1-5.  My first thought was to look to the characters around the string "art" in the tags.  Maybe I could use the isalpha() function to ask if the character before and after the string "art" are indeed letters, not punctuation. However, this is one of the first python scripts I have written, so there may very well be a REGEX that does this in one line that I am not aware of.Any help would be greatly appreciated.
You could use a regex with a \b assertion:As explained in the docs, \b matches a boundary between a 'word' and a 'non-word' character (or vice versa), or between a word character and the beginning/end of the string. 
You need to build a lookup index which implements your indexing logic. Read your file, parse each CSV line, and update a lookup index based on a dict for example. Each item in the lookup index should be normalized, lower case for example, and points to a list of IDs.Here is a small snippet:
You can use this code:This allows you to determine the lines in which art (and not artifact) is containted. Or like this:
Simple and Sweet : use \b - Word Boundaries


Answer URL
https://docs.python.org/3/library/re.html
