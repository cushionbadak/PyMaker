Natural Text
I've recently been practicing using map() in Python 3.5.2, and when I tried to run the module it said the comma separating the function and the iterable was a SyntaxError. Here's the code:I noticed that if I eliminate the conditional statement like this:it works fine, but it sacrifices the ability to avoid attempting to add items to the list that aren't in the dictionary. Interestingly enough, there also weren't any problems when I tried using a conditional statement with reduce(), as shown here:Yes, I know I could do the exact same thing more cleanly and easily with a list comprehension, but I consider it worth my time to at least learn how to use map() correctly, even if I end up never using it again. 
You're getting the SyntaxError because you're using a conditional expression without supplying the else clause which is mandatory. The grammar for conditional expressions (i.e if statements in an expression form) always includes an else clause:In your reduce example you do supply it and, as a result, no errors are being raised. 
In your first example, you don't specify what should be returned if the condition isn't true.  Since python can't yield nothing from an expression, that is a syntax error.  e.g:You might argue that it could be useful to implicitly yield None in this case, but I doubt that a proposal of that sort would get any traction within the community... (I wouldn't vote for it ;-)
While the others' explanations of why your code is causing a SyntaxError are completely accurate, the goal of my answer is to aid you in your goal "to at least learn how to use map() correctly."Your use of map in this context does not make much sense. As you noted in your answer it would be much cleaner if you used a list comprehension:As you can see, this looks awfully similar to your map expression, minus some of the convolution. Generally, this is a sign that you're using map incorrectly. map(lambda... is pretty much a code smell. (Note that I am saying this as an ardent supporter of the use of map in Python. I know many people think it should never be used, but I am not one of those people, as long as it is used properly.)So, you might be wondering, what is an example of a good time to use map? Well, one use case I can think of off the top of my head is converting a list of strs to ints. For example, if I am reading a table of data stored in a file, I might do:Which would leave me with a 2d-array of ints, perfect for further manipulation or analysis. What makes this a better use of map than your code is that it uses a built-in function. I am not writing a lambda expressly to be used by map (as this is a sign that you should use a list comprehension).Getting back to your code, however... if you want to write your code functionally, you should really be using filter, which is just as important to know as map.Note that I was unable to get rid of the map(lambda... code smell in my version, but at least I broke it down into smaller parts. The filter finds the words that can be translated and the map performs the actual translation. (Still, in this case, a list comprehension is probably better.) I hope that this explanation helps you more than it confuses you in your quest to write Python code functionally.


Answer URL
https://docs.python.org/3/reference/expressions.html#conditional-expressions
https://docs.python.org/3/library/functions.html#filter
