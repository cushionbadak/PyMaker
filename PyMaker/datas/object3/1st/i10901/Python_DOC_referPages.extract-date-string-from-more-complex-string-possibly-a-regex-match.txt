Natural Text
I have a string template that looks like 'my_index-{year}'.  I do something like  string_template.format(year=year) where year is some string. Result of this is some string that looks like my_index-2011. Now. to my question. I have a string like my_index-2011 and my template 'my_index-{year}' What might be a slick way to extract the {year} portion? [Note: I know of the existence of parse library]
There is this module called parse which provides an opposite to format() functionality:Parse strings using a specification based on the Python format() syntax.And, an alternative option and, since you are extracting a year, would be to use the dateutil parser in a fuzzy mode:
Use the split() string function to split the string into two parts around the dash, then grab just the second part.
I assume "year" is 4 digits and you have multiple indexes ---update---output
Yes, a regex would be helpful here.  Edit: I should have mentioned your regex can be more sophisticated.  You can haul out a subcomponent of a more specific string, for example:Given the problem you presented, I think any "find the year" formula should be expressible in terms of a regular expression.  
You are going to want to use the string method split to split on "-", and then catch the last element as your year:Because you caught the last element (using -1 as the index), your index can have hyphens in them, and you will still extract the year appropriately.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
https://docs.python.org/3/library/re.html#simulating-scanf
