Natural Text
This question already has an answer here:How to remove the left part of a string?                    17 answers                I have string like: st= 'Product=Product Name 25'Want to lstrip. output desired:  out= 'Product Name 25'For this i am doing like out = st.lstrip('Product=')Here I am getting as output as out= 'Name 25'.This is I don't want.As it is removing all occurence in my string but need to remove the first occurence.Desired output should be: out= 'Product Name 25'
Use split instead:
Use replace instead:If it wasn't for the '=' you could have also take advantage of the count argument that replace has, for example:
You could do out = st.replace('Product=Product','Product') or out = st.replace('Product=Product',''). I tend to find that simple and readable. 
Just in case you're reading key-value pairs from a text file, there's a python module in the standard library for that: ConfigParser
According to the documentation, the lstrip function remove the characters in chars.So st.lstrip('Product=') removes "P", "r", "o", "d", "u", "c", "t", "=" at the beginning of "Product=Product Name 25". Then, the two words are removed!I think your string represents a "key=value" pair.The best way to split it is to use split() method:You get:Only the value:You get:If you want a "left-trim":You get:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.lstrip
