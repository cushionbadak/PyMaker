Natural Text
I have a list like [('a',2),('a',3),('b',3),('c',2),('b',4)]I want to sum all similar keys and get [('a',5),('c',2),('b',7)] in any order is fine.Is there a better way to do this instead of using a dictionary. Preferably using list comprehension something like [i for j in a for ...]In Python-3, the last line requires list(zip(d.keys(),d.values()))
This is feasible alternatively with itertools.groupby in a list comprehension, although your approach seems fine and there is no inherent benefit to always using list comprehensions. Getting worked up about an extra line or two of code with no further issues is a fruitless venture, IMHO. It may also make sense to maintain this result as a dictionary instead of a list in case you wish to further add to any of the counts - the dictionary is the more suitable structure. Using the itertools.groupby approach, you are summing the sorted groups based on first tuple elements. Outputs:This would evidently also work (and perhaps be better suited) as a dictionary comprehension


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
