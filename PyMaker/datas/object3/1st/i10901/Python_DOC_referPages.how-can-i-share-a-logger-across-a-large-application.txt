Natural Text
I have an application that consists of many distinct modules, yet everything is still part of a single application. How can I properly share a logger, so that everything writes to the same file. Do I need to pass a logger around? I'd prefer not to have to do this.Example project layout:I want to be able to define a logger in main_application.py like so:Then be able to use logger in functions_group1, functions_group1, functions_group3 which are imported like this in main_application:Each of these files has only a list of functions (grouped by similar functionality)functions_group1How can I share the logger across the entire application?
I think the point that you are missing is that by default, Python loggers are hierarchical. In your main application you simply create a logger with a fixed name (you can use the name of the main script). For example:where appname() is defined as:In any of your modules you can either get the root logger or get a child of the root logger.Any logging that module_logger performs will be handled by the root logger. There's much more you can accomplish with the logging module. Maybe another read of https://docs.python.org/2/howto/logging.html with a different perspective will be valuable.


Answer URL
https://docs.python.org/3/howto/logging-cookbook.html
https://docs.python.org/3/howto/logging.html
