Natural Text
I have a package X which contains two different things named YOne is a module:The other is a variable:If I execute from X import Y which Y do I get and why? What determines the order and shadowing rules for import statements?Lastly, is there anything I might do accidentally that would change the answer?Basically I got a bug report that indicates on a user's machine this code results in the opposite Y importing from what I get on my machine. I don't have access to the user's machine, so I am trying to figure out what happened.I am wondering if there are clues in this previous question:python: from x import y changes previous import result
Modules in packages, once imported, are also set as an attribute on the parent module object. The from module import name syntax, however, will first look at the attributes of the imported module object (the globals of X) to resolve name.So, the answer is that it depends. If you have not imported the X.Y module yet, then you'll end up with Y bound to 'world'. If you have imported X.Y (with import X.Y or from X.Y import some_name), then Y is bound to the X.Y submodule. The latter is a side-effect of Y in X having been set as a global.Demo:
A name in the module will take precedence.  From the Python tutorial.Note that when using from package import item, the item can be either a submodule (or subpackage) of the package, or some other name defined in the package, like a function, class or variable. The import statement first tests whether the item is defined in the package; if not, it assumes it is a module and attempts to load it.The same information is given in the language reference.However, if any code imports the submodule (by other, more explicit means, such as import X.Y, where Y can only refer to a module), then the submodule will also exist as a name in the package.  So in that case it will depend on the order of the code: once you import the module, it will overwrite the variable of the same name.
Python looks first on the current working directory for any file Y.py under X folder, then it looks for the installed libraries for X package to import Y file. If there is a Y variable in the package X then it is imported and then replaced by the content on file Y.py of that package


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages
https://docs.python.org/3/reference/simple_stmts.html#the-import-statement
