Natural Text
I just spent an hour trying to figure out the magic syntax to solve the following problem in Python with the 're' package. I have hacked around it for the moment, but would like to set out the challenge:The following strings represent our test:The objective is to extract 'song', 'song', and 'song title' from these with a single regex.My attempt:I won't bore you with the various combinations I tried so far. My workaround adds the ampersand '&' to the exclusion set in the capturing parentheses. However, I'd rather not assume that the extracted string cannot include '&'.
I'd use a similar pattern as Dmitriy's, but a more linear one:See regex demo.Explanation:\*Structure - a literal substring *Structure\s - a whitespace (replace with [ \t] to only match a normal space or tab, or with a mere space if you only need to match a space)(.*?) - Group 1 capturing 0+ chars other than a newline, as few as possible up to the first ...(?=\s(?:&lt;|\|)) - (a positive lookahead requiring) \s - a whitespace followed with either...&lt; - a substring &lt;| - or... \|  - a literal pipe symbol.A faster synonymic alternative (as it is based on the unroll-the-loop principle) regex will look likeSee this demoIt is the same regex but written in the most linear way.
I would suggest using non-greedy "anything" followed by "&lt;" or pipe char represented as lookahead:Demo: https://regex101.com/r/rT3oV5/2


Answer URL
https://docs.python.org/3/library/html.html#html.unescape
