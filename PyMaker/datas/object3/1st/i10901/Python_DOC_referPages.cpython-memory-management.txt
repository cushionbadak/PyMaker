Natural Text
I am writing a CPython module mrloader on top of a C library, I compiled source code and started making some tests.Python takes 4 Gb of RAM to run 100 iteration loop to get some data from network. This is a big problem, so I used resource to limit the amount of RAM and test if the Python GC's frees the memory. I got a Segmentation fault.I used this documentation and this to write the module, and I think I am doing something wrong when the objects being collected, because if I don't limit the RAM it finishes the 100 loop but it uses 4Gb of memory.In the mrloader CPython code I have a struct like so:The Python test is like so:In the CPython code, the destructor is declared like so:Am I correctly deallocating the memory ?I appreciate your time helping me.
I found the solution, I was using PyArrayObject that I did not keep a pointer for in the declared struct. The memory was not being released because of this huge numpy array.So my struct look like this now:And in the deallocate function, I called free() before destroying the PyObject self. Now the program does not uses more than 100Mb, the array is big.Deallocate function:


Answer URL
https://docs.python.org/3/library/gc.html
