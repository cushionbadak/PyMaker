Natural Text
I'm confused.Returns False. This seems to be a problem with keyword strings, as "list" fails as well. "empt" and other strings return true. This only seems to happen with tuples, as if foo is a list the code also returns trueI've tested this with python 3.4.3 and python 3.5 and both behave this way, python2.7 doesn't seem to have this issue though and returns true as expected.Am I missing some standard on tuples in python3? I've attempted to google-foo this problem but am coming up short.Edit:To clear things up, my exact question is why doesreturn False, butreturn True?
As the other answers already mentioned: You are comparing strings by identity and this is likely to fail. Assumptions about the identity of string literals can not be made.However, you actually found a subtle issue.(Tested with Python 3.5.1+ interactive shell)This is plainly implementation-dependent behavior by some component of python, presumably lexer or parser.Bottom-line: Use == for string comparison, as long as you do not depend on object identity.
Equals toAs mentioned here Comparing stringsAlso read this Built-in Functions - id
Using a literal value with is is almost certainly going to give you an implementation-dependent result. The only literal that Python guarantees to be a singleton is None. Any other literal may or may not resolve to a reference to an existing object. You can't assume that the interpreter will "recognize" the duplicate value and use the same underlying object to represent it.


Answer URL
https://docs.python.org/3/library/functions.html#id
