Natural Text
My project structure is like this:Contents of __init__.py:mod2 contains a class called classA.Inside mod1 I am importing classA like this:However I get an error saying "No module named base".Note: import mod2 works. However, I want to use the absolute path approach, but it does not work. Can anyone tell me what I am doing wrong?EDIT: I am executing the python script from the base directory. Also, base is in sys.path (just verified).EDIT 2: I want to import the class in a similar way.
UPDATE 3: If you want to import a submodule from within the package directory, which is base, you could use this (omitting the base part in the import) in the file/module mod1.py,The above solution also works with run_test_1.py and run_test_2.py scripts. Hope this helps =)UPDATE 2: I will demonstrate the same approach by executing a python script from the test directory,create a script called run_test_1.py under test directory following the same structure as "UPDATE 1", with the following contents:Also create a second script called run_test_2.py under test directory as well, with the following contents:Evaluate both scripts from your terminal like so,As demonstrated you should get the output of "hello" on your terminal.UPDATE 1: I created the same directory structure for your package like so under a directory called test,Contents of __init__.py is the same as yours.Contents of mod1.py is the same as yours,Contents of mod2.py:Then using the python interpreter from the directory test, I tested the following,If you are sure that base directory is in the sys.path then you could try this,from base import mod2Also I suggest you change base to something more informative for your project.EDIT: I also suggest you check the "Packages" documentation on the Python website, which also discusses how to load a submodule.


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages
