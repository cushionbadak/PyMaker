Natural Text
I have a list of lists (the amount of lists which is created each time the code runs is passed in as an argument), and in each list I need to iterate over the items of each of the second lists in the x amount of lists.The simplified format would be:And I need to iterate through the list doing (4 + 7 + 10), (5 + 8 + 11) and (6 + 9 + 12).I haven't made much progress in coding this, at the moment I am just adding together the items in each of the second lists:The end result should be mean_list = [21, 24, 27] using the example above.
You can use the following list comprehension. The first zip is to select the second lists within each sublist and the second is to interleave the elements from these in order to simply take the sum and the mean:
Some comprehension, sum and zip magic:To get the mean, divide by the length:
I dont't know what is the exact purpose but hardcodedly we can do this....Outputs[21, 24, 27]
You can easily do this with numpy sum.EDIT: For Mean, as OP apparently wanted instead, just change the sum operation to mean.
This looks like a tensor. You can use numpy for matrix addition, it will be much faster than any manual job.
You can use a double zip in the list comprehension:If you need the mean use statistics.mean() instead of sum.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
