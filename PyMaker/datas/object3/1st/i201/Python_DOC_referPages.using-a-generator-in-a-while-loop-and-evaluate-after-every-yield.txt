Natural Text
I'm using Python to open some files in a CAD program. Since the program will crash when I open too many files at once, I want my script to stop opening files from a list I generated when the sum of thier filesize exceeds a certain value.Here is what I have so far:I'm converting the log file to a list. It contains the filepaths seperated by commas:This is the Generator that I use to Iterate over the partList:Here I try to loop over the files while the sum of thier size is smaller than 2500000 bite:What happens is, that the files open propperly in the CAD Software, but they don't stop after the while condition is exceeded. My guess is, that the while condition is evaluated after the list runs out of entries and not after every entry like I what to.Help on the correct syntax would be great!What I'm looking for ultimately:I would like to use this script in a way that it opens some files and whenever I manualy close one in the CAD program, It opens the next one from my list until the list is exhausted.
Your while condition is never checked, no, because the for loop never lets Python check. That the for loop takes elements from a generator function is neither here nor there.You need to check inside your for loop if your condition still holds:Python doesn't check while conditions until the full suite (series of statements) in the block under the while ...: statement has completed running or executes a continue statement, so a while condition really isn't suitable here.In the above example I used the low-tech input() function to ask whomever is running the script to press ENTER afterwards. It'll depend on what oDoc.Documents actually offers as an API to see if you could use that to detect that files have been closed.If you wanted to use a generator function, have it track file sizes. You can even have it read those from the CSV file. I'd use the csv module to handle splitting and progress, by the way:then just useNote that the absolute number of files open is what your OS limits on, not how large those files are.
With the input from Martijn Pieters I came up with something that works perfectly for me. I'm a noob in programming so it took me a while to understand the problem. Here is what woked just fine in the end:I'm sure there is a more elegant way to solve the problem, but it workes for my needs just fine.


Answer URL
https://docs.python.org/3/library/csv.html
