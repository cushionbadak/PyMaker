Natural Text
I say unexpected because I am clearly not thinking about Try and None correctly.I got here because I was calling a function to return a value for MyVar, and then testing with Trys to ensure the function did not return None.Something like:I could not get the expected TRY result. So I explicitly stated values and tested again.Testing for None via IF gives the right results, but doing the same with TRY gives unexpected results, which come from the code below:Both Try is None and Try is not None both return True. How is that possible? What am I missing about checking if a value has been set
try doesn't care about whether a value is True, False, None, or anything else. try executes a block of code if no errors arise, and defers to except if errors do arise.See more here


Answer URL
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
https://docs.python.org/3/reference/compound_stmts.html#try
https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement
