Natural Text
I'm parsing a XML String into CSV string but it's going very slow:The XML String sometimes miss a few columns  and I need to iterate it to fill missing columns - every row must have 92 columns. That's why I have some helper functions to manipulate XML.Right now I'm running my function with 4GB as Lambda and still getting timeout :(Any idea on how to improve performance?
The normalize_row_cells constructs ElementTree Element instances but get_cells_text is only interested in each instance's child's text attribute, so I would consider changing normalize_row_cells to just return the text.  Also, it's performing copies and calling list.insert: inserting elements into the middle of lists can be expensive, because each element after the insertion point must be moved.Something like this (untested code) avoids making copies and insertions and returns only the required text, making get_cells_text redundant.If you can match your cells to their header names then using csv.DictWriter from the standard library might be even better (you need to profile to be sure).


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictWriter
