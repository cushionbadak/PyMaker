Natural Text
This is the task:Make a function my_map_k that as arguments takes a function f and k  lists L1,...,Lk, for an arbitrary k â‰¥ 1, and returns the list  [f(L1[0],...,Lk[0]),...,f(L1[n-1],...,Lk[n-1])], where n is the length  of the shortest Li list.Hint. Use Python's * notation to handle an arbitrary number of lists as arguments. Example:  should return [6, 28].This is how far I've gotten, but I'm stuck.The problem is, I cannot just say that there are 3 lists, because there could be more. Furthermore I cannot see how to take the first element out of all three lists.
You can use zip() to take the nth element from each list in turn, and a list comprehension to call the supplied function with each group of arguments so generated:Here it is in action:
I figured it out:
Here's a solution which does not use builtin map function:
Solution with no helper functions:


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
