Natural Text
I don't understand how the i in the 2nd for loop of the code below works.Why is the output 0,0,0,1,1,2. How does i in the 2nd for loop get affected from the first loop? Is there some inheritance? Pardon the newbie here. 
len(di) is 4. So the loop will repeat 4 times. Because of the way range works (from lower bound, which is 0 by default if not specified, to 1 below the upper bound), i will be 0 in the first repetition, 1 in the second repetition, and so on. To calculate out how many objects range(x, y) generates, in this case, how often for i in range(x, y)will repeat, you can simply do number of repetitions = y - x. So in this case: len(di) - 0 (default lower bound) = 4.The loop will repeat the print(i) command len(di) - (i + 1) times. Keep in mind, i is defined by the outer loop. So, during the first loop ofi equals 0, so the print(i) command will be executed 4 - (0+1) = 3 times - it will print i(=0)  3 times. In the second loop, iequals 1, so it will be printed 2 times, and so on. So here's whats happening, formatted as code for better readability:
In programming language, a variable is available for usage within a scope. When you start for loop with a new variable then it would be available for usage until you end it.As you are beginning the journey to learn python, one of the really good practice is to read official document. https://docs.python.org/3/tutorial/controlflow.html
To help your understanding, try this: The i is the same in both loops. each time the outer loop runs, it then runs the inner loop until the "for" statement is complete. 


Answer URL
https://docs.python.org/3/tutorial/controlflow.html
