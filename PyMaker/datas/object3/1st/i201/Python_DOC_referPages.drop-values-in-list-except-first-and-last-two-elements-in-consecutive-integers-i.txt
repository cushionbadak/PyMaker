Natural Text
My list, for example, isI would like to save the first and last boundary of two elements in consecutive values. So what I need to get is:How can I simply or efficiently get this result?
Use more_itertools.consecutive_groupsOutput:
Use groupby and itemgetter:
Using only the standard itertools module, you can do:In groups of consecutive values, the difference between the values and their index is constant, so groupby can group them using this difference as key.
There isn't really a function that does this kind of thing in the standard library, so you have to write most of it manually. It's easiest to first group all ascending numbers, and then delete the middle of each group:See also:itertools.chain and itertools.chain.from_iterable
You can pair adjacent list items by zipping the list with itself with an offset of 1, but pad the shifted list with a non-consecutive value, so that you can iterate through the pairings and determine that there is a separate group when the difference of a pair is not 1:Given your sample input, consecutive_groups(my_list) returns:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/operator.html#operator.itemgetter
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
