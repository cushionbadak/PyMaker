Natural Text
I want to take two lists with dict value and find the specific values that appear only in first list.In this case, only compare 'name' key.returnOnlyOne(a, b) would return [{'name': 'joseph', 'age': 33}], for instance.The set() solution is not for this case.
For efficiency, we first make a set of the names in b, then filter the list a:Sample output:If you don't like itemgetter, filter and the like, you can write the same using comprehensions:
Use list comprehension with map. (BTW, what's inside your list is called dict):Explanation:list(map(lambda x:x.get('name'), b)): gets all name from bd.get('name') not in: checks if name from a doesn't exist in b. (i.e. appear only in first list)
Nearly the same as the others.


Answer URL
https://docs.python.org/3/library/functions.html#filter
