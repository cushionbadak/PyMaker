Natural Text
I'm trying to call a callback once a async function is done runningHere's an example of what im trying to do:Here's what that does:And here's what I want it to doEdit: The position of the 'Hey' doesn't really matter, as long as it doesn't have to wait for the async function to be doneEdit: after some testing I have found a way that does what I want, although I don't know if its the best way to do it
To get that order, you need to continue executing the coroutine after print('Hey'). You also need that 'Hey' printed in the "lull" while asyncfunction is sleeping. That can essentially only be scheduled by the event loop itself; since asyncfunction is a black box for all you know and you don't know what it's waiting for or why or can get control back from it explicitly while it's sleeping.So, execute both asyncfunction and print('Hey') as asynchronous tasks, and mostly hope that the scheduling works out so that 'Hey' is scheduled to run while asyncfunction is sleeping.asyncio.coroutine(print) turns print into an async function, and gather schedules both on the event loop simultaneously, and it will probably work out that print will be executed while asyncfunction is sleeping.
Using Threading with asyncio is just confusing and most likely not what you want. run_until_complete is one of the blocking call and should likely be the last statement in an asyncio program. To add code after calling an async function, just create create a wrapperIf you just want to schedule some code to run asynchronously and continue with something else, create a task and await at the end


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.add_done_callback
