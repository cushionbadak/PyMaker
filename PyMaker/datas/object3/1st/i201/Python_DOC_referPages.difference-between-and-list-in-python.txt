Natural Text
This question already has an answer here:Difference between using [] and list() in Python                    4 answers                This question is rather "conceptual" than a specific programming one. If you ask the type of this object in Python:Python will tell you it is a list, as can be seen by doing:In general, the brackets seem to have this effect on a group of objects, whenever you surround them with brackets, they become a list.Now consider a pandas dataframe. It is known that to get to know the names of the columns you should do, for instance:Which will give you the columns names as a list.Now if I try:Python returns the whole iris dataframe.Why is that? Why sometimes the brackets behave as if creating a list out of a group of objects and sometimes not (as in the second case of this example)?I tried searching Python foruns for this question but was unable to find an answer that I could either understand or be satisfied with.Best regards,Gustavo,
Because the list built-in is a function, that creates a new list. When this function receives an iterable as first parameter as in your example, the list will contain all the members of the iterable.Using square brackets also creates a new list, but with the elements between the square brackets a items.So calling list(iterable) results in a list containing each element of the iterable while [iterable] results in a list containing the whole iterable itself.Example:For more information about to different ways to create a list, take a look at the documentation for pythons list class


Answer URL
https://docs.python.org/3/library/functions.html#func-list
https://docs.python.org/3/glossary.html#term-iterable
https://docs.python.org/3/library/stdtypes.html#list
