Natural Text
I am learning implementation of data structures using python. I realized that __init__ method is used as a constructor (I read that in C++), my doubt iscan we use some other name like __loader__ instead of __init__ and get results?Is init a keyword or just a convention like using single underscore in beginning of internally used variable names (ignoring its usage in excluding its imports)
__init__ is the method that will be called as part of the instantiation process of the object. If your object doesn't have a method by exactly that name, it won't be called during object instantiation. You can of course call any other method anytime later yourself manually, but it won't be part of the object instantiation.It's not a keyword, but it's a reserved method name for a specific purpose. The same way you couldn't implement a custom comparison function as __foobar__ instead of __lt__ and still expect it to be called when doing a < b.
No you can't. You can't because when instancing an object of your class, by default, method object.__init__() will be called (because by default your class inherit from object).And if you want to initialize your object differently, you have to override this method. And the only way to override a parent class method in python is by defining a child method with the same name, so by defining __init__() in your class.
It's not a keyword:But neither is it just convention. The language reference states:Classes are callable. [...] The arguments of the call are passed to  __new__() and, in the typical case, to __init__() to initialize the new instance.More details are available in the documentation for __init__()


Answer URL
https://docs.python.org/3/reference/datamodel.html
https://docs.python.org/3/reference/datamodel.html#object.__init__
