Natural Text
How to check if a given link (url) is to file or another webpage?I mean:page: https://stackoverflow.com/questions/page: https://www.w3schools.com/html/default.aspfile: https://www.python.org/ftp/python/3.7.2/python-3.7.2.exefile :http://jmlr.org/papers/volume19/16-534/16-534.pdf#page=15Currently I am doing it with a quite hacky, multi-step checking, and it also requires converting relative to absolute links, adding http prefix if missing and removing '#' anchor links/params to work. I am also not sure if I'm whitelisting all possible page extensions that exist.Is there a clean, single regex match solution to this problem or a library with an established function to do it? I guess someone must have faced this problem before me, but unfortunately I couldn't find a solution here on SO or else.
Aran-Fey's answer works well on well-behaved pages, which make up 99.99% of the web. But there's no rule that says a url ending with a particular extension must resolve to content of a particular type. A poorly-configured server could return html for a request to a page named "example.png", or it could return an mpeg for a page named "example.php", or any other combination of content types and file extensions.The most accurate way to get content type information for a url is to actually visit that url and examine the content type in its header. Most http-interfacing libraries have a way to retrieve only the header information from a site, so this operation should be relatively quick even for very large pages. For example, if you were using requests, you might do:Result:
urlparse is your friend.This can be simplified further with the use of the pathlib module:


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse
https://docs.python.org/3/library/pathlib.html
