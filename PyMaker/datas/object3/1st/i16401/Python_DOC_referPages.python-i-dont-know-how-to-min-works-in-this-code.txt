Natural Text
My teacher gave me this code:1st I explain the script, It's a supposed coin machine and I have to know how much coins I need for pay Q quantity having v coins(we have to do less coins as posible IE for 18 3x5 coin 1x2 coin and 1x1 coin)I dont understand what does that M[q] line, I've tried to print M and the result I had was every number from 1 to 18 how many coins it needs to do that number. M=[0,1,1,2,2,3,2,2,3,3,2,3,3,4,4,3,4,4,5]q=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]Can someone explain me how that min works?I've already done it (I know its not the good way to solve the exercise but I dont know a better way for). Solved:
The min function is the easy part:Return the smallest item in an iterableThe tricky bit is, what's with that iterable?That (M[q-a]+1 for a in v if q-a>=0) is called a generator expression; more generally, it's a type of comprehension.Start at List Comprehensions in the official tutorial to learn how comprehensions in general work, then Iterators and the following two sections (Generators and Generator Expressions) to learn how generator expressions are different.*But I can summarize it here, at least enough to get you started.First, a list comprehension:What this means is that you want to build a list, exactly as if you'd unrolled it into a loop like this:Or, more intuitively, try reading it aloud: a list of every M[q-a]+1 for each a in v if q-a>=0 makes sense as an English sentence, and means exactly the same thing as the Python. (If you have a math background, you might want to think of it in terms of set displays instead, but I'll assume you don't.)A generator expression does the same thing, except that instead of building a list, it creates the values on demand as you iterate over it. You can think of this as sort of a magic list that doesn't waste memory or time for now. To spell it in Python, just turn the square brackets [] into parentheses () (which you can leave off in this case, because there are already parentheses from the min call). To read it aloud, just leave of the "a list of" part.* And once you get that, if you want to learn more, take a look at the itertools module, read Generator Tricks for System Programmers by David Beazley and google for Greg Ewing's presentations on generators.
Why is m not being used in your teacher's code ? Here is a solution:Sort the v list and divide by it by each dimension to get num coins and continue with change remaining.Should print:{1: 1, 2: 1, 5: 3}


Answer URL
https://docs.python.org/3/library/functions.html#min
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/tutorial/classes.html#iterators
https://docs.python.org/3/library/itertools.html
