Natural Text
I'm trying to merge two lists, base and override, where base is supposed to be a larger list and override is a subset of the things in base. Where the elements overlap, I want the object in base to be overwritten by the one in override. The objects in each list are namedtuples with attributes al2000 and de2000 among them. Moreover I want to treat the objects as being "identical" when they have the same al2000 and de2000 values. What I have (which seems to work) is below, but this has nested loops, and I'm wondering if there is a better way to do this.
You can use the for/else construct.This solution still uses a nested for-loop, but it removes code duplication from your original solution (iterating over overrides, the comparison of i and k).
You could use a dictionary and a couple of dictionary comprehensions.Edit to retain original behavior about omitting extra values in override.
This answers adopts @acushner's suggestion to use a dict, which might be the most natural approach in your case. To add to it, when dealing with overrides, ChainMap is useful and in many cases the most natural way to represent your data structure.See this question for more info about ChainMaps.
since all you really want to do is look something up in overrides, make a dict out of it:now, just create the result:*not tested, but should be ok*edited for dirn's suggestion


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
