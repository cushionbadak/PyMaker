Natural Text
What happens when a python script opens subprocesses and one process crashes? https://stackoverflow.com/a/18216437/311901Will the main process crash? Will the other subprocesses crash? Is there a signal or other event that's propagated? 
When using multiprocessing.Pool, if one of the subprocesses in the pool crashes, you will not be notified at all, and a new process will immediately be started to take its place:Then in another window:Back to the pool:You can continue using the pool as if nothing happened. However, any work item that the killed child process was running at the time it died will not be completed or restarted. If you were running a blocking map or apply call that was relying on that work item to complete, it will likely hang indefinitely. There is a bug filed for this, but the issue was only fixed in concurrent.futures.ProcessPoolExecutor, rather than in multiprocessing.Pool. Starting with Python 3.3, ProcessPoolExecutor will raise a BrokenProcessPool exception if a child process is killed, and disallow any further use of the pool. Sadly, multiprocessing didn't get this enhancement. For now, if you want to guard against a pool call blocking forever due to a sub-process crashing, you have to use ugly workarounds.Note: The above only applies to a process in a pool actually crashing, meaning the process completely dies. If a sub-process raises an exception, that will be propagated up the parent process when you try to retrieve the result of the work item:When using a multiprocessing.Process directly, the process object will show that the process has exited with a non-zero exit code if it crashes:The behavior is similar if an exception is raised:Output:As you can see, the traceback from the child is printed, but it doesn't affect exceution of the main process, which is able to show the exitcode of the child was 1.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor
