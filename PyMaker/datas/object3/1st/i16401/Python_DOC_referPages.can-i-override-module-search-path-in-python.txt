Natural Text
To understand the python module search path, I was trying to create a module by a name which is already available in the standard library. I have created a file 'math.py' in my current folder and it has a function definition 'factorial' which takes one argument. Now I want that when I import math module and invoke 'factorial' function, then my function is invoked and not the standard library one. All documents say that the search path held in 'sys.path' defines the order of search and it gives highest priority to the current directory.But when I run my code I find that my math module is not getting loaded and my factorial function is not called. Python continues to load and execute the standard library definitions.Where am I going wrongHere is the file mymain.pyThis is the file math.py (in the same directory as mymain.py)And now I execute the command 'python mymain.py'
I used this technique to mask / override functionality in a .pyc file from a library. I used the following statement;Which allowed the module resolution mechanism to find the module in the parent folder before the one in the library. The modules that I did not override are subsequently found in the library location.This statement must be after import os but before all the library module import statements.


Answer URL
https://docs.python.org/3/library/sys.html#sys.path
https://docs.python.org/3/tutorial/modules.html#the-module-search-path
