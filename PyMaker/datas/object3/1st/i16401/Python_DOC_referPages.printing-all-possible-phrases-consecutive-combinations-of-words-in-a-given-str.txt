Natural Text
I'm trying to print phrases in a given text. I want to be able to print every phrase in the text, from 2 words up to the maximum number of words the length of the text will allow for. I have written a program below that prints all phrases up to 5 words in length, but I can't work out a more elegant way to get it print all possible phrases.My definition of phrase = Consecutive words in a string, regardless of meaning.The output for this is:I want to be able to print phrases such as "the big fat cat sits on the mat eating" and "fat cat sits on the mat eating a rat" etc.Can anyone offer some advice please?
Simply Use itertools.combinationsoutput:
First, you need to figure out how to write all four of those lines the same way. Instead of concatenating the words and spaces manually, use the join method:If the comprehension inside the join method isn't clear, here's how to write it manually:Once you've done that, it's trivial to replace those four lines with a loop:You can simplify this in a couple of other ways independently.First, i[x+y] for y in range(length) can be done much more easily with a slice: i[x:x+length].And I'm guessing i is already a list of strings, so you can get rid of the str calls.Also, range defaults to starting at 0, so you can leave that off.While we're at it, it would be a lot easier to think about your code if you used meaningful variable names, like words instead of i.So:And now your loop is simple enough that you can turn it into a comprehension and the whole thing is a one-liner:One last thing: As @SoundDefense asked, are you sure you don't want "eating a rat"? It starts less than 5 words from the end, but it's a 3-word phrase in the text.If you do want that, just remove the - phrase_length part.
I think the simplest approach is to iterate over all the possible start and end positions in the list of words and generate the phrases for the respective sub-lists of words:Output:
You need to have a systematic way of enumerating every possible phrase.One approach is to start with every word, and then generate all possible phrases that start with that word.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
