Natural Text
This question already has an answer here:Running shell command and capturing the output                    14 answers                I'm writing my first python program and I want to run a shell command and get the output. I want to do it in the cleanest possible / most pythonic way. This is what I've got atm.Note: I also want to raise an Exception when there went something worng with execution of the shell command.What I discovered, is that when I remove the line out , err = process.communicate(), and replace it with time.sleep(4) (<= the ls command doesn't take 4 seconds to complete), The returncode is None, which means that it the subprocess isn't fnished yet. How is this possible? Does the out , err = process.communicate() do an implicit wait() methode call?EDIT: I'm using python 2.7I want to do a longer command sudo find  "/media/usb0"  -type f -name "*.JPG" | wc -l, but i'm not sure how to call it with Popen, can anyone help?
Yes, communicate implies wait; it reads the process' stdout and stderr until they are closed.In the second example you PIPE the output of the ls; the child process ls is blocked writing to stdout and stderr until you read from the pipe - thus it would not completed within 4 seconds, or even 4 years until these descriptors are read. However, as polling the descriptors manually is prone to errors, the Popen class has the communicate method to avoid the pitfalls.For a very pythonic way to easily get the output of a command, see Popen.check_output available since Python 3.1, and 2.7, though it does not raise an exception with the contents of stderr on failure. Your first example is good if you need the exception to contain the contents of stderr as a message.To call the full pipeline in Python, you can use the shell=True with the full pipeline as a command.However, you can also use Popens to make the pipeline:
It will not call time.sleep, it will wait till the command complete its execution, it might be 4 second or more.When you call process.communicate() it will actual make call to command and set the values in process.returncode.If you will not call process.communicate() then default value of process.returncode is None and what its return when you replace process.communicate() with time.sleep(4).Popen.returncodeThe child return code, set by poll() and wait() (and indirectly by communicate()). A None value indicates that the process hasnâ€™t terminated yet.A negative value -N indicates that the child was terminated by signal N (Unix only).


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.check_output
