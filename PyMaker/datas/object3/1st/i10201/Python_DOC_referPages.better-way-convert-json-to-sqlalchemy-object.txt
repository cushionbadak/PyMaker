Natural Text
These days I am learning SQLAlchemy. When I want to load an object from json and save it to MySQL, things get difficult because the fields in my model are more that 20 and I wonder whether there're better ways to do this.My original code follows as an example:It can work but as I add more fields, it gets awful.
If you have in your json file only fields that you can initialize your User from. Then you simply can do.**obj will unpack your dict object, so if have obj = {'id': 1, 'name': 'Awesome'}, User(**obj) will do like User(id=1, name='Awesome')You can see the docsNOTE: it's better to avoid using id as a variable|field, because 'id' in dir(__builtin__), so id in bultinsUPDIf you have in your json fields that don't belong to that model you can filter them out with dict comprehensionUPD for UPDIt depends on the size of you obj, in most of the cases it's probably better (performance and clarity) to iterate over ('id', 'name') rather than obj.items():


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
