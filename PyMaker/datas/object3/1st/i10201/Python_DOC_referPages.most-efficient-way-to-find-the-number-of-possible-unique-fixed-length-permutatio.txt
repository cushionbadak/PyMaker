Natural Text
I've got this dictionary:I need to find the max number of 3 long combinations of the first values of each of these tuples, where only the values of each key can proceed said key.My current code for finding all unique (3 long) combinations is this:This returns 10 and ans_set ends up being:But I don't actually care about what the sets are, just the number of themThis method is not particularly efficient as it actually generates every possible combination and puts it in a set.I don't need to know each unique combination, I just need to know how many there are.I have a feeling this can be done, maybe using the lengths of the value lists? but I am having trouble wrapping my head around it.Clarifying questions about what I need are welcome as I realize I might not have explained it in the most clear fashion.Final EditI've found the best way to find the number of triples by reevaluating what i needed it to do. This method doesn't actually find the triples, it just counts them.And here's a version of the function that explains the thought process as it goes (not good for huge lists though because of spam prints):
If i get you right:Output:And len() is 10So basically what you're would do, make all combinations with itertools.combinations, from first elements of dict keys with a length 3 and then get set to eliminate repeating elements.UPDATESince you updated the question with desired output dataYou can do the followingOutput:UPD2So about time consumption i've ran itAnd the the results are:So solution that i've presented here is 2x times faster.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
