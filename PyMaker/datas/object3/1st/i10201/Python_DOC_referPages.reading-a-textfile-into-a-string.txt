Natural Text
I'm just starting to learn python and have a  textfile that looks like this:And I want to add the numbers '55' to the beggining and end of every string that starts with 'hello'The numbers '66' to the beggining and every of every string that starts with 'World'etcSo my final file should look like this:I'm reading the file in all at once, storing it in a string, and then trying to append accordinglyHowever, my string values '55' and '66' are always being added to the front of the file and end of the file, not the front of a certain string and to the end of the string, where I get this output of the string:Any help would be much appreciated.
You are reading the whole file at once with .read().You can read it line by line in a for loop.You could do it all at once, by reading the whole file and splitting by "\n" (newline)but this would load the whole file into memory at once, while the for loop only loads line by line (So this may not work for larger files).The behaviour of this is that if the line has "Hello" in it, it will get "55" before and after it (even if the line is "   sieohfoiHellosdf  ") and the same for "World", and if it has both "Hello" and "World" (e.g. "Hello, World!" or "asdifhoasdfhHellosdjfhsodWorldosadh") it will get "6655" before and after it.Just as a side note: You should use with to open a file as it makes sure that the file is closed later.
You need to iterate over each line of the file in order to get the desired result. In your code you are using .read(), instead use .readlines() to get list of all lines.Below is the sample code:Why to use with? Check Python doc:The ‘with‘ statement clarifies code that previously would use try...finally blocks to ensure that clean-up code is executed. In this section, I’ll discuss the statement as it will commonly be used. In the next section, I’ll examine the implementation details and show how to write objects for use with this statement.The ‘with‘ statement is a control-flow structure whose basic structure is:with expression [as variable]: with-blockThe expression is evaluated, and it should result in an object that supports the context management protocol (that is, has enter() and exit() methods).
once you have read the file:It'll replace all hellos with 55hello55and use with open(text.txt, 'r' ) as file_hndler:
To read a text file, I recommend the following way which is compatible with Python 2 & 3:Here, I make the assumption that your file use uft8 encoding.Using a with statement make sure the file is closed at the end of reading even if a error occurs (an exception). To learn more about context manager, take a look at the Context Library. There are several ways to read a text file:read the whole file with: fd.read(), orread line by line with a loop: for line in fd.If you read the whole file, you'll need to split the lines (see str.splitlines. Here are the two solutions:OrIf you need to write the result in another file you can open the output file in write mode and use print(thing, file=out) as follow:If you use Python 2, you'll need the following directive to use the print function:


Answer URL
https://docs.python.org/3/whatsnew/2.6.html#pep-343-the-with-statement
