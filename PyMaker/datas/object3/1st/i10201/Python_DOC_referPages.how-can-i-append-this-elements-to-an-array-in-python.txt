Natural Text
the output I want is:I tried:I know the code right above is wrong, so I am wondering how I can generate the output like that.
I'm assuming the output you're getting is:...because, that's what I'm getting.The problem is, in your loop, you're simply adding a new element to the existing array, then printing the "grand total."  So, you add a, then you add b, then you add c, then d... all to the same array, then printing out the whole shebang.The easiest solution for your particular problem is, in your for loop, print the array as it is, with the e selection concatenated.  Like so:That way, you're printing the array with the extra element, without actually affecting the original array... keeping it "clean" to loop back through and add the next element.This method allows you to achieve the desired result without having to result to extra memory allocation or unnecessary variables.If you have other things to do during the for loop, you could always add the element, then remove it after processing using the pop function, like so:Another option is to use List Comprehension, which allows you to iterate through an array as more of an inherent statement:print [my_array+[e] for e in input_elements]
You can use a list comprehension to solve your issue. The result looks likeSee What does "list comprehension" mean? How does it work and how can I use it? for more details about them. 
You need to make a copy of the old list in the loop:Output:Note that tmp_list = list(my_array) makes a new copy of my_array.The above can be shortened by making tmp-list implicit:The above can then be further shortened using lambdas (essentially making the loop implicit in this example):


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
