Natural Text
I have a question about InteractiveSession in TensorflowI know tf.InteractiveSession() is just convenient syntacticsugar for keeping a default session open and basically work the same like below:However, I have seen some examples online, they did't call close() at the end of the code after using InteractiveSession.Question:1. Would it caused any problem without closing the session like session leak? 2. How the GC work for the InteractiveSession if we don't close it?
Yes, tf.InteractiveSession is just convenient syntactic sugar for keeping a default session open.The Session implementation has a commentCalling this method frees all resources associated with the session.A quick testgivesThis provokes a session-leak, when not closing the session.Note, even when closing the session, there is currently bug in TensorFlow which keep 1280 bytes per session see Tensorflow leaks 1280 bytes with each session opened and closed?. (This has been fixed now).Further, there is some logic in the __del__ trying to start the GC.Interestingly, I never saw the warning An interactive session is already active. This can cause out-of-memory errors in some cases. You must explicitly call InteractiveSession.close() to release resources held by the other session(s)which seems to be implemented. It guess the only raison d'Ãªtre of the InteractiveSession is its usage in Jupyter Notebookfiles or inactive shells in combination with .eval(). But I advised against using eval (see Official ZeroOut gradient example error: AttributeError: 'list' object has no attribute 'eval')However, I have seen some examples online, they did't call close() at the end of the code after using InteractiveSession.And I am not surprised by that. Guess how many code snippets are the without a free or delete after some malloc. Bless the OS that it frees up the memory.


Answer URL
https://docs.python.org/3/reference/datamodel.html#context-managers
