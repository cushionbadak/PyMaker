Natural Text
Using the definition below for an array defined as being (a*b) in dimension where a and b are equal, let's say 20 for example. So a=b=20. A 20*20 matrix/array.What I think this code is producing, is that for each time the function is called, it takes the first element of X and Y and uses through the whole iteration. So in this example n=20, so when I call the function it will produce an a*b array which is 20*20. I'd like that each element of X to match with a as it changes. i.e the first element of a and first element of X called at the same time, then when the second element of a is called the second element of X is called etc. Same with b and Y. this should produce a single 20*20 array when the function is called once where all values in X and Y are used. Then I'd like to automate the code to call the function 500 times. Each time the function is called I need X and Y to generate new values. This way each time an array is produced, it will be different and I can use np.dstack to stack them and gmean to take a geometric average along the third axis (where the arrays are stacked).The code so far produces a 20*20*20 array before using gmean so that's why i think it's using one element in the arrays X and Y each time the function runs. If it works as I hope it should produce a 20*20*500 array.
If I understand your intent correctly, you can achieve this with the zip builtin. This should make one 20-long iterable from your 20-long X and your 20-long Y. 
I have since figured I was making life difficult for myself.I've moved the X and Y arrays inside the function so each time it's called, a new X and Y are called too. I also specified the element to call just using a and b seeing as they are integers anyway. Then I just use a dummy index to call the function 500 times.


Answer URL
https://docs.python.org/3/library/functions.html#zip
