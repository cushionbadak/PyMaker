Natural Text
I have a CSV file with the following values in the 1st column:I want to loop through all the rows in the file (excluding the Values heading) and get the number of occurrences of each leading digit(from 1 - 9) for each of the values e.g the number of values with first digit as 1 is 2 (170 and 125).
This should work for numbers of any length:    If the numbers are exactly 3 digitis in length you can do this:Prints:You can then call dict() on the Counter object if you want the actual dictionary object. 
One way is to use csv module together with collections.Counter.The result is a dictionary of value: count items.
One way to do this is by using the csv module to read the file, and by creating a (trivial) custom OrderedCounter subclass using the recipe for one in the documentation to count the number of times each decimal digit is the leading one.In the code below the OrderedCounter is initialized with zero counts for all the possible digits so they will there in the final result_and_ to determine the order the counts are stored and can been seen in the output as you can see.Output produced from the sample data in your question:


Answer URL
https://docs.python.org/3/library/collections.html#ordereddict-examples-and-recipes
