Natural Text
Consider this simple folder structure: Now our requirements are:x.py needs to import y.py z.py needs to import y.py main.py needs to import y.py and z.pyBelow is what works:x.pyy.pyz.pymain.pyQuestions:Is this the best and recommended way to setup imports in Python 3?I really don't like changing sys.path in main because it strongly binds assumptions about package locations inside code file. Is there any way around that?I also really don't like superfluous as y part in import package1.y as y. Is there any way around that?
As always, there are two separate steps:You write the code against the abstract namespace of packages, which contains package1 and package2 (and sys, os, etc.), but not “Examples” which is not a package (because main.py is not a module).You set sys.path appropriately before any of your code ever runs.  If it's your own (uninstalled) code, there are places you can put it, or you can write an easy shell script wrapper to set PYTHONPATH for your python process.So the answers to your questions areIn x.py you write from . import y.  (Python 2 supports this and 3 requires it.)How you set sys.path depends on your packaging/environment system.  The traditional way is to set the PYTHONPATH environment variable for the python process, but there are other ways involving things like the site module.from package1 import y is the usual way to name things only once.


Answer URL
https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH
