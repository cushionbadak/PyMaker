Natural Text
df is a dataframe containing 12 millions+ lines unsorted.Each row has a GROUP ID.The end goal is to randomly select 1 row per unique GROUP ID, thus populating a new column named SELECTED where 1 means selected 0 means the oppositeThere may be 5000+ unique GROUP IDs.Seeking better and faster solution than the following, Potentially multi-threaded solution?
You could try a vectorized version, which will probably speed things up if you have many classes.Note that this may fail if duplicate indices are present.
I do not know panda's dataframe, but if you simply set selected where it is needed to be one and later assume that not having the attribute means not selected you could avoid updating all elements.You may also do something like this :or with list comprehensionsmaybe this can speed it up because you will not need to allow new memory and udpate all elements from your dataframe.If you really want multithreading have a look at concurrent.futures https://docs.python.org/3/library/concurrent.futures.html


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
