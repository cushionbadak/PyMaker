Natural Text
Some of my api views have something like this:Ideally I don't want to log in every piece of code like this but use a general exception handler that catches APIException, so I changed my code to:exception_handler.pyMy problem is the exc in the handler isn't the keyerror but the apiexception, can I somehow get the KeyError from sys.exc_info or stacktrace? 
The good practice is to raise your own exception (here it is APIException) and attach the original exception.You can take a look at six.raise_from (if you want a Python 2/3 compatible solution):Raise an exception from a context. On Python 3, this is equivalent to raise exc_value from exc_value_from. On Python 2, which does not support exception chaining, it is equivalent to raise exc_value.You can also create your own exception class which can do the chaining.Of course, instead of printing/logging your APIException error message you can log your original message:Edit: Use class hierarchy for exceptionsBut, if do_stuff() is part of your API, itâ€™s a better practice to do the exception handling inside this function and throw your own exception which can inherit APIException. This solution is the best, IMO. 
Since you are using Python 3, you can simply raise the APIException:Then in your exception handler, if exc is the APIException, you can access the original exception with exc.__context__.The from exc is not actually needed to be able to access __context__, but it makes it clear that the KeyError was converted to APIException, rather than APIException being raised during the handling of KeyError.See the exception docs for more info.


Answer URL
https://docs.python.org/3/library/exceptions.html
