Natural Text
I have the following dictionary that maps a word to the frequency with which that word appears in a text:words 'loves' and 'coding' both appeared 3 times in the text and thus have the same value. Now we know that if we want to swap keys and values in this dictionary, it will return this:either or this because identical keys are not allowed in a dictionaryNow my question is how do I swap the keys and features in the dictionary while avoiding duplicate keys as follows:This is my failed attempt:Edit :Thanks for all your valuable answers. I also got mine to work by fixing the following bug: a comment is added next to the buggy line  Now if I run it on the following input:I get this which is exactly what I wanted:
First of all, words 'loves' and 'coding' both appeared 3 times in the text and thus have the same key.they actually have the same value, not the same key (maybe you mistyped it?).But you can just do a simple for-loop followed by a simple logic where you check first if the value exist in your new dict; it it does, append to their value; if it doesn't, create a new entry.
As in @RafaelC's answer, only using sets:


Answer URL
https://docs.python.org/3/library/collections.html#defaultdict-objects
