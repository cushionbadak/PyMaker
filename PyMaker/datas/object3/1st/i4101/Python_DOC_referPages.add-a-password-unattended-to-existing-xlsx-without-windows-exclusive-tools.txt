Natural Text
I'm generating an xlsx file using Openpyxl. And i'd like to protect the workbook itself using a password that I have as a variable in the same script. This can be set manually using File > Passwords.. and setting "Password to open" in Excel itself.Openpyxl only seems to offer sheet based edit protection through ws.protection.set_password("mypassword") (where ws is an open worksheet)I can't seem to find the exact examples but somewhere I read that xlsx files were basically zip archives, and while it seemed true when I ran commands like unzip -t and 7z x it seems that adding a password using utilities like 7z or zipcloak completely breaks the file when it's put back together.When opened with Excel:Excel cannot open the file 'sample.xlsx' because the file format or  file extension is not valid. Verify that the file has not been  corrupted and that the file extension matches the format of the file.Note the result is the same no matter which type I use with 7z, and the same with zipcloak too.So far i've looked at my options using Bash and Python, and it seems pretty dire. But i'm pretty much open to anything.. The machines i'm doing this on run OS X and Debian.
What you're asking for isn't currently available in any Python package. The best you can probably do for now is to install a package implemented in some other language, and call that package from Python (using os.system() or the subprocess module or something along those lines).The two that I know of arehttps://github.com/ankane/secure-spreadsheet (Node.js)https://github.com/herumi/msoffice (C++)secure-spreadsheet is basically a command-line wrapper for xlsx-populate.It seems like you want to be able to do this without having Excel installed, but for completeness I'll mention that if you do have Excel installed, then another way to do this is to automate Excel itself, which can be done in Python using xlwings, or the underlying packages that it depends upon: pywin32 on Windows or appscript on Mac.


Answer URL
https://docs.python.org/3/library/os.html#os.system
https://docs.python.org/3/library/subprocess.html#module-subprocess
