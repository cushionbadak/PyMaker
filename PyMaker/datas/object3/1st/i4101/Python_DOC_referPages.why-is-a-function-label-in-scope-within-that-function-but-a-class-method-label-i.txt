Natural Text
func can refer it itself if func is a global function.However, it seems that a class method cannot refer to itself:The exception raised is a NameError:Why is this?Is it because "func" is in globals whereas "mthd" is in K.__dict__?functions can refer to variables outside of themselves, such as:Is the error caused because K.mthd has access to the names locals and globals, but not K.__dict__?
func is a global name, mthd is not. Methods are an attribute on the class object, which is available as a global:In the class body (suite) itself, mthd is a local name; at the end of the class statement all locals are taken to form the class body; once the class is created, the local names are no longer available.From the Class definitions section of the Python reference documentation:The class’s suite is then executed in a new execution frame [...], using a newly created local namespace and the original global namespace. (Usually, the suite contains mostly function definitions.) When the class’s suite finishes execution, its execution frame is discarded but its local namespace is saved. A class object is then created using the inheritance list for the base classes and the saved local namespace for the attribute dictionary.So in your code, the line mthd.x = 5 is analogous to accessing locals in a function body. Just like result is not available outside of the func() function scope, mthd is not available outside of the namespace available during class creation.The class suite can otherwise refer to globals just fine, as can methods:


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#class-definitions
