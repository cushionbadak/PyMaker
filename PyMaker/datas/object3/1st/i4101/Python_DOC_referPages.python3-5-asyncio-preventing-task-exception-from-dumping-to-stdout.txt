Natural Text
I have a textbased interface (asciimatics module) for my program that uses asyncio and discord.py module and occasionally when my wifi adapter goes down I get an exception like so:This exception is non-fatal and the program is able to re-connect despite it - what I want to do is prevent this exception from dumping to stdout and mucking up my text interface.I tried using ensure_future to handle it but it doesn't seem to work. Am I missing something:
Task exception was never retrieved - is not actually exception propagated to stdout, but a log message that warns you that you never retrieved exception in one of your tasks. You can find details here.I guess, most easy way to avoid this message in your case is to retrieve exception from task manually:
The answer provided by Mikhail is perfectly acceptable, but I realized it wouldn't work for me since the task that is raising the exception is buried deep in some module so trying to retrieve it's exception is kind've difficult. I found that instead if I simply set a custom exception handler for my asyncio loop (loop is created by the discord client):


Answer URL
https://docs.python.org/3/library/asyncio-dev.html#detect-exceptions-never-consumed
https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.all_tasks
