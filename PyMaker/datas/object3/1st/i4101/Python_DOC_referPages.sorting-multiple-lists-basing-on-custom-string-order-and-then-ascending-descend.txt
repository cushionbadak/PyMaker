Natural Text
I have a list of strings like this:What is the shortest way of sorting X using values from Y to get the following output?The order of the elements having the same "key" does not matter. I can resort to the use of for constructs but I am curious if there is a shorter way. Any suggestions?
Shortest CodeExample:Generally SpeakingExplained:zip the two lists.create a new, sorted list based on the zip using sorted().using a list comprehension extract the first elements of each pair from the sorted, zipped list.For more information on how to set\use the key parameter as well as the sorted function in general, take a look at this.
Zip the two lists together, sort it, then take the parts you want:Combine these together to get:
Also, if you don't mind using numpy arrays (or in fact already are dealing with numpy arrays...), here is another nice solution:I found it here:http://scienceoss.com/sort-one-list-by-another-list/
The most obvious solution to me is to use the key keyword arg.Note that you can shorten this to a one-liner if you care to:
I like having a list of sorted indices. That way, I can sort any list in the same order as the source list. Once you have a list of sorted indices, a simple list comprehension will do the trick:Note that the sorted index list can also be gotten using numpy argsort().
Another alternative, combining several of the answers.In order to work for python3:
zip, sort by the second column, return the first column.
more_itertools has a tool for sorting iterables in parallel:
I actually came here looking to sort a list by a list where the values matched.
A quick one-liner.Say you want list a to match list b.This is helpful when needing to order a smaller list to values in larger. Assuming that the larger list contains all values in the smaller list, it can be done.
You can create a pandas Series, using the primary list as data and the other list as index, and then just sort by the index:output:
I have created a more general function, that sorts more than two lists based on another one, inspired by @Whatang's answer.
Here is Whatangs answer if you want to get both sorted lists (python3).Just remember Zx and Zy are tuples.I am also wandering if there is a better way to do that.Warning: If you run it with empty lists it crashes.
To get unique values present in list2To find the loc of the index in list2 Location of index in list2 is tracked using cur_loclist[0, 3, 7, 1, 2, 4, 8, 5, 6]


Answer URL
https://docs.python.org/3/library/functions.html#zip
