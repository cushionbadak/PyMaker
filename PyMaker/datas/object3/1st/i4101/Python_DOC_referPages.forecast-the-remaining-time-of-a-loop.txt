Natural Text
Good Evening,I am trying to estimate the remaining time to the end of a loop; I've used:But it does not seem to work properly, since it goes up to minutes, even though the loop would take 20 seconds in total, and decrease quickly when reaching the end.How can I try to forecast the remaining time of a loop efficiently and correctly?
Your calculation for time remaining is wrong. If it takes execution_time for progress steps. Then how much does it take for 1000 steps ?Simple cross multiply gives you the total time. Subtract it from the time already elapsed and that will give you the time remaining.Also your variable execution_time_1 is never defined
Rather than using datetime.datetime.now() for this sort of thing you can use time.perf_counter(), which is available in Python 3.3+. From the docs:Return the value (in fractional seconds) of a performance counter,  i.e. a clock with the highest available resolution to measure a short  duration. It does include time elapsed during sleep and is  system-wide. The reference point of the returned value is undefined,  so that only the difference between the results of consecutive calls  is valid.Also, you can print using a carriage return instead of a newline so that the progress reports are printed on a single line. Here's a brief demo derived from your code.Depending on your terminal (and Python version) you may also need to add the flush=True keyword arg to the print call in order to get the progress reports to print as they are issued.
I think that in this line: you should divide execution_time/progress, because you want to know how long it takes to complete one percent of progress. 


Answer URL
https://docs.python.org/3/library/time.html#time.perf_counter
https://docs.python.org/3/library/time.html#time.perf_counter
