Natural Text
The 2D list should be like this:I am unable to find the logic for this. I have done this using numpy's reshape function. But unable to do without numpy.
Here is one simple way:You can also wrap in a generic function:ExplanationThe syntax for range construction is range(start, end, [step]). step is optional; if it is not specified, it is assumed to be 1.The first part range(i, i+n) creates a range object from i to i+n-1, inclusive.The second part range(1, n**2, n) iterates in steps of n to n*n, not including the final term. Since end is non-inclusive, squaring n provides the desired cap.
This is one approachOutput:
I like this one too:
Use a list-comprehension like this with tuple unpacking:
or you could use the grouper from the itertools recipes to split a given list (or iterable) into an 2d matrix. this is something along those lines:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
