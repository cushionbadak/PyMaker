Natural Text
This is a problem I am facing for a data pipeline project.I have 2 data sources. One contains all the user data, the other contains meta data of what all columns we have to process from the user data to output.So python is good with dynamic type casting, like if I sayThis is what I want to do, I want to dynamically type cast values in order to process them correctly. The type is retrieved from the meta-data data source.The problem is when I do a django model query on the meta-data, I get unicode objects.How do I convert this u'float' to float ?Does this approach have any better alternatives ?I checked out this, but it does not workOpen to all suggestions
In your first example where a = float, a is a built in function, but in your second example, a = u"float", a is an unicode string. If you want complete "dynamicness" of the built in type to convert to without the need of creating a mapping, you can do this:I would advise you not to use eval() (as suggested by another answer) because it could lead to major security risks. This is why I used the __builtin__/builtins module and getattr() to retrieve the float(...) function. You may also create a mapping (ie. a dict), to map the unicode string to its corresponding function (suggested by this comment):Using a mapping is the safest way to go, but it limits your "dynamicness" to only the types listed in the mapping. 
You may use the eval() function to evaluate the code, but you need to be careful with that function! Otherwise, you might have a look at that post. Another solution is to pre-define allowed types and gather them inside a dictionary mapping typeName with typeConstructor.
You could use astype from the numpy library:admittedly, this needs to go via an array, because astype() works on numpy-arrays - but it can compute a string as type.


Answer URL
https://docs.python.org/3/library/builtins.html#module-builtins
