Natural Text
Folks:I am starting to learn Python; however, I need to loop through the the content of a directory.I do not want to slurp the content of the directory into an array and loop through it with a 'for i in x' loop, but loop though the directory handler. I understand it would be faster with an array in memory; however, I am limited on the amount of space that improvised to 'user space' in memory. Due to the latter, I want loop over the directory itself. What is the best way to do this in Python3 for Linux? I would really appreciate example code since I am learning.-73
You cannot use os.listdir since it returns a list, but you can use scandir which returns an iterator. The iterator doesn't load the directory contents, but yields the files one by one. It doesn't consume as much memory as os.listdir and you can stop it when you want.os.scandir(path='.')Return an iterator of os.DirEntry objects corresponding to the entries in the directory given by path. The entries are yielded in arbitrary order, and the special entries '.' and '..' are not included.Also nice side-effect:Using scandir() increases the speed of os.walk() by 2-20 times (depending on the platform and file system) by avoiding unnecessary calls to os.stat() in most cases.The best speed increase is actually when using Windows, I used that on a networked drive on Windows for a program that was checking if entries were files or dirs, and sped up the code by 800%Small example which prints only files from a path:This is available from python 3.5. If you have an older version, a pypi package does the same: scandir, just use scandir.scandir instead of os.scandir


Answer URL
https://docs.python.org/3/library/os.html#os.scandir
https://docs.python.org/3/library/os.html#os.walk
https://docs.python.org/3/library/os.html#os.listdir
