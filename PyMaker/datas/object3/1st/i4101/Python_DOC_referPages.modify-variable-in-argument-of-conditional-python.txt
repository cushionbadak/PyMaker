Natural Text
I have a while loop that operates on outputs provided by another class, until no outputs are left. Is there a way of checking if a new item exists and. "loading" it at the same time?
It looks like you're trying to reinvent the iterator.  Iterators must have two methods: an __iter__ method that returns the iterator itself and a __next__ method that returns either the next item or raises StopIteration.  For exampleThat's a lot for that example, but it allows us to use that iterator everywhere Python expects an iterator
Is there a way of checking if a new item exists and. "loading" it at the same time?The short answer is no. Python assignments cannot be done in the place of a while loop's conditional statement. However, why not simply reassign the value of a.get_next() to a variable each iteration, and use that as your loops conditional:
Not sure why you want this but you can assign and check if exists in the same statement like:
Search for generators, iterators and yield statement.Code example


Answer URL
https://docs.python.org/3/library/stdtypes.html#iterator-types
