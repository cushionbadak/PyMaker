Natural Text
I'm using  iter(range()), but I also need to use the results twice, assuming j=iter(range(n,2n))next(j) would be n, but then I need that certain next(j) again without stepping forward, Is that possible without further complications?
You can easily write a generator which repeats each element of a given iterator twice:If what your use case requires is looking ahead, see this question for some nice solutions.
One approach is to explicitly get two iterators, using itertools.tee:This can be more flexible depending on what you're doing, but the downside is that you need to make sure you're going 1-for-1 consuming from both iterators.But honestly I don't think I've ever found myself doing this with range.  When you assign next() to a variable, you can access it as many times as you want (a la for i in range), so...
or You can use generator statement
You could use zip:
I believe shx2's answer to be the correct answer to the question.However, in the case whereyou only need to reuse some of the values, and do not know at the time the iterator is created which ones you need to reappear, or some of the values may have to be repeated more often than others,then here's a different generator that can react on feedback via the send() builtin.The trick used is that any call of generator.send(value) will send back the value to the generator which receives it as the result of yield. As any send() will cause the generator to also immediately run up to the next yield(), we yield(None) here to give back control immediately to the calling code. This method makes send() to truly operate as a one way operation.Here's how to use it:The whole point of the waiting variable is to pause at the values 4 and 7, and re-iterating those values up to a total of 3 times. The output looks like:


Answer URL
