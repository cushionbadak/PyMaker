Natural Text
In javascript I can write function with closure like thisAnd then use itCan I perform the same in Python (if it depends with different version let me know) ?It's just a sample. I want know about closure in Python.
Python 3 introduced this kind of scoping behavior with PEP 3104 and the nonlocal statement:Other than that, in previous versions, closures do exist, but you have only a read-only access. So changing x will not work. What you can do however is use a mutable object, like a list, and change that one:As you can make any kind of object callable, you can also do something more fancy by defining your own type that has a __call__ method:
If all you want is a unique ID, just use the following:You can rewrite this with a closure (as poke mentions in his answer), if you wish to:This has the caveat that it only works in Python 3+. For Python 2, you can simulate this behavior by attaching the value x to a class.
This works, but doesn't do exactly what you want:Because the integer datatype is immutable. If instead you use a mutable datatype:Another more complicated example from my own usage:
If you want to explicitly specify that something is a closure variable, not a local or global, you use the nonlocal statement. So:In Python 2.x, there is no nonlocal statement. Your best bet is to upgrade to a modern version of the language. If you can't do that, there are ways to fake it, which are explained in the FAQ, and in PEP 3104 (which introduced nonlocal).


Answer URL
