Natural Text
Suppose we are on python3.3 and multi-platform (Linux and WIndow), if I do following:I get:I want it to display:How do I show that % following the parenthesis?
If I understand your question, you want to be able to write a prompt that includes a % sign character, but places the user's cursor to the left of the sign, like this:There's not a universal solution to this, since basic text-IO is usually oriented around input and output streams that don't have well defined interactions. There are some approaches that will work in some situations but not others, but I'm not sure of anything that will work everywhere (short of writing a GUI).One suggestion I have is to include ASCII (and unicode) backspace characters '\b' (or '\x08') in your prompt. On some consoles this will move the cursor to the left one character per backspace. So, the prompt above could be generated by:This works when I run Python from a windows CMD.exe shell, but not when I run it within IDLE (the '\x08' characters are displayed as a box with a small circle taken out of the middle). It's a bit crude though, as it can't prevent the user from entering more characters than there are spaces before the % (which will be overwritten by the fifth character entered).Another solution which may be a bit more robust (but not cross-platform, alas) is to use the curses module. I'm not knowledgeable enough about it to suggest code, but it should be possible to make it do what you want (and even control things like preventing the user from entering more than three characters, or moving the % sign to correctly align with values of any length).One final thing: I strongly suggest that you don't use eval around your input call. If you expect (and require) an integer value, use int(input()). If you might get an integer, but could also get some other kind of value, use multiple lines to test what you got:
Here's an alternative using the getch package. Instead of using input, we'll roll our own.This gets user input one character at a time in a while loop using getch. By using sys.stdout.write('\r...') we can avoid newlines and constantly overwrite the previous line.This has the problem that if you backspace, multiple %'s will be visible because the new line is not entirely overwriting the previous line. This can be fixed by padding the string with spaces.


Answer URL
