Natural Text
I've searched for the answer to this here for awhile and haven't found it, so hope this isn't a dupe.  I have a properties file that mostly contains key=value pairs, but also contains #comments.  I need to put it in a dictionary so I can grab values at will.  In a file without #comments, the following works perfectly.But not so when there are comments present.  If there's #comment present, dictionary saysI've tried wrapping the dictionary creation in conditionals withBut I can't seem to get that to work.  Suggestions?  Thanks!
To address your newest constraint about blank lines, I would try something like:It's very clear and it's easy to add on extra constraints, whereas using a dict comprehension will get quite bloated.  However, you could always format it nicely
You should just use the built-in configparser which is made to read ini-style configuration files. It allows comments using ; and # by default, so it should work for you.For .properties files you might need to trick a bit as the configparser generally expects section names. You can do this easily by adding a dummy section while reading it though:(Using the same example file as mtitan8)For Python 2, use from ConfigParser import ConfigParser instead.
Given a properties file test.txt as you've described:You can do the following:This seems just like the code you said you tried using if not line.startswith('#'), so hopefully this working example will help you pinpoint the bug.
Why force this into one line? Two weeks from now a user will put a space somewhere, or want to use quotes and you have to go unwind the code. Just make a function now which handles the input and be done with it. It also means you can use unit tests to ensure it works and stays working.Given this input:The following code will handle it all nicely.BTW, I like poke's suggestion of using ConfigParser. But the hack of adding a section may or  may not work for everyone.If you want to move the comment checking into the parse_line() function you could return None, None and check for that before putting the key/value pair into the dictionary.
shouldn't line.startswith('#') better read line.strip().startswith('#')?


Answer URL
