Natural Text
I'm trying to get my head around the datetime module.  I know the time now as an epoch and the time an event last happened (as an epoch time).  What I need to do is figure out whether that event happened between midnight and midnight of yesterday.24 hours ago is t - 86400, but how can I round that up and down to midnight.  I'm having real trouble finding a way to get timestamps in and out of datetime or then manipulating a datetime to set the time.
In the Middle of the NightGenerating the last midnight is easy:That combines today's date (you can use date() or a datetime() instance, your pick), together with time.min to form a datetime object at midnight.YesterdayWith a timedelta() you can calculate the previous midnight:That Was YesterdayNow test if your timestamp is in between these two points:All Together NowCombined into one function:
Given such a timestamp, you can use divmod to compute the number of days since the epoch (which you don't care about), and how many seconds are leftover (which you do):Then, you subtract the leftover seconds from your original timestamp, which produces midnightof the current day.Rounding up is as simple as shifting your target timestamp forward exactly one day before rounding down.
In my estimation, many date and time manipulations are easier to do, and to understand, using the arrow library. This is one of them.Create an arbitrary date and time.Calculate midnight_yesterday: first, midnight of arbitrary as its 'day' floor; then shift this back by one day. Display the result.Use timestamp for the desired overall result, for Python 3.3+.Or use this expression for Python 2.7. (Credit: https://stackoverflow.com/a/11743262/131187 for the latter two expressions.)
You can use this code:
Midnight at the start of today is:so yesterday's midnight is:
Source Python get unix epoch for today’s midnight and today’s 23:59:59 (start of day, end of day)


Answer URL
