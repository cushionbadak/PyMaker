Natural Text
I'm trying to create a program to get specific EXIF information of a jpeg without using PIL and such. I'm reading the file in binary but the output is slightly confusing...Which outputs:What I'm confused about is what the "\","/", and "*" mean...I know that the first few bytes that signify its a jpeg is 0xFF 0xD8, so I take it the \s are 0s? Can anyone help me understand this?Apologies for any beginners mistakes, new to coding in general and kind of just jumped in to creating this program.
Python presents you with a representation of the byte string that you can copy and paste into a Python interpreter again.In order to make it readable and survive pasting into something that doesn't handle raw bytes, anything that isn't printable is escaped using a Python byte escape code, \xHH, representing the hexademical value for a byte.Anything that is printable, is represented as the ASCII character directly. A hex byte 0x41 is the letter A (capital) in ASCII, and printed as such:Thus, * is hex 2A, / is hex 2F:You could use binascii.hexlify() to generate an all-hexadecimal representation of your bytes:That said, you would be better off installing Pillow (the modernized fork of the Python Image Library) and have it handle JPEG images, including extracting EXIF information, for you.


Answer URL
