Natural Text
This question already has an answer here:Check if a Python list item contains a string inside another string                    15 answers                The Pythonic way to check if a string x is a substring of y is:Finding if x is equivalent to a, b, c, d, e, f or g is also Pythonic:But checking if some string x contains either a, b, c, d, e, f or g seems clunky:Is there a more Pythonic method of checking if a string x contains an element of a list?I know it is trivial to write this myself using a loop or using a regex:but I was wondering if there was a cleaner way that does not involve regex.
The Pythonic approach would be to use any():From the linked documentation: any(iterable)Return True if any element of the iterable is true. If the iterable is empty, return False. Equivalent to:Also, notice that I've used a tuple instead of a list here. If your a-g values are pre-defined, then a tuple would indeed be preferred. See: Are tuples more efficient than lists in Python?
I think that's about as short & Pythonic as you can get it.
A bit late to the party, butwould work, and may be faster (algorithmically, but maybe not for smaller test cases).
without using any but simply maxgives


Answer URL
