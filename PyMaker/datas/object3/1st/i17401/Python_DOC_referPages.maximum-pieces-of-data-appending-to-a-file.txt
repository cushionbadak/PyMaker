Natural Text
I have a piece of code that appends a users name and score to a file but I was wondering how I could make it so that only 10 names and scores can be on the file at any time. My code is as follows:Is there any way to make it so that if 10 names are already on the list then no more can be added? If this requires some form of sorting method (selection, bubble, etc) then could you please put that in as well?
First, whatever you do is going to require reading up to 10 lines from the file.If you just want to keep the first 10 scores, then stop recording new ones, that's easy. I'll use the linecache module for efficiency (so if you call storescores 1000 times in a row, it'll remember that it already looking for and failed to find a 10th line). This will return an empty string if there are fewer than 10 lines, or the 10th line if there are 10 or more. So:If you want the most recent 10 scores, you will have to read in the lines, then write out a new file. Like this:If you want the top 10 scores, you can do the same thing, but add a sort step in the middle. There's no reason to write an explicit selection sort or bubble sort—and, in fact, you don't want to, because those are not good sort algorithms in the first place. Just call the sort method on lists.The tricky bit is that you want to sort on the score, not the whole line (otherwise "Bob 100" is a higher score than "Andrew 200"), and on the score as a number rather than as a string (otherwise, "2" is a higher score than "10"). So, you need a key function that splits the string, takes the last bit, and turns it into a number. So:There are ways to improve this further. For example, instead of rewriting the file in-place, you might want to write to a new temporary file, then copy it over the file when you're done (so if someone pulls the plug in the middle of your program running, you end up with either the old scores, or the new ones, rather than a truncated partial file). Or you might want to use the heapq or bisect modules in cleverest ways to get the new score into its appropriate sorted position instead of re-sorting the entire already-sorted list (not that it matters much when there are only 10 entries). And so on. But this should be enough to get you started.
There’s no built-in way to do something like this. What you’ll need to do is something likeRead in the fileAdd the newest scoreExamine the list to see if there are too many scores, and if there are, remove oneWrite the file


Answer URL
