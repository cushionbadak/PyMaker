Natural Text
Reading Python Standard Library.  Trying to understanding classmethod.When I type: It returns:How would see what the classmethod returns instead of a generator of the classmethod?
You are producing a classmethod descriptor object:returns the class C wrapped in a new classmethod object. This is not a generator, this is what Python actually stores in your class when you decorate a method with it.Remember that a @decorator_expression line above a function or class is just syntactic sugar for an extra function call replacing that object; @classmethod above def f(...) just means that Python will replace f with f = classmethod(f).You can see the same type of object when looking at the C.__dict__['f'] value; that's same type of object:It is the __get__ method on the descriptor object that is invoked when you try and access the C.f attribute.Functions themselves are descriptors too; a classmethod bypasses the function's .__get__ method to provide a binding to the class instead of the normal binding to an instance.See the descriptor HOWTO to understand what a descriptor is, and how a classmethod object works.To see what an the method itself returns, just call it on the class or on an instance:Instead of the usual self instance object, the method is instead passed a reference to the class. For both the C.f() call (directly on the class) and the C().f() (on an instance of C), the first argument to f() is C itself.Compare this to the C.regular() method; this is a normal method and when called directly on the class with C.regular() no arguments were passed in, when called on an instance with C().regular() a first argument, the instance, was passed in. This is what you normally would  use self for in the method signature.For class methods, then the first argument is usually named cls when declaring your method.
If you want to call the classmethod f you have created on C, you should do:classmethod is the decorator function, it will wrap whatever you pass to it and return a classmethod object:Note that the first to a classmethod is the class itself, called cls by convention:This gives:Alternatively return the value and print it outside the function:
Change to:Unlike traditional class methods where the first argument is a self reference, a class method receives the class as implicit first argument, just like an instance method receives the instance. Also, you need to return a value to print it.
classmethod is useful when sharing the value across all different objects being created.Here the value of variable a is shared across all different objects that are being created and not just limited to one instance


Answer URL
