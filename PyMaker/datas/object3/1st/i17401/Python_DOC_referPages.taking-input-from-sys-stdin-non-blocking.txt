Natural Text
I'm working on a bot for a competition that receives its' input through sys.stdin and uses Python's print() for output. I have the following:The problem is that the input comes in through a stream and using the above blocks me from printing anything back until the stream is closed. What can I do to make this work?
By turning blocking off you can only read a character at a time. So, there is no way to get readline() to work in a non-blocking context. I assume you just want to read key presses to control the robot.I have had no luck using select.select() on Linux and created a way with tweaking termios settings. So, this is Linux specific but works for me:A better Windows or cross-platform answer is here: Python nonblocking console input

You can use selectors for handle I/O multiplexing:https://docs.python.org/3/library/selectors.html Try this out:The above code will hold on the lineuntil a registered event occurs, returning a selector_key instance (k) and a mask of monitored events. In the above example we registered only one event (Enter key press):The selector key instance is defined as follows:Therefore, the register method sets k.data as our callback function got_keyboard_data, and calls it when the Enter key is pressed :A more complete example (and hopefully more useful) would be to multiplex stdin data from user with incomming connections from network:You can test using two terminals.first terminal:open another terminal and run:back to the firstResult (seen on the main terminal):
Might I suggest nobreak? If'n you are willing to use curses.https://docs.python.org/3/library/curses.html#curses.window.nodelay
Use a generator - thankfully sys.stdin is already a generator! A generator enables you to work on an infinite stream. Always when you call it, it returns the next element. In order to build a generator you need the yield keyword.Do not forget to place a break statement into the loop if a certain, wished situation happens.You can find more information about generators on:http://www.dabeaz.com/generators/index.htmlhttp://linuxgazette.net/100/pramode.html


Answer URL
https://docs.python.org/3/library/selectors.html
https://docs.python.org/3/library/curses.html#curses.window.nodelay
