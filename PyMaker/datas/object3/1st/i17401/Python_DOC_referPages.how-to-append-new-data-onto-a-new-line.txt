Natural Text
My code looks like this:so if I run it and enter "Ryan"then run it again and enter "Bob"the file hst.txt looks like instead ofHow do I fix this?
If you want a newline, you have to write one explicitly. The usual way is like this:This uses a backslash escape, \n, which Python converts to a newline character in string literals. It just concatenates your string, name, and that newline character into a bigger string, which gets written to the file.It's also possible to use a multi-line string literal instead, which looks like this:Or, you may want to use string formatting instead of concatenation:All of this is explained in the Input and Output chapter in the tutorial.
All answers seem to work fine. If you need to do this many times, be aware that writingconstructs a new string in memory and appends that to the file.More efficient would bewhich does not create a new string, just appends to the file.
I had the same issue. And I was able to solve it by using a formatter. I hope this helps. 
There is also one fact that you have to consider.You should first check if your file is empty before adding anything to it. Because if your file is empty then I don't think you would like to add a blank new line in the beginning of the file. This code first checks if the file is emptyIf the file is empty then it will  simply add your input text to the file else it will add a new line and then it will add your text to the file. You should use a try catch for os.path.getsize() to catch any exceptions.Code: 
In Python >= 3.6 you can use new string literal feature:Please notice using 'with statment' will automatically close file when it fd runs out of scope
I presume that all you are wanting is simple string concatenation:Alternatively, change the " " to "\n" for a newline. 
The answer is not to add a newline after writing your string. That may solve a different problem. What you are asking is how to add a newline before you start appending your string. If you want to add a newline, but only if one does not already exist, you need to find out first, by reading the file. For example, You might want to add the newline after name, or you may not, but in any case, it isn't the answer to your question.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals
https://docs.python.org/3/reference/compound_stmts.html#the-with-statement
