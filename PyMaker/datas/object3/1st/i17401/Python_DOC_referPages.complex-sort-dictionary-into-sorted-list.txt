Natural Text
I have the following class:I also have a dictionary that is structured with a bunch of these SalesRecords with the SalesRecord.name as the key. How can I sort the values into a sorted list with the following criteria (Assume everything is an integer):Sort by dollarsSpent descThen by itemsPurchased - itemsSold descThen by itemsPurchased descThen by position ascAlso, just curious, but what would the overall run-time of such a sort be? Does it need to iterate 4 times in the worst case?
Use a compound key.
You have two options. Both options run in linearithmic time, O(nlog(n)), but you may consider one more readable. You can use a compound sort key:or sort multiple times, relying on the stability of the sort algorithm:With a stable sort, you can sort by a number of keys with different priorities by sorting by each key from lowest priority to highest. After sorting by a higher-priority key, items that compare equal by that key are guaranteed to remain in the order they had after the lower-priority key sorts.
The easiest approach is to take advantage of sort stability to sort in multiple stages (first by position, then by items purchased descending, etc).This is less expensive than it seems because the TimSort algorithm takes advantage the elements that are already partially ordered.  This approach is also easier to get right than trying to build an overly complex key-function.


Answer URL
