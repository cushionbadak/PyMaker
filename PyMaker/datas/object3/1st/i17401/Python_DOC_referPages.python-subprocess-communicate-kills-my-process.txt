Natural Text
Why does communicate kill my process?  I want an interactive process but communicate does something so that I cannot take raw_input any more in my process.exception!
communicate and wait methods of Popen objects, close the PIPE after the process returns. If you want stay in communication with the process try something like this:
Why does communicate kill my process? From the docs for Popen.communicate(input=None, timeout=None):Interact with process: Send data to stdin. Read data from stdout and  stderr, until end-of-file is reached. Wait for process to terminate.emphasize mineYou may call .communicate() only once. It means that you should provide all input at once:OutputNotice the doubled newlines: one from '\r\n' and another from print statement itself in your script for the child process.Output shows that the child process received three input lines successfully ('y', 'y', and 'n').Here's a similar code using subprocess.check_output()'s input parameter from Python3.4:It produces the same output.If you want to provide a different input depending on responses from the child processes then use pexpect module or its analogs to avoid issues mentioned in Why not just use a pipe (popen())?


Answer URL
