Natural Text
If I have a listI can match it as a list usingHowever, if I want to enumerate itIt now becomes an enumerate object, which doesn't match as a list, and enumerate isn't a standard python object which I can match using isinstance.What's the most elegant way to match an enumerate object?
Why it's not a standard python object? you can use isinstance(M, enumerate) to check:
Supplying enumerate as the second argument to isinstance should work fine:See a demonstration below:And here is what the docs say*:isinstance(object, classinfo)Return true if the object argument is an instance of the classinfo argument, or of a > (direct, indirect or virtual) subclass thereof. If  object is not an object of the given type, the function always returns  false. If classinfo is not a class (type object), it may be a tuple of  type objects, or may recursively contain other such tuples (other  sequence types are not accepted). If classinfo is not a type or tuple  of types and such tuples, a TypeError exception is raised.*I added the bold.
While I can't see why you would want to do this, you can simply match the type:
It sounds as though what you really want to do is test to see if you can iterate over your type with a for loop. The way to do this is to test for a method called __iter__:Or, you could use the standard library:This approach will work perfectly for lists, enumerate, tuples, and any custom object which is iterable


Answer URL
