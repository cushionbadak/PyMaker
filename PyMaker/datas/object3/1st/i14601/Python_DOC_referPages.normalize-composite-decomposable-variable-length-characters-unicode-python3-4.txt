Natural Text
I stumbled upon http://mortoray.com/2013/11/27/the-string-type-is-broken/And to my horror...However I foundhttps://stackoverflow.com/a/14682498/1267259, Normalizing UnicodeBut what do I do with the Schr√∂dinger's cats?(side question: in my text editor when I'm trying to save I get a "utf-8 codec can't encode character x in position y: surrogates not allowed" but in the command prompt I can paste and run code with those characters, I assume it is because the cats exist on a different quantum level (SMP) but how do I normalize them?)Is there anything else I should do to make sure all characters are counted as "1"?
Your editor is producing surrogate pairs, not the actual code points, which is why you are also getting that warning. Use:to define the cats without resorting to surrogates.If you do have a string with surrogates, you can recode these via UTF-16 and allowing surrogates to be encoded with the 'surrogatepass' error handler:From the Error Handlers documentation:'surrogateescape'  On decoding, replace byte with individual surrogate code ranging from U+DC80 to U+DCFF. This code will then be turned back into the same byte when the 'surrogateescape' error handler is used when encoding the data. (See PEP 383 for more.)
For consistent codepoint counting on any version of Python, encode to UTF-32 and divide the byte count by 4.


Answer URL
https://docs.python.org/3/library/codecs.html#error-handlers
