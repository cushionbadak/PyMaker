Natural Text
I am given a number of iterables , I need to produces all the values in the first iterable, followed by all in the second, ... , all values in the last iterable alternatively. Example :It is expected to produce the valuesI know to print all the characters in sequence likeHere is the code:But how do I yield them alternatively?
If you want to terminate on shortest list use zip:Make an iterator that aggregates elements from each of the iterables.If you want to use all items use itertools.izip_longest:Make an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with fillvalue.Note that it skips None values (can be changed with fillvalue).Without itertools:To stop on first "missing" item:And if you're using generators (or iterators) you'll get StopIteration when one of them is done, so you can use iter to create a general function:
This will do what you want.  It works for any input, it won't trip up if one of the items is None.  It uses the builtin itertools module, and will work on python 3.x and python 2.7 with only the builtin python modules.  It is based on the roundrobin function from the Python itertools documentation:This version works basically the same, but is a bit shorter:And a version without itertools:You can use any of these like so:Or here is a simpler one-liner


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/itertools.html#itertools-recipes
