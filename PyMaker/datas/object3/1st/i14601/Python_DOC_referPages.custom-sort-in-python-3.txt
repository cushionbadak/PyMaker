Natural Text
I am starting out on learning Python 3.I am wondering how to perform a custom sort. For instance, I might want to sort a list of animals in the following manner: sort by first character ascending, then by length descending, then by alphanumeric ascending.A list made up of "ant", "antelope", "zebra", "anteater" when properly sorted would become "anteater", "antelope", "ant", "zebra".I have read a little on the docs but don't quite get the "key" argument to the sort method. Any examples?PS: this isn't a College assignment question. I am just looking to play around with python a bit.I learnt java a long, long time ago and might have implemented the custom sort something like the following:
The sorting key is a function that, given a list element, returns a value that Python knows how to compare natively. For example, Python knows how to compare integers and strings.Python can also compare tuples and lists that are composed of things it knows how to compare. The way tuples and lists get compared is that earlier items in the tuple or list take precedence over later values, just as you would expect.In your case, you would want to make the following key function:Items with smaller keys always come earlier in a sorted list. Thus, a smaller initial character causes an animal to come earlier. If two names have the same initial, a longer name length causes an animal to come earlier because the negative name length is smaller. Finally, if two animals' names have the same initial and the same length, the tie is broken by lexicographic order.This program demonstrates how to sort a list with the above key function:
The Python docs give excellent examples for .sort and sorted()That said:The key here is the third letter of each animals name. I made the third letter the key using a lambda function lambda: animal: animal[2]. This lambda function allowed me to specify the third letter, because I couldn't just say key=animal[2], as animal would be undefined.


Answer URL
https://docs.python.org/3/howto/sorting.html
