Natural Text
Consider the below situation. I have a list:Which just have some strings, all of which are a kind of internal identifiers, completely meaningless. I also have a dictionary (it is filled in different part of code):This dictionary has mentioned identifiers as keys, and values assigned to them are, well, good values which mean something.I want to create a new list preserving the order of original list (this is crucial) but replacing each element with the value from dictionary. So I thought about creating new list by applying a function to each element of list but with no luck.I tried to create a fuction:And then map it:It just returns me  Nothing elseAnyone tried to solve similar problem?
Just convert the result to list:Why? map() returns an iterator, see https://docs.python.org/3/library/functions.html#map:map(function, iterable, ...) Return an iterator that applies function  to every item of iterable, yielding the results. If additional  iterable arguments are passed, function must take that many arguments  and is applied to the items from all iterables in parallel. With  multiple iterables, the iterator stops when the shortest iterable is  exhausted. For cases where the function inputs are already arranged  into argument tuples, see itertools.starmap().which you can convert to a list with list()Note: in python 2, map() returns a list, but this was changed in python 3 to return an iterator


Answer URL
https://docs.python.org/3/library/functions.html#map
