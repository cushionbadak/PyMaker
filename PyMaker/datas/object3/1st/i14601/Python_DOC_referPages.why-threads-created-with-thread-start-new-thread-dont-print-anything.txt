Natural Text
I found this simple code at https://code.google.com/p/pyloadtools/wiki/CodeTutorialMultiThreadingBut when I run this, it works on IDLE, but not on eclipse which uses PyDev.  Any idea how to fix it?Note:  I think the main program terminates before the threads run. The threads dont get enough time to run I guess. How do I fix it? May be should I use join?
Quoting the Caveats section of _thread documentation,When the main thread exits, it is system defined whether the other threads survive. On most systems, they are killed without executing try ... finally clauses or executing object destructors.When the main thread exits, it does not do any of its usual cleanup (except that try ... finally clauses are honored), and the standard I/O files are not flushed.There are two possibilities here.The main thread starts three threads but it exits before the threads finish the execution. So, the standard I/O files are not flushed, as they are buffered, by default.Or, the main thread dies, and as per the first bullet point quoted, all the child threads are killed in action.Either way, you need to make sure the main thread doesn't die before the children complete.But when you run from IDLE, the main thread still exists, so, the I/O buffers are flushed when the threads actually complete. That is why it works in IDLE but not in eclipse.To make sure that the main thread exits only after all the threads complete, you can make it wait for the child threads with1. SemaphoreYou can use Semaphore, like this2. Lock ObjectsAlternatively, you can use the _thread.lock objects, like thisNow you will see that the program always prints the hello from message.Note: As the documentation says, _thread is a Low-level threading API. So, better use higher level module like threading, where you can simply wait for the all the threads to exit with join method.
From https://docs.python.org/3/library/_thread.html#module-_threadThe threading module provides an easier to use and higher-level threading API built on top of this module.The module is optional.So please use threading, not the optional _thread module.


Answer URL
https://docs.python.org/3/library/sys.html#sys.stdin
https://docs.python.org/3/library/_thread.html#_thread.allocate_lock
https://docs.python.org/3/library/threading.html#module-threading
https://docs.python.org/3/library/threading.html#threading.Thread.join
https://docs.python.org/3/library/_thread.html#module-_thread
https://docs.python.org/3/library/threading.html
