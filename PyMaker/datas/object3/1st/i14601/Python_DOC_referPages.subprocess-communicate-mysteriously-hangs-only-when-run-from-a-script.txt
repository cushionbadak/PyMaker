Natural Text
I am invoking a Python tool called spark-ec2 from a Bash script.As part of its work, spark-ec2 makes several calls to the system's ssh command via use of the subprocess module.Here's an example:For some reason, spark-ec2 is hanging on that line where communicate() is called. I have no idea why.For the record, here is an excerpt that shows how I'm invoking spark-ec2:What's killing me is that when I call spark-ec2 alone it works fine, and when I copy and paste commands from this Bash script and run them interactively they work fine.It's only when I execute the whole script like thisthat spark-ec2 hangs on that communicate() step. This is driving me nuts.What's going on?
This is one of those things that, once I figured it out, made me say "Wow..." out loud in a mixture of amazement and disgust.In this case, spark-ec2 isn't hanging because of some deadlock related to the use of subprocess.PIPE, as might've been the case if spark-ec2 had used Popen.wait() instead of Popen.communicate().The problem, as hinted to by the fact that spark-ec2 only hangs when the whole Bash script is invoked at once, is caused by something that behaves in subtly different ways depending on whether it's being called interactively or not.In this case the culprit is the GNU coreutils utility timeout, and an option it offers called --foreground.From the timeout man page:Without this option, Python's communicate() cannot read the output of the SSH command being invoked by subprocess.Popen().This probably has something to do with SSH allocating TTYs via the -t switches, but honestly I don't fully understand it.What I can say, though, is that modifying the Bash script to use the --foreground option like thismakes everything work as expected.Now, if I were you, I would consider converting that Bash script into something else that won't drive you nuts...


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate
