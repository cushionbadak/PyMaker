Natural Text
I have a few thousand CSV files in a directory on my machine that need to be validated based on a regex that I have formulated. The path_to_validator points to a Scala script, that is run through a windows .bat file on the command line. It reads the regex and the csv file and gives it a PASS/FAIL grade, which is printed to output.txt. The constraint is that this Scala script takes a directory as argument, not a Python list, therefore I cannot split the workload so easily between processes. I could have each process' files moved to a temporary directory, but the details of the project are such that, ideally, my deployed program should not need write privileges to the CSV files.This is the code:The issue is that it takes 1h 30min+ while utilizing only about 20% CPU. This should be an obvious candidate for parallelization speedup. The directory has 5000+ CSV files, and they all need to be processed. How can I split the workload onto 4 different processes in order to utilize all CPU power?This is the code I actually made:Please let me know of any pitfalls in my code.
Have a look on This introduction to the multiprocessing package.for example, try:with the returned dict, you can have a look on the results to evaluate some parsing errors or so. It will be a list of dicts with the csv names as keys.Also a good package for that is joblib, have a look on that too, under the hood it uses the multiprocessing package.


Answer URL
https://docs.python.org/3/library/multiprocessing.html
