Natural Text
Ok this might be trivial but for clarity, I am still asking it:So a string is not equal to True and even then the if thinks that it is True. Explicitly checking whether s == True returns False. So here for the if statement, not s is False! What is happening?
if s is analogous to if bool(s), i.e. evaluating the boolean truthiness of the value. A lot more values are truthy than just True. Since the string isn't the value True, s == True is false.By default, an object is considered true unless its class defines  either a __bool__() method that returns False or a __len__()  method that returns zero, when called with the object. Here are most  of the built-in objects considered false:constants defined to be false: None and False.zero of any numeric type: 0, 0.0, 0j, Decimal(0), Fraction(0, 1)empty sequences and collections: '', (), [], {}, set(), range(0)https://docs.python.org/3/library/stdtypes.html#truth-value-testing


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
