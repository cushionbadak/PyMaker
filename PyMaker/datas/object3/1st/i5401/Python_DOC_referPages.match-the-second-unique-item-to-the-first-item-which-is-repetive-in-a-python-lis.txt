Natural Text
I am looping over a list which produces lists that contain two items, for example;The first item in the list can be repetitive, the second item in the list is always unique. I want to restructure the list so the following output is produced. I want to have the first items in the list to be unique with the corresponding second items. The desired output;Is it useful to generate a new list of the second items in the list, then create a new list to get the unique strings from the first items? Then compare the two lists and map them in some way...I really have no idea. I don't know if there is some kind of Python functionality for this?
Since the data is sorted, you can use itertools.groupby:If the data weren't sorted, you could use a collections.defaultdict to collect all the second elements for each first. This is essentially the same approach that mshsayem chose in his answer where he uses a vanilla dict and setdefault:
Here is a way:If you want list of list (as your question) you can do this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/collections.html#collections.defaultdict
