Natural Text
Gah. I've spent a fair amount of time trying to find how to do this both properly and even hackishly, and I am just stumped. I have 2500+ HTML files that I've downloaded from a site, and I need only to extract a limited amount of information from any given page: the title of the talk described by the page (so I can collate this data with a giant CSV we already have), and then the event at which a given talk was given, and the date on which the talk was published. The HTML for these pages is sprawling and filled with <script> elements. I want only the one that is followed by a q. The line that starts this block looks like this:What follows is quite a bit of data. I need only the three items that look like this:Luckily, "filmed" and "published" only occur once in this large block, but "event" occurs several times. It's always the same, so I don't care which of these any script grabs.My thought was to use BeautifulSoup to find the <script>q element and then pass that onto the json module to parse, but I cannot figure out hot to tell soup to grab the <script> element followed by a q -- classes and ids are easy. Followed by ... not so much. To begin working on the JSON portion, I've created a text file which has only the contents of the <script>q element in it, but I confess that getting the json module to load this is not working terribly well. The code I have for the experiment first loads the text file with the JSON block I'm interested in, and then tries to decode it so I can do other things with it:But clearly the JSON decoder doesn't like what I have, because it throws a ValueError: Expecting value: line 1 column 1 (char 0). Bah!Here's what the first three lines of this script element looks like:And that is where I am at the current moment. Any light that can be shed on either the soup or the json to get this done would be much appreciated. 
Without knowing the full context, here's a poor man's attempt:Assuming your html looks something like this:You can code like this:Then you can start interpreting the jsons:There's a lot of assumptions here.  That's assuming all your texts within <script>q elements will always be starting with q("talkPage.init", and ending with a ).  Also it's assuming the texts returned follow the json format for your next stage of parsing.  I'm also assuming you have knowledge of how to parse the json results.
You can use a regex expression to match the part you want.To find the stuff you need you can either use pythons json library to parse it or match the last things with what you want. Since filmed and published are unique and event doesn't differ (as I understood?)ORThe latter needs to be filtered a bit to remove trailing ]" and preceding "[, or what not you want from it.I've heard beautifulsoup is also a good library for matching html-stuff, but im not so familiar with it.
Here's the script I ended up using, with real thanks to both @Idlehands and @Three. To reach into the weird single-quoted JSON, I took the entire JSON element and read it into a list, split on commas. It's a hack, but it mostly works. 


Answer URL
https://docs.python.org/3/library/json.html
