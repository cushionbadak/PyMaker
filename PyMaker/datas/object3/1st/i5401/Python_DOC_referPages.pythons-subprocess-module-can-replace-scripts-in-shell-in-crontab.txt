Natural Text
I am working on a task that should update a user's home directory to some value if it belongs to certain group. So, let's say a user was added to some group X, now his/her home directory should be /home/X. I am supposed to put it to work on crontab, my question is: Is that a safer approach? Or should I always prefer to code this kind of task in shellscript? I am still not clear if I could always use python to replace shell, because it is simpler to handle it.If someone has a link with pros of using python over shell and when is truly recommended in a productive cluster, I would thank a lot.
From the python subprocess pageUnlike some other popen functions, this implementation will never  implicitly call a system shell. This means that all characters,  including shell metacharacters, can safely be passed to child  processes. If the shell is invoked explicitly, via shell=True, it is  the application’s responsibility to ensure that all whitespace and  metacharacters are quoted appropriately to avoid shell injection  vulnerabilities.When using shell=True, the shlex.quote() function can be used to  properly escape whitespace and shell metacharacters in strings that  are going to be used to construct shell commands.Whether you need to use a shell or not depends on how you call it. From the subprocess popen info:args is required for all calls and should be a string, or a sequence  of program arguments. Providing a sequence of arguments is generally  preferred, as it allows the module to take care of any required  escaping and quoting of arguments (e.g. to permit spaces in file  names). If passing a single string, either shell must be True (see  below) or else the string must simply name the program to be executed  without specifying any arguments.So if you can call a subprocess with a list of elements, rather than building a string, and it’s easier for you to do that in python than a shell script it shouldn’t be a problem.Sorry the links are different versions of python, it seemed clearer but they said similar things, so check the correct one for your version of python.


Answer URL
https://docs.python.org/3/library/subprocess.html#security-considerations
