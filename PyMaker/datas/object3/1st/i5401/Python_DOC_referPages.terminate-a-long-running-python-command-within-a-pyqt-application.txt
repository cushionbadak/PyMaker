Natural Text
I have a PyQt GUI which I use to start long-running computations in Python. Here's a minimal example:From the main window, I can start a task by clicking the button. Then a modal dialog pops up and the task starts. It is okay if the GUI is blocked (I know I can prevent freezing the GUI thread by putting the task in a separate worker thread, but this is not the point). Critically, I want to be able to hit the "Cancel" button to terminate the task. Alternatively, since the long-running tasks are always Python commands, I could also live with terminating the task with Ctrl+C. I cannot change the long-running Python command: i.e. I can't break it up into tiny pieces and use a state variable in combination with threading, as is sometimes suggested. The alternative (pressing Ctrl+C) also doesn't work since PyQt doesn't seem to register it (even though the Python interpreter should while it is running the task).
The simplest way to do this is to use multiprocessing. This will allow you to run a task (or group of tasks) concurrently and terminate processing at any time. However, make sure you read the programming guidelines to understand how to use the module effectively. In particular, although the terminate method works fine for self-contained tasks, it should not be used with multiple tasks that use shared resources.Here is a simple demo based on your example:


Answer URL
https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing
https://docs.python.org/3/library/multiprocessing.html#multiprocessing-programming
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.terminate
