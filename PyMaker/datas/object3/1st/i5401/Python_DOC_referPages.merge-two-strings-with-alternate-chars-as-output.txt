Natural Text
I got the task to alternately combine the letters of two strings with the same length.For example:And I got the following Problem when I run my code. I think every relevant variable is a String.
One of the first things you should learn when programming is to use meaningful variable names, not cryptic, 1-letter names. Your code is not alternating between the two input strings. You're looping through the first string, then looping through the second string, and never repeating. I'm not sure what the point of the c variable is. You set it to 1 at the beginning of the script, then add 1 to it later, but then the script ends. Was there supposed to be another loop around all that code?The loop that checks if f is in range(c, c+1) could just be f = c, there's no point to looping.The error is coming frombecause x is a string and f is an int. I suspect you wanted to do x = x + s[f].The whole thing can be simplified greatly.
You can do it in one line using zip and join.or the more functional-style:which both printBraking the code down:zip().join().join() againFinally, and for your entertainment and learning only, two additional, more old-school approaches:and
You have several problems in your code. The one that is the most important is your naming problem. Give meaningful names to your variables.Now, to the logic. You need to iterate through your strings at the same time, or use an index on both at the same time, and not one after the other.You could do as such, for a more pythonic way of doing this.
One can simply use map with join to get desired result: zip in not needed here since 2 strings/lists can be provided to map which has a lambda function that takes 2 arguments. Also, + symbol works to concatenate 2 strings here. 
Get a and b with input or however you want. No need to copy that. The point is the code.Result is:


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/stdtypes.html#str.join
