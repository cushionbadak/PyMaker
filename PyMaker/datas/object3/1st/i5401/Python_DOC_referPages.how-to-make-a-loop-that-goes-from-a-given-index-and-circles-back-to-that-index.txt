Natural Text
This question already has an answer here:Python wrapping around on a list when list index is out of range                    3 answers                Title may be confusing but I don't know how to express myself any better. What I have is a list that looks something like this:what I want to do is a for loop that, for example, starts at index 3, so 'd' and then goes to the end but at the end of the list insted of finishing goes back to the beginning, goes through 'a','b','c' and then finishes at 'd'. I tried doing it like this with a while loop:This sorta worked but it will never print out 'c' but if I put 3 as index the loop will never even start. Is there a more elegant solution to do something like this? 
You can use the modulus operator against the length of the stringExample
So, definitely like @CoryKramer's approach, but this one doesn't require you to calculate the length of the iterator:
Not the most efficient -- but if your list is short and you just want pure simplicity, you can shift your list; ... Or use a deque; 
Using itertools.cycle also works here:Which Outputs:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
