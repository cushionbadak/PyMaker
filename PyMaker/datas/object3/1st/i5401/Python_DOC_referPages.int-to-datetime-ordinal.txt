Natural Text
So I have two datetime ordinals, StartDateOrdinal and EndDateOrdinal, and I want to loop through these dates with a step 3. This works just fine, but I notice that the a variable returns an integer instead of an ordinal, and this is a problem for me as I want to retrieve these dates with the datetime.year, .month, and .day methods, which obviously isn't possible with an integer.Any simple way around this? Either by converting the integer back to a datetime object, or by looping through datetimes some other way. Thanks!
The essence here is that as you call methods on various objects, you may change the type of object. In Python, all objects have methods and attributes associated with them, but each type of object has different methods/attributes. The .toordinal() method on a datetime object returns integers (int) so your StartDateOrdinal object is no longer a datetime object.int does not have a .fromordinal() method. That method is found in the datetime library.This should solve your problem:
That's because you're not iterating through datetime types. When you get StartDateOrdinal and EndDateOrdinal - they are integer types and not date type types. For exampleSo instead you doinside the loop you convert it back to a datetime object and then use the methods to get month, year, and dateIf you already have the ordinal dates, just import datetime as dt and use the changes within the loop


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.date.toordinal
https://docs.python.org/3/library/datetime.html#datetime.datetime.fromordinal
