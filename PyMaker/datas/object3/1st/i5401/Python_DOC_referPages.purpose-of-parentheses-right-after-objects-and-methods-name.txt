Natural Text
I am just new in Python and have limited knowledge about Object Oriented Programming. Just want to ask a few things about Object, Methods and Function.I noticed that an Objects have parentheses right after its name like book = Workbook() and some have no parenthesis on it. May I know the difference between the two?Similarly, for methods right after the name of the method b.get_sheet_names() have parentheses. May I know what is the concept behind inclusion of parentheses right after the object name and methods.
Parentheses after a name means a function/method is called there.An object can be created by calling its constructor(__init__ function). Constructor is invoked by calling the class itself as a function Workbook()The functions or object methods are called similarly using parentheses.
The empty parenthesis indicate a function call with no arguments. In both cases you mention this is consistent with the way you would call the object/member, had they any arguments. circle = Circle(10)squared = square_me(2)The first case is special to object oriented programming: it is a constructor call. These are specified by the __init__-method in Python. In this case the constructor takes no arguments. The concept of calling with no arguments makes sense in Python because functions with no arguments typically have observable side-effects, e.g., print_line_of_ones(), or on an object do something based on the object state, e.g., circle.getArea(). In Python a class-member function takes self, the object itself, as first argument.There are some languages which allow you to omit the parenthesis if there are not arguments (e.g. Scala), but Python requires you to use them, which is reasonable given that it can otherwise be difficult to distinguish them from members, and Python does not statically check this.


Answer URL
https://docs.python.org/3/tutorial/classes.html
