Natural Text
I'm wondering if it is possible to define a range of elements within a list definition by list comprehension. I would like to achieve something like this as a result:I tried this:But this yields ['a', 'b', [1, 2, 3], 'c']Or if i try with tuple, I get a generator object like so: ['a', 'b', <generator object <genexpr> at 0x0000000002C9A9E8>, 'c']Can it be done somehow?Thanks!
This is what you need:
In recent versions of Python 3 you can use star unpacking inside the list definition:outputBear in mind that it can get messy if you mix data types inside a list. If you want a heterogeneous collection, it's generally better to use a tuple.Also note that while is valid, and will produceyou can't get a flattened version by doingIf you're stuck on an older version of Python, your best option is to use itertools.chain.from_iterable:
result_list = ['a', 'b'] + [i for i in range(1, 4)] + ['c']
As documented in https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists you can unpack lists as arguments using the * character. So your answer would be:


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
