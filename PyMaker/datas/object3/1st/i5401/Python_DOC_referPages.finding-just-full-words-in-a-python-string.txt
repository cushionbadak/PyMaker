Natural Text
Basically it all comes down to finding just the fullword, not matching also a substring thereof.I have phrases like: texto = "hello today is the first day of working week" and what I wanted to do is to split that phrase into words to see if any matched fullwords that I have obtained from a sql query, like this:so there I have a tuple of keywords.So, yes, of course, you would split the phrase like this:but while that does indeed find me words, it also "finds" me things that I would have not wanted or expected (a substring of a word):I know that in PHP you would do something like this:and I ve read quite a few discussions on this at SO. Some people say that you just do split, (but that is what I have done), others say use this:in isn't how it's done.is this latest example the way to do it? according to the shell interpreter it would match the second row.
I dont't see why split() should not work. The issue is the .__str__() (which I don't see any need for). It creates one single string in which the keywords are searched - and then it will find substrings as well. The following is working for me:work and sun should not match, work is a substring in the text, sun is not in the text.Output is 


Answer URL
https://docs.python.org/3/library/re.html#re.search
