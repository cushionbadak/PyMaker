Natural Text
Consider this snippet:My attempt was to pass a  Python dict to json.dumps(), and then use json.loads() to get it back. But that doesn't happen, probably because JSON alays considers keys as strings. Is there any other way I can retain the original key types? 
The conversion of integer keys in Python dicts to JSON-compliant string keys by json.dumps() is lossy: once done, there's no way to tell whether the original key was the integer 23 or the string '23' (unless that information is stored elsewhere).That said, you can force json.loads() to convert keys into integers wherever possible, by passing an appropriate function as an object_pairs_hook argument:Usage:Expanding on this, it's also possible to write an object_pairs_hook which converts not only integers, but all the other non-string keys which json.dumps() might have converted to strings:Usage:
We can use str(value) in place of json.dumps(value), and ast.literal_eval() in place of json.loads()Just posted as an initial solution, expecting a more sophisticated one.


Answer URL
https://docs.python.org/3/library/json.html#json.load
