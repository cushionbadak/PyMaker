Natural Text
I have this list of tuples [(amount, name)]:I am trying to compare them by their names and if there is a tuple that has the same name, I want to add the amounts together.The output would go into another list with the same structure [(amount,name)].I managed to extract the name part with this:The output:How can I compare the names with each other?
One way to do these sorts of operations is to use dict.setdefault() like:Code:How does this work?Start by defining a dict object to accumulate the amounts for each name.Step through every pair of amounts and names:Using the dict property that things that hash the same will end up in the same slot in dict, and the dict method: setdefault() to make sure that the dict has an empty list available for every name we come across, create a list of amounts for each name:This creates a dict of lists like:Finally using a comprehension we can sum() up all of the items with the same name.Results:

First sort your list, then use itertools.groupby with a small lambda function:Which yieldsOr, even shorter with a dict comprehension:
You can group the amounts per name with a collections.defaultdict, then sum the amounts at the end:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
