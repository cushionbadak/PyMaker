Natural Text
So the first 2 steps I took to come to this point were as follows:I opened a textfile. The print-method provided me with this:I converted these lists into a dictionary. It looks like this now:My goal was to return this dictionary within a function, so that it looks like this when it's printed in a main function:I tried applying a newline before each key but it only prints this:This is my function (including the main function):
Dictionaries (like all built-in containers) are represented with their contents shown as representations, essentially using the repr() function on each. For strings, those are meant to be as helpful as possible in that they are shown as string literals that can simply be copied and pasted to recreate their value. That means they also show unprintable characters or characters with special meaning as escape sequences. Your newline characters are just such characters.In other words, you can't do what you want just by inserting \n characters in the string values.Instead, you need to do your own formatting if you really want to show your dictionary that way. Just print out the keys and values yourself:Remove the \n addition in your reading code; it can be simplified to just produce the dictionary directly with a dictionary comprehension:You generally should keep presentation and data structure separate. Those newlines in the keys can easily cause issues elsewhere, and they are only there for the presentation output.Demo of the output:
While a very good answer is given, this would be an alternative method of printing the dictionary, by converting its key/item pairs to a list, same result, just less lines of code, this answer given as alternative:but the last line looks more complex and less "readable", output the same:
You could use template string or multiple print calls to achieve this.


Answer URL
https://docs.python.org/3/library/functions.html#repr
