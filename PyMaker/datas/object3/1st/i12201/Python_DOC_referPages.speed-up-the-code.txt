Natural Text
I'm trying to speed up the following code. A program should find the prevalent number in a string. This is the number, which appears in a string for more than len(string)/2times. The challenge is that the input file consists of a random number of strings, each can contain several thousands numbers. I've tried the brute force approachand it yielded about 10 seconds of runtime.The fastest version runs for about 0.8 secondsAre there any ways to further increase performance?
I think I would use the .most_common(1) member function of collections.CounterSee: https://docs.python.org/3/library/collections.html#collections.Counter.most_commonAlthough I don't think that there will be much speed to be gained. The heavy lifting is the frequency counting of all elements in nline.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter.most_common
