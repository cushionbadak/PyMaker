Natural Text
I have a python code which uses multiprocessing Pool map. I am spawning multiple children from map, each of them reads a separate file, and I collect them in the end. My goal is to have a pandas dataframe in the end that is a concatenation of all the output from the children, with duplicates dropped. I use this dataframe to do more processing (the rest of the code seems unrelated to the question I ask here, so I am omitting that part for brevity). This code runs periodically at the end of the week with new input files to read every time. Sometimes there are errors in the files children read, like null values in integer columns, or missing files, etc.. If any of these errors occur, I want the main script to die, ideally as soon as possible. I do not know how to make this happen in the most efficient way.I have tried, in turn:1-Making the child die by a raising SystemExit(1) if it encounters an error. I couldn't make parent die.2-Making child return an empty value or pandas dataframe in case of an error by try except blocks. I couldn't detect it properly in the parent.3-Using map_async with callback functions instead of map. The last one seems to work. However, I am not sure if this is the correct and most efficient way of doing this, as I do not use any output from the error callback function. Any comments and suggestions are appreciated.Edit: Sample input file: a.txt:b.txt:Desired final processing_time pandas dataframe: My code:
I think you could accomplish what you want by using the concurrent.futures module (https://docs.python.org/3/library/concurrent.futures.html).  Below is an example from the doc page that I modified to be closer to your problem.  In the example if work_func returns False that is considered an error and the program will terminate.Sample output:


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
