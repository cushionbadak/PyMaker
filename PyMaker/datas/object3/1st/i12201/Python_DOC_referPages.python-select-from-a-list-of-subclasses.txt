Natural Text
i am a beginner of python and programming in general. I am trying to write a small program for some calculations. I have a material: concrete and several types of it. I created a base Concrete and several subclasses. Base class Concrete has some attributes that are equal for all subclasses. User should select a concrete class. So i have two questions:1. How do i access the value that is equal for all subclasses(alphabt in this case). 2. how do i keep the chosen concrete? I am trying to use QCombobox but can't figure out how to use it properly for assigning. in materials i have concrete classes declared. Can anyone tell/suggest/help what i am doing wrong or show an example of same usage. Thank you in advance. 
I don't use Qt, so I can't help you with that side of things, but I can offer some suggestions to improve your class. You don't need subclasses for the different types of concrete, just create instances of your Concrete class. To do that, you need to give the class an __init__ method.The alphabt attribute can be defined as a class attribute, which is shared by all instances of the class.It's a Good Idea to give a class a __repr__ and/or __str__ method so it provides useful information when you convert it to a string, either explicitly or when using print.outputNote that we can access the .alphabt attribute from a Concrete instance or from the Concrete class itself.BTW, the format string 'Concrete({0}, {1})' can be simplified to 'Concrete({}, {})' in Python 2.7 and later.You could use the make_concrete helper function to create some pre-defined concrete instances in your materials module, or you could just use it in your onActivated method to create them "on the fly".


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__init__
https://docs.python.org/3/reference/datamodel.html#object.__repr__
https://docs.python.org/3/reference/datamodel.html#object.__str__
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/tutorial/controlflow.html#more-on-defining-functions
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
https://docs.python.org/3/library/collections.html#collections.namedtuple
