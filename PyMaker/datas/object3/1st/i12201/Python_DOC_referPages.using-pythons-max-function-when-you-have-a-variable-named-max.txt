Natural Text
Python includes the built in max() function. However, despite it being built in it is not a keyword. That is to say, you are allowed to do max=4. This makes sense since the maximum of something comes up a lot. But! If you use max as a variable, then it disables use of the max function in that scope. So if you do:You will get an error of int object not callable. Again, makes sense. But is there any way to specify that you would like the max function? Like a std.max()? This goes for all other built in functions as well. 
The __builtin__ (Python 2) / builtins (Python 3) module provides another way to access all built-in/standard identifiers for cases like this:This module is not normally accessed explicitly by most applications, but can be useful in modules that provide objects with the same name as a built-in value, but in which the built-in of that name is also needed.The name change in Python 3 is part of the "core languages" changes described in PEP 3100:In order to get rid of the confusion between __builtin__ and __builtins__, it was decided to rename __builtin__ (the module) to builtins, and to leave __builtins__ (the sandbox hook) alone.


Answer URL
https://docs.python.org/3/library/builtins.html
