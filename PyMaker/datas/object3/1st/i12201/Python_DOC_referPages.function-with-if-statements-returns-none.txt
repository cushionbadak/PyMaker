Natural Text
I have a function I'm writing that divides two numbers. I'm to add error messages if the user attempts 0/0 or x/0 where x is any number. Entering nonzero input yields the correct answer, but if the denominator is 0, the function prints the correct statement, followed by NONE.Any explanations? Here's my code:I've seen people have this issue when printing variables, and using return solved their issue, but here I am printing a string so I don't want to use return, right?
Functions in Python return None if there is no return statement and you only return in the else branch of your program.Consider throwing an exception instead of using print. You can find more information here, including an example of division by zero: https://docs.python.org/2/tutorial/errors.html
I just want to give you a short overview about how to improve your code by using Python's built-in exceptions.There are several built-in exceptions which will be raised automatically when doing faulty operations. So there is  ZeroDivisionError which is raised when dividing by zero. You can catch any of these exceptions by using try-except-blocks.I am using those built-in exceptions in order to tell the user if his input was invalid or if he decided to divide by zero.For doing this I rewrote your code as shown below:You can still do some further improvements or shorten my code, for sure. However, I decided to keep this code in this state since I do not want to confuse you too much at this point.


Answer URL
https://docs.python.org/3/library/exceptions.html#ZeroDivisionError
