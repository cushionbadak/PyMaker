Natural Text
I'm trying to use itertools to iterate through mathematical operators.Typically with an array of [1, 2, 3], using combinations I can get the results:etc.I want to use this on an array of [1, 2, 3] in such a way that:arises and gives results of the equation.How might I go about doing this?
A solution generalized to any number of operands, and preserving normal precedence of operators:
Here is how I would approach it:First make the list of all possible combinations:Then we will iterate through this list solving every possible outcome:Edit: Here is a way that follows the rules of operations
Not an elegant one (made on knee) but works, just to point out my logic.The idea is to reduce the list one by one in correct order. E.g.:Data: 1 * 2 + 3 * 4After Step 1 ( first * evaluated ): 2 + 3 * 4After Step 2 ( second * evaluated ): 2 + 12After Step 3 ( + evaluated ): 14The code:UDP This updated logic handles cases like (1 * 2) + (3 / 4) correctly.
Use the corresponding functions in the operator module and iterate over pairs of them.Now, if array can have an arbitrary length, it gets a bit tricker.The structure above avoids having to know the appropriate identity element for each operation.If you want to obey precedence (as seems likely), you'll want to create an expression and evaluate it with eval (standard warnings apply).I leave it as an exercise to expand this to produce parenthesized expressions like (1+2)*3 in addition to 1+2*3.


Answer URL
https://docs.python.org/3/library/operator.html
