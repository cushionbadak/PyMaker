Natural Text
Given the following example DataFrame:I want to subset this DataFrame by the 'Time' column, by matching a partial string up to the hour.  For example, I want to subset using partial strings which contain "05/10/2017 01:" and "05/11/2017 08:" which breaks up the subsets into two new data frames:andIs it possible to make this subset iterative in Pandas, for multiple dates/times that similarly have the date/hour as the common identifier?  
First, cast your Times column into a datetime format, and set it as the index:Then use the groupby method, with a TimeGrouper:g is an iterator that yields tuple pairs of times and sub-dataframes of those times. If you just want the sub-dfs, you can do zip(*g)[1].A caveat: the sub-dfs are indexed by the timestamp, and pd.TimeGrouper only works when the times are the index. If you want to have the timestamp as a column, you could instead do:Alternatively, you could just call .reset_index() on each of the dfs from the former method, but this will probably be much slower.
Convert Times to a hour period, groupby and then extract each group as a DF.
First make sure that the Times column is of type DateTime.Second, set times column as index.Third, use between_time method.
If you use the datetime type you can extract things like hours and days.
You can use the str[] accessor to truncate the string representation of your date (you might have to cast astype(str) if your columns is a datetime and then use groupby.groups to access the dataframes as a dictionary where the keys are your truncated date values:


Answer URL
https://docs.python.org/3/library/datetime.html
