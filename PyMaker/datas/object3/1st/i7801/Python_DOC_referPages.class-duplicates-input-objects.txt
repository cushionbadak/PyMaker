Natural Text
I have two python class objects that I use to extract data from Oracle to ArcMap.  The various activities in the process cause me to start with a list of 'column' objects and build a pyTable object.  The pyTable object has a list of insert Fields by name.  During __init__ I use the getSelect() function to populate the list of insert Fields.I have added a bunch of statements to make sure that each time I call pyTable I get a newly created object, but I'm still seeing a strange result.  The first time I use the class, all is fine.  The second time I issue the same statement, the colList is new, but the field list is duplicated.  My apologies for not cleaning out the extraneous code sections.  Where am I messing up my object references?Here are the execution results.  myList has 8 column objects.Here are the two classes:
You are making a shallow copy of the list passed to your class in the init function.See Shallow and deep copy operations in the Python documentation for some basic information.self.colList = ColList[:] makes a new LIST, but inside that new list are references to the same objects that were in the original list (a shallow copy).You need a deep copy:A deep copy has a new list, as well as new objects initialized to match the objects in the original list.  So if the objects in one class' list change, they don't change in every class.


Answer URL
https://docs.python.org/3/library/copy.html
