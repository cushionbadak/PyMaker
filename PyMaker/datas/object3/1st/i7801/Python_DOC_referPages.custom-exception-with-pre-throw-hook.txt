Natural Text
I want an Exception class that "does something" when it is thrown.Dummy example:When I throw it using:Chrome should be closed before the exception is thrown. Is there a magic method which can achieve it?  If not, what is the most elegant way to achieve similar behavior?EDIT:I prefer not to use init because init would be invoked even if the Exception is raised inside a try cache.
No such special method exists. All of these are documented in the Data model.Assuming you are using the (relatively good) practice of creating and initializing errors and then raising them, i.e.,instead of:You can simply overload the __intit__ method (Called to initialise it).You can also put it in a try / except. If you do this often, you can use a context manager.In both of these ways, if the on_raise method returns True, the exception will stop propogating. If it returns False (Or other falsey values, like None), it will be thrown further.You can also do this without a context manager, by overwriting sys.excepthook. This is like an __exit__ for the whole program, and is called when the program is about the end, and by default, displays the error. Note that this won't work if another program overrides it, and applies in all situations, including other modules, which may cause unexpected behaviour.And also, you cannot stop the exception and continue.


Answer URL
https://docs.python.org/3/reference/datamodel.html#basic-customization
https://docs.python.org/3/library/sys.html#sys.excepthook
