Natural Text
I have written this decorator that saves intermediate results in a json fileAnd usage isAnd I want to augment in to use the function parameters like this:Such that {n} is replaced with the value of n when calling the function.I tried replacing fname with fname.format(**kwargs), without any success.How can this be achieved ?EDIT:As Per @jonrshape's comment, this is the error I am getting after adding the .format(**kwargs)
You can use the inspect module.First we extract the wrapped function's signature:Then we bind the *args and **kwargs:Now bound_args.parameters is a dict of parameter_name:parameter_value which we can use to format our file name:Everything put together:
If n will sometimes be a positional and sometimes be a keyword argument, you can first search the keyword arguments kwargs, and if that fails, "fallback" to getting the value from args:Just for sake of completeness, I'll address your error.The reason your getting an UnboundLocalError error is because of how Python sees your variable definition.If a variable is already defined in the current scope, assiging the variable to a new value will simply rebind it to the new value. However, if the variable has not yet been defined, Python treats it as a variable definition, not a rebinding. That is why your code fails. Python expects fname to have been defined in the current scope, not a parent scope. But since fname was never defined, it raised an error.You can fix this error by using the nonlocal statement. From the docs:The nonlocal statement causes the listed identifiers to refer to previously bound variables in the nearest enclosing scope excluding globals. This is important because the default behavior for binding is to search the local namespace first. The statement allows encapsulated code to rebind variables outside of the local scope besides the global (module) scope.Here is an example of the usage:


Answer URL
https://docs.python.org/3/library/inspect.html
https://docs.python.org/3/library/inspect.html#inspect.Signature.bind
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-nonlocal_stmt
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-nonlocal_stmt
