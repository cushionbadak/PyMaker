Natural Text
Say that you have a string of bytes generated via os.urandom(24),and you'd like to store that in an environment variable,and retrieve the value from within a Python program using os.environ.The problem is that, here, foo has the string literal value '\\x1b\\xba\\x94... instead of the byte sequence b'\x1b\xba\x94....What is the proper export value to use, or means of using os.environ to treat FOO as a string of bytes?
You can 'unescape' your bytes in Python with:
One more option, just set it as binary data in Bash. This uses ANSI string quoting:
With zwer's answer I tried the followingfirst from bash (this is the same binary literal given by ybakos)then I launched the python shell (I have python 3.5.2)The last line of foo == FOO should return true, so the solution does not appear to work correctly.I noticed that there is an os.envirnb dictionary, but I couldn't figure out to set an Environment Variable to a binary literal, so I tried the following alternative which uses base64 encoding to get an ASCII version of the binary literal.First launch python shellThen in the bash shellThen back in the python shellThe last line shows that the 2 results are the same!!What we are doing, is first getting a binary value from os.urandom() and Base64 encoding it. We then use the Base64 encoded value to set the environment variable. Note: base64.b64encode() returns a binary value, but it will only contain printable ASCII characters. Then in our program we read in the Base64 encode string value from the environment variable, convert the string into it's binary form, and finally Base64 decode it back to its original value.


Answer URL
https://docs.python.org/3/library/os.html#os.environb
