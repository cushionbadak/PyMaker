Natural Text
This question concerns Python and Tkinter. I'd like to use two different ttk themes simultaneously, e.g. 'clam' and 'vista' in one Tkinter window. So I wrote this:The code loads, however:I expected the first Button's foreground to be blue and the second Button's foreground to be red, and for two separate themes to be used. Instead, both buttons have a red foreground, and both apply the same theme.Is it possible to use two separate ttk themes in one Tkinter program?
No, it's not possible, because theme has a global meaning in this context. You can represent theme as a set of styles for widgets (for widget layout elements, actually), you can change style and/or create a new one, but you can't use more than one of themes at the time, because widget's layout depends heavily on it.When you call theme_use('theme_name') tkinter rebuilds all widget's layouts and redraws your entire application, and you can easily check this, thanks to <<ThemeChanged>> virtual event.Here's a snippet. You will see three prints, caused by each button and by root himself.If you need different foreground for each button - then create a new style for each of them and use the style parameter:Here's an another snippet:Everything is well described here and there.
No, it is not possible to use two different themes at the same time. From the canonical documentation [1] for the function underlying the theme_use method (emphasis added by me):Without an argument the result is the name of the current theme. Otherwise this command sets the current theme to themeName, and refreshes all widgets.Here is a simple example showing how you can switch themes on the fly:
No. You can't use two different themes. But, you can create a style:You can create another style for a different widget


Answer URL
https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.theme_use
https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style
