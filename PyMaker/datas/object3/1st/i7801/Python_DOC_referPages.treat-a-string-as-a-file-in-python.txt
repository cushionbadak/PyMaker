Natural Text
In the interest of not rewriting an open source library,  I want to treat a string of text as a file in python 3.Suppose I have the file contents as a string:I want to treat this variable, i.e. the contents of a file, as a  path-like object that way I can use it in python's open() function.Here is a simple example which shows my dilemma:Clearly the example doesn't work because not_a_file is not a path-like object.  I don't want to write a file nor create any temporary directories for portability purposes.With that said, I need is to solve this mystery:What I've Tried So FarI've looked into StringIO and tried using that as a path-like object and no dice:import StringIOoutput = StringIO.StringIO()output.write('First line.\n')file_ptr = open(output,'r')Well this doesn't work because StringIO isn't a path-like object.I've tried tempfile in a similar fashion with no success.import tempfiletp = tempfile.TemporaryFile()tp.write(b'there is a lot of blah blah in this so-called file')open(tp,'r')Finally I tried mmap to see if I can write the string into memory and then open the memory pointer with open with no success.Any help is appreciated! :-)Edit 1: What I'm thinking of to possibly solve problemSo pathlib.PurePath can work with open() if PurePath is initialized to a file.  Perhaps I can create an instance of a class that inherits PurePath and when read by open(), it reads my string.  Let me give an example:
You can create a temporary file and pass its name to open:On Unix:On Windows, you need to close the temporary file before it can be opened:You then become responsible for deleting the file once you're done using it.
StringIO returns an StringIO object, it's almost equivalent to the file object returned by the open statement. So basically, you can use the StringIO in place of the open statement.Output:
With what I can tell from your comments and recent edits, you want a file that can be opened using the open statement. (I'll leave my other answer be since it's the more correct approach to this type of question)You can use tempfile to solve your problem, it basically is doing this: create your file, do stuff to your file, then delete your file upon closure.


Answer URL
https://docs.python.org/3/glossary.html#term-path-like-object
https://docs.python.org/3/library/functions.html#open
https://docs.python.org/3/library/pathlib.html#pure-paths
