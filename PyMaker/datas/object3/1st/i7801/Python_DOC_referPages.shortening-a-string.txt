Natural Text
I have a string:And it needs to be shortened so it looks like this:So basically it needs to take all repeating characters and write how many times they are repeating instead of printing them.I managed to do half of this:but this only does this for characters that are repeating but not patterns. I get it that I could do this by finding 'ab' pattern in string but this needs to be viable for every possible string. Has anyone encountered something similar?
You can easily do this with regex:Not much to explain here. The pattern (.+?)\1+ matches repeating character sequences, and the lambda function rewrites them to the form (sequence)number.
This is what I came up with, the code is a mess, but I just wanted to have a quick fun, so I let it be like thisIt makes babababbaaaaababbbab =>(ba)3(b)2(a)5ba(b)3abP.S. Of course answer of Rowing is miles better, pretty impressive even
I'm not sure what exactly you're looking for but here hope this helps.


Answer URL
https://docs.python.org/3/howto/regex.html
