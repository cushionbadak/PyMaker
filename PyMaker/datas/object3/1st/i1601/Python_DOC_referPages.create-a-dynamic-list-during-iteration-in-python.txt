Natural Text
BackgroundLet there be a set of integers Then it is possible to classify them into different equivalence classes modulo 6  ProblemCould we create an algorithm to classify all these integers into their respective equivalence class and store the results in a dictionary in python? For example More importantly, can we make d changes its size and names of the keys as the integer by which we define equivalence class (in this example, 6) changes? ProgressIt is possible to store all integers of equivalence class 0 modulo 6 in a list. But it is not clear how one can create a 'dynamic' dictionary that adjusts its size and names of the key when the integer in question changes (for example from 6 to 121). 
You could use collections.defaultdict:
Use the class value itself for your dictionary key.I'll assume that you can already handle initializing the dict; if not, look at supporting questions on this site.A dict comprehension can do this in a single assignment statement:Resulting value of d:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
