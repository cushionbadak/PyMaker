Natural Text
I want to convert a string (composed of alphanumeric characters) into an integer and then convert this integer back into a string:string --> int --> stringIn other words, I want to represent an alphanumeric string by an integer.I found a working solution, which I included in the answer, but I do not think it is the best solution, and I am interested in other ideas/methods.Please don't tag this as duplicate just because a lot of similar questions already exist, I specifically want an easy way of transforming a string into an integer and vice versa.This should work for strings that contain alphanumeric characters, i.e. strings containing numbers and letters.
Here's what I have so far:string --> bytesbytes --> intint --> bytesbytes --> stringtry it out:Here is an identical reusable version of the above:If you're using Python <3.6, remove the optional type annotations.Test:
Assuming the character set is merely alphanumeric, i.e. a-z A-Z 0-9, this requires 6 bits per character. As such, using an 8-bit byte-encoding is theoretically an inefficient use of memory.This answer converts the input bytes into a sequence of 6-bit integers. It encodes these small integers into one large integer using bitwise operations. Whether this  actually translates into real-world storage efficiency is measured by sys.getsizeof, and is more likely for larger strings.This implementation customizes the encoding for the choice of character set. If for example you were working with just string.ascii_lowercase (5 bits) rather than string.ascii_uppercase + string.digits (6 bits), the encoding would be correspondingly efficient.Unit tests are also included.Usage example:
Recall that a string can be encoded to bytes, which can then be encoded to an integer. The encodings can then be reversed to get the bytes followed by the original string.This encoder uses binascii to produce an identical integer encoding to the one in the answer by charel-f. I know it's identical because I extensively tested it.Credit: this answer.If you're using Python <3.6, remove the optional type annotations.Quick test:


Answer URL
https://docs.python.org/3/library/sys.html#sys.getsizeof
https://docs.python.org/3/library/binascii.html
