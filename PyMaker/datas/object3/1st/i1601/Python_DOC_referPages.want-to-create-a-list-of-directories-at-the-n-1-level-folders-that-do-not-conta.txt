Natural Text
I currently have a problem where I want to get a list of directories that are at an n-1 level. The structure looks somewhat like the diagram below, and I want a list of all the folders that are blue in color. The height of the tree however, varies across the entire file system. Due to the fact that all the folders that are blue, generally end their name with the string images, I have written the code in Python below: Now, I do not want to use this method, since I want a general solution to this problem, with Python or bash scripting and then read the bash script result into Python. Which one would be more efficient in practice and theoretically? 
To rephrase what I think you're asking - you want to list all folders that do not contain any subfolders (and thus contain only non-folder files).You can use os.walk() for this pretty easily. os.walk() returns an iterable of three-tuples (dirname, subdirectories, filenames). We can wrap a list comprehension around that output to select only the "leaf" directories from a file tree - just collect all the dirnames that have no subdirectories.
So another way to state your problem is that you want all folders that contain no subfolders? If that's the case then you can make use of the fact that os.walk lists all the subfolders within a folder. If that list is empty, then append it to dirList
today I had a similar problem. Try pathlib: https://docs.python.org/3/library/pathlib.html


Answer URL
https://docs.python.org/3/library/pathlib.html
