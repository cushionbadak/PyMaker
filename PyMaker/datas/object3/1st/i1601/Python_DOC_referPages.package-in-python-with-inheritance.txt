Natural Text
I know that this argument is trivial and treated in a lot of post, but I've read it and I'm still don't have clear the idea about how from a folder can be treated as package... take this example (I know that there is the *rc files that make the same result .. ) I have defined a base class named basequalityplot in which I've defined al the things that is necessary to customize a plot (suction in which I've defined the common parameter (steady or variable) , an update the rcParams ) in a class name quality plot, which contain the base class and more ...:the complete class named basequalityplot.py is reported in: enter link description herethe base module contains the derived classes ... often repetitive .. and I will report just one :well ... I would like to contain basequalityplot.py and qualityplot.py in the same directory (where qualityplot is the module that contain the class that I want use .. in this case I've report just the standard one) I've tried to create a folder named qualityPlot and then from a script in subdirectory try to import qualityPlot as is usually for import packjage .. but this doesn't works....May somebody help me ? :( 
To use modules in PythonEnsure the __init__.py file exists in the directory (note the underscores)Note that both the folder name and the file name are part of the moduleMake sure Python will find the path (say with PYTHONPATH) In your example, from basequalityplot import BasePlotThis expects to find a file basequalityplot.py in the current directory (or elsewhere directly on the python path, or a compiled version). Inside that file it expects to find the class BasePlot.I would like to contain basequalityplot.py and qualityplot.py in the same directory (where qualityplot is the module that contain the class that I want use .. in this case I've report just the standard one)I've tried to create a folder named qualityPlotWhat you've described here doesn't quite match your example code. If you have a folder structureI would expect the import statement to read6.4 in the Python Tutorial has a useful examplehttps://docs.python.org/3/tutorial/modules.html#packages
You need to create a (probably empty) __init__.py in the directory.Note that in Python there is no requirement or expectation for each class to be in its own file, so it's fine if you just want to create your child classes in the same file.Note also, a much better pattern for your parameters is to define a dictionary of defaults, and then update it with whatever comes in from kwargs:
You need to "help" the import by telling it where to look:It should work. I use that to write different programs placed at different places but calling to the same common library (personal stuff with maths and graphs mostly).


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages
