Natural Text
Given a dictionary and a limit for the number of keys in a new dictionary, I would like the new dictionary to contain the keys with the highest values.The given dict is:I want to get a new dictionary that has the keys with the highest values of length limit.For instance for limit=1 the new dict isif the limit=2 I tried this:but when I try limit=3, I getBut it shouldn't include orange:3 because orange and kiwi have same priority if we include kiwi and orange it will exceed the limit so it shouldn't include both. I should return 
The way to go would be to use a collections.Counter and most_common(n). Then you can take one more as needed and keep popping until the last value changes:
This is computationally not very good, but it works. It creates a Counter object to get the sorted output for your data and a inverted defaultdict that holds list that match to a score - it creates the result using both and some math:Test:Output:
As you note, filtering by the top n doesn't exclude by default all equal values which exceed the stated cap. This is by design.The trick is to consider the (n+1) th highest value and ensure the values in your dictionary are all higher than this number:We assume here len(largest_items) < n, otherwise you can just take the input dictionary as the result.The dictionary comprehension seems expensive. For larger inputs, you can use bisect, something like:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.defaultdict
