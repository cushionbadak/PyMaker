Natural Text
I'm writing a Python script to loop over all Git repositories in a certain folder. Now I want to include the current folder name in the git-log result, but I can't find how to do this in the git-log documentation.Is there a way to print out a current directory if you execute Git commands against a repository without being in that repository?My current git-log command looks like this:I know I can use both git --git-dir=repo/.git log and git -C /repo log to execute commands in subfolders. I also tried to use $(basename "$PWD") but it shows the current folder, but not subfolders.Any idea on how to do this?
From what I understand from your question, you want to add the current git repo name with each line from git log.Since you tagged Python, this might be a long shot, but you can use GitPython to determine if the subfolders inside a folder are git repositories. Then you can open a git log command with subprocess.Popen(), and print out each line with the repos name from stdout. Make sure to pip install GitPython before running this code.Here is an example:This works for me when I run the script inside a folder with all my git repositories. Note: There is probably a nicer way to do this with the git command itself or with bash. 
If you're looking for a fast GNU findutils + GNU Bash solution, look no further than:


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen
