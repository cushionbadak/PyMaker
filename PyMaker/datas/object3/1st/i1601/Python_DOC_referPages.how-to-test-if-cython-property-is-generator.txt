Natural Text
In IPython, I can see that a property of a Cython class is a generator by simply defining it and then calling:The call looks likeI am having trouble testing if that property is a generator:How can I determine whether a property of a Cython class is a generator?
Why doesn't the usual way work? First, as you already probably know, there is no difference between inspect.isgeneratorfunction(...) and isinstance(..., types.GeneratorType) - the inspect-module just calls isinstance(..., types.GeneratorType).On the other hand, types.GeneratorType is defined as CPython uses PyGenObject (here code, here documentation) for generators, there is no fancy logic for the comparison as for some ABC-classes, so the isinstance will boil down to comparing the C-object types.However, Cython returns a __pyx_CoroutineObject for generators (just check the cythonized code to see)which has nothing to do with PyGenObject as far as isinstanceis concerned - it doesn't really care whether generator is in the name of the type (but for us humans it can be really puzzling, because type(obj) says "generator").So you will have to roll out your own version of isgenerator, which takes also Cython-"generators" into account. There are many ways, for exampleand now:


Answer URL
https://docs.python.org/3/c-api/gen.html
