Natural Text
I want the summation of 3 different objects like:And tried to do this
You are returning a tuple, which doesn't have the __add__() method overloaded. You should return a mymath object instead:Edit: clarification of the solution added after commentEach + sign translates to an __add__() call. In your example, the operation x + y + z is actually performing two calls to __add__(): x.__add__(y).__add__(z). Adding parentheses to the expression may help: x + y + z actually translates to (x.__add__(y)).__add__(z).The problem happens in the second call to __add__(), since your method is returning self.x + other.x, self.y + other.y, self.z + other.z which is the tuple (self.x + other.x, self.y + other.y, self.z + other.z) (you can omit the parentheses in your code, and it's more pythonic, but it's equivalent and it's actually a tuple).A tuple is a fixed-length list of elements and it's a basic class of python language. You can read more about it here.The result of x.__add__(y) is the summation you would expect from x + y, but of type tuple. In the example, (6, 10, 14) == (2 + 4, 7 + 3, 6 + 8)You can check this running your code but printing just x + yAnd also:The second addition, though, fails, because the result of the first one is a tuple and not a mymath object. So (x + y) + z actually is calling the __add__() method of the tuple, which exists but has other meaning than the one you want. Therefore, you are obtaining the error TypeError: can only concatenate tuple (not "mymath") to tupleNote that adding two tuples is just appending them and not adding the coordinates element-wise: (1, 2, 3) + (4, 5, 6) ==> (1, 2, 3, 4, 5, 6)The solution to this problem is to return a mymath object as the result of the __add__() operation, allowing to concatenate more than one addition operation. I added the __str__() method to your class because otherwise the print is just showing a default representation of the class like <__main__.mymath object at 0x7f8654657390>.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__str__
