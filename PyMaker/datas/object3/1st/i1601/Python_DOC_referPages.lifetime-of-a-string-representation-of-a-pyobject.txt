Natural Text
I compare 2 languages… Tcl and Python on C-API… interacting with a external C-API function… the problem is the const char* String-Representation…Tcl→ the str is part of the obj and hast the same lifetime as the obj… dito… no cleanup is requiredPython→ the str is part of the strObj an a cleanup Py_XDECREF(strObj) is required…the cleanup in python is the problem because this requires a freaky housekeeping…because the lifetime of str depends code-logiceven if I do my OWN str copy using strstr I have to cleanup my OWN copy.Question: what is the general lifetime of an PyObject and the String-Representation
These are two different approaches to how the string representation of objects is managed. From Tcl docs for Tcl_GetStringFromObj:The storage referenced by the returned byte pointer is owned by the  object manager.From Python docs for PyObject_Str:Return value: New reference. Compute a string representation of object  o.So Python decides to compute the string representation of the object every time it's requested and invoking PyObject_Str is basically the same as invoking Tcl_NewStringObj. This does require the developer to do some memory management on the returned object, but on the other hand it means you don't have to worry about managing the internal string representation of the object every time the object is changed: the string is simply computed every time it's requested.


Answer URL
https://docs.python.org/3/c-api/object.html
