Natural Text
I have a binary file that contains 32-bit floats. I need to be able to read certain sections of the file into a list or other array-like structure. In other words, I need to read a specific number of bytes (specific number of float32s) at a time into my data structure, then use seek() to seek to another point in the file and do the same thing again.In pseudocode:What is the most efficient/least confusing way to do this?
You can convert bytes to and from 32-bit float values using the struct module:Sample output:Note the values read back are slightly different because internally Python uses 64-bit float values, so some precision got lost in the process of converting them to 32-bits and then back.
The binary information from your input file can readily be mapped to virtual memory using mmap.  From there, you can import the buffer into a numpy array, if desired.  One note - the numpy dtype may change depending on whether your 32 bit floats are signed or unsigned (this example assumes signed).  The array that get populated will contain the numbers (as opposed to the raw bytes).I tested this with an n=10000 array of random floats, converted to bytes:Then I read this "a" variable into the numpy array, as you would with the binary information from file.


Answer URL
https://docs.python.org/3/library/struct.html#module-struct
https://docs.python.org/3/library/struct.html#struct.unpack
