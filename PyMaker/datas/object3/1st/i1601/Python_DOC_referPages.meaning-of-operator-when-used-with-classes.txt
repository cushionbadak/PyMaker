Natural Text
I've been trying to follow a video tutorial on Python and cannot understand one operation the developer performs.The above example will print as the return value of z, I cannot understand why because I am performing a zip operation of two tuples?Alongside that problem, I do not understand why removing the * during the return of __add__ causes a problem i.e return Polynomial(*(x + y for x, y in zip(self.coeffs, other.coeffs))) to return Polynomial((x + y for x, y in zip(self.coeffs, other.coeffs)))What is the * operator doing, and why is z an object of Polynomial?The _add__ method does not contain a parameter containing a * or ** and is therefore a different situation.
So first.Your print is ok. You defined a generator using () parentheses. You can change this to [] and then you should see the elements in list.Or you can use your generator, so print:Second, the *.It will simply pass iterable as separated args, so:Will do:You can read about this in official docs (single asterisk), here: https://docs.python.org/3/reference/expressions.html#expression-listsAnd here (double asterisk): https://docs.python.org/3/reference/expressions.html#dictionary-displays
When in a function declaration, * is list of args send.For exemple:output :And when is not in function declaration, it's for unpack the list.For exemple:or other exemplewill output:
Consider this easy example:In this case, the asterisk evaluates the generator expression. So when doingyou evaluate the generator expression.


Answer URL
https://docs.python.org/3/reference/expressions.html#expression-lists
https://docs.python.org/3/reference/expressions.html#dictionary-displays
