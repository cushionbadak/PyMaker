Natural Text
I am looking for a way to create several lists and for the keywords in those lists to be extracted and matched with a responce.User Input: This is a good day I am heading out for a jog.List 1 : Keywords : good day, great day, awesome day, best day.List 2 : Keywords : a run, a swim, a game.But for a huge database of words, can this be linked to just the lists? Or does it need to be especific words?Also would you recommend Python for a huge database of keywords?
The first thing to do is to break the input string up into tokens. A token is just a piece of the string that you want to match. In your case, it looks like your token size is 2 words (but it doesn't have to be). You might also want to strip all punctuation from the input string as well. Then for your input, your tokens are     ['This is', 'is a', 'a good', 'good day', 'day I', 'I am', 'am heading', 'heading out', 'out for', 'for a', 'a jog'] Then you can iterate over the tokens and check to see if they're contained in each one of the lists. Might look like this:One thing you will likely want to do to optimize this is to use sets for list1 and list2, instead of lists. sets offer O(1) lookups, as opposed to O(n) for lists, which is critical if your keyword lists are large. 


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=set#set
