Natural Text
When using an if/else statement to verify data was found to return the proper status code, my code within the loop to parse the response becomes completely unreachable. The following works as intended.200 Result:404 Result (no data found but still returns 200)So that works, but I want to check for no data found so I wrote a conditional that gets the row count. Here are examples of its use.Code Sample200 Result:The data just comes back as null and after testing with prints I found that at for r in res: my code is becoming unreachable. I've verified all indents.404 Result:The count is 0 so we get our 404 return, so I know the count and conditional are working.If I put a print() right after else: it will run, but the loop will not.
By calling list() on the cursor, you exhaust the iterator, leaving nothing else for your else branch to loop through. The toy code below demonstrates this, and I have made some alterations for better practice:I used the with context manager which will handle closing the database for us even in the event of an error.I've used parameterized queries to retrieve values; these will help protect against SQL Injection.I've demonstrated using .fetchall() to retrieve results. Although iterating directly over the cursor is more efficient than generating the whole result list upfront, it allows you to iterate multiple times, in addition to assigning the results to a meaningful name.Example:
It looks like cur is an iterator, and that res is a reference that iterator. When you call list(cur) it exhausts the iterator, and then you throw that data away. Then you try to iterate through res, there's nothing left and so your for loop does nothing.The obvious answer would be to do:


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-with-statement
