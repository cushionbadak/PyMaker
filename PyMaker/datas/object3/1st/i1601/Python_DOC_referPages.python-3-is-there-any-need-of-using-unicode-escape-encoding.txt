Natural Text
This link lists out some python specific encodings.One of the encoding is "unicode_escape".I am just trying to figure out, is this special encoding really needed?If you could see above, 'l' which is a unicode object, has already taken care of escaping the backslashes. Converting it to "unicode_escape" encoding adds one more set of escaped backslashes which doesn't make any sense to me.Questions:Is "unicode_escape" encoding really needed?why did "unicode_escape" added one more sets of backslashes above?
Quoting the document you linked:Encoding suitable as the contents of a Unicode literal in ASCII-encoded Python source code, except that quotes are not escaped. Decodes from Latin-1 source code. Beware that Python source code actually uses UTF-8 by default.Thus, print(l.encode('unicode_escape').decode()) does something almost exactly equivalent to print(repr(l)), except that it doesn't add quotes on the outside and escape quotes on the inside of the string.When you leave off the print(), the REPL does a default repr(), so you get backslashes escaped twice -- exactly the same thing as happens when you run >>> repr(l).


Answer URL
https://docs.python.org/3/library/codecs.html#python-specific-encodings
https://docs.python.org/3/library/codecs.html#python-specific-encodings
