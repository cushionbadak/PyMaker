Natural Text
I have been troubles by this. I have two listslista = ["a", "b", "c", "d"]listb = [80, 90, 70, 60]I want to map it so "a" has a value of 80 "b" has a value of 90 "c" has a value of 70 and "d" has a value of 60 Then, I want to print the string that has the second largest value, which is "a"Is there any way to do this?
To determine the second highest value, you need to track, at a minimum, the top two values in your iterable. So use heapq again, similar to your previous problem.Only for large values of n should you consider a full sort, where sorted may perform better.
It can be done with argsort'ing listb which returns the indices of the sorted items. Then select from lista with the second highest index. argsort is available in numpy.
One way of approaching this is to create a dictionary where the list of characters is the Key and the list of integers are the ValuesThere are probably a ton of ways of doing this, this is just one!Zip takes two lists and creates a dictionary out of them, the first argument being the Key, and the second argument being the valueThen you could use this to sort the dictionary by value from smallest to largestThen to access the second to largest you could access the dictionary from the right hand side (Negative Indexing)
You can use pandas for this:Then find the 2nd highest like below:
Here's a simple enough version for the same
The sorted() function takes an optional key argument:You could zip it together to a pairs of lista and listb and sort these after the second item in each tuple with a lambda function as key argument.Then just pick first position of the second pair


Answer URL
https://docs.python.org/3/library/functions.html#sorted
