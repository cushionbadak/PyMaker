Natural Text
Given some data:ButAndWhy do we need to use parentheses (~s).values or store ~s.values in a new variable in order for ~Series.sum() to give us the correct number of False values in s?This is because of precedence, as stated by @juanpa.arrivillaga and @cwallenpoole. Indeed:
Because the precedence of attribute access is higher than the precedence of the ~ operator. So it is summed before it is negated.A lot of the numpy/pandas objects override the bitwise operators for vectorized computations. Unfortunately, that will cause them to behave unexpectedly.In other words, it is getting evaluated as:
It has to do with evaluation order (or precedence). ~ produces the inversion of the expression to the right.
Without parentheses first sum() is called with the original values. The result of sum() is then inverted.  With (~values).sum the values are inverted first and then sum() is caled with the inverted list.


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
https://docs.python.org/3/reference/expressions.html#operator-precedence
