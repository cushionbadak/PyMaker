Natural Text
I have a nested containing values of different lengths as so:I want to print them like this:I have tried using pprint to achieve my aims with the following code:Where master is the nested list and sub the lists within it. This however gives me an output like so:Is there a python module that allows me to relatively easily achieving what I want, without some sort of convoluted hack?Thanks
Pandas can help.Output:
You may use the following code:Which is printing the output like so:In case you want to have "," too, just change the linetoAnd the complete thing as a one-liner:Or in case you need a function:EditAs pointed out in the comments this is also a good use-case for the python map function. Which can be used in order to make everything shorter ;)
Your concrete format wishescan be solved by printing with ljust to add the needed spaces:Output:Doku:str.ljust(width[, fillchar]) for left-justify in width print(*objects, sep=' ', end='\n', ...)Generally for formatting you can use the  string format mini language to format your output to your liking: Output:The format string "{:<{}} ".format(elem,max_len+2) formats element rightaligned into max_len+2 characters. The first thing is just to make your , not appear on the start of the line.
You can use this:Output:
You can do this:Results:Explanations:spacing is defined by first gathering the maximum lengths of each "column" in your data.  We can group the columns by using:Which gives a transposed copy of your data like this:Then we use the map function to apply the len(str(x)) function over these columns:Then we just get the max of each column, combine everything in a list comprehension and return it as spacing:Then, while we loop through your data, we want to also enumerate(row) so we know which "column" we're working with.  i will give you the index of the column in addition to the actual elem.After that, we assign a temporary str to append the comma if it's not the last element:This makes it a bit more readable then adding it as part of the format params.Afterwards we use string formatting (or e.ljust(spacing[i] + 1) if you wish) to add the predefined maximum spacing based on the column.  Note we format the string twice by first escaping the outer curly brackets ({{ and }}), so it can be in sequence:Note the use of end='' to make the print line continuous until the row has finished.  The spacing[i] + 1 is to account for the added comma.I must confess this might not be the most efficient way, but depending on what you're trying to achieve the solution can be markedly different.
Another way, given the nested list:Using string methods:To get:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.ljust
https://docs.python.org/3/library/functions.html#print
https://docs.python.org/3/library/string.html#formatspec
