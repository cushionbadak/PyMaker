Natural Text
The following code:outputs:However when enabling PEP 563 â€“ Postponed Evaluation of Annotations:The output is:How can I get the exact same object of type inspect.Signature with PEP 563 like without it?
The point of using PEP 536 is to not evaluate the annotations unless needed. The signature merely reports on the annotations.If for your purposes you need to have the annotations resolved, you have to do so yourself. PEP 536 tells documents how you do this:For code that uses type hints, the typing.get_type_hints(obj, globalns=None, localns=None) function correctly evaluates expressions back from its string form.[...]For code which uses annotations for other purposes, a regular eval(ann, globals, locals) call is enough to resolve the annotation.You could even use the typing.get_type_hints() function to assign back to __annotations__ before getting the signature:Doing this is safe even if from __future__ import annotations had not been used.
First, let's run a different example:This prints:So far so good, we have or Signature and our __anotations__ as we expected.Now let's do the same for the second example, it prints:So you're not getting the same Signature here. One gives you the actual class and the other a typing.ForwardRef to the class.


Answer URL
https://docs.python.org/3/library/typing.html#typing.get_type_hints
