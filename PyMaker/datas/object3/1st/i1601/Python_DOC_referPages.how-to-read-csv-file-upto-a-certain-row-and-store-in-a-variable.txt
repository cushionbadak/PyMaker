Natural Text
I want to read in a csv file and then store the data under the headers as specific variables.   Mys csv file:  I want to create a code than can automatically store the line under the multiplicity as data for the variable and so on for the rest of csv. I can't hard code values such as multiplicity is line[2] in the csv because the number of lines for each will change. I would like to create a loop that stores the data in between headers as a variable but I am not sure how. Ideally I would want the code to search for the first header and the second header and then save the values in between as the multiplicity variable. Then I would want it to find the second header and the third header and save those values as lattice parameter. Find the third header and the fourth header and the values in between as atom sites. And finally find the fourth header and the end of the csv and save the values in between as occupancy. 
My $0.02:Your approach listed in the question is unecessarily complex. You don't need to identify the first and second heading and append the data between. You need:A way to identify if you have hit a headerCode that will deal appropriately with the values after the headerThis isn't working code, but you probably need something from the python csv module, which may look something like this (RoadRunner's code is more complete, but I think we're both going along the same lines and would end up with pretty much identical output).
You could try collecting your rows in a collections.defaultdict(). As for grouping lines to their respective headers, it seems that you can just check if a line has all letters and spaces, and is one item read by csv.reader(). It's difficult to say since you've only shown a snapshot of your data. I've made these assumptions in the example below. After you have identified how you find the headers, you can simply add all the proceeding rows until another header is found. I've also assumed that your normal rows contain integers and floats. You can convert them directly to their proper types with ast.literal_eval(). Demo:Output:And now you have a dictionary that stores each header with its respective rows. This can be manipulated later, and added to if needed.Here is an example of printing each header and their respective rows(nested list):You can also have a look at How to use dictionaries in Python to understand more about dictionaries and how to manipulate them. 
and data dict looks like:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/csv.html#csv.reader
https://docs.python.org/3/library/ast.html#ast.literal_eval
