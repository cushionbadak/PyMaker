Natural Text
I'm trying to figure out how to print a random unicode character in Python 3 using the format \uXXXX where each X is a character in [0-F].  This is what I have so far:It seems to work, but I would prefer to avoid using exec.  Is there a more Pythonic way to do this?EDIT: It may seem that this question is a duplicate of #1477294 "Generate random UTF-8 string in Python" judging by the title, but that question was rephrased in an edit such that the answers there don't generally answer the original question, nor do they answer this question.
One-liner solution thanks to @CJ59:From the Python 3 chr() documentation:chr(i)Return the string representing a character whose Unicode code point is the integer i. For example, chr(97) returns the string 'a', while chr(8364) returns the string 'â‚¬'. This is the inverse of ord().The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in base 16). ValueError will be raised if i is outside that range.Solution that preserves the use of `chars` in my original question, thanks to @Matthias, allowing selection of hex digits for creating the unicode character:Function that returns a random unicode character only if it is printable:This function uses the str.isprintable() method to only return a character if it is printable.  This is useful if you want to generate a series of characters.  Also includes an option for the character range.


Answer URL
https://docs.python.org/3/library/functions.html#chr
