Natural Text
I have a dictionary like this:As you see, header['f2'] = 7 has the minimum value and this item is the second in header (its index is 1).What I do?I have try this code to get the index of minimum item in header (here 1) but it returns the key value:Output:f2What I want?I want to get the index of the minimum item in the dictionary, How can i do that?
Dictionaries do not have indicesEven in Python 3.6+ (officially 3.7+), where dictionaries are insertion ordered, you cannot extract a key or value directly by position. The same is true for collections.OrderedDict. See also: Accessing dictionary items by position in Python 3.6+ efficiently.min + enumerateAssuming Python 3.6+, you can  extract the position of a key / value based on insertion ordering via iteration. In this case, you can use min with a custom lambda function:
Using header.values() returns a list of just the values of your dictionary:EDIT: Sorry, you wanted the corresponding key.  Here's one way to do it, without having to include any other special libraries:Although dictionaries are not ordered in Python, lists are, and the lists you get from .keys() and .values() line up with each other.
list(header.values()).index(min(header.values()))This returns the index of the smallest value in the dict.


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
