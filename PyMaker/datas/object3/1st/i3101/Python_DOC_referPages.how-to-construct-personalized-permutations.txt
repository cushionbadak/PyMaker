Natural Text
I want to create a set of permutations of a given list , say a = np.array([0,1,2]). I am aware of itertools.permutations, but I need something that I can personalized so my permutations follows certain rules.For instance such a rule could be that 1 cannot be the second element. Creating all permutations using itertools and test them all for the rule's compliance would take too much time.So I think I need a function to create permutations by myself but I have no idea how to do that. Could you help me writing a function that take a list as parameter and return all possible permutations of that list ? Then I will be able to modify it so the permutations meet my rules.
Edit: As explained by @Mr.T, itertools is a C library. This means that calling itertools.permutations first, then filtering may be faster than implementing your own "optimized" function in python.    Ideally, you'd implement your "optimized" function in C, and call it from python.For the sake of completeness, here's an equivalent source code from itertools that you can modify according to your needs :Details : https://docs.python.org/3/library/itertools.html#itertools.permutationsIf you feel like implementing C code and using it in python : Any code that we write using any compiled language like C, C++, or  Java can be integrated or imported into Python. This code is  considered as an “extension.” A Python extension module is nothing  more than a normal C library. On Unix machines, these libraries  usually end in .so (for shared object). On Windows machines, you  typically see .dll (for dynamically linked library).details : https://medium.com/practo-engineering/execute-python-code-at-the-speed-of-c-extending-python-93e081b53f04


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.permutations
