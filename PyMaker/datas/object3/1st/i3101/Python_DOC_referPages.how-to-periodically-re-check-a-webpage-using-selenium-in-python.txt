Natural Text
I am new to selenium in python (and all web-interface applications of python) and I have a task to complete for my present internship.My script successfully navigates to an online database and inputs information from my data tables, but then the webpage in question takes anywhere from 30 seconds to several minutes to compute an output.How do I go about instructing python to re-check the page every 30 seconds until the output appears so that I can parse it for the data I need? For instance, which functions might be I start with?This will be part of a loop repeated for over 200 entries, and hundreds more if I am successful so it is worth my time to automate it.Thanks
You should use Seleniums Waits as pointed by G_M and Sam Holloway.One which I most use is the expected_conditions:It will wait until there is an element with id "myDynamicElement" and then execute the try block, which should contain the rest of your work. I prefer to use the the class By.XPATH, but if you use By.XPATH with the method presence_of_element_located add another () so it will be the required tuple as noted in this answer:The easiest way to find (for me) the XPATH of an element is going to the developer mode in chrome (F12), pressing ctrl+F, and using the mouse with inspect, trying to compose the proper XPATH, which will be specific enough to find just the expected element, or the least number of elements as possible.All the examples are from (or based) the great selenium documentation.
If you just want to space out checks, the time.sleep() function should work.However, as G_M's comment says, you should look into Selenium waits. Think about this: is there an element on the page that will indicate that the result is loaded? If so, use a Selenium wait on that element to make sure your program is only pausing until the result is loaded and not wasting any time afterwards.


Answer URL
https://docs.python.org/3/library/time.html
