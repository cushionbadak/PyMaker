Natural Text
I have a list - memory_per_instance -  which looks like the following: Now, here we can see that there is 2 resources groups node and infrastructure. I would like to create a array of which the final product contains the name of the resource (node or infrastructure) and the mem_used would be the sum of the mem_used. I was already already able to differentiate the two groups from it, with regex. From now, how can I create an array - memory_per_group -  with a result such hasI could store the name of the rsrc in a tmp variable, so something like: But then, I would iterate through the list a non-negligeable amount of time. Would there be a way to be more efficient ? 
Well, sure. You only need one iteration:Result:Note, that get_group might be too simple for your use case. The result has three groups since one of the resources has key 'infrastructuret' with a "t" at the end.
You could just iterate trough it a single time and checking with a simple startswith and then appending directly to the dictionary key that you want with a simple increment.Something like


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.startswith
