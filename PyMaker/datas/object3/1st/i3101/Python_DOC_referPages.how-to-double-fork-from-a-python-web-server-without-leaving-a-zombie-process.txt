Natural Text
Python 3.6I have a simple Python web server that, when it receives a POST request, spawns a netcat process to listen on a port.Seems to work OK except that a zombie is left following the spawn.(Server code below)I send a POST request to the server like so:After that I do a ps ax to see the processes running and the netcat process is there, the web server is there, AND a zombie is there.Why?  How can I avoid the zombie?
When a process terminates, it expects its return code to be collected by its parent. Until this takes place, it sits there undead (zombie), it no longer runs, but it cannot be cleared from process table in peace. If the parent is no longer around, a process would get re-parented to init (or dedicated reaper process on at least some systemd enabled systems IIRC). In your process list, you are seeing child of the first fork, which has its parent around, but not collecting the return status.Long story short, past the first fork(), you can insert this just before return in the parent process:I.e.:This child only is short lived and exits. This waits for it to do so before returning out of the function. It should be fine in this case. Otherwise in general if your process spawns children that may exit at any later point, you'd register a SIGCHLD handler to take care of this. Even though except for double fork to daemonize, you would normally use Popen and interface with your process using subprocess.


Answer URL
https://docs.python.org/3/library/subprocess.html#popen-constructor
https://docs.python.org/3/library/subprocess.html
