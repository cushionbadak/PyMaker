Natural Text
I'm trying to write a function decorator that tests for bounds of x, yWhen I execute game.set(1, 1, Color.RED) I get:I need the boundtest function to check if x and y are in range of self.width, and self.height respectively while being able to pass an arbitrary amount of parameters to the function it is decorating.Why does this happen?
Decorators are applied to function objects, not to bound methods. This means you need to pass on the self argument manually:Python uses a process called binding to turn a function into a bound method, and calling a bound method automatically passes in whatever it is bound to as the first argument; this is how self is passed into a method when you call a fuction on an instance. See the Descriptor HowTo for details. Instead of manually passing on self, you could invoke descriptor binding manually, by calling func.__get__() to produce a bound method:That binding behaviour was applied to the onDecorator function object your decorator returned when game.set was being resolved, but not to the wrapped func object.


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/reference/datamodel.html#invoking-descriptors
https://docs.python.org/3/reference/datamodel.html#object.__get__
https://docs.python.org/3/library/functools.html#functools.wraps
