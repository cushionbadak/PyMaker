Natural Text
How can I set the option expire_on_commit=False only for the current session in Flask-SQLAlchemy?I can set the option at the inizialization of the SQLAlchemy object with:but in this way all sessions created by Flask-SQLAlchemy will have the option set to False, instead i want to set it only for one session.I tried db.session.expire_on_commit = False but it does not seem to have any effect.
expire_on_commit is a parameter to the sqlalchemy.orm.session.Session class.The preferred method of acquiring a Session instance, is through the sqlalchemy.orm.session.sessionmaker class. Instances of sessionmaker are configured with settings that will be used to create Session instances. E.g.:So, calling a sessionmaker instance returns a Session instance.With this configuration, each time we call our sessionmaker instance, we get a new Session instance back each time.A scoped_session changes the above behaviour:This is what Flask-SQLAlchemy uses 'under the hood' (and why @CodeLikeBeaker's comment directing you to the Session API was valid). It means that every time you call db.session when handling a request you are using the same underlying session. Here's the same example as above but using the Flask-SQLAlchemy extension.Notice that type(db.session) in this example yields the exact same result as type(Session) in the previous example.all sessions created by Flask-SQLAlchemy will have the option set to  False, instead i want to set it only for one session.Given the fact that Flask-SQLAlchemy only creates one session per request, I take this to mean that you sometimes want a session to expire_on_commit and sometimes not, when handling a request.One way that you can achieve that is by using a context manager to temporarily turn expire_on_commit off:And here is my test model:Configure logging to see what SQLAlchemy is doing:Create some test data:This is the function I've used for testing:The I run the test function once without the context manager:Here is the stdout:It can be seen that after the commit, sql is reissued to refresh the object attributes. And once using the context manager:And here is stdout with the context manager:


Answer URL
https://docs.python.org/3/reference/datamodel.html#with-statement-context-managers
