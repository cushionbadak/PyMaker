Natural Text
I have a class that is essentially a wrapper around a dictionary:When checking the annotations with mypy, it yields an Explicit "Any" is not allowed when checking this code. My guess is that this stems from the concept that Any is the ancestor and successor of all other types. How should I annotate such function where I want to allow anything to be returned?
If you really need a custom mapping (do you?) I'll recommend to not inherit from dict as it can cause a lot of pain in the future (you should re-define its methods or sometimes you will be using self.wrapped and sometimes not).We can simply use MutableMapping ABC from collections.abc module and define basic methods (like __getitem__), the rest (keys(), values, items() are defined already).About mypy: I prefer to define helper type variables for elements/keys/values/etc. inside of a class.So we can end up with something likeTestRunning mypy with --disallow-any-explicit flag causes no errors/warnings.
This happens when the disallow_any_explicit is set to True for that module in the configuration file. Just remove that option for the default False.
You have provided insufficient information in the question to recreate this error but if your sole question is:How should I annotate such function where I want to allow anything to be returned?The simple answer is don't annotate it at all. It will by default act as Any.


Answer URL
https://docs.python.org/3/library/collections.abc.html#module-collections.abc
