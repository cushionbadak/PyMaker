Natural Text
I am working with a .dll that contains a single call which returns an array of function pointers.  GetMyApi() returns a pointer to a struct, which is an array of function pointers.  The functions themselves have different individual inputs and outputs. What I have tried so far:[C code that I can't easily alter]C:Python effort:At this point, I am just trying to get the first function of the function list returned to work.  Any help pointing me in better direction is appreciated.
Things are not as easy as one might think at 1st glance. I'm going to post a dummy example that happens to contain the 2 ways of working with functions from .dlls (.sos) (as explained in [Python 3]: ctypes - A foreign function library for Python).dll.c:code.py:Notes:C part:I had to add some dummy code in order to test and illustrate the behaviorAlthough you mentioned that it's not modifiable, I changed stuff (mostly naming / coding style, ...):Both letter cases + underscores don't look nice (at least to me)"my" (or any of its variants) in (functions, classes, or any other) names simply scratches my brainPython part:As I stated in my comment, the C stuff would have to be "duplicated" in PythonAlthough I consider this a major design flaw, in order to keep things as close as possible to the question, I simply followed it (GetInterfaceV2 (the V2 part) doesn't make any sense considering its arg (version))My personal opinion (without having all the context, though) is that (in order to ensure scalability) the function should return a generic structure, with an additional field (e.g. version) that could be checked by client apps.Output:


Answer URL
https://docs.python.org/3/library/ctypes.html#module-ctypes
