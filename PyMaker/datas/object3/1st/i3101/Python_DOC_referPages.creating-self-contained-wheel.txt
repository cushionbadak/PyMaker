Natural Text
I try to create a self contained wheel for pyRFC: http://sap.github.io/PyRFC/install.htmlI have the needed (closed sourced) libraries and header files.Installing pyRFC works, if I copy the libraries and headers to $VIRTUAL_ENV/lib and $VIRTUAL_ENV/include.Now I try to create a wheel which contains the closed source library files.But I am failing.If I unzip the wheel it only contains this:The extra_objects (see below) are missing.How can I modify the setup.py of pyRFC to make the wheel contain the libraries from $VIRTUAL_ENV/lib?Here is the setup.py: https://github.com/SAP/PyRFC/blob/master/setup.pyI tried this patch for setup.pyIf I install and run the library without libsapnwrfc.so I get this error: If I trace the open calls, I see that it only looks at root-level for the library. The library does not get search in the virtualenv (which is /home/other):I would like to install "libsapnwrfc.so" via wheel into a virtualenv because this gives me the power to have several independent environments. I could install it via RPM or config-management, but I would like to avoid it.
The extra_objects are used only when linking the extension lib and are not bundled in the wheel. From the docs:extra_objects: list of extra files to link with (eg. object files not implied by ‘sources’, static library that must be explicitly specified, binary resource files, etc.)For bundling the libs into wheel, use auditwheel for Linux wheels, or delocate for MacOS wheels. SO already has an excellent question: How to build and distribute a Python/Cython package that depends on third party libFoo.so which covers the whole wheel repairing process using both auditwheel and delocate. Here, I will only summarize the necessary commands. The process is pretty similar with both tools:This will create a new dir dist/wheelhouse, containing the new wheel with the bundled libs.


Answer URL
https://docs.python.org/3/distutils/apiref.html#distutils.core.Extension
