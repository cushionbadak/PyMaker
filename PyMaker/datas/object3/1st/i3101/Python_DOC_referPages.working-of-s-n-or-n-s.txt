Natural Text
This question already has an answer here:List of lists changes reflected across sublists unexpectedly                    12 answers                In the Python documentation it is explained that s * n or n * s means items in the sequence s are not copied; they are referenced multiple times. I am able to get that theoretically but unable to understand the example they have given:I am confused because if we do the similar thing with strings, it behaves differently as:
Your example is not doing the same thing as theirs, because list_of_str[0] = anything would just replace the first entry in the list altogether. It does not matter whether that is a copy or a unique instance.For a better example, you'd need something like list_of_str[0][0] = 'S' to modify the string itself. But you can't do that, because strings in Python are immutable.If you want to show conclusively that the entries are referring to the same string, use the id function:


Answer URL
https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range
