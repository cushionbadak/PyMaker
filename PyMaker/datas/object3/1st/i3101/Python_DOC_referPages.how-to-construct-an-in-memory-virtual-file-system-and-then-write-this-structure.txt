Natural Text
I'm looking for a way to create a virtual file system in Python for creating directories and files, before writing these directories and files to disk.Using PyFilesystem I can construct a memory filesystem using the following:Ideally, I want to be able to do something like:To write this structure to disk, where <base path> is the parent directory in which this structure will be created.As far as I can tell, PyFilesystem has no way of achieving this. Is there anything else I could use instead or would I have to implement this myself?
You can use fs.copy.copy_fs() to copy from one filesystem to another, or fs.move.move_fs() to move the filesystem altogether.Given that PyFilesystem also abstracts around the underlying system filesystem - OSFS - in fact, it's the default protocol, all you need is to copy your in-memory filesystem (MemoryFS) to it and, in effect, you'll have it written to the disk:
If you just want to stage a file system tree in memory, look at the (tarfile module)[https://docs.python.org/3/library/tarfile.html].Creating files and directories is a bit involved:But then you can create the file system hierarchy using TarFile.extractall:


Answer URL
https://docs.python.org/3/library/tarfile.html]
