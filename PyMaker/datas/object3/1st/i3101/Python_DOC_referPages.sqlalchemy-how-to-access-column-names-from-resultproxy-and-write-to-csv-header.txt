Natural Text
I am trying to use SQLAlchemy to establish a connection to a PostgreSQL Database, execute a SQL query and print the output of the file to a file in linux. However, I am getting the following error message - Traceback (most recent call last):  File "", line 12, in AttributeError: 'ResultProxy' object has no attribute 'description'If I comment the below command, I am successfully able to get the query result but without the headers.outcsv.writerow(x[0] for x in result.description)Upon researching, I found the method - result._metadata.keys can generate the headers. However, it generates in some form of a list that I can't attach as header.Please advise if there is any way to get the file header as well as the data into a csv file. Please consider the fact that I am beginner in Python while answering the above.
In this row in your example:the variable result is pointed to an instance of the class sqlalchemy.engine.ResultProxy.You want to get the column names to write to the first row of your csv file, and through inspecting your result object found result._metadata.keys which returns a regular python list of column names.A convention in Python is that whenever an attribute, variable or method on an object is prefaced with an underscore (e.g. _metadata) that means it's not intended to be a public API, and the maintainers of the package may change their implementation in such a manner that breaks your code if you rely on these things (however unlikely for a stable library such as SQLAlchemy). Fortunately, in this case there is a documented public API for you to get what you need: ResultProxy.keys().Remember that your result variable points to a ResultProxy instance, so you can access the keys() method on that to get the column names, e.g:What happens when we try to write to your csv file:We get this exception:I'm going to assume that this is what you refer to when you say:However, it generates in some form of a list that I can't attach as  header.You can have a look at the open() API but the issue is that you've opened the file in such a manner that it expects binary data, not the strings that are returned from result.keys(). So if we change the line where you open your file to:outfile.writerow will accept the result of result.keys().Everything else should "just work".Here is the code I used to test:here's the contents of the csv:


Answer URL
https://docs.python.org/3/library/functions.html#open
