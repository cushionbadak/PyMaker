Natural Text
I want to find any pair of elements in a list that have the same attribute. For example,So if comparing on x.param, I'd be looking for my_list[1], my_list[3] or my_list[2], my_list[4] or my_list[2], my_list[5] or my_list[4], my_list[5]. However, there's no guarantee that the list would necessary have any elements with the same property, e.g.might also be a valid parameter to this function.The obvious way to do this seems to be:But it seems a bit inelegant and I'm wondering if there's a nicer way to do this.
collections.defaultdict offers an O(n) solution to group objects by attribute:The result indicates one object with param == 1, two objects with param == 2 and three objects with param == 3:To extract pairs of objects with the same attribute, you need only to filter items in the dictionary with a value with length greater than 1. Then use itertools.combinations to extract all combinations for these keys.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
