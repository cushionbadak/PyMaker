Natural Text
I was just checking the size of some datatypes in Python 3 and I observed this.The output was 16 as expected.I tried making a list of 1000 locations of None and I expected the size to be 16*1000 = 16000 or more. But the result I got was different.The output was 8064. Nearly the half of the size I expected. What is the reason for this.? Why memory allocated is less.? 
Note: No of bytes may vary depending on the environment
There is just a single None object referenced a thousand times.  So the situation is this:And not this:This is more visible when repeating a mutable object, like this:There is just a single, shared set object referenced three times, so changes to the set at l[0] also affect l[1] and l[2].Python data structures such as list, set and dict are reference-based.  In your case, most of the 8064 bytes you observed come from the object references (8 bytes per list element).


Answer URL
https://docs.python.org/3/library/sys.html#sys.getsizeof
