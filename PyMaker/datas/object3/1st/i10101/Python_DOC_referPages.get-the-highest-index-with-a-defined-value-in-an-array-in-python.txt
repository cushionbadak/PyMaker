Natural Text
what could be a nice one-liner to get the highest index in a python array whose value is defined (i.e. not None):would return:4 (as the "last" defined element is 4. (with value 3))Sure a search loop would make the job, but it feels non optimal...
Loop over the reversed of the list and return the first valid item's index:Note that since you are looping over the reversed array the correct index would be len(l) - i (if we consider the first index as 1).If you are looking for a functional and/or more optimized approach you can use numpy and it's where function:

A relatively Pythonic solution which does not use indices:The tuple bugs me, but it is needed as reversed cannot take in a generator.
Another alternative using filter(). But this won't work for empty list or list with all None. But in order to handle that, we can use and and or statements (since you need one line solution):This expression will return -1 for the above mentioned edge cases.
You could create a generator that iterates on the indices of the list in reverse and tests until a not None value object is reached: 
If the input list is very large, you can use itertools and the built-in reversed to avoid iterating or copying the whole thing:This will throw StopIteration if there are no non-None values, which I would argue is more pythonic than returning a default. 


Answer URL
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/library/functions.html#reversed
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
