Natural Text
I'm still new to python. Do I have to use try: and except ValueError? If not when would and should I use them?Some parts work with and without itE.gI just typed this since I'm on my tablet and not my pc so just ignore any mistakes P.s this is part of a text based game I'm working on 
try except blocks are to enclose code that might produce a runtime error. The optional argument of Error type (in this case you have input ValueError) will change the block so that it will only catch that type of exception. In your example it looks like you are trying to produce an error message if none of the given options are correctly chosen.As written, none of the if statements will pass if a different input is received, but no exception will be generated. Instead of try:except, you should likely just use an additional else block onto your if statement. True exceptions are generally reserved for exiting the code when it tries to do something illegal like divide by 0. If you wanted to create your own custom exception to mimic illegal behavior, you would have to test for when it should be raised (likely with an if statement) then call  raise with your custom exception.I would also like to point out that in your if and elif conditions, I think you are mistaking the operator precedence of == and or. the equivalence operator: == will be called first because of operator precedence producing either a true or false value then the or will be evaluated. the true or false value will be compared to a non-empty string ('a', 'b', or 'c') which will always evaluate to true. Instead you could add another == comparison for something like: if Main_menu_op == "A" or Main_menu_op == "a":
You should only use try and except ...Error (documentation) when you know you can safely handle a specific known error.So if you are expecting a certain error, like a ValueError, you can catch it and handle it instead of having you application crash. Let's say you have a user's input and expect a number:If you are not expecting an error or are not prepared to handle it (or there's no proper way to handle), you might want to see the error and its trace on the console so you can debug it.In your example you can use an 'else' to say the command given is not recognised, and ask for another.


Answer URL
https://docs.python.org/3/tutorial/errors.html#user-defined-exceptions
