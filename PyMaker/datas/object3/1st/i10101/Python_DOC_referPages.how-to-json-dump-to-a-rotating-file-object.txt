Natural Text
I'm writing a program which periodically dumps old data from a RethinkDB database into a file and removes it from the database. Currently, the data is dumped into a single file which grows without limit. I'd like to change this so that the maximum file size is, say, 250 Mb, and the program starts to write to a new output file just before this size is exceeded.It seems like Python's RotatingFileHandler class for loggers does approximately what I want; however, I'm not sure whether logging can be applied to any JSON-dumpable object or just to strings.Another possible approach would be to use (a variant of) Mike Pennington's RotatingFile class (see python: outfile to another text file if exceed certain file size).Which of these approaches is likely to be the most fruitful?For reference, my current program is as follows:It is not completely 'runnable' from the part shown, but the key point is that I would like to replace the linewith a similar line in which f is a rotating, and not fixed, file object.
Following Stanislav Ivanov, I used json.dumps to convert each RethinkDB document to a string and wrote this to a RotatingFileHandler:In this context the RethinkDB class does little other than define the class variable SENSOR_DATA_TABLE and the RethinkDB connection, self.db = r.connect(self.address[0], self.address[1]). This is run together with a module for generating fake data, random_data_generator.py:When I run controller it produces several rolled-over output logs, each at most 2 kB in size, as expected:


Answer URL
https://docs.python.org/3/library/json.html#json.dumps
