Natural Text
I have data from a platform that records a users events - whether answers to polls, or clickstream data. I am trying to bring together a number of related datasets, each of which has a session_id column.Each dataset began as a csv that was read in as a series of nested lists. Not every session will have a user answering a question, or completing certain actions, so each dataset will not contain an entry for every session -- however, every session exists in at least one of the datasets.assume there are 5 sessions recorded:e.g. dataset 1:SessionID |a | b | c | d 1  |  x | x | x | x2  |  x | x | x | x5  |  x | x | x | xe.g. dataset 2:SessionID |e | f | g | h 1  |  x | x | x | x3  |  x | x | x | x5  |  x | x | x | xe.g. dataset 3:SessionID |i | j | k | l 2  |  x | x | x | x3  |  x | x | x | x4  |  x | x | x | xHow would I construct this:SessionID |a | b | c | d | e | f | h | i |j | k | l1  |  x | x | x | x | x | x | x | x | - | - | - | -2  |  x | x | x | x | - | - | - | - | x | x | x | x3  | - | - | - | - | x | x | x | x | x | x | x | x4  | - | - | - | - | - | - | - | - | x | x | x | x5  |  x | x | x | x | x | x | x | x | - | - | - | -By far the easiest way to do this is to import each csv into pandas:however the requirements are that I not use any external libraries.I'm struggling to find a workable logic to detect gaps in the sessionID, and then pad the lists with null data so the three lists would be simply added together.Any ideas?
How do you define "external libraries"? Does sqlite3 qualify as external or internal? If it doesn't and you want to think about the problem in terms of relational operations, you could slam your tables into a sqlite3 file and take it from there.If the number of datasets is finite, you could create a class Session, containing a dictionary where each column (a to j) would be a key. If you are proficient, you could use the __getattr__ function to use a "dot" notation when you need it. For the "table", I would simply use a dictionary, with the key as the id, then fill up your dictionary in three steps (dataset1, dataset2, dataset3). In this way you wouldn't have to worry about gaps.


Answer URL
https://docs.python.org/3/library/sqlite3.html
