Natural Text
I have to code as an assignment, a program which returns a list of the same lenght of the input list with a '*' if the input date isn't in the correct format (gg-mm-yyyy) else it returns the month abbreviation (ex. nov for november). The input is given by the check program.If I didn't explain it well there is an exampleinput list -> [1,'10-10-2007', '2-3-1962','home', '31-11-2007']output list -> ['*', 'october', '*', '*', '*']Now where's my problem. I'm trying to run something like thisThe error I'm getting now is and I've understood that int can't have length. But how can I translate the int to something that could have length?
You are assuming you can use len() on all your elements in the input list, but integers do not have a length.You could use exception handling to work around such limitations:I'd strongly recommend you use the datetime module here instead, and try if parsing with the datetime.datetime.strptime() method succeeds. Again, use exception handling to ignore anything that can't be parsed:datetime.datetime.strptime() will raise a TypeError exception when it is passed something that isn't a string, and a ValueError if the value is a string but can't be parsed with the supplied pattern (which here looks for a dd-mm-yyyy-style date).I used the calendar.month_abbr sequence to supply the abbreviated month names; if you need to have full month names, swap that out for calendar.month_name (your question expected output uses full names but your code uses abbreviations).With that function to supply month names) you can trivially convert your input:
You start with an empty list for outgoing, and just add those "*"/month-name entries afterwards; like:For that "decision" part - simply don't call len on each entry. Instead, check its type, and work from there. See here for one way of doing that!
First, you should first check whether you have a string value to begin with:Second, and most important, parsing a string and/or comparing against some pattern (i.e. gg-mm-yyyy) is usually done with regular expressions rather than manually. It's quicker and cleaner. I won't give you a complete solution (since this is an assignment), but here you can read more about regular expressions in Python and how to use them, usage examples included. Hope that helps!
When you call len(months[c]) you are asking for the cth element of months to get the length from.Since the first element of months is the int, 1, and c == 0 you're actually asking:You are correct, int types don't have lengths like lists or strings, so you've got a few options.Make sure everything that goes through is a stringthe method str() will convert 1 into "1".Catch your error straight away using try:catchCheck that your types are str before testing:That all being said, this isn't your only problem with your code. You're going to be making comparisons later on between strings and integers which will always fail. And some false data can pass through (what if I have a string of length 10 that isn't a proper date?). I'd really suggest reading through some documentation on python types and comparisons.


Answer URL
https://docs.python.org/3/library/datetime.html
https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime
https://docs.python.org/3/library/calendar.html#calendar.month_abbr
https://docs.python.org/3/library/calendar.html#calendar.month_name
https://docs.python.org/3/library/calendar.html#calendar.month_name
