Natural Text
I'd like to change the thousands separator such that {:,}.format(1234) in Python uses a different character. The separator should be '\u066c'.How can I set this without affecting any other locals settings?EDIT: Any other suggestion for a unimposing separator viable in a fixed with font is welcome!
Your options are to either take the , formatted output and replace the commas, switch locales and use the 'n' number format (which will format the number based on the current locale), or use a third party library like babel. The latter gives you full locale control over number formatting, for example, provided there is a locale that uses U+066C as the thousands separator.With the format() function, the first option is quite straight-forward really:I have yet to find a locale that directly would use \u066c for Western Arabic numerals however; U+066C is commonly used only with Eastern Arabic numerals instead. Babel doesn't include any such locale data, at least.You can pass any babel Locale object in to the babel.numbers.format_number() function, so if you need a custom separator you can clone an existing locale and set the Locale.number_symbols['group'] value:which results in the expected output:
Taking Martijn's excellent answer further for use in Django, on how to override a locale in a Django template.File myapp/templatetags/extra.pyIn template:


Answer URL
https://docs.python.org/3/library/functions.html#format
