Natural Text
This question already has an answer here:How can I force division to be floating point? Division keeps rounding down to 0?                    13 answers                I am trying to do the calculationUsing the python decimal module with the following code:however, this outputs 1, not a very small fraction like I would expect. I can't find much information here https://docs.python.org/2/library/decimal.html about what  is wrong with the code. My guess is sum is not being used as a Decimal in the loop, but I am unsure how to resolve that.
First of all, don't use sum as a variable name, as it is a built-in.And its sort of necessary to provide at least one float for arithmetic if you expect a float-type answer, here:this gives:
If you use Python 2.x, then in the expression: 1/(i**4), the integer devision is used, as result for i=1, it equals to 1 and for all other i>1, it gets 0.Just add floating point to 1: 1./(i**4), this should fix the problem.PS In Python 3.x, your code should work as expected, because operator / is defined on floating point numbers, while operator // is defined for integers.


Answer URL
https://docs.python.org/3/whatsnew/3.0.html
