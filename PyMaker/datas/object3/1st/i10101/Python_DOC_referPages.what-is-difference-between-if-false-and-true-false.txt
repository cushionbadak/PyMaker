Natural Text
I learned python 3 last year, but I have barely experience.I am reviewing about tuple again.I would like to figure out difference between  if (False,) and True == (False,)Since if (False,): is true, but True == (False,) is false, I am very confused.
The boolean value of a tuple is True if it has contents, if it is empty it is False. Because (False,) is a tuple with one element it's boolean value is True.You are comparing a tuple to a bool, that will always result in False.
if does not test for == True. It tests for the truth value of an object:Any object can be tested for truth value, for use in an if or while condition or as operand of the Boolean operations below.Objects are normally always considered true, except for the False or None objects (on their own), numeric zero, or an empty container.(False,) is a tuple with one element, and any tuple that is not empty is considered a true value, because it is not an empty container.You can use the bool() function to get a boolean True or False value for the truth value:
Perhaps this highlights the difference. if (False,): will evaluate because a non-empty tuple is a truth-y value. It is not true itself. And comparing a tuple against a boolean shouldn't be expected to return true in any case, regardless of the content of said tuple. 
For any x whatsoever,succeeds, because (x,) is a non-empty tuple, and all non-empty tuples evaluate to True in a boolean context.And again for any x whatsoever,cannot succeed, because the things being compared aren't even of the same types (for a start, True isn't a tuple).In your question, what I spelled as x you spelled False, but it makes no difference what value x has:  False, True, the integer 42, a file object, ..., it doesn't matter.
Not empty values are equivalent to True while empty values are equivalent to False. The tuple (False,) is not an empty tuple so if (False,) always succeeds. On the other hand True is not equal to the singleton tuple (False,) so the logical expression True == (False,) evaluates to False.


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
https://docs.python.org/3/library/functions.html#bool
