Natural Text
I'm getting data from channel which is not aware about UTF-8 rules. So sometimes when UTF-8 is using multiple bytes to code one character and I try to convert part of received data into text I'm getting error during conversion. By nature of interface (stream without any end) I'm not able to find out when data are full. Thus I need to handle partial utf-8 decoding. Basically I need to decode what I can and store partial data. Stored partial data will be added as prefix to next data. My question is if there is some neat function in python to allow it? [EDIT]Just to ensure you I know about function in docs.pythonbut the issue is it would not return me where is the error and so I can not know how much bytes from end I shall keep.
You can call the codecs module to the rescue. It gives you directly a incremental decoder, that does exactly what you need:You can feed it with: dec.decode(input) and when it is over, optionally add a dec.decode(bytes(), True) to force it to cleanup any stored state.The test becomes:
So far I come up with not so nice function:you can test it using script:it shall give you the output:


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes.decode
