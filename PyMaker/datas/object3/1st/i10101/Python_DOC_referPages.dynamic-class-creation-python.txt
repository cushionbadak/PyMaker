Natural Text
Here is the scenario:I have two classes:Now I want to create a client, in that I need to have a small utility method, which should return my class template/object e.g: class A, class B, as I pass on the class name to that utility e.g get_obj(classA).Now, is this possible? If then please suggest an approach, as I don't get any correct answer as of now in web.Hope I am making sense.
Here is a possible implementation. All the code is contained in a single '.py' fileIt will produce the following output
Standard library function namedtuple creates and returns a class. Internally it uses exec. It may be an inspiration for what you need.Source code: https://github.com/python/cpython/blob/master/Lib/collections/init.py#L356
globals() returns a dictionary containing all symbols defined in the global scope of the module (including classes A and B):a_and_b_module.pyIf you are looking for simplicityIf the code that will call this function is inside the module, then you can eliminate the function altogether and use globals()[cls_name] directly.If the code that will call this function is outside the module, then you could use getattr function:a_and_b_module.pyanother_file.pyIf you are looking for complete controlThe problem with the approach above is that it could return anything defined in a_and_b_module.py, not restricting itself to A and B. If you want to make sure only A and B can be returned:Note: you might also be interested in the concept of factory.


Answer URL
https://docs.python.org/3/library/collections.html#collections.namedtuple
