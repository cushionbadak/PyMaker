Natural Text
This is in Python 2.7.  I have a class called class A, and there are some attributes that I want to throw an exception when being set by the user:I want to write a unittest that ensures that this throws an error.  After creating a test class and inheriting unittest.TestCase, I tried to write a test like this:But, this throws a syntax error.  However, if I try eval('myA.myattribute = 9'), it throws the attribute error, as it should.How do I write a unittest to test this correctly?  Thanks.
You can also use assertRaises as a context manager:The documentation shows more examples for this if you are interested. The documentation for assertRaises has a lot more detail on this subject as well.From that documentation:If only the exception and possibly the msg arguments are given, return a context manager so that the code under test can be written  inline rather than as a function:which is exactly what you are trying to do.
self.assertRaises takes a callable (and optionally one or more arguments for that callable) as its argument; you are providing the value that results from calling the callable with its arguments. The correct test would be self.assertRaises(AttributeError, eval, 'myA.myattribute = 9')However, you should use assertRaises as a context manager, which allows you to write the much more natural


Answer URL
https://docs.python.org/3/library/unittest.html#basic-example
https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises
