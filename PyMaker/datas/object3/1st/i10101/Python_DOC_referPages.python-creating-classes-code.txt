Natural Text
Sorry for the poor title, didnt know what to put.When creating a class in python i use this,but why is it different to this?Surely the equals sign means it is the same process? Why is different?
= is an assignment statement, you appear to be confusing this with a ==, the equality comparison operator.The statements are entirely different:assigns the value referenced by the local variable name to the attribute name on the object referenced by self. It sets an attribute on the newly created instance, from the value passed into the initialiser method.The alternative statementassigns the value of the attribute name found on self, to the local variable name. It rebinds the local name (replaces the old value with a new). Once the method ends, the effects are gone. You are likely to get an AttributeError as the attribute name doesn't exist on self at that point in time.If == had been used, then usually yes, name == self.name is the equivalent of self.name == name. However, objects can override how equality is tested by defining a new implementation for the __eq__ method so the two expressions could theoretically produce different results.
This assigns the instance variable self.name to the value of the argument which was provided to __init__() (in this case name)This assigns the instance variable self.name to the value of the argument name. This would throw an error if self.name was not assigned to something else earlier in the __init__() function.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
https://docs.python.org/3/reference/expressions.html#comparisons
https://docs.python.org/3/reference/datamodel.html#object.__eq__
