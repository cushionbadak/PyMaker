Natural Text
I am attempting to implement the rfind function in Python without using the built-in rfind method. It should work like the following:Unlike the original method, takes an input string and a character as a parameter and returns the first index from the right where the character is found. Now I am getting stuck on what to do next..
The simplest approach, IMHO, would be to just iterate over the string backwards and compare each character:
Your function should be like (with minimal changes in current code):Sample run: 
So, in ch you have the character, not the index of the character, so even if you find it, you won't be able to know its index (you just know that the character is in your text string, nothing else)Also, when you find a coincidence, you print... nothing (in print())And since the return -1 (when not found) is within the for loop, you will stop the execution (returning -1) as soon as a character doesn't match the looked up character (you should be very familiar with the return statement)You reverse the string, but that is probably not very... "adviseable", because then your indexes get reversed. For instance, let's say you want to find the last l in Hello. You are expecting:And that should be 3, but since you reverse it, and start walking it from left to right, you get:And the first match is in 1, now... You can still do it, though... You can substract that index to the total lenght, and you should get it.Firstly, I would recommend you read what the enumerate built-in does (to not only get the character, but also the index)A pretty close thing to what you have could be:Or, instead of inverting the array, just start reading from the right (see what range does)


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#func-range
