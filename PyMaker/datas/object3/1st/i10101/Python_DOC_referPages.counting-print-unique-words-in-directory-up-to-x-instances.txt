Natural Text
I am attempting to take all unique words in tale4653, count their instances, and then read off the top 100 mentioned unique words. My struggle is sorting the directory so that I can print both the unique word and its' respected instances. My code thus far:Thank you community, 
you loose the word (the key in your dictionary) when you do counts.values())you can do this insteadwhen you do counts.items() it will return a list of tuples of key and value like this:and when we sort it we tell it to take the second value as the "key" to sort with
DorElias is correct in the initial problem: you need to use count.items() with key=lambda x: x[1] or key=operator.itemgetter(1), latter of which would be faster.However, I'd like to show how I'd do it, completely avoiding sorted in your code. collections.Counter is an optimal data structure for this code. I also prefer the logic of reading words in a file be wrapped in a generator


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
