Natural Text
I have read some posts on stackoverflow about how to check an object is an iterator in Python but it seems that they did not solve my question. I have this example from the book Effective PythonTo use:So my question is in this line:Why this line check if the variable numbers is an iterator? When visits = [15, 35, 80], should it be true that iter(numbers) is iter(numbers)?
When you call an iterable, calling iter() on such an object will always produce a new iterator object. But calling iter() on an iterator will always return the same object; it is a requirement of the iterator protocol that they do.From the iterator.__iter__() documentation:Return the iterator object itself. This is required to allow both containers and iterators to be used with the for and in statements.Because iter(iterable) always returns itself, the test iter(obj) is iter(obj) will be true; the same object is returned in both cases.
To help you understand Martijn's explanation, take a look at the following:So if numbers was an iterator, calling iter on numbers will always return objects that are internally identical: iter(numbers) is iter(numbers) will be True.


Answer URL
https://docs.python.org/3/library/stdtypes.html#iterator-types
https://docs.python.org/3/library/stdtypes.html#iterator.__iter__
