Natural Text
I have a list and a for loop such as these: Output:Expected output:The idea is thus to skip a variable number of iterations within the for loop, using something like this script (not working):The script would thus "jump" cp elements in the for loop at every round and start doing again what it is asked at the item item + cp.I know that you can use continue to skip multiple iterations (such as in this post) but I cannot figure out how to use continue to skip a variable number of iterations.Thanks for your answer! :)Edit: similar items are always next to each other.
You could use a Counter:
You can use collections.Counter for your job:Thus,
You can also do it this wayhope  it may help !
Since the elements are consecutive, you could use a groupby which would group the consecutive strings, it is just a matter of summing the length of each group to get the count:Output:The most efficient way to generally get counts would be to use the dictionary logic like a Counter provided in the other answers, if you want to keep order you could use an OrderedDict to do the counting:Which would output the same:Both the groupby and the dict logic are O(n), using your list.count is quadratic.
You can get the unique elements of a list using setOutput:You bar are present in 2 copy(ies) You hello are present in 1 copy(ies) You foo are present in 3 copy(ies)
This assumes that the list is ordered so that identical objects are next to each other.
set and list counts would do the trick:output:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
