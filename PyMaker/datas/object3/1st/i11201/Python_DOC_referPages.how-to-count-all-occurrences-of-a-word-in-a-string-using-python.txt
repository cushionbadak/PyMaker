Natural Text
I'm trying to find the number of times 'bob' occurs in a string of characters like 'abdebobdfhbobob'.My code (that I found through another stackoverflow question) is:This code prints out: The number of times bob occurs is: 2 which is not correct for what I need as the answer should be 3.The issue is that this code does not count 'abdebobdfhbobob' as two different bobs, which is what I want.How can I fix the code to count the bobob part of the string as two separate bobs?
Based on documentation, str.count() return the number of non-overlapping occurrences of substring sub in the range [start, end]. You can use a positive lookahead based regular expression in order to find the overlapped strings:If you don't want to use regex you can use a generator expression within the sum() function that will iterate over the all sub-strings with length 3 and count the number of those that are equal to 'bob':
We can just check all possible candidates:
If you don't want to use regular expressions you can create all triplets from the string using zip and then use list.count:The triplets are created by zipping these strings:If you don't mind working with tuples:Tip: If you're going to count other words as well, use a collections.Counter.
why do not you make it easy?


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.count
