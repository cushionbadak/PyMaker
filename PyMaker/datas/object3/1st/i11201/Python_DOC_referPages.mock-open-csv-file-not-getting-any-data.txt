Natural Text
I am trying to unit test a piece of code:by using mock_open like so:The problem I am running into is that I do not get any data when running csv.reader. If I run results_file.readlines() I get 'test, test2, test3, test4' which means that mock_open is working properly. But when I run csv.reader(results_file) I lose all the data.
This is because mock_open doesn't implement every feature that a file has, and notably not some of the ones that csv needs.mock_open implements the methods read(), readline() and readlines(), and works both as a function and when called as a context manager (https://docs.python.org/3/library/unittest.mock.html#mock-open), whereas csv.reader works with…any object which supports the iterator protocol and returns a string each time its __next__() method is called — file objects and list objects are both suitable— https://docs.python.org/3/library/csv.html#csv.readerNote that mock_open doesn't implement the __next__() method, and doesn't raise StopIteration when the end is reached, so it won't work with csv.reader.The solution, as @Emily points out in her answer, is to turn the file into a list of its lines. This is possible because mock_open implements readlines(), and the resulting list is suitable for reading into csv.reader as the documentation says.
This really got me too, and was a nightmare to pinpoint.  To use your example code, this worksand this worksbut this doesn't workusing Python 3.4.It seems counter to the documented interface of csv.reader so maybe an expert can elaborate on why.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#mock-open
https://docs.python.org/3/library/csv.html#csv.reader
