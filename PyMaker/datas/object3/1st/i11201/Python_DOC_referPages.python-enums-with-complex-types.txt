Natural Text
I'm new to Python and I'm wondering if I can build enums with complex structures, not just primitive types. For instance (in pseudo-code):So far, I could only find Python documentation that mentions enums with strings or ints. 
If you want Point as a separate entity from the Enum that tracks the corners, then you need them to be separate:Doing it this way means that each enum contains a Point as its value, but is not a Point itself:If you want the enum members to be a Point, then mix in the Point class:Finally, if all you need is for the enums to have the x and y attributes:Note that that last example is using the aenum package1.  You can accomplish the same thing with either enum34 or the stdlib enum by writing an __init__ for the Point class.1 Disclosure:  I am the author of the Python stdlib Enum, the enum34 backport, and the Advanced Enumeration (aenum)  library.
You can declare them as global variables like BOTTOM_LEFT, TOP_LEFT, TOP_RIGHT, BOTTOM_RIGHT.As you might be aware unlike other languages (C++, Java) Python doesn't have, You just declare it and don't change it (Gentleman's game)Yet Alex Martelli's recipe can come handy to emulate const in Python
Try this:


Answer URL
https://docs.python.org/3/library/enum.html
