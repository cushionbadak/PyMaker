Natural Text
I'd like to count the number of leaf (i.e. only those keys that have no further child elements) nodes in a JSON structure.I can't find anything obvious to do this, so have been trying to write a function, but am struggling to find one that works, without using a global variable.This is what I have so far:Which doesn't really work as some non leaf nodes are counted, and it's not recursing all the way down into some structures. 
In general, I prefer non-recursive solutions over recursive ones. My algorithm works like this:Initialize the queue and place the json object into itLoop while the queue is not emptyGet one node from the queueIf it is a Mapping, add all the values to the queue for later processingIf it is a sequence or a set (be careful: strings are sequence, too--we need to test against it), we add all the elements to the queue for later processingIf the it is none of the above, count itHere is the code:
Your pseudo-code is over-complicated and buggy. I would also suggest you write code that follows the PEP 8 - Style Guide for Python Code closely, for both yourself and others reading the code you write.Anyway, as a test case, suppose you had some JSON data like this:You can recursively count the leaves like this:I nested the leaf_iterator() generator inside the leaf counting function, but it could also be defined outside if it should it prove useful in a larger context. The code in it could be simplified even further in Python 3 by using a yield from<expression> which was introduced in Python version 3.3.


Answer URL
https://docs.python.org/3/reference/expressions.html#yieldexpr
