Natural Text
I need to feed local variable from one python file to another, combine the variables there and Then get the other variables back into first file.I looked at SO discussions for cyclic dependency and combining local and global variables, but it does not seem to solve my problem.Here is skeleton example of what I am trying to accomplish.Couple of python scripts generates reports. #report1.py#report2.pyreport_name is the variable for report name and needs to be sourced in mysettings.py that holds most of the environment variables and constants.#mysettings.pyThe code then queries a server and gets a csv file and converts to xlsx and modifies as per needs.Back in repor?.py#report1.py#report2.pyChallenge is, How do I feed in report_name to mysettings.py and then get the combined variable back in report1.py and report2.pyOnce its working, there will be other reports added, hence I wanted to get variables/settings streamlined.I also wanted to declare as less variables as possible in all the reports?.py and instead manage them globally in mysettings.pyAny thoughts input is appreciated.
You should define a function in mysettings.py and execute it in other files:#mysettings.py#report1.pyThat way you do not need to use global variables across different scripts
Ok the most strait forward way would be to execute the code in mysettings.py inside the report modules:However passing several variables between modules is usually handled by an environment dictionary, so you could have your mysettings.py have a function like this:Then in the report files you can handle the environ dict manually:Or take advantage of the fact that the global namespace is kept track of with a dictionary:


Answer URL
https://docs.python.org/3/library/functions.html#exec
