Natural Text
This part of the code transfers the letters to numbers and then multiply it by the key (datetime*ip (replaced(.,5)decryption code this is where the problem is when replacing the number back to lettersThe program encrypts just fine. However, it only decrypts 4 letters anything more it comes out as jumbled letters and numbers.
Your "decryption" cannot work, because not every character has its own slot. Let's say the key is 1 and an example ciphertext is 7334662 which "clearly" represents en. Since your decryption starts replacing 346 to b, the ciphertext will result in 73b62 and then terminate, because there isn't anything to replace anymore. There are many fixes to this:You could remove the use of replace and instead iterate over the ciphertext and try to find a prefix that corresponds to one of the possible mappings. Although, this will quickly break when you actually introduce the key through simple multiplication, because then it is possible that multiple mappings have the same prefix.Add delimiters such as ,, which enables you to split the ciphertext at , and iterate over all the ciphertext "characters" to apply the mapping to plaintext separately. So, the above example would look like 7334,662


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
