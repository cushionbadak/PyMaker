Natural Text
I am writing a python 2.7.11 program on Linux. The program creates 12 sub-processes with multiprocessing.Pool. Each sub-process has cpu affinity with one of the 12 cpus through the psutil library for python.I use multiprocessing.Event to make 11 sub-processes wait for sub-process 0.Then, in sub-processes 0, I call Intel's math kernel library to start a calculation with 12 threads. Will the waiting sub-processes consume any cpu resources and affect the calculation by the 12 threads?If so, how to avoid that? Or, how to test if that happens?Will the main process affect calculation by the 12 threads?Thanks.
Okay, I did a little research, and...First, since the 12 threads are all in a single process, what happens in the other sub-processes should not effect the parent process in any way. There is some background processing happening by the OS to handle inter-process communications that will take place in the process where the OS's kernel is, presumably the parent process (process 0). However this is very minor and should not be effected by activity in other processes. In other words, heavy activity in one process should not effect another process.I would suggest two things. 1) Add one more process where your 12 threads are launched from. This will separate it from the parent thread where the OS resides.  2) Do some time testing of your own. Set a variable at the start of each thread with the current millisecond timer. At the end of the processing, check how long it took. Then have the other processes do some pointless floating point calculations and see if that effects the average run time for the threads.Doing some research on the Time module, the Multiprocessing module and the Threading module should help clarify the topic for you.


Answer URL
https://docs.python.org/3/library/time.html#time.sleep
