Natural Text
Our professor told us today that we can build an iterator, e.g.  and that when we will use it, as in (for i in iteratorExample), the interpreter will call the __iter__(self) and __next__(self) methods. My questions are:If I open C:\Python folder - where can I see the code that calls these methods?In the python folder, where can I see the code of other built-in methods  (like len(), or int()?
You could look at the Python byte code disassembly, to see how for-loop is implemented in Python:Even without looking at the source, we could guess that __iter__ is called by GET_ITER op code and __next__ is called in FOR_ITER.And indeed, CPython's Python/ceval.c confirms it e.g., GET_ITER calls PyObject_GetIter(iterable) that is equivalent to iter(iterable) that can call iterable.__iter__() method.In the python folder, where can I see the code of other built-in methods (like len(), or int()?These functions are also implemented in C (in CPython). You can see them in the CPython source repository.Built-in methods are from builtins module that is implemented in Python/bltinmodule.c e.g., len() calls PyObject_Size().int is a class for integers in Python. It is implemented in Objects/longobject.c (Python 3).Isn't the CPython code in the Python folder?No. The Python installation folder does not contain the source code for CPython. It may contain pure Python modules from the standard library such as Lib/fractions.py unless they are zipped or only compiled modules such as .pyc, .pyo files have been installed.To get the full source code, run:where hg is the Mercurial executable.As an exercise, you could locate where other Python implementations such as Pypy, Jython define GET_ITER, FOR_ITER, len(), int().
You're asking for behaviour that's built into Python. In particular you're using the Python interpreter written in C which is often referred to as CPython. You can find the source of CPython here although it'll take a while to find the exact code that does len(), int() and the iterator protocol.


Answer URL
https://docs.python.org/3/c-api/object.html#c.PyObject_GetIter
https://docs.python.org/3/c-api/object.html#c.PyObject_Length
