Natural Text
There are similar errors but I could not find a solution for bz2.The following program fails on the decompress:I tried using bytes(un, 'UTF-8) but that would not work. I think I did not have this problem in Python 3.3.EDIT: this was for the Python challenge I have two bits of code which work thanks to Martijn:This one works from the webpage:
The bz2 library deals with bytes objects, not strings:In other words, using bytes() works just fine, just make sure you use the correct encoding. UTF-8 is not that encoding; if you have bytes masking as string character codepoints, use Latin-1 to encode instead; Latin 1 maps characters one-on-one to bytes:orAlso see the Python Unicode HOWTO:Latin-1, also known as ISO-8859-1, is a similar encoding. Unicode code points 0–255 are identical to the Latin-1 values, so converting to this encoding simply requires converting code points to byte values; if a code point larger than 255 is encountered, the string can’t be encoded into Latin-1.I'll leave the decoding to you. Have fun with the Python Challenge!Note that if you loaded these characters as they are from a webpage, they will not by ready-made bytes! You'll have the characters '\', 'x', 8 and 2 rather than a codepoint with hex value 82. You'd need to interpret those sequences as a Python string literal first:Note the double backslashes in the representation of un. Only the last bytes result is then decompressable!


Answer URL
https://docs.python.org/3/howto/unicode.html
