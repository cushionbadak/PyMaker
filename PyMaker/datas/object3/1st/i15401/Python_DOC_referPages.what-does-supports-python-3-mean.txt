Natural Text
On a developer site like PyPI, when a module says it supports Python 3 (like the requests package), can I use it with any Python 3 release or is it literally Python 3.0?If it does mean the latest Python version, how can you be sure that it is true? For example if the project has been untouched for like 1 or 2 years?
Supporting Python 3 means supporting Python 3 up to the current point release.Python point releases are backward compatible. What works on 3.0 should generally work on 3.4. See PEP 387 for the general guidelines on this policy. Python 3.4 added some deprecations but none of these will affect packages that were once only written for 3.0, at least until Python 3.5 or 3.6 are released.Exceptions are more easily made for C extensions. Python 3.3 saw a new internal Unicode format, but support for the old Unicode C APIs is still present in 3.4. The 3.4 deprecations are for the most part for code that has been extremely rarely used, if at all. Any code that uses features that are now slated for removal should trigger warning messages.For future Python 3.x releases, just download the package and use it. If anything were to break, look through the Deprecated entries in recent Python 3 release notes to see if the project may have been using a feature since removed.In any case, try and check the project documentation; a good project will list exact versions on which they have tested the package. The requests project states:Python 2.6â€”3.4


Answer URL
https://docs.python.org/3/whatsnew/3.4.html#deprecations-in-the-python-api
https://docs.python.org/3/whatsnew/3.3.html#pep-393-flexible-string-representation
https://docs.python.org/3/whatsnew/
