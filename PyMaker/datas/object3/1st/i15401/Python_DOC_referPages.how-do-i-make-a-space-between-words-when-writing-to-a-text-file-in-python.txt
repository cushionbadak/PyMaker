Natural Text
The following code writes to a text fileHowever, in the text file the name and score do not have space between them for example, how could I change "James14" in to "James 14"
You can try OrOrOrOrOr
You'll have to write that space:or use string formatting:If you are using Python 3, or used from __future__ import print_function, you could also use the print() function, and have it add the space for you:I set end to an empty string, because otherwise you'll also get a newline character. Of course, you may actually want that newline character, if you are writing multiple names and scores to the file and each entry needs to be on its own line.
A simple way would be to simply concatenate with a space characterA more robust method (for if the formatting gets more involved) is to use the format method
Bhargav and Martjin's answers are good. There are many ways to do it. I'd like to add that the .format way seems to be a little better because you can potentially reuse the arguments and organize your code better.
You should format a string. Basically, %(Name)s is a placeholder (denoted by the %) for a string (denoted by the s following the parentheses), which we will reference by "Name". Following our format string, which is wrapped in "", we have this weird thing:%{'Name': name, 'Score':score}This is a dictionary that provides replacements for the "Name" and "Score" placeholders.


Answer URL
https://docs.python.org/3/library/functions.html#print
