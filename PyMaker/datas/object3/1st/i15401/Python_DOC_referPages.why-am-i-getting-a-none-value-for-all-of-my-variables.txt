Natural Text
So, I've attempted to make a simple Base 10 to Base 16 converter (I realize this is Base 10 integer to a mock-Base 16 string). I'm fairly new to Python; I just started learning it this week (I have prior programming experience with C#, so I'm not lost on this).After running and inputting 1048575 (that's the highest it can go, so I'm expecting "fffff" as an output), it gives me:After I ran some tests which mainly involved printing the R1 to R5 values at the beginning and the end of the function, I've come to the conclusion that the issue lies somewhere in the R1 = numberConvert(R1) section. At any time before that, the variables behave normally. Right at the start of the function, after being inputted, theR variables are numbers 0 through 15.Right before function numberConvert finishes up, they are 0 through 9, or "a" through "f". However, if I were to print value R1 immediately after R1 = numberConvert(R1), it gives me None as an output.From what I've read, this is essentially Python's null value. So, I've narrowed down the problem to the section where I'm running the function numberConvert.
All functions in Python return None by default unless you have a return-statement.  So, if you want your numberConvert function to return a value other than None, you need to put one:Since you say you have C# experience, perhaps you thought that doing:would pass R1 as a reference which would be modified inside numberConvert whenever you did:This is incorrect though because a is treated as a local name that gets assigned the value of R1.  For more information on this, see How do I pass a variable by reference?Also, there are a few things I'd like to mention about your numberConvert function:You do not need parenthesis with if-statements in Python.  In fact, most Python programmers consider them to be bad style. Instead, you should just do:There is not really a reason to do:since you can compare with integers directly:If you want, you could use a dictionary to avoid all those if-statements:


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-return_stmt
https://docs.python.org/3/library/stdtypes.html#typesmapping
