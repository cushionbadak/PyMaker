Natural Text
Consider the following code:When running this on Python 2 and adding something with self, self is skipped (as mentioned in the comment). On Python 3, however I got trouble when using the code on Class.method (i.e. not instance.method). The problem is similar to Detecting bound method in classes (not instances) in Python 3, but non of the answers there works. Using inspect.isroutine() or  inspect.isfunction() breaks the code for non-methods (no self). Using hasattr(method, '__self__') doesn't work on Class.method.I've written a small testscript for this:The code works with both Python 2 and 3. However args_without_self(Class.method) also has self in Python 3 (and I would like to avoid that, but not break the others). Everythign should print ['a', 'b', 'c'].
You can't, on Python 3, detect methods on the class, as they are never bound. They are just regular functions.At most you can look at their qualified name and guess if they might be methods, then see if the first argument is named self. Heuristics and guesses, in other words:


Answer URL
https://docs.python.org/3/glossary.html#term-qualified-name
