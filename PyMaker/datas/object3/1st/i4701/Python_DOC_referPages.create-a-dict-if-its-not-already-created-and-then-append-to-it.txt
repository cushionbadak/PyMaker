Natural Text
I have a list of files in which I need to select few lines which has CommonChar in them and work on creating a dictionary. The lines in a file which I am interested in look like these: So with this I would want a final dictionary which will store internal dictionaries named on uniqueName and key value pairs as (field: value, field1:value1)This way I will have a main dict with internal dict based on uniqueName and key value pairs. Final output should look like this: 
Check out defaultdict! Import with from collections import defaultdict. If you start with mainDict = defaultdict(dict) it will automatically create the dictionary if you try to assign a key. mainDict['Apple']['American'] = '16' will work like magic.If you need to increment new keys in the sub dictionaries, you can also put a defaultdict in a defaultdictdocumentation: https://docs.python.org/3/library/collections.html#collections.defaultdict
'Apple' and 'Grapes' can't be created as dictionaries since they are strings. I'm assuming you have a flow in your program that goes something like this:create a dictionary containing information about applesassign that dictionary to the variable applecheck if this just created dictionary is already in mainDictif not, add it to the values of mainDict under the key 'Apple'output:The problem I think you have, is that there's no general way to get the name of an object as a string. Dicts don't have a name attribute. Refer to these answers: How can I get the name of an object in Python?


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
