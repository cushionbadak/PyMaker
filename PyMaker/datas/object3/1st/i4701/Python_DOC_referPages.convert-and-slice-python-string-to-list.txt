Natural Text
I am given a raw string which is a path or "direction" to a string in JSON. I need the following string converted to a list containing dictionaries.. The list should look like this I then iterate over this list to find the object in the JSON (which is in a Spark RDD)I attempted st.split(\) which gave meBut how do I convert and split items like 'line[Type="BusinessOwners"]' to 'line',{'Type':'BusinessOwners'}  ?
or using ast.literal_eval
Would be more efficient if it wasn't a 1 liner, but I'll let you figure it out from here. Probably wanna come up with a more robust regex based parsing engine if your input varies more than your given schema. Or just use a standardized data model like JSON.['data', 'policy', 'line', {'Type': 'BusinessOwners'}, 'risk',  'coverage', {'Type': 'FuelHeldForSale'}, 'id']
Let's do it in one line :output:
Regular expressions may be a good tool here. It looks like you want to transform elements that look like text1[text2="text3"] with `text1, {text2: text3}. The regex would look something like this:You can modify this expression in any number of ways. For example, you could use something other than \w+ for the names, and insert \s* to allow optional whitespace wherever you want.The next thing to keep in mind is that when you do find a match, you need to expand your list. The easiest way to do that would be to just create a new list and append/extend it:This makes a paths that is[IDEOne Link]I personally like to split the functionality of my code into pipelines of functions. In this case, I would have the main loop accumulate the paths list based on a function that returned replacements for the split elements:The comma in return item, is very important. It makes the return value into a tuple, so you can use extend on whatever the function returns.[IDEOne Link]


Answer URL
https://docs.python.org/3/howto/regex.html
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
