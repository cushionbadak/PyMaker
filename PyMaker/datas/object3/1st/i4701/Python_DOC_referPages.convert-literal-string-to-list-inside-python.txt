Natural Text
Column name helpful has a list inside the string. I want to split 2 and 4 into separate columns.This works the first row but if I do gives me attribute errorHow can I print out like this in my dataframe??
As suggested by @abarnert, the first port of call is find out why your data is coming across as strings and try and rectify that problem.However, if this is beyond your control, you can use ast.literal_eval as below.Explanation From the documentation, ast.literal_eval performs the following function:Safely evaluate an expression node or a string containing a Python  literal or container display. The string or node provided may only  consist of the following Python literal structures: strings, bytes,  numbers, tuples, lists, dicts, sets, booleans, and None.
Assuming what you've described here accurately mimics your real-world case, how about a regex with .str.extract()?Each pattern (?P<name>...) is a named capturing group.  Here, there are two: helpful/not helpful.  This assumes the pattern can be described by: opening bracket, 1 or more digits, comma, 0 or more spaces, 1 or more digits, and closing bracket.  The Pandas method (.extract()), as its name implies, "extracts" the result of match.group(i) for each i:
Just for fun without module.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
