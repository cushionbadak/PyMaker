Natural Text
I am combining two questions here because they are related to each other. Question 1: I am trying to use glob to open all the files in a folder but it is giving me "Syntax Error". I am using Python 3.xx. Has the syntax changed for Python 3.xx?Error Message:Code:Question 2: I want to read input files, append "output" to the names and print out the names of the files. How can I do that?Example: Input file name would be - xyz.csv and the code should print output_xyz.csv .Your help is appreciated. 
Your first problem is that strings, including pathnames, need to be in quotes. This:… is trying to divide a bunch of variables together, but the leftmost and rightmost divisions are missing operands, so you've confused the parser. What you want is this:Your next problem is that this glob pattern doesn't have any globs in it, so the only thing it's going to match is the directory itself.That's perfectly legal, but kind of useless.And then you try to open each match as a text file. Which you can't do with a directory, hence the IsADirectoryError.The answer here is less obvious, because it's not clear what you want.Maybe you just wanted all of the files in that directory? In that case, you don't want glob.glob, you want listdir (or maybe scandir): os.listdir('/src/xyz/rte/folder/').Maybe you wanted all of the files in that directory or any of its subdirectories? In that case, you could do it with rglob, but os.walk is probably clearer.Maybe you did want all the files in that directory that match some pattern, so glob.glob is right—but in that case, you need to specify what that pattern is. For example, if you wanted all .csv files, that would be glob.glob('/src/xyz/rte/folder/*.csv').Finally, you say "I want to read input files, append "output" to the names and print out the names of the files". Why do you want to read the files if you're not doing anything with the contents? You can do that, of course, but it seems pretty wasteful. If you just want to print out the filenames with output appended, that's easy:
This works in http://pyfiddle.io:Doku: https://docs.python.org/3/library/glob.htmlOutput:I am on windows and would use os.walk (Doku) instead. It also recurses into subdirs.


Answer URL
https://docs.python.org/3/library/glob.html
https://docs.python.org/3/library/os.html#os.walk
