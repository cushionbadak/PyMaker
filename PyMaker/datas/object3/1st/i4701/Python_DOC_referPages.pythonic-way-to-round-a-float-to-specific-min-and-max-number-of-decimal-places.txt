Natural Text
I would like to implement a function round(num, min, max) that rounds a float to at least min decimal places and at most max. I want it to return a string. I have something that works, but it was surprisingly long. Can you write something more pythonic than me?UsageI think you get the idea. Here's what I've got.
You're confusing float rounding with print formatting.*The float 3.14 is a different number than 3.1415. So rounding 3.1415 to 2 digits makes sense.But the float 3.00 is the exact same number as 3.0. So rounding 3.0 to 2 digits isn't going to do anything; it's still going to be the same thing you started with.Meanwhile, if you want to change the way numbers are printed out, you can do that using the format function, the str.format method, f-strings, % formatting, etc. For example:See Format Specification Mini-Language for details on how to use f-strings (and str.format and format), and printf-Style String Formatting for details on how to use %.* Either that, or you're expecting floats to keep track of their precision and preserve it through a chain of operations. If that's what you're after, floats can't do that, but decimal.Decimal can, so you may want to look at the decimal module. But I don't think that's what you want here.
Just some small improvements, but keeping the basic idea (convert value, strip zeroes, strip trailing decimal point).First change is to avoid name clash with builtin functions min and max. I think that using functions designed for the particular purpose (str.format for value formatting, str.rstrip for stripping from right, str.endswith for testing the last character) makes it little bit more pythonic.


Answer URL
https://docs.python.org/3/library/string.html#format-specification-mini-language
https://docs.python.org/3/library/stdtypes.html#old-string-formatting
