Natural Text
I have two lists: I would like to check list A against list B, so that if an item in list A exists in list B, I get a True result, and if not, False. i.e. I've tried the following: I get the error: TypeError: list indices must be integers, not strI've also tried: c = [True for i in a if i in b]which returns: c = [True, True]I would like the correct answer to be c = [False, True, True]

You could do a list comprehension in a more readable way:
Sets are handy here https://docs.python.org/3.6/library/stdtypes.html#set-types-set-frozenset:
The Pythonic way to do this is with [x in b for x in a], as suggested by @Dan and @Aritesh. The in operator checks for membership, and is generally what you want to use if you want to check if a collection has a certain value. It will give you a boolean value.If you then combine this with a list comprehension, you get a very concise way to express what you want.Large listsIf the list you are checking is small, then the above code works very well. However, once you start to check lists with thousands or millions of elements, then you will notice that the above code will start to get quite slow. That is because Python has to look at each element in turn to find out whether the element is in the list or not. So for a list with a million elements in, Python might have to do a million comparison operations.To speed things up, you can use a set. Sets use hash tables under the hood, and the great thing about hash tables is that lookups take roughly the same amount of time no matter how many elements there are in them. Even with millions of elements, they are super quick. You would use them like this:Better still, if b doesn't have to be a list, you can just define it as a set. This saves you the extra step of converting the list into a set, which will be slow if you have a large number of elements.


Answer URL
https://docs.python.org/3/reference/expressions.html#in
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/tutorial/datastructures.html#sets
