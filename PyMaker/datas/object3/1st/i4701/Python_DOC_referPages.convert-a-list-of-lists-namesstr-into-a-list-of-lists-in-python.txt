Natural Text
This question already has an answer here:How do I create a variable number of variables?                    16 answers                I am new to python and I have search a lot about this issue. I know there is a way of converting tuples to a list, but somehow it doesn't work for me. Here is my issue.Say I have:Then say I have another list of:How can I convert it(l_all) to a list of I tried ast package using ast.literal_eval, but I received this error:ValueError: malformed node or string: <_ast.Name object at  0x00000172CA3C5278>I also tried to use json package, still no luck.I tried just output ast.literal_eval('l_1'), not working either.I'd really appreciate if anyone can help on this.Thanks a lot!
That sounds like a problem that should be fixed upstreamast.literal_eval evaluates literals. eval is just 1) cheating and 2) so dangerous I wouldn't recommend it at all.Anyway, you could scan global then local variables using global & local dicts in a list comprehension:result:globals().get(x,locals().get(x)) is a quick & dirty code to first look in global vars & fallback to local vars if not found. It could be overcomplicated for your needs.
You can use a dictionary to store the list names and each associated list:Output:However, to actually access the lists via variable name, you would have to use globals:Output:
You can simply do:output:
Then say I have another list of:l_all = ['l_1','l_2','l_3']Let's say you don't create this using strings, and use the  list variables directly You can then get the wanted output
You can use locals()And you should be aware that you can get KeyError if no such variable present in current scope, for that you can all_local_variables.get(i), that will return None if not present or set default as all_local_variables.get(i, 'default')
The simplest way to do this is to evaluate your strings in l_all. Something like thisThe output is


Answer URL
https://docs.python.org/3/library/functions.html#locals
