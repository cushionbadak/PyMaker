Natural Text
There is a lot of libraries that use their custom version of Future. kafka and s3transfer are just two examples: all their custom future-like classes have object as the superclass.Not surprisingly, you cannot directly call asyncio.wrap_future() on such objects and can't use await with them.What is the proper way of wrapping such futures for use with asyncio?
If the future class supports standard future features such as done callbacks and the result method, just use something like this:Consider that code a template which you can customize to match the specifics of the future you are dealing with.Intended usage is to call it from the thread that runs the asyncio event loop:If you are calling it from a different thread, be sure to pass loop explicitly because asyncio.get_event_loop will fail when invoked from a thread not registered with asyncio.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future
