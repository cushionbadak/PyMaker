Natural Text
I'm trying to use ThreadPoolExecutor in Python 3.6 on Windows 7 and it seems that the exceptions are silently ignored or stop program execution. Example code:The output:It's hanging there until I kill it with Ctrl+C. However, when I remove 1/0 from some_long_task1, Task #1 completes without problem:I need to capture the exceptions raised in functions running in ThreadPoolExecutor somehow.Python 3.6 (Minconda), Windows 7 x64.
ThreadPoolExecutor.submit returns a future object that represents the result of the computation, once it's available. In order to not ignore the exceptions raised by the job, you need to actually access this result. First, you can change run_job to return the created futures:Then, have the top-level code wait for the futures to complete, and access their results:Calling result() on a future whose execution raised an exception will propagate the exception to the caller. In this case the ZeroDivisionError will get raised at top-level.
You can handle the exceptions with a try statement. This is how your some_long_task1 method could look like:Output when the method is used within your script:


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait
