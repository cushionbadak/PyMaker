Natural Text
This question already has an answer here:How do you split a list into evenly sized chunks?                    57 answers                The split method for strings only takes a parameter for the delimiter, but how do I easily split by every (or every other, etc) letter? This method works to split by every letter, but seems clumsy for a simple task.I suppose a function could do this:I am surprised if no one has wished for this before, or if there is not a simpler built in method. But I have been wrong before. If such a thing is not worth much, or I have missed a detail, the question can be deleted/removed.
Strings are iterables of characters, so splitting it into characters is as simple as iterating over it. One way of doing that is just giving it to the list() built-in:The docs also provide a recipe for a grouper() method that will take an iterable and group it into chunks of the given size, as strings are iterables, this just works on them. This can be very efficient as it is lazy and utilises the fast itertools functions:E.g:Obviously, if you are just iterating over the characters, you don't need to make a list - just iterate straight over the string or the grouper() iterable. 
You can try doing it this way:Output:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
