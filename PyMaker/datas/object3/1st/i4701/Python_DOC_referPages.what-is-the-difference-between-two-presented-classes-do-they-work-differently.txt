Natural Text
What is the difference between this two implementations of Singleton. Does creating of variable _instance in parent class make it work differently from the second class?
For the code posted, there is no difference.If your subclasses implement __bool__ or __len__ however, the first example will fail, as not self._instance could return True even when an instance has been set. You really want to use if self._instance is None: instead:Other than that, the differences are cosmetic.You also want to use identity testing to check if a singleton implementation work correctly; a subclass could implement the __eq__ method and return True even if the two objects are distinct (so not singletons):
Agreed with @Martijin Pieters answer,Besides, provide another way to implement Singleton, called Borg, which share the same state:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__bool__
https://docs.python.org/3/reference/datamodel.html#object.__len__
https://docs.python.org/3/reference/datamodel.html#object.__eq__
