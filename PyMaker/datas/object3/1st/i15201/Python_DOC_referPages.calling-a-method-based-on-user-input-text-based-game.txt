Natural Text
I'm currently trying to make a text-based game, and I'd like to add a feature where, based on the user's input in the command line (or Python shell), it detects a corresponding method, and returns it.For example, when the user types in 'legal moves!' in the command line:Or something like that.I know that if I make a class, and a method called legal_moves(self), the user would be able to type in CLASSNAME.legal_moves() to call the same thing, but I'm trying to make it as simple as possible for the player, assuming they know nothing about python.Currently I have something like this, but I'm not quite sure exactly how to make it work:
You are very close!First, you have to use class and not def to declare a class:And then, use input() in order to get user input.
There are several options; you could use the getattr() function to turn strings into attributes on your instance; this includes access to methods:This translates 'Help me' into help_me and finds the corresponding method to call.To list all the possible methods, you could use the inspect.getmembers() function, together with the inspect.ismethod() predicate function to list all methods your class offers; you'll have to filter these as you don't want to present the __init__ method to your visitor. Perhaps you could overload the __doc__ attribute for functions for this purpose; it contains the function documentation string:Demo of the latter:


Answer URL
https://docs.python.org/3/library/functions.html#getattr
https://docs.python.org/3/library/inspect.html#inspect.getmembers
https://docs.python.org/3/library/inspect.html#inspect.ismethod
https://docs.python.org/3/tutorial/controlflow.html#tut-docstrings
