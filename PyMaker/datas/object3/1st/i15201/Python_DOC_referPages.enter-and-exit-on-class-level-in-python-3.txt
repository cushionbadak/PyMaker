Natural Text
I am unsuccessfully trying to get the magic with-statement methods __enter__ and __exit__ running on class-level:However, this will result in an AttributeError:Is it possible to use the __enter__ and __exit__ methods on class-level anyway?
__enter__ and __exit__ are special methods, and as such only work correctly when defined on a object's type, not in it's instance dictionary.Now Spam is a instance of type, and type(Spam).__enter__ and type(Spam).__exit__ do not exist. Therefore you get an attribute error.To make this work, the methods would need to be declared on the metaclass of the class you want to use. Example:Now Eggs is an instance of Spam (type(Eggs) == Spam, and therefore type(Eggs).__enter__ and type(Eggs).__exit__ do exist).However defining a metaclass just to use an instance of it as a context manager seems a little over the top. The more straight forward solution starting from your example would be to just useOr if you want to reuse the same instance later:
It seems that CPython doesn't call a bound method like instance.__exit__, it seeks over instance type, doing something like type(instance).__dict__['__exit__'] than calls it. And since type(Spam) is a special type object (not a Spam itself), it doesn't contain __exit__ method. I tried to workaround that using metaclasses, but wasn't successful. __getattr__ doesn't work either.See here: https://github.com/python/cpython/blob/2545fdbd4b4a6a77b132fccf816578f59b609be5/Objects/typeobject.c#L1362Py_TYPE is similiar to type(self)_PyType_LookupId walks over type(self).__dict__ (no __getattr__ call here)Python 2 implementation is different, but main idea about getting type(self) applies to it too


Answer URL
https://docs.python.org/3/reference/datamodel.html#special-method-lookup
