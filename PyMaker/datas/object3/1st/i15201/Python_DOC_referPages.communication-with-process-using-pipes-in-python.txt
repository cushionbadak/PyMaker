Natural Text
I have a process with which I can communicate on the command line like this:So: I start the process, type some input and after hitting Ctrl-D twice, I get the output. I want to make a Python wrapper around this process. I created this:This works the first time, but after that I get:Is there another way to interact with this process without closing the file?
p.wait() will wait until the subprocess has exited prior to returning, so on the second iteration in your script, p has exited already (and has therefore closed p.stdin).
If the proccess you're wrapping ends after the first ouput, the comunication will fail to the second. Due all pipes (stdin and stdout) will be closed. Hence the error:ValueError: I/O operation on closed file.Each time you try to send input to the wrapped process, this must be expecting that input and pipes must be opened. On the other hand is what Thomas said in his answer, p.wait() is not the way to go for repetitive input/output strategy. You can't use subprocess.Popen.communicate() neither, due it calls subprocess.Popen.wait() internally.You can try use p.stdin.write and p.stdout.read here you have a good article about the subject: Writing to a python subprocess pipe
To emulate the shell session:In Python, using check_output():Ctrl+D is recognized as EOF (terminate the input) by a Unix terminal ($ stty -a -- look for eof = ^D and icanon in the output). If you need to type Ctrl+D twice (at the beginning of a line); it might indicate a bug in the process program such as "for line in sys.stdin: doesn't notice EOF the first time" Python bug.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.check_output
