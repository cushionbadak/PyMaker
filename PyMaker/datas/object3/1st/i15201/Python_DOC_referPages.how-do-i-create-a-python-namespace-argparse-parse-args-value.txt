Natural Text
To interactively test my python script, I would like to create a Namespace object, similar to what would be returned by argparse.parse_args().The obvious way,may result in Python repl exiting (as above) on a silly error.So, what is the easiest way to create a Python namespace with a given set of attributes?E.g., I can create a dict on the fly (dict([("a",1),("b","c")])) but I cannot use it as a Namespace:
You can create a simple class:and it'll work the exact same way as the argparse Namespace class when it comes to attributes:Alternatively, just import the class; it is available from the argparse module:As of Python 3.3, there is also types.SimpleNamespace, which essentially does the same thing:The two types are distinct; SimpleNamespace is primarily used for the sys.implementation attribute and the return value of time.get_clock_info().Further comparisons:Both classes support equality testing; for two instances of the same class, instance_a == instance_b is true if they have the same attributes with the same values.Both classes have a helpful __repr__ to show what attributes they have.Namespace() objects support containment testing; 'attrname' in instance is true if the namespace instance has an attribute namend attrname. SimpleNamespace does not.Namespace() objects have an undocumented ._get_kwargs() method that returns a sorted list of (name, value) attributes for that instance. You can get the same for either class using sorted(vars(instance).items()).While SimpleNamespace() is implemented in C and Namespace() is implemented in Python, attribute access is no faster because both use the same __dict__ storage for the attributes. Equality testing and producing the representation are a little faster for SimpleNamespace() instances.
It is now recommended to use SimpleNamespace from the types module. It does the same thing as the accepted answer except for it will be faster and have a few more builtins such as equals and repr.
argparse documentation show various examples of what you're trying to do: 


Answer URL
https://docs.python.org/3/library/types.html#types.SimpleNamespace
https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.parse_args
