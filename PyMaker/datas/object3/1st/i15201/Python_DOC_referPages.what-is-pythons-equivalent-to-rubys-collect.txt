Natural Text
in ruby, You can do this to collect importent values from a hash:trying to do the same in python (new to the language) but didn't managed to . 
Use a list comprehension over the values of a dictionary:The keys in the outer dictionary don't matter here. The output is [1, 1], all values of the consider_this key, in arbitrary order. Also see the dict.values() method. If the consider_this key is missing it is considered an error.You could use filtering to only consider dictionaries with the specific key:or provide a default value:The latter uses the dict.get() method.Consider using {...} (a set comprehension) rather than a list to reflect that ordering doesn't matter here; the result will only hold unique values, so {1} if all consider_this keys only ever have the value 1.
python (new to the language)    In ruby, you can do this to collect values from a hashwhat is python's equivalent to ruby's collectThe equivalent in python would be:When you get a little more experience, you can learn how to create lists from loops more efficiently using what are called list comprehensions:Note that in python you could use d.values() instead of d.items() because you don't use the keys:In ruby 1.9+, Hashes are ordered, but in python dictionaries are not ordered, so if the order of the results is important to you, you can use python's OrderedDict:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/stdtypes.html#dict.values
https://docs.python.org/3/library/stdtypes.html#dict.get
