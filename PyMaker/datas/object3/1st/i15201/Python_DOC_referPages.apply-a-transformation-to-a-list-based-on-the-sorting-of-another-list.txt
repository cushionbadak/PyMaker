Natural Text
I have two lists;I'd like to sort list B from maximum value to minimum value and then sort list A, based on the transformation applied to list B. That is;
The easiest way is to zip them together, sort them by the second component, then unzip them:
zip them to create a sequence of tuples and then use a list comprehension to extract the first value from each tuple in the sorted order.A key argument can be passed to sorted which allows you to sort based on a function. In the example below we sort using a lambda function which returns the second value from your combined tuples converted to an integer.Note that there is a difference between sorting strings and sorting integers, and as such you have to convert values from B using int, if you didn't want this for some reason then you can remove the int call in the lambda function.
Besides the builtin function zip & sort as @DanielRoseman answered, you can use numpy module to sort:numpy is more efficient when your lists to sort is of large size. To benchmark:
zip will create a list of tuples, used with lambda in the sort function



Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#sorted
https://docs.python.org/3/reference/expressions.html#lambda
