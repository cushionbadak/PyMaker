Natural Text
I would like to get a value from a. If it can't be found there, then try to get it from b. Throw exception if it can't be found in b either.a.get(key, b[key]) doesn't work since it won't lazy evaluate b[key].What's the proper way to it?The following works but seems a bit lengthy.
If you're using 3.3+, you can use ChainMapIf you're only interested in retrieval and don't have 3.3+ available, then you can roll your own helper function:Then use that as value = whatever('somekey', a, b)
Use conditional expression, like thisIf you want to avoid error, if it is not found in both of them, you can use dict.get, like thisThere is an ugly hack, which uses a tuple of dictionaries to pick the best oneif you want to get the key error, you can make it even more weirder,This will pick a, if key is really in a, because boolean expressions are equivalent to 1 (True) and 0 (False). So, (b, a)[True] will pick a and False would pick a.


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
