Natural Text
I am a beginner to Python.I wanted to know if Argparse and JSON could be used together.Say, I have variables p,q,rI could add them to argparse as - Now suppose I wanted to read the same variables from JSON file, is it possible to do it?So I could input the values either from command line or a JSON file.JSON input file -
The args Namespace from parse_args can be transformed into a dictionary with:The JSON values are also in a dictionary, say json_dict.  You can copy selected values from one dictionary to the other, or do a whole scale update:This way the json_dict values over write the argparse ones.  If you want to preserve both, you either need to have different argument (key) names, or the values have to be lists, which you can append or extend.  That takes a bit more work, starting with using the correct nargs value in argparse.The revised parser produces, with a test input:The JSON string, when parsed (json.loads?) produces a dictionary like:I produced this by pasting your display into my Ipython session, but I think the JSON loader produces the same thingThe argparse values could be added with:Here I added it as a 3rd test set, taking (by conincidence) a name from the tests list.  json_dict['testParameters']['test2']=args_dict would replace the values of test2.One way to add the args values to the undefined values of 'test2' is:I used this version of update to give priority to the 'cc' value in the JSON dictionary.
Given that your JSON file contains a dict of the form:After creating the parser you could "unpack" the dict like so:However this forces you to maintain the dict keys to fit the arguments name of the method add_arguments. You also do not have a simple/straight forward way of using more advance behaviors like using the action, type, choices arguments.Also you would have to change the form of your dict to contain the various  arguments you want to use. One solution would be to have the name/flag as the key of the dict in a tuple and the arguments would be a dict:EDITGiven the comments from the OP it looks like he wants to parse values taken from a JSON file.EDIT 2Looking at the argparse documentation this paragraph maybe somewhat relevant.


Answer URL
https://docs.python.org/3/library/argparse.html#fromfile-prefix-chars
