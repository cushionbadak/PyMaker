Natural Text
Suppose I have a class that looks like this:In most instances I initialize my class like this:But I'll occasionally have a code path which sets the param keyword argument based on some logic, while holding the some_arg positional argument at a constant value. This code would look something like:My question is: Can I avoid having to repeat myself for the MyClass(1 portion of my object instantiation? I would like to, for the duration of the code path, freeze the value of the positional some_arg as 1, and simply pass the keyword argument param at instantiation time.Ideally the code would look something like this:Any ideas for what a clean implementation of magic_function_to_freeze_some_arg would look like? Is there a means to do this via Python standard library?
You're looking for functools.partial!alternatively (as mgilson mentions in the comments) you can build your own anonymous constructor method
Instead of repeating MyClass, store the argument in a variable and apply that:You could create a functools.partial() object or a lambda function but for this case that's overkill.


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
