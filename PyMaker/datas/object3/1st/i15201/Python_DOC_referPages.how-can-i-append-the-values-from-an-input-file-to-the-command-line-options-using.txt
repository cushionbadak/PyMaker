Natural Text
Say I have a yaml input file (input.txt) that contains the following:my code to parse this:My question is this: I have seen numerous websites that show how to add the argument for the config-file like above. How do I 'parse' that config file and add (append) the values in it to any values passed on the command-line?If my program is called so.py, and is invoked like this:I would like to get    names = ['Bob', 'Jill', 'Ralph']    ages = [22, 31, 40]    county = 'somewhere'in my args. Is this possible?
There is a parameter that allows input from a file, the 'fromfile-prefix-chars'https://docs.python.org/3/library/argparse.html#fromfile-prefix-charsIn the default form it expects one commandline string per line.  But the docs also show how it can be modified to take multiple strings from each line.  You could take that idea and extend it to handle the Yaml syntax.But there are libraries that read config and yaml files.  So you could use your --config-file argument to read your file with that library, and then merge its results with the argparse results. Merger is probably easiest by converting both (yaml and argparse) to dictionaries, and using the .update method.Ipython uses its config files (both default and user specified) to populate its argparse parser arguments.  Thus user profiles can override the defaults, and the commandline can override both. The code that does this is not for the faint of heart, but for a large project might be worth studying.Details on how you do the merger depend on the 'yaml' produced object.  The argparse args is a simple object of type argparse.Namespace.  See the docs for detail.  Usually people just 'read' values from args, but it is equally easy to add or modify values.  And if you prefer, vars(args) turns it into a dictionary.Using yaml.load (and simplifying the argparse a bit):An example of using prefix_chars:


Answer URL
https://docs.python.org/3/library/argparse.html#fromfile-prefix-chars
