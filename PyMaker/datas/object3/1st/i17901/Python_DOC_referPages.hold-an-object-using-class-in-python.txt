Natural Text
I write a program to weave lists of floats together, for example:I want to weave l1 into l2:And now I want it in a class so I can hold this result and weave l3 into it:The function I wrote two weave two lines together is:How to hold the result with a class and weave the next line into it?
Your weave function drops the last element of l2; you need to use itertools.zip_longest() here:Note that you need to return, not print, your output. The izip_longest() call adds None placeholders, which we need to remove again from the sum() output after zipping.Now you can simply weave in a 3rd list into the output of the previous two:Demo:
Another solution (based on Martijn Pieters code) which avoids recursion is:usage:
Function you wrote returns None, as no return statement is present. Replace print with return and chain calls. You might also need izip_longest instead of zip for lists of nonequal size:With izip_longest:demoWithout, zip breaks on shortest argument:
OK, as peoples comments, this seems a strange case to start using classes but something like this should work:This creates a Weaver object w and initialises it with l1.  Then you weave the other lists in one by one and it stores the result internally and finally you access and print that result.


Answer URL
