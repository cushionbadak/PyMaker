Natural Text
I want to start several subprocesses with a programm, i.e. a module foo.py starts several instances of bar.py.Since I sometimes have to terminate the process manually, I need the process id to perform a kill command.Even though the whole setup is pretty “dirty”, is there a good pythonic way to obtain a process’ pid, if the process is started via os.system?foo.py:bar.py:
os.system return exit code. It does not provide pid of the child process.Use subprocess module.To terminate the process, you can use terminate method or kill. (No need to use external kill program)
Sharing my solution in case it can help others:I took the info from this page to run a fortran exe in the background. I tried to use os.forkpty to get the pid of it, but it didnt give the pid of my process. I cant use subprocess, because I didnt find out how it would let me run my process on the background.With help of a colleague I found this:In case of wanting to append pids to the same file, use double arrow.
You could use os.forkpty() instead, which, as result code, gives you the pid and fd for the pseudo terminal. More documentation here: http://docs.python.org/2/library/os.html#os.forkpty


Answer URL
