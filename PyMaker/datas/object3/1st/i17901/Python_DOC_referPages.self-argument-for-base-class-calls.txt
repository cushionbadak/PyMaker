Natural Text
I'm working through Dusty Philip's "Python 3 Object Oriented Programming", which is excellent by the way, and I'm working through the diamond inheritance problem. Conceptually, it was a piece of cake, but there was a code snippet which I'm not 100% sure I understand. My question is, why do all the calls to the base classes in the subclasses include the self argument? As far as I can see, if we created an object instance:should work because the self argument is implicit. So why in the sub classes do we need Is it because, strictly speaking, we haven't created an instance of BaseClass but an instance of the SubClass, and hence if you call BaseClass.call_me() from within the subclass there is no implicit self argument to pass to it? 
In this case you are passing self, (the current class instance), as a parameter to the parent class so that it can make use of it, save it or otherwise access it. Normally this would actually be called as BaseClass(self, self) but in this case it can be read as *which_base_class*.function(param) especially in the last example.  It is important to note that the example is partial as without an __init__(self) class member to each class self is just another name with no special meaning.Ideally the example should have used super and new style classes - it is worth reading this article as well as the documents on super.


Answer URL
