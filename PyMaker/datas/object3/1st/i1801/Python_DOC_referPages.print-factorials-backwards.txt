Natural Text
I want to do a loop that gives factorials from 10 to 1.So I have this code:But this shows results like this:However I want them this way:I've tried few different things but nothing really works, any ideas please?
Output:To reduce the amount of memory required, you could do it like this instead:If you like list comprehensions, it could also be done in this somewhat hacky way:
In order to compute 10! you need to compute 9! first, so your best approach in order to avoid redundant computation is to write a function/generator that computes the factorials 1!, 2!, ... and then reverse the results.Like this, for example:
Divide the task into calculation and output. Store the calculated values in a dictionary for later output. Storing the numbers in a dictionary is cheaper then storing all output strings to be reversed later - still, if you want to calculate very high factorials this will eventually overflow the memory you got.By filling a dictionary incrementally you can reuse the last created factorial which reduces the complexety of computation.That way you have all factorials at your bidding when printing them:Output:See: python.org Dict-Doku
First:For factorial in python we could use math.factorial() math â€” Mathematical functionsSecond:You want your list in reversed order.  So we just use a decreasing for loop for i in range(x, 0, -1):-1 is the step we are using, x is your starting point, 0 the end of the loop.Third:Using a generator to save memory.In this case i am using yield The Python yield keyword explained Finally:You can print out the generator using for loopCode Example:
If you're certain you want to calculate factorial in that way, the only way the comes in mind is insert your output to a list\dictionary and print it after the calculations.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict
https://docs.python.org/3/library/math.html
