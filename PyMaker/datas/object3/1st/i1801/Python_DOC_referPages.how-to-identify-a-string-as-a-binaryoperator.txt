Natural Text
Perhaps this is an easy question, but I'm new to Python and haven't seen anyone else post anything similar to this. We have a list:orHow can one interpret this to: 5 + 1 or 10/2 ? I understand that you can write: int(lst2[0]) and then you would get 10, but how do you do the same with "+" or "/"?
Assuming you "know" that your list has three strings, with the first and last representing integers and the middle one representing one of a fixed set of operators, you just need a mapping from the operator to a function that implements it. For example:However, things get complicated once you start allowing more general inputs, as you need some logic for deciding what parts of the list represent what. For that, you need:A grammar, which identifies what role each element of your list playsA parser, which uses the grammar to convert each string to a usuable valueAn interpreter, which evaluates the thing produced by the parser to produce a final value.There may also be a tokenizer, which is what would convert a single string input like "5 + 1" into a list of tokens that the parser uses for its input.Any further general discussion about how to define any of the 4 concepts defined above is far beyond the scope of Stack Overflow.
If I understand you right, here is a snippet you may start with:operator module contains operators as a functions, so you can map symbols to the operators. Note that Iâ€™ve used truediv for /, you may want to use variant which return int always
You can't transform the string "+" to the operator + because operators are not things that exist at runtime. Operators only exist in code. You can map the string "+" to a function that takes two arguments and returns their sum, though. Functional equivalents for most operators exist in the operator module:
You can use standard function eval()https://www.journaldev.com/22504/python-eval-function


Answer URL
https://docs.python.org/3/library/operator.html
