Natural Text
I am trying to return duplicate values in a list of lists. Say I create a listI want to return every list with each duplicate value in that list. The expected output would beI'm thinking I need to use a nested for loop to access each number inside that list.I am also thinking about using a membership statement to see if it's in there more than once, but I'm not sure  if I'm implementing that correctly
List comprehension works really well for thisThis gives an output of:What's happening is we're looping through the three lists in 'my_list'. Whenever the 'count' of that value is bigger than 1 in that sublist, we're retaining it. We're then converting to a set, which removes any duplicates (otherwise we'd still have three instances of '5', and two instances of '6', afterwards).Converting this to a set (and then back to a list) will remove any duplicates, leaving us with only the multiple occurring values we're after.
You could use Counter:OutputExplanationCounter creates a dictionary where the keys are the values of the each of the inner lists and the values are the counts of each element. For example:creates the following object:then items returns a list of tuples, using the same example as above it will be:then using a list comprehension get only those values with count above 1.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
