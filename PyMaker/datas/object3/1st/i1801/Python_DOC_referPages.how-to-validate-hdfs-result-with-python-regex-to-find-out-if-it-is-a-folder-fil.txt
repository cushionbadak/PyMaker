Natural Text
I have a str which is the result of hdfs command to show, for a given path, if it is a folder, or a file, or doesn't exist, here are examples:str_file:str_folder:str_nonexist:Now that I want to know the result with regex check, here is the problem:Testing result is as below:So, how do I tell the difference between m and m1? apparently m means no finding while m1 means there is match.Eventually I need to tell the three scenarios: folder, file, nonexistThank you very much.Update (as per Филип Димитровски):Still now working:m1 should show a match and m should not.
Your regex Found [1-9]\d items means you want to search for Found xy items where x is a digit between 1 and 9, and y is a digit between 0 and 9. This is problematic, and I assume it is not what you want. If you want to match one or more digits, just use \d+. You may use online regex testers to debug such issues.The second problem is the misuse of string literals. When working with regular expressions in Python, you should always use raw string literals, which start with the letter 'r'.This is good: re.search(r'regex \d here', ..This is bad: re.search('regex \d here', ...Once you fix those, result = re.search(r'Found \d+ items', some_string) will work. To check if you have don't have any matches, you can compare the result with None.  If the result is not None, it will be a match object. Note: when an expression evaluates to None its result is blank and it is not displayed in the interpreter.Here's a working demo:Also, keep in mind that regular expressions are not good at parsing human-friendly messages and there may be libraries for HDFS instead of parsing raw output.


Answer URL
https://docs.python.org/3/library/re.html#match-objects
