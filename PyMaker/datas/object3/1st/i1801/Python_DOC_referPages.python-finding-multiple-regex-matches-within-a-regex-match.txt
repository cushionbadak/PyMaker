Natural Text
I am trying to use re.sub() to change all html tags < and > to { and }. Here's the catch: I only want to change the matches between <table and </table>. I can't for the life of me find a regex tutorial or post where one is able to change every regex match, but only between two other regex matches. I've looked at positive/negative lookahead and lookbehind tutorials, etc. but no luck. It's been a good few hours of searching before deciding to post. Here is the best I've got so far:This will match one "<" between the table begin and end tags, but I don't know how to get it to match more than one. I've played around with making the any-character groups lazy or not lazy, etc. but no luck.The point of all this is, I have a string with lots of HTML and I want to keep all of the HTML tags within tables, as well as the tables themselves.My current plan is to change all of the tags within tables (and the table tags themselves) to either { or }, then delete all HTML tags < and > in the entire document, then change all { and } back to < and >. Doing this should preserve the tables (and any other tags inside).Example of Input:Example of Output:Thank you,Grog
As Serge mentioned, this is not really a problem you want to tackle with a single regular expression, but with multiple regular expressions and some python magic:check out the documentation for using a function for the repl argument for re.sub hereAnd an explanation of the regular expressions:Also note that because (.*) is in a capture group, it is included in the strings output by re.split (see here)
Don't be too hard on yourself. I am not sure is it possible in one shot with standard re sub. In fact, I think it is either not possible or highly complicated. For example custom functions in replace (you can stuff a lot of custom functionality in a your custom function, up to whole html parser) Instead I highly recommend a simple solution is split and reassemble with split/join, or, may be, you would settle on a sequence of re replaces.Assuming one table l = s.split('table>'); l = [1] will give you table content and l.split(. A multitable version is belowSligty more readableGenerally for handling the HTML best to use some designated parsing libraries such as beautiful soup, the ad -hoc code will fail on many corner cases.
You can use the following regex to match and then replace with Group 1:This will match anything before '<table', then create a Group 1 with the table content, and then match everything after that.Replace with:That will give you only the table with content.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
https://docs.python.org/3/library/re.html#re.split
