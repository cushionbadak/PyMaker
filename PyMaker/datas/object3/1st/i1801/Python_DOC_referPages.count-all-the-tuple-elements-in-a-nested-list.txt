Natural Text
I want to get the count of all the elements in a nested list.nested_lst = [[('NOUN', 'shoe'), ('NOUN', 'shirt'), ('NOUN', 'jacket')], [('VERB', 'jump')], [('NOUN', 'shoe'), ('NOUN', 'shirt'), ('ADJ', 'fancy')]]My expected outcome is:My current code: Counter(itertools.chain(*nested_lst)) which produced the count of tuples instead of each element. 
Apply chain two times to get rid of inner tuplesOr Output:
You are very close. You just need another iteration through values returned by chain to get desired output:

I your list is only nested once, you can get a flat list with sum().After this you can make an empty dictionary, and increase the value in each iteration, where the word appears. If there is a new word, default the value to zero, and one will be added anyways. Most likely not the most efficient solution though.
You could always step through each list of tuples and add the counts with Counter.update():


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter.update
