Natural Text
I currently am trying to create a client-server application in which the client can send multiple files to the server using TCP protocol. The server will eventually create a hash-algorithm and send it back to the client but I am running into issues sending multiple files from the client to the server. In it's current form, the first file sends correctly but the files after encounter an error where the information is merged together. IE the file size is listed as the second file's name. I am a javascript dude and very new to python so an explanation to how I can make this happen would be much appreciated. I believe threading is the answer but with my limited understanding of python, I do not know how to make this work. Currently I can send one file at a time and the server stays open. However, I would like to enter several file names from my current directory and have them processed. I eventually will convert the entire client side into C but I am struggling to get the server to work correctly in python. Any advice would be much appreciated!Server.pyClient.py
One way to handle what you're doing is to buffer your socket data.  Below is a class the buffers data and knows how to send and receive null-terminated, UTF-8-encoded strings, and raw chunks of bytes:buffer.py:With this class, your client and server become:client.py:server.py:Democlient:server:
1.file_size = conn.recv(1024)In your server code you read 1024 bytes as your file_size, file_size is only 4 or 8 bytes long2.file_name = conn.recv(1024) Your server don't know how long the filename/hashtype is.-> Use a long for both sizes and read only sizeof(long) bytes from the stream.You can use https://docs.python.org/2/library/struct.html for packing/encoding of these numbers-> Or just go the easy way and use https://docs.python.org/3/library/pickle.html for serialization


Answer URL
https://docs.python.org/3/library/pickle.html
