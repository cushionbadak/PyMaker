Natural Text
This question already has an answer here:How to sum dict elements                    9 answers                I have the following list of dictionaries:I would like to know the easiest way to get an output like this from the above list: Where I want to get the sum of the values of all the keys. I heard that using list comprehension in python, we can easily do operations. Can someone please tell me how to implement this using list comprehension?
You can use Counter with sum:Output
List comprehensions are not really useful here.Generator expressions instead allows us to do the following:That last one {key: sum([...]) for key in keys} is a dictionary comprehension by the way.And I could have used a set comprehension instead of the set() in line 2:{k ... for k in d.keys()} == set(k ... for k in d.keys())But I'd rather not do that, since the set() is much clearer for the reader.In general though the Counter or Defaultdict approach for your problem might be more understandable for unexperienced pythonistas....
You can use collections.defaultdict to sum up the values for each keyOutput
This isn't a list comprehension, but you can always use Counter.update() here:A non-library approach would look something like this:



Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/functions.html#sum
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/collections.html#collections.Counter.update
