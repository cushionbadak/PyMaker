Natural Text
I would like to only allow lists where the first contiguous group of elements are True and then all of the remaining elements are False. I want lists like these examples to return True:[True][False][True, False][True, False, False][True, True, True, False]And lists like these to return False:[False, True][True, False, True]I am currently using this function, but I feel like there is probably a better way of doing this:Testing:Is it possible to use a comprehension instead to make this a one/two line function? I know I could not define the two temporary lists and instead put their definitions in place of their names on the return line, but I think that would be too messy.
Method 1You could use itertools.groupby. This would avoid doing multiple passes over the list and would also avoid creating the temp lists in the first place:This assumes that your input is non-empty and already all boolean. If that's not always the case, adjust accordingly:If you want to have empty arrays evaluate to True, either special case it, or complicate the last line a bit more:Method 2You can also do this in one pass using an iterator directly. This relies on the fact that any and all are guaranteed to short-circuit:Personally, I think method 1 is total overkill. Method 2 is much nicer and simpler, and achieves the same goals faster. It also stops immediately if the test fails, rather than having to process the whole group. It also doesn't allocate any temporary lists at all, even for the group aggregation. Finally, it handles empty and non-boolean inputs out of the box.Since I'm writing on mobile, here's an IDEOne link for verification: https://ideone.com/4MAYYa


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
