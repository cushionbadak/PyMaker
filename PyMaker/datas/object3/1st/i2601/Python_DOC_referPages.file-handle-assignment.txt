Natural Text
Consider a case where you open a file using the with statement and call it file_handle. Then open a new file from within the with block and assign it to previous file_handle as follows:My question: What would happen in this case? In fact, I want to know the answer of following questions:What would happen to the first file_handle? Would it be closed after assignment or it remains open?If after the assignment, an exception happened in the with block, would the newly opened file be closed or not?Once the with block is finished, does it close the new file_handle?
If you're asking this question at all, you should restructure your code so these kinds of ambiguities don't exist.  There's literally an infinite number of possible variable names, and if you choose a different name for the second file handle, this issue goes away.Or, if you don't need the two file handles at the same time, use two separate "with" blocks so that the first one closes before the second is opened:What would happen to the first file_handle? Would it be closed after assignment or it remains open?It remains open until the end of the with block.If after the assignment, an exception happened in the with block, would the newly opened file be closed or not?No.  The with block controls the first file object and nothing is explicitly tracking the second one.Once the with block is finished, does it close the new file_handle?No, it gets leaked until and unless the garbage collector notices it's unused and closes it for you.
The with key word is a shortened try except block.It would be closed. Not known. Yes, no need to to use the function path.close().  Example Input and Output python 3:"If youâ€™re not using the with keyword, then you should call f.close() to close the file and immediately free up any system resources used by it."


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html
