Natural Text
I noticed a strange behaviour when using the round() function with a negative rounding factor (the parameter ndigits) and with the decimal module.I'm using Python 3 (specifically 3.6.3, but I don't know if the specific minor version matters for this case).With float it looks normal:With Decimal the result is correct, but it changes to scientific notation when using a negative rounding factor:My quick fix was to add 0 to the result, which restores the notation back to "normal" (non-scientific):I don't think this classifies as a bug, because only the notation and not the actual value is affected, but it is strange to me nonetheless.Does anyone have an idea why I am seeing this behaviour? Do you know if it is intended or a minor bug?
This is normal and intended. Decimal tracks significant digits, and the Decimal repr is intended to preserve significant digits. Decimal('3.3E+3') has two significant digits, while Decimal('3300') has four.


Answer URL
https://docs.python.org/3/library/functions.html#round
https://docs.python.org/3/library/decimal.html
