Natural Text
I am attempting to solve the following problem:Given the list of birth dates and death dates, find the year in which the most people were alive.Here is my code thus far:The following code returns:Now I am looking for a way to create a running sum to find which year has the most people living, example:Image of desired resultAs we can see, the result shows 1796 had the most people alive based on the given data sets. I am having trouble getting the running sum portion which would need to take each key value, and sum it against the previous value. I have tried several different loops and enumeration, but am now stuck. Once I find the best way of resolving this, I will create a function for efficiency.If there is a more efficient way of doing this taking into account time/space complexity, please let me know. I am trying to learn efficiency with python. I really appreciate your help!!! 
Is there a particular data structure you want to house the result in? I got the same result as the imgur link to print to the terminal. It would not be difficult to write it to a dictionary though.Outputs:Output of solution_dict
I would use pandas, and make use of its DataFrame object:Make the dataframe of people's year of birth and year of death::Make a dataframe that includes all years between the first listed birth, and the last listed death:Find the total number of people alive for each of those years:Calling years.tail() yields the following:From there, you can simply do an argmax on the 'total_living' column.To be clear, I assumed a logical situation of people dying after they are born, and (therefore) that there are never negative numbers of people alive.


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
