Natural Text
I'm having the following problem when I subclass a numpy arrayfor example:If I do operations with obj.x and obj['x'], one does not change the other. For example these operations will show different resultsorHow can I make that whenever I do an operation with one of them (obj.x or obj['x']), the other also changes?
Using [('x', 'float'), ('y', 'float')] as the datatype tells numpy to create a structured array with fields named x and y.Those are accessed using brackets, as you've shown.Now you've also added attributes (accessed using obj.<name>) to your class.However, you've created new arrays for the attributes.To fix the attribute notation you need to have the x and y attributes point to the array fields by those names, rather than separate arrays.So changetoedit this fixes only the second test case in the question.  Assigning to x or y still assigns a new object as the attribute, rather than updating x or y.To fix this it would be necessary to modify the __setattr__ method of the class (see here)However, Numpy already has an array type to allow accessing fields as attributes.You can use it like thisSo congratulations! You've effectively re-implemented record arrays(well, np.recarray won't allow accessing fields names matching attributes or functions ndarray has.  So names like mean or ndim are out, while your code would allow these).It's always a good (and very frustrating) sign when you spend hours creating something numpy already has.


Answer URL
https://docs.python.org/3/reference/datamodel.html#customizing-attribute-access
