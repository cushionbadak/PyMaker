Natural Text
Currently, I tried to understand how timezone.localize work.naive datetime (without timezone information)Now, I try to create a naive datetime (without timezone information). I assume everything will respect to UTC(Screenshot from https://www.epochconverter.com/ , by using 1535500800 as timestamp. Red rectangles are for UTC timezone)Everything seems fine. Now, I would like to experiment with timezone.localizedatetime with timezone using timezone.localize(Screenshot from https://www.epochconverter.com/ , by using 1535500800 as timestamp. Blue rectangles are for Kuala Lumpur timezone)The time information highlight in blue rectangle is Kuala Lumpur timezone. Hence, I'm expecting after running d = kl_timezone.localize(d), d.hour will return 8.This is becauseGiven 1535500800 timestamp, UTC residents treat it as 12:00 amGiven 1535500800 timestamp, Kuala Lumpur residents treat it as 8:00 amBut, d.hour is returning 0, even after I use kl_timezone.localize(d). Isn't d.hour should return 8, because at timestamp 1535500800, Kuala Lumpur is 8:00 am?Am I having wrong expectation on timezone.localize?
datetime.fromtimestamp actually converts the to a timestamp in your local timezone. To get the timestamp with respect to UTC, you would use datetime.utcfromtimestamp. From there, you would make it aware, with localize or replace. Then, to determine what the time would be in Kuala Lumpur, you would use astimezoneTo get back to POSIX timestamp, you would use timestamp


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.utcfromtimestamp
https://docs.python.org/3/library/datetime.html#datetime.datetime.astimezone
https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp
https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp
