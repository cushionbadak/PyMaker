Natural Text
I have a portion of a script that looks like something along the lines of this...Whenever I run it, I get the following output and error:This works sometimes when I make the repl replacement string shorter, but I really can't figure it out. As far as I can tell, I'm working within their constraints, according to the re.sub(...) APII know that this simple case would not justify the use of regex, but this snippet of code is taken out of a much larger piece of software. I don't need any answers telling me that regex is the wrong approach, because this is actually the simplest case I could produce that still reproduce the problem. There are more complicated instances where I need RegEx to actually do its job.Either way, I think somehow the problem is in the contents of the replacement string, as odd as that sounds. when I use shorter replacement strings, I don't encounter this error.Any pointers are greatly appreciated. This is probably something really tiny and stupid, but I've already come back to this a few times, and I can't find it.
there isn't enough escaping in your replacement string, so the backslashes are interpreted by regex engine as a start of captured group (like the classical r"\1" or "\\1" without raw prefix).You could add the raw prefix before each string, but I'd rather use multi-line raw strings like this (easier to read):then the resulting replacement is Now, without changing the input:using re.escape like re.sub(pattern, re.escape(repl), string) doesn't work that well because space and end of lines are also escapedBut you can do this since you know that the only problematic chars are the backslashes:(it replaces the backslashes by double backslashes and the output is the same)


Answer URL
https://docs.python.org/3/library/re.html#re.sub
