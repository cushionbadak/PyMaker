Natural Text
This question already has an answer here:Python Bool and int comparison and indexing on list with boolean values                    3 answers                If I have x as the list of items, why does the x[True] or x[False] modifies the first or second elements of the list?Please see code sample below:Please give explanation why this code works?
Since x is the list the passed index is being converted to the integer representation. The integer representation of the True and False are 1 and 0 respectively. As result it leads to the modification of the first and second elements in the list. From the Python Data model documentation:These represent the truth values False and True. The two objects  representing the values False and True are the only Boolean objects.  The Boolean type is a subtype of the integer type, and Boolean values  behave like the values 0 and 1, respectively, in almost all contexts,  the exception being that when converted to a string, the strings  "False" or "True" are returned, respectively.In addition to the sample with the list that causes interesting behaviour for the dictionary:


Answer URL
https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy
