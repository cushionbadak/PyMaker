Natural Text
Classes like str or type are accessible in Python:However, classes function and builtin_function_or_method are not. They appear as builtin classes but trying to access them throws name errors:What's special about function and builtin_function_or_method ? 
What you are seeing is the representation of the function type:This is the "type" of a function defined with def or otherwise:"function" is not syntax itself, because it's easier to type "def".A rhetorical question: if def was the name used to resolve to the function type, then what syntax would you use to actually define a function?
Classes and functions have an inherent name:The name attached to the object is independent of the name you use to access the object, though when defining functions (and classes), they are the same.You can even get rid of the variable you use to access the function, as long as you have a reference somewhere else:The built-in function type is like this: there is no variable that refers to it, but it still exists, and has a __name__:
A Type Object is returned from the type() function (or object.__class__).You can get a full list of these type objects here.But you can also create your own:So it is a type object that certain objects (like built-in functions) return (namely: types.BuiltinFunctionType) , but these type objects are not built-in classes, so it is no wonder they are not defined in the interpreter.


Answer URL
https://docs.python.org/3/library/functions.html#repr
https://docs.python.org/3/reference/grammar.html
https://docs.python.org/3/library/stdtypes.html#bltin-type-objects
https://docs.python.org/3/library/functions.html#type
https://docs.python.org/3/library/types.html#standard-interpreter-types
https://docs.python.org/3/library/types.html#types.BuiltinFunctionType
