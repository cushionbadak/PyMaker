Natural Text
Is there a Pythonic way to create a tuple-like object (that acts like a tuple) but with additional attributes? In particular with a __name__ attribute?Right now I do something like this:But that isn't very Pythonic, I think. I can't pass foo (the first line with the tuple assignment) to a function, and have the function create the __name__.What's the Pythonic way?I'm looking for something like:That outputs:
Just create new class that inherits from tuple and override __new__ and __init__ methods:Output:
How about something as simple as this: 
Use namedtuple (https://docs.python.org/3/library/collections.html#collections.namedtuple)
Yes, you can do this with a "mapping" -- to create a custom class with attributes of others.Resource: http://www.kr41.net/2016/03-23-dont_inherit_python_builtin_dict_type.htmlIMO, I don't think that's really what you want.You're likely better off with a more complex data structure, a dictionary of tuples for instance.or (comment construction)This will allow you to interact with the tuples by 'name'


Answer URL
https://docs.python.org/3/library/collections.html#collections.namedtuple
https://docs.python.org/3/library/collections.html#collections.namedtuple
