Natural Text
Let's say I have a list of n-tuples in Python, like so (using three-tuples in the example, but would want this to work for any tuple size):I want to remove any n-tuple where each element of the n-tuple is the same. In the example above, I would want to remove the tuples ('a','a','a') and ('b','b','b') because each of the elements in those tuples is the same.I wrote a nested for loop that does this, but it seems really inefficient / not very Pythonic to do it this way. Any ideas on how to do this more simply and efficiently?
You can simply use a list comprehension and check that the count of the first element in each matching tuple is not the same as the length of the tuple:
You can use a list comprehension and test to see if all elements in a given tuple are equal using the builtin all() function.
Convert each tuple to a set; if the result has length 1, all elements were the same. Use this in a list comprehension as a filter, keeping all tuples which have more than one unique element:Demo:


Answer URL
https://docs.python.org/3/library/functions.html#all
