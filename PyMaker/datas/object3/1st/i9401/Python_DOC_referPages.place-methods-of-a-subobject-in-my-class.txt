Natural Text
I know that what I'm doing is probably not the best way to do it, but right now I can't think of another way. What I basically have is this: Currently, I'm defining a lot of methods for my class to return the result of the method on the list, like this:Of course, there are also other methods and objects which are not to do with bar - I'm not reinventing the listIs there an easier way to 'copy' the methods, so that I don't have to define them all one by one? 
You have to define some methods one by one, like you are doing.However, there is a base-class in Python, other than list, that gives you a well defined way of which methods you need to supply, and defines the remaining methods that can be based on this minimum set.These are the provided "abstract base classes" - what you want is to implement your object as a "Mutable Sequence" - them you only have to implement __getitem__, __setitem__, __delitem__, __len__, insert to have the full list functionality.In python 3.x, just inherit your class from collections.abc.MutableSequence and implement those. (In Python 2.7 it is collection.MutableSequence instead.).By doing this, you will get for free __contains__, __iter__, __reversed__, index, count, append, reverse, extend, pop, remove and __iadd__   methods.


Answer URL
https://docs.python.org/3/library/collections.abc.html
