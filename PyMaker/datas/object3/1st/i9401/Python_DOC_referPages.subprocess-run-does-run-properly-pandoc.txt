Natural Text
If you run pandoc directly with minimal example no problem:But if you call it via subprocess.run, then it fails. This minimal example:gives us 
One of the things that Python (and all other programming languages) do to increase performance of common operations is to maintain a buffer for things like file printing. Depending on how much you write to a file, not all of it will get written immediately, which lets the language reduce the amount of (slow) operations it has to do to actually get things on the disk. If you call f.flush() after f.write(contents), you should see pandoc pick up the actual contents of the file.There's a further layer of buffering that's also worth noting- your operating system may have an updated version of the file in memory, but may not have actually written it to disk. If you're writing a server, you may also want to call os.fsync, which will force the OS to write it to disk.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.run
https://docs.python.org/3/library/functions.html#open
