Natural Text
This question already has an answer here:Insert an item into sorted list in Python                    6 answers                I am trying to find a way to add a a tuple to a list while maintaining the order. For example I have a list.[(1, 'a'), (3, 'y'), (4, 'd')]and want to be able to automatically insert another tuple which may be (2, 'q') for example and it would automatically put it between (1, 'a') and (3, 'y') without me knowing the index.Thanks in Advance
You could use the Python bisect module.
if your data is always sorted the bisect module will give you an efficient way to find the insertion point.if the number determines the insertion point you can just do:if the letter is the key to the insertion you need to keep a 'journal' of the letters in your list:list.insert(x[, start[, end]]) will do the actual inserting.
You can use list.insert. From the documentation:Insert an item at a given position. The first argument is the index of the element before which to insert, so a.insert(0, x) inserts at the front of the list, and a.insert(len(a), x) is equivalent to a.append(x).CodeOutputEdit: this answer assumes you just wanted to insert that particular tuple in the list, such that the new list remains ordered by the first tuple elements in ascending order. I'm not providing a solution for the general case if that's what you need.
use yourlist.insert(position,value)output : list : [(1, 'a'), (2, 'q'), (3, 'y'), (4, 'd')]


Answer URL
https://docs.python.org/3/library/bisect.html
https://docs.python.org/3/tutorial/datastructures.html
