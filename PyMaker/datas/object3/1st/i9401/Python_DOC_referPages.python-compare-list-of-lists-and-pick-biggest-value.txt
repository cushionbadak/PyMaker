Natural Text
I have a list of lists:I would like to compare each "sub-list" with the others "sub-lists", match those that have the same value for index [0] and just keep the ones that have the biggest index [1], so that the result is something like this:I've been trying various for-loops and conditional statements, but I've got stuck. Could someone give me a hand with this and put me on the right track?
Use itertools.groupby
Natural answer is using itertools.groupby, grouped by first element of the sublist, and simply apply max to each group. Since first grouped elements are the same, max naturally maxes according to second element: the integer.result:Note: if the list is not sorted according to first element values, sorted(l) needs to be used instead of l
Make a dictionary to hold all the max values:
You could replace the lambda expressions in @Patrick Haugh's solution by operator.itemgetter like this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/operator.html#operator.itemgetter
