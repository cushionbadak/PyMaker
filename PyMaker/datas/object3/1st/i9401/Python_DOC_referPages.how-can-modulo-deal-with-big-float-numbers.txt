Natural Text
Hey i'm trying to use modulo with big float numbers but python don't seems to like those big numbers. My goal is to check if the division of 2 integers give me an integer or not (so if division_result%1 == 0 or not)Example:How can I improve the precision of the result / or find a clever way to check if the division give me an integer?
For integers x and y, the fraction y/x is an integer if and only if y % x == 0.  As long as x and y are integers, you don't have to worry about floating point errors or special numerical classes or anything.  Just make sure that x and y are actually represented as integers and not floats.  And since python can handle large integers, this works for integers longer than 64 bits, e.g:
not all fractions can be represented exactly as floats. your approach will therefore not work (as expected).what you might try is the fractions module:this a way you could use Fraction:
Another option is the decimal module.With your first example:and the result will be Decimal('0.3')With the second example, you would need to set the precision to 50:again, the result of x % 1 would be Decimal('0.3')
You can just use float.is_integer() to test for real or natural number value:


Answer URL
https://docs.python.org/3/tutorial/floatingpoint.html
https://docs.python.org/3/library/fractions.html?highlight=fractions#module-fractions
