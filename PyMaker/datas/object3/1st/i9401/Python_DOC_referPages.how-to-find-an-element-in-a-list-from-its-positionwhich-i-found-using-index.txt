Natural Text
that is the list that is what i used to find the positions of each letter in the inputted message in the alphabet listnow i wish to convert it back to the letters from positions..
So your whole code would look like:output:
You can index it:If you are intending to find the letter after the original letter, you can take the remainder of the index as from comment @RushyPanchal:
@Psidom's answer is the correct way to go about getting a list of characters from the string.However, if you want to just shift the characters, you can use the chr and ord functions:
Because you have the index you can grab the value at that index.python also has a built in method enumerate(enumerable_obj) that returns index, value pairs
In terms of performance, it should be easier to make a Dictionary of letters and their values and vice-versa. This way you only use a constant time for each look-up. This change makes your code much more scalable and faster.
An approach working with enumerate() and filter():For this example is:The result is as follows:
Your current approach is inefficient, because you have to search through up to 26 different list items for every letter in your input sentence. It also fails for the letter "z", since there's nothing after "z" in the list.Since you've clarified that you're trying to do a keyword cipher, a more efficient method would be to use str.translate:Output:


Answer URL
https://docs.python.org/3/library/functions.html#chr
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#filter
https://docs.python.org/3/library/stdtypes.html#str.translate
