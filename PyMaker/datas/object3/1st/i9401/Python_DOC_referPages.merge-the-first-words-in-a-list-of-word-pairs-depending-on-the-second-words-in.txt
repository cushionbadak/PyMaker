Natural Text
I have a program (NLTK-NER) which provides me with this list:As you can see "Barak" and "Obama" are words of type "PERSON", and I want to merge them (and words of type "LOCATION") together, like this:How can I approach this problem?
What we're looking to do here, essentially, is group some items of classified_text together â€¦ so it stands to reason that itertools.groupby() can help. First of all, we need a key function that treats items with the tags 'PERSON' or 'LOCATION' as similar, and all other items as distinct.This is slightly complicated by the fact that we need a way to distinguish adjacent items that have the same tag (other than 'PERSON' or 'LOCATION'), e.g. ('is', 'O'), ('the', 'O') etc. We can use enumerate() for that:Now that we know what we're going to provide as input to groupby(), we can write our key function:Notice that the structure of index, (word, tag) in the assignment matches the structure of each item in our enumerated list.Once we've got that, we can write another function to do the actual merging:Here it is in action:
This is the first thing it came to my mind, pretty sure it could be optimised but is a good start.        


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/functions.html#enumerate
