Natural Text
I have some JSON data in a text file, something like:what I want to do is match all lines where priority is less than or equal to 3. so the matches would be:So my basic regex might look like:and a simple script to test thisso this will match any number 0-9, but how can I match X and below? Where X might be a 2 digit number?Is this a concise way to do that somehow?The raw data in the file looks like this:(It's newline separate JSON data)
This isn't a good case for regex. Instead, you should be loading the file using the json module, and then simply testing for the value of "priority".Using a list comprehension, we create a list of  dicts, one for each line in json_data:Finally, we run your greater-than less-than test for each dict in json_array and print each result:   for line in json_array:Note that we could accomplish this by using a for loop instead of the list comprehension, with the same result:To learn more about the json module, read up on it here:https://docs.python.org/3/library/json.htmlFor easier copy/pasting, here's the uninterrupted code:Note that with the parsed JSON as a dict, you have access to any of the keys for each line of your JSON:
Using JSON load/parse etc, is definitely right way to do this, but in terms of solving this with regexThe brute force method, like so:should work just fine for smaller integers, and is probably pretty non-error-prone.


Answer URL
https://docs.python.org/3/library/json.html
