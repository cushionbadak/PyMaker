Natural Text
I have some code that analyzes pull request in GitHub based on certain conditions and then prints output to the console. The if/else statement below evaluates the set of files associated with a pull request and if any file in that set has a 'status' of 'added' or 'removed', output True/False once.I'm trying to achieve this same result with a second if/else statement that's contained in a for loop pertaining to the number of files within each commit of a pull request, but it is evaluating and outputting each individual file within a commit as opposed to the set of files associate with all commits for a pull request.In the output, I get the desired result for the evaluation of added or deleted files as it is evaluating the set files and then outputs True or False based on the evaluation of the set.  I'm trying to achieve the same result with commits, but it's outputting True/False based on each individual commit and not analyzing the set of files within the commits. For Title: update1, it should output Commits in pr less than/equal 10 files: True once and for Title: update 2, it should output Commits in pr less than/equal 10 files: False just once, as one of the commits in the pull request has more than 10 files.Current output:Desired output:Code in full:
Improved solutionSounds like you need to sum up all file counts per PR:Your code:Counts the number of files per commit but prints out how many commits it found.First attemptIt looks like, this is closer to what you intent to do:
The PullRequest object has a .files() method, which should help you count the files regardless of which commit they're in.Thiscan be (using any)You don't need to get the file names to count the files, so thisshould beor if files_in_commit['files'] is an iterable and not a list, make it a list first:If you want the number of things that satify a condition, you can write a sum:or, less preferable, make a list filtered by an if, and find its length:It's better to define a function for your criteria:For this:you are taking each pullrequestcommits (named wrong; should be pullrequestcommit, singular) and checking whether it satisfies your condition (total changed files <= 10).With corrected variable names and corrections above:Define the conditions as functions:To check if any single commit has greater than ten files:This can be rewritten as an any or an all:To check if the commit itself changes at most ten files, you would have to be careful that no file is counted twice. To do that, you would usually use a set(), add the files to the set, and check the length at the end. You have to pass in something that would uniquely identify each file, and which can be hashed. In this case, the file path would work.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
