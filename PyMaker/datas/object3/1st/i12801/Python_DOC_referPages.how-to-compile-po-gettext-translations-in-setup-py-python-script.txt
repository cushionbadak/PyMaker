Natural Text
Consider a python package that has multilanguage support (using gettext). How to compile *.po files to *.mo files on the fly when executing setup.py? I really don't want to distribute precompiled *.mo files.Thanks in advance!
I know this question begins to be a bit old, but in case anyone's still looking for an answer: it's possible to add a function to setup.py that will compile po files and return the data_files list. I didn't choose to include them in package_data because data_files's description looked more appropriate:configuration files, message catalogs, data files, anything which doesnâ€™t fit in the previous categories.Of course you can only append this list to the one you're already using, but assuming you only have these mo files to add in data_files, you can write:For your information, here's the function create_mo_files() I use. I don't pretend it's the best implementation possible. I put it here because it looks useful and is easy to adapt. Note that it's a bit more extra-complicated than what you need because it doesn't assume there's only one po file to compile per directory, it deals with several instead; note also that it assumes that all po files are located in something like locale/language/LC_MESSAGES/*.po, you'll have to change it to fit your needs:(you'll have to import os and subprocess to use it)
I could share my version of *.mo files compilation process:@edit Comment:  For example pl translation file: function create_mo_files() creates compiled app_name.mo file and then on package build this app_name.mo file is copying to 


Answer URL
https://docs.python.org/3/distutils/setupscript.html#installing-additional-files
https://docs.python.org/3/distutils/setupscript.html#installing-package-data
