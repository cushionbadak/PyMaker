Natural Text
There's a couple of stack overflow posts out there talking about mocking the open call in Python. That's great but it doesn't really help me if a function takes in a file handle or stream object instead of a file path.One solution I've been using up until now has been cStringIO objects. I've run into a problem, however.If I want to test if I'm logging the file name correctly on some sort of failure (say if the file / stream is empty and you expect some kind of data)I can't set the name attribute since cStringIO and StringIO are slotted classes.If switch over to using open_mockI run into At this point it feels like I have to use temp files but I'd like to avoid actually calling out to the file system if possible.How do you test functions that take in file handles without having to create actual files on a file system? 
You can set the tell attribute explicitly for the mock object using Mock.return_value:
I went down the path of creating a class that inherited from StringIO. It took me more time than I want to admit to figure out that in Python2.7 StringIO is an old style class.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.return_value
