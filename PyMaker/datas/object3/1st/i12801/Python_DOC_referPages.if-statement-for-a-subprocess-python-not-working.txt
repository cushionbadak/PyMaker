Natural Text
I've tried to create a little app that plays a sound when you lose connectivity for an extended period and plays another when the connection is established. Useful for wireless connections.I'm still new to Python :) trying little projects to improve my knowledge. If you do answer I will be very grateful if you could include any information about how to use subprocess. I've defined the subprocess but I'm not sure how to word my if statement so it loops from one function to the other. IE Function 1 = IF ping loss > 15 pings play sound and move on to function 2... If function 2 ping success > 15 pings play sound and move back to function 1. So on.I've yet to wrap the program in a loop, at this point I'm just trying to get the ping to work with the if statement.So right now the application just continuously loop pings.
As you use the command ping -n 10 ip, I assume that you are using a Windows system, as on Linux (or other Unix-like) it would be ping -c 10 ip.Unfortunately, on Windows ping always return 0, so you cannot use the return value to know whether peer was reached. And even the output is not very clear...So you should:run in a cmd console the command ping -n 1 ip with an accessible and inaccessible ip, note the output and identify the differences. On my (french) system, it writes Impossible, I suppose that you should get Unable or the equivalent in your localestart the ping from Python with subprocess.Popen redirecting the output to a pipeget the output (and error output) from the command with communicatesearch for the Unable word in output.Code could be like:Alternatively, you could search pypi for a pure Python implementation of ping such as py-ping ...Anyway, I would not use two functions in flip-flop because it will be harder if you later wanted to test connectivity to multiple IPs. I would rather use an classThen you can iterate over a list of IP objects, repeatedly calling ip.test(), and you will be warned for state changes
Not quite sure, what you want to achieve, but your if statement has to be part of the while loop if you want it to be executed each time ping is called via subprocess is called.Also: Here is the documentation for subprocess: https://docs.python.org/3/library/subprocess.htmlFor viewing the output of a process you have to call it via subprocess.call_output:For further information have a look at this: http://sharats.me/the-ever-useful-and-neat-subprocess-module.html#a-simple-usage


Answer URL
https://docs.python.org/3/library/subprocess.html
