Natural Text
I have right now such code with 2 lists:I think this is not pythonic way to check if there is needed value in one of the lists.In my case:Lists can have random size. Amount of lists also can be random (right now just 2, but will be more).No duplicate values among lists.Looking for solution for Python 3
Edit:So if you must keep things in the current structure, the best way would just be:But this only makes sense if you are using this information once.  If you  need to do this multiple times (O(n)*m), it makes sense to loop through once to construct the dicts of the form name: year, then utilize the speed of dict lookups (O(n) + O(1) << O(n)*m).  I would change your two lists to two dicts because dict lookups are O(1) (where list lookups are O(n)):For a general solution with multiple dicts, store the dicts in a list and iterate through the list:To convert you list of dicts to standalone dicts:
To find a value in a list use list.index(value). This will give you the index of the specified value in the list.From the docs:Return the index in the list of the first item whose value is x. It is an error if there is no such item.Example:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
