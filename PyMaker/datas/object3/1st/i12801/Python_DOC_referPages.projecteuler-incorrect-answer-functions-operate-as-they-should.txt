Natural Text
I'm sure you all get a lot of these questions, but I just need more eyes as I can't find the issue.  I'm asking two things of anyone who answers:What is the issue with my code causing me to get an incorrect answer?How in the world did you find the issue?The objective as outlined by Project Euler #22 is:Using names.txt (right click and 'Save Link/Target As...'), a 46K text  file containing over five-thousand first names, begin by sorting it  into alphabetical order. Then working out the alphabetical value for  each name, multiply this value by its alphabetical position in the  list to obtain a name score.For example, when the list is sorted into alphabetical order, COLIN,  which is worth 3 + 15 + 12 + 9 + 14 = 53, is the 938th name in the  list. So, COLIN would obtain a score of 938 Ã— 53 = 49714.What is the total of all the name scores in the file?The list of names they give you is in this format:Here is the code:
Your code is largely correct, but score_placement() has a subtle error. Your code:This looks at each individual score value (which starts with 49, 35, 19, ...), tries to find the first index where the value occurs (using list.index()), and performs the multiplication.The problem with this approach is that it assumes each score is unique. If another score of 49 comes along later in the list, it will use the index of the first 49 found (which is 1 in the 1-based system).Hence, you need to look at each score and each index at the same time, instead of trying to find the index in a roundabout way. This altered algorithm is both correct and more time-efficient (O(n) vs. O(n2)). Here is one way that score_placement() can be written correctly:With this small change, the whole program runs to produce the correct answer!Notes:It is also possible to implement this logic using enumerate().You asked about how I went through the debugging process. I have solved this Project Euler problem before, so I'm familiar with how it works. I looked at the 5 major data-processing statements at the bottom of your code, printed out some values, and compared the numbers with what my intuition told me the answers should be. I found some suspicious behavior, so I homed in on your score_placement() function, read the code, and found the logic error. Finally I implemented a proposed fix and ran it to verify that it worked.


Answer URL
https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range
