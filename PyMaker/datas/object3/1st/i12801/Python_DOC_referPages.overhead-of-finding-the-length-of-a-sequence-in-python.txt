Natural Text
I was going to find the length of a sequence in python3 and found that range is now of <class type> not <type builtin_function_or_method>Being so, the range call seems to create a generator in memory without the overhead of creating a list and populating it as in python2 (please correct me if I'm misunderstanding or I am wrong about this).My question now is, would there be any noticeable improvement for calculating the length of a sequence where, I call len(range(start, stop, step)) instead of calculating int(math.ceil((stop - start) / step)).This is a rough example of what I would be doing:Would the above be actually more efficient then calculating the length?
In theory, yes, in practice, no. All timings on Windows x64 build of CPython 3.5.0 (specific times irrelevant; the relative times for each approach are what matter):I've run those tests with a few different endpoints; if the values get large enough that the math can't be done in Py_ssize_t, the range and ceil approaches get closer together (ceil slows down), but the pure int math approach wins every test I've run. And both range and ceil have problems; for very large numbers, range will throw OverflowError (it can't have more elements than a Py_ssize_t can represent), and ceil (or rather, the float division before the ceil) will have floating point accuracy errors as you exceed ~53 bit values. The pure int math is both fast and reliable, and should probably be preferred.That said, other Python interpreters (PyPy, IronPython, Jython, Cython) can special case stuff like range (and integer math for that matter), and could easily have completely different performance characteristics.The real overhead here is not the len calculation. range actually computes the length and caches it internally during construction; retrieving it is as close to free as any named function call gets (and the same is true of all built-in sequences; at worst they have to construct a Python level int from a C level int, but all math operations do the same thing). The actual cost to retrieve the length:


Answer URL
https://docs.python.org/3/library/functions.html#func-range
