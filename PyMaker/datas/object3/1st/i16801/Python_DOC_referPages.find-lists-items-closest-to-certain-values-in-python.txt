Natural Text
I have a list of sorted floats y, as well as a list of unsorted floats x. Now, I need to find out for every element in x between which values of y it lies, preferably by index of y. So for example, if I would need the output for index 0 of x to be (2,3), because 3.5 is between y[2] and y[3].Basically, it is the same as seeing y as bin edges and sorting x to those bins, I guess. What would be the easiest way yo accomplish that?
I would use zip (itertools.izip in Python 2.x) to accomplish this:Example usage:You will have to decide what you want to happen if x isn't between any pair in lst (i.e. replace # ?!) If you want indices (although your example isn't using them), have a play with enumerate.
Thanks - I'm aware of how to code that step-by-step. However, I was looking for a pretty/easy/elegant solution and now I am using numpy.digitize(), wich looks pretty to me and works nicely.
Q: What would be the easiest way yo accomplish that?Instead of giving you the code, I think you should see this pseudo-code and try to write your own code! Don't just copy paste code from the internet, if you want to educate yourself!Pseudocode:I think that this can make you understand the point and then be able to select the easiest way for you.


Answer URL
https://docs.python.org/3/library/functions.html#zip
