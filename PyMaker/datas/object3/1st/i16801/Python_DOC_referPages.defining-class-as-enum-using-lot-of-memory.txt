Natural Text
I have hundreds of classes with many properties in a file. I want to let the user know what are the different properties available for a particular class. My main aim is to support auto-completion otherwise its very difficult for user to know what properties exist in different class.I have file constant.py which have classes as similarly we have hundread of classes with hundred of properties.This is done so user can use it as abc.AA , def.DD but this approach is consuming lot of memory. File is of around 11MB but when I import i.e. import Constant it consumes around 50MB memory.Is there any better approach so as to minimize the memory consumption?
This doesn't sound like a good use of classes. collections.namedtuple might be a better bet, and more efficient.One way of reducing the memory needed for the class version though would be to use __slots__.
Break your constants up into a module, and group related classes per file.  The user can then import whichever subset they need, and the others aren't wasting resources.


Answer URL
https://docs.python.org/3/reference/datamodel.html?highlight=slots#object.__slots__
