Natural Text
Is there a simple method I'm missing in urllib or other library for this task?  URL encoding replaces unsafe ASCII characters with a "%" followed by two hexadecimal digits.Here's an example of an input and my expected output:
For Python 2.x, use urllib.quoteReplace special characters in string using the %xx escape. Letters, digits, and the characters '_.-' are never quoted. By default, this function is intended for quoting the path section of the URL. The optional safe parameter specifies additional characters that should not be quoted â€” its default value is '/'.example:EDIT:In your case, in order to replace space by plus signs, you may use urllib.quote_plusexample: For Python 3.x, use quoteand for string with space use quote_plus
Keep in mind that both urllib.quote and urllib.quote_plus throw an error if an input is a unicode string:As answered here on SO, one has to use 'UTF-8' explicitly:
Also, if you have a dict of several values, the best way to do it will be urllib.urlencode.


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus
