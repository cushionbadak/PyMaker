Natural Text
Can not x and x==None give different answers if x is a class instance ?I mean how is not x evaluated if x is a class instance ?
yes it can give different answers.will call the __eq__() method to valuate the operator and give the result implemented compared to the None singleton.will call the __nonzero__() (__bool__() in python3) method to valuate the operator. The interpreter will convert x to a boolean (bool(x)) using the mentioned method and then inverse its returned value because of the not operator.means that the reference x points to the None object, which is a singleton of type NoneType and will valuate false in comparaisons. The is operator tests object identity, and thus whether or not the two objects compared are the same instance of an object, and not similar objects.
not x is eqivalent to:Py 3.x:
Yes; not uses __bool__ (in Python 3; Python 2 uses __nonzero__), and x == None can be overridden by __eq__.(Both are shown here.)
If x is positive the not of it means negative and vice-versa.x == None means it will only be True if x is None is True else False. Check this.By positive I mean the if block is chosen. True is also positive.
not x is true for a wide variety of values, e.g. 0, None, "", False, [], {}, etc.x == None is only true for the one specific value None.If x is a class instance, then both not x and x == None will be false, but that doesn't mean that those are equivalent expressions.Fine; that previous paragraph should read:If x is a class instance, then both not x and x == None will be false unless someone is playing silly buggers with the class definition.


Answer URL
