Natural Text
Is there a way to speed up this code:
Running your code, I timed it to 5.84susing Memoize and simplifying expressions:I got it down to 3.25s first time, and ~2.8s in the next iterations.(An even better approach might be using lru_cache from the standard library, but I did not try to time it).If you are running similar code many times, it may be sensible to Memoize() both func and f, so the computations become trivial ( ~0.364s ).Replacing mp with math for cos/sin/exp, I got down to ~1.3s, and now memoizing make the performance worse, for some reason (~1.5s, I guess the lookup time became dominant).
In general, you want to avoid calls to transcendent functions like sin, cos, exp, ln as much as possible, especially in a "hot" function like an integrand. Replace x**2 by x*x (often x**2 calls a generic=slow exponentiation function)use variables for "expensive" intermediate terms which are used more than oncetransform your equation to reduce or eliminate transcendent functionsspecial-case for typical parameter values. Integer exponents are a frequent candidate.precompute everything that is constant, espc. in parameterized functionsFor the particular example you can substitute z=cos(theta). It is dz = -sin(theta)dtheta. Your integrand becomessaving you some of the transcendent function calls. The boundaries [0, pi] become [1, -1]. Also avoid x**2, better use x*x.Complete code:


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
