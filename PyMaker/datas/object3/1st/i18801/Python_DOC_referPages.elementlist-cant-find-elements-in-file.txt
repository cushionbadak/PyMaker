Natural Text
I have the following XML which I want to parse using Python's ElementTree:I want to find all owl:Class tags and then extract the value of all rdfs:label instances inside them. I am using the following code:Because of the namespace, I am getting the following error.I tried reading the document at http://effbot.org/zone/element-namespaces.htm but I am still not able to get this working since the above XML has multiple nested namespaces.Kindly let me know how to change the code to find all the owl:Class tags.
ElementTree is not too smart about namespaces. You need to give the .find(), findall() and iterfind() methods an explicit namespace dictionary. This is not documented very well:Prefixes are only looked up in the namespaces parameter you pass in. This means you can use any namespace prefix you like; the API splits off the owl: part, looks up the corresponding namespace URL in the namespaces dictionary, then changes the search to look for the XPath expression {http://www.w3.org/2002/07/owl}Class instead. You can use the same syntax yourself too of course:If you can switch to the lxml library things are better; that library supports the same ElementTree API, but collects namespaces for you in a .nsmap attribute on elements.
Here's how to do this with lxml without having to hard-code the namespaces or scan the text for them (as Martijn Pieters mentions):
Note: This is an answer useful for Python's ElementTree standard library without using hardcoded namespaces.
I've been using similar code to this and have found it's always worth reading the documentation... as usual!findall() will only find elements which are direct children of the current tag. So, not really ALL.It might be worth your while trying to get your code working with the following, especially if you're dealing with big and complex xml files so that that sub-sub-elements (etc.) are also included.If you know yourself where elements are in your xml, then I suppose it'll be fine! Just thought this was worth remembering.ref: https://docs.python.org/3/library/xml.etree.elementtree.html#finding-interesting-elements"Element.findall() finds only elements with a tag which are direct children of the current element. Element.find() finds the first child with a particular tag, and Element.text accesses the element’s text content. Element.get() accesses the element’s attributes:"
To get the namespace in its namespace format, e.g. {myNameSpace}, you can do the following:This way, you can use it later on in your code to find nodes, e.g using string interpolation (Python 3).
I know I am a few years late, but I just created a package that will handle converting a dictionary to valid XML with namespaces. The package is hosted on PyPi @ https://pypi.python.org/pypi/xmler.Using this package you can take a dictionary that looks like this:and get XML output that looks like this:Hope this is useful for people in the future


Answer URL
https://docs.python.org/3/library/xml.etree.elementtree.html#finding-interesting-elements
