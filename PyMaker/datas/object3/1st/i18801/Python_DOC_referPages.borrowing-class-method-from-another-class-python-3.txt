Natural Text
Borrowing the implementation of an instance method from another class is straightforward, but how do I do it with a class method?I also tried changing line X into cm = A.cm.__func__, which caused TypeError: cm() missing 1 required positional argument: 'cls'
When you access A.cm, you invoke the classmethod object as a descriptor, which means it is already bound to the A class. Unwrap it again:The .__func__ attribute gives you access to the original function, so you can rewrap it with a new classmethod call.Alternatively, use the A.__dict__ mapping to get the actual classmethod itself, bypassing the descriptor calls:
You need:When you access A.cm, the resulting classmethod already "knows" that it belongs to A.  If you want to rewrap it for a different class, you need to extract the underlying function with __func__ and then rewrap it with classmethod.Also, in your example, the line classmethod(cm) does nothing, because you don't assign the result to anything.


Answer URL
