Natural Text
I am teaching the A level syllabus by the Cambridge exam board. One typical question on the practical paper is this:In a programming language of your choice, declare an array of ten integers and then initializes it.I have this:I believe this is what most people would do in Python? However, unlike Pascal etc it does not strictly answer the question as the lists in Python are essentially dynamic arrays with the added problem of not restricting the data type of each element. Can I declare a specific size array and type  like in Pascal, instead of an empty dynamic list, without any type of loop and restricts the type of the array?Something like (pseudo code):This is a none commercial question but an educational one.
You could use the array moduleArrays require that all elements be the same type, as specified when it is created. They can still be appended to howeverIf you were really determined, you could use the ctypes module to build a C array. But, that is probably not very pythonic as it forces you to do more low level stuff.
You could try to use the array module to specify the type of your array:You can then add the elements you want to the array. I'm not sure whether you can predefine the size your array should have, though. If you want an array of ten integer elements, each element being zero, you could do:As described in the documentation, the 'i' forces the elements of the array to be integers. Python 2.6 will throw a DeprecationWarning if you try to insert a float in an array of integers, but will cast the float as an int:Alternatively, you could use the numpy package, which lets you define both the size and the type of the array.The np.empty just reserves some space in memory for the array, it doesn't initialize it. If you need an array of 0, you could do:or directly use the np.zeros function:Here again, inserting a float in an array of integers will silently convert the float to integer.Note a difference between numpy and array: once you define an array in numpy, you cannot change its size without having to recreate an array. In that sense, it satisfies your requirement of "10 and only 10 integers". By contrast, a array.array object can be seen as a list with a fixed element type: the array is dynamic, you can increase its size.
This is a more pythonic way to initialize the list:This, of course, does not answer the question how to create such an un-pythonic thing as a list of restricted elements.
As has already been mentioned l = [0] * 10 initializes a list with 10 zeros.While it is possible to add more elements, you cannot do so by mistake.If you want to append to the list, you need to call .append() or some other method that adds new elements. Thus, you cannot add elements by accident, you need to be explicit about it.In many other languages, you could just replace the array with one that has a different size. Point being, you can often find a way around such limitations, and I think it's good to just use the easiest thing that works and is well understood.For me, that would be
If you want to restrict the size, you can track the size and throw an exception. So extending types in Python is very easy as you can see. The whole point of the static typed languages such as C, is to be closer to hardware. This example myTypedArray is not efficient, so there is usually no reason to use static types.
You can do it using array module. array module is part of python standard library:repeat function repeats 0 value 10 times. It's more memory efficient than [0]*10, since it doesn't allocate memory, but repeats returning the same number x number of times.


Answer URL
https://docs.python.org/3/library/array.html
https://docs.python.org/3/library/itertools.html?highlight=itertools%20repeat#itertools.repeat
