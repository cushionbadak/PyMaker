Natural Text
Possible Duplicate:A Transpose/Unzip Function in Python I have a list of tuples, where I want to unzip this list into two independent lists. I'm looking for some standardized operation in Python. I'm looking for a succinct and pythonic way to achieve this. Basically, I'm hunting for inverse operation of zip() function. 
Use zip(*list):The zip() function pairs up the elements from all inputs, starting with the first values, then the second, etc. By using *l you apply all tuples in l as separate arguments to the zip() function, so zip() pairs up 1 with 3 with 8 first, then 2 with 4 and 9. Those happen to correspond nicely with the columns, or the transposition of l.zip() produces tuples; if you must have mutable list objects, just map() the tuples to lists or use a list comprehension to produce a list of lists:
If you want a list of lists:If a list of tuples is OK:


Answer URL
https://docs.python.org/3/library/functions.html#zip
