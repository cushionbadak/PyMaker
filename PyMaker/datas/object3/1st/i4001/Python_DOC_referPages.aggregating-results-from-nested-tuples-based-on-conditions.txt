Natural Text
i have a nested tuple and i want to get a table with results, i'm trying to use comprehension on this but i'm not getting the best results.output example:Can anyone give me some help?
You can use a dictionary comprehension:Output:
This is a pure Python dictionary-based solution:Result:
You can easily invert your flat goals list into a dictionary indexed by the team name and bracket the first and second half immediately so you don't have to do multiple iterations over your data, something like:As to how this works - the collections.defaultdict() will call the passed factory (lambda: [0, 0]) to create a new key whenever a non-existent key is encountered so each team will start with a [0, 0] list as its value. Then, as we iterate over the data, all we need is a simple entry[0] > 45 check as an index selector - in this context, it will be treated as an int producing 0 for False (hence the first half) and 1 for True (hence the second half) thus enabling us to select the proper index for increment.This results with a nice dictionary whose keys are holding the team name while its value is essentially just a two-element list counting the goals in the first and the second half.If you want to print the data, just use str.format() to get to your desired table look, something like:Which will give you:As a bonus, for extra neatness, you can get the biggest string length of the team_goals keys and dynamically pad the left-hand side based on your team data.
If you're ok using third party libraries (pandas), which has the distinct advantage of actually displaying a table (which you could export to a variety of formats such as CSV, HTML, etc):


Answer URL
https://docs.python.org/3/library/stdtypes.html#boolean-values
https://docs.python.org/3/library/stdtypes.html#str.format
