Natural Text
this is my first question here so please be patient with me.My problem is as follows:Assume we have a pandas Dataframe and we want to apply dynamically some pd.Series methods to a set of columns of this Dataframe. Why the following example doesn't work?Expected outcome would be But instead i getRemarkablyworks as expected, so somehow python seems to have a problem with the '.func' syntax despite the fact that print(func)yields the desired output: 'function NDFrame.astype at 0x00000186954EB840' etc.
Your syntax for calling a method is incorrect. There are 2 ways you can call a method in Python.DirectAs you found, this will work. Note that astype isn't referencing some other object, it's the actual name of the method belonging to pd.Series.FunctionalThe functional method demonstrates explicitly that astype is the name of the method.Trying testframe[col].func(...) will never work as func is not the name of a pd.Series method.
You could use rgettattr to get attributes from the Series, testframe[col]:For example,yieldsgetattr is the function in Python's standard library used for getting a named attribute from an object when the name is given in the form of a string. For example, givenwe can obtain s.str usingTo obtain s.str.replace, we would needHowever, if we specify then we need some way of handling cases where we need one call to getattr, (e.g. getattr(testframe[col], 'astype')) versus those cases where we need multiple calls to getattr (e.g. getattr(getattr(testframe[col], 'str'), 'replace'). To unify the two cases into one simple syntax, we can use rgetattr, a recursive drop-in replacement for getattr which can handle dotted chains of string attribute names such as 'str.replace'. The recursion is handled by reduce.The docs give as an example that reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates ((((1+2)+3)+4)+5). Similarly, you can imagine the + being replaced by getattr so that rgetattr(s, 'str.replace') calculates getattr(getattr(s, 'str'), 'replace'). 


Answer URL
https://docs.python.org/3/library/functions.html#getattr
https://docs.python.org/3/library/functools.html#functools.reduce
