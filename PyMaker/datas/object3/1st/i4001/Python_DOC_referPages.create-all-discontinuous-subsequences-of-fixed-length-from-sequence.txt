Natural Text
I have a sequence like the following:I want to make all discontinuous subsequences of length 5 for this. Because there are 5 possible reading frames, I want a list of 5 lists like the following:All of the characters will not be present in each list, and for this example, the 5th list will only have two entries. This is okay.How can I make a function that generalizes this to all possible lengths of the subsequence?Thanks!Jack
Through nested list comprehension:
Although the single list comprehension is the better answer, here is a more-itertools1 approach.GivenCodeOutputDetailsGoal: make several sliding windows of the sequence and split them into chunks.In the first list comprehension, the results are shrinking sliding windows. For demonstration, here is an example of the full cascading results:Notice for each window, the left side slides, while the right side is fixed.  In other words, the window size shrinks by 1 for each iteration.  These shrinking windowing are achieved by the offsets parameter in more_itertools.stagger (see the docs for details).  Since the process repeats, only the first windows of a given size are selected via itertools.isliced.The second comprehension simply chunks these windows into groups of a size, discarding invalid chunks (< size or containing the fillvalue None, a default in more_itertools.stagger).1more_itertools is a third-party library installed via pip install more_itertools.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
