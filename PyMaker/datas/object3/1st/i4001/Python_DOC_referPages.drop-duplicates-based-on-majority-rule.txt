Natural Text
I have a table that looks like this:Using A as the key, I'd like to remove duplicates such that that dataframe becomes:1 is duplicated three times, the value cat occurs the most so it is recorded. there is no majority for 2 so it is considered ambiguous and removed completely. 3 remains as it has no duplicate. 
groupby + pd.Series.modeThis is a two step solution using pd.Series.mode:groupby + <custom func>Alternatively, define a custom function that computes the mode and call it with apply. The filtration logic is subsumed into the function.
How about using value_counts and rank:Output:Using rank with method='average' as a voter to get "majority" from the results of value_count.
You can use statistics.mode, which raises StatisticsError if no unique mode exists.Performance benchmarkingAlthough all 3 methods are suitable for your task, they have slightly difference performance.Benchmarking results:Benchmarking code:


Answer URL
https://docs.python.org/3/library/statistics.html?highlight=statistics#statistics.mode
