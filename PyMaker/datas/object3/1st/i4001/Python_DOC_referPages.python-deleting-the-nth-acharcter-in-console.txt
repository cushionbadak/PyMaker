Natural Text
example output estimate of pi:then a new better estimate comes along. Say, 3.1416232. So I find the first character in the old estimate that doesn't match the new. In this case, it is the 4th character.Question: Is there a way to delete the 4th character in console(and then repeat this until all characters after 3.1 are gone) so that I can then print the new, better values for each of those characters? Note: I don't want to delete everything and console and then reprint, as this would get considerably slower as the number of digits increases.
It sounds like you want something like:Depending on the directional relation of the estimate (i.e. is less better or is more better), you would have to change the inequality to accommodate. However, if we look at your example:You originally wanted to "re-print" 3.1 then print all the new characters in the new estimate. That begs to ask the question why not just print the whole new estimate?Since the entire value of the new estimate is greater, that means the comparison you are looking for (starting at index 4 and beyond) has already be checked when using < or > for inequality. Simply calling a print(est, end = '\r') returns the console cursor to the beginning of the line, effectively overwriting the value each time.
If you just need to overwrite your last line, you can do something like this. The "\r" means instead of a newline, a return carriage will be printed, moving you back to the start of the same line to overwriteFurthermore, if you want to do tricky things, you could look into ANSI escape codes, these will let you print to any arbitrary location, although they aren't the most portable. These will also let you do fun things like setting the colour.For example print("\033[31;1HX") would print an X to the 31's column and 1st row. To delete a character, you could simply print a space over top (print("\033[31;1H ")).This may not work on all terminalshttp://ascii-table.com/ansi-escape-sequences.php


Answer URL
https://docs.python.org/3/library/msvcrt.html
https://docs.python.org/3/library/curses.html
