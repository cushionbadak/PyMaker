Natural Text
I want to find a unique ID in a string:text = "Hello World, aaaa_dddd_bbbb_cccc"The only defining feature of the unique ID is that it is a single word that contains three underscores. However, for the life of me I can't even start of figure out the regex for matching words with N non-consecutive instances of a certain character.The best I can do is a hacky use of .split():
The pattern matches one or more word characters followed by an underscore follwed by one or more word characters, three times.From the docs:{m}Specifies that exactly m copies of the previous RE should be matched; fewer matches cause the entire RE not to match. For example, a{6} will match exactly six 'a' characters, but not five.
You can use regex findall to get a list of all items that match eg:This allows strings starting and ending with a _ eg _1_2_3 if you don't want that you can change the first and last * to a +
With straightforward regex pattern:The output:The pattern could be more strict (depends on what characters are allowed) like:


Answer URL
https://docs.python.org/3/library/re.html
