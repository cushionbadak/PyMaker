Natural Text
When you run the script below in Python, you get the results shown.   1) I don't understand why it's able to print c just fine, but when I say z = shuffle(c) z returns zero. Shouldn't it just give me a mixed up c?2) Ideally, I want make lots of q points each of which is given an x, y and z so q1=(x1,y1,z1) and q2=(x2,y2,z2) etc. So I thought I could iterate over it, but I'm not sure how to write it in less mathematical terms and more of a python way.I triedBut I don't think that's how Python works.
First, random.shuffle is an in-place operation. Second, you can use zip to combine your shuffled lists into points.If you are using Python 2.X, you can omit all of the list casts because range and zip will already be returning lists.
Look at the Docs.random.shuffle modifies your list in place and returns nothing. Thus, you wantTo get a random sample of your 3 lists, use random.sample
z=random.shuffle(c) returns NoneType because, it simply modifies an array in-place! If you want a shuffled version, you need only do random.shuffle(c)print(c)c will now be shuffled in place! You can then maybe create a deep copy of c.This is sort of similar to how the sort function works! a = [1, 4, 5, 9, 28, 1]a.sort()a is sorted in-place, doing something like b = a.sort(), would've led to storing NoneType in b
As said in the comments, random.shuffle works on the list object and doesn't return anything. To get your code to shuffle and create a list of 3D points can be done easilyNote this requires x, y and z to be the same length
To answer q1: Shuffle is an in-place operation. Just shuffle(a) etc, to get random lists.q2. You're looking for the builtin zip(), which will return a list of tuples, stopping at the end of the shortest input iterator.
Using numpy you could do something in the lines of:


Answer URL
https://docs.python.org/3/library/random.html
