Natural Text
I'm trying to write a Python script that searches a folder for all files with the .txt extension. In the manuals, I have only seen it hardcoded into glob.glob("hardcoded path").How do I make the directory that glob searches for patterns a variable? Specifically: A user input. This is what I tried:Despite giving the right directory with the .txt files, the script prints an empty list [ ].
If you are not sure whether a path contains a separator symbol at the end (usually '/' or '\'), you can concatenate using os.path.join. This is a much more portable method than appending your local OS's path separator manually, and much shorter than writing a conditional to determine if you need to every time:
For Python 3.4+, you can use pathlib.Path.glob() for this:There is a time of check to time of use race between the is_dir() and the glob, which unfortunately cannot be easily avoided because glob() just returns an empty iterator in that case.  On Windows, it may not even be possible to avoid because you cannot open directories to get a file descriptor.  This is probably fine in most cases, but could be a problem if your application has a different set of privileges from the end user or from other applications with write access to the parent directory.  This problem also applies to any solution using glob.glob(), which has the same behavior.Finally, Path.glob() returns an iterator, and not a list.  So you need to loop over it as shown, or pass it to list() to materialize it.


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.join
https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob
