Natural Text
I'm currently tasked with replacing "SUPER MAN" with "S^U^P^E^R M^A^N".I've tried print("SUPER MAN".replace("" "", "^")) but end up with ^S^U^P^E^R^ ^M^A^N^.How can I fix this?
You want to use the join method along with split.First split "SUPER MAN" by a space to get:  Then for each of those entries, separate each character with "^" using join:Then turn it back into one string separated by a space using join, and your resulting code is:Output: S^U^P^E^R M^A^NWhat your code is doing:First, notice that the first parameter that you pass into replace is not a space, which is what you presumably intended for it be, but the expression "" "", which is an implicit way of doing string concatenation.Thus, "SUPER MAN".replace("" "", "^") becomes "SUPER MAN".replace("", "^"), which replaces each occurrence of "" with "^".The result of such an operation may at first seem somewhat ill-defined, but in Python, since you can think of a string s as being equal to "" + "".join(s) + "", replacing each occurrence of "" with "^" would yield what you see: a "^" between each letter and a "^" on the ends.Passing a " " as the first parameter to replace doesn't work, because it will replace spaces (specifically, the space in the middle) with "^", so you'd get "SUPER^MAN".
For more on why that works: https://docs.python.org/3/library/re.html
Have you tried to trim the string "SUPER MAN" before passing it to replace()? And then you can always use a StringBuilder (assuming you're using Java) and then use DeleteCharAt() method to manually remove extra '^'.


Answer URL
https://docs.python.org/3/library/re.html
