Natural Text
I'm writting a module called foo that has many internal functions, but ultimately boils down to a single external function foo(). When using this module/function, I'd like to doinstead ofIs this possible? What do I need to put in __init__.py to make this happen?
Python doesn't allow a module to be callable.See this StackOverflow question about callable modules.
Make the name of your module in the sys.modules dictionary point to the function instead of your module.foo.py would look like thisthen you can use this module from a different fileThere are probably reasons for why you shouldn't do this.
It is not strictly possible. Python module names are ment to help the programmer distinguish between modules. So even if you had one function, bar in your module foo, using import foo will still need a foo.bar(). You're probably better off just using from foo import *. However there may be a way around this. Python also has built-in functions, and you may be able to add your own functions to this. Doing so might require rewriting the compile though.So conclusion: writing from foo import * isn't all that ugly and is a lot easier and prettier than the long way around. 


Answer URL
https://docs.python.org/3/library/sys.html#sys.modules
