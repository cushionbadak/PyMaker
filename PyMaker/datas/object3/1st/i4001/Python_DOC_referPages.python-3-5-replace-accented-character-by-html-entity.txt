Natural Text
I'm trying to automatate a series of queries but, to do that, I need to replace characters with accents with the corrresponding html entity.For reasons it needs to be in Python3Example:The thing is, whenever I try to do a word.replace, it doesn't find it.This:Works and finds "è", but doing:Doesn't do anything.
Replace word.replace('è','&egrave;') with word = word.replace('è','&egrave;') and print the result to check.word.replace('è','&egrave;') does work, but it doesn't actually make any changes to the word content itself. Check str.replace()
You can use the str.translate method and the data in python's html package to convert characters to the equivalent html entity.To do this, str.translate needs a dictionary that maps characters (technically the character's integer representation, or ordinal) to html entities.html.entities.codepoint2name contains the required data, but the entity names are not bounded by '&' and ';'.  You can use a dict comprehension to create a table with the values you need.Once the table has been created, call your string's translate method with the table as the argument and the result will be a new string in which any characters with an html entity equivalent will have been converted.  Be aware that accented latin characters may be represented by a combination of unicode code points: 'è' can be represented by the single code point - LATIN SMALL LETTER E WITH GRAVE - or two codepoints - LATIN SMALL LETTER E followed by COMBINING GRAVE ACCENT.  In the latter case (known as the decomposed form), the translation will not work as expected.To get around this, you can convert the two-codepoint decomposed form to the single codepoint composed form using the normalize function from the unicodedata module in Python's standard library.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
https://docs.python.org/3/library/html.entities.html
https://docs.python.org/3/library/functions.html#ord
https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize
https://docs.python.org/3/library/unicodedata.html
