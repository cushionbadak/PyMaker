Natural Text
I have written a code to do matrix multiplication of different range but it takes a lot of time to exexcute the code,code:Program to multiply two matrices using nested loopsIt takes more time to execute this method of matrix multiplication, how can I choose the efficient way of matrix multiplication of huge dimension range? So higher dimension array can be executed smoothly and quickly.Sample output:it takes 0.00014400482177734375 seconds can I improve this timmings  when I do for  higher dimension multiplication?
This timings in your comments have some significant drawbacks:print() is comparatively expensive and has nothing to do with the calculation. Including it in the timings could take up a big chunk of the overall time.Using wallclock (time.time()) is not a good way of getting stable timings; you get one run and anything could be happening on your system.This should give a better test case for comparison:And the timings:So, NumPy is ~3 times faster for this example. But this would be more significant if you had bigger arrays.EDIT:And actually, you could argue that creating A and B inside the function is not helpful for timing the actual matrix multiplication, so if I instead create the lists/arrays first and pass them, the new timings are:And, for the sake of completeness, for an array with shape (200, 200):


Answer URL
https://docs.python.org/3/library/timeit.html
