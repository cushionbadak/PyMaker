Natural Text
I have a class which exposes two methods. These methods are actually visual syntax sugar, they ultimately point to the same code which behaves differently, depending on the payload it receives:Is there a way to define on() and off() so that they point to the same code (the one in action()), which would behave differently depending on the name of the method which was called?I could of course pass the action in the call:but I want to keep an on/off structure of the class methods.
This is very similar to your first example, but are you looking for functools.partial?You can use it to automatically set some arguments into a function, and the return value is a function object as well.  Using it, you could do this:Then, you have your action, on, and off function, all working as expected:Using partial is a semantically stronger way to say that this is syntactic sugar for calling another function.  A function declaration such as def on(self): ... could be anything, while self.on = functools.partial(action,...) explicitly states that your tying one function to the other.
But personally I don't like this because my editor doesn't understand it and gives me false warnings.
Try inspectOr simply pass hidden argument


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.currentframe
