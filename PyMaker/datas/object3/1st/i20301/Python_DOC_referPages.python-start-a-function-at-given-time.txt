Natural Text
How can I run a function in Python, at a given time?For example:and it will run the function func at 2012-07-17 15:50:00.I tried the sched.scheduler, but it didn't start my function.What can I do?
Reading the docs from http://docs.python.org/py3k/library/sched.html:Going from that we need to work out a delay (in seconds)...Then use datetime.strptime to parse '2012-07-17 15:50:00' (I'll leave the format string to you)You can then use delay to pass into a  threading.Timer instance, eg:
Take a look at the Advanced Python Scheduler, APScheduler: http://packages.python.org/APScheduler/index.htmlThey have an example for just this usecase:http://packages.python.org/APScheduler/dateschedule.html
Here's an update to stephenbez' answer for version 3.5 of APScheduler using Python 2.7:
Might be worth installing this library: https://pypi.python.org/pypi/schedule, basically helps do everything you just described. Here's an example:
I ran into the same issue: I could not get absolute time events registered with sched.enterabs to be recognized by sched.run.  sched.enter worked for me if I calculated a delay, but is awkward to use since I want jobs to run at specific times of day in particular time zones.In my case, I found that the issue was that the default timefunc in the sched.scheduler initializer is not time.time (as in the example), but rather is time.monotonic.  time.monotonic does not make any sense for "absolute" time schedules as, from the docs, "The reference point of the returned value is undefined, so that only the difference between the results of consecutive calls is valid."The solution for me was to initialize the scheduler asscheduler = sched.scheduler(time.time, time.sleep)It is unclear whether your time_module.time is actually time.time or time.monotonic, but it works fine when I initialize it properly.
Just looking for a Time of Day / Date event trigger:as long as the date "string" is tied to an updated "time" string, it works as a simple TOD function. You can extend the string out to a date and time.whether its lexicographical ordering or chronological order comparison,as long as the string represents a point in time, the string will too.someone kindly offered this link:String Comparison Technique Used by Python


Answer URL
https://docs.python.org/3/library/time.html#time.monotonic
