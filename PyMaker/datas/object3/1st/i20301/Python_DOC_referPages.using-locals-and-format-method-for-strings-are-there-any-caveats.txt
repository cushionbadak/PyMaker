Natural Text
Are there any disadvantages, caveats or bad practice warnings about using the following pattern?I had a very repetitive string generation code to write and was tempted to use this, but something about using locals() makes me uncomfortable. Is there any danger of unexpected behavior in this?Edit: contextI found myself constantly writing stuff like:
There is now an official way to do this, as of Python 3.6.0: formatted string literals.It works like this:E.g. instead of these:  just do this:  Here's the official example:Reference:Python 3.6 What's NewPEP 498Lexical analysis description
If the format string is not user-supplied, this usage is okay.  format is preferred over using the old % for string substitution.locals is built-in to Python and its behavior will be reliable.  I think locals does exactly what you need.Just don't modify the dictionary from locals and I would say you have a pretty good solution.If the format string is user-supplied, you are susceptible to injection attacks of all sorts of badness.
I do this sort of thing regularly. The only problem I've had is that PyFlakes will complain about unused variables when I  do it.
Pre Python 3.6 answerThis is very old, but if you find yourself using .format the one caveat I have encountered with passing in **locals is that if you don't have that variable defined anywhere, it will break. Explicitly stating what variables are passed in will avoid this in most modern IDEs.


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
https://docs.python.org/3/reference/lexical_analysis.html#f-strings
