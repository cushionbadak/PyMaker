Natural Text
Yes, I know that I cannot return break. But how can I break a while loop by the def function? Or my concept is wrong?
No it cannot. Do something like:
A very Pythonic way to do it would be to use exceptions with something like the following:Another, less common approach would be to use a generator function which will return True indicating that it's time to quit calling next() on it:
You could have CardsAssignment return True (to continue) or False (to stop) and then have or indeed just loop
If you use a for loop instead of a while, you can cause it to break early by raiseing StopIteration - this is the usual signal for a for loop to finish, and as an exception, it can be nested inside functions as deep as you need and will propagate outward until it is caught. This means you need something to iterate over - and so, you probably want to change your function into a generator:, in which case instead of doing raise StopIteration, you would just return from the generator and the loop will finish. However, note that this (as well as options having the function return a flag that you test in the loop condition) is subtly different to using break - if you use an else clause on your loop, returning from a generator will trigger it, whereas break in the loop body won't.

I would be tempted to just re-factor similar to:And then you can do things such as:This allows a possible meaningful value to be returned from somefunc() instead of using it as a "do I break" flag.This will also allow the following construct:
in 3.5, 3.6 you can 


Answer URL
https://docs.python.org/3/glossary.html#term-generator
