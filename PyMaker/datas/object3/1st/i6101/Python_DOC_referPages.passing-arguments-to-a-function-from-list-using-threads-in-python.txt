Natural Text
I am trying to pass arguments to a function from a list using threads in python (Note:The values to the function should not be hard-coded and all the elements of the list will be passed.)Please look at the sample code here:Here i hard-coded the values to the function ('john','doe')instead of that pass from the list and all the elements will be passed.
I am not sure if I completely understand what you are looking to achieve. My understanding is that you want to start a separate thread for each value in your list, so each value gets processed "in parallel". I modified your main1 function to do so:threads = [Thread(target=m1,args=('abcd',x)) for x in list] creates a separate thread for each value in the list.for thread in threads: thread.start() starts each thread.for thread in threads: thread.join() makes sure each thread is finished before returning from the main1 function (if you would rathee return immediately, just delete this line).
Your tasks are well suited for use with the concurrent.futures module. In particular, Executor.map applies a function to the elements of an iterable.You can use something similar to the ThreadPoolExecutor example in the docs:If you find the repeat syntax to be awkward, you have a couple of alternatives:ORIn all cases, the with block will implicitly call executor.shutdown, which will wait for all the tasks to complete.As a rule, don't call a variable list: it will shadow the name of the builtin class.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.map
https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor
https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.shutdown
