Natural Text
I have a list of commands looking like this :set_string equipment_type 3 PumpAll commands almost follow this template:cmd_type propertyname equipment_id valueWhat I am trying to do is to go through a txt document full of this kind of commands and store all possible combinations of command statements. I am only interested in cmd, type, dimension of equipment_id and property name.What I already did was using a dictionary with tuples (cmd,type,dimension) as keys and a set of property names as a value. But I would like to add a notion of priority into this data structure : cmd then type then dimension. Is there a tree-like data structure in python that can permit me to store this kind of data? First layer would be : cmd, Second layer : type, Third layer would be : dimension and the leaves are the set of property names that can be used following the corresponding path in the tree.Thank you for your help!
You could use nested dicts, nested defaultdicts or a Trie.With standard dicts, you'd use setdefault:It would give you a dict of dicts of dicts of lists.If you want sets at the leaves, you could use:As an example:It outputs:With defaultdicts, your code would look like:
One relatively clean way is the infinetely nested defaultdict tree:This will allow you to iterate through all props of one (cmd, type, dim) triplet via:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
