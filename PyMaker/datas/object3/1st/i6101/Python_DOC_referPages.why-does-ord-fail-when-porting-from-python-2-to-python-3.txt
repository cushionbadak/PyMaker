Natural Text
I am trying to port a Python library called heroprotocol from Python 2 to Python 3. This library is used to parse replay files from an online game called Heroes of the Storm, for the purpose of getting data from the file (i.e. who played against who, when did they die, when did the game end, who won, etc).It seems that this library was created for Python 2, and since I am using Python 3 (specifically Anaconda, Jupyter notebook) I would like to convert it to Python 3.The specific issue I am having is that when I runwhich should get some basic data about the replay file, I get this error:I googled the ord() function and found a few posts about the usage of ord() in Python 3, but none of them solved the issue I am having. I also tried posting in the "Issues" section on Github, but I got no response yet.Why am I seeing this error?
According to the issue you raised, the exception occurs on line 69 of decoders.py:The obvious reason this would succeed in Python 2 but fail in Python 3 is that self._data is a bytestring. In Python 2, bytestrings are the "standard" string objects, so that indexing into one returns the character at that position (itself a string) …… and calling ord() on the result behaves as expected:However, in Python 3, everything is different: the standard string object is a Unicode string, and bytestrings are instead sequences of integers. Because of this, indexing into a bytestring returns the relevant integer directly …… so calling ord() on that integer makes no sense:So, you ought to be able to prevent the specific exception you're asking about here by simply removing the call to ord() on that and similar lines:… although of course it's likely that further problems (out of scope for this question) will be revealed as a result.


Answer URL
https://docs.python.org/3/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit
https://docs.python.org/3/library/functions.html#ord
