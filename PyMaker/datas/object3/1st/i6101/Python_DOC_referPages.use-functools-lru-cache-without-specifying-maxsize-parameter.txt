Natural Text
The documentation for lru_cache gives the function definition:This says to me that maxsize is optional.However, it doesn't like being called without an argument:Calling with an argument is fine:Am I misreading the documentation?
You have to at least call lru_cache without args : This way, lru_cache is initialized with default parameters.This is because decorators in python (with the @ notation) are special functions which are evaluated and called when the parser is reading the source.When you write @decorator_name you tell python that decorator_name is a function that will be called with the function (or class) defined after. Example: is equivalent to :The lru_cache decorator is a little bit more complex because before wrapping the function, it has to create the cache (related to the function), and then wrap the function with another function that will do the cache management.Here is the (shorted) code of the CPython implementation :So, when you wrote only python called lru_cache(f), and definitively, it wasn't made to handle such thing.To make it compliant with this write, we should add a test to check if the first parameter (maxsize) is a callable function :
Think about it that way: lru_cache is a decorator factory.  You call it (with or without params, but you call it) and it gives you a decorator.Calling the decorator factory and applying the decorator on one line is the equivalent of this:


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
