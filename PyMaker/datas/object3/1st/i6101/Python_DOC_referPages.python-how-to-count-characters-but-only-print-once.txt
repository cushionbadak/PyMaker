Natural Text
I am trying to figure out my code. The objective of the code is to create a character frequency counter. The character frequency counter must display the result in alphabetical order. So, the code must take input and display the number of characters like this:input = ("apple")'a' = 1'e' = 1'l' = 1'p' = 2Currently, my code does this:'a' = 1'e' = 1'l' = 1'p' = 2'p' = 2Any ideas for solving this problem? Ideally, I would only want 'p' to be displayed once, but count both characters.Here is my code:Any help is appreciated greatly. Thank you so much!
You have all right parts and pieces but the problem is actually simpler than you're making it:OUTPUT
This is how I would write your program, using collections.Counter and the new-fangled f-strings:
You can try this one too:Output:
Maybe you can create some list of 'used symbols' and after you count any symbol, just add it to list.
You get 'p' twice because you are looping across the word 'apple' which has 'p' in it twice. Try looping across the sorted list of keys in your dictionary as that will only ever have one unique key for each character.So changing the 2nd to last line, and removing a couple of no longer needed lines :
The one better solution I could think of is using the collections package in Python. It is a design pattern. The collection package has a method Counter which will give solution to your problem.It is pretty simple and easy to use.Following is the code block for that.input_string = "apple"from collections import Counterresult = Counter([i for i in input_string])print (result) This should do the magic trick for you. It is often better to use the design patterns because they will ease the work.Using counter, you get your desired result in very few lines of code.


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
