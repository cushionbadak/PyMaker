Natural Text
Here's my Post model:I'd like to add Enum status to it. So, I've created a new Enum:And added a new field to model:After doing FLASK_APP=server.py flask db migrate, a such migration was generated:After trying to upgrade DB, I'm getting:Why type poststatus was not created on DB-level automatically? In the similar migration it was.How to specify server_default option properly? I need both ORM-level defaults and DB-level ones, because I'm altering existing rows, so ORM defaults are not applied.Why real values in DB are 'DRAFT', 'APPROVE', 'PUBLISHED', but not draft, etc? I supposed there should be ENUM values, not names.Thank you in advance.
Why real values in DB are 'DRAFT', 'APPROVE', 'PUBLISHED', but not draft, etc? I supposed there should be ENUM values, not names.As Peter Bašista's already mentioned SQLAlchemy uses the enum names (DRAFT, APPROVE, PUBLISHED) in the database. I assume that was done because the enum values ("draft", "approve", ...) can be arbitrary types in Python and they are not guaranteed to be unique (unless @unique is used).However since SQLAlchemy 1.2.3 the Enum class accepts a parameter values_callable which can be used to store enum values in the database:Why type poststatus was not created on DB-level automatically? In the similar migration it was.I think basically you are hitting a limitation of alembic: It won't handle enums on PostgreSQL correctly in some cases. I suspect the main issue in your case is Autogenerate doesn't correctly handle postgresql enums #278.I noticed that the type is created correctly if I use alembic.op.create_table so my workaround is basically:
I can only answer the third part of your question.The documentation for the Enum type in SQLAlchemy states that:Above, the string names of each element, e.g. “one”, “two”, “three”, are persisted to the database; the values of the Python Enum, here indicated as integers, are not used; the value of each enum can therefore be any kind of Python object whether or not it is persistable.So, it is by SQLAlchemy design that Enum names, not values are persisted into the database.
From official docs: https://docs.python.org/3/library/enum.html#creating-an-enumAccording to this:1) PostStatus is not a DB-model, it's just a class which contains status ids;2) it's OK3) you don't have to store status strings in DB, you better use ids instead


Answer URL
https://docs.python.org/3/library/enum.html#creating-an-enum
