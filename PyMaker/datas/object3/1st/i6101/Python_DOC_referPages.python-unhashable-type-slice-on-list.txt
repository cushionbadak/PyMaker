Natural Text
I am trying to write a little script that will look at a string of text, remove the stop words, then return the top 10 most commonly used words in that string as a list.This is my code:However, this gives me the error message unhashable type: slice.  I think this is because common_list might not actually be a list..  I am very new to python so please excuse if this is really silly.
This can be done with the Counter object's most_common method which makes it really easy:The documentation states:Return a list of the n most common elements and their counts from the most common to the least. So as it returns both the element and their counts and we only want the element, we still need to use a list-comprehension:
common_list is a dictionary, can't slice it (common_list[:9] won't work). You probably have to convert the common_list into an actual list and sort that one based on the occurrences.
You can use the following one-liner:why?Well you essentially have a list of words:and then you can get the counts of each elements with the c() function so by taking c(description) which gives:and then we need to sort this and that is done by sorting on the second element of each tuple with key=lambda p:p[1]. Which in our case would give:then we need to reverse it with [::-1] and take the first 10 elements with [:10]. Which would leave us with:If you just want the words, just take the first element from each list in the top_ten list with:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter.most_common
