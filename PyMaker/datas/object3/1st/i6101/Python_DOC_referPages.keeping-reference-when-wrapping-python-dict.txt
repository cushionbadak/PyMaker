Natural Text
I'd like to write a dict subclass in python3, that wraps some of the dict methods and returns instances of the same class instead of dict on __getitem__, if requested value happens to be a dict. Otherwise, I'd like to have behavior that is exactly identical to that of the dict. This is what I've came up with:This however, is not identical to dict in that it doesn't return a reference to a dict value, but a new object created from that dict. To illustrate what I mean:would give:but doing the same with WrappedDict:gives:Note 4 in the inner dict instead of expected 40. Is there a way to replicate former behavior without too much of black magic?
Set your newly created WrappedDict back to your object with __setitem__:Full code:Output:


Answer URL
https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping
