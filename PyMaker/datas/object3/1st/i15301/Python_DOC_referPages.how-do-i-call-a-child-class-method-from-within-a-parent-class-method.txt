Natural Text
I know this question might be pointless but there is a reason why I am looking to do it this way. I want to call something exactly opposite to super()I have a bunch of code in class B's use_attack() method that I would not like to replicate in the parent method of use_spell() .I would like to call the child method use_attack() in the line indicated.
I have a bunch of code in class B's use_attack() method that I would not like to replicate in the parent method of use_spell() .Then factor that code out into a method on the parent class. This is exactly what inheritance is for. Children inherit code from parents, not the other way around.
From the python docs: "The mro attribute of the type lists the method resolution search order used by both getattr() and super()"https://docs.python.org/3/library/functions.html#superThis should help shed some light on Inheritance and Method Resolution Order (mro).


Answer URL
https://docs.python.org/3/library/functions.html#super
