Natural Text
I'm working on a python (2.7) program that produce a lot of different matplotlib figure (the data are not random). I'm willing to implement some test (using unittest) to be sure that the generated figures are correct. For instance, I store the expected figure (data or image) in some place, I run my function and compare the result with the reference. Is there a way to do this ?
In my experience, image comparison tests end up bring more trouble than they are worth. This is especially the case if you want to run continuous integration across multiple systems (like TravisCI) that may have slightly different fonts or available drawing backends. It can be a lot of work to keep the tests passing even when the functions work perfectly correctly. Furthermore, testing this way requires keeping images in your git repository, which can quickly lead to repository bloat if you're changing the code often.A better approach in my opinion is to (1) assume matplotlib is going to actually draw the figure correctly, and (2) run numerical tests against the data returned by the plotting functions. (You can also always find this data inside the Axes object if you know where to look.)For example, say you want to test a simple function like this:Your unit test might then look likeOr, equivalently,
Matplotlib has a testing infrastructure. For example:From the docs:The first time this test is run, there will be no baseline image to  compare against, so the test will fail. Copy the output images (in  this case result_images/test_category/spines_axes_positions.*) to the  correct subdirectory of baseline_images tree in the source directory  (in this case lib/matplotlib/tests/baseline_images/test_category). When rerunning the tests, they should now pass.
You can also use unittest.mock to mock matplotlib.pyplot and check that appropriate calls with appropriate arguments are made to it. Let's say you have a plot_data(data) function inside module.py that you want to test and which looks like this:In order to test this function in your test_module.py file you need to:This checks if a title method is called with an argument my title and that the figure method is invoked inside plot_data.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
