Natural Text
What's the most idiomatic way of writing a filter with a negation?Example:Of course, you can just use list comprehensions - but then you needn't use filter anywayIn case anyone wonders, I've stumbled upon this while trying to split a list based on a condition
The itertools module includes both ifilter() and ifilterfalse(), which filter elements where the function returns True and False respectively.Note that, in Python 2, there is a difference between filter and ifilter: odd_numbers here would be an iterator, while filter() would give a list (see itertools.ifilter Vs. filter Vs. list comprehensions). If you actually want to build a list, your example with not seems fine, assuming you are set on using filter - list comprehensions may be more 'idiomatic' (List filtering: list comprehension vs. lambda + filter).In Python 3, filter() constructs an iterator, not a list, and itertools.filterfalse() is the complement.
Splitting based on a predicate is called a partition. I would find it more idiomatic to implement partition as a separate function rather than repeat its internals specifically for odd and even numbers.  Python 3's Itertools Recipes has the following implementation:It uses filterfalse (as described by @Lack) and tee defined in that module.  So your highest-level code would look like:


Answer URL
https://docs.python.org/3/library/functions.html#filter
https://docs.python.org/3/library/itertools.html#itertools.filterfalse
https://docs.python.org/3/library/itertools.html#itertools-recipes
