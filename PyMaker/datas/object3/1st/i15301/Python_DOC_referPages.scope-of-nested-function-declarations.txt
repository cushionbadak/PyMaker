Natural Text
I have the following code: Python keeps returning:UnboundLocalError: local variable 'line_no' referenced before assignmentwhen executing line_no +=1. I understand that the problem is that nested function declarations have weird scoping in python (though I do not understand why it was programmed this way). I'm mostly wondering if there is a simple way to help python resolve the reference, since I really like the functionality this would provide. 
Unfortunately, there is not a way to do this in Python 2.x.  Nested functions can only read names in the enclosing function, not reassign them.One workaround would be to make line_no a list and then alter its single item:You would then access the line number via line_no[0].  Below is a demonstration:This solution works because we are not reassigning the name line_no, only mutating the object that it references.Note that in Python 3.x, this problem would be easily solved using the nonlocal statement:
It's hard to say what you're trying to achieve here by using closures. But the problem is that with this approach either you'll end with an ValueError: I/O operation on closed file when you return readline from the outer function or just the first line if you return readline() from the outer function. If all you wanted to do is call readline() repeatedly or loop over the file and also remember the current line number then better use a class:  Usage: 
The more Pythonic way to get the next line and keep track of the line number is with the enumerate builtin:This will work in all current Python versions.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-nonlocal_stmt
https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value
