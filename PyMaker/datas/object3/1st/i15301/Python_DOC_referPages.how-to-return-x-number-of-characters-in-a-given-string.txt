Natural Text
I've been at this for a while now, and I've gotten so close.I've had two problems to complete for an assignment. The first one I finished. It's supposed to return the first three indices of the given string, and if the string is less than 3 letters, it returns nothing. It looks like this:The second one is similar, but a little more involved. The problem is:Hopefully that explains my issue. I can't figure out how to get the inputted number to correspond to the number of indices I'm trying to print. In the first problem, it was simple, because it was always just the first three indices that were used. Now, it's (n) number of indices.Any help is much appreciated (I'm using Python 3.4.2)
Strings support sub-stringing in Python.In action:
Use len and slice method of string method like:or simple way:or one line way:Hope helps.
Unicode strings in Python are immutable Unicode codepoint sequences.Unicode codepoint is just a number from 0 to sys.maxunicode e.g., NÂº128516: ðŸ˜„('\U0001f604').A substring/slice of a Unicode string s such as s[:2] returns a new Unicode string that contains 2 Unicode codepoints.len(s) returns the number of Unicode codepoints in the string s.An empty string could be represented using '' string literal in Python source code.To return a given number of user-perceived characters from a string or an empty string if the text size is too small, you could use \X regular expression (it matches an eXtended grapheme cluster):A single user-perceived character such as aÌ€ can span several Unicode codepoints such as U+0061, U+0300.The term character is ambiguous. It can mean a byte, Unicode codepoint, grapheme cluster in different circumstances.
that's all


Answer URL
https://docs.python.org/3/reference/datamodel.html#index-15
https://docs.python.org/3/glossary.html#term-immutable
https://docs.python.org/3/glossary.html#term-sequence
