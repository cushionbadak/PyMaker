Natural Text
I am getting an error when I try to run this simple python script:Lets say I type in "dude", the error I am getting is:I am running Mac OS X 10.9.1 and I am using the Python Launcher app that came with the install of python 3.3 to run the script.Edit: I realized I am somehow running these scripts with 2.7. I guess the real question is how do I run my scripts with version 3.3? I thought if I dragged and dropped my scripts on top of the Python Launcher app that is inside the Python 3.3 folder in my applications folder that it would launch my scripts using 3.3. I guess this method still launches scripts with 2.7. So How do I use 3.3?
TL;DRinput function in Python 2.7, evaluates whatever your enter, as a Python expression. If you simply want to read strings, then use raw_input function in Python 2.7, which will not evaluate the read strings.If you are using Python 3.x, raw_input has been renamed to input. Quoting the Python 3.0 release notes,raw_input() was renamed to input(). That is, the new input() function reads a line from sys.stdin and returns it with the trailing newline stripped. It raises EOFError if the input is terminated prematurely. To get the old behavior of input(), use eval(input())In Python 2.7, there are two functions which can be used to accept user inputs. One is input and the other one is raw_input. You can think of the relation between them as followsConsider the following piece of code to understand this betterinput accepts a string from the user and evaluates the string in the current Python context. When I type dude as input, it finds that dude is bound to the value thefourtheye and so the result of evaluation becomes thefourtheye and that gets assigned to input_variable.If I enter something else which is not there in the current python context, it will fail will the NameError.Security considerations with Python 2.7's input:Since whatever user types is evaluated, it imposes security issues as well. For example, if you have already loaded os module in your program with import os, and then the user types inthis will be evaluated as a function call expression by python and it will be executed. If you are executing Python with elevated privileges, /etc/hosts file will be deleted. See, how dangerous it could be?To demonstrate this, let's try to execute input function again.Now, when input("Enter your name: ") is executed, it waits for the user input and the user input is a valid Python function invocation and so that is also invoked. That is why we are seeing Enter your name again: prompt again.So, you are better off with raw_input function, like thisIf you need to convert the result to some other type, then you can use appropriate functions to convert the string returned by raw_input. For example, to read inputs as integers, use the int function, like shown in this answer.In python 3.x, there is only one function to get user inputs and that is called input, which is equivalent to Python 2.7's raw_input.
You are running Python 2, not Python 3.  For this to work in Python 2, use raw_input.
Since you are writing for Python 3.x, you'll want to begin your script with:If you use:It will default to Python 2.x. These go on the first line of your script, if there is nothing that starts with #! (aka the shebang).If your scripts just start with:Then you can change it to:Although this shorter formatting is only recognized by a few programs, such as the launcher, so it is not the best choice. The first two examples are much more widely used and will help ensure your code will work on any machine that has Python installed.
You should use raw_input because you are using python-2.7. When you use input() on a variable (for example: s = input('Name: ')), it will execute the command ON the Python environment without saving what you wrote on the variable (s) and create an error if what you wrote is not defined.raw_input() will save correctly what you wrote on the variable (for example: f = raw_input('Name : ')), and it will not execute it in the Python environment without creating any possible error: 
For python 3 and aboveit will solve the problem on pycharm IDEif you are solving on online site exactly hackerrank then use:
You have to enter input in either single or double quotes
For anyone else that may run into this issue, turns out that even if you include #!/usr/bin/env python3 at the beginning of your script, the shebang is ignored if the file isn't executable.To determine whether or not your file is executable:run ./filename.py from the command lineif you get -bash: ./filename.py: Permission denied, run chmod a+x filename.pyrun ./filename.py againIf you've included import sys; print(sys.version) as Kevin suggested, you'll now see that the script is being interpreted by python3
You could either do:or:
You can change which python you're using with your IDE, if you've already downloaded python 3.x it shouldn't be too hard to switch. But your script works fine on python 3.x, I would just changetoBecause with the comma it prints with a whitespace in between your name is and whatever the user inputted. AND: if you're using 2.7 just use raw_input instead of input. 
We are using the following that works both python 2 and python 3
Good contributions the previous ones.Thanks!


Answer URL
