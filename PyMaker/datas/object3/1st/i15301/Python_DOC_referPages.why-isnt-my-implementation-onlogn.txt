Natural Text
I was implementing and testing answers to this SO question - Given an array of integers find the number of all ordered pairs of elements in the array whose sum lies in a given range [a,b]The answer with the most upvotes (currently) only provides a text description of an algorithm that should be O(NlogN):Sort the array... .  For each element x in the array:  Consider the array slice after the element.  Do a binary search on this array slice for [a - x], call it y0. If no exact match is found, consider the closest match bigger than [a - x] as y0.  Output all elements (x, y) from y0 forwards as long as x + y <= b. ... If you only need to count the number of pairs, you can do it in O(nlogn). Modify the above algorithm so [b - x] (or the next smaller element) is also searched for.My implementation:When I plot Time versus N or some function of N I am seeing an exponential or N^2 response.Is my implementation incorrect or is the author's claim incorrect?Here are some plots of the data.T vs NT / NlogN vs N - one commenter thought this should NOT produce a linear plot - but it does.T vs NlogN - I thought this should be linear if the complexity is NlogN but it is not.
If nothing else, this is your error:arr[ndx+1:] creates a copy of the list of length len(arr) - ndx, so therefore your loop is O(n^2).Instead, use the lo and hi arguments to bisect.bisect.


Answer URL
https://docs.python.org/3/library/bisect.html#bisect.bisect_left
