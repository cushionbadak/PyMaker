Natural Text
When (if at all) do functions recognize variables that have been initialized in the main function?E.g.: When I write the following Python code:I get the following error: UnboundLocalError: local variable 'variable' referenced before assignmentHowever, when I do something similar, but with a dictionary:The output is : 2What's the difference between the two cases?
+= operator is considered as an assignment when used with simple variables. So, Python while parsing the function body will add variable in <function_object>.func_code.co_varnames, and due to this during runtime Python will never look for that variable in any other scope unless you had global or nonlocal declaration(Python 3 only) at the top of the function. Note that it doesn't matter if you used variable before using it with +=(see the last example), the variable is now local everywhere in the function body. On the other hand, dic[1] is variable look-up followed by a BINARY_SUBSCR(same thing for LOAD_ATTR as well; you can do x.extend([100]) but not x+=[100]; where x is a list) and as there are no assignment statements related to dic after that Python considers it as a either a global variable(LOAD_GLOBAL) or a free variable(LOAD_DEREF) and fetches its value from there.


Answer URL
https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value
