Natural Text
I have an open source project that works fine with python 2 and I am trying to make it work on python 3 as well.I tried one approach that is using if statements in the code to check sys.version_info.major but this seems to be messy.Is it possible to specify the interpreter version in setup.py to that when folks use pip install, it automatically pick up a compatible package?This way, I can branch the code and the packages on github.so lets say I haveif the user has python3, pip should grab x1.1 (not the latest but the latest package for python3)
There is no way for you to specify what version pip should install, no. You can specify Python compatibility in the Trove classifiers, but pip will not differentiate on those, let alone pick a different version based on that.You are stuck with writing a version that works on both Python 2 and 3. I recommend you read through the Porting Python 2 Code to Python 3 guide and use a compatibility layer support library like six. You can use the Modernize tool to help you rewrite your code here. 
You can use 2to3 :2to3 is a Python program that reads Python 2.x source code and applies a series of fixers to transform it into valid Python 3.x code.and as @Martijn says in comment you can find the best recipe in Porting Python 2 Code to Python 3


Answer URL
https://docs.python.org/3/howto/pyporting.html
https://docs.python.org/3/howto/pyporting.html
