Natural Text
I want to parse a csv-like file which uses non-ascii delimiters. The csv module lets me set the quote character and the field delimiter. Is it possble to set the end of record delimiter so it can be used with the csv module?Take a csv-like file where, instead of:it uses for examplewould be represented asI know how to solve this using split etc. But is there a better way with the csv module?This expression generates examples:
No, you cannot directly use csv.reader() for this, as the Dialect.lineterminator parameter is hardcoded:Note: The reader is hard-coded to recognise either '\r' or '\n' as end-of-line, and ignores lineterminator. This behavior may change in the future.You'd have to create a wrapper around the reader to translate your line terminators:This reads the input file in chunks of 2kb (configurable) and splits out the lines by the given line terminator.Because csv.reader() can handle any iterable, the code can accept other iterables too, but becomes less efficient if such an iterable produces large strings each iteration.The code should work on both Python 2 and 3.Demo:Slightly contrived Python 2 version:
You can't read such files with the csv module.  There is an option called lineterminator, but the documentation says:The reader is hard-coded to recognise either '\r' or '\n' as end-of-line, and ignores lineterminator. This behavior may change in the future.You could apparently use this lineterminator parameter to write such a file, but you wouldn't be able to read it back in using the csv module.


Answer URL
https://docs.python.org/3/library/csv.html#csv.Dialect.lineterminator
https://docs.python.org/3/library/csv.html#csv.Dialect.lineterminator
