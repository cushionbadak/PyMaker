Natural Text
Using Numpy/Python, is it possible to return the mean AND variance from a single function call?I know that I can do them separately, but the mean is required to calculate the sample standard deviation.  So if I use separate functions to get the mean and variance I am adding unnecesary overhead.I have tried looking at the numpy docs here (http://docs.scipy.org/doc/numpy/reference/routines.statistics.html), but with no success.
You can't pass a known mean to np.std or np.var, you'll have to wait for the new standard library statistics module, but in the meantime you can save a little time by using the formula:If you really are trying to speed things up, try np.dot to do the squaring and summing (since that's what a dot-product is):
You can also avoid the subtraction by making use of the relation between mean, variance and power of a signal:
I don't think NumPy provides a function that returns both the mean and the variance.However, SciPy provides the function scipy.stats.norm.fit() which returns the mean and standard deviation of a sample.  The function is named after its more specific purpose of fitting a normal distribution to a sample.Example:Note that fit() does not apply Bessel's correction to the standard deviation, so if you want that correction, you have to multiply by the appropriate factor.


Answer URL
https://docs.python.org/3/library/statistics.html
