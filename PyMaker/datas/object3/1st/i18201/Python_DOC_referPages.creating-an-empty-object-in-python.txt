Natural Text
Are there any shortcuts for defining an empty object in Python or do you always have to create an instance of a custom empty class?Edit: I mean an empty object usable for duck typing.
You can use type to create a new class on the fly and then instantiate it. Like so:The arguments to type are: Class name, a tuple of base classes, and the object's dictionary. Which can contain functions (the object's methods) or attributes.You can actually shorten the first line to Because by default type creates new style classes that inherit from object. type is used in Python for metaprogramming. But if you just want to create an instance of object. Then, just create an instance of it. Like lejlot suggests. Creating an instance of a new class like this has an important difference that may be useful. Where as:
Yes, in Python 3.3 SimpleNamespace was addedUnlike object, with SimpleNamespace you can add and remove attributes. If a SimpleNamespace object is initialized with keyword arguments, those are directly added to the underlying namespace.Example:
One simple, less-terrifying-looking way to create an empty(-ish) object is to exploit the fact that functions are objects in Python, including Lambda Functions:For example:
What do you mean by "empty object"? Instance of class object? You can simply runor maybe you mean initialization to the null reference? Then you can use 
All the proposed solutions are somewhat awkward.I found a way that is not hacky but is actually according to the original design.See the documentation of unittest.mock here.
Constructs a new empty Set object. If the optional iterable parameter is supplied, updates the set with elements obtained from iteration. All of the elements in iterable should be immutable or be transformable to an immutable using the protocol described in section Protocol for automatic conversion to immutable.Ex:


Answer URL
https://docs.python.org/3/library/types.html#additional-utility-classes-and-functions
https://docs.python.org/3/library/unittest.mock.html
