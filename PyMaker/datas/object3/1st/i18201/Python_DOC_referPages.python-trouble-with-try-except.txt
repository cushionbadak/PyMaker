Natural Text
I have some code to open and search through a folder full of pdfs. I'm using pdfminer to do the pdf conversion. But, some of my pdfs are not readable. I want my code to process those pdfs where the conversion works, and effectively skip over those pdfs where the conversion fails.I'm trying to use the try/except feature, but it doesn't seem to be working. For the pdfs that fail, the exception works. But, for the pdfs where the conversion works, both the try and exception blocks are executed.Here's my code:When the pdf conversion works, why are both blocks being executed? And, how can I prevent this from happening? Thanks!
One thing you can do is you can use the else clause of try ... except ... to execute code only if no exceptions were raised:The code in the else block is only executed if the code in the try block completes without raising an exception.  If an exception gets raised in the else block, the except clause does not handle it.As others have said, using except on its own is bad practice.  The exceptions you're getting are quite probably trying to tell you something helpful about why your program is going wrong, but by using a 'bare' except you are sticking your fingers in your ears and saying 'la la la can't hear you' to Python's attempts to help you.Generally it's good practice to only handle exceptions you are expecting.  If you know that your PDF library raises SomePDFException if something goes wrong, it would be better to writeinstead of However, if you don't know the type, you can catch most1 exceptions with the following:This then tells you the type of exception raised, and the message.1There are a few exceptions that do not inherit from Exception, namely SystemExit, KeyboardInterrupt and GeneratorExit (documentation: Python 2, Python 3).  I would be surprised if you are getting one of these, and I would hope the PDF library you are using follows the Python guidance by deriving its exceptions from Exception rather than BaseException.


Answer URL
