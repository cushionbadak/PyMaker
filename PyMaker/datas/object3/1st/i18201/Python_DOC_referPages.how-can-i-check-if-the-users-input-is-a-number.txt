Natural Text
I'm trying to create a function to check if the user inputs a number. If the user inputs a number my program should output an error message, if the users enters a string of letters, my program should proceed with program. How can I do this?I've come up with this so far:This function doesn't seem to work. Please help. 
You can use the type(variable_name) function to retrieve the type.
You are looking to filter out any responses that include digits in the string. The answers given will do that using a regular expression. If that's all you want, job done. But you will also accept city names like Ad€×¢® or john@example.com.Depending on how choosy you want to be, and whether you're just looking to fix this code snippet or to learn the technique that the answers gave you so that you can solve the next problem where you want to reject anything that is not a dollar amount, say),you could try writing a regular expression. This lets you define the characters that you want to match against. You could write a simple one to test if the input string contains a character that is not a letter [^a-zA-Z] (the ^ inside [ ] means any character that is not in the class listed). If that RE matches, you can then reject the string.Then consider whether the strict rule of "letters only" is good enough? Have you replaced one flawed rule (no digits allowed) with another? What about 'L.A.' as a city name? Or 'Los Angeles'? Maybe you need to allow for spaces and periods. What about hyphens? Try [^a-zA-Z .-] which now includes a space, period and hyphen. The backslash tells the RE engine to treat that hyphen literally unlike the one in "a-z".Details about writing a regex here:http://docs.python.org/3/howto/regex.html#regex-howtoDetails about using the Re module in Python here: http://docs.python.org/3/library/re.html#module-re
You wouldn't be type checking because in Python 3 all text inputs are strings. This checks for a decimal value in the input using regular expressions and raises an exception if one is found.
Edit: I saw mention that no number should be present in the input at all. This version checks for numbers at any place in the input:


Answer URL
