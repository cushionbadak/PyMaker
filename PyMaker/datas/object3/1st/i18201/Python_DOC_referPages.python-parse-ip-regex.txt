Natural Text
I want to be able to parse something like "10.[3-25].0.X" into the actual list of ip addresses described by this rule, so for the above example rule the list would be [10.3.0.0, 10.3.0.1....10.25.0.255]. What's the best way to do it?So far the only thing I was able to come out with is the following awful-looking function:Any improvement ideas would be greatly appreciated.
You could make this a lot simpler.First, instead of writing the exact same thing four times, use a loop or a listcomp:You can also turn the nested loop into a flat loop over the cartesian product:And you can turn that long string-concatenation mess into a simple format or join call:And that means you don't need to split out the 4 components in the first place:And now that the loop is so trivial, you can turn it into a listcomp:
Here's a possible example using itertools.product. The idea is to first evaluate the "template" (e.g. 1.5.123.2-5, 23.10-20.X.12, ...) octet by octet (each yielding a list of values) and then take the cartesian product of those lists.(Small) Examples:


Answer URL
