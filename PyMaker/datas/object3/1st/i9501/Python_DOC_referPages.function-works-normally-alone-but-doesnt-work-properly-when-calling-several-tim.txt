Natural Text
This question already has an answer here:Why can a function modify some arguments as perceived by the caller, but not others?                    10 answers                So the question is pretty strange. I wrote an algorithm to move contents of any list (array) by a given number of digits to the left.And, obviously, when typing print(move_with_step(DIGS, 5) will give us the same DIGS array but twisted. It will be something like [ 5, 6, 7... 3, 4 ]. You get the idea. And in this case it works. BUT...The problem is: if I'd put this same call into the for loop like below or just one after another, it will give me wrong results which is kinda strange because it should'n modify DIGS itself and why is that happening IDK.So this codeReturns thisin the console. Which is crazy and totally wrong. Why is that?
The problem is that DIGS changes at each loop. So when you do:At the end of the first loop DIGS=[1, 2, 3, 4, 5, 6, 7, 8, 9, 0]. So at the second loop, it will start with DIGS already changed.One simple solution, as stated by @depperm in the comments, is to pass a copy of the list:Output:
You should create a copy of the DIGS list in order to keep the original values. Then, pass a proper copy to the function and it should function fine.Have a look at How to clone or copy a list?


Answer URL
https://docs.python.org/3/whatsnew/3.0.html#print-is-a-function
