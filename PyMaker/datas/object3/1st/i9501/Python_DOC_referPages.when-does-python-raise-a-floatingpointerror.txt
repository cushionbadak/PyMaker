Natural Text
Python documentation says that FloatingPointError is raised when a float calculation fails. But what is exactly meant here by "a float calculation"?I tried adding, multiplying and dividing with floats but never managed to raise this specific error. Instead, i got a TypeError:Can someone help me understand when a FloatingPointError is raised in python?
It is part of the fpectl module. The FloatingPointError shouldn't be raised if you don't explicitly turn it on (fpectl.turnon_sigfpe()).However mind the note:The fpectl module is not built by default, and its usage is discouraged and may be dangerous except in the hands of experts.  See also the section fpectl-limitations on limitations for more details.Update: The fpectl module has been removed as of Python 3.7.Even with FloatingPointErrors turned on, 10/'a' will never raise one. It will always raise a TypeError. A FloatingPointError will only be raised for operations that reach the point of actually performing floating-point math, like 1.0/0.0. 10/'a' doesn't get that far.
You can also trigger a FloatingPointError within numpy, by setting the appropriate numpy.seterr (or numpy.errstate context manager) flag.  For an example taken from the documentation:Interestingly, it also raises FloatingPointError when all operands are integers:The documentation notes the conditions under which the FloatingPointError will be raised:The floating-point exceptions are defined in the IEEE 754 standard [1]:Division by zero: infinite result obtained from finite numbers.Overflow: result too large to be expressed.Underflow: result so close to zero that some precision was lost.Invalid operation: result is not an expressible number, typically indicates that a NaN was produced.


Answer URL
https://docs.python.org/3/library/exceptions.html#FloatingPointError
