Natural Text
I have a dictionary that has object instance as keys:When I delete the object from outside the dict, the correspondent key is not deleted from the dictionary, which is not what I expected. What I wanted to achieve is that when the object is deleted from outside the dict, the key also disappear from the dict.
In fact your object stored in a variable and the object used as key in the dictionary are not exactly the same. They are two different references to the same object in the memory.Let's take the following example:Which prouves the dict created a new reference to the main object. And because Python's main method of memory management uses reference counting : Python keeps a count of all the references to   the object, and when there are none left, the object is deleted. so if you delete the reference stored in the varaiable del a, the reference stored in the dict stayed.And this will make inconstancy in you dict because you have any more access to your data, I will recommend to use the variable reference to delete the data from the dict than delete the object.
before deleting the object, you have to delete the key from the dictionary.this happens because the dict doesn't store the object as the key, but a hash that is generated from it.


Answer URL
https://docs.python.org/3/library/weakref.html
