Natural Text
I am doing a data cleaning task on a text file full of sentences. After stemming these sentences I would like to get the frequency of the words in my stemmed list. However I am encountering a problem as when printing the stemmed list, stem_list,  I am obtaining a list for every sentence like so :I would like to obtain the frequency of all of the words but I am only obtaining the frequency per sentence by using the following code:This is producing the following output:            friend;2paymast;1longer;1memori;1parti;1us;1day;1anyon;1forgotten;1think;1actual;2properti;2valu;2friend;1repres;1relev;1bought;1week;1cargo;1monster;1hour;1wreck;1upload;1passeng;1least;1reef;124;1vessel;1ship;1com;1within;1area;1territori;1custom;1water;13;1The word 'friend' is being counted twice since it is in two different sentences. How would I be able to make it count friend once and display friend;3 in this case?
You could just concatenate everything in one list :and process the same way you do.Otherwise, you could keep the same code but instead of printing you create a dict and populate it with values you get. Each time you get a new word, you create the key, then you add the value. 
You could flatten your 2D array first with chain.from_iterable:
I think the easyest way is to combine the arrays before passing it to the function.or shorter:I think your input looks like:so you have two arrays - first for sentences and second for words in sentenc. With allwords = [inner for outer in stem_list for inner in outer] you run through the sentences and combine them as one array of words.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
