Natural Text
I put several () after a lambda, and Python seems to ignore them rather than throwing an error. Why?My code is:
Your expression has no syntax errors. There may be a runtime error when you call the lambda, depending on x, but as it stands, you produced valid lambda objects.Remember that lambda has the lowest operator precedence, so all of the expression after it is part of the lambda expression to be executed when you call it.In other words, you defined the following functions:and it'll depend on what x is what will happen. Pass in a function that accepts any argument and returns itself and there still won't be a problem:If you expected the lambda to be limited to just x, you'd need to use parentheses to override the operator precedence:
This is perfectly fine. Your lambda is a function that expects as its argument a function that can be called, which returns a function that can be called, which returns a function that can be called, which returns a function that can be called. The result of that last call is returned by the lambda.You'll get an error if you call the lambda with another value.Maybe your confusion is because you think this meansWhich will give an error, because you didn't pass an x.But it's actually parsed like
Python is dynamically typed so it assumes you know what you;re doing when you define your functions. So if you argument x is function which returns function which returns function etc. it will work just fine. So, there is no error here.
Because x ()()() is a legal expression.


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
