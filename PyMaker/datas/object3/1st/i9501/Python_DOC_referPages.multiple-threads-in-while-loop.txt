Natural Text
I have a simple problem / question about the below code.I want to execute 10 threads each time and wait for it to finish and then continue with the next 10 threads until count <= 255I understand my problem and why it does execute 10 threads for every count increase, but not how to solve it, any help would be appreciated.
it can easily achieved using concurrents.futures libraryhere's the example code:here executor returns future for every task it submits.keep in mind that if you use add_done_callback() finished task from thread returns to the main thread (which would block your main thread) if you really want true parallelism then you should wait for future objects separately. here's the code snippet for that.hope this helps!
There are two viable options: multiprocessing with ThreadPool as @martineau suggested and using queue. Here's an example with queue that executes requests concurrently in 10 different threads. Note that it doesn't do any kind of batching, as soon as a thread completes it picks up next task without caring the status of other workers:Output:
I modified your code so that it has correct logic to do what you want. Please note that I don't run it but hope you'll get the general idea:


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
