Natural Text
I'm looking for an efficient way to extract from an array in Python only significant values, for instance, only those 10 times bigger than the rest. The logic (no code) using a very simple case is something like that:at the end new_array will be composed by the significant values, in this case new_array =[5000], but must apply to any kind of array.Thanks for your help!UPDATE!!!Thanks to all for your answers!!! in particular to Copperfield who gave me a good idea about how to do it. Here is the code that's working for the purpose!
Does this answer your question?
your pseudo code can be translate to this functionthis give this resultNow, what you describe can be done like this in python 3.5+or in previous versions(the negative index access the element from last to first, so -1 is the last one, -2 the second last, etc )
I would not adopt the approach of only comparing each value to the one next to it.  If the array is unsorted then obviously that's a disaster, but even if it is sorted:In that example, the "rest" (i.e. majority) of the values are <10, but I've managed to get up into the 6-digit range very quickly with each number only being 9 times the one next to it (so, your rule would not be triggered).One approach to outlier detection is to subtract the median from your distribution and divide by a non-parametric statistic that reflects the spread of the distribution (below, I've chosen a denominator that would be equivalent to the standard deviation if the numbers were normally distributed).  That gives you an "atypicality" score on a standardized scale. Find the large values, and you have found your outliers (any score larger than, say, 3â€”but you may need to play around a bit to find the cutoff that works nicely for your problem).


Answer URL
https://docs.python.org/3/library/functions.html#max
https://docs.python.org/3/library/functions.html#sorted
