Natural Text
I have a basic question about ordering in scandir function. So far I read man pages for  POSIX readdir and didn't found specific information about ordering guaranties. But when I iterate over large directory (which cannot be changed, read only) I observe same results over multiple systems (Fedora 24 and Ubuntu 16.04).What is the reason of this behaviour? Where I can read more about it?If I need consisted ordering, should I wrote my own wrapper around POSIX scandir or someone knows existing implementation for python?
Man page for readdir is explicit:The order in which filenames are read by successive calls to         readdir() depends on the filesystem implementation; it is unlikely         that the names will be sorted in any fashion.In most implementations, a directory is a sequential list entries and both readdir and scandir follow the underlying order. If you used similar file systems on different Linux version, and filled the directory in same order, it is likely that readdir also give same order. The order is not random and is absolutely deterministic and reproductible provided you do not add, remove or rename any file (at least once the file system is stable, because some can delay some actions). Simply it is not predictible from the file names.So if you want a consistent order, you must deal yourself with the ordering.
To answer the second part of the question, here is an implementation that sorts:Using listdir() here, instead of scandir() to get a list of names as strings, which sort easier than the DirEntry objects returned by scandir().


Answer URL
https://docs.python.org/3/library/os.html#os.scandir
