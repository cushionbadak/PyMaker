Natural Text
I have a service which runs in terminal (like a messenger) and it has its own printing console like so:When I want to get it's output I should call it like so:Storing data in file is not a good solution for my situation. So I need to get it's printed outputs in my python program while this process still is in running in other terminal (or in background). This process should be in running on server for a long time.I've written this code to collect the outputs (streaming data) but it never collect all of them, it just collect some first data and never works for a long time (never collect other data):
By default, reading from Popen.stdout & Popen.stderr is going to block until there is data in the stream. This might cause issues where the program is waiting for data in stderr, while data becomes available in stdout, but since it's blocked it can't attend to stdout. We can use the fcntl (file control) Linux syscall to set the file descriptors of stdout & stderr to non-blocking instead.Here is a sample code:


Answer URL
https://docs.python.org/3/library/sys.html#sys.__stdout__
