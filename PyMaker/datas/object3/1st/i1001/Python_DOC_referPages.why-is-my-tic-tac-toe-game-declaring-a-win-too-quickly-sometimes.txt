Natural Text
I'm trying to make a tic-tac-toe game in python, but I can't get it to detect a win. This is a part of the book: Automating the Boring stuff using python.Below is the code and my attempt:What happens is: When I type for example: mid-R it wil immediately say that X won. The first four 'Xwins' work great, but after that everything goes wrong as I just explained.
I think it's just your syntax problem. No need to check for X's and O's separately, you can just check if there is a winner after one person goes and check for winner on the turn variable, which stores X or O anyways. Assuming you can only win immediately after your own turn. 
The problem with your code is that if theBoard['mid-L' and 'mid-M' and 'mid-R'] == 'X': is not doing what you think it's doing.  It's not checking if all three positions are 'X'.  It's just returning the right most value at all times.  See Boolean Operation from the documentations:The expression x and y first evaluates x; if x is false, its value is  returned; otherwise, y is evaluated and the resulting value is  returned.The expression x or y first evaluates x; if x is true, its value is  returned; otherwise, y is evaluated and the resulting value is  returned.Since the boolean value of non-empty string is always True, 'mid-L' and 'mid-M' and 'mid-R' will always return 'mid-R', which gives you the condition of theBoard['mid-R'] == 'X' and will yield True, giving you the condition that X wins.As for the remedy, I believe @Endyd already got you covered.The most ideal case is not to hard code all the winning conditions, but it will require restructuring your code... perhaps when you have a better understanding I'd recommend you to come back and try for a more dynamic solution.  As for now, happy learning!


Answer URL
https://docs.python.org/3/reference/expressions.html#boolean-operations
