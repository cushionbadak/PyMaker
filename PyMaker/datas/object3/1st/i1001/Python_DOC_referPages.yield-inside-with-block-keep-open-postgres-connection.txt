Natural Text
When yielding from the below generator, is the postgres connection kept active or does the yield need to be less indented such that a new connection is made on every next()?
Yes, the context manager is kept active. yield pauses the function, nothing is exited.yield doesn't alter the order of execution inside a function. The function is merely 'paused', frozen at the point where the yield expression has executed and produced a value. When the generator is later on resumed (by calling __next__ on the iterator), the function continues at that point again. A with statement __exit__ method can't be called when a generator is paused, so the context manager can't be exited until the generator is resumed, anyway.You can see this happen if you create a simple context manager with the @contextmanager decorator (itself relying on a generator for the implementation!):And when you pull values from the generator to print, you'll see this:Note that the context is not exited until we retrieve the 3rd value! After the second next() call the code is paused at a point inside of the with block, and only when unpaused can the context be exited, and the finally suite of the loud_contextmanager() function can be run.


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
