Natural Text
I'm trying to simplify the following code (removing the redundant prints), but can't find a satisfying way to do this:original codeMy first idea was a try-(except-)else combination, but the else is not executed on a return in the try-block.Solution 1 - extracting into a separate functionSolution 2 - workaround using finallySurely there must be a better way to achieve this in python?PS: Also any ideas for a better title would be appreciated...PPS: I'm not directly asking about (subjective) codestyle, but wondering if there is a way to write this that I didn't consider (e.g. a language construct/pattern, that also makes the code more concise/cleaner; obviously there are a lot worse ways).
Check if your flow did not enter the first two if blocks by checking for the opposite of the first two if statements joined by an andso that you can execute "do something else" only if the first two if statements failed. Return at the end instead of in the middle of the if statements.
If the thing you always want to do is closing a file, I would use a with statement. In a more general case you can create your own context manager to have full control of what gets run at the end.Sample code:I added a superfluous else to print something about the exception in case of error, but leave it out to reproduce your original code more accurately.This code is not shorter than yours with the trivial print statement, but I like this method for more complex "closer" code.You can also define the context manager this way using the contextlib library:References:http://effbot.org/zone/python-with-statement.htmhttps://docs.python.org/3/library/stdtypes.html#typecontextmanagerhttps://docs.python.org/3/library/contextlib.html#contextlib.contextmanager


Answer URL
https://docs.python.org/3/library/stdtypes.html#typecontextmanager
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
