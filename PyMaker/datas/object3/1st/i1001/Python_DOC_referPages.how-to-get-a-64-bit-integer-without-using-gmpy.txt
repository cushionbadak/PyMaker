Natural Text
I need to pass a 64-bit integer into a function from a DLL, but the native python int types are 12 bytes (sys.getsizeof(1) returns 12) and I get the error "ValueError: Procedure probably called with too many arguments (4 bytes in excess)". Is there a way I can initialize an 8-byte integer or convert to one?I've tried using ctypes to pass in the parameter as various different ctype integers, but I couldn't get this to work:mydll.dllfn(c_int(1)), mydll.dllfn(c_int64(1)), mydll.dllfn(c_long(1)), etc.I would like to avoid gmpy since the platform I am running on is not currently being maintained or supported by gmpy.
Using stdlib ctypes:It's usually an alias for c_longlong, which represents the C signed long long datatype.Note that these types have no overflow checking!There's ctypes.c_uint64 / ctypes.c_ulonglong if you wanted unsigned.Depending on how the interfaces looks, you may also be interested in struct.pack:The 'q' refers to the 8 byte integer type ('Q' is unsigned). Other format characters are documented here. Byte order, size, and alignment options are documented here.


Answer URL
https://docs.python.org/3/library/ctypes.html#ctypes.c_int64
