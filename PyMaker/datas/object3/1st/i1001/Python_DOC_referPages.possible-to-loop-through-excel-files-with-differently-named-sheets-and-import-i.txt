Natural Text
I do not have a reproducible example for this but asking it based on interest. With a loop function in R, we are able to obtain all .csv from a directory with the below code: Would it be possible for us to loop through a directory with .xlsx files instead with different number of sheets? For instance: A.xlsx contains 3 sheets, Jan01, Sheet2 and Sheet3; B.xlsx contains 3 sheets, Jan02, Sheet2 and Sheet3 ... and so on. The first sheet name changes.Is it possible to loop through a directory and just obtain the dataframes for the first sheet in all excel files? Python or R codes are welcome! Thank you!
another (fast) R-solution using the readxl-package
In RHere is an R solution using the package openxlsx
Sure, its possible using pandas and python.  dataframes becomes a dictionary, with the keys being the names of the sheets, and the values becoming the dataframe containing the sheet data.  You can iterate through them like so:
By using Openpyxlget_sheet_names(). This function returns the names of the sheets in a workbook and you can count the names to tell about total number of sheets in current workbook. The code will be:we can access any sheet at one time. Lets suppose we want to access Sheet3. Following code should be writtenThe function get_sheet_by_name('Sheet3') is used to access a particular sheet. This function takes the name of sheet as argument and returns a sheet object. We store that in a variable and can use it like...and eventually:
For simplicity, lets say we had two workbooks with the first sheet in this format:You can iterate over each .xlsx file in the directory with glob.glob(), and append the dataframe of the first sheet with pandas.ExcelFile.parse() to a list:Which prints two dataframes contained in a list:You can also write the above as a list comprehension:You could also store the dataframes into a dictionary with filenames as the key:


Answer URL
https://docs.python.org/3/library/glob.html#glob.glob
