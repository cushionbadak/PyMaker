Natural Text
I'm trying to sort the values of a dictionary in ascending order by the key, but the problem is that these values have two items in the key and I'm only trying to sort it by the second key item. If that makes any sense.For example: I'm trying to sort it by keyitem2I tried sorting it by sorting it by their keysAttempt #1  #1 outputs a ValueError: Attempt #2    #2 doesn't actually sort it, it's just randomised Expected outputActual output
Your keys are not 2 item tuples anymore, they are strings of 2-item tuples. You would be unable to sort correctly until you are able to fix the keys. For the sake of answering the question as is:  Use ast.literal_eval to access your tuple element for sorting logic.However, dictionaries inherently are considered unordered in python. If you specifically want a dictionary that retains order, use an OrderedDictLastly though, a recommendation. Dictionaries can accept tuples as keys just fine, so with all said done and dusted, you really should just be using tuples directly instead of having them converted to strings unnecessarily. if the 2nd element is always going to be a single value, use a tuple or the float for it directly. 
Your entries are not in the form of {[keyitem1],[keyitem2]:[Value]}.  You can't do that with dictionaries.  What you have here is {string: [value]}.Dictionaries in Python can't be sorted, as their items have no "order".  You could however store your data in a list, namely in this case a list of tuples:Then you can sort the list, which will sort the items based on the first sub-item it sees in each item.  Or make a new sorted list without touching the order of the original:You could alternatively use key= and __getitem__ to do sorting by value:The fact that your strings look like tuples and your numbers are single-celled lists though makes me wonder if there's something else you can simplify in what you're doing.  Perhaps what you really want are tuple entries in the form of "(1, 'first', 0.011)"?


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
