Natural Text
I have data like ---- stored in a dictionary ---- etc.Now, I have a different kind of value, named value 2 ---- which I again put in a dictionary, How can I merge these two dictionaries in python? The keys, for instance ('sample 1', 'domain 1') are the same for both dictionaries.I expect it to look like ---- etc.
The closest you're likely to get to this would be a dict of lists (or sets). For simplicity, you usually go with collections.defaultdict(list) so you're not constantly checking if the key already exists. You need to map to some collection type as a value because dicts have unique keys, so you need some way to group the multiple values you want to store for each key.Or equivalently with itertools.chain, you just change the loop to:Side-note: If you really need it to be a proper dict at the end, and/or insist on the values being tuples rather than lists, a final pass can convert to such at the end:
You can use set intersection of keys to do this:The above uses dict.get() to avoid possibilities of a KeyError being raised(very unlikely), since it will just return None by default. As @ShadowRanger suggests in the comments, If a key is for some reason not found, you could replace from the opposite dictionary:
Does something handcrafted like this work for you?
Output will be 


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/stdtypes.html#dict.get
https://docs.python.org/3/library/exceptions.html#KeyError
