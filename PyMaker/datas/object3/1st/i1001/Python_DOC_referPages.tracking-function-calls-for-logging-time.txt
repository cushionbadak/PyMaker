Natural Text
Not sure if this is possible in Python, but I'm trying to profile a large function and indicate which parts of it's processing / I/O are slow. I was attempting to write a couple of decorator functions; a top-level function to wrap the function being profiled. And decorators for some of the nested functions to report on their timing if a threshold is exceeded for the top level decorator. I'm not sure how I could share this context across decorators though.Top level DecoratorFor nested functionsExampleHere, if the execution time of search exceeds 100000ms, it would print out something likeI though about passing an object down through the kwargs to keep track of the times, but then all the functions in the call stack have to have **kwargs in their signature, and if theres a way to achieve this without having to do that it would be preferable.
You can define a global stack which keeps the data of each time_frame. It will be set on time_stack before calling the function and will be reset at the end of it. You can use its data if the time has passed the threshold.However, there should be only one time_stack. For multiple time_stack functions, there should be a stack containing stacks.A sketch of this idea is something like:And


Answer URL
https://docs.python.org/3/library/profile.html
