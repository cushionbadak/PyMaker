Natural Text
I am trying to create a list (say B) which increments only when there is a difference in values of another list (say A), for example:[1,1,2,2,4,4] to [0,0,1,1,2,2] or[1,1,1,1,4,4,4,4] to [0,0,0,0,1,1,1,1] etc.The following code does it:Can anybody give suggestions to do it using list comprehensions (preferable using lambda functions)?
Here's a way using nummpy:Or for the other example: Details Get the first difference of the array with np.diffAnd use np.clip to limit the values between 0 and 1:Finally take the np.cumsum and add a 0 at the beginning as the difference will give you an array of length n-1:
Use itertools.groupby:Output
I see numpy solutions, so here we go.digitizefactorizegroupby and ngroupuniqueUsing list comprehension with itertools.accumulate:
You can't do this with a traditional list comprehensions because they can't share a mutable state between iterations.In this case, using itertools.groupby, numpy, or a plain python loop (as in your code) is recommended. BUT if you really wanted to use a list comprehension, one way would be to rely side effects.For example:You are using the list comprehension to create a list called throwaway, but the actual contents of throwaway are not useful at all. We use the iterations to call append on positions. Since append returns None, the following is the actual result of the list comprehension.However, relying on the side effects like this is not considered good practice.
Method using zip and list comprehension and slicingExplanation: this solution, rely on that in Python:any number other than 0 (or 0.0) is evaluated as True when feed to bool functionwhen such need arises True and False values are turned into 1 and 0 respectivelyhow sum function works: in reality something like sum([3,4]) means calculate 0+3+4 thus sum([True,True]) means calculate 0+True+True, which is translated into 0+1+1


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
