Natural Text
My question is related to book "Starting Out With Python" (3rd Edition) by Tony Gaddis. It is Chapter 7 Question 11. Let me excerpt question for reference, then explain my question below that.The Lo Shu Magic Square is a grid with 3 rows and 3 columns. The Lo Shu Magic Square has the following properties: •  The grid contains the numbers 1 through 9 exactly. • The sum of each  row, each column, and each diagonal all add up to the  same number.In a program you can simulate a magic square using a two-dimensional  list.  Write a function that accepts a two-dimensional list as an  argument and  determines whether the list is a Lo Shu Magic Square.  Test the function in  a program.MY QUESTION: Basically, I am asking user to populate this 3x3 grid by using numbers 1-9. However, each number should be different from each other. How can I force user to enter a different number each time in a given range (which is 1-9)? Is there a special function for that? After finishing my "Lists" chapter, I am not capable of doing this in Python. I am also providing my code for this question if it helps any. As of now, user can enter any number, even two-digit etc. Thank you in advance.
You can create new list and add every user input in that list. Then, you can check if he already entered input. Example:Example that you can use in your case:Edit: You already store user inputs in list. You can just check if new input is in your list.
Math is your answer friend:If I misunderstood your question, please let me know!@edit: see comments
You'd simply check to see if it's in the square, I'd guess.If that's inefficient, try having an entered list, and check for the existence in there. I'll leave it to the hardcore guys to determine the efficiency of this approach
You can check to see whether a number is already in the square by comparing each value in each row with the new value.This uses the builtin function any.Or, you could check for containment using in:So:


Answer URL
https://docs.python.org/3/library/functions.html#any
