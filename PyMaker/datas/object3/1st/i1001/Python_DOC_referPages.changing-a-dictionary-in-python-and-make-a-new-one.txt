Natural Text
I have a dictionary in python like this example:small example:the value of this dictionary is a sequence of characters and the characters can only be A, C, G or T. but I want to make a new dictionary in which the keys are similar but values are different. in fact in new dictionary the sequence of characters would have 2 changes:1- it must be reversed (direction). for example "AGT" would be "TGA".2- I want to convert: A -> T , T -> A , C -> G , G -> C. considering 2 above items, AGTCC would be converted to GGACT here is the expected output for the small example:expected output:I am trying to do that in python using the following code:but it does not return what would like to get. do you know how to fix it?
for v in dict iterates the keys, not the values. You should use items to iterate over key-value pairs.The return statement causes the function to return after the first iteration.dict is a bad variable name (d is probably worse, but at least it does not shadow a built-in name)You can use a dict comphrension:or with str.translate:
Here another solution with string replacement methods. This might be faster.the complement method does the inversion by fist setting the string to lower case and then doing the renaming based on lower to upper case.The "[::-1]" reverses the order and the rest is a dictionary comprehension, that creates a new dictionary
Similar to first answer by @DeepSpace, you could map the complements in-place with reversed():You can also rebuild new dictionary:Note: ''.join(map(complements.get, reversed(v))) is just another way of writing ''.join(complemements.get(x) for x in reversed(v)). 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
https://docs.python.org/3/library/functions.html#reversed
