Natural Text
I have a nested list like this:How can I remove sublists that have string which is not A,B,L(remove the whole sublist not only the list that not A,B,L)How can I find the index of sublist that invalid items belong to (in this case is 1)(need the index for further task)This is what I have tried, it can find invalid item but I do not know to find index of the sublistI want the result to be like this:
You can efficiently modify lists inplace using the reverse-delete idiom:any returns True if any of the sublists' first element is not in keep.Alternatively, you can create a new list with a list comprehension:
As @coldspeed suggests, using a set to check if the letters exists allows optimal O(1) lookups. If you don't want to use any builtin functions like any(), first make a function that checks if the first letter of each sublists inner list exists:Or without tuple unpacking if you prefer:Then you can reconstruct a new list with the incorrect lists filtered out:Or as a list comprehension:Note: It is always better to use builtin functions for convenience, since it saves you having to reinvent the wheel and usually leads to shorter, more concise code. 


Answer URL
https://docs.python.org/3/library/functions.html#any
