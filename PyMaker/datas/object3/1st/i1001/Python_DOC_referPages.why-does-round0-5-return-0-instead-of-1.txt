Natural Text
This question already has an answer here:Python 3.x rounding behavior                    9 answers                I recently realized:0.5 is 0!How come.Calculators all say it is 1.Is this a bug or something, why does this do that?And if you use 0.6, it works:But for other numbers:They all are expected, with just using 0.5.
Python uses a round half-even strategy (sometimes called banker's rounding), where a half is rounded to the nearest even number:For the built-in types supporting round(), values are rounded to the closest multiple of 10 to the power minus ndigits; if two multiples are equally close, rounding is done toward the even choice (so, for example, both round(0.5) and round(-0.5) are 0, and round(1.5) is 2).Some calculations will lose precision as they go, so numbers that are logically at the halfway point will end up computing to slight more or less than the half, so round half even won't always apply, but when the half is precisely representable, rounding is always done to the nearest even number.


Answer URL
https://docs.python.org/3/library/functions.html#round
https://docs.python.org/3/library/functions.html#round
