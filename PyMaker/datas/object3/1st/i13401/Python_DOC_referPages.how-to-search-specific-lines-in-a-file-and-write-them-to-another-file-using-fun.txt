Natural Text
My aim is build a log parser which will copy selected lined between keywords I want and write to a file. Since I would have to search between multiple keywords in single file hence I thought of writing a function and using it multiple times in my script.However I am unable to achieve this with following script and getting an error:I am getting following error:
This makes fi a list of lines in the file infile. So when you later call fi.close(), you are trying to close a list, which of course does not work.Instead, you need to close the file, i.e. infile:In general, it’s a good idea to change the variable names in a way so it’s obvious what they contain. infile is a file object which you read from, so that’s okay. outfile is a file name of the file you want to write to, so you should name it outFileName or something instead. fi is a list of lines in the infile, so you should call it maybe inFileLines.You should also avoid having to close file objects manually; instead, use the with statement to make sure that they are closed automatically:Finally, there is another issue with your code: re.findall('search1' , str(line)) This will search for the string 'search1' in the line; it will not respect the values that are being passed to the function and are stored in the search1 (and search2) variables. So you need to remove the quotes there: re.findall(search1, line) (you also don’t need to convert the line to a string).Also, using re.findall() if you only evaluate its truth-value is not really the best way. Instead, use re.search which only returns the first result (so for really long lines, you wouldn’t keep searching if you already found a result). And if search1 and search2 won’t contain actual regular expressions but just strings you want to find in the line, then you should also just use the in operator:One final note: File handles should always be closed from the same level they are opened from. So if you open a file handle inside a function, then that function should also close it. If you open a file on the outside of the function, then the function should not close it. It is the opener’s responsibility to close the file, and for other instances to close files may result in wrong behavior, so you shouldn’t do it (unless it’s explicitly documented, e.g. a function doSomethingAndClose may close the file).Using the with statement generally avoids this, as you never call file.close() manually, and the with statement already makes sure that the file is correctly closed.If you want to consume a file multiple times, then you would have to seek to the beginning in order to be able to read from it again. In your case, since you are using infile.readlines() to read the whole file into memory, it’s a better idea to just read the lines once from the file and then reuse it for multiple function calls:


Answer URL
https://docs.python.org/3/library/io.html#io.IOBase.seek
