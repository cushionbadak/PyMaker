Natural Text
So, I have been making a Xs and Os game, as a side project in Python 3.4, and I have encountered an issue. Whilst, it works, it does not save the board, since I have to define the slots in the def game():If I define the slots outside of the def game():, even if I globalize them, it comes up with the error, slot 1 (etc.) referenced before definition or whatever.This is my code so far, and since I want a loop of turns, I have to put the game in a def game():If you run it, you'll see what my problem is, since I need to make a while loop, inside the main defining of game() that is while cond1 == (1)so basically, the slots remain that way whilst a condition is true, otherwise it will not save the board between turns, and I can't define the cond1 outside of the main def game(): or, even the slots without the error referenced before defining, even if I globalize them. If I put the main defining of the slots outside of the def game(): when it prints the slots, to show the current state of the gameboard, it goes to the error variable referenced before defining, like I said even if I globalize them, even without globalizing them in the def globalvar():, just normally, I still get this problem! If I define the slots at the start of the def game(): It doesn't save the board (because it redefines the slots as those, obviously) and if I put the while loop on it at the start, it just stops, and stays as it is, after print (gameboard), it does nothing, and apparently the program is still running, since it is, because the while loop needs to be true, or have an else statement after it, which doesn't work, and just breaks it! EDIT: I tried using quotes around the slotkeeper = ("1"), inside the brackets, and changing while slotkeeper == (1): to while slotkeeper == ("1"), still no change. D:EDITING THE EDIT: It does make a difference, but instead of getting an error message, it just gets stuck, even though I have globalized the variable, slotkeeper and set it to ("1"), and in the def game2(): I set it to ("0")afterwards!
You're badly misunderstanding how Python's global statement works. You don't use it to declare a global variable. There's no need to declare anything, any assignment made at the top level of your module creates a global variable.Rather, you use it in a function where you want to be able to modify a variable defined outside the function. So, move the global statements you currently have in your globalvar function (where they don't do anything useful) into your game function. This will let your code in game modify the global variables (and avoid the exceptions you're getting).Note that using global variables is usually a symptom of poor design. This is especially true when you have a whole lot of them, as you do  in your program now. As a start towards a better design, I'd strongly suggest using a list or other data structure to hold your board data, rather than a bunch of separate variables.
We use global keyword to access a global variable, not to declare it. Python is a dynamic language, declaration of variables don't make much sense anyway. Secondly, why do you need so many global variables anyway. I'm sure you could figure out some other elegant way.Thirdly, please don't use so many if/elif statements, use a dict instead, that would be much more pythonic -something on these lines.Fourthly, what's with all this "Drawings" representing 'X' position.I recommend, checking out code of some current implementations and then craft your own. It might give you some pointers. You can check this one out - Sample tic tac toe gist


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-global-statement
