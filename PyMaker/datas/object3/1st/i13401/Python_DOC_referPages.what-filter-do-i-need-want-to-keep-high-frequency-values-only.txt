Natural Text
I am asking this question because I am not quite sure which filter I should be using. Mine is simply a signal made up of discrete values as such s = [1 2 2 2 3 4 2 4 3 4 5 3 2 3 3]. Then I would like, per window size, a filtered signal. So e.g. if I use a window size of 5 for s then I would get; s_filtered = [2 2 2 2 2 4 4 4 4 4 3 3 3 3 3]. Hence I want to keep the values that are of the highest frequency in each block. For indices 0:4 (window size 5) the values of highest frequency is 2, so I want my "filtered" signal (if that is indeed the correct terminology) to have 2 in all indices 0:4 for the "filtered" signal.Currently I am using just a median filter, but I do no think this is the correct approach. Here is some python code to demonstrate what I am doing (but as said, which I think is wrong).Where the red line is the filtered signal for a window size of 99.SOLUTION:
You can use grouper function from itertools recipes to group your array based on a specified length and then find the most common item using collections.Counter.most_common() method and use itertools.repeat to repeat your item 5 time and at last chain the repeated objects with itertools.chain.from_iterable : Demo :


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
