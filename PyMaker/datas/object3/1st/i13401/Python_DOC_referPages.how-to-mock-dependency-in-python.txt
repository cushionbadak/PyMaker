Natural Text
I am new to python unit testing framework and lot of confusion in mocking dependency.I am trying to write unit tests for below member function of a class, (check_something()):How do we eliminate dependency ?Need to mock Node() ?How do we make sure abc is assigned with X_PLATFORM ?How to assign value 1 to variable no_of_nodes? which is in turn derived from Node() object.I tried writing below unit test. I am unable to check for fail and pass condition. I am not sure whether it is correct or not. Validation class uses Node() Class object and Node class uses some other class.How to make sure exception is raised or not depending on the condition?
Yes, you'd mock anything external to the unit of code under test. Here that means the os.environ dictionary and the Node() class.The patch needs to be applied to the module your code is in; @mock.patch('somefile.Node', spec=True) is correct if somefile is the same module as Validations; see the Where to patch section as to why that is.I'm not sure that using spec=True is all that helpful here; your Node attributes are all instance attributes created in Node.__init__, so they are not available on the class, which is what informs the spec. See the section on autospeccing on how to overcome that if you really want to set a spec.abc is set from os.environ, you can use the patch.dict() object to patch that dictionary for your needs.The xyz = len(xyz.some_type_var) is simply handled by either setting the some_type_var attribute to an object with the right length, or by setting xyz.some_type_var.__len__.return_value, since it is the xyz.some_type_var.__len__() method that is called for the len() function.So, to test, you'd do:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
https://docs.python.org/3/library/unittest.mock.html#auto-speccing
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.dict
