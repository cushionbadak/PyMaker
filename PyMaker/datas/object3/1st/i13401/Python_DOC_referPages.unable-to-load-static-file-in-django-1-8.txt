Natural Text
Here the relevant configuration for settings.py:In  project urls.py; in marcador app urls.py;in templates/base.html (extract);Here my directory structure (project called marca and application is called marcador);Here a printout of the variable;Content the page is diaplayed correctly but bootstap is not loading because the server return the 404 errors;I have read a few posts on the same issue but still can't get it working when I print the BASE_DIR variable I can see that the path is correct.The only way I can get this working correctly is when I copy the bootstrap static files in;I just don't get it and spent quite some tim on it already.Any suggestion?for information I am doing this tutorial http://django-marcador.keimlink.de/en/
You should take a look at Django documentation. There is a specific page about managing static files: https://docs.djangoproject.com/en/1.8/howto/static-files/During development your project urls.py should be:But in production, a common practice is to use you http server to handle your static files. The answer for a production configuration is to broad since it will depends on your stack.
I know this is too late to answer but I found that if I use STATICFILES_DIRS like below and comment STATIC_ROOT, it works correctly
Your STATICFILES_DIR contains a wrong value. You use os.path.join(BASE_DIR, '/static'). Citing the documentation for join:If a component is an absolute path, all previous components are thrown  away and joining continues from the absolute path component.Please have a look at the following code example:Solution: remove the leading slash in '/static': os.path.join(BASE_DIR, '/static')
Let's see...When you create a new project marca, you get a subfolder marca that contains your settings.py, wsgi.py etc. Usually, I create a static folder here for my non-app specific static files. I can then have a settings.py PROJ_DIR to target that e.g.Now I have a PROJ_DIR pointing at my subfolder marca in addition to BASE_DIR. Now to more settings.Files in STATIC_ROOT will be served at STATIC_URL (/static/ in your case), usually by a separate static file server like nginx. It should be empty initially. To get your files into STATIC_ROOT, run which will look in your app static folders and all paths in STATICFILES_DIR and create a directory structure ready to be served.In your template, base.html, you'll need to add I expect you'll get an error if you don't.Basically, I'm proposing this new structure to you.


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.join
