Natural Text
I don't know a great deal about memory space allotment. For every variable there will be a memory space allotted, so in the case of boolean variables in Python what value will be stored in the memory space of that variable?
Note: The following description applies to the CPython reference interpreter for Python. The implementation details will vary in other interpreters, e.g. PyPy, Jython, IronPython, etc.Python's bool objects are singletons. So if you say:Then what you have is two references (named a and b) to the singleton instance of True; aside from the pointer used to hold each reference, no additional memory is allocated. For the instance itself, as it happens, bool is a subclass of int, so the instance has the same layout as a Python int with a value of 0 or 1. The object itself differs slightly from Python 2 to Python 3, but it's basically the standard Python object header (including a reference to the class type and a reference count), plus a 0 or a 1 (as a signed size_t in Python 2, or a single element array of 16 or 32 bit values in Python 3).
"Boolean values are the two constant objects False and True" i.e., True is True and False is False and it is true for any Python 3 program (for any implementation, not just CPython).There are only two boolean objects, no matter how many names may refer to them in a Python program.The size of an object may depend on implementation e.g., here's a result on my machine:where sys.getsizeof() returns the size of object in bytes.in the case of boolean variables in Python what value will be stored in the memory space of that variable?You could look at the memory on CPython:Here are the corresponding definitions in CPython. bool is an int subclass; here's how int is represented in CPython.


Answer URL
https://docs.python.org/3/library/stdtypes.html#bltin-boolean-values
https://docs.python.org/3/library/sys.html#sys.getsizeof
