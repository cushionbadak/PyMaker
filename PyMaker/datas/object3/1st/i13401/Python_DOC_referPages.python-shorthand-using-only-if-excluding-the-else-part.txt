Natural Text
Was using the shorthand for if/else statements, and that works fine by the way.Was trying to omit the else part but got error!
Perhaps you can use:It gives you the same boolean output though, True/False.
No, the else part cannot be omitted, because an expression always has to produce a value, and a conditional expression is no exception here. Without the else, what would found_target be set to otherwise?If you only want to set found_target if the condition is true, just use a regular if statement:Note that the == comparison operator already produces a boolean value, so the first expression can be simplified to:
You cannot use the conditional expression (the short-hand you are talking about) without an else.Every expression in python needs to return something , this includes the conditional expression . But without the else part Python would not know what to return in case when the condition fails.
You are trying to use a conditional expression here but that’s simply not how it works. The syntax there requires the use of else. It’s more like the ternary ?: operator in other languages.If you want to execute a statement conditionally, you have to use a normal if block:You can put that in a single line here (not recommended though)If you also want to change found_target to False if the condition is not true, then you best assign the result to the variable directly:And if you don’t want to overwrite found_target’s old value if the condition is not true, you can also do the following using Python’s or operator:This is then equivalent to the if statement above.


Answer URL
https://docs.python.org/3/reference/expressions.html#conditional-expressions
