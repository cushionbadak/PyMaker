Natural Text
I'm running into a problem using the subprocess module to open completely independent processes through Python. I need the process spawned by the python script to live on even if the python program dies. I've noticed that subprocess creates a child process and nohup is not keeping it alive. It needs to work both on Windows and Linux, so I'm not sure if os.fork will work.The structure I am aiming for is a main program running at all times that calls other programs, and if the main program dies I want the spawned programs to live on.Main programSpawned ProgramThe process tree looks like this:MainProgram|_CalledProgramand I want it to look like:  MainProgramCalledProgramAny ideas? Should I even use subprocess for this?
I couldn't find a true universal way to start the program independently as it's own process. I managed to get what I want by checking to see if it is a *nix OS and appending 'nohup' to the beginning if true. Windows does not kill child processes so it worked out.
Use Multiprocessing library instead and run the process as daemon.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.daemon
