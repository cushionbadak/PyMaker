Natural Text
I have a file where each line has a pair of coordinates like so:The code that I'm using to read them in is:This reads in all 78 lines into a list, but it reads them in as strings, so when I print them out it shows up as:(Imagine the ... as 76 more coordinates like the first and last)How can I read in each of these coordinate pairs as a list so that I am left with a list of 78 sublists with 2 floats inside each sublist?
For each line, you need to:Read it... using a for loop to iterate over the fileStrip whitespace including newlines... using str.strip()Lose the first and last characters (brackets)... using string slicing: [1:-1]Split on the substring ', '... using str.split() and a list comprehension.Convert the resulting strings into floats... using float()Add each pair of floats to a list... using list.append()That looks like this:After which, m_verts looks like this:In general, you're better off iterating over the lines of a file than reading them all into a list at once with methods like splitlines() ... it's more readable, and with large files much more efficient.Also, notice that I've used the more pythonic under_score style to name m_verts, rather than your camelCase style - and that there's no need to specify 'r' when opening a file for reading.
even better way than @ZeroPiraeus solution use ast.literal_eval which can evaluate any literal of python (here a list literal compound of float literal)but for construction of the list even better is list comprehension


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
