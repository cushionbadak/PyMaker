Natural Text
I have two list comprehensions where conditions are defined in different places.However if i do this:it works.Now the confusing part is how the order is evaluated. What is the difference?
You have two different concepts confused here.An expression like x**2 if x%2==0 else x**3 is a conditional expression. They can be chained, but the else is not optional - because this is a self-contained expression that evaluates to a single, specific value. The else x**3 is required because Python has to know what the expression evaluates to whenever it is not the case that x % 2 == 0.In a list comprehension, when you write things like [x**2 for x in range(10) if x%2==0], the if clause is used to filter the x values found in range(10), for which elements of the resulting list are computed. There is no else permitted here because the purpose is entirely different.You can mix and match: [x**2 if x%2 == 0 else x**3 for x in range(10) if x%3 == 0]. Now if x % 3 == 0 is being used to decide which x values to compute a result for, and if x%2 == 0 is being used to decide whether to use x**2 or x**3 as the computed result for those xs.
You are confusing two completely different constructs.Conditions for list comprehensions can be defined only at one plance, at the end, and they act like filters:The other construct you see is python's version of the ternary operator. It's not a filter, it just selects one of the expressions based on the logical value of a third expression:
from the docs:A list comprehension consists of brackets containing an expression  followed by a for clause, then zero or more for or if clauses. The  result will be a new list resulting from evaluating the expression in  the context of the for and if clauses which follow it.so, by definition the if comes after the for.
For example, this:Is the equivalent of this:I.e. there is no if statement, but rather an if expression. So there's always something appended to the list on every step of the for.However when you do this:And if statement will be used. And not all steps will append to the list. Translated into:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#nested-list-comprehensions
