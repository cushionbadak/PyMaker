Natural Text
I am having trouble using json.loads to convert to a dict object and I can't figure out what I'm doing wrong.The exact error I get running this is Here is my code:I'm pretty sure that the error is occuring at the 2nd to last line but I do not know what to do to fix it. Any advice would be appreciated.
json.loads will load a json string into a python dict, json.dumps will dump a python dict to a json string, for example:So that line is incorrect since you are trying to load a python dict, and json.loads is expecting a valid json string which should have <type 'str'>. So if you are trying to load the json, you should change what you are loading to look like the json_string above, or you should be dumping it. This is just my best guess from the given information. What is it that you are trying to accomplish?Also you don't need to specify the u before your strings, as @Cld  mentioned in the comments.
I encountered another problem that returns the same error.Single quote issueI used a json string with single quotes : But json.loads accepts only double quotes for json properties : Final comma issuejson.loads doesn't accept a final comma:Solution: ast to solve single quote and final comma issuesYou can use ast (part of standard library for both Python 2 and 3) for this processing. Here is an example :Using ast will prevent you from single quote and final comma issues by interpet the JSON like Python dictionnary (so you must follow the Python dictionnary syntax). It's a pretty good and safely alternative of eval() function for literal structures.Python documentation warned us of using large/complex string : Warning It is possible to crash the Python interpreter with a  sufficiently large/complex string due to stack depth limitations in  Pythonâ€™s AST compiler.json.dumps with single quotesTo use json.dumps with single quotes easily you can use this code:ast documentationast Python 3 docast Python 2 docI hope it helps.
replace all single quotes with double quotesreplace 'u"' from your strings to '"' ... so basically convert internal unicodes to strings before loading the string into json>> strs = "{u'key':u'val'}">> strs = strs.replace("'",'"')>> json.loads(strs.replace('u"',''))
All other answers may answer your query, but I faced same issue which was due to stray , which I added at the end of my json string like this:I finally got it working when I removed extra , like this:Hope this help! cheers.
used ast,example


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
https://docs.python.org/3/library/ast.html
