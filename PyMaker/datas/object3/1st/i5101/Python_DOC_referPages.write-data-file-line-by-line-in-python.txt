Natural Text
My code generates a 2 dimensional array, which I want to save into a file. This can be easily done using numpy.savetxt as shown in the sample code. But I wish to do something different. In the following code I generate random walks for 5 walkers. For each walk, I generate positions of the walker for some time and store the positions in a list. After each walk is completed , I add the whole list containing walker's positions, as a new row to an already existing array S_data. At the end of the next walk (or iteration), I add the list of position for the next walker and so on.. So by the end of each walker's  iteration, a new row is added to S_data. At the end of all walks , this S_data is finally saved to an external file using numpy.savetxt . What I wish to do is, at the end of each walk, instead of adding the position list to S_data, I want to write it to an external file. Again at the end of next iteration, I will add the position list for the next walker as a new line to the external file, and so on. I want to do this because, I will have to run this code for large number of walkers and also for longer times, so then my code will consume lot of RAM, which I want to avoid. Is there a pythonic way to export lists to the same external file at the end of each iteration, without overwriting the previous data?
If I understand correctly, it seems like you are trying to append to a file after each iteration (if your data file already exists), if so use: f = open("data_file.txt", "a+") The "a+" indicates you wish to append with any subsequent calls to write. Docs here. If you are doing a bunch of iterations, be sure to open the file outside of any loops.Of course you could also loop to write each element of the new row after each iteration and then just write a newline with something like this:Something like this does what I think you are getting at:output.txtAs for efficiency, I'm pretty sure the way you were originally trying to write is better. See this post.


Answer URL
https://docs.python.org/3/library/functions.html#open
