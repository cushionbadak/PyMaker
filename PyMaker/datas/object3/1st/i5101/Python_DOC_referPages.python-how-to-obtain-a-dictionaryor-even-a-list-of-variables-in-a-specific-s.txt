Natural Text
So, the title pretty much says it all.for instance let's look at the below example code:to reiterate what I said in the comments in the code, essentially is their any way I can get a list of all the variables local to a 'child' scope? I know functions are shut off, but if their is no way to do this is their any more complicated code that could achieve this and I could integrate it into a function or class if necessary.EDIT:To elaborate further; here's the situation i'm in.Essentially, I am creating a module and the user must create some type of function that they list all of they variables they would like to declare to be used to modify a css file. Essentially, I would like to allow the user to not have to type "return locals()". I want to achieve it by having the end-users wrap the above example function in a decorator that will do the equivalent of returning locals() of the exact scope I want. The decorator does not work for me because it is in an outer scope.TO BE EVEN MORE CLEAR:I need a decorator/function that wraps another function(i.e. a decorator), that can access and create a list of a child element.currently users need to do this:Info for @aguy and others wishing for  more info.The dictionary/list that I am obtaining via your guys' tips will be sent to this function to do the real job of the program.(If I were to start using lists, i'd need to convert to a dictionary but that's no problem for me to solve.)The dict of variables is used with this function to "compile/compyle"(Pun on the word 'Python' + 'compile) and is insert in the "variables" parameter. e.g. you execute the function like this.
I can't see any way to do this without getting pretty deep; what follows is the simplest solution I've come up with.how it worksUsing the ast module, we go through the code of the given function and find all the assignments. These are evaluated in a given namespace and this namespace is returned.the codeusageoutput
I wonder if such a crude solution as I provide here might be useful to you. Note that I haven't tested it on all cases, so it might be a bit rough. Also, it returns everything as a string, a behavior which you might want to further change.Define the function:Then to use it:


Answer URL
https://docs.python.org/3/library/ast.html
