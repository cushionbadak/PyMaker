Natural Text
I want to know how to wrap a C++ object with Python Extension API (and distutils) without external tools (like Cython, Boost, SWIG, ...). Just in pure Python way without creating a dll.Note that my C++ object has memory allocations so destructor has to be called to avoid memory leaks.I just want to do somethings like that in Python :
Seems that the answer was in fact here : https://docs.python.org/3.6/extending/newtypes.htmlWith examples, but not really easy.EDIT 1 :In fact, it is not really for wrapping a C++ object in a Python object, but rather to create a Python object with C code. (edit2 : and so you can wrap C++ object!)EDIT 2 :Here is a solution using the Python newtypes.Original C++ file : Voice.cpp.Original h file : Voice.h.C++ Python wrapper file : voiceWrapper.cpp.distutils file : setup.py.python test file : test.py.and magic :Output is :Enjoy !Doom
You may like to start with Extending Python with C or C++.You can use standard Python modules source code as examples.The value provided by Boost.Python, SWIG, etc, is that you do not have to know/understand all the low level details because they handle them for you. This is why people use them.


Answer URL
https://docs.python.org/3/extending/extending.html
