Natural Text
For this code when I change x to k using change() and then call self.co it does not return the updated value of self.x. How do I fix this kind of problem generally (this is a basic example)? 
You did not change the self.co attribute. You are assigning to self.co only when initialization of scope occurs, that is, when you call scope().Also Python doesn't keep references like pointers in c so changing one would not change the other. To prove this run this code:The id are the memory location of the object, and you can see it first starts out the same, but then when you change self.x the memory location in the co doesn't changeYou have to update self.co in your change(). If you want a dynamically changing co without manually updating it, write a method to retrieve co.Option 1:Option 2: You can add to method 2 with a decorator @property to not make it a function call but at this point, I have no idea what your requirements are.
You should define self.co as property of class via using @property decorator. For example:Sample Run:Here, on calling self.co will return the dynamic value of (self.x, self.y) each time is called.Issue with your code: In your code, when you initialized self.co = (self.x,self.h) in your __init__, a new tuple self.co was created holding the value of (self.x, self.y) (which was not holding the reference to these variable). Hence, when you updated self.x, it was not updated in your tuple object.
You have to call function with the name it is definedSecond you can use global keyword alsoFor example


Answer URL
https://docs.python.org/3/library/functions.html#property
