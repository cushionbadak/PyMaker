Natural Text
I am trying to convert the following XML to CSV. The catch is every single entry might not have a value so it returns a NoneType. For example, in the XML shown below not every "entry" will have a "rule". If this happens I would like the CSV file to contain either nothing or a generic value such as "EMPTY". I would like the CSV file to look something like this:By using the list comprehension shown below I was able to avoid the NoneType error. However, it appears that formatting the data in the CSV is where I need some assistance.
You are not handling your entry subelements; you are merely turning each entry to text and removing the XML tag markup. You need to produce a list or dictionary with each subelement entry teased out separately.If you produce a dictionary of the nested elements, then the csv.DictWriter() class could handle filling in empty columns for you, without additional coding:Here, the restval argument tells the writer how to handle missing values in each row. header_list is passed in as the field names, so the writer knows what keys to expect in each row dictionary.entry_to_dict() simply turns each nested element in an entry into a key-value pair in a dictionary, with the tag.get_text() function doing the work of turning element contents into text. TheFor your demo XML data, this produces:This doesn't actually contain any empty elements, but when I add some, you can see that EMPTY is used to fill those in:As a final note: consider installing the lxml library, and use the xml parser in BeautifulSoup:This ensures that your XML is parsed correctly at all times (the HTML parser is fault-tolerant in ways that XML should not be, and is case-insensitive, which could cause issues with mixed-case XML data).


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictWriter
