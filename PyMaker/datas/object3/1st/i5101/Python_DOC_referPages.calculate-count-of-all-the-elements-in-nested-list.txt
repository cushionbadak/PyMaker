Natural Text
I have list of lists and would like to create data frame with count of all unique elements. Here is my test data:I can do something like this using Counter with for loop as:But how can I have result of this loop summed up into new data frame ?Expected output as data frame:
Here is one way.For output as dataframe:
In terms of better performance, you should be either using:collections.Counter with itertools.chain.from_iterable as:OR, yo should be using collections.Counter with list comprehension (requires one less import of itertools with same performance) as:Keep reading for more alternative solutions and the performance comparison. (skip otherwise)Approach 1: Concatenate your sublists to create the single list and find the count using collections.Counter.Solution 1: Concatenate list using itertools.chain.from_iterable and find the count using collections.Counter as:Solution 2: Combine list using list comprehension as:Solution 3: Concatenate list using sumApproach 2: Calculate count of elements in each sublist using collections.Counter and then sum the Counter objects in the list.Solution 4: Count objects of each sublist using collections.Counter and map as:Solution 5: Count objects of each sublist using list comprehension as:In all the solutions above, my_counter will hold the value:Performance ComparisonBelow is the timeit comparison on Python 3 for the list of 1000 sublist and 100 elements in each sublist:Fastest using chain.from_iterable (17.1 msec)Second on the list is using list comprehension to combine the list and then do the Count (similar result as above but without the additional import of itertools) (18.36 msec)Third in terms of performance is using Counter on sublists within list comprehension : (162 msec)Fourth on the list is via using Counter with map (results are quite similar to the one using list comprehension above) (176 msec)Solution using sum to concatenate the list is too slow (526 msec)
Here is another way to do it, using itertools.groupbyConvert it to dict like:To convert it to dataframe use
The function "set" keeps only the unique elements in a list. Thus, using "len(set(mylinst))", you get the number of unique elements in your list. Then, you only have to iterate over it. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/functions.html#sum
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/functions.html#sum
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/itertools.html#itertools.groupby
