Natural Text
I'm trying to catch an exception inside of a function, and handle it outside of the function in the top level functionality. I found a lot of great resources for creating a user defined function, as well as how I can catch them using raise, however it's not working out how I would expect.I have defined two functions, DontThrow and MyException. Nothing ever catches DontThrow so it should never be handled, but yet the second my code gets to the class delcaration, it does exactly why I titled it not to do! It's like python is reading from the top down doing everything regardless of if it's caught anythingHow can I cause my exceptions to only handle if they are raised?Output:You shouldn't see this
Python exceptions are classes, and classes are executed at the time of definition.For example consider this code:In this test is never instantiated but the print statement will be called. I suspect this is a surprise for you, but it is the cause of the behavior you see.If you want to have your exceptions quit the program have that behavior in the except block, not in the exception itself.How this would work with your current exception hierarchy would be something like this:Note that an uncaught exception will exit the program anyway, so if something isn't caught there's no need to try to call sys.exit() directly
It is depend on the order of class definition.If you change the order like below than the output is like Bad exception


Answer URL
https://docs.python.org/3/reference/executionmodel.html
