Natural Text
Using Python 3.5, requests==2.18.4, Flask==0.12.2, urllib3==1.22I have a method some_method in my main server.py file, that is supposed to make a POST to some url with some data:The server file defines: app = Flask(__name__), and some_method is called from @app.route(... methods=['PATCH']).If this method throws an error, the route will eventually return a 500.Tests are run from a test file importing the app with import server and app = server.app, using unittest, and importing mock.patch.I am able to test the overall app behavior, with a test that shows that the app route behave as expected when the method returns an error and seeing that the route terminates at the right spot:However, I would really like to have another test to test some_method in isolation:Mock requests.post to throw requests.exceptions.ConnectionErrorShow that the method logs an error (I know I can mock my app.logger and assert that it logged during the execution)
Mock the requests.post function, and on the mock set the side_effect attribute to the desired exception:From the linked documentation:This can either be a function to be called when the mock is called, an iterable or an exception (class or instance) to be raised.[...]An example of a mock that raises an exception (to test exception handling of an API):(Bold emphasis mine).This is also covered in the Quick Guide section:side_effect allows you to perform side effects, including raising an exception when a mock is called:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
https://docs.python.org/3/library/unittest.mock.html#quick-guide
