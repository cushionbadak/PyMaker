Natural Text
I am having trouble coding the user input variable DOB as a while loop and showing an error if the user does not input dob as dd/mm/yyyyAny suggestions?
There are a lot of errors here. So bear with me if I seem to be overwhelmingly negative.is expecting the input string to be in week, but the input() call actually assigns it to DOB. So you will get NameError: name 'week' is not defined. And you have specified the date format with doubled slashes, %d//%m//%Y, as if the slashes needed to be escaped, but they don't, so you are asking the user to enter 12//02//2018 which no user is likely to guess, especially as your error prompt does not say this.Next, you have try..except..else. This doesn't do what you seem to think it does. From the tutorial:The try â€¦ except statement has an optional else clause, which, when present, must follow all except clauses. It is useful for code  that must be executed if the try clause does not raise an exception.In other words, even if the user does succeed in entering a "valid" date, double slashes and all, your code issues the message Error: must be format dd/mm/yyyy. After that, if the user makes an error and presses 1 to try again, your exception handler calls header(), which doesn't exist, and so the program will fail. And if the user presses 0 your exception handler attempts to call sys.exit(), but there is no import sys, so that will also get a NameError. And if even with import sys, it will still not do what you want, because you omitted the parens. Without them, you are naming the function, not calling it.And lastly, you have a while True loop but you never exit from it, even if the user does enter a valid date.With all of these things fixed up, the code looks like this:
You are saving the input as variable DOB but using variable week while testing against the given format inside datetime.datetime.strptime:So, you can do:Also, make the datetime format specifier as %d/%m/%Y, without the redundant /s in between.Another thing is, you have not imported sys but used sys.exit at the end. So you need to: import sysUse exit status you want in the function call e.g. sys.exit(0) (the default is 0 BTW when no integer is given) for exit status 0 (means success, anything else indicates failure: typically between 1-255). Just doing sys.call refers to the function object, does not call itAs a side note, as your DOB is not a constant, you should make it snake_case e.g.:


Answer URL
https://docs.python.org/3/tutorial/errors.html
