Natural Text
I'm new to Python and could not find a solution for the following propblem:I want to write python script, which let's say opens the cmd and executes several commands in a for loop. Starting the cmd (e.g. subprocess.run())and predefining the command happens with Python (v.3.6).But how can I then write the command from Python into cmd? And in consequence? How can i get a signal, whether my cmd command is executed so i can start a new command (like in a for loop)Thanks for the help and with best regards,Andreas Buyer
You probably wanna use Popen.communicate(input=None, timeout=None) and set the shell arg to true. Then you wanna wait on the process output stream for the response to your command. Note: Popen.communicate requires the input to be byte-encoded. The output of Popen.communicate is also byte encoded, so you need to do a str.decode() on it to extract the encoded strings.All of this is fully documented in the Python API. I would suggest you read the manual.Or, you could use a library like this one which wraps all of this stuff for you.Output and comparison to actual 'ls' output:Any additional commands you need to send to popen can be sent in proc.communicate.If you REALLY want to communicate to an interactive shell, Popen.communicate() allows for a ONE TIME write to stdin and read from stdout/stderr. After one call to Popen.communicate(), the input/output/error streams are closed by subprocess. IF YOU WANT A FULLY INTERACTIVE SHELL, you MUST either write one yourself, or use a library, like the one I linked.Output and comparison to actual 'ls', 'ps'


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate
