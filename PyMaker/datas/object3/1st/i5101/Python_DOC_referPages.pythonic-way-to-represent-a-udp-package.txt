Natural Text
I am looking for a pythonic way to represent a UDP package consisting of different fields with different length and so.I saw bitstring, but the process of defining all the fields and their length is quite cumbersome. I probably need to create a class and create a variable for each field and length and also check that they don't get overwritten by larger numbers and so on.To me that sounds like a job for a library but I could not find one.Does anyone know of such a library suitable for this task?
The first way is to use a "batteries included"-module like:scapydpktpysharkconstruct ...etc.Now if you want to create a custom packet, two ways to do it are eitherusing scapy to create a new custom protocol, or you can use ctypes and struct like so:The above is a low-level, simple and as minimal as possible example-representation of the UDP header(untested):Though that can a bit difficult to be used in real-world scenarios, with complicated protocols, since it demands a lot of technical work, error handling etc... in order to be a complete packet decoder.
You can use scapy for packet manipulation


Answer URL
https://docs.python.org/3/library/struct.html
