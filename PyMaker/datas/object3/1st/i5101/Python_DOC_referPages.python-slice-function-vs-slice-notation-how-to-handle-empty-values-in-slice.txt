Natural Text
The docs cover 3 usages of the slice() object:obj[:stop] = obj[slice(stop)]obj[start:stop] = obj[slice(start, stop)]obj[start:stop:step]  =  obj[slice(start, stop, step)]But how to do this when I don't know the length of the object in advance? Setting stop to a very high value, like 2E32-1?obj[start:] =  obj[slice(start, 2E32-1)]?obj[:] =  obj[slice(2E32-1)]?
You can set the stop argument to None to continue indefinitely.
You may use Python's slice() function with all the capabilities provided by the slice notation. Internally, both slice() function and the slice notation uses the slice object.In your slice notation your_list[start:stop:step], where you pass empty value, you may get the equivalent slice function slice(start, stop, step) via passing that value as None. For example:usage of only start with empty endusage of only end with empty startboth start and end as empty (copy of list)Few more example:


Answer URL
https://docs.python.org/3/library/functions.html?highlight=slice#slice
https://docs.python.org/3/library/functions.html#slice
https://docs.python.org/3/glossary.html#term-slice
