Natural Text
I'm in the process of becoming familiar with Python and I'm looking at basic manipulation of "lists" currently.So here's my problem.I have a list of lists which contains mostly "string" class elements aside from two integers:Suppose I want to remove only the integer class element so I'm left with an otherwise unaltered list of lists containing only the string elements:i.e. My original list is the following:and I want this to become the following:Thus far I've found out how to remove integer class element from a singular list with the following:But I'm struggling to get my head around how to apply this to a list of lists.I was thinking of  making a for loop to read each list within the multilist and apply the above code to each, but I'm not sure how to do this.Any help with this will be much appreciated.Many thanks in advance.
Assuming that you only have one level of sublists (and your last element is a list and not a string), you could use a nested list comprehension like so Outputs:If your last element is intentionally a string (or could possibly be an int), I would scrap the messy one liners and just write a simple function like soNote that this is designed to simply remove all int types- other types will remain. If you want to only retain strings and discard all other types, you could use stop using the negation and have
You approach is completly fine, but you need to do it for every sublist by using the map() function or a list comprehension.Instead of using filter() and map(), you can also use the equivalent list comprehension method.
UPDATE: just for completeness if you outer list also has integers and you want to remove those too:
A flexible recursive solution for any number of nested levels (even varying depths) and for both lists and tuples (output will be list though):Output:See this code running on ideone.com


Answer URL
https://docs.python.org/3/library/functions.html#map
