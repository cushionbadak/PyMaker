Natural Text
I building SPA on Django and I have one huge function with many if statement for checking state name of my object field. Like this:    and so on. I reading nice book "Fluent python" now, and I mention about @singledispatch decorator, it looks so great, but it can overide function only with diferent type of parametres like str, int, etc.Question is, if there in python or Django way to separate logic like in my huge function with overided function like singledispatch do? 
There is, though you have to write it. One possibility is to create a descriptor that does the dispatching based on instance.state or any chosen state_attr:https://docs.python.org/3/howto/descriptor.html#functions-and-methods:To support method calls, functions include the __get__() method for binding methods during attribute access. This means that all functions are non-data descriptors which return bound or unbound methods depending whether they are invoked from an object or a class.In your stateful class you can then create a dispatcher and register methods:Let's see it in action:Note that this is a quite evil method of dispatching based on state, since for future readers of your code the whole mechanism will be hard to follow.Another method of dispatching on textual state is to encode the state in your method names and choose the correct method based on that in a dispatching function. Many python classes use this pattern (ast.NodeVisitor for example):


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/howto/descriptor.html#functions-and-methods
https://docs.python.org/3/library/ast.html#ast.NodeVisitor
