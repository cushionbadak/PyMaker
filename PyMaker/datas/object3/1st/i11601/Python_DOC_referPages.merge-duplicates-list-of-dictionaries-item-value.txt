Natural Text
I have following list of dictionaries with a duplication in value (coach).I want to merge duplicates items based on coach name. How can i achieve this?
You can do this using groupby from the itertools module and itemgetter from the operator module. Think of the grouby operation as a way to return a consecutive keys and groups from your record. In order for it to work you need to your "items" in the list to be sorted by "coach" value that is what the sorted function does here. Of course you need to supply a key function in order to customize your sort order and one way to do this is using a lambda expression like this sorted(d, key=lambda _: _["coach"]) but I prefer the alternative approach which is using sorted(d, key=itemgetter('coach')).That being said you also need to supply the key argument to groupby which is a function computing a key value for each element as mentioned in the documentation, and again you can use key=itemgetter("coach").Demo using lambda expressions as key function:
One possible solution is to build an auxiliary dictionary with the coach as key and list of players as valueaux is now:then you can build your return value with a list comprehensionWhich is
Like this:But here the use of dictionnary becomes strange... What about class ?


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/operator.html#operator.itemgetter
https://docs.python.org/3/library/itertools.html#itertools.groupby
