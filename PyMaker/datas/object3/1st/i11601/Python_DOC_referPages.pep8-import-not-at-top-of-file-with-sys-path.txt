Natural Text
ProblemPEP8 has a rule about putting imports at the top of a file:Imports are always put at the top of the file, just after any module comments and docstrings, and before module globals and constants.However, in certain cases, I might want to do something like:In this case, the pep8 command line utility flags my code:E402 module level import not at top of fileWhat is the best way to achieve PEP8 compliance with sys.path modifications?WhyI have this code because I'm following the project structure given in The Hitchhiker's Guide to Python.That guide suggests that I have a my_module folder, separate from a tests folder, both of which are in the same directory. If I want to access my_module from tests, I think I need to add .. to the sys.path
Often I have multiple files with tests in a subdirectory foo/tests of my project, while the modules I'm testing are in foo/src. To run the tests from foo/tests without import errors I create a file foo/tests/pathmagic.py that looks like this;In every test file, I then useas the first import. The "noqa" comment prevents pycodestyle/pep8 from complaining about an unused import.
If there are just a few imports, you can just ignore PEP8 on those import lines:
There is another workaround.
I've just struggled with a similar question, and I think I found a slightly nicer solution than the accepted answer.Create a pathmagic module that does the actual sys.path manipulation, but make the change within a context manager:Then, in your test files (or wherever you need this), you do:This way you don't get any complaints from flake8/pycodestyle, you don't need special comments, and the structure seems to make sense. For extra neatness, consider actually reverting the path in the __exit__ block, though this may cause problems with lazy imports (if you put the module code outside of the context), so maybe not worth the trouble.EDIT: Just saw a much simpler trick in an answer to a different question: add assert pathmagic under your imports to avoid the noqa comment. 
To comply with the pep8, you should include your project path to the python path in order to perform relative / absolute imports.To do so, you can have a look at this answer: Permanently add a directory to PYTHONPATH


Answer URL
https://docs.python.org/3/library/pkgutil.html
