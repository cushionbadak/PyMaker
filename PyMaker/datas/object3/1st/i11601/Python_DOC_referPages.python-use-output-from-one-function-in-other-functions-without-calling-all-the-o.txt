Natural Text
I have one core function that I call from many of the other functions in my script.  Problem is that I do not want each function when it calls the core function to run it.  Is there a way of storing the output of the core function so that when its called for the second, third time etc its not run?E.g.etc..func3 here would call core_func again after func2 has called it.  How can I prevent that but at the same time use core_func output?  A possible solution maybe return the outputs from func2 and use in func3 (but this would get a bit ugly).Thanks
Store the results of the function in a variable!
You can use memoizeCaches a function's return value each time it is called.So, every time you call the function with the same parameters you'll get the return value without the computing timei.e:If you're using Python2 you need to implement it, you can have a look how it's implemented on the link above and then apply it to your function:If you're using Python3 you've it for free with the lru_cache decoratorDecorator to wrap a function with a memoizing callable that saves up  to the maxsize most recent calls. It can save time when an expensive  or I/O bound function is periodically called with the same arguments.


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
