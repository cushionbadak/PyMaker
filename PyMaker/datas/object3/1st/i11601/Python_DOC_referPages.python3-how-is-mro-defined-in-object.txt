Natural Text
Update------------------object is a instance of type, but at the same time, object is also the base class of type. And type is a instance of object. I'm really confused about this. it's totally unlogical. Why python do this?Original--------------------------------I know type has mro. but I can't figure out why mro can be called from object. How python implement this?
Descriptors are involved.When resolving object.mro, the interpreter first looks for 'mro' in object.__dict__.Since 'mro' is not in object.__dict__, the interpreter looks in type(object).__dict__.This object is a descriptor since it has a __get__ method.  So the interpreter invokes the __get__ method to obtain the actual value of object.mro.Based on the documentation you might think that since object is a class it would call __get__(None, object) but in this case object is being considered as an instance of class type so the interpreter calls __get__(object, type(object)) to get the result.To confirm that the result is what we're looking for:


Answer URL
https://docs.python.org/3/reference/datamodel.html#invoking-descriptors
