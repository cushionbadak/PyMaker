Natural Text
This question already has an answer here:What is the best way to call a script from another script?                    9 answers                I am trying to open a python script from another python script using Popen in Python 2.7.The two scripts are:child.py: Takes 5 ints one by one and waits some time and prints its squareparent.py: Opens child.py and writes 5 ints to its stdin and prints its stdoutThe following are the other substitutions that I used for the first argument of Popen constructor in parent.py after seeing many similar question in stackoverflowThe WindowsError produced is:
First you have to Specify the type of file you are trying to open as a subprocessThis should resolve your issue.
Popen with the default shell=False delegates to CreateProcess in Windows as its docs say. That API function can only run executable files (regardless of their extension).You need to eitheradd the path to the interpreter as the leading argument use machinery that would delegate to ShellExecute that would run a command line like above accoring to the file type association. E.g. specify shell=True (heed the security warnings in the doc) because cmd.exe falls back to ShellExecute for non-executable files.
If you have the Python interpreter setup to handle *.py files, then you can just set shell=True in your Popen constructor:As others have pointed out, this method comes with a security warning, so you'd have to take care that the arguments you pass to Popen aren't maliciously constructed (for instance, if you're getting some of your arguments from user input): https://docs.python.org/3/library/subprocess.html#security-considerationsOtherwise, you'll need to tell Popen to use a Python executable to load the file, like this:In this context, sys.executable will resolve to the full path of the Python binary that was used to launch your parent script.


Answer URL
https://docs.python.org/3/library/subprocess.html#security-considerations
