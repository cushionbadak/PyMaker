Natural Text
I want to make unit tests for some django views which use a custom pyodbc database connectionviews.pySince I don't want the unit tests to be hitting the database, how can I mock the behaviour given that:The mock library won't work since pyodbc is a Python C extensionUsing sys.modules doesn't seem to work, probably because the module is being used in views.py and not on tests.pyHere is my test drivertests.py
You can patch pyodbc.connect without any limitations as showed in the follow example:Now the real issue in view.py is the line That line is executed while your are importing view.py and you cannot control it without implement some kind of hack in your test code like patching connect before importing view.py or anything else importing it.I would like strongly discourage you on write this kind of dirty tricks and change just a little your code to implement a lazy dbh property. Another way can write your own db class wrapper (better) and patch it in your tests but that is a strong design change and you can introduce it later by take the power of implemented tests.In view.py use:where cusror become Now you can patch get_db() and use return_value mock in your test I left out the detail of how mock_cursor should behave and cursor calls asserts. You can write it by reading mock framework documentation. I used to patch connection in setUp() method because I can guess that you need it in almost all your tests in this class where cursor_mock, db_mock and get_db_mock can be used with different behavior: my experience is that this approach will pay a lot later while you'll add more tests.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
