Natural Text
These two pieces of code give two different results! Why?
Since lower and upper form of characters don't have same hash value, the set function doesn't assume them as duplicate. Therefore after converting all the characters to lower case the set() function will remove more characters from your string in first code.Consider the following example:You can use hash() function to see the hash value of characters:A bit more:Now if you want to get a unique result of lower characters you should use the first approach. But if you are dealing with a large text you better to use a generator expression instead of a list comprehension:

The first version converts all the strings to lower case, then removes duplicates, then sorts. The second version removes duplicates, then converts to lower case, then sorts.So for each pair of input strings that differ only in case, the second version will emit two (lower case) entries that match.Are you seeing other differences?Edit: You changed the code to just take the len() of the resulting lists, so you won't see the details. Try diffing the lists.


Answer URL
https://docs.python.org/3/library/functions.html?highlight=enumerate#hash
