Natural Text
How do i filter all common sub dictionary keys that exists in other sub dictionary keys in the parent dictionarycurrent solution isIs there any simpler solution for this?
You can map the dictionaries to set and then reduce using set.intersection:Note: In Python 3, reduce has been moved to functools.Update: As seen in @John's answer, set.intersection can handle an arbitrary number of sets, so the reduce is not even necessary. Just set.intersection(*map(set, d.values()))
You can do a single set.intersection operation once you extract all the keys.  It's a one-liner then:Breaking that down, the first part evaluated is this:That's a generator which produces:In Python 3 that generator is equivalent to:But in Python 2, map is less efficient because it constructs a list that we don't need (as does values() instead of itervalues()).In any case, the results of that generator are passed to set.intersection (using the * argument unpacker) to do the heavy lifting in a single call.
An alternative with pandas, the keys do not need to be ordered:


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/stdtypes.html#set
https://docs.python.org/3/library/functools.html#functools.reduce
https://docs.python.org/3/library/stdtypes.html#set.intersection
