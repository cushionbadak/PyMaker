Natural Text
Take a dictionaryI want to get the value 2.To access this I can do this dict["word"]["a"]["b"]However I want to know can I have part of the key (the ["a"]["b] section) in a stringAnd refer to it something like thisOr something like thatI know this syntax is incorrect but is it possible to do something like this?in Python 3.xEDIT:A better dict example may be thisHow to get the value of b in each case? where you want to avoid hard coding in the ["a"]["b"] bit of the key in the event that it could change.
Don't use dict as variable name as it shadows the built-in function. One of the ways to do it is using the re module. The main idea here is that you are utilizing a regular expression to find out the keys. Once you have the list of keys, extracting data is a easy task.If there are a lot of keys, then you can use reduce from functools package. (as JonClements has mentioned in a comment)For longer dicts, you can use a list comprehensionHowever note that due to the unordered nature of the dictionary keys, the output of the list may not be as expected. A better way is to reduce the complete dictionary to a new one (using a dict comprehension), as in
The best way is to write your own syntax that you would parse. You have to use a charachter that will never appear in the key, a popular example is ., but similary, $, | work as well.EDIT for the update to the question:So do you want to be able to get a list of values of a.b specifically in each of those cases? if so you can still use the method above like soit even works if your variable part is in the middle


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/library/functools.html#functools.reduce
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
