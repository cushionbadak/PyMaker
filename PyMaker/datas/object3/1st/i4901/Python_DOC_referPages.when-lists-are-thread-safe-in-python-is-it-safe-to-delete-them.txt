Natural Text
I have a multi threaded application in Python 3 and have a setter and getter method of a list. The setter method appends an element to the list, while the getter method deletes all elements of the list after returning them.The setter method looks like the following, which is in a larger async function:While the getter method looks like the following:However the application crashes without any error messages (probably hidden due to multithreaded output in the command line) right after the prinst statetement "append data" - So I was wondering if the code snippets are thread safe and correct?
Your code is not threadsafe, because your self.semaphore handling is not thread-safe. Two threads can read self.semaphore as False, before either of them have set it to True, as thread switches can take place at any point between instructions.What you want to use is a proper thread lock object (a semaphore is the wrong primitive to use here).When creating your instance, set a self.messages_lock = threading.Lock() attribute, and whenever you need to alter your messages list, use:orif you must have a thread that prints out that it is waiting for a lock.


Answer URL
https://docs.python.org/3/library/threading.html#lock-objects
