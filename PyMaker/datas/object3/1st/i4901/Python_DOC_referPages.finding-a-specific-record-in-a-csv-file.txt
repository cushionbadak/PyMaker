Natural Text
I'm making a project for school where users are quizzed on subjects and their results are saved into a report (CSV file called 'reportForFergusTwo') for the 'customer' (Fergus). The report shows the average score a certain quiz, the high score, and the username of the person who achieved it. And then, I'm meant to display the user's details but the user's details are saved in a different CSV file ('details').So far I've made a function that finds the highest score and username of the person who achieved it in the CSV 'reportForFergusTwo'. I now need to work on a function that searches through another CSV file ('details').'user' is a variable from my previous function, where I found the username of the person with the highest score. It holds the username. I made it global and printed it at the start of this function, and that's working, making me think this is an issue I've made in reading the CSV.Here is the details CSV:And here is the reportForFergusTwo CSV:I'm still fairly new to code, so please excuse me if the answer is obvious.
If your user is no longer in scope you can provide it to your function like this:There is almost always a way around global variables by using parameters in the function - don't use them, provide each function exactly with what it needs.As for the csv-issues: csv module does the splitting for you as Tomalak mentioned. You can consume the reader line wise and get a list of all fields: Output:
Try this?:edit: FYI if there are multiple rows with the same username this will print all the names, ages and year groups associated with that username.pandas makes accessing and working with csvs really easily.  Once you've done var = pandas.read_csv('somefile.csv') you can access all the values in a given column using var['col1']. Subsetting can be done by doing var[var['col1'] == 'something'], which reads as 'Select records from dataset var where the values of col1 are 'something'.The pandas docs can be found here: http://pandas.pydata.org/pandas-docs/stable/Dictreader might also be a good way to go if pandas seems a bit too complex for what you're tyring to do.


Answer URL
https://docs.python.org/3/library/csv.html#csv.reader
https://docs.python.org/3/library/csv.html#csv.DictReader
https://docs.python.org/3/library/csv.html#csv.reader
