Natural Text
I have a dictionary of lists like this:I want to create a reverse lookup dict like this:I have a working version of the solution:But wanted to know if someone can provide an alternate answer that doesn't use a double for as I feel it loses readability. So I'd prefer having a single for loop or use functions like the ones in itertools or functional programming
Your solution using dictionary comprehension is the Pythonic way to achieve it. However, as an alternative with single for loop as requested by you, here is the functional one using zip(), itertools.repeat(), and itertools.chain.from_iterable(), but I doubt that it is any better then yours solution in terms of readability:where new_dict will hold:
No for loops. It's clearly not more readableAnother one based off @MoinuddinQuadri's idea
Here's one without explicit for loop. Not really recommended, though (side-effect in map which is a no-no to many):


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/itertools.html#itertools.repeat
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
