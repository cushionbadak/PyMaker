Natural Text
For example I have a class with Linked list class Is it possible to take a Linked list object and input it into a function which will alter it without assigning instead ofso I could do func1(lst) and it would altered instead of lst=func2(lst)
Because objects are mutable (by default) in Python you can modify an object but that won't change a reference in an outer scope. You can use the id function to test this:outputsSo in func1 we changed what the variable a refers to, but because it is a local variable, it doesn't change the a reference outside of the function's scope.
If you meant trying to change an attribute of an object within a function without having to re-create that object, yes you can:If you didn't want to use the assignment operator, you could use setattr:But setattr doesn't return anything after setting the attribute, not even the object. So doingwould return None.Now, if what you're really trying to do is chain several functions which modify a Link object one after the other like this: then you need to modify and return the object from the functions:Note that outside your function chain, you don't need to assign the return value since it happens "in-place":


Answer URL
https://docs.python.org/3/library/functions.html#setattr
