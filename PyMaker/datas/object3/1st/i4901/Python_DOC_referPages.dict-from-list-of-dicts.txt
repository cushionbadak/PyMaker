Natural Text
I have a list of dicts. In that list of dicts each dict has one key and one value for that key, as shown above. I need to create a dict that has the keys from all the dicts and each value for every key is a set with item values from the list of dicts. In the example, it'd be something like this:How can I do this in Python?
You can use the builtin setdefault() function.Output:Note: Using collections.defaultdict (as shown in this answer) is simpler and faster than using dict.setdefault().From the documentation:Working of collections.defaultdict:When each key is encountered for the first time, it is not already in the mapping; so an entry is automatically created using the default_factory function which returns an empty list. The list.append() operation then attaches the value to the new list. When keys are encountered again, the look-up proceeds normally (returning the list for that key) and the list.append() operation adds another value to the list. This technique is simpler and faster than an equivalent technique using dict.setdefault().
collections.defaultdict is one way:

You can use itertools.groupby:Output:
Very simply. Output : {'numbs': [1, 2, 3]}


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
https://docs.python.org/3/library/collections.html#defaultdict-examples
https://docs.python.org/3/library/collections.html#defaultdict-examples
