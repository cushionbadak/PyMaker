Natural Text
I read from range(len(list)) or enumerate(list)? that using range(len(s)) is not very good way to write Python. How one can write for loops in alternative way if we do not need to loop len(s) times but for example len(s)//3 times or len(s)-5 times? Is it possible to convert those loops to use enumerate?For example, I had a project where I had a list of 3n elements 's[0], s[1],...,s[3n-1]' and I needed to print them in a nx3 table. I wrote the code something like
If you're iterating over an entire list:If you're iterating over an entire list, but you only need the index:If you're iterating over an entire list, but you don't need the index or the data:If you're iterating over part of a list:And so on.I'm not sure why you want to iterate over part of a list though, that seems strange.  I'd be interested to hear your use case, as it could probably be improved.Looking over the code you've now posted, @Metareven has a good solution - iterating over the list in chunks of the size you want to process.
Your code doesn't look that bad, but if you want to iterate over 3 elements at a time I would make a for loop that increments the i variable by 3 instead of one, like so:
It seams you want to go through your collection with some sort of sliding window. In that case, I would suggest using itertools.islice.If you don't mind making copies of your data, you could use the traditional slicing notation:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
