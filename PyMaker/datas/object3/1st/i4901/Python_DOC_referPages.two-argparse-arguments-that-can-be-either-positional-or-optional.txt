Natural Text
I'm trying to make a program in Python 3.5 (the Python version shipped by Debian 9) that takes two command line arguments: an input file name and an output file name.The input file name must either precede the output file name oritself be preceded by -i.The output file name is optional.  If present, and the input filename is not preceded by -i, it must either follow the input filename or itself be preceded by -o.Thus I want to accept the following command lines:The usage message might look like this:But I can't tell from the documentation of the argparse module how to express this in arguments to add_argument().  When I give two names for a single argument, one positional and one named, add_argument() raises an exception:I searched Stack Overflow for similar questions and found hpaulj's answer to Python argparse - mandatory argument - either positional or optional and hpaulj's answer to argparse: let the same required argument be positional OR optional. The construction in these answers uses a group of two mutually exclusive arguments, one positional and one named.  But it doesn't appear to work with multiple such arguments.  Trying to parse -i infilename outfilename with a parser built this way produces a different exception:However, argparse itself has trouble printing this exception or even showing --help:The deprecated optparse module stored positional arguments in a separate list, which code that runs after parsing could read to fill in each argument that is None.  The direct counterpart to this list in argparse is parser.add_argument('args', nargs=argparse.REMAINDER).  Is handling positional arguments manually after calling parse_args() the only way to accept all command line forms shown above using argparse?
You could perhaps make your program accept a variable number of positional arguments (between 0 and 2) which would be added to a positional parameters list (with action="append"), and also call add_argument("-i",...) and add_argument("-o",...) to handle the flag equivalents.Typically, argparse options fall either in the positional or optional category (but not both). So, you'll need to pass settings to argparse that allow some redundancy, and deal with conflicts after parsing. For instance, you can configure argparse to accept an input file both via -i INPUT and as positional INPUT, but then you add a custom check after parsing to make sure only one of the two forms was used.Pseudocode:


Answer URL
https://docs.python.org/3/library/argparse.html#argparse-remainder
