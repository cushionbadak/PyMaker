Natural Text
What can be the best to check if var is having str, unicode or None; but not anything else?I tried withbut got below exception:`
You have the right idea, but None is not a class. It's type is NoneType, or alternatively type(None). The latter works out of the box in both Python 2 and 3. The former requires an import: from types import NoneType and only works in Python 2.
you can useand in python 2 (which you seem to be using) this also works:
You can use type to find the method and check that in a listEx:
In complement to the other answers (which are correct), I would add a comment on the typology of cases where one would need such a test.Distinguishing between a string and a scalar typeIf the question is distinguishing between a string and a number, then asking for forgiveness instead of permission works just as well:Since that's the mindset of Python, it often makes things simpler, and it also takes care of the case where a is None. If one is trying to prevent such an error, then it might be easier to let it instead happen and then catch it. It could also be more reliable, because it could also take care of cases one had not thought of.Distinguishing between a string and other iterablesOne case where it won't work, however, is when one wants to distinguish between a string and a list (several libraries do that with function arguments). The problem is that both a string and a list are iterables, so the string might happily run through the code for the list without any error... except that now you have your string cut into pieces of one character.(And if the code fails, the error could be confusing.) To avoid that effect:In my experience, it's the only case where it's really advisable to use a test with isinstance(x, (str,...)). I am curious to know whether someone knows others?


Answer URL
https://docs.python.org/3/library/constants.html#None
