Natural Text
I need to iterate through all .asm files inside a given directory and do some actions on them. How can this be done in a efficient way?
Original answer:Python 3.6 version of the above answer, using os - assuming that you have the directory path as a str object in a variable called directory_in_str:Or recursively, using pathlib:
This will iterate over all descendant files, not just the immediate children of the directory:
You can try using glob module:and since Python 3.5 you can search subdirectories as well:From the docs:The glob module finds all the pathnames matching a specified pattern according to the rules used by the Unix shell, although results are returned in arbitrary order. No tilde expansion is done, but *, ?, and character ranges expressed with [] will be correctly matched. 
Python 3.4 and later offer pathlib in the standard library. You could do:Or if you don't like list comprehensions:Path objects can easily be converted to strings.
Here's how I iterate through files in Python: NONE OF THESE TECHNIQUES GUARANTEE ANY ITERATION ORDERING Yup, super unpredictable. Notice that I sort the filenames, which is important if the order of the files matters, i.e. for video frames or time dependent data collection. Be sure to put indices in your filenames though!
I'm not quite happy with this implementation yet, I wanted to have a custom constructor that does DirectoryIndex._make(next(os.walk(input_path))) such that you can just pass the path you want a file listing for. Edits welcome!


Answer URL
https://docs.python.org/3/library/glob.html
https://docs.python.org/3/library/pathlib.html
