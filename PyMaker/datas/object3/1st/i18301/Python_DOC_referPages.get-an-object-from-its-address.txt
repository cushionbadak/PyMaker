Natural Text
This question already has an answer here:Get object by id()?                    7 answers                I want to get the instance of an class object. I have its address and the name of the object. How can it be possible to create the instance of the object or how can I retrieve the same object?The class is defined in one python module and i want it to be used in another python module.Can I use object id to access the object of the class.?My actual problem is that I have a Python module in which a class had been defined (class Myclass). I am reusing the module in my new code. I want the object of Myclass, which is defined in the old module, to be accessed in my new file.Can anyone suggest me a way to achieve this? I don't have right to access the module source code where the class has been defined. I can manage to get the class name with the garbage collector.
id is only defined as a number *unique to the element among currently existing elements. Some Python implementations (in fact, all main ones but CPython) do not return the memory address.So you have to guarantee that it is the memory address. Furthermore, because of this Python provides no id â†’ object mapping, especially as the object that an id maps to can be changed if the original is deleted.You have to ask why you're holding the id. If it's for space reasons, bear in mind that containers actually hold references to items, so [a, a, a, a, a] actually takes less space than [id(a), id(a), id(a), id(a), id(a)]; a.You can consider also making a dict of {id: val} for all the relevant items and storing that. This will keep val alive, so you can use weakrefs to allow the vals to be garbage collected. Remember, use weakref if you want a weakref.
My actual problem is " I have a python module in which a class had been defined "Class Myclass". I am reusing the module in my new code. I want the object of Myclass which is defined in the old module have to be accessed in my new file. Can any one suggest me a way to achieve this. I don't have right to access the module where the class has defined. I can mange to get the class name with garbage collector. If you are reusing the module, then you have access to that module.For example if said module creates the object like this:Then you can import that reference too when you import the module:
By the id you can't. By name: 


Answer URL
