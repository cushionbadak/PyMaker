Natural Text
Here is my current list:and here is what I want:I just need to split the list at the decimal point and do not want any extra zeros added to the new list. Seems like there should be a simple solution I just don't know about since I am so new.
Btw, the comprehension works the same as this one:

This can be done using str.split() and itertools.chain.from_iterable().In a generator expression, we take each item in the list and use str() to take the number and make it into a string. We then split that string on the character ".":This gives us a generator of lists (['1', '0'], ['0', '0'], ...). We then use itertools.chain.from_iterable() to flatten that into a single iterator:Then we use a list comprehension to convert the individual digit-strings into ints again.itertools.chain.from_iterable() is the best tool for flattening iterables - it's efficient and flexible, and the syntax is clear (just a function call with clear documentation in the stdlib).


It looks a bit cryptic but should what the OP wants:It's supposed that each element in the list is a float and with one decimal.



Answer URL
