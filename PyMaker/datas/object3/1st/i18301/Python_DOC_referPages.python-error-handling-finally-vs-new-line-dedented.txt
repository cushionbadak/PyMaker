Natural Text
When using try and except for error handling, does it matter whether you explicitly call finally or if you simply go to a new line that is dedented from the exception code? For example, is there any circumstance under which the two functions below will produce different results?Update:Thanks for the explanation of finally running even if there is an error in the except block. One additional thing I wanted to point out is that the finally block will run even if you return an object within the except block. For example, function 3 below will print even after the return while function 4 will not.
There is the error in the except block that's been mentioned already:There's also return behaviour:
According to PEP 341:The code in block-1 is executed. If the code raises an exception, the  various except blocks are tested: if the exception is of class  Exception1, handler-1 is executed; otherwise if it's of class  Exception2, handler-2 is executed, and so forth. If no exception is  raised, the else-block is executed.No matter what happened previously, the final-block is executed once  the code block is complete and any raised exceptions handled. Even if  there's an error in an exception handler or the else-block and a new  exception is raised, the code in the final-block is still run.So as Martjin said, the code in finally will be executed even if the except raises another another error.
The first version will still run the finally: suite even when the except handler raises a new exception. In the second version, the final print() will not be executed in that case:Note that the first thing printed in final(0) is End Function; no such text is printed for dedent(0).You never need to explicitly execute a finally: suite; it is always run, even if you were to exit the function early with return, or break out of a loop with break or use continue to skip the rest of the loop body:Quoting from the try statement documentation:If finally is present, it specifies a ‘cleanup’ handler. The try clause is executed, including any except and else clauses. If an exception occurs in any of the clauses and is not handled, the exception is temporarily saved. The finally clause is executed. If there is a saved exception it is re-raised at the end of the finally clause.andWhen a return, break or continue statement is executed in the try suite of a try...finally statement, the finally clause is also executed ‘on the way out.’
The difference is clear if exceptions are raised all over the place.If only the try block raises an error then they are the same.However. If the except block also raises an error, then the finally block is guaranteed to run.


Answer URL
