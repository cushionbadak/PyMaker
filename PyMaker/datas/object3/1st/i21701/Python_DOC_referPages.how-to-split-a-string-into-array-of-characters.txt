Natural Text
I've tried to look around the web for answers to splitting a string into an array of characters but I can't seem to find a simple methodstr.split(//) does not seem to work like Ruby does. Is there a simple way of doing this without looping?
You need list
You take the string and pass it to list()
You can also do it in this very simple way without list():
If you want to process your String one character at a time. you have various options.  Using List comprehension: Output:Using map: Output:Calling Built in list function: Output:  Using for loop: Output:  
I explored another two ways to accomplish this task. It may be helpful for someone.The first one is easy:And the second one use map and lambda function. It may be appropriate for more complex tasks:For exampleSee python docs for more methods
The task boils down to iterating over characters of the string and collecting them into a list. The most na√Øve solution would look likeOf course, it can be shortened to justbut there still are shorter solutions that do the same thing.list constructor can be used to convert any iterable (iterators, lists, tuples, string etc.) to list. The big plus is that it works the same in both Python 2 and Python 3.Also, starting from Python 3.5 (thanks to the awesome PEP 448) it's now possible to build a list from any iterable by unpacking it to an empty list literal:This is neater, and in some cases more efficient than calling list constructor directly.I'd advise against using map-based approaches, because map does not return a list in Python 3. See How to use filter, map, and reduce in Python 3.
simple:
I you just need an array of chars:If you want to split the str by a particular str:
split() inbuilt function will only separate the value on the basis of certain condition but in the single word, it cannot fulfill the condition. So, it can be solved with the help of list(). It internally calls the Array and it will store the value on the basis of an array.Suppose,
If you wish to read only access to the string you can use array notation directly.Could be useful for testing without using regexp.Does the string contain an ending newline?
Well, much as I like the list(s) version, here's another more verbose way I found (but it's cool so I thought I'd add it to the fray):
similar to list(string) but returns a generator that is lazily evaluated at point of use, so memory efficient.
where a is the string that you want to separate out. The values "a[i]" are the individual character of the the string these could be appended to a list.


Answer URL
https://docs.python.org/3/library/functions.html#func-list
https://docs.python.org/3/glossary.html#term-iterable
