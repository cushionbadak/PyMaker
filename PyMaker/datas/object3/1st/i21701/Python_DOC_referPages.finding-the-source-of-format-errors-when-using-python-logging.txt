Natural Text
When I have lots of different modules using the standard python logging module, the following stack trace does little to help me find out where, exactly, I had a badly formed log statement:I'm only starting to use python's logging module, so maybe I am overlooking something obvious. I'm not sure if the stack-trace is useless because I am using greenlets, or if this is normal for the logging module, but any help would be appreciated. I'd be willing to modify the source, anything to make the logging library actually give a clue as to where the problem lies.
The logging module is designed to stop bad log messages from killing the rest of the code, so the emit method catches errors and passes them to a method handleError. The easiest thing for you to do would be to temporarily edit /usr/lib/python2.6/logging/__init__.py, and find handleError. It looks something like this:Now temporarily edit it. Inserting a simple raise at the start should ensure the error gets propogated up your code instead of being swallowed. Once you've fixed the problem just restore the logging code to what it was.
Rather than editing installed python code, you can also find the errors like this:where handler is one of the handlers that is giving the problem. Now when the format error occurs you'll see the location.
It's not really an answer to the question, but hopefully it will be other beginners with the logging module like me.My problem was that I replaced all occurrences of print with logging.info , so a valid line like print('a',a) became logging.info('a',a) (but it should be logging.info('a %s'%a) instead. This was also hinted in How to traceback logging errors? , but it doesn't come up in the research
Alternatively you can create a formatter of your own, but then you have to include it everywhere.
Had same problemSuch a Traceback arises due to the wrong format name. So while creating a format for a log file, check the format name once in python documentation: "https://docs.python.org/3/library/logging.html#formatter-objects"


Answer URL
https://docs.python.org/3/library/logging.html#formatter-objects
