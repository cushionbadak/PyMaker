Natural Text
This is the outline of a simple programI just keep getting "global name foo is not defined".....Can anyone help me on this? Thanks!
The code snippets must be self-contained - they cannot make external references. You must define your values in the statement-string or setup-string:Better yet, rewrite your code to not use global values.
The functions can use arguments in timeit if these are created using closures, we can add this behaviours by wrapping them in another function.or shorter, we can use functools.partial instead of explicit closures declaration
Supposing that your module filename is test.py
Your function needs to be define in the setup string. A good way to do this is by setting up your code in a module, so you simple have to do Otherwise, you'll have to define all of the setup as a string inside the setup statement.Something awesome I just found out about is a shortcut for iPython that uses cProfile.
I usually create an extra function:
There is a much simpler solution (at least for Python 3), you can cause the code to be executed within your current global namespace:t = timeit.Timer(stmt="foo(num1,num2)", globals=globals())https://docs.python.org/3/library/timeit.html#examplesI know globals are not preferred, but if you are just making a quick script to check something I think this is the easiest implementation.
Here is an example of how to compartmentalize the timing routine, without calling globalsYou could even generalize this if you wanted to use the same timeit function to time other functions. Here is an example with your example main() routine:
I prefer creating a static class with all the Data ready to be picked up prior of running the timer. Another note, it is better to do test runs in  function rather then in the global space, as the global space isn't taking advantage of FAST_LOAD Why does Python code run faster in a function?
This should work:
I was playing around with timing in Python 3.7 today and trying to pass functions and variables into the timer. This is what I came up with.This outputs:regex: 1.378352418  This is a test of the emergency broadcast systemloop_while: 0.15858950299999997  This is a test of the emergency  broadcast systemThen all it takes to test a new version is adding in a new function. Something like:Now it outputs:regex: 1.378352418  This is a test of the emergency broadcast systemloop_while: 0.15858950299999997  This is a test of the emergency broadcast systemsplit_join: 0.05700970800000005  This is a test of the emergency broadcast system


Answer URL
https://docs.python.org/3/library/functools.html
https://docs.python.org/3/library/timeit.html#examples
