Natural Text
My script should start a demo mode, when the no parameters are given. I tried this:Which gives a *** TypeError: object of type 'Namespace' has no len() as args is no list. How would I achieve what I want?
If your goal is to detect when no argument has been given to the command, then doing this via argparse is the wrong approach (as Ben has nicely pointed out).Think simple! :-) I believe that argparse does not depopulate sys.argv. So, if not len(sys.argv) > 1, then no argument has been provided by the user.
argparse lets you set (inside a Namespace object) all the variables mentioned in the arguments you added to the parser, based on your specification and the command line being parsed. If you set a default, then those variables will have that default value if they weren't seen on the command line, they won't be absent from the Namespace object. And if you don't specify a default, then there is an implicit default of None. So checking the length of the Namespace object, however you manage to do it, doesn't make sense as a way to check whether any arguments were parsed; it should always have the same length.Instead, if you know you've got a bunch of arguments with no defaults and you want to check whether any of them were set to any non-None value... do that. You can use a list comprehension and the vars function to loop over them without having to duplicate the list of names from the add_argument calls, as shown in Martijn's answer.It gets a little trickier if some of your arguments have default values, and more so if they have default values that could be explicitly provided on the command line (e.g. a numeric argument that defaults to 0 makes it impossible to tell the default from the user providing 0). In that case I'm not sure that there's a general solution that always works without knowledge of what the arguments are.
If one really needs the argument number (for whatever reason).I have found this code very helpful (but do not know how much optimised it is, and I'd appreciate any comment on it).This version counts only the -xx parameters and not any additional value passed.If one wants everything (also the values passed), then just use len(sys.argv) as previously mentioned.
Don't use argparse. Instead just use sys.argv. argparse creates a Namespace, so it will always give you a "dict" with their values, depending on what arguments you used when you called the script.Here's what I've done in the past: 
Let us assume the following example to extend Yours for completeness:Your Namespace object, mentioned by @Ben, in this example is args. From the strings in parser.add_argument a variable is created. You can access it through args.input or args.length or args.verbose. You can verify this by executing print(args) which will actually show something like this:since verbose is set to True, if present and input and length are just variables, which don't have to be instantiated (no arguments provided).Also helpful can be group = parser.add_mutually_exclusive_group() if you want to ensure, two attributes cannot be provided simultaneously.For further reference, please refer to:https://docs.python.org/3/howto/argparse.htmlWell structured HOWTOhttps://docs.python.org/3/library/argparse.htmlArgparse module documentation
I expanded 2dvisio's concept to count non zero or None arguments:


Answer URL
https://docs.python.org/3/howto/argparse.html
https://docs.python.org/3/library/argparse.html
