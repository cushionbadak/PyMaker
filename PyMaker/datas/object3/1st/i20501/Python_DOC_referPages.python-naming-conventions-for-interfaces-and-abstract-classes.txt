Natural Text
What is the convention for naming interfaces and abstract classes in Python? PEP 8 doesn't discuss this. For example, in Java, interfaces are often named with an "I" prefix. In PHP (prior to namespaces), abstract classes are typically named with an "_Abstract" suffix.(I realize that Pythonists are not keen on interfaces, and perhaps this is the reason why I can't find much consensus on this topic. But the usage of interfaces and abstract classes is not my question.)
I think naming an interface with an I prefix is perfectly acceptable.e.g.:A few years back I used Zope Interfaces. I noticed most codebases used this convention. Our team did too.We preferred IFoo vs. FooInterface or IFooInterface
I'm not aware of any community-wide standards in that regard apart from PEP8, which doesn't address this specifically. I'd suggest to do whatever your team is most comfortable with, but above all else be consistant.
I would look towards the number tower (from numbers), the collection ABCs (from collections.abc), or the other core ABCs (such as importlib.abc) for the most "Pythonic" way to do this.The consensus from this is to just name them as-is, and let human understanding recognize them as abstract.


Answer URL
https://docs.python.org/3/library/numbers.html
https://docs.python.org/3/library/collections.abc.html
https://docs.python.org/3/library/importlib.html#module-importlib.abc
