Natural Text
Is there a standard library  function which will set a minimum value to a division operation, for example:This will ensure that min value of operation above will always be 1, never 0.Such as:Also, how do I round up a division:I always get "0" when I divide 1/5, even with ceil function:
If you want to use floating point division as default, you can do from __future__ import division:If you need the result to be of integer type, e.g. for indexing, you can use
The result of 1/5 is an integer already. If you want the floating point version you need to do 1.0/5. The math.ceil function will then work as you expect: math.ceil(1.0/5) = 1.0.If you're working with variables instead of constants, use the float(x) function to convert an integer into a floating point.

You could make a round up function for integers like thisYour example doesn't work because an integer dividing an integer is an integer.As for your min question - what you wrote is probably the best you can do.
I don't know about anything in the standard library, but if you are just trying to make sure the answer is never less than 1, the function is pretty easy:If, instead, you are looking to round up every answer:This will round up any answer with a remainder.I believe Python 3.3 (and I know 3.4) return a float by default for integer division:  https://docs.python.org/3/tutorial/introduction.html


Answer URL
https://docs.python.org/3/tutorial/introduction.html
