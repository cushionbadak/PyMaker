Natural Text
The Harmonic Mean function in Python (scipy.stats.hmean) requires that the input be positive numbers. For example:results in:I don't mathematically see why this should be the case, except for the rare instance where you would end up dividing by zero. Instead of checking for a divide by zero, hmean() then throws an error upon inputing any positive number, whether a harmonic mean can be found or not.Am I missing something here in the maths? Or is this really a limitation in SciPy? How would you go about finding the harmonic mean of a set of numbers which might be positive or negative in python?
The harmonic mean is only defined for sets of positive real numbers. If you try and compute it for sets with negatives you get all kinds of strange and useless results even if you don't hit div by 0. For example, applying the formula to the set (3, -3, 4) gives a mean of 12!
You can just use the Harmonic Mean define equation:But, wikipedia says that harmonic mean is defined for positive real numbers:http://en.wikipedia.org/wiki/Harmonic_mean
There is a statistics library if you are using Python >= 3.6:https://docs.python.org/3/library/statistics.htmlYou may use its mean method like this. Let's say you have a list of numbers of which you want to find mean:It has other methods too like stdev, variance, mode, mean, median etc which are too useful.
the mathematical definition of harmonic mean itself does not forbid applications to negative numbers (although you may not want to calculate the harmonic mean of +1 and -1), however, it is designed to calculate the mean for quantities like ratios so that it would give equal weight to each data point, while in arithmetic means or such the ratio of extreme data points would acquire much high weight and is thus undesired.So you either could try to hardcode the definition by yourself like @HYRY suggested, or may have applied the harmonic mean in the wrong context.


Answer URL
https://docs.python.org/3/library/statistics.html
