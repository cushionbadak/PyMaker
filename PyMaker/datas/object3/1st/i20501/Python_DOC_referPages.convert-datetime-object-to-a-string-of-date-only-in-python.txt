Natural Text
I see a lot on converting a date string to an datetime object in Python, but I want to go the other way.I've got and I would like to convert it to string like '2/23/2012'.
You can use strftime to help you format your date.E.g.,will yield:More information about formatting see here
date and datetime objects (and time as well) support a mini-language to specify output, and there are two ways to access it:direct method call: dt.strftime('format here'); andnew format method: '{:format here}'.format(dt)So your example could look like:orFor completeness' sake: you can also directly access the attributes of the object, but then you only get the numbers:The time taken to learn the mini-language is worth it.For reference, here are the codes used in the mini-language:%a  Weekday as locale’s abbreviated name.   %A  Weekday as locale’s full name.  %w  Weekday as a decimal number, where 0 is Sunday and 6 is Saturday.%d  Day of the month as a zero-padded decimal number.%b  Month as locale’s abbreviated name.%B  Month as locale’s full name.%m  Month as a zero-padded decimal number.  01, ..., 12      %y  Year without century as a zero-padded decimal number.   00, ..., 99      %Y  Year with century as a decimal number.  1970, 1988, 2001, 2013   %H  Hour (24-hour clock) as a zero-padded decimal number.   00, ..., 23      %I  Hour (12-hour clock) as a zero-padded decimal number.   01, ..., 12      %p  Locale’s equivalent of either AM or PM.%M  Minute as a zero-padded decimal number.     00, ..., 59      %S  Second as a zero-padded decimal number.     00, ..., 59%f  Microsecond as a decimal number, zero-padded on the left.   000000, ..., 999999%z  UTC offset in the form +HHMM or -HHMM  (empty if naive), +0000, -0400, +1030%Z  Time zone name      (empty if naive), UTC, EST, CST      %j  Day of the year as a zero-padded decimal number.    001, ..., 366    %U  Week number of the year (Sunday is the first) as a zero padded decimal number.%W  Week number of the year (Monday is first) as a decimal number.%c  Locale’s appropriate date and time representation.  %x  Locale’s appropriate date representation.   %X  Locale’s appropriate time representation.   %%  A literal '%' character.
Another option:
You could use simple string formatting methods:
type-specific formatting can be used as well:Output:
It is possible to convert a datetime object into a string by working directly with the components of the datetime object.Output --> 5/23/2017
You can convert datetime to string.
String concatenation, str.join, can be used to build the string.


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
