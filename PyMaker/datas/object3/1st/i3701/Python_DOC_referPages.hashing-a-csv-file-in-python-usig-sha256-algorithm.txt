Natural Text
I want to do some kind of hack for a 4numberic lock in a csv file and find out the lock-code.I saw a title here but it was not the same question.In this project I must import just "hashlib" and "csv".The program should be just in a def task.The csv file contains a name and a hashlib-sha256 code like:The code is something between 0000 and 9999. The desired output is the code.
As you only have possible combinations in the range 0000 to 9999, it is possible to create the sha256 hashes for all of the possible combinations. These can be stored in a dictionary in the same format as is present in the CSV file you have been given, namely a hex digest. This is done using range() to provide the all of the numbers, and then .format() to convert the number into a string with leading zeros. This can then be encoded into bytes and passed to the hashlib.Once the dictionary has been created, it is then possible to simply look up each hash directly in the dictionary to get the matching combination. Python's CSV library can be used to help with both reading and writing the CSV files. When reading, this automatically splits the line and returns each entry as a list. For writing the opposite is done, namely you give it a list of items and it will write them with the comma delimiter automatically added between them. You should also specify newline='' for your files.
The sha256 hashing algorithm is known to be non invertible. That means that there is no direct way to find back the original string from its hash.But here the entropy of the possible keys is very limited: only 10000 possible values. In that case, the best way is a brute force attack: compare each of the hashes to one the the 10000 possible values. A slight optimization could be to pre-compute the 10000 hashes and only use string comparisons from then.Pseudo-code:What to remember from that:Whatever the quality of the hashing algorythm, when the entropy is poor the password is week: never use values can could be used in simple dictionary attacks.


Answer URL
https://docs.python.org/3/library/csv.html?highlight=csv%20writer#csv.writer
