Natural Text
Bool value of np.NaN is True. Then why and/or operation behaves so random in python.If True or np.nan evaluates to True then why does np.nan or True evaluate to nan? And this is completely reverse for and operation:True and np.nan is nan while np.nan and True is True.
This is due to the way the interpreter evaluates expressions with and/or:or expressions:If the first operand is True or equivalent to True, the second operand is not evaluated and the value of the first operand is returned.If the first operand is False or equivalent to False, the second operand is evaluated and returnedExamples:True or np.nan: bool(True) is True, therefore return Truenp.nan or True: bool(np.nan) is True, therefore return np.nanFalse or np.nan: bool(False) is False, therefore return np.nan and expressions:If the first operand is False or equivalent to False, the second operand is not evaluated and the value of the first operand is returnedIf the first operand is True or equivalent to True, the second operand is evaluated and returnedExamples:True and np.nan: bool(True) is True, therefore return np.nannp.nan and True: bool(np.nan) is True, therefore return TrueFalse and np.nan: bool(False) is False, therefore return False


Answer URL
https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not
