Natural Text
im trying to check multiple imap login informations asynchronously with aioimaplib.This code works as long as the imap servers are reachable and / or the clients don't time out. What is the correct way to catch the exceptions?Example exception:Code:
There are several ways to do this but the TimeoutError is probably caught in your except. You don't see it because str(e) is an empty string.You can see the stacks enabling debug mode of asyncio.First, you can catch the exception as you did: Second, you can catch the exception at run_until_complete The connection is established wrapping the loop.create_connection coroutine with create_task : we wanted to establish the connection in the IMAP4 constructor and __init__ should return None. So if your host has a wrong value, you could test it before, or wait for the timeout : if a host is not responding before the timeout, you can raise the timeout. And if the connection is lost during the connection, you can add a connection lost callback in the IMAP4 constructor.


Answer URL
https://docs.python.org/3/library/asyncio-dev.html#detect-exceptions-never-consumed
https://docs.python.org/3/library/asyncio-dev.html#asyncio-debug-mode
