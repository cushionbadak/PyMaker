Natural Text
Seeing the following code:it looks like python's class variable is independent to each instance because change dog instance's powers variable from no power to bark does not affect the cat instance's powers variableHowever, by doing this:The example shows powers variable (it is a list this time) is static since append an element to dog instance's powers also affects cat instance's powers.I also experimented with changing the powers to an int and increment powers by 1 by calling add_power, and they don't affect each other. So I am really confused why appending an element to a list which is a class variable affects other instances.
An instance variable name can shadow a class variable of the same name.  It's not the case that the class variable is "static" (A.var can be modified or deleted via normal attribute access).  What's happening instead is: accessing a.var first tries the name var in the instance's namespace (a.__dict__), and if that fails then the lookup falls back to checking in the class's namespace (A.__dict__).The reason  you don't see the same behaviour when using a list on the class object is that this line is not an assignment statement


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment
