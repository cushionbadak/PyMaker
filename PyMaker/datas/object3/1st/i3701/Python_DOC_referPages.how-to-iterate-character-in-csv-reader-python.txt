Natural Text
I have a number of text files (.txt), the first one is named 1_1_A_A and the last one is named 10_10_B_C. The first element in the names goes from 1 to 10, the second also goes from 1 to 10, the third can be A or B and the fourth can be A, B or C. It makes a total of 600 instances. I want python to read them with CSV reader. For the first two elements, I use %s in two loops and it works properly. But what should I do to iterate the characters in third and fourth place?The code is something like this, iterating the firs two elements:
You can iterate over any iterable the same way. It doesn't have to be a range; for i in range(3): does the same thing as for i in [1, 2, 3]:. And the values don't have to be ints—you can do for i in ['A', 'B', 'C']. Or, even more simply, a string is itself an iterable of characters, so for i in 'ABC':.And, while we're at it, this means you can iterate over the lists JobSize and Iteration directly. Instead of using for i in range(len(JobSize)): and then JobSize[i], just do for i in JobSize: and use i directly.So:However, four levels of nesting is pretty ugly, and pushes your code off the right edge of the screen. You'll probably find this nicer with product:Roughly equivalent to nested for-loops… The nested loops cycle like an odometer with the rightmost element advancing on every iteration.In other words, this does exactly the same thing as the above:Or, even more simply: instead of using tuple unpacking to get separate i, j, k, l variables, just keep it as a single ijkl and pass it to join:If the elements of JobSize and Iteration aren't strings, that last version won't work—but if you map them all to strings, it works just as well as %s:Of course you probably want to come up with a better name than ijkl. Maybe name_components?
You can iterate over any iterable, including strings like:Code:Results:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/library/functions.html#map
