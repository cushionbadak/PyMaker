Natural Text
I have a loop inside a program which should be where I would like the while to run until it stops making sense. I've attempted somethings which have not worked (see the end of the post), but the following has worked:However, I don't think this is very elegant and seems contrived. Is there a more elegant solution (for this case, and also in general for a given condition)?  Other attempts (which were unsuccessful):The above fails because the while tries to run for count = len(lst) and runs an error, since lst[len(lst)] does not exist.The above fails because I want to modify the rank if the condition happens also in the case lst[len(lst) - 1], which would not be seem in the above code.
The only reason whydoes not work is that you cannot evaluate lst[count] when count is too big, however you can exploit the fact python short-circuits and/or operatorsThis way the loop will stop properly either if count is too big, or if the second condition becomes False.
Why not use a for to iterate the list, and an enumerate to count the number of tries.It would be more pythonic than a while imho.


Answer URL
https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not
