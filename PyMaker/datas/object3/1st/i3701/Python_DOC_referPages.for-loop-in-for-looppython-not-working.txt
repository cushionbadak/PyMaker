Natural Text
This program is supposed to remove duplicate elements from a list but it doesn't seem to work,OUTPUT
I've used indexing to retrieve elements from a list, as others are solving this using set() which is impressive, but i guess you are a beginner like me so i wrote this program from basics just like you.
You are not returning anything from func(), so it defaults to returning None. In order to return something, use return.There's also a much simpler way of doing this.The set can only contain unique elements by definition - therefore, casting to a set removes duplicates. It is, however, unordered by default, so instead of just casting to a set we add members to a new list one by one, checking they're not already in our new list and, if they're not, adding them to our seen set. Credit for that method to Martin Broadhurst
I'll put that as an answer. but note that you should probably clarify your title.Firstly, if your main goal is to remove duplicate, your best bet is to cast your list as a set since set don't allow duplicate internally. Also note that you could use that for a better output:
Besides for all the other good answers how to get the result you're looking for the logic is flawed.a_list.index(value) will always return the first instance of value inside the list.in your instance list.index(x) != list.index(y) will never be true since you will always be matching the first occurrence of the value represented by x and y.Therefore whenever x == y then list.index(x) will always equal list.index(y).


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
