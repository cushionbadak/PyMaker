Natural Text
This question already has an answer here:Asking the user for input until they give a valid response                    17 answers                How to validate person names? - Python/Django                    4 answers                I am at the part where I ask the user for their name. So far I got this:So if the user inputs nothing, it repeats the question. But when the user inputs an integer or a float it registers this as a valid name. How will I be able to make it so that if the Name variable is an integer or a float, it will respond with "Please enter a valid name" and repeat the question? 
I'm updating my answer to simplify the code and make it more readable. The below function is a function that I would use in my own code, I would consider it to be more "proper" than my old answer.To break this down, the line all(letter in ascii_letters + " -" for letter in name) means "if each letter in name is not an alphabetical character, a space, or a hyphen".The part letter in ascii_letters + " -" checks to see if a letter is in the string "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ -".This is repeated by the next part, for letter in name, for every character in the string. This will effectively return a list of booleans, [True, True, True, ...] where any False is a character that did not pass the conditional. Next, this list is passed to the all() function, which returns  True if all of the list items are True.After the all() is executed, conditional is reversed, allowing the loop to continue on the existence of a single failed character.Old answer is as follows, it will still be useful.This function should work well for you. Simply check if the string the user entered is alpha characters only, otherwise ask again.Notice the use of str.isalpha().Checking if name will check if the string is empty, and using str.strip() on the values returned will remove any surrounding whitespace (stray spaces) to the left or right of the user input.The str.replace("-", "") eliminates hyphens while checking validity. Thanks for pointing this out @AGN Gazer.Now you can just call the function later in your script, or store it for later.The str.title() converts the letter of each word in a string to uppercase. For example, if I entered my name "jacob birkett", the output (and subsequent value of name would be "Jacob Birkett".Take a look at the documentation for str.isalpha(), str.strip(), str.replace() and str.title().
You can try this :Here if the Name is any numeric value it will ask again, But if the name is like alphanumeric it will accept.
You can use a function like .isalpha() as this will return True if all the string contains all the alphabets:Or You can try exception handling in python as (but this should be prevented):This will check if the input is an integer print the error.
You can try:This will check if variable Name containing numeric data or not.You also can try if name is like "harsha-biyani":
You can use: "3".isalpha() FalseTrue


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.isalpha
https://docs.python.org/3/library/stdtypes.html#str.strip
https://docs.python.org/3/library/stdtypes.html#str.replace
https://docs.python.org/3/library/stdtypes.html#str.title
