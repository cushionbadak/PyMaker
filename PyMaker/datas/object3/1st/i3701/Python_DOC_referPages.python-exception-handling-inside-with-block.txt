Natural Text
Is the following code doing anything wrong with with statement and exception handling of python3? If no, what is the correct way of writing my expected output?and the output isand I expect the output is:which I believe other people write similarly in the hope that the file would be closed when an exception was raised during the processing of the file.My python3 version is:
The exception from within the block governed by the with statement is propagated to your generator context manager through generator.throw() as shown in PEP 343: "Generator Decorator", which raises the exception at the point where the generator was paused. In other words you should wrap the yield in a try/except or try/finally:To quote the official documentation on the subject:...If an unhandled exception occurs in the block, it is reraised inside the generator at the point where the yield occurred. Thus, you can use a try…except…finally statement to trap the error (if any), or ensure that some cleanup takes place. If an exception is trapped merely in order to log it or to perform some action (rather than to suppress it entirely), the generator must reraise that exception. Otherwise the generator context manager will indicate to the with statement that the exception has been handled, and execution will resume with the statement immediately following the with statement.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#with
https://docs.python.org/3/reference/expressions.html#generator.throw
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
https://docs.python.org/3/reference/compound_stmts.html#try
https://docs.python.org/3/reference/compound_stmts.html#except
https://docs.python.org/3/reference/compound_stmts.html#finally
https://docs.python.org/3/reference/compound_stmts.html#with
https://docs.python.org/3/reference/compound_stmts.html#with
