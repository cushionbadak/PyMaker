Natural Text
Given a list of numbers, create a new list of numbers such that the first and last numbers are added and stored as the first number, the second and second-to-last numbers are stored as the second number, and so on  output is [7,7,7]I got the correct output this way but I am sure this is not an efficient way to do it. Is there a better way? I also am supposed to check for even and odd length of the list and if its an odd number of integers, add the central integer in the original list to the end of the new list but don't know how I would go about doing this 
I think this is more efficient, i just simply did a for loop:Output:
Let us using reversed
Here's an inefficient[1], but clear way of doing this:You could improve it by using islice and reversed iterators, or use index math exclusively.Output:[1] This makes two copies of the list parts.  For long lists this is silly, and you shouldn't use this method.  It was mostly written to highlight zip_longest's fillvalue optional argument.
Using itertools.islice on a generator:
You can use the following method, which is compatible with asymmetrical list.so for a symmetric listand for asymmetric list
It's simpler than you imagine.Just observe your manual attempt and try to infer from it. We can simply door with a simpler one-linerThis works for even as well as odd lengths because of the len(num_list)%2 at the end in the range.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
