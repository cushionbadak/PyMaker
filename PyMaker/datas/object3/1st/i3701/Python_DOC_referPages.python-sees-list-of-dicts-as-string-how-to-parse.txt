Natural Text
I am a student in Data Science but have little code experience so far.My issue is: how can I obtain a list of dicts from a string, that already is in the form of a list of dicts but is seen by pandas as a string?Here is the dataset (credits):https://www.kaggle.com/tmdb/tmdb-movie-metadata/dataIn the columns 'cast' and 'crew' I have cells like this:(obviously there are dozens of dicts for each cell)My main problem is that, after I have loaded the file and created a data frame, the cells of these two columns (cast and crew) are seen by pandas as strings, and not as a list of dicts, and so I cannot perform the operations I need.And if I try to apply list() on it, it just creates a list of single characters.How can I make python understand it's actually a list of dicts, and treat it as well?I have to do some basic operations like "for each movie, compute the number of cast members" or "for each movie, compute the number of directors". These would be really easy if I just solved this big issue.Thanks in advance for any help!
You have to append dict in list
So you have list of dictionaries, but they appear in your dataframe as strings. This is extremely inefficient. You should aim to improve the workflow upstream so that you read dictionaries directly into Python.However, given what you have, you can utilise ast.literal_eval to read your strings literally. Then feed into pd.DataFrame. This works because pd.DataFrame accepts a list of dictionaries directly.Once in a dataframe, you can:Count the number of dictionaries via len(df.index).Use Pandas Boolean indexing to filter, e.g. df.loc[df['job'] == 'Director', 'name'] will filter for names of directors.Here's an example:
Try ast.literal_eval:For efficient applying changes, try apply:Extracting desired fields from dictionaries:


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
