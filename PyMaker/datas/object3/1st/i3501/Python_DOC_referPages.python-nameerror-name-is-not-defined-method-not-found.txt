Natural Text
I'm working from a book, very much newbie stuff, and the code below is from the book, and defines a simple class. But for some reason, the author has decided to put a "helper method" called check_index outside the class. I cannot for the life of me figure out why he would do this, as the method seems integral to teh operation of the class. He writes:The index checking is taken care of by a utility function Iâ€™ve written  for the purpose, check_index.I have tried putting it inside the class (the code below is as it is in the book), but the runtime refuses to find the method - it falls over withMy questions are, why did the author put this "helper method" outside the class, and why does the code not work when I move the method inside the class:When I move the method inside the class, I just slot it in with the other methods. But it is not found by the runtime. Why?
You need to use selfEx:And call the function with self Ex: self.check_index
Your def check_index(key) still defines a method of ArithmeticSequence, regardless of what you call the first argument, which means you have to call it like a regular instance method (self.check_index()), and if you want to pass it an argument you have to add it after self. If you want to define a method on the class itself, you can use @staticmethod or @classmethod:
ArithmeticSequence is not a new-style class. Check thisYou have 2 options:Add self to check_index. In the class, you will use it as self.check_index(key). You will need to instantiate an ArithmeticSequence class object.Add @staticmethod before check_index. You will use it as ArithmeticSequence.check_index(key)


Answer URL
https://docs.python.org/3/library/functions.html#staticmethod
https://docs.python.org/3/library/functions.html#classmethod
