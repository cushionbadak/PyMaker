Natural Text
I have a list of x,y coordinates that I need to sort based on the x coordinate, then y coordinate when x is the same and eliminate duplicates of the same coordinates. For example, if the list is:I would need to rearrange it to:(with one duplicate of [450.0, 313.3] removed)
That is the normal sort order for a list of lists, anyway.  De-dupe it with a dict.
As we are sorting anyway we can dedupe with groupby:A few timings:
What you want seems to be easily done with numpy's unique function:If you are really worried that the array is not sorted by columns, then run np.lexsort() in addition to the above:Timings (non-random sample):Timings (more random sample):When sample data are more random, the results are different:
We can do this quite fast using np.lexsort and some maskingPerformanceFunctionsSetupValidation
Here's one way using sorted and toolz.unique:Note toolz.unique is also available via the standard library as the itertools unique_everseen recipe. Tuple conversion is necessary as the algorithm uses hashing via set to check uniqueness.Performance using set appears slightly better than dict here, but as always you should test with your data.I suspect this is because unique is lazy, and so you have less memory overhead since sorted isn't making a copy of the input data.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
