Natural Text
This question already has an answer here:How can I check if a string represents an int, without using try/except?                    14 answers                How do I check if a user's string input is a number (e.g. -1, 0, 1, etc.)?The above won't work since input always returns a string.
Simply try converting it to an int and then bailing out if it doesn't work.
Apparently this will not work for negative values, but it will for positive.  Sorry about that, just learned about this a few hours ago myself as I have just recently gotten into Python.Use isdigit()
I think that what you'd be looking for here is the method isnumeric() (Documentation for python3.x):Hope this helps
For Python 3 the following will work.
EDITED:You could also use this below code to find out if its a number or also a negativeyou could also change your format to your specific requirement.I am seeing this post a little too late.but hope this helps other persons who are looking for answers :) .  let me know if anythings wrong in the given code.
If you specifically need an int or float, you could try "is not int" or "is not float":If you only need to work with ints, then the most elegant solution I've seen is the ".isdigit()" method:
Works fine for check if an input is   a positive Integer AND in a specific range
I would recommend this, @karthik27, for negative numbers Then do whatever you want with that regular expression, match(), findall() etc
the most elegant solutions would be the already proposed,Unfortunatelly it doesn't work both for negative integers and for general float values of a. If your point is to check if 'a' is a generic number beyond integers i'd suggest the following one, which works for every kind of float and integer :). Here is the test:I hope you find it useful :)
You can use the isdigit() method for strings.In this case, as you said the input is always a string: 
This solution will accept only integers and nothing but integers.
This works with any number, including a fraction:
Why not divide the input by a number? This way works with everything. Negatives, floats, and negative floats. Also Blank spaces and zero.Result:
natural: [0, 1, 2 ... ∞]Python 2Python 3integer: [-∞, .., -2, -1, 0, 1, 2, ∞]float: [-∞, .., -2, -1.0...1, -1, -0.0...1, 0, 0.0...1, ..., 1, 1.0...1, ..., ∞] 
I know this is pretty late but its to help anyone else that had to spend 6 hours trying to figure this out. (thats what I did):This works flawlessly: (checks if any letter is in the input/checks if input is either integer or float)
Here is a simple function that checks input for INT and RANGE.  Here, returns 'True' if input is integer between 1-100, 'False' otherwise
Here is the simplest solution:
This makes a loop to check whether input is an integer or not, result would look like below:
If you wanted to evaluate floats, and you wanted to accept NaNs as input but not other strings like 'abc', you could do the following:
I've been using a different approach I thought I'd share. Start with creating a valid range:Now ask for a number and if not in list continue asking:Lastly convert to int (which will work because list only contains integers as strings:
I also ran into problems this morning with users being able to enter non-integer responses to my specific request for an integer.This was the solution that ended up working well for me to force an answer I wanted:I would get exceptions before even reaching the try: statement when I used and the user entered "J" or any other non-integer character.  It worked out best to take it as raw input, check to see if that raw input could be converted to an integer, and then convert it afterward.
try this! it worked for me even if I input negative numbers.
Based on inspiration from answer. I defined a function as below. Looks like its working fine. Please let me know if you find any issue



Answer URL
https://docs.python.org/3/library/stdtypes.html#str.isnumeric
