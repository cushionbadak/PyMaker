Natural Text
I am trying to understand decorators and currently reading the documentationI do not understand why getMethods gets an argument called aClass but when SomeClass is defined and it is called later (see below) it can figure out what to replace with aClass in getMethods method:UPDATE:Thanks to the answer but for future reference my confusion originated from the fact that self is a reserved word and aClass is not. So I wasn't sure how that is being handled. @abarnert's comment I think clarifies that the code in documentation is not really representative. 
This isn't really related to the fact that it is a classmethod.For the same reason we don't need to pass the instance when calling a "normal" instance method, the instance (and in this case, the class) is passed implicitly.
Straight from the classmethod documentation:A class method receives the class as implicit first argument, just like an instance method receives the instanceThis is the same for derived classes:If a class method is called for a derived class, the derived class object is passed as the implied first argument.
According to the description, as in the below mentioned link  https://docs.python.org/2/library/functions.html#classmethodA class method is a method that is bound to a class rather than its object. It doesn't require creation of a class instance, much like staticmethod.The difference between a static method and a class method is:Static method knows nothing about the class and just deals with theparameters Class method works with the class since its parameter isalways the class itself.The class method can be called both by the class and its object.source:https://www.programiz.com/python-programming/methods/built-in/classmethodYou can see the description of the @ClassMethod here in the __ builtin __.py


Answer URL
https://docs.python.org/3/library/functions.html#classmethod
https://docs.python.org/3/library/functions.html#classmethod
