Natural Text
I am new to python GUI and have never used python GUI before. I just decided to gave a try.this is my function which convert local datetime to epoch, eg.py is the filename where both this functions areThis functions takes two parameters of datetime and returns in timestamp (milliseconds)this works as expected Now, I wanted to implement this in python GUI and I am using appjar library. This simple GUI code looks like thisWhen the GUI runs, I fill both text fields as it is and it throws errorI also tried, just in case and again throws the same errorI am new in python GUI and any kind of suggestions is welcome. Also any suggestions about tkinter to implement above functions would be also helpful. 
I don't know anything about appJar, but the contents of a text entry field are almost certainly going to be a string, not a tuple of numbers. So, instead of calling epochConverter((2018,6,8,0,0,0)), you end up calling epochConverter("(2018,6,8,0,0,0)"), which obviously isn't going to work.The specific problem is that *a. For a tuple of 6 numbers, that turns into 6 arguments; for a string of 14 characters, it turns into 14 arguments.Anyway, you need to write some code that takes input string, and parses it into the right format.One way to do this, albeit a pretty hacky way, is to use literal_eval, which takes any string that works as a Python source-code literal and turns it into the equivalent value:You'd probably want to add some error handling, of course:Also, even if literal_eval succeeds, that just means you had some valid Python valid, not necessarily a tuple of 6 integers—it'll succeed just as well with, say, a set of two strings and a complex number.A cleaner way to do this is to write a parser for your specific format. This may sound a bit scary, but your format is pretty trivial: you have to have exactly 6 integers, with commas in between, right? So:So now:And again, you'll want some error handling. In this case, an invalid string is going to give you a ValueError instead of a SyntaxError, but otherwise, it's the same.Of course, even though now we can be sure we have a list of six numbers, you can still get an error from the date parsing—e.g., the user could have asked for 2018,40,5,0,0,0.You might also want to consider moving the conversion logic into epochConverter or DateExtraction instead of the GUI. \For example, imagine that you wanted to use the same "engine" code with a command-line tool. That command-line tool is going to get its arguments from sys.argv, or input(), or similar, so it's also going to end up getting a string, in the same format as the GUI entry, right? So you'll probably want it to share the same string-to-tuple conversion logic.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
