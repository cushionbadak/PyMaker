Natural Text
Firstly, I know this has been posted on before, but either A) the recommendations don't work or B) the recommendation is to manually delete the module from the namespace and re-import it like normal.I have the following module structureIf I'm in the basedir, and import pytools and create an object of class testcls. The actual properties of the class are found in tools.py. testcls has a method called testfunc which simply prints out AAA right now:Let's say I change testfunc() to now print out BBB. I do so, and save the file. Then I reload the module and try again, it doesn't print out BBB:However if I do the exact same process but instead change test.py, import that file as a module, edit a function inside of it, and reload it, it behaves as expected:I really don't understand what's going on and it's just really annoying me at this point. It's also costing me a good bit of time as well, but I'm more annoyed at the moment. Any ideas what's going on??Versions:Python: 3.6.5Interpreter: IPython, 6.2.1
Let's name things more generally:If testmodule.py contains:Then the following works as you expect:But, if __init__.py has something like:And you try to import (and reload) the package and not the module, the following happens:(It's unchanged)Note the following section of the docs:If a module imports objects from another module using from … import …, calling reload() for the other module does not redefine the objects imported from it — one way around this is to re-execute the from statement, another is to use import and qualified names (module.name) instead.If you were to reload both the module and the package, in that order, it'd again work as you expect:But this seems silly and error-prone, just use the approach in the first example:


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.reload
