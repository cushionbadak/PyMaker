Natural Text
Suppose I have a large CSV file with data on whether it rained at a given day and time. A toy example is as follows.I wish to write code that can calculates the proportion of time that it rained in a day. My calculation method is as follows (from the second observation of the day onwards):If it didn't rain between that observation and the previous observation, then the entire period is not counted as raining. If it rained between that observation and the previous observation, then the entire period is counted as raining If exactly one of that observation and previous observations is raining, half of the period is counted as raining.So for example, on Day 1 it was raining for 30 minutes (half of 0800 to 0818, half of 0818 to 0842, and half of 0842 and 0900). On Day 2 it was raining for 49 minutes (half of the period from 0800 and 0822, and raining from 0822 to 0900).How can I do this quickly in Python? I know that for line in file: iterates through each line, but doesn't store a memory of the previous line.
I'd maintain a variable holding the last line seen and update it each iteration:You could also default last_line to a valid value at the start which would do away with the need to check for it in the loop. That's not always feasible though. There is conceivably more complicated methods like zipping lines with a version of itself where each element is offset by one, but this is likely much simpler. 
[Note: if this is a one-off, then I suggest using Carcigenicate's answer]This is a great use for generators and the yield statement.  The following function will accept your iterator, and yield pairs as a 2-tuple which can be used however you need.Generator Function:Example:Output:Notes:There are two keyword arguments, first and last, which can be used to control the output of the first and last items on the output example above.
You could just zip() your lines, where you know the previous line and current line.Demo:Output:You could also use the csv library for csv file processing. 
You can use itertools.groupby:Output:


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/csv.html
