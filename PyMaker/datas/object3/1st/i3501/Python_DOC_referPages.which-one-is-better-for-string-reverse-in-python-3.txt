Natural Text
In above the string is reverse using python 3 reversed method and slicing method both display the same output, but from this which one is most efficient in python programming language, why??
When you talk about efficiency you should specify from which perspective? Memory, Runtime, Implementation, etc.Regard the runtime the reverse indexing is definitely faster because when you use join plus reversed you're calling two functions which both has their own deficiencies (suspending and resuming a function's frame, etc.) compare to a simple indexing. But if you want to loop over the character one by one, for any purpose, and the memory is an issue (mostly when the string is large) you can use reversed because it returns an iterator object.So the conclusion is that you should choose the method based on your need and actually this is why there are multiple ways for one particular task in Python.
There is no significant difference in memory efficiency. Since strings are immutable, both approaches must copy the entire data. To check performance, you can use the timeit module in standard libraries. Slicing is significantly faster, due to avoiding iteration within Python code:And the runtime improvement is increasing for larger strings:CPython 3.7.0b4 on macOS.


Answer URL
https://docs.python.org/3/library/timeit.html
