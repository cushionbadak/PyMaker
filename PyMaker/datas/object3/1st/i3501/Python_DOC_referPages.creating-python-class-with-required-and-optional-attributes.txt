Natural Text
I want to create multiple python classes which has alot of required and optional fields. During initialization I want to check whether all required attributes are passed and do validation of all attributes.This is solution i came up with. But problem with this, IDEs no more auto suggests the class attributes.Is there any better solution to handle my problem ?
The ways you  can use a metaclass to check for properties are open ended, and just code running at run time can actually define whether an argument will be required or valid. That means, there is no way for an IDE to possibly guess your desired verification schema and work along with it - you could only ensure it by writing an extension to your IDE that would go along with your code.HOWEVER, there is a good chance that if an IDE imports a module containing your class using Python itself (and  not by trying to statically check the actual typed-in code), if your object-classes have a well formed __init__ method with all required parameters as mandatory, and all optional parameters with a default sentinel value, it would work.Therefore, you have to write your metaclass in a way it actually generates an __init__ function with the proper signature. Although there are ways to programmaticaly  set a function signature with things from the inspect module, or create a function using types.CodeType + types.FunctionType, this would take  a long time to get working, and become less readable than simply composing a string with the desired method signature and use exec to get it rolling. Moreover, this could make use of annotations, so you can get even extra help from the IDE.So, your code could become something like (sorry - Python 3.6 - to make this compatible with Python 2.7 as well you will need a lot more typing):


Answer URL
https://docs.python.org/3/library/abc.html
