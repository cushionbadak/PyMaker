Natural Text
This question already has an answer here:String comparison technique used by Python                    8 answers                So, I have been working in some problems that require that the code organize a string in alphabetical order, so my first thoughts were to try using char comparisons.If charA < charB and all that, but couldn't make it. But I guess I don't really know how the char comparison Works.Need a simple explanation on how they work.Thank you!
When you compare chars, their ordinal values are comparedSo 'a' < 'b' just means ord('a') < ord('b')
If charA and charB are actually characters (that is, length-1 strings), then charA < charB iff ord(charA) < ord(charB). That is, if the Unicode code point of charA is a smaller number than the Unicode code point of charB, it's a smaller character.Notice that this means that 'Z' < 'a', because in Unicode, all of the capital letters A-Z come before the lowercase letters a-z:If you want some kind of "friendly" comparison, you have to ask for it explicitly. Often, you just want casefold, which aggressively gets rid of case information, so that, e.g., A and a can be treated the same:For full generality, you probably want something like the Unicode Collation Algorithm. But Python doesn't come with that built in, so you'd need a third-party library like pyuca.


Answer URL
https://docs.python.org/3/library/functions.html#ord
https://docs.python.org/3/library/stdtypes.html#str.casefold
