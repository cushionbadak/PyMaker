Natural Text
I'm trying to experiment a bit with python asyncio to improve in that area, for self teaching purposes I'm trying to connect to redis, send some commands and read the response, this can fall under generic "read a stream of data from some source". The problem I cannot solve is how to read data in chunks, since the connection is not being closed between server and client and the termination sequence \r\n could be met more than once. If I await when there is no more data of course the call will block until something else will be received.Let's pretend I want to read the response in chunks of 2 bytes (yes is stupid but it's just for this learning purpose) so:I cannot figure out how while not knowing the length of the server response the code can still be safe when the response is longer than the bytes read from the socket.
I encountered a similar problem recently. My solution was to continue reading until a given character (or set of characters) is read. This is the same philosophy behind people saying "over" on walkie talkies when they are done talking. It is easier to just wait for the response to say that it is done talking. While I haven't worked with the asyncio module before, I believe that the following code should solve your problem, assuming that the source of the input ends the response with whatever character (or string of characters) is indicated in the variable end_signal.


Answer URL
https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamReader.readuntil
https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamReader.readuntil
