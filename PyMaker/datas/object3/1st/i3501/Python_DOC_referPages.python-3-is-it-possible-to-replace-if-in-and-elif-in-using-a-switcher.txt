Natural Text
I know how to use a dictionary as a switcher in Python. I'm not sure how to use one for my specific case. I think I will just need to use if, elif, and else but hopefully I am proved wrong by the community :)I want to make a find/replace function for certain characters in strings. The string is at least one sentence but usually more and comprised of many words.Basically what I am doing is the following:.... and so forthThe only thing I can think of is splitting the string apart into separate sub-strings and then looping through them then the dictionary switcher would work. But this would obviously add a lot of extra processing time and the purpose of using a dictionary switcher is to save time.I could not find anything on this specific topic searching everywhere.Is there a way to use a switcher in Python using if in and elif in?
Here's the str.translate solutionNote that this only works if you want to replace single characters from the input.  {'a': 'bb'} is a valid replacements, but {'bb': 'a'} is not.
Just to show that regex is a valid solution, and some timings:Timings (str.trans wins and is also cleaner)
Although Benjamin's answer might be right, it is case-specific, while your question has a rather general-purpose tone to it. There is a universal functional approach (I've added Python 3.5 type annotations to make this code self-explanatory):This is quite superfluous in your case, because your example boils down to a regex operation. Take note, while switches can be any iterable, you might want to use something with predictable iteration order, i.e. any Sequence type (e.g. list or tuple), because the first action with a matched predicate will be used.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
https://docs.python.org/3/library/stdtypes.html#str.translate
