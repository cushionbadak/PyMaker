Natural Text
I have a dict that I defined with:I then iterate through a file and based on elements in the rows I add them to different lists in that dict based on a value in the rowThis is code inside the list comprehension looping through the reader content:As you can see, I am adding the string "FOOOO" in the case of 'Reverse". I did this to see what was happening inside of the lists in the dict.I have validated that the if-then statements are all working correctly.However, the appends seem to be writing to the same place in memory. It's strange. Here is some output of the list comprehension looping through the file content:It makes no sense to me that print(NOC['Reverse']) is showing values that have anything other than those with the appended "FOOOO". Why is this happening?
You're creating only a single list with:which gets assigned to every key of NOC. Since the keys point to the same list, whatever key you use you'll get the same list back, hence you'll be modifying the same list. You can easily test that with:Instead of doing that, make sure each key gets its own list as:
The problem is because the value for both the keys has same reference, when you create a dictionary from keys using NOC = dict.fromkeys(keys, [])If you can see here both keys has reference to the same list. So when you are appending it is getting appended to the same list. So, I would prefer you to do something like this to create dictionary in order to avoid the above problem.Now the append works perfect.
If the provided value is a mutable object (whose value can be modified) like list, dictionary, etc., when the mutable object is modified, each element of the sequence also gets updated.This is because, each element is assigned a reference to the same object (points to the same object in the memory). you must be use dictionary comprehension keys = ['Valid', 'Reverse']NOC = { key: [] for key in keys }
Here the problem is that all values point to the same list. An efficient and Pythonic solution would be to use collections.defaultdict.Hope it satisfies your requirements.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
