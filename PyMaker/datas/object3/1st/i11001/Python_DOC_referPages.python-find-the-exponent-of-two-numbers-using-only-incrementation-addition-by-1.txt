Natural Text
I am trying to find the exponent of two numbers (n,m) using the only arithmetic operation of incrementation "+=1" by 1. I can not use any other addition/multiplication or division operators.  The program can be a function or a loop such that the user enters n, and them m and the program calculates n raised to the power of m. There is one question closely related to mine already posted BUT it is looking for one, odd numbered square AND the addition operator is allowed. The related question does not help me raise the value of n by the value of m. Here is the code I have so far, it will multiply but not square based on user inputs. Thanks in advance!
Functional programming works nicely here. Addition is repeated incrementing. Multiplication is repeated addition. Power is repeated multiplication.By defining a function (repeat) that repeatedly applies a function to an argument a given number of times, one can build up the power function.Here's the code.The only built-in arithmetic performed is incrementing by 1 and an equality comparison in the while loop in the repeat function.
To do this, we need to understand first: What is multiplication?a x b is equivalent to a + a + a +... b times. Then, what is exponent? a^b is equivalent to a x a x a x.. b times. So, you would need two while loops and two counters.
With only += 1 as arithmetical operation, your solution could look like this:


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions
