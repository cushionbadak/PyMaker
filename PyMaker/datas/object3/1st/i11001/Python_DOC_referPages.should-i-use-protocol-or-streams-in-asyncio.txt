Natural Text
I'm very new to asyncio and was wondering which API is better than the other in terms of better practice, protocol or streams?To me, protocol(callback based API) seems easier to work with since there are already connection_made and data_received methods provided to you.  With streams(coroutine based API) you have to manage connections and read data yourself, but I feel like it utilizes concept of coroutine more, which seems a good thing to me.this is how i listen to incoming data, feels awkward to me. I can also use readeexactly but sometimes it raises IncompleteReadError.
The stream objects are higher level and provide many useful methods:Several ways to read data: reader.read, readline, readuntil, readexactlyCheck if EOF has been reached: reader.ateofControl write flow: writer.drainLike any abstraction, this comes at a cost: coroutine are a bit less reactive than callbacks. For instance reader.read() involves at least two event loop callbacks:When some data is received, a callback is triggered and reader.feed_data is called.Then feed_data triggers another callback that restores the execution of reader.read().


Answer URL
https://docs.python.org/3/library/asyncio-stream.html#streams-coroutine-based-api
https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamReader.read
https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamReader.at_eof
https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamWriter.drain
