Natural Text
I know that if I just have two strings that checking using x in y will work.  And that if I just wanted to check if a string is in any of the strings in a list I'd just use a for loop for that.But what is the most pythonic/efficient way to check if any of the strings in the first list are substrings of the strings in the second list?An example would be:I'm going to use both present and notPresent words.
I would say something like this:So basically 2 for loops. And use sets instead of lists (fr uniqueness of values)...
You can do this with any and a set comprehension:any helps avoid running the entire length of the iteration after a match has been found, and with set you can generate the complementary set notPresent from the first.
the fastest way is probably to turn the first list into a setthen, for each string in listB, check if any of its substrings are in setA.


Answer URL
https://docs.python.org/3/library/functions.html#any
