Natural Text
I am new to Python. I use Fortran to generate the data file I wish to read. For many reasons I would like to use python to calculate averages and statistics on the data rather than fortan.I need to read the entries in the the first three rows as strings, and then the data which begins in the fourth row onwards as numbers. I don't need the first column, but I do need the rest of the columns each as their own arrays.And the data goes on for thousands, and sometimes millions of lines.I have tried the following, but run into problems since I can't analyze the lists I have made, and I can't seem to convert them to arrays. I would prefer however to just create arrays to begin with, but if I can convert my lists to arrays that would work too. In my method I get an error when i try to use an element in one of the lists, i.e. Energy(i)I appreciate any help!
I would use pandas module for this task:Data Frame:Average values for all columns:
You can consider a list in Python like an array in other languages and it's very optimised. If you have some special needs there is an array type available but rarely used, alternatively the numpy.array that is designed for scientific computation; you have to install the Numpy package for that.Before performing calculations cast the string to a float, like in energy.append(float(row[3])) Maybe do it at once using map function:Last, as @Hamms said, access the elements by using square brackets e = energy[i]
You can also use the csv module's DictReader to read each row into a dictionary, as follows:Ofcourse this assumes that the file is formatted more like a CSV (that is, no comments). If the file does have comments at the top, you can skip them before initializing the DictReader as follows:


Answer URL
https://docs.python.org/3/tutorial/introduction.html#lists
