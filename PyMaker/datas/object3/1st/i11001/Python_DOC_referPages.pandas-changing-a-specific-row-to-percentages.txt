Natural Text
I have a row in a Pandas Data frame that contains the sales rate of my items.A look at my data:I can easily calculate the sales % by doing the following:Now what I am attempting to do is to change the "Total Sales Rate" row to whole number percentages. I am able to do this if it was a column however I run into issues when I work with rows.Here is what I attempted:The calculations are off/ shifted to the left. The sales rate given for month 1 is actually the sales rate for month 2 (39%)!
You could use .apply('{:.0%}'.format):yieldsNotice that the Python str.format method has a built-in % format which multiplies the number by 100 and displays in fixed ('f') format, followed by a percent sign.It is important to be aware that Pandas DataFrame columns must have a single dtype. Changing one value to a string forces the entire column to changeits dtype to the generic object dtype. Thus the int64s or int32s in theTotal Listings and Total Sales rows get recast as plain Python ints.  Thisprevents Pandas from taking advantage of fast NumPy-based numerical operationswhich only work on native NumPy dtypes (like int64 or float64 -- notobject).So while the above code achieves the desired look, it isn't advisable to usethis if further computation is to be done on the DataFrame. Instead, only convertto strings at the end if you need to do so for presentation.Or, alternatively, transpose your DataFrame so the Total Sales Rate strings are in a column, not a row:yieldsThe reason why shifted the values to the left by one column is because the new Series has an index which starts at 0 not 1. Pandas aligns the index of the Series on the right with the index of block_combine.loc["Total Sales Rate"] before assigning values to block_combine.loc["Total Sales Rate"]. Thus, you could alternatively have used:
Result...


Answer URL
https://docs.python.org/3/library/string.html#format-string-syntax
