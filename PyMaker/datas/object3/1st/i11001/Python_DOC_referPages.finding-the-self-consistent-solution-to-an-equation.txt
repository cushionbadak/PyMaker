Natural Text
At the bottom of this question are a set of functions transcribed from a published neural-network model.  When I call R, I get the following error:RuntimeError: maximum recursion depth exceeded while calling a Python objectNote that within each call to R, a recursive call to R is made for every other neuron in the network.  This is what causes the recursion depth to be exceeded.  Each return value for R depends on all the others (with the network involving N = 512 total values.)  Does anyone have any idea what method should be used to compute the self-consistent solution for R?  Note that R itself is a smooth function.  I've tried treating this as a vector root-solving problem -- but in this case the 512 dimensions are not independent.  With so many degrees of freedom, the roots are never found (using the scipy.optimize functions).  Does Python have any tools that can help with this?  Maybe it would be more natural to solve R using something like Mathematica?  I don't know how this is normally done.
This recursion never ends since there is no termination condition before recursive call, adjusting maximum recursion depth does not helpPerhaps you should be doing something like
Change the maximum recursion depth using sys.setrecursionlimitMore info: https://docs.python.org/3/library/sys.html#sys.setrecursionlimit`


Answer URL
https://docs.python.org/3/library/sys.html#sys.setrecursionlimit
