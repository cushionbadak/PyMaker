Natural Text
I have to make sure that an email address that is inputted is valid. An email address must:Start with a string of alphanumeric charactersfollowed by the @ symbolanother string of alphanumeric charactersfollowed by a .then a string of alphanumeric characters.For example, a@b.c and ab23@f45.d3 are both valid, but @bc.d and 123.c@cvb are not valid. How would I program something that would make sure the input follows this order?
Use Regular ExpressionAn example:
I would split the string at the @ character into two new strings and check if the string to the left of @ only contains alphanumeric characters. Then I would split the string on the right at the . character and check if both left and right string contain only alphanumeric characters.
This is my take on this:Checks to make sure '@', '.' can be found exactly once in the provided string and the string parts before and after them are alphanumeric & non empty.However, the rules implemented here are not the rules generally applied to email accounts. For a list of those, see the syntax paragraph of this article.
Here's another non-regex way to do it:The domain part of the email address is restricted to two parts separated by a .. Valid email domains can have at least three parts so, if you want to support that, remove the len(parts) == 3 test.And here is a regex pattern that works:You can't use \w in the pattern because this will match the underscore character and this is not normally considered alphanumeric. The $ is required at the end of the pattern to ensure that the last segment of the email address ends with alphanumeric characters only. With out this extraneous invalid characters appearing at the end of the string after a sequence of valid characters will match.In this case I'd opt for the first method using just basic string functions because it is (arguably) easier to read and maintain than a regex.


Answer URL
https://docs.python.org/3/library/re.html
