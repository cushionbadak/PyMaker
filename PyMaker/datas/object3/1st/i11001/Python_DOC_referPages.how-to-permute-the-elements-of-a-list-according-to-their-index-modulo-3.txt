Natural Text
I want to permute the elements of a list according to their index modulo 3, so for example the list:should be reordered into:and in general:should become:I have tried to use the following code:It's not working properly, as arr gets changed throughout the while loop, and I can't really see why.(also I know that I could do the "f index % ... bits in a for loop as well, but it should work anyways, right?)Is there a pre-existing function that could do that instead?
You are reordering on the modulo of 3:If you're reordering on the index and not on the values, then something more detailed requiring enumerate would do that:
Another one based on index is 
Let a = [0,1,2,3,4,5,6,7,8].a[::3] will give you every third element: [0, 3, 6]a[n::3] will give you every third element starting at n, so a[1::3] becomes [1, 4, 7] and a[2::3] becomes [2, 5, 8].Concatenate these lists with +: a[0::3] + a[1::3] + a[2::3] evaluates to [0, 3, 6, 1, 4, 7, 2, 5, 8], as specified.
Here's a generalized solution to chain a list together by grouping on some step. itertools.chain.from_iterable is used to chain the resulting groups from each step together. Demo:If the step length does not fit nicely into the list, the additional elements are placed at the end of the new list, and if the step length is larger than the list then evidently the original list is returned. Why your attempt doesn't workWhen you set temp_arr = arr, temp_arr is simply a reference to the same underlying (mutable) list as arr. Hence you are modifying it. You can think of temp_arr and arr as two "sticky-notes" attached to the same underlying list object, which will change accordingly. If you copy your original list arr with the list() built-in your approach works for this particular case. 


Answer URL
https://docs.python.org/3/library/functions.html#list
