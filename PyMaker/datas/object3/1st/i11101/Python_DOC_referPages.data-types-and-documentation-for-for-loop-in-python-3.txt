Natural Text
I am very confused about the data types and UTF-8 encoding. What is actually happening under the hood? I am reading a messy JSON data without delimiters in Python 3 (data has Japanese/Chinese characters time to time).I am reading in the data:And it returns bytes at the momentThen I want to read it letter by letterIt returns me that letter is an integer right now. Why it was a byte and now it is an integer?P.S. I understand that the integer that I am getting represents a decimal representation of the character. But this jumping back and forth makes me confused.P.S. I also couldn't find official documentation for for-loop. Is there one?Thank you.
Decoding the data as Padraic Cunningham suggested should work:You also asked for the official documentatio for the for-loop. I'm not sure if you refer to this or you are talking about the iteration behaviour of data.The iteration behaviour of a bytes is as stated here:Since bytes objects are sequences of integers (akin to a tuple), for a bytes object b, b[0] will be an integer, while b[0:1] will be a bytes object of length 1. (This contrasts with text strings, where both indexing and slicing will produce a string of length 1)Not enough rep to post it as a comment to the previous answer, I'm sorry.
You need to decode the bytes to str:After decoding you will get see the characters when you loop and print. urllib.request.urlopen(url).read() returns bytes, it is up to you to decode the bytes into a str.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#for
https://docs.python.org/3/library/stdtypes.html#bytes.hex
