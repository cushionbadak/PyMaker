Natural Text
Here's code:If you run it you'll see:I understand what happened, but I can't find what type of message this warning is.Looks like it's not logging warning (I can't remove it setting logging level). It's also not warnings warning (It doesn't look like what we get when call warnings.warn).I thought it can be associated with exception, but I can't catch it with sys.excepthook, while msg itself disappears:How can I catch this warning?How can I manually create this type of warning?
As some have noted, not everyone always gets the behaviour that you describe. For instance, you won't get this behaviour at the REPL. To reproduce this behaviour on the REPL you have to add del gen at the end. This lets us know where the warning is coming. The warning is coming from the clean up function of the generator object, which has noticed that the generator has not exited cleanly. What specifically has happened is that the generator has raised an exception whilst the interpreter is trying clean up the generator and release its resources. The interpreter has no way to propagate this exception back, so instead it logs this state and carries on. Specifically, PyErr_WriteUnraisable is is being called. And here is how it is being called (comments mine).
when i run your code i just get:without error (I also use Python 3.5.1 on windows 10),but you can use following code to determine error in your code:in this case you get this output:so to catch error now you can use:by looking at your error message I think you have problem with RuntimeError and not with GeneratorExit.Hope it helps.Edit:As @interjay has said in comments when I ran your code generator object wasn't destroyed at the end so there was no error.The problem is when python destroys generator object, generator.close() is called which produces your error, when you execute this code:you get:but when generator object is destroyed (deleted) than the exception is in ignored.To avoid this warning you can call generator.close() in your code and then catch error, so your code should look something like this:


Answer URL
https://docs.python.org/3/c-api/exceptions.html#c.PyErr_WriteUnraisable
