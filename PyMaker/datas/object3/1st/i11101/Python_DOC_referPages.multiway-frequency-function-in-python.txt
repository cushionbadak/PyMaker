Natural Text
This is my function:var argument would look like (['a','b','b','c'],['one','two','two','two'])I am trying to return a nested dictionary that holds a frequency count. So result d should look like:However my function returns, which is wrong:Any idea why? 
The problem is that all nested dicts in d dict is the same object. Use dict.copy() method to fix problem, so changing line:to Would fix your problem. See more on Immutable vs Mutable types and How do I pass a variable by reference? Good Luck!
You've somehow initialized d's values to the same dictionary.  I can't fix this confidently, since I don't have Python3 installed here (blush).  However, I think the problem is that k:d value in the middle line: I think it plugs the identical default dictionary into each value.  Try creating a new empty dictionary for each pass through this iteration.
Apparently, the inner dict is referencing the same object and everything gets updated simultenously, as seen from the enumerate loop:The inner dictionary d used in the second iteration of the loop is the same object. You can use d.copy() in place of d to create multiple copies for each key.But why go through all the trouble of using reduce on getitem. That part of your code is quite hard to debug. You can achieve the same thing by using a Counter object on your zipped items:


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=dict.copy#dict.copy
