Natural Text
I would like to intercept the function calls happening inside a function. This is aimed at producing a "mocking" sort of an effect on function calls inside a function.For example:I would like to add a decorator on top of call_add to intercept calls to the function add and call some other function instead (with the same arguments being passed to add)Something like this:Is there a way to do this without having to touch the code of calls_add. I was looking at the inspect library but need help.
I think you are looking for unittest.mock.patch:patch() acts as a function decorator, class decorator or a context manager. Inside the body of the function or with statement, the target is patched with a new object. When the function/with statement exits the patch is undone.From the API here and documentation here
You have to use mock.patch. You have the following two posiblities:If you want to use a decorator:If you do not want to use a decorator:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch
https://docs.python.org/3/library/unittest.mock-examples.html#patch-decorators
