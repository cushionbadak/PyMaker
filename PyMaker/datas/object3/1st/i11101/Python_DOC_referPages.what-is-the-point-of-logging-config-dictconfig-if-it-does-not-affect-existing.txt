Natural Text
Configuring a logger using the APIs provided by logging.Logger as shown in b.py configures existing loggers. Configuring logging with logging.config.dictConfig() does not configure existing loggers as shown by a.py.*.py filesI/OIf a library creates a logger before logging.config.dictConfig() is set up, the logger will not be configured properly. How do libraries handle this? Do they expect a logging configuration be passed to them? Do they simply avoid creating loggers during import?
logging.config.dictConfig() does affect the configuration of existing loggers. However, dictConfig() will disable existing loggers by default unless disable_existing_loggers = False is defined in the dictionary passed to dictConfig() according to 16.7.2.1. Dictionary Schema Details.


Answer URL
https://docs.python.org/3/library/logging.config.html#dictionary-schema-details
