Natural Text
HTML image elements have this simplified format:That something can be data-uri, for example:Is there a standard way of parsing this with python, so that I get content_type and base64 data separated, or should I create my own parser for this?
Split the data URI on the comma to get the base64 encoded data without the header. Call base64.b64decode to decode that to bytes. Last, write the bytes to a file.
w3lib (a library used by Scrapy) has a function to parse data uris:
This may help:Output:It will save every base64 image within <img> tags, with their respective file extension:Prefixed by BASE_NAME + auto-increment digit(s) provided by enumerate + image_extension
Correcting JRodDynamite's post:


Answer URL
https://docs.python.org/3/library/urllib.request.html#urllib.request.DataHandler
