Natural Text
Consider the line from concurrent.futures example ( https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example ):Don't get the idea what's exactly going on her executor.submit(load_url, url, 60): url. Evidently, it is set comprehension and executor.submit is applied to every url in URLS. But what technique is used to fix load_url and 60 parameters?? That is some kind of curriyng or partial apply using column operator, but what language feature is it??
Evidently, it is set comprehensionNo, it's a dict comprehension. The expression before the colon is each new key, and the expression after is the corresponding value.
load_url is a method defined just above (load_url(url, timeout)).I guess executor.submit(load_url,url,60) calls at some point load_url(url,60).So 60 is the timeout (probably because 60s=1mn). The dictionary comprehension applies executor.submit to every url with the same two parameters load_url and 60, and one changing parameter url.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example
