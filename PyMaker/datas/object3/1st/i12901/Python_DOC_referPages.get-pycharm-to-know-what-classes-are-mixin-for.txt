Natural Text
Our application has set of complex form wizards. To avoid code duplication I created several mixins.The problem is that PyCharm highlights mixin methods with Unresolved attribute refference error.This is correct as object does not have such methods. But I know that this mixin will be used only with special classes. Is there any way to tell this info to PyCharm?For now I use such approach:While this works for some cases like autocomplete for self., it fails for other cases like super. Is there a better approach to achieve the desired behavior?P.S.: I know that I can disable reference check for specific name or whole class, but I don't want to do this as it will not help in typo checks and autocomplete.
You can type-hint to PyCharm what kind of classes to expect.It's still not quite comparable to other type handling.PyCharm is lazy in evaluating it, and only does so when first working on self.Things are a bit tricky when accessing attributes of the mixin as well - self,  # type: dict | DictMixin works for one of my classes, but not in my test code.In python 3.5, you should be able to use # type: typing.Union[dict, DictMixin].
If you are creating Mixin, for, let's say ClassSub, which is subclass of ClassSuper, you can implement Mixins this way:and then use them like:That way I use some mixins for models in Django. Also, django-extensions uses similar pattern (gives models that are actually mixins). Basically, this way you don't have to inherit ClassSuper, because it's "included" in every of your mixins.Most important - PyCharm works like a charm this way.


Answer URL
https://docs.python.org/3/library/typing.html
