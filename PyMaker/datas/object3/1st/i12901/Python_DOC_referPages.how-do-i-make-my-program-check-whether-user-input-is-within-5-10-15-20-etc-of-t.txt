Natural Text
So this code currently takes the user input and says whether the user guessed the random integer, or if they should guess higher/lower. I want to edit the code to now say whether the user input is within 5,10,15, etc of the random integer. So if the random integer was 30, and the user inputs 20, the program would say something like "You are within 10; guess higher."Any advice? I'm extremely new to python, so please respond with more simple methods if possible.Thanks.PS: Oh, preferably without the use of modules, mainly because I'm still learning.
I think this does what you want, and it cuts down on the if chains a little:Let's look. at the last if statement a little further and the final print line.  We are checking to see if guess_error, defined above (line 15) guess_error = userInput - randomNumber is less than 0 (negative).  If it is less than zero, then we make the variable next_guess_direction equal to the string "higher," because the next guess needs to be larger than the last one (randomNumber was larger than userInput.  If guess_error is not negative, then it is positive, because we already eliminated the we eliminate the possibility of 0 using:So, if guess_error is positive, we know that userInput was larger than randomNumber and we set next_guess_direction equal to the string "lower."  Finally, we print out everything that we have found:I am using an older version of formatting where %i and %s are placeholders for integer and string, respectively.  I then define what should be formatted there using %(acceptable_ranges[i], next_guess_direction), which simply means to put acceptable_ranges[i] in for the integer and next_guess_direction in for the string.  Keep in mind, we found i in acceptable_ranges[i] right above the if statement. I know that is all long, but I did not know how much detail you needed!
Update: I see you ask to do it without modules.  Here's a solution:-- original answer:You can do this with numpy's ceil function.For instance:
A solution using the modulo operator:


Answer URL
https://docs.python.org/3/reference/expressions.html#index-52
