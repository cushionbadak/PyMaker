Natural Text
(I think) I know how to read from a pipe. I mean calls on the bash like thisThis Python3 script work with that.But when I simply do this on the bashnothing happens because it waits for input.So I want to check (when starting the script) if there is input from a pipe or not. But I don't know why size or len didn't worked on sys.stdin or sys.stdin.buffer.Maybe there is a difference in handling that between version 2 and 3 of Python, too?
nothing happens because it waits for inputAnd that's completely fine. You want to fix something that doesn't need any fixing, and as a by-product you're actually creating problems.Imagine a piping process that does some heavy calculations, and because of that, needs some time to produce the output. You cannot check for data availability in your python script. You don't know when the data is going to be available. You have to be patient.So I want to check (when starting the script) if there is input from a  pipe or not.Don't. If, for some reason, your application hasn't meant to be run with a tty (waiting for user input), check for that.Only check for data availability if there's some hard-time constraint: e.g.: the user has to respond within 2 seconds.
Alternatively to @Cyrbil's answer if you really need to know if the input was piped in, you can use isatty:
You can set the input entry file to non-blocking, and catching the IOError: [Errno 11] Resource temporarily unavailable when nothing is piped.
You could use select, but it doesn't work on Windows:To us it inline:


Answer URL
https://docs.python.org/3/library/os.html#os.isatty
