Natural Text
I was looking for a way to mock multiple instances of the same class. Tried the solution from How to get many instances of one Mock object and that does work. However, I also want to specify properties and behavior for each new instance of the mocked class in my test case. Didn't find the answer to that yet. Example:How can I change this code so that when an instance of mockA is created, it also sets the name property of the instance? e.g. I need the output for this code to be something like:Setting mockA.get_name.return_value won't work as it will use the same value for every instance.
Note that the name is returned by A's get_namemethod. As such, you can override that method with a side_effect that returns the name that the method was called with. It seems like what you really want isn't multiple mock instances, but a method within the mock that returns differing values depending on what is passed to it.The following code works for me:When I run this, my output is:I find the mock documentation to be relatively confusing, but the section on side_effects is worth muddling through, as they're one of the most useful features in mock. 


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
