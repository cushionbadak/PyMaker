Natural Text
I am given n words (1≤n≤10^5). Some words may repeat. For each word, I have to output its number of occurences. But the output order should correspond with the order of the first appearance of the word.I have a working program of the problem, but for large inputs I am getting timeout. Here is my solution for the problem:
Use an ordered counter by subclassing OrderedDict and Counter:Which prints:See the documentation for the collections module for a more complete recipe which includes a __repr__ for OrderedCounter.
The easiest way to count items in python is to use a Counter from the collections module.Assuming you have a list of items in the order that you expect, passing it to a Counter should suffice:If words is the list of words you retrieved from the user, you can iterate over it to print the values:
Take a look at collections.OrderedDict. It can handle this for you, and it removes the linear membership test expense using a list is imposing:If you need the count, you can make a custom class based on OrderedDict that both handles counts and remains ordered.Then change ll to an OrderedCounter, and ll[v] = None to ll[v] += 1. At the end, ll will have the ordered words with their counts; l isn't even needed:The final code would simplify to just (omitting imports and class definition):Much simpler, right?


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
