Natural Text
I was going through an example in this computer-vision book and was a bit surprised by the code:To me it looks like this is copying the array over and over again and a more efficient implementation would be:Or am I missing something here and the two codes are not identical. I ran a small test:And it seems the list is different?
You're absolutely right - repeatedly concatenating numpy arrays inside a loop is extremely inefficient. Concatenation always generates a copy, which becomes more and more costly as your array gets bigger and bigger inside the loop.Instead, do one of two things:As you have done, store the intermediate values in a regular Python list and convert this to a numpy array outside the loop. Appending to a list is O(1), whereas concatenating np.ndarrays is O(n+k).If you know how large the final array will be ahead of time, you can pre-allocate it and then fill in the rows inside your for loop, e.g.:Another variant would be to use np.fromiter to lazily generate the array from an iterable object, for example in this recent question.


Answer URL
https://docs.python.org/3/library/functions.html#func-range
