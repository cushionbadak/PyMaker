Natural Text
Python 3.6This program:launches ffmpeg as a subprocess  waits for a socket connectionreceives PNG images on the socketsends the PNG images to ffmpegstdinThe problem is step 4.  I can't work out how to send the received PNG image from the coroutine to the stdin of the ffmpeg subprocess. Can anyone please point me in the right direction to send the PNG image to the stdin of the ffmpeg subprocess?EDIT: to clarify - there's nothing wrong with this code, it receives the PNGs fine over the socket.  I just don't have any idea how to send the PNGs on into the stdin of ffmpeg.  I've done quite alot of Python but asyncio is new to me and how things tie together is a mystery.thanks!Here are the changes suggested by @user4815162342
There are several issues with the code:await reader.read(length) should be await reader.readexactly(length) because the argument to StreamReader.read is the maximum number of bytes to read, and it can return fewer.proc.communicate(png_bytes) should be changed to proc.stdin.write(png_bytes). The call to communicate() is incorrect here because you want to continue talking to the program, while communicate() waits for all the streams to close.The instance of process returned by asyncio.create_subprocess_exec(...) must be made available to socket_png_receiver, e.g. by making the process variable global using global process. (It would be better to use a class and assign to self.process, but that is beyond the scope of this answer.)Some potential issues:There is no need to decode data from bytes to string, base64.b64decode can accept bytes just fine.spawn_ffmpeg() doesn't appear to use its listenport parameter.


Answer URL
https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamReader.read
https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamReader.read
