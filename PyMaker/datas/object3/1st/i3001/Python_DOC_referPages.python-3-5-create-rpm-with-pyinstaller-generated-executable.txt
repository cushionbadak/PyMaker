Natural Text
I've got a build generated with a pyinstaller.I need to create .rpm package which will put the executable into the /usr/bin/ and create a systemd service which will run that executable.I found this https://docs.python.org/3/distutils/builtdist.html and https://docs.python.org/2.0/dist/creating-rpms.htmlHowever it doesn't give me a full picture.Is it possible to make it?What toolset do i need to use? (Basically, how to make it).If possible - sample code
First of all, forget about bdist_rpm. It's for a distutils/setuptools project, so you would need a setup.py script that invokes pyinstaller under the hood to bundle the executable, somehow redefines the install_scripts command to be able to package binary executables and also handles the packaging of the systemd unit files. Instead, write a spec file which is the instruction manual for rpm to build and install your package.setupThis is the example project to play with.spam.pyNo magic here - prints eggs once called. Will be bundled via pyinstaller to a binary named bacon. I didn't call the project spam to avoid ambiguity, because pyinstaller also creates a file with .spec extension, so that running it does not overwrite the rpm spec file.bacon.serviceSimple service calling the binary bacon.bacon.timerWill call bacon every ten seconds.bacon.specThe instruction for the package. In %build section, we bundle spam.py, then install the bundled executable dist/spam to /usr/bin/bacon along with the systemd unit files.build the packageThere are lots of tutorials out there that explain building rpm packages in-depth, for example Fedora Packaging Guidelines, so just listing the minimal sequence of commands here:test the packageEdit: as mentioned in the comments, use -U in favor of -i. Quote from the rpm mans:The general form of an rpm upgrade command isThis upgrades or installs the package currently installed to a newer version. This is the same as install, except all other version(s) of the package are removed after the new package is installed.So usefor test installation.Now bacon should be available from command line:Start the timer:Check the logs:Once verified things work, stop the timer and uninstall bacon:


Answer URL
https://docs.python.org/3/distutils/builtdist.html
