Natural Text
There is puzzling (at least for me) behavior of Python's set in combination with NaNs (here live):At first, I wrongly assumed,that this is the behavior of the ==-operator, but this is obviously not the case because both cases yield False as expected (here live):I'm mainly interested in the causes for this behavior. But if there is a way to ensure consistent behavior, that would also be nice to know!
set membership does an identity check as a short-circuit before considering an equality check (CPython source is in setobject.c, see also the note below PyObject_RichCompareBool).Python core devs are motivated by these invariants:Ergo:It was decided that ensuring these invariants was the most important priority, and as for NaN: oh well.  Special cases aren't special enough to break the rules. For all the gory details, see bpo issue4296: Python assumes identity implies equivalence; contradicts NaN.


Answer URL
https://docs.python.org/3/c-api/object.html#c.PyObject_RichCompareBool
