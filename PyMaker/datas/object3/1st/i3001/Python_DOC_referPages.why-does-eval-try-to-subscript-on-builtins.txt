Natural Text
Python 2.  Makes sense.Python 3. How/why does eval try to subscript None?  I expected the same NameError here, or perhaps an AttributeError: 'NoneType' object has no attribute 'potato'.Encountered via Python eval error
From the eval(expression, globals=None, locals=None) docs:If the globals dictionary is present and lacks ‘__builtins__’, the  current globals are copied into globals before expression is parsed.  This means that expression normally has full access to the standard  __builtin__ module and restricted environments are propagated.But you are setting __builtins__ to None in the globals dictionary, so your code will evaluate to None['potato'] which leads to:EDIT:Python2.7 raises NameError if it doesn't find the variable in __builtins__ - source code. NAME_ERROR_MSG is defined as:Python3 print different message - see source - the PyObject_GetItem will not raise KeyError but TypeError so the string is formatted differently, in this case TypeError: 'NoneType' object is not subscriptableIn CPython, the name __builtins__ can be bound to a module or a dictionary.  That is documented under the execution model:The builtins namespace associated with the execution of a code block is actually found by looking up the name __builtins__ in its global namespace; this should be a dictionary or a module (in the latter case the module’s dictionary is used).


Answer URL
https://docs.python.org/3/library/functions.html#eval
https://docs.python.org/3/reference/executionmodel.html#builtins-and-restricted-execution
