Natural Text
IÂ´m currently trying to find the minimum of some function f(arg1, arg2, arg3, ...) via Gaussian optimization using the GPyOpt module. While f(...) takes many input arguments, I only want to optimize a single one of them. How do you do that?My current "solution" is to put f(...) in a dummy class and specify the not-to-be-optimized arguments while initializing it. While this is arguably the most pythonesque way of solving this problem, it`s also way more complicated than it has any right to be.Short working example for a function f(x, y, method) with fixed y (a numeric) and method (a string) while optimizing x:There definitely has to be a simpler way. But all the examples I found optimize all arguments and I couldn't figure it out reading the code on github (I though i would find the information in GPyOpt.core.task.space , but had no luck).
GPyOpt supports this natively with context. You describe the whole domain of your function, and then fix values of some of the variables with a context dictionary when calling optimization routine. API looks like that:More details can be found in this tutorial notebook about contextual optimization.
I would check out the partial function from the functools standard library.  It allows you to partially specify a function, so for example:


Answer URL
https://docs.python.org/3/library/functools.html
