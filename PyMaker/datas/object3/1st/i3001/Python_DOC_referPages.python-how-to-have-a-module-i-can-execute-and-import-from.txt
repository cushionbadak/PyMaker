Natural Text
I have a Python package mypackage which contains a bunch of modules / classes with this directory structure:The current use case is to use interface.py with a bunch of argparse flags:Inside interface.py it instantiates a bunch of the classes with mypackage and runs their methods. Something like:This works well when getting non-python / programmers to use my code. But I'd like to also be able to import my package within their Python code and run the same methods in interface.py. Something like:QuestionIs there a standard/best way to do this? Note: I don't think users need to see my class structure so I'd rather there be one user facing class which implements all of the methods in interface.pySolution 1 (I don't think this is the preferred solution):Add methods from interface.py into __init__.py:Then users can do the following in their own code (it would look very similar in interface.py as well):Solution 2:Create a mypackage class:If I create this class should I worry about the package and class having the same name? Do I change the hierarchy of the package structure to reflect that MyPackage is the forward facing class? 
A good way would to use a setup.py and use console_scriptsPut you interface.py inside you package and this to your setup.py:Change your interface.py to:Once you install with Python setup.py install, you can call your programfrom the command line:For details see the full documentation.You can still import it with:


Answer URL
https://docs.python.org/3/library/argparse.html
