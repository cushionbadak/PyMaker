Natural Text
I'd like to assert that say_name was called with each value in the list name.If only one instance of MyClass was created, as is usually the case, I could set the attribute by setting mock_my_class.return_value = PropertyMock(name=name).However, in this case, multiple different instances of MyClass are created.Thus, this code will throw an error because my_func is executed by the tester, say_name is being passed a mock with no name attribute.Therefore, how can I set different attributes for different MagicMock instances?
It is possible to use side_effect to sequentially return values from a mock:Applying to your use-case:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
