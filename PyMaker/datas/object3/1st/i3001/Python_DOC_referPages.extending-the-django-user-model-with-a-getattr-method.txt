Natural Text
In a Django project, I have a module which extends Django's user model, similar to the following:I've noticed that this works. However, if I try to define a __getattr__ method, like so:I get the following error upon importing the module:Is it not possible to extend the User model with a __getattr__ method in this way?
In python 3.7, if you define a module level function called __getattr__ it will be a module level attribute getter function, similar to a class getattr. Seems like you did that unintentionally. The module level __getattr__ has a different call signature from the class method.SpecificationThe __getattr__ function at the module level should  accept one argument which is the name of an attribute and return the  computed value or raise an AttributeError:Try renaming the function to something else, to avoid unintentionally shadowing a reserved function name.This is mentioned in PEP 562:This PEP may break code that uses module level (global) names  __getattr__ and __dir__. (But the language reference explicitly reserves all undocumented dunder names, and allows "breakage without  warning")And here's what the language reference says:Any use of __*__ names, in any context, that does not follow  explicitly documented use, is subject to breakage without warning.So you should also rename your custom __str__ function to avoid potential future breakage.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers
