Natural Text
I have been working on a program which will take a hex file, and if the file name starts with "CID", then it should remove the first 104 characters, and after that point there is a few words. I also want to remove everything after the words, but the problem is the part I want to isolate varies in length.My code is currently like this:Input Example file (pulled from HxD):I have got it working to remove the first 104 characters, but I would also like to remove the characters after 'Sun Tan Specialist', which will differ in length, so I am left with only that part.I appreciate any help that anyone can give me.
One way to remove non-alphabetic characters in a string is to use regular expressions [1].EDITThe first argument r'[^a-z]' is the pattern that captures what will removed (here, by replacing it by an empty string ''). The square brackets are used to denote a category (the pattern will match anything in this category), the ^ is a "not" operator and the a-z denotes all the small caps alphabetiv characters. More information here:https://docs.python.org/3/library/re.html#regular-expression-syntaxSo for instance, to keep also capital letters and spaces it would be:However from the data you give in your question the exact process you need seems to be a bit more complicated than just "getting rid of non-alphabetical characters".
You mentioned in a comment that you got the string down to Sun Tan SpecialistFEFFBFFECDOutfitDFBECFECAFEAFADont get burnedEssentially your goal at this point is to remove any uppercase letter that isn't immediately followed by a lowercase letter because Upper Lower indicates the start of a phrase. You can use a for loop to do this.Output:Sun  Tan  Specialist Outfit Dont get burnedSun  Tan  Specialist  Dont get burned


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/library/re.html#regular-expression-syntax
