Natural Text
I use the imp module to import Python modules from source, given the absolute filename. I.e.Here, /paht/to/my_module is the full path to a file containing Python source code, even though it does not have a .py extension.When doing import imp in Python 3.7, the following deprecation warning is shown:DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative usesI am thus in search for an importlib replacement of the imp.load_source function. From the docs, I have the following:This does not work when the filename has no extension, as in my case. I guess it fails because none of the implemented "finders" recognize the file as a Python source file. However, I do not really need all the complicated machinery provided by these finders, as I know for sure the absolute path to the file already. I simply want it imported.A simple hack would be to just read in the source as text and execute it manually in its own namespace, something like(with this, names defined in my_module is available through my_module['name'] rather than my_module.name, but you get the idea). I would like to know the proper way of doing this, using importlib.
A solution to a similar question is posted here. Translated to my example:


Answer URL
https://docs.python.org/3/library/importlib.html#importing-a-source-file-directly
