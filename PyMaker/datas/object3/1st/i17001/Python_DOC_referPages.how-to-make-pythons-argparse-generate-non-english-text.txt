Natural Text
The argparse module "automatically generates help and usage messages". I can give Non-English names to the arguments and provide Non-English help texts; but the help output then becomes a mixture of at least two languages, because terms like usage, positional arguments, optional arguments and show this help message and exit are automatically generated in English.How can I replace this English output with translations?Preferably, I would like to provide the translations within the script, so that the script generates the same output wherever it is started.Edit: Based on the answer by Jon-Eric, here an example with his solution:saved as Beispiel.py gives with python3 Beispiel.py -h the following help output:
One way, from this post by Peter Otten:I don't know much about gettext, but the following suggests that most  strings in argparse are properly wrapped:The workaround for the "-V" option would be to add the help message  explicitlyYou still have to provide all translations yourself.
argparse uses the gettext API inspired by GNU gettext.You can use this API to integrate your translation of argparse in a relatively clean manner.To do so, call the following code before argparse outputs any text (but possibly after import argparse):In order for this solution to work, your translation of argparse must be located at path/to/locale/ll/LC_MESSAGES/argparse.mo where ll is the code of the current language (for example de; can be configured for example by setting the environment variable LANGUAGE).How do you generate the .mo file?pygettext --default-domain=argparse /usr/local/lib/python3.5/argparse.pyUse the actual location of argparse.pyCreates the file argparse.potcp argparse.pot argparse-ll.poUse an actual language code instead of llFill in the missing translation strings in argparse-ll.pomsgfmt argparse-ll.po -o locale/ll/LC_MESSAGES/argparse.moSee gettext documentation for details about creating .mo file.I have published these instructions in more detail in README.md of my Czech translation of argparse.
Here is a solution with French translation, where one creates a conversion dict that holds the translation for the encountered English keywords


Answer URL
https://docs.python.org/3/library/gettext.html#gnu-gettext-api
https://docs.python.org/3/library/gettext.html#internationalizing-your-programs-and-modules
