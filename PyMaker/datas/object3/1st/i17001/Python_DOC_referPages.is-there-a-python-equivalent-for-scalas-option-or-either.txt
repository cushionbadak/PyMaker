Natural Text
I really enjoy using the Option and Either monads in Scala. Are there any equivalent for these things in Python? If there aren't, then what is the pythonic way of handling errors or "absence of value" without throwing exceptions?
Well, really, the pythonic way for a function to say "I am not defined at this point" is to raise an exception.  This is, in part because there's no (generally useful) static type checker for python.  A python function cannot syntactically state, at compile time, that it has a particular codomain;  there's no way to force callers to match all of the cases in the function's return type.If you prefer, you can write (unpythonically) a Maybe wrapper:But I would not do this, unless you're trying to port something from scala to python without changing much
mypy adds type definitions and type checking (not at runtime) over regular Python. They have an Optional: https://docs.python.org/3/library/typing.html#typing.Optional. More here https://www.python.org/dev/peps/pep-0484/#rationale-and-goals. Intellij has plugin support which makes it all very professional and smooth.
In python, for an absence of value, the variable is None, so you can do it this way.or even just check if a value is present like this
I realize this is pretty late to the party but I came to this page on top of google before deciding to implement it so maybe I can help others googling with this. I implemented it, you can get it from pypi as pyther-maybe, it implements both Either and Maybe with Maybe as a special subclass of Either. This example should explain how it works:It has more features than that, some of which are pretty useless in practise (it's also an iterator for instance and has subscript notation like pyther_maybe.either(x)[pyther_maybe.Right] == x.
A list that happens to always be of length zero or one fulfills some of the same goals as optional/maybe types.  You won't get the benefits of static typing in Python, but you'll probably get a run-time error even on the happy path if you write code that tries to use the "maybe" without explicitly "unwrapping" it.


Answer URL
https://docs.python.org/3/library/typing.html#typing.Optional
