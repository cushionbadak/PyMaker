Natural Text
I have a very large text file. I want to search for the last occurrence of a specific word and then perform certain operations on the lines that follows it.I can do something like:I am only interested in the last occurrence of "word" however.
Well an easier and quicker solution would be to open the file in reversed order and then searching the first word location.In python 2.6 you can do something like (where word is string you are looking for)
Try like this:and then you can pick the last word from thisYou may also use str.rfindReturn the highest index in the string where substring sub is found,  such that sub is contained within s[start:end]. Optional arguments  start and end are interpreted as in slice notation. Return -1 on  failure.
You can open your file, transform it into a list, reverse its order and iterate looking for your word.Optionally you can specify the size of the file buffer passing the buffer size (in bytes) as the third parameter of open. For instance: with open('file.txt','r', 1024) as file_:
If the file is hundreds of megabytes or even gigabytes in size, then you may want to use mmap so you don't have to read the entire file into memory.  The rfind method finds the last occurrence of a string in the file.Just keep calling readline() to read following lines.If the file is extremely large (like tens of gigabytes) then you can map it in chunks with the length and offset arguments of mmap()


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.rfind
https://docs.python.org/3/library/stdtypes.html#str.rfind
