Natural Text
This question already has an answer here:How to make a class JSON serializable                    25 answers                I'm new with Flask, and I'm having some problem trying to return an object which contains another object instance as field, like the follows:where the Point class is simply the follow:when I try to return a Park instanceI obtain this error: TypeError: Object of type 'Park' is not JSON serializable. 
Python's default json module doesn't serialize complex objects by default.You can use a library like jsonpickle; or simply implement a to_dict method in your Park class that transforms your objects into a dictionary, so you can call jsonify(park.to_dict()).
I think Willem is right, in that you first need to convert your class into a JSON like object, such as a dict. If you want to just convert the attributes of your Point class, you can use either __dict__ special attribute or the vars() builtin.Below is a quick function to convert using vars. Note that I've hard coded it to check for the Point class, but this could easily be extended to be more generic. This also only checks one level deep, but could be written to recursive as deep as needed. You could also convert this function into a method of the Park class itself to keep everything together / more object orientated.):Read a bit more about __dict__ here.


Answer URL
https://docs.python.org/3/reference/datamodel.html
