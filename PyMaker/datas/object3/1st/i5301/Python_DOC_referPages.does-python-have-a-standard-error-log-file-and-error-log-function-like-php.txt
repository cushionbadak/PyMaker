Natural Text
Trying as a developer to convert from php to python. Currently attempting to debug a python script that takes around 45 minutes to run. Haven't had it die yet when running from command line. Dies about half the time when run from cron. With php I could just go back to the box it ran on, check the log file for the time it was run and find/fix errors if the script bombed out. Does python have something similar?
I believe you are asking for two different things. PHP is generally running as a server side application thus has specific constructs for error logging. Python can run about any type of application and run multiple instances at once - so what you are asking doesn't really make sense in that context. However, you can still accomplish what you desire. Though you can pipe output to stderr directly from you cron job " > /path/to/log.txt", for more granular information, use pythons logging libarary - part of the standard libary. Personally, though, I prefer pygogo -- it provides a nice wrapper around the logging libary. So...Add some logging to your Python with either the standard library or pygogoPipe the output from your cron job to a log file using " > " or " tee ". Watch your logs real time using "tail -f /path/to/my/log.txt"I do this regularly, works like a charm. 
Python can print logs in a file, but that is not the behavior you get out of the box. By default, it prints logs with a log level equal or higher than WARNING on stderr:Here is what happens when you run this script:So if you redirected stderr to a file in your cron job, you should at least see the warnings and errors in that file. If you want to easily log directly into a file, you can use logging.basicConfig:Now if you run it, you should not have any input in the console anymore, but everything should be in example.log:You'll find much more details and configuration options in the logging HOWTO page


Answer URL
https://docs.python.org/3/howto/logging.html
