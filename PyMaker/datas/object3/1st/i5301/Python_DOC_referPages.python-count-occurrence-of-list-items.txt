Natural Text
I'm new to Python and I'm stuck trying to figure out how to count how many times a number shows up in a list.  The output I'm looking for is something like this "7 occurred 2 times, 4 occurred 1 time" but the problem I'm running into is that I'm printing output for each my_integer.  So if I enter 7, 7, 4 as input I get "7 occurred 2 times, 7 occurred 2 times, 4 occurred 1 time" I was thinking of writing a method to check for uniqueness of a number after count has been returned. 
Firstly, you don't need to use eval() in this line:you can simply cast int() here. Furthermore, since your just counting numbers, you don't even need to convert them to integers to begin with. The conversion would only be necessary if you needed to do some computation with these integers, but since your just counting unique ones, keeping them as strings works fine here. Secondly, if you want to count unique items, you can use collections.Counter() for this:Which works as follows:Counter() is basically a subclass of dict for counting objects. It stores elements in a dictionary where the elements are stored as keys and their counts as values. This allows you to count unique items and store how many times they occur. 
You can use set().For integer_list = [7, 7, 4], it should print outWhy does it print the number 4 first before 7? Because set() automatically sorts the array. Learn more about it here.
You can use itertools.groupby to generate a dict of element and number of times it appears in the list.The input list to groupby should be sorted(either in ascending or descending).This will outputOr you can use list comprehension to produce a list of tuples and then pass it to dict constructor. This will also yield same result
You can use a dictionary:
No module imports:or


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
https://docs.python.org/3/library/itertools.html#itertools.groupby
