Natural Text
I am trying to extract the first parts of files with certain extension (.txt) , and I am trying to make it as short as possible, even in one line:So until here, it works. However, I am not able to get this required list of :I have tried:But this way, I lose the other filenames. How can I get all?
You need a small trick:Here's the trick:It first splits the filename by dot, then removes the last one, and join them back with dots. This effectively strips the last dot and everything after, and if there's no dot, does nothing.
For Python 3.4 and above, try using the new pathlib:Path.glob() achieves the same as your os.listdir + f.endswith('.txt') and then to get the part of the path after the last slash but before the extension we just use the .stem property on each path.With your existing code, you "lose the other file names," because you only call os.path.splittext on text_files[0]. To do it on multiple of them use a list comprehension:
I just editied 2 main things from your code. First I used path as variable rather than string. Second I used slicing to get required result.So with this you can try something like this:
If you want it as short as possible, use the map function with a lambda expression:
You can this:
A purely functional approach is possible:The output here is a tuple instead of a list.


Answer URL
https://docs.python.org/3/library/pathlib.html
