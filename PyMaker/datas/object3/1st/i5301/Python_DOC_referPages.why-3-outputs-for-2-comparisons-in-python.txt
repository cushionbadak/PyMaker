Natural Text
I am trying following code:Above allocates 1 to a and 2 to b as expected and there is no error message:But if I try to compare them together: I get 3 outputs. Where is the problem or what do these 3 outputs mean?
There is no problem here. It is evaluated like thisA tuple of three values.In Python the surrounding parentheses are not necessary to create a tuple if it has more than one elements. So as per Python grammar, this is treated as a tuple. This is documented here,Except when part of a list or set display, an expression list containing at least one comma yields a tuple. The length of the tuple is the number of expressions in the list. The expressions are evaluated from left to right....The trailing comma is required only to create a single tuple (a.k.a. a singleton); it is optional in all other cases. A single expression without a trailing comma doesnâ€™t create a tuple, but rather yields the value of that expression. (To create an empty tuple, use an empty pair of parentheses: ().)To achieve what you want, you need to do it like this
This is multiple assignment where the variables a and b are simultaneously given the values 1 and 2. The right-hand side expressions are evaluated from the left to the right first.Here only the b==1 is taken. That is why the result is 1,True,2
The dis module in the python helps you to see whats going under the hoodif we use a,b==3,2 when a=2 and b=3 the tuple `s middle element will  have True valueFirst a and b are pushed onto the stack the popped of the stack and compared with corresponding values and then made into a tuple .So in effect the comparison is done in the reverse order So reversing the order of elements provides us a correct value in the resulting tuple In short will print So we can access the tuples middle element for correct value


Answer URL
https://docs.python.org/3/reference/expressions.html#expression-lists
