Natural Text
Normally we are checking if script is running in the main scopejust like in Python docs: __main__, like this:This is simple and clear, but there is also a problem – indentation. Whole def main(): have additional indent.Does it hurt? Me – yes, a bit.In Python we are particularly sensitive to line length.This is important to respect space every time, not onlywhile writing 79th character.Because of that I'm looking for good method to reduceredundant indentation.In my opinion – there is one. Also simple, clear and elegant.Almost every of our ideas is wrong or already used somewhere,so – I was looking for usage of this method and got nothing.Looks like I'm the only one using that. I can't belief that at all,but why then (if there is no hidden, tragic surprises) isn't it as popularas it should be? 
The major flaw with your proposal is that importing your module will cause the entire interpreter to exit.  This means you can't import your module at all.  If you try, the program will terminate.Generally the purpose of the if __name__ == "__main__" block is to allow the module to be imported so you can use functions, classes, etc. inside it.  This purpose is defeated by having the module exit when imported.In addition, having the "extra indent" for the body of main is not just wasting line space.  The body of main will be indented because it is the body of a function, and that function, like any other, can be called from elsewhere if the module is imported.  This means someone else can import your module without running main, but later call main explicitly if they want.


Answer URL
https://docs.python.org/3/library/__main__.html
