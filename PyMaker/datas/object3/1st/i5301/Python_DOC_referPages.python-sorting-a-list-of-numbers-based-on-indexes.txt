Natural Text
I need to create a program that has a  class that crates an object "Food" and a list called "fridge" that holds these objects created by class "Food".This was not hard. Then i created an function, that gives you a food with highest expiration number.This one works too, now i have to create a function that returns a list where the index of the list is the expiration date and the number of that index is number of food with that expiration date. The output should look like: [0,2,1,1] - first index 0 means that there is no food with expiration date "0". Index 1 means that there  are 2 pieces of food with expiration days left 1. And so on. I got stuck with too many if lines and i cant get this one to work at all. How should i approach this ? Thanks for the help.
In order to return it as a list, you will first need to figure out the maximum expiration date in the fridge.returns [0, 2, 0, 1, 1]
You can iterate on the list of Food objects and update a dictionary keyed on expiration, with the values as number of items having that expiration. Avoid redundancy such as keeping zero counts in a list by using a collections.Counter object (a subclass of dict):
You can use itertools.groupby to create a dict where key will be the food expiration date and value will be the number of times it occurs in the listHere we specify groupby to group all elements of list that have same expiration(Note the key argument in groupby). The output of groupby operation is roughly equivalent to (k,[v]), where k is the group key and [v] is the list of values belong to that particular group.This will produce output like this:At this point we have expiration and number of times a particular expiration occurs in a list, stored in a dict d.Next we need to create a list such that If an element is present in the dict d output it, else output 0. We need to iterate from 0 till max number in dict d keys. To do this we can do:This will yield your required output
Here is a flexible method using collections.defaultdict:
Modify yours with count(). 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/collections.html#collections.defaultdict
