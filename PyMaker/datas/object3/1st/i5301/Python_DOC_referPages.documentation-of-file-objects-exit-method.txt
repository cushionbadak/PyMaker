Natural Text
Looking into the documentation of the with statement in python:The context managerâ€™s __exit__() method is invoked. I was wondering what exactly happens if I doJudging from the documentation and f.closed evaluating to True suggests, that the __exit__() seems to be somewhat equivalent to a close(). But I was wondering if there is any more detail to be found about the actual behaviour of the __exit__() function. Any hints are appreciated.
As a more specific answer, open returns a subclass of _io._IOBase (depending on options). The __exit__ method is implemented in C in iobase.c with the codewhich you can see, just calls the objects close "method".
Anything can be used as a context manager - it just has to provide it's own __enter__ and __exit__ methods. See PEP343 for all the details on how with and context managers work.In the case of open this is actually a call to io.TextIOBase class under the hood. This is implemented mostly in C, but there's a fallback python implementation (_pyio.py) which contains the following code, which confirms that it just calls close()
This depends on the context manager itself; the point is that a context manager can determine what to do when it exits.In the case of open, yes what it does is close the file; but other context managers are free to do whatever they like. A database connection manager might commit or rollback the cursor before closing the connection, for example; or a temporary file manager might delete the tempfiles.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#with
https://docs.python.org/3/library/io.html#io.IOBase
