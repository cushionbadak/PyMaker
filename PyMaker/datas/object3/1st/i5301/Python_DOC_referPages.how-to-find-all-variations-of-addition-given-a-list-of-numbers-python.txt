Natural Text
Say I have a list of numbers [2,8,16] and I wanted to find all of the unique sums I could have from this (in this case they would be: 2,8,16,10,18,24,26)Is there an easy way I can do this in Python3?
Here is one way via itertools.combinations.
Lecture:chainand chain.from_iterableand combinationsPartial sums with output of the summands:Output:The boring one would be:Output:The one you could have found by researchin itertools-recipes: powerset:Output:Sidenote: these solutions will conserve duplicate sums. Put them in list(set(result)) to remove duplicates, maybe using sorted() to order them. This was not part of the original question but added as comment to the accepted answer.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
https://docs.python.org/3/library/itertools.html#itertools.combinations
https://docs.python.org/3/library/itertools.html#itertools-recipes
