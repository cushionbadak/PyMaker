Natural Text
Ok. I give up.I have a DataFrame with a column ("Amount") of large numbers:I want to convert these to numbers that I can calculate with.Let's investigate:Ok, it's a string.Ok, works great!To make a lambda thingy (to process all elements in column), I need it in a function:What?!Oh no!! Unicode hell! I give up.Does Python have an easy function/method that will convert my numbers (including negative) to something I can calculate with?
looks like you have a problem with the minus('-') symbol in the string. Try:
This should solve your issue. The problem is to get the first value of the column as a value you should use pd.Series.values[0].
What if you try to encode it?
Your data contains unicode minus sign (one of several minus signs in unicode) and non breaking space (one of several space characters in unicode)You can use str.translate() to convert characters to a format that can be correctly parsed by float().
Ok. This seemed to do the trick.It's a solution in 3 steps.I checked my dataset with chardetect data.csvIt said 'utf8' with confidence 0.99I made sure to pass that into my pandas.read_csv: pandas.read_csv(data....., encoding = 'utf8')I made a function,def make_float(num):num = num.replace(u'\N{MINUS SIGN}', '-')  # encode the minus signnum = num.replace(',','.') #change the decimal separator from comma to dotnum = num.replace(unichr(160), '') # encode the (non-breaking) space to ''num = float(num)return numI then passed this function to the pandas.read_csv thing with pandas.read_csv(data...., encoding='utf8', converters={'Amount':make_float}) Working good so far.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
