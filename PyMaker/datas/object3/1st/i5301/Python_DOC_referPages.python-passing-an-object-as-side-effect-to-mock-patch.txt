Natural Text
I'm in an argument with my lecturer -- he insists that an object can be passed to mock.patch as value of side_effect to mock out an original function in program, while still taking the arguments passed to that function -- in this particular case, storing them inside the object.Basically:After these two lines of code, arg1 and arg2 will be stored as attributes in my_object.However according to documentation for side_effect, the only objects that can be passed to side_effect are either Exceptions or  iterables, and neither cares about the arguments passed to original function.I tried to point out this error, but my lecturer said there's a way to get it around.Is there actually a way to do it, or just my lecturer refused to admit his mistake?
I think he is right. We can assign callables to side_effect, and the callable will be called with the same arguments the function_to_be_mocked was called with arg1, arg2.source and examples:https://docs.python.org/3.6/library/unittest.mock.html#unittest.mock.Mock.side_effect


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
