Natural Text
I have a csv file with this structure:The actual file has 279 columns, and all the rows are varying in length. My aim is get each name as a key, and then the corresponding tags as a list of values in a python dictionary. My current code is this:This works, but the blank cells are included as values in the dictionary eg;Whereas my aim is to get this:I can't find any option for csv.reader that skips over blank cells. I have tried csv.DictReader (apparently this automatically ignores blank cells?) but it doesn't allow slices, and I can't name and specify 279 columns. I am aware that there are similar questions on here, but none of them seem to be what I'm looking for in terms of how I want the file to be read. I have been stuck on this for a while so any help would be much appreciated.
You could just use a list comprehension to pick non empty cells as follows:Giving you my_dict containing:Note: Using Python 3.x, the file should be opened with newline='' when used with a CSV object.
You can use list comprehension. 
Maybe there is a better way, but you can add the key only if present and filter the result.in Python 2.7 filter returns directly a list, so you can avoid calling list on it.edit:Thinking about it, a completely empty row shouldn't be in the data in the first place. So you probably can remove the if statement for row[0].


Answer URL
https://docs.python.org/3/library/csv.html?highlight=csv#csv.reader
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
