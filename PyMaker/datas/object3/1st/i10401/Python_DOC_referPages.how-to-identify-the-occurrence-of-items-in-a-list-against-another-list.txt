Natural Text
I have a file with a column of text which I have loaded. I would like to check the occurrence of country names in the loaded text. I have loaded the Wikipedia countries CSV file and I am using the following code to count the number of occurrences of country names in the loaded text.My code is not working.Here is my code:    text = pd.read_sql(select_string, con)    text['tokenized_text'] = mail_text.apply(lambda col:nltk.word_tokenize(col['SomeText']), axis=1)    country_codes = pd.read_csv('wikipedia-iso-country-codes.csv')     ccs = set(country_codes['English short name lower case'])    count_occurrences=Counter(country for country in text['tokenized_text']if country in ccs) 
In your original code the lineshould raise a KeyError, because the key is not yet present in the dictionary, when a country is met for the first time. Instead you should check if the key is present, and if not, initialize the value to 1.On the other hand, it will not, because the checkyields False for all values: a Series object's __contains__ works with indices instead of values. You should for example checkif your list of values is short.For general counting tasks Python provides collections.Counter, which acts a bit like a defaultdict(int), but with added benefits. It removes the need for manual checking of keys etc.As you already have DataFrame objects, you could use the tools pandas provides:This finds the rows of text where the SomeText column's value is in the English short name lower case column of country_codes, counts unique values of SomeText, and converts to dictionary. The same with descriptive intermediate variables:The same with Counter:or simply:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/tutorial/
