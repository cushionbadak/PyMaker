Natural Text
For instance, in C# (starting with v6) I can say:to set mass to a tenth of the vehicle's mass if there is a vehicle, but 150 if the vehicle is null (or has a null mass, if the Mass property is of a nullable type).Is there an equivalent construction in Python (specifically IronPython) that I can use in scripts for my C# app?This would be particularly useful for displaying defaults for values that can be modified by other values - for instance, I might have an armor component defined in script for my starship that is always consumes 10% of the space available on the ship it's installed on, and its other attributes scale as well, but I want to display defaults for the armor's size, hitpoints, cost, etc. so you can compare it with other ship components. Otherwise I might have to write a convoluted expression that does a null check or two, like I had to in C# before v6.
No, Python does not (yet) have NULL-coalescing operators. There is a proposal (PEP 505 â€“ None-aware operators) to add such operators, but no consensus exists wether or not these should be added to the language at all and if so, what form these would take.From the Implementation section:Given that the need for None -aware operators is questionable and the spelling of said operators is almost incendiary, the implementation details for CPython will be deferred unless and until we have a clearer idea that one (or more) of the proposed operators will be approved.Note that Python doesn't really have a concept of null. Python names and attributes always reference something, they are never a null reference. None is just another object in Python, and the community is reluctant to make that one object so special as to need its own operators.Until such time this gets implemented (if ever, and IronPython catches up to that Python release), you can use Python's conditional expression to achieve the same:


Answer URL
https://docs.python.org/3/reference/expressions.html#conditional-expressions
