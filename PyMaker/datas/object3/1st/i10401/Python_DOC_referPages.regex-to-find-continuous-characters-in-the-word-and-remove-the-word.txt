Natural Text
I want to find whether a particular character is occurring continuously in the a word of the string or find if the word contains only numbers and remove those as well. For example,I want to check for two conditions, where in the first condition check for repeating characters more than 3 times and also check if a word  contains only numbers. I want to remove only when the word contains only numbers and when a character occurs more than 3 times continuously in the word.the following should be the output,The following are my trying,re.sub('r'\w[0-9]\w*', df[i]) for number. but this is not removing single character numbers. Also for the repeated characters, I tried, re.sub('r'\w[a-z A-Z]+[a-z A-Z]+[a-z A-Z]+[a-z A-Z]\w*', df[i]) but this is removing every word here. instead of repeated letter. Can anybody help me in solving these problems?
I would suggestSee the regex demoOnly alphanumeric words are matched with this pattern:\s* - zero or more whitespaces\b - word boundary(?=[a-zA-Z\d]*([a-zA-Z\d])\1{3}|\d+\b) - there must be at least 4 repeated consecutive letters or digits in the word OR the whole word must consist of only digits[a-zA-Z\d]+ - a word with 1+ letters or digits.Python demo:Note that strip() will remove remaining whitespaces at the start of the string.A similar solution in R with a TRE regex:See a demoPattern details and demo:\s* - 0+ whitespaces\b - a leading word boundary(?:[[:alnum:]]*([[:alnum:]])\1{3}[[:alnum:]]*|[0-9]+) - either of the 2 alternatives:[[:alnum:]]*([[:alnum:]])\1{3}[[:alnum:]]* - 0+ alphanumerics followed with the same 4 alphanumeric chars, followed with 0+ alphanumerics|  - or[0-9]+ - 1 or more digits\b - a trailing word boundaryUPDATE:To also add an option to remove 1-letter words you may useR (add [[:alpha:]]| to the alternation group): \s*\b(?:[[:alpha:]]|[[:alnum:]]*([[:alnum:]])\1{3}[[:alnum:]]*|[0-9]+)\b (see demo)Python lookaround based regex (add [a-zA-Z]\b| to the lookahead group): *\b(?=[a-zA-Z]\b|\d+\b|[a-zA-Z\d]*([a-zA-Z\d])\1{3})[a-zA-Z\d]+
Numbers are easy:If you want to remove words where the same letter appears twice, you can use capturing groups (see https://docs.python.org/3/library/re.html):Putting those together:For example:You may need to clean up spaces afterwards with something like this:


Answer URL
https://docs.python.org/3/library/re.html
