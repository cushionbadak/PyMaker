Natural Text
The exact question to this problem is:*Create a file with a 20 lines of text and name it “lines.txt”. Write a program to read this a file “lines.txt” and write the text to a new file, “numbered_lines.txt”, that will also have line numbers at the beginning of each line.Example: Input file: “lines.txt”Expected output file:I am stuck, and this is what I have so far. I am a true beginner to Python and my instructor does not make things very clear. Critique and help much appreciated.All I get for output is the .txt file I created stating lines 1-20. I am very stuck and honestly have very little idea about what I am doing. Thank you
Good first try, and with that, I can go through your code and explain what you did right (or wrong)This is fine, though generally you want to put a space before and after assignments (you are assigning the results of open to file_object) and add a space after a,` when separating arguments, so you might want to write that like so:However, at this point the internal reference in the file_object have reached the end of the file, so if you wish to reuse the same object, you need to seek back to the beginning position, which is 0.  As your assignment only states write to the file (and not on the screen), the above loop should be omitted from the file (but I get what you want to do, you want to see the contents of the file immediately though sometimes instructors are pretty strict on what they accept).  Moving on:Looks pretty normal so far, again, minor formatting issues.  In Python, typically we name all variables lower-case, as names with Capitalization are generally reserved for class names (if you wish to, you may read about them).  Now we enter into the loop you gotThis prints not quite what you want.  as ' Line' is enclosed inside a quote, it is treated as a string literal - so it's treated literally as text and not code.  Given that you had assigned Line, you want to take out the quotes.  The (str) at the end simply just print out the string object and it definitely is not what you want.  Also, you forgot to specify the file you want to print to.  By default it will print to the screen, but you want to print it to the the numbered_lines.txt file which you had opened and assigned to file_input.  We will correct this later.If you format this differently, you are assigning +1 to count.  I am guessing you wanted to use the += operator to increment it.  Remember this on your quiz/tests.Finally:They are meant to be called as functions, you need to invoke them by adding parentheses at the end with arguments, but as close takes no arguments, there will be nothing inside the parentheses.  Putting everything together, the complete corrected code for your program should look like thisRun the program.  You will notice that there is an extra empty line between every line of text.  This is because by default the print function adds a new line end character; the line you got from the file included a new-line character at the end (that's what make them lines, right?) so we don't have to add our own here.  You can of course change it to an empty string.  That line will look like this.Naturally, other Python programmers will tell you that there are Pythonic ways, but you are just starting out, don't worry too much about them (although you can definitely pick up on this later and I highly encourage you to!)
You have all the right parts, and you're almost there:When you doyou've exhausted the contents of that file, and you won't be able to read them again, like you try to do later on.Also, print does not write to a file, you want file_input.write(...)This should fix all of that:However, here is a more pythonic way to do it:
The right way to open a file is using a with statement:That way, the context manager introduced by with will close your file at the end of "something " or in case of exception.Of course, you can close the file yourself if you are not familiar with that. Not that close is a method: to call it you need parenthesis:See the chapter 7.2. Reading and Writing Files, in the official documentation. 
In the first loop you're printing the contents of the input file.  This means that the file contents have already been consumed when you get to the second loop.  (Plus the assignment didn't ask you to print the file contents.)In the second loop you're using print() instead of writing to a file.  Try file_input.write(str(count) + " " + Line)  (And file_input seems like a bad name for a file that you will be writing to.)count=+1 sets count to +1, i.e. positive one.  I think you meant count += 1 instead.At the end of the program you're calling .close instead of .close().  The parentheses are important!


Answer URL
https://docs.python.org/3/library/io.html#io.IOBase.seek
https://docs.python.org/3/tutorial/classes.html
https://docs.python.org/3/library/functions.html#print
https://docs.python.org/3/tutorial/inputoutput.html
https://docs.python.org/3/library/functions.html#print
