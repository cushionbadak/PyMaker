Natural Text
I'd like to take the following JSON and convert it into multiple dicts so I can access each setting under the top level nodes only for that environment.  This is a config file that will maintain settings for different environments, I'd like to be able to grab a top level node/environment and then use all the underlying nodes/settings just for that environment.My example JSON{   "default": {},"dev": {},"qa": {}   }I tried doing this by pulling out the top level keys but couldn't see how to break them up into multiple dictionaries using Python so I could collect each environment's settings and use them without duplication.  Checking the underlying nodes I could see doing by checking the len of the node, to see if there are any more nodes underneath, but from the top level and splitting each one to its own dict I couldn't work out.Or perhaps there is a better way to do this, than I am not aware of.  The length underneath could vary, but that should be irrelevant if I can split these up.
Your question is really confusing but I'll try guessing a little bit, let's assume you got a json file (I'll emulate that using python3.x io.StringIO).I assume you want to know how to load that file into a python dictionary, to do that use json.load method and you're pretty much done. Here's a mcve example showing you how to load your hypothetical file and then process it with the different configurations:
There's std lib capable of doing itfor more, see https://docs.python.org/3.5/library/json.html#json.loads
Store above data within a variable like below and convert it to dict using json.loadsIt converts text to dictionary, then you can loop over dictionary based on env to get the properties
You need json.loads() to convert your string to json object. Below is the code to open the file and load the json as dict or list based on the structure of json (in your case dict)


Answer URL
https://docs.python.org/3/library/io.html
