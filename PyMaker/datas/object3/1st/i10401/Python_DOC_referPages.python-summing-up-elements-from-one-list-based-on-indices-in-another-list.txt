Natural Text
So here is what I am trying to achieve in Python:I have a list "A" with unsorted and repeated indices. I have a list "B" with some float valuesLength A = Length BI want list "C" with summed values of B based on the repeated indices in A in a sorted ascending manner.Example:A=[0 , 1 , 0 , 3 , 2 , 1 , 2] (indicates unsorted and repeated indices)B=[25 , 10 , 15 , 10 , 5 , 30 , 50] (values to be summed)C=[25+15 , 10+30 , 5+50 , 15] (summed values in a sorted manner)So far I know how to do the sorting bit with:C= zip(*sorted(zip(A, B)))Getting the result:[(0, 0, 1, 1, 2, 2, 3), (15, 25, 10, 30, 5, 50, 10)]But I do not know how to do the sum.What would be a good way to create list C?
Use zip() in combination with a dict:And see a demo on ideone.com.
You could use groupby, if the order matters:or defaultdict(float), if it does not:Note that dicts in python are unordered (you are not to trust any CPython implementation details).
It is actually a bit unclear what you want, but if you want them to be indexed by whatever the number is, you shouldn't even use a list, but a Counter instead:If you really want a list, you can usebut then any missing key would cause the rest of the values show up upper, which might or might not be that what you wanted.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/collections.html#collections.defaultdict
