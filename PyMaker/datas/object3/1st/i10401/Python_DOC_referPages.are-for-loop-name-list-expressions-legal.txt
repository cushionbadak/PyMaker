Natural Text
In CPython 2.7.10 and 3.4.3, and PyPy 2.6.0 (Python 2.7.9), it is apparently legal to use expressions (or some subset of them) for the name list in a for-loop. Here's a typical for-loop:But you can also use attributes from objects:And you can even use attributes from expressions:But not all expressions appear to work:But they do so long as the attribute is on the outside?Or something is assignable?I'm surprised any of these are legal syntax in Python. I expected only names to be allowed.  Are these even supposed to work? Is this an oversight? Is this an implementation detail of CPython that PyPy happens to also implement?
Are these even supposed to work? YesIs this an oversight? NoIs this an implementation detail of CPython that PyPy happens to also  implement?NoIf you can assign to it, you can use it as the free variable in the for loop.For questions like this, it's worth going straight to the grammar:A target_list is just a bunch of target:If you look at that closely, you'll see that none of the working examples you've given is a counter-example.  Mind you, bugs in the parser are not unheard of (even I found one once), so if you find a legitimate syntax anomaly then by means submit a ticket - these tend to get fixed quickly.  The most interesting pair you gave is (True and obj.d) and (True and obj).d, which seem to be the same logically but are parsed differently:Note: (True and obj).d is an attributeref in the grammar.  
As documented, the "variable" in the for syntax can be any target_list, which, as also documented means anything that can be on the left-hand side of an assignment statement.  You obviously can't use something like (True and obj.d), because there's no way to assign a value to that.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-for-statement
https://docs.python.org/3/reference/expressions.html#attribute-references
https://docs.python.org/3/reference/compound_stmts.html#the-for-statement
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-target_list
