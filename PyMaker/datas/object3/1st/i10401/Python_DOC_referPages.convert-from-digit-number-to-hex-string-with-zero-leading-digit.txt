Natural Text
Given:How do I display a leading zero for all numbers with less than two digits?That is,
In Python 2 you can do:Basically % is like printf or sprintf.For Python 3.+ the same behavior can be achieved with:For Python 3.6+ the same behavior can be achieved with f-strings:
You can use str.zfill:prints:
In Python 2.6+ and 3.0+, you would use the format() string method:or using the built-in (for a single number):See the PEP-3101 documentation for the new formatting functions.
prints:
Or this:print '{0:02d}'.format(1)
In Python >= 3.6, you can do this succinctly with the new f-strings that were introduced by using:which prints the variable with name val with a fill value of 0 and a width of 2. For your specific example you can do this nicely in a loop:which prints:For more information on f-strings, take a look at PEP 498 where they were introduced.
results in:Read more information about string formatting using % in the documentation.
The Pythonic way to do this:This way, the original string is returned unchanged if its length is greater than string_width. Example:Results:
Or another solution.  
Use a format string - http://docs.python.org/lib/typesseq-strings.htmlFor example:

Use:Or with the math module:
This is how I do it:Basically zfill takes the number of leading zeros you want to add, so it's easy to take the biggest number, turn it into a string and get the length, like this:
Based on your tips, I let my working function. Thank you.
the result will be 01
!/usr/bin/env python3Copyright 2009-2017 BHG http://bw.org/same code as an image
If dealing with numbers that are either one or two digits:'0'+str(number)[-2:] or '0{0}'.format(number)[-2:]


Answer URL
https://docs.python.org/3/library/string.html#grammar-token-fill
https://docs.python.org/3/library/string.html#grammar-token-width
