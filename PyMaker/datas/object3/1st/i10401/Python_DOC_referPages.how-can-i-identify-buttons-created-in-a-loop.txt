Natural Text
I am trying to program a minesweeper game on python using tkinter. I started off by creating a grid of buttons using a two dimensional list of 10x10. Then I created each button using a loop just so I don't have to manually create every single button and clip them on. Basically I want the button to disappear upon being pressed. The problem is that I don't know how to let the program delete specifically the button that I pressed, as all the buttons are exactly the same. When creating the delete function:I don't know how to let the program know which button it was that the user presses, so it can delete that specific one.The question:Is there a way to let each button have something unique that allows it to be differentiated from the other buttons? Say assign each button a specific coordinate, so when button (2,3) is pressed, the numbers 2 and 3 are passed onto the delete function, so the delete function can delete button (2,3)?
While creating buttons in a loop, we can create (actually get) the unique identity. For example: if we create a button:we can identify it immediately:If we store this identity into a list and asign a command to the button(s), linked to their index during creation, we can get their specific identity when pressed.The only thing we have to to then is to fetch the button's identity by index, once the button is pressed.To be able to set a command for the buttons with the index as argument, we use functools' partial.Simplified example (python3)In the simplified example below, we create the buttons in a loop, add their identities to the list (button_identities). The identity is fetched by looking it up with: bname = (button_identities[n]).Now we have the identity, we can subsequently make the button do anything, including editing- or killing itself, since we have its identity.In the example below, pressing the button will change its label to "clicked" Or if we make it destroy the buttons once clicked:Simplified code for your matrix (python3):In the example below, I used itertools's product() to generate the coordinates for the matrix.More options, destroying a button by coordinatesSince product() also produces the x,y coordinates of the button(s), we can additionally store the coordinates (in coords in the example), and identify the button's identity by coordinates.In the example below, the function hide_by_coords(): destroys the button by coordinates, which can be useful in minesweeper -like game. As an example, clicking one button als destroys the one on the right:
If you just want to destroy the Button widget, the simple way is to add the callback after you create the button. Eg,However, if you need to do extra processing in your callback, like updating your grid of buttons, it's convenient to store the Button's grid indices as an attribute of the Button object.   Both of these scripts are compatible with Python 3, just change the import line to
Try modifying your code as below:and:
The following code generates 12 buttons ,4 in each row.The particular button required to be edited is called similar to calling a matrix element. As an example button[1,1] has been edited for background color and button[2,2] has been edited for foreground color and text. The programme is tested on on python3.6 pycharm console


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
