Natural Text
Write a Python function that accepts a string as an input.The function must return the sum of the digits 0-9 that appear in the string, ignoring all other characters.Return 0 if there are no digits in the string.my code:the output should be:my output:
This look suspiciously like homework...An explanation of how this works piece-by-piece:The function n.isdigit() returns True if n is composed only of one or more digits, false otherwise. (Documentation)The syntax for n in word will loop over each item in the iterable word. Since word is a string, python considers each character to be an individual item.The operation sum(int(n) for n in word...) casts each character to an int and takes the sum of all of them, while the suffix if n.isdigit() filters out all non-digit characters. Thus the end result will just take the sum of all the individual digit characters in the string word.The syntax lambda x: some expression using x constructs an anonymous function which takes some value x as its parameter, and returns the value of the expression after the colon. To give this function a name we can just put it on the right-hand-side of an assignment statement. Then we can call it like a normal function. Usually it's better to use a normal def getsum(x) kind of function definition, however lambda expressions are sometimes useful for if you have a one-off kind of function you just need to use as a parameter to a function. In general in python it's better if you can find a way to avoid them, as they're not considered very readable.Here is a complete example:
It should be You were getting the output you were for two reasons. In the if statement, you were telling it to print the string that was originally inputted when it came across a non-digit. This makes perfect sense as you look at your output - the string is printed when it sees a, the string is printed when it sees the second a, and the string is not printed, not printed (for the ones) and then the string is printed for the last time with the b.You were printing the output as the for loop incremented through the list, meaning it printed the total each time. Moving the output variable and print statement outside the for loop fixed the problem.
Python cares about indentations:Also got rid of your inside print statement since it's not your output.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.isdigit
