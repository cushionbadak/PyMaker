Natural Text
What's the easiest way to determine which Python class defines an attribute when inheriting? For example, say I have:and I wanted this code to pass:How would I implement the fictional defines_attribute function? My first thought would be to walk through the entire inheritance chain, and use hasattr to check for the attribute's existence, with the deepest match assumed to be the definer. Is there a simpler way?
(Almost) Every python object is defined with it's own instance variables (instance variables of a class object we usually call class variables) to get this as a dictionary you can use the vars function and check for membership in it:the issue with this is that it does not work when a class uses __slots__ or builtin objects since it changes how the instance variables are stored:I'm not sure there is a simple workaround for this case.


Answer URL
https://docs.python.org/3/library/functions.html?highlight=built#vars
