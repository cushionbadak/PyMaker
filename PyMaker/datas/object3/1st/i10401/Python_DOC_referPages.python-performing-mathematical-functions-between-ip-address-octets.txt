Natural Text
I'm trying to perform the following:When I use this as an example :Can someone please provide a method as to how this can be done? The mathematical sequence is no problem, i'm just unsure as to how I can take the octet values out of the decimal points to perform the math functions. Thanks in advance!
If you're on Python 3.3 or higher, you can leverage the ipaddress module to avoid reinventing the wheel, and it even provides a useful view as bytes that int.from_bytes can efficiently convert to a real int:gets you output of 1089059683 0x40e9bb63.You could do this by hand if you really wanted to, I just like the self-documenting aspect of the above code. If Py 3.3+ isn't an option, you can get the same results with:That just splits the octets apart, converts them to int, then shifts each of them left by 24, 16, 8 and 0 bits (to align the octets properly), which then allows sum to combine them into a single int.
Convert an IP address string to a list of integers like this:ip_as_ints will be [64, 233, 187, 99].I will guess that the mathematical expression that you intend to perform is RPN for converting the byte sequence from a base-256 representation to a single number.  (Thanks to ShadowRanger for showing this).  You can obtain that single number easily as follows:x is 1089059683.


Answer URL
https://docs.python.org/3/library/ipaddress.html
