Natural Text
Supposenow I have another variable b (maybe a <type 'list'>), I want to convert it into the same type of a. How to do this? For example, Now, I want to I want to do this in a python script. I don't know in advance what is the type of a. I just take numpy.ndarray as an example.UPDATE:In fact, in the python script, it receive some strings from sys.argv. And then it will assign these strings into some predefined variables in this script. These predefined variables may be int, list, numpy.ndarray, or else. For int or list, this can be done by from ast import literal_eval; MyDict[sys.argv[1]] = literal_eval(sys.argv[2]). But if MyDict[sys.argv[1]] is a numpy.ndarray, the literal_eval cann't reassign the list [[[100, 200, 300]]] into a numpy.ndarray. So I'm seeking a more effective way to do this.
To convert a list into a python array, use numpy.asarray.For example:More generally, how to convert the type depends on what conversion you want.To convert to a string use str, to convert to an integer use int, and so on.Note that in python the variables to not have a fixed "type", so you can simply reassign a variable to convert its type. For exampleTo check if a variable is of a certain type you can use isinstance, so to convert the type of b depending on the type of a you can do something likeOf course, you'd need to consider the various possibilities that you could incur into.Also, this type of conversion will likely throw exception if b cannot be converted into the type of a, so a try-catch construct will probably be beneficial.
Presumably you don't just want to convert the type; you also want to preserve the existing value.  (Otherwise you could just assign b to an empty object of the new type and be done with it.)Very generally, you would call the new type's constructor, passing in the old value.  For example, if you have an integer and you want to covert it to a string, call str() on the integer value:Or to convert a string to a list:However this method is very generic and won't be usable in a lot of cases.


Answer URL
https://docs.python.org/3/library/stdtypes.html#textseq
