Natural Text
I'm using a python3 script to automatize  some jobs.I need to measure the time of such external jobs. So I decided to use python 3 built-in time() combined with the subprocess module:The calculated elapsed time by this python snippet is 0.73 secondsHowever, the equivalent bash command:Is significantly faster: 0.5 secondsWhich could be causing this huge discrepancy? Maybe the context switching with the python interpreter due the redirection usage? Maybe something related to buffering?A similar code without the redirection usage does not show this behavior:The above code time is elapsed in 1s + negligible time.Best regards 
It was a stupid mistake.time.time() does not have a good precision in most systems.Note that even though the time is always returned as a floating point number, not all systems provide time with a better precision than 1 second. While this function normally returns non-decreasing values, it can return a lower value than a previous call if the system clock has been set back between the two calls.  Python 3 Time Module Documentationperf_counter() or process_time()  works just fine. Nothing wrong with subprocesses.


Answer URL
https://docs.python.org/3/library/time.html
