Natural Text
I am practicing printing out items yielded by a generator function.This works perfectly fine:But the following code is yielding: What I want to print is each item from each list sequentially, exhaustedwhen the shortest list is exhausted.  I have it working without a generator, but I am trying to wrap my hands around generators.I want to print this:The first element in each, followed by the second, etc., until the shortest list is exhausted.  I want to be able to feed in any number of iterables, hence my use of *args.NOTE  My working, non-generator variant uses itertools:I was trying to avoid that, if possible.
You can make your non-generator version work lazily too, just avoid the list() calls and use itertools.chain.from_iterable():As for your implementation; you yielded the whole zip() result, not individual elements from that. Delegate to the zip() iterator with yield from:This still produces the row tuples from the zip() call; you'd need to loop over each contained tuple too:to chain the tuple contents.Demo of the latter:
Yielding x yields the entire iterable. You need to yield from x.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
