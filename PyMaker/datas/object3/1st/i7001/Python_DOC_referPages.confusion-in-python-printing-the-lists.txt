Natural Text
In the following python code, I have a list i.e. to_do_list of two lists i.e. other_events and grocery_list where I inserted an item in grocery_list and then deleted it. My confusion is, when I updated grocery_list, to_do_list is automatically updated but when I deleted grocery_list, to_do_list is not updated... why?its output is:
The reason why, when you update grocery_list your object to_do_list is updated is that your list to_do_list contain a only reference on grocery_list.Now, why after deleting grocery_list, to_do_list is not updated is that the keywork del doesn't delete the object on which but only delete grocery_list from the namespace.Here is a quote from the Python Language Reference on what del does :Deletion of a name removes the binding of that name from the local or  global namespace
use  del grocery_list[:] instead ouput :but why ?assume we have a list :grocery_list = ['banana', 'mango', 'apple']when you use this to delete list program raise an error :in this code you used del grocery_list which only delete grocery_list  (Deletion of a name removes the binding of that name from the local or global namespace) and don't clear the list you must use del grocery_list[:] to compeletely delete it for more detail for del ref to this
grocery_list has many references to it and the del grocery_listwill only remove one reference while other references will exists.One way to remove all the references from a list is to use slice assignment


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-del-statement
