Natural Text
I am calling importlib.import_module("somemodulename") to import some customized user defined module. This import may fail. I want to give the user the information about why it failed so I need to print the traceback but it tends to be very long full of lines from importlib module. For example it is:Obviously most of the lines are of no interest to the user. I want the traceback to look like this:But the problem is that I cannot rely on the number of rows generated from the importlib package (this is an implementation detail which may be changed in future versions, may be platform or Python installation specific), which I want to skip, neither on the number of rows generated by the custom module error (he can import some other modules on his own, which may cause the error), which I want to keep. To complicate it further, the user can also call importlib module function, which is fine in that case and should be included in the traceback. In other words, I need to get rid of all the first block of importlib error lines from the traceback. Any ideas other than parsing the traceback lines in some 'clever' way, which I think would be a hackish and very fragile solution relying on too many implementation details from the importlib package?Note: I am using Python 3.5+, the solution should be platform agnostic
OK, I dug deeper into the traceback and importlib modules and I think I have found the solution. This seems to work fine for modules in normal Python files. Not sure however about frozen packages, zipped packages etc. Needs more testing for these scenarios.


Answer URL
https://docs.python.org/3/library/traceback.html
