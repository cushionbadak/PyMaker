Natural Text
EDIT: The suggested duplicate is incredibly helpful in regards to basic input validation. While it does cover a lot, my specific problem (failing to assign int(evaluation) to a variable) is only explicitly addressed here. I'm marking this separately in case anyone else has made a similarly silly mistake :)I've spent the last few weeks playing with Python 2.7 and having a lot of fun. To learn more about while loops, I've created a small script which asks the user for an integer between 1 and 10.My goal is to then be able to respond to cases in which the user responds with unexpected input, like a non-integer, or an integer outside the specified range. I've been able to fix a lot of my issues with help from other StackOverflow threads, but now I'm stumped.First, I created a variable, idiocy, to keep track of exceptions. (The script is supposed to be sassy, but until I get it working,  I'm  the one it's making fun of.)As you can see, I'm trying to handle two different errors -- a ValueError for the input type, and an AssertionError for the integer range -- and keep track of how many times they're raised. (Really, I only care about knowing whether or not they've been raised at least once; that's all I need to insult the user.)Anyways, when I run the script in its current form, the error response works just fine ('dirtbag' for non-integers, 'moron' for out-of-range). The problem is that even when I input a valid integer, I still get an out-of-range AssertionError.I suspect that my issue has to do with my while logic, but I'm not sure what to do. I've added a break here or there but that doesn't seem to help. Any suggestions or blatant errors? Again, total Python beginner here, so I'm half winging it. //If anyone has simpler, cleaner, or prettier ways to do this, feel free to let me know too. I'm here to learn!
You have int(evalutation), but you're not assigning it to anything.Try 
Your problem is you're not saving the int version of evaluation to evaluation like this:If you wanted to track the types of exceptions raised, you could use collections.Counter for idiocy and change the code like this:And you can access the error counts by key like idiocy[AssertionError]
Your range test can be refactored as You could keep your insults in a dictionaryAnd write the try/except like thisWhen you change the user input to an int, you need to assign it to somethingassert was meant for debugging - you are using it incorrectly.  You should use TypeError for non-integer repsonses - the type is wrong.You use ValueError for responses outside of a range - the value is wrong  
In your code: int(evaluation) is not typecasting evaluation variable to int type. The output is: Try this:By the way you can use tuple to store all your exceptions.Example: Hope it helps.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement
https://docs.python.org/3/library/exceptions.html#ValueError
https://docs.python.org/3/library/exceptions.html#ValueError
