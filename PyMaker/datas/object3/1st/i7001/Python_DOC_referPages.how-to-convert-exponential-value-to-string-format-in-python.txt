Natural Text
I'm doing some calculations which give very small decimal numbers for example, 0.0000082When I'm saving it in a variable, it changes into exponent form. I need the result as a string in the end. So, converting the result using str() is not possible because it keeps the e in the string.I need the string to have exactly 8 decimal places. Is there any way to do this while keeping the 8 digit precision intact?Another example: 5.8e-06 should be converted to '0.00000580' The trailing zero in the final string is not important.I need the string to be used elsewhere. So, this shouldn't be done in the print() function.
The exponential notation is not an inherent property of the number (which is stored as a binary floating point value). It's just the default representation when converting the number to a string with str. You can specify your own formatting options if you convert the number to a string using the format function. Try something like this:The 8 in the format specifier tells it to use eight digits of precision, while the f requests it to be written as a plain decimal without exponential notation. You can read more about the format notations in the documentation.
you can try with :
Just another idea: 
will print out
You could use print:or You could convert number and store it in string:


Answer URL
https://docs.python.org/3/library/string.html#formatspec
