Natural Text
This question already has an answer here:TypeError: 'list' object is not callable in python                    6 answers                I have a simple script:However, whenever I attempt to run my script, Python raises an error:What does this error mean? Why am I getting it? And how can I fix it?
Before you can fully understand what the error means and how to solve, it is important to understand what a built-in name is in Python.What is a built-in name?In Python, a built-in name is a name that the Python interpreter already has assigned a predefined value. The value can be either a function or class object. These names are always made available by default, no matter the scope. Some of the values assigned to these names represent fundamental types of the Python language, while others are simple useful. As of the latest version of Python - 3.6.2 - there are currently 61 built-in names. A full list of the names and how they should be used, can be found in the documentation section Built-in Functions.An important point to note however, is that Python will not stop you from re-assigning builtin names. Built-in names are not reserved, and Python allows them to be used as variable names as well.Here is an example using the dict built-in:As you can see, Python allowed us to assign the dict name, to reference a dictionary object.What does "TypeError: 'list' object is not callable" mean?To put it simply, the reason the error is occurring is because you re-assigned the builtin name list in the script:When you did this, you overwrote the predefined value of the built-in name. This means you can no longer use the predefined value of list, which is a class object representing Python list.Thus, when you tried to use the list class to create a new list from a range object:Python raised an error. The reason the error says "'list' object is not callable", is because as said above, the name list was referring to a list object. So the above would be the equivalent of doing:Which of course makes no sense. You cannot call a list object.How can I fix the error?If you are getting a similar error such as this one saying an "object is not callable", chances are you used a builtin name as a variable in your code. In this case the fix is as simple as renaming the offending variable. For example, to fix the above code, we could rename our list variable to ints:PEP8 - the official Python style guide - includes many recommendations on naming variables.This is a very common error new and old Python users make. This is why it's important to always avoid using built-in names as variables such as str, dict, list, range, etc.Many linters and IDEs will warn you when you attempt to use a built-in name as a variable. If your frequently make this mistake, it may be worth your time to invest in one of these programs.I didn't rename a built-in name, but I'm still getting "TypeError: 'list' object is not callable". What gives?Another common cause for the above error is attempting to index a list using parenthesis (()) rather than square brackets ([]). For example:For an explanation of the full problem and what can be done to fix it, see TypeError: 'list' object is not callable while trying to access a list.
You have overriden the Python's inbuilt method list.
Here is the mcve!Try also {}() and ()(). The message TypeError: 'X' object is not callable means that you wrote expression(some_arguments) where expression is an instance of the X type, and this type doesn't support to be used in a function call syntax. Most of the time you wrote this because you thought expression was a function or some other callable type.


Answer URL
https://docs.python.org/3/
https://docs.python.org/3/library/functions.html#built-in-functions
https://docs.python.org/3/library/functions.html?highlight=dict#func-dict
