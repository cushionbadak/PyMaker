Natural Text
When I run the terminal then access to python3 shell, I can run a file or module using import, but if I try to run it again, nothing happens.I saw this question before: [Need to restart python in Terminal every time a change is made to scriptand I read the docs: [https://docs.python.org/3/tutorial/modules.html#executing-modules-as-scripts][1]but both are talking about restarting a single function in the module. I am talking about rerunning the whole file.I included this code in the end of my file, but still nothing happenedUPDATE: After I ran the file as in the comments, this is what I got:
As mentioned in the comments, if you're working in a terminal you should use the command (remember to do this from the main shell, ie probably bash, not from the Python shell)This is the intended way to execute python files. You can normally quickly cycle back to the previous command with the UP arrow on your keyboard.However, if you for some reason really need to run your script from the interactive interpreter, there are some options, although beware that they are kind of hacky and probably not the best way to go about running your code, although this may vary with what your specific use case is.If your script, hello.py, had the following source:In python3 you could do the following from the shell:Here is the documentation for importlib.reload. As you can see, this replicates the side effects of the script. The second part is the repr() of the module, as the reload() function returns the module - this is nothing to worry about, it is part of the way the interpreter works, in that it prints the value of anything you enter into it - eg you can dorather than having to explicitly print(2 + 3). If this really bother you, you could doHowever, it would be more idiomatic for your script to look something like this, using that if statement you found (this was also a suggestion in the comments):This way, from the Python shell you can do:This is very good practice. The if statement here checks if the script is being executed as the 'main' script (like running it directly from the command line, as in my first suggestion), and if so it executes the main function. This means that the script will not do anything if another script wants to import it, allowing it to act more like a module.If you're using IPython, you'll probably know this but this becomes a lot easier and you can do


Answer URL
https://docs.python.org/3/tutorial/modules.html#executing-modules-as-scripts][1]
https://docs.python.org/3/library/importlib.html#importlib.reload
