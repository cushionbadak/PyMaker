Natural Text
Is it possible to run the Python debugger against a specific module in a Django application without running the Django webserver and then executing pdb from within a view or model?  I have a MailManager class inside a models.py file that contains some methods for sending emails.  I'd like to debug one of these methods without having to run the Django server and then GET/POST the view that would call that method.  I tried doing 'pdb myapp/models.py" and it seems to execute the very first command in my model file (which happens to be 'import logging'), but if I do 'dir(MailManager)', pdb tells me it's not defined.  Is it possible to debug methods in this model class "standalone" in the way I'm describing?
You can debug any Python module with python -m pdb module.py. It will show you the first line and then you can press n to step line by line through the program.To execute a Python statement, use the p or pp commands, like this: p dir(MailManager). MailManager has to be defined, meaning the line where it's defined must have been executed.You should check the documentation for PDB for more tips. https://docs.python.org/3/library/pdb.htmlYou might want to look at Django's testing tools, which include a test client that fakes the server for you. https://docs.djangoproject.com/en/1.8/topics/testing/tools/


Answer URL
https://docs.python.org/3/library/pdb.html
