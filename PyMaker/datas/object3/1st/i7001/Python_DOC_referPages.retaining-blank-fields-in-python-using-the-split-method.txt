Natural Text
I have a tab delimited file that has entries that look like this:However, some of them have blank fields, for example:When I read in the lines in python:The second example becomes collapsed into a list of 3 indices:I would rather that the empty field be retained so that the second example becomes a list of 4 indices:How can I do this?
As others have stated you can explicitly split on tabs, but you would still need to cleanup the line endings.  Better would be to use the csv module which handles delimited files:
You can split explicitly on tab:By default, split() is going to split on any amount of whitespace.Unless you can ensure that the first and last columns won't be blank, strip() is going to cause problems. If the data is otherwise well-formatted, this solution will work.If you know that the only tabs are field delimiters, and you still want to strip other whitespace (spaces) from around individual column values:
When you don't give a parameter to the str.split() method, it treats any contiguous sequence of whitespace characters as a single separator.  When you do give it a parameter, .split('\t') perhaps, it treats each individual instance of that string as a separator.
Split method without any argument considers continuous stream of spaces as a single character so it splits all amount of whitespaces. You need to specify an argumnet to the method which in your case is \t.
I'm always looking for puzzles to which I can apply pyparsing, no matter how impractical the results might prove to be. If nothing else, I can always look through my old answers to see what I've tried.Don't judge me too harshly. :)Output:Edit: Altered the line TAB = pp.Suppress(r'\t') to what was suggested by PaulMcG in a comment (from a construction with a double-slash prior to the 't' in a non-raw string).


Answer URL
https://docs.python.org/3/library/csv.html
