Natural Text
I sometimes paste  a list of commands to be executed in the Python interpreter (Interactive Mode  (mirror)). By default, if one command fails (i.e., raises an error), the Python interpreter indicates the command has failed, then executes the subsequent commands.Is there any way to configure the Python interpreter (Interactive Mode) so that it stops executing a list of commands whenever one command fails?Answering the comments:I am interested in Linux, Mac OS X and Microsoft Windows.Code example that I paste in the Python interpreter:I don't want yo to be printed, since 1/0 raises an error.I paste the list of commands, from the clipboard, to the Python interpreter
You can extend InteractiveConsole and create your own shell which bails out on error. You can even run it from within interactive-mode :)Here's a small example:OUTPUT
I'm not sure how to fix this on a standard Python REPL, but you can definitely achieve this with IPython. In IPython, when you paste code, it is treated as a single code block, rather than a bunch of individual statements.For example, open an IPython interactive session on your terminal and paste this: This is what it looks like when pasted:Now hit enter:In contrast, on the standard REPL interpreter:
Borrowing heavily from @alfasin's answer, you can extend the InteractiveConsole class.To keep the interactive session running, but ignore the rest of the pasted commands, you can discard the input for a short while (I've used 1 second) after an exception. This means that the rest of the pasted commands are ignored, while leaving you with the session still running.Note that the extra commands are still printed to the terminal, but aren't actually run.


Answer URL
https://docs.python.org/3/tutorial/appendix.html#tut-interac
