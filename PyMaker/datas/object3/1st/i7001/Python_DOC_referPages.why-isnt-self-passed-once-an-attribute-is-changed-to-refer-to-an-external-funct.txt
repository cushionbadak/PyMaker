Natural Text
If one changes a object attribute which refers to an internal method to an external function after the object is created, self is not passed to the new function, even if the attribute (which contains a function) is called like before.The exact error which I get is:If one move the external function into the class as a internal method, Then the code works as expected. Why isn't self passed once the attribute is changed to refer to an external function? What is the proper way to call the function so that self is passed?
When Python finds alice.do in the class dict, it invokes the descriptor protocol, calling the function's __get__ method to produce a bound method object that will be the result of the alice.do lookup. This bound method object knows what self should be and will automatically insert the self argument into the argument list when forwarding arguments to the underlying function. (This happens positionally, not by the self name.)When Python finds alice.do in alice's instance dict, the descriptor protocol is not invoked, and alice.do is just the raw function. self is not injected.
Try this:The output is: method and then function:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__get__
