Natural Text
I have been looking into the requests_mock library in order to check the response. I am just wondering how I can actually 'hijack' the actual request to do a mocked one.In my test_model.py I will create a new SomeModel. When the SomeModel.objects.create() is done, the signal will be triggered.The signal is as follow:From the update_status function it goes trough one other function where it sets the payload and the URL, and then it actually does the request in the send_model function as follows:My question is, how do I actually mock this request when running the tests?
Django has RequestFactory:RequestFactory provides a way to generate a request instance that can  be used as the first argument to any view.Edit:You can patch a view wit a mock request, take a look at mock library, PropertyMock class; I remember I had the same problem and I did it like this: 


Answer URL
https://docs.python.org/3/library/unittest.mock.html#module-unittest.mock
