Natural Text
According to the docs, Python's socket.send():Returns the number of bytes sent.However, when I use it, it seems to return the byte that was last sent, not the total number of bytes sent.  Consider this code:This SO post seems related, though it doesn't answer my question.What I'm expecting to see is r == 1 for every line.Solved:I got it.  This works:The reason I put bytes() in there to begin with is because without it you get:
As the docs for bytes say, if the argument is an integer, then it creates a bytearray of that size.https://docs.python.org/3.1/library/functions.html#byteshttps://docs.python.org/3.1/library/functions.html#bytearrayMaybe this is what you meant to do?But even then b'250' returns 3.
The confusion is how Python 2.x and Python 3.x use the bytes() function.In Python3, bytes(100) will evaluate to a 100 byte binary array filled in with zero. (API docs)This must be the version of Python you're running as this behavior is consistent with your output.In Python2, bytes(100) will evaluate to '100'.It converts the integer into a string and then assigns the bytearray to that value.Doing help(bytes) on it shows that it is actually the same as the built-in object str. So in Python2 bytes(100) behaves the same as str(100).Also in your examples, even according to your expected Python2 behavior, the return value would not always be 1.It would be the length of the string, which would be the same as the number of digits in the integer, e.g. 3 for the case of bytes(100).


Answer URL
https://docs.python.org/3/library/socket.html
