Natural Text
I have a dict that looks like this:I want to combine dictionaries in the list attached to the key such that if there are multiple dicts with the same key, I can combine them (sum) and leave the others as they are. The output would look like:I can't figure out how to do this in Python elegantly with a list/dict comprehension. 
This uses collections.Counter. It is about the most elegant I could come up with, because of the slightly convoluted structure of your input - a list of 1-length dictionaries would indeed be better implemented as a single dictionary, as the comments suggest. This is also what my code transforms it to, although I have provided some more possible tranformations if you really direly need the old data structure. If you do, I would recommend using tuples as your key-value pairs rather than just single-length dicts, as seen in tuple_output. I recommend you use output or dict_output.Of course, if you change the starting data structure altogether, it will become a lot easier to manage. If you use a dictionary from strings to Counters, you can use the Counter interface to easily update it (refer to the link)Edit:Just for fun, done in one line:It was inspired by yours, except this only builds one Counter instance (given as the initial value for reduce) per list. Also, a little bit of a golfy trick is required to reduce properly, as Counter.update is in place. If you're reading this, you probably shouldn't use it, and instead build a data structure with Counters or dicts from the start, as mentioned earlier.
Assuming you do want to collapse this into a single dict vs list[dict] then you can do this without any additional modules with a couple of simple for loops:As some seem to be going for one liners:
It occurred to me just a few minutes after posting the question. This is what I did: As the above comments and answers suggest, I am better off using a 1-length dictionary instead of having to combine several later. Still, leaving the answer out here for anyone that needs it. 
Can also try with defaultdictOutput:chain(*[ i.items() for i in v ]) will flatten the list of dicts into list of itemsConvertstodefaultdict(int) is used to add the values of dict with same keys


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.Counter
