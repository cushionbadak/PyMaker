Natural Text
How to write a function ( a generator) that takes three letters (l1, l2, l3) and three numbers (n1, n2, n3) and gives all the possible combinations in which l1 occurs n1 times, l2 n2 times and l3 n3 times. For example:gives:
Use itertools.permutations, all you need is a thin wrapper around it:Demo:permutations already returns a generator so you don't have use yield yourself.
Doesn't seem to me that itertools would help a lot here, though a recursive implementation may look like this:
Lets admit you have a data structure like:a recursive function would be:No duplicates, and it does use a generator. Quite heavy compared to a simple itertools call.
The docs for itertools have this to say;The code for combinations() can be also expressed as a subsequence of permutations() after filtering entries where the elements are not in sorted order (according to their position in the input pool):Since we want all combinations with no duplicates, we'll just enforce strict ordering (ie only yield values that are greater than the greatest one so far);This would seem to do just that;


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.permutations
