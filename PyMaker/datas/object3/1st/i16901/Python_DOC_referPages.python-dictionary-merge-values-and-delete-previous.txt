Natural Text
I have a dictionary of characters and their position on a page keyed by their y position (so all characters in a row are under a single key in the dictionary). The data comes from a table from a pdf and I am trying to combine the characters in rows into words based on spacing so that columns are separated as values. So this:would become this:I thought I could iterate through the values for each key and merge the text and coordinates if the space was less than some value and then delete the value that got merged, but this would throw off the iteration. All the possibilities I come up with are really clunky, such as marking the leftovers from merges with a character to indicate deletion later but my function started merging these as well.Thanks@Lattyware, thanks again for your help. I tried implementing your suggestions and they are mostly working, but I think I am not fully grasping the idea of the groupby. Specifically why in your example it did not do a merge without a group change, but it does with my modifications (such as the merge after the 8 in the 8901SYR8)? The result in my code is that some of my lines split the first letter of the string from the rest:The adaptations I made are:and the print output is:
The trick is to build up a new dictionary (and inner lists), rather than trying to modify the old one. The itertools module provides what you need:Here I am just taking the first of the co-ordinates, but of course you could merge those values however you wanted.Edit: Split into functions for readability, using list/dict comprehensions:Giving:Edit:You mention in your comment using the previous value to compute the grouping - this can be done in many ways, but one of the lightest-weight ways is function attributes e.g:And note, of course, that you may not want to do the if not isspace in my example.


Answer URL
https://docs.python.org/3/library/itertools.html
