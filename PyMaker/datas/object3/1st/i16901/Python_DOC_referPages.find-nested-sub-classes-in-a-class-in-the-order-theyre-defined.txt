Natural Text
Imagine a case like so:What I want is to find all the classes in class B that are subclasses of A:And it works as intended, but the problem is: I need to get them in the order they are defiend in class B definition, so instead of printing C before D, I need to get D before C. Using dir() obviously doesn't work, since it returns alphabetically sorted list.What are my other options, if any?EDIT:The reason I want this is to help "players" make their own heroes/champions (for a video game) as easily as possible. So instead of having to write:They could just write:Obviously the second one looks much better than the first, and even more to a person who doesn't know much of Python.
The metaclass documentation includes a nice example of how to get a class to remember what order its members were defined in:You can adapt this to your case like this:gives:Note that this gives you the names of the classes; if you want the classes themselves, you can do this instead:
May be something like that can be helpful:UPDATE:Another way to iterate by class attributes is:P.S. Python class is also object


Answer URL
https://docs.python.org/3/reference/datamodel.html#metaclass-example
