Natural Text
I have something like this, hardcoded:this class is the representation of a csv row. What I want to do is make this more generic, and grab the head of the csv file and use it to initialize it in the same way as this list. Something like so:for example, the header for a csv is [name, time, something]. The __init__, when passed that, will initialize with:How can this be done?
There already exist several facilities for dealing with something like this. There is no need to reinvent the wheel:namedtuplecsv.DictWriter and csv.DictReader
Here is an idea: use the keywords:
Python allows dynamic manipulation of class instance using dict magic field.Also, you might want to provide actual values, e.g.:Pythonic way would be to use kwargs, which stands for KeyWord ARGumentS. kwargs is just a convention, actual meaning is given by **, so you can name it as you wish.
I realize that it's not exactly what you're asking for in the original comment, but have you thought of using csv.DictReader/csv.DictWriter [1]/[2]? This combined with the other answers might help when creating a clean, robust solution.https://docs.python.org/2/library/csv.htmlhttps://docs.python.org/3/library/csv.html
Not exactly what you're asking, but just in case anybody finds this helpful.If you know the attributes in advance, and simply want to avoid the duplication in the assignment to self, you can define the argument list once in the __init__ signature, as usual, and then iterate over locals() and assign to __dict__:


Answer URL
https://docs.python.org/3/library/csv.html
