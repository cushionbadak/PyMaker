Natural Text
Not wanting to test manually my code, I'm trying to write a test which mocks/patches one of my dependencies (PyInquirer is a pretty neat package which handles the CLI for me - question dicts in, answer dicts out).However, being very new to Python, I'm having difficulties with mocking that dependency. Here's the code I'm testing:And this is the test:(the real code is obviously more complicated, but this is the essence of the problem). Which manifests itself as:I'm quite confused.If I omit the patch decorator, the invocation fails with an expected assertion error - the dictionary produced by prompt isn't equal to 24. But if I do provide the decorator, I get the argument mismatch above. And indeed the last line in the stacktrace does show the function "func", which I presume is what the decorator was applied to, is invoked with two arguments... but... why? Can't be the essence of a problem? That only functions with arity of two can be thus patched =)
Your class uses the name Foo.prompt (because of how you import it), so that's what you need to patch.You also need to add a parameter to test_bar to receive the patched object, whether or not you plan to use it. If you don't want to do that,you can move the call to patch inside the method, using it with a with statement.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
