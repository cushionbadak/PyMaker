Natural Text
I'm trying to find all the index numbers of a character in a python string using a very basic skill set. For example if I have the string "Apples are totally awesome" and I want to find the places where 'a' is in the string.My ideal output would be:These are all the places in the string that an 'a' appears (I think)This is the code I have so far:Here I'm looking for 'o' instead of a. My thought process is that for each character in the string the find function will return the position of the 'o'. Since I don't know how long the input string will be necessarily I used a for loop. I'm able to find and print out the first instance of an 'o' but not all of them. What should I do? Thanks in advance! 
Using enumerate is the standard way to go. Although, you can take advantage of the speed of str.find for time-critical operations.CodeI made the above return a generator for elegance and to account for very large strings. Put it can of course be casted to a list if need be.BenchmarkHere is a benchmark against a solution using enumerate and a list-comprehension. Both solutions have linear time-complexity, but str.find is significantly faster.Output
This is a good spot for enumerate, it allows us to get the index and item when we loop, so if we match the item we can have the corresponding index, also its helpful to use .lower() to avoid issues with matching casesExtended loop:
Use you a list comprehension for great good:will return a list of all the numbers you want. Print as desired.And I assumed, based on your example, you don't care about case, hence the lower() function call. Using Python 3's asterisk splat operator (*) you could do all of this as a one liner; but that I will leave as an exercise for the reader.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.find
https://docs.python.org/3/library/stdtypes.html#str.find
