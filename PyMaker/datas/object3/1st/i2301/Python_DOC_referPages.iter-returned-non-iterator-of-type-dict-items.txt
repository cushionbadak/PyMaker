Natural Text
This is driving me insane.  Below is a class I was messing around with, the goal was to have a way to support dynamic attribute assignment.  Please forget for a moment the poor implementation or why I didn't just use a dictionary, I know there are other ways to do this (such as Enum) but this was my test code before and now it became my quest to find out why it's not working.This all seems fine, and I initiated a test object as follows:Now the expected outcome was [('a', 'foo'), ('b', 'bar')], but what I got was this instead:TypeError: iter() returned non-iterator of type 'dict_items'I thought I might have messed up the __iter__ method, so I checked as follow:If they're both identical, why doesn't [i for i in foo] work?
What about this:Python wants an iterator, not a list (or other list-like/dict-like object)Remember: a list or dict is not an iterator, an iterator is usually (for easy-understanding) a pointer (cursor) pointing to an item of the list or dict.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__delitem__
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
