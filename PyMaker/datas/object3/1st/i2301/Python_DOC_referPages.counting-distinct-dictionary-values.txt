Natural Text
I have this dictionary (key,list)and i want thisI think I should use lambda expressions, but can't come up with any idea how i can do that. Any help?
First, define your values as lists correctly:Then use collections.Counter with dictionary comprehensions:number of times each value occurs in each key.value for maximum amount for each keywe divide each value in #1 by value in #2
Problem:  {} is creating a set. So you should consider to  convert it into list.Now coming to your  solution:You can use python collections library, Counter to find the count without  writing any lambda function.{'chair': {'one': 1, 'two': 3}, 'table': {'two': 1, 'three': 2}}{'chair': 3, 'table': 2}
Firstly, you have a mistake in how you created the index dict. You should have lists as the elements for each dictionary, you currently have sets. Sets are automatically deduplicated, so you will not be able to get a proper count from there.You should correct index to be:You can use the Counter module in Python 3, which is a subclass of the dict module, to generate what you want for each entry in indexCalc. A counter will create a dictionary with a key, and the number of times that key exists in a collection.indexCalc looks like this:We can easily find the index that corresponds to the maximum value in each sub-dictionary:indexMax looks like this:You can create indexCalcMax with the following comprehension, which is a little ugly:which is a dict-comprehension translation of this loop:
I know this is suboptimal, but I had to do it as a thought exercise:Not exactly lambda, as suggested, but comprehensions... Don't use this code in production :) This answer is only partial, you can use the analogy and come up with the other two structures that you require.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
