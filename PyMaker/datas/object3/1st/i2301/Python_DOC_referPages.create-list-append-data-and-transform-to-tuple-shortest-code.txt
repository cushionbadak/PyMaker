Natural Text
This question already has an answer here:How do I concatenate two lists in Python?                    30 answers                I have a maybe stupid problem, but can't figure out how to solve it.So basically what I'm trying to do is to:Create a listAdd items to the list (stored in a second list)Transform the list into a tupleSo I thought I would do something like this:This does not work as it throws the error:This makes sense, as the result of the extend operation is not a list. The problem is that I wasn't able to make it in a one line code, but only in a 4 lines code, like that:Is there a way to simplify this code? It looks unnecessarily long!
You don't want to use list.extend(), period. You are concatenating a list display (literal syntax) with another list instead, use +:or you could convert just anotherList and prefix a tuple:Here the Python compiler can optimise and store the (1, 2, 3) as a constant with your code object. That initial tuple is created just once and reused across all executions.list.extend() is intended to update an existing list object in-place via a reference to that list, but using it on a list literal means the resulting extended list has no remaining references and is discarded again.In Python 3.5 and up you could also use the new iterable unpacking syntax:Note that no tuple() call is needed there, and any iterable type (not just a list) is supported. Python 2.7 is on it's last days, you do need to start planning to move away from it.
You can add lists:So that'll be something like this:
Well, it's unclear tho, but...Try this:You can concatenate by +Alternatively can do * (unpacking) in python 3:Or can do chain from itertools:Or merge from heapq:Or add form operator:


Answer URL
https://docs.python.org/3/whatsnew/3.5.html#pep-448-additional-unpacking-generalizations
