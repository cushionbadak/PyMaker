Natural Text
This question already has an answer here:How to strip all whitespace from string                    10 answers                Basically, I'm trying to do a code in Python where a user inputs a sentence. However, I need my code to remove ALL whitespaces (e.g. tabs, space, index, etc.) and print it out. This is what I have so far:I'm clear that I'm doing a lot wrong here and I'm missing plenty, but, I haven't been able to thoroughly go over splitting and joining strings yet, so it'd be great if someone explained it to me. This is the whole code that I have so far:I FIGURED OUT MY PROBLEM!I realize that in this line of code.It's supposed to be.I realize that my problem as to why the sentence without whitespaces was not printing back out to me was, because I was not calling out my function!
You have the right idea, but here's how to implement it with split and join:so that:would return:
A trivial solution is to just use split and rejoin (similar to what you are doing):First we split the initial string to a list of words, then we join them all together.So to think about it a bit:will give us a list of words (split by any whitespace). So for example: And finallyjoins all of the words in the given list to a single string. So:See Remove all whitespace in a string in Python for more ways to do it.
This will remove all white space from string.
Get input, split, join
There are a few different ways to do this, but this seems the most obvious one to me. It is simple and efficient..split() with no parameter splits a string  into a list wherever there's one or more white space characters, leaving out the white space...more details here.''.join(list_no_spaces) joins elements of the list into a string with nothing betwen the elements, which is what you want here: 'Thequickbrownfox'.If you had used ','.join(list_no_spaces) you'd get 'The,quick,brown,fox'.Experienced Python programmers tend to use regular expressions sparingly. Often it's better to use tools like .split() and .join() to do the work, and keep regular expressions for where there is no alternative.


Answer URL
https://docs.python.org/3/library/stdtypes.html
