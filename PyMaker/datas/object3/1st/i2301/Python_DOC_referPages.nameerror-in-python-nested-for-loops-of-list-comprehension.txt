Natural Text
Scenerio:AFAIK, in list comprehension the right most for is the outer one so, I thought the following code will work:But to my surprise, it throws a NameErrorI wonder why it didn't work. Is it because python evaluates expression from Left to Right? Cause, I have resolved the issue by using parenthesis:which outputs a bunch of generator expressions:To explore what is inside these generator expressions we can simply cast them into lists i.e.and the output is as expected:I just want to know what is really happening here. 
Correct, it's evaluated from left to right. To add the others' answers, I looked up the official explanation in the documentation.List comprehensions have the form:The forâ€¦in clauses contain the sequences to be iterated over. The  sequences do not have to be the same length, because they are not  iterated over in parallel, but from left to right; this is explained  more clearly in the following paragraphs. The elements of the  generated list will be the successive values of expression. The final  if clause is optional; if present, expression is only evaluated and  added to the result if condition is true.To make the semantics very clear, a list comprehension is equivalent  to the following Python code:
this code just like :outer loop uses i before it is defined, so NameError occurred, i.e. your belief "the right most for is the outer one" is wrong.You can use this code and why below code work


Answer URL
https://docs.python.org/3/whatsnew/2.0.html?highlight=comprehension%20evaluate#list-comprehensions
