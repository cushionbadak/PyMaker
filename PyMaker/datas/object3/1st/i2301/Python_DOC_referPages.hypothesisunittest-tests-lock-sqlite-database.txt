Natural Text
I'm trying to test my Database class. Here is simplified example of it.So, I want to check insert method. The test case class is:The problem is "database is locked" in traceback when db.insert is called from test method. I see the code as next steps:open 1st connectioninsert datacommit and close connectionopen 2nd connection (after first was closed)get data inserted on step 2 using selectcompare dataassert if input and selected data are not equalled.But... I have not to get the message about database blocking if the connections work with database one by one, have I? I had a idea the libs (unittest or hypothesis) use threading but I found nothing in the documentation.Also I tried to run it in usual for and insert enumerable data. It works fine. If I am not wrong every call of commit method must unblock the database even the connection is opened, but it's seems it is not happened.Could anyone help me to understand why I see the "database is locked" message? 
My suspicion is that your database connection isn't actually being closed. You shouldn't be using the same database file between test runs anyway - it's important that Hypothesis tests be repeatable - so the easiest thing to do would be to create a temporary file in your tests and use that instead of a fixed test.db and see if the problem goes away.More generally, I think relying on things being closed in del tends to be a source of weird bugs and I would encourage the use of an explicit context manager or similar.
The db object doesn't actually run __del__ until it is garbage-collected, which you should not rely on happening at any particular time.  As @DRMacIver suggested, it would be better to use a context manager for this.You can check that this is the real problem by adding import gc; gc.collect() on the line after del db.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#with
