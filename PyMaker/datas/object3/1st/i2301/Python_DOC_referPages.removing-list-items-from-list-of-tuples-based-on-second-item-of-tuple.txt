Natural Text
I've a list of tuples as :I want to sort it like if the second item of tuple is same as any other tuple then, keep the tuple with first item not as "unknown" and delete the tuple with first item as "unknown". The output should be like :I tried this code :But it gives this error : What's wrong in it?
Short and simple answer here: list comprehensionAnd then the output is:What's happening here is that we're gathering all of the 2nd tuple elements into a list where the name isn't "unknown" (using list comprehension).Then we're using list comprehension again to firstly add all the tuples where the 2nd element is known and the name isn't "unknown", and then after that we're adding any genuine unknowns. That may sound confusing, hopefully you understand what I mean. Let me know if you have any questions.
del statement Deletion of a name removes the binding of that name from the local or  global namespace, depending on whether the name occurs in a global  statement in the same code block. If the name is unbound, a NameError  exception will be raised.Its better to use dictionary for this task.
Using same collection in two loops and deleting from the collection inside the loop is creating the issue here. I think it is better to create a new list of items that should be removed and delete them after this loop.The try-catch is there as each element to be updated appears twice in the toDelete.This can be avoided by taking the second loop as:
Another approach could be to use collections to create a list of the duplicates in your original list and then create a new list of tuples by checking which element is duplicate. Then you create a new list checking which element is either not duplicate or if it is which one is not unknown:Output is:


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-del-statement
