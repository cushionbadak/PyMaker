Natural Text
I have a list of lists as follows:I want to go through this list and change all instances of 'bob to 'b' and leave others unchanged.After printing out x it is still the same as list, but not as follows:Why is the change not being reflected in list?
Because str.replace doesn't work in-place, it returns a copy. As immutable objects, you need to assign the strings to elements in your list of lists.You can assign directly to your list of lists if you extract indexing integers via enumerate:Result:More Pythonic would be to use a list comprehension to create a new list. For example, if only the second of two values contains names which need checking:
I'm going to use a simple example, but basically x is another variable and isn't linked to the list element. You have to change the list element directly in order to alter the list.This doesn't change the listthis changes the list
This is the case because you are only changing the temporary variable a.list = [1,2,3]for i in list:   i+=1list will still be [1,2,3]you have to edit the string based on its index in the list
You can try using a dictionary object of pythonResult is


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.replace
