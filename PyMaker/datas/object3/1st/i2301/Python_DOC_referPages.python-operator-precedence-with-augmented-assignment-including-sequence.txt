Natural Text
This question already has an answer here:Python operator precedence with augmented assignment                    2 answers                Following up my previous question I have the following one. Are these the same in Python?andProviding that:a has already been defined earlier as floatb is a list of tuplesb[1] is a tuple with a single elementSimilarly I would be interested to learn as well the behavior if:a has already been defined earlier as floatb is a list of floats
The rules of how Python parses expressions are defined in the Python grammar. Note that the types are irrelevant. In fact Python is dynamically types, so that means that at the time an expression is parsed and analyzed, the types of the variables is unknown. In fact a variable have different values (with different types) through the process, and a line can be evaluated multiple times, with the variables each time carrying a value of a different type.If we take a look at the grammar, we see:The "subscription" (the [1] in b[1] is thus defined in a production rule of trailer, and if we look at the grammar, this can only be the product of a factor, so that means that the / operator takes precedence over the subscription.So that means that:is equivalent to:Note that since Python is dynamically typed, the parsing (and analyzing) step will not give any guarantees that the expression is sensical. For example a tuple can not be devided by two. So this will result in a TypeError:For a numpy array however, this makes sense:


Answer URL
https://docs.python.org/3/reference/grammar.html#full-grammar-specification
