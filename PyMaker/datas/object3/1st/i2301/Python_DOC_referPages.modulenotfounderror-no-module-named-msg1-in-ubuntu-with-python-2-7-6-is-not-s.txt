Natural Text
Directory Structuretest.py Info   __init.py   msg1.py   msg2.py   msg3.pytest.pyinit.pymsg1.pymsg2.py and msg3.py is also same as msg1.pyme running this on windows pc with python 3.7.0getting the below errorPlease help me outThank you!
Here's why your program is breaking. Whenever a script is launched from your terminal, It appends the current path of the file to sys.path And Python only looks for modules which are in direct reach of this path. In your case, it appended to the path of the test.py, But, from the eyes of the Python interpreter, msg1 is still Info. away from the directory of test.py that is because the sys.path has directory only up to test.py and not up to Info i.e, there is a gap in the directory chain. So to avoid this problem you need to use relative imports to avoid name dependencies. Change your __init__ to this and it should work. Or you could also add the path of Info package to your sys.path which is not recommended but still possible. And here's another way you could do the sameAlthough a much better way would be thisAnd if you want to make the changes permanent, i.e not add sys.path every time, you can EXPORT or ADD the path to python's environment variables and it will pick it up automatically. 
You would import with this syntax in __init__.py:__init__.pyOr you can use as :Hope this will solve your problem.


Answer URL
https://docs.python.org/3/reference/import.html
