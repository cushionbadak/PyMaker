Natural Text
This question already has an answer here:PyCharm: “Simplify Chained Comparison”                    3 answers                How do chained comparisons in Python actually work?                    1 answer                Probably some of you might think this is duplicate, and yes, I found a lot of examples similar to this:But Pycharm says that I could simply this:And I did some searching and could not find something similar.My question is it correct to simplify this function like this:And if so, is it safe and is there is any difference at all between this version and not simplified version except that it's shorter?If it is not correct way to simplify it, what is then?
this is functionnaly equivalent, but when this:is nice to read, mixing different operators to use chained comparisons isn't the best choice.Is that really the same? let's disassemble to find out:result:Surprisingly they aren't the same, and the chained version has more instructions.Not sure what's going on here (some took some more time to explain it better: How do chained comparisons in Python actually work?), but really I'd stick to the and version which shortcuts and is so much readable (think of future maintainers too...).That said, one interesting thing about chained comparisons would be if the central argument is computed/takes a long time to compute/has a side effect in the computation and you don't want to store it in a variable:In that case, the central argument is only evaluated once. In the case of and, you'd have to store it beforehand.


Answer URL
https://docs.python.org/3/reference/expressions.html#comparisons
