Natural Text
I'm very new to programming and trying to teach myself. I'm currently trying to learn how to build objects from classes, which I think I understand. My current task is to add the object into a list and print that list. Ultimately I'm trying to build a program that creates an object and lists each object that has been created in a numbered list, i.e.:So to begin, I'm just trying to build the basic part of this.Here is what I made:When I run this, I get the following:So, from what I can tell, everything works except for printing the list, which I can not figure out. It seems to be appending the list propery, but not displaying the object. I've also tried a 'for' loop, but got the same result.
The problem is in the linesWhat you're doing here is creating a new Veg but not assinging anything to it. Then you're appending Veg the type to a list. Also, you need to tell Python how to print you Veg objects in a human readable way by adding the __str__ method to your class. Lastly, if you print a list directly (print vegList) you'll get the machine readable representation of the contents of the list, which isn't what you want. Iterating over the list's elements and printing them directly will work.Here's a working version with the requisite changes:
It is all working as designed. The <class '__main__.Veg'> string is the representation of your Veg class instances.You can customize that representation by giving your class a __repr__ method:All the __repr__ function has to do is return a suitable string.With the above example __repr__ function, your list would instead look like:You do need to make sure you actually append your new instance. Instead of:do this:
Your issue is here:The line I've commented as #1 creates a new instance of a veg object. However, it doesn't do anything with it. It doesn't store it anywhere, or name it, like if you had written a = Veg(name, color). Basically, it creates the object, then forgets about it.The line I've commented as #2 then appends the Veg CLASS to the list, rather than an instance of the class. This would be like adding the concept of an integer to a list, rather than adding an actual integer of 5.Try replacing these two lines with...Once you do this, you're still going to want to follow Martijn Pieters' answer to get the object to print correctly.


Answer URL
