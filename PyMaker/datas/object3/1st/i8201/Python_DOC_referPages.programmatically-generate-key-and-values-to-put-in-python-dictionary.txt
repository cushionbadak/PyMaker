Natural Text
I want to generate a large number of key value pairs to put in my dictionary using a for loop. For example, the dictionary looks like this:Note that both the key and value follows a pattern, i.e., the number increase by 1. Now I cannot do this 1M times and would prefer an automatic way to initialize my dictionary.
The most efficient way to do this is probably with a dict comprehension:Which is equivalent to:... but more efficient. Just change range(10) as necessary.You could also use .format() formatting instead of percent (C-like) formatting in the dict:If you are using Python2 replace all the range() functions with xrange() functions


EDIT: As pointed out by others, if you are using python 2 use xrange instead since it is lazy (so more efficient). In Python 3 range does the same thing as xrange in python 2
simple way is to do the following if you wanted to quickly append this to another dictionary you would use the dictionary equivalent of extend, which is called update. you could also shorten the original comprehension by doing this:You wouldn't even need to make keyf, or valf
Python can build dicts from lists:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.update
