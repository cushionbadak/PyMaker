Natural Text
How to reverse re.escape? This blog from 2007 says there is no reverse function, but is that still true, ten years later?Python 2's decode('string_escape') doesn't work on all escaped chars (such as space).Python 3: Some suggest unicode_escape or codec.escape_decode or ast.literal_eval but no luck with spaces.So is this really the only thing that works?
So is this really the only thing that works?Yes. The source for the re module contains no unescape() function, so you're definitely going to have to write one yourself.Furthermore, the re.escape() function uses str.translate() …… which, while it can transform a single character into multiple characters (e.g. [ → \[), cannot perform the reverse of that operation.Since there's no direct reversal of escape() available via str.translate(), a custom unescape() function using re.sub(), as described in your question, is the most straightforward solution.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
