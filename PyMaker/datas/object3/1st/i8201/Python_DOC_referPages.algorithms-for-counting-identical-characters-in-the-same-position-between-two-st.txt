Natural Text
Which of the two is a more optimal and/or more pythonic code?Functions return the number of positions in string 1 that contain the same character in the corresponding position in string 2   :
Strictly in term of performance, the first compare() is quadratic because it has an O(n) index() operation inside an O(n) for-loop.  The second compare2() is much better because is uses O(1) random access indexing with i.That said, @CharlesDuffy pointed out correctness issues which need to be addressed first.For long strings where function call overhead isn't important, consider this alternative which should run very fast:In Python 2, add this optimization for improved cache efficiency:
The second one is more optimal as your not calling a function ( c1.index() ) unnecessarily.


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#sum
