Natural Text
Here is a function:This runs perfectly:This does not print the message I expect:Why?
Your message doesn't get printed because the function is never called.Here's a simpler example which doesn't try to catch any exceptions, to show what's going on:If you save this as a module add_test.py and then import it from an interactive Python session, you can try a couple of things out:This works as expected.This raises TypeError inside the add() function (on line 4, as the traceback above tells you), because you can't add the integer 5 and the string 'x' together.If you wanted to, you could catch this exception and print some kind of message:â€¦ and it would behave as expected:However, when you miss out an argument completely, something different happens:This raises TypeError immediately, without even trying to execute the code in add(), because when you defined add() you specified that it takes exactly two arguments: a and b. Your function is saying "I can only be called with two arguments", so Python follows that rule.Since you haven't given Python a value for b in the second example, the function simply wouldn't make any sense if it were called, and Python knows that, so it refuses to try to do something that doesn't make any sense.One way of looking at this is that you're getting two different kinds of TypeError in the two examples above:When you call add(5, 'x') the problem is that 5 and 'x' are types of things that can't be added together, and you get a TypeError at the exact moment you break that rule.When you try to call add(5), the problem is that add() is a type of function that must be called with two arguments, and you get a TypeError at the exact moment when you break that rule, which is before the function can even start.


Answer URL
https://docs.python.org/3/tutorial/index.html
