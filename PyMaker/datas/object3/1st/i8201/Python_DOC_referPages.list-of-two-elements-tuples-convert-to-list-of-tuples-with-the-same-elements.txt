Natural Text
I have list of 2-elements tuples:And I want to convert it to another list of tuples. Each list contains elements with the same second index from first list.So in this case result should look:because 7, 4, 5, and 6 are paired with 3 while 0, 1, 2, 3 are paired with 1.My attempt is to do it this way: x = list(map(operator.itemgetter(0), sorted_countries))but I still don't know how to group it, because my result is:
At this time I am not able to get an inline solution... Hope the code snippet is useful if you need solution rather than clear one liner answer..
Depending on your use case this solution might be overgeneralized, but should work for all cases (i.e. initial tuples are not grouped by their second element). You need an OrderedDict here. If you want to avoid setdefault, you need an ordered defaultdict.The idea is to grab all the first values of your original tuples and append them to different lists based on the second element the first value is paired with. The OrderedDict is indexed by the first element of your tuples and is used to keep track of the creation order of the lists.Afterwards, we just extract the values (lists) and convert them to tuples.
Have a look at itertools.groupby(). This can do the grouping for you.Notice: the input has to be sorted by group key.Example, to get your desired output:As Jon Clements suggests, all of this can be done in a single line with nested list comprehensions:
RESULT:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
