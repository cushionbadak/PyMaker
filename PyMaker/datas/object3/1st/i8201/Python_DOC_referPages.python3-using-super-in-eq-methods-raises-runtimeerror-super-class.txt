Natural Text
I am monkey patching the __eq__ method of a class. I found that the following works:This does not work:This sometimes works, but sometimes raises and error:The error:Can you explain what is going on here? How do I properly replace object with super()?
You can't use super() without arguments in a function defined outside of a class. The __class__ cell super() relies on is only provided for functions defined in a class body. From the super() documentation:The zero argument form only works inside a class definition, as the compiler fills in the necessary details to correctly retrieve the class being defined, as well as accessing the current instance for ordinary methods.Use the 2-argument form, naming the class explicitly:This requires you to explicitly name the class in the monkey patch, making it less useful for reuse.Instead, you can provide the required __class__ cell manually by nesting eq in another function with __class__ as a local name:super() finds the second argument (reference to the instance), by taking the first local name from the calling frame (i.e. the first parameter passed into the function call, usually called self).Also see Why is Python 3.x's super() magic?Demo using the nested-function approach:


Answer URL
https://docs.python.org/3/library/functions.html#super
