Natural Text
I have a text file coords.txt containing lists in separated rows:the first column is ID, second and third ones - coordinates.I want to obtain following effect:I try the code:Result is:The other way I used is:Result is:How can I obtain expected outcome (get into the list to change strings to floats)?
Since your data is in the same format as when a list of floats is printed as a string, you can use ast.literal_eval method to convert it back to the actual list, like thisWe open the file with the with statement, and then read the lines in the file one by one with the for loop (for line in input_file). We do ast.literal_eval on the read lines and the result of the call is stored in the list, with the list comprehension. You can read more about the with statement, here, here and here.Actual problems with your approaches are,will just read the entire contents as a single string and then just split the string on the new line characters. But the list will still have only strings.And when you triedyou have just removed the [] characters from the individual lines, and split the line based on \n. You still haven't attempted to convert them back to floats. It will still be string only.
For each line in the text file, you first need to get rid of the square braces, then you split the string on ", " (mid the space here), Then after splitting you get a list of strings then you need to convert those strings to floats, for which you can use map() function.
If you don't mind having all floats, you can strip the [] and newline then split on commas mapping to float:Or using re to find all the digits:Using translate you would split on , after removing the []:Unrelated but you don't need to call readlines, you can just iterate over the file object instead of creating a list with readlines unnecessarily.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
