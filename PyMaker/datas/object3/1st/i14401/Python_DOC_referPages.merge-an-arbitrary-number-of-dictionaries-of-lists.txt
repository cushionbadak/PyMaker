Natural Text
How could dictionaries whose values are lists be merged in Python, so that all of the keys are moved into one dictionary, and all the elements of each list moved into a single list for each key?For example, with these dictionaries:... the result of the merging should be like this:How could this be done with any number of dictionaries, not just two?
To collect all the lists together, form a result dictionary that maps your keys to lists.  The simplest way to do this is with dict.setdefault() followed by a call to list.extend to grow the lists:A little more elegant way is with collections.defaultdict() where the automatic default is a new empty list:

You can use following approach, which uses sets and dict comprehensionResults:
Here's a solution that works for an arbitrary number of dictionaries:It's essentially a generalisation of Tanveer's answer, taking advantage of the fact that set.union() can accept any number of dictionaries as arguments.Here's an example of the function in use:... and with multiple dictionaries:



Answer URL
https://docs.python.org/3/library/stdtypes.html#set.union
