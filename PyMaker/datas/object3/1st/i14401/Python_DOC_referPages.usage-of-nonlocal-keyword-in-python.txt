Natural Text
Below program asks for nonlocal keyword with UnboundLocalError: local variable 'balance' referenced before assignmentBut, below program does not give such error when inner function shift refers to lst before assignment as temp = lst[0].How do I understand/compare these two scenarios?
You are never assigning to lst, only to lst[index]. The two concepts are not quite the same thing.The line:would rebind the name lst to point to another object. The line:alters the object referenced by the name lst, by binding a specific index in that sequence to something else. The name lst itself is never altered, so there is no ambiguity here as to what scope that name belongs in.In Python scoping, only binding operations on the name itself count. Binding operations are not just (direct) assignments, but also include function parameters, function and class definitions, import statements and targets for except .. as, with .. as and the target in for ... in loops. If a name is bound to in a given scope, it is considered local, in all other cases Python looks for the name in a parent scope, with the outermost scope being global.Assignments to subscriptions (using [...]) are not binding operations in this context.See the Naming and binding section of the Python Execution Model documentation, as well as the Short Description of the Scoping Rules? post.


Answer URL
https://docs.python.org/3/reference/executionmodel.html#naming-and-binding
