Natural Text
I'm trying to write a filter in django that highlights words based on a search query. For example, if my string contains this is a sample string that I want to highlight using my filter and my search stubs are sam and ring, my desired output would be:I'm using the answer from here to replace multiple words. I've presented the code below:However, when there is case sensitivity, this breaks. For example, if I have the string Check highlight function, and my search stub contains check, this breaks.The desired output in this case would naturally be:
You don't need to go for dictionary here. (?i) called case-insensitive modifier helps to do a case-insensitive match.EXample 2:
The simple way to do this is to not try to build a dict mapping every single word to its marked-up equivalent, and just use a capturing group and a reference to it. Then you can just use the IGNORECASE flag to do a case-insensitive search.For example, if text_to_replace were:â€¦ then text will be:If you really did want to do it your way, you could. For example:But that would be kind of silly. You're building a dict with 'sam' embedded in the value, just so you can replace that 'sam' with the 'Sam' that you actually matched.See Grouping in the Regular Expression HOWTO for more on groups and references, and the re.sub docs for specifics on using references in substitutions.


Answer URL
https://docs.python.org/3/howto/regex.html#grouping
https://docs.python.org/3/library/re.html#re.sub
