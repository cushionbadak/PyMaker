Natural Text
Say you have a datetime.date object such as that returned by datetime.date.today().Then later on you also get a string representing the time that complements the date object.What is a pythonic way of combining these two in a datetime.datetime object? More specifically, can I avoid converting the date object to a string? This is how I get it done for now:EDIT:I looked into datetime.datetime.combine as the first answer describes, but I am a bit at loss with getting the time string into a time object:
If you just read the docs for datetime, or look at the help(datetime) in the interactive interpreter, you'll see the combine method:classmethod datetime.combine(date, time)Return a new datetime object whose date components are equal to the given date object’s, and whose time components and tzinfo attributes are equal to the given time object’s. For any datetime object d, d == datetime.combine(d.date(), d.timetz()). If date is a datetime object, its time components and tzinfo attributes are ignored.So, you don't have to write the method yourself; it's already there in the module.Of course you need to parse that time_str into a time object, but you clearly already know how to do that.But if you did want to write it yourself, formatting the date and time as strings just to parse them back out would be silly. Why not just access the attributes directly?


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.combine
