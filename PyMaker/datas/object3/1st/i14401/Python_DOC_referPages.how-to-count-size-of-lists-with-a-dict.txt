Natural Text
If I have a dict of lists like:and I want to tally the size of the lists, i.e.. the number of ids >0, >1, >2...etcIs there an easier way than nested for loops like this:
I'd use a collections.Counter() object to collect lengths, then accumulate the sums:So this collects counts for each length, then builds a dictionary with accumulative lengths. This is a O(N) algorithm; you loop over all values once, then add on some smaller straight loops (for max() and the accumulation loop):
Yes, there is a better way.First, index the ids by the length of their data:Now, create your dict:This has O(n) complexity rather than O(nÂ²), so it's also much faster for large sets of data.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
