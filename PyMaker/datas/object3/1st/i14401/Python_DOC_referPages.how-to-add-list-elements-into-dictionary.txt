Natural Text
Let's say I have dict = {'a': 1, 'b': 2'} and I also have a list = ['a', 'b, 'c', 'd', 'e']. Goal is to add the list elements into the dictionary and print out the new dict values along with the sum of those values. Should look like:Instead I get:What I have so far:Any help will be appreciated!
You just have to iterate the list and increment the count against the key if it is already there, otherwise set it to 1.You can write the same, succinctly, with dict.get, like thisdict.get function will look for the key, if it is found it will return the value, otherwise it will return the value you pass in the second parameter. If the item is already a part of the dictionary, then the number against it will be returned and we add 1 to it and store it back in against the same item. If it is not found, we will get 0 (the second parameter) and we add 1 to it and store it against item.Now, to get the total count, you can just add up all the values in the dictionary with sum function, like thisThe dict.values function will return a view of all the values in the dictionary. In our case it will numbers and we just add all of them with sum function.
Another way:Use collections module:
Use collections.Counter, as it has everything you need for the task at hand:In order to get the total count you can simply sum the values of the counter:

If you are looking for a solution for the List to Dictionary Function for Fantasy Game Inventory in Automating boring stuff with Python, here is a code that works: 
The question on 'List to Dictionary Function for Fantasy Game Inventory' - Chapter 5. Automate the Boring Stuff with Python.


For the first section of this question this is the code that I came up with. I see that most people are interating through the loop to add to the total variable. However using the sum method, I skipped a step .. Always open to feedback.... 
Below is the code with the use of the above tips plus a slight variation with the plural of nouns. For those who are willing and brave, there is the task of ifs and elifs for exceptions ;)


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.get
https://docs.python.org/3/library/stdtypes.html#dict.values
