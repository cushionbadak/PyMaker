Natural Text
I try to write a-priori algorithm in python and I have a problem when the algorithm have to check the k-dimensional itemsets. So far, I have written this code:My problem is that I can't recognise when to use list and when to use a set. In this if-statement "if((len(candidate) == (k + 1)) and ((candidate < items) == True)):"the program never gets in. Have you any idea of what I haven't understand? the pseudocode for the algorithm is:Thanks in advance!
Sets are superior for testing membership (if x in set), and a set must contain hashable data, and cannot/will not contain duplicates (try set([1, 1, 3, 4])). Sets make available a lot of set theory functions, e.g., intersection. They are slower for adding members, are not ordered, and it's generally a good idea to use a list() if you don't have a good reason to use a set(). I encourage you to read the official python documentation on set().


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
