Natural Text
Been struggling with this for a while.Based on this thread: Using global variables in a function other than the one that created themI should be able to update the variable used by thread_2 by scheduling a task at certain times.The code:Results in:I am missing something, but I can't see what!Thoughts?Thanks!!!
Because you're using a ProcessPoolExecutor, you need to use a process-safe object in place of an ordinary integer. If you only need to support Linux (and can therefore rely on having fork()), you can just use an ordinary, global multiprocessing.Value to do this.If you need to support both Windows and Linux, you'll need to use a multiprocessing.Manager to create the Value object, and explicitly pass that object to the function you're running in the Executor:Because Windows lacks fork support, you need to explicitly pass the Value to the function you're running in the Executor. If you don't, the child process will say that the variable doesn't exist. However, since you're explicitly passing the Value to the run_in_executor method, you can't use an ordinary multiprocessing.Value - you'll get a RuntimeError saying that "Synchronized objects should only be shared between processes through inheritance".Using the multiprocessing.Manager works around this; the multiprocessing.Manager starts a process that can create and managed process-shared objects. Calling m.Value() returns a Proxy to a shared Value, and that Proxy can be passed to run_in_executor without raising an exception.
The problem is simple: You are using ProcessPoolExecutor. So the jobs are run in another process, which has its own memory space. variable is set correctly there, but it has a different value (60) in the parent process, which is never changed.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Value
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.sharedctypes.multiprocessing.Manager
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.managers.SyncManager.Value
