Natural Text
I've been reading lately about the generic relations. I know that GenericForeignKey is to define and manaeg the generic relation using ForeignKey and PositiveIntegerField fields. I dove into the source code in search for the __set__ method of the GenericForeignKey to see how does it work.Here is the snippet for GenericForeignKey.__set__():and model definition from django docs example:Question:When I assign value of guido to the content_object then what is the value of each of these paremeters: self, instance and value in the GenericForeignKey.__set__()? Is self=<GenericForeignKey: 1>, instance='content_object', and value=<User: guido>?
The __set__ method is for descriptors.The following simple example will show what the arguments passed to __set__ are:You'll get something like:Specifically:self is the instance of the MyDescriptor descriptor (MyClass.attr), instance is the instance of the MyClass class (inst), andvalue is what you're setting the attribute to ("foo").See a more thorough example here.So, without similarly diving into the Django code, it would seem that:self is the instance of the GenericForeignKey descriptor (TaggedItem.content_object), instance is the instance of the TaggedItem class, andvalue is what you're setting the attribute to.But note that, with this line:It looks like you're creating a TaggedItem, which creates a descriptor with this lineSo, at least from the code you posted, the __set__ method won't be called.  Instead GenericForeignKey's __init__ method would be called.To call GenericForeignKey's __set__ method, you'd need to do have an instance of a class (call it inst) that had a GenericForeignKey descriptor as an attribute (call it attr), then write something like:Then, the __set__ method of the GenericForeignKey descriptor would be called.


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/howto/descriptor.html#descriptor-example
https://docs.python.org/3/howto/descriptor.html
