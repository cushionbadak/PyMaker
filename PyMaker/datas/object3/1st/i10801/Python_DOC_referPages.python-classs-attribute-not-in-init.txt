Natural Text
I want to know why the following codes work?I accidentally found that I don't have to init attributes in init. I learn from every tutor I have to put assignment in init like below.If there are some official documents can explain this would be better. 
It's class attributes vs instance attributes vs dynamic attributes. When you do:speed and time are dynamic attributes (not sure if this is an official term). If the usage of the class is such that these attributes are set before calling any other methods of Car, then those methods can use self.speed. Otherwise, you get an error:This happens because for c, speed and time are attributes on that instance of Car. Their existence or value doesn't propagate across other instances of Car. So when I create d and then try to lookup d.speed, the attribute doesn't exist. As you've said in your own comment, "they spring into existence when they are first assigned to."I accidentally found that I don't have to init attributes in init. I learn from every tutor I have to put assignment in init like below.Your tutors were very wrong or you misunderstood what they meant. In the example you gave, every Car gets the same initial speed and time. Typically, an __init__ would look like this:You can then initialise a Car with: c = Car(3, 5). Or put default values in init if it's optional.Edit: example adapted from the docs:


Answer URL
https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables
https://docs.python.org/3/tutorial/classes.html
