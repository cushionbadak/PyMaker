Natural Text
First, I realize the following code is probably not very good, so apologies for anything that makes you cringe, I'm just trying to code as much as I can in hopes of getting better.This is part of a small hangman game project, I'm trying to figure the best way to deal with duplicate letters in strings.This is what I got for now:I'm looking for quick way to deal with duplicates so they are blitted along with their matches. I'm already slowing down my letter blits with all that looping, so I'm not really sure my current getDupes is the way to go.If anyone is willing to look at this and give some input, I'd very much appreciate it.Thanks for your time.
Based on what you've described in the comments, it seems reasonable to use a dictionary object in this case. You don't just want to store the letter, you want to store where those letters occur. Dictionaries have a key and a value. For example:{'jack': 4095, 'jill': 12}The key is jack and the value is 4095.In this case, we won't be using an int for the value. We'll actually be using an array of ints. So, your dictionary might look like this:{'o':[1, 5, 6, 3, 2, 1]} where those numbers are the index that the letter was encountered at. That will work for an arbitrary number of duplicate letters. Then, in your buttons, you know which ones to 'blit' because they're in the same order as the string.Python dictionary documentation: https://docs.python.org/3/tutorial/datastructures.htmlFWIW, some refactoring would do you service here as well.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
