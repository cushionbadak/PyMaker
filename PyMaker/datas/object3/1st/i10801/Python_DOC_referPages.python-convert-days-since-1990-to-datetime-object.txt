Natural Text
I have a time series that I have pulled from a netCDF file and I'm trying to convert them to a datetime format. The format of the time series is in 'days since 1990-01-01 00:00:00 +10' (+10 being GMT: +10) My desired output is a datetime object like so (also GMT +10):I have tried converting this using the time module without much success although I believe I may be using wrong (I'm still a novice in python and programming). Any advice appreciated,Cheers! 
The datetime module's timedelta is probably what you're looking for.For example:You can then use and/or manipulate the offset object, or convert it to a string representation however you see fit.You can use the same format as for this date object as you do for your time_datetime:Output:Instead of using a date object, you could use a datetime object instead if, for example, you were later going to add hours/minutes/seconds/timezone offsets to it.The code would stay the same as above with the exception of two lines:Note: Although you don't state it, but the other answer suggests you might be looking for timezone aware datetimes.  If that's the case, dateutil is the way to go in Python 2 as the other answer suggests.  In Python 3, you'd want to use the datetime module's tzinfo.
netCDF num2date is the correct function to use here:This will convert number of days since 1900-01-01 (i.e. the units of time) to python datetime objects.  If time does not have a calendar attribute, you'll need to specify the calendar, or use the default of standard. 
We can do this in a couple steps. First, we are going to use the dateutil library to handle our work. It will make some of this easier.The first step is to get a datetime object from your string (1990-01-01 00:00:00 +10). We'll do that with the following code:Now, our days_since_dt will look like this:We'll use that in our next step, of determining the new date. We'll use relativedelta in dateutils to handle this math.This will result in your value in new_date having a value of:This method ensures that the answer you receive continues to be in GMT+10. 


Answer URL
https://docs.python.org/3/library/datetime.html#timedelta-objects
https://docs.python.org/3/library/datetime.html#datetime.tzinfo
