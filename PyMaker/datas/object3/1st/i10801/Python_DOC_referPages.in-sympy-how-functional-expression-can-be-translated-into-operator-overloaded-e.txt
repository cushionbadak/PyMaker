Natural Text
Recently I am working with boolean network and I am using sympy to manipulate boolean functions. I think this can be very basic question but I could not find any clue.Following line works well. Here I have very simple question. How the expression 'And(Or(x, y), x)' can be expressed as '(x | y) & x'? Thanks
Sympy makes extensive use of Python operator overloading capabilities.In Python each class can define as any mathematical operator will take effect, by defining methods with special names - these methods allways are prefixed and postfixed  with __, and are described in the Python Data Model.Sympy symbols and expressions are objects that redefine all of the operator-related methods to perform an operation that return a Sympy expression object instead of a numeric result.Thus, the operators for  bynary and & an dbinary or | are just one part of what Sympy does, and the long English versions And and Or function calls are provided as well for ease of typing and readability in certain contexts.
If you just want nicer printing, you can run and it will print it using Unicode characters, or even LaTeX if it's available (like in the Jupyter notebook)You can also use the pprint() function to get this directly. It looks like the default SymPy printers use And and Or instead of the & and | symbols to print logic expressions, so if you explicitly want those, you would need to subclass sympy.printing.str.StrPrinter and override _print_And and _print_Or (see the current implementation to get an idea of how that would work). 


Answer URL
https://docs.python.org/3/reference/datamodel.html
