Natural Text
For my project I need to dynamically create custom (Class) methods.I found out it is not so easy in Python:But it is giving me errors (and headaches...). Is this even possible?I try to make the code between #legacy dynamicOne option to do this I found was to create the class dynamicallyHowever, this is giving meDoes anyone know how to solve this dilemma?
Exception Value: 'UserFilter' object has no attribute 'is_bound'You are getting this error because the class methods you are generating, are not bound to any class. To bound them to the class, you need to use setattr()Try this on a console:Traceback:      UserFilter = type('Foo', (django_filters.FilterSet, ), create_filter_dict().update({'Meta':type('Meta',(), {'model':  get_user_model(), 'fields':[]} )})) TypeError: type() argument 3 must  be dict, not NoneNow, this is failing because dict.update() doesn't return the same instance, returns None. That can be fixed easily However, just look how messy that code looks. I recommend to you to try to beclearer with the code you write even if it requires to write a few extra lines. In the long run, the code will be easier to maintain for you and your team.This code might not be perfect but it is more readable than the original line of code you posted: And removes a complication on an already kinda difficult concept to grasp.You might want to learn about metaclasses. Maybe you can overwrite the new method of a class. I can recommend you 1 or 2 posts about that. Another option is that maybe you are not adding the filters correctly or in a way django doesn't expect? That would explain why you get no errors but none of your functions gets called.
You can use classmethod. Here is example how you can use it:
You are asking for:custom (Class) methods.So we take an existing class and derive a subclass where you can add new methods or overwrite the methods of the original existing class (look into the code of the original class for the methods you need) like this:All the other Methods and features of World.Earth apply to NewEarth only you can now change the direction to make the world turn your new way.To overwrite an existing method of a class is as as easy as this.So if someone likes a cool shower on earth he/she/it or whatever makes room for new development on the toy marble the burning way.So have fun in your way learning python - and don't start with complicated things.If I got you completely wrong - you might explain your problem in more detail - so more wise people than me can share their wisdom.


Answer URL
https://docs.python.org/3/library/functions.html?highlight=classmethod#classmethod
