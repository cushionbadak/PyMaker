Natural Text
The basis is:I want to iterate a certain number of times, each time I take a list, find a certain value, replace that value with two new values and make that the new list what goes into the iteration.  Here is what I have:list1 is the list I want to changelist2 are the elements I want to replacelist3 are the locations in the original list that values I want to replace areThe output would ideally look like this:This is what I had, but it ended up getting too complicated and filled with errors, I figure their has to be a simpler way to do this. I have also looked at itertools, but couldn't get that to do what I wanted.Any help is much appreciated.
You could start from the end and do extends or the following will work, add the next two elements from list2 if the current index is in a set of indexes we create from list3 or just keep the original element, then chain all the elements into one list:Or create a simple generator function:Same output:
The way I've approached this problem is by first creating your list by zipping together the lists, and with some simple arithmetic, decide at which index to delete elements from. This does not account for the possibility of duplicate values in the indices list (this input can be sanitized with a set or edge case error handling) Possible solution:Calling the method f():
You can use list-comprehension with filter:You can loop through and check, an imperative-version:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
