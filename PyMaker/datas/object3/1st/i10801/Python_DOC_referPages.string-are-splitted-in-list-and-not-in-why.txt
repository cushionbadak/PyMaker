Natural Text
I have been working in a project then I accidently discovered when I pass string,they are splitted in list() but when I pass the same string to  [ ] there is no splitting into single letters of  the string.Can anyone tell me what happend here?
Because the list constructor takes an iterable as an argument and constructs a list from the items of that iterable. In your case it will grab each individual sub string in the string and us them as items.On the contrary, [] is an alternate constructor that constructs a list from the elements the comma-separated values that are provided, no additional actions are performed.You could achieve a similar result with [] in Python 3 by unpacking the string inside the square brackets:In both Python versions, you can get the same result with a comprehension:
list is a builtin that takes an iterable and turns it into a list. [] on the other hand is a language construct for defining lists. To achieve the same results with the construct [] you can use a comprehension:
Strings are iterable. The list function (really it's a type, but it's callable) iterates over its argument, making each element of the iterable (in your case, each character of a string) an element of the resulting list.That's pretty much the same for any iterables. What you are doing is the string equivalent ofWhich is to say, in the second case you get a list containing a single iterable while in the first one you get a list made up of the individual elements of the iterable.
in >>> y = list("hello")You ask python to build a list from "hello" si it cut the string in elementand in >>> z = ["hello"]you make a list with a single element hello
The list() method makes a list out of given input.The version with square brackets implies you want to create a list with one element, your string. Therefore it is not splitted up.
y = list("hello")list() is a built-in function that takes an iterable and "Return a list whose items are the same and in the same order as iterableâ€˜s items" (see https://docs.python.org/2/library/functions.html#list).z = ["hello"]This is just a list with a single element (of type string) on it.
In your first example;you are casting a string "hello" to a listIn the second example;You are creating an array(list) with one item which is a string with contents "hello"


Answer URL
https://docs.python.org/3/library/stdtypes.html#list
