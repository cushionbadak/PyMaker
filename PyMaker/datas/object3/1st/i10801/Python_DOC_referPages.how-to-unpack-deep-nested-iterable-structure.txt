Natural Text
Say for example I have a structure that contains many sub-elements some of which are structures:How can I unpack these into a series of names that contain only the contents of the structures and not a structure?Trying a, b, c, d, e, f = v raises a ValueError while using the starred expression would assign a structure to the names. How can I unpack them in order to get:to print:
Assignments are defined recursively, you need to use parentheses () and/or square brackets [] to enclose target names and match the nested structure of your iterable. In your case:Similarly, with no change in semantics, you could use [] to denote the structure:or, of course, mix them up.Python will then unpack v and assign the first 3 values normally, then unpack the contents of (d, (e, f)) and assign d and then again unpack (e, f) and do the same.You can see this happening if you import the dis module and disassembling the statement with dis.dis:In general, to unpack arbitrarily nested structures, match the structure in the left side of the assignment (target-list):the outer [] are, of course, unnecessary, just adding them to show that simply matching the structure suffices. 
Another option you might consider is to flatten the structure and then assign it.Then 


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
