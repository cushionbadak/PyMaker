Natural Text
i am new to programming and have been studying some code to get to know about OOP.Here is what i have understood and need help on,1) import gym and env=gym.make('String') : This means gym is a library, and make is a class under it? Have we created an object instance?I understood classes contains methods inside them..i.e functions..but in this case i am not able to decipher clearly.The line after this env.monitor.start()..this contains 3 parts..what does each indiciate..i thought env was an object instantiated earlier.Thanks for your help, apologise if the question is stupid
gym can be a package or a module. The import statement doesn't tell you what gym is. gym.make means that you are calling a method called 'make' from gym. env is then whatever make('CartPole-v0') returns, which may or may not be an object. It has a monitor attribute which seems to be startable, from the method monitor.start(), so I'd guess that it is, but you can't know this without looking at the code for gym or calling type(env). env.monitor.start() means that the start method from env.monitor is called. What env.monitor is can't be determined without looking at the code for gym.
Here's the basic structure of the above program:import statements bring modules into the program. These modules contain functions. The module is able to use these functions. For example,imports a module myMod and gives it an alias of mM. fooFunc belongs inside the module and so we're able to call it.We don't need aliases. We can also just say but it's slightly less convenient.env is just a name for the return value of the function gym.make('CartPole-v0'). Functions always return something, such as an actual object, an integral type (like an integer, or a string), or None.The return value doesn't need to always be stored, such as in env.monitor.start('/tmp/cartpole-experiment-1',force=True). It simply performs some data manipulation.As for the rest of the program, it's ran by for-loops and if statements. Read about it here.
gymcan be a package or module. There is no way to tell what it is by its import statement.env = gym.make('CartPole-v0') can either assign the return value of the call of function make from gym to variable env, or create an item of class make and assign that item to variable envenv.monitor.start('/tmp/cartpole-experiment-1',force=True) means the env variable most likely returned an item of class that has a property/subclass called monitor. This property/subclass possess a function called startenv most likely also has a subclass/property action_space with a function sample
gym.make('CartPole-v0') returns an object.Therefore, 'env' is an object.'env' contains a property, 'monitor', which is also an object. The 'start' method is a method of the 'monitor' object, not the env object. Another way to write it would be (env.monitor).start('/tmp/cartpole-experiment-1',force=True)For the sake of repetition,


Answer URL
https://docs.python.org/3/reference/compound_stmts.html
