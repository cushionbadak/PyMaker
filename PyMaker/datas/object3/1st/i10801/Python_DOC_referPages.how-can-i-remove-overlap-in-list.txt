Natural Text
I made example python list.[1, 3, 2, 2, 3, 4, 5, 1]To remove overlap, i tried to use set().{1, 2, 3, 4, 5}but i want make I want remove overlap in list, but i also want order not to be changed.How can i do that?
You can use list-comprehension with filter (initialize the empty list first, ignore the resulting list)
You could (ab)use collections.OrderedDict to get just the unique elements in order:Alternatively, you could use a list comprehension with an additional set of already seen items. However, list comprehensions with side-effects are not considered best style.The condition not (x in seen or seen.add(x)) works like this: If x in seen, the or is true and thus the not is false, but if x not in seen, then the first part of the or is false, and thus the second part is executed and returns None, which is then converted to True by not.
To have distinct values in your list, just use the following snippet:As you already found out, set() doesn't preserve the order of your sequence. The basic idea is taken from here.As tobias_k mentioned in the comment, this solution won't work with Python 3. If you use Python 3, you may just iterate through your list with a simple for loop (tobias_k's idea) or use libraries like OrderedDict:
Try This You can do this using reversing a list.without using any python libraries.
I would probably do something like this:I use seen for fast lookups, still unknown time complexity from the result.append method call.It's possible to do this as a list comprehension as well, at the cost of mixing functional and imperative code in a horrible mish-mash:But! This relies on side-effects in the mapping, so it's less than ideal. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
