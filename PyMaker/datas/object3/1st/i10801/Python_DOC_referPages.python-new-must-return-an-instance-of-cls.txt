Natural Text
According to the docs,Typical implementations create a new instance of the class by invoking  the superclass’s __new__() method using super(currentclass,  cls).__new__(cls[, ...]) with appropriate arguments and then modifying  the newly-created instance as necessary before returning it.   ...If __new__ does not return an instance of cls, then the new  instance’s __init__() method will not be invoked.The simplest implementation of __new__:How exactly does super(currentclass, cls).__new__(cls[, ...]) return an object of type cls?That statement calls object.__new__(cls) where cls is MyClass.So how would class object know how to create the type MyClass?
super(MyClass, cls).__new__(cls) first searches the MRO (method resolution order) of the cls object (skipping past MyClass in that sequence), until it finds an object with a __new__ attribute.In your case, that is object.__new__:but if you subclassed MyClass and mixed in another class into the MRO with a __new__ method then it could be another method.object.__new__ is implemented in C, see the object_new() function; it contains a hook for abstract base classes to make sure you are not trying to instantiate an abstract class, then delegates to the tp_alloc slot, which usually will be set to PyType_GenericAlloc, which adds a new PyObject struct to the heap. It is that struct that represents the instance to the interpreter.
Few things, first of all you need to write explicit inheritance from object like this:You should read about old classes and new classes on python(only on python 2, in python 3 it does not matter)For your question, I think you missed the point or syntax of super() functions. Again, small change to your code:In this way you reference to the parent-class by using super(MyClass, cls) and calling a method from this parent-class new(of course you can use any other method)editAfter reading your comments, I'll just add that super() doesn't have to take any arguments in Python 3 so maybe it's more trivial for you.  Highly recommended to read more about the super() here


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__new__
https://docs.python.org/3/reference/datamodel.html#object.__new__
