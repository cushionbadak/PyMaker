Natural Text
While migrating to Python 3, I noticed some files we generate using the built-in csv now have b' prefix around each strings...Here's the code, that should generate a .csv for a list of dogs, according to some parameters defined by export_fields (thus always returns unicode data):The problem is once I returns file_content.getvalue(), I get:Instead of (indentation has been modified to be readable on SO):I did not find any encoding parameter in the csv module. I would like the whole file to be encoded in cp1252, so I don't really care either the encoding is done through the iteration of the lines or on the file construted itself. So, does anyone know how to generate a proper string, containing only cp1252 encoded strings?
The csv module deals with text, and converts anything that is not a string to a string using str(). Don't pass in bytes objects. Pass in str objects or types that cleanly convert to strings with str(). That means you should not encode strings.If you need cp1252 output, encode the StringIO value:as StringIO objects also deal in text only.Better yet, use a BytesIO object with a TextIOWrapper() to do the encoding for you as the csv module writes to the file object:I've enabled line-buffering on the wrapper so that it'll auto-flush to the BytesIO instance every time a row is written.Now file_content.getvalue() produces a bytestring:


Answer URL
https://docs.python.org/3/library/io.html#io.BytesIO
https://docs.python.org/3/library/io.html#io.TextIOWrapper
