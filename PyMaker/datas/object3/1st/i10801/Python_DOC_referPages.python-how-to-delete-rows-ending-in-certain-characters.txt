Natural Text
I have a large data file and I need to delete rows that end in certain letters.Here is an example of the file I'm using:Code I am using:How do I use regular expression syntax to delete the words that end in "DA" and "PL" but make sure I do not delete the other rows because they contain "DA" or "PL" inside of them?It should delete the rows and I end up with a file like this:First 3 rows are deleted because they ended in DA and PL.
You could use this expressionIt will return all rows that don't end in either DA or PL. The ?: is so that the brackets would not capture anything. Otherwise, you'd see pandas returning the following (harmless) warning: Alternatively, using endswith() and without regular expressions, the same filtering could be achieved by using the following expression:As expected, the version without regular expression will be faster. A simple test, consisting of big_df, which consists of 10001 copies of your original df:
You can use a boolean mask whereby you check if the last two characters of User_Name are in not (~) in a set of two character endings:
Instead of regular expressions, you can use the endswith() method to check if a string ends with a specific pattern.I.e.:You should create another df using the filtered data, and then use pd.to_csv() to save a clean version of your file.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.endswith
