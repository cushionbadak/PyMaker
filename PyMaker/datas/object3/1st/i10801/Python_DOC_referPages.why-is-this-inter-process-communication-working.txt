Natural Text
In Python, exchanging objects between processes is well documented: queues, pipes or pools should be used (see doc). So why is this super simple code working without any of these communication tools?Result is
That's because no interprocess communication is happening.Modify the code to print the value of _memory in the child process:And you'll see that the memory inside the subprocess never changes.A sample output is:Note how it always prints:instead of, say:So what is happening is that all your calls are local. you are spawning a subprocess that does nothing and you aren't performing any communication with it. The subprocess when is spawned copies the _memory attribute but that attribute is then never modified, and your changes in the main process do not affect the child process.To be dead clear: you are basically wasting a subprocess. You are spawning one without making any use out of it, and after spawning it you are treating your child exactly as any other python object. 


Answer URL
https://docs.python.org/3/library/multiprocessing.html#exchanging-objects-between-processes
