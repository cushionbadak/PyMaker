Natural Text
In a current project, I found myself often writing code like so:As you can see, statement_x and statement_y often get repeated, and they are always paired, but I am unable to condense them into a single statement. What I would really like is a language construct like this:In this case, I'm pretending env is a Python keyword indicating a special "sandwich function" that runs certain statements before and after a given block, the point of entry of the block being indicated by the second keyword run_code.My above program can now be made more readable using this construct:Which I mean to have the exact same behavior.As far as I know such a construct does not exist, and the point of my question is not to speculate on future Python features. However, surely this situation of "run some common code before and after a variable block" must occur often enough that Python has a convenient way of dealing with it! What is this way? Or is the Pythonic solution to simple give up and accept the repetition?PS: I realize that I could write a function that takes the variable statements as an argument, but that would not be very user-friendly - I would end up writing huge lists of statements inside the parens of my function.
You can use a with statement.Example using contextlib.contextmanager:Example usage:


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-with-statement
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
