Natural Text
I'm a bit confused and trying to understand what goes underneath in the hope that I would understand Monkey Patch better. I've read Where to patch and I understand that I have to patch from where you use the module. But in the documentation. If I do this from a import SomeClass Then I have to patch like this.@patch('b.SomeClass')However, why if I import the module like this. import aI instead have to use the patch like this.@patch('a.SomeClass')I only understand how to use the patch but I don't understand why is this the case? Is it the way Python import module?
The goal is to intercept, and modify, the reference that will be used by functions whose behavior you want to affect. Initially, a.SomeClass and b.SomeClass point to the same object; but the patch will replace one of these references with something else.In the documentation, the example is that you want to modify the SomeClass that is seen and used by some_function. So what matters is how some_function() refers to SomeClass:If some_function contains a reference to plain SomeClass, it will be resolved to a variable in its own module: b in this example (and incidentally b created this variable by importing it). Hence b.SomeClass is what needs to be patched.If some_function explicitly refers to a.SomeClass, then that's the reference that needs to be patched.Suppose module b.py contains both of these lines:Which reference should be patched? Why, the one that is used by some_function! What matters is not how it's imported into b, but how it's accessed by the code that uses it.
This all has to do with namespaces.Inside of b.py, when the command from a import SomeClass executes, SomeClass is added to the namespace of module b. Thus, you have b.SomeClass.In the other case, when still inside of b.py and you execute the command import a, all that happens is that the module b now has access to the namespace of module a. So from a global point of view, the class being used inside of b is still a.SomeClass.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
