Natural Text
I have been experimenting with Python socket servers and such. I came across an idea and I am having a hard time implementing it. I want the server side to be able to enter different commands, for starting and stopping the server, and performing various other tasks. My problem is, when I start having a lot of commands, my program ends up looking like spaghetti:One of my friends who has been programming for a while said I should try and use a dictionary to store a function reference for each command. I created a dictionary like this:And I would call these commands like this:The problem with this method is that sometimes I want a command with multiple arguments and sometimes I don't. I want to be able to have different commands with varying arguments, specify their required arguments, and check to make sure the command is a valid command with all the required arguments. I am new to programming, and I have tried thinking of a clean way to implement this. I found nothing useful on google so hopefully someone can assist me. Thanks.
If you know the commands' structure this is a task of parsing and it is up to the format. Other than that you can send variable length arguments using the star operator * (you can also send keyword arguments using ** but I'd start with this).Here is a simple example:Note than this will send all arguments as a string. This is a basic demonstration:As mentioned in the comments to your question this is a very common task and libraries do exist to parse various common formats. One which is often used (I use it as well) is argparse.
A simple working example that is close to the poster's original source code:You could enter a command like: start 1 20 and it would pass 1 and 20 to the start handler. Example output:


Answer URL
https://docs.python.org/3/library/argparse.html
