Natural Text
I'm trying to form figures of the text a person chooses. I already made a square, pyramid and a parallelogram. Where I get stuck is when I'm trying to make a circle. My thought was to use a for i in range (1, height/2) where it would print the text (f.e. --) * i times. Then I wanted another for loop to print the exact opposite, so from height/2 to height, it should first print height/2* text en for every time the for loop starts again, it should print the text one time less.I'm not completely sure if this will look like a circle somehow. I'll give my code for a pyramid and a circle. I'm aware that for the circle, I still need to do something with " ", but as I don't really know how to get everything working in the first place, I haven't began thinking about how I'm gonna need blank spaces in that code.Example of output, see link
Here's a function that prints a circle of a given radius, using a single character. It uses Pythagoras' theorem to calculate the half-width of the circle at the current height, and multiplies that by the xscale constant to convert that to the full-width, with a scaling factor to take account of the fact that text cells on my screen are more than twice as tall as they are wide; you may need to adjust it a little for your screen.It uses the str.center method to simplify positioning each row. In this demo, I start printing at radius = 4, because the smaller ones look terrible. :)output
The area of a circle is A = π r², so you can get the radius from the number of characters filling the circle1). The equation of a circle of radius r is x² + y² = r². You can use this to derive (half of) the width of a given line as x = √(r² - y²). Then, just use a loop to iterate twice the radius and use a format string to print the next few characters from the text centred on the line.Output:Note how the text had to be padded as the radius has to be integer (thus ceil). Of course, you can do the same for printing just . (or any other placeholder), by setting text = ""1) That is assuming each character is as wide as it is high, which is not really the case. I guess you can tweak the formula a bit to draw fewer lines with more characters per line instead.For instance, you get a circle that appears (!) much rounder on screen (but really is oblated) by making the lines twice as wide.:Output:


Answer URL
https://docs.python.org/3/library/string.html#formatstrings
