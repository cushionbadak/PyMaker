Natural Text
For one of my assignments I have to replace a token character with another character of my choosing, in a string. Oh, but replace() is not an optionI'm new to this, so please don't tear me apart too hard :)With the above, the intention is to check if every letter in the string matches the token character, and if it does, it is replaced with a new letter.I have no idea what I need to add to this, or what I'm doing wrong.
Find the character with index().Concatenate the front, new char, and back.If you have more than one occurrence of old_char, you can iterate until they're all done, or put this into a function and recur on the back part of the string.
Well, since strings are iterable you can do this:Example:Explanation: This uses a generator expression to emit the new character whenever the old character is encountered, and uses str.join to join that expression with no separator (actually, empty string separator).Side note: You can't actually mutate strings, that is why all solutions must construct a new string.
You could iterate through each character and substitute your token character. You could do this by building a string:Or using a generator with str.join

Using regular expressions:This results in:
One-liner if you know of translate() and string.maketrans()


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
