Natural Text
I've two functions, and I want to choose function message() or function number() on a UNIX terminal.This example I define the function will be used inside if __name__ == "__main__"::At terminal Inputting:Outupts:Then when I've two functions and call just one of them:
The canonical (and, in my view, correct) way to do this is to create a mapping of argument values to functions, which is simple to implement, efficient and easily scalable:Note the use of * to pass the rest of the arguments to the function - see What does ** (double star) and * (star) do for parameters?. This has removed the requirement for sys.argv to have a third value to create the functions, which could be a problem if you decide to reuse those functions elsewhere.This will raise a KeyError if the user enters an invalid function name; you can handle this and give them a more specific error message if you like (either with sys.argv[1] in FUNCTIONS, which will be more efficient than checking in a list, or using try and except).If you want a more complex CLI, with e.g. flags and specific value types, you should use something like argparse or click.
You definitively asked the wrong question. Your question is "how do arguments work on Python", and for working with arguments you have two options I'm aware of:Using sys.argv: you need to write something like if "message" insys.argvUsing argparse which is a far better solution


Answer URL
https://docs.python.org/3/library/argparse.html
