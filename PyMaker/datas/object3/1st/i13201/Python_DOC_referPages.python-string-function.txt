Natural Text
Looking to put together a simple python function that checks the followingGiven two strings, return True if either of the strings appears at the very end of the other string,ignoring upper/lower case differences (in other words, the computation should not be "casesensitive").
Try with
You can use regex
Or if you need to "create" your own function:So, basically, if string1 = "ABCD" and string2 = "CD", it will check character 0 of string2 with 2 of string1 and 1 of string2 with 3 of string1
Here's another approach using zip, which avoids having to do multiple passes of endswith(), re.search() or slicing. It iterates the 2 strings in reverse and returns True if all the letters are equal up to the exhaustion of one of the strings:In Python2 you can use itertools.izip() for a marginal space improvement:
You could use slicing.You can read more about string and slicing here.Slicing means to get part of the string based on passed index. General construction look like this: string[starting_index:ending_index].Let's take a look at this:string1 = "doggy"string1[0:1] -> "d"string1[0:2] -> "do"string1[0:] = string[:] = "doggy" (from zero to end)You can also pass index lesser than 0:string1[-1:] (from -1 to end) -> "y"So in the code above calling s1[-l:] means starting position is the length of s2 sentece. In this case s1[-l:] = 'abc' = s1[-3:]. Because lenght of s2 is 3. 
You can use OOP if you want, subclassing str and writing an appropriate method:


Answer URL
https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types
