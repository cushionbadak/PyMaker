Natural Text
How do I 'declare' an empty bytes variable in Python 3?I am trying to receive chunks of bytes, and later change that to a utf-8 string.However, I'm not sure how to declare the initial variable that will hold the entire series of bytes. This variable is called msg. I can't declare it as None, because you can't add a bytes and a NoneType. I can't declare it as a unicode string, because then I will be trying to add bytes to a string. Also, as the receiving program evolves it might get me in to a mess with series of bytes that contain only parts of characters. I can't do without a msg declaration, because then msg would be referenced before assignment.The following is the code in question
Just use an empty byte string, b''.However, concatenating to a string repeatedly involves copying the string many times. A bytearray, which is mutable, will likely be faster:To decode the byte array to a string, use msg.decode(encoding='utf-8').
Use msg = bytes('', encoding = 'your encoding here').Encase you want to go with the default encoding, simply use msg = b'', but this will garbage the whole buffer if its not in the same encoding
As per documentation:Blockquote  socket.recv(bufsize[, flags])  Receive data from the socket. The return value is a string representing the data received.  Blockquote  So, I think msg="" should work just fine:


Answer URL
