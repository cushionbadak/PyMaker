Natural Text
I am making a basic utility in Python 3 running on Windows with which the user inputs commands and at any given time may receive a printed message. The issue is, when using the input() function if a user is typing in a command and half way through something is printed out into the console, the result may look like this:In this scenario, the return of the input() command would still be this-is-a-command-that-is-being-cut-off although, this does not look very appealing to the user and may cause confusion. I have tried using various tools such as sys.stdin with only the same results. If anybody knows a solution to this problem, hopefully not using 3rd party modules, that would be great.
You can use a single thread for input and output. Have the threads receiving messages put them into a queue or deque. Then whenever you are not waiting for user input, you can check the queue for messages and output them. For checking for user input without blocking, there is the msvcrt module from the standard library.Or you use curses http://pdcurses.sourceforge.net/, there are inofficial builds for python up until 3.2 (http://www.lfd.uci.edu/~gohlke/pythonlibs/#curses) and build a more advanced interface on top of it.That being said, I would not choose the windows command line to build something like that.


Answer URL
