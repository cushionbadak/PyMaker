Natural Text
Is it possible to identify the parent MagicMock mock object instance of a child mock object instance, or the children of a parent mock object instance? For example, if I have the following codeHow could I confirm later that the child mocks spawned from calling parent_mock? How could I check which mock objects parent_mock produced?Also, how could I distinguish that child_mock1 originated specifically from the call parent_mock(a=1), while child_mock2 originated from the call parent_mock(b='spam')?I understand one can manually attach mocks as attributes of other mocks, however, it requires a good deal of setup in that you will need to make sure to explicitly define the return calls of the parent mock so that it returns the designated child mocks, and so it doesn't scale well past a few calls. 
How could I confirm later that the child mocks spawned from calling parent_mock?Well, there's an undocumented attribute _mock_new_parent, which you could use like this......but it looks as if the answer to all your other questions is "you can't".I suppose you could subclass MagicMock to keep track of its children with something like this......then you could do...
Careful there!26.4.2.1. CallingMock objects are callable. The call will return the value set as the return_value attribute. The default return value is a new Mock object; it is created the first time the return value is accessed (either explicitly or by calling the Mock) - but it is stored and the same one returned each time.If you want different calls to give different results, you'll want to give your mock a side_effect attribute. If mock.side_effect is a function, then mock(*args, **kwargs) will call mock.side_effect(*args, **kwargs) and return whatever that returns. You can make your custom mock.side_effect keep track of what calls produced what values.


Answer URL
