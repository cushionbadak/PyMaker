Natural Text
How can I generate random integers between 0 and 9 (inclusive) in Python?For example, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
Try:More info: https://docs.python.org/3/library/random.html#random.randint
Return a random integer N such that a <= N <= b.Docs: https://docs.python.org/3.1/library/random.html#random.randint
Try this:
This generates 10 pseudorandom integers in range 0 to 9 inclusive.
The secrets module is new in Python 3.6. This is better than the random module for cryptography or security uses.To randomly print an integer in the inclusive range 0-9:For details, see PEP 506.
Try this through random.shuffle
Choose the size of the array (in this example, I have chosen the size to be 20). And then, use the following: You can expect to see an output of the following form (different random integers will be returned each time you run it; hence you can expect the integers in the output array to differ from the example given below).
In case of continuous numbers randint or randrange are probably the best choices but if you have several distinct values in a sequence (i.e. a list) you could also use choice:choice also works for one item from a not-continuous sample:If you need it "cryptographically strong" there's also a secrets.choice in python 3.6 and newer:
if you want to use numpy then use the following:
The original question implies generating multiple random integers.How can I generate integers between 0 and 9 (inclusive) in Python?Many responses however only show how to get one random number, e.g. random.randint and random.choice.  Multiple Random IntegersFor clarity, you can still generate multiple random numbers using those techniques by simply iterating N times:Sample of Random IntegersSome posts demonstrate how to natively generate multiple random integers.1  Here are some options that address the implied question:random.sample returns k unique selections from a population (without replacement):2In Python 3.6, random.choices returns k selections from a population (with replacement):See also this related post using numpy.random.choice.1Namely @John Lawrence Aspden, @S T Mohammed, @SiddTheKid, @user14372, @zangw, et al.2@prashanth mentions this module showing one integer.
To get a list of ten samples:
random.sample is another that can be used
Generating random integers between 0 and 9.Output:
Best way is to use import Random function  or without any library import:here the popitems removes and returns an arbitrary value from the dictionary n.
You can try this:Notes:1.> np.random.uniform generates uniformly distributed numbers over the half-open interval [low, high).2.> astype(int) casts the numpy array to int data type. 3.> I have chosen size = (15,). This will give you a numpy array of length = 15. More information on numpy.random.uniformMore information on numpy.ndarray.astype
This is more of a mathematical approach but it works 100% of the time:Let's say you want to use random.random() function to generate a number between a and b. To achieve this, just do the following:num = (b-a)*random.random() + a;Of course, you can generate more numbers.
Try This,
I used variable to control the rangeI used the print function to see the results. You can comment is out if you do not need this.
For the example that you have given (a random integer between 0 and 9), the cleanest solution is:
From the documentation page for the random module:Warning: The pseudo-random generators of this module should not be  used for security purposes. Use os.urandom() or SystemRandom if you  require a cryptographically secure pseudo-random number generator.random.SystemRandom, which was introduced in Python 2.4, is considered cryptographically secure.  It is still available in Python 3.7.1 which is current at time of writing.  Instead of string.digits, range could be used per some of the other answers along perhaps with a comprehension.  Mix and match according to your needs.
I had better luck with this for Python 3.6  Just add characters like 'ABCD' and 'abcd' or '^!~=-><' to alter the character pool to pull from, change the range to alter the number of characters generated.


Answer URL
https://docs.python.org/3/library/random.html#random.randint
https://docs.python.org/3/library/random.html#random.sample
https://docs.python.org/3/library/random.html#random.choices
https://docs.python.org/3/library/random.html
