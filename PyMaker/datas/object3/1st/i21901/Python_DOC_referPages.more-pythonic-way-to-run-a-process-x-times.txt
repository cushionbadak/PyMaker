Natural Text
Which is more pythonic?While loop:For loop:Edit: not duplicate because this has answers to determine which is clearer, vs. how to run a range without 'i' -- even though that ended up being the most elegant
Personally:if you don't need i. If you use Python < 3 and you want to repeat the loop a lot of times, use xrange as there is no need to generate the whole list beforehand.
If you are after the side effects that happen within the loop, I'd personally go for the range() approach.If you care about the result of whatever functions you call within the loop, I'd go for a list comprehension or map approach. Something like this:
The for loop is definitely more pythonic, as it uses Python's higher level built in functionality to convey what you're doing both more clearly and concisely. The overhead of range vs xrange, and assigning an unused i variable, stem from the absence of a statement like Verilog's repeat statement. The main reason to stick to the for range solution is that other ways are more complex. For instance:Using repeat instead of range here is less clear because it's not as well known a function, and more complex because you need to import it. The main style guides if you need a reference are PEP 20 - The Zen of Python and PEP 8 - Style Guide for Python Code. We also note that the for range version is an explicit example used in both the language reference and tutorial, although in that case the value is used. It does mean the form is bound to be more familiar than the while expansion of a C-style for loop. 
How about?or in a more ugly way:or if you want to catch the last time through:where:
There is not a really pythonic way of repeating something. However, it is a better way:If you need to pass the index then:Consider that it returns the results as a collection.So, if you need to collect the results it can help.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-for-statement
https://docs.python.org/3/tutorial/controlflow.html#for-statements
