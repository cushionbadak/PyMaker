Natural Text
This question already has an answer here:Unpack a list in Python?                    3 answers                In Python, how do I convert a list to *args?I need to know because the functionwants several time_series objects passed as *args, whereas I have a list of timeseries objects.
You can use the * operator before an iterable to expand it within the function call. For example:(notice the * before timeseries_list)From the python documentation:If the syntax *expression appears in the function call, expression  must evaluate to an iterable. Elements from this iterable are treated  as if they were additional positional arguments; if there are  positional arguments x1, ..., xN, and expression evaluates to a  sequence y1, ..., yM, this is equivalent to a call with M+N positional  arguments x1, ..., xN, y1, ..., yM.This is also covered in the python tutorial, in a section titled Unpacking argument lists, where it also shows how to do a similar thing with dictionaries for keyword arguments with the ** operator. 
yes, using *arg passing args to a function will make python unpack the values in arg and pass it to the function.so:
*args just means that the function takes a number of arguments, generally of the same type.Check out this section in the Python tutorial for more info.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
