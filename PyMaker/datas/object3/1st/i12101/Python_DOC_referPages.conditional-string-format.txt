Natural Text
Given a dictionary of ints, I'm trying to format a string with each number, and a pluralization of the item.Sample input dict:Sample output str:It needs to work with an arbitrary format string.The best solution I've come up with is a PluralItem class to store two attributes, n (the original value), and s (the string 's' if plural, empty string '' if not). Subclassed for different pluralization methodsThen make a new dict through comprehension and a classes mapping:Lastly, the format string, and implementation:Outputs the following:For such an undoubtedly common need, I'm hesitant to throw in the towel with such a convoluted solution.Is there a way to format a string like this using the built-in format method, and minimal additional code? Pseudocode might be something like:where parentheses return the contents if value is plural, or if contents has comma, means plural/singular
Using custom formatter:Output:UPDATEIf you're using Python 3.2+ (str.format_map was added), you can use the idea of OP (see comment) that use customized dict.Output: same as above.
Check out the inflect package.  It will pluralize things, as well as do a whole host of other linguistic trickery.  There are too many situations to special-case these yourself!From the docs at the link above:For your specific example:
If you happen to use Django already, it is easy: pluralize is a function that. It is often used in templates: However, you can also use it in your python code:In Python2 this would read:or: Django pluralize docs:https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#pluralize
I would go with something likeThe format is always/singular/plural, which singular (then plural) optional.SoThen for your example one just does:
I was inspired by the answers above, particularly @Veedrac's, to create a Plurality utility:https://gist.github.com/elidchan/40baea13bb91193a326e3a8c4cbcaeb9Features:Customizable number-indexed templates (e.g. see 'vague' below)Numbers and support for $n template tokensSingular/plural forms (e.g. 'cact/us/i') and support for $thing/$things template tokensIndefinite article capability (inspired by https://stackoverflow.com/a/20337527/4182210) and support for $a template tokenLeft/right string concatenationPartials with any subset of number, forms, and templatesPartial completion via call() or format stringFrom the docstring:


Answer URL
