Natural Text
I'm having an issue with my programming of Rock, Paper, Scissors for Python. My issue occurs when there is a tie. When there is a tie, my program is supposed to going into a while loop within the if statement of the tie and reask the player the same question, rock, paper or scissors again until it breaks out of the tie. I have attached the link to the image of the issue:In Round 5: you can see the issue.I am taking an intro to programming class so I'm still a beginner and I do not know what I am doing wrong.A Python program for the Rock, Paper, Scissors game.
Your problem comes from the way you have structured your control statements (if, elif, else). When you enter your tie while loop, you are constantly running it until someone wins and that looks like it works no problem. The issue is that once you do that, the python interpreter skips all elif and else statements in that control block (if I say if x == 3: do this else: do that) I don't want python to follow through with the else condition if x does indeed == 3). Sorry if that is confusing, long story short you need to make sure that even when your tie block gets executed you still move on to scoring the round and starting a new one. The easy way to do that is just change the elif (player == "r") to an if statement. That way the interpreter treats the scoring control sequence as its own block and it will always be executed once you assign the throws each player makes.Example:if you call f(0):Python will print out 1 and then Done!if you call g(0):Python will print out 1 then 2 then Done! 
Your immediate problem is that you have the handling code for a tie in the same if/elif chain as the handling for the other scoring. You say something like:As a result, when there is a tie the game correctly loops until there is no tie. But then is skips over the code that updates the score, because that is how if/elif/else works!An immediate fix would be to break that if/elif chain, and put the tie-handling into a separate if block:With that said, let me add a few more things:You are assigning two values to the same variable, in sequence:This doesn't do anything, because the second overwrites the first. You should just delete the first line in each of those pairs.You should probably write a function that repeatedly asks the user to pick one, until it gets either rock, paper, or scissors. Use a while loop.There is a function in the random module that will pick an item from a list, tuple, or string and return it. You can use that to make the computer pick r,p,s directly. You can simplify your code by determining the outcome in advance. Say you have the computer pick first. Then if the computer picks 'r', you know 'p' is a win and 's' is a lose. Store the win/lose picks in a pair of variables, and all your testing can be boiled down to one test:


Answer URL
https://docs.python.org/3/library/random.html?highlight=choice#module-random
