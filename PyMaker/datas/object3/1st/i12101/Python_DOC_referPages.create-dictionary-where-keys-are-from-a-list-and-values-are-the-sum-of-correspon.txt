Natural Text
I have two lists L1 and L2. Each unique element in L1 is a key which has a value in the second list L2. I want to create a dictionary where the values are the sum of elements in L2 that are associated to the same key in L1.I did the following but I am not very proud of this code. Is there any simpler pythonic way to do it ?EDIT:Q: How do I know which elements of L2 are associated to a given key element of L1?A: if they have the same index. For example if the element 7 is repeated 3 times in L1 (e.g. L1[2] == L1[7] == L1[8] = 7), then I want the value of the key 7 to be L2[2]+L2[7]+L2[8] 
You can use enumerate() in order to access to item's index while you loop over the list and use collections.defaultdict() (by passing the int as it's missing function which will be evaluated as 0 at first time) to preserve the items and add the values while encounter a duplicate key:
If you don't need the intermediate dict of lists you can use the collections.Counter:which behaves like a normal dict:
Hope this may help you.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
