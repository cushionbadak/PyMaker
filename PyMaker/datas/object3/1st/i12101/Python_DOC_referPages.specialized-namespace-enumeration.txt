Natural Text
I'd like to make use of Python's enum to create value in their own namespace.Here is the basic idea:Then each member should print the following:Idealy, I'd like the value to be taken directly from the member name so I avoid repetition like for the Autoumber class given for an example.And bonus would be to be able to do something like:I started to play with the __new__() method but having hard time to reach expected result.For now I have the following:So this make an str specialized Enum and join the __namespace__ tuple with each member value. So this is the basics of what I'm looking for.The solution would imply to run over all the parents of the current namespace to create the final __namespace__ tuple. I for now don't see how this can be done.How to implement such a behavior? Is Enum really the good way to go?
I'm not sure what you are trying to accomplish, and here's why:every module is already its own namespaceevery class is already its own namespacelots of other things are also already namespacesOne (big) difficulty in using Enum in the way you are trying is that Enum doesn't allow subclassing once members exist; in other words, once you have created MyBaseNs as an Enum you won't be allowed to create MyChildNs as an Enum.As far as your code; when run I get this:Which seems to be exactly what you asked for.


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html#autonumber
https://docs.python.org/3/reference/datamodel.html#object.__new__
