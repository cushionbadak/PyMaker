Natural Text
I'm facing a problem involving lists. I have a nestedlist like:where the first list holds the the y and the second list holds the x coordinate for four different points. I'd like to obtain a list:where each list represents a point. Is there a simple pythonic way to do that or must I deal with for loops? Thank you in advance and sorry if a similar question has been already posted.
That's what the zip function is for.if you don't need your elements to be lists (i.e. tuples are fine, too), this shortens toin Python 2 andin Python 3.Explanation of the syntax:A[::-1] is reversing A:The reversed list is then passed in an unpacked form (notice the *) to the zip function, which is equivalent toand zip will build tuples from the first, second, ..., n'th elements from each iterable.edit:Minor improvement:should be more memory efficient because reversed gives you an iterator, A[::-1] gives you a complete list, which we don't really need.
A couple things. First, those are Python lists which roughly correspond to ArrayLists in other programming languages. Second you asked for tuple elements in the result, but the code you posted has elements of type list.Use the zip builtin function.yieldsIf you want elements of type list, you can do the following.yields
numpy can do it also, in a perhaps more readable way:


Answer URL
https://docs.python.org/3/library/functions.html#type
https://docs.python.org/3/library/functions.html#zip
