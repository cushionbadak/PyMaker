Natural Text
If I have two files with the following contents:test_helper.py:And test.py:The code above doesn't test correctly. The mock is not applied properly:If I make the following changes in test.py:Change from test_helper import Installer to import test_helper, and Change with Installer('foo', 'bar', 1) as installer: to with test_helper.Installer('foo', 'bar', 1) as installer:The code then works. Why does the mock only apply when I use the fully qualified name? Is it supposed to work in the partially-qualified case?
You are testing your Deployer class inside test.py, which is calling Installer. This installer is what you want to mock. So, your decorator should be with respect to that.I don't know where you are testing from exactly. But as an example, if you are running your test from the same level as test.py, then you can simply do this to your decorator and it should work: Note: You should not be mocking within the Installer module. You don't care about Installer in this case. Just that it returns your Mock, so you can continue testing the behaviour of your Deployer. Think of it that way, and you will realize why you have to mock with respect to what you are testing.  


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
