Natural Text
I am trying to normalize a URL, to extract the content after :// and before the last / at the end of line if it exists.Here is my script:What I want is example.com/25194425, but I get example.com/25194425/. How to deal with the last /?Why doesn't /? work?
An alternative way to do it without using regex is using urlparseLater on, if you want to include the protocol, port, params, ... parts into the normalized url. It can be done easier (than updating the regex)
As one of the commenters said, you just need to make the quantifier non-greedy:However, the result of findall() is a list, not a string.  In this case it's list with only one entry, but it's still a list.  To get the actual string, you need to provide the index:But that seems like an inappropriate use of findall() to me.  I would have gone with search():
The default is possible because the regular match more characters. So '(.*) /' will match to the last slash.You can use it:
EDIT Please try the following pattern (python 2.7x):Output:Thanks @Alan Moore for pointing out the word boundary issue. Now it should work for both scenarios.


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.normpath
