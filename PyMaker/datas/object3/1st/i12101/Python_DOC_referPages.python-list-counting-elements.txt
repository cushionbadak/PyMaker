Natural Text
I have a code as belowHow can I find that abc is a list made up of lists?Whats wrong with my map function?I want my function to return count of each element in my input list divided by length of my list.Something like My code:_______________________________________update 1I updated my code as below. I get result [('brown', 0), ('lazy', 0), ('jumps', 0), ('fox', 0), ('dog', 0), ('quick', 0)] any idea why? If i do return return list(map(lambda input: (input[0], input[1]), abc)), it gives correct result - [('brown', 1), ('lazy', 1), ('jumps', 1), ('fox', 1), ('dog', 1), ('quick', 1)]update 2I am using pyspark/spark. Could that be a reason for issues that i am facing in update1?
The counter solution will definitely be better. Your use of tokens.count gives the code quadratic time complexity. Heres your code fixed up. You should note that map is a standalone function, not a member function of a list or any other type.To test if you have a list of lists, you can use isinstance to check the type of the parent object and if its a list and has at least one element in it, you can loop through them using isinstance to check if each child object is a list.Note that I made your function return a list of tuples, implying that the items are read only, but you could make it return a list of lists by changing the line.If you look at it closely you'll see that a set of parenthesis have been substituted for square brackets, making each element a list.If you have a older version of python 2 that does not support the from __future__ import division import you can uses the following workaround to force float division to occur.
Based on what I think you're asking you could do something likeThat being said the question isn't very clear since you're mentioning list type() but showing percentage of word frequency in a list
You should be able to do this fairly easily with a Counter:or, to make it super pythonic:


Answer URL
https://docs.python.org/3/library/functions.html#map
