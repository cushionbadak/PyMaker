Natural Text
I am attempting to implement a priority queue in Python. I am following an example that I found online. The Skill class overrides the __cmp__ method so that the priority queue can order itself. I am getting a error when I run:I've found several examples online that say as long as you overload the __cmp__() method the priority queue should be good.I'm currently running Python 3.4.1 on my computer.
__cmp__ was removed in Python3, you should use the rich comparison dunder methods instead __lt__, __le__, __eq__, __ne__, __gt__, __ge__.They work as follows:You can also use the the class decorator functools.total_ordering which allows you to specify __eq__ and any one of __lt__, __le__, __gt__, __ge__ and it will infer the rest of the rich comparison methods.
cmp and __cmp__ were only used in Python 2.x; they no longer exist in Python 3.x.  Nowadays, you overload the comparison operators directly by implementing __eq__, __ne__, __lt__, __gt__, __ge__, and __le__.You can read about this change on the What's New In Python 3.0 page under Ordering Comparisons:The cmp() function should be treated as gone, and the __cmp__()  special method is no longer supported. Use __lt__() for sorting,  __eq__() with __hash__(), and other rich comparisons as needed.


Answer URL
https://docs.python.org/3/library/functools.html#functools.total_ordering
https://docs.python.org/3/whatsnew/3.0.html#ordering-comparisons
https://docs.python.org/3/reference/datamodel.html#object.__lt__
