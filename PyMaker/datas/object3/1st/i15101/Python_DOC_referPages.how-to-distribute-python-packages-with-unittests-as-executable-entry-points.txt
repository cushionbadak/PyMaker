Natural Text
I am writing a python package that has executable scripts registered into 'setup.py' as entry points. when the package is installed these are placedinto the "bin" directory of the python package installation without the ".py" extension. I want to be able to run the unit tests of the packageas an executable too once the package is installed. the unittests are in "test_package.py" which is in the "entry_points" of setup.py:run the python packagesthe test_package.py script reads some files from "test-files":when I run "test_package.py" inside the package it works fine. however when I install it and "test_package" is created as executable in "bin", then running:from command line cannot find the tests. it says "ran 0 tests". what is wrong with this directory structure? what is the right way to distribute unit tests in a way thatthey can be run from the command line even if they create files?  if the package is installed for someone using sudo privileges then i want the user which is sudo-less to be able to run these without requiring write access to where package is installed.the structure of test_package.py is:
By default unittest.main try to find tests in __main__ module. Because you try to run the tests from entry point then the module is not __main__ anymore.Probably if you try to pass module argument to unittest.main function which is mypackage.test_package it may work.For more details you can see the documentation for unittest.main:Python3 - https://docs.python.org/3/library/unittest.html#unittest.mainPython2 - https://docs.python.org/2/library/unittest.html#unittest.main


Answer URL
https://docs.python.org/3/library/unittest.html#unittest.main
