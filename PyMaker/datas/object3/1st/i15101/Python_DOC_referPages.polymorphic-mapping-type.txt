Natural Text
Is there a polymorphic dict-like type in Python? Here is what I mean by polymorphic: consider a basic class hierarchy with an Animal base class and a some derived classes, Cat, Snake, etc. and let's have our mystery mapping type mystery_dictNow, I want to have the following lines to be true:I know that I could use a bunch of isinstance or an "overload set" with functools.singledispatch since Python 3.4 but in some cases, a polymorphic dictionary type would be handy to reduce boilerplate. Does such a type exist in the wild or do I have to create one? Of course, if you have an even better alternative, I would be glad to hear about it.Note: just in case the question gets asked, I have rather simple needs so it doesn't have to handle multiple inheritance.
This is trivial enough to write yourself:This uses the class.__mro__ attribute to list the class hierarchy of the current object, in method lookup order (Method Resolution Order). This sequence includes the current class and lists all classes all the way up to object.Demo:You probably want to look at zope.component however; this lets you do exactly this with added interfaces. It has optimised the lookup mapping to a very high degree to scale the principle to far larger registries of object mappings.


Answer URL
https://docs.python.org/3/library/stdtypes.html#class.__mro__
