Natural Text
It obviously works but are there cases where two sets of same elements happen to add two entries in Dict? I guess I got this condition earlier and changed my code from frozenset(...) to tuple(sorted(frozenset(...))). Can someone who knows how Dict and frozenset implementation confirm if that is required or not? 
are there cases where two sets of same elements happen to add two entries in Dict?No. frozenset hashing algorithm doesn't depend on the order of the elements, only on elements themselves. Two FS'es with the same elements are equal and have equal hashes, thus satisfying both criteria for "dict identity", in other words, they are the same dict key:
Is it safe to use a frozenset as a dict key? Yes.According to the docs, Frozenset is hashable because it's immutable. This would imply that it can be used as the key to a dict, because the prerequisite for a key is that it is hashable.From the FrozenSet docsThe frozenset type is immutable and hashable — its contents cannot be altered after it is created; it can therefore be used as a dictionary key or as an element of another set.And redundantly, from the Dictionary docs:...keys, which can be any immutable typeTo clarify, a set (by definition), frozen or not, does not preserve order. They are stored internally with order not taken into account and with duplicate elements removed, so two sets built in different orders would be equivalent keys in a dictionary – they are the same.and likewise,
from the official docsThe frozenset type is immutable and hashable — its contents cannot be altered after it is created; it can therefore be used as a dictionary key or as an element of another set.(Emphasis is mine)


Answer URL
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
