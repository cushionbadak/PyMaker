Natural Text
When I try to or/and two sets using &= and |= operator, I got some weird result.As expected, tmp will be {2,3}, but I don't know why s1 also changed it value to {2,3}. However, if I do:Then, s1 will be unchanged! Can anyone explain for me what happens underneath &= operator?
&= (set.__iadd__) for set is implemented differently with & (set.__add).set &= ... is implemented using set.intersection_update which update the set in-place.Relevant CPython code (Object/setobject.c):
It's called intersection_update. return set s keeping only elements also found in t.  As you see in this picture;You are re-building first set with intersection.
Copy the set by value instead of by refrerence(As s1 is an instance of set)


Answer URL
https://docs.python.org/3/library/stdtypes.html#set.intersection_update
