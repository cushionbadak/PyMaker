Natural Text
I recently answered a question here with a PowerShell dictionary that used "ContainsKey" to decide whether to define a key value or add to it if necessary. I do that a lot - usually in C#, Python, R, or PowerShell these days, and I tire of it.Is there a language - or even a library - that could do the following PowerShell code block in a single line?
ConcurrentDictionary in .NET will allow you to do that, yes:You should be able to use that (with syntax changes, obviously) in PowerShell, too.Alternatively, if you want to do this for plain Dictionary in .NET, you could add an extension method:This is written to have the same effective signature as the ConcurrentDictionary method; if you only ever need a Func<TValue, TValue> for the update factory, you could change it accordingly.I would imagine you could take the same approach in Python with a helper method - I don't know enough about Python to say whether you could do something like the extension method.
In Perl (you did ask "a language"), you just add it:If the key does not exist it will create it with a value of undef, which numerically equates to zero, and $sval is then added to it.  If the key does exist then the operation is as you would expect.
You can do that in one line in Powershell:If $skey doesn't exist as a key in $sums, it will be added, with a value of $sval.If it does exist, the current value will be updated according to the rules for using the += operator on the type of the existing value.  If it's a number, it will do a mathematical addition, if it's a string it will concatenate, and if it's an array or collection it will add it as a new element.
Python (I am using Python 3 in these), there is collections.defaultdict whose constructor takes a factory method, that is used to create default values for missing keys. int() returns 0, thus it is good for counting.Or if you have an iterable of things, you can use collections.Counter:Say you have a function that asks for input:(the iter(function, sentinel) makes an iterator of repeated calls to function until the function returns a value that equals to sentinel).


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/collections.html#collections.Counter
