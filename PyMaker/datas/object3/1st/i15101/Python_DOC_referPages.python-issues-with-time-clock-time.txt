Natural Text
I wrote a system to exchange crc-checked struct data between an arduino nano and my python script. This is working pretty well but when i let the system run i get unexpected output on my python monitor (using pycharm)print "Took ", (time.time() - timeout), " s" sometimes prints out Took  0.0  s.Usually it prints Took  0.0160000324249  s.Using win7-64bit professional.From time doc : Return the time in seconds since the epoch as a floating point number. Note that even though the time is always returned as a floating point number, not all systems provide time with a better precision than 1 second.IÂ´m looking for something like millis() thats enough precision for my caseCode Python :
Summary: Use timeit.default_timer() instead of time.time(), to measure a short duration.16ms error for time.time() is not surprising on Windows.Currently, Python uses GetSystemTimeAsFileTime() to implement time.time() on Windows that has  the resolution (precision) of 0.1ms (instead of ftime()'s 1ms) and the accuracy is between 0.5 ms and 15 ms (you could change it system-wide using NtSetTimerResolution()). See Python bug: Use GetSystemTimeAsFileTime() to get a resolution of 100 ns on Windows and another SO question: How does python's time.time() method work?A better alternative to measure short time intervals on Windows is to use time.clock() that is implemented using QueryPerformanceCounter() on Windows. For portability, you could use timeit.default_timer that is assigned to time.clock() on Windows, time.time() on other systems, and it is time.perf_counter() since Python3.3. See Python - time.clock() vs. time.time() - accuracy?


Answer URL
https://docs.python.org/3/library/time.html#time.perf_counter
https://docs.python.org/3/library/time.html#time.monotonic
