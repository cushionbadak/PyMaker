Natural Text
I've generated a hex string usingBut I'd like to use it as a string.I've tried with str(b0f4735701d6325fd072) but it does not work.also
I recommend, if you want to get this from a separate process, follow Python best practices and use the subprocess module. check_output will give you the stdout of the process that is kicked off. shlex can properly parse the shell command for you, don't do it manually:To start with a proper hex literal, which begins with 0x, which Python translates to a long int:Pass it to hex:(You can strip the L from the string with hex(0xb0f4735701d6325fd072).strip('L'))To convert back to a long from the string representation, you need to pass it to int (also long in Python 2) along with the proper base (16 in this case):
This is an XY question because you don't know what os.system does.os.system runs a shell command and returns the exit code. You mentioned that it's returning 0, that's because it ran successfully.Instead you should use subprocess.check_output.This will return as a string the output of the shell call openssl rand -hex 10 rather than its exit code.
You could get random bytes using os.urandom():If you want to get an exception if the PRNG has not been seeded with enough data; you could use ssl.RAND_bytes():To get random bytes from openssl subprocess:


Answer URL
https://docs.python.org/3/library/os.html#os.urandom
https://docs.python.org/3/library/ssl.html#ssl.RAND_bytes
