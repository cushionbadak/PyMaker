Natural Text
I have a problem with pickle.load() from a file. Dump and load is done in dill_read_write.py:dill_read_write.pySaving object ContactGeometry data to pickle file is done when the PyQt application (project) is running. Function write() is called in moduleC.py:moduleC.pyThe object is saved and pickle file is created. But when I run only the file dill_read_write.py to read (load) object data from pickle file I get the following error:I searched a bit and found that dill can perform better than pickle with classes but I am having problems to implement it. I've also found that I have to implement __reduce__() in class ContactGeometry in file contact_geometry.py.contact_geometry.pyBut I am not sure what should return this method? How could I successfully load pickle file from the current situation?Below is the project structure, if it is any help.
You cannot run a python file from within a package like that; it wouldn't find the toplevel package names. I'd propose any of the following:Write a start script in at the top level (where the main.py is), that imports and runs the read_write_dill from moduleA.moduleBInstead in the top level directory, where the main is, you can runthat module with python -m moduleA.moduleB.dill_read_write.Or, my preferred alternative, write a setup.py for your project and write a script for that utility.
I'm the dill author.  It's hard to tell how you are running the code, but it looks like the issue is that one way you are running the code and the module name as in @Antti Haapala's answer.  His suggestions are also good ones to follow.I'll add thisâ€¦ You need to make sure that (1) moduleA.moduleB.contact_geometry is on the PYTHONPATH, and (2) you are not dumping the module as __main__.moduleB.contact_geometry and trying to load it as moduleA.moduleB.contact_geometry -- dill treats __main__ as if it were a module (for the most part).You shouldn't need to add __reduce__ methods to your classes, however.


Answer URL
https://docs.python.org/3/distutils/setupscript.html
