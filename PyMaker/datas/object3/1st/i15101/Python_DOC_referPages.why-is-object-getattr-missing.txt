Natural Text
Why does object seem not to have a __getattr__ method?  It defines both __setattr__ and __delattr__.  Doesn't it need all three?
Indeed, object does not have a __getattr__ method.Instead, it has __getattribute__.https://docs.python.org/2/reference/datamodel.html#object.__getattribute__ explains why:object.__getattribute__(self, name)Called unconditionally to implement attribute accesses for instances of the class. If the class also defines __getattr__(), the latter will not be called unless __getattribute__() either calls it explicitly or raises an AttributeError.In other words, if you have __getattribute__, it doesn't make sense to also define __getattr__.Historically, __getattr__ came first, and __getattribute__ was introduced with "new-style classes" in Python 2.3 (iirc).  Python 3 only has new-style classes but seems to have preserved both hooks anyway (perhaps because it can be convenient to have a hook that is only called if "normal attribute access" fails).
__getattr__ is a method that runs only after __getattribute__. Since object has the latter, there is technically no need for the former. But in general, you shouldnâ€™t expect object to have all the things that other objects (deriving from it) have. Since object is implemented in native code, it may behave a bit differently.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
