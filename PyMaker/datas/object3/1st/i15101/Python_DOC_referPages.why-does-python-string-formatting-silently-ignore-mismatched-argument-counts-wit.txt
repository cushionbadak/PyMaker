Natural Text
Normally, Python old-style string formatting complains if the number of placeholders in the string doesn't match the number of arguments passed:However, when the argument passed is an instance of a user-defined class, it instead silently ignores it:This behavior seems inconsistent and has resulted in some difficult-to-track-down bugs. Why does the type of the format argument matter for the purposes of this error?
This is exactly why %-formatting is old%-formatting is well known for its inconsistencies about argument handling which result in exceptions or not depending on the type. There are only two ways to use % formatting and avoid inconsistencies:Make sure the formatting string contains exactly one formatting field and pass the object to format as only right argumentUse a tuple or dict as right argument. Don't use lists, sets or Models. Only tuples and dicts. These are taken from the documentationIf format requires a single argument, values may be a single non-tuple  object. Otherwise, values must be a tuple with exactly the number  of items specified by the format string, or a single mapping object  (for example, a dictionary).Your examples do not fall in these two cases because you have 0 formatting fields, which is different than 1 and thus the right argument must be a tuple or a mapping, but you are passing a string and a user defined object. As such you are under "undefined behaviour".The inconsistencies on the error messages were already discussed in this question (in my answer).If you want more consistent behaviour, use str.format.


Answer URL
https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting
https://docs.python.org/3/library/stdtypes.html#str.format
