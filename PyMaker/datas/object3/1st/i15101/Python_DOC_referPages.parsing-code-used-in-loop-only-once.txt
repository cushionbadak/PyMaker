Natural Text
I'm writing a code in Python which can be used to solve equations. The user must first input a code via a raw_input(), which will then be used to calculate y for every x in a loop with eval(), like so:The problem is that parsing the input code using eval() for every loop is extremely slow. Is there a way to parse the code only once and then use it as a function in the rest of the program?
You can compile the expression in advance using compiler.compile() (deprecated since Python v2.6).With Python 3.x:the compile functionality is built-inthe AST module offers similar functionsAlso take a look at: Python: Way to speed up a repeatedly executed eval statement?EDITSome examples:and nowcompile is a lower level version of eval (and exec). It doesn't evaluate/execute your expression/statement but returns a code object that can do it.PS as a general rule when using eval on user submitted strings you must be very careful about what you accept (it's a potential security hole).
if the equation in code doen't need any reference to X, then you could move Y = eval(code) outside the loop. Otherwise you need it at this position to access X and its current value.
If the user inputs the equation in terms of a single variable "X", then you can convert it to a function using Python's lambda keyword:(For this to work, the user just enters the right-hand side of the equation, 3*X + 100, not Y = 3*X+100.)Then in the body of your loop, you can call this function instead:Note, eval is now only being called once, to create the callable CodeAsFunction variable.Of course, you must take care regarding security issues, as have already been mentioned by other posters.


Answer URL
https://docs.python.org/3/library/functions.html#compile
