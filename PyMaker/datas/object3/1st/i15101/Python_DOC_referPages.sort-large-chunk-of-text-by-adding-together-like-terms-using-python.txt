Natural Text
Here is a sample chunk of data. With some research of my own, I have figured out how to sort in the obvious and common ways. I can sort alphabetically for instance, or I can sort by number, or a variety of other different sorting methods. However, I am wanting to combine like terms and sort. I can't find any reference to combining like terms. For instance, if the data consisted of:Then after the program processed the data, the output would display as such:What am  I missing? 
I used a much smaller version of your original list because you didn't quote the strings, so I couldn't just copy and paste it, but you get the idea.You split the string by slicing after the number (item[1:]) and then add the number to the count stored in the dict (int(item[0])), using it as the value instead if it isn't there already (except KeyError).
Using regular expressions you can detect the number and the letters. Then store their counts in a dict and combine it in the end. Probably not as fast as slicing suggested by others (I missed the comments saying that first character is always a single digit), but it's suitable for any number of digits.
A short dictionary comprehension can fix this up for you in 1 line so long as the prefix number is >0 and <10.Then if you want to print all of that back out you can do a list comprehension to do so, though the dictionary may be nicer.To turn that into a list, instead of using Python I simply brute forced it with Notepad++. I did ctrl+h (find and replace), searched for the commas (,) and replaced with quote-comma-quote (','). If you need to do this on a regular basis consider reading the information in as a CSV file and adding the data to a list before doing the dictionary comprehension.


Answer URL
https://docs.python.org/3/library/re.html
