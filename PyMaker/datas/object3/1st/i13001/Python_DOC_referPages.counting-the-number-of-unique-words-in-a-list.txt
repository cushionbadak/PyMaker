Natural Text
Using the following code from https://stackoverflow.com/a/11899925, I am able to find if a word is unique or not (by comparing if it was used once or greater than once):But, if I were to have a string with hundreds of words, how would I be able to count the number of unique words within that string?For example, my code has:How would I be able to set uniqueWordCount to 6? Usually, I am really good at solving these types of algorithmic puzzles, but I have been unsuccessful with figuring this one out. I feel as if it is right beneath my nose.
The best way to solve this is to use the set collection type. A set is a collection in which all elements are unique. Therefore:You can use a set from the outset, adding words to it as you go:This will throw out any duplicates as they are added. Or, you can collect all the elements in a list and pass the list to the set() function, which will remove the duplicates at that time. The example I provided above shows this pattern:Read more about sets in Python.
You have many options for this, I recommend a set, but you can also use a counter, which counts the amount a number shows up, or you can look at the number of keys for the dictionary you made.SetYou can also convert the list to a set, where all elements have to be unique. Not unique elements are discarded:Here's a link to further reading on setsCounterYou can also use a counter, which can also tell you how often a word was used, if you still need that information.LoopAt the end for your loop, you can check the len of count, also, you mistyped helloString as words:
You can use collections.CounterI know the question doesn't specifically ask for this, but to maintain order
In your current code you can either increment uniqueWordCount in the else case where you already set count[word], or just lookup the number of keys in the dictionary: len(count).If you only want to know the number of unique elements, then get the elements in the set: len(set(helloString))
I may be misreading the question but I believe the goal is to find all elements which only occur one time in the list.This will give us 6 items because "world" occurs twice in our list:
I would do this using a set.


Answer URL
https://docs.python.org/3/library/stdtypes.html#set
https://docs.python.org/3/library/functions.html#len
https://docs.python.org/3/library/functions.html#func-set
