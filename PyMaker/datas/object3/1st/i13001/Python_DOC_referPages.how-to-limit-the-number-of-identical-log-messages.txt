Natural Text
I use the logging module to warn about issues with some routines. These routines may be run several times before getting back to normal operations (e.g. repeated queries to an API which fail, but eventually go through). Each failed call triggers a log entry.Is there a way to limit the number of identical log messages?I would like this limit to fire off after n identical messages being output, then possibly inform that n more were generated (so not to clutter the log file) and reset once a recovery log is received.  This is the ideal scenario - I am looking at how to approach the problem to start with.The closest I found was the conditional release of logs but I do not see how this could be adapted to my case. Another possibility would be to put the limit at the syslog level (in rsyslog or syslog-ng) but this is a "per process" setting so I could lose useful logs (the ones which would come in between the loop-generated ones)
Use a logging.Filter!The DuplicateFilter takes two regex patterns or a string (to be compiled into one), one that should match against the string you want to filter out, and one you want to reset the filter at. This is the resulting log:Just pre-pending the "5 more generated" message probably isn't what you want, but hopefully this is a good starting point.


Answer URL
https://docs.python.org/3/library/logging.html
https://docs.python.org/3/howto/logging-cookbook.html#buffering-logging-messages-and-outputting-them-conditionally
