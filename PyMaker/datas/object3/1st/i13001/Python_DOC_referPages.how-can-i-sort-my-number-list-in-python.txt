Natural Text
This question already has an answer here:Python analog of PHP's natsort function (sort a list using a “natural order” algorithm) [duplicate]                    3 answers                I used "sorted()" but get this resultBut what I want isBesides getting what I want, I want why sorted() could not work.
Because 'c:1', 'c:10', 'c:11' are string, and 'c:1', 'c:10', 'c:11' are all start with c:1. So you get something like 'c:1', 'c:10', 'c:11', 'c:12', 'c:13', 'c:14'. As my code, use key argument of sorted() or list.sort(), and use slice to get the number, then use int() function covert the number into int.
use sorted with lambda such that sort on the number in string.sorted(list, key=lambda x:int(x.split(':')[-1]))
You need lambda function as key for sorting to split each element and convert second part to integer:Also you should rename list variable, because it is reserved name in python. 


Answer URL
https://docs.python.org/3/library/functions.html#sorted
https://docs.python.org/3/library/stdtypes.html#list.sort
