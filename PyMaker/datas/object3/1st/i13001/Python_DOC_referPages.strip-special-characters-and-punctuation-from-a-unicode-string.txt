Natural Text
I'm trying to remove the punctuation from a unicode string, which may contain non-ascii letters. I tried using the regex module:However, I've noticed that the characters < and > don't get removed. Does anyone know why and is there any other way to strip punctuation from unicode strings?EDIT: Another approach I've tried out is doing:but I would like to avoid converting the text from unicode to string and backwards.
< and > are classified as Math Symbols (Sm), not Punctuation (P). You can match either:The unicode.translate() method exists too and takes a dictionary mapping integer numbers (codepoints) to either other integer codepoints, a unicode character, or None; None removes that codepoint. Map string.punctuation to codepoints with ord():That only removes only the limited number of ASCII punctuation characters.Demo:If string.punctuation is not enough, then you can generate a complete str.translate() mapping for all P and Sm codepoints by iterating from 0 to sys.maxunicode, then test those values against unicodedata.category():(For Python 3, replace unicode with str, and print ... with print(...)).
Try string modulePrints-
\p{P} matches punctuation characters.Those punctuation characters are < and > are not punctuation characters. So they won't be removed.Try this instead


Answer URL
https://docs.python.org/3/library/unicodedata.html#unicodedata.category
