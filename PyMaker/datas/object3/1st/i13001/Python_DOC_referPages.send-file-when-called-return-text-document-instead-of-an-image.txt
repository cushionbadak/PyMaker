Natural Text
I want to send an image file from server side to client side. I am using flask framework.But the problem is whenever I call the route in which send_file() is, the response return is an File. When I click this file gedit opens it with nothing in that file. That means it must be text file written.I referred the flask docs for send_file().Here is what I am doing in the code:Whenever I load localhost:5000/try a file is downloaded but not the image file that I want to download.Error I am getting in my terminal is AttributeError: 'Response' object has no attribute 'read' error.What must be the problem. Is anything missing in this above snippet?
resp is a requests.models.Response object, not string nor bytes:Flask.send_file() sends a file.So first at all you need use resp.content to get the content of the object, it'll return bytes object (and by the way, resp.text return string object.Always use .content if you're downloading an image, video, or other non-text things).Please check the document for more details.Then, because Flask.send_file() send a file, so you need write the image into a file before you send it.But since you don't need use this image on your server anyway, I'd suggest use io.BytesIO in this case, then you don't need delete that image after you sent it. And note that use io.StringIO if you're sending a text file.For example:However, if you want write the image into a file and send it then, sure you can also do it. We can use tempfile.NamedTemporaryFile() to create a tempfile instead of just create a file to avoid rewrite your important files. From the document:This function operates exactly as TemporaryFile() does, except that the file is guaranteed to have a visible name in the file system (on Unix, the directory entry is not unlinked). That name can be retrieved from the name attribute of the file object. Whether the name can be used to open the file a second time, while the named temporary file is still open, varies across platforms (it can be so used on Unix; it cannot on Windows NT or later). If delete is true (the default), the file is deleted as soon as it is closed.The returned object is always a file-like object whose file attribute is the underlying true file object. This file-like object can be used in a with statement, just like a normal file. For example:


Answer URL
https://docs.python.org/3/library/io.html#io.BytesIO
https://docs.python.org/3/library/io.html#io.StringIO
https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile
