Natural Text
This question already has an answer here:UnicodeDecodeError when reading CSV file in Pandas with Python                    9 answers                what i am trying is  reading a csv to make a dataframe---making changes in a column---again updating/reflecting changed value into same csv(to_csv)- again trying to read that csv to make another dataframe...there i am getting an error my code is So please suggest how can i avoid the error and be able to read that csv again to a dataframe.I know somewhere i am missing "encode = some codec type" or "decode = some type" while reading and writing to csv.But i don't know what exactly should be changed.so need help.
Known encodingIf you know the encoding of the file you want to read in, you can use These are the possible encodings:https://docs.python.org/3/library/codecs.html#standard-encodingsUnknown encodingIf you do not know the encoding, you can try to use chardet, however this is not guaranteed to work. It is more a guess work.
One simple solution is you can open the csv file in an editor like Sublime Text and save it with 'utf-8' encoding. Then we can easily read the file through pandas.
Is that error happening on your first read of the data, or on the second read after you write it out and read it back in again? My guess is that it's actually happening on the first read of the data, because your CSV has an encoding that isn't UTF-8.Try opening that CSV file in Notepad++, or Excel, or LibreOffice. Does your data source have the รง (C with cedilla) character in it? If it does, then that 0xE7 byte you're seeing is probably the รง encoded in either Latin-1 or Windows-1252 (called "cp1252" in Python).Looking at the documentation for the Pandas read_csv() function, I see it has an encoding parameter, which should be the name of the encoding you expect that CSV file to be in. So try adding encoding="cp1252" to your read_csv() call, as follows:Note that I added the character r in front of the filename, so that it will be considered a "raw string" and backslashes won't be treated specially. That way you don't get a surprise when you change the filename from ss.csv to new-ss.csv, where the string D:\new-ss.csv would be read as D, :, newline character, e, w, etc.Anyway, try that encoding parameter on your first read_csv() call and see if it works. (It's only a guess, since I don't know your actual data. If the data file isn't private and isn't too large, try posting the data file so we can see its contents -- that would let us do better than just guessing.)
Yes you'll get this error. I have work around with this problem, by opening csv file in notepad++ and changing the encoding throught Encoding menu -> convert to UTF-8. Then saving the file. Then again running python program over it.Other solution is using codecs module in python for encoding-decoding of files. I haven't used that.
Above method used by importing and then detecting file type worksimport chardet
I am new to python. Ran into this exact issue when I manually changed the extension on my excel file to .csv and tried to read it with read_csv. However, if I opened the excel file and saved as csv file instead it seemed to work. 


Answer URL
https://docs.python.org/3/library/codecs.html#standard-encodings
