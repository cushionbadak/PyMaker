Natural Text
Hi I want to merge two dictionaries' values if the keys are the same. Idea outputOutput for the Keys that cannot be foundI triedThere is nothing in DOC and all the dictionary elements are in NO_MATCH, no error message. don't know where goes wrong, also I think there must be better ways to do this.Thank you!
Edited: You can declare two separate dictionaries and iterate through all the keys of both dictionaries. For every iteration, check if the key exists in DIC_02 and DIC_01 and concatenate the two corresponding lists  
It's not particularly fancy but this should solve what you're looking forwhere a and b are dicts. The | takes the union of the two key sets.
As for why your code goes wrong.Not there! Everything you define inside a loop, will be redefined everytime the loop goes around.This goes to the else block even if there's a matched key. For instance, in your case, it compares A in DIC_01 with A in DIC_02, "ok, A matched". BUT, then it proceeds to compare A in DIC_01 with D in DIC_02, "ok, A not found in DIC_02, not matched, add to NOT_MATCH" which is wrong, because A IS a matched key and A IS in DIC_02.Not sure how you didn't get an error, seems very erroneous.This lines add the entire DIC_01 to NO_MATCH, wrong!FIX:BETTER WAYSome list comprehensions would keep things clean.EXPLAINATION:This, in English, create a new dictionary called match.For every key in DIC_01, if the key is also in DIC_02, create the same key in match and assign both the values of that key from DIC_01 and DIC_02.This ... For every key in DIC_01, if it's not in DIC_02, create a key and assign the associated value from DIC_01This ... For every key in DIC_02, if it's not in DIC_01, create a key and assign the associated value from DIC_02This ... is a cool way of merging 2 dictionaries (Only for Python 3.5 and up)
This looks like a great use for ChainMapThe key precedence will be on the order of the dictionaries, so if you can't control order or if the ['Zero'] are mixed and matched: this way can't help.


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
