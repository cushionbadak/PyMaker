Natural Text
I know there are plenty of topics about finding indices of given keywords in strings, but my case is a bit differentI have 2 inputs, one is a string and another is a mapping list (or whatever you wanna call it)each word will always map onto a digit in the mapping list. Now I want to find all indices of a given number, say 1, when matching the string.In the above case, it will return [0, 2, 17] (Thakns @rahlf23)My current approach would be zipping each word with a digit by doingwhich gives meand then iterate through the list, find "1", use the word to generate a regex, and then search for indices and append it to a list or something. Rinse and repeat.However this seems really inefficient especially if the s gets really longI'm wondering if there's a better way to deal with it.
You could map the words to their len and use itertools.accumulate, although you have to add 1 to each length (for the spaces) and add an initial 0 for the start of the first word.The last element is not used. Then, zip and iterate the pairs and collect them in a dictionary.Alternatively, you could also use a regular expression like \b\w (word-boundary followed by word-character) to find each position a word starts, then proceed as above.



Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
https://docs.python.org/3/library/re.html
