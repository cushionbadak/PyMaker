Natural Text
I have a data set with categorical and numerical features on which I want to apply some transformations followed by XGBClassifier. Link to data set: https://www.kaggle.com/blastchar/telco-customer-churnAs the transformations are different for the numerical and categorical features, I used sklearn_pandas and its DataFrameMapper.To perform one-hot encoding on the categorical features, I want to use DictVectorizer. But to use DictVectorizer, I first need to convert the dataframe into a dict, which I try to do with a custom transformer Dictifier.When I run the Pipeline I get the error 'builtin_function_or_method' object is not iterable. Does anyone know what might be causing this error? Error trace
This seems like a bug in sklearn_pandas.cross_val_score. sklearn_pandas wraps the dataframe you supply in a DataWrapper object as seen in source code here:which is apparently done to handle older versions of sklearn.cross_validation.cross_val_score which did not handle pandas DataFrames well. DataWrapper returns a list instance when divided into train and test.But then it is not handled correctly during transform() of DataframeMapper as given in source code hereHere, X is not a DataFrame, but a list object, so index is not a list the actual index of pandas as intended, but actually a function of list and hence the error you got.But since newer sklearn cross_val_score handles DataFrame correctly, you dont have to use the other import. Change it from:to this:So now you wont get that error anymore.But, still further down the code, you will get another error about:This is because you wrap both your DataFrameMapper objects into a FeatureUnion by doing this:and then do this:Your Dictifier expects a DataFrame to be passed to it, so that it can call to_dict() on it, but the previous step in pipeline FeatureUnion will not preserve the DataFrame, it will convert that into a numpy array.Generally, DataFrameMapper and FeatureUnion don't work well together. I would advise you to remove the FeatureUnion altogether and instead combine your both DataFrameMapper objects into a single object. This will effectively work as you wanted FeatureUnion to work.Something like this:
Let show just part of the code as I doAnd Pipeline


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
