Natural Text
I have an ordered dict:  and list of potential_matches: [red, blue, one] I want to order these potential matches into one of two lists:correct = [] or incorrect = [] If the potential match is a keyword of one of the keys in the dict, then it goes in correct, else it goes in incorrect.  Result of this example should be:correct = [blue], incorrect = [red, one] Here is what I tried:  Essentially, all remaining words that are not a match should simply go to the other list.   Though it works, doesn't seem efficient. It must be a list to preserve order, and lists may overlap.   Note: I asked a similar question previously although in that case the situation and answer called for the use of a python set, as items were unique.  
Output:
You first need to get values from your OrderedDict, then you can use simple list comprehension to get the values. To get the values you can use operator.itemgetter along with itertools.chain. This will give you a flat list of values.


Answer URL
https://docs.python.org/3/library/operator.html#operator.itemgetter
https://docs.python.org/3/library/itertools.html#itertools.chain
