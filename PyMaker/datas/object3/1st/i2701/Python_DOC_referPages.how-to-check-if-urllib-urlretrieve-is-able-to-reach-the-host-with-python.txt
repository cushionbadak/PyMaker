Natural Text
I'm trying to collect images from imgnet linkes and save them in folder.Using urllib.urlretrieve , and till know it's working great.The main problem is when the function is trying to reach host that the DNS can't resolve.My link is: http://www.fuminnaosu.com/image/person/kitamura.jpgWhen every DNS can't resolve it (May be deleted), but still it's on the list.Try&Except can't be using in my project for now, there is any way to pass and continue collect without using Try&Except ?My Error is:My Code:Full error report:
I don't see why you wouldn't use try-except for this, as any check in advancewill be a repeat of the same procedure. I.e.to check whether the host is reachable you have to reach to it,and urllib.urlretrieve() does, when it cannot reach it it raises an exception.And this is exactly how a function to check availability of an URLis supposed to look.Now, you can do a half-check, i.e. open a TCP socket to the port 80 or 443 and see whether the connection is successful and close the socket if it is.But this method will not detect if the file itself exists or not.So, what you are asking is:You can see how this is stupid, contacting the server twice for nothing instead of just putting the urlretrieve() into the try block.So, what you should do is to use urllib2.urlopen() in a try block, and if it succeeds read the data and save it or do whatever you need with it.And if it doesn't succeed you ignore the URL in question, and that's all.I strongly recommend you to write your own retrieve function as specified above and avoid using the urllib.urlretrieve().
It's failing because the address lookup fails.  Why you can't use a try except block makes zero sense.  To get passed this issue you can use gevent async greenlets (threads):This will allow individual jobs to fail, but continue on with the rest of them until all of the jobs have been tried.  You will need to fix the code to keep proper track of the number of images... I would just count the files at the end to be honest.  


Answer URL
https://docs.python.org/3/glossary.html#term-eafp
