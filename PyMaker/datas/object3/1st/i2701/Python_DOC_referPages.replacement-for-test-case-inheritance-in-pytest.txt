Natural Text
BackgroundIn Python's unittest framework, it is a fairly common idiom to use inheritance on a base set of tests to apply an entire set of tests to a new problem, and occasionally to add additional tests. A trivial example would be:Which, when run, runs 3 tests:This is particularly useful if you are testing a class hierarchy, where each subclass is a subtype of the parent classes, and should thus be able to pass the parent class's test suite in addition to its own.ProblemI would like to switch over to using pytest, but I have a lot of tests that are structured this way. From what I can tell, pytest intends to replace most of the functionality of TestCase classes with fixtures, but is there a pytest idiom that allows test inheritance, and if so what is it?I am aware that pytest can be used to run unittest-style tests, but the support is limited, and I would like to use some of the "will never be supported" features of pytest in my tests.
Pytest allows you to group test cases in classes, so it naturally has support for test case inheritance.When rewriting your unittest tests to pytest tests, remember to follow pytest's naming guidelines:class names must begin with Testfunction/method names must begin with test_Failing to comply with this naming scheme will prevent your tests from being collected and executed.Your tests rewritten for pytest would look like this:


Answer URL
https://docs.python.org/3/library/unittest.html
