Natural Text
I have the following list: a = [[1,2,3],[4,5,6],[7,8,9]] which contains 3 lists, each being a list of nodes of a graph.I am also given a tuple of nodes z = ([1,2], [4,9]). Now, I will like to check if either of the lists in z has been included in a list in a. For example, [1,2] is in [1,2,3], in a, but [4,9] is not in [4,5,6], although there is an overlapping node. Remark: To clarify, I am also checking for sub-list of a list, or whether every item in a list is in another list. For example, I consider [1,3] to be "in" [1,2,3].How can I do this? I tried implementing something similar found at Python 3 How to check if a value is already in a list in a list, but I have reached a mental deadlock.. Some insight on this issue will be great!
You can use any and all:Output:
You can use sets to compare if the nodes appear in a, <= operator for sets is equivalent to issubset().itertools module provides some useful functions, itertools.product() is equivalent to nested for loops.E.g.:

itertools.product is your friend (no installation builtin python module):Output:
Since you're only looking to test the sub-lists as if they were subsets, you can convert the sub-lists to sets and then use set.issubset() for the test:This outputs:


Answer URL
https://docs.python.org/3/library/functions.html#map
