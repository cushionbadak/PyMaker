Natural Text
OS: linux Python version: 3.6I'm trying to extend a C application with Python runtime. The C application uses pthread and I tried to use multiprocessing forkserver in Python runtime but faced a problem. When I try to kill the program with SIGINT signal (by hitting Ctrl+C in the terminal) the worker processes get killed but the main program hangs.Here is a toy program that produces the same problem.I don't exactly know how Linux signal works. I tried to catch SIGINT signal in the main python process with signal module, but it seems that main it doesn't get to receive the signal. How would I be able to make this application die gracefully on SIGINT without hanging forever?By reading ViKiG answer, I realized that I can first catch the KeyboardInterrupt(or SIGINT) exception in the worker processes and send some sentinel value to the main process to notify the exception and shut down the application.After skimming through the CPython forkserver implementation, I potentially concluded that the author of the library intentionally made the main process ignore the SIGINT. I guess, currently, that the recommended way is to catch the exception in the worker processes, not in the main one.
I changed job function to handle CTRL+C interrupts:My test program is exiting cleanly after above change.AFTER EDIT:I added this to my C programModified main as:
Py_Initialize() will install python's own singal handler, call Py_InitializeEx(0) instead:void Py_InitializeEx(int initsigs)This function works like  Py_Initialize() if initsigs is 1. If initsigs is 0, it skips  initialization registration of signal handlers, which might be useful  when Python is embedded.see more on its doc, and cpython source.
It turned out that I don't have to catch the exception in the main process. I solved the problem by catching the KeyboardInterrupt(or SIGINT) exception in the worker processes and send some sentinel value to the main process to notify the exception and shut down the application.


Answer URL
https://docs.python.org/3/c-api/init.html#c.Py_InitializeEx
