Natural Text
As I improve my code each time, for big structural changes in flow and other features I save up and add a new number...so when I use the code it looks like this:as I save up to custom4, I change it tovery simple update. My problem is that I have many scripts where i'm using import custom# as c so when I update the version number, I have to go back and change the number everywhere. Is there a way to centrally control this? Basically dynamically importing a library using another script? I guess I can use something like modules = map(__import__, moduleNames) and keep a spreadsheet of latest version? And write a script to access that file first every time?Has anybody implemented anything else more elegant?
The way to do this that the pros use is not to create different modules for different versions, but to use a version control system to manage and track changes to the same module.A good version control system will do the following:allow you to keep and view a history of changes to your moduleallow you to mark your versions with a meaningful annotation e.g."develop", "release"allow you to recover from mistakes and revert back to another earlierversion without having to rewrite codeallow you to share your work with other developers.There are many version control systems available, some are proprietary licensed, but others available free. Git is probably the most popular open source system at the moment, and can scale from a lone developer to a large team. Plus there is already a whole ecosystem of code sharing available with  Github.As you learn programming, take the time to learn and use version control. You won't regret it.
You can use importlib.But yeah, as suggested in the comments, use some file versioning system like git. The learning curve is a bit steep, but it would make your life a lot easier.


Answer URL
https://docs.python.org/3/library/importlib.html
