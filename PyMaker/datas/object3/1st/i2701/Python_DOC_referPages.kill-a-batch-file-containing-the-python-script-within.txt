Natural Text
I have a problem. I need to kill the batch file using the python script residing within the same batch file. The batch file has abc.py script as the first one along with other scripts. So I need to kill the batch file so that others don't get executed. Here is what I have tried:But this only kills the python script, not the batch file. Tried killing the pid  with the same effect.Edit 1The script checks for existence of another running script and then needs to terminate itself.
If you're just looking to kill whoever your parent is, that's easy: just use os.getppid() instead of os.getpid():Of course it's better to use subprocess instead of os.system for all the usual reasons, like getting a useful error if it fails:Or, even better, don't use taskkill, just kill it directly. This also gives you the option of using a nicer Ctrl-C or Ctrl-Break kill instead of a hard kill, if preferred:If you're using Python 2.7, getppid doesn't work on Windows; that was only added in 3.2. (And I think the same is true for os.kill, and definitely for signal.CTRL_BREAK_EVENT.) Since you're already apparently amenable to using psutil, you can use that.There's no need to search through every process on the system to find yourself, just construct a default Process. And you can go from any process to its parent with parent. And then you can use the kill or terminateAll of the above, except using CTRL_C_EVENT or CTRL_BREAK_EVENT instead of a standard signal), have the nice advantage of being cross-platformâ€”you can run the same script on Linux or macOS or whatever and it'll kill the shell script that ran it.
Your batch file will need to check whether the last command succeeded and exit if it didn't.See How do I make a batch file terminate upon encountering an error?


Answer URL
https://docs.python.org/3/library/os.html#os.getppid
https://docs.python.org/3/library/os.html#os.kill
https://docs.python.org/3/library/signal.html#signal.CTRL_C_EVENT
