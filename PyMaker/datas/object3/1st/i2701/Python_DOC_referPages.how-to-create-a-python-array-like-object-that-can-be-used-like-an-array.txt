Natural Text
How to create a type whose instances can be indexed with [], just like a list.I can use this object like my_obj[***]
I think you're asking how to create a sequence typeâ€”a type whose instances can be indexed with [], just like a list.The key to doing this is to implement one or more special methods, as described in Emulating container types in the docs.In particular, the special method that gets called for my_obj[1] is __getitem__.For a dead-simple example, let's create something that acts like a list of all of the lowercase English letters:And now:However, this isn't really a complete sequence. For example:If you want to implement a complete sequence, the collections.abc module is useful, because all of the abstract base classes it provides are also mixin classes that fill in most of the implementation for you. For example, if we inherit Sequence, we can just define __getitem__ and __len__, and it'll give us implementations of __contains__, __iter__, __reversed__, index, and count for free:And now, everything that works on list, tuple, and range works on Letters:Also, I cheated a bit, creating a sequence that just delegates to a different sequence (ascii_lowercase) to do all the work. In fact, you can often do that, but sometimes you can't. And when you can't, you usually have to handle negative indexes and slices yourself, which looks a bit uglier:(You often want the slice to return another instance of type(self), not a list, but for Letters that doesn't make any sense, so I just returned a list.)If you want a mutable sequence, like a list as opposed to a tuple, where you can modify values, and maybe add and delete them, there are a few more methods to implement, but nothing hugely different.For a more complete example, see Creating a new sequence is easy.


Answer URL
https://docs.python.org/3/reference/datamodel.html#emulating-container-types
https://docs.python.org/3/reference/datamodel.html#object.__getitem__
https://docs.python.org/3/library/collections.abc.html
