Natural Text
Is there any difference between these two calls:andWhere we assume 42 is replaced by some long computation when cast to a string (7.5 million years, for example) that produces a final answer of 42.Is the former approach lazily evaluated in case logging is set to debug?
Neither are lazy. Both strings are interpolated before sent to logger. Lazy evaluation in terms of python logging is done with separate arguments. The documentation https://docs.python.org/2/library/logging.html suggest the following for lazy evaluation of string interpolation;TL;DRIn this case it’s easier to consider the following. We sent a primitive type (string) but only one argument to the logger. Thus it can’t be lazy.
I'd take a look in the references I posted in the comments for more detailed information on % and .format(). For the lazy evaluation question, the answer is no.A simple test will doIn both .format (obviously) and % approaches,func() is calculated anyway.


Answer URL
https://docs.python.org/3/library/logging.html#logging.Formatter
