Natural Text
I'm trying to migrate my Django project from Python 2.7/Django 1.11 to Python 3.7/Django 2.1.I've found one issue and I want to understand its cause.I have 3 models in my project:And this is my code to sort Device objects by latest test status ('dev_filter', 'field' and 'order' parameters are parsed from GET request):This code worked fine in Python 2.7/Django 1.11 but it doesn't in Python 3.7/Django 2.1Django marks as error sorted(zip(dev_status_list, device_list)) function:I see two solutions to this problem: either useor add __lt__ method to Device model:My question is - what is changed? Does this error happen because of Python upgrade or Django upgrade? What was default sorting method in Python 2.7/Django 1.11 framework for Device objects? Am I correct that it was string representation? And which of my solutions is preferred?
Python 3 introduces new ordering comparison:The ordering comparison operators (<, <=, >=, >) raise a TypeError exception when the operands don’t have a meaningful natural ordering.A simple example which prints True in Python2 and raises a TypeError in Python3
The reason is because Python 3 has simplified the rules for ordering comparisons which changes the behavior of sorting lists when their contents are dictionaries.The ordering comparison operators (<, <=, >=, >) raise a TypeError exception when the operands don’t have a meaningful natural orderingAlso there is another interesting exampleQuoting the example from the mentioned in this linkPython 2.7Python 3.5The problem is that the second elements in both lists have different  keys and Python doesn't know how to compare them. In earlier Python  versions this has been special cased as described here by Ned  Batchelder (the author of Python's coverage tool) but in Python 3  dictionaries have no natural sort order.You can read more about the problem here.


Answer URL
https://docs.python.org/3/whatsnew/3.0.html#ordering-comparisons
