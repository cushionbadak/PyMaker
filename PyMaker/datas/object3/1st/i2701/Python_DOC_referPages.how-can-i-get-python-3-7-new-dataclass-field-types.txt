Natural Text
Python 3.7 introduces new feature called data classes.When using type hints (annotation) in function parameters, you can easily get annotated types using inspect module. How can I get dataclass field types?
on a side note there is also:
Inspecting __annotations__ gives you the raw annotations, but those don't necessarily correspond to a dataclass's field types. Things like ClassVar and InitVar show up in __annotations__, even though they're not fields, and inherited fields don't show up.Instead, call dataclasses.fields on the dataclass, and inspect the field objects:Neither __annotations__ nor fields will resolve string annotations. If you want to resolve string annotations, the best way is probably typing.get_type_hints. get_type_hints will include ClassVars and InitVars, so we use fields to filter those out:
The dataclasses.py is the module which provides decorator and functions for generating regular class methods by using of the field annotations. Which means that after processing class, the user defined fields shall be formed using PEP 526 Syntax of Variable annotations. The module annotations is accessible as __annotations__.According to the Runtime effects of type annotations the annotated types is accessible via __annotations__ attribute or by usage of the typing.get_type_hints, the last one the recommended.Please see some code samples below:


Answer URL
https://docs.python.org/3/library/dataclasses.html#dataclasses.fields
https://docs.python.org/3/library/typing.html#typing.get_type_hints
https://docs.python.org/3/library/dataclasses.html
https://docs.python.org/3/library/typing.html#typing.get_type_hints
