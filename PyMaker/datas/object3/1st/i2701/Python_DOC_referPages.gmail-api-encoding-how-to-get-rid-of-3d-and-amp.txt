Natural Text
I am trying to extract the body of GMAIL emails via GMAIL API, using Python well.I am able to extract the messages using the commands below.  However, there seems to be an issue with the encoding of the email text (Original email has html in it) - for some reason, every time before each quote 3D appears.  Also, within the a href="my_url", I have random equal signs = appearing, and at the end of the link, there is &amp character which is not in the original HTML of the email.Any idea how to fix this? Code I use to extract the email:"raw": Returns the full email message data with body content in the raw field as a base64url encoded string; the payload field is not used."td style=3D"padding:20px; color:#45555f; font-family:Tahoma,He=lvetica; font-size:12px; line-height:18px; " JPk79hd =JFQZEhc6%2BpAiQKF8M85SFbILbNd6IG8%2FEAWwe3VTr2jPzba4BHf%2FEnjMxq66fr228I7OS =
Sadly I wasn't able to figure out the proper way to decode the message.I ended up using the following workaround, which:1) splits the message into a list, with each separate line as a list item2) Figures out the list location of one of the strings, and location of ending string.3) Generates a new list out of #2, then regenerates the same list, cutting out the last character (equals sign)4) Generates a string out of the new list5) searches for the URL I wantThe above uses 
You should check the Content-Transfer-Encoding header to see if it specifies quoted-printable because that looks like quoted-printable encoded text.Per RFC 1521, Section 5.1:The Quoted-Printable encoding is intended to represent data that largely consists of octets that correspond to printable characters in the US-ASCII character set.  It encodes the data in such a way that the resulting octets are unlikely to be modified by mail transport. If the data being encoded are mostly US-ASCII text, the encoded form of the data remains largely recognizable by humans.  A body which is entirely US-ASCII may also be encoded in Quoted-Printable to ensure the integrity of the data should the message pass through a character-translating, and/or line-wrapping gateway.Python's quopri module can be used to decode emails with this encoding.


Answer URL
https://docs.python.org/3/library/quopri.html
