Natural Text
Here's my code: OutputBasically, I want to create a dict for each item in the list.Is there any way to do this using map or lambda, in a more concise way?
The correct approach is not map or lambda based, but a simple dict comprehension:You could do it with map and a lambda like so:but that's both slower and more verbose that a direct dict comprehension.If your associated value was immutable, then the dict.fromkeys alternate constructor would be a good solution, but it reuses the default value each time, so if you used it with a default value of {}, it would make all the keys reference the same dict, and modifying it through one key would change all the others:Lastly, a good option in many such scenarios is to use collections.defaultdict to provide defaults when you access a (previously) non-existent key. That way, you can just do:and accessing any key (from ins or not) via bracket syntax will assign it a value of dict() (equivalent to {}) on first access.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
https://docs.python.org/3/library/stdtypes.html#dict.fromkeys
https://docs.python.org/3/library/collections.html#collections.defaultdict
