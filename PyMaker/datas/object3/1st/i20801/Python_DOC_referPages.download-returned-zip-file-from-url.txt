Natural Text
If I have a URL that, when submitted in a web browser, pops up a dialog box to save a zip file, how would I go about catching and downloading this zip file in Python?
Use urllib2.urlopen. The return value is a file-like object that you can read(), pass to zipfile and so on.
As far as I can tell, the proper way to do this is:of course you'd want to check that the GET was successful with r.ok.For python 3+, sub the StringIO module with the io module and use BytesIO instead of StringIO: Here are release notes that mention this change. 
Here's what I got to work in Python 3:
With the help of this blog post, I've got it working with just requests. The point of the weird stream thing is so we don't need to call content on large requests, which would require it to all be processed at once, clogging the memory. The stream avoids this by iterating through the data one chunk at a time.
Either use urllib2.urlopen, or you could try using the excellent Requests module and avoid urllib2 headaches:
Thanks to @yoavram for the above solution, my url path linked to a zipped folder, and encounter an error of BADZipfile  (file is not a zip file), and it was strange if I tried several times it  retrieve the url and unzipped it all of sudden so I amend the solution a little  bit. using the is_zipfile method as per here 


Answer URL
https://docs.python.org/3/library/io.html
https://docs.python.org/3/library/zipfile.html#zipfile.is_zipfile
