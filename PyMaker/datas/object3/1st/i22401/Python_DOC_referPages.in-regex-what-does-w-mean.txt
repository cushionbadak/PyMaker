Natural Text
In Python.  r^[\w*]$whats that mean?
Quick answer: Match a string consisting of a single character, where that character is alphanumeric (letters, numbers) an underscore (_) or an asterisk (*).Details:The "\w" means "any word character" which usually means alphanumeric (letters, numbers, regardless of case) plus underscore (_)The "^" "anchors" to the beginning of a string, and the "$" "anchors" To the end of a string, which means that, in this case, the match must start at the beginning of a string and end at the end of the string.The [] means a character class, which means "match any character contained in the character class".It is also worth mentioning that normal quoting and escaping rules for strings make it very difficult to enter regular expressions (all the backslashes would need to be escaped with additional backslashes), so in Python there is a special notation which has its own special quoting rules that allow for all of the backslashes to be interpreted properly, and that is what the "r" at the beginning is for.Note: Normally an asterisk (*) means "0 or more of the previous thing" but in the example above, it does not have that meaning, since the asterisk is inside of the character class, so it loses its "special-ness".For more information on regular expressions in Python, the two official references are the re module, the Regular Expression HOWTO.
As exhuma said, \w is any word-class character (alphanumeric as Jonathan clarifies).However because it is in square brackets it will match:a single alphanumeric character ORan asterisk (*)So the whole regular expression matches:the beginning of aline (^)followed by either asingle alphanumeric character or anasteriskfollowed by the end of aline ($)so the following would match:or
From the beginning of this line, "Any number of word characters (letter, number, underscore)" until the end of the line.I am unsure as to why it's in square brackets, as circle brackets (e.g. "(" and ")") are correct if you want the matched text returned.
\w refers to 0 or more alphanumeric characters and the underscore. the * in your case is also inside the character class, so [\w*] would match all of [a-zA-Z0-9_*] (the * is interpreted literally)See http://www.regular-expressions.info/reference.htmlTo quote:\d, \w and \s ---  Shorthand character classes matching digits, word characters, and whitespace. Can be used inside and outside character classes.Edit corrected in response to comment
As said above \w means any word. so you could use this in the context of belowwhich means you can have any word as the value of the "url=" parameter
\w is equivalent to [a-zA-Z0-9_] I don't understand the * after it or the [] around it, because \w already is a class and * in class definitions makes no sense. 


Answer URL
https://docs.python.org/3/library/re.html#module-re
