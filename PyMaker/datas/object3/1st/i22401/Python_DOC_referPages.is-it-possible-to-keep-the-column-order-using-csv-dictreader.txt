Natural Text
For example, my csv has columns as below:I need to write the columns back in the same order. The dict jumbles the order immediately, so I believe it's more of a problem with the reader.
Python's dicts do NOT maintain order prior to 3.6 (but, regardless, in that version the csv.DictReader class was modified to return OrderedDicts).However, the instance of csv.DictReader that you're using (after you've read the first row!-) does have a .fieldnames list of strings, which IS in order.So,will show you that the order is indeed maintained (in .fieldnames of course, NEVER in the dict -- that's intrinsically impossible in Python!-).So, suppose you want to read a.csv and write b.csv with the same column order.  Using plain reader and writer is too easy, so you want to use the Dict varieties instead;-). Well, one way is...:assuming you have headers in a.csv (otherewise you can't use a DictReader on it) and want just the same headers in b.csv.

Make an OrderedDict from each row dict sorted by DictReader.fieldnames.
I know this question is old...but if you use DictReader, you can pass it an ordered list with the fieldnames to the fieldnames param
Unfortunatley the default DictReader does not allow for overriding the dict class, a custom DictReader would do the trick thoughuse it like so


Answer URL
https://docs.python.org/3/howto/sorting.html
https://docs.python.org/3/library/csv.html#csv.DictReader
