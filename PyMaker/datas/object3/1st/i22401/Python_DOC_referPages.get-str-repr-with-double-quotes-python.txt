Natural Text
I'm using a small Python script to generate some binary data that will be used in a C header.This data should be declared as a char[], and it will be nice if it could be encoded as a string (with the pertinent escape sequences when they are not in the range of ASCII printable chars) to keep the header more compact than with a decimal or hexadecimal array encoding.The problem is that when I print the repr of a Python string, it is delimited by single quotes, and C doesn't like that. The naive solution is to do:but that doesn't work when one of the bytes in the data happens to be a double quote, so I'd need them to be escaped too.I think a simple replace('"', '\\"') could do the job, but maybe there's a better, more pythonic solution out there.Extra point:It would be convenient too to split the data in lines of approximately 80 characters, but again the simple approach of splitting the source string in chunks of size 80 won't work, as each non printable character takes 2 or 3 characters in the escape sequence. Splitting the list in chunks of 80 after getting the repr won't help either, as it could divide escape sequence.Any suggestions?
repr() isn't what you want.  There's a fundamental problem: repr() can use any representation of the string that can be evaluated as Python to produce the string.  That means, in theory, that it might decide to use any number of other constructs which wouldn't be valid in C, such as """long strings""".This code is probably the right direction.  I've used a default of wrapping at 140, which is a sensible value for 2009, but if you really want to wrap your code to 80 columns, just change it.If unicode=True, it outputs a L"wide" string, which can store Unicode escapes meaningfully.  Alternatively, you might want to convert Unicode characters to UTF-8 and output them escaped, depending on the program you're using them in.
If you're asking a python str for its repr, I don't think the type of quote is really configurable.  From the PyString_Repr function in the python 2.6.4 source tree:So, I guess use double quotes if there is a single quote in the string, but don't even then if there is a double quote in the string.I would try something like writing my own class to contain the string data instead of using the built in string to do it.  One option would be deriving a class from str and writing your own repr:Or, don't use repr at all:This simplistic quoting might not do the "right" thing if there's already an escaped quote in the string.
Better not hack the repr() but use the right encoding from the beginning. You can get the repr's encoding directly with the encoding string_escapeFor escaping the "-quotes I think using a simple replace after escape-encoding the string is a completely unambiguous process:
You could try json.dumps:I don't know for sure whether json strings are compatible with C but at least they have a pretty large common subset and are guaranteed to be compatible with javascript;).


Answer URL
https://docs.python.org/3/library/codecs.html?highlight=unicode_escape#text-encodings
