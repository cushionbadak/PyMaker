Natural Text
I'm trying to learn python. Here is the relevant part of the exercise: For each word, check to see if the word is already in a list. If the  word is not in the list, add it to the list.Here is what I've got. Here is what I get. ['Arise', 'But', 'It', 'Juliet', 'Who', 'already', 'and', 'and', 'and', 'breaks', 'east', 'envious', 'fair', 'grief', 'is', 'is', 'is', 'kill', 'light', 'moon', 'pale', 'sick', 'soft', 'sun', 'sun', 'the', 'the', 'the', 'through', 'what', 'window', 'with', 'yonder']Note duplication (and, is, sun, etc). How do I get only unique values?
To eliminate duplicates from a list, you can maintain an auxiliary list and check against.output:This is very simple to comprehend and code is self explanatory. However, code simplicity comes on the expense of code efficiency as linear scans over a growing list makes a linear algorithm degrade to quadratic. Use set()!, a set is an unordered collection with no duplicate elements. Basic uses include membership testing and eliminating duplicate entries.output:
Instead of is not operator, you should use not in operator to check whether the item is in the list:BTW, using set is a lot efficient (See Time complexity):UPDATE The set does not preserve the original order. To preserve the order, use the set as an auxiliary data structure:
Here's a "one-liner" which uses this implementation of removing duplicates while preserving order:The last line flattens fhand into a list of words, and then calls unique() on the resulting list.
One method is to see if it's in the list prior to adding, which is what Tony's answer does. If you want to delete duplicate values after the list has been created, you can use set() to convert the existing list into a set of unique values, and then use list() to convert it into a list again. All in just one line:If you want to sort alphabetically, just add a sorted() to the above. Here's the result:['Arise', 'But', 'It', 'Juliet', 'Who', 'already', 'and', 'breaks', 'east', 'envious', 'fair', 'grief', 'is', 'kill', 'light', 'moon', 'pale', 'sick', 'soft', 'sun', 'the', 'through', 'what', 'window', 'with', 'yonder']


Answer URL
https://docs.python.org/3/library/stdtypes.html#set
