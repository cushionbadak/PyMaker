Natural Text
This question already has an answer here:How do lexical closures work?                    9 answers                I want to create a list that contains the monomials up to degree nThis however creates a list of n functions, but all the same one (of degree n) and not of degree 0,1,2,...nI tried without list comprehension as well:but with the same result. Substituting the lambda function by a classic function definition also did not fix it.I checked Python lambdas and scoping, but that did not help, since I don't want to store function values, but the function itself. For example, I want to be able to calland this should return
As i said in the comments, take a look at partial
This entry sums it up perfectlyhttp://docs.python-guide.org/en/latest/writing/gotchas/#late-binding-closures :... you can create a closure that binds immediately to its arguments by using a default arg like so:You code would become:This is a bit of a hacky solution, but works. I still highly recommend to read the link provided as the 3 points that are made there are usual errors when you are new to Python.


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
https://docs.python.org/3/library/functools.html#functools.partial
