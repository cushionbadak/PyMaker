Natural Text
I have subclassed asyncio.Protocol to create a TCP client that connects to some server.I would like to separate the lower-level interface from the application, and create a layered architecture, but I'm unsure how to proceed.I followed the example of the TCP Echo Client present on the official documentation and the way I start the client is also very similar:However, in my protocol I created two methods (service access points, technically) that provide services to the "N+1" layer:The send method would be used by the N+1 layer to send a message to the server (request), while the setDataReceivedCallback would be used to register a callback that is called when data_received is called (so that the protocol can issue an indication to the N+1 layer that some data has arrived).However, I am not sure how I can get hold of those entry points.To be more clear:create_connection needs a callable that returns a Protocol instance: so I won't be able to get hold of the instance at that pointsloop seems not to expose any of the coroutines that it runs - furthermore, once I execute run_forever I lose the ability of getting hold of the loop itselfWhat am I missing here?
Lo and behold, the answer lies in the documentation.From the section on Creating Connections:Note protocol_factory can be any kind of callable, not necessarily a  class. For example, if you want to use a pre-created protocol  instance, you can pass lambda: my_protocol.This, translated into code means the following:


Answer URL
https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-client-protocol
https://docs.python.org/3/library/asyncio-eventloop.html#creating-connections
