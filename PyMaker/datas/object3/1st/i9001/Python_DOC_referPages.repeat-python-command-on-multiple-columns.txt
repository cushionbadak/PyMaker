Natural Text
Question: How do I apply the same python code to multiple columns of data.Data Format:I am just learning python and I have written a script to reformat my data. My current format starts with 4 descriptive columns followed by many columns of data (e.g., 1/1)I am trying to change the 0 and 1 to the values in the REF and ALT columns, respectively with the desired end format to look like:What I have so far:I have written a script that will do this for an single column, but I have 100+ columns of data so I was wondering if there is a way to apply this script to multiple columns instead of writing it out specifically for each one.
I would suggest implementing this using a list comprehension:Three additions to your code:Which is a clean way to grab two elements from the list.Which is a list comprehension to do the replace across all of the fields at once. And then which reassembles everything at once.
Here is my solution:You call it like this:[value.replace("0", REF).replace("1", ALT).replace(".", "0") for value in columns[4:]]is called a "List comprehension". It looks at every value of a list and does something with it. See Documentation.columns[4:] means, look at all my columns and get me the columns starting at index 4 until the last column.sep="\t" in the print statement means, that all the elements you pass to the print function should be printed with a TAB in between them."\t".join(columns[0:4] + ALLELS) returns a single string in which all elements are joined by a TAB. See Stephen Rauch.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
