Natural Text
I am using multiprocessing to create a child process, then the child process will do some time consuming long time work which may never end.What I want to do is when the child process finishes one step, it will trigger an event of the parent process or just call some functions. Here is part of my script:Thanks in advance.
You cannot call a method in another process directly, but you have two possibilities:a) parent waits until child sendsYou'll need to set up a queue to communicate from the child to the parent (or a pipe if you need to communicate both ways) and then make the parent block (run get()) until the child sends data (runs put()).Since you already have set up a queue result in your code you either want to take this or hand in another queue to the __init__ constructor of WorkerProcess. In the parent process do something like this:You'll need to define how the child communicates that he sent the last element (aka the "sentinel"), I chose None in the example code above.Once the parent gets the sentinel, it runs terminate() on the child to end it.b) parent polls for changesIf the parent needs to do stuff alongside waiting for the result, you'll need to periodically check if there's stuff in your queue:


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Pipe
