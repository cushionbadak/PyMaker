Natural Text
I am trying to understand why using the sorted function on a zip object in python 3 can't be done more than once.  It just returns an empty list the second time.yx is still there as far as I can see.
In CPython 3, zip is a class, which means it is a callable, which means it is a function in the wide, mathematical sense of the term.  It is documented in the Built-in Functions chapter of the Library Manual.When called, CPython's zip returns a zip object, which is an iterator as the document entry says ("returns an iterator").  It has an __iter__ method that returns self and a __next__ method with the appropriate behavior.  Since a zip object is an iterator, it is exhausted after the first complete iteration performed by sorted.In the doc entry, the roughly equivalent Python code is for a generator function, which when called returns a generator.  (Since CPython built-in functions are coded in C, and generator functions can only be coded in Python, CPython implements it as a class.) This is why people somewhat mistakenly say that zip returns a generator.  However, since the generator produced by the equivalent code is only usable as an iterator, the effect would be the same, and "returns an iterator" would still be true.  If any implementation (other than CPython) uses the Python code (PyPy?), then for that implementation, zip would be a generator.EDIT: Add link to doc entry, and the following:Since X and Y in the question are reiterable, zip(X, Y) can be repeated to get a new, fresh iterable with the same sequence of pairs.  sorted(zip(X,Y)) will work multiple times.
zip is a generator in Python 3. Once you've iterated it once, it's exhausted.
I'm unable to replicate this in the shell using 2.7.13Are you using a Jupyter notebook? Perhaps it's something to do with that, and not Python itself?


Answer URL
https://docs.python.org/3/library/functions.html#zip
