Natural Text
My code is data_kp is reading the tables namethe tables' names are like this (string, ex: a000010)I collect table names from here.Then, execute and get the result.The actual output of my code is .. My expectation is (not 3 columns.. there are 2000 tables)I thought my code is near the answer... but it's not working.. My work is almost done, but I couldn't finish this part. I had googled for almost 10 hours.. I don't know how.. please help I think something is wrong with these part
The csvwriter.writerow method allows you to write a row in your output csv file. This means that once you have called the writerow method, the line is wrote and you can't come back to it. When you write the code:You are saying: "For each result, write a line containing data_kp[i] then write a  line containing row."This way, everything will be wrote verticaly with alternation between data_kp[i] and row. What is surprising is that it is not what we get in your actual output. I think that you've changed something. Something like that:But this has not entirely solved your issue, obviously: The names of the tables are not correctly displayed (one character on each column) and they are not side-by-side. So you have 2 problems here:1. Get the table name in one cell and not splittedFirst, let's take a look at the documentation about the csvwriter:A row must be an iterable of strings or numbers for Writer objects But your data_kp[i] is a String, not an "iterable of String". This can't work! But you don't get any error either, why? This is because a String, in python, may be itself considered as an iterable of String. Try by yourself:And now, you have probably understood what to do in order to make the things work:You have now your table name displayed in only 1 cell! But we still have an other problem...2. Get the table names displayed side by sideHere, it is a problem in the logic of your code. You are browsing your table names, writing lines containing them and expect them to be written side-by-side and get columns of dates! Your code need a little bit of rethinking because csvwriter is not made for writing columns but lines. We'll then use the zip_longest function of the itertools module. One can ask why don't I use the zip built-in function of Python: this is because the columns are not said to be of equal size and the zip function will stop once it reached the end of the shortest list!Note:The code provided here has not been tested and may contain bugs. Nevertheless, you should be able (by using the documentation I provided) to fix it in order to make it works! Good luck :)


Answer URL
https://docs.python.org/3/library/csv.html#csv.csvwriter.writerow
https://docs.python.org/3/library/csv.html#writer-objects
https://docs.python.org/3/library/itertools.html
