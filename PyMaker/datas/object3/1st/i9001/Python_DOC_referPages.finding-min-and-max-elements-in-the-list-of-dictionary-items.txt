Natural Text
I have a list of elements stored in a dictionary formatfor e.g.I have around 150 elements in the input_list and I need to create two output lists ( output_list_max and output_list_min ) which should have elements as the dictionary with the items (i.e. item1, item2..etc) as key and the max/min values ( w.r.t. to entries in input_list) for each item as values.For.e.gI can do this by iterating through the list and dictionaries but I want to know the most efficient and pythonic way to do so as the list and the dictionary can be up to 1000.I hope I was able to clear my intentions :)Any help will be appreciated thanks!
You could use a Counter and use the & (element-wise minimum) and | (element-wise maximum) on them by using functools.reduce:In the repl:Note that the result is a dictionary and not a list containing a single dictionary, but it is rather useless to put the result in a list.This works because we first use map to convert the list of dictionaries to a list of Counters. This is done by using map(Counter,input_list).Next reduce(..) is used (in some functional languages, this is called fold). If you feed reduce(..) a list of elements [x1,x2,...,xn] with function f, it returns f(...f(f(x1,x2),x3)...,xn). In this case we thus calculate (for the first element x1|x2|x3|...|xn). Since | is the elementwise maximum, we thus have an accumulator (a counter that holds the maximums thus far) and for each new dictionary, we calculate the new maximums. This result is returned by reduce. 
You could use zip() with sorted() to pair up your dictionary items:


Answer URL
https://docs.python.org/3/library/collections.html?highlight=counter#collections.Counter
https://docs.python.org/3/library/functools.html?highlight=functools.reduce#functools.reduce
