Natural Text
How is it possible to determine from the multiprocessing module in python if the current process is the parent or the child, from within imported modules?Specifically, I have some lines of code in modules that i am importing, that only want running once - when the code is first run (i.e. not run ever time that a sub-process starts, and imports that module). In the main module, i was able to achieve this using if __name__ == '__main__': , however this does not work in imported modules. In case of relevant, current code includes:
This will print out True if current process is the parent process.
Correct me if I am wrong. Based on my understanding, you want to know which process(main process or sub-processes) is running. You can achieve this using logging , in the format specify %(processName)s %(threadName)sOutput:
in linux every process except process 0 (swapper) has one parent and possibly many childs (https://en.wikipedia.org/wiki/Parent_process) so your main thread also has a parent this is why you, if you start your program,  have to store the PID assigned to it from the os because it is the parent (or grandparent,...) of all your child processes.to get the parent process when you are in one o the childs you can use os.getppid(), to get the PID of the current process use os.getpid() https://docs.python.org/3/library/multiprocessing.htmlhttps://docs.python.org/2/library/os.htmlhttp://www.programcreek.com/python/example/4464/os.getppidhttp://nullege.com/codes/search/os.getppid


Answer URL
https://docs.python.org/3/library/multiprocessing.html
