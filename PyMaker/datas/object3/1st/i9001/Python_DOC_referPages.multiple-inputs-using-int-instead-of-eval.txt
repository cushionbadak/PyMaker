Natural Text
Small question: Why doesn't this piece of code work when I use int but does when I use eval?int can only take one input? Is there a way to make it take multiple inputs as concise as using eval? Int is a stronger condition so that's why I am curious about how it would work.This gives ValueError: invalid literal for int() with base 10, but the following code does work.
int takes one input and possibly a base:But you can use int along with map: 
Use list comprehension:
Python is trying to parse the whole string as one integer rather than three.What you could do is:This way you are splitting the list into three strings, and then converting (mapping) each string to an int.
int can only take one input?Yes, and that is technically true for eval, too. It's just that eval might return something other than an int. In your case, I'm assuming you enter something like 1, 2, 3 on the input prompt. eval simply parses that as a tuple, which it returns, and unpacks into your three variables.You can, however, easily achieve something similar to what you want using list comprehension:This has the added benefit that you don't risk having some completely unexpected type returned from eval.One caveat with using eval that should perhaps be worth noting is that it accepts any valid Python syntax and executes the parsed result, which may include arbitrary function calls, including code to erase your hard drive. Not much of a problem when you're just writing a program for yourself to use, but just so that you know.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
