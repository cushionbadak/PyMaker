Natural Text
This question already has an answer here:How to find most common elements of a list?                    9 answers                I have a list such as this:I would like to find all the elements which occur most frequently.So I would like:1, 3, and 5 would occur the most, which is 4 times. What's a fast, pythonic way to do this? I tried methods shown here:How to find most common elements of a list?. But it only gives me the top 3, I need all elements. Thank you.
With collections.Counter and a list comprehension:    You can generalize for values with highest count by using max on the counter values:For large iterables, to efficiently iterate through the counter and stop once the required items have been taken, you can use itertools.takewhile with most_common without any parameters:You gain by not having to iterate through all the items in the counter object, although there is some overhead with having to sort the items using most_common; so I'm sure if this absolutely efficient after all. You could do some experiments with timeit.
You can also get the same result with groupby from itertools module and list comprehension in this way:Output:
You can do the following if you like to print all the most frequent,Please note, if you want to limit, you can enter the number inside most_common() function. Ex: ...most_common(3)]. Hope this answers your question.  


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.takewhile
