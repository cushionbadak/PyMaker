Natural Text
I have two lists:Other than using sort and then list in list, how can I compare the original_list values are in new_list?
You want to sort each list in new_list, not new_list itself. Try this for instance using map:or if you only care for the existence of the same elements regardless of their count:
supposing your original list is already sorted (if not, just apply sort), you have to compare each element - sorted - using a loop or any:prints True if a sub-list of new_list has the same elements as original_listThat avoids to rebuild the original list using new_list = [sorted(x) for x in new_list] to get sorted items, since order may be important after all.
Besides sorted which has O(n*log(n)) runtime behaviour (worst case I think) you can use collections.Counter (almost guaranteed O(n) runtime behaviour):That uses the fact that Counter compare both keys and values and therefore are only equal if the dictionaries (inside the Counter) are identicalIf you can exclude duplicates then instead of Counter you can also use sets.


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/collections.html#collections.Counter
