Natural Text
I am trying to write a test for a class like this:In my test, I have mocked Foo class and call assert_called_once_with() to make sure self._foo is set up properly. However, I cannot figure out how to get the return value of self.something.cool().Sure, I can set the return value to an instance variable under self and use that in my test, but that seems like an ugly solution. Is there a way I can use patch() to do this?
The recommended way to test your logic is to assert the expected result at the end. Given that we don't know your logic, you can expect any value to be returned. When running unit tests you can actually call your function and get a return value. A common example:Hope this clears up your question as my intention is to explain a mocked returned value and an asserted return value. The code is not tested nor should work, it's just an example


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.mock_calls
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.call_args
