Natural Text
A SpooledTemporaryFile from the tempfile module in Python is a temporary file created in the system memory rather than on the disc. However, it can be rolled over to the disc at any point by calling the appropriately named rollover method. Once the file is closed, it will be deleted, and that is precisely what I am trying to prevent.The NamedTemporaryFile has a delete keyword argument in its constructor that does the job, but the same isn't available for SpooledTemporaryFile. One way to solve this is by making a copy of this file before it is closed. This requires additional copy operations, and precautions must be taken to avoid race conditions. It also requires more resources. Are there any workarounds?
Even though io.StringIO is available at my disposal, I decided to take a look at the source code - tempfile.py. This is how the chain of events progresses in that module:A SpooledTemporaryFile is initiated as an io.StringIO or io.BytesIO object.When it is rolled over to the disc, a TemporaryFile file object is created, and the IO stream object is abandoned for garbage collection.This new file is different for several platforms. On Windows or CygWin systems this new file is a NamedTemporaryFile, the close method of which is accessed through a wrapper class called _TemporaryFileCloser. We can override some methods and jump through some hoops * to eventually set delete=False in order to achieve our goal. On posix systems, the new file is just another volatile IO stream (sigh...)* The workaround is to subclass it and override the rollover method. The code below works on both posix and Windows systems. On Windows, you may skip the rollover part - only the __init__ is necessary.CAUTION! This is evidently a dirty hack, therefore I do not recommend this for production code or anything of the sort.


Answer URL
https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile
https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile
https://docs.python.org/3/library/io.html#io.StringIO
