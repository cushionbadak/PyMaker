Natural Text
The question is about sport programming.I'm getting a huge string from stdin and I have to create a byte array with one byte for each char with True value if the char equals to '.' and with False value otherwise. At the same time I should calculate amount of cases when we have two '.' symbols near each other.Question 1: can be some additional calculation performed inside a generator expression to be accessible after the generator was used - sum, count, more complex calculation to avoid additional looping over the created list?Question 2: can I access the previous loop result inside a generator expression? I try to perform the second solution below in one generator expression.Because of this is for competition no external libraries can be used.1st solution2nd solutionUPD: 3rd solution with itertools.tee() - unfortunately this solution faster than 1st but slower than 2nd
Question 1: can be some additional calculation performed inside a generator expression to be accessible after the generator was used - sum, count, more complex calculation to avoid additional looping over the created list?No generators are one shut iterables and you can not use them after one iteration. Question 2: can I access the previous loop result inside a generator expression? I try to perform the second solution below in one generator expression.So if you want to access the previous item in a generator expression you can simply use zip on your iterable :But if you want to access to previous item of a generator you can use itertools.tee to create 2 independent iterators from your generator and use zip function to create a new generator (in python 2 use itertools.izip)contain pairs with prev and next items.And in iteration do :


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.tee
