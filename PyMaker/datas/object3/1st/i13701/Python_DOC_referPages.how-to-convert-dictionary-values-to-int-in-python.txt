Natural Text
I have a program that returns a set of domains with ranks like so:I'm trying to sort them by ascending rank with sorted:However, since the values of "rank" are strings, then it sorts them alphanumerically instead of by ascending value:I need to convert the values of only the "rank" key to integers so that they'll sort correctly. Any ideas?
You are almost there. You need to convert the picked values to integers after replacing ,, like thisFor example,Note: I just used pprint function to pretty print the result.Here, x will be the current object for which the key value being determined. We get the value of rank attribute from it, replace , with empty string and then converted that to a number with int.If you don't want to replace , and handle it properly, then you can use locale module's atoi function, like this
I just want to point out that the data structure could potentially be improved here. You have a list of mini-dictionaries but it seems like you could have a single dictionary since "rank" and "url" are implicit. Use each unique url as a key and each rank for that url as a value or count, which would take better advantage of the dictionary's capabilities IMHO. If you are getting the current data structure as an output from somewhere else, you can easily compress it into a more efficient counter dictionary with the conversion to integer ranks as values using the dict() function:If you are going to have a lot of data this will be more compact and it is more intuitive to work with. You can use this easily for things like nice print outs based on ranks:
Guess you should use ast.literal.eval and then compare to be precise and accurate.Output:[{'url': 'google.com', 'rank': '1'}, {'url': 'facebook.com', 'rank': '2'}, {'url': 'example.com', 'rank': '11,279'}, {'url': 'google.com', 'rank': '11,280'}, {'url': 'google.com', 'rank': '12'}]


Answer URL
https://docs.python.org/3/library/locale.html#locale.atoi
