Natural Text
I have a text file that contains Python function like this:a.txtAnd then I read this file in a Python script:b.pyNow I want to assign the a.txt file's function to a variable without worrying about the function name and execute it. I tried something like this:But it didn't work, I tried execfile as well.
After you've executed the string, you can call func directly, as it has been added to your current namespace:Per its documentation exec doesn't actually return anything, so there's no point assigning e.g. foo = exec(...).To see what names are locally defined in the code being executed, pass an empty dictionary to exec as the locals parameter:You can then assign the function and call it as you normally would:
Before offering my solution, I highly warn against do this unless you know for sure there is no malicious code in a.txt.My solution uses the execfile function to load the text file and return the first object (could be a variable or function):UpdateTo be a little more careful, modify the return line like the following so that it skips variables (it cannot skip class declaration, however).Update 2Thank you johnsharpe for pointing out that there is no execfile in Python 3. Here is a modified solution which use exec instead. This time, the function should be found in the "local" scope.


Answer URL
https://docs.python.org/3/library/functions.html#exec
https://docs.python.org/3/library/functions.html#exec
https://docs.python.org/3/whatsnew/3.0.html#builtins
