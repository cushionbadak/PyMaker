Natural Text
I am wondering how I can make a simple socket server in Python 2.7 which can handle and add/accept multiple clients at a time. I do not want to use Twisted nor threading, nor any libraries; just Python, and sockets. I have looked around SoF (stackoverflow- is that a thing?) and found people asking the same question but not getting a clear answer. If you are wondering why I need to do this, It's because I want to create a simple data forwarder which forwards client data to another server. I think a very simple example showing me Server.py, Client1.py, and Client2.py is just what I need. Again, just a very simple example with no threading, no twisted, no libraries. I hope you can help me, I'm fairly new to Python and I feel like this project will help get me on my feet, and I learn great from examples. 
Consider using asyncio (available for python 3.3 and later). Asyncio is the new python standard for single-threaded concurrent programming:This module provides infrastructure for writing single-threaded concurrent code using coroutines, multiplexing I/O access over sockets and other resources, running network clients and servers, and other related primitives.The documentation provides a few examples:TCP echo clientTCP echo serverIf you're not ready to migrate to python 3, you can use trollius, the portage of asyncio for python 2. There is a few differences between the two modules, as listed in the documentation: replace asyncio with trollius (or use import trollius as asyncio)replace yield from ... with yield From(...)replace yield from [] with yield From(None)in coroutines, replace return res with raise Return(res)Other solutions for single-threaded concurrent programming on python 2.7:gevent: a coroutine-based Python networking library that uses greenlet.asyncore: built-in asynchronous socket library (echo server example).


Answer URL
https://docs.python.org/3/library/asyncio.html
https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-client-protocol
https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-server-protocol
