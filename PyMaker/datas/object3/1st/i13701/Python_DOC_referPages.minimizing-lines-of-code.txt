Natural Text
I have a few lines of code for making a rotated string for a Caesar cipher and just for fun I am trying to condense them into one. Obviously this is pointless since it is completely unreadable but I'm curious. Still, I can't quite figure out how to do it. Here's what I have tried so farHere is the readable version which actually worksrot is the amount to rotate the alphabet or the key for a keyed version of a Caesar cipher. You should be able to just run the code as is and see exactly what's wrongI know this is bad code but I find this kind of code interesting since the language supports linking so many if/else/for/lambda/whatever together into a single line. 
You can rewrite the else case using reduce (it’s functools.reduce in Python 3):And then you can combine it to one line:But you’re absolutely right: It makes no sense to write it like this. It’s really unreadable.Since you’re using Python 2, you can actually use str.translate here too, to remove the characters in rot from s. This uses the deletechars parameter of that function:Your one-line expression is then a little bit shorter:
Given this simple test caseThe following one-liner seems to do the trick
This is just a quick golfing of your code (178 bytes):
The simplest one-liner you can have: s = rotify(s, rot)All you need is a function rotify(), which you've already provided yourself in the question (I made few modifications from s = to return):There's no need to force one-liners. You gain nothing, you lose readability.


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
