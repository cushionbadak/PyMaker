Natural Text
I was wondering how I could I have a usage like this:Usage: httpclient get [-v] [-h key: value] URLBasically, right now, I named my file httpclient.py so that I can call it by httpclient, and the rest is as follow:so right now if I do something as follow on the command line:however as you can see the url is place just after -v, where as in the task it is asked to be placed at the end, and exactly one url. So everytime I write:I get an error:So how can I put the URL at the end of my cmd line arguments
It's not clear why you're using nargs='?' for a -verbosity flag - you shouldn't expect any value to get passed for that, let alone multiple values. Also it's odd to combine both nargs='?' and action='append'; do you want the user to do e.g. -h one two (nargs='?') or -h one -h two (action='append') for the resulting parsed_args.h == ['one', 'two']? Alternatively, if what you want for -h is to allow the user to set it multiple times, each time with a separate key and value, then what you want is:It's pretty straightforward to take two optional arguments followed by a positional argument, and configure the display:Gets you:To add the separate get and post subcommands, look into using add_subparsers; this will be much more effective than just allowing the user to give random input and comparing == 'get' etc.However, it's not clear what you actually want the user interface to be, so it's hard to say precisely how you should implement it.
With:test runs:Putting the 2nd positional argument right after the first works:A nargs='?' Action is satisfied by an empty list.  So arg2 is parsed right after arg1, leaving nothing to handle the google.creates the same namespace.Be careful with multiple variable nargs arguments.  They don't always work together well.The -v will be a lot more useful if give it const and default values.   e.g. with defaults for the postionals as well:Here get is assigned to -v:For a verbosity 'switch', a store_true action might be better.  count action also is used if you want to use -vvv to signal extra verbose'.I didn't notice -h 'append', but I agree with the other answer.  That's an odd combination.  What is -h without any following argument supposed to mean?  In this test, the bare -h puts a None (default) in the h list.


Answer URL
https://docs.python.org/3/library/argparse.html#sub-commands
