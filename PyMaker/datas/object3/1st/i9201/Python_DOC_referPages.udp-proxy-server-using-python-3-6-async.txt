Natural Text
I'm curious to see how I can create a UDP proxy server using the async module. I tried earlier today with Twisted, but wasn't making much headway. I did find some simple solutions here on stackoverflow using sockets directly, but i'm wondering if this is possible using the async lib.For clarity, what I'm looking for is:Step 1: client A (can be many) speaks to proxy BStep 2: proxy B sends the request along to server C.Step 3: Server C responds to proxy BSep 4: Proxy B responds to client A.Here's what I have so far:The above is basically this:https://docs.python.org/3/library/asyncio-protocol.html#udp-echo-server-protocolWhat I have will get you to step 3, but of course fails at step 4. It sends it back to server C.You will note that one of the other protocol examples, EchoServerClientProtocol, creates a new instance for each connection. I assume I need to create a new instance for every connection, I believe, because then I can store the original address in the instance, and return that. I assume this doesn't apply to create_datagram_endpoint, or I can't figure out how to do it.There might be a better approach though.
You need a local endpoint for server B, plus a remote endpoint to server C for each client A. Here is a possible implementation.Also, you might be interested in this module providing high-level UDP endpoints for asyncio.


Answer URL
https://docs.python.org/3/library/asyncio-protocol.html#udp-echo-server-protocol
