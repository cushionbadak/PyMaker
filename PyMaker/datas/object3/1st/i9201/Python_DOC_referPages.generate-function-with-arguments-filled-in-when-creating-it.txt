Natural Text
My goal is to generate functions dynamically and then save them in a file. For e.g, in my current attempt, On calling create_fileThe output I want is (file /tmp/code.py):The output I get is (file '/tmp/code.py'):UPDATE: My solution uses inspect.getsource which returns a string. I wonder if I have limited your options as most solutions below suggest a string replacement. The solution need not use inspect.getsource. You could write it anyhow to get the desired output.UPDATE 2: The reason I am doing this is because I want to generate a file for Amazon Lambda. Amazon Lambda takes a python file and its virtual environment and will execute it for you(relieving you from worrying about scalability and fault tolerance). You have to tell Lambda which file and which function to call and Lambda will execute it for you. 
Use getsource to convert the function to a string, and replace the variable names with simple string manipulation.Output is as expected in /tmp/code.py:
A function definition doesn't look up its free variables (variables that are not defined in the function itself) at time of definition. I.e. concrete_func here:doesn't look up a_value when it is defined, instead it will contain code to load a_value from its closure (simplified the enclosing function) at runtime.You can see this by disassembling the returned function:You can maybe do what you want by editing the byte code.. it's been done before (http://bytecodehacks.sourceforge.net/bch-docs/bch/module-bytecodehacks.macro.html ..shudder).
Try this. Note that I have added another parameter to write_to_file
If the file doesn't have to be human readable and you trust it won't be manipulated by attackers, combining functools.partial and pickle might be the most pythonic approach. However it comes with disadvantages I don't completely understand: for one thing it doesn't seem to work with locally defined functions (or maybe locally defined variables in general?).I might just ask my own question about this.
@Ben made me realize that I didn't need to use a string based approach for code generation and that I could use serialization. Instead of the limited pickle library, I used dill which overcomes the limitation as mentioned by BenSo, I finally did something like.
if the function you want to create all have a determinate pattern, I would create a template for it and use it to mass produce the functions


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
