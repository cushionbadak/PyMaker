Natural Text
I have .csv file, I want to csv convert to dict. Below my code:My .csv file:But my dictionary results is random:I want my dictionary result is not random:
If you want to preserver order within a dict you can use OrderedDict:this is guaranteed to always have this output:Other than the order, an OrderedDict has the same properties as a normal Dict so you can e.g. loop over it with for key in test[0]
As of Python 3.6, dictionaries will preserve their insertion order: https://mail.python.org/pipermail/python-dev/2016-September/146327.htmlA nice "side effect" of compact dict is that the dictionary now  preserves the insertion order.It is a "side effect", however, and not in the official spec so its probably not guaranteed to always work that way in future versions.
By definition, dictionaries in Python are not ordered, so you cannot maintain (or rely on) any specific ordering of the elements you grab from the CSV file.Why is python ordering my dictionary like so?
There is no way to do what you want. By definition, dictionaries in Python are unordered. As the documentation says,It is best to think of a dictionary as an unordered set of key: value pairs, with the requirement that the keys are unique (within one dictionary). Whether the entry is accomplished by reading a file or typing in on the keyboard, Python does not care what order you enter the key-value pairs into the dictionary, as long as each key is unique. The key-value pairs will be stored in arbitrary order. Why is this? It's because dictionaries are stored in a hash table. The unique key is hashed and the key-value pair is stored at the resultant location. A good enough hash algorithm should be designed for the hash value to be unpredictable. So the desire to keep the dictionary sorted by key all the time is antithetical to the way a dictionary is built. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
