Natural Text
This is what I have achieved without a loop, which is ugly. I'm sure this can be done with a loop without having the repetitive statements:This works fine, but I don't know how many strings with numbers there will be after "start".I want a loop that will continue looking for numbers in the list of strings, until the next index doesn't have a number.I tried this:This doesn't work for some reason, it seems to loop for ever. I have also tried:This doesn't work for me either, it loops for ever.Representation of what I'm trying to achieve:would produceLet's say we have the above list, when we reach 'start', I want to check whether the next has a number, in our case 23, if yes, then check the next for number (contains 32 so true again), keep doing this until the next doesn't have a number.How can I achieve this with a loop?
The Pythonic version of a while True: count++ loop is an iterator, combined with next() function to advance to the next element. When the iterator is exhausted, a StopIteration exception is raised.Create an iterator for your list (with the iter() function, then use nested loops to advance the iterator as you match:So this skips elements until 'start' is found, then collects entries that have digits, then switches back to finding 'start', etc. until StopIteration is raised by the next() call.Demo:You could replace all the results.append() calls with yield to make this a generator.Note that I'm assuming there won't be any overlapping sequences; e.g. 'start' will never appear in a word with digits in a contiguous digits section.
will return 
Here, a simple program to find prime numbers in python which should cover your for loop in  if condition :


Answer URL
https://docs.python.org/3/glossary.html#term-iterator
https://docs.python.org/3/library/functions.html#next
https://docs.python.org/3/library/exceptions.html#StopIteration
https://docs.python.org/3/library/functions.html#iter
