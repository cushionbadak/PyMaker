Natural Text
I'm running pyspark on an Amazon EMR cluster. I have a very simple test script to see if I can write data to s3 using spark-submit ...When I run this script using spark-submit in a python2.7 environment, it works just fine. But when I try to run the same script in a python3.4 environment, I get the following traceback ...I'm manipulating my python environment using conda and by setting the PYSPARK_PYTHON and PYSPARK_DRIVER_PYTHON variables.Is there an issue using saveAsTextFile in python 3? Or am I missing a step in setting up my python 3 environment?Thanks!
It is possible that your EMR cluster is configured to use pyspark 2.7, while you are running python 3.4 which might cause a problem when using with pyspark 2.7The following link describe how to configure Amazon EMR to use spark with python 3.4I know Python 3.4.3 is installed on an Amazon EMR cluster instances,  but the default Python version used by Spark and other programs is  Python 2.7.10. How do I change the default Python version to Python 3  and run a pyspark job?https://aws.amazon.com/premiumsupport/knowledge-center/emr-pyspark-python-3x/There is the different implementation of the range() function in Python2 vs Python3.In Python2 range() returns a list of numbers.In Python2 range() returns a generator. So when you are using Python3, the input you provide is a generator instead of list of numbersMore info about the different between range() in python2 vs python3:Python2https://docs.python.org/2/library/functions.html#range range(start, stop[, step])This is a versatile function to create lists containing arithmetic  progressions. It is most often used in for loops. The arguments must  be plain integers. If the step argument is omitted, it defaults to 1.  If the start argument is omitted, it defaults to 0. The full form  returns a list of plain integers [start, start + step, start + 2 *  step, ...]. If step is positive, the last element is the largest start  + i * step less than stop; if step is negative, the last element is the smallest start + i * step greater than stop. step must not be zero  (or else ValueError is raised).Example:Python 3https://docs.python.org/3/library/functions.html#func-rangerange(start, stop[, step])Rather than being a function, range is actually an immutable sequence  type, as documented in Ranges and Sequence Types â€” list, tuple, range.
Try thisexport PYSPARK_PYTHON=python3
Ok, so it looks like this has nothing to do with python3, and everything to do with my conda environment. In short, I set up a conda environment in my bootstrap.sh, but I only actually activated it on the master node. So the master node was using conda python, but the workers were using system python.My solution now is to set PYSPARK_PYTHON=/home/hadoop/miniconda3/envs/myenv/python.Is there a better way to activate my conda environment on the worker nodes?


Answer URL
https://docs.python.org/3/library/functions.html#func-range
