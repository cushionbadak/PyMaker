Natural Text
I currently have two sets of data files that look like this:File 1:and in file 2:I would like to combine the files based on mathching rows in the first column (so that "tests" match up)like so:I have this CodeHowever the output ends up looking like this:Can anyone help me with how to make the output so that test1 can be printed all three times?Much Appreciated
While I would recommend Brad Solomon's approach as it's pretty succinct, you just need a small change in your code. Since your second file is the one that has the "final say", you just need to create a dictionary for the first file. Then you can write the output file as you read from the second file, fetching values from the data1 dictionary as you go:
You might want to give the Pandas library a try; it makes cases like this easy:This assumes the test column is named "testnum".You'd read these in with pd.read_csv().
The issue is that you are overwriting the keys in the line Since your files have non-unique "keys," you could try manually making them unique using enumerate:Later, when you merge the result, you can strip the keys to remove anything after the underscore:To my taste, this is all very clumsy. If your goal is to read, manipulate, and write data to and from csv files, I would recommend looking into pandas, as this code can be written in a few lines using DataFrames (see the answer by Brad Solomon).
You can try collecting your items into seperate collections.defaultdict(), then get the cartesian product of the intersecting rows with itertools.product():Which gives the following output.txt:Note: It's probably easier to follow Brad Solomon's Pandas approach, since it can be done with one command. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/itertools.html#itertools.product
