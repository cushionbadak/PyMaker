Natural Text
I am trying to convert the JSON in the bbox (bounding box) column into a simple array of values for a DL project in python in a Jupyter notebook.The possible labels are the following categories: [glass, cardboard, trash, metal, paper].I'm looking for help to convert the bbox column from the JSON object for a single CSV that contains all the image names and the related bboxes. UPDATEThe current column is a series so I keep getting a "TypeError: the JSON object must be str, bytes or bytearray, not 'Series'" any time I try to apply JSON operations on the column. So far I have tried to convert the column into JSON object and then pull out the values from the keys.BB_CSV 
You'll want to use a JSON decoder: https://docs.python.org/3/library/json.htmlEdit:If you want map the operation of extracting the values from the dictionary to all element of the list, you can do:Similarly, as per my comment, if you do not want commas between the extracted numbers in the list, you can use:
It looks like each row of your bbox column contains a dictionary inside of a list. I've tried to replicate your problem as follows. Edit: Clarifying that the below solution assumes that what you're referring to as a "JSON object" is represented as a list containing a single dictionary, which is what it appears to be per your example and screenshot.Now, to simple unpack the row you can do:Which will get you a new column with a tuple of 5 items.If you want to go further and apply your labels, you'll likely want to create a dictionary to contain your labeling logic. Per the example you're given in the comments, I've done: This should get your your desired layout if you want a one-line solution without writing your own function.A more readable solution would be to define your own function using the .apply() method. Edit: Since it looks like your JSON object is being stored as a str inside your DataFrame rows, I added json.loads(row) to process the string first before retrieving the keys. You'll need to import json to run.


Answer URL
https://docs.python.org/3/library/json.html
