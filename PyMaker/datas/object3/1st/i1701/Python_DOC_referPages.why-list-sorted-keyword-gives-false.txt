Natural Text
When I check condition of this list a = [1,2,3,4,5] and this list [1,2,3,2,1,5,4] to 'sorted' keyword meanswhy this gives me False and why this gives me true? it's gives false in '==' and true in '!=' regardless list is sorted or not
sorted is a built-in function in Python. Lists and functions are inherently incomparable so it's natural that a == sorted would return false regardless of what's in a. You can check this by using the type function:If you wanted to check the "sortedness" of a, you would do:or, if you prefer something that doesn't run in O(n log n) time:
The sorted() function takes a list and returns it sorted.So you should compare your list to a "sorted version" of that list to see if it was originally sorted.E.g.Note that this is slow for long lists as you are generating a new, sorted version in memory. Instead you could write a procedure to check if each element is greater than the previous. This would be much more efficient.
You misunderstood the meaning of sorted. It's a function that returns a sorted list, not a test of whether a given list is sorted. To achieve that you could use something like a == sorted(a)
Let's have a look at this in a bit of depth:sorted is indeed a keyword but it's not what you think it is:so this expression >>> a == sorted checks if your list a is equal to this builtin_function_or_method, it's not checking whether the list is sorted. You will need to write your own sort check, maybe like below:and then use that function to make your check like so:or use sorted for it's intended purpose:


Answer URL
https://docs.python.org/3/library/functions.html#sorted
