Natural Text
I recently picked up Python and I am alternating between this tutorial and a book called Automate The Boring Stuff With Python. I find the book quite easy to understand and the exercises are fun.There is one in particular that I just solved but honestly, I am not satisfied with my answer.In the question, one is given a grid as follows:Using loops only, one is then required to produce the following output:My solution (which works) to this problem is as follows:My problem is the grid[0]. I have tried to generalize the code to accommodate scenarios in which the lists within grid are of different values, but failed.My question, therefore, is how can I retrieve the len of grid[0] in general variable terms?In other words, how can I retrieve the length of a list within a list?
You don't actually need to retrieve length.You can do it in one line without knowing dimensions:Step by step:zip(*grid) will transpose your 2-d arraymap(lambda x: ''.join(x), zip(*grid)) will join every lineAnd finally '\n'.join joins with separator as new lineNote: we could also omit 3rd step by printing with sep='\n, however in Python3:Why does map return a map object instead of a list in Python 3? and we would need to convert it to list before printing it. Like so:
For example taking the longes of all the content list:BTW, a pythonic way of solving that (without loops) would look like this list(zip(*grid)):
If you look at your desired output, you'll observe that final matrix is transpose of your given list.The transpose of a matrix could be found by using numpy transpose function.You could use a list comprehension in combination with join method in order to achieve what you want.Output
If you really must get the length of a list in a list, just use len(grid[index]):However, it is easier to to iterate over the elements of the list than to get the indexes of the list. For example, instead of the above solution, use
Another way of doing this is to start by transposing the grid, then just loop over the elements of each row


Answer URL
https://docs.python.org/3/tutorial/index.html
