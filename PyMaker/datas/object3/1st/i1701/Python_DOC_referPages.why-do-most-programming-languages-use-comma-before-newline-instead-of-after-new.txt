Natural Text
To explain why I've come up with this question, I'll explain python3's commonly used multiline list/dictionary notations and what actual syntax definition looks like.This is the most commonly used multiline list notation in python3:And, to understand how this notation is recognized by parser, we need to look at grammar definition(link).In the definition of python, list-like definitions are defined similar to this:Let me explain this a little bit more, just in case you're not familiar with syntax definition or I'm a bad summarizer:'' means it is actually a character. For example, '[' and ']' are list's ending or beginning in pure character, which will be [ 'value1', 'value2', ] in actual code.element is their type's expected elements. for example, If it's a list, it will be a single variable. If it's a dictionary, it will be key ':' value.[] means all things inside that are optional.() means all things inside that are in one set. i.e. It all comes together.* means a syntax set preceding that may occur 0 or more times. In this example, (',' element) may be omitted, but it also may occur 3 times.I almost forgot to mention, that these rules are applied after whitespace managing is done.Okay, so let's have a look at list's parsing example:[1]will be parsed into '[' element ']'[1, ]will be '[' element ',' ']'[1, 2]will be '[' element (',' element) ']'[1, 2, ]will be '[' element (',' element) ',' ']'So, as you see, in the example 3 the comma is paired with 2, not 1.Also, in the example the last comma is not paired with 2 - it actually is paired with nothing in terms of syntax definition.Now the actual question is:Is there more reasons to use comma before newline, except for the fact that most languages were using that commonly?I think it is sensible to use comma after newline, for these reasons:It's more similar to actual syntax definition.It ensures that there will be always exact number of commas(number of elems - 1), and that helps when you're dealing with languages that hates additional leading comma, for example SQL.It also is git-friendly, like comma-before notation: If you add a new element to the list, git diff will show + , new_element only.In fact, in comma-before-newline notation if someone forgot to add a comma after old_element(Or because the language doesn't allow additional comma), someone who adds an element after that will see a git log like this:
(1) "Most" programming languages don't have any preference. It's the programmer that decides where to put commas.  For the case you cite, where the language or some runtime library serializes some structure into a text string, it's a matter of preference, i.e., opinion.  See (2).(2) I, as do some others, like my programming languages to look like some familiar notation.  In English prose, I write "fee, foe, fie, fum" rather than "fee ,foe ,fie ,fum" -- the comma attaches to the first of the two elements it's separating, not the second.  Similarly in mathematics.


Answer URL
https://docs.python.org/3/reference/grammar.html
