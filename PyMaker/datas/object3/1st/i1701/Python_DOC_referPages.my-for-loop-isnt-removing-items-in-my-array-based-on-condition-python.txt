Natural Text
This question already has an answer here:How to remove items from a list while iterating?                    23 answers                list comprehension vs. lambda + filter                    14 answers                I have an array (moves) of arrays. I want to iterate through my moves array and set a condition for each element. The condition is, if either number in the element is negative, then I want to remove that element from the moves array. The loop does not remove my items correctly. BUT if I run it through the exact same loop twice, then it WILL remove the last element. This makes no sense to me. Using Python 3.6If you run this code, moves ends with a result of [[4,-1]]But if you run this result through the exact same for loop again, the result is []I also tried doing this with many more elements and it's just not grabbing certain elements for some reason. Is this a bug with .remove()? This is what I tried...(In this I tried detecting nonnegative number to see if that was part of the issue, it wasn't)The result of the above code isAny ideas???
You can iterate through a copy of a list. This can be done by adding [:] in your for loop list moves[:].InputOutput
Dont iterate and modify at the same time.You can use a list comp or filter() to get a list that fits your needs:Output:Doku for filter() and all() can be found at the overview on built in functions


Answer URL
https://docs.python.org/3/library/functions.html
