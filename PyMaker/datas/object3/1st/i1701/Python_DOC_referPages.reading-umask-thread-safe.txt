Natural Text
I know this pattern to read the umask in Python:But this is not thread-safe.A thread which executes between line1 and line2 will have a different umask.Is there a thread-safe way to read the umask in Python?Related: https://bugs.python.org/issue35275
if your system has Umask field in /proc/[pid]/status, you could read from on it:tested under CentOS 7.5, Debian 9.6.or, you could add a thread lock :)
umask is inherited by child processes. You could create a pipe, fork a child process, get the umask there and write the result to the pipe so the parent can read it.Quite expensive, but without any special requirements like /proc virtual filesystem. An example with just low-level OS calls (all async-safe) and no error checking below:
The only truly, unambiguously thread-safe way I know is to call a new process.Note that if you have bash or another shell, you could also call that. Since it might be on a weird system, I've chosen to use a python subprocess in umask_cmd, since you must have python. If you're on a non-weird *nix system, then you can use sh or bash instead.
It is possible to determine umask by creating a temporary file and checking its permissions. This should work on all *nix systems:


Answer URL
https://docs.python.org/3/library/tempfile.html#tempfile.gettempdir
