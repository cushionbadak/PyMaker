Natural Text
I have write my class with many @property inside, and Python Cookbook suggest this is bad code. I decided to rewrite my code to remove those @property, here is example in Python Cookbook shows how to rewrite class without using @property and still have setter, getter.  Here I show my code before rewrite.In brief, my code will format text in MS-Word by using python-docx library, so you can see I need to apply text format(bold, italic...) by code like self._run.bold = value while setting self._bold by self._bold = value . This means I need more than just set the attribute value compare to Python Cookbook example.Here is my code after rewrite. You can see I have to write refresh method to apply those format to MS-Word, I have to use refresh() every time I set some text format.My question:How to rewrite code like my case to Python Cookbook example style?Any discussion will be appreciate.
If you need to both set the _property itself, and the _run._property,Edit:I noticed a bug, and the state of the TextProperty was shared  between the different paragraphs. So the value needs to be set on the  CellParagraph instead of the TextPropertyUsing the setattr(instance, f"_{self.name}", value) and variations  dynamically generates the _bold attribute on the paragraph. So take  care not to use any of these yourselfYou can use the Descriptor pattern used in the cookbook using setattr to change the value on the CellParagraph._runThen I used a dummy Run class, to act as the paragraph._run attributeyou can use this like this in your CellParagraph class (simplified):then create some paragraphs to test this behaviour:If you have a lot of attributes that need to be changed both on the paragraph and on the paragraph._run, then using this pattern can save some boilerplate, but it is less explicit that using the @propertys


Answer URL
https://docs.python.org/3/howto/descriptor.html
