Natural Text
I have a model storing, among other things, a timezone datetime object. I am reaching out with an Ajax call from the website to one of my views, which does the following call: When a JSON response is received at the Front End, it gets parsed with JS and analyzed. What I would like to do here, is to modify the 'uploaded_on' column with user's timezone (which I can already access with user.timezone, currently displayed as a string e.g. 'Germany/Berlin', but can easily convert it to a necessary object with e.g. pytz package).When I try to iterate through the QuerySet like below, the values received on the Front End do not change:This is probably related to the fact that QuerySets are lazy, like described in Django's documentation. Can anyone suggest how this can be done?A bonus question as well: with Django's serializer, can I pass along more than one QuerySet in a single JSON response? When I try to pack a few in a list, I get a MultiValueDictKeyError:
To me there would be two approaches: Annotate the cases queryset with a new column, something like uploaded_at_utz and do timezone manipulation at database level. For example you could use TruncSecond function to do something like the following:The other approach would be to do this at python level. For this I would go for a generator function, something like:Then, in you would pass convert_to_timezone(cases, pytz.timezone(user.timezone)) to your JsonResponse constructor.You should also explore the use of timezone.override and/or timezone.localtime although I'm not familiar with them.
Regarding the date manipulation, datetime.astimezone() returns a new datetime rather than converting in-place. You'd need to assign the converted value back to case.uploaded_on.Regarding whether you can pass along more than one queryset in a single JSON response, you can use itertools.chain to do that.


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.astimezone
