Natural Text
This is my problem:I have a list of lists (adjoining) that is setup of x and y coordinates.I'm trying to create a function that can figure out which way to go, that should return a single element from that list. That return value will be the direction the character moves.(Example: adjoining = [[1, 0], [3, 2], [1, 1]]. Return returns the smallest both x and y coordinate which is [1, 0].)My function should return the value with the lowest x coordinate. If there are multiple x coordinates that have the same low value, the one with the lowest y coordinate should be chosen.How can I create a function that can figure out which x and y value is lowest?
Just use min() like so:
You can do this:Result:Use the key parameter to define the fields which will affect the sorting process. First, you will get the minimum element based on x value and if there are many of them, they will be sorted again based on their y value.An alternative is to use the itemgetter function from operator module:
I used sort with the key attribute. This allows you to define the criteria by which to sort the list.The rest of the code is base on list comprehension.This filters list_of_item based of some chosen criteria. Just need to make sure what follows if can be evaluated True or False.


Answer URL
https://docs.python.org/3/library/functions.html#min
