Natural Text
I am new to Python, and trying to learn it "on the job". And I am required to do this.I am required to communicate with 3 servers with a raw socket connection. I can easily do that in a sequential manner. But I was wondering if there is a way I can communicate with these 3 servers at once? All 3 servers have different IP addresses. Basically try to do the following but in 1 step:which is also need later s.sendall() & s.recv() to be parallelized. 
If you only have one listening thread, you can use select to wait on multiple sockets and get woken when any of them return data:https://docs.python.org/2/library/select.html
It's hard to prescribe a wealth of knowledge without knowing more information about your server protocol, what you are listening for and what you intend to do with it, et-c, but I can imagine, given no other additional information, a scenario where the communication is handled by a multiprocessing.Pool(3) where each member of the pool is mapped to an IP address and where all three send data into the same multiprocessing.Queue () which is being evaluated by a loop thread.Any additional details?Best of luck on your job!
Have a look at the asyncio module.It requires Python 3, but allows to write single-threaded applications with multiple execution contexts - kind of cooperative multihreading, where the context is switched only when the user says so. You really get the best of thread and event-based concurrency.
This answer using threading actually worked out for me. 


Answer URL
https://docs.python.org/3/library/asyncio.html
