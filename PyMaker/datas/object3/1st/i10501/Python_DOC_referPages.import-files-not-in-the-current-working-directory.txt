Natural Text
Let's say the program asks the user for a file name to read and then a file to write the processed data into. Is there a way to get the directory of the needed file so the program can alter the current directory to use it? Or is there another way to access that file?
If the user enters the complete file path with the directory, you can parse it (using sys.path) and then os.chdir() there.
You could make it even easier for the user by using Tkinter to prompt them with a file upload box rather than asking them to type it in. When they select a file it will give you the full file path.Not saying that asking users to type in a full file path will cause issues, but from personal experience not everyone gives you the input that you'd like (not to mention not everyones knows file path syntax), and this example would reduce the error margin.
Welp, this is my first answer on SO, so hopefully I don't misunderstand the question and get off to a bad start. Here goes nothing...Quite frankly, there isn't too much more to be said than what prior comments and answers have provided. While there are "portable" ways to "ask" for a path relative to your current working directory, such a design choice isn't quite as explicit, particularly with respect to what the user might think is happening. If this were all behind-the-scenes file manipulation, that's one thing, but in this case, I, like the others, recommend you ask for the entire path to both the read and write files. For the sake of completeness, you could start with this:Notice that the context manager (with) will automatically close the files for you when you're done. For simple stuff like this, I think the link above, this section on the os module and this section on the IO itself of the python docs do a pretty good job of explaining your options and the toy example. 


Answer URL
https://docs.python.org/3/library/os.html#files-and-directories
https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
