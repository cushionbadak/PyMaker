Natural Text
I have written this,Sp is the Parent class for A. And I'm using A class in B,C and D, But D don't need Sp inheritance instead it needs Sp instance object inside D(Please look into D class). I want to stop Sp inheritance in D, is there any good way to write this ?
You can't inherit from A without inheriting from Sp if A itself inherits from Sp. You could try to work around it though, by making A inherit from two classes, one of which implements the non-Sp behaviors (say, call it Abits), and Sp (class A(Abits, Sp):). Then have B and C inherit A, while D inherits solely from Abits.If A doesn't need to be created independently, you could just make A not inherit from Sp at all, and have B and C inherit from both A and Sp (class B(A, Sp):), while D only inherits from A, which saves the need for a separate Abits.Lastly, you might consider composition. Have D not inherit from anything, just contain an instance of A. Then use the __getattr__ special method to get attributes from A when they're not defined on D:You might also need to use __setattr__ if you need to mutate the A instance. This is trickier (because __setattr__ is called unconditionally, not just when an attribute doesn't exist), but there are plenty of examples of using it available if you search.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
