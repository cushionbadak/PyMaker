Natural Text
Is there a way that I can stop the thread after few seconds (INTERNALLY)The Main program waits until thread returns. I would like to know if there is a way - when I spawn a thread - say t2, it targets a function - call_script2. Lets say that function takes like 5 seconds to run completely. I would like to know if I can return the thread say like after 3 seconds.The ability of the thread to return after 3 seconds should be inside the call_script2 function. I believe having stop_event.wait(3) in the main thread does not work.call_script2 function looks something like this.
I think you can get the behavior you want by using the timeout parameter available on the serial.Serial() constructor. Additionally, you'll need to protect your interactions with the Serial instance with a threading.Lock(), so that your threads don't step on each other as they read/write data:
The Thread.join method has an optional timeout parameter.If you want the target function to handle this logic of timing out, I suggest writing a wrapper to spawn a new thread, make the call, then join with a 3-second timeout.Note that this doesn't actually kill the subthread until the main process dies. Killing a thread without knowing what it's doing inside could cause all sorts of mess.If you can change the code of the original functions, you can have them periodically poll to check if anyone wants them dead.Edit: Looks like I somewhat misunderstood the question. It was more about how to use PySerial to share 1 open Serial object across 3 workers, with a timeout on reads from the serial port.


Answer URL
https://docs.python.org/3/library/threading.html#threading.Thread
