Natural Text
Since Python 3.4, the Enum class exists.I am writing a program, where some constants have a specific order and I wonder which way is the most pythonic to compare them:Now there is a method, which needs to compare a given information of Information with the different enums:The direct comparison does not work with Enums, so there are three approaches and I wonder which one is preferred:Approach 1: Use values:Approach 2: Use IntEnum:Approach 3: Not using Enums at all:Each approach works, Approach 1 is a bit more verbose, while Approach 2 uses the not recommended IntEnum-class, while  and Approach 3 seems to be the way one did this before Enum was added. I tend to use Approach 1, but I am not sure. Thanks for any advise!
I hadn'r encountered Enum before so I scanned the doc (https://docs.python.org/3/library/enum.html) ... and found OrderedEnum (section 8.13.13.2)  Isn't this what you want? From the doc:
You should always implement the rich comparison operaters if you want to use them with an Enum. Using the functools.total_ordering class decorator, you only need to implement an __eq__ method along with a single ordering, e.g. __lt__. Since enum.Enum already implements __eq__ this becomes even easier:Terrible, horrible, ghastly things can happen with IntEnum. It was mostly included for backwards-compatibility sake, enums used to be implemented by subclassing int. From the docs:For the vast majority of code, Enum is strongly recommended, since  IntEnum breaks some semantic promises of an enumeration (by being  comparable to integers, and thus by transitivity to other unrelated  enumerations). It should be used only in special cases where thereâ€™s  no other choice; for example, when integer constants are replaced with  enumerations and backwards compatibility is required with code that  still expects integers.Here's an example of why you don't want to do this:


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html#intenum
https://docs.python.org/3/library/enum.html#orderedenum
