Natural Text
I am pretty new to Python and to help new learn, I am building a program, which I want broken down into 2 steps:Step 1) Count the number of a particular words in a text file, store that in a dictionary where the key, value pairs are {word, count}Step 2) Order the dictionary from (1) in descending order, to show the top 100 wordsStep 1 works fine but in attempting step 2, I am struggling to call the dictionary from the first function. I create a new variable 'tallies' but this is a tuple and shows only the first entry in the dictionary.How do I call the full dictionary to my 2nd function?Thanks.
your tally function is returning the first item it sees; return can only return once, but you're calling it in a loop.  try returning the whole wordcount dict:in python a dict is by nature unordered, so to order it you need to sort its tuples into a list.  the sorted code does this (see this reference).good luck!
These tasks are exactly what collections.Counter() is for. You can use this function in order to create a counter-dictionary object contains words and their frequency, you can call it on splited text. Then use Counter.most_common(N) to get most N common items.And regarding your code in following part:After first iteration you are breaking the loop by return and it only will return the first item.You can simply return the dictionary:You even could use collections.defaultdict() in order to create your counter object manually. The benefit of using this function is that it overrides one method and adds one writable instance variable.And for returning the sorted items you can use sorted() function on dictionary items by passing a key function to it, to say that sort the items by second item. For example:But as I said the the first, the pythonic and optimized approach is using collections. Counter().
Your issue is that you returned k,v after the first iteration meaning you only ever grabbed the first item. The following code fixes this. I also added the reversal function.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
