Natural Text
This question already has an answer here:Accessing elements of Python dictionary by index                    8 answers                Okay, I have an object var with some values:I've created a tiny function to use these values. Inside my function I have a line:When I execute this, it throws an error that my object variable screenDims doesn't have a value for width. Is there some secret for passing in object vars? Is the variable out of scope because its inside the resize function? or value designator? I'm confused. 
To access elements in a dictionary, you have to read them like you write them:There is a difference between attributes and keys in a dictionary. Keys are accessed using the bracket notation (like are elements in an array, so there is the analogy). Attributes are used for methods and values whose existence is usually determined by the type of the object, while the index notation is used for elements in the container. This helps distinguishing methods such as screenDims.clear() which would delete all elements in the dictionary from an element set with More informaiton on dictionaries is found in the official Python Tutorial, section Dictionaries.
There are two ways of accessing a dictionary element:-Using get() method of dictionary -bpy.ops.transform.resize(value=(screenDims.get("width"),  screenDims.get("height"), screenDims.get("depth")), ... )You can read them the same way you wrote to create the dictionary-bpy.ops.transform.resize(value=(screenDims["width"],  screenDims["height"], screenDims["depth"]), ... )The benefit with using get method is that you can provide some default value to be returned in case the key is not present inside the dictionary.e.g.-screenDims.get("height","default_value"). (dot) operator is used for accessing attributes of an object, which can either be value or method.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
