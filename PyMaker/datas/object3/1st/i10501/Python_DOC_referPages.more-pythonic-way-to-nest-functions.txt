Natural Text
Here is the code that I have:Is there a more pythonic way to recursively ask a question if a user closes a box inadvertently? Mainly looking for tips on the last 4 lines, but feel free to critique the rest.
In the main logic: Usually you would not test if a value is equal to None, since it is a singleton (only one in the system, and all occurrences of None are to the same logical None). Thus is None is a better test. I've also used a little more Pythonic code formatting (spaces after commas in a list, lowercase variable names), and a test order that doesn't duplicate the user interaction call.An alternative form suggested by Eric would be something like:This has the virtue of not repeating the street is None test, but is a bit longer. Your preference for which option seems clearer and more logical may vary. For the preparations: Imports are taken out of functions, and choicebox is imported where it was previously missing. The function is givena defining comment string. The one statement per line standard is enforced. And the unnecessary return removed.This is still a fairly coarse program, but it's now "more Pythonic."Not to be overwhelming, but the standard for Pythonic code appearance is PEP 8. There are tools such as pep8 you can install to check compliance. The deeper or "semantic" part of Pythonic code is sketched out in PEP 20, also known as "The Zen of Python." There is, sadly, no tool to judge compliance with those deeper principles. Experience is required.
I think this is more idiomatic than using a sentinel variable:Also, consider using the logging module for your debug printing, so instead of if __debug__: print(whatever) you just have logging.debug(whatever) and set the logging level.


Answer URL
https://docs.python.org/3/library/logging.html
