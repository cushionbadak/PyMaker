Natural Text
Print dict and defaultdict:With nested structure it becomes ugly:Were there any reasons for not making it human-readable by default? (UPD: I mean what are the reasons behind not having custom __str__ defined for defaultdict by default?)
repr() output (defaultdict has no __str__, only __repr__) is  debugging output. It is not meant to be pretty, it is meant to be functional. It tells you the type, the repr() of the callable that produces the default, and the contents.From the __repr__ documentation:This is typically used for debugging, so it is important that the representation is information-rich and unambiguous.Like all datatypes in Python, (except for strings for obvious reasons), no informal (__str__) is defined because it is up to the programmer to decide what output is suitable for their use-cases. No default can be set for that, because use-cases vary so widely. Output for a file has different needs than output to a GUI or to a web-page for example.In Python 2, convert the object to a plain dictionary first, then use pprint() if you want 'pretty' output:In Python 3, pprint supports defaultdict directly:
There's no way to know what, if anything, the author(s) were thinking or even whether they gave it much consideration at all.For the specific case of nested defaultdicts, as shown your example code:You can avoid the issue by subclassing dict like this instead:Since the subclass doesn't define its own __repr__() or __str__() methods, instances of it will print (and pprint) just like regular dict instances do.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__repr__
