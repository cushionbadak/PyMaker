Natural Text
I have written the following code:I get the following Output:Whenever multiple values are returned from a function in python, does it always convert the multiple values to a list of multiple values and then returns it from the function?Is the whole process same as converting the multiple values to a list explicitly and then returning the list, for example in JAVA, as one can return only one object from a function in JAVA?
Since the return statement in getName specifies multiple elements:Python will return a container object that basically contains them. In this case, returning a comma separated set of elements creates a tuple. Multiple values can only be returned inside containers.Let's use a simpler function that returns multiple values:You can look at the byte code generated by using dis.dis, a disassembler for Python bytecode. For comma separated values w/o any brackets, it looks like this:As you can see the values are first loaded on the internal stack with LOAD_FAST and then a BUILD_TUPLE (grabbing the previous 2 elements placed on the stack) is generated. Python knows to create a tuple due to the commas being present.You could alternatively specify another return type, for example a list, by using []. For this case, a BUILD_LIST is going to be issued following the same semantics as it's tuple equivalent:The type of object returned really depends on the presence of brackets (for tuples () can be omitted if there's at least one comma). [] creates lists and {} sets. Dictionaries need key:val pairs.To summarize, one actual object is returned. If that object is of a container type, it can contain multiple values giving the impression of multiple results returned. The usual method then is to unpack them directly:As an aside to all this, your Java ways are leaking into Python :-) Don't use getters when writing classes in Python, use properties. Properties are the idiomatic way to manage attributes, for more on these, see a nice answer here.
From Python Cookbook v.30Although it looks like myfun() returns multiple values, a tuple is actually being created. It looks a bit peculiar, but itâ€™s actually the comma that forms a tuple, not the parenthesesSo yes, what's going on in Python is an internal transformation from multiple comma separated values to a tuple and vice-versa. Though there's no equivalent in java you can easily create this behaviour using array's or some Collections like Lists:Executed in this way:result:
Here It is actually returning tuple.If you execute this code in Python 3: Output : But if you change the code line return [a,b] instead of return a,b and execute : Output :It is only returning single object which contains multiple values. There is another alternative to return statement for returning multiple values, use yield( to check in details see this What does the "yield" keyword do in Python?)Sample Example :Output :
Python functions always return a unique value. The comma operator is the constructor of tuples so self.first_name, self.last_name evaluates to a tuple and that tuple is the actual value the function is returning.
Whenever multiple values are returned from a function in python, does it always convert the multiple values to a list of multiple values and then returns it from the function??  I'm just adding a name and print the result that returns from the function.the type of result is 'tuple'.I don't know whether you have heard about 'first class function'. Python is the language that has 'first class function' I hope my answer could help you.Happy coding.
mentioned also here, you can use this:


Answer URL
https://docs.python.org/3/library/dis.html#dis.dis
https://docs.python.org/3/library/dis.html#opcode-BUILD_TUPLE
https://docs.python.org/3/library/dis.html#opcode-BUILD_LIST
