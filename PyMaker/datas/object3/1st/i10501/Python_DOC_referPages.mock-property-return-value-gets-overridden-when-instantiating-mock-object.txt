Natural Text
BackgroundI'm trying to set up a test fixture for an application I'm writing in which one of my classes is replaced with a mock. I'm happy to leave most of the attributes of the mock class as the default MagicMock instances (where I'm only interested in making assertions about their usage), but the class also has a property that I want to provide a specific return value for.For reference, this is the outline of the class I'm trying to patch:ProblemThe difficulty I'm having is that when I patch CommunicationService, I also try to set a PropertyMock for the received_response attribute that will return a specific value. When I instantiate this class in my production code, however, I'm finding that calls to CommunicationService.received_response are returning the default MagicMock instances instead of the specific value I want them to return.During test setup, I do the following:In my production code (invoked after performing this setup):I expect comms.received_response to be an instance of Subject (the return value of the property mock). However, instead I get the following: The problem seems to be that the mock property on the instance returned from the patch method works fine, but mock properties get messed up when creating a new instance of the patched class.SSCCEI believe that the snippet below captures the essence of this problem. If there's a way to modify the script below to make it so that print(foo.bar) returns mock value, then hopefully it'll show how I can resolve the problem in my actual code.
The following line:mocks mock_foo which, at that point, is the return value of enter_context. If I understand the documentation correctly it means you're now actually handling the result of __enter__ of the return value of patch('__main__.Foo', spec=True).If you change that line to:then you'll mock the property bar of instances of Foo (as the return value of calling a class is an instance). The second print statement will then print mock value as expected.


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack.enter_context
