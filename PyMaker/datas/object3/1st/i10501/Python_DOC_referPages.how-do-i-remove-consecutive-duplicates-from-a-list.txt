Natural Text
How do I remove consecutive duplicates from a list like this in python?Having a unique list or set wouldn't solve the problem as there are some repeated values like 1,...,1 in the previous list.I want the result to be like this:Would you also please consider the case when I have a list like this  [4, 4, 4, 4, 2, 2, 3, 3, 3, 3, 3, 3] and I want the result to be [4,2,3,3] rather than [4,2,3] .
itertools.groupby() is your solution.If you wish to group and limit the group size by the item's value, meaning 8 4's will be [4,4], and 9 3's will be [3,3,3] here are 2 options that does it:ORChoose whichever you deem appropriate. Both methods are for numbers > 0.
If you want to use the itertools method @MaxU suggested, a possible code implementation is:
Fetch each item from the main list(list1).If the 'temp_list' is empty add that item.If not , check whether the last item in the temp_list isnot same as the item we fetched from 'list1'.if items are different append into temp_list.
You'd probably want something like this.So, we're going through the list, and if it's the same as the previous number, we remove it from the list, otherwise, we update the previous number. There may be a more succinct way, but this is the way that looked most apparent to me. HTH.


Check if the next element always is not equal to item. If so append.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
