Natural Text
So basically I need help with laziness.Is it possible in python to take an object, and then list off all it's variablesFor examplethen call a magic function that lists all the variable names in the objectand maybe return something that looks close to this:Keep in mind I DON'T NEED the values attached to the object, but rather the name of the variable, such as Name and UUIDif anyone could help me, that'd be awesome.Edit:Thanks for everyone answering my question, the magic function I needed was vars (). I really appreciate everyone effort and input on the problem
You can use vars():
You can use the dir() function to get a list of (some of) the attributes an object has, like so:Alternatively, the vars() function can be used to get the __dict__ attribute for an object:However, as several commenters have pointed out, it's likely that there is a better way of accomplishing what you are trying to do. The dir() function will not necessarily return a complete list of all attributes an object has; from the docs:If the object does not provide __dir__(), the function tries its best to gather information from the objectâ€™s __dict__ attribute, if defined, and from its type object. The resulting list is not necessarily complete, and may be inaccurate when the object has a custom __getattr__().Because dir() is supplied primarily as a convenience for use at an interactive prompt, it tries to supply an interesting set of names more than it tries to supply a rigorously or consistently defined set of names, and its detailed behavior may change across releases. For example, metaclass attributes are not in the result list when the argument is a class.


Answer URL
https://docs.python.org/3/library/functions.html#dir
https://docs.python.org/3/library/functions.html#vars
