Natural Text
I am attempting to read in a large data file and convert it to a format that my other scripts can better handle. Each datafile has a series of headers followed by two columns referring the relevant data points. This is then followed by another series of headers (in the same column) and by the next set of relevant data points. So for example:I need to sort through the lines and write them to a file made up of multiple columns. So the first column for each set of data is the same (the frequency), so what I'm trying to get should look like the following:I'm new to python and as yet have to find any even half successful way of managing this. I've tried a basic if statement:But since I can't define a list to be multidimensional I don't know how I can progress to have it assign the next series of data values to another column. Defining a numpy array doesn't help me either since I need to know the exact dimensions to start with.I'm certain there must be a relatively straight forward way to do this, but I've failed to find it. I'd appreciate any help!This is the data opened with notepad as requested in a comment:
Althought I have not used it (yet), pandas look that will be a good tool for your usecase.Check the dataframe data structure http://pandas.pydata.org/pandas-docs/stable/dsintro.html#dataframeand the IO toolshttp://pandas.pydata.org/pandas-docs/stable/io.html
You can have lists in lists to emulate your desired two-dimensional structure:Should your algorithm require sparse arrays and instant access to elements, you can use a dictionary with a tuple as index:
It is not entirely clear to me how the numbers in your example are connected to the result table you want to create, but here is a function that will read in a tab delimited file and convert it to a 2d array where each field that represents a float is converted to a Python float and the rest remains a string.Example:Output:


Answer URL
