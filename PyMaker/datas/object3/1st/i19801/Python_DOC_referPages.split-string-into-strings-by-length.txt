Natural Text
Is there a way to take a string that is 4*x characters long, and cut it into 4 strings, each x characters long, without knowing the length of the string?For example:

I tried Alexanders answer but got this error in Python3:This is because the division operator in Python3 is returning a float. This works for me:Notice the // at the end of line 2, to ensure truncation to an integer.
:param s: str; source string   :param w: int; width to split onUsing the textwrap module:PyDocs-textwrap:return str:Inspired by Alexander's AnswerPyDocs-data structures:return list:Inspired by Eric's answerPyDocs-regex:return list:Complete Code Examples/Alternative Methods
Here is a one-liner that doesn't need to know the length of the string beforehand:If you have a file or socket, then you don't need the StringIO wrapper:

Here are two generic approaches. Probably worth adding to your own lib of reusables. First one requires the item to be sliceable and second one works with any iterables (but requires their constructor to accept iterable).So, in topicstarter's case, the usage is:
Got an re trick:Then be a func, it might looks like:

And for dudes who prefer it to be a bit more readable:output:
The string splitting is required in many cases like where you have to sort the characters of the string given, replacing a character with an another character etc. But all these operations can be performed with the following mentioned string splitting methods.The string splitting can be done in two ways:Slicing the given string based on the length of split.Converting the given string to a list with list(str) function, where characters of the string breakdown to form the the elements of a list. Then do the required operation and join them with 'specified character between the characters of the original string'.join(list) to get a new processed string.
will produce 

My solution


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
