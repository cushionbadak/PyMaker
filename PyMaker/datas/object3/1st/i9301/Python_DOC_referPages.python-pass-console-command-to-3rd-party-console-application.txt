Natural Text
i have a question, but it is difficult to explain for me:I have a application (let call it abc), that have their own console - this soncole runs via CMD like this:    abc console console.xmlabc console start in the same window, but instead C:\>, i get only > - rest is like CMD.I know that i can run cmd commands i.e like this:but, when i try to do that:nothing has happen, console freeze. I've tried to add some more commands, to check if despite "freeze" i can do something, like export some xml, but nothing happends.Is there any way to pass any commands to abc?
If your application is sufficiently simple, it will likely accept commands through its standard input. If you run it directly in the shell, it gets its standard input directly from input you provide yourself (unless you use redirection).But if you run it as a subprocess from another Python program and you want to automate its input, you have to tell your Python code to feed that input into the application's stdin channel.There are a couple of ways to do that with the subprocess module. Assuming you want to provide a single or a group of commands to your application only once, without reacting on later output, timing sensitive actions or user interaction, you can indeed use check_output():Note that you pass a string to the input parameter that includes all the commands you want to send in one go, delimited by newlines (hence the \n).You can build that string from a list of commands, if you want: pass_command = '\n'.join(command_list) + '\n'If you need a more flexible way of feeding input into your application, you can use the stdin= parameter instead and pass it a file object or file descriptor. Or rather use Popen() for a more flexible interface.Also note that check_output() doesn't return a pipe, but a string with all the output. So you need to make sure that your application ends by itself (or by sending it a command that makes it quit), otherwise check_output() will wait forever. If you cannot or don't want to make it quit immediately, you need to use the more flexible Popen() interface and write / read as required.
Thanks to Blubberdiblub, i was able to make this:Mayby it is not perfect, and more advanced users could do that better, but in this way i'm able to open abc console, and pass there  few commands, than close this console.


Answer URL
https://docs.python.org/3/library/subprocess.html#popen-objects
