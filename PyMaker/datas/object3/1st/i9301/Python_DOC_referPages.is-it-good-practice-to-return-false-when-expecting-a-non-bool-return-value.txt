Natural Text
If I have a function that needs to return n random elements from a list, I may want to check if the number of elements in the list is larger than the sample I'm asking for, that is:In this case I returned False if the number of elements asked for is larger than the number we have.Is this good practice? The place where we're calling rnd() is expecting a list to be returned, not a boolean, so it doesn't feel right to me.
There's actually no need to do this, random.sample does it for you (see end of its documentation):If the sample size is larger than the population size, a ValueError is raised.In order to answer you question too, though, you'd usually want to raise an exception in these cases, not return something. If you don't, a user won't always realize an error has actually occurred (and an error should never pass silently). 
Expanding a little on Jim Fasarakis-Hilliard's answer ...Returning special values in exceptional cases is error-prone, because any code calling your function then has to guard against the special case:Note that if False is your special value, you can't just say if not x: ... because that would catch an empty list, which is a valid return value in the "usual" case. Subtleties like this are common with special return values, and you can't assume that calling code will always anticipate them.If the calling code neglects to guard against your special value, errors become harder to track down:If you raise an exception instead:... any error will happen where rnd() is called, with a helpful error message. If the exceptional case needs to be guarded against, the code to do so is more explicit (and less prone to subtle edge cases):
Just return an empty list, when you need to check, use:Any object can be tested for truth value, for use in an if or while  condition or as operand of the Boolean operations below. The following  values are considered false:NoneFalsezero of any numeric type, for example, 0, 0.0, 0j.any empty sequence, for example, '', (), [].any empty mapping, for example, {}.


Answer URL
https://docs.python.org/3/library/random.html#random.sample
