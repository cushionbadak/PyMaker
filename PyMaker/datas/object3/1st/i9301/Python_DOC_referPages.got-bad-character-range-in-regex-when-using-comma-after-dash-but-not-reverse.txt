Natural Text
I have tried this command in python console:and I got:but when I use:no error is being returned.What is it that I should consider about character sequences?
A dash -, when used within square brackets [], has a special meaning: it defines a range of characters. E.g., [\s-,] means "any character from \s to ," (which is not possible). However, the dash does not have the special meaning if it is either the first or the last character in the square brackets. That's why your second regex is correct.
the character - stands for specifying the range of characters within a character class, which works based on the ASCII number of the characters. So the left side must always have a lower ASCII number than the right side. And whenever your regex doesn't meet this criteria python will raise that error. Which in this case your range is completely meaningless, since it's \s-, which means any character between whitespaces and comma! which is obviously wrong!And if you want to use the hyphen character literally you have two options in python first is escaping the characters with a backslash, like [\w\s\-,] and the second one is putting it at the leading or trailing of other characters within character-class, as you did. [\w\s,-] Read more http://www.regular-expressions.info/charclass.html
Actually, the - (minus sign) is used to provide character ranges inside [], so that's why you got error when using:re.search('^\<.+\>([\w\s-,]+)\<.+\>$', 'Carrier-A') as if you were saying there is a character range from \s to , which is not correct.Whereas in your second expression, ([\w\s,-]+, there is no character ranges since the - is at the end of your characters class (between []), which generates no issues.The reason as to why character ranges starting or ending with \s does not work as quoted from Python's doc:\sFor Unicode (str) patterns: Matches Unicode whitespace characters  (which includes [ \t\n\r\f\v], and also many other characters, for  example the non-breaking spaces mandated by typography rules in many  languages). If the ASCII flag is used, only [ \t\n\r\f\v] is matched  (but the flag affects the entire regular expression, so in such cases  using an explicit [ \t\n\r\f\v] may be a better choice). For 8-bit  (bytes) patterns: Matches characters considered whitespace in the  ASCII character set; this is equivalent to [ \t\n\r\f\v].


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/library/re.html
