Natural Text
I have a simple Python class:After some experimenting, I see __setattr__ is called only when setting owner or wheels:It does not get called when appending to wheels:This does not surprise me, and I understand why it is not being called.I am just wondering how I would get it to be called for the 3 scenarios I listed:I've experimented a bit with the different descriptors, but no luck. I ultimatley just want to set dirty = True when a class member is modified (set, reset, modified, appended to, etc.).
You cannot do this using only descriptors. Full stop.You have to provide a custom list class which does what you want. This is not too difficult if your custom list inherits collections.abc.MutableSequence. As you can see, you can get away by "only" implementing __getitem__, __setitem__, __delitem__, __len__, insert—the others are filled in by the abstract base class MutableSequence.Use a normal list as backing storage and implement the methods using that.Note that the index argument to __setitem__, __getitem__ and __delitem__ can be a slice, which are more tricky to implement than you’d expect. I recommend a tight test suite.Once you have your list class, you use it as the type for your class’ attributes (you can control the type using @property or custom descriptors, by preventing the user from assigning any other type).


Answer URL
https://docs.python.org/3/library/collections.abc.html
https://docs.python.org/3/reference/datamodel.html#index-64
