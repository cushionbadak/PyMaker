Natural Text
I'm trying to create a new list of lists by removing the rows with a duplicated value within existing list of lists. Expected output:    [['a35', 1], ['3r', 6], [5, 9]]Actual output:    [['a35', 1], ['a35', 2], ['3r', 6], ['3r', 8], [5, 9]]I want create a list of lists in which the values of row[0] are unique and not duplicated (e.g. the row with 'a35' should be included only once)How can I achieve this?
you can simply save the unique value (the 1st data in the tuple), you're wrong because you compare the 1st tuple to all the data (comparing 'a35' to ['a35',1])
Your current code fails because after the first iteration sec looks like this: [['a35',1]]. On the second iteration row has value of ['a35',2] which can't be found from sec thus it gets appended there.You could use groupby to group the inner lists based on the first element. groupby returns iterable of (key, it) tuple where key is value returned by second parameter and it is iterable of elements in within the group:Note that above assumes that lists with the same first element are next to each other in seq. If that's not the case you could sort seq before passing it to groupby but that only works if the first elements can be used as keys. With your data that's not the case since there are strings and ints which can't be compared on Python 3. You could collect the items to OrderedDict though:Output:
Use List Comprehension to achieve this:This selects each item from fir and compare first element of the item with all the item from index 0 till the index of that item.As you have only two items in the inner list and you don't want to have duplicates,Dictionary would have been the perfect data structure for your case.
I think when you loop the fir, you should add a list for recording which key you have put in the sec. 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
