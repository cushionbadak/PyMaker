Natural Text
I refer to the Bokeh's Documentation which describes how to embedding Bokeh server as a library. There are several example python there, specifically one for "standalone" and one for "Tornado", yet both use Tornado.My questions are:What's the conceptual difference if both use Tornado? Why is it called standalone? (I don't know Tornado very well).Can I use a class object-oriented design for coding the GUI rather than a function with global variables, like in the given examples (see modify_doc method in both examples and inner methods which refer to variables in outer scope).
Like most other Web servers, Bokeh's built-in Bokeh.server.server.Server needs an event loop to run on. In the first, "standalone" example, it's running (or "piggybacking" as the docs say) on top of Tornado's IOLoop, but the actual application logic is handled by Bokeh's internal Application object. (I believe it might be possible to use some other event loop, like the one from Python 3's asyncio, but I haven't tested it.) The second example, however, is using Tornado's Web framework to route the requests instead.The example function is not using global variables -- it (or rather the internal callback function) is simply taking advantage of Python's closure mechanism so it can return a callback function to the Bokeh's FunctionHandler. I am not that familiar with Bokeh, but apparently there is a number of different ways you can modify the document -- FunctionHandler, CodeHandler, ScriptHandler, NotebookHandler etc. In Python, a class is an executable like any other function, so I can easily see passing one to FunctionHandler (which should really be called CallableHandler).


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html
