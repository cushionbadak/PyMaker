Natural Text
I'm using OrderDict to save color code as a key and a list as the value. I need to run on all the key and change their color code. I did the following:When I run it, it's change only the last key:Here are some details on what the function does, even though i believe my mistake is more basic here.I getting the key and convert it to a list with two character for each index (splitting to color code to red-green-blue). I then get the highest value and increase it. I then trying to save the new value as a new key in my dict.Thanks in advance,Yakir.
Without modifying too much your code, I think you were trying to do something like that:What I have done is:Make a copy of the dict outside of the loopAt the end of the loop:Copy the content from the old key to the new oneDelete the old keyAlso don't use dict as a local variable name because this name already exists as a builtin function. You won't be able to call this function if needed. I have changed it in you code to color_dictNow, you could further simplify your code by taking advantage of fact that your seem to be converting characters to hexadecimal values back and forth in your code:Edit: If you want to use OrderedDicts :
As fukanchik said in the comments, the main problem with your code is that you are rewriting the whole new dictionary on each iteration of the for loop. Instead, you should create the new dictionary outside the loop and only modify the appropriate key in the loop.Here's a repaired version of your code that will run on both Python 2 and Python 3. I've made a couple of minor changes, eg a better way of converting the b strings to plain strings. In Python 2, b strings are the same as normal strings, but in Python 3 normal strings are actually Unicode and b strings are literal bytes objects. FWIW, you probably don't really need to do that conversion, but I've done it anyway since you seem to want it. :) I've also modified the input data slightly so that we can verify that each key in the new dictionary is getting associated with the correct list.BTW, you should not use dict as a variable name because that shadows the built-in dict type. It will sometimes work ok, but when it doesn't it leads to mysterious bugs with cryptic error messages. Similarly, don't use list, str, int, set, etc as variable names.outputIf you need to preserve the order of insertion in these dictionaries then you should use OrderedDict for both the input & output dicts.output


Answer URL
https://docs.python.org/3/library/functions.html#func-dict
