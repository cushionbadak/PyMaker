Natural Text
How can I do something like in Python?
Python does not contain a preprocessor like the C family of languages. However, as a scripting language, as long as every line makes syntactic sense, you don't need to worry about symbols (functions and all) not being defined. You can also import libraries inside blocks such as those in if statements, and the imported symbols will be available with normal scope rules.One solution that I have used before is having the different parts in different files, I find it works great:
Short version: You can't.At least not without rolling your own script wrapper that executes some sort of home rolled preprocessor. You can do normal runtime tests, and you can define methods conditionally (which is sort of like compile-time definitions), so the same name refers to different functionality depending on top-level configuration, but the closest thing Python has to a compile time preprocessor is the __debug__ special variable.__debug__ is processed during bytecode compilation as a constant True or False depending on whether Python in running with "optimizations" turned on (passing -O when invoking Python has only two effects that I know of: making __debug__ be False, and removing assert statements).


Answer URL
https://docs.python.org/3/library/constants.html#__debug__
