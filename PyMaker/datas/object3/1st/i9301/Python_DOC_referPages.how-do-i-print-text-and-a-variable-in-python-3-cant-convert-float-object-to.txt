Natural Text
I need to find out how to format numbers as strings. My code is here:Hours and minutes are integers, and seconds is a float.  the str() function will convert all of these numbers to the tenths (0.1) place.  So instead of my string outputting "5:30:59.07 pm", it would display something like "5.0:30.0:59.1 pm".Bottom line, what library / function do I need to do this for me?
Formatting in Python is done via the string formatting (%) operator:/Edit: There's also strftime.
Starting in Python 2.6, there is an alternative: the str.format() method. Here are some examples using the existing string format operator (%):Here are the equivalent snippets but using str.format():Like Python 2.6+, all Python 3 releases (so far) understand how to do both. I shamelessly ripped this stuff straight out of my hardcore Python intro book and the slides for the Intro+Intermediate Python courses I offer from time-to-time. :-)Aug 2018 UPDATE: Of course, now that we have the f-string feature in 3.6, we need the equivalent examples of that, yes another alternative:
Python 2.6+It is possible to use the format() function, so in your case you can use:There are multiple ways of using this function, so for further information you can check the documentation.Python 3.6+f-strings is a new feature that has been added to the language in Python 3.6. This facilitates formatting strings notoriously:
You can use C style string formatting:See here, especially: https://web.archive.org/web/20120415173443/http://diveintopython3.ep.io/strings.html
You can use following to achieve desired functionality
str() in python on an integer will not print any decimal places.If you have a float that you want to ignore the decimal part, then you can use str(int(floatValue)).Perhaps the following code will demonstrate:
If you have a value that includes a decimal, but the decimal value is negligible (ie: 100.0) and try to int that, you will get an error.  It seems silly, but calling float first fixes this.str(int(float([variable])))


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
