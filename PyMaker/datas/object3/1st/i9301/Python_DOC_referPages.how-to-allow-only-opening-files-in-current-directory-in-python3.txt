Natural Text
I am writing a simple file server in Python. The filename is provided by the client and should be considered untrusted. How to verify that it corresponds to a file inside the current directory (within it or any of its subdirectories)? Will something like:suffice?
Convert the filename to a canonical path using os.path.realpath, get the directory portion, and see if the current directory (in canonical form) is a prefix of that:By converting fname to a canonical path we handle symbolic links and paths containing ../. UpdateUnfortunately, the above code has a little problem. For example, returns True, but we definitely don't want that behaviour here! Fortunately, there's an easy fix: we just need to append os.sep to the paths before performing the prefix test. The new version also handles any OS pathname case-insensitivity issues via os.path.normcase.Thanks to DSM for pointing out the flaw in the previous code.Here's a version that's a little more efficient. It uses os.path.commonpath, which is more robust than appending os.sep and doing a string prefix test.


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.realpath
https://docs.python.org/3/library/os.path.html#os.path.normcase
https://docs.python.org/3/library/os.path.html#os.path.commonpath
https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve
