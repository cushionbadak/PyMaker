Natural Text
I need to merge two lists with dictionaries in them:There are 56 elements in the first list (56 dictionaries) and 14 elements in the second list (dict2). What I want to do is inset first element from dict2 to first four elements of dict 1 and repeat the process until all 56 elements in dict1 have {Place:x}. So eventually what I want to get is:newdict = [{'Count': '307', 'name': 'Other', 'Percentage': '7.7%', 'Place': 'Home'}, {'Count': '7,813', 'name': 'Other', 'Percentage': '6.8%', 'Place':'Home'},{'Name': 'Other', 'Percentage': '6.6%', 'Place': 'Home', 'Count': '1,960'},{'Name': 'Other', 'Percentage': '7.6%', 'Place': 'Home', 'Count': '1,090'},{'Name': 'Other', 'Percentage': '7.6%', 'Place': 'Forest', 'Count': '1,090'} ]and so on..When dict2 is exhausted, it should start from first element again.So I updated question. My first take on this problem was to increase number of same key:values in dict2 to:     dict2 = [{'Place': 'Home'}, {'Place':'Home'},{'Place':'Home'},{'Place':'Home'},{'Place':'Forest'},{'Place':'Forest'}...]and then use the same method mentioned below to merge dictionaries. But I believe there should be a way to do this without changing dict2.
We'll use zip and itertools.cycle to pair up elements from the two lists. If you don't want to modify the original list, it's a little more complex.
You can use zip():If the number of items in your dicts are not the same, you can use itertools.izip_longest() with fillvalue param set to {}:
Using modulo:
How about simply creating an empty dictionary called result and simply updating it with the list of existing dictionaries you want merged, for example:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
