Natural Text
I have two lists:I want to get the combinations produced between the elements of list b and the elements of list a but treating elements of a as pairs (or triples etc. etc.) as the example below which gives len(b) ** len(a) number of combinations.I have tried to use itertools.product (as described here) but this will give only the 6 possible combinations. 
You can use itertools.product(..) but specify repeat to be repeat=len(a). So you can use:The product(..) will generate tuples like:So here the first element of the tuple is the one that is attached to a_, the second one to b_. Now we zip(..) them together with the a list, producing:Now it is only a matter of formatting ('%s_%s'%t), and ' '.join(..)ining them together and yield them (or you can use list comprehension to produce a list).The result for your sample input is:Note that the elements here are generated lazily. This can be useful if you are for instance only interested in the first k ones, or when you do not want to generate all of them at once.
You could explicitly create your pairwise items using itertools.product, then operate on those pairs again with itertools.productpairs will contain the two lists that can fed into itertools.product again.The result is:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
