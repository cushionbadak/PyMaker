Natural Text
I'm learning about Python's relatively new async features. I found this in PEP 492:The following is a utility class that transforms a regular iterable to  an asynchronous one. While this is not a very useful thing to do, the  code illustrates the relationship between regular and asynchronous  iterators.I attempted to run this code, by adding the given async for loop to a function, and then calling that using an event loop.Full example code (run in the interpreter):However, I'm getting an error:What am I doing wrong? How can this example be fixed? I'm a little surprised that code right out of the PEP is failing.I'm using python version 3.5.1.
The code you are using works with python 3.5.2+.From Python 3.5.2 __aiter__  can directly return asynchronous iterators. More hereThe error you were receiving was because of the older python(3.5.1) and it was therefore returning the wrong type.


Answer URL
https://docs.python.org/3/whatsnew/3.5.html#pep-492-coroutines-with-async-and-await-syntax
https://docs.python.org/3/whatsnew/3.5.html#pep-492-coroutines-with-async-and-await-syntax
