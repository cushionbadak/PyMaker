Natural Text
I am wondering if it is possible to prevent the user from invoking the methods of a parent class when using the child class. At the same time, I do wish that these methods be available to the methods of the child class themselves.For instance, suppose I have an implementation of a linked list. I then base a stack ADT implementation on it by inheriting (not sure if it is good design ...). Hence, I wish to "hide" the methods of LinkedList class from the user of the Stack class.LinkedList:Stack:
Here are the official syntax to declare protected and private method in a class.The protected method declared in the parent class will be callable from a child class. The private method declared in the parent class will be hidden from a child class.The raised Exception is:# AttributeError: '<ChildClass>' object has no attribute '__<private_function>'Step 1 - declare both private and protected method in the class Parent.Step 2 - declare function to call the both function from a class Child.Step 3 - create an instance of class Child to check private and protected accesses.Check of protected method from the Child class ==> Access is allowedOutput: "inside _parent_protected()"Output: "inside _parent_protected()"Check of private method from the Child class ==> Access is deniedError: "AttributeError: 'Child' object has no attribute '_Child__parent_private'"Error: "AttributeError: 'Child' object has no attribute '__parent_private'"


Answer URL
https://docs.python.org/3/tutorial/classes.html?highlight=private#private-variables
