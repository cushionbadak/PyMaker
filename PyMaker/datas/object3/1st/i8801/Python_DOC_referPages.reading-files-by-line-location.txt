Natural Text
So, I have a data file which has 3 columns. What I am trying to do is create a function that takes in start and end line number as input. Something like:

If I'm reading this correctly, this function should only read the rows which are numbered in the range [start_line, end_line] (I'm assuming this is an inclusive range, i.e. you want to read both the start and end lines as well). Why not write your for loop with enumeration and simply skip rows that are out of the passed range?Also, be careful when splitting by commas; this works fine for simple rows like 1,2,3 but what about 1,2,"a,b,c",3, where "abc" shouldn't be split into separate columns? I recommend using the built-in csv module, which handles these edge cases automatically:Note that you can only use the with statement on the file object itself, not on the csv.reader parsed file, so this wouldn't work: with csv.reader(open(filename)) as f:.
If you use CSV reader, you can access the line number:The number of lines read from the source iterator. This is not the  same as the number of records returned, as records can span multiple  lines.
We can combine the linecache module and csv to get the job done:Consider the data file, data.txt:The above code will produce the following output:Discussionlinecache is a lesser-known library which allow the user to quickly retrieve lines from a text filecsv is a library to deal with comma-separated valuesBy combining them, we can get the job done with little effort


Answer URL
https://docs.python.org/3/library/csv.html
