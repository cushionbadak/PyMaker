Natural Text
First post on here, I'm stoked!  Okay, so here is the question:  How do I add previous element to current element and then make a new list from those values to add them to matplotlib graph?  Here is an example of my code:'''I think you can see the point I'm trying to make'''del example_list[:]'''This works for hard coding it in, but I want this to happen for hundreds of elements. (when people add to list from my "simple_finance_app" Python script)'''  Thanks for the help!  (P.S. I already have the matplotlib code so no need to add that, however, I it could help others who read this question/answer)
You can use the itertools.accumulate method for that:This generates:If the function (here operator.add) works in O(n), then accumulate will work in O(n) whereas your hardcoded solution works in O(n2).Basically the accumulate(iterable[,func]) function takes as input an iterable [x1,x2,...,xn] and a function f, and each iteration it calls f on the accumulator and the new element. In the first step it emits the first element, and then the accumulator becomes that element. So it basically generates [x1,f(x1,x2),f(f(x1,x2),x3),...]. But without calculating f(x1.x2) each time. It is thus semantically equivalent to:but probably less error prone and more efficient.
You mean sum combined with slicing?Or in general:
Vanilla for loop solution:Note that repeatedly calling sum in a for loop/comprehension will result in O(n^2) complexity.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
