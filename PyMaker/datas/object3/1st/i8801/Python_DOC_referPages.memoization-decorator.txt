Natural Text
I have the following pseudocode:Is it possible build a memoization decorator that performs exactly this logic?Restrictions:Though memo_slow_method doesn't need to be directly accessible, it must be defined on the object, such that it is cleaned up when object itself is purged- very important.There's no need to consider parameters other than self - no parameters will ever be passed.PS I have been using @lrucache but it's not suitable for my purposes. It really needs to follow the above logic exactly.
Instead of a decorator you can use a descriptor (property-like):Then set the descriptor:Then the interactive test:If you really want a decorator:
Here is a decorator that implements your logic exactly, as requested.It coins the name for the memo field from the function name (which is available in  func.__name__) by adding a prefix to it:Now test it:


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
