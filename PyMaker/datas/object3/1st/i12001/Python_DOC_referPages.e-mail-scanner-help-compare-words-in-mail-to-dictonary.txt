Natural Text
I'm trying to write a simple program in which you paste the text of a certain email, and the program print a which dic has the most overlap with the email. Here a quick overview of what I'm trying to achieve:User copies and pastes email into programText gets stored to variableVariable gets appended to text file (to build a simple database of all emails)Each word in variable gets compared to words in 4 different categories(dics)Every time a word from the email matches with a word in a dic, some separate variables keep track of this. In the end the programs shows the prediction. So all 4 categories with the number of times words of that dic where in the email. So far my program saves the input to a single, lowercase string and appends that to a text file. So how can I iterate over each word in the newest entry to the text file and check which of the 4 dics has the most similar words. This is what I have so far.To give a little background on how I want to use this: I get a lot of emails that usually are classifiable into 1 of 4 types. Instead of manually categorizing each mail, I want to write a program that predict's the likeliness of each category based on words in the email. I want to add a small machine learning part into it later by asking the user if the prediction was right, and if so increasing the number behind the word in the dics, so I can later translate this into how heavy each word weighs. But that's all for later. For now I just want it to compare the content of the email to 4 lists and print which list has the highest number of corresponding words.  ---- UPDATE --- When I try to run your code:    from collections import Counterand emailfile.txt contains:hello, last week i bought my bike and today i am using it bike. theni walk.it prints:    Counter({'bike': 2, 'walk': 1, 'swim': 1, 'run': 1})I don't see what it does since it keeps 'walk' on 1 even though it is in the file. I want it to print something like:     Highest nr. of corresponding: C with 3 similar wordsThanks!!
This is a rough idea of how to count the words and find the most frequently occurring in the file using collections.Counter dicts: Or store the words in separate lists and use a single Counter dict:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
