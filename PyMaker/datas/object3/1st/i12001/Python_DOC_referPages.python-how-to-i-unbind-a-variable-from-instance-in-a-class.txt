Natural Text
In class, let's say I have an instanceThen, in a method, say I have something likeEvery time I change my_variable to some other value, self.my_instance changes its value also, and this is not what I want. I want to modify my_variable without affecting self.my_instance. This can be quite frustrating and confusing in large programs too.Thank you!
When you say my_variable = self.myinstance, my_variable is now just an alias to the object that self.myinstance refers to.  To make it a separate object, you can use slicing:Using self.myinstance[:] means to take all objects from the beginning to the end which means everything.  Since it is a slice, however, it returns a copy so this is a common way to get a copy of a list.This works in your case because my_variable is a list, but if it is a dictionary, for instance, you can use the copy module:orDictionaries also have the .copy() method for shallow copies.


Answer URL
https://docs.python.org/3/library/copy.html
