Natural Text
For example...I have a set of pairs of indices (x,y) representing a row from X and a row from Y. I'd like to take the dot product of the corresponding rows, but I can't figure out how to do this efficiently.Here's what I've triedwhich works but is slow as X and Y get large.  Is there a more efficient way?UpdateFollowing Warren's elegant but slow solution, here's a better example for testing (along with a benchmark)
With your X, Y, x_idxs and y_idxs, you can do:That uses "fancy" indexing (i.e. indexing with an arbitrary sequence to pull out the desired set of rows), followed by pointwise multiplication and a sum along axis 1 to compute the dot products.The result is in a numpy matrix, which you can convert to a regular numpy array and flatten as needed.  You could even use the somewhat cryptic A1 attribute (a shortcut for the getA1 method):Update, with timing...Here's a complete script to compare the performance of my version with the original, using arrays X and Y that are actually sparse (with density approximately 0.001, i.e. about 0.1% nonzero elements).Output:For less sparse matrices, the speed difference is not so large, and for sufficiently dense matrices, the original version is faster.


Answer URL
https://docs.python.org/3/library/itertools.html
