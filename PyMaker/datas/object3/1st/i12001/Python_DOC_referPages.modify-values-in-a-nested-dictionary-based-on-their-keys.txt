Natural Text
I have the following dictionaries:My aim is to multiply each float in input_processed by a factor defined in conversion_factors for some variables. Since a command (highest level keys in input_processed can define multiple variables, these are mapped in commands_variables.So first I need to check, if the variable is contained in input_processed['units'], since phi has no unit. Then for each variable in every command I need to get the unit. In the next step I get the conversion factor depending on the unit from conversion_factors. Since the values of the highest level keys in input_processed can be of the type float, list or dict, I wrote a different method for each case. This is put into a function and called in a loop over input_processed.The desired output is for the functionand for the main programI managed to convert floats and lists but no dictionaries. In this shortened problem statement, I had the error that the local variable 'converted' is referenced before the assignment.If somebody has an easier way to convert the quantities, I would appreciate that.    
The main issue with your existing code is that yourloop doesn't accumulated the changed items in the nested dictionary, so the converted produced by that part of the code will only be the converted last item in parameter; also that section only handles nested dictionary items that are lists, it will fail on plain floats.FWIW, your return converted at the bottom of the main for loop looks a bit suspicious: an unconditional return inside a loop will cause the function to return at the end of the first loop iteration. That's actually ok here, since we do want to exit the loop after we get a successful match it in data['units'], but it still makes it a bit tricky for someone reading your code. :)A minor issue is the use of type for type testing. It's recommended to use isinstance instead. See Differences between isinstance() and type() in python for details. As the answers there mention it's best to avoid type checking in Python as much as possible, since that interferes with duck typing.Anyway, here's a modified version of your function. My code was tested on Python 2.6.6, but it should perform correctly on Python 3... I think. :)outputFWIW, although pprint.pprint is ok for displaying dictionaries, you can get prettier output using json.dumps.


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
