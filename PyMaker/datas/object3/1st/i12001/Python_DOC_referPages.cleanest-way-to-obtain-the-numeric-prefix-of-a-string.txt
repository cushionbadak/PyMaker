Natural Text
What is the cleanest way to obtain the numeric prefix of a string in Python? By "clean" I mean simple, short, readable. I couldn't care less about performance, and I suppose that it is hardly measurable in Python anyway.For example:Given the string '123abc456def', what is the cleanest way to obtain the string '123'?The code below obtains '123456':So I am basically looking for some way to replace the if with a while.
You can use itertools.takewhile which will iterate over your string (the iterable argument) until it encounters the first item which returns False (by passing to predictor function): 
This is the simplest way to extract a list of numbers from a string:If you need a list of int's then you might use the following code:And now you can access the first element [0] from the above list 
Simpler version (leaving the other answer as there's some interesting debate about which approach is better)

Here is my way:
One way, but not very efficient since it works through the whole string without break would be:This appends each substring with increasing size if it is a digit and then appends it. So the last element is the one you look for. Because it is the longest startstring that is still a digit.
You could use regex
Another regexp version strips away everything starting with the first non-digit:
Will return ['123'] too.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.takewhile
