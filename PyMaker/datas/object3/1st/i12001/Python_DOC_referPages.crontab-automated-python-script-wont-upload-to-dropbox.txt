Natural Text
I am running a Raspberry pi with connected camera and want to use crontab to automatically upload taken pictures once per hour.Pictures are taken by another shell script every 6 minutes, which is also controlled by crontab and works fine.The python script to upload the files works as intended when calling it from the shell. It builds the correct file names and uploads them. Here is the script:I added the following in crontab -e (the path is correct). So that it should upload every hour at :56 minutes56 * * * * python /home/pi/Pictures/pyPictureUpload.pyHowever, nothing is ever uploaded. I also tried it with the same command in a shell script and call the shell script in crontab instead:56 * * * * /home/pi/Pictures/runUpload.shThis is the very short shell script:All scripts work as intended when called from the shell directly but nothing works automatized by crontab. What am I doing wrong?
I suspect it's a problem with the working directory being different in the shell versus when cron is running. My experience in similar situations has been that it is safer to specify the full path every time. The os.path module has a number of helpful functions for this.The problem being that you define the filename as file =  t+x+'.jpg' but never give a directory where those files are stored. If you are manually running the python script in the same directory as the images, it will work fine. But when the cron daemon runs it, it isn't starting in that same directory.Try:
There could be many reasons for the failure.(this is an answer that I provided yesterday for a similar question but I do not know how to insert a link from my phone app. I may edit this tomorrow)The environment variables of the cron daemon are not the same as the login shells. In particular the PATH variable which is used to locate commands might not be the one you expect: some commands would not be found in such situation, for example.Could you provide all errors and output generated when the script was run by cron daemon?How to debug a script executed by the cron daemon?At first, add set -x to the script in order to make bash generates trace messages:Solution 1By default error output and standard output are all gathered and sent into an email to the current user mailbox.All logins have their own local mailbox on linux and UNIX.Connect as the user which own the crontab and type mail:The mail command offers a text interface and enables you to list and read emails received.There is a help.Solution 2Edit the crontab and redirect output to a file on the diskWait that cron daemon runs the script and debug with information logged into the /tmp/script.out file.


Answer URL
https://docs.python.org/3/library/os.path.html
