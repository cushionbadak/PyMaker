Natural Text
Okay I have been running my forehead into some code and I have determined I am just taking shots in the dark at this point.  For some reason getting classes to click has been a real pain in the butt and I'm thinking if I used my own personal code it might make sense.  So here is a little script game I wrote up to experiment. (Its pretty rough I'm fairly new): https://github.com/Villagesmithy/Zombies-.gitI feel that to understand what I'm doing wrong I have to have it pointed out to me in my own code.  There are plenty of questions similar to mine I'm sure but they were going over my head sadly.The error I'm getting is this:And here is the class that I think is the problem:Now if you are saying Gee this kiddo has no clue what he is doing you would be correct!  I'm just hoping you guys can assist me in making this click.  The whole program might need to be burned at the stake I don't know.  Any help you can give would be very helpful.
I'm assuming initv is actually a method of Combat, but you forgot to have it take self as a parameter, giving it a parameter named battle instead.When you call bat.initv(), it's passing self as battle (self is a name of convention; the first positional parameter of a method is self whatever you decide to call it). So when you do bat = battle() in initv, it's the same thing as doing self(), that is, trying to treat an instance of your class as a callable.From what I can tell, the real goal is to call the battle method, so the definition and first line of initv should be:which passes self under the standard name, then calls the battle method on it. It's a little unclear what the battle method returns (it seems to return None implicitly on two code paths, and whatever zombie.zom_health() returns on the third code path, which has a sleep in it that never happens thanks to the return preempting it), but this code has a number of issues, and it's quite hard to identify what "correct" behavior would be.For the record, the error almost certainly complained about the lack of a __call__ method, not __Call__; the special method that lets instances of a class act as callables themselves is all lower case.
In combat_loop you define combat_call as Combat().  Right now combat_call is an instance of Combat.  Then in your while loop, you say combat_call.initv().  Since combat_call is an instance of Combat, that is a shortcut for Combat.initv(combat_call).  That is, combat_call is the only argument given to initv().  In initv(), you take one argument: battle.  In this case, battle is the same thing as combat_call which is an instance of Combat.  You then say bat = battle().  battle is already an instance of Combat, so you are trying to call an instance.  Some instances can be called, but to do that, they need to define a __call__ method.  Your class did not, so there is an error.  I think that instead of taking battle as an argument, take self.  Then define bat as self.battle().
One more thing, I don't think the zombie.zom_health() - total_damage line will work unless you implement the __sub__ method in your Zombie class.  Even then I think it would only work if Zombie and Hero each had the same parent class say: 'Human'.  But I hope not.  'Someone' would have to test that...I need some sleep first before I test more fixes for your Hero class. :) Perhaps Zombie - Hero might work.  This example re-worked from your Zombie class works fine when the objects (ie Z1 and Z2) are both from the Zombie class.  So...Hero.total_damage() might work just as well.  I don't know for sure yet.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__call__
