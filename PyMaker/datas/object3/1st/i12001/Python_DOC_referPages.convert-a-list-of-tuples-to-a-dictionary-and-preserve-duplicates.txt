Natural Text
I'm trying to convert my list of tuples into a dict which contains the values at that location, joined into a list. dict does what I want, except it removes the duplicates, which is what I don't want!Here's what happens:Here's what I want to happenIs there some other python function (foo in the above case) that does this?
This is easily done using setdefault:(Using setdefault is more efficient than using a get(k, []) + [v] as we do the append in place)
I suggest the popular module collections and defaultdict in this matter.
The values of the dict should be lists,  which you allocate when the key does not exist, and which you append to if the key already exist.
You can also use defaultdict:
You can do this:I use x.get(k, []) so that if k is already in x, we will add put v at the end of it, but if it is not, we will put v at the end of [] and use that for x[k].  A longer, but faster way would be to check first if is there, and if it is, append to it.  This is faster because we don't create a new list each time:You could also do it with a try-except block:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
