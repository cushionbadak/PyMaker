Natural Text
This question already has an answer here:Is floating point math broken?                    28 answers                This a exercise from Udacity's Deep learning course. Can anyone explain why the final answer is not 1.0?
Let's check what v1 sees of v2 in the floating point addition:What happens is that all but the leading 1 get shifted out of the binary mantissa of 1e-6 while equalizing the exponent with 1e9. This means that the final value is 10**6 * 2**(-20) = (1.024)**(-2), which gives exactly the observed value
Because 1e-6 cannot be represented exactly as floating point value:If you use a number that can be represented exactly such as v2 = 1.0/(2**20) and change iteration count to 2**20 you will get 0. However as @user2357112 pointed out even this property holds only if all of the intermediate results can be represented exactly using floating point value.Check Python tutorial for more details: https://docs.python.org/3/tutorial/floatingpoint.html


Answer URL
https://docs.python.org/3/tutorial/floatingpoint.html
