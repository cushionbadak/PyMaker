Natural Text
How in the world does this work ? help me understandI understand how this works , but not the first one.
Considering that you do understand the second example, but not the first example that is effectively identical, I think the source of your confusion is that you don't realize that strings can be iterated over in Python in exactly the same way as lists can.Here's a simple example:Think of strings in Python as a "string of characters" or a "list of characters" (the difference being that strings are immutable, to "tuple of characters" would actually be more appropriate, but doesn't sound as nice).See the the documentation for more information.Whether this is a feature or a bug is somewhat controversial in the Python community, by the way, and many people proposed to change this for Python 3. The problem is that this can really bite you, consider:This is a common enough pattern, and you're expected to call it as `my_function(['Hello', 'World']).But what if I forgot that this function expects a list? And I call it as my_function('Hello')? Depending on what do_something(item) does, you either get an error or some subtly wrong behaviour. Be on the lookout for this.Personally, I don't like this Python feature much and would have preferred to loop explicitly...
You just have to break it down a bit. First you have filter which takes a function and an iterable and applies the function to each element in the iterable and drops anything the function returns False for.In this case the function is the lambda which is just x != "X" which is equivalent to:so any element in the iterable, which in this case is your input string garbled, that is equal to "X" will get removed.


Answer URL
https://docs.python.org/3/library/stdtypes.html#iterator-types
https://docs.python.org/3/library/functions.html#filter
