Natural Text
I am an newbie in python, while running this code it gives me this error "TypeError: 'int' object is not iterable" in line 14. Please let me know my mistake.if x=1, y=1, z=1 and n=2 then results = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]and I am checking sum of each index of the list results and if the (sum==n) then do not add that index in results list So output should be : [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]
You are summing an integer:w is an integer from the range(len(resultss)+1). If you wanted to sum the triples you produced in results, just loop directly over the results:although it is not clear to me why you are looping over the length plus one. Python indices are 0-based, the last index is at len(results) - 1, not len(results).You are making it harder on yourself than is needed. Python has several easier options you are missing here.list.append() returns None. You are replacing results with None here:Remove the results = part altogether.And are you certain you want to combine the (x, y, z) triplets with the sum() results in one list?When using a list comprehension that does nothing but loop and copy the elements to a list ([i for i in iterable]), just use list() on the iterable:Since all you do is iterate, you don't actually have to do this at all. And there is rarely a need to convert range() objects to lists, you can address individual indices directly without doing so. Just use your range() objects directly:You can use the itertools.product() function to produce your results:Again, no need to convert this to a list since you are going to iterate over this.If you wanted to add indices of the triplets, use enumerate() to produce those together with the triples so you can test the sum, then add the index to a result list:You can put everything into a one-liner after this, using a list comprehension:
You don't need to use range hereAs results will be a list of list [[x,y,z], [x,y,z]].Try this: Or do like this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
