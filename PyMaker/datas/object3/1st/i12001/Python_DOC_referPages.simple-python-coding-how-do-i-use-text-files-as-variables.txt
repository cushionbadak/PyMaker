Natural Text
How can I make changeable variables in other files via my primary Python file, then change them?I want to be able to make a change in my main python file, and then have it carry over into the text file.Here is an example:Then in my code.Then when I run my module.Then when I do that, it changes the text fileAlso, what is pickling?
Pickling is used for serializing and de-serializing a Python object structure. Any object in python can be pickled so that it can be saved on disk. What pickle does is that it “serialises” the object first before writing it to file. Pickling is a way to convert a python object (list, dict, etc.) into a character stream. The idea is that this character stream contains all the information necessary to reconstruct the object in another python script (More info: http://pythontips.com/2013/08/02/what-is-pickle-in-python/). You have to import pickle to use it. i.e., import pickle.For your question, pickling is not exactly necessary. You can use simple file commands to achieve what you need. if text file is called "test.txt"Do your necessary algorithm to change the values but this is how you would access "gold" from the text file. My code will only work if the text file is EXACTLY like you mentioned.like gold = 10 or orange = 25
I'm trying to make changeable variables in text files that are separate from my code module thing. So like when I run the module and add to the variables it will change it in the text file.① Using ConfigParserThe simplest way to store a variable (or a value) is to use a .ini file for storing configuration values. To store values:To read values:But then you might not like the output:② Using JSONSo then you might prefer to use JSON to do the same:And to load it you do:Now, you might be unhappy about it being a dict. But you can make it a variable within a function, using the ** argument passing trick:Even though I recommend you to do the former solution, if you really want to load it as a variable within the global scope, you can do:③ Using pickleUsing pickle, you're having the same issue, you need to embed your data into something, or you won't have python remember the variable's name:So you'd better do:and you can use the same tricks as shown earlier. Though, the main difference with pickle, is that it's using a binary file format, making it more flexible and faster to store complex and/or big python instances:So if you want to dump and restore nicely a value using pickle you can use an object's instance:so, basically, the pickle module is nice, but not suited for your usage, as you want to be able to read and modify the file manually.ConclusionI'd advice you to use the json to serialise and deserialise data from your application, as the output is concise, elegant, thus easy to read. I have a preference over PyYaml, which looks even better when you need to edit manually. And the more commonly used serialiser is ConfigParser, which is why this is the one I showed first. But you don't want to use pickle which is very nice, but uses a binary format that you cannot change with an editor.HTH


Answer URL
https://docs.python.org/3/library/configparser.html
