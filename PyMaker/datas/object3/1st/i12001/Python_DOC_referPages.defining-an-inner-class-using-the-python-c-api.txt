Natural Text
In Python, it’s straightforward to define an inner class:… which the inner class can be accessed as one would expect, e.g. by doing MyClass.MyInnerClass.I am trying to set up something similar with an extension module. Typically one adds the extension types one defines to the extension module object in the modules’ <modulename>init() function with code like this:In order to set up the inner class, I varied this approach to try and add a PyTypeObject* as an attribute of another PyTypeObject*, like so:… I figured PyObject_SetAttrString() would work as the introduction to “Type Objects” in the C-API docs specifically says:Type objects can be handled using any of the PyObject_*() or  PyType_*() functions […]… and I added the call PyType_Modified() based on its description in the docs. But so: when I compile everything and try to load the extension, I get this error:… I presume I am going about this the wrong way; what should I try instead?
For this you need to use tp_dict directly:This field should normally be initialized to NULL before PyType_Ready is called; it may also be initialized to a dictionary containing initial attributes for the type. Once PyType_Ready() has initialized the type, extra attributes for the type may be added to this dictionary only if they don’t correspond to overloaded operations (like __add__()).Instead of using PyObject_SetAttrString() you could just doBut in this case the warning from the documentation applies:It is not safe to use PyDict_SetItem() on or otherwise modify tp_dict with the dictionary C-API.So maybe initialize the tp_dict before calling PyType_Ready on ImageModel_Type:


Answer URL
https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_dict
