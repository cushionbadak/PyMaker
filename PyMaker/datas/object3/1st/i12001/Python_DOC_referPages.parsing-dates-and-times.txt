Natural Text
I'm trying to tokenize strings like month/year/day T hour:minute to ['month', '/', 'year', '/', 'day', ' T ', 'hour', ':', 'minute'], but have no luck with the regex I am trying. Could anyone please shed some light on this and let me know what's wrong?The last option .+ finds the 2nd findall-result item, but I would have thought these options are ranked, so that .+ only matches if none of the others do...More examples:
How about using \w+ to match words, and [^\w\s]+ to match non-word, non-space characters?/ matches none of year, month, ... second, but matches .. .+ matches up to the end of the string.UPDATEalternative approach using re.split with captured group to preserve separtors:exmaple:UPDATE 2re.findall with negative look-ahead assertion:
The problem in your regular expression is the .+. In particular, after month is matched, the remaining string is matched against year|month|day|hour|minute|second|.+. The only expression that matches the remaining string is .+. But since this is greedy, it matches the rest of the string.Based on what I think you're trying to do, you should swap the . out for [/ T:].Also, if you're actually trying to match timestamp strings, you should consider using strptime.
Not everything is best done in one line with a messy regex in python. You could try doing this in stepsFor consistency with your expected output you can define separators and use those instead of strings in the partition and split functions.Variable names are nicer to work with than list indices and self-documenting for the next person who looks at your code. You can always form the list yourself.
If you are working with real dates you may need to check whether it is a real date o just a combination of digits. I can recommend use special datetime module which can parse dates and check them. Like this:Here you get special datetime object which is very comfortable for operations with dates. More info and examples are here: https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior
