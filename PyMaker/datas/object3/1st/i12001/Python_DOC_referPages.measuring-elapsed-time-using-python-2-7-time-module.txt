Natural Text
I am trying to find the difference between two times using time module and then convert it to datetime format using strftime but I get a strange output for elapsed time starting from 1970, what is the best way to find elapsed time using python?Output is
Time intervals are different to times. It doesn't really make sense to convert a time interval like elapsed_time to a datetime.Your script can be simplified considerably by using the datetime module's datetime and timedelta objects. When you subtract one datetime from another the result is a timedelta.outputPlease see the docs for timedelta to see more examples of what you can do with these objects.
This is one of my favourite things! Your problem is that, as far as the time module is concerned... time began on January 1st 1970!! See the docs here.Time starts counting from this date so what you are basically saying when you convert your elapsed time to a date, is give me 01/01/1970 + my elapsed time.Besides I'm not sure if taking the elapsed time as a date is really what you want.  Don't you want to measure this in hours, minutes, etc. ? If you really do want the date, you should just call new_time = time.time() and then convert new_time to the format you want (without bothering to calculate elapsed time as a date) 
Instead of making your final timestamp from "elapsed time", you might want to do "start time" + "elapsed time" :)This is because Python's Time module's epoch is January 1, 1970. Calling time() measures the seconds since the epoch (.strftime('%d-%m-%Y %H:%M:%S') just reformats the seconds to a date we can understand)So when you find elapsed_time, you end up with seconds between when you first started and the time you assigned the variable. Thus, it makes sense for datetime.fromtimestamp(elapsed_time) to output Jan 1, 1970 10:00:05. Where elapsed_time is 5, start_time is 1458177108.6...You want the result to be start_time PLUS elapsed_time (or, simply, why not just the current time?)I hope this explanation made sense. Here's more explanation from the Python docs https://docs.python.org/2/library/time.html


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime
https://docs.python.org/3/library/datetime.html#timedelta-objects
