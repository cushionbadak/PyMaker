Natural Text
Let's say I have a list of [100, 210, 250, 300, 405, 430, 500, 1850, 1875, 2120, 2150]I want to remove any numbers that start with the same digit and have the same length.The result should be:  [100, 210, 300, 405, 500, 1850, 2120]What I have so far is:I have a list of [862, 1930, 2496] and my code outputs [1930].I couldn't find anything when searching, but I feel like I'm missing something obvious.Thank you for your time.
You can create the new list with a list comprehension, using itertools.groupby:We group using the tuple (first digit, length of number), and keep the first number of each group, which we get with next(group).
Create a new set that will keep unique entries. Then, you may filter according to that set:
At the moment, you are using the variable i as a string in installed_tx_calc.  However, you can't subtract from a string. What you really want is to use i as an index and access in this way: installed_tx_calc[i].  However, using the index can be tricky if you are removing items from the list, so I've replaced the for loop with a while loop.  Also, I would recommend that you access the first digit directly, instead of getting a slice.  Therefore, your code will look more like this:Keep in mind that this will break if you have more numbers of length not equal to 3 or 4.  A more extensible solution would be:A final optimization would be to avoid using remove in favor of building a new list.  remove can be a fairly slow operation compared to append so the following will be faster than the previous two solutions:
First sort the list from low value to high values. Check on the highest base of the number (so for 350, this is 100) and if a multiple of this base (i.e. 3) has not occurred before then add this value to a new list


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
