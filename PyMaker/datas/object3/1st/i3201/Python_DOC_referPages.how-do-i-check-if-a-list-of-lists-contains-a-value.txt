Natural Text
I'm trying to get my program to repeat an operation on a list of lists until there are no zeroes in the entire thing. I decided to go with seventy lists of ninety zeroes each (this is being used for a maze generator).So with the inputs 90 and 70, there should be a total of 6300 zeroes. However, when I use...the loop ends instantly without doing anything. I've also triedIt's like Python completely ignores every single one of the six thousand three hundred zeroes in the maze list. I know of a way to fix this, but it involves slowly scrolling through the range of y values for every iteration. Is there a simpler way that allows it to look at all of the sublists in one line?
Use the any() function together with a generator expression:
I think you could use numpy array to do what you want. The in operator will not find 0 in your list of lists, bu would work as intended with numpy.Minimal and verifiable example:Why 0 in x won't work? Because x holds lots of objects of type list, and an object of type list will not be equal to 0 in any occasion. The in operator will not dig in to deepest level of your list to find out if there are zeroes there or not.
Checking if 0 exists in a 2-D matrix is always going to cost O(n*m), which is rather inefficient especially since your loop is going to iterate many times.For your purpose I would suggest that you simply use a counter and increment it whenever your operation inside the loop sets an item of 0 to a non-0 value, so that you can use something like this as a condition for the while loop:
Since 0 is False in Boolean and all the items in maze are going to be numbers, you can use this instead:
Numpy does not convert it to array if your sub-lists have different sizesSo, you'd better unravel your list: 


Answer URL
https://docs.python.org/3/library/functions.html#any
