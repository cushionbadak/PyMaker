Natural Text
I know just enough devops to be dangerous. I've successfully deployed a VERY simple python flask app to App Engine that basically publishes received post data as a message to PubSub. It is almost identical to Google's sample code to do so. Only difference is it uses a service account I push with the app repository to access PubSub to circumvent this issue.Works very well so far, but I've started seeing a very small number of errors around starting a new thread in threading.py:1)2)3) I have 2 questions, in order of importance:This is an app that basically needs 100% uptime in order to not lose data (not confident the clients attempt retries if there is an error on my server side). Are these errors internal to how App Engine is managing my app's resources, and not resulting in errors handling actual requests? How can I determine if I ever responded with an HTTP error/didn't successfully handle a request? I don't see any errors in my nginx logs...is that the place I need to look to see if anything failed?Is there a way I can fix this error?
https://github.com/GoogleCloudPlatform/google-cloud-python/blob/master/pubsub/google/cloud/pubsub_v1/publisher/client.py#L143it looks like publisher.publish(topic_path, data=data) is an async operation, returning a concurrent.futures.Future objectHave you trying calling the Future's result()? https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future.resultThis will block until the future object is successful, fails, or timesout.You could then forward that result as your HTTP response.Hopefully, the result object will give you more information about the error.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future.result
