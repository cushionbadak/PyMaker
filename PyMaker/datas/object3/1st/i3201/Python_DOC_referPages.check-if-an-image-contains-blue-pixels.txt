Natural Text
I have this image:And I'm trying to write a function in Python that will return True if the image contains blue pixels, or False otherwise.That image is just an example. I will have others were the blue colour can be slightly different. But they will always be blue letters over a black background.So far I have this:The function always returns False because no 1 values are found in the array returned by cv2.inRange. Maybe the range defined by hsv_l and hsv_h is not good? I took it from here: OpenCV & Python -- Can't detect blue objectsAny help is appreciated. Thanks.
The problem is that you are not reading the documentation of inRange :DWhich tells the following:That is, dst (I) is set to 255 (all 1 -bits) if src (I) is within the  specified 1D, 2D, 3D, ... box and 0 otherwise.and you check for 1So the solution is to change it to:I tested it with your image and returns true, also with a black and white image (BGR though) and returns false.In my opinion the blue ranges you have chosen are a little far to the violet side... You may use a hsv colorpicker like this one http://colorizer.org/ and select the ranges you will like. Just rememeber OpenCV uses H -> Hue / 2 and  S and V are like percentages (0-100) and you just divide them by 100 (0-1.) and multiply them by 255.  
You could have just used np.any() instead. It will return True if any one pixel has a value of 255.So instead of return 1 in cv2.inRange(hsv, hsv_l, hsv_h),you can just add the following:return np.any(cv2.inRange(hsv, hsv_l, hsv_h))Update:As @AKX mentioned in the comments you could rather try out the following:return cv2.inRange(hsv, hsv_l, hsv_h).any()


Answer URL
https://docs.python.org/3/library/functions.html#any
