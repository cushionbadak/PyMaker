Natural Text
I'm maintaining some mappings that I need to continually update.These mappings are implemented as pickle serialized dicts right now.The update process is like this:Load the pickle file into memory, so that I have access to the dictDo any update to the dict and serialize it again.The problem with this solution is it could consume a lot of memory for large dicts.I've looked into other solutions like shelve and leveldb, but they could both generates many files instead of one, which is more complex to save to systems like key-value storage.
To read and modify your mappings without reading the entire map into memory, you'll need to store it as an indexed structure in some sort of database. There are lots of databases with good Python bindings that store the data on disk as a file, so that you don't have to worry about database servers or separate index files. Sqlite is almost certainly the most common choice. However, as you pointed out in the comments, the full functionality of an SQL database is probably unnecessary for your purpose, since you really only need to store key-value pairs. Based on your particular requirements, then, I'd probably recommend vedis. It's a single-file, key-value database which can support very large database sizes (the documentation claims it can handle on the order of terrabytes), which is transactional and thread-safe to boot.


Answer URL
https://docs.python.org/3/library/sqlite3.html
https://docs.python.org/3/library/sqlite3.html
