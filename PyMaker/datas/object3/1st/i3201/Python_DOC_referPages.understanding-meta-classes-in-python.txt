Natural Text
I am trying to learn metaclasses in python, from my research i found a example like follow.i have a Base and Derived classes like follownow, when i want to make sure that whoever extending Base class, must need to implement bar() method, so i created the meta class to hook the constuction of derived class,so now Base class looks like follow with BaseMeta meta class.The problem is when i get looks into body it returns 2 records for Base and Derived class,  like follow.my code in __new__ breaks since Base not have  bar, but i want to check only in the Derived class so i rewrite my metaclass like follow.I am checking name != Base in my __new__ method. Is that the right way to do it or we can use some other best way?
You can use the abc module in the stdlib, which has tools for doing exactly this.https://docs.python.org/3/library/abc.htmlAnother strategy would be to have a bar method on your Base class that raises a NotImplementedError.  The main difference is that no error is raised until you actually call something that requires bar. e.g.


Answer URL
https://docs.python.org/3/library/abc.html
https://docs.python.org/3/reference/datamodel.html#customizing-class-creation
