Natural Text
I tried to do a very simple metronome that is working at 30 bpm:Then, I turned on a metronome app on my phone together with the beep in the computer, and it became less precise as the time went on.Is there another way to do the "time.sleep()"? Is it even the "time.sleep()" guilt?
This is difficult to do on a multitasking operating system: it's not easy for the system to give you the exact sleep delay that you request. See How accurate is python's time.sleep()? for details. But we can get fairly close by measuring the time span and adjusting the sleep delay. Python 3.3+ provides time.perf_counter, which is supposed to be pretty good at measuring time intervals, although the exact precision depends on your OS and hardware.Here's a simple demo that just prints the difference between the requested and the measured time delay for each tick. The initial outputs are a bit sloppy, but it soon settles down to giving ticks that are within 10 microseconds of the requested interval. However, playing a sound takes more system resources than printing to the terminal, and that may impact the precision of this technique. For best results, minimize the task load on your machine, especially if it's single core.I've set the delay here to 0.2 seconds = 300 bpm. Slower beat rates may give less precision because there's more time during each sleep cycle for the CPU to do other tasks that may cause the sleep to be a little longer than requested.typical outputThese results are from an old single core 32 bit 2GHz machine running Linux, YMMV.


Answer URL
https://docs.python.org/3/library/time.html#time.perf_counter
