Natural Text
I have a list containing a number of strings. Some of the strings are repeated so I want to count how many times they are repeated. For the singular strings I will only print it, for the repeating strings I want to print the number of duplications it has. the code is as follows:However it has some problems as it is printing all the instances of the repeated strings. For example, if there are two "hello" strings in the list, it will print hello appeared 2 for twice. So is there a way to skip to check all the instances of the repeated strings? Thanks for help. 
list.count in a loop is expensive. It will parse the entire list for each word. That's O(n2) complexity. You can loop over a set of words, but that's O(m*n) complexity, still not great.Instead, you can use collections.Counter to parse your list once. Then iterate your dictionary key-value pairs. This will have O(m+n) complexity.
Use setEx:
Use a CounterTo create:To display:
You can use python's collections.counter like so -Another way to do this manually is:Also, you should not name your list as list as its python's inbuilt type. Now both the methods will give you dicts like - Where keys are the unique values from your list and values are how many time a key has appeared in your list


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
