Natural Text
what I want to do... I have a module called 'my_library.py' which contains some functions or methods. I have another module called 'test_library.py' and from test_library I want to print source code of some specific functions which is inside "my_library" module I know we can do it using.... print(inspect.getsource(my_library.add)) or print(open(my_library.__file__).read()) here, i want to take the function or module name from the user as an input example : TypeError: module, class, method, function, traceback, frame, or code object was expected, got strI have tried to convert that string input into object, file, class ...nothing seems to work is there any way to take the input from a user and show that specific function or module?any suggestions or advice to solve the problem?thanks in advance
You need to create an actual object to pass to get_source, e.g.:You can generate them from strings by using eval on the strings, e.g.:Gives:
Say we had a file module.py:We can resolve this member for use by getsource() from another region of code by getting a reference to the function object:You could also extend this to retrieve members of modules that haven't yet been imported using importlib


Answer URL
https://docs.python.org/3/library/importlib.html
