Natural Text
I have a program with a main script (main.py) and a few modules (mod1.py, mod2.py, etc.).In main.py, I configured a root logger to write messages in my terminal and in a file.And in other modules, I use the standard idiom:All is working fine and for each line in my log file, I know which module it originated from. For example, my log file contains something like:But now, I wish to log some very specific messages in a separate file. I don't want it to pollute my existing log file and I still want to know messages origins (I guess I have to keep a root logger).ie. I don't want to filter by level (debug, info, error, etc.), but I want to filter by some kind of category.How do I achieve that ?Just for the record, my init_logger function, but I'm not sure it's relevant:
If you want to keep the same structure, you can create two file loggers and assign a different filter to each of them. The root logger would filter out the very specific messages while the other logger would only consider those same messages. What matters the most, then, is based on what would you want to filter. Assuming it's the content, it would be as simple as creating a filter:Then when you're setting up your logging make sure that one file logger has a ContentFilter set to filter in, while the other has it set to filter out and everything should work just fine. For example:And once set up, you can test it as:Which would result in two files being created, log1.log containing:And log2.log containing:Effectively redirecting individual log messages to different files based on their content (or lack thereof).


Answer URL
https://docs.python.org/3/howto/logging-cookbook.html#logging-to-multiple-destinations
