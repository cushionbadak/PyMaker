Natural Text
This doesn't seem to work, I get syntax error, what is the proper way of doing this for logging all kind of exceptions to a file
You have to define which type of exception you want to catch. So write except Exception, e: instead of except, e: for a general exception (that will be logged anyway).Other possibility is to write your whole try/except code this way:in Python 3.x and modern versions of Python 2.x use except Exception as e instead of except Exception, e:
The syntax is no longer supported in python 3. Use the following instead.
Updating this to something simpler for logger (works for both python 2 and 3). You do not need traceback module.This is now the old way (though still works):exc_value is the error message.
There are some cases where you can use the e.message or e.messages.. But it does not work in all cases. Anyway the more safe is to use the str(e) 
You can use logger.exception("msg") for logging exception with traceback:
After python 3.6, you can use formatted string literal. It's neat! (https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498)
If you want error class, error message and stack trace (or either of them), use sys.exec_info().Minimal working code with some formatting,Which will give out following output,sys.exec_info()This gives you the exception details about most recent exception. It return a tuple.  Following are the tuple values (type, value, traceback).traceback is an instance of traceback object. You can format the trace with provided methods. More can be found from traceback documentation 
You can try specifying the BaseException type explicitly. However, this will only catch derivatives of BaseException. While this includes all implementation-provided exceptions, it is also possibly to raise arbitrary old-style classes.
Use str(ex) to print execption


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
https://docs.python.org/3/library/exceptions.html#exception-hierarchy
