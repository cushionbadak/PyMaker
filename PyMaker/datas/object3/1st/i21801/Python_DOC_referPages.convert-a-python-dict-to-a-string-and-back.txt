Natural Text
I am writing a program that stores data in a dictionary object, but this data needs to be saved at some point during the program execution and loaded back into the dictionary object when the program is run again.How would I convert a dictionary object into a string that can be written to a file and loaded back into a dictionary object? This will hopefully support dictionaries containing dictionaries.
The json module is a good solution here. It has the advantages over pickle that it only produces plain text output, and is cross-platform and cross-version.
If your dictionary isn't too big maybe str + eval can do the work:You can use ast.literal_eval instead of eval for additional security if the source is untrusted.
I use json:
Use the pickle module to save it to disk and load later on.
If in Chinses
Why not to use Python 3's inbuilt ast library's function literal_eval. It is better to use literal_eval instead of evalwill give output as actual DictionaryAnd If you are asking to convert a Dictionary to a String then, How about using str() method of Python. Suppose the dictionary is : And this will be done like this : Will Print : This is the easy as you like.
I think you should consider using the shelve module which provides persistent file-backed dictionary-like objects. It's easy to use in place of a "real" dictionary because it almost transparently provides your program with something that can be used just like a dictionary, without the need to explicitly convert it to a string and then write to a file (or vice-versa). The main difference is needing to initially open() it before first use and then close() it when you're done (and possibly sync()ing it, depending on the writeback option being used). Any "shelf" file objects create can contain regular dictionaries as values, allowing them to be logically nested.Here's a trivial example:Output:
I use yaml for that if needs to be readable (neither JSON nor XML are that IMHO), or if reading is not necessary I use pickle.WriteRead back
use conventional methods rather than libraries, which are simple. This worked for me


Answer URL
https://docs.python.org/3/library/json.html
