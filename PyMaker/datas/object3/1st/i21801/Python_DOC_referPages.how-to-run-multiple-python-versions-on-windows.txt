Natural Text
I had two versions of Python installed on my machine (versions 2.6 and 2.5). I want to run 2.6 for one project and 2.5 for another. How can I specify which I want to use?I am working on Windows XP SP2.
Running a different copy of Python is as easy as starting the correct executable. You mention that you've started a python instance, from the command line, by simply typing python. What this does under Windows, is to trawl the %PATH% environment variable, checking for an executable, either batch file (.bat), command file (.cmd) or some other executable to run, that matches the name given. When it finds the correct file to run, it does it.Now, if you've installed two python versions 2.5 and 2.6, the path will have both of their directories in it, something like PATH=c:\python\2.5;c:\python\2.6 but Windows will stop examining the path when it finds a match.What you really need to do is to explicitly call one or both of the applications, such as c:\python\2.5\python.exe or c:\python\2.6\python.exe.The other alternative is to create a shortcut to the respective python.exe calling one of them python25 and the other python26; you can then simply run python25 on your command line.
Adding two more solutions to the problem:Use pylauncher (if you have Python 3.3 or newer there's no need to install it as it comes with Python already) and either add shebang lines to your scripts;#! c:\[path to Python 2.5]\python.exe - for scripts you want to be run with Python 2.5#! c:\[path to Python 2.6]\python.exe - for scripts you want to be run with Python 2.6or instead of running python command run pylauncher command (py) specyfing which version of Python you want;py -2.6 – version 2.6py -2 – latest installed version 2.xpy -3.4 – version 3.4py -3 – latest installed version 3.x  Install virtualenv and create two virtualenvs;virtualenv -p c:\[path to Python 2.5]\python.exe [path where you want to have virtualenv using Python 2.5 created]\[name of virtualenv]virtualenv -p c:\[path to Python 2.6]\python.exe [path where you want to have virtualenv using Python 2.6 created]\[name of virtualenv]for examplevirtualenv -p c:\python2.5\python.exe c:\venvs\2.5virtualenv -p c:\python2.6\python.exe c:\venvs\2.6then you can activate the first and work with Python 2.5 like thisc:\venvs\2.5\activateand when you want to switch to Python 2.6 you do  
From Python 3.3 on, there is the official Python launcher for Windows (http://www.python.org/dev/peps/pep-0397/). Now, you can use the #!pythonX to determine the wanted version of the interpreter also on Windows. See more details in my another comment or read the PEP 397.Summary: The py script.py launches the Python version stated in #! or Python 2 if #! is missing. The py -3 script.py launches the Python 3.
As per @alexander you can make a set of symbolic links like below.  Put them somewhere which is included in your path so they can be easily invokedAs long as c:\bin or where ever you placed them in is in your path you can now go
When you install Python, it will not overwrite other installs of other major versions. So installing Python 2.5.x will not overwrite Python 2.6.x, although installing 2.6.6 will overwrite 2.6.5.So you can just install it. Then you call the Python version you want. For example:for Python 2.5 on windows andfor Python 2.6 on windows, or or on Windows Unix (including Linux and OS X).When you install on Unix (including Linux and OS X) you will get a generic python command installed, which will be the last one you installed. This is mostly not a problem as most scripts will explicitly call /usr/local/bin/python2.5 or something just to protect against that. But if you don't want to do that, and you probably don't you can install it like this:Note the "altinstall" that means it will install it, but it will not replace the python command.On Windows you don't get a global python command as far as I know so that's not an issue.
Here's a quick hack:Go to the directory of the version of python you want to runRight click on python.exeSelect 'Create Shortcut'Give that shortcut a name to call by( I use p27, p33 etc.)Move that shortcut to your home directory(C:\Users\Your name)Open a command prompt and enter name_of_your_shortcut.lnk(I use p27.lnk)
cp c:\python27\bin\python.exe as python2.7.execp c:\python34\bin\python.exe as python3.4.exethey are all in the system path, choose the version you want to run
The easiest way to run multiple versions of python on windows is described below as follows:-1)Download the latest versions of python from python.org/downloads by selecting the relevant version for your system.2)Run the installer and select Add python 3.x to the path to set path automatically in python 3 (you just have to click the checkbox). For python 2 open up your python 2 installer, select whatever preferences you want but just remember to set Add python.exe to path to Will be installed on local hard drive, Now just click next and wait for the installer to finish.3)When both the installations are complete. Right click on my computer--Go to properties--Select advanced system settings--Go to environment variables--Click on new under System variables and add a new system variable with variable name as PY_PYTHON and set this variable value to 3. Now click on OK and you should be done.4)Now to test this open the command prompt. Once you are in there type python or py, It should open up python3.5)Now exit out of python3 by typing exit(). Now type py -2 it should open python 2.If none of this works then restart the computer and if the problem still persists then uninstall everything and repeat the steps.Thanks.
install pythonC:\Python27C:\Python36environment variablePYTHON2_HOME: C:\Python27PYTHON3_HOME: C:\Python36Path: %PYTHON2_HOME%;%PYTHON2_HOME%\Scripts;%PYTHON3_HOME%;%PYTHON3_HOME%\Scripts;file renameC:\Python27\python.exe → C:\Python27\python2.exeC:\Python36\python.exe → C:\Python36\python3.exepippython2 -m pip install packagepython3 -m pip install package
Using a batch file to switch, easy and efficient on windows 7. I use this:In the environment variable dialog (C:\Windows\System32\SystemPropertiesAdvanced.exe),In the section user variablesadded %pathpython% to the path environment variableremoved any references to python pathes In the section system variablesremoved any references to python pathes I created batch files for every python installation (exmple for 3.4 x64Name =          SetPathPython34x64  !!!  ToExecuteAsAdmin.bat     ;-) just to remember.Content of the file = To switch between versions, I execute the batch file in admin mode.  !!!!!  The changes are effective for the SUBSEQUENT command prompt windows OPENED. !!!So I have exact control on it.
For example for 3.6 version type py -3.6.  If you have also 32bit and 64bit versions, you can just type py -3.6-64 or py -3.6-32.
Using the Rapid Environment Editor  you can push to the top the directory of the desired Python installation. For example, to start python from the c:\Python27 directory, ensure that c:\Python27 directory is before or on top of the c:\Python36 directory in the Path environment variable. From my experience, the first python executable found in the Path environment is being executed. For example, I have MSYS2 installed with Python27 and since I've added C:\MSYS2 to the path before C:\Python36, the python.exe from the C:\MSYS2.... folder is being executed.
Just call the correct executable


Answer URL
https://docs.python.org/3/using/windows.html#launcher
