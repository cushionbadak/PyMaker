Natural Text
Is there any way to make the computer a Python program is running on restart? Generic solution is good, but in particular I'm on windows.
There is no generic way of doing this, afaik.For Windows, you need to access the Win32 API. Like so:The win32api module is a part of pywin32.For linux/os x, I guess calling the "reboot" command is the easiest.Or something like that.(Note to downvoters: os.system() has not been deprecated. The text is "The subprocess module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function." For simple cases like this, when you aren't interested in retrieving the results, nor in multiprocessing, os.system() works just fine).
Why don't you just call the shutdown command using subprocess?
You could reboot a Windows system by using: os.system("shutdown -t 0 -r -f") Example:Change the number in front of -t to change the number of seconds before shutdown.
There is nothing in the standard library that would directly allow you to do this, and I am unaware of any modules that provide a cross platform method, but if you are on Windows and don't want to install anything (like the win32api) then you could use ctypes default module and interact with the WinAPI directly.You could use the ExitWindowsEx() function to restart the computer (it is almost the same as my other answer How to shudown a computer using Python; however the hexadecimal value has to be changed to restart and not shutdown).Process:First you need ctypes:Next get the user32.dll as described in the documentation:DLL | User32.dllSo:Next you need to call the ExitWindowsEx() function and insert the correct hexadecimal values:The first argument (0x00000002) shuts down the system and then restarts (see documentation).The second argument (0x00000000) gives a reason to be logged by the system.  A complete list can be found hereComplete Code:About os.system() method on Windows: The win32api or ctypes answers both will execute silently.  os.system("shutdown -t 0 -r -f") will leave a message saying "You are about to be signed out in less than a minute" which may be undesirable in some cases.A file alongside the script called shutdown.bat/shutdown.exe/shutdown.cmd will cause the command shutdown -t 0 -r -f to break, calling that file and not the system command.  The same goes for described wmic.exe above.As a side note: I built WinUtils (Windows only) which simplifies this a bit, however it should be faster (and does not require Ctypes) since it is built in C.Example:


Answer URL
https://docs.python.org/3/library/ctypes.html
