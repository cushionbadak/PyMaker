Natural Text
In my Python app I want to make a method that is both a staticmethod and an abc.abstractmethod. How do I do this?I tried applying both decorators, but it doesn't work. If I do this:I get an exception*, and if I do this:The abstract method is not enforced.How can I make an abstract static method?*The exception:

Starting with Python 3.3, it is possible to combine @staticmethod and @abstractmethod, so none of the other suggestions are necessary anymore:
This will do it:You go "Eh? It just renames @abstractmethod", and this is completely correct. Because any subclass of the above will have to include the @staticmethod decorator anyway. You have no need of it here, except as documentation when reading the code. A subclass would have to look like this:To have a function that would enforce you to make this method a static method you would have to subclass ABCmeta to check for that and enforce it. That's a lot of work for no real return. (If somebody forgets the @staticmethod decorator they will get a clear error anyway, it just won't mention static methods. So in fact this works just as well:Update - Another way to explain it:That a method is static controls how it is called.An abstract method is never called.And abstract static method is therefore a pretty pointless concept, except for documentation purposes.
This is currently not possible in Python 2.X, which will only enforce the method to be abstract or static, but not both.In Python 3.2+, the new decoratorsabc.abstractclassmethod and abc.abstractstaticmethod were added to combine their enforcement of being abstract and static or abstract and a class method.See Python Issue 5867


Answer URL
https://docs.python.org/3/library/abc.html#abc.abstractmethod
https://docs.python.org/3/library/abc.html#abc.abstractstaticmethod
