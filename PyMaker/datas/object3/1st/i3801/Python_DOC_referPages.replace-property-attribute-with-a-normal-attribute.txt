Natural Text
Is it possible to replace a property of an object with 'normal' attribute?I need this because when I access the attribute for the first, I want the value to be generated by the property. But I no longer need the property afterward:I know I can store the value in a second attribute like _xand check in the property if _x exist but I want to know if it's possible the replace the property itself.
To bypass the lack of a setter, you'd have to directly manipulate the instance __dict__ dictionary. However, you can't do what you want with a regular property object, because it is a data descriptor. Attribute access will always give a data descriptor priority over instance attributes.You'd have to create a custom descriptor instead, one that doesn't define a __set__ or __delete__ method:This descriptor also takes care of setting the value directly in the instance __dict__ attribute, thus creating an instance attribute.Use the above class instead of property:Demo, showing that the getter method is only called once:


Answer URL
https://docs.python.org/3/howto/descriptor.html#descriptor-protocol
