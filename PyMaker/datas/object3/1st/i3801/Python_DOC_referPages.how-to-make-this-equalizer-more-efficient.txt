Natural Text
So I have been working on making an equalizer and the problem I am facing is that the pyaudio stream is streaming much faster than the speed with which the eq. is finding the bass component of the audio file. I will briefly outline the implementation:I have created two extra threads and have used tkinter for the gui. Thread 1 computes the bass component (fn bass() ) of the sound in chunks of 50ms data.Thread 2 plots that by actually creating a rectangle in tkinter with varying top left coordinates.flag2 keeps the main thread running, while flag synchronizes the bass() and plot() functions. The last part of the code is to ensure that the display doesn't go faster than the song itself( however the exact opposite is the concern right now).I am attaching the code here:To overcome this processing speed problem, I tried to process 1 in every 3 chunks:But this even this is not up to the mark. The lag is visible after a few seconds. Any ideas on how to improve this?
Instead of efficiency, a more realistic solution might be delay matching.  If you can determine the latency of your FFT and display (etc.) processes, the you can either delay sound output (using a fifo of some number of audio samples), or have the visualization process look ahead in the playback file read by the equivalent number of samples.


Answer URL
https://docs.python.org/3/library/threading.html#event-objects
