Natural Text
I have a column in a dataset that looks like the above. Using the first row as an example, the information I'd like to be left with is one column containing 955563, and one column containing G>C. I've played around with a couple of regular expressions I've found here but haven't found one that does the trick.
The following works for your example:If the last "column" always has the A>A structure, where A is a single letter, then you can be more specific with:
:.*\. looks for : and any character (since your example has both 'g' and 'm') up to the period before the area we want to capture.First Group: (\d+) matches 1 or more digits.Second Group: (\w>\w) matches word character followed by > followed by word character
This is one way without regex. Note this solution uses formatted string literals from Python 3.6 (PEP 498).


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals
