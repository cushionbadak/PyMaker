Natural Text
I have several Python classes I use for calling C-code, using c-types. The return struct looks something like the below example.The values array is fixed size to ease the call to C (using a variable size array here is not an option). The "actual" length of the array is controlled by the n_values variable. For instance if values is an array of three numbers, say 1, 2 and 3,values=[1, 2, 3, 0, 0] and n_values=3.This is all fine. The problem is when i implement __len__ and __getitem__.I want to be able to write code like thisBut the iterator does not seem to "get" that the values-array is only n_values long. I.e. it does not seem to use MyCClass.__len__ to halt the iteration. Instead it seems to iterate over the full length of values.I want I know I can code but that is not what I want.Does anybody know how to fix this?
With the old-school iterator types, the only way is to raise an IndexError:For a cleaner solution, consider using the more modern iteration protocol, i.e. returning an iterator instance from an __iter__ method defined on your iterable.  That's documented here.


Answer URL
https://docs.python.org/3/library/stdtypes.html#iterator-types
