Natural Text
Let's say I have a (simplified) class as below. I am using it for a program configuration (hyperparameters).I'd like to save this configuration and restore later. The member functions must be out of concern when restoring.1. When I tried pickle:I saw a solution using class_def of Config, but I wish I can restore the configuration without knowing the class definition (eg, export to dict and save as JSON)2. I tried to convert class to dict (so that I can export as JSON)In both cases, it was difficult to access attributes. Is it possible?
The question's title is "how to convert python class to dict", but I suspect you are really just looking for an easy way to represent (hyper)parameters.By far the easiest solution is to not use classes for this. I've seen it happen on some machine learning tutorials, but I consider it a pretty ugly hack. It breaks some semantics about classes vs objects, and the difficulty pickling is a result from that. How about you use a simple class like this one:It can do everything the class approach can. Predefined configs are then just objects you should copy before editing, as follows:Or alternatively in one step:Works fine with pickle (although you will need to have the Params class somewhere in your source), and you could also easily write load and save methods for the Params class if you want to use JSON.In short, do not use a class for something that really is just an object.
Thankfully, @evertheylen's answer was great to me. However, the code returns error when p.__class__ = Params, so I slightly changed as below. I think it works in the same way.and you can do 


Answer URL
https://docs.python.org/3/library/pickle.html#pickling-class-instances
