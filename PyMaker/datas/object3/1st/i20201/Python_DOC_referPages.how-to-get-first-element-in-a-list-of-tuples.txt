Natural Text
I have a list like below where the first element is the id and the other is a string:I want to create a list of ids only from this list of tuples as below:I'll use this list in __in so it needs to be a list of integer values.

Use the zip function to decouple elements:Edit (@BradSolomon):The above works for Python 2.x, where zip returns a list.In Python 3.x, zip returns an iterator and the following is equivalent to the above:
do you mean something like this?What you actually have is a list of tuple objects, not a list of sets (as your original question implied).  If it is actually a list of sets, then there is no first element because sets have no order.Here I've created a flat list because generally that seems more useful than creating a list of 1 element tuples.  However, you can easily create a list of 1 element tuples by just replacing seq[0] with (seq[0],).
You can use "tuple unpacking":At iteration time each tuple is unpacked and its values are set to the variables idx and val. 
This is what operator.itemgetter is for. The itemgetter statement returns a function that returns the index of the element you specify. It's exactly the same as writingBut I find that itemgetter is a clearer and more explicit. This is handy for making compact sort statements. For example,
From a performance point of view, in python3.X[i[0] for i in a] and list(zip(*a))[0] are equivalentthey are faster than list(map(operator.itemgetter(0), a))Codeoutput3.491014136001468e-053.422205176000717e-05
if the tuples are unique then this can work
when I ran (as suggested above):instead of returning:I received this as the return:I found I had to use list():to successfully return a list using this suggestion. That said, I'm happy with this solution, thanks. (tested/run using Spyder, iPython console, Python v3.6)
Those are tuples, not sets. You can do this:


Answer URL
https://docs.python.org/3/library/operator.html#operator.itemgetter
