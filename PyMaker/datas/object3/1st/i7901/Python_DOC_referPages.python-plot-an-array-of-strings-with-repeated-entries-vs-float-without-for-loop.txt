Natural Text
Hi I am trying to plot a numpy array of strings in y axis, for examplevs a float array with equal length. The string array I am working with is very large ~ 100 million entries. One of the solutions I had in mind was to convert the string array to unique integer ids, for example,and then matplotlib.pyplot.plot(arrId). But I cannot afford to run a for loop to convert the array of strings to an array of unique integer ids. In an initial search I could not find a way to map strings to an unique id without using a loop. Maybe I am missing something, but is there a smart way to do this in python?EDIT - Thanks. The solutions provided use vocab,ind = np.unique(arr, return_index = True) where idx is the returned unique integer array. But it seems like np.unique is O(N*log(N)) according to this ( numpy.unique with order preserved), but pandas.unique is of order O(N). But I am not sure how to get ind from pandas.unique. plotting data i guess can be done in O(N). So I was wondering is there a way to do this O(N)? perhaps by hashing of some sort?
numpy.unique used with the return_inverse argument allows you to obtain the inverted index.such that unique[rev] returns the original array ['a' 'a' 'bas' 'dgg' 'a'].This can be easily used to plot the data.
you can factorize your strings:
You can use the numpy unique funciton to return a unique array of values?collections.counter also return the value and number of counts:Does this help at all?


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
