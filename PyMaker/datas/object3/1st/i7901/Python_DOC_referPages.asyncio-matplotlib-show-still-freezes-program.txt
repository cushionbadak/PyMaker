Natural Text
I wish to run a simulation while at the same time output its progress in a plot. I've been looking through a lot of examples of threading and multiprocessing, but they are all pretty complex. So I thought with Python's new asyncio library this should be easier.I found an example (How to use 'yield' inside async function?) and modified it for my cause:QuestionI added a simple plt.show() and the program still freezes. I thought with asyncio I could run it in parallel? Obviously my knowledge is still lacking.An example that does the following would be really helpful:Add a line to a plot (of matplotlib) everytime async_generator returns a value.
First of all, I misunderstood asyncio, it doesn't make run things in parallel (use asyncio for parallel tasks).It seems the only thing that worked for me was plt.pause(0.001) (Plotting in a non-blocking way with Matplotlib). plt.draw() opened a window, but it didn't show anything and plt.show freezes the program. It seems that plt.show(block=False) is deprecated and using plt.ion gives the problem that the final result closes when the program is finished. Also await asyncio.sleep(0.1) didn't make the plot draw a line.Working codeNotesYou get however a deprecated message: python3.6/site-packages/matplotlib/backend_bases.py:2445: MatplotlibDeprecationWarning: Using default event loop until function specific to this GUI is implementedwarnings.warn(str, mplDeprecation), which you can suppress with: warnings.filterwarnings().I'm not sure if asyncio was actually necessary for my use case...Difference between threading and multiprocessing for who's interested: Multiprocessing vs Threading Python


Answer URL
