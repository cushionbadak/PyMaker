Natural Text
In reference to this question:python: Two modules and classes with the same name under different packagesShould all modules in a package be uniquely named, regardless of nesting? PEP8 and PEP423 do not seem to address this.
No, there is no requirement that names at different levels must be different. Each level is a separate namespace. If foo.utils and foo.bar.utils make sense in your project, just do so.For example, the Python standard library has email.message and email.mime.message, and multiprocessing.connection, as well as multiprocessing.dummy.connection, and many more:That's all modules that appear inside packages, appear more than once, excluding tests, __init__.py and __main__.py.
Since package is based on the filesystem, you can not, in normal circonstance, have the same packages because files/directories have no duplicate.You can have the same namespace package, of course.It is also possible to have the same package/module name in different paths. They are searched in order, so the first win.


Answer URL
https://docs.python.org/3/library/email.message.html
https://docs.python.org/3/library/email.mime.html?highlight=email.mime.message#email.mime.message.MIMEMessage
https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.connection
https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.dummy
