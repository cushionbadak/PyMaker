Natural Text
Lets say I have a list of tuples like belowI want to create three variables or lists such as I want to do this using List comprehensions. My count is a result of a map function. I want to assign the values to three different pandas columns as a , b and c. Suggestions?
You don't need list comprehension to achieve this. Python has builtin zip function to unpack the list based on index of the list elements as:
Here you go:Note the nested comprehension - here's a good resource describing how they work.
There are lots of approaches. If you're intending to work with tabular data, consider using pandasnow, in a python shell, df will look like:The first column there is the index, essentially a primary key on the table. To recover any of the lists, you would simply doWhich produces a Series type, where the values have type int64:again, the first column shown is the index (zero indexed like a normal python list).And you can access the values from the Series in a familiar fashion:Finally, if you need to get a list back, you can simply doand so forth.
If for some reason you want to create variables dynamically, you can update globals() as follows:
If working with numpy:OutputsAnd of course, we may unpack the 3x2 array into a, b, and c:


Answer URL
https://docs.python.org/3/library/functions.html#zip
