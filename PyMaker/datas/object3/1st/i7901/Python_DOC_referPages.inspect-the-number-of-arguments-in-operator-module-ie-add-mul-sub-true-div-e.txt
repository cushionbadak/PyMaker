Natural Text
I'm trying to figure out how to use inspect like so:however I get the following error:I found a similar thread on this here, however this was a long time ago and the issues have all been marked duplicate and state that they would like to be able to give the C functions a signature definition that would allow the behavior specified in that post, back before 3.4.  The non duplicate page is here.  However, despite this, it looks like some C functions are still not inspectable as of 3.6.1.  This doesn't make much sense for operator.add() however, since that doesn't seem like it should delegate to a C function, and even if it did, would be a use case for the previous signature behavior the python bug report brought up earlier (so it confuses me why I can't use inspect.signature for an operator.add.I'm not looking for 1:1 mapping of args to functions, that simply doesn't work with my setup, which doesn't just include operator functions or builtin, but any function.  I also know I could wrap the functions in another function, however in a general case this means that for each function that has this issue i would need to make a personal wrapper for inspect.signature() to work. I would like to know if what I describe above is possible/ a minimal workaround (say a generalized wrapper where signature of the wrapper would match the signature of the function it wraps in terms of number of arguments), and if not, why not. 
This doesn't make much sense for operator.add() however, since that doesn't seem like it should delegate to a C functionWell, it does.It looks like the current dev branch has changed the _operator module to use Argument Clinic instead of the heavily macro-based implementation from 3.6 and earlier, so inspect.signature will probably work on 3.7. Until then, though, you're stuck with very little introspection.
I am somewhat ashamed of this. But waiting for 3.7 was not an option. It works okayish. Of course it is a brutish hack.


Answer URL
https://docs.python.org/3/library/inspect.html
