Natural Text
I'm trying to write a binary translator - with a string as an input and its binary representation as output.And I'm having some difficulties, I wrote in variable the translation for each letter, but they are variables, not strings, so I want to take an input from that matches with the name of the variable and prints the result:When I run this I enter a word and it just returns the same word to me but when I write print(a) it returns 01000010 but I can't get it to work with the input.Can someone tell me where I'm doing something wrong?
Following the comments of the users, is a better practice of programming using a dictionary for these cases, you just only have to fill in the dictionary letterToBin as you can see in the exampleThis is a dictionary, wich means it will have a key, and a value, like a cell phone, you have the key as a name (your mother) and the value (his cellphone):
Probably the more correct solution is to use a dictionary instead of names of letters as names of variables:(I also corrected the ASCII codes - yours were for capital letters.)The explanation(for the longest statement):"Use "" as delimiter (i.e. no delimiter) to join all items in the list of translated letters where letters are gotten one after other from the text".So the result will be the same as if you used these commands:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
