Natural Text
My structure is like soInside of b.py I want to import a.pySo inside of b.py I have However the error I'm receiving is "ImportError: No module named 'App'"I've also tried relative importing with .. but thats not working either. I would also like to know if I shouldn't put the files in seperate directories like that. It was really for organization. Or should I move them out of the app and place the folders in the same directory as manage.py?Would really love some help with this. Been trying all day. sys.path outputThank you everyone for all of the help. Is there maybe something I didnt do when I set up my server? I read the docs and it seems like this import should work without appending any paths...
I believe when I've done this, I usually had to do it like this:where the root of my application would be the App directory.
You are mentioning manage.py, are you using django perhaps ? Anyway if you are running a script from dirB you will get an error but if you have structure like this:and in main.py you have from App.dirB import band in b.py you have from App.dirA import a or from ..dirA import a you should be ok. In any other case you should probably add ../ ( or absolute path of it ) to your PYTHONPATH but I think it's not a very good idea.
Parent of the App directory should be in PYTHONPATH (or sys.path). If App directory resides in /home/dorian/mega_project, then PYTHONPATH should contain /home/dorian/mega_project.
Edit: I misunderstood the question!Can you verify /App is a nested directory of a directory on your module search path?In an interactive session, import sys, and type sys.path. The first entry is the CWD or the directory of the top-level program file. If you don't see a directory there leading up to /App, you'll need to add it, as Python searches this list left-to-right when you're importing a package to find the directory that is its parent. You can either edit the PYTHONPATH environment variable, or create a .pth text file and simply type in the directory leading up to it (i.e., /home/user/Documents/code') and put that in your installation directory for Python, or your site-packages folder.Once that's done, when you check sys.path you'll see, for example, '/home/user/Documents/code'. And /Apps should be within the code folder in this example.


Answer URL
https://docs.python.org/3/tutorial/modules.html
https://docs.python.org/3/tutorial/modules.html
