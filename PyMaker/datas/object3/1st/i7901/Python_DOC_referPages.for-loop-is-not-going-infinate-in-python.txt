Natural Text
Why this for loop is not infinite, Here looping on a list and redefine the list inside the loop
Roughly speaking, the loop is not infinite because the iterator that i is bound to is bound when the code execution reaches the for . . . in loop.  After that, all successive calls are to iter.next() which will move the existing iterator to the next position regardless of any subsequent redefinition of a.  Recall that arrays have a built in function called __iter__ (or iter).  Then, your for loop is equivalent to :Note that in the equivalent code above, any changes to a don't affect i since i is already bound to an iterator looping over the first [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ].You can observe this by changing the first value of a:note that a = [ 5, 4, 3, 2, 1 ] doesn't change the existence of the [ 1, 2, 3, 4 ] from the first line since that array already exists in memory.  The subsequent calls each allocate a new array and assign it to a. 
Since a is not being modified (you are just setting it to the same value), the for loop proceeds as expected. What you are expecting is for the for loop to restart when a is reassigned, but this does not happen. Instead, to make it infinite, try:
I don't know, why you need this, but this might help youuse this tool to see what happens in your code. 
You can even modify not only the content of the list but event the value of the variable and you will have the same result.In the for the values are loaded so any modification inside the loop will not be taken into consideration.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#for
