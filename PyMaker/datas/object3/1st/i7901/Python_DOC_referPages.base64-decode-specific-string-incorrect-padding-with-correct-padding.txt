Natural Text
I am trying to Base64 decode a string (into bytes) using Python's base64.b64decode(str) method:46oWrWpy2gTEGwNnN6Ayyand I am ensuring it has a multiple of 4 ='s for padding or out of frustration any of these:46oWrWpy2gTEGwNnN6Ayy=46oWrWpy2gTEGwNnN6Ayy==46oWrWpy2gTEGwNnN6Ayy===46oWrWpy2gTEGwNnN6Ayy==================================================and yet I still get "Incorrect Padding" on Python v3.6.1. Other strings are fine.I show a colleague, he tries on Python 2 and observes the same response.I note removing the first "4" is enough to ensure the Base64 decode works.I have skim read Python's docs (noting casefold doesn't apply for Base64) and haven't yet ventured further into RFC3548 but wondered if someone else had encountered something similar before. Anyone have any clues :)? Surely this can't be a bug in Python's Base64 decoder?
Worked it out.Each character of Base64 text is 6 bits of the raw's 8 bits. If a character is mid-way through the raw's bytes then you are missing some remaining bits. The Wikipedia article (and many online answers) seems to use padding as interchangeable for a '0' byte which is not the case (in the Base64 dictionary it should be encoded as an A).Padding is not interchangeable for missing data.
Seems to be a problem in your data, not related to Python:I managed to decode it this way (removed the last 'y'):


Answer URL
https://docs.python.org/3/library/base64.html
