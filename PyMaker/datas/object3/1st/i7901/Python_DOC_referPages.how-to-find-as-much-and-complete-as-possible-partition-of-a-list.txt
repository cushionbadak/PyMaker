Natural Text
For example:It is easy to get the combination of 5 and 8 in list2 by using powerset function8 can be comprised of [4,4] or [2,6],  but 5 can only be comprised of [2,3]. If I choose [2,6] for 8 , there is no combination for 5 in list2.How can I get [4,4] for 8 and [2,3] for 5?  I want to choose as much as possible combinations in list2 for the numbers in list1. Actually the numbers in list1 may be comprised of 3 or more numbers in list2.The actual problem is more difficult, because may be there are some numbers not used in list1 and the numbers in list1 may be comprised of 3 or more numbers.
I think this does what you want:It tries to create every possible addition and if it's contained in the first list, output it.Output:
Here is a concise and efficient way.Here is another way:Now timing them:Using @moritzg answer, modified to not include dupes,Also I forgot to mention if for you (2,6) differs from (6,2) although it should not, you can switch itertools.combinations to itertools.permutations.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
