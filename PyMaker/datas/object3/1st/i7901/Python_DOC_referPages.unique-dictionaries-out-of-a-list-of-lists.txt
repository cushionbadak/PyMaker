Natural Text
I have a list called matrix which contains some rows. Each row contains some dictionaries, and each dictionary could be contained in more than one row.I want to generate a list called dictionaries which contains all the dictionaries in the matrix, but without duplicates. I already have a solution, but I would like to use comprehension.I would like something like the following but it doesn't work since I cannot ask to check a list while I'm creating it:The dictionary keys and values are primitive immutable objects like strings and integers. 
You could use a list comprehension, but depending on your Python version, using an collections.OrderedDict object with a generator expression to flatten the matrix would actually be more efficient.When your values are not hashable and thus can't be stored in a set or dictionary, you'll have to use first create an immutable representation, so we can store that representation in a set or dictionary to efficiently track uniqueness.For dictionaries that are flat structures with all keys and values immutable, just use tuple(sorted(d.items())). This produces a tuple of all (key, value) pairs (also tuples), in sorted order to avoid dictionary order issues.On Python 3.5 and up, use an OrderedDict() that maps the immutable keys to original dictionaries:On Python 3.4 and earlier, OrderedDict is slow and you'd be beter of using a separate set approach for Python 3.4 and below:Quick demo using your input data and an OrderedDict:
If you have NumPy:
Flatten the list, then use a set to eliminate dupes.


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
