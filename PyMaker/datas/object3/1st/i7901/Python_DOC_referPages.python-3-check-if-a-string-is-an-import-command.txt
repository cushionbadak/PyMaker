Natural Text
I want to check a string - is it an import command? I have triedbut it worked for "fromlike" imports. (Note: I'm not asking "why does this code don't work?", I'm just searching a solution) What code will sure detect all imports? Basically my code takes a slice of the string. If the [0:4] slice equals 'from', the string is a "fromlike import". Else: if the [0:6] slice equals 'import', the string is a "classic import". If it detects 'as', it will find the pseudo-name. This function must return a tuple which contains the import type under index 0 and imported module-name under index 1.
If you want to be sure to handle all Python import forms, have Python do the parsing. Use the ast.parse() function and use the resulting parse tree; you'll either get Import or ImportFrom objects:Each alias consists of a name and optional identifier used to import the name as:Note that there can be multiple imports! You either have classic or fromlike imports, and both can import multiple names. Your function needs to return a list of (type, name) tuples. For invalid inputs, raise an exception (ValueError is a good fit here):The method should probably be renamed to extract_import_names(), as that reflects what it does much better.Demo:


Answer URL
https://docs.python.org/3/library/ast.html#ast.parse
https://docs.python.org/3/library/ast.html#ast.parse
