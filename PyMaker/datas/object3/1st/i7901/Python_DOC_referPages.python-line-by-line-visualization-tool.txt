Natural Text
I am teaching programming to first-year students in university. For this fall we are transitioning from Java to Python as our main language for illustrating concepts, and for student assignments.I have come here to ask if anyone knows if there exists a tool that can allow students to step through each code line, and answer questions in each step. Much like the one pythontutor.com offers, but with the added functionality of being able to ask multiple choice questions for each step.I apologise if I have come to the wrong place, and would be grateful to be pointed in the right direction.
I strongly second Right leg's advice.  I've taught an intro-to-CS course to high school students using Python.  We used IDLE, the IDE (if you can call it that?) that Python ships with, and I regret every minute of it.Next year I'll write a custom environment for them to make sure things go more smoothly.  It's actually not so hard to implement such an environment using Python itself (which is precisely what IDLE does IIRC).Making good use of try/except and exec, you can basically 'step through' their code with error checking (and, if you want to get even fancier, global & local variable state information, etc).  You're also free to do nice, quality-of-life things like check for common problems (using print as a function in Python 2, or as a statement in Python 3) and emit useful error messages!I highly-recommend tailoring your environment for your students.  Not only will it likely be superior to the alternatives, but (and the value of this can't be overstated), when things go wrong with their coding environment, you'll know why.  You won't have to dig through someone else's implementation, docs, etc.
While it doesn't include quizzing, Thonny gives excellent stepping ability (even within expressions!). You might also want to look at nbtutor which does pythontutor-like visualisation inside notebooks.


Answer URL
https://docs.python.org/3/library/pdb.html
