Natural Text
I don't understand why this code prints None in b():When b() is called, printing saber results in None being printed. Why?
saber is None in b() because you have defined it as a global variable with a value of None and have not defined a local variable of the same name in that function. In a() you defined saber with a value of "ex" and when you printed that variable, that's what you got. But that value of saber went away when the function finished, because it is local to the function, and that's what local variables do.Now you might ask why rider was changed in a() when saber was not. But in fact, rider was not changed. You did not assign to the name rider in a(), so the global variable rider was used. The contents of rider were changed (you added a new key/value pair) but rider itself is still the same dictionary object it was when you first defined it. And that's why when you print it in b() you get the changed dictionary. Both functions are using the global variable rider because there is no local variable of the same name "hiding" it.
In a(), you are re-declaring saber locally, and so it references a local variable and not the global that you declared in the beginning of your code. See this documentation for more information. The solution is to declare saber global at the beginning of a():
Try this in a():See this post for a similar question. Basically, if you don't specify that saber is global, it'll be interpreted as local to the function. We don't have to do the same for rider because we're not actually reassigning it, only modifying its contents.
Check my comments in the code.OUTPUT:
saber and rider are global, but in a() you have:


Answer URL
https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python
