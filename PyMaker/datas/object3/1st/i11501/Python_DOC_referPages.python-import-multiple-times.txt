Natural Text
I suppose this is a general question so sorry if not posted in the right place.Say for instance, I have a function a which imports os. If I was to call this function from another file multiple times I am assuming that the import would be done multiple times as well? Is there a way to only import the module if its not already present?Basically, I have a class which calls multiple functions imported from various files, instead of importing the whole file I thought it would be easier to import just the function but now I am wondering if I am going to give myself headaches in the long run with excess imports.
As described in python documentation, when python see some import statement it does the following things:checks some global table if module is already importedif module is not imported python imports it, creates module object and puts newly created module object to the global tableif module is imported python just gets module objectwhen python has module object it binds it to the name you choseif it was import foo name for module foo will be fooif it was import foo as bar name for module foo will be barif it was from foo import bar as baz python finds function (or whatever) bar in module foo and will bind this function to name bazSo each module is imported only one time.To better understand import mechanics I would suggest to create toy example.File module.py:File main.py:Put above files to the same directory. When module.py is being imported it prints import is in progress. When you launch main.py it will try to import module several times but the output will be:So import really happens only once. You can adjust this toy example to check cases that are interesting to you.


Answer URL
https://docs.python.org/3/reference/import.html#importsystem
