Natural Text
I am trying to run all the functions in my class without typing them out individually.I want to do this but with a loop, because my actual class has about 8-10 functions.
You can use dir() or __dict__ to go through all of an object's attributes. You can use isinstance() and types.FunctionType to tell which ones are functions. Just call any that are functions.UpdateAs Tadhg commented, inspect.ismethod seems like the best choice. Here's some example code:
You can get list of all 'public' methods of your instance:See more about getattrActually, Python doesn't have public or private semantic, you can read that if interested
This is the easiest way to solve this problem, also it's kind of flexible to do changes in it.
While I realize it's not what you're asking, I think what you're asking (execute all methods) in general is a bad idea, because the object's API is not internal to the object. (E.g. the user has to write functionality (namely exactly the functionality that you're asking for) in order to use the class.)You're much better off defining a list of methods that you want to run yourself. E.g.:
While I do not particularly recommend calling all the methods on an object since as soon as you add some that require an argument it will obviously fail, you could use a decorator to label the methods that represent a test case and then search for all the ones that have said label:


Answer URL
https://docs.python.org/3/library/functions.html#getattr
