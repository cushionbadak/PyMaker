Natural Text
This question already has an answer here:Remove all the elements that occur in one list from another                    6 answers                Python, compute list difference                    13 answers                I have something like:and I wanted to remove the 3 elements of b from a.  I was trying to do:but I was thinking that the inverse of merge (+) might not be a thing, and was correct:  Unsupported Operand types for -: list and list.  I was contemplating just looping over them, but that just doesnt really sound pythony.My end state is going to be:  c = [3,1,3,5,3]If you had not noticed, b is not a subset of a and these are unordered.   2 different sets, these sets are not unique either, but only want to remove 1 instance per i in b, not all instance of i in bEDIT It seems that the current answer does not resolve my question.I want c to return: [1,2,2,2,4,5]For the sake of speed typing, I just put sorted numbers, but the lists ARE IN FACT unsorted, though for the sake of cleanliness we can sort them.They are just unsorted at init.  Since there are duplicates in list items, I can't use a set as per the definition of set.
As you noted you only want to remove the items once per occurrence:   
You can use the following code:
As input and output lists are unordered, use Counter is a way to go:This solution handles the following case differently than ysearka answer:Where many answers here leads to c = [4,1,6,5], the one using Counter will outputs c = [4,1,6,3,3,5].This behavior is also implemented by DAXaholic answer, but with modification of an existing list, which is not a pythonic way to go, and could be costly on big lists.
Now a is


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
