Natural Text
If I define a class a and a method blike this: (In Python2.7)I can call this method neither bynor:My questions are: (1) Is there a way to call b?(2) Is there any situation that this usage is meanful? (3) I think b is neither a static method nor a instance method. Is b a class method? If not, what should be named to b? 
or classmethod decorator which takes class object as first instance.Is there a way to call b?Yes you could either make it a static method or an instance method and call it accordingly.  Below i make it a static method so you can call it on any instance or directly on the class object aIs there any situation that this usage is meanful?What usage? static methods? yes there is, and it depends on your architecture.  classmethods can be used as factory functions? returning new instances of classes.I think b is neither a static method nor a instance method. Is b a class method? If not, what should be named to b?i, too, don't think it is either.  I believe it is just a function defined inside of a class bodyI was confused about defining a function inside of a class and asked a similar question here
b is a static method. Just add the @staticmethod decorator.Also, you shouldn't really do this, but if you wanted to call b() without changing the class, you could do a().b.__func__().
Just in case this isn't obvious:Here, b has no parameters because self is implied when called on an instance of the class.


Answer URL
