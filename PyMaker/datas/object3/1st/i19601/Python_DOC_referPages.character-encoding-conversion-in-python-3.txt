Natural Text
In python 2.x, I have usedbut there is no more str.decode() in python 3.x. what is the equivalent code in python 3.x? Update :More specific:The python2 function isWhat is the equivalent python3 code for this function?  
To your updated question:.and when reading files:Read more: http://docs.python.org/3.3/library/io.html#i-o-base-classes a less saner version:
I had the need to do this myself, and the naïve way of doing it is:ZipFile seems to treat all file names internally as DOS (code page 437). Unlike Python 2, Python 3 stores all strings internally as UTF of some kind. So we convert the file name into a byte array, and decode the raw byte string as shift-JIS to get out final file name.The print line does a similar thing, but to the default encoding of stdout and back. This prevents an error that happens on Windows because its terminal is almost never Unicode-capable. (If it is, however, the name should be shown correctly.)This worked well for a couple of zip files, until bam... Bonus content! It took some head-scratching to figure this one out, but the problem was that some valid shift-JIS characters contain backslashes, which ZipFile converts into forward slashes! For examle, 十 is encoded in shift-JIS as 8F 5C. This is converted to 8F 2F which is an illegal sequence. The following (perhaps overly complex) code check for this condition if an error occurs, and tried to fix it. But maybe there are other characters where this happens, and the sequence is valid, so you get the wrong character instead of an error. :(


Answer URL
