Natural Text
Doing some computation that results in strings that contain byte data (the strings serve as byte arrays). Now this data needs to be sent to another program that expects all this data to be concatenated. From what you can read here, the best way to concatenate appears to be dumping the data into a list and then doing ''.join(lst) but it appears to me that creating might incur a memory overhead .Is there any way to enjoy the benefits of ''.join(lst) without creating a long list?It is not hard to approximate how big the complete string is going to be. Is there a way to allocate that space and just pour the data inside? For instance with something like numpy? Then convert it into a huge string?
str.join() actually does not need a list to join, but any kind of iterable. Therefore you could work with generators, serving string after string:The yield from syntax is new since Python 3.3, if you are using something below 3.3 for c in data: yield c should work as well.


Answer URL
https://docs.python.org/3/library/io.html#io.StringIO
