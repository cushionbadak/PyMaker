Natural Text
Some times a pickle dump is unexpectedly large. Assuming I can successfully pickle and unpickle an object, is there a way to inspect the dump and see exactly what is included?Pickled objects include data but not code. If I didn't write the code, and the object is complex (e.g., an instance of a custom class with accessors, and lots of references to other data) it can be difficult to identify what is included in the dump and taking up so much space. Hence this question.
The built-in pickletools module can output information about each opcode represented in a pickle file.  When used from the command line or with dis, it outputs the opcodes in a readable format.  The example from the docs:For example, with a tuple (1, 2) pickled in file x.pickle:To get detailed information about an opcode, look in the code2op dict.  Use genops to iterate over the pickle data along with this detailed information.  For example, \x86 TUPLE2 from above means:Note that while a pickle is potentially unsafe to load (as it can execute arbitrary code), the pickle is not actually loaded when disassembling it, so it is safe to inspect the data.


Answer URL
https://docs.python.org/3/library/pickletools.html
