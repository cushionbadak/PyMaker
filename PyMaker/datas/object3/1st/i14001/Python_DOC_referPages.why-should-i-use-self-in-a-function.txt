Natural Text
This question already has an answer here:Why accessing to class variable from within the class needs “self.” in Python? [duplicate]                    4 answers                I have two questions regarding this piece of code:Why do I have to use self when I create functions and instance variables? What is the purpose of using it?When we create the jason object, we assign it a life of 5, as Enemy(5). However, can class names take variables inside? Or is it the __init__ function which makes it possible? (I'd expect something like, class Enemy (x), when we declare the class).
In python, for class methods, the first argument (which normally people name self) refers to the instance (object) of the class which was used to call the function, It does not have to be named self, but thats the convention.Example -When you do something like -You are setting the energy variable inside self (which denotes your current object) to x.When you do -Python internally calls the __init__() method of Enemy with the values for x as 5 (and self as the current object). __init__() is called after object has been created by __new__() method, which is a class method, An SO question to help understand how new and init work - Python's use of __new__ and __init__?


Answer URL
https://docs.python.org/3/tutorial/classes.html
