Natural Text
Attempting to convert an old bash script to python. The trouble is that I do not know very much about bash. Is there an equivalent python command for the bash command eval?Eval is used in the bash program like this:where "file" is an executable file.If there is no equivalent can someone provide a decent explanation as to what eval is doing here? I'm sorry if this is rudimentary but this is the first bash script I've ever looked at and I am very confused
There are a couple of things going on there. First you are running inside a bash subshell, that is the parenthesis part. But probably that's not all that important since no variables are changed inside that subshell.Next you are running a program and file descriptors are however copied so stdin, stdout, and stderr are the same.And you are running that in the background. So let's break these down into Python. As mentioned before, we can ignore the subshell part. As for running the program, os.system() or subprocess.call is the equivalent of running a command without having to capture or change input or output. More often you do need to capture output so the equivalent of is in Python is See Replacing /bin/sh backquote for more info.Finally, there is part about running in the background. For that the most equivalent match is subprocess.popen as mentioned in one of the other answers. There is also os.fork() but that doesn't work on all OS's, especially Windows. You might also want to consider using threads. 
Use subprocess.Popen to run a subprocess asynchronouslyExample:do other stuff while subprocess is running, then callorAlso check out the docs at https://docs.python.org/2/library/subprocess.html#subprocess.Popen
First I would read through the comments here for a good example.In short, the eval command is evaluating the input vs executing, but for your example, if you running an executable it would be no different than just executing the command from the CLI. The '&' just tells the process to execute in the background. Look at this for more info.To execute CLI commands in python you can There are three commands that you may want to consider.depending on how fine grained you want. For you code, doing something like:should get you going. check_ouput() will return any output from the command and Popen() is for more fine grained control.


Answer URL
https://docs.python.org/3/library/os.html#os.system
https://docs.python.org/3/library/subprocess.html#module-subprocess
https://docs.python.org/3/library/subprocess.html?highlight=process#replacing-bin-sh-shell-backquote
https://docs.python.org/3/library/subprocess.html#popen-objects
https://docs.python.org/3/library/os.html?highlight=fork#os.fork
