Natural Text
Is there a way to use re.findall or another regex method to count the number of occurrences of words in a specified order, separated by an arbitrary number of words?Here is a "brute force" implementation:for example, when the query is hello kilojoules, I would like to recognize hello my good friend kilojoules as an instance of my query, but for kilojoules is my good friend not to be counted.Here is my naive attempt at a satisfactory regex: re.findall('hello\s\Skilojoules','hello my friend kilojoules'). This doesn't work. I thought it would work because my understanding of what this says is "find all instances of hello and kilojoules separated by white space or blank space".
Let me clarify:This regex means *match a whole word hello, then any character even a whitespace and linebreak, and then a whole word kilojoules.If you do not have linebreaks, and if you do not care about whole word match, useNote that \s\S is just a whitespace followed with a non-whitespace. Thus, hello\s\Skilojoules can match hello bkilojoules, but not hello kilojoules.
I have found success in re.findall('hello.*?kilojoules','a happy hello my amigo kilojoules now goodbye'), following stribizhev's advice


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
