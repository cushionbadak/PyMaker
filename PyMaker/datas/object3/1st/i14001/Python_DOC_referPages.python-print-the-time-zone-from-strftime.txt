Natural Text
I want to print the time zone. I used %Z but it doesn't print:Do I perhaps need to import pytz?
now() returns an object of class datetime.datetime, which does not inherently contain information about its time zone.  (i.e. it is "naive"; see description of "naive" vs. "aware" date and time objects in the documentation)According to the documentation,datetime.datetime.now(tz=None)Return the current local date and time....If optional argument tz is None or not specified, the timestamp is converted to the platform's local date and time, and the returned datetime object is naive.To obtain your platform's local timezone, you should use, as you suggest, pytz.  Here's Alex Martelli's code to do this:You can also get the actual UTC offset, in hours, via:So you could use:
It is a documented behavior: datetime.now() returns a naive datetime object and %Z returns an empty string in such cases. You need an aware datetime object instead.To print a local timezone abbreviation, you could use tzlocal module that can return your local timezone as a pytz tzinfo object that may contain a historical timezone info e.g., from the tz database:This code works for timezones with/without daylight saving time. It works around and during DST transitions. It works if the local timezone had different utc offset in the past even if the C library used by python has no access to a historical timezone database on the given platform.In Python 3.3+, when platform supports it, you could use .tm_zone attribute, to get the tzname:Or using datetime module:The code is portable but the result may be incorrect on some platforms (without .tm_zone (datetime has to use time.tzname in this case) and with "interesting" timezones).On older Python versions, on a system with an "uninteresting" timezone, you could use time.tzname:An example of an "interesting" timezone is  Europe/Moscow timezone in 2010-2015 period.Similar issues are discussed in Getting computer's UTC offset in Python.


Answer URL
https://docs.python.org/3/library/datetime.html
https://docs.python.org/3/library/datetime.html
https://docs.python.org/3/library/time.html#time.struct_time
