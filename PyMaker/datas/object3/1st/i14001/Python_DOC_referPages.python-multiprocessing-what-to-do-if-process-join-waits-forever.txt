Natural Text
I have a recursive function defined in a class. All the function does is parses text files, does some calculation and stores it in HDF5 files. It does not return anything.Running it on one core is very slow. So I tried to use python's multiprocessing module. I am creating 4 processes and calling the same function inside a for loop with different arguments.the reading and writing operations are done successfully and correctly. The only problem is my program does not exit. After printing Entering for loop I see nothing in console. From htop I can see the four cores have stopped working. But My program does not exit.I don't know how to approach debugging this as I am new to using this multiprocessing module. My codes are logically correct and working just fine without using the multiprocessing module.How do I check the process status?How do I know where the code is stuck?I am using Python 2.7.10 | Anaconda 2.1.0 (64-bit) | ubuntu 14.04 LTSAny help on how to debug this kind problem is welcome.
First, you should make sure that the processes will be finished. If they go into a wait state, then they will never be finished.Second, even if those processes finish eventually, you might encounter forever waits, due to issues, like not getting the answer or the likes of that. You can pass a parameter to the join method, denoting the timeout. That would make sure that your main process will not wait forever.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.JoinableQueue.task_done
