Natural Text
Desktop.zip contains multiple text files. fun.py is a python program which will print the name of text files from zip and also the number of lines in each file. Everything is okay up to here. But, It will also import this output in a single CSV file. Code :- I am expecting output in CSV file like :- But I am getting this output in CSV file :- Here, test1.txt and test2.txt are the files in Desktop.zip, and 25 and 10 is the number of lines of those files respectively.
The code in your question has multiple issues, as others have pointed out. The two primary ones are that you're recreating the csv file over and over again for each archive member being processed, and then secondly, are passing csvwriter.writerows() the wrong data. It interprets each item in the list you're passing as a separate row to be added to the csv file. One way to fix that would be to only open the csv file once, before entering a for loop which counts the line in each member of the archive and writes one row to it at time with a call to csvwriter.writerow().A slightly different way, shown below, does use writerows() but passes it generator expression that processes the each member one-the-fly instead of calling writerow() repeatedly. It also processes each member incrementally, so it doesn't need to read the whole thing into memory at one time and then split it up in order to get a line count.Although you didn't indicate what version of Python you're using, from the code in your question, I'm guessing it's Python 3.x, so the answer below has been written and tested with that (although it wouldn't be hard to make it work in Python 2.7).Sample format of content in csv file created:
writerows takes an iterable of row-representing iterables. You’re passing it a single row, so it interprets each character of each column as a cell. You don’t want that. Use writerow rather than writerows.
I saw a number of issues:You should open the csv file only once, before the for loop. Open it inside the for loop will override the information from previous loop iterationicktoofay pointed out that you should use writerow, not writerowsfile is a reserve word, you should not use it to name your variable. Besides, it is not that descriptiveYou seem to get the file names from the archive, but open the file from the directory (not the ones inside the archive). These two sets of files might not be identical.Here is my approach:My approach has a couple of issues, which might or might not matter:I assume files in the archive to be text fileI open, read, and split lines in one operation. This might not work well for very large files


Answer URL
https://docs.python.org/3/reference/expressions.html#generator-expressions
