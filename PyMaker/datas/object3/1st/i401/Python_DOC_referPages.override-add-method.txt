Natural Text
I'm trying to override the __add__ method so that the duplicate will not be added. What went wrong with my code?If Ulist=[1,2,3], and I do Ulist.__add__([3]), I am expecting a message of "it already exists". But I got [1,2,3,3].
Everything is an object in Python, including classes, modules, lists, etc. You access objects by the name they are bound to.When you write class Ulist(UserList): ..., you bind a class object to the name Ulist. Since classes are regular objects, you can do something likeThis will produce the same result as if you had called Ulist directly, since the first assignment just binds the class once to another name.When you subsequently do Ulist = [1, 2, 3], you discard the class object that the name Ulist was originally bound to, and bind it to a list object instead. This is because an expression in square brackets is always interpreted as a plain list.To create an instance of Ulist the class, you have to call the initializer:Now the operation x + [3] should print what you originally expected. Note that you aren't normally supposed to call special methods like __add__ directly. Either use +, or more rarely, operator.add.Another thing to keep in mind is that UserList already exposes the underlying list via the data attribute. Your value attribute is overkill at this point and actually prevents you from using all the other nice features of UserList. A better implementation would look something likeAll in all, though, what you are probably looking for is set.
you have initialize Ulist as variable so it will act as object of list:to work with your code you need to instantiate the object of the class, see below exampleoutput


Answer URL
https://docs.python.org/3/library/operator.html#operator.add
https://docs.python.org/3/library/collections.html#userlist-objects
https://docs.python.org/3/library/collections.html#collections.UserList.data
