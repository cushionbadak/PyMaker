Natural Text
How can I go from this structureto this onein an elegant (functional) way?For now I have this:
You can use itertools.accumulate():This outputs:
You can do this using a simple list comprehension.If performance is important, you can roll out your own implementation of accumulate:This turns out to be slightly faster than itertools for the given problem.
This should work:
If you must use reduce you could do it like this:I prefer the built in join function:
You can use count to slice a string in steps:
a recursive solution:The idea is quite simple, we use divide and conquer. Problem can be solved if we know the answer to the first n-1 string(or char), in this case, what we need to do is just collect all the characters in one string and separate them by '/'('a/b/c' in this case). we pass an empty list as the 2nd parameter to store the result.>>> foo(input, [])


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
