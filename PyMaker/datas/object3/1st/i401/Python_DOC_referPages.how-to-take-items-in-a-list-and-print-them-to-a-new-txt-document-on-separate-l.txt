Natural Text
okay, this may have been talked about before, but I am unable to find it anywhere on stack so here i am. Basically I am writing a script that will take a .txt document and store every other line (even lines say) and print them into a new text document. I was able to successfully write my code to scan the text and remove the even numbered lines and put them into a list as independent variables but when i got to add each item of the list to the new text documents, depending on where i do that i get either the first line or the last line but never more than one.here is what i have I have tested that this successfully takes the proper lines and stores them in list xi have tried directly after, and it only prints the last lineif i do it will print the first lineif i try to add the first solution to the for loop as a nested for loop it will also print the first line. I have no idea why it is not taking each individual item and putting it in the .txtwhen i print the list it is in there as it should be.
Did look for a canonical - did not find one...open('stuffs2.txt','w')  - "w" == kill whats there and open new empty file ... Read the documentation: reading-and-writing-files :7.2. Reading and Writing Filesopen() returns a file object, and is most commonly used with two arguments: open(filename, mode). f = open('workfile', 'w') The first argument is a string containing the filename. The second argument is another string  containing a few characters describing the way in which the file will  be used. mode can be 'r' when the file will only be read, 'w' for only  writing (an existing file with the same name will be erased), and 'a'  opens the file for appending; any data written to the file is  automatically added to the end. 'r+' opens the file for both reading  and writing. The mode argument is optional; 'r' will be assumed if  itâ€™s omitted.To write every 2nd line more economically:this way you do not need to store all lines in memory.    The with open(...) as name :  syntax is also better - it will close your filehandle (which you do not do) even if exceptions arise.


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
