Natural Text
I have a string representing a path:My goal is to split the string in two like this:In other words, given the first occurrence of a sub string, split at the first available separator (in this case /).The algorithm I have in mind is:Split the string according os.path.sepFind the index of the first list element matching a sub string ( '.' i.e.)Concatenate in two variables the elements of the token list up until and over the found indexBut it really looks that it has too much work for a pythonic function that splits strings... Is there a built-in function I'm missing or a conditional slicing of sort that I could use to achieve the goal?
You can try to use regular expressions for this job.Just note that this is an extremely specific (and, at the same time generic) regular expression based on your only sole example.Testing
If I understand your question correctly, does this work:This gives:
str.parition seems to be what you're looking for:str.partition(sep)Split the string at the first occurrence of sep, and return a 3-tuple containing the part before the separator, the separator  itself, and the part after the separator. If the separator is not  found, return a 3-tuple containing the string itself, followed by two  empty strings.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.partition
