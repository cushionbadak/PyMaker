Natural Text
I am creating about 200 variables within a single iteration of a python loop (extracting fields from excel documents and pushing them to a SQL database) and I am trying to figure something out. Let's say that a single iteration is a single Excel workbook that I am looping through in a directory. I am extracting around 200 fields from each workbook.If one of these fields I extract (lets say field #56 out of 200) and it isn't in proper format (lets say the date was filled out wrong ie. 9/31/2015 which isnt a real date) and it errors out with the operation I am performing.I want the loop to skip that variable and proceed to creating variable #57. I don't want the loop to completely go to the next iteration or workbook, I just want it to ignore that error on that variable and continue with the rest of the variables for that single loop iteration.How would I go about doing something like this?In this sample code I would like to continue extracting "PolicyState" even if ExpirationDate has an error.Some sample code:
As suggested you could use multiple try blocks on each of your extract variable, or you could streamline it with your own custom function that handles the try for you:Here we use reduce to repeat multiple functions, and pass partial as a frozen function with arguments.This can help your code look tidy without cluttering up with lots of try blocks.  But the better, more explicit way is just handle the fields you anticipate might error out individually.
Use multiple try blocks. Wrap each decode operation that might go wrong in its own try block to catch the exception, do something, and carry on with the next one.
So, basically you need to wrap your xldate_to_datetime() call into try ... except


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
https://docs.python.org/3/library/functools.html#functools.partial
