Natural Text
I recently had to construct a module that required a tensor to be included. While back propagation worked perfectly using torch.nn.Parameter, it did not show up when printing the net object. Why isn't this parameter included in contrast to other modules like layer? (Shouldn't it behave just like layer?)Output:
When you call print(net), the __repr__ method is called. __repr__ gives the “official” string representation of an object. In PyTorch's nn.Module (base class of your MyNet model), the __repr__ is implemented like this:Note that the above method returns main_str which contains call to only _modules and extra_repr, thus it prints only modules by default. PyTorch also provides extra_repr() method which you can implement yourself for extra representation of the module.To print customized extra information, you should reimplement this method in your own modules. Both single-line and multi-line strings are acceptable.
According to nn.Parameter docs:Parameters are :class:~torch.Tensor subclasses, that have a      very special property when used with :class:Module s - when they're      assigned as Module attributes they are automatically added to the list of      its parameters, and will appear e.g. in :meth:~Module.parameters iterator.So you can find it in net.parameters. Let's look at the following example:Code:Output:As you can see, there is no tensor or 'parameter' object (because parameter is subclass of tensor), only Modules.Now let's try to get our net parameters:Code:Output:Ok, so the first one is your net.parameter. Next two is weights and bias of net.layer. Let's verify it:Code:Output:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__repr__
