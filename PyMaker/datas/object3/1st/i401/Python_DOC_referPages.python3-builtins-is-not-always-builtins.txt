Natural Text
I was putting this idea How to make a cross-module variable? in action for python3.And was lazy enough to use the variable __builtins__ instead of the module builtins. Which should make no difference because: This is when it gets funny: builtins is not __builtins__ when imported:Does anyone know what happens? (A comment on the given page mentions "__builtins__ is a CPython peculiarity, you really shouldn't use it", but I'm being curious...) 
I don't really know why, but from articleframe globals have a __builtins__ variable (builtins dictionary, or  builtins module when __name__ equals __main__)so in your first case (__name__ == __main__) and you get __builtins__ as builtins module, but in the second case (__name__ != __main__) __builtins__ is a dict instance and from docs:The value of __builtins__ is normally either this module or the value  of this moduleâ€™s __dict__ attribute.TestWith slightly modified spam.pywe will get something likeConclusionAs you & @chepner have already noticed __builtins__ is an implementation detail that can be changed, so we shouldn't rely on it, especially on it being a builtins module/builtins.__dict__ object.


Answer URL
https://docs.python.org/3/library/builtins.html
