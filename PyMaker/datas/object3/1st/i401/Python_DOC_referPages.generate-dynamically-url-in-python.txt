Natural Text
I would like to programatically generate a URL made by these partsFixed partOutbound route number - changesOutbound date - changesInbound route number - changesInbound date - changesParameters:OutputI know how to pass parameters with urllib.parse.urlencodebut don't know how to build dynamically the first part after the fixed URL 1040/19-02-2019/1042/19-02-2019
A URL is really just a string, any of the usual string manipulation techniques would do here. Your component parts don't have any characters in them that would require URL-encoding here either, making the whole process simpler.If you do have component parts that use characters that are not in the list of unreserved characters, then use the urllib.parse.quote() function to convert those characters to URL-safe components.You could use str.join() with / to join string parts:or you could use a formatted string literal:This approach has the advantage that the components don't have to be strings; if outbound_route and inbound_route are integers, you don't have to explicitly convert them to strings first.Or, since URL paths work a lot like POSIX filesystem paths, you could use the pathlib.PosixPurePath() class to contruct the path:In all cases, you end up with a final URL to use in requests:


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote
https://docs.python.org/3/reference/lexical_analysis.html#f-strings
https://docs.python.org/3/library/pathlib.html#pathlib.PurePosixPath
