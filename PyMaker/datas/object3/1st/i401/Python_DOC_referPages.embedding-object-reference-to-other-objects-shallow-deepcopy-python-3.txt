Natural Text
As explained in the python docs for V3.7 (https://docs.python.org/3/library/copy.html)A shallow copy constructs a new compound object and then (to the extent possible) inserts references into it to the objects found in the original.I tried to create a compound object as below by passing reference to a list to another list and as per the book I am reading, the new list L must store a reference to X and if X changes L must change too.X = [1, 2, 3] L = ['a', X, 'b']However in my test run on IDLE, I can see that L contains the object [1,2,3] , hence does not store a reference to X, I tested this by changing X, which does not affect L:So my question is:Does in python 3+ meaning of embedding reference to objects changed. If yes then does that mean shallow and deep copying does not differentiate any more, meaning they both make deep copies of the objects, as my tests show below and seems contrary to the documentation.
X=[1,2] rebinds the name X to a new object. Modifying the original object works as expected:


Answer URL
https://docs.python.org/3/library/copy.html
