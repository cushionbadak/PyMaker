Natural Text
I have a list with around 60000 characters. The package I'm using takes only lists above 999 characters... So for this example I have to run the function 60000/999 = 61 times.Here is how a list looks like as an example: Here is the issue, this number of characters will not be the same over time it can be less or more, so I have to take the length of the list into account. Here is the code I'll use:I guess an idea should be to do a list of lists, the first big one including the 61 lists of 999 characters for each one and then do a loop: Does someone have a better idea and/or knows how to create a list of lists depending on the length of the first big list?
It sounds like you want to process a long list in shorter chunks.  You don't need to pre-process the list into a list of short lists.  Here's a generator to break a list into sublists.  Adapt as needed:Output:So your code would look something like:
You seem to be new to Python. While creating lists in python, you don't need to give a length for that list. Why make a list of lists when you can make a list of strings, and still use it as a list of string? So, you DON'T have to the length into account.I am not very clear about the question you asked, so correct me if I'm wrong. Also, I'm assuming that accession is a user-made function (made by you), to add new elements to the list.Following is the code for an already defined listeFollowing is the code for when you want take inputs directlyLet me know if this help!


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
