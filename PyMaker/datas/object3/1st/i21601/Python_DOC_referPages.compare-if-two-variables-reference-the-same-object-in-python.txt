Natural Text
How to check whether two variables reference the same object?
That’s what is is for: x is y returns True if x and y are the same object.
y is x will be True, y is z will be False.
While the two correct solutions x is z and id(x) == id(z) I want to point out an implementation detail of python. Python stores integers as objects, as an optimization it generates a bunch of small integers at its start (-5 to 256) and points EVERY variable holding an integer with a small value to these preinitialized objects. More InfoThis means that for integer objects initialized to the same small numbers (-5 to 256) checking if two objects are the same will return true (ON C-Pyhon, as far as I am aware this is an implementation detail), while for larger numbers this only returns true if one object is initialized form the other.
You can also use id() to check which unique object each variable name refers to.
I really like to have a visual feedback, that's why I sometimes  just open up http://www.pythontutor.com/visualize.html#mode=edit to see how the memory is allocated and what is referencing what. Added this awesome gif as this reply is about visualizing..
This is from docs.python.org: "Every object has an identity, a type and a value. An object’s identity never changes once it has been created; you may think of it as the object’s address in memory. The ‘is’ operator compares the identity of two objects; the id() function returns an integer representing its identity."Apparently every time you change the value the object is recreated as indicated by the identity changing.  The line x=3 followed by the line x=3.14 gives no error & gives different identities, types and values for x.


Answer URL
https://docs.python.org/3/reference/expressions.html#is
https://docs.python.org/3/library/functions.html#id
