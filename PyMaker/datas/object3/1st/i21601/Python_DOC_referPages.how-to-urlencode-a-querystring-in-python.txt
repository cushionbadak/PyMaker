Natural Text
I am trying to urlencode this string before I submit. 
You need to pass your parameters into urlencode() as either a mapping (dict), or a sequence of 2-tuples, like:Python 3 or aboveUse:Note that this does not do url encoding in the commonly used sense (look at the output). For that use urllib.parse.quote_plus.
Python 2What you're looking for is urllib.quote_plus:Python 3In Python 3, the urllib package has been broken into smaller components. You'll use urllib.parse.quote_plus (note the parse child module)
ContextPython (version 2.7.2 )ProblemYou want to generate a urlencoded query string.You have a dictionary or object containing the name-value pairs.You want to be able to control the output ordering of the name-value pairs.Solutionurllib.urlencodeurllib.quote_plusPitfallsdictionary output arbitrary ordering of name-value pairs(see also: Why is python ordering my dictionary like so?)(see also: Why is the order in dictionaries and sets arbitrary?)handling cases when you DO NOT care about the ordering of the name-value pairshandling cases when you DO care about the ordering of the name-value pairshandling cases where a single name needs to appear more than once in the set of all name-value pairsExampleThe following is a complete solution, including how to deal with some pitfalls.
Try requests instead of urllib and you don't need to bother with urlencode!EDIT:If you need ordered name-value pairs or multiple values for a name then set params like so:instead of using a dictionary.
Python 3:urllib.parse.quote_plus(string, safe='', encoding=None, errors=None)
Note that the urllib.urlencode does not always do the trick. The problem is that some services care about the order of arguments, which gets lost when you create the dictionary. For such cases, urllib.quote_plus is better, as Ricky suggested.
Try this:urlencode won't work because it only works on dictionaries. quote_plus didn't produce the correct output.
In Python 3, this worked with me
for future references (ex: for python3)
If the urllib.parse.urlencode( ) is giving you errors , then Try the urllib3 module .The syntax is as follows : 
For use in scripts/programs which need to support both python 2 and 3, the six module provides quote and urlencode functions:
Another thing that might not have been mentioned already is that urllib.urlencode() will encode empty values in the dictionary as the string None instead of having that parameter as absent. I don't know if this is typically desired or not, but does not fit my use case, hence I have to use quote_plus.
urllib.urlencode()


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus
