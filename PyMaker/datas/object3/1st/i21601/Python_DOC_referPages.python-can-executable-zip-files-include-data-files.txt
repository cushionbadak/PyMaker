Natural Text
Being fairly new to python I only recently discovered the ability to directly execute a .zip file by placing a __main__.py file at the top of the file. This works great for python code, but can I bundle other types of files and access them with my scripts? If so, how?My ultimate goal would be to bundle some image files along with the python code in a single .zip file, then be able to use those images within the app without having to extract them to disk. I also would like to bundle a copyright notice, release notes, etc so that the entire app and its data files is in a single zip that can be executed without having to extract it somewhere. 
You could use pkg_resources functions to access files:Where zipfile contains:To make zipfile executable, run:To test it:
simply use pkgutil.get_data() as suggested in this answer
At least on my Linux box there is no open filehandle or mapped memory by the process to its own zipfile, so presumably there is no way to "magically" access it.However, creating your own access is not that hard. Create a __main__.py like so:Edit: Somewhat terse, that. For completeness:
pkgutil.get_data(package, resource) takes the name of a package and a resource. That means you have to put your data files inside a package within the zip file.So for example a zip file containing:The __init__.py file can be empty or just a comment, but you need one to make zippeddata importable.Then in __main__.py you just call:


Answer URL
https://docs.python.org/3/library/zipapp.html
