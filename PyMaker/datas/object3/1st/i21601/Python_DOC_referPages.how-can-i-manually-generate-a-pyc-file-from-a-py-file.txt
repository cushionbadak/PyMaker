Natural Text
For some reason, I can not depend on Python's "import" statement to generate .pyc file automaticallyIs there a way to implement a function as following?
You can use compileall in the terminal. The following command will go recursively into sub directories and make pyc files for all the python files it finds. The compileall module is part of the python standard library, so you don't need to install anything extra to use it. This works exactly the same way for python2 and python3.
You can compile individual files(s) from the command line with:
It's been a while since I last used Python, but I believe you can use py_compile:
I found several ways to compile python scripts into bytecodeUsing py_compile.compile:Using py_compile.main():It compiles several files at a time.The list can grow as long as you wish. Alternatively you can obviously pass a list of files in main or even file names in command line args.Or, if you pass ['-'] in main then it can compile files interactively.Using py_compile in terminal:-m specifies the module(s) name to be compiled. Or, for interactive compilation of filesUsing compileall.compile_dir():It compiles every single Python file present in the supplied directory.Using compileall.compile_file():Take a look at the links below:https://docs.python.org/3/library/py_compile.htmlhttps://docs.python.org/3/library/compileall.html
I would use compileall. It works nicely both from scripts and from the command line. It's a bit higher level module/tool than the already mentioned py_compile that it also uses internally.
To match the original question requirements (source path and destination path) the code should be like that:If the input code has errors then the py_compile.PyCompileError exception is raised.
In Python2 you could use:which makes compile all .py to .pyc in the project which contained the subfolders.In Python3 you could use:which makes compile all .py to the __pycache__ folders in the project which contained the subfolders.Or with browning from this post:You can enforce the same layout of .pyc files in the folders as in  Python2 by using:python3 -m compileall -b <pythonic-project-name>The option -b triggers the output of .pyc files to their  legacy-locations (i.e. the same as in Python2).


Answer URL
https://docs.python.org/3/library/py_compile.html#py_compile.compile
https://docs.python.org/3/library/py_compile.html
https://docs.python.org/3/library/compileall.html
