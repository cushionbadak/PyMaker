Natural Text
my idea is to make context logging scheme as showed on the example below:At this point, I'm using a Python's logging module with custom, hand-written prefixes when logging, for example:It's working quite ok, but there are some subtle problems, for example: when logging from inside functions - they may be called from various scopes and prefix length may vary for each call.I'm looking for a elegant and invisible way to establish a length of a '...' prefix automatically for each log. I'd rather avoid passing prefix length as a parameter to each func or setting the lenght using explicit calls, for example:Is there a way to get the current indentation level from Python's parser or construct a scope sensitive wrapper class for logging?
Perhaps you can use inspect.getouterframes to find the indentation level:yields
Searching through the docs, I don't really see a way to get current indentation level. The best you can do, is get the current function nesting level, like this:Example:
Combining the previous answers with How do I add custom field to Python log format string? can achieve the same result without needing to provide a custom debug() method (since the same would need to be done for each level info(), error(), etc).


Answer URL
https://docs.python.org/3/library/textwrap.html#textwrap.indent
