Natural Text
Code:This prints ['a', 'c', 'b']. I'm unsure of how the method keys determines the order of the keywords within l. However, I'd like to be able to retrive the keywords in the "proper" order. The proper order of course would create the list ['a', 'b', 'c'].
You could use OrderedDict (requires Python 2.7) or higher.Also, note that OrderedDict({'a': 1, 'b':2, 'c':3}) won't work since the dict you create with {...} has already forgotten the order of the elements. Instead, you want to use OrderedDict([('a', 1), ('b', 2), ('c', 3)]).As mentioned in the documentation, for versions lower than Python 2.7, you can use this recipe.
Python 3.7+In Python 3.7.0 the insertion-order preservation nature of dict objects has been declared to be an official part of the Python language spec. Therefore, you can depend on it.Python 3.6 (CPython)As of Python 3.6, for the CPython implementation of Python, dictionaries maintain insertion order by default. This is considered an implementation detail though; you should still use collections.OrderedDict if you want insertion ordering that's guaranteed across other implementations of Python.Python >=2.7 and <3.6Use the collections.OrderedDict class when you need a dict that remembers the order of items inserted.
Use the sorted function, which sorts the iterable passed in.The .keys() method returns the keys in an arbitrary order.
Just sort the list when you want to use it.
From http://docs.python.org/tutorial/datastructures.html:"The keys() method of a dictionary object returns a list of all the keys used in the dictionary, in arbitrary order (if you want it sorted, just apply the sorted() function to it)."
Although the order does not matter as the dictionary is hashmap. It depends on the order how it is pushed in:output:    for string abbc, the keys are dict_keys(['a', 'b', 'c'])    for string cbab, the keys are dict_keys(['c', 'b', 'a'])


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
https://docs.python.org/3/library/collections.html#collections.OrderedDict
