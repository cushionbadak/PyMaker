Natural Text
Somehow, this works:However, I can't quite figure out the order of operations here. Let's test the False case:Clearly, this isn't resolving to a simple order of operations issue. Is the interval comparison a special operator, or is something else going on?
Unlike most languages, Python supports chained comparison operators and it evaluates them as they would be evaluated in normal mathematics.This line:is evaluated by Python like this:Most other languages however would evaluate it like this:
As specified in the Python documentation:Comparisons can be chained arbitrarily, e.g., x < y <= z is equivalent to x < y and y <= z, except that y is evaluated only once (but in both cases z is not evaluated at all when x < y is found to be false).Formally, if a, b, c, ..., y, z are expressions and op1, op2, ..., opN are comparison operators, then a op1 b op2 c ... y opN z is equivalent to a op1 b and b op2 c and ... y opN z, except that each expression is evaluated at most once.


Answer URL
https://docs.python.org/3/reference/expressions.html#grammar-token-comp_operator
