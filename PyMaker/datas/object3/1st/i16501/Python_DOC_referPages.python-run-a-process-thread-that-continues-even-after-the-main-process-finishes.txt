Natural Text
I want to run a process/thread that continuously runs even after the main process is finished or is killed. How should I go about this?Edit: If it makes a difference, the point of the child process is to monitor the status of an external process. When that process is done, the child process needs to kick off another process to the same external system. It needs to do so even after the main program finishes so that the user can continue working elsewhere while new jobs are being sent to the system as needed.
If you simply want to continue execution in a child process, and exit from the current process, you can simply use os.fork:Calling os.fork() will basically duplicate your process, but for the parent process, os.fork() will return the PID of the child process, while for the child process, it will return 0.if not os.fork() will simply not enter the if branch in the parent process, since the result of calling os.fork() is non-zero (i.e. the PID of the child process).In the child process, os.fork() returned zero, hence the child process enters the if branch.If you want to run any executable (not necessarily Python code), your best choice is subprocess.Popen, as mentioned by @khachik.


Answer URL
https://docs.python.org/3/library/os.html#os.fork
