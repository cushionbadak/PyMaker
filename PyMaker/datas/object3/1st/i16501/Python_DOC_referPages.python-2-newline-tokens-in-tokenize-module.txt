Natural Text
I am using the tokenize module in Python and wonder why there are 2 different newline tokens:Any examples of code that would produce both tokens would be appreciated.
According to python documentation:tokenize.NL   Token value used to indicate a non-terminating newline. The NEWLINE  token indicates the end of a logical line of Python code; NL tokens  are generated when a logical line of code is continued over multiple  physical lines.More here: https://docs.python.org/2/library/tokenize.html
There are at least 4 possible cases of '\n' in Python code; 2 of them are codified by tokens:Statement-terminating newline: tokenize.NEWLINE - this is the token more or less corresponding to the C or Java ;.Any newline that does not terminate a statement, and does not belong to cases 3 or 4: tokenize.NL.The newlines in multiline strings.A newline that occurs at line-continuation \ - contrary to what the documentation would seem to indicate, this case does not produce any token at all.Thus the following example:Gives the all possible cases:
In addition to the quote from the docsThe NEWLINE token indicates the end of a logical line of Python code;  NL tokens are generated when a logical line of code is continued over  multiple physical lines.here is an exampleThis will generateWhereaswill generate thisNote the 1,13-1,14:      NL      '\n' after a,Basically the difference between NEWLINE and NL is that NL is generated after a line that is not 'complete':results in NEWLINE because the entire logical line is on 1 physical lineresults in NL, because the code for that 1 logical line is spread over 2 physical lines


Answer URL
https://docs.python.org/3/library/tokenize.html
