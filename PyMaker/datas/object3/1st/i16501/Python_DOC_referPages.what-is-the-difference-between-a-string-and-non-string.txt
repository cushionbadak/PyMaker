Natural Text
I'm beginning to learn the basics of python. I had just learned that str() turns non-strings into strings - example: str(2) would change 2 to "2". That raised a question - what is a string and what difference does it have from a non-string? I've googled this but I could not find this question is directly answered and the general explanations don't quite make it clear for me. 
"That raised a question - what is a string and what difference does it have from a non-string?"It sounds like python is your first language. That being said, for conceptual sake, a string is text, and a 'non-string' is a number. You will see why this is not quite true as you program more, but for understanding the difference between a string and a 'non-string' this will suffice. You can do math with 'non-strings'.  "2" is a string, but 2 is a 'non-string'. Adding strings is NOT the same as arithmetic addition. "2" + "2" results in another string "22" (this  operation is called concatenation ), but 2 + 2 results in a 'non-string' A.K.A. the NUMBER (not string)  4, because the addition is arithmetic addition.
A string is any sequence of characters â€” not just numbers, but letters and punctuation and all of Unicode.Something that isn't a string is...  not that.  :)  (There are lots of things that aren't strings!  String isn't special.)  For example, 2 is an int.  You can do math on an int, because it's a number.  But you can't do math on a str like "2"; it's only the way we write the number in Western mathematics, not the number itself.  You couldn't ask "dog" to wag its tail, either, because it's not a real dog; it's just the written word "dog".As a more practical example:2 + 2 gives you 4, the result of combining two numbers."2" + "2" gives you "22", the result of combining two written "words".
just to put another spin on this...objects in python come with a variety of attributes and methods. attributes tend to represent data associated with the object. methods tend to represent behaviors that can be performed by the object. if we create a string and give it the name a and look at the list of attributes/methods, we see that the list encompasses many of the things you would want to know about a string or do with a string. on the other hand, if we create a number and give it the name b and look at the list of attributes/methods, we see that they are very different and focuses on things we would want to know about a number or do with a number.


Answer URL
https://docs.python.org/3/library/stdtypes.html
