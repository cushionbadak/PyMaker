Natural Text
I have a C program that writes data to a named pipe and a Python program that reads data from the named pipe, like this:When the C program exits, it closes the pipe.How can I detect this from the Python side?  I've tried installing a handler for SIGPIPE, but it seems that SIGPIPE only happens when attempting to write to a closed pipe, not read from it.  I also expected that p.read(size) might return a length-zero string because of the EOF at the other end, but actually it just hangs waiting for data.How can I detect this situation and handle it?
You can use the select module to monitor the state of your pipe. On Linux (where select.poll() is available, the following code will detect the presence of a closed pipe:Analogous methods exist for other OS as well that can detect such situations.The reason why it hangs when calling read, is because the IO is blocking. You can turn it into non-blocking (and have read return an empty string) by using os.set_blocking, but this would still not allow you to detect when the pipe on the other end is closed.


Answer URL
https://docs.python.org/3/library/select.html
https://docs.python.org/3/library/select.html#select.poll
https://docs.python.org/3/library/os.html#os.set_blocking
