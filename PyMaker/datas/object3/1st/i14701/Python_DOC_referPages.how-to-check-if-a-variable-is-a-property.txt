Natural Text
This question already has an answer here:Determine if given class attribute is a property or not, Python object                    2 answers                Suppose there is a class with a @property defined:Normally, to check whether an attribute is a function, I can use isfunction from the inspect module.How can I check a property? There appears to be no inspect.isproperty function.
Simply check the type against the property object:You don't really have to retrieve it from the class dictionary here; looking up a property on the class as an attribute also returns the property instance.
You could use inspect.isdatadescriptor:Return true if the object is a data descriptor. ... Examples are  properties (defined in Python), getsets, and members....CPython implementation detail: getsets are attributes defined in extension modules via PyGetSetDef structures....CPython implementation detail: Member descriptors are attributes defined in extension modules via PyMemberDef structuresData descriptors are just types that have certain methods. See 3.3.2.1. Implementing Descriptors:If the descriptor defines __set__() and/or __delete__(), it is a data  descriptor; if it defines neither, it is a non-data descriptor.Non-data descriptors include classmethod and staticmethod (that is, they're not functions, they're types). For example, inspect.isdatadescriptor(MyClass.this_is_a_classmethod) would return False.On the other hand, property is a data descriptor:The downside of using this function is that it may return True if isinstance(mystery, property) is False.A better way is to check for object type directly:


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.isdatadescriptor
https://docs.python.org/3/reference/datamodel.html#implementing-descriptors
https://docs.python.org/3/library/functions.html#classmethod
https://docs.python.org/3/library/functions.html#staticmethod
