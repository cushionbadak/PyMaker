Natural Text
When wrapping C functions with ctypes what happens when a method returns a NULL pointer to a struct mapped to a python class derived from ctypes.Structure?  Also what happens when valid pointers passed to a method are set to NULL values?  The following test will help us find out:
As it turns out, the developer need not be concerned about the address of pointer that has been passed to a function changing.In the second case the values remain unchanged from their initialized state.  This is generally true.  Had float1_value and float2_value been initialized to 10 and 20.  Those values would have been remained unchanged as well.As @eryksun points out:float1 and float2 are local variables that contain the address of the  two floats. You can set the value to 0, or any other address, but  that's just changing a local variable. That's not the same as  dereferencing the pointer (e.g. *float1) to access the floating point  value at the address.In the case of return values things are handled differently.  The object returned evaluates to true (non-null) or false (null).Attempting to access a NULL pointer results in a ValueError exception.


Answer URL
https://docs.python.org/3/library/ctypes.html#pointers
