Natural Text
How can I conditionally call the orignal method in a mock?In this example I only want to fake a return value if bar=='x'. Otherwise I want to call the original method.I know that it is a bit strange. If I want to fake mylib.foo.some_method in side do_some_stuff() it should be condition-less. All (not some) calls to some_method should be mocked.In my case it is an integration test, not a s tiny unittest and mylib.foo.some_method is a kind of dispatcher which gets used very often. And in one case I need to fake the result.
If you need just replace behavior without care of mock's calls assert function you can use new argument; otherwise you can use side_effect that take a callable. I guess that some_method is a object method (instead of a staticmethod) so you need a reference its object to call it. Your wrapper should declare as first argument the object and your patch use autospec=True to use the correct signature for side_effect case.Final trick is save the original method reference and use it to make the call.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
