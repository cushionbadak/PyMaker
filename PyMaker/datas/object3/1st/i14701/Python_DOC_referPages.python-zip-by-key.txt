Natural Text
I'd like to combine (zip?) two python lists of tuples, but matching on a key.e.g. I'd like to create a function that takes two input lists and produces an output like this:I could do it very messily and manually with loops, but I figure there must be some itertools / zipping functions that will greatly simplify this.I'm sure the answer is out there and obvious, I just don't have the right termonology to search for it.==(( For what it's worth, here's my naive solution.  I'm hoping to find something neater / more pythonic:Thanks ))

Still a bit messy, but works:Update:If I'd actually use this in production code, I'd refactor a little bit:and then In your case, I'd call@Vincent's answer is a good variation, too.
Convert the second list to a dictionary then you can check if the key is present without iterating the entire second list:
A solution using itertools.groupby and heapq.merge:merge and groupby both need their input to be sorted. If you list are not always sorted, then you'd need to make sure to do so:This has the advantage that it works with an arbitrary number of input lists, and has a better runtime for large lists.Note that here I've written it as a generator yielding tuples instead of a function returning a list of tuples, but converting that into a list is trivial.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/heapq.html#heapq.merge
