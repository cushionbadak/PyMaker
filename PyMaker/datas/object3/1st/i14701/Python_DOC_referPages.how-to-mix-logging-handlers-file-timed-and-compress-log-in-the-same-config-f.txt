Natural Text
I need to prepare a logging config file in json which rotate it by time, size and compress de file rotated for all modules in my app (I'm stuck now). I want to do it using a sigle json config file, this is my current file, however this configuration only rotate by time:If I add other handler in handlers section (logging.handlers.RotateFileHandler) to rotate by size the result log file duplicate al messages.My main program get logger properties using:My modules call the logger like:How could I mix my three requirements (rotate by size and time, and compress rotated file) in this file?Thaks a lot!UPDATE 1As suggested @Bakuriu I've created a new class to override needed methods to be able to compress rotated files:So that "new" class is called fron logging config file where I added a new handler:In the next update I'll add a method to override the needed method(s), and be able to mix time and file size rotation together.UPDATE 2Well, I've overrided "shouldRollover" method, thus I've mix the time and file size for rotation.And modify my logging config file in json to rotate time by day but check in seconds... it means 86400s (seconds in a day) and a size limit of 5Mb:This way reuses the others methods from TimedRotationFileHandler and if rotation is called by maxBytes, then it uses suffix in seconds inherited from init TimedRotationFileHandler method, which format is: "%Y-%m-%d_%H-%M-%S" . This is the reason I've used "{when="S", interval=86400}" and not "{when="D", interval=1}"
This is to be expected. If you add a handler this handler either wont produce messages (due to filtering) and so nothing will change or it will write those messages (thus duplicating them).The TimedRotatingFileHandler and the RotatingFileHandler only support, respectively, rotating by time and by size. Not both at the same time.AFAIK there is no built-in way to achieve what you want, so using only the configuration file you wont be able to achieve what you want, you have to code something to put together the functionality.Consider reading how to create a new rotating handler in the Logging Cookbook. If you save this handler class in a file mypackage.myrotatinghandler you can then specify:in the configuration file.Note that, to add compression when saving a file it is sufficient to set the rotator attribute of the rotating handler with a function that saves a compressed file. Taken from the link above:The rh handler will behave as a normal RotatingFileHandler but also compress the logs.However setting the conditions to do a rotation require that you re-write parts of the handler. You may read the sources for the logging.handlers module to see how the built-in handlers are implemented.


Answer URL
https://docs.python.org/3/howto/logging-cookbook.html#cookbook-rotator-namer
