Natural Text
I want to run 2 functions at the same time. Then wait until those 2 functions are over, and it can start processing the rest of codes.  I tried to use thread module but it just continue running without waiting those 2 functions finished.  My example codes are as below: If the above codes get executed, the print ("new") inside method_1 will just print out immediately even before the function_a and function_b are over in each round of the for i in range(3). However, what I want is that the new will only be printed out as function_a and function_b are finished printing 1 and 2.  That is, the codes should stop at threading and wait for the function_a and function_b to finish so that it can continue processing the next i in the for i in range(3).If anyone know how to solve this, please let me know. Appreciated!!
You need to join the threads (join means "wait for it to finish"). See the docs. Depending on your problem, you may want to use multiprocessing instead, as mentioned in the comments. I'll proceed under the assumption that you do want to do threading.Defining a class with methods to ask your question was unnecessary (and, even worse, you're redefining  run, function_a, and function_b on every iteration). Just use some functions. You can turn them into methods later if you need to.The sleeps are just there to show that the two threads really are running at the same time. Example output (which may vary from run to run depending on exact timing):EDIT: class-based example
As already pointed out in the other answer, you need to join the threads. This example keeps your structure. I have added a sleep there so that you can see it works (otherwise buffered output might mess things up). 


Answer URL
https://docs.python.org/3/library/threading.html#threading.Thread.join
