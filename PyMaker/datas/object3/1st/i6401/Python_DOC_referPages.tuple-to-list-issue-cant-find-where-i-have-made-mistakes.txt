Natural Text
For file:and so forth, I have created a function that would calculate the average of grade of each following year. However, what I found was that instead of getting a list at the very end, I am continuously getting a tuple. I have to get a list instead of tuple to pass the assertion test. This function actually gives meYear,  Grade2000,  832001,  882002,  952012,  99Something similar to this. It gives me the average of each year. However, it should be in orderly fashion (according to years), so I have done the last step. Should pass this:years_answer = [i+2000 for i in range(0,5)]    assert_equal(years, years_answer)The error I am getting:Any suggestions in fixing such problems? 
Choose one of the following:- 1. return list(years),list(average_grades) in place of return years, average_grades 2. Use assert_equal(list(years), years_answer) 3. Use assert_equal(years, tuple(years_answer)) 4. Use years_answer = (i+2000 for i in range(0,5)) Separately I don't understand your statement This function actually gives me: Year, Grade 2000, 83 2001, 88 2002, 95 2012, 99. As per the code and the error in OP function actually gives you year=(2000,2001,2002...) and average_grades=(83,88,95...)Let's understandFirst let us see what zip does. Let us split the above statement into smaller steps...at the end of it is iterator on tuples.after sorting..now re-zip the tuples..Now finally when you do...At this point years and average_grades are tuples not lists.
You need to change the final line that returns tuples:to one where they are explicitly converted to lists:This will work as zip() returns an iterator of tuples when what you want is lists. We know this from the documentation:zip(*iterables)Make an iterator that aggregates elements from each of the iterables.


Answer URL
https://docs.python.org/3/library/functions.html#zip
