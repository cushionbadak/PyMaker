Natural Text
Yesterday I posted a question where I was searching for a way to do an infinite for loop, without using while at all (because my teacher wants so, and also, we can't use any commands we haven't seen in class). It was difficult as apparently there wasn't a very viable option that didn't use while, or other functions like itertools or .append, etc.You can see that question hereAlso, thanks a lot for the feedback you guys brought me! :)But I managed to talk with my teacher and we got permission to use itertools or just a range big enough (instead of actually infinite).I solved a few exercises already, but now I have the following instructions:(Think about grades)  • Ask the user a number (through inputs), and keep asking until the user tells to stop.  • Then, calculate the average from all the numbers entered. (It's actually a little more complex, but I shortened it and I believe I can deal with the rest)As I said, I must use a for loop, and I can't use whiles at all.If I could use while, I'd do something like this:How can I do something like that, but with for loops? I have no idea on how to store the data for later calculation.Also, I'm interested into knowing a more "proper" way to be able to end the loop, but I can't use a break neither.Thanks in advance! Any advice is appreciated and welcome! :)
One way to do this is, without outside modules, is to use two-arg iter; when passed two arguments, the first is a no-argument function to call over and over, and the second is a sentinel value than indicates you should stop.So for example, you could make an infinite loop with something as simple as:Since the bool constructor returns False, a sentinel value of True will never occur, so that's an infinite loop.Similarly, to make a loop that prompts until the user responds with a given sentinel string, like 'q' for quit (or just the empty string), you could do:Obviously, this is a little obscure (two-arg iter is rarely seen), so usually you'd use while True: with the loop containing a test-and-break or test-and-return (the latter doesn't violate the letter of the teacher's requirements). Similarly, exception handling can be used to exit the loop, though it's ugly:Note: Literally everything I've mentioned is terrible style, aside from an actual while True: loop with a test-and-break/return case. But you've got one hand tied behind your back, so I'm suggesting some terrible mutant hands to substitute.
Even though 'no-break' rule and a request for a "proper" way to end a loop are somewhat contradictory, I'd say that is possible, even without return :here we just iterate over ever-growing list of values, and when we need to stop - we simply stop adding values to it, and the loop ends.HOWEVER This is NOT a proper way of handling that issue, read ShadowRanger for more details - this is bad coding style and should not be used.
Maybe saving all the data obtained in an array?I think arrays on python work as Linked Lists, so you won't have any overflow problems, at least that would be a starting point


Answer URL
https://docs.python.org/3/library/functions.html#iter
