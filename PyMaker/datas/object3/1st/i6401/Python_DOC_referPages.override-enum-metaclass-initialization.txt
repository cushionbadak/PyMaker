Natural Text
Although pylint raises a warning on enum.Enum(value=..., names=...), I see from the enum doc that one could programmatically create an Enum like the followingBut I'd also like to add methods:I think this should involve overloading metaclass __prepare__(mcls, names, bases) to augment bases with the names dict, but apparently bases is not how the Enum attributes are created. Anyone have any tips?
It is quite simple using the aenum library1:The _ignore_ tells aenum what to, um, ignore and, in fact, anything in _ignore_ is removed from the final Enum class.Due to a bug in Python's Enum this doesn't yet work unless you use aenum.1 Disclosure:  I am the author of the Python stdlib Enum, the enum34 backport, and the Advanced Enumeration (aenum)  library.
What if you create a new subclass of Enum instead?Or, depending on the use case, you could create another class that wraps the enum.Either should work as follows:Hope this helps!
You can also use nonlocal to avoid needing the aenum package:


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html#restricted-subclassing-of-enumerations
