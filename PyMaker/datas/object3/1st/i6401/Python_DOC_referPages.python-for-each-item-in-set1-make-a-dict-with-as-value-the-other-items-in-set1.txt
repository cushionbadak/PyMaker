Natural Text
Sorry for the strange title didn't know how to explain it better (feel free to edit it).I'm not able to figure out how to (efficiently) do the following. Let's say I have a set {a,b,c}, I want to get the following output:I found a way to do so, but I think it's not efficient/pythonic (because I suspect that there is a function in Python to do so):This will print: [{'b': {'c', 'a'}}, {'c': {'b', 'a'}}, {'a': {'b', 'c'}}]
Yes, there's a more compact way: use the set difference operator.outputAnother related way to do this is to make a 1 item tuple from u rather than a set. The benefit is that tuples are simpler than sets, and faster to build; OTOH, Python sets are reasonably efficient, although they do have the overhead of a hash table. This code gives equivalent output to the previous code.Even though we're calling the set difference method that method doesn't actually build a set from its iterable arg, it merely iterates over it directly.
The set difference approach of PM 2Ring is fine and the most compact. For completeness sake and since it is more generally applicable, e.g. if you want your dict values to be lists, tuples or generators, the following conditional comprehension based version should be suggested:


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset.difference
