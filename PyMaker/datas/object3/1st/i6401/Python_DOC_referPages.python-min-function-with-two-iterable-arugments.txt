Natural Text
I understand that min will give me the smallest item if I use a list or a group of numbersbut when this was used in map:it gives me back:isn't map suppose to help me to apply min to L1 and L2 in turn? and I am kind of expecting:
If you want the min of each of several lists, you need to create a list (or iterable) of the lists to hand to map:That has the effect of calling min(L1) and then min(L2).map can take any number of iterable arguments; it assembles all of the corresponding elements of the iterations and passes all of them to the provided function. So map(min, L1, L2) is similar to (min(L1[0], L2[0]), min(L1[1], L2[1]), min(L1[2], L2[2])) (except that it is an iterable, not a tuple).
If your lists arethenwill apply the min() function to the corresponding elements of L1, L2:(But it will do it only if there is a request for evaluating it (so called a lazy evaluation) - as the for loop in your case - so it will not return a list [1, 28, 9], but a map object.The map object is a sort of the iterator - something as a recipe how to do it.Why? Because lists may be very very long, but the recipe is still the same - the short one.)


Answer URL
https://docs.python.org/3/library/functions.html#map
