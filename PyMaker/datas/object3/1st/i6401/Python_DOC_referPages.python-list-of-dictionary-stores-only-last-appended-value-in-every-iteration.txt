Natural Text
I have this list of dictionary:I want to create a new list of dictionary (word_db2) that has 3 dictionaries for each dictionary in MylistOfdict. In addition to key and values of MylistOfdict, each of those dictionary should have 'Card Type' key with value Type 1, Type 2, Type 3 and 'Card Key' key with incremental valueCode:Output:This output is correct, but word_db2 stores only last appended value in every iterationOutput:
Let's review the loop body logic step by step:take one of the dictsmodify itappend it to the end of the listSo the key point you missed is that you modify and append the same object that was selected on the first step. And at the end of the snippet word_db2 contains six object refs, but only two unique. As a result, the output shows similar rows.You can make a shallow copy of a dict before modifying and appending it:As further note, if the dict contains other mutable objects like nested dicts, you should make a deep copy:
When you append a dictionary to a list, a reference to the original object itself is appended. So, you are currently just modifying the existing object's keys and values in each iteration of the inner loop, so the last written value is the only thing which persists. To do what you require, you would need to create a new dictionary object in each iteration of the inner loop. For the shown dictionaries in MylistOfdict, a simple dictionary comprehension would work. But if you have more complex dictionaries, use the copy module's deepcopy method. 
Don't use the same dict, make copies of them:
Use deepcopy. What's happening is that your append call is just appending a reference to the original object.


Answer URL
https://docs.python.org/3/library/copy.html
