Natural Text
How do i reference a variable from an instance in a dict?     this code:yields:and notin the actual code i dont want a whole list of 'if' statements. so i couple a dict with all the costs (charge) in this example to a dict with all the actual values so i dont have to doetcany tips on how to do this?in the end the quistion is:is there a way to update both a and b (b += 1 only updates b to 2)
In Python:all variables are references integers and strings are immutableSo when you do:If you use a mutable data type, then it works:Perhaps you can create a generic container:Then your wallet can be an instance of GenericContainer:You can set and/or retrieve the attributes directly:You can get the attribute by name from the inventory or using getattr:You can set it by name using dict of parameter:value or setattr:Looking at the result, I see why in Python I often use just a dictionary instead of creating a class - although I do miss the Javascript object syntax where you can access properties both using either foo.bar or foo["bar"].In Python, the builtin data structures are very powerful and Python developers tend to use a "we are all consenting adults" approach where you just pass data around without caring too much about attribute protection. Probably I would end up doing just this:And instead of using a charge(gold=10) method:It takes time for this "it is just data" approach to sink but after that you seldom miss the more bureaucratic OO idioms so common in languages like Java or C++ specially for small projects/teams.
It seems like the easiest way to do this is to change wallet from being an attribute to being a property.Properties are methods that act like attributes. They're calculated on-call every time rather than calculated when the object is created and never again. You use them the same way, though, so:


Answer URL
https://docs.python.org/3/library/functions.html?highlight=property#property
