Natural Text
I am trying to use lambda function to add up all the numbers. I am getting following error, Syntax error - "Generator expression must be parenthesized if not sole  argument"It works if I use the following.
Python 3 users should do a from functools import reduce. reduce has been moved out of builtin functions from Python 3.outputExplanationTo understand reduce, check here it needs a starting seed of 0 to avoid conversion errorsIf you do not give a starting value:-If you do not want to give a starting value for the aggregation do the below:-
Simple solution using List Comprehensions. Solution using functools.reduce (Python 3):N.B.: 0 is the initializer which is an optional parameter of functools.reduce.If the optional initializer is present, it is placed before the items  of the sequence in the calculation, and serves as a default when the  sequence is empty.Output:
Note: Python 3 developers need to use:The signature is reduce(function, iterable[, initializer])So, you can decompose as follow:You get 8.Here, iterable is a generator object. And notice that initializer is required because the default value is None. Of cours you can put all things together with parenthesis. 
You have to understand some things before working with lambda :How lambda syntax works ;Now we will pass the argument to this lambda , there are two ways to passing argument first one :Second method :Now if we use reduce with lambda then the syntax is :So if you are passing a generator expression what should be your lambda syntax:and what is your generator expression is:let's put in lambda syntax:ok now we don't need print because we are using function and returning the result so:when you will run this program you will get :Because we are adding strings and when you do str(1) + str(2) it is 12 in python not 3 so what we have to correct is convert the str to int there :Now the output is :So which mistake you were doing :Your generator expression is wrong because you are mixing with generator expression output with lambda parameters :so change this :to this :
I think something like this should actually be enough for the problem.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functools.html#functools.reduce
