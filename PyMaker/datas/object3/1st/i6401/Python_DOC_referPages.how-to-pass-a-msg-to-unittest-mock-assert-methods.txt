Natural Text
The TestCase docs specify that assert methods can take an optional msg keyword argument to specify a message to add context to the assertion:All the assert methods accept a msg argument that, if specified, is used as the error message on failure (see also longMessage).Is there a way to do this with the unittest.mock assert methods, in particular assert_any_call?
Looking at the source of assert_any_call, the message is hard-coded:Moreover, the AssertionError is raised directly in the code, rather than being the consequence of a failed assert statement. This pattern is followed by all the assert_* methods in the module.  So there is no way to set a custom message unless you subclass and override the methods that interest you.


Answer URL
https://docs.python.org/3/library/unittest.html?highlight=testcase#unittest.TestCase.assertEqual
https://docs.python.org/3/library/unittest.mock.html#the-mock-class
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_any_call
