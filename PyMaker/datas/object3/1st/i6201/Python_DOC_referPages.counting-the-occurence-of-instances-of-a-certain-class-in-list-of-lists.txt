Natural Text
I have list of lists in which I want to count the number of B() and C() instances and am looking for a suitable method to do this. Using collections.Counter() and the .count() function have resulted in strange results, and I suspect I do not fully understand how list of lists work in python, or how lists of class instances work in python.This is the list of lists:withAnd, I use the below code to randomly change B() instances in lst into C() instances:How do I count the number of B() and C() instances in the list?
You can use isinstance()You can check what class an element is with isinstance().Here is an example:So if you have your list, you can do:you can get the occurrences of the B() and C() classes.Essentially, we are using a generator comprehension to apply the isinstance() function to every element in the list. We then use sum on the generator as True evaluates to 1 and False to 0, so we will get the total count.As a side note, although I said it is not good practice to name a list 'array', it is actually worse to name it exactly 'list' as this prevents you from being able to use the list() function! Better would probably be lst or l. :) 


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
