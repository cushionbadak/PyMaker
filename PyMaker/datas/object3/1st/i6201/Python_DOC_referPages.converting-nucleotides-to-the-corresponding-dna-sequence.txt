Natural Text
IÂ´m working on an assignment in python. I have to find a function or a program that converts this list to the corresponding DNA sequence. I think maybe I can make a definition function to convert those bases to corresponding letters. How can I do that? Any ideas? PS: I began to learn python very recently, so I hope you guys can help me :)
Yes a few! as you begin not a long time ago, let do something simple:You can read about the basis of loop here https://wiki.python.org/moin/ForLoop
Most succinct:otherwise:
Let's use string indexing and join:Output:
How about a map?str.join is used to take a list (or any iterable) of strings and join them together. map applies the same function to every element in an iterable.Quick note. I ran this code on a terminal, but if you're running this in a script, don't forget to assign the result back to another variable.
For completeness I thought I would add the itemgetter https://docs.python.org/3/library/operator.html#operator.itemgetter solution.In this case, it gets the character in index (0) of every element in bases_list. It is said to be slightly faster and cleaner than lambda operator.itemgetter or lambdaresult:
If you want a function that converts the base name to its corresponding letter, you are lucky here, because it is simply the first letter of the base name.Taking the first letter of a string is easily done by "indexing". For instance:In a simple case like this, one would probably not bother defining a specific function, but it is possible and may look as follows:Now you can apply the function to every base name in your list. The usual way to do this in python is by using a "list comprehension":What you have now is the list of the letters: ["A", "G", "T", "C", "T", "A", "G", "C", "T", "A", "G"]The next step is to join them together into a string. An efficient way to do this is to use the join method that is defined for strings. It sticks the string between the successive elements it is given: "_".join(["A", "B", "C"]) will result in "A_B_C". Here you want to put the letters together with nothing between them, so you have to use the empty string:Note that progressively building the string in a for loop by concatenating new letters one by one to the current state of the string is possible (see https://stackoverflow.com/a/47036161/1878788). This may be expected of you if python is just used to give you a general idea of how programming languages using an "imperative" style work. However, it is not efficient in python, that is why many answers did not use this technique.


Answer URL
https://docs.python.org/3/library/operator.html#operator.itemgetter
