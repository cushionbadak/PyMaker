Natural Text
I have two samples:One:Output:Two:Output:UnboundLocalError: local variable 'a' referenced before assignmentSo what is the difference between them? I thought both math.pi and a were global in this case and it should produce UnboundLocalError.
If you do variable assignment within function the global variable would be ignored and won't be accessible within function execution, in sample with math lib you do not override name math itself, that's why it works. Snipped below would give you same error with math lib:You can use statement global before accessing variable, but if you will do any assignment later you will override global variable, so it's better to ALWAYS  avoid doing that.
In the first function, the variable is math, not math.pi. Since you're not assigning to math, it doesn't become a local variable. Assigning to an attribute of a variable is not the same thing as assigning to the variable itself.If you changed the function toyou would get the same kind of error as in the second function:UnboundLocalError: local variable 'math' referenced before assignment
This has been answered a few times on SO before.A variable is local to a function if there's a statement assigning it inside that function.In your instance a = 3 defines a as local variable inside of your function. The first print(a) tries to access it, but it's not assigned a value yet.That's why you see:The global instance created by a = 0 plays no role here.


Answer URL
https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python
