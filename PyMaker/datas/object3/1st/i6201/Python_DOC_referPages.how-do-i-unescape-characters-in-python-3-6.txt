Natural Text
I'm a little confused on how to unescape characters in python. I am parsing some HTML using BeautifulSoup, and when I retrieve the text content it looks like this: I'd like for it to look like this:Here is my code below:How do I remove those encoded backslashed characters? I've looked everywhere and nothing has worked for me.
You could use regular expressions:re.findall("exp", s) returns a list of all substrings of s which match the pattern "exp". In the case of "[\w]+" all combinations of letters or numbers (no hex string like "\u00a0"):You can include characters by adding them to the expression like so:' '.join(s) returns a string of all elements seperated by the string in the quotes (in this case a space).
You can convert those escape sequences to proper text using the codecs module.outputThe codecs.decode(s, 'unicode-escape') function is quite versatile. It can handle simple backslash escapes, like those newline and carriage return sequences (\n and \r), but its main strength is handling Unicode escape sequences, like the \u00a0, which is just a nonbreak space char. But if your data had other Unicode escapes in it, like those for foreign alphabetic chars or emojis, it would handle them too.As Evpok mentions in a comment, this won't work if the text string contains actual Unicode characters as well as Unicode \u or \U escape sequences.From the codecs docs:unicode_escapeEncoding suitable as the contents of a Unicode literal in  ASCII-encoded Python source code, except that quotes are not escaped.  Decodes from Latin-1 source code. Beware that Python source code  actually uses UTF-8 by default.Also see the docs for codecs.decode.


Answer URL
https://docs.python.org/3/library/codecs.html#text-encodings
https://docs.python.org/3/library/codecs.html#codecs.decode
