Natural Text
I am trying to dig deeper and climbing higher in learning Python.In attempting to learn everything about the collections module, I am having problems exploring every corner of it.In the online documentation and in help(collections), it introduces 9 specialized container datatypes, see8.3. collections â€” Container datatypes:Compared to that list, there are 26 others not specified in the documentation and with only very limited detail in the help() output:Is it necessary to invest time to explore the other 26?
You are looking at the __all__ exported list of globals of the module. This list is larger than just the documented objects for two reasons. The first is that it includes submodules; in this case collections.abc is listed here as abc.The second is that there are objects added for backwards compatibility; the extra names come from the collections.abc submodule. Once upon a time that module didn't exist and those objects lived in collections itself before being moved. Names from that module are imported into collections to accommodate code that still imports from the old location. This is documented on the page you linked:Changed in version 3.3: Moved Collections Abstract Base Classes to the collections.abc module. For backwards compatibility, they continue to be visible in this module as well.So of those 26, one is a submodule of collections, collections.abc, and the remaining 25 objects are explicitly there to support backwards compatibility of names moved to the collections.abc module.If you want to learn about the other objects, then you'll find they are documented in their own location. Use help(collections.abc) or the collections.abc module documentation.


Answer URL
https://docs.python.org/3/library/collections.html
https://docs.python.org/3/library/collections.abc.html
https://docs.python.org/3/library/collections.html
https://docs.python.org/3/library/collections.abc.html
