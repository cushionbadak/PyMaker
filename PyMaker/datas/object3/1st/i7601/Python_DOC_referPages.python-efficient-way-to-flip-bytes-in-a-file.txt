Natural Text
I've got a folder full of very large files that need to be byte flipped by a power of 4.  So essentially, I need to read the files as a binary, adjust the sequence of bits, and then write a new binary file with the bits adjusted.In essence, what I'm trying to do is read a hex string hexString that looks like this:"00112233AABBCCDD"And write a file that looks like this:"33221100DDCCBBAA"(i.e. every two characters is a byte, and I need to flip the bytes by a power of 4)I am very new to python and coding in general, and the way I am currently accomplishing this task is extremely inefficient.  My code currently looks like this:The code I pasted above accurately accomplishes what I need (note, my actual code has a few extra lines of: "hexString.replace()" to remove unnecessary hex characters - but I've left those out to make the above easier to read).  My ultimate problem is that it takes EXTREMELY long to run my code with larger files.  Some of my files I need to flip are almost 2gb in size, and the code was going to take almost half a day to complete one single file.  I've got dozens of files I need to run this on, so that timeframe simply isn't practical.Is there a more efficient way to flip the HEX values in a file by a power of 4?.... for what it's worth, there is a tool called WinHEX that can do this manually, and only takes a minute max to flip the whole file.... I was just hoping to automate this with python so we didn't have to manually use WinHEX each time
You want to convert your 4-byte integers from little-endian to big-endian, or vice-versa. You can use the struct module for that:
Here is a little struct awesomeness to get you started:To do this at full speed for a large input, use struct.iter_unpack 


Answer URL
https://docs.python.org/3/library/struct.html
https://docs.python.org/3/library/struct.html#module-struct
https://docs.python.org/3/library/struct.html#struct.iter_unpack
https://docs.python.org/3/library/struct.html
