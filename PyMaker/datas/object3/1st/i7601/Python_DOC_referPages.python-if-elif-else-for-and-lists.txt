Natural Text
I'm trying to iterate elif statements over lists with an else statement at the end. Here is my code:meal_objects, build_meal_objects, and ingredient_objects are lists.The problem is that this code is horrible for many reasons. If the first condition is not met, each for loop will run even if one of the for loops conditions have already run, and the final else statement will also be running. Really, if any of the if statements within any of the for loops is met, then the rest of the if block should not execute.The code should really be something more like this pseudocode:I feel like I might be overlooking something really simple, so forgive me if that is the case or if this is a poorly written question. Thanks!
Probably the simplest (and most flexible way) is to put them in a function and force a return, eg:Then call it as:This means that only the first element of all lists will have a fill set and it returns a reference to the list and the item that was set which you can check later if you want to do the print.eg:I suppose if you really had a need to, you can make use of the for/else syntax that Python has but that requires you to effectively chain the sequences to a single for to issue the break on, eg:
Ok this is going to need some explanation. Take a look at this below.The above program just prints values till it finds a 3. output:What if the last continue and else weren't present?output:See it doesn't even stop after finding a 3 that's because the break only caused to exit out of the inner loop. So the first code can be used to exit out of a nested loop. Even a very deeply nested loop.So how to apply this in your code? Look at this!Use flag variables. Now in the above code first set flag1=True and flag2=True. The first ifblock gets executed and if clickPoint is None then it is printed. And flag2 is set to be False.Why did I do that? To ensure that it fails in the next if statement. Thereby none of your for loops are executed. The next part if incase clickPoint is not None. The next if is executed and note here is where I did a small change!Create a dict of your objects and get them one by one using range(your_dict_size). NOTE This way you can add even more and more objects.Remember I explained about exiting out of nested loops? That's exactly what happens. The moment you get what you wanted that's it control exits and no more for loops are run. and set flag1 to FalseNOTE: The reason for two flag variables is because to ensure your else part (Here it is the last if) always executes if the first two ifs fail. 
I think this is what you're trying to do:This makes sure that only one of the for loops calls each._button.setFill('green'). If none of them calls it, then the print statement runs.
Seems like you might was well use itertools.chain to condense the for loops into one block. This way you loop over all the items in your lists and stop as soon as you get to the first one that is "inside".


Answer URL
https://docs.python.org/3/library/itertools.html
