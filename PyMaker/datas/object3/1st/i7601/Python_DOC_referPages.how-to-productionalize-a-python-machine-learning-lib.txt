Natural Text
I'm using Scikit-learn to build a classification model (e.g. LogisticRegression). When the model is built, what tool can I use to put the model into production and run it on a scheduled basis on the new data set? i.e. in Spark MLlib, we can serialize a model and use an Oozie workflow to do the scoring on a regular basis. But what is an equivalent tool for Python models?
For my custom ML models I often tend to pickle them with the pickle module. However, sklearn recommends the use of joblib (also check out the section on Model persistence in sklearn) for serializing objects with large numpy arrays. Now, I don't know what your production environment is nor will I make any assumptions. I will give you an example though. I have a website that provides recommendations. There are several models used in production that have to be updated either in as close to real-time as possible or at regularly scheduled intervals. These models are all live in the website, i.e. they get loaded when the website is launched, live in the configuration of the site, and can be updated by the site. i.e. Predictions are made as data streams in. When you say "do the scoring on a regular basis" I assume you what you mean is that you are checking the performance of the model on new data that has been collected. In my situation the models are updated on a regular basis, but for validation purposes I will keep an older version of the model to test against unseen data.For example, I will keep a model from the first of each month and at the end of the month will collect all of the new data as a test set. The model is then "scored" against this new data and I can see if the performance is changing over time. The model changes on a regular basis (adding new users, new items, or new ratings) so the month old model is not an exact representation of the current model, but this method gives me an idea if the assumptions I made when deciding on the structure of the model still hold true. This gives me insight as to whether I need to revisit that particular model and think about tinkering its construction. This entire process can be scripted and scheduled as a cron job.I will note that it is possible to use Oozie with pyspark as documented in run pyspark on oozie and Oozie python workflow example walkthrough, but as I have never used Oozie I cannot comment on its similarity to any other python tool.


Answer URL
https://docs.python.org/3/library/pickle.html
