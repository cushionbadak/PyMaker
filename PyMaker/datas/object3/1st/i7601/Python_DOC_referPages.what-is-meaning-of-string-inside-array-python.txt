Natural Text
What does "CmdBtn['menu'] = CmdBtn.menu" in second last line mean.
When you use x[y] = z, it calls the __setitem__ method.i.e.In your case, CmdBtn['menu'] = CmdBtn.menu meansThe Menubutton class does indeed provide a __setitem__ method. It looks like this is used to set a "resource value" (in this case CmdBtn.menu) for the given key ('menu').
This is not a "string inside an array". The brackets operator is used for item access in some kind of sequence (usually a list, or a tuple), mapping (usually a dict, or dictionary), or some other kind of special object (such as this MenuButton object, which is not a sequence or a mapping). Unlike in some other languages, in python, ANY object is allowed to make use of this operator. A list is similar to an "array" in other languages. It can contain a mixture of objects of any kind, and it maintains the order of the objects. A list object is very useful for when you want to maintain an ordered sequence of objects. You can access an object in a list using its index, like this (indexes start at zero):A dict (dictionary) is useful for when you want to associate values with keys so you can look up the values later using the keys. Like this: Finally, you may also encounter custom made objects that also use the same item-access interface. In the Menubutton case, ['menu'] simply accesses some item (defined by the tkinter API) that responds to the key, 'menu'. You can make your own object type with item-access, too (python 3 code below): This object doesn't do much except return the same string for key or index value you give it: 
First of all, in Python everything is an object and square brackets means that this object is subscriptable (for e.g. tuple, list, dict, string and many more). Subscriptable means that this object at least implements the __getitem__() method  (and __setitem__() in your case).With those methods it's easy to interact with class members, so don't afraid to build your own example, to understand someone else's code.Try this snippet:
It is shorthand for CmdBtn.configure(menu=CmdBtn.menu)The way to set widget options is typically at creation time (eg: Menubutton(..., menu=...)) or using the configure method (eg: CmdBtn.configure(menu=...). Tkinter provides a third method, which is to treat the widget like a dictionary where the configuration values are keys to the dictionary (eg: CMdBtn['menu']=...)This is covered in the Setting Options section of the official python tkinter documentation


Answer URL
https://docs.python.org/3/library/tkinter.html#setting-options
