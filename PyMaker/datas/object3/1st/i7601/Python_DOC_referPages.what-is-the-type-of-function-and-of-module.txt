Natural Text
So a method of a class is an instance of class function. Since function is a class and a class is an object, what is the type of function, i.e. what is it an instance of?    As the comments suggestedThen why does type(function) not work? Is function a class, of which a class's method is an instance?Similarly, why does type(module) not work?
The built-in module types stores all kind of different types that are used throughout the language. It contains also the FunctionType which corresponds to the instance method:When calling type(Foo.bar) in the interpreter then the output is <class 'function'> however this does not necessarily mean that the class's name is 'function' but it is just the class's representation (__repr__):As pointed out in the comments types.FunctionType also only holds a reference to the type of functions which is defined at the implementation level.The type of FunctionType is type again, that is FunctionType is an instance of type (as it is the case for all classes).Also note the peculiaritywhich means that type is its own class (i.e. type.__class__ pointing to itself). This is achieved at the implementation level.
A function is the simplest callable object in Python.read more here


Answer URL
https://docs.python.org/3/library/types.html
https://docs.python.org/3/library/types.html#types.FunctionType
https://docs.python.org/3/library/builtins.html
