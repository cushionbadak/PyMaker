Natural Text
I have a dataframe :i want output as How do I remove these tailing alphabets I have tried this code 1st approach: 2nd approach:These are not working. They are not removing the tailing s from the columns. third approach All these are not working. The last one removes the tailing s but it converts the values without 's' to zero or nan. 
First, IÂ´m going to create a reproducible example:Now, you can use regex and re.sub:    Output:
This isn`t super clean, but it works!What this does is it makes a new pandas dataframe with the formatted data. It formats it by searching for the regex (\d+\.\d+|\*|NaN) which will find all floats, *'s or NaN's. Using this regex, we split the column which is turned into a string based on finding one of the 3 mentioned patterns. Then we take every odd index, since that holds what were interested in.Now, we have a list of strings on the floats without s, and the * and Nans. the list comprehension replaces all the *'s and NaN's with 0 and casts all the elements to float (since they are still strings).Not elegant, but it works!
I found this to be a simple approach (as answered here)-Use replace to retain only the digits (and dot and minus sign).This would remove characters, alphabets or anything that is not defined in to_replace attribute.So, the solution is:df['A1'].replace(regex=True, inplace=True, to_replace=r'[^0-9.\-]', value=r'']df['A1'] = df['A1'].astype(float64) 


Answer URL
https://docs.python.org/3/library/re.html#re.sub
