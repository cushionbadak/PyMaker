Natural Text
I have a list r = [1,2,3,None,None,4,None,5] I want to know the number of times the None occur and the length. This should give me:[2, 1] and 2I wrote the following code:as output I am getting the following The code works good. But is there a more beautiful way to do it in python?
Use the itertools.groupby() object to both group the consecutive None values, and to count the group length:Since g is a iterator of unknown length, I used sum() to avoid materialising that into a list; that could be quite memory intensive otherwise. If you are 100% certain that your groups of consecutive None objects is small (a few hundred at most) it may be faster to just use len(list(g)) instead.The default behaviour for groupby() is to produces groups of identical objects, so consecutive objects for which an is test is true. This is ideally suited for None values. For each group, a k and a dependent iterator are produced, with k set to the common group object; if k is None you know you have a series of consecutive None objects on hand.
Use itertools.groupby to group consecutive similar items, and filter out those whose group key is not None:



Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/itertools.html#itertools.groupby
