Natural Text
I'm trying to split any number string such as 3.1415926535897932384626433832795028841971 right after each 0 or group of 0. However, I would like to keep the 0 after each group.For example, the string 10203040506070809011 should be split intoand the string 3.1415926535897932384626433832795028841971 should be split intoI tried to split apart the string with a positive lookbehind and an empty string:but this does not split apart the string at all, even though the pattern is matched.I also tried just splitting apart the string based on the 0 and adding a 0 after the first couple strings, but it seems convoluted and inefficient.Is there any way to split a string based on a lookahead or lookbehind on an empty string? I'm asking about the general case, not just with numbers. For example, if I wanted to split apart 3:18am5:19pm10:28am into the separate times without losing the am or pm, and get an array ['3:18am', '5:19pm', '10:28am'], how would I go about doing this?
This simple regex in re.findall should suffice:Note:findall returns all non-overlapping matches of pattern in string, as a list of strings.for each match we want the longest string of digits (or a dot) ending with at least one zero, or the end of the stringthe zeros in the end should not be captured as another match (hence the (?:...)Similarly for you second example:No need for lookahead/lookbehind magic, or non-greedy matching.
use re.findall:The key is to use a double negation: not preceded and that is not a zero (to match a preceding zero or the start of the string)
Python split requires a non-zero-width match.You can use findall with this regex to get your matches:([\d.]+?(?:0|$)) matches digit or dot that ends with 0 or end of line.Update:However I note from your edited question and comments that you're looking for a generic solution to use zero-width regex patterns for split operation.I suggest you install very useful regex module in python. Version 1 of this module provides most of the PCRE features and far outweighs default re module.Installation is pretty straight forward. Just download the tar gzip file from above link and then run:From inside the directory that you get after extracting the tar files. (Ignore few warning in install process).Once regex is installed just use this code:


Answer URL
https://docs.python.org/3/library/re.html#re.findall
