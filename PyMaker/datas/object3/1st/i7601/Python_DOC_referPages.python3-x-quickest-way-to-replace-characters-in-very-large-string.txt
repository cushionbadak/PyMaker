Natural Text
Let's say I have the following extremely large string using Python3.x, several GB in size and +10 billion characters in length:Given its length, this already takes +GB to load into RAM. I would like to write a function that will replace every X with A,  Y with B, and Z with C. My goal is to make this as quick as possible. Naturally, this should be efficient as well (e.g. there may be some RAM trade-offs I'm not sure about). The most obvious solution for me is to use the string module and string.replace():which outputsI worry this is not the most efficient approach, as I'm simultaneously calling three functions at once on such a large data structure. What is the most efficient solution for a string this large?
A more memory efficient method, that will not generate so many temporary strings along the way, would be to use str.translate.This will allocate just one (extra large in your case) string.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
