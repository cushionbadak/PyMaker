Natural Text
I have the following code and while it works for just checking one function (say the lower case), it stops working when two conditions are introduced. Could someone shed some light for teaching purposes, on why this is the case, give a solution, and explain the rationale. Note: this is not a duplicate of any other question, as the other examples don't explicitly deal with string boolean commands. Expected outcome: The email address should only be generated IF the username input is lowercase AND contains digits. (e.g. username123 is acceptable, USER is not, USER123 is not)The solution/answer must be simple and ideally not include a rewrite of the code (i.e without rewriting the function and introducing parameters etc, if this as possible)Code:As mentioned, the below code (checking for just the islower) works ....Working output:UPDATE:Someone suggested it was due to the missing (), but this isn't the case:Erroneous output:Removing the recursive main() call doesn't change things either:Erroneous output:Using OR instead of AND does not work eitherOutput below, when changed to ORTrying another suggested answer below using set(range(10)).intersection:The following - still not working:Output
You can create a simple functionand then use it in the if statement. This is the source I found it from: check if a string contains a number .You can also use regex if you prefer that, using the re module. But for something as small as this, I would recommend you go with a separate function. Its a more...simpler solution.Regex version:
The issue with this lineif username.islower() and username.isdigit()is that isdigit() returns True only if the entire string is numbers and islower() will obviously only return True if the entire string is lower case characters. This means that this statement will always fail as both conditions cannot be true. If we rethink the logic a bit what we need to test is that the email only contains alphanumeric characters (numbers and letters) but does not contain any upper case letters. This gives us:if username.isalnum() and (not any(c.isupper() for c in username)
It has been stated that the problem with your code is if you execute username.isdigit() it returns False statement because the variable username is not completely filled with digits, though, islower() is not as strict:FalseTrueIn your specific case, you may omit warnings if there are uppercase letters as you may transform them into lowercase. If you need a solution where there is also a check for uppercase letters, then you should also read the additional section in the end.If the structure of username does not really bother you, i.e. you simply want it to contain both lowercase letters and digits, then you may simply check if they both exist using regex:It works well even if username = 'A1b2C3', for instance.However, if the structure is important and you want digits follow letters at any cost, you should divide the username into two subsets, one containing letters and other containing digits and check if both exist in the correct order. Note that it is just a personal approach:Firstly, we check username if we can successively divide it into two sets of letters and digits, not more and not less;Secondly, we check if the first subset contains letters and the second subset contains digits;If the conditions are satisfied, then we create an e-mail.The code should be the following:Your e-mail address is: abc123@gmail.comNot valid username: see exampleAdditional sectionOkay. If you wish to raise a warning if there are uppercase letters, then you should not execute username = username.lower(). The 'uppercase condition' will be automatically checked in the second section as there is if subset_1.islower(). You should then simply add another print indicating that uppercase letters are not allowed. The same goes with the first section.I hope that helps!


Answer URL
https://docs.python.org/3/library/re.html
