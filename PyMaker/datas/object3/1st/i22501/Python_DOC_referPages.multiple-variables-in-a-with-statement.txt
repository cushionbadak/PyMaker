Natural Text
Is it possible to declare more than one variable using a with statement in Python?Something like:... or is cleaning up two resources at the same time the problem?
It is possible in Python 3 since v3.1 and  Python 2.7. The new with syntax supports multiple context managers:Unlike the contextlib.nested, this guarantees that a and b will have their __exit__()'s called even if C() or it's __enter__() method raises an exception.
contextlib.nested supports this:Update:To quote the documentation, regarding contextlib.nested:Deprecated since version 2.7: The with-statement now supports this  functionality directly (without the confusing error prone quirks).See Rafa≈Ç Dowgird's answer for more information. 
I think you want to do this instead:
Note that if you split the variables into lines, you must use backslashes to wrap the newlines.Parentheses don't work, since Python creates a tuple instead.Since tuples lack a __enter__ attribute, you get an error (undescriptive and does not identify class type):If you try to use as within parentheses, Python catches the mistake at parse time:SyntaxError: invalid syntaxhttps://bugs.python.org/issue12782 seems to be related to this issue.
Since Python 3.3, you can use the class ExitStack from the contextlib module.It can manage a dynamic number of context-aware objects, which means that it will prove especially useful if you don't know how many files you are going to handle.The canonical use-case that is mentioned in the documentation is managing a dynamic number of files.Here is a generic example:Output:


Answer URL
https://docs.python.org/3/reference/compound_stmts.html
https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack
https://docs.python.org/3/library/contextlib.html#module-contextlib
