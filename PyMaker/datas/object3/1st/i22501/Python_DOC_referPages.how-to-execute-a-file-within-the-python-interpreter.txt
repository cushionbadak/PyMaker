Natural Text
I'm trying to execute a file with python commands from within the interpreter. EDIT: I'm trying to use variables and settings from that file, not to invoke a separate process.
Several ways.From the shellFrom inside IDLE, hit F5.If you're typing interactively, try this.
For Python 2:For Python 3:See the documentation. If you are using Python 3.0, see this question.See answer by @S.Lott for an example of how you access globals from filename.py after executing it.
Python 2 + Python 3This will execute a script and put all it's global variables in the interpreter's global scope (the normal behavior in most scripting environments).Python 3 exec Documentation
Surprised I haven't seen this yet. You can execute a file and then leave the interpreter open after execution terminates using the -i option:
I'm trying to use variables and settings from that file, not to invoke a separate process.Well, simply importing the file with import filename (minus .py, needs to be in the same directory or on your PYTHONPATH) will run the file, making its variables, functions, classes, etc. available in the filename.variable namespace.So if you have cheddar.py with the variable spam and the function eggs â€“ you can import them with import cheddar, access the variable with cheddar.spam and run the function by calling cheddar.eggs()If you have code in cheddar.py that is outside a function, it will be run immediately, but building applications that runs stuff on import is going to make it hard to reuse your code. If a all possible, put everything inside functions or classes.
I am not an expert but this is what I noticed:if your code is mycode.py for instance, and you type just 'import mycode', Python will execute it but it will not make all your variables available to the interpreter.  I found that you should type actually 'from mycode import *' if you want to make all variables available to the interpreter. 
For python3 use either with xxxx = name of yourfile. 
From my view, the best way is:and after modifying yourfile.pyor but this will make the function and classes looks like that:yourfile.function1, yourfile.class1.....If you cannot accept those, the finally solution is:
For Python 3:Make sure that you're in the correct directory before running the command.To run a file from a different directory, you can use the below command:
Just do,Make sure not to add .py extension. If your .py file in subdirectory use,


Answer URL
https://docs.python.org/3/library/functions.html#exec
