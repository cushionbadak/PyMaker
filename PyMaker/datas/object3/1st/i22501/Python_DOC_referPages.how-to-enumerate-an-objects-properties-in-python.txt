Natural Text
I C# we do it through reflection. In Javascript it is simple as:How to do it in Python?
Be aware that in some rare cases there's a __slots__ property, such classes often have no __dict__.
See inspect.getmembers(object[, predicate]).Return all the members of an object in a list of (name, value) pairs sorted by name. If the optional predicate argument is supplied, only members for which the predicate returns a true value are included.
dir() is the simple way. See here:Guide To Python Introspection
The __dict__ property of the object is a dictionary of all its other defined properties. Note that Python classes can override getattrand make things that look like properties but are not in__dict__. There's also the builtin functions vars() and dir() which are different in subtle ways. And __slots__ can replace __dict__ in some unusual classes.Objects are complicated in Python. __dict__ is the right place to start for reflection-style programming. dir() is the place to start if you're hacking around in an interactive shell.
georg scholly shorter version 
If you're looking for reflection of all properties, the answers above are great.If you're simply looking to get the keys of an object, usemy_dict.keys()


Answer URL
https://docs.python.org/3/library/types.html#types.DynamicClassAttribute
