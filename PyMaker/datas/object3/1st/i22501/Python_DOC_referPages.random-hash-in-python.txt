Natural Text
What is the easiest way to generate a random hash (MD5) in Python?
A md5-hash is just a 128-bit value, so if you want a random one:I don't really see the point, though. Maybe you should elaborate why you need this...
I think what you are looking for is a universal unique identifier.Then the module UUID in python is what you are looking for.UUID4 gives you a random unique identifier that has the same length as a md5 sum. Hex will represent is as an hex string instead of returning a uuid object. http://docs.python.org/2/library/uuid.html
This works for both python 2.x and 3.x
The secrets module was added in Python 3.6+. It provides cryptographically secure random values with a single call. The functions take an optional nbytes argument, default is 32 (bytes * 8 bits = 256-bit tokens). MD5 has 128-bit hashes, so provide 16 for "MD5-like" tokens.
Yet another approach. You won't have to format an int to get it.Gives you flexibility on the length of the string.
Another approach to this specific question:I'm not saying it's faster or preferable to any other answer; just that it's another approach :)


It should also be noted that MD5 is a very weak hash function, also collisions have been found (two different plaintext values result in the same hash)Just use a random value for plaintext.


Answer URL
https://docs.python.org/3/library/secrets.html
