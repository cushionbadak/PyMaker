Natural Text
Is there a difference between assertEquals and assertEqual in the python unittest.TestCase?And if there is not, why are there two functions? Only for convenience? 
Good question!Actually, in Python 2.6, both assertEqual and assertEquals are convenience aliases to failUnlessEqual. The source declares them thus: In Python 3, to your point, failUnlessEqual is explicitly deprecated. assertEquals carries this comment :-)# Synonyms for assertion methods# The plurals are undocumented.  Keep them that way to discourage use.# Do not add more.  Do not remove.# Going through a deprecation cycle on these would annoy many people.So, the upshot appears to be that you should use whatever you like for Python 2.x, but tend toward assertEqual for Python 3.
A 3.3 update: From 26.3.7.1.1. Deprecated aliases :For historical reasons, some of the TestCase methods had one or more aliases that are now deprecated. The following table lists the correct names along with their deprecated aliases:
Not just for Python 3.x, since Python 2.7 assertEquals has been deprecated as well:From 25.3.7.1.1. Deprecated aliases
I think this was tension between the "only one obvious way to do it" vs. "alias to make the overall code flow semantically".  Personally I found I like to readover but likedover the other two (assertEquals(a, b) bothers my sense of grammar).The "only one obvious way to do it" has taken precedence going forward.
I don't find any mention of assertEquals in http://docs.python.org/library/unittest.html.  However, when I import TestCase and then do a "help(TestCase)", it's listed.  I think it's just a synonym for convenience.
If you open the source code in python 2.7, you can find this:assertEquals = assertEqual


Answer URL
