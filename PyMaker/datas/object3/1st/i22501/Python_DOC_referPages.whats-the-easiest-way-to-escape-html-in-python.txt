Natural Text
cgi.escape seems like one possible choice.  Does it work well?  Is there something that is considered better?
cgi.escape is fine. It escapes:< to &lt;> to &gt;& to &amp;That is enough for all HTML.EDIT: If you have non-ascii chars you also want to escape, for inclusion in another encoded document that uses a different encoding, like Craig says, just use:Don't forget to decode data to unicode first, using whatever encoding it was encoded.However in my experience that kind of encoding is useless if you just work with unicode all the time from start. Just encode at the end to the encoding specified in the document header (utf-8 for maximum compatibility).Example:Also worth of note (thanks Greg) is the extra quote parameter cgi.escape takes. With it set to True, cgi.escape also escapes double quote chars (") so you can use the resulting value in a XML/HTML attribute.EDIT: Note that cgi.escape has been deprecated in Python 3.2 in favor of html.escape, which does the same except that quote defaults to True.
In Python 3.2 a new html module was introduced, which is used for escaping reserved characters from HTML markup.It has one function escape():
If you wish to escape HTML in a URL:This is probably NOT what the OP wanted (the question doesn't clearly indicate in which context the escaping is meant to be used), but Python's native library urllib has a method to escape HTML entities that need to be included in a URL safely.The following is an example:Find docs here
There is also the excellent markupsafe package.The markupsafe package is well engineered, and probably the most versatile and Pythonic way to go about escaping, IMHO, because:the return (Markup) is a class derived from unicode (i.e. isinstance(escape('str'), unicode) == Trueit properly handles unicode inputit works in Python (2.6, 2.7, 3.3, and pypy)it respects custom methods of objects (i.e. objects with a __html__ property) and template overloads (__html_format__).
cgi.escape should be good to escape HTML in the limited sense of escaping the HTML tags and character entities.But you might have to also consider encoding issues: if the HTML you want to quote has non-ASCII characters in a particular encoding, then you would also have to take care that you represent those sensibly when quoting. Perhaps you could convert them to entities. Otherwise you should ensure that the correct encoding translations are done between the "source" HTML and the page it's embedded in, to avoid corrupting the non-ASCII characters.
No libraries, pure python, safely escapes text into html text:
cgi.escape extendedThis version improves cgi.escape.  It also preserves whitespace and newlines.  Returns a unicode string.for example
Not the easiest way, but still straightforward. The main difference from cgi.escape module - it still will work properly if you already have &amp; in your text. As you see from comments to it:cgi.escape versionregex version
Via BeautifulSoup4:


Answer URL
