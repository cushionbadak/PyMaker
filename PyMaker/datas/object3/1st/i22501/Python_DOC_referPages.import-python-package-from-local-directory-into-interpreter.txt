Natural Text
I'm developing/testing a package in my local directory. I want to import it in the interpreter (v2.5), but sys.path does not include the current directory. Right now I type in sys.path.insert(0,'.'). Is there a better way? Also, fails with this error:
You can use relative imports only from in a module that was in turn imported as part of a package -- your script or interactive interpreter wasn't, so of course from . import (which means "import from the same package I got imported from") doesn't work. import mypackage will be fine once you ensure the parent directory of mypackage is in sys.path (how you managed to get your current directory away from sys.path I don't know -- do you have something strange in site.py, or...?)To get your current directory back into sys.path there is in fact no better way than putting it there;-).
See the documentation for sys.path:http://docs.python.org/library/sys.html#sys.pathTo quote:If the script directory is not available (e.g. if the interpreter is invoked interactively or if the script is read from standard input), path[0] is the empty string, which directs Python to search modules in the current directory first.So, there's no need to monkey with sys.path if you're starting the python interpreter from the directory containing your module.Also, to import your package, just do:Since the directory containing the package is already in sys.path, it should work fine.
If you want to run an unmodified python script so it imports libraries from a specific local directory you can set the PYTHONPATH environment variable - e.g. in bash:If you just want it to import from the current working directory use the . notation:
Keep it simple:
A simple way to make it work is to run your script from the parent directory using python's -m flag, e.g. python -m packagename.scriptname. Obviously in this situation you need an __init__.py file to turn your directory into a package.
Using sys.path should include current directory already.Try:or:however it may be not a good practice, so why not just use:
If you want to import all methods from a particular package/file in the same directory, the correct way to import that is to do from mypackage import *
Inside a package if there is setup.py, then better to install it


Answer URL
https://docs.python.org/3/using/cmdline.html
