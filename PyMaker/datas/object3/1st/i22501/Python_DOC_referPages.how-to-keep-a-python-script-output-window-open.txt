Natural Text
I have just started with Python. When I execute a python script file on Windows, the output window appears but instantaneously goes away. I need it to stay there so I can analyze my output. How can I keep it open?
You have a few options:Run the program from an already-open terminal. Open a command prompt and type:For that to work you need the python executable in your path. Just check on how to edit environment variables on Windows, and add C:\PYTHON26 (or whatever directory you installed python to).When the program ends, it'll drop you back to the cmd prompt instead of closing the window.Add code to wait at the end of your script. For Python2, adding ...... at the end of the script makes it wait for the Enter key. That method is annoying because you have to modify the script, and have to remember removing it when you're done. Specially annoying when testing other people's scripts.  For Python3, use input().Use an editor that pauses for you. Some editors prepared for python will automatically pause for you after execution. Other editors allow you to configure the command line it uses to run your program. I find it particularly useful to configure it as "python -i myscript.py" when running. That drops you to a python shell after the end of the program, with the program environment loaded, so you may further play with the variables and call functions and methods.
cmd /k is the typical way to open any console application (not only Python) with a console window that will remain after the application closes. The easiest way I can think to do that, is to press Win+R, type cmd /k and then drag&drop the script you want to the Run dialog.
Start the script from already open cmd window orat the end of script add something like this, in Python 2:Or, in Python 3:
To keep your window open in case of exception (yet, while printing the exception)Python 2To keep the window open in any case:Python 3For Python3 you'll have to use input() in place of raw_input(), and of course adapt the print statements.To keep the window open in any case:
you can combine the answers before: (for Notepad++ User)press F5 to run current script and type in command: in this way you stay in interactive mode after executing your Notepad++ python script and you are able to play around with your variables and so on :)
Create a Windows batch file with these 2 lines:
In python 2 you can do it with: raw_input()In python 3 you can do it with: input()  Also, you can do it with the time.sleep(time)
Using atexit, you can pause the program right when it exits. If an error/exception is the reason for the exit, it will pause after printing the stacktrace.In my program, I put the call to atexit.register in the except clause, so that it will only pause if something went wrong.
I had a similar problem. With Notepad++ I used to use the command : C:\Python27\python.exe "$(FULL_CURRENT_PATH)" which closed the cmd window immediately after the code terminated.Now I am using cmd /k c:\Python27\python.exe "$(FULL_CURRENT_PATH)" which keeps the cmd window open.
On Python 3Will do the trick. 
To just keep the window open I agree with Anurag and this is what I did to keep my windows open for short little calculation type programs.This would just show a cursor with no text:This next example would give you a clear message that the program is done and not waiting on another input prompt within the program:Note!  (1) In python 3, there is no raw_input(), just  input().  (2) Use single quotes to indicate a string; otherwise if you type doubles around anything, such as  "raw_input()", it will think it is a function, variable, etc, and not text.In this next example, I use double quotes and it won't work because it thinks there is a break in the quotes between "the" and "function" even though when you read it, your own mind can make perfect sense of it:Hopefully this helps others who might be starting out and still haven't figured out how the computer thinks yet. It can take a while. :o)
If you want to run your script from a desktop shortcut, right click your python file and select Send to|Desktop (create shortcut). Then right click the shortcut and select Properties. On the Shortcut tab select the Target: text box and add cmd /k  in front of the path and click OK. The shortcut should now run your script without closing and you don't need the input('Hit enter to close')Note, if you have more than one version of python on your machine, add the name of the required python executable between cmd /k and the scipt path like this:
Apart from input and raw_input, you could also use an infinite while loop, like this:while True: pass (Python 2.5+/3) or while 1: pass (all versions of Python 2/3). This might use computing power, though.You could also run the program from the command line. Type python into the command line (Mac OS X Terminal) and it should say Python 3.?.? (Your Python version) It it does not show your Python version, or says python: command not found, look into changing PATH values (enviromentl values, listed above)/type C:\(Python folder\python.exe. If that is successful, type python or C:\(Python installation)\python.exe and the full directory of your program.
A very belated answer, but I created a Windows Batch file called pythonbat.bat containing the following:and then specified pythonbat.bat as the default handler for .py files.Now, when I double-click a .py file in File Explorer, it opens a new console window, runs the Python script and then pauses (remains open), until I press any key...No changes required to any Python scripts.I can still open a console window and specify python myscript.py if I want to...(I just noticed @maurizio already posted this exact answer)
Go here and download and install Notepad++  Go here and download and install Python 2.7 not 3.  Start, Run Powershell.  Enter the following.  [Environment]::SetEnvironmentVariable("Path", "$env:Path;C:\Python27", "User")Close Powershell and reopen it.Make a directory for your programs.  mkdir scriptsOpen that directory cd scriptsIn Notepad++, in a new file type: print "hello world"Save the file as hello.pyGo back to powershell and make sure you are in the right directory by typing dir.  You should see your file hello.py there.At the Powershell prompt type: python hello.py
A simple hack to keep the window open:The counter is so the code wonâ€™t repeat itself.
On windows 10 insert at beggining this:Strange, but it work for me!(Together with  input() at the end, of course)


Answer URL
https://docs.python.org/3/library/atexit.html
