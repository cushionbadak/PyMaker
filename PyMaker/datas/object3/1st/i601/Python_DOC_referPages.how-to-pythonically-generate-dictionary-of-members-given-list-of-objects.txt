Natural Text
I have a list of objects of this class:and now I want to create a dictionary that contains for each value of x a list (sorted, unique elements) of y values. I wrote thisAnd using it like this, it works as expected:prints (see here):However, I have the feeling that my code is extremely clumsy. Moreover I'd prefer to have lists instead of sets. Maybe using the sets can be avoided completely. Also it is just by conincidence that the output is sorted, if I would add that, it would get even more unwieldy.What is the pythonic way to get the same output (preferably lists instead of sets)? Ie, how to generate a dictionary containing all values of y that appear for given x?PS: not sure, if this rather belongs to codereview, just let me know.
You could change the sets to sorted lists easily using the sorted function.  Combined with a defaultdict you can greatly simplify your code:
You first need to sort the foo items by x attributes, and then you can group them.One way to do that is to use itertools.groupby, like this:You get:


Answer URL
https://docs.python.org/3/library/functions.html#sorted
https://docs.python.org/3/library/collections.html#collections.defaultdict
