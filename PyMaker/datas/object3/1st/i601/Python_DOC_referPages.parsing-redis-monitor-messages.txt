Natural Text
I'm trying to build a bridge between a Redis server and MQTT, so that when the Redis database is updated, these updates are dispatched via MQTT to clients.For this a client (only one, the bridge) connects to the Redis database and starts to monitor it.My issue is with parsing the commands, more specifically the arguments contained with it, which is a whitespace-separated list of stings.For example, when I store the following hash in Redisthe client recieves the following 1549578825.1 0 HMSET test-hash "key-3" "{\"key-3-1-json\": \"value-1\", \"key-3-2-json\": \"this \\\"this is 'quoted' text\\\"\"}" "key-2" "this \"this is 'quoted' text\"" "key-1" "value-1"As you can see I'm already parsing the timestamp, database id, command and key, but the last part, I don't know how to create a list of strings from it.This message would then be sent over MQTT asmqtt.publish("redis/mon/0/HMSET/test-hash", json.dumps(args))where args would bewhich would probably be the most complex case, since usually the args would be one single string, in the case where r18.set would have been used instead of r18.hmset.I think there must be some built-in module in Python which could to this as it is like parsing a command line string.
The subprocess module's documentation states that subprocess.Popen() makes use of shlex.split() (shlex: Simple lexical analysis)Calling shlex.split(args_str) effectively converts the arguments string into the desired list of substrings.


Answer URL
https://docs.python.org/3/library/shlex.html
