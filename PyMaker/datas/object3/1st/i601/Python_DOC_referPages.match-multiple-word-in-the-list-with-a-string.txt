Natural Text
I want to match a multiple words in the list with input string and return a list of matched words. for example:output:I researched and some people suggest to use any():if any(keyword in x for keyword in keywords) but it only return true or false. how can I return a list of matched words. Anyone can help me with this?
You can use the tride and true re library.This is very versitile in that there's no needing to worry about retrieving matches out of order (thanks to dict.fromkeys). And you have the option to include duplicates in the response.ExplanationAll I am doing with re is creating a pattern looking for every string in keywords *(keys)* seperated by a|this tellsre` to look for all matches of keys.re.findall returns matches in order as explained in the docs:Return all non-overlapping matches of pattern in string, as a list of  strings. The string is scanned left-to-right, and matches are returned  in the order found.This does not take into account duplicates, so the include_duplicates argument is included for such cases where you want them. You could just turn the results into a set to remove duplicates, although you would lose order integrity, thus I used collections.OrderedDict and turned that back into a list.Put into use:You can try this out for yourself https://repl.it/repls/AbleEssentialDribbleware.EditAs you asked in your comment:To explain that this line does:re.compile - Makes a regex pattern from a string. - see the docs join Takes an iterable of strings and makes one string of them all separated by the string preceding string. - see the docsmap & re.escape you could take this out for your case butshould you, or anyone reading this, be using using more complex keyword searches, this takes each keyword and escapes re's special metacharacters - (see the docs: map, re.escape)This line could be rewritten without map and re.escape and still work fine like this:Just know you cannot include characters like: ( or * etc... in your keywords.
You can use sets to find out which strings match between user entered strings and your keywords.Check the below code:Output:
edit: this does what you want it to


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/library/collections.html
https://docs.python.org/3/library/re.html#re.compile
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/re.html#re.escape
