Natural Text
I run my Python script withopencryptobot is a folder here and START is a module. At some point I'd like to restart the script with this code:I use this code because it worked perfectly for my other scripts that I don't execute with the -m argument. So the above code will be executed at some point and then I get this error:Which sounds correct since opencryptobot is just a folder and not a module. I played around with various versions of os.exec to see if Iâ€™m able to restart it but nothing really works.So my question is, how can I restart my script if I run it the way I do?This is a minimal version of my folder structure:I execute START from the root folder.
sys.argv does not start with -m opencryptobot.START. The module name is removed from the sys.argv list altogether while resolving the opencryptobot.START module filename (sys.argv is set to ['-m', '-lvl', '20'] until there is a filename) and then '-m' is replaced with the full filename of the module.From the -m switch documentation:If this option is given, the first element of sys.argv will be the full path to the module file (while the module file is being located, the first element will be set to "-m").In effect, Python is simulating running a script, as if you ran python /path/to/opencrytobot/START.py ...; only the __package__ context is kept so you can still use package-relative imports such as from . import ....So to recreate your original command-line, use '-m', __spec__.name, *sys.argv[1:] as the argument list beyond sys.executable:You can't use __name__, unfortunately, as that has been set to '__main__' when using -m. However, the __spec__ object set on your module does know what the full qualified name is for the current module, so we can re-use that here.Note that even though there is no __init__.py file in opencryptobot, by using -m you are telling Python that opencryptobot is really an implicit namespace package. If that wasn't the intention here, then don't use -m to load your script.Demo:


Answer URL
https://docs.python.org/3/using/cmdline.html#cmdoption-m
https://docs.python.org/3/reference/import.html#main-spec
https://docs.python.org/3/whatsnew/3.3.html#pep-420-implicit-namespace-packages
