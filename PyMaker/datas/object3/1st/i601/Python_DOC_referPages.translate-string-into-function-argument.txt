Natural Text
While applying some external module method to a class I need to be able to pass different pairs of arg = 'value' to the function, like:How to pass dicts or tuples to the function, so that it recognises 'id_' (string) as id_ (argument) in('id_', '11974312') (tuple) or {'id_':'11974312'} (dictionary) ?Basically, I just need to get id_ out of 'id_'For your reference, I am trying to use neomodel module for neo4j graph db.
To pass multiple arguments to a function, you use the * operator and ** operator as shown below.The * operator pack all ordered argument in it, and the ** operator packs all unmatched key argument in it.For example:For key argument it works the same way,(ref.)
You can unfold the positional argument of a function with a single asterisk * and unfold dictionaries as key/value pairs with two asterisks **. For exampleThe Python Reference has details on this.A more specific example for OPIf you have a function get(id_=None) with the keyword argument id_ you can use **some_dict to unfold the key/value pairs into keyword arguments. For exampleIf instead you have a function get(id_) with the positional argument id_ you can use *some_iterable to unfold the values into positional arguments. You can also use **some_dict to unfold the key/value pairs as long as the keys exactly match the positional arguments. For example


Answer URL
https://docs.python.org/3/reference/expressions.html#calls
