Natural Text
I'm having an issue configuring logging for multiple objects.Presently, I have two classes representing a server and a coordinator. These are composed such that a coordinator has a server as in instance variable. See below:Before I added the coordinator class the logging in the server class was able to extract the websockets values and display the output. This no longer works. How can I resolve this issue, and add an additional logger to the Coordinator class?I'm using python 3.6.8Thanks
It's unclear from your code snippet exactly how you intend for your classes to be initialized (order, how many copies, etc).  My guess would be your issue is you are trying to configure a separate stream handler for each class logger.In general to use python logging you want to do the following:1) Configure logging near your main entry pointThis consists of setting up any handlers to control where the log messages will go and what levels of messages.  The easiest way to do this is call logging.basicConfig(..).  You want to ensure this is done once and only once.  Also you want it to happen before any of your logging calls, so typically this will be one of the first things in your main(..) function.2) Create and use loggers at their locationYou can create as many loggers as you want and give them whatever name you want.  Creating one per module using log = logging.getLogger(__name__) is a good way to start, but you can do per class instead if you prefer.Example:Which logs to stderr:


Answer URL
https://docs.python.org/3/library/logging.html#logging.basicConfig
