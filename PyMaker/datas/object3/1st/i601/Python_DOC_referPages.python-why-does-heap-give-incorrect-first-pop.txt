Natural Text
I'm trying to create a max heap by negating all the values of a list, but it doesn't seem to be working:Yet if I doIt seems to work correctly. Any idea as to why -1 is returning?
You should not use heappush/heappop unless you have the heap invariant maintained in the first place.To create a heap from an existing list, use heapq.heapify(mylist).
heapq.heappop is only for minheaps; you can't just make a maxheap and expect minheap based functions to work on it, because it doesn't observe the minheap invariant.If the goal is to pop off -9 first, you need to make your heap support the proper invariants, by (efficiently, O(n)) heapifying it first:after which your code will pop from -9 down to -1.If you're trying for a maxheap, that's not supported. All the publically documented heapq functions work with minheaps (emphasis added):The API below differs from textbook heap algorithms in two aspects: (a) We use zero-based indexing. This makes the relationship between the index for a node and the indexes for its children slightly less obvious, but is more suitable since Python uses zero-based indexing. (b) Our pop method returns the smallest item, not the largest (called a “min heap” in textbooks; a “max heap” is more common in texts because of its suitability for in-place sorting).There are a few selected (and undocumented) maxheap based functions in the module that will work, e.g. heapq._heappop_max, but they're not a documented part of the API, and could change or disappear at any time.


Answer URL
https://docs.python.org/3/library/heapq.html
