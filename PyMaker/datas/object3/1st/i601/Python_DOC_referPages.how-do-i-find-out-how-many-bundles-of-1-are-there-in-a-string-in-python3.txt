Natural Text
I am trying to know how many bundles of '1' are there in a String which will only consist of 1s and 0s.For example,For 1011011, the number bundles of '1' will be 3 since bundles are 1, 11, 11 excepting 0s.For 11101110101, it will be 4 as well since the bundles are 111, 111, 1, 1. Is there any Pythonic and concise way of solving this problem?
This is easy.    Use a greedy search to search the longest sequence of 1's. Now, re.findall, greedily searches the whole string, and return a list. This list will contain all the occurrences of 1, which contains groups of 1's.If you want to print total number of bundles, use this:  print(len(bundles))Output:4
here is how you do it.split the string by 0 and then remove empty elements from returned list and then print the length of listanother approach would be using loop comprehension to remove empty.
You could use itertools.groupby and use '0' as the splitting character:It's not particularly pretty, but it works.
String which will only consist of 1s and 0s
Simplest way (to type) is this:Explaining why it works is a little more complicated, but good practice for programming in general. Each of the bundles of 1s starts with the substring "01" except for the case where the string starts with a one. If you only count these pairs of adjacent characters then you count the bundles exactly.Zipping a string with the-string-offset-by-one will give all of the pairs of characters, e.g.All that is left to do is fix the corner case where it may start with a '1' by adding an extra '0' to the beginning.Enjoy.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
