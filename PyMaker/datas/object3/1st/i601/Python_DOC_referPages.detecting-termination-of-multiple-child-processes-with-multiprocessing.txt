Natural Text
if name == 'main':Basically iam trying to read the file which has the machine names and using multiprocessing, I want to insatll the OS on the machines which I have read. Above is my code, when I run, it starts installing on all the machines at once and the main program terminates.But I want the main program not to terminate, it has to wait until the child process finish the job, also return the output saying the child process job is complete.Install make take anytime 1 hr or 2 hrs, but I want the message saying that all the process jobs are completed.Can anyone please help here.
Populate a list of processes and use join() to join them with the parent process and then print the message. This way, the parent waits till the children are done with their tasks before executing the lines that follow.The code for the same should look something like this:
Welcome to Stackoverflow. Much like threads, the easiest way to synchronise with your subprocesses is to join() them, most usually in the creating thread/process. The os.popen2 call was deprecated when the subprocess module was introduced, as it does not give the necessary degree of control over and communication with the started subprocess. For that you have correctly deduced you can use the multiprocessing module.The technical answer to your question using multiprocessing is already covered well in another answer, as well as in this question, which explains how the calling entity can synchronise with its child processes. It's quite permissible to deal with an unknown number of subprocesses by storing each one in a list, for example, like thisA more useful answer might be that the subprocess module allows creation and monitoring of other processes without the overhead and complexity of multiprocessing, which has advanced features for inter-process communication that you do not (yet) appear to need. Its documentation has quite good examples of how older and/or less appropriate Python code can be adapted to use the new module, so it could be worth a look.


Answer URL
https://docs.python.org/3/library/subprocess.html
