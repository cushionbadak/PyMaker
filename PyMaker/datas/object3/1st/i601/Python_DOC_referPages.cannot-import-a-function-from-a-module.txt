Natural Text
Basically I have 3 modules that all communicate with eachother and import eachother's functions. I'm trying to import a function from my shigui.py module that creates a gui for the program. Now I have a function that gets the values of user entries in the gui and I want to pass them to the other module. I'm trying to pass the function below:def valueget():    keywords = kw.get()    delay = dlay.get()    category = catg.get()All imports go fine, up until I try to import this function withfrom shigui import valueget to another module that would use the values. In fact, I can't import any function to any module from this file. Also I should add that they are in the same directory. I'm appreciative of any help on this matter.
Well, I am not entirely sure of what imports what, but here is what I can tell you.  Python can sometimes allow for circular dependencies.  However, it depends on what the layout of your dependencies is.  First and foremost, I would say see if there is any way you can avoid this happening (restructuring your code, etc.).  If it is unavoidable then there is one thing you can try.  When Python imports modules, it does so in order of code execution.  This means that if you have a definition before an import, you can sometimes access the definition in the first module by importing that first module in the second module.  Let me give an example.  Consider you have two modules, A and B.A:B:In a situation like that, Python will allow this.  However, everything after the imports is not always fair game so be careful.  You can read up on Python's module system more if you want to know why this works.  Helpful, but not complete link: https://docs.python.org/3/tutorial/modules.html


Answer URL
https://docs.python.org/3/tutorial/modules.html
