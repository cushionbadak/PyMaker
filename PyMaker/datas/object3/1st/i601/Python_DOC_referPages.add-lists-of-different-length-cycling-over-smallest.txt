Natural Text
I have two lists:I want to add to the elements of b the corresponding elements of a. When the elements of a runs out, I want to cycle through a to supply the elements. The result should be:What is the "Pythonic" way to implement this?
You could use a list comprehension to add the elements from both lists zipped together, and use itertools.cycle so that the iterator a repeats itself as many times as necessary until b is exhausted: Output   Details If you take a look at the iterator of tuples generated from the zipped expression:You can see that the elements in a cycle around until the other iterator is exhausted, making it very easy to perform some operation on the interleaved elements.
If you dont want any imports you can use the modulo operator (%).Output


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
