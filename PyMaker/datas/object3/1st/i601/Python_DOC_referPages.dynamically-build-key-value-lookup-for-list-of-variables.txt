Natural Text
Suppose I have some variables:I want to save the values of these variables in a file for later inspection. One way I thought to do this was:As you might imagine, with a large number of variables, this could get tedious. And, yes, I know many editors have functionality to make this kind of copy-paste action easy. But I'm looking for the standard, "Pythonic" way of dynamically building a key: value lookup where the key is the variable's name and the value is the variable's, well, value!I thought about this:I'm not surprised this didn't work, because integer variables are constants (I'm not sure of the exact way to describe things):How might I accomplish this?
Output:
You might want to look into locals() and inspect. The result could be i.e.:But to get it right you might need to add some additional conditions, and also you will have to watch out for mutable objects or values, as in this case those would mutate and you would not preserve the earlier value for later inspection. Serialization or copying them could help.
You could tackle it from the other direction and save all the local variables, using locals() For examplefoo() generates {"a": null, "bb": null, "ccc": "lots of c", "de": 42}( json.dumps is one way to serialize a dict, and will work only for simple variables that can be converted to JSON)Another way to just get some variables would be
Here is another way using ascii_lowercase from string module:


Answer URL
https://docs.python.org/3/library/inspect.html
