Natural Text
I'm writing a Django validator for files uploaded with a form. These files are python scripts which can be buggy and/or unsafe, so I must not execute them before the are fully validated.One check is to ensure that both methods "run" and "rollback" are present, again without executing the code.All the uploaded python scripts have same structure : I've found the following solution to do this with AST : It's working fine, but that's not very elegant (body1...), and because I've never used the AST module before, I believe there may be a smarter way to achieve this.Any suggestion?
you should use dir():Output:['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'methodA', 'methodB']Or, in your caseOutput:TrueWorks both in Python 2 and Python 3
Making a set of the names in the code, and looping over all the required names will make your code a little less copy-paste-y:
Well, it seems that AST is a great solution for my need, so I've created a little post explaining it here For my question, here is the solution I've implemented:I will wait for other posts and vote before selecting the accepted answer, if someone finds a better way to achieve this with another module (maybe with the parser ?).Thank you for your help
I would use a visitor like pattern to traverse the tree


Answer URL
https://docs.python.org/3/library/parser.html
https://docs.python.org/3/library/abc.html
