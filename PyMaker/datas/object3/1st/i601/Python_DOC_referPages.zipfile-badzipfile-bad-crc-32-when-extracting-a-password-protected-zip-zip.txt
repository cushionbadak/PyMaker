Natural Text
I am trying to extract a password protected .zip which has a .txt document (Say Congrats.txt for this case). Now Congrats.txt has text in it thus its not 0kb in size. Its placed in a .zip (For the sake of the thread lets name this .zip zipv1.zip) with the password dominique for the sake of this thread. That password is stored among other words and names within another .txt (Which we'll name it as file.txt for the sake of  this question). Now if I run the code below by doing python Program.py -z zipv1.zip -f file.txt (Assuming all these files are in the same folder as Program.py) my program displays dominique as the correct password for the zipv1.zip among the other words/passwords in file.txt and extracts the zipv1.zip but the Congrats.txt is empty and has the size of 0kb.Now my code is as follows:However if I another zip (zipv2.zip) with the same method as zipv1.zip with only difference being Congrats.txt is in a folder which the folder is zipped alongside Congrats.txt I do get the same results as zipv1.zip but this time Congrats.txt extracted along the folder it was in, and Congrats.txt was intact; the text in it and the size of it was intact.So to solve this I tried reading zipfile's documentation where I found out that if a password doesn't match the .zip it throws a RuntimeError. So I did changed except: in the code to except RuntimeError: and got this error when trying to unzip zipv1.zip:The same results happpen though; password was found in file.txt, zipv1.zip was extracted but Congrats.txt was empty and 0kb in size. So I ran the program again, but for zipv2.zip this time and got this as a result:Again, same results; where the folder was extracted successfully and Congrats.txt was also extracted with the text inside it and the size of it was intact.I did take a look at this similar thread, as well as this thread but they were no help. I also checked zipfile's documentation but it wasn't helpful regarding the issue.I am not sure what is the cause of my issue or how to fix it and would like some help regarding it.EDITNow after implementing with zipfile.ZipFile(zip_filename, 'r') as zip_file: for some unknown and weird reason; the program can read/process a small word list/password list/dictionary but can't if its large(?). What I mean by that is that say a .txt document is present in zipv1.zip; named Congrats.txt with the text You have cracked the .zip!. The same .txt is present in zipv2.zip aswell, but this time placed in a folder named ZIP Contents then zipped/password protected. The password is dominique for both of the zips. Do note that each .zip was generated using Deflate compression method and ZipCrypto encryption in 7zip.Now that password is in Line 35 (35/52 lines)John The Ripper Jr.txt and in Line 1968 for John The Ripper.txt (1968/3106 lines). Now if you do python Program.py -z zipv1 -f "John The Ripper Jr.txt" in your CMD (or IDE of your choice); it will create a folder named Extracted and place Congrats.txt with the sentence we previously set. Same goes for zipv2 but Congrats.txt will be in ZIP Contents folder which is inside the Extracted folder. No trouble extracting the .zips in this instance. But if you try the same thing with John The Ripper.txt i.e python Program.py -z zipv1 -f "John The Ripper.txt" in your CMD (or IDE of your choice) it will create the Extracted folder both of the zips; just like John The Ripper Jr.txt but this time Congrats.txt will be empty for both of them for some unknown reason.My code and all necessary files are as follows:Program.pyzipv1.zipzipv2.zipJohn The Ripper Jr.txtJohn The Ripper.txtJohn The Ripper v2.txtI am unsure why this is happening and cannot find an answer for this issue anywhere. Its totally unknown from what I can tell and I can't find a way to debug or solve this issue. This continues to occur regardless of different word/password lists. Tried generating more .zips with the same Congrats.txt but with different passwords from different word lists/password lists/dictionaries. Same method; a larger and smaller version of the .txt was used and same results as above were achieved.BUT I did find out that if I cut out the first 2k words in John The Ripper.txt and make a new .txt; say John The Ripper v2.txt; the .zip is extracted successfully, Extracted folder appears and Congrats.txt is present with the text inside it. So I believe it has to do with the lines after the password is at. So in this case Line 1968; where the script doesn't stop after Line 1968? I am not sure why does this work though. It isn't a solution but a step towards the solution I guess...Any help would be seriously appreciated.EDIT 2So I tried using a "pool terminating" code:Now if I use this both zips are extracted successfully, just like the previous instances. BUT this time zipv1.zip's  Congrats.txt is intact; has the message inside it. But the same thing cannot be said regarding zipv2.zip as its still empty.
Sorry for the long pause ... It seems you've got yourself into a bit of a pickle.1. InvestigationThe scenario is complex (quite far away from an MCVE


Answer URL
https://docs.python.org/3/library/zipfile.html
https://docs.python.org/3/library/zipfile.html
