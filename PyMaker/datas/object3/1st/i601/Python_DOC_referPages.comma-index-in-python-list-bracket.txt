Natural Text
example is below. What is this? A comma is in the python list-bracket. How can I understand this?id(x[i,j]) == id(x[i][j]) shows True. So, x[i,j] is always same at x[i][j]?or, x[i,j] is actually same as x[(i,j)]? index is tuple. ====== I guess this is numpy's special implementation. Numpy overwrites "_getitem__" function for using tuple index. I tried it for1) basic python2) overwrite "_getitem__ " and3) basic numpy.1) shows error. "TypeError: list indices must be integers or slices, not tuple"2) has....no problem if I implemented right.3) just works well.So, I guess numpy developers did implemented their "getitem" function for tuple, and it works same arr[x,y,z] == arr[x][y][z].
While numpy behaves the same way with the two, they are technically different.You can see the difference by implementing __getitem__ yourself:Then:Notice that x[1,2] only calls __getitem__ once, but x[1][2] calls it twice.
This is Numpy special ability.Numpy official docs"Unlike lists and tuples, numpy arrays support multidimensional indexing for multidimensional arrays. That means that it is not necessary to separate each dimensionâ€™s index into its own set of square brackets."


Answer URL
https://docs.python.org/3/library/functions.html#id
