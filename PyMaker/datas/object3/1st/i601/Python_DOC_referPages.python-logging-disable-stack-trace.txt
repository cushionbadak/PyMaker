Natural Text
Is there a simple way to disable the logging of an exception stack trace in Python 3, either in a Handler or Formatter? I need the stack trace in another Handler, so setting exc_info=False, in the call to the Logger is not an option. Is there a simpler way than just defining my own Formatter?
The easiest option to disable per handler traceback output is to add a custom logging.Filter subclass that alters the record object (rather than filter out records).The filter simply has to set exc_text on records to a string, replacing the None default:and add that filter on your handler, setting the cached text to an empty string:This works because the Formatter.format() method explicitly documents LogRecord.exc_text as the attribute in which a formatted traceback is cached:Note that the formatted exception information is cached in attribute exc_text. This is useful because the exception information can be pickled and sent across the wire, but you should be careful if you have more than one Formatter subclass which customizes the formatting of exception information. In this case, you will have to clear the cached value after a formatter has done its formatting, so that the next formatter to handle the event doesnâ€™t use the cached value but recalculates it afresh.The above filter uses this to prevent traceback text from being generated altogether. Every time a message is passed to the handler, the above filter is called to see if the handler will want to process the record instance, and we 'cache' an empty exception text.However, handlers do not copy log records, and any other handler that is passed the same log record later on will also ignore formatting the traceback. So you also need to configure the next handler listed in the logger.handlers list directly after the handler with the above filter:If you anyone wanted to disable all traceback outputs, everywhere, then perhaps adding a custom filter to all handlers or loggers becomes tedious. In that case another option is to register a custom record factory with the logging.setLogRecordFactory() function; just set the exc_text attribute on records to an empty string:Note that the default factory is just the logging.LogRecord class, but the above function does its best to work with any already-set custom factory.Neither the filter nor the custom record factory are not clearing the exc_info tuple, so you can still access this somewhere else.Of course, you can also create your own Handler subclass where the Handler.handle() sets and clears the exc_text attribute:


Answer URL
https://docs.python.org/3/library/logging.html#logging.Filter
https://docs.python.org/3/library/logging.html#logging.Handler.addFilter
https://docs.python.org/3/library/logging.html#logging.Formatter.format
https://docs.python.org/3/library/logging.html#logging.setLogRecordFactory
https://docs.python.org/3/library/logging.html#logging.LogRecord
https://docs.python.org/3/library/logging.html#logging.Handler.handle
