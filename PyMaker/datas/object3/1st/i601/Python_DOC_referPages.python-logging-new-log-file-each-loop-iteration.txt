Natural Text
I would like to generate a new log file on each iteration of a loop in Python using the logging module. I am analysing data in a for loop, where each iteration of the loop contains information on a new object. I would like to generate a log file per object. I looked at the docs for the logging module and there is capability to change log file on time intervals or when the log file fills up, but I cannot see how to iteratively generate a new log file with a new name. I know ahead of time how many objects are in the loop. My imagined pseudo code would be:However, the logging information is always appended to the fist log file for target 1.Is there a way to force a new log file at the beginning of each loop? 
Rather than using logging directly, you need to use logger objects. Go thorough the docs here.Create a new logger object as a first statement in the loop. The below is a working solution.This writes to a different log file for each iteration.
Here is a working version for this problem. I was only able to get it to work if the targets already have .log before going into the loop so you may want to add one more for before going into targets and override all targets with .log extension
This might not be the best solution, but it will create new log file for each iteration. What this is doing is, adding a new file handler in each iteration.


Answer URL
https://docs.python.org/3/library/logging.html#logger-objects
