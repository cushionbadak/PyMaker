Natural Text
I want to search through a list of objects for the lowest number present in an attribute of the objects. This is easy enough using a list comprehension and the min function. The issue comes when I want to find the index of the object.
You can use min's key argument to search by index:A key provides the values that will be compared instead of the actual sequence. Here, my sequence is range(len(schools)), which is just the indices of all the elements. But instead of finding the minimum index, I am making it so that we find the minimum of schools[i].students_per_class() for each index i.
Use enumerate to iterate through lists while keeping track of indices:(i, school.students_per_class()) is a tuple and using key parameter of min(), we ask Python to find minimum of school.students_per_class(), which subsequently returns it's index along with it.Read about lambda here.
If you wanted to be able to compare, sort, find the min/ max on the items directly you could use the "dunder" methods. These methods allow you to overload built in functions on classes.For instance if you had a class like thisYou can then create two instances and compare them directly like this,or if you had a list of itemsYou can then get the minimum item by going or the index of it by goingalthough it may be enough to just have a reference to the minimum item.
I think you may be looking for np.argmin function, if you provide a list as an input it will return the index of the minimal element.in this case it would be:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions
