Natural Text
This comes up sometimes in R, which implies to me that there has to be a way to do this in Python. If I have a list of functions, say:and a list of inputs:How can I apply all of the functions provided to the list of inputs? List comprehensions, to me, seem to allow me to apply to the list one of the functions, but not both of them (without hard-coding the functions themselves into the code).To clarify, the output I'm looking for in this case would be:In short, I'm trying to find a way to not have to write [f1(f2(f3(i))) for i in inputs], but instead simply have a list of 'f's and applying them all to the inputs.
Use a nested list comprehension:OutputUPDATEGiven the update on your question, you can use reduce:Output
With this particular example of functions, you can try a combination of functools.reduce and list comprehension:
This is probably not the most efficient way to do it. I learned Java first, so loops (or streams) feel intuitive. However that is, the following yields the answer.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#nested-list-comprehensions
