Natural Text
str.zfill is a useful tool to pad strings with leading zeros:However, is there a more generic version that will take any filler character and pad a string with it? I'm looking for something like this:Does such a function exist? 
Yes, there are the string justification methods, ljust and rjust.
Implementing your own version should be straightforward enough:The assert ensures the filler is a single, valid character only.xfill(string, num [, filler]):string: the string to be paddednum: the total width of the field (similar to str.zfill)filler: to pad with. Defaults to 0 to mimic str.zfill functionalityExamples:
To add a little more flexibility for alternative patterns instead of just a character:
If all you need is simple padding, I'd go with  @PM2Ring's answer, but there is another, more versatile way, using the str.format method (Python 2.6 onward). This method allows you to interpolate the format specifier by nesting the replacement fields:Replace > with < if you need to left-align the string instead.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.ljust
https://docs.python.org/3/library/stdtypes.html#str.rjust
