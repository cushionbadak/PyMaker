Natural Text
I'm working on a side project and I've encountered this problem. Basically, the input I'm dealing with is a list of lists, where the inner lists look something like this:There can be any number of inner lists (but I've considered creating a limitation). What I want to achieve is to return lists of words from each of the lists that begin with the same letter. For example, from the above, we'd get something like:My question is, what is a good approach? I've considered going through the entire alphabet and using a boolean array to keep track of which letters had a word in each list starting with that letter, but it seems inefficient, and I'm not satisfied with the approach. For example (not complete, but just for reference..):And then just grabbing the words starting with the letters marked 'True' from each list to build the output list. Am I missing a simpler approach? I'm new to Python, so I'm not sure if I'm missing a built in function that could be helpful in this case.Thanks for reading!
List comprehension will make the job much simpler!You need to iterate through the first inner list l[0] as i, with that in hand, iterate through every element in second inner list, l[1] as j. If your condition satisfies, then add them to the list!
One option could be to sort a flattened version of your list, then use groupby with a custom key to get the different first letters as groups.Example
I'd use a dictionary "char":listOfWords[], and fill it while iterating your lists...For each list element of all lists: you add the element to the list of the key "char"you create the new element in the dictionary with the new starting char, initialize his list and add the element to the new list.The resulting dictionary will be something like:
Use a dictionary that maps each letter to a list of words. This is some sample code:
If you want to list the words that starts with same character, you can use the following snippet.Python 3 (Assumed you have only lowercase letters):Output:
I flattened the list of lists first, then i sorted by the first letter to group by that key, finally i've extracted the group value into a list then wrapped the whole into a list as a result.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
https://docs.python.org/3/library/operator.html#operator.itemgetter
https://docs.python.org/3/library/functions.html#sorted
