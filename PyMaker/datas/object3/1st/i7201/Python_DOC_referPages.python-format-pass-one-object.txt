Natural Text
If i define the below custom class in Python:Is there any way when using the string format() method to only have to pass in my object once and to then access that in all the arguments. Ideally I would like to be able to do something like this:But I have to do this:
As you found out for yourself, you can use keyword arguments, but you don't even have to do that:The 0 refers to the zeroth argument to format, the problem was you had no 1st and second argument, because you didn't need it.Warning as an aside:Also, since you seem to be coming to python from other languages, you might be making a common mistake. Note that the way you have defined your class;uses only class-level variables, which will act like static members to borrow terminology from other languages. In other words, hey, yo, and fo are not instance attributes, although your instances have access to the class-level namespace. Check out this answer. Of course, this doesn't matter for the purposes of this question, but it can lead to bugs if you don't understand the semantics of the class definition.
As soon as I posted this I realised I could just keyword arguments.In addition, as per my original question this is possible by just reusing the 0 positional argument as below:Also, as pointed out by Ryan in the comments Python 3.6+ comes with the new f-string, which means I could also do this:
{0.hey} is referring to the 'hey' attribute of the first argument passed to format.So you just have to refer to the correct argument:
Just for posterity, as said in the comments, anyone using Python 3.6 and greater can make use of the new format string literals specified in PEP 498:More format strings(f-strings for short) can be found in the Formatted string literals section of Python documentation.
If you change 1 and 2 by 0 you reuse the same argument and format does what you want.
Can also use a dict to pass values:Or an ordered dict:


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals
