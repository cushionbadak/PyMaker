Natural Text
I have a list of objects with multiple attributes. I want to filter the list based on one attribute of the object (country_code), i.e.Current listDesired listI can achieve this by creating a dictionary and a for-loop, but I feel like there's an easier way in python using the filter() or reduce() functions, I just can't figure out how.Can anyone simplify the below code using in-built python functions? Performance is a big factor because the real data will be substantial.Working code:Worth noting I have also tried the code below, but it performs worse than the current working code:
I think your first approach is already pretty close to being optimal. Dictionary lookup is fast (just as fast as in a set) and the loop is easy to understand, even though a bit lengthy (by Python standards), but you should not sacrifice readability for brevity.You can, however, shave off one line using setdefault, and you might want to use collections.OrderedDict() so that the elements in the resulting list are in their orginal order. Also, note that in Python 3, unique.values() is not a list but a view on the dict.If you really, really want to use reduce, you can use the empty dict as an initializer and then use d.setdefault(k,v) and d to set the value (if not present) and return the modified dict.I would just use the loop, though.
I think that your approach is just fine. It would be slightly better to check elem['country_code'] not in unique instead of elem['country_code'] not in unique.keys().However, here is another way to do it with a list comprehension:The last bit abuses the fact that not None == True and list.add returns None.


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
