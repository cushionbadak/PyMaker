Natural Text
I am curious whether there is a better way to achieve something like this?My intentions are to avoid unnecessary boilerplate. The provided example is obviously just simple enough to let the others understand what I had on my mind.
I'm going to presume that type(self).__name__ won't suffice here (for both your example classes that value is equal to the parameter value you passed in).To set up per-class values at class-definition time, as of Python 3.6 you can use the __init_subclass__ classmethod:__init_subclass__ is called for all new subclasses, and any parameters you specify in the class Subclass(...) line are passed into that method, letting you parameterise that specific subclass.
I think you're better off with simple inheritance and a class variable:This looks cleaner to me (especially if you have more variables than just one), and uses less "advanced" features (i.e. someone reading your code doesn't have to google how __init_subclasses__ works).Also it works for both Python 2 and 3:If you were to use classproperty, you could even have it default to the class's name and be overriddable with a simple class variable. This prevents you from using the same name for the class and instance variables though, so you'd have to use something like animal_name:Usage example:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__init_subclass__
