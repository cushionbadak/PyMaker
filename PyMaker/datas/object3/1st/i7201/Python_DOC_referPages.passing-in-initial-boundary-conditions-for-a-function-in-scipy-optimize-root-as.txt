Natural Text
I am trying to solve a non linear system. Here is the code for a toy problem.Problem StatementThe argument X of the objective function f has five unknowns that we are solving for. I want to set the first parameter, i.e., X[0]=0.5and the fourth  parameter i.e., X[3] = 0.3 and solve for the remaining 3 unknowns. Let us assume for simplicity that such a solution exists and my initial guess is somehow a good one.Attempt:I know I should probably pass these arguments to the args=() argument in scipy.optimize.root. I tried settingThis is obviously wrong. Question? How can I fix this?.Note: I added the flat function so that the code is self contained. It has nothing to do with this question.
From your example I reconstruct that you want to solve for the second and third component of some vector x as well as the parameter alpha. With the args keyword of scipy.optmize.root that would look something likeAs Azat and kazemakase pointed out, I'm also not sure if you actually want to use root, but the usage of scipy.optimize.minimize is pretty much the same.Edit: It should be possible to have a flexible set of fixed variables by using a dictionary as an additional argument which specifies those:That way, when the optimizer in root numerically evaluates the Jacobian it obtains zero for the fixed variables and should therefore leave those invariant. However, that might lead to complications in the convergence of the algorithm.
Typically with scipy functions like root, minimize, etcrequires a func that accepts:x0 is the value that root varies, a,b,c are args value that are passed unchanged to your function.  Depending of the problem x0 may be an array.  The nature of the args is entirely up to you.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
