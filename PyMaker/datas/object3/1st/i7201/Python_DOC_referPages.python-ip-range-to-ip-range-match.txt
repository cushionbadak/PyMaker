Natural Text
Is there any method to check if some IP addresses from a network range are present in the subnets of another IP range?If it exists, I need it to return True, else False.
Since Python 3.3, you can use the ipaddress module of the standard library:If you mean if the networks overlap, use overlaps:Note that this module was marked as provisional in Python 3.3, but no longer is in 3.6. So enjoy it!
NOTE: Other answers specifically point at IPv4Address, IPv4Network, but ip_address and ip_network simply call the IPv4 OR IPv6 version when needed.NOTE: the sample network you provided is not a true /8 network, so the ip_network will respond with an error of ValueError: 123.1.0.0/8 has host bits setTo get past this, by forcing the ipaddress library to essentially round down to the nearest network address, you can set strict=False and Python will find the nearest, lower address for a /8 network: 123.0.0.0Then it is simply a matter of testing using the in keyword.If you want to test every address in a network range against every address in another network range, then:In addition, networks can be converted into sets:And Python sets have the ability show any overlap OR inclusion (subset/superset relationships).etc.
I think the accepted answer in this question should help you:If you can't go for any reason on this link here is the answer:Return True or False (in the example first you have False then True).Or in one function:The answer is inspired by the question I linked, give credits to the people if it work for you.


Answer URL
https://docs.python.org/3/library/ipaddress.html
