Natural Text
I have done something like this:  I was just tryig to replace the equivalent tuple value with the array value, without changing the associated numbers. But the list only goes till the len of array e and not d. What I want to get as output is something like this:  
Just add the unprocessed tail of d to the processed part:
You can use itertools.zip_longest:Check the doc
If it's acceptable to mutate the original d list, I'd simply replace the first d tuples by iterating on e:Note that Python tuples are immutable. d[i][0] = new_letter would fail with the error:TypeError: 'tuple' object does not support item assignmentThe above code modifies the d list in place by replacing old tuples with new ones. It cannot modify the old tuples.
I think the problem is the zip function. The documentation says that (zip) "Returns an iterator of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables. The iterator stops when the shortest input iterable is exhausted." [(n,j) for n,(i,j) in zip(e,d)] + d[len(e):] should do the trick


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
