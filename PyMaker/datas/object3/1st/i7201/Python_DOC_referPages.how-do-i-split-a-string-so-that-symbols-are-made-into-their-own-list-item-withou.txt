Natural Text
Output here:Desired output here:I really want to stay away from any soltutions that involve the use of the re library, thanks.
One solution is to create a function that categorises characters and use that as a key function for itertools.groupby():printsYou clarified that you want to avoid regular expressions for performance reasons.  The approach in this answer is definitely slower than correctly using regular expressions.  However, I don't think your project is at a stage where you need to worry about performance.
You could add spaces around those symbols first, then use split(), e.g.
The string you're using is similar to format string in Python. If so, you could use Formatter class to parse it:Demo:
Make a pass through the string and put whitespace around all punctuation characters then split on white space.Expanding that third line a bit --
One way (not as clean as other answers, but it works):Sample output:This is more or less manually doing what itertools.groupby does.


Answer URL
https://docs.python.org/3/library/string.html#formatstrings
https://docs.python.org/3/library/string.html#string.Formatter
