Natural Text
I have a list of dictionaries.  I want the average age of people whose age is less than 25.I know my divisor is wrong but I am not sure how to adjust it inside of the comprehension.I am getting 81/8 = 10.125.  I should be getting 81/5 = 16.2.  How do I get the divisor to match the number of elements being added?
Instead of doing it all in one list comprehension, I'd split it up into two commands like so:Doing all of this in one list comprehension would require you to do it twice (once for the sum in the numerator and another time for the length in the denominator). I think this is more readable as well. You could even try doing it in a for loop:
The easiest solution would be to use numpy with a conditional list comprehension:Using a pure python solution, you should keep track of the total and the count as you evaluate each element in the collection.  This reduces the memory footprint, as you do not need to store all of the values that match your criteria.  Note that I used a generator in the enumeration.
Python has a statistics module that contains a mean function:Or if you have pandas you could do it with boolean indexing:The df[df['age'] < 25] only contains those rows that have an age below 25 and the ['age'].mean() then calculates the mean of the "age" column.


Answer URL
https://docs.python.org/3/library/statistics.html#module-statistics
https://docs.python.org/3/library/statistics.html#statistics.mean
