Natural Text
I am a bit confused regarding metaclasses in case of multiple inheritance.Consider the following code:The output of this will be the following:"MetaClass1""MetaClass2"TypeError regarding metaclass conflict, which is expected, no problems regarding this.Next I will change the code a bit and do the following:This time the output is going to be:"MetaClass1""MetaClass2 inherits""MetaClass1""MetaClass2 inherits""MetaClass1"The MRO of class C is:Why does class C receive MetaClass2 as its metaclass and not MetaClass1?
When deciding the metaclass of a class without an explicitly specified one, as in the case of your C, Python examines the metaclasses of all the superclasses (direct and indirect) of the class being created, and picks the one metaclass which is a subtype of all the metaclasses of the superclasses of the class being created. If there is no such metaclass, it raises a TypeError.In your example, MetaClass2 is that one metaclass which inherits from all the metaclasses of C's superclasses.This is covered in section 3.3.3.1 of the language reference.


Answer URL
