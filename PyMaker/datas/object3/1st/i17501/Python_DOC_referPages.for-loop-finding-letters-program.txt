Natural Text
This is the code i have currently:why if what you enter as message contains an "e" the output claims it has as many "e"'s as the message does characters? Ill give an example:if i enter the message "how are you" it will respond with:"Your message is 11 characters longThe most common letter in the english language, 'e', is in your message 11 times"Why does it not respond with:"Your message is 11 characters longThe most common letter in the english language, 'e', is in your message 1 times"Because doesn't iterate through "how are you" one element(character) at a time as such:? If the above is true then when, letter = "e", should be the only time is true, correct? Which means etimes should only equal one?
change this to:Your code failed because the or statement wasn't being read the way you think it was.Is read by the interpreter (in pseudo code):And since the way or works:To properly use or you must explicitly state the comparison each time:Which is why when comparing strings if capitalization isn't important, 'e' is the same as 'E' like in this case, it's better to change the case to all be the same via lower() or upper() so you don't have to compare as many things.
The problem is in the lineThe condition really means ("e") or ("E" in letter), which is always true because non-empty strings are considered to be true in Python, and <true> or <anything> is true.A correct condition would beHere is the relevant section from the Python reference:In the context of Boolean operations, and also when expressions are  used by control flow statements, the following values are interpreted  as false: False, None, numeric zero of all types, and empty strings  and containers (including strings, tuples, lists, dictionaries, sets  and frozensets). All other values are interpreted as true.  ...  The expression x or y first evaluates x; if x is true, its value  is returned; otherwise, y is evaluated and the resulting value is  returned.This definition of or has another consequence: the result of "e" or "E" in letter is in fact "e", not True. But "e" is interpreted as true, so the condition is still satisfied.


Answer URL
