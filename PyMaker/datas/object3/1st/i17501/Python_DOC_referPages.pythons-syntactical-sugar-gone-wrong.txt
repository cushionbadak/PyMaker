Natural Text
I am looking at the code listed here and they provide a very interesting structure to writing a "clock" in Python on line. I have never seen this quirky syntax before and quite honestly do not know how it works. This is utter black magic in Python. But even though it is not the most Pythonic way to write what the author intended, I would still like to know how it operates.My though process:qClock returns True is the duration has been passedqDurration starts as an int, but is later changed to a lambda function?Why are there lists at the end of each of these? I have a feeling these are not lists.
This is an archaic way of writing a ternary conditional.  It should be:Before Python 2.5, which introduced the ternary conditional (link) you could emulate it by creating a 2-element tuple and indexing it with a boolean expression, since False gets treated as 0 and True as 1.
In Python, bool is a subclass of int, so a boolean is either 0 or 1 depending on it being the value False or True.Thus, qClock is either set to lambda: 0 or time.clock, depending on qDuration being greater than 0 or not.qDuration is then set to 1 or qClock() + qDuration.You can translate this to:which is shorter and more readable. Go figure.


Answer URL
