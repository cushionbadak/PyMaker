Natural Text
I want to fork into the background to run a long-running function, with the parent exiting immediately. I can't use os.fork() because I need Windows support. This is what I came up with:It does spawn a child process: ps shows two Python processes with the same command string. However, on both my Mac and the Windows machine I tried it on, it acts as if I'd called join() on the Process: both parent and child keep running, and if I do ctrl-c, both die. What am I doing wrong?
To start multiprocessing Process can fork but it is not required. Process uses a similar API as Threading does which does not cause a call to the fork() API from the OS. In Python a simple fork example would be:Notice how we're importing the os library. In your example you aren't causing fork() to never be called.Please note that on Windows, fork() does not exist so you cannot fork as you will be able to on *nix systems. Please see HERE for a good article explaining forking in Python.


Answer URL
