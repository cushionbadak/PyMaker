Natural Text
I would like to avoid pickling of certain fields in an instance of a class.Currently, before pickling I just set those fields to None, but I wonder whether there's more elegant solution?
There is an example here which solves your problem with __getstate__ and __setstate__.
One way to handle instance attributes that are not picklable objects is to use the special methods available for modifying a class instance's state: getstate() and setstate(). Here is an exampleWhen an instance of Foo is pickled, Python will pickle only the values returned to it when it calls the instance's getstate() method. Likewise, during unpickling, Python will supply the unpickled values as an argument to the instance's setstate() method. Inside the setstate() method we are able to recreate the file object based on the name and position information we pickled, and assign the file object to the instance's logfile attribute. Reference: http://www.ibm.com/developerworks/library/l-pypers.html
Pickling uses the object's __getstate__ and __setstate__ methods; you can override them and ignore the fields you want.Output:You can find another example here: https://docs.python.org/3/library/pickle.html#handling-stateful-objects


Answer URL
https://docs.python.org/3/library/pickle.html#handling-stateful-objects
