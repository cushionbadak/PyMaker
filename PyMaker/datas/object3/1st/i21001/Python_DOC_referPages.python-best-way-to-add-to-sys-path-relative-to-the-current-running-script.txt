Natural Text
I have a directory full of scripts (let's say project/bin). I also have a library located in project/lib and want the scripts to automatically load it. This is what I normally use at the top of each script:This is kind of cumbersome, ugly, and has to be pasted at the beginning of every file. Is there a better way to do this?Really what I'm hoping for is something as smooth as this:Or even better, something that wouldn't break when my editor (or someone else who has commit access) decides to reorder the imports as part of its clean-up process:That wouldn't port directly to non-posix platforms, but it would keep things clean.
If you don't want to edit each fileInstall you library like a normal python librayorSet PYTHONPATH to your libor if you are willing to add a single line to each file, add a import statement at top e.g.keep import_my_lib.py in bin and import_my_lib can correctly set the python path to whatever lib you want
This is what I use:
I'm using: 
Create a wrapper module project/bin/lib, which contains this:Then you can replace all the cruft at the top of your scripts with:
If you don't want to change the script content in any ways, prepend the current working directory . to $PYTHONPATH (see example below)And call it a day!
Using python 3.4+Barring the use of cx_freeze or using in IDLE. ðŸ˜ƒ 
There is a problem with every answer provided that can be summarized as "just add this magical incantation to the beginning of your script. See what you can do with just a line or two of code." They will not work in every possible situation!For example, one such magical incantation uses file. Unfortunately, if you package your script using cx_Freeze or you are using IDLE, this will result in an exception.Another such magical incantation uses os.getcwd(). This will only work if you are running your script from the command prompt and the directory containing your script is the current working directory (that is you used the cd command to change into the directory prior to running the script). Eh gods! I hope I do not have to explain why this will not work if your Python script is in the PATH somewhere and you ran it by simply typing the name of your script file.Fortunately, there is a magical incantation that will work in all the cases I have tested. Unfortunately, the magical incantation is more than just a line or two of code.As you can see, this is no easy task!


Answer URL
https://docs.python.org/3/tutorial/modules.html#the-module-search-path
