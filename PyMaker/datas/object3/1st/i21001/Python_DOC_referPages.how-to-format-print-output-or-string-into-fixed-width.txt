Natural Text
I have this code (printing the occurrence of the all permutations in  a string)I want to print all the permutation occurrence there is in string varaible.since the permutation aren't in the same length i want to fix the width and print it in a nice not like this one:How can I use format to do it? I found these posts but it didn't go well with alphanumeric strings:python string formatting fixed widthSetting fixed length with python
EDIT 2013-12-11 - This answer is very old. It is still valid and correct, but people looking at this should prefer the new format syntax.You can use string formatting like this:Basically:the % character informs python it will have to substitute something to a tokenthe s character informs python the token will be a stringthe 5 (or whatever number you wish) informs python to pad the string with spaces up to 5 characters.In your specific case a possible implementation could look like:SIDE NOTE: Just wondered if you are aware of the existence of the itertools module. For example you could obtain a list of all your combinations in one line with:and you could get the number of occurrences by using combinations in conjunction with count().
I find using str.format much more elegant:If you like the string to be align to the right use > instead of <:Edit:As mentioned in the comments: the 0 indicates the index of the format argument. 
Originally posted as an edit to @0x90's answer, but it got rejected for deviating from the post's original intent and recommended to post as a comment or answer, so I'm including the short write-up here.In addition to the answer from @0x90, the syntax can be made more flexible, by using a variable for the width (as per @user2763554's comment):Further, you can make this expression briefer, by only using numbers and relying on the order of the arguments passed to format:Or even leave out all numbers for maximal, potentially non-pythonically implicit, compactness:Update 2017-05-26With the introduction of formatted string literals ("f-strings" for short) in Python 3.6, it is now possible to access previously defined variables with a briefer syntax:This also applies to string formatting
format is definitely the most elegant way, but afaik you can't use that with python's logging module, so here's how you can do it using the % formatting:Here, the - indicates left-alignment, and the number before s indicates the fixed width.Some sample output:More info at the docs here: https://docs.python.org/2/library/stdtypes.html#string-formatting-operations


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
