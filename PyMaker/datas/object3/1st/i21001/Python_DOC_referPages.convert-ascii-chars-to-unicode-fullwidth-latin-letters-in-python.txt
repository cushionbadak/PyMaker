Natural Text
Can you easily convert between ASCII characters and their Asian full-width Unicode wide characters?Like:to
Those "wide" characters are named FULLWIDTH LATIN LETTER: http://www.unicodemap.org/range/87/Halfwidth%20and%20Fullwidth%20Forms/They have range 0xFF00 - -0xFFEF. You can make look-up table or just add 0xFEE0 to ASCII code.
The range of fullwidth ASCII replacements starts at U+FF01, not U+FF00. U+FF00 is (strangely) not defined. To get a fullwidth SPACE, you need to use U+3000 IDEOGRAPHIC SPACE. Don't rely on typing what appears to be what you want followed by visual inspection of characters to check your mapping -- unicodedata.name is your friend. This code:when run shows what you have really got: some missing mappings and some idiosyncratic mappings:
Yes.
Yes; in Python 3, cleanest is to use str.translate and str.maketrans:In Python 2, str.maketrans is instead string.maketrans and doesnâ€™t work with Unicode characters, so you need to make a dictionary, as Ignacio Vazquez notes above.
This goes one way:And this goes the other:
UTF-8 Unicode codes for ASCII are exactly the same. For UTF-16 add a zero before/after (LE/BE)Or in python mystr.encode("utf-8")


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
https://docs.python.org/3/library/stdtypes.html#str.maketrans
