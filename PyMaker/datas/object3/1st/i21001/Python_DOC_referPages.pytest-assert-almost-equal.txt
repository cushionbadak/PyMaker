Natural Text
How to do assert almost equal with py.test for floats without resorting to something like:More specifically it will be useful to know a neat solution for quickly compare pairs of float, without unpacking them:
I noticed that this question specifically asked about py.test. py.test 3.0 includes an approx() function (well, really class) that is very useful for this purpose.The documentation is here: https://docs.pytest.org/en/latest/reference.html#pytest-approx
You will have to specify what is "almost" for you:to apply to tuples (or any sequence):
If you have access to NumPy it has great functions for floating point comparison that already do pairwise comparison with numpy.testing.Then you can do something like:
Something likeThat is what unittest doesFor the second partProbably better to wrap that in a function
These answers have been around for a long time, but I think the easiest and also most readable way is to use unittest for it's many nice assertions without using it for the testing structure.Get assertions, ignore rest of unittest.TestCase(based on this answer)Make some assertionsImplement original questions' auto-unpacking testJust use * to unpack your return value without needing to introduce new names.
I'd use nose.tools. It plays well with py.test runner and have other equally useful asserts - assert_dict_equal(), assert_list_equal(), etc.
If you want something that works not only with floats but for example Decimals you can use python's math.isclose:Docs - https://docs.python.org/3/library/math.html#math.isclose


Answer URL
https://docs.python.org/3/library/math.html#math.isclose
