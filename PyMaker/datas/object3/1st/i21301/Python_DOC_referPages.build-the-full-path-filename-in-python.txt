Natural Text
I need to pass  a file path name to a module which creates a report document as pdf,html etc.How do I build the file path name from a directory name,base file name and a fileformat string ?The directory may or may not exist at the time of callfor exampleI need to create a string '/home/me/dev/my_reports/daily_report.pdf' concatenating the pieces manually didn't seem to be a good way.I tried os.path.joinbut it gives
This works fine:Keep in mind that os.path.join() exists only because different operating systems use different path separator characters. It smooths over that difference so cross-platform code doesn't have to be cluttered with special cases for each OS. There is no need to do this for file name "extensions" (see footnote) because they are always connected to the rest of the name with a dot character, on every OS.If using a function anyway makes you feel better (and you like needlessly complicating your code), you can do this:If you prefer to keep your code clean, simply include the dot in the suffix:Footnote: There is no such thing as a file name "extension" on non-Micorsoft operating systems. Its presence on Windows comes from MS-DOS and FAT, which borrowed it from CP/M, which has been dead for decades. That dot-plus-three-letters that many of us are accustomed to seeing is just part of the file name on every other modern OS, where it has no built-in meaning.
If you are fortunate enough to be running Python 3.4+, you can use pathlib:
Um, why not just:
Just use os.path.join to join your path with the filename and extension. Use sys.argv to access arguments passed to the script when executing it:Simply run the script like:


Answer URL
https://docs.python.org/3/library/pathlib.html
