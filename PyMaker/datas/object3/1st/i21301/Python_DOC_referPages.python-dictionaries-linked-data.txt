Natural Text
What's the best way to do it so:

d1 and d2 point to the same object in the memory and therefore changing values in d2 will affect d1 as well.Use the copy-method of the dictionary-class or the copy-module.If you have mutable objects stored in the dictionary (i.e. lists) and want to copy theese as well, you should use the deepcopy-function.
Copy the dictionary:
In your case, both d1 and d2 refer to same object. You can create copy of the original dict by :using d1.copy()using copy.copy(d1)using dict(d1)using copy.deepcopy(d1)1,2,3 will create shallow copies and 4 will create a deep copy
I'd like to propose a better way to do this.Please read ChainMap's reference: https://docs.python.org/3/library/collections.html#collections.ChainMapIf you're using python2, to implement the ChainMap, use this minimal code recipe: https://code.activestate.com/recipes/305268/


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
