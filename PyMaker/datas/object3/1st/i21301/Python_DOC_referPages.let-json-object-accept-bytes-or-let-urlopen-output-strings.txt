Natural Text
With Python 3 I am requesting a json document from a URL.The response object is a file-like object with read and readline methods. Normally a JSON object can be created with a file opened in text mode.What I would like to do is:This however does not work as urlopen returns a file object in binary mode.A work around is of course:but this feels bad...Is there a better way that I can transform a bytes file object to a string file object? Or am I missing any parameters for either urlopen or json.load to give an encoding?
HTTP sends bytes. If the resource in question is text, the character encoding is normally specified, either by the Content-Type HTTP header or by another mechanism (an RFC, HTML meta http-equiv,...).urllib should know how to encode the bytes to a string, but it's too naïve—it's a horribly underpowered and un-Pythonic library.Dive Into Python 3 provides an overview about the situation.Your "work-around" is fine—although it feels wrong, it's the correct way to do it.
Python’s wonderful standard library to the rescue…Works with both py2 and py3.Docs: Python 2, Python3
I have come to opinion that the question is the best answer :)
For anyone else trying to solve this using the requests library:
This one works for me, I used 'request' library with json() check out the doc in requests for humans
I ran into similar problems using Python 3.4.3 & 3.5.2 and Django 1.11.3. However, when I upgraded to Python 3.6.1 the problems went away.You can read more about it here:https://docs.python.org/3/whatsnew/3.6.html#jsonIf you're not tied to a specific version of Python, just consider upgrading to 3.6 or later.
If you're experiencing this issue whilst using the flask microframework, then you can just do:data = json.loads(response.get_data(as_text=True))From the docs: "If as_text is set to True the return value will be a decoded unicode string"
Just found this simple method to make HttpResponse content as a jsonHope that helps you
Your workaround actually just saved me. I was having a lot of problems processing the request using the Falcon framework. This worked for me. req being the request form curl pr httpie
This will stream the byte data into json.io.TextIOWrapper is preferred to the codec's module reader. https://www.python.org/dev/peps/pep-0400/
I used below program to use of json.loads()


Answer URL
https://docs.python.org/3/library/codecs.html#codecs.getreader
https://docs.python.org/3/whatsnew/3.6.html#json
