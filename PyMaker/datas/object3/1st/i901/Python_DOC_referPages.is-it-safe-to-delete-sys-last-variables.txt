Natural Text
If no exception is raised, then sys.last_type, sys.last_value and sys.last_traceback are undefined:Return:After the exception is raised somewhere, all these values are accessible.My question: is it safe to del these values?My Python version is Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 18:41:36) [MSC v.1900 64 bit (AMD64)] on win32UPD: More info. I'm writing a C app using Python C API. The user enters Python code line by line, and I use Python C API to execute it. After each call I want to check if exception happened (by getting hasattr(sys, "last_type")) and if yes, display it to the user (via sys.last_type, sys.last_value and sys.last_traceback). After that I want to clean up sys.last_type, sys.last_value and sys.last_traceback so later I can check again if they were recreated by some new exception and return this information to user again. Does it makes sense?
Yes, you can safely del those attributes.  However:After each call I want to check if exception happened ...In this case you should probably adjust your code to look directly at sys.exc_info() instead.  The last_type, last_value, and last_traceback are just side-effects of an unhandled exception - and they are intended for use in an interactive session, not for flow control.There are legitimate use-cases for clearing the last exception info.  So much so, that Python 2 had a helper function for doing just that:From the docs:This function is only needed in only a few obscure situations. These include logging and error handling systems that report information on the last or current exception. This function can also be used to try to free resources and trigger object finalization, though no guarantee is made as to what objects will be freed, if any.It was removed in Python 3.0 library changes:https://docs.python.org/3/whatsnew/3.0.html#library-changes


Answer URL
https://docs.python.org/3/library/sys.html#sys.exc_info
https://docs.python.org/3/whatsnew/3.0.html#library-changes
