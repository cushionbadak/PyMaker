Natural Text
Basically, I'm unsure why:I'm unsure of what is causing the difference? As green != purple gives a result of True also, so why does the abstraction cause a difference in value? 
You are getting the operator precedence rules wrong. Essentially, the expression gets evaluated as follows:As for the second one, red + True + 0.0, True gets promoted to 1, and the sum returns 45, then adding 0.0 promotes the int to a float.
The code seems to work as intended,the first print is false since the left expression (red + green) matches the right expression (purple[red + green] + 0).Since you checked whether they are different (by using != between the two expressions), you got False.I think you confused the way python checks conditions.When you use a comparison operand, python will first evaluate both sides of the operand, then compare both of the sides.You wrote "As green != purple gives a result of True also", but the actual comparison is "(red + green) != purple".


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
