Natural Text
I'm using ubuntu mate on raspberry pi 3b. Is there an easy way to do something similar to:(from windows)? When I try to use this on linux, I get this error:
os.environ is a dictionary, which contains various type of environment variable. Here USERNAME, LOGNAME, USER etc are system-state environment variable. So according to the operating system and type of current user, we can find those environment variables.  When we login as a normal user in Ubuntu, we have all USERNAME, LOGNAME and USER in system-state environment variable but when we login as a root user we have USER and LOGNAME in system-state environment variable.  Please look at the below code for normal user in Ubuntu.
You need to define what is the "login name" (and why you need it). In the details it is not that simple (and I am not exactly sure that you understand what it is exactly, even on Windows, which I don't know). Notice that os.getlogin is documented to use the controlling terminal (read more about these in the TTY demystified,  pty(7), tty(4)) and in some cases (e.g. a crontab(5) job, a remote command started thru ssh, etc...) you don't have any.You could use some environment variable. See environ(7) and getenv(3) (and find its Python equivalent, probably os.environ). In most cases (in some interactive session), both USER and LOGNAME environment variables would give you some "login name". In pathological cases, they could be missing or different (or incorrect, think of setuid programs). Python has getpass.getuserThen, read about credentials(7). You then know that every process has its uid (see getuid(2) and geteuid). That uid is a number (a probable equivalent on Windows would be the SID). From that number you might get a "login name" using getpwuid(3), in Python pwd.getpwuidIn very rare pathological cases, you might even have a process with some uid which has no "login name" (this could, for example, happen with an old process running in a uid that you have deleted from your /etc/passwd, see passwd(5))In pathological cases, USER & LOGNAME environment variables, and getuid / geteuid followed by getpwuid could give different "login names", then you have to decide which one you want (that is equivalent to exactly define what "login name" means to  you).You should read ALP to learn more about Linux programming, and adapt the knowledge you get from there (ALP explains things from a C API point of view) to Python.If you need a home directory, the common wisdom is to use the HOME environment variable (but again, you might have pathological cases where it is unset or wrong; in such rare cases, you need to define what you really want.).PS. On Unix systems, I don't understand why you need a login name in general. The common idiom is to reason in terms of uid.


Answer URL
https://docs.python.org/3/library/os.html?highlight=getlogin#os.getlogin
https://docs.python.org/3/library/os.html?highlight=dup2#os.environ
https://docs.python.org/3/library/getpass.html?highlight=getuser#getpass.getuser
https://docs.python.org/3/library/pwd.html#pwd.getpwuid
