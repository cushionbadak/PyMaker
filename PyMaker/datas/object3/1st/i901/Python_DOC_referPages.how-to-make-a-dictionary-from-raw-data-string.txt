Natural Text
Essentially I need to create a dictionary from a string of dataGiven :d(data) would result in:My current code is showing an error message of "base 10..."
You can do that with a regular expression and a generator expression like:Code:Test Code:Results:But! A Regex:So for those that are concerned about using a regex:Let's benchmark a regex answer vs the second most voted answer here:Timing Results:The regex answer is twice as fast.
An approach without reOutput
There are a couple of different ways you could do this.  If you know your list all has entries in the form of strings ending in some numbers, and you want to split those into keys and values in the form of <non_numerical_string>: <integer>, then here's one way to build off of what you have without using regular expressions:In your original example, n = int(input()) takes the user input and tries to transform all of it into an integer.  Later on, when you use .split() on the string, this breaks it up by spaces, but that means the commas are part of the individual strings of your new list.  So passing in "(", ")" gives you the split you want (though this means your original string has to have everything separated by commas and a space!).The enumerate(item) part takes a string like boson98 and returns an object that can be treated like the list [(0, 'b'), (1, 'o'), (2, 's'), (3, 'o'), (4, 'n'), (5, '3'), (6, '8')].  Though personally I prefer the simplicity of a regexp.


Answer URL
https://docs.python.org/3/reference/expressions.html#generator-expressions
