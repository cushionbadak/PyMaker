Natural Text
I am not able to comprehend why the self.details is printing the same line even after changing the object attribute self.name and self.author.
Because details is created from the original values. After the concatenation occurs, it's entirely independent of the other values. If you want a dynamically constructed string using the current values of name/author, use a property to compute details dynamically on access (without storing it as an attribute at all):
self.details is created and set once when doing self.details = self.name + ' written by ' + self.author but it isn't linked to it. The + operation just does a concatenation of strings.Exactly, with your first example, Python reads self.details = self.name + ' written by ' + self.author so it does self.details = "Harry Potter" + ' written by ' + "J K Rowling" and so self.details = "Harry Potter written by J K Rowling"It is just an attribute with a string as its value. This string will stay immutable until you change it explicitly.If you want this behaviour, you may look into getter and setter, and make a setter for self.name and self.author automatically updating self.details


Answer URL
https://docs.python.org/3/library/functions.html#property
