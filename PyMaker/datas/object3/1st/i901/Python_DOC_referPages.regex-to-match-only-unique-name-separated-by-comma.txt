Natural Text
I'm using Regular Expression to check the validity of a string.In particular I want the test pass if the String contains unique uppercase name (one or more), eventually seprated by comma.Each name lenght should be between 3 and 20.Accepted strings:JOHN,MARK,EDDIEJOHNNOT Accepted strings:JOHN,JOHN MARKJOHN,MARK,EDDIE,JOHNI'm using the following Regex that ensure that names must be separated by comma (if more than one), but how can I tell that names should be unique?
You can use a negative lookahead that quotes a matched name:The (?!.*\2) part ensures that the matched name does not occur later on. This serves as an example for how to use negative lookahead. The complete regex as per OP requirements is:Note that this tests against string + ',', i.e. an artificial comma appended, to avoid messing with two different groups for first and subsequent parts.I suppose the negative lookahead is short-circuiting in a sense that it fails as soon as it encounters a match. That means worst case performance should be O(N^2). We can check that by generating strings that only contain unique names and measure the regex performance. The quadratic fit gives t = a*N**2 + c and a = 0.06 us, c = 3 us.Code
What you might do is first find the valid strings using your regex without the capturing groups:^[A-Z]{3,20}(?:,[A-Z]{3,20})*$If the string is valid, then you can split on a comma, and compare the length of the items against the length of the items by using a set to make them unique.If those values match, then your string is valid.For exampleResultSee the regex demo | Python demo


Answer URL
https://docs.python.org/3/library/re.html#index-20
https://docs.python.org/3/library/re.html#index-18
https://docs.python.org/3/library/re.html#index-17
https://docs.python.org/3/tutorial/datastructures.html#sets
