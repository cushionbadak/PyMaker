Natural Text
I have two lists [1,2,3,4] and [1,2,3]I would like to sum these to give me the following: [1,3,5,7].This was done by doing 1+0=1, 2+1=3, 3+2=5 and 4+3=7.I understand that itertools.zip_longest would do this, but it would fill the mismatch in length with 0 at the end, giving me [2,3,6,4] and not the value I want.I would like the mismatch in length to be solved by filling the first length with zero.
The built-in reversed() function could be used to do it like this:
You can pad the second list with zeros and use zip:Output:
You could build a shift by using repeat, then concatenate the shift with the shorter one using chain:Output
You can use the reversed function to generate the two lists in reverse order so that zip_longest would align the zipping from the other end, and then reverse the result afterwards:This outputs:
You could go around this problem be reversing your lists befor ziping with zip_longest.and finally, reverse again, to produce the desired result:The main advantage of this method as @CoryKramer says in his comment is that you do not have to know beforehand which list is the longest.


Answer URL
https://docs.python.org/3/library/functions.html#reversed
https://docs.python.org/3/library/itertools.html#itertools.repeat
https://docs.python.org/3/library/itertools.html#itertools.chain
