Natural Text
Split by \nwildcard/. I have the following text:I want to split it to get the words that are defined, so I want to split by \n./, but when I use orIt just returns txt
str.split() is different from re.split(). . is a simple dot in str.split(), not a wildcard.To extract only the "words" like: 'wiring', 'wisdom tooth', 'witch  hazel' you can use regular expressions: findall() returns a list with all matches. . matches any non newline character, + matches 1 or more of those. () is a capturing group (the part of the match that will be "stored"). * means 0 or more of the previous. \s is the whitespace character. 
This is an alternative, although I do think regular expression is the best way to go.You can first split the \n, iterate the list, find / and split the / to return the first item: or list comprehension to do it all at once:
To answer your question as posed, the .split() operator needs to be performed on the actual variable. When you enter txt.split(...), you are actually splitting the variable txt. So, define your text above as a string, then split that string.


Answer URL
https://docs.python.org/3/library/re.html#re.split
https://docs.python.org/3/library/re.html
