Natural Text
I'm running Python 3.Is it possible to put a loop in the condition for elif? Here's the basic idea I'm trying to achieve. The number of items in the list is not constant.Now, this comes to my mind:But I'm trying to avoid running all the if statements, there's a lot of stuff going on in them. And I would like to get it in the elif part specifically and not in else.Edit / more clarification:It seems what I would need is any( x.method() for x in list ) but also with a reference to x so that I can then use x if the condition was true.Here's the whole concept I'm trying to get again:where method() is some method that returns True or False, and n is the size of the list and not a constant.
I don't think what you want -- to have it entirely in the elif -- is possible. You'd have to evaluate whether there is any such value in the list, and then bind it to x in the condition. As far as I know, this is not possible in Python's syntax. You can not do an assignment in the condition, and while the loop variable in a list comprehension can "leak" to the outside scope, the same is not true for a generator.In the second case (list), we have a reference to x, but it is the last value from the entire list, and in the first case (generator), x can not be resolved at all.Instead, here's another variant, using a generator expression to combine the for with the if, and adding an else to the for to enumate your final else clause.
You ask, is it possible? Yes. What does it do, though? Probably not what you intend.For the number of items in list, it will fabricate one value in the resulting list. For list values, only a list of zero length will be False. [False, False, False] is True, so the body of the condition will be executed.You may be looking for all() or any() if x.method() is supposed to influence the following condition decision.Likewise, you may want 
I see now. The Pythonic way of doing what your updated edit says is to make a for loop and break out after you find your first item and act on it, and use the almost unknown and unused "else" of a loop. Since the "for / else" idiom is so rarely used, you will need to add a comment about it, for future readers.Read up on loop elses in the Python Tutorial.
It is not exactly possible to do what you want, but you can do something similar with list comprehensions:To avoid do x.method() for every value, you could also use itertools.dropwhile.  The following approach will keep checking x.method() until it finds one that is true, then stop and return just that value of x.  If it doesn't find any that are true, it will do something else.
This could work as long as you don't need a reference to x outside of the elif block. This feels closest to the syntax you are asking for, but I would still probably go with either Kevin or Tobias's answers as they are more explicit and readable.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops%20loop%20elses
