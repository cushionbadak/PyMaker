Natural Text
Given Lista each containing an id name (e.g. a), thesymbol '=' and a comma separated list of values. I need to generate another list which is a combination of 'id= value' substrings, such that each id-value combination exists in the input and each value is used exactly once.Expected output: I tried to solve this question using itertools.permutations() function, but I was unable to proceed further. What type of approach should I take to solve this problem?
I don't normally post complete working solutions to what look like homework problems, so consider yourself lucky. :) outputI've changed the name of your lists to lower case - Names beginning with an upper case letter like Lista and Listb are normally reserved for use as class names in Python.If you don't understand any of the things I've done in this program, please ask and I'll try to explain.You could do this in one line, but it's not very easy to read::)The string .partition() method splits a string into 3 parts: the substring before the separator, the separator itself, and the substring after the separator.So head, _, tail = s.partition('=') captures the id into head and all the associated values into tail.I use _ to capture the separator to indicate that we don't really need that value (since we already know that it's =).The list comprehension on the next line splits the values up by using .split(','). 
explanation :First you need to split your string list with = then create g as following :now you need to create the combinations of the element of list g with len 2 and after that you need a production of that result!Note that we need to pickup one tuple from each list of below result : 
You should have take a look on itertools.product, that may be what you are looking for.You may easily convert listA to 3 lists:then you may tryx will be what you want, all the remain work are string concatenating, or string formating.UpdateFor more detail, you can use thisHope this help


Answer URL
https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.permutations
