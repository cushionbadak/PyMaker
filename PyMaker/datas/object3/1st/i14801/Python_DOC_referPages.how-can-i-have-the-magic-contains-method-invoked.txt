Natural Text
I have the contains method in my Sentence class that checks if a word is in a sentence(string in my case) I tried to check in my functionTesting if hello exist in hello world and I got this error instead:here is my codeHow do you call the __contains__ function? Did I make a mistake in the class method function or did I make a mistake in the functionTesting when calling it? I am expecting to get True.
Quoting the documentation of __contains__,Called to implement membership test operators. Should return true if item is in self, false otherwise. For mapping objects, this should consider the keys of the mapping rather than the values or the key-item pairs.For objects that donâ€™t define __contains__(), the membership test first tries iteration via __iter__(), then the old sequence iteration protocol via __getitem__()So, it will be invoked when used with the membership testing operator, in, and you should use it like thisImportant Note: Python 3.x, doesn't have __getslice__ special method at all. Quoting Python 3.0 Change log,__getslice__(), __setslice__() and __delslice__() were killed. The syntax a[i:j] now translates to a.__getitem__(slice(i, j)) (or __setitem__() or __delitem__(), when used as an assignment or deletion target, respectively).So, you cannot invoke it with the slicing syntax.I am expecting to get True.No. You cannot get True, because you already called hippo.capitalize() before the membership test. So, your self._string is HELLO WORLD, by the time membership test is happening. So, you will actually get False.Note 1: In Python, boolean values are represented with True and False. But in your __contains__ function you are returning true which will raise NameError at runtime. You can better write it succinctly like thisNote 2: Also in your __getslice__ function,you are using i and j which are not defined. Perhaps you wanted to use start and end like this
You can call the __contains__ function by using in keywordlike 


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__contains__
https://docs.python.org/3/reference/datamodel.html?highlight=special%20methods#specialnames
