Natural Text
Saludos.I want to sums even index of a list, and i do it works normally with every list, BUT when if the passed list like argument have a duplicated item, the code dont work like it should.example, I have this code:if i pass like argument the next:But, when i put like argument a list with duplicated items, the loop 'for' iterate and when its over index [1] like is not even ("Par" in spanish) obviously don't sums that index but when the loop reach a even index but with the same value of previous index the code don't sums the even index, example:so, the first index with value of 2 is not even so  don't sums that index, but should sums the next index with value of 2 because is a even index.Note: argument list empty will return 0, that part is ok ;).Any Solution? Thanks.
index() will return the first index for a given value. If you have duplicate values it will indeed always return the index of the first value.As an example, given the list [1,3,3,4,6,3]Each call of index() will start a new search from "left to right", stopping when the first occurrence of the searched value is found. For example, if you're looking for 3 it will do something like that:Please note that even if it worked when you had non duplicate values, it was not very efficient as the program has to perform that linear search in the list on each iteration.For small lists, the canonical way to iterate over even items is probably to use the slice syntax:For sake of completeness, if you need to iterate over odd index, you will write:For long lists this can be inefficient too as this will make a copy of the list containing only the required items. If you need to deal with such lists, you will probably need to take a look at itertools.islice:
You can actually do this in one line, using slices like @SylvainLeroux mentioned:
You should use enumerate. Looking for the index the way you are trying to do it is inefficient, and gives the wrong answer when there are duplicates as you have seen.You don't need a special case for the empty list if you use sum with a generator expression


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
https://docs.python.org/3/library/itertools.html#itertools.islice
