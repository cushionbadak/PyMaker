Natural Text
This question already has an answer here:Why is python ordering my dictionary like so? [duplicate]                    3 answers                The outout of the following code gives the following outputI want to ask why is it displayed in this way (in sorted order) . Isn't banana should come first , then apple , orange and pear ?
It's not sorted. You use a dictionary to store your data. Standard dictionaries in Python are unordered. They basically are a hashmap of keys connected to values. The order you see is the order of keys in the dict's hashmap. 
Python has a built in sort routine.  There is more information regarding Pythons default routine in this Stack Overflow post.Python Sort Algorithm
an unordered dictionary is most probably implemented as a  hash table (in fact, the Python documentation states this outright) where the order of elements is well-defined but not immediately obvious. Your observations match the rules of a hash table perfectly: apparent arbitrary, but constant order.Thanks to @konrad-rudolph
dict doesn't guarantee sorting, it is basically a Hash Table. Order is based on hash() function, you may check this in interpreter:To print keys in really sorted order, use OrderedDict or apply sorted() while iterating keys:
Python Dict has no order.So you can use OrderedDict


Answer URL
https://docs.python.org/3/library/stdtypes.html#typesmapping
