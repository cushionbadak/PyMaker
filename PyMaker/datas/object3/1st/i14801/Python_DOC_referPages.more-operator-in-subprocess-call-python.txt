Natural Text
I have three csv file: 1.csv, 2.csv, 3.csv like these:If I do:I obtain:as I want.Now I want to do this in Python subprocess.call but the result is:In these ways it doesn't create 4.csv file:Or
Both of these work:sp.call('cat 1.csv 2.csv 3.csv > 4.csv', shell=True)andsp.call('cat < 1.csv > 4.csv', shell=True)sp.call('cat < 2.csv >> 4.csv', shell=True)sp.call('cat < 3.csv >> 4.csv', shell=True)Not sure what your real objective is. If you just want to concatenate some files then doing it directly in python is the way to go. If you want to chain-append some program outputs then I would do it using the 2nd method (one per line).
This can be achieved easily using just python:Using subprocess you could redirect:I would recommend using the first example.
If you redirect multiple times, all the redirection are performed, but only the last redirection will take effect (assuming none of the earlier redirection cause error).The above is equivalent to :unless either of 1.csv, 2.csv or 3.csv doesn't exists in which case this command will expected to fail.Try this :
If the fileinput approach is too slow, you could try to copy using larger chunks:copyfileobj() accepts length parameter that you could experiment with to find out how it affects the time performance in your case.If it is not enough, you could try os.sendfile():


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.copyfileobj
https://docs.python.org/3/library/os.html#os.sendfile
