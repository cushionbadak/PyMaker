Natural Text
How do I sum the values of list to the power of their indices in Python 3?Example:The idea is to create a unique index for any possible combination of non-negative numbers in the list. This way, I can use the list to compute an index of something.Edit: while the question has been answered, I just realized that the method does not create a unique index for any combination of non-negative integers in the list. To do so, assuming a is the number of possible integers, and based in the accepted answer,The idea is that each number will increase the index by an amount exponentially proportional to its position in the list. Assuming a=4 (from 0 to 3), the above example becomesWhere the indices would range from 0 to 4^3-1=63.
Use enumerate to get the index and supply that to sum:Specifying the start argument to enumerate as 1 assures indices will start from 1 (as you want) and not from 0 (the default which you get with a plain enumerate):In a functional spirit, you could also utilize map with count from itertools passing in pow as the function to be mapped:These pretty much execute in approximately the same time; the generator expression to sum though offers a slight advantage of flexibility.
You can do this with numpy, which is often faster than iterating through lists:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#sum
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/itertools.html#itertools.count
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/library/functions.html#pow
