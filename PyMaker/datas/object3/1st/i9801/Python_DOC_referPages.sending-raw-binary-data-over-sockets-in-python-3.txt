Natural Text
I'm working on Huffman Encoding and Decoding. I have encoded a string into binary using Huffman Algorithm and now i want to send it over to another computer over sockets using Python 3 where the encoded data will be decoded back. What would be the most efficient way of doing so ? Encoder part of code : 
You need to send string values in bytecode, then you can do: socket.send(byte(message,'utf-8'))Or socket.send(message.encode())If you want to send some plain text you can send directly: b'Spain' but if your text is in utf-8 (non-ascii) you must do: 'España'.encode()Look this example of client, and watch .encode() and .decode() which uses UTF-8 by default:
Take a look at https://docs.python.org/3/howto/unicode.htmlwhen trying to send raw 8-bit binary data, Python will encode it before sending it through the socket following this rule:"if the value is < 128, it’s represented by the corresponding byte  value. If the value is >= 128, it’s turned into a sequence of two,  three, or four bytes, where each byte of the sequence is between 128  and 255."Once you have managed to convert an array of 8-bit data into a string, send out the string using


Answer URL
https://docs.python.org/3/howto/unicode.html
