Natural Text
Python's locals() documentation says:Update and return a dictionary representing the current local symbol table. Free variables are returned by locals() when it is called in function blocks, but not in class blocks.What are in the current local symbol table exactly?Is the local symbol table guaranteed to be the same as the argument dict if locals() is called at the very beginning of a function?For example, if we have the following program:Will it always output True no matter what platforms and Python implementations we use?
What are in the current local symbol table exactly? Well, you can take a look yourself. At the very beginging of your Python, program, here is what the symbol table returned by locals() looks like:Which outputs:The symbol table consists of a few "magic variables", and some info about your current Python file. Such as the __file__ key, which contains the name of your current source file. The description of what locals returns pretty much matches the definition for a symbol table:In computer science, a symbol table is a data structure used by a language translator such as a compiler or interpreter, where each identifier in a program's source code is associated with information relating to its declaration or appearance in the source. - Wikipedia: Symbol table(emphasis mine)Is the local symbol table guaranteed to be the same as the argument dict if locals() is called at the very beginning of a function?To which the answer would 1yes. Functions have their own scope. And, as hinted at by the name, locals() only returns identifiers local to the current scope. So a call to locals() inside of a function, could not be changed by the outer scope of a program. eg.1Its a little hard to fully understand what your asking in your second question, so I apologize if my answer is not related. But I believe your asking: If I call locals() at the beginning of my function, inside of my definition, is the dict() returned by locals guaranteed to stay the same?. If this isn't the case, update your question and I'll try to re-answer.


Answer URL
https://docs.python.org/3/library/functions.html#locals
