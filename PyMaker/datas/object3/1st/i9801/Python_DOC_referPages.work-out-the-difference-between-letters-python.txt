Natural Text
been given an assignment and it's nearly finished. Just struggling with the last bit. The program is given a caesar cipher text, it then works out what the most frequent letter is and prints this back to the terminal. (Where I am up to.)It will then suggest a key shift based on the most frequent letter and the user can then manually input this key shift, or their own key shift and the text is the deciphered.I need the program to take the most frequent letter in the caesar text and compare this to the letter 'E' which is the most frequent letter in the english language and then work out how many key shifts it is away...e.g. if the most common caesar text letter is n then n-e = 9.Code so far:Thanks in advance.
So it seems your decrypt function essentially generates an output that is the input text string shifted by the key right now.From what I understand, what you then want to do is find the most frequently occurring letter in this string.You can use the collections module to do thisNow all you are left with is to find the shift between your most_freq letter and e.Perhaps the simplest way is just to enumerate the alphabet in a list and then find the index differences between the two.Remember this shift gets you from e to your most_freq letter so when you apply the shift to your text you need to apply the opposite ( -1 * shift ) to get the right result.Hope this helps.


Answer URL
https://docs.python.org/3/library/string.html#string.ascii_letters
https://docs.python.org/3/library/stdtypes.html#str.find
