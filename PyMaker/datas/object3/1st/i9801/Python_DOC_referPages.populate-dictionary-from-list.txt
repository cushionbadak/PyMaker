Natural Text
I have a list of strings (from a .tt file) that looks like this:I want to turn it into a dictionary that looks like:I was thinking of substitution, but it doesn't work that well. Is there a way to tag the tab string '\t' as a divider?
Try the following:Output:
Since str.split also splits on '\t' by default ('\t' is considered white space), you could get a functional approach by feeding dict with a map that looks quite elegant:With the dictionary d now being in the wanted form:If you need a split only on '\t' (while ignoring ' ' and '\n') and still want to use the map approach, you can create a partial object with functools.partial that only uses '\t' as the separator:this, of course, yields the same result for d using the sample list of strings.
do that with a simple dict comprehension and a str.split (without arguments strip splits on blanks)result:EDIT: the x.split()[0]:x.split()[1] does split twice, which is not optimal. Other answers here do it better without dict comprehension.
A short way to solve the problem, since split method splits '\t' by default (as pointed out by Jim Fasarakis-Hilliard), could be:I also wrote down a more simple and classic approach.Not very pythonic but easy to understand for beginners:Here I wrote the same code with very verbose comments:Useful links:You can quickly copy and paste this code here to check how it works and tweak it if you like: http://www.codeskulptor.comIf you want to learn more about split and string functions in general: https://docs.python.org/2/library/string.html


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
https://docs.python.org/3/library/stdtypes.html#dict
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functools.html#functools.partial
