Natural Text
I have two questions.First Question:I would like to know how I can remove each second element and third element from a 2-D list questions, so that if the variable questions initially is as follows:The resulted outcome becomes:Second Question:How can I find a way knowing two values: (minimum value, maximum value), to print whatever of the three lists in the list questions which the last element is in the range (minimum value, max value).Expected outcome:If, following obviously the previous outcome, for example, the minimum value is 1980 and the maximum value is 2000. It prints the following:Here's my attempt:Please, do not use numpy or any functions that need to be imported. Also, please make the solution general, so it can be applied to a 2D list with not only 3 elements (as in my case) but many elements (for everyone).
Both can be easily accomplished with list comprehensions. Removing certain elements:Here we unpack from each sub-list tossing away the middle elements with *_ while keeping the first and last in order to create the new list from them.For filtering, it is best to create a custom range and use another list comprehension to filter out the values that are in that range:int(i[1]) required due to the fact that the values are strings. Apart from being very intuitive, membership tests for range objects are quite efficient (See: Why is "1000000000000000 in range(1000000000000001)" so fast in Python 3?).
both are very easy to do with list comprehensions & conditions:result:with the filtering on year:result:note that listcomps are not the best when you need a temp variable/side effect (like above: int(x[-1]) must be computed twice, in the case of years we could take a shortcut and use string comparison as well, works from year 1000 to 9999:When we reach year 10000, I'll edit my answer :)
Question 1:Question 2, assuming you want to use the original questions list.:
Removing the 1st and 2nd index is relatively simple, one way to do this (destructively) is to use slice assignment:List comprehensions can also achieve this, but do need to construct a new list (and potentially intermediate lists).The finding min and max just needs the key argument (updated to include the filter requirement):
For your First question this code should do it just finemy answer for your second question is


Answer URL
https://docs.python.org/3/library/functions.html#func-range
