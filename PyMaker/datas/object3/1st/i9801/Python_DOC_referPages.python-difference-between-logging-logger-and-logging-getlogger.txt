Natural Text
Yes, I see python doc says: "Loggers are never instantiated directly, but always through the module-level function logging.getLogger(name)", but I have an issue to debug and want to know the root cause.here is the example:Using logging.getLogger("test") here, log message will not be printed.If I change logging.getLogger("test") to logging.Logger("test"), the log message will be printed. Or we can using logging.getLogger("test") and set logger level to logging.DEBUG.
The method .getLogger("test") is looking for any existing logger configurations for the name "test" while the .Logger("test") is creating a default logger with the name "test" and sets the default log level to 0. If the getLogger method doesn't find a logger class by that name then it will create a basic logger that will have an effective level of 30 (https://docs.python.org/3/library/logging.html#logging-levels) which will ignore your DEBUG message. You can check via logger.getEffectiveLevel() to notice the difference.Ideally you would create loggers and set them based on the proper naming/configurations instead of accepting the default configuration.


Answer URL
https://docs.python.org/3/library/logging.html#logging-levels
