Natural Text
Say I have a list with multiple strings.Take for example:Is there a way to delete or pop all the items with more than one space in the string? so that the output would be:
Use a list comprehension with filtering:
You can use filter:

A simple solution using regex and list comprehension :Don't forget to import re first.
A simple approach to achieve that:Output:
TL;DRUse list comprehensionsAn alternative to list comprehensionIf I have to take at face value OP's "… delete or pop all the itemswith …" I'd proceed like thisor maybe like this, where counting backwards dispenses from our(simple) bookkepingHumble considerations on looping over a listYou can use a for el in my_list: … when you just want to use thevalues you've stored into the list.You have to use a straightforward cycle on the indices of the list,for i in range(len(my_list)): … when you want to modify thevalues stored into the list, as simple values are immutable.You have to loop on the indices and take extra measures (goingbackwards, using auxiliary counters etc) when you are going tomodify the list itself, either by removing values or inserting newvalues into it.Speed?Just for info, the speed is in the same league with the speed of thelist comprehensions proposed elsewhereGiven that the cost of copying test is negligible, I'd say .pop()is 30% slower than a list comprehension.Beware of speed testsOf course if I'd chosen a test with more pops the bias towardslist comprehension would have been greater, but I choose what to test.Moral: beware of speed tests...


Answer URL
https://docs.python.org/3/library/functions.html#filter
