Natural Text
Dictionary views "are set-like objects" and can thus be used to compare dictionary contents with other objects.  Specifically,key-views: set-likevalue-views: not set-likeitem-views: set-like if (key, value) pairs are unique and hashableThe set-like nature of key-views allows bitwise comparisons.  In Python 3, we can find the intersection using the & operator. Oddly, comparing a list and key-view is also possible:whereas list and set objects normally cannot be compared this way.Aside from being set-like, why can key-views be compared to lists using bitwise operators?Tested on: |Python 3.5.2|Python 3.4.4|Python 2.7.12 (using viewkeys())|IPython 5.0.0| 
It uses the __rand__ method (short for "reflected and", not "random") on the dict_keys type.   Note that the reflected functions are only called if the left operand does not support the corresponding operation and the operands are of different types, which is the case here. For example:For some reason this method was not implemented for sets, which is why that doesn't work:I don't know the reason for this omission on sets, but I suspect it's probably "nobody has bothered to write it" because you can use set.intersection explicitly instead.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
https://docs.python.org/3/reference/datamodel.html#object.__rand__
https://docs.python.org/3/library/stdtypes.html#set.intersection
