Natural Text
I have a base class which has a __init__ that takes two parameters. I want to create a derived class object, given that I have a base class object.I want to do the following,and get a result such thatI tried the following, where the __new__ of B would call A's __new__ and ask it to create an object of type B(an empty object). But at this point I dont know how to set B to have all the functionalities of A.Is there a better way than to typecast the given A's object to B?( i.e a_obj.__classs__ = b_obj )Edit:  B is a dynamically created class(using type). So B wouldnt know beforehand what are the parameters that A's __init__ would take.
The simple way, by passing a's attributes in a call to superIn answer to "what if B was a dynamically generated class? B doesnt know what A's params are", that is a lot harder, and requires some true python hacking.I do not endorse doing this. It is bad coding practise and possibly error prone. 
Quite simply, pass a_object.age and a_object.sex to the parent constructor.Now note that one usually expects subclasses to be compatible with their parents, which is not the case here.Edit: to answer the additional question "what if B is dynamically generated and doesn't know  beforehand what are the parameters that A's init would take", the canonical solution is to use varargs and keyword args:
Well, with the example it's not clear whether inheritance will be used for any purpose other than a properties access.If getting all the object fields is only thing you want, I guess, it's not necessary to use inheritance. Since every object in python has dict property, you can just copy it:Although provided example will work as-well with inheritance, but in that case I'd hardly suggest to use parent constructor as described above.
Maybe using getattr, within class B,So if b_obj doesn't have an age attribute, it will refer to the age within a_object.


Answer URL
https://docs.python.org/3/library/functions.html#super
https://docs.python.org/3/library/stdtypes.html#object.__dict__
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
