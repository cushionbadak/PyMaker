Natural Text
I'm writing my compiler project, but now i'm stuck with python import conflicts. In gen.py, I want to import some function for code generation, like After some investigation, I've learned that "parser" is reserved for python internal parser. But I cannot change the directory name "parser",  since it has been used everywhere. How can I solve the problem?
To be accepted as a Python package, a directory must have an __init__.py file.Variables declared in this file can be access as if the package is a regular module. It can also be empty.  tl;dr: Add an empty __init__.py file to the directory and it should work.
python have a module parser , and you want to import engine that it doesn't have, if you wiil try to and you will see that parser module is not your parser module.Simple rename your parser folder and every thing will be all rightUpdatecan you try to import with from for example:
Assuming your project is actually contained in a project directory like so, ...   in gen.py:in the parent directory of my_package,you can run python -m my_package.gen.  This should run exactly as expected without the name conflicts.  With similar import statements in your tests, if you run your test modules in the same way, it should work just fine.  I tested this with the following. In E/work/temp/ I have a directory called my_package.  It has the following structure.import_test_a:import_test_b:test_imports.py:in E/work/temp:run: python -m my_package.import_test_b - output = 7run: python -m my_package.tests.test_importsoutput:.


Answer URL
https://docs.python.org/3/library/parser.html#module-parser
