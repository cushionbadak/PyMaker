Natural Text
I have a bunch of float values, for example:x1 = 1.11111111x2 = 2.22222222I want to write these values to a file:At this point I got an error on the second line:How do I write to file such that when I open it, I see this format:And yes, the file has to be ***.datIt's not .txt
the way you are writing to the file looks like you are giving two arguments to write function. So you need to only pass one argument. try converting x1 and x2 into string and then write to the file.
The write function takes a single string. You're trying to use it like print, which takes any number of arguments.You can, in fact, just use print. Its output only goes to your program's output (stdout) by default, by passing it a file argument, you can send it to a text file instead:If you want to use write, you need to format your output into a single string. The easiest way to do that is to use f-strings:Notice that I had to include a \n on the end. The print function adds its end parameter to the end of what it prints, which defaults to \n. The write method does not.Both for backward compatibility and because occasionally they're more convenient, Python has other ways of doing the same thing, including explicit string formatting:… printf-style formatting:… template strings:… and string concatenation:All but the last of these automatically converts x1 to a string in the same way as str(x1), but also allows other options, like:This converts x1 to a float, then formats it with 8-decimal precision.  So, in addition to printing out 1.11111111 and 2.22222222 with 8 decimals, it'll also print 1.1 as 1.10000000 and 1.23456789012345 as 1.23456789.The same format strings work for f-strings, str.format, and the format functions:… and the other two methods have similar, but not quite as powerful, formatting languages of their own:

First have a look at the below code sample. I have used repetition operator * to repeat strings 2 times which can used to generate a multiline string in single statement(in case, if you have a set of variables).» OutputFinally you can use the below 3 lines of code to accomplish your goal.Do not need to close file. It will be closed automatically once program control comes out from with statement's block.


Answer URL
https://docs.python.org/3/library/io.html#io.TextIOBase.write
https://docs.python.org/3/library/functions.html#print
https://docs.python.org/3/library/sys.html#sys.stdout
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting
https://docs.python.org/3/library/string.html#template-strings
