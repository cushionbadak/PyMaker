Natural Text
I'm using a Decorator (class) in an Instance method of another class, like this:Now, when I print out self.sayHello.__qualname__ it prints decorator_with_arguments.__call__.<locals>.wrapped_fIs there any way to override this? I want to see Lol.sayHello (qualname of my original function) in here.I tried overriding the @property __qualname__ of __call__ (with a static string); didn't work.
You can simply copy the __qualname__ attribute across to your wrapped_f wrapper function; it is this function that is returned when the decorator is applied, after all.You could use the @functools.wraps() decorator to do this for you, together with other attributes of note:The @wraps(f) decorator there copies the relevant attributes from f onto wrapped_f, including __qualname__:


Answer URL
https://docs.python.org/3/library/functools.html#functools.wraps
