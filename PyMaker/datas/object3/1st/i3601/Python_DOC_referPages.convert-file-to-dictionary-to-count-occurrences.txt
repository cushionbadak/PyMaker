Natural Text
I have a file where the content looks as follows:I want to count the number of occurrences of each word in every language. For this purpose i want to read the file in a dict. This is my attempt:This gives me a dict with the right keys but only the last of the words for example for english:
Well each time you assign an empty list as value:As a result, the old list containing the previous occurrence is lost. You should only create a list if no such element exists already, like:Since this pattern is rather common, you can use a defaultdict as well:A defaultdict is a subclass of dict that uses a factory (here list) in case a key is missing. So each time a key is queried that is not in the dictionary, we construct a list.You can later convert such defaultdict to a dict with dict(lang_and_string_dict).Furthermore if you open(..) files, you better do this with a with block. Since if an exception for example arises, then the file is still properly closed.
a simple approach using dict where keys are lang and values are counters of word occurrences outputKeep in mind the line lang, word = line.split() can cause an error or unexpected behaviour if the lines in the file aren't in exact lang word format, a exception and check is suggested 
Another workaround would be using collections.Counter. It returns a count of numbers of words under each category:To get count of each word under each category:
Similar solution to @shahaf's, but using defaultdict(int) instead of Counter.I also use csv.DictReader to make the logic clearer.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
