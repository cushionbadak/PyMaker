Natural Text
I don't think I understand the ways to read lines from the input using sys.stdin .What is the difference betweenandand why would I pick one choice over the other?Also, how would I get the behavior ofby using a for-in loop? Specifically, what would be an elegant way to treat the first line separately from the other lines in the input? Does somethine along the lines of for line in  sys.stdin still work?
There's nothing special about sys.stdin here; it's just a normal text file object.Iterating any iterable, including a file object, with for x in iterable:, just calls next on it over and over until it raises a StopIteration.Notice that this means that if you want to skip over a header line before processing the rest of a file, you can just call next(f) before the loop.And readline does the same thing as next, except for the hint parameter (which you're not using), and what happens on various error conditions (which aren't likely to matter here), and what happens at EOF: readline returns an empty string, next raises a StopIteration.So, there's no general reason to pick one over the other in general; it comes down to which is more readable in your particular case. If your goal is to loop over all the lines, it's a lot more readable to use a for loop. Compare:If, on the other hand, your loop involves reading variable chunks of stuff with some non-trivial logic, readline is usually going to be clearer:
This code will loop forever. If there is an EOF on sys.stdin -- for instance, if input was redirected from a file, and the end of that file has been reached -- then it will call foo('') repeatedly. This is probably bad.This code will stop looping when an EOF is encountered. This is good.If you want to handle the first line differently, you can simply call sys.stdin.readline() once before entering the loop:


Answer URL
https://docs.python.org/3/library/sys.html#sys.stdin
https://docs.python.org/3/library/io.html#io.IOBase.readline
