Natural Text
This question already has an answer here:Iterating over every two elements in a list                    18 answers                I am looking for a nice solution, to read always two elements out of a list in Python 3. What do I need to write for ??? in the following code:The desired output would be:A solution proposed in an earlier post did not work : for x, y in zip(it,it):    print (x, y)Also one could solve it with indexed for-loop. But this is also ugly (IMHO)
Use zip(*[iter(it)] * 2), as seen in this answer.
Another easy way without zip is:
Another cheap option, using indices. You might not like them, but they are fast.
Here is another approach which will work in Python3:Output:
Got this to work for your case:First I had to use l[::2] to create a list the odd numbers in the list, then l[1:][::2] to get even numbers.  Did this using slicing function which is quite useful linkThen I zipped them together to match 1st, 2nd, 3rd elements etc linkThen I used list comprehension to create a list of each of those sets.  The problem is that they were sets and not text as above.  To resolve this I changed my sets to string str() .  Now that the individual sets have been turned into string, you can join with ' '.You still have a set of 3 but you can print each line with print(*[list here],sep='\n') linkLearned a few new tricks, hope this helps!


Answer URL
https://docs.python.org/3/library/functions.html#zip
