Natural Text
I want to use something like difflib.get_close_matches but instead of the most similar strings, I would like to obtain the indexes (i.e. position in the list). The indexes of the list are more flexible because one can relate the index to other data structures (related to the matched string).For example, instead of:I would like:There doesn't seem to exist a parameter to obtain this result, is there an alternative to difflib.get_close_matches() that returns the indexes?My research towards an alternativeI know I could use difflib.SequenceMatcher, and then compare the strings one-to-one with ratio (or quick_ratio). However, I am afraid that this would be very inefficient, because:I would have to create thousands of SequenceMatcher objects and compare them (I am expecting that get_close_matches avoid the use of the class):EDIT: False. I checked the source code of get_close_matches, it actually uses SequenceMatcher.there is no cutoff (I am guessing that there is an optimization that avoids the calculation of the ratio for all the string)EDIT: Partially False. The code is get_close_matches does not have any major optimizations, except it uses real_quick_ratio, quick_ratio and ratio alltogether. In any case I can easily copy the optimization into my own function. Also I didn't consider that the SequenceMatcher has methods to set the sequences: set_seq1, set_seq2, so at least I won't have to create an object each time.as far as I understand, all python libraries are C compiled and this would increase performance.EDIT: I am quite sure this is the case. The function is in the folder called cpython. EDIT: There is a small difference (p-value is 0.030198) between executing directly from difflib and copy the function in a file mydifflib.py. Nevertheless it is not nearly as bad as I expected, I think I will proceed unless anybody know another library or alternative.
I took the source code for get_close_matches, and modify it in order to return the indexes instead of the string values.UsageNow, I can relate this indexes to associated data of the string without having to search back the strings.


Answer URL
https://docs.python.org/3/library/difflib.html#difflib.get_close_matches
