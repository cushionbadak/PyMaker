Natural Text
I have a set of data similar to this:I am looking for an efficient way to find the lowest value of LEAVESQTY for each matching ORDERID in the list of dictionaries.For example, my desired result for this example would be:I have tried to apply the same approach as similar questions that merge dictionaries based on matching key values, i'm just having trouble merging based on values.
You can use collections.defaultdict to construct a dictionary to list mapping.Then use a dictionary comprehension to calculate the minimum of each list.
Here's one way using sorted and toolz.unique. The idea is to sort by LEAVESQTY and then drop duplicates by ORDERID.If you don't have access to the toolz library, the logic is identical to the unique_everseen recipe found in the itertools docs.
Using a simple iteration.Demo:Output:
You can use itertools.groupby():EDITThe sorted is necessary as @jpp suggested for this to work as it will otherwise produce duplicate keys if the data looks like this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
