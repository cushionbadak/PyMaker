Natural Text
how to do this list/dict comprehension turn this [("a", 1), ("b", 2), ("a", 3)]into  thisI know how to do it in a for loop, can I use just one line to do the work?
A simple approach is to use a simple collections.defaultdict() of lists:Which creates:Note: If you want the final result to be a normal dictionary, you can just wrap dict(). If you really want a one liner, you could use itertools.groupby() in a dict comprehension:Which can also be written more cleanly as:The above solution has O(NlogN) complexity due to sorting, a requirement if you want to group similar items together. This is less efficient than  The first defaultdict solution, which is O(N), since you only need to iterate the list once. The first solution would be more preferable, since its easier to read, efficient and maintainable. 
Personally, I think using a loop is a simple option here, but for the sake of demonstration, you can define a custom class here that inherits from collections.MutableMapping to accomplish your goal.This initializes a defaultdict from your input values, so instead of overwriting a key it appends to it.  In action, you can simply call the class constructor on your array of tuples:Or if you want something more similar to a dictionary comprehension:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
