Natural Text
So I am trying to write this generator function and this is how I am trying to write it but it is not working and i'm not too sure how to call 'iter' explicitly. Any help would be appreciated!Write a generator named skip_until that takes as arguments a predicate and any iterable; it skipsproducing the initial values produced by the iterable for which the predicate returns False, and thenproduces the first value for which the predicate evaluates to True and produces all others after that onewhether or not they satisfy the predicate. For example, iterating over:would skip producing 'x' and 'y' (because their lengths are not > 1) butthen produces the values 'abc', 'a', and then 'xyz' (because 'abc' is the first value whose length is > 1,so it and all subsequent values are produced. Call iter explicitly.'''How can i call iter explicitly to get the proper results?
First, no reason to re-invent the wheel.  Look at itertools.dropwhile, and just invert your predicate.Second, if you're going to deal with iterators, then you can't assume that they're sliceable, or that you can get their lengths.  Basically the only things you can do to get values are for loops, next, and yield from.Also, and I don't want to sound condescending here, all you have to do to call iter explicitly is iter(iterable).  That returns an iterator over your iterable.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
https://docs.python.org/3/library/functions.html#iter
https://docs.python.org/3/glossary.html#term-iterator
https://docs.python.org/3/glossary.html#term-iterable
https://docs.python.org/3/whatsnew/3.3.html#pep-380-syntax-for-delegating-to-a-subgenerator
