Natural Text
So I am currently learning about looping in strings, using "for".I am trying to make a censoring function (sansur), which will turn all "m"s in a word into "*"s.If I do it like this, it just prints "none", but if I do it manually without a function like this, it works.I think my problem is because of the function.
try this:
Strings are immutable in Python. That means you can not change it, but you have to create a new one!So, you would have to rewrite it like this:It inefficient, but close to your original. To test it:However, when you wish to "map" each element of a sequence to a new one, like we're doing above, you can use map:Or, in a function:But, for a simple character translation like this, it's much better to use str.replace():
More in line with your original code:Basically, strings are immutable, so you aren't changing anything. Instead, I just appended the appropriate character to a new list based on your test, and then converted that list back to a string and returned it.
The main problem in your program is that you're not returning anything from that function.  Functions that complete without a return statement have a return value of None.  Even if you corrected that, it would not work.  The problem now is that you you're replacing the for variable, and not the actual position on the string.  When you do for harf in hmm:, harf becomes a copy of each  character on the string.  You then replace that copy, which gets lost on the next iteration.You could change your implementation to put the print call right after the if:However, as you're studying loops for strings, what you probably want is to aggregate the characters in a return variable, and then return it.Here's a reimplementation:Which printsProgra**ing is fun!
the best way to do this is to use str.replace, like this:Also, the reason that it prints 'None' with your function is because the function does not return anything. when you sayyou are printing the value of sansur(word), and a function's value is what it returns. Since your function returns nothing, it has no value; it will print 'None'. 


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/stdtypes.html#str.replace
