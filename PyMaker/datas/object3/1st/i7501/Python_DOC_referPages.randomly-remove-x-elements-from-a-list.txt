Natural Text
I'd like to randomly remove a fraction of elements from a list without changing the order of the list.Say I had some data and I wanted to remove 1/4 of them:I'm thinking I need a loop to run through the data and delete a random element 'n' times? So something like:My question is, is this the most 'pythonic' way of doing this? My list will be ~5000 elements long and I want to do this multiple times with different values of 'n'.Thanks!
You can use random.sample like this:Two notes on the above.You are not modifying the original list in place but you could.You are not actually deleting elements but rather keeping elements but it is the same thing (you just have to adjust the ratios)The drawback is the list-comprehension that restores the order of the elementsAs @koalo says in the comments the above will not work properly if the elements in the original list are not unique. I could easily fix that but then my answer would be identical to the one posted by@JohnColeman. So if that might be the case just use his instead.
Sequential deleting is a bad idea since deletion in a list is O(n). Instead do something like this:
Is the order meaningful? if not you can do something like: 
I suggest using numpy indexing as in


Answer URL
https://docs.python.org/3/library/random.html#random.sample
