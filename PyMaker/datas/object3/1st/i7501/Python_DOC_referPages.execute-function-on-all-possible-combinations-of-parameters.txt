Natural Text
I have sets of values that I want to apply as parameters to a function:I want to run myfunc() with all possible combinations, so myfunc(a=1, b=5, x=None ...), myfunc(a=2, b=5, x=None ...) ... myfunc(a=3, b=7, x='f' ...). Is there something (for example in itertools) that can help? I thought about using itertools.product() but that doesn't keep the names of the parameters and just gives me tuples of the combinations.
You can use itertools.product to get all combinations of arguments:With Argument list unpacking, you can call myfunc with all combinations of keyword arguments:output:
Ordering of .keys and .values are guaranteed across all Python versions (unless dict is altered which does not happen here), so this might be a bit trivial:You can find the gurantee in the docs:If keys, values and items views are iterated over with no intervening  modifications to the dictionary, the order of items will directly  correspond.Demo:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
