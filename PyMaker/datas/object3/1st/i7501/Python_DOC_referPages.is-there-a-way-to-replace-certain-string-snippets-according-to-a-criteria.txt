Natural Text
I'm importing from a .txt file containing some David Foster Wallace that I copy-pasted from a PDF. Some words ran off the page and so come in the form of I was going to sanitize it by using something like:Except... the man also uses some weird constructions in his writing. Things like:for the brand name bug spray Raid©. I'm left with "R d©" obviously, but is there a way to make it .replace() instances of "- " but not instances of " - "? Or do I need to turn everything into lists and do operations to everything that way? Thanks.
You could use a regular expression with a negative lookbehind assertion to check the previous character, and re.sub to replace matches with an empty string.'(?<! )- ' is a regular expression, matching all instances of '- ', not preceded by a single space character (refer to this section for the syntax). re.sub('(?<! )- ', '', input_string) will replace all occurrences of the '(?<! )- ' pattern in input_string with '' (empty string) and return the result.Examples:
You can use lookbehinds and lookaheads to make sure you substitute only the occurrences that need to be substituted:And,The latter is not affected.
is this what you need?This link can help you.HTH


Answer URL
https://docs.python.org/3/library/re.html#re.sub
https://docs.python.org/3/library/re.html#regular-expression-syntax
