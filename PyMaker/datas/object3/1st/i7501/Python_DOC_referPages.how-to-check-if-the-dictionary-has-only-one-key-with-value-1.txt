Natural Text
I have a dictionary with 2 keys. Only one key can have value 1. If both keys have value 1, it should give the error message.Here is the working code which I tried, but want to know if there is any way to optimize the same?Whichever key has value 1, that key is to be used further. So basically above code is needed to verify that the dictionary has expected values for the keys or not.
Since you know your dict has exactly 2 items, you can use all in combination with a comprehension:Alternatively, a more generic approach would be to use sum:

Given your statement:Whichever key has value 1, that key is to be used further.It sounds like you want to continue using your dictionary, just w/o the dup key(s) with the value of 1.  (And I'm going to assume you want uniqueness for all values, not just 1.)You can achive this by inverting the dictionary.  Example:Run:BTW, you almost certainty want to use an OrderedDict when reading in from wherever you're reading from, otherwise which key "wins" will be effectively random.  But with some sort of ordered dictionary implementation, the last will always win, which is what you specified.Good luck!


Answer URL
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/functions.html#sum
