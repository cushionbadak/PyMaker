Natural Text
Write down the chatting program code base with SSL/TLS and MultiThreading.there's a 3 things to follow.1.when client connected client's ID and IP or Network interface information, network information.2.when client send message you have to follow this form([Client ID@connect IP] Message ) everytime.3.you have to show and explain flowchart with client and server program.it's my final exam of network programing. but it's too hard for me. i couldn't write down the code. so i have to submit the paper with nothing. i don't know how to do. someone can explain how to code the program?my code is server.pyclient.py
The official Python documentation provides an example of how to use Python's native socket package to implement a simple echo server and client. The example itself contains essentially no real functionality (since the goal here is to demo the use of socket): the server echoes back everything it receives from the client. However, you can use this code as a basis, adding the functionality as required. If you use Python 3, you'll find the documentation here, for Python 2 see here. Now for the SSL/TLS part. Python has a native module ssl which is a TLS/SSL wrapper for socket objects; to cite the official Python documentation: the module "provides access to Transport Layer Security (often known as “Secure Sockets Layer”) encryption and peer authentication facilities for network sockets". If you use Python 3, you can find the documentation for the ssl module here, for Python 2 see here.The ssl module provides the class ssl.SSLSocket, which is derived from the socket.socket type, and provides a socket-like wrapper that also encrypts and decrypts the data going over the socket with SSL. The official documentation also contains example code (snippets) you can use to implement your exercise (see e.g. here for how to do SSL/TLS using ssl module in Python 3).


Answer URL
https://docs.python.org/3/library/socket.html#example
https://docs.python.org/3/library/ssl.html?highlight=tls#module-ssl
https://docs.python.org/3/library/ssl.html?highlight=tls#examples
