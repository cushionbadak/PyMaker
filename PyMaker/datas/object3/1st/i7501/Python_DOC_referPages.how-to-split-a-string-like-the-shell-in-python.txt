Natural Text
I have command line arguments in a string and I need to split it to feed to argparse.ArgumentParser.parse_args.I see that the documentation uses string.split() plentifully. However in complex cases, this does not work, such asIs there a functionality to do that in python?(A similar question for java was asked here).
This is what shlex.split was created for.
If you're parsing a windows-style command line, then shlex.split doesn't work correctly - calling subprocess functions on the result will not have the same behavior as passing the string directly to the shell.In that case, the most reliable way to split a string like the command-line arguments to python is... to pass command line arguments to python:One example of how these differ:
You could use the split_arg_string helper function from the click package:For example:The click package is starting to dominate for command-arguments parsing, but I don't think it supports parsing arguments from string (only from argv). The helper function above is used only for bash completion.Edit: I can nothing but recommend to use the shlex.split() as suggested in the answer by @ShadowRanger. The only reason I'm not deleting this answer is because it provides a little bit faster splitting then the full-blown pure-python tokenizer used in shlex (around 3.5x faster for the example above, 5.9us vs 20.5us). However, this shouldn't be a reason to prefer it over shlex.


Answer URL
https://docs.python.org/3/library/argparse.html
https://docs.python.org/3/library/shlex.html#shlex.split
https://docs.python.org/3/library/shlex.html#shlex.split
