Natural Text
Given the following enum:How can I specify a default value. I want to be able to do:and havemy_val be <MyEnum.A: 0>Is this possible? I've tried customizing __new__, __init__, __call__ but I can't get it to work.
MyEnum(..) is handled by EnumMeta.__call__. You need to override that method:
Why donâ€™t you just use the standard syntax?If you really want to do this, you may have to write your own enum meta override class.  You can see this example for the implementation in cpython so that you assign a default value equal to the first value in the value map for the enum.
If you do not control the Enums, then do:or, if the Enum might be empty:If you do control the Enums, then add a get_default method:or, even simpler, make default be an alias:You could also wrap the first method in to a function:
falsetru's answer would be the way to go if 0 argument case needs to be catered.If it is only about returning default when given value does not exist, we can override _missing_ hook in Enum class (Since Python 3.6):


Answer URL
https://docs.python.org/3/library/enum.html#programmatic-access-to-enumeration-members-and-their-attributes
