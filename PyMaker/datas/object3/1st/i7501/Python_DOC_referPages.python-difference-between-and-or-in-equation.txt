Natural Text
all.I'm running a simple python program and I found when I use followees = self.followee.get(userId, set()) | set([userId]), it passed the test. However, if I use followees = self.followee.get(userId, set()) or set([userId]), it didn't.So, apparently, there are some differences between these two operators in equations. Does anyone have some idea what's going on?Thanks!
For sets (which are your operands here), | returns the union of both sets (the operands), while the or operator returns the first truthy operand (a non-empty set) or the last, if all of the operands are falsy â€” making or a short-circuit operator.Consider the following examples:Notice that with two operands, if at least one of the operands is falsy, both | and or give the same results.or's behaviour is consistent for all objects, while | would behave differently depending on how the operands implement the __or__ or __ror__ magic methods e.g. acts as the bitwise or for integer types and [max-]union for collections.Counter objects.


Answer URL
https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not
https://docs.python.org/3/reference/datamodel.html#object.__or__
https://docs.python.org/3/reference/datamodel.html#object.__ror__
