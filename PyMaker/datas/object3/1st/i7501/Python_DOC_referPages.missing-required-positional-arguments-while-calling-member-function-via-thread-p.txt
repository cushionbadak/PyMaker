Natural Text
I wrote the following two methods, trying to benefit from multithreading:Unfortunately, it doesn't work with error message:Why?
Executor.map() (and consequently ThreadPoolExecutor.map()) takes an iterable and sends it over the enclosed pool one item per worker. This means that your Data.read_single_image() method gets called as: self.read_single_image((resample_size, i, image_directory_path)) i.e. gets a tuple of all the arguments as the first argument (after the implied self) so it complains that it didn't receive the last two positional arguments.You can remedy that by simply changing your Data.read_single_image() signature to: Data.read_single_image(self, args) and then read from the args tuple resample_size as args[0], index as args[1] and image_directory_path as args[2].If you want to keep the signature as it is, you can write a proxy expander as:And call the _read_single_image() method from your ThreadPoolExecutor.map() instead (i.e. pool.map(self._read_single_image, [(resample_size, i, image_directory_path) for i in indice]))Keep in mind that if you're going to perform some serious processing, you're much better off with the multiprocessing module, ThreadPoolExecutor is still somewhat limited by the dreaded GIL.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.map
