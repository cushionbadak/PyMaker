Natural Text
I'm trying to count the number of instances several words appear in a file.Here is my code:The issue in the code is that it only counts the number of instances of word1. How can this code be fixed to count word2 and word3?Thanks!
The main problem is that file.read() consumes the file. Thus the second time you search you end up searching an empty file. The simplest solution is to read the file once (if it is not too large) and then just search the previously read text:To improve performance it is also possible to split only once:Using with will also ensure that the file closes correctly after being read.
i think instead of continuously reading and splitting the file , this code would work better if you did : [ this way you could find the term frequency of any number of words you find in the file ]
Can you try this:  
Short solution using collections.Counter object:For the following sample text line:we would obtain the output:
in your code the file is consumed (exhausted) in the first line so the next lines will not return anything to count: the first file.read() reads the whole contents of the file and returns it as a string. the second file.read() has nothing left to read and just returns an empty string '' - as does the third file.read() .this is a version that should do what you want:you may have to do some preprocessing (in order to get rid of special characters and , and . and what not).Counter is in the python standard library and is very useful for exactly that kind of thing.note that this way you iterate once over the file only and you do not have to store the whole file in memory at any time.if you only want to keep track of certain words you could select only them instead of passing the whole line to a counter:i also included an example of what i meant with preprocessing: punctuation will be removed before counting.



Answer URL
https://docs.python.org/3/library/collections.html#collections.Counterl
https://docs.python.org/3/library/string.html#string.punctuation
