Natural Text
I have created a dictionary containing keys and values. After reading a text file like this:the dictionary is created. The problem is that the values are read as strings. I need to have them as bools so that later I can parse them to a JSON file and use them there as bools. The dictionary created is called answer. I tried the following but it is only giving me True as boolean:Then after converting I only get something like this but everything in only one line:So the strings are all converted to True booleans, which is not the case.The other problem is that the values are read inside lists. Is there any method to avoid that? Thank you.
map is used to apply a function to each value in an iterable.You can use ast.literal_eval instead:Moreover, you don't need to check for each key in a separate if statement. It's also more idiomatic to iterate over dict.items if you are using both key and value in your logic:Finally, consider using a dictionary comprehension instead:
map(bool, answer[key]) is mapping the function over the characters of a string. All non empty characters are true, so you should expect to only get True.You need to actually check for == "True"In other words, result of bool("False") might surprise you 
Why not simply:
If I understand your bools are strings and you need them to actually be bools, if so dictionary comprehension will work


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
