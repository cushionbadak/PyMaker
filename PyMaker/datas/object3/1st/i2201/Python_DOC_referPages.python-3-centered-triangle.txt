Natural Text
I'm trying to hone my Python 3 (specifically, nested loops) with the good old triangle exercises (which only takes an odd input for now). However, I have come across a problem I can't warp my head around with.I have a user_input (which is 7 for now so I don't have to give an input each time I run). A variable x and t used for the while loopAnother temporary variable that holds my user_input (in case I decrement it as not to 'damage' the original variable).A variable spaces and another variable stars (which should be self explanatory as I'm trying to draw a triangle based on asterisks).I have a variable y which is equal to temp - 2Expected output of 7 should be like this:The reason I have made y equal to temp - 2 is because the first row has spaces equal to user_input - 2. So let's say our input was 7, first row's amount of spaces is 5.If our input is 9, first row's amount of spaces is 7The first while loop will loop from 1 to 7 (1, 3 , 5, 7) which is why I made x equal to 1.The second while loop should loop from input - 2 until 0.Weird thing is, that if my user_input is equal to 5, it outputs just how I expected it to be.But once I enter something like 7, it builds a triangle from 1 to 9 (1, 3, 5, 7, 9)But I expect it to end right before the last row, it should output as many asterisks as my input. Is my thought process wrong? If so, where did I end up wrong?I hope I have clarified everything as much as possible.Thanks a bunch.
Seems overly complicated. Why not just:Or even simpler, using str.center:
Let's clarify a bit your code a bit :t is useless since it holds only 0 and never changes, use 0 insteaduser_input is never used except to make temp = user_input, use user_input instead of temp. As for decrementing it, it doesn't happen, and anyway you never return it to the user so it would be ok.that's kind of a typo so it's ok, but avoid letting your debugging prints like print(x,y) when you show some code on Stack Overflow, it's harder for us to understand the whole code.If you change back spaces = " " at the end of the while, just use spaces = " " * y.You do nothing between the two while so you can "merge" them with an and on conditions.So now we have :As you can see, you have two stopping conditions on your while when only one would be clearer. The reason behind your code works with 7 and not more is because 7 is the limit between when one condition stops loop and when the other does.I would suggest to change your code to :
There is a bug in your code. Here is the rectified code.It is not necessary to check y>0 since your first while loop is enough to meet the requirement. Because of that extra while loop you are getting ambiguous values of (x,y).
The lazy solution using the builtin center() and the format mini language:Output:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.center
