Natural Text
My project has a subpackage nested under the root package like so:mypackage/__init__.pytopmodule.pysubpackage/__init__.pynested.pyMy goal is to get logging records formatted like:so that the paths become clickable in my terminal.I've tried the following formats.'%(modulename).pys:%(lineno): %(message)s' isn't clickable (the dots need to be slashes):'mypackage/%(filename)s:%(lineno): %(message)s' doesn't work for subpackages:'%(pathname)s:%(lineno): %(message)s' produces clickable paths, but they're so long that they cut off the rest of my logging :Is there a logging pattern I can pass to logging.basicConfig(format='???') that wil produce the logging records I desire?
You'd have to do additional processing to get the path that you want here.You can do such processing and add additional information to log records, including the 'local' path for your own package, by creating a custom filter.Filters don't actually have to do filtering, but they do get access to all log records, so they are a great way of updating records with missing information. Just make sure you return True when done:This finds the sys.path entry that's the parent dir for the pathname on the logrecord and adds a new relativepath entry on the log record. You can then use %(relativepath)s to include it in your log.Add the filter to any handler that you have configured with your custom formatter:and together with '%(relativepath)s:%(lineno)s: %(message)s' as the format your log messages will come out like:(actual output, except I altered the line numbers on that).


Answer URL
https://docs.python.org/3/library/logging.html#filter-objects
