Natural Text
I have a list of dictionnaries that all have the same keys. I'd like to create a new dictionnary with the average on 'value' for each 'index'. What would be the most pythonic way to do this ?The following code does what I want, but I feel like it is clumsy
Your code is fine, but you can make it a little more compact. As Transhuman's answer shows you can avoid initialising tmp by making it a defaultdict of lists. Another way to do that is to use the dict.setdefault method. And then use a dict comprehension to calculate the averages.output
To do it without any packages to install (long one-liner :-) ):Now:Returns:If python 2:Explanation:get the ordered list of unique elements using setuse itertools.groupby for grouping then iterate by key a group, the get average using statistics or sum and lenthe above two notes are all in a zip(dict(zip(...)))Or to make the code little cleaner:Python 3:Python 2:
I don't think your code is clumsy, but you could check out pandas.You can transform the result to a standard dictionary if you like.
One way you can do is using collections.defaultdict


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
