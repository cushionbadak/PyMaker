Natural Text
what is the efficient way to clean sublist in list . cause I only want to got the biggest set in list. just like.and I want the output as follow. Cause [1,2] is subset of [1,2,3] and [1,2,4,6,7], [3,5] is subset of [3,4,5], and also [2,3,4] appear 2 times, only want calculate 1 time in final result. I want to based on the subset logical to filter data. I only think out 2 loops solution to solve this problem, but if there is other efficient way to solve this problem.what I tried like that: (after I optimising this one more effect, add break and add 1 part not calculate 2 times) So I got the index in [1,2,3] is the dirty data.Thanks.
filter your list on condition:
A conditional list comprehension is a pythonic, flexible and performant approach. It is usually faster and less error prone to assemble the clean list from scratch than to repeatedly remove elements:If you need to mutate the original list object, use slice assignment:
One way to do this is to process the lists in b in order of length, from longest to shortest.outputIf you need to keep the inner lists as actual lists, and you also need to preserve the order, then we can do that with an additional pass over the data. But instead of using a list for result I'll use a set to make the tests more efficient. And that means turning the sublists into frozensets: plain sets won't work because only hashable objects can be put into a set.output
This is not very good, but it works:
You can use tuples and product to detect if item is a sublist, then construct a new list excluding those sublist    list comprehensionExpanded explanation:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
