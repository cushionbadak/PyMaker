Natural Text
When I use list comprehension, I'm getting different results when I print a nested list of objects, compared to what happens if I just use a for loop.The first print gives me back stuff like:[<main.Feature object at 0x0000026AB6371588>, <main.Feature  object at 0x0000026AB63BA8D0>, <main.Feature object at  0x0000026AB4966BE0>]The second print gives me back "f" 30 times.
The problem is how you are Iterating list of lists of featuresa is a list of lists of features (still)you could do it this wayan It's a list of f's, so now you can do what you wanted.If you see the last part of the List Comprehension section at Python's Docsyou'll see the have the example, for a case like that (double list comprehension)think of it as a regular forIt's pretty much the same order, except for the statement. 
It's work for list comprehension but you should to rewrite your list comprehensionIf you want to run than you could implement __repr__ in Feature:Hope it will help you :)


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
