Natural Text
Recently I have been experimenting with classes and objects & got stuck in one doubt. I tried googling but I didn't understand what to search of this. Below is the code snippet.Now after completing the above program I tried the following few commands as below :My Questions in this case are :1) What is the difference between a=Demo and b=Demo() while creating objects?2) Why a.print() didn't work in the first case but a.print(a) is working fine?3) In this case b('item') will work to give output as Got item on call which doesn't work in case of a('item'). Why is it like this? NOTE :: I am using Python 3.6 for this
a=Demo doesn't create any objects, it merely assigns the Demo class object to the variable a.You actually show this yourself:In Python, classes are also objects that have the type type.Compare what happens when you use a by replacing a with Demo.Note, classes are first class objects, you can treat them like any other object, like a list or an int. type is actually just a constructor, like list and int:The type constructor takes three arguments the name of the class as a string (note, you don't have to assign it to the same variable name), a tuple of bases, here's it's empty so it is implicitely object, like if you did class A: pass, and the namespace, so a mapping from attribute names to attributes. Methods are just function objects that belong to the namespace of the classHere's a slightly less trivial example of a class created with the type constructor that also has methods:Read more in the docs


Answer URL
https://docs.python.org/3/library/functions.html#type
