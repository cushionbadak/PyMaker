Natural Text
I'm writing a Python3 script with some computationally heavy sections in C, using the Python C API. When dealing with int64s, I can't figure out how to ensure that an input number is an unsigned int64; that is , if it's smaller than 0. As the official documentation suggests, I'm using PyArg_ParseTuple() with the formatter K - which does not check for overflow. Here is my C code:However, calling the function with a negative argument throws no error, and the input number is casted to unsigned. E.g., from_uint64(-1) will result in input=2^64-2. As expected, since there's no overflow check. What would be the correct way of determining whether the input number is negative, possibly before parsing it?
You should useYou can then check withif the number was unsuitable for an unsigned long long.See also the Python 3 API documentation on Integer Objects
With a little modification from @Ctx 's answer:The solution is to first parse the input as an object (so, not directly from args), then check its type:This code, as expected, works on any input in [0, 2^64-1] and throws error on integers outside the boundaries as well as illegal types like float, string, etc.


Answer URL
https://docs.python.org/3/c-api/arg.html#numbers
https://docs.python.org/3/c-api/long.html
