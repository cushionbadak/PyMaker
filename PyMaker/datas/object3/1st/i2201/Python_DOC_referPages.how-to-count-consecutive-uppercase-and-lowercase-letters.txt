Natural Text
For example I typeword = "aaBBaac"How would I get the output to beThis is what I already have:
I would say the accepted answer is certainly the right way to go.  But since it was requested to do it without importing anything, I figured I'd try one.  Here is what I came up with:It's looking at the current character in the string in comparing it to the next one.  If the current and next character are the same case add to total if they are not add the total to my_list and reset total.  The first if is a special case for the last character in the string.
you could solve that using itertools.groupby:groupby emits all the elements for which the key is the same as a group. in this example the key function changes from True to False (or vice versa) every time the case of the letter in question changes.you could pack this into a list-comprehension: (it is probably more efficient and more elegant to use sum(1 for item in group) instead of len(tuple(group)). and key=str.islower instead of the lambda expression i used above).
here are two ways in which you can structure the code. pay attention on how idx is being incremented.1)2) print(consec_cnt_lst) output


Answer URL
https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.groupby
