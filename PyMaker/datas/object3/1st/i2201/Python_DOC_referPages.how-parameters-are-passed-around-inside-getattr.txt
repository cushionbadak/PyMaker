Natural Text
I understand the basic function and use case of __getattr__ method. But I'm having trouble how parameters are passed around inside __getattr__. I have code And it prints Forgive me if my assumption below is incorrect. I assume that the parameter 4 in x.append(4) is somehow passed from the initial call to __getattr__ and then to the call to getattr method and then to the append method of list class. But I'm not sure what exactly is happening. Could someone please clarify the details. 
Here is how I understand it:So, x.wrapped is a list, that is [1, 2, 3].Now, when you do x.append, you call __getattr__  of Wrapper, with argument append. So when python resolves:it gets the method append of your inner list, which is then returned. So, you could imagine that your code is interpreted as:Hope it helps.
__getattr__ never comes in contact with that 4. __getattr__ simply returns a bound method, which is then called with the argument 4. Obtaining the bound method and calling the bound method are two unrelated steps, and __getattr__ is only responsible for the first one.It might be easier to follow along if you mentally split this line:into two:Clearly, __getattr__ is called in the first line and has nothing to do with the 2nd line. __getattr__ simply returns a reference to the append method of the wrapped list, as you can easily verify for yourself:This is a bound method. A bound method is simply a method that has a reference to the object that will take the place of the self when the method is called (in this case, the list x.wrapped). Bound methods are the reason why we can call methods without explicitly passing an argument for self.For more details about bound methods, see What is the difference between a function, an unbound method and a bound method?.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
