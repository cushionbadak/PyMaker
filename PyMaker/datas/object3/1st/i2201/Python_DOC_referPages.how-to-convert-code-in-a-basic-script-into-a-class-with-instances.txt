Natural Text
I have a basic Python script that I need to convert to a class and create multiple instances of that class.The script has some global data holders that the functions modify. The global variables are something like this:I have a single main function (that performs the most essential tasks) and lots of auxiliary functions for specific tasks that the main function calls when needed. Something like this:I use the above script in jupyter notebook like this:Now I need to create multiple main fuctions like the above and the most of the global variables and the auxiliary functions will stay the same. One way to do this is to create a base class defining the global variables and the auxiliary functions and after that to create instances of that class. Each instance will have a different main function.What is the best way to do that with minimal changes to the existing code?EDIT: Is it possible to arrange the matter as follows:
This may be too simplistic (or I'm still not understanding the details of what you want done, but it seems like this kind of approach would work).Each subclass defines its own main() method. In it the needed parameters can be referenced via parameterN as well as the data and methods of the baseclass (again, just by prefixing their names with "self.".


Answer URL
https://docs.python.org/3/library/functions.html#super
