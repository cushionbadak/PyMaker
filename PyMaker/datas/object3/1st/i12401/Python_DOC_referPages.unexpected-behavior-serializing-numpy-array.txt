Natural Text
CodeSuppose I have:Note that class Test is simply a class that contains a view of a NumPy array base. This view is simply a slice of the last N elements in base (N == 3 on initialization).Test has a method update() which adds 1 to the value at position 0 of the view, and a method add() which modifies the view size (N = N + 1) and sets the value at position 0 to 1.The function serialize_data simply creates a Test() instance and then returns the serialized object using pickle.BehaviorIf I create a local variable and update it twice and add it once, everything works as expected:Now, if I create a local variable out of serialized data, then after executing add the value 2 (set after calling update twice) seems to be lost:QuestionWhy is this happening and how could I avoid this behavior?
The problem is that after pickling/unpickling the view is no longer a view into base but has its' own copy of the data. See here, unfortunately, there is no answer on how to prevent this.The particular problem can be overcome by defining __getstate__ and __setstate__ methods for the class that redefine the view after unpickling.In addition to the view it is necessary to track which part of the base the view looks into. I've chosen to use a slice object, but there are other ways. It is not necessary to pickle the view itself, since it will be reconstructed from the slice upon unpickling.


Answer URL
https://docs.python.org/3/library/pickle.html#object.__getstate__
