Natural Text
So, I have some function that takes a list of arguments with minimum one argument, but potentially an entire list of arguments. I know a couple ways of defining this method, but I'm trying to determine what the various alternatives are at my disposal and what the various advantages of each approach are.I'm trying to figure out what possible prototypes I can use to define this argument. I've considered the following:as well asAre there alternative ways to specify a function that takes an argument list with minimum one argument? 
In Python 3.5 you can (it has been present since 3.0 I believe, when PEP 3102 came out) but with the restrictions that the extra arguments are defined without a default value and supplied in a keyword form when calling the defined function. This is done by adding * as a separator and the required argument(s) after it:Calling foo() without supplying the a keyword argument of the form must_specify = 'specified' will result in a TypeError hinting the requirement for that specific argument:Positional arguments on their own can be supplied, but, the positional grouping parameter of the form *args cannot i.e:is fine, but: is a SyntaxError. This is done because * is essentially the same as a 'throw-away' form of *args.Either way, there is no other syntactic way (that I'm aware of) which can satisfy the restriction you wish. If working with kwargs is too much of a hassle for you or if you're working with Py2 and are adamant to switch, solutions as those suggested in the comments are your best bet. 


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#function-definitions
