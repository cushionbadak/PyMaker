Natural Text
I have a class which uses a sqlite3 database and want to write a test suite for it. In particular, I want to check that sqlite3.Cursor.execute is called with the correct SQL command. However, I have run into trouble with mocking this method since sqlite3.Cursor seems to be written in C and thus the class is immutable. This means I can't just patch the execute method, but if I try to patch the whole class, the assert fails, saying that execute was never called.Below is my best attempt so far, but the assert fails, saying that there was no call. I would appreciate some suggestions as to what I'm doing wrong. Thanks.myclass.pytest_myclass.py
Here goes another approachYou could patch out myclass.sqlite3 and mock the and then mock the return value of connect().cursor().execute.Answer inspired in this answer
sqlite3 is a C extension and you cannot patch C calls. Any way you should not to test sqlite3 behavior but just your how code the call sqlite3 module.What you can do is to patch sqlite3.connect() method and check if your code call the API in the correct way:Note:I patch sqlite3.connect absolute path and not myclass.... do the same thing but it is more clear (sqlite3.connect and myclass.sqlite3.connect are exactly the same reference)I'm using autospec=True to avoid strange errors like explained in AutospeccingConsider to write your own wrapper and mock it in your test: your code will be more testable and less coupled to sqlite3 module


Answer URL
https://docs.python.org/3/library/unittest.mock.html#autospeccing
