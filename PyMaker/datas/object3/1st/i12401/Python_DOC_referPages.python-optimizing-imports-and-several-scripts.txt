Natural Text
So say I have a script that declares the following import:Later in the code I have the following:However, foo also imports some_library (and is dependant on it) how would I go about optimizing this situation? Should I write the bar() code directly in the class that imports the foo code? Or is there any other way of not having to import the some_library code in the foo snippet, since it is already in the "outer class"? Can I send a reference to the library in the constructor?
This is already done by the Python runtime - the command import first checks if the requried module is not already present (they can all be listed in the  sys.modules dictionary) - and only if it is not there, the actual importing is triggered.After that the name you asked is made available on the namespace where the import command is placed.From the docs: "The import statement combines two operations; it searches for the named module, then it binds the results of that search to a name in the local scope."


Answer URL
https://docs.python.org/3/reference/import.html
