Natural Text
I have a list of numbers:I want to sort it and iterate sorted list using for loop:But the output doesn't look as expected:Why the for loop doesn't accept sorted list and works with the state before even though it returns the sorted list? Is there any hidden indexing, which sort() can't change? I'm new in Python and this is really weird behavior. What am I doing wrong?What I want to achieve:Update: I need that pop there. My full code of this function:
Using pop deletes an element in the list entirely. Therefore the reference is removed and we can only iterate over the amount of remaining items. The code is in Python 3, but I guess it shouldn't be too hard to change the print statements.
The function pop() will remove and return the last item you have in the list, in index len(list)-1. Calling pop(0) removes the first item, so if you repeatedly call it then your list will be printed in-order, meaning 1, 2, 3, 4 ,5 since you sorted it first.Read the documentation please:Remove the item at the given position in the list, and return it.If you don't want the items of the list to be removed, but just print them, you can use print (list[index]) instead of pop(). And in your loop, since it's sorted and started from 1, you can actually use print(list[n-1]) even.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
