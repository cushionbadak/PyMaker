Natural Text
I've looked everywhere, but I can't find an example of PyArg_ParseTupleAndKeywords() being used with a tuple — containing optional arguments — and keywords. The closest I've found is this question, but the answer isn't particularly helpful. Most examples seem to have the keywords as the optional arguments, but it seems like the tuple should be able to contain optional arguments as well.Suppose I'm trying to parse the following parameters:numpy array of doubles (mandatory)numpy array of doubles (optional, no keyword)optional keyword arguments:k1 => numpy array of doublesk2 => integerk3 => doublek4 => Python class instanceIt seems like I should be doing something likeOther places I've looked, but without finding much help:https://docs.python.org/2/extending/extending.htmlhttps://docs.python.org/2/c-api/arg.htmlhttp://docs.scipy.org/doc/numpy-1.10.1/user/c-info.how-to-extend.htmlWhat is the appropriate way to use PyArg_ParseTupleAndKeywords()?
I think something similar to the below simplified solution should work for your scenario but it can get nasty if you have many optional args or more interesting arg types.I'm not sure if there is a better solution but I haven't been able to find one. Hopefully one day someone will post a cleaner solution.You'll have to be clever to produce useful arg parsing error messagesin more complex parsing scenarios.
As of Python 3.3, you can use $ in the format string to indicate that the rest of the arguments are keyword-only, and as of Python 3.6, you can indicate a positional-only parameter by using an empty name in the keywords argument.So, in a sufficiently high version of Python, you can use code like:


Answer URL
https://docs.python.org/3/c-api/arg.html#other-objects
https://docs.python.org/3/c-api/arg.html#c.PyArg_ParseTupleAndKeywords
