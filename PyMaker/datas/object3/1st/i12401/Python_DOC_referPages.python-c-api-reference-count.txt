Natural Text
My python code pass some dictionary and lists to C like this:is that OK to get items like this?I need to call my C function in python for 10K times, and after running my code for about 100 times, it shows segment fault 11. How can I fixed it?  
I would not suggest it, you should do error checking for both PyDict_GetItem and PyList_GetItem:Both *_GetItem functions return NULL when something goes wrong. So, if you simply chain these calls without proper error checking you'll run into problems if one of these returns NULL.Additionally, both these functions return a borrowed reference to the Object:The advantage of borrowing over owning a reference is that you don’t need to take care of disposing of the reference on all possible paths through the code — in other words, with a borrowed reference you don’t run the risk of leaking when a premature exit is taken. The disadvantage of borrowing over owning is that there are some subtle situations where in seemingly correct code a borrowed reference can be used after the owner from which it was borrowed has in fact disposed of it.(emphasis mine)So you generally shouldn't worry about Py_DECREFing them. But, be careful; if you need to use a reference, store it or pass it elsewhere you should increment it's reference and get ownership of it. Finally, I'm not 100% sure what the effect is when you pass a borrowed reference to PyDict; couldn't find something in the documentation. Looking at the source for PyDict_GetItem though, I can't see it DECREFing the key parameter so I think there shouldn't be issues there.


Answer URL
https://docs.python.org/3/extending/extending.html#reference-counting-in-python
