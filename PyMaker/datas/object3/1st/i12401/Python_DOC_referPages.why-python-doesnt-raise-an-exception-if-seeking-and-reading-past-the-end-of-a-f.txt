Natural Text
I was writing unit tests to see what would happen if my code was seeking and reading past the end of a binary file opened in read only and binary mode (rb mode).I was pretty sure an exception would be raised in that case, but it is not (tested on Python 3.x):Questions:Why is this behavior allowed (inherited from C?)? I understand the behavior for files in write mode, but not in read-only mode.Is reading past the end of a file considered an undefined behavior? Does it return always an empty bytes? Is it implementation defined?Edit: changed mode from r+b to rb where the behavior is still the same.
Your question asks about read mode, but your code demonstrates read-write mode. It is not an error to seek past the end of a writable file, since performing a subsequent write will result in a sparse file on filesystems that support it (and zero-fill until the new write on filesystems that don't).


Answer URL
https://docs.python.org/3/library/io.html#io.RawIOBase
