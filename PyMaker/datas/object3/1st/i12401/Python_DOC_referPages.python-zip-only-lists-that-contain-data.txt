Natural Text
I have a script that converts data from one type to another.The source file can have one, two or all of: position, rotation and scale data.My script zips the 3 together after conversions have taken place for the output file.In this case, my source file only contains position data.So the lists returned at the end are:If I try this, it will return [] because the shortest list is [].If I try:  translationData = list(zip_longest(pData, rData, sData)) I get:  Is there any way to only zip lists that contain data, or remove the None's from within the tuples within the list?Thanks in advance!
You can use the filter builtin embedded in a list-comp.Note: In Python 3 filter returns an iterator, so you will need to call tuple() on it. (unlike in py2)Result:
You can modify the pure Python version of zip_longest given the documentation and create a version to do what you want:Output:
If you don't want to import or use list comprehensions etc for some reason:Make a grouping of the lists you want to zip (allLists)Then loop through the grouping to check if anything is in eachAppend together a grouping of those with data in them (zippable)Finally, *pass zip that filtered grouping (*zippable)Just another possible solution
If the lists are either totally empty or totally full this would work:
I will try to add more variation-bool,None,lambda.Output-
if you don't want the None you can use the key-word argument fillvalue of zip_longest to put anything you want instead so you can have uniform result as pointed out by @Ale beware if you use a mutable object as a fill value, because if you change one, all of them change because they all are a reference to the same object 


Answer URL
https://docs.python.org/3/library/functions.html#filter
https://docs.python.org/3/library/itertools.html?#itertools.zip_longest
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
