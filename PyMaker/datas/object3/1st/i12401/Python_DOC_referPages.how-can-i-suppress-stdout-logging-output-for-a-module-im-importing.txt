Natural Text
I'm importing a module foo which uses Python's logging module. However, foo produces a huge amount of logging output, and I need to use stdout to communicate important information to the user, which is largely being drowned out by the ridiculous output of the module I'm importing.How can I disable the module's ability to log to stdout without modifying foo's code? I still want it to log to the files it logs to, but I don't want it logging to stdout.I have tried the following:logging.getLogger("foo").propagate = Falseand
I'm referencing this article.In general, if you want to capture anything written to stdout you can use the contextlib in Python 3:On Python 3.4 and older, redirect_stdout can be implemented like this:If the library has any C bindings that print using puts then it gets more complicated. See the article.The easiest case is when you're running another program using subprocess,then all stdout output can be easily captured.
Try the following:


Answer URL
https://docs.python.org/3/library/logging.config.html#module-logging.config
