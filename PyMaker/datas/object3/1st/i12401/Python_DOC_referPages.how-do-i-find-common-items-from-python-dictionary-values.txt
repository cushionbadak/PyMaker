Natural Text
Say, I have a dictionary D: Now I want to have all common items from D's values, which would be 2.I tried to use set.intersection but it did not work out.
Simply, use intersection method of set:D.values() will return a list of your dictionary values which are already sets, then *D.values() will unpack this list and pass it to intersection method of set class
For the sake of variety, you could also use reduce():reduce() is a built-in function in Python 2.x, but needs to be imported from the functools module in Python 3.x.
If you are only looking for common values in each dictionary and not looking for a value that is in each dict then the following code will work! Not saying that this is the fastest or the best approach, but it works!Returns a list of all duplicate values across the embedded dicts!
If you go with reduce the most efficient way is to use operator.and_But set.intersection will be hard to beat:


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=set#set.intersection
