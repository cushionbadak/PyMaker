Natural Text
How can I check if a network is wholly contained in another network in Python, e.g. if 10.11.12.0/24 is in 10.11.0.0/16? I've tried using ipaddress but it doesn't work:
Starting from Python 3.7.0 you can use the subnet_of() and supernet_of() methods of ipaddress.IPv6Network and ipaddress.IPv4Network for network containment tests:If you have a Python version prior to 3.7.0, you can just copy the method's code from the later version of the module.
then
Try  netaddr as below-Check if a network is in anotherCheck if an IP is in a network
For some reason, the ipaddress module does not provide a simple function to check whether a network is contained in another network. I managed to solve this problem as follows:ip1 = '10.0.0.0/24'ip2 = '10.0.0.22'ipaddress.ip_network(ip2) in ipaddress.ip_network(ip1).subnets(new_prefix=ipaddress.ip_network(ip2).prefixlen)
I also needed to implement such a check. Reading the documentation of ipaddress module, I found the function overlaps(). It works. Code example:


Answer URL
https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.subnet_of
https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.supernet_of
https://docs.python.org/3/library/ipaddress.html
