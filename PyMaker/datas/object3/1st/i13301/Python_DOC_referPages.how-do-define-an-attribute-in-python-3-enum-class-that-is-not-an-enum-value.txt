Natural Text
This question already has an answer here:Is it possible to define a class constant inside an Enum?                    5 answers                How to define an attribute in a Python 3 enum class that is NOT an enum value?But this seems to fail for me. It seems that Color tries to include foo and bar as part of its enum values.EDIT:Lest you think I'm not using Enum in a way that's intended... For example, take the official Python documentation's example enum class Planet (docs.python.org/3/library/enum.html#planet). Note that they define the gravitational constant G within the surface_gravity() method. But this is weird code. A normal programmer would say, set that constant G once, outside the function. But if I try to move G out (but not to global scope, just class scope), then I run into the issue I'm asking about here.
When building an enum.Enum class, all regular attributes become members of the enumeration. A different type of value does not make a difference.By regular attributes I mean all objects that are not descriptors (like functions are) and excluded names (using single underscore names, see the Allowed members and attributes of enumerations section).If you need additional attributes on the final enum.Enum object, add attributes afterwards:Demo:
The point of the Enum type is to define enum values, so non-enum values are theoretically out of scope for this type. For constants, you should consider moving them out of the type anyway: They are likely not directly related to the enum values (but rather some logic that builds on those), and also should be a mutable property of the type. Usually, you would just create a constant at module level.If you really need something on the type, then you could add it as a class method:And using the classproperty descriptor from this answer, you can also turn this into a property at class level which you can access as if it was a normal attribute:


Answer URL
https://docs.python.org/3/library/enum.html#allowed-members-and-attributes-of-enumerations
