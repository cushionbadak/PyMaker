Natural Text
It's my second day in Python, I found it's a really cool language and I want to try different things in it.Is it possible to call an object and create a daemon of that object's method which would change the objects attributes?The result:Why doesn't f.loop() change the self.number of f? They are both part of the same class Foo().What can I change to receive this output:/edit 1:I tried this, with the same result (why?):Same output as before.
You're using multiprocessing. The short (and somewhat simplified) answer is that processes to do not share memory by default. Try using threading instead.If you're hell bent on experimenting with shared memory and processes then look at sharing state in the documentation on multiprocessing.Also daemon doesn't do what you think it does. If a process creates children then it will attempt to kill all it's daemonic children when it exits. All Processes will work in the background, you just need to start them.


Answer URL
https://docs.python.org/3/library/threading.html
https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes
