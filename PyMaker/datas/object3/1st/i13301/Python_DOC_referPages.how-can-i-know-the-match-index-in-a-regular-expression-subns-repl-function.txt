Natural Text
Let's say I have the following string:And and I want to replace all occurances of r'<\w+Index>' with a number that corresponds to the number of the match. So given the above string, the return value would be:I know there are lots of way to accomplish this in code (e.g. by writing a class with a counter that keeps track of the match index) but I'm wondering if this is possible through standard library functions alone.I suppose, more specifically, I'm wondering if you can get this information from the MatchObject object passed to the repl function used in subn.
Read the docs for re.sub. re.sub (and re.subn) can take a function as the replacement parameter, not just a str. If you pass a function (really, any callable) as the repl, it is called for each match with the match object as the sole argument.While the match object won't tell you how many matches have occurred, you can use the fact that it accepts any callable to make your own class that will track it for you. For example:When you call re.sub/re.subn, you construct and pass Replacer() as the repl; that initializes a new object with a fresh matchcnt, and since it defines __call__, it acts like a function with state; each time it matches and replaces, the object state is incremented so it will use the next number on the subsequent replace. When the sub finishes, the object is disposed of, and creating another one for a subsequent sub restarts the count.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
