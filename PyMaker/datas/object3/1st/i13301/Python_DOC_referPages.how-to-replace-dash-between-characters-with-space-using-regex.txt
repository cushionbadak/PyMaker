Natural Text
I want to replace dashes which appear between letters with a space using regex. For example to replace ab-cd with ab cd The following matches the character-character sequence, however also replaces the characters  [i.e. ab-cd results in a d, rather than ab cd as i desire]How i adapt the above to only replace the - part?
You need to capture the characters before and after the - to a group and use them for replacement, i.e.:DEMOhttp://ideone.com/LAYQWTREGEX EXPLANATION
Use references to capturing groups:This assumes, of course, that you can't just do original_term.replace('-', ' ') for whatever reason. Perhaps your text uses hyphens where it should use en dashes or something.
re.sub() always replaces the whole matched sequence with the replacement.A solution to only replace the dash are lookahead and lookbehind assertions. They don't count to the matched sequence.The syntax is explained in the Python documentation for the re module.
You need to use look-arounds:Or capturing groups:See IDEONE demoNote that [A-z] also matches some non-letters (namely [, \, ], ^, _, and `), thus, I suggest replacing it with [A-Z] and use a case-insensitive modifier (?i).Note that you do not have to escape a hyphen outside a character class.


Answer URL
https://docs.python.org/3/library/re.html#regular-expression-syntax
