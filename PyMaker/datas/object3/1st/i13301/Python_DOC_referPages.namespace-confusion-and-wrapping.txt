Natural Text
propably this question was asked before but I found nothing about it so far.Suppose I have some code in a file called test.py (that was a result from my question yesterday Wrapping np.arrays __pow__ method)So far it worked great in my file every array was produced using the wrapped np.array. But then to compare the speed gain I was confused:How come the linspace now works with the wrapped ndarray instead of the old one? How does it come that np.linspace now calls t.np.array? I thought that was another namespace and what does linspace have to do with np.array?As a note I read through https://docs.python.org/3/reference/import.html but that's really tough reading and so maybe I have missed it in there. I would be happy if anyone could give me a push in the right direction.
In test.py, np.array = change_ndarray(np.array) reassigns the array variable in the numpy module that you aliased as np. All code using numpy.array now use the new thing you put in it. Actions such as from numpy import * create new variables in the local module, but import numpy as np only gives you a reference to the module itself.Consider how python variables work. Namespaces are python dicts that store key (variable name) / value (the object referenced by the variable) pairs. Namespaces are associated with things like methods and functions (local variables), classes (class variables) and modules (module global variables). When you use a variable, python pokes about in several namespace dicts looking for the name and returns its object. np.array means lookup a variable called np, get its namespace dict and then look array up there. In your case, np is the numpy module and array is a vvariable there. 


Answer URL
https://docs.python.org/3/reference/import.html
