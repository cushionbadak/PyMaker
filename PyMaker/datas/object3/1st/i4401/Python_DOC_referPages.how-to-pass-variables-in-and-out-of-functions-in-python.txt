Natural Text
This question already has an answer here:How to return multiple values from a function? [closed]                    14 answers                When I write functions in Python, I typically need to pass quite a few variables to the function. Also, output of such functions contains more than a few variables. In order to manage this variables I/O, I resort to the dictionary datatype, where I pack all input variables into a dictionary to inject into a function and then compile another dictionary at the end of the function for returning to the main program. This of course needs another unpacking of the output dictionary. As the list of variables grows, I suspect that this will be an inefficient approach to deal with the variables I/O. Can someone suggest a better, more efficient and less error-prone approach to this practice?
You could take advantage of kwargs to unpack named variables
If you find yourself writing a lot of functions that act on the same data, one better way would be using classes to contain your data.There are a number of methods of creating these in an easier way. Some of them include:attrs:namedtuplesDataclassesThese are not in python yet, but will be added in 3.7. I am adding them in here here because they will likely be the tool of choice in the future.


Answer URL
https://docs.python.org/3/library/collections.html#collections.namedtuple
