Natural Text
This question already has an answer here:Comma separated inputs instead of space separated inputs for Argsparse                    2 answers                I want to use argparse's {choices} parameter, but allow the user to input any number of items from choices. For example if choices is [1,2,3], I would like the following to be valid:etc.However it seems like choices doesn't accept a comma-separated input when using nargs="+". Is there any way around this? I still want to enforce that the passed in options are within the set of choices that I defined, to error-check for weird inputs.
This one-line code gives you all possible subsets of your choices.
I agree - You would think that the API would allow someone to do that by now right?Well anyways, the workaround I've always used was the following:AKA: Take in a string and process it yourself.
Here is my approach to achieve this  :
some runsThe shell, together with the interpreter, splits the input on spaces, and provides a list of strings in sys.argv.  That's what parser handles.With +, the --arg action accepts a list of strings (to the end or next flag).  Each string is passed through the type function, and the result compared to the choices (if provided). In this case, type is int, so the choices can be integers as well.  Without the type, choices would have to be ['1','2','3'].If I change the argument to:it will accept some strings with commas:I didn't include the '1,2,3' choice, so it rejected that.  Note also that I dropped the int type, since int('1,2') will fail.So if you need to accept '1,2,3', do your own split and choices test after parsing (or possibly as a custom Action class).


Answer URL
https://docs.python.org/3/library/argparse.html#nargs
