Natural Text
For part of a project, I have to show all possible combinations of three-colorings for a given graph, defined in a dictionary. This does not check for valid colorings, as it is simply a helper method.ExampleHowever, we are prohibited from importing any libraries. Currently, I am working with this solution and trying to transfer it without using product()My current solution is based on the fact, according to the documentation, product(A, B) returns the same as ((x,y) for x in A for y in B).Currently, I haveThis gives me the correct answer when using graph {"A":["B"], "B":["A"]}, but it doesn't seem to work when with any other number of vertices.Example 2Any guidance or assistance is greatly appreciated.
If you check out the itertools documentation, they provide implementations of most of their builtin functions.For product, the only difference in the one they provide is that the itertools implementation does not build up intermediate results in memory.  You can take the function provided in the documentation, and use it as your product function in your example:Output:
You can use simple recursion with a generator function, then use zip to pair the full colorings to the graph:Output:


Answer URL
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/library/itertools.html#itertools.product
