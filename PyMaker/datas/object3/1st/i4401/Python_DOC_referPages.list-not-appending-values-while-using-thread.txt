Natural Text
I am trying to write a class that search for all files on my computer with a specific extension. To make the process faster I use threading. It searchs all hard disks at the same time.I know it finds all the paths when I print them print(file_path)But the values won't be appended in the self.ALLFILES and I do not know why.Here is the code:
As mentioned in @Trap's answer, you need to return the results from the SearchHarddisk() method instead of trying to append them to the self.allfiles in fullThreadSearch(). This is because each invocation of SearchHarddisk() runs in its own address space, so there's effectively a different self.allfiles list object in each one.Here's something with those changes made that seems to work on my Windows machine. Note that I based it on the sample code shown in the ProcessPoolExecutor Example section of the documentation which uses the ProcessPoolExecutor.map() method instead of calling ProcessPoolExecutor.submit() repeatedly.
I've never used the ProcessPoolExecutor class, but I think your error is due to the fact that self.allfiles is not shared across the processes created.Your SearchHarddisk method should return a value, and after the process are done, you have to gather every results and append them to self.allfiles.This is what I would have done, but since I'm not running Windows, I can't test so I'm not sure it will work.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor-example
https://docs.python.org/3/library/timeit.html#module-timeit
