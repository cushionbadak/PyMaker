Natural Text
I am trying to find the intersection and union of two lists for an assignment, however, I cannot use sets. From set theory, an intersection between two sets is the elements that are in both sets. A union is all elements in both sets, without repetition. So far I have:My union function is returning duplicates. Is there a way to simply find the union?Also, what is the best approach to find the intersection?
You can use collections.Counter instead to calculate union and intersectionCounter object hold the data in format:The key is the elements in the list and the value is the occurrence of the element in the list.
Try this:Output:
So, assume you can use sort. Sort two lists first, then do with two pointers, move one pointer with smaller value forward each time.For union func, add all values each time and move forward both pointers when their values are equal.For intersection func, only add values when the values are equal.Time O(nlogn+n)->O(nlogn)
Union and intersection without using using sets:Output:Explanation:For union:Simply loops through setA and adds elements that are also found in setBFor intersection:Creates a dictionary where the keys and values are the result of setA + setB.  Since keys in a dictionary are unique, duplicates don't show up in the final dictionary, and list(dct.values()) is used to pull just the values needed from the dictionary.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
