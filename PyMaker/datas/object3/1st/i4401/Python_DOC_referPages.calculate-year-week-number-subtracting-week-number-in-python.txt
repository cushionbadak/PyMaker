Natural Text
I'm trying to find a custom date format like YYYYW eg. 201620 after subtracting a number of week periods.So far I've been able to convert a date string like YYYYW into date using the following code;But I'm unable to find a way where I can subtract for eg. 43 weeks from 201642 and get a result like 201552.EDIT 1: Using suggestions from the comments, here is the solution. from datetime import datetimefrom datetime import timedelta
Other than doing the math yourself, here's an attempt using datetime. Doing everything using ISO week numbers (using methods from this answer):A modified version of @Hildy's answer below:
You haven't actually parsed the date properly in your sample code, but since you say your actual code does, let's ignore that.So, you have a datetime object. You want to subtract 43 weeks from that. All you have to do isâ€¦ exactly that, using a timedelta:The result is the same time, same day of the week, 43 weeks earlier.But it's worth noting that, for local times, that "same time" could be off by an hour because of crossing a daylight saving border. And being off by an hour can be especially confusing when you're using midnight. So it's usually better to use date objects instead of datetime objects for this kind of work:Either way, if you want to turn that back into a YYYYWW string, both datetime and date have strftime methods for that:
This can be done with relative delta, from the dateutil library; it should be noted that said library is part of the standard lib in Python 2x, but not 3x...you'll have to install it.The next thing you need to know is that, per the Python docs, "When used with the strptime() method, %U and %W are only used in calculations when the day of the week and the year are specified."Try this out:I've used this in ETL operations to calculate things like fiscal periods and it works great. As noted by others here, timedelta() can be used in a similar fashion. 


Answer URL
https://docs.python.org/3/library/datetime.html#timedelta-objects
https://docs.python.org/3/library/datetime.html#date-objects
https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior
