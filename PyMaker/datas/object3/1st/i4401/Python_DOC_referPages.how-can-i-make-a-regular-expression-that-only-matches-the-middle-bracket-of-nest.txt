Natural Text
I am trying to make a regular expression that will only match the middle bracket if there are nested brackets. For instance, if you type in x(x+3(x+3)) I would want it to only match the (x+3). I have several regular expressions in my program already which involve brackets, and I have discovered they always match the first instance of brackets that they find. In the example above, my regular expressions match (x+3(x+3), and I guess that should have been obvious but I didn't think about it when I started. Essentially, I want it to match a set of brackets that does not contain a '(' or a ')' character inside the bracket. Here is my regular expression for a single bracket: re.compile(r'(\S+?)').I would use some sort of negative lookaround, but I think that would prevent the necessary open and close bracket characters at the beginning and end respectively... I am using Python. Also when I say 'brackets' I mean parentheses, but in British English we say brackets :)Thanks in advance!
Easiest way to capture something that does not entail some other things is with[^ ....] - the ^ disallowes anything inside the [] - as a special feature you do not need to escape brackets inside it - so by declaring your regex asyou essentially capture a literal ( followed bei 1+ anythings but neither ( nor ) followed by a literal ).See  https://regexr.com/3nsfgFrom  Regex Syntax:Characters that are not within a range can be matched by complementing the set. If the first character of the set is ^, all  the characters that are not in the set will be matched. For example,  [^5] will match any character except '5', and [^^] will match any  character except '^'. ^ has no special meaning if itâ€™s not the first  character in the set.To match a literal ']' inside a set, precede it with a backslash, or place it at the beginning of the set. For example, both [()[\]{}]  and []()[{}] will both match a parenthesis.Code:Output:


Answer URL
https://docs.python.org/3/library/re.html#regular-expression-syntax
