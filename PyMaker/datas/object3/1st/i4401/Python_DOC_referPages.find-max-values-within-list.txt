Natural Text
I have text file with parse logged file, file contains:file: output.logEnd result should be: 1. sorted the list with max number rt01,te1/1,111,11rt02,te1/1,11,10rt01,te1/2,122,20rt02,te1/2,113,5rt02,te1/3,10,1rt03,te1/1,1,6rt03,te1/2,11,8Result: rt01,te1/2,122,20rt01,te1/1,111,11rt02,te1/1,11,10rt03,te1/2,11,8rt03,te1/1,1,6rt02,te1/2,113,5rt02,te1/3,10,1What is the best way, to get the max value within the list:I try:
You can use the last number in each line as the key to sorted():Output:
My own solution, similar to @chrisz with sorted() but using the csv libraryOutputs:
This is a variant of a natural sort. If you are ONLY grouping by the final number in a CSV line, you can split on the ',', convert that to an int and then negate to get max->min sorting:Prints:Since Python uses a stable sort, the groups in the first columns will remain in file order unless sorted by the final column.If you want to sort BOTH by the final column and the numeral in the first column, you can use a regex and do something like:Prints:Or, if you want to sort primarily by the final column but group by the first column you can reverse the order of the tuple returned by f:


Answer URL
https://docs.python.org/3/library/functions.html#sorted
