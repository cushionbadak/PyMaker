Natural Text
Using this stack:Could you write a client function called parenthesesMatch? Given a string containing only the characters for parentheses, braces or curly braces, i.e., the characters in  ’([{}])’, returns True if the parentheses, brackets and braces match and False otherwise.This is my algorithm:1.  Create an empty stack.2.  Iterate over the characters in the given string:a.  If the character is one of opening marks(,[,{ push it on the stack.b.  If the character is one of the closing marks ),],} and the stack is empty, then there were not enough preceding opening marks, so return False.c.  If the character is a closing mark and the stack is not empty, pop an (opening) mark from the stack.  If they are not of the same type, ie., ( and ) or [ and ] or { and }, return False, if they are of the same type, move on to the next char.3.  Once the iteration is finished, you know that the parentheses match if and only if the stack is empty.
See the Python tutorial on Using Lists as Stacks and the documentation on Classes.Just two slight modifications, and it seems to work:producesYou could prevent this last error by first checking if the pop() can be done.See Emulating container types regarding all the "special" class methods. So to access an element by index just like with a list, e.g s[1], you might addand get e.g. something completely different.
To initialize with a non-empty stack (the main question your original post asked), provide an optional argument to the __init__ function:To override len:
You were almost there, here is a slight suggestion your init function.also if you want that instead of using ".len()" to find number of values in your stack, you could just write "len(a)"(override) where a is your class object. you can change your len code to.in your class


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#using-lists-as-stacks
https://docs.python.org/3/tutorial/classes.html
https://docs.python.org/3/reference/datamodel.html#emulating-container-types
