Natural Text
I have the following text file (as we can't be attached files here I have uploaded to Pastebin)I am reading this text file using the function provided below, scrapping data (using regex), the function works perfectly.The only problem is if the movie comes twice in the file it doesn't append values. It replaces it.For example:A Quiet Place (2018) is running in "Studio Movie Grill - Downey" and "AMC Norwalk 20"; while processing the text file it will insert movie details of the first movie theater but when it read same movies details of second movie theater it will remove the old entry and update with new one.Here is the function:Any help will be appreciated!   
A dict can only have a single value for each key. Every time you try to assign a new value to an existing key, it just replaces the old value. Even if you do it within the constructor. For example:The (1, 'd') replaced the (1, 'a'). And exactly the same thing is happening in your code if there are two movies with the same name when you do this:Something that maps a single key to one or more values, instead of just one value, is often called a "multidict". In Python, this is usually implemented as a plain old dict whose values are either sets or lists of the actual values.1In your case, the actual values are lists, which are mutable, and therefore can't be put into a set. If you don't actually need them to be mutable, you might be better off using tuples instead, but let's assume you do need specifically lists.You can write it like this:Or, alternatively:The difference between the two is in what happens if you later try to look up a name that doesn't existâ€”a normal dict built with setdefault will raise a KeyError, while a defaultdict will give you an empty set. So, whichever one of those two outcomes you want, pick the respective implementation. (Occasionally, you really don't care either way. In that case, defaultdict is generally a bit faster, and equally easy to understand.)And now, final_dict['A Quiet Place (2018)'] will be a set of all of the theaters where it's playing, which you can easily loop over and print out, or whatever else you wanted to do.1. A real multidict type should probably have some way to iterate key-value pairs with repeated keys, instead of key-collection-of-value pairs, similar to the way Counter can be used for a multiset. There are various libraries on PyPI that provide this, but all with slightly different APIs, and some also make d[key] return the first value and require a special method to get all values for key. Many of them are embedded in various client-side or server-side web frameworks, because web forms are a common use case where it's uncommon but not illegal to have multiple values for the same key.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
https://docs.python.org/3/library/collections.html#collections.defaultdict
