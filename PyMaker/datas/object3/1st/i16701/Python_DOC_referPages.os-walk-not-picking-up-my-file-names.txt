Natural Text
I'm trying to use a python script to edit a large directory of .html files in a loop. I'm having trouble looping through the filenames using os.walk(). This chunk of code just turns the html files into strings that I can work with, but the script does not even enter the loop, as if the files don't exist. Basically it prints point1 but never reaches point2. The script ends without an error message. The directory is set up inside the folder called "amazon", and there is one level of 20 subfolders inside of it with 20 html files in each of those.Oddly the code works perfectly on a neighboring directory that only contains .txt files, but it seems like it's not grabbing my .html files for some reason. Is there something I don't understand about the structure of the for root, dirs, filenames in os.walk() loop? This is my first time using os.walk, and I've looked at a number of other pages on this site to try to make it work.Any help is much appreciated.
The backslash is used as an escape.  Either double them, or use "raw strings" by putting a prefix "r" on it. Example:Explanation: In Python, what does preceding a string literal with “r” mean?
You can avoid having to explicitly handle slashes of any sort by using os.path.join:
Your problem is that you're using backslashes in your path:Because Python strings use the backslash to escape special characters, in your rootdir the \f represents an ASCII Form Feed character, and the \a represents an ASCII Bell character.You can either use a raw string (note the r before the apostrophe) to avoid this:... or just use regular slashes, which work fine on Windows anyway:As Huu Nguyen points out, it's considered good practice to construct paths using os.path.join() when possible ... that way you avoid the problem altogether:
I had an issue that sounds similar to this with os.walk. The escape character (\) added to filepaths on Mac due to spaces in the path was causing the problem.For example, the path:/Volumes/MacHD/My Folder/MyFiles/...when accessed via Terminal is shown as:/Volumes/MacHD/My\ Folder/MyFiles/...The solution was to read the path to a string and then create a new string that removed the escape characters, e.g:


Answer URL
https://docs.python.org/3/library/os.html?highlight=slash#os.altsep
https://docs.python.org/3/library/os.path.html#os.path.join
