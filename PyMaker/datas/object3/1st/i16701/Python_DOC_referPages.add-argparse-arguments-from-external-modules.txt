Natural Text
I'm trying to write a Python program that could be extended by third parties.  The program will be run from the command line with whatever arguments are supplied.In order to allow third parties to create their own modules, I've created the following (simplified) base class:Any arguments that they supply via get_args() will be added to a subparser for that particular module.  I want them to be able to specify any type of argument.I'm not sure of the best way to declare and then get the arguments from the subclassed modules into my main program.  I successfully find all subclasses of MyBaseClass and loop through them to create the subparsers, but I cannot find a clean way to add the individual arguments to the subparser.Here is the current code from the main program:How can I best specify the arguments in the external modules via get_args() or similar and then add them to the subparser?  One of my failed attempts looked like the following, which doesn't work because it tries to pass every possible option to add_argument() whether it has a value or is None:
Without trying to fully understand your module structure, I think you want to be able to provide the arguments to a add_argument call as objects that you can import.You could, for example, provide a list of positional arguments, and dictionary of keyword arguments:producingIn argparse.py, the add_argument method (of a super class of ArgumentParser), has this general signatureThe code of this method manipulates these arguments, adds the args to the kwargs, adds default values, and eventually passes kwargs to the appropriate Action class, returning the new action.  (It also 'registers' the action with the parser or subparser).  It's the __init__ of the Action subclasses that lists the arguments and their default values.
I would just return an ArgumentParser instance from your get_args method. Then you can create a new ArgumentParser to join all other argument parsers using the parents argument: https://docs.python.org/3/library/argparse.html#parents.


Answer URL
https://docs.python.org/3/library/argparse.html#parents
