Natural Text
I have a large numpy array, with each row containing a dict of words, in a similar format to below:Could someone please point me in the right direction for how would I go about computing the sum of all the unique values of the dicts in each row of the numpy array? From the example above, I would hope to obtain something like this:At the moment, the only way I can think to do it is iterating through each row of the data, and then each key of the dict, if a unique key is found then append it to the new dict and set the value, if a key that's already contained in the dict is found then add the value of that key to the key in the 'result'. Although this seems like an inefficient way to do it.
You could use a Counter() and update it with each dictionary contained in data, in a loop:output:alternate one liner:(as proposed by @AntonVBR in the comments)
A pure Python solution using for-loops:output:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
