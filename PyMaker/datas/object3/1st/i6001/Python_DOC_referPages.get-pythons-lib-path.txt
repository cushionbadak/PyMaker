Natural Text
I can see that INCLUDE path is sysconfig.get_path('include').But I don't see any similar value for LIB.NumPy outright hardcodes it as os.path.join(sys.prefix, "libs") in Windows and get_config_var('LIBDIR') (not documented and missing in Windows) otherwise.Is there a more supported way?
Since it's not a part of any official spec/doc, and, as shown by another answer,  there are cases when none of appropriate variables from sysconfig/distutils.sysconfig .get_config_var() are set,the only way to reliably get it in all cases, exactly as a build would (e.g. even for a Python in the sourcetree) is to delegate to the reference implementation.In distutils, the logic that sets the library path for a compiler is located in distutils.commands.build_ext.finalize_options(). So, this code would get it with no side effects on the build:Note that:Not all locations in the resulting list necessarily exist.If your setup.py is setuptools-based, use setuptools.Distribution and setuptools.command.build_ext instead, correspondingly.If you pass any values to setup() that affect the result, you must pass them to Distribution here, too.Since there are no guarantees that the set of the additional values you need to pass will stay the same, or that the next maintainer won't switch to another builder1; and the value is only needed when building an extension,it seems like you aren't really supposed to get this value independently at all:If you're using another build facility, you should rather subclass build_ext and get the value from the base method during the build.1Okay, I concede this particular one is a rather remote possibility
Below is the (rather long) subroutine in skbuild.cmaker that locates libpythonxx.so/pythonxx.lib for the running Python. In CMake, 350-line Modules/FindPythonLibs.cmake is dedicated to this task.The part of the former that gets just the directory is much simpler though:


Answer URL
https://docs.python.org/3/library/sysconfig.html#installation-paths
