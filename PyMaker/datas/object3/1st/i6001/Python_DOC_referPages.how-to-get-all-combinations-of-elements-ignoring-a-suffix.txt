Natural Text
Let's say I have four elements like this Then I can easily get all combinations consisting of three elements like thiswhich givesHowever, now I have also several suffixes, e.g.which I want to take into consideration. My desired outcome looks like thisSo I want to find all combinations of three for both suffixes but without a duplicate in everything in front of this suffix (e.g. I don't want ('A__x', 'A__y', 'C__x') as there would be two A).I currently implement this as follows:which gives me the desired output.Clearly, this should not only work for four elements and 2 suffixes but for arbitrary combinations. Is there a more straightforward way of achieving this which avoids the creation of all_combinations?
I think that you only need it.product:So if you want the 32 tuples listed above:It returns:In order to get the desired format, you need to use zip and join:It returns:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/library/stdtypes.html#str.join
