Natural Text
I have a structure representing some data in a following way:I would like to iterate over class B elements so that i will be able to access all nested objects like below:I have read that there are a few possible solutions to solve this:using metaclass  implementing iterator protocol   using itertoolsThis is all fine on basic examples, but I couldn't find any solution to the problem I am facing directly - having class which's elements are composed of other classes.
for uses the (internal equivalent of the) iter() function on the object to get an iterator. Implement the __iter__ method to produce one:I used a generator function to produce an iterator; when __iter__ is called a generator object is created that then produces b1 and b2 in order.The (Python 3) yield from syntax then delegates to all such values in b3, which also needs to implement the protocol:Alternatively, B.__iter__ could just reach into self.b3 and yield self.b3.a1 and self.b3.a2, and not delegate.


Answer URL
https://docs.python.org/3/library/functions.html#iter
https://docs.python.org/3/reference/datamodel.html#object.__iter__
