Natural Text
Take this super simple class:The goal is to create instances of the class to use as dict keys.  If __repr__ is omitted, the keys are the standard object address.  With __repr__ a printable representation might be:When attempting to access the dict by key though, it does not appear to be immediately obvious how to utilize the __repr__ (or __str__ for that matter) representation as the key.
First thing's first: __repr__() is a red herring. It only affects how the object is displayed. It has nothing to do with what you're trying to do.If you want to have two separate objects refer to the same slot in a dict, you need two things (reference):The objects must have the same hash (hash(obj1) == hash(obj2)).The objects must compare equal (obj1 == obj2).Your above implementation does the former, but not the latter. You need to add an __eq__() method (which is actually required by the documentation when you define __hash__(), anyway).Â 


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__hash__
