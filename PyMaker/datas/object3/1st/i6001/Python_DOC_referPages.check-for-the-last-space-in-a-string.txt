Natural Text
I have a string that goes "Quisque pretium magna ac aliquet interdum. Mauris posuere, risus non mollis placerat, diam ligula commodo justo, ac aliquet velit ante a ipsum." stored in a variable T and I have a variable L which is set to 30.I am trying to write a loop that will print the string out, but in such a way that only L amount of characters (30 in this case) can fit on the line. If there is a word which goes over the limit (As in, it starts on character 28 and ends on 32), then I am trying to store the index at which point the last space was (The index of the most recent " ") in a variable called s. This is what I have, but I'm not sure where to go from here:What I want to get is:However, this is the traceback I get, what am I doing wrong?
Since knowing where to break your line depends on how long a word is, you won't be able to do this by treating T as just a sequence of characters unless you want to backtrack (what if you're halfway through a word and you run out of space?).I would instead split up T into a list of words and then just run through them:Note that your expected output doesn't wrap on column 30, it looks to wrap on column 25. Otherwise, line 3 would be 26 characters long and contain:An alternative solution would be to find the breaking point by using the limit arguments to str.rfind and just iteratively breaking down text using that:
I think that the best approach is to split the sentence into a list and use it to count characters. I do not know if I understood correctly the s variable. I stored the white spaces after each last word of each line.
My example will probably need to be hardened in case of exceptions or weird input values, but I think you can accomplish this with something like the following steps:Cut the string off at 30 charactersIf needed, split the string on the last whitespace.Maybe something like this:


Answer URL
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
