Natural Text
I have to compare two directories with .xyz files in them. One directory has original files (names xa02-1-1-1-1, xa02-1-1-1-2 etc.). I process all these files (molecules) and each file gives rise to 3 new files whose file names just have -1, -2, -3 added at the end. (e.g., xa02-1-1-1-1 would give rise to xa02-1-1-1-1-1, xa02-1-1-1-1-2, and xa02-1-1-1-1-3). During this operation some files just produce two new files and don't produce the 3rd or some produce just one new file and some even do not produce any output. I want to compare first folder with the new one seeing which files have not generated 3 new files. Basically I want t list of the files in the first folder which did not give rise to 3 new files.I did not find how to do it with Python so I printed all the filenames using bash without the extensions. Now I have two text files with all the filenames and I compare those two text files. I am trying to remove the last -1, -2, -3 from the new list and see if an item in original file is present in the new list less than 3 times. The code still gives me count 1 for all the files.Can anyone please guide me on that how to do it efficiently using Python. I need this for my PhD research as doing this manually takes days just to compare two folders because of lots of files (molecules) in them.Here is the code I wrote:And here are the files with names in them.orig-files.txtnew-files.txtYou can see in the files that xa02-1-1-2-3 and xa02-1-3-3-3 generate 1 and 2 files, respectively while xa07-1-2-1-1 did not generate any output file. I want the output to look like this:Please help me here. I would be highly thankful for any help.
Use a Counter to count occurrence of filename having trimmed away the last 2 characters.The resulting counter object can be used to filter original_files_trimmed where items don't count up to 3.Example:
Here is one implementation:


Answer URL
https://docs.python.org/3/library/os.html#os.listdir
https://docs.python.org/3/library/glob.html#glob.glob
