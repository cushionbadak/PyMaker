Natural Text
I have a dictionary like this:As you can appreciate 0 and 2 are not equal but share the same elements, I would like to remove these elements in the dictionary that are the same. In this case it would be reduce to:Edit:aux = 0definitivo={}for key1, value1 in result.items():print(definitivo)I attempted to just get the ones which intersectation is 3 to, then, eliminate them. But it's not working.
Change the value of dict to tuple, sort it and store it in another lookup dict. Check for presence of every new value in the lookup and then filter out already present values.
You could convert every list to a frozenset. This way, you can use the set as a dict key, and any set that appears twice will be overwritten:You can invert the pairs and convert the sets back to a list:Note that the key order cannot be kept since the original data is a dict, which is unordered in Python.
Another simple method for recognizing equal unique values can be as follows :Sort the array inside the keyDelete if equalNote : This is an algorithm


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset
