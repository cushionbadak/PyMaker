Natural Text
I am reading python official documentation word by word.In the 3.3. Special method names 3.3.1. Basic customizationIt does specify 16 special methods under object basic customization, I collect them as following:The problem is that there's three of them are not object's valid attributesObject is a base for all classes. 2. Built-in Functions â€” Python 3.6.3 documentationIt has no recursive base classes.Where are methods of __del__, __bytes__,__bool__ defined for class 'object'?
Where are methods of __del__, __bytes__, __bool__ defined for class 'object'?They aren't defined on object. These are special methods you can implement yourself on classes.The misunderstanding probably happened because the documentation says object.__bool__, but the object. there just means that it's a method on the object (in the sense of "instance") if implemented. Likewise the later examples on that documentation page list it also shows special methods for metaclasses with class.__subclasscheck__. That doesn't mean that it's always implemented, more like if implemented it's available on the class.
__del__ absolutely must not exist for object - its very presence in a class changes how the garbage collector treats its instances, so having this method on object would make it impossible for any class to not have it.__bool__ is only needed if you want to override the default behavior of treating objects as truthy in a boolean context.  object has no need to override that behavior.I'm not sure what's up with __bytes__, I think it defaults to __str__ if not present (or something similar).


Answer URL
https://docs.python.org/3/reference/datamodel.html#basic-customization
https://docs.python.org/3/library/functions.html?highlight=object#object
