Natural Text
I have to find the first index where sum of elements up to that index (itself not included) is bigger than the element itself. If there is no such element just return -1. My code: I got correct output only on last two lists -1, but if i try first list the output is empty. What is wrong with the code?
Firstly reduce the indentation level of the return -1 as you want to do that only once you have iterated over the whole list not for each index.If you do that your code will look like this:Your code will now return 1 for all of your test cases since the if condition will always be true on the second iteration of the loop. Can you see why?To fix this issue of the temp_value being prematurely incremented move the tmp_var += numbers[i] line to the bottom of the for loop block:
You violate your "itself not included" rule by adding to tmp_var before checkingtmp_var > numbers[i].In addition, you return -1 from your function the first time when tmp_var <= numbers[i]. You want the return statement after the loop.I allowed myself to enhance your code with enumerate, because range(len(numbers)) is an atrocity.
Based on the description you need to consider sum of elements up to that index (itself not included), this means that you shouldn't include the value of the current index within the sum of the previous elements. Here's how to change your code: 
There are two problems with your code:The increment should happen after the comparison (according to your own stated rules).The return -1 line should happen outside the loop. This may just be a typo on your part.You could remove loops entirely and write a one- liner using itertools.accumulate to generate the running sum:I use 2 * n here because the running sum s includes the current element n. Testing n < s - n is the same as testing 2 * n < s.The return value of -1 is provided by the default parameter to next.IDEOne link


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
https://docs.python.org/3/library/functions.html#next
