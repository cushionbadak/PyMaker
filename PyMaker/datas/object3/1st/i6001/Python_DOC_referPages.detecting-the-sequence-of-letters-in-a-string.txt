Natural Text
I've made a hasher. It works and it's really simple. I made one for fun and I thought that the code is way too long. It's over 1000 lines long and it's so simple. I just want to shorten it down.Here's how I did the code:Bla bla bla, you get the idea, it goes like that. When it reaches ZAnd it goes on. My question is, how can I shorten my code?EDIT:The integers a, b, c are defined like this:and so on.
You could use a dict to split your line count by 26:Now, all you need is a dict lookup instead of 26 ifs:You could replace the 1, 2, ... values with the ones defined as a, b, ... in your code.If you want to do it for every letter, simply use a list comprehension:You now have a list of integers, ready for further processing!
I don't know where you go exactly from the code snippet you gave but I suggest to start from:ord is a function returning the ascii code of a character (a=97, b=98, etc.). So 1+ord(chr)-ord('a') will return 1 for 'a', 2 for 'b', etc.It seems more interesting not to use a dictionary in your hash function, since a dictionary itself is a hash table.
I think this does what you're looking for. What I did is build a loop that runs over your word, so it can compare letter by letter. The second loop goes over the letters of the alphabet and if your word letter has a match, this is stored in the array results. This array counts the occurrences of each letter. If you want you can replace the print statement with writing to a file. There is also no need to restrict your code to run on short words anymore.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
