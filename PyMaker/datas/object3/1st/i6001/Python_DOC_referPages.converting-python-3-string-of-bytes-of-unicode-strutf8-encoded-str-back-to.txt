Natural Text
Well, let me introduce the problem first.I've got some data via POST/GET requests. The data were UTF-8 encoded string. Little did I know that, and converted it just by str() method. And now I have full database of "nonsense data" and couldn't find a way back.Example code:unicode_str - this is the string I should obtainencoded_str - this is the string I got with POST/GET requests - initial databad_str - the data I have in the Database at the moment and I need to get unicode from.So apparently I know how to convert:unicode_str =(encode)=> encoded_str =(str)=> bad_strBut I couldn't come up with solution back:bad_str =(???)=> encoded_str =(decode)=> unicode_str
You turned a bytes object to a string, which is just a representation of the bytes object. You can obtain the original bytes object by using ast.literal_eval() (credits to Mark Tolonen for the suggestion), then a simple decode() will do the job.Since you were the one who generated the strings, using eval() would be safe, but why not be safer?
Please do not use eval, instead:


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
