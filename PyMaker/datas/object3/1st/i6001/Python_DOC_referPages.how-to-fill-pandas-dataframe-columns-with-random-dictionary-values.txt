Natural Text
I'm new to Pandas and I would like to play with random text data. I am trying to add 2 new columns to a DataFrame df which would be each filled by a key (newcol1) + value (newcol2) randomly selected from a dictionary. My df already has 2 columns and I'd like something like this :I can certainly use a for or while loop to fill df['Continent'] and df['Country'] but I sense .apply() and np.random.choice may provide a simpler more pandorable solution for that. 
Yep, you're right. You can use np.random.choice + map:You choose len(df) number of keys at random from the country key-list, and then use the country dictionary as a mapper to find the country equivalents of the previously picked keys.For the second step of replacement, pd.Series.replace also works:For the sake of completeness, you can also use apply + dict.get:
You could also try using DataFrame.sample():Which can be made faster if your continent-country map is already a dataframe.If you're on Python 3.6, another method would be to use random.choices():random.choices() is similar to numpy.random.choice() except that you can pass a list of key-value tuple pairs whereas numpy.random.choice() only accepts 1-D arrays.


Answer URL
https://docs.python.org/3/library/random.html#random.choices
