Natural Text
I love the typing.NamedTuple in Python 3.6. But there's often the case where the namedtuple contains a non-hashable attribute and I want to use it as a dict key or set member. If it makes sense that a namedtuple class uses object identity (id() for __eq__ and __hash__) then adding those methods to the class works fine.However, I now have this pattern in my code in several places and I want to get rid of the boilerplate __eq__ and __hash__ method definitions. I know namedtuple's are not regular classes and I haven't been able to figure out how to get this working.Here's what I've tried:Is there a way I don't have to repeat these methods in each NamedTuple that I need 'object identity' in?
The magic source of NamedTuple class syntax is its metaclass NamedTupleMeta, behind the scene, NamedTupleMeta.__new__ created a new class for you, instead of a typical one, but a class created by collections.namedtuple().The problem is, when NamedTupleMeta creating new class object, it ignored bases classes, you could check MRO of TestMixinFirst, there is no ObjectIdentityMixin:you could extend it to take care of base classes:


Answer URL
https://docs.python.org/3/reference/datamodel.html#metaclasses
