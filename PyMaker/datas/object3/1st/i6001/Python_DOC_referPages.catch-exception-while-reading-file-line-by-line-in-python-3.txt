Natural Text
Consider the following code:In Python 3, the interpreter tries to decode the strings it reads, which might lead to exceptions like UnicodeDecodeError. These can of course be caught with a try ... except block around the whole loop, but I would like to handle them on a per-line basis.Question: Is there a way to directly catch and handle exceptions for each line that is read? Hopefully without changing the simple syntax of iterating over the file too much?
The Pythonic way is probably to register an error handler with codecs.register_error_handler('special', handler) and declare it in the open function:That way if there is an offending line, the handler will the called with the UnicodeDecodeError, and will be able to return a replacement string or re-raise the error.If you want a more evident processing, an alternate way would be to open the file in binary mode and explicitely decode each line:
Instead of employing a for loop, you could call next on the file-iterator yourself and catch the StopIteration manually.
Place your try-except catch inside the for loop, like so:


Answer URL
https://docs.python.org/3/library/functions.html#open
