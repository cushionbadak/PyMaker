Natural Text
I have a question. I tried to put together information from other questions but with no success.Assume I have data in the following format:My aim is to print (to be saved into a file) in the following way:To this aim, I started focusing on the items of outer_dict, and I managed to print them separately, but I am not sure how to further join (and, more importantly, if this is the most direct way to go).Thanks for any suggestions.
You can do this:Output:
Patching your code to work will look something like this:But, I think you did it way more complicated than it should be in python, a much simpler solution will be using nested loops:I'm sure you can figure out a one-liner that will do this for you.
Double join can be used in your case, remember to convert your ints to str:   
Seems like the other answers assume a deterministic order in the dictionary. But dictionaries do not have a deterministic order. In fact, you can set hash_randomization in Python 2. Just start with the command line option -R:This is the default in Python 3.So to make this work more reliably and also with Python 3, sort the keys of the inner dictionary. Since it is used many times, sort it only once and re-use it in all iterations over the file list:Output:
Since you wanted to save it to a csv file, see if this helps. You can use OrderedDict if the order matters.The test.csv file would look so:
What about this oneliner- just concatenate tuples (i.e. [(i,)+j for j in inner_dict.items() for i in file_list]) and flatten the list of tuples into a simple list.Output-N.B. Better to use OrderedDict in case of maintaining order using dictionary.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__hash__
