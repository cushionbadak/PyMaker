Natural Text
datetime, Python's builtin module, have some classes.But I can not understand well parameter of datetime.time class.time class have tzinfo param, default is None.I want to know why time class needs timezone information.In case of datetime class, it has .astimezone method and we can change data by timezone information. But time class have no method like .astimezone.Is it just reserved for datetime.combine classmethod? or is there some important story about time and timezone?
I want to know why time class needs timezone information.I find it useful e.g. if we're dealing with events that occur in the same time regardless of the date (e.g. a scheduled job), and need to display, manipulate and compare, in a different timezone.How to get a TZ-aware datetime.time objectdatetime.timetz()Return time object with same hour, minute, second,  microsecond, and tzinfo attributes. See also method time().So as for my example use case, I'd pull the datetime.time object from my tz-aware datetime.datetime object, using datetime.datetime.timetz(), which conserves it's tzinfoThis would fit in a datetime.time object, as opposed to a datetime.datetime object that also carries the date information.But time class have no method like .astimezone.You can't TZ-convert using time onlyAs for the reason there is no time.astimezone(), I think it might be because without a date, it is impossible to guess the effects of DST transitions and other non-fixed UTC offsets.
The time class makes use of a tzinfo for comparison and operations. For example, 9:00 AM in US/Pacific is not equal to 9:00 AM in US/Eastern. Also, python can raise a TypeError if you are comparing an aware to a naive time, i.e., comparing 9:00 AM in US/Pacific to just "9:00 AM" From the docs: comparison of time to time, where a is considered less than b when a precedes b in time. If one comparand is naive and the other is aware, TypeError is raised if an order comparison is attempted. For equality comparisons, naive instances are never equal to aware instances.


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.time.tzinfo
