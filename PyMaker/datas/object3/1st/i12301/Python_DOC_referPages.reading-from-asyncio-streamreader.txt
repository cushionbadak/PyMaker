Natural Text
I am trying to extend the python asyncio HTTP server example that uses a streaming reader/writer (code). If I understand it correctly, the example handler read 100 bytes from the reader and echoes it back to the client through the writer. I am trying to read more than 100 bytes... reading until there is nothing more to read would be nice.I have tried letting the read() function read as much as possible,but that seems to block forever. So I tried reading chunks until the EOF is reached,and while this retrieves more of the data, it to seems to block on the read call instead of exiting the while loop.How can I get the entire message from the client using the stream reader?
You should check if StreamReader.read returned an empty bytes object to signal an EOF:Also, consider using aiohttp if you need a fully functional HTTP client.
Like so:To determine the EOF usein stead ofSee the docs (aiohttp): the read returns an empty byte stringon EOF, so check for that explicitly.Note: If you would like to read until the end of the chunk as it was delivered from the server, checkout(Didn't test it, though.)
Use feed_eof before at_eof.


Answer URL
https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamReader.at_eof
