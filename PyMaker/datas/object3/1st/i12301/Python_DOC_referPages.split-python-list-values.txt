Natural Text
Imagin I have three lists like:So:But what in list s:2gk_ppp must be ggggggggggggk_ppp
You can use a nested list comprehension / generator expression with regular expressions.First, use re.search with (\d*)(\w)(.*) to get the (optional) number, the character, and the (optional) rest for each string.For your second example, this gives [('3', 'f', ''), ('2', 'y', '_'), ('4', 'k', ''), ('', 'p', '')]. Now, in the outer generator, you can use or to provide a "default-value" in case the number is '' (or use a ternary expression if you prefer: int(n) if n else 1):This gives ['fff', 'yy_', 'kkkk', 'p']. Finally, join to get fffyy_kkkkp.
This variant is a little bit more imperative and simple to follow:


Answer URL
https://docs.python.org/3/reference/expressions.html#boolean-operations
