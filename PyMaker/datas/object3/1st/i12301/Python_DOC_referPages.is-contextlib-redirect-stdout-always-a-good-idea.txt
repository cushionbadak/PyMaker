Natural Text
Since I've learned of the pattern, I've been usingThis lets me use the print syntax (which I prefer) to write to files and I can easily comment it out to print to screen for debug. However, by doing this, I am removing my ability to both write to file and to the screen, and possibly writing less clear code. Are there any other disadvantages I should know about, and is this a pattern I should be using?
is this a pattern I should be using?In this particular case, I do think your pattern is not idiomatic, and potentially confusing to the reader of your code. The builtin print (since this is a Python-3x question) already has a file keyword argument which will do exactly what redirect_stdout does in your example:and introducing redirect_stdout only makes your reader wonder why you don't use the builtin feature. (And personally, I find nested with ugly. \-separated with even more ugly.)As for the ease of commenting out (and for printing to both stdout and a file), well you can have as many print calls as you like, and comment them out as you needAre there any other disadvantages I should know aboutNothing definite I can think of, except that it may not be the best solution (as in this case).EDIT:From the doc:Note that the global side effect on sys.stdout means that this context  manager is not suitable for use in library code and most threaded  applications. It also has no effect on the output of subprocesses.
This question, about how to do exactly what you've been doing has quite a few comments and answers about the drawbacks of redirecting stdout, especially this comment to one of the answers:With disk caching performance of the original should be acceptable. This solution however has the drawback of ballooning the memory requirements if there were a lot of output. Though probably nothing to worry about here, it is generally a good idea to avoid this if possible. Same idea as using xrange (py3 range) instead of range, etc. â€“ Gringo Suave


Answer URL
https://docs.python.org/3/library/functions.html#print
https://docs.python.org/3/library/contextlib.html
