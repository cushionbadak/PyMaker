Natural Text
Is there an idiomatic way to implement an "once method", that is: a method whose return value gets evaluated on the first call only?  Something like what the following simplified code does for the return value of x:
As of Python 3.2, you can use the functools.lru_cache decorator (but it may be overkill for what you need):output:Alternatively, you can write your own decorator:And use it on any function you want to run only once and cache the result                
One way is to give the function itself an attribute which will only be True on the first call.Another option is to (ab)use a mutable default parameter. The advantage is that you don't have to set an attribute on the function after defining it:edit:For completeness, if you have instance attributes that should only be computed once, use a property:Demo:
Since you tagged this as Python 3.X, you can also use a function annotation as a state flag:For a class, timgeb method works great. 
The old-school method is to just have a global that holds the result.If None is a valid result, define an empty class and use that instead


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
