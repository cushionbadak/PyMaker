Natural Text
I made a function that searches files recursively and I want it to stop recursion when the first file is found:  
Return a flag that says whether the file was found.  When you call search_file, return if the return value is True.
You are close. You already break recursion when you find the file, the problem is that you didn't propegate that result all the way up the chain. A well-placed print statement would show what went wrong.
Note that you need to be able to return a false entry in case it loops all the way down without finding anything. However, you do not want to break out of the for loop if nothing found in one subdirectory without checking the next sub directory. The return will break out of the function, returning the results without having to enter a break.On the other hand, if you want to have only one return, you can use a break as follows
I see a problem of not being able to return a value other than None once into the else: statement. Could you provide broader details describing what you are trying to do?There is no way to simply exit recursion when you accomplish a task. Each recursive step that was opened must be closed before moving on. The function must return something (None or a value) to its caller.I'm imagining this being a class method that sets value to an attribute because it doesn't return anything once recursion has begun. Here's what I would do in the instance that this is a class method.


Answer URL
https://docs.python.org/3/library/os.html#os.walk
