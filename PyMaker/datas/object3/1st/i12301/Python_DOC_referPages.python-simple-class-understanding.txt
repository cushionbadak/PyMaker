Natural Text
I found the below code from a website while practicing basic python scripting. From the below code I was able to understand the class and instance and first print statement.But I do not understand the concept used behind second and third print statement. How can an instance(in the below code polly) can be passed as an argument to a class's method? Is there any option in python that we can pass this like that?.
In fact, instance.instance_method() will turn into TheClass.instance_method(instance) internally, the self refers to the instance itself. so the first and the second versions are equals to each other.a simple example:
In Python, a class can be treated as a bag of properties. See below:In this example, Stuff is just a bunch of random objects. So Stuff.bar refers to the actual function bar. Instances of a class have a different behaviour: When a function is accessed, it automatically gets converted to a bound method. This means that the instance is automatically passed as the first argument.When you call Pet.getSpecies(polly), polly will be passed in as the self parameter. There's no magic to self, it's just another parameter. The magic is when you access polly.getSpecies and get a <bound method Polly.getSpecies of <__main__.Polly object at 0x7f946cd14b38> instead of a <function Polly.getSpecies at 0x7f946cd1e048>.There's also the @classmethod decorator, which receives the class as the first argument instead of the instance, as well as making code easier to understand by clearly delimiting class methods and instance methods.
In the second print statement, polly is passed as the self argument to the class method. This happened implicitly in the first print statement. On the third print, the class method is called, but there is no actual object with data to act on. 


Answer URL
https://docs.python.org/3/library/functions.html#classmethod
