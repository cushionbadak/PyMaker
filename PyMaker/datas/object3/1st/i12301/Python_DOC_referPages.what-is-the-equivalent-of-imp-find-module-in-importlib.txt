Natural Text
Some of my code use the now deprecated imp package to find a moduleWhat is the equivalent function or code to get the same results with package importlib ?
Same folderIf the module is in your working directory, importlib.util.find_spec probably suffices for your purposes. For example if you just want to load the module, you can use:deprecated in Python 3.5 and higher:introduced in Python 3.5 and higher:Caveat: I haven’t tested this, but it’s straight from the documentation, so I suppose it works.You can assess several other properties with the toolbox_specs object.However, e.g., a corresponding file object is not amongst them.If you really need this in Python 3, you probably have to obtain the file’s path and open it with other methods.Different folderTo find a module in a different folder, you have to work with a FileFinder, which in turn needs to know the module’s type. For example, if your module is an extension, you can find the specs as follows:You can then process toolbox_specs as described above.
I found this worked as a replacement for imp.find_module()
According to Python official documentation in this page impfind_module Deprecated since version 3.3 Use importlib.util.find_spec() instead unless Python 3.3 compatibility is required, in which case use importlib.find_loader().Use  importlib.util.find_spec("Tools") for find spec for more information you can see this link.And use  importlib.find_loader("Tools") for find loader more informationEDIT:sample code


Answer URL
https://docs.python.org/3/library/imp.html#imp.find_module
https://docs.python.org/3/library/importlib.html#importlib.util.find_spec
https://docs.python.org/3/library/importlib.html#importlib.find_loader
