Natural Text
I'm now to python and I wanted to know the correct way of doing this. I'm trying to add pieces to make a full string but I get symbols in the string outputThe output I get looks like this
At the end, you could useWhat's happening is that when you say response = globalSeconds, " seconds equals " You're creating a tuple. When you use the print function, you're not passing in a single string created by some sort of comma-based joining operation. You're passing in multiple arguments, and the print function handles them appropriately.If you wanted to join strings all the way through, the + operator allows for string concatenation. It is typically more efficient to use .join() rather than a large number of concatenations however.For reference, this answer uses the builtin str.join() method, documented here. It also uses the map() builtin documented here. What they're doing is basically as follows:By the end of your program, response is a tuple of different values.Not all of those values are strings (notice that you never converted any integers to a different type).The builtin .join() method requires an iterable of strings for its input.The line map(str, response) is roughly the same as (str(x) for x in response). Now we have an iterable object of string representations of the values we want to join together.The .join() method takes all of those strings and concatenates them into one giant string like you want.Note the '' at the beginning of .join(). That's the separator we're using between each of the strings we're joining. You could just as easily use spaces or commas or anything else like ', '.join(...).
You can't join strings and ints with a comma.  That gives you a tuple, as your output shows.  You need to convert the ints to strings.   One way is: response += str(seconds) + " seconds"Another way would be to use the string format function:  response += "{} seconds".format(seconds)


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/library/functions.html#map
