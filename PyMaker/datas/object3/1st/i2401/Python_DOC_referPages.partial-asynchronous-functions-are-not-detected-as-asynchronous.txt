Natural Text
I have a function which accepts both regular and asynchronous functions (not coroutines, but functions returning coroutines).Internally it uses asyncio.iscoroutinefunction() test to see which type of function it got.Recently it broke down when I attempted to create a partial async function.In this demonstration, ptest is not recognized as a couroutine function, even if it returns a coroutine, i.e. ptest() is a coroutine.The problem cause is clear, but the solution is not.How to dynamically create a partial async func which passes the test?ORHow to test the func wrapped inside a partial object?Either answer would solve the problem.
You can't make a partial() object pass that test, because the test requires there to be a __code__ object attached directly to the object you pass to inspect.iscoroutinefunction().You should instead test the function object that partial wraps, accessible via the [partial.func attribute[(https://docs.python.org/3/library/functools.html#functools.partial.func):If you also need to test for partial() objects, then test against functools.partial:


Answer URL
https://docs.python.org/3/library/asyncio-task.html?highlight=iscoroutine#asyncio.iscoroutinefunction
https://docs.python.org/3/library/functools.html#functools.partial
https://docs.python.org/3/library/functools.html#functools.partial.func
https://docs.python.org/3/library/functools.html#functools.partial
https://docs.python.org/3/library/functools.html#partial-objects
