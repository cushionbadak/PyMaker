Natural Text
Let's say I have two classes:Now let's sayNow, if I do del myData.contA it of course doesn't remove name from myData._containers.So how would I write a destructor in Container so it deletes the attribute but also removes name from the _containers list?
You seem to be used to a language with deterministic object destruction and dedicated methods for performing that destruction. Python doesn't work that way. Python has no destructors, and even if it had destructors, there is no guarantee that del myData.contA would render the Container object eligible for destruction, let alone actually destroy it.Probably the simplest way is to just define a remove_container paralleling your add_container:If you really want the syntax for this operation to be del myData.contA, then hook into attribute deletion, by implementing a __delattr__ on Data:
You want to overload the __delattr__ special method: https://docs.python.org/3/reference/datamodel.html#object.delattr


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__delattr__
