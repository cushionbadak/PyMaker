Natural Text
This question already has an answer here:UnboundLocalError with nested function scopes                    4 answers                It seems that the closure of a python function has problems if the symbolreferenced is assigned:and the result is: If I just for test replace:the error dissapears, however the code is not what I want. Is the above behaviour expected with python closures/nested functions? Do I need to wrap the array to modify inside a object and just call functions? On the other hand this one works:
Because you are assigning p inside touch, it becomes a local variable in touch and effectively "hides" all other names p in enclosing scopes.  In order to tell Python that you actually want to refer to the p within outer, you should use nonlocal p, for example:Your second example works because you are referring to an attribute of p in both cases of touch, rather than making an assignment (p = ...).See nonlocal in the Python reference documentation, the reference documentation for scopes, and PEP 3104 in which the nonlocal syntax was proposed.  nonlocal only exists in Python 3, but there is a workaround if it is necessary to use Python 2.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#nonlocal
https://docs.python.org/3/reference/executionmodel.html#resolution-of-names
