Natural Text
I am writing a Python program that maintains a list of contacts, each having 3 fields:NamePhone NumberEmailContacts need to be saved in a YAML structured file and the program is supposed to provide the facility of adding new contacts.My Code for this is:I think this is an inefficient implementation. If we have 1 million contacts, and we want to add a new one, this will first read all of them, append one to the list and write all the 1 Million + 1 contacts again. Is there a way to just add the new contacts without having to write the whole file again. I guess reading is important as I don't want to store duplicate contacts and that would need comparison. Any other efficient approach would also be appreciated.
In a long-running program/process P there is indeed no need to re-readthe data.  There are a few things to keep in mind:If you only use the YAML document in other programs when Phas stopped, then you only need to write out the file when P exits. You might want to do so using atexit, if you don't have a single exit pointsIf other programs might edit/update the list while P is running, thenmake sure that you check the datetime stamp of the YAML file andre-read the file before adding a new contact.  If necessary, you canwork with locks to make sure only one program at a time, updates thefile.If other programs need to have an up-to-date YAML document you caneither write the YAML out on each update, or you can use somemechanism to notify P that the YAML document needs to be written. Ihave used both SIGINThandling and zeromq based communications to do so.A lot of the above is done for you if you use a real database, and for asimple table of records, that all have the same fields, that might be abetter alternative. However as soon as things get more complex:different fields per record, complex and possible recursive data, thena lot of (SQL) databases become an additional problem, instead of helpingsolve the one you try to tackle.ruamel.yaml.base (disclaimer: I am the author of that package) doesitem 2) for you out-of-the-box, the other two items are easilyimplemented as well. The only tricky thing is that the YAMLBasenormally expects a mapping/dict at the root level for a new file, sosome coercion needs to take place when the file doesn't exists yet.After you do pip install ruamel.yaml.base:which gives:If you set the verbose parameter to 1, you'll get some informationon stdout about what is going on in the package.If you have a lot of record then you might want to change self.data in Contactsto self.fast_data, this will then load the YAML using the much faster C basedloader, at the expense of not being able to preserve (hand added)comments etc. in the input YAML. (In either case a "safe_load" is being used).


Answer URL
https://docs.python.org/3/library/atexit.html
