Natural Text
I am looking for something like TRIM() in python, but .strip() doesn't accomplish this. Here's an example:How would I accomplish the above -- to trim all whitespace characters at the edges of text -- where I could get s.trim() == s2.trim() (other than just doing a hackish s.strip('\xc2\xa0').strip()?
Since you are using Python 2.7, first convert your string to unicode and then strip:yields:This will cause Python to recognize the \xc2\xa0 as a Unicode non-breaking space character, and properly trim it.  Without that, Python assumes it's an ASCII string and in that character set \xc2 and \xa0 aren't whitespace.
I would suggest you use the replace function. You can do this:You could encapsulate this logic if you have a large number of possible characters you want to trim off:You could also implement this using reduce:


Answer URL
https://docs.python.org/3/library/string.html#string.whitespace
