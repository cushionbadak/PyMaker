Natural Text
When using mocker from pytest-mock, how can I use has_calls to check the calls to a specific method without checking all the calls made to the return value of that method?For example:Fails with:Why are calls to the return value also included? I just want to check that I had a call to subprocess.run(['foo']) followed by a call to subprocess.run(['bar']). I don't care about calls made to anything it returns, but I do care about the order of calls to run itself.
Add any_order=True to your assert_has_calls call, like this:The reason is, it looks like assert_has_calls uses the mock_calls attribute on a mock which based on the documentation (https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.mock_calls):records all calls to the mock object, its methods, magic methods and return value mocks.With assert_has_calls though, it's not an exact matching problem it was just the ordering that was failing.EDIT: Since order matters, use call_args_list. Like this:
Use assert_any_call:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.mock_calls
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_any_call
