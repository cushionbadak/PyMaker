Natural Text
I have a lot of .txt files that I want to read. The .txt files were saved by converting a python dictionary to a string and saving the string in a .txt file.  The entries of the dict are of mixed types (float, int, string,...). In some of the files one entry of the dict is a numpy-array and is saved in the txt-file asBecause I want to access the values saved in the dict by their names, I now want to read the txt-file and load them as a dict again. This works easily with as long as there is no numpy array in the file. When the numpy-array is present, I get the error:File ".../python3.6/ast.py", line 84, in _convert      raise ValueError('malformed node or string: ' + repr(node)) ValueError: malformed node or string: <_ast.Call object at 0x7fb5428cc630>Which makes sense, looking at the as.literal_eval documentation (https://docs.python.org/2/library/ast.html) which saysSafely evaluate an expression node or a Unicode or Latin-1 encoded  string containing a Python literal or container display. The string or  node provided may only consist of the following Python literal  structures: strings, numbers, tuples, lists, dicts, booleans, and  None.Since I can't resave the file differently, I don't know at which position the array is and I want to avoid cumbersome regex parsing, I'm searching for a solution that transforms my txt-file into a dict containing a numpy-array. EDIT: the problem is not only the numpy array but also when I saved an object of e.g. a specific class:A solution, where everything that can not be parsed as some kind of number/bool/some knonw datatype is automatically saved as a string just as it is would satisfy my needs. 
I suggest an iterative approach handling the exceptions as needed. I don't like using eval, perhaps there's a better way but this is quick and dirty and assumes you have safe inputs.
I guess you'll have to check for an array line by line. A quick & dirty suggestion:Maybe for future reference, you can try using the pickle module to save your data.


Answer URL
https://docs.python.org/3/library/pickle.html
