Natural Text
This question already has an answer here:What is the best way to repeatedly execute a function every x seconds in Python?                    15 answers                I need to run a specific function every second. I have searched for a solution and found this one:It seems to be the code I have been searching for. But after running those lines of code for 20 Minutes I have got following error message:Exception in thread Thread-1896: Traceback (most recent call last):  File "/usr/lib/python3.5/threading.py", line 914, in _bootstrap_inner  File "/usr/lib/python3.5/threading.py", line 1180, in run File  "/home/pi/scanner/api/brightness.py", line 37, in adjust_brightness  File "/home/pi/scanner/api/brightness.py", line 14, in get_brightness  OSError: [Errno 24] Too many open filesIt seems that every time the function is called a new thread starts. Is there a way to stop the previous thread before the new one gets generated? Or are there other solutions where this doesn't happen? 
Note: you can use the sched module if you want, refer to this answer.Otherwise, here is a small utility function that only uses one thread:Note: if your function takes some time to execute, e.g. 0.5 seconds then the function would be called every 1.5 seconds instead. This can be avoided by measuring the time of execution and subtracting it from the timeout. For such a simple example this would be overkill. (And would introduce an edge case, when the execution takes longer than the timeout).


Answer URL
https://docs.python.org/3/library/sched.html
