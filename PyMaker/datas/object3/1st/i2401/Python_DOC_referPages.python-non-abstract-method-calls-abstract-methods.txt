Natural Text
I have an example below:The first script where I define the abstract class:And the second script where I implement the abstract methods:Since i know for sure that __foo_1 and  __foo_2 must be called in that order, i want to write the non-abstract method run to do that (like in test.py). But it doesn't seem to work:Is there anyway to do that? Since i don't want to rewrite the same run-method each time.Thank you.
The problem is that double_underscore attributes are somewhat magic in Python.From the docs:Any identifier of the form __spam (at least two leading underscores,  at most one trailing underscore) is textually replaced with  _classname__spam, where classname is the current class name with leading underscore(s) stripped.So instead of overriding __foo_1, you end up with an abstract _A__foo_1() and an implemented _B__foo_1()
Ok ... i found what i need, i just need to change the protected methods __foo to normal method foo and it all works.


Answer URL
https://docs.python.org/3/tutorial/classes.html#private-variables
