Natural Text
I have the following directory structure in Flask and I am trying to add logging to this system. My APIs are defined in main.py and backend.py provides some backend logic to the APIs.My APIs are defined in main.py and logging related components in the file are as below:Logging works as expected in main.py. Depending on the log_level, logs get written to LOGFILENAME.Problems occur when I try to enable logging via the below steps inside of backend.py.I do not see any logs from backend.py getting written to flask.log. I sense I am missing something but do not understand what. Any help appreciated.
Your library does have a different logger name. For both you need to have the same logger name. See for example the logging cookbook.The best practice is that you create your own logging hierarchy, for example "myapp" in main.py (logger = logging.getLogger("myapp")) and attach to this in backend.py with for example myapp.backend (logger = logging.getLogger(".".join("myapp", __name__)). Find below a slightly modified version of your main.py and backend.py. I have removed the Flask part. I guess this does not affect the logging mechanics.main.pybackend.py
I think I found the fix to my problem. Given below is my updated main.py and backend.py and is comfirmed workingmain.pybackend.pyIf you notice, the second line of backend.py is basically logging.getLogger() without a name. This did the trick on the backend side.Also, app.logger on the API side (main.py side) helped.Overall, I was able to get both the main.py and backend.py to write to the same file given in dictConfig.


Answer URL
https://docs.python.org/3/howto/logging-cookbook.html#using-logging-in-multiple-modules
https://docs.python.org/3/howto/logging-cookbook.html#an-example-dictionary-based-configuration
