Natural Text
I wrote a function which could output three things:If I were writing C++ code, I would use #define to make some status constants which were just ints, so that the function isn't returning strings each time. Is there a Pythonic equivalent to avoid using string like this?I intend to call this function several million times, so doing a string comparison on the output might be much slower than comparing a constant int. 
You can define your own mapping in a dictionary like {1: "NormalStatus", 2: "ServerCompromised"} and so on. Then you can return Integers and only have to lookup these integers in the dict (if necessary).An alternative was already mentioned in a comment: You can also use the enum module for this. Maybe the most similar way to #define is declaring (global) variables like this:But as mentioned in the module documentation of the enum moduleAn enumeration is a set of symbolic names (members) bound to unique, constant values.this could also be seen as the most similar way of getting C++'s #define into Python.
You should use enum module for that. If you need to compare values to integers it's good to subclass from enum.IntEnum


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html
