Natural Text
This question already has an answer here:Reference - What does this regex mean?                    1 answer                I'm looking for a clean way to extract some data from a string using regex and the python re module. Each line of the string is of the form key = value. There are only certain keys that I'm interested in, but for some strings these keys may be missing. I can think of a few ways to do this by iterating over the string line by line, or by using re.finditer(), but what I'd really like to do is  use named groups and a single call to re.match(),  to end with a dictionary of groups using .groupdict() method of the returned match object. I can do that using named groups when all the groups are present, but it seems that if I make groups optional then they don't get matched even when present.I'm probably missing something obvious, but is there a way to do this in a single regex or do I need a multistep process?
Check on this out.To try it online, please click here.
You could solve this with one line of simple regular expression.
You can use something similar to the following dictionary comprehension, which splits and filters the key-value pairs based on an input tuple of desired field names:Which gives us:
You didn't really specify if any field can be missing or if count is the only field that could be missing. However, this pattern will match all 3 cases that you suggested and it will store them in named capture groups.type = (?<type>\S*)|count = (?<count>\d+)|destinations = (?<destinations>\S*)Demo| just means or, so you're looking for type = ... OR count = ... OR destinations = ...
Just extract the key/value pairs, then you can either ignore the additional keys, or else add â€¦ if x.split(' = ')[0] in wanted_keys to filter them. Use setdefault if you want to fill in missing keys.
Why not use pandas to do things all at once?  The following uses the regex from @andrei-odegov


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.splitlines
