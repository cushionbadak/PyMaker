Natural Text
I have several custom python modules that perform specific functions (data parsing, computations, etc...). I then have json configurations that describe a module (i.e. module name, arguments, functions, etc...). Finally, I am creating a driver script that I want to drive these modules. The configurations more or less are passed to the driver which commands the module to run certain functions based on this config. What I want to do is based on these configurations I would like to dynamically import these modules and run through the list of tests that is provided based on the configs. The number of configs can be anywhere from 1 to N. The list of tests would be either hardcoded because the modules are created based on a template or provided via the config. i.e.JsonFile:Code: That is the basics of what I have so far... I am getting stuck now on how to command python to call that modules code.  I was hoping to have something like a standard import...Where module would be the itm and module_name would be the key. This way I can iterate through my keys for as many as I have and call the standard functions of those modules.i.e. It should function like this... But be coded like...(pseudo-code)  I hope this makes sense and if not just comment so I can make clarify as needed.
importlib.import_module returns a reference the imported module object, you just have to create a new variable and store it to be able to access the members:If you have multiple names you can store the imported modules in some structure, a list or dict, whatever makes sense for you:Then you can use it to call a function:


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.import_module
