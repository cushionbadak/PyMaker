Natural Text
For a project I had to switch from C++ to python but I'm having some trouble fully understanding the __init__.py file. I found the following documentation on the __init__.py file:https://docs.python.org/3/tutorial/modules.htmlhttps://www.pythoncentral.io/how-to-create-a-python-package/http://mikegrouchy.com/blog/2012/05/be-pythonic-__init__py.htmlTo get more familiar with the way the __init__.py file works I did some tests in both python 2.7 and 3.6.5. I used the "PythonCentral" test pacakge (see link 2) for this:Now I understand the following about the __init__.py file:The __init__.py file executes when a module or subpackage module is imported.The __init__.py can be used to overload the package __all__ method.The __init__.py can be used to define the import orderThe __init__.py can be used to make classes available on package and subpackage level.Using the different modules and classes from the scope of my main file seems to go as explained in the documentation. However when trying to use a class that is defined in another subpackage module I run into troubles. In python 2.7 created the following __init__.py file in the subanimals subpackage:Following I created the following code inside the Bird.py module:When running the main following main script:I keep getting the global name Mammals not defined. I can solve this in python 2.7 by adding from Mammals import Mammals to the top of the Birds.py.Does the __init__.py only import packages and classes on the scope level of the main script and therefore not inside the Birds.py module or am I doing something else wrong?
Answer to my question can be found in @jonrsharpe 's comment.Each individual file must be valid on its own, defining all  appropriate imports. init.py is for aggregating multiple files in  a directory into a single module; think of it as grouping and passing  attributes up to the parent, not down to the other files in that  directory.


Answer URL
https://docs.python.org/3/tutorial/modules.html
