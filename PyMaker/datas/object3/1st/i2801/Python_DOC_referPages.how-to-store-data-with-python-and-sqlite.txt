Natural Text
This question already has an answer here:Sqlite insert query not working with python?                    2 answers                The following code should be a simple user registration.database.dbviews.pyError:sqlite3.OperationalError: no such table: accounts
sqlite3 library implicitly carries out transaction management when the isolation_level isn't configured. The default being that statements that modify the database are implicitly managed in a transaction.In this mode, you need to commit modifications to the database after executing an operation.commitThis method commits the current transaction. If you don’t call this method, anything you did since the last call to commit() is not visible from other database connections. If you wonder why you don’t see the data you’ve written to the database, please check you didn’t forget to call this method.If you want to turn off this behaviour and have data written immediately an operation is executed, you can set isolation_level to None when establishing a connection to the database.There is some documentation on the available options to controlling transactions.Note that while (connection.execute works)[https://docs.python.org/3/library/sqlite3.html#using-shortcut-methods] as a shortcut to execute operations in the database, it creates a cursor implicitly. I tend to prefer explicitly making a cursor from the connection and using it for database operations.


Answer URL
https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.commit
https://docs.python.org/3/library/sqlite3.html#controlling-transactions
https://docs.python.org/3/library/sqlite3.html#using-shortcut-methods]
