Natural Text
I am struggling with database relationships and Django, but have simplified my case drastically in order to get to the point.I have the following class:If I do not instantiate Car, but set nissan to None and then call get_owner, I get the following error:Is it possible to return None when calling nissan.get_owner() if nissan is None?The bigger picture: I am writing a Django templatetag that returns some data based on whether database relationships exist. It would be nice to write such code one one line though. In the end, I just want to get the value from get_owner() or get None.Is not working here...
Short answer: no, you should not be able to call methods on None objects, I believe you're misunderstanding how object creation works. If you just want to return a None value, then don't assign it in the first place. The correct way to declare an unitialized attribute would be:And to use it:Also note that get methods are frowned upon in Python, just access the attribute directly.Now for the big picture - after having clarified how object creation works, you could test whether the object is not null before using it:
getattr() should help you.Also, you don't need get_owner() method -- python way is to access the property directly. Find about property() to get a direction.Cheers!
Looking at your bigger picture directly, normal python logic operators can help you with this, the and stops at the first False. So this works just fine:
If Nissan is None, it has no method named "get_owner", meaning you can not call this method on a nissan object (or any method for that case). you need to make nissan a car, and then decide in which circumstances will the get_owner method return none, and implement that in your code


Answer URL
https://docs.python.org/3/library/functions.html?highlight=builtin%20functions#getattr
https://docs.python.org/3/library/functions.html?highlight=builtin%20functions#property
