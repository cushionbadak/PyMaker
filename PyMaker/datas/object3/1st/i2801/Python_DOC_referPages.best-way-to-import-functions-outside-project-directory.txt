Natural Text
My project has the following structure:Suppose test.py imports functions from modules fun1.py and fun2.py, so it containsHowever, when I try to import test.py outside my project directory I get the following error:I can fix this by specifying the whole path to fun1.py and fun2.py in my imports.But again, suppose I don't have only to import funA() and funB + I have a whole bunch of modules other than test.py that also imports functions from each other. So it would take a huge amount of time specify the path for every import (more than 200 imports made like this).Is there a cleaner way to make these imports besides specifying the whole path for all of them?I tried making these imports on my __init__.py, but due to my inexperience, I'm still unable to make it work.FILESfun1.pyfun2.pytest.py
If I understand correctly, you want to have a file outside mylib that looks likeFirst, it seems that you need the relative imports everywhere inside mylib. Second, you need to use your __init__.py to import everything from the local directory and make it available in the directory above. I would change (minimally) your files as follows, adding some more files to test the imports.Directory structure:fun2.py__init__.pytest.pyscriptA.pyscriptB.pyscript_test.pyYou can now use script A, B, or _test as your needs require. This pattern extends to deeper directory structures as you continue to use the relative import with . in the __init__.py at each directory level.
You need to import modules/functions where you need them. There is no magic way for python to know that you have imported something. There are different ways to import needed modules/functions (https://docs.python.org/3/reference/import.html), but what I've found most useful is to import modules and then later use module name with dot syntax to call functions, so something like:just an example. But you can see a general idea. (from . import func1 will import func1 from current directory/module)
Based on my understanding, you are trying to import modules that are in some other project location. Try this and replace path with the location from where you want to import modules. Please let me know if I misunderstood your question.


Answer URL
https://docs.python.org/3/reference/import.html
