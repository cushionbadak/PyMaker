Natural Text
I am fairly new to Python and not really sure where to start on this, so please forgive the poor directions. Say I've got a dictionary: How would I go about splitting that to create:
First, make sure you don't shadow built-in class names. Here you're using a capital D, but it's close enough to be confusing.There are various ways to approach the problem, but each will involve splitting your string value in your input dictionary.You can extract the only value, split it via str.split, then use dict + zip to link a list of keys with values:There are other ways, e.g. via explicitly defining dictionary keys within the {} constructor, or via a dictionary comprehension. The above solution is generic and minimises repeated references.
Assuming you want to do this for more than one person, you could store each person as a dictionary like Dicts in a list. This function should do the splitting by spaces and also allows for cases where someone doesn't have a title, i.e., just a first and last name.Then,Or more generally:
It's about splitting a string, not a dictionary key itself. The key's value is of the type string. So this can be done with str.split().But you will run into trouble if you cannot split it to three parts, then you have to go deeper and write your own function which also handles more or less spaces in the text (see also update at the end).But this should serve as a starting point as requested. Also interesting could be str.partition() or using a regex.Update:Here is a solution if you have either 3 name parts or 2 or even 1 without getting into trouble if you have names without title or without title and first name:zip()-like built-in function filling unequal lengths from left with None valueIt's not the ultimate solution to all name variants (extra name parts, other permutation etc.) which would be very hard to solve without false positives.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
https://docs.python.org/3/library/stdtypes.html#str.partition
https://docs.python.org/3/library/re.html
