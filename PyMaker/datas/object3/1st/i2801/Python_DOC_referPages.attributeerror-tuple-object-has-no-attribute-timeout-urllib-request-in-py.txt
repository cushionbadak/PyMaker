Natural Text
I am using urllib to make a request and get some data returned:I don't run into any problems until here:then:At this point I get an error thrown - AttributeError: 'tuple' object has no attribute 'timeout'. I understand that it returning an immutable tuple because of the way I formatted the params variable. My question is, how do I get around it, so that I can start looking at my results?As requested, here is the Traceback:
The core problem is that this code doesn't make any sense:urlretrieve makes the network request for you, saves the result in a local file, then returns "a tuple (filename, headers)".You're trying to pass that (filename, headers) pair to urlopen. But urlopen doesn't know what to do with that; it wants either a URL string or a Request object, and a (filename, headers) pair is neither of those.Also, it's not clear what you'd even want it to do. You already fetched the request and saved the result in a file. Why would you want to fetch the same request again?The simple answer is to just not use urlretrieve if you don't want it. (Especially since it's deprecated anyway…) Just do this:Also, notice that I saved the result of urlopen in a variable. If you don't do that, you're just making a request and throwing away the response, which isn't very useful. And jsonResult = json.load(response) would have given you a NameError, because you never created anything named response.However, there are still (at least) two other problems with your code.First, as the docs for urlencode say:If the resultant string is to be used as a data for POST … then it should be encoded to bytes, otherwise it would result in a TypeError.But you're not doing that.Second, if you want to send url-encoded data as your POST body, you need to manually set the Content-Type header to say so.Some servers will guess correctly even if you get this wrong, but that's really not something you should rely on.Finally, all of this would be a whole lot easier if you just did what the top of the urllib.request docs suggest:See also: The Requests package is recommended for a higher-level HTTP client interface.With Requests, this whole thing becomes:


Answer URL
https://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve
https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode
https://docs.python.org/3/library/urllib.request.html
