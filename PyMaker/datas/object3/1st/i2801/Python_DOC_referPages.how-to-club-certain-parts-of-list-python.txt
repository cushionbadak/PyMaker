Natural Text
I have a sample list of strings:And I want to club every three elements together, like:
Just split into chunks and join:
You can solve this by iterating using a step, in this case 3 steps, and adding the individual strings under each step, i.e., my_list[i], my_list[i+1]. my_list[i+2 ]. Note that you need to add a space after each first and second string. This piece of code does that:The output is as expected: 
A couple of solutions using itertools are possible.Using groupby:Using tee and zip_longest:Using just zip_longest:The last two are adapted from the pairwise and grouper recipes in the documentation. Only the first option won't add extra spaces at the end of your last group if the aren't a multiple of 3 words.
Option 1: This solution drop elements if my_list length is not divisible by 3input string: ['hello','this','is','a','sample','list', 'thanks', 'for', 'help', 'foo']result: ['hello this is', 'a sample list', 'thanks for help']how python iter trick works: How does zip(*[iter(s)]*n) work in Python?Option 2: keep extra element with zip_longestinput string: ['hello','this','is','a','sample','list', 'thanks', 'for', 'help', 'foo']result: ['hello this is', 'a sample list', 'thanks for help', 'foo  ']


Answer URL
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/itertools.html#itertools.tee
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
https://docs.python.org/3/library/itertools.html#itertools-recipes
