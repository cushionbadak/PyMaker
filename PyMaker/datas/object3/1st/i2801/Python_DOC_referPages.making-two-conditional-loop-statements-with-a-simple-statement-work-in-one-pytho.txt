Natural Text
This is a python grammar question.Why is it not possible to run if test: for list: one-statement in one line in python? e.g.:I understand that it'd be an issue with indentation should there be 2+ statements to follow, but one statement creates no ambiguity. Am I wrong?Splitting the one-liner works, as it disambiguates it:Looking at the python grammar we have:Won't something like the following change to if_stmt allow for such simple nested statements in one line?Besides the change to if_stmt I defined a new token simple_for_stmt.Of course this is just for the for statement, but it could be adjusted for while and others.I understand, of course, that perhaps keeping things simple is the best approach in python land - add the damn new line!note: this is not a help-me-make-my-code-run question. The code example is just to demonstrate the issue, it doesn't need to be fixed/improved. So please refrain from suggesting how the example code can be rewritten in a different way. Thank you.I'm using python 3.6.6.
I think the the solution you propose is a hint as to why it was never implemented. The change would add a lot of complexity to the grammar with very little real benefit. A few simple statements could be shoe-horned into a single line, but the change would create a number of confusing edge cases.The Python docs explicitly say thatmust be illegal because it would not be clear which if a following else clause belonged to. (Obviously, an arbitrary decision could be implemented, but that would still cause confusion for readers of the code.) This argument also applies to for statements (and other compound statements) because in Python a for statement can also have an else clause.
The problem is not the if statement, it is the for statement.What you want to want can be do as follows


Answer URL
https://docs.python.org/3/reference/grammar.html
https://docs.python.org/3/reference/compound_stmts.html
