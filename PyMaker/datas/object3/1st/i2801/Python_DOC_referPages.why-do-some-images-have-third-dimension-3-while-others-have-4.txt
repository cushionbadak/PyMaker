Natural Text
I don't have much knowledge of image processing. I am trying to implement a ConvNet. I downloaded some images as data set and made their  height and width equal. Then I tried loading them into np.array by this code:But it gave me error that cannot broadcast (420,310) to (420,310,3). Then I printed the shape of array, some were (420,310,3) others (410,320,4). Why is so? And how can I change that to fit it in array? 
ProblemSo basically what is happening over here is you are playing with three different formats of images (at least those that appear in your question). They are respectively:RGB (of dimension(420, 310, 3)), three channelsRGB-A (of dimension(420, 310, 4)), four channelsGrayscale  (of dimension(420, 310)), single channelThe third dimension that you are seeing is what represents the number of channels in your image (the first two being the height and width respectively).An example will further clear it up. I downloaded random images from the internet each belonging to one of the three formats mentioned above.RGB image dog.pngRGB-A image fish.pngGrayscale image lena.pngHere's a python script to load each of them using PIL and display their shape:And here is the output:Hence, when you are trying to iteratively assign all the images to an array (np.array), you are getting the shape mis-match error. SolutionThe easiest way to resolve this is to convert all the images to one particular format before saving it in the array. Assuming you will be using a pre-trained ImageNet model, we will convert them to RGB format (you can similarly choose a format of your choice also).We will convert RGB-A to RGB using the following code:Output is:Similarly you can do for all your images, and then you have a consistent number of channels (three in this case) for all your images.NOTE: In my example, the spatial dimensions vary for the images also. In your case that is not an issue as all are of consistent dimension (420, 310).Hope this clarifies your doubt.


Answer URL
https://docs.python.org/3/library/glob.html#glob.glob
