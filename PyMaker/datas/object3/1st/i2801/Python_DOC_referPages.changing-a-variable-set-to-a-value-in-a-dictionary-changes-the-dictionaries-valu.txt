Natural Text
I have a dictionary with integers as keys, the values are all integers inside a list. I set a variable to be equal to one of the values but if I subtract one from an integer in the list in the variable, it also subtracts one from the integer in the list in the value in the dictionary.This prints outwhen it should be printing outas I never changed the value inside the dictionary, only the variable.Why does this happen and is there a way to make it print out {1: [10]} while also changing the variable?
Though you changed the value of the JSON object, you have not overwritten the value in JSON.Now the output will be {1: [9]}Cheers!
Turns out that the list inside the dictionary is one value and both the dictionary and the variable refer to that value. The dictionary and variable are only ways for the program to refer to that value. You have to go through the dictionary or variable to change the value and once changed, both the dictionary and the variable still refer to that value.I change the value by subtracting one from it by going through the variable.I then access the same value when I go through the dictionary.This means that the dictionary is accessing the value that was changed by the variable. There is only one value throughout this program.I can also change the code toThis sets variable0 to a new value that is the same as the value in the dictionary. These are two different values that equal the same thing, changing one won't change the other unlike before.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-assignment_stmt
