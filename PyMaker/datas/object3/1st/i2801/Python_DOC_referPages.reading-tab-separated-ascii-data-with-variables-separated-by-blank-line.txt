Natural Text
I have an annoying dataset I need to modify with python that is in ASCII, with a 6 line header and then a bunch of lines of data (2 million lines). The format is like this:The first 6 lines are the header info, then there's a huge block of values for one variable, then a line break, and then the values for the next variable.I need to modify one of the variables in the data file, but not the other (the modification is as simple as adding an integer to each value), but I'm struggling trying to figure out how to read in this file with each block of data as one array or list of values in python. Most of the resources I've found online assumes each column is a separate variable. Is there a quick and easy way to do this in python? I figured I'd check here first before doing things the hard way myself.Thanks! 
Generators are often a good solution for managing complicated iteration.This generator reads the data file, skips the first six header lines, then outputs a list of the values in each block, assuming that the blocks are separated by empty lines.This generator outputs the values as strings, as it's not clear how -6.32/411 ought to be handled; it's not difficult modify the generator to produce the types that you want.Output:
A pure Python method that assumes the data file is .txt: This results in an array of the first block only, with each variable being its own element:The line:uses 6 and 11 to define the range of lines in which the first block occurs - this would be fairly easy to alter if the pattern of data blocks is entirely continuous all the way until the end of the file. You could read a block, alter the block, read the next block, alter that and so on and so forth.There are far more efficient methods (see aydow's answer), however this method is pure python and has no external dependencies at all. It's a matter of preference if you're not too concerned about efficiency. 


Answer URL
https://docs.python.org/3/tutorial/classes.html#generators
