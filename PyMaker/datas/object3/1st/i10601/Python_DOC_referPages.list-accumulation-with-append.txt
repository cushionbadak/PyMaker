Natural Text
I want to generate or return an append-accumulated list from a given list (or iterator). For a list like [1, 2, 3, 4], I would like to get, [1], [1, 2], [1, 2, 3] and [1, 2, 3, 4]. Like so:This works but is there an operation I could use with itertools.accumulate to facilitate this? (I'm on Python2 but the pure-python implementation/equivalent has been provided in the docs.)Another problem I have with my_accumulate is that it doesn't work well with list(), it outputs the entire some_list for each element in the list:Option 1:I wrote my own appending accumulator function to use with itertools.accumulate but considering the LoC and final useful-ness, it seems like a waste of effort, with my_accumulate being more useful, (though may fail in case of empty iterables and consumes more memory since grow keeps growing):(and the first returned elem is not a list, just a single item)Option 2: Figured it would be easier to just do incremental slicing but using the ugly iterate over list length method:
The easiest way to use accumulate is to make each item in the iterable a list with a single item and then the default function works as expected:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
