Natural Text
I'm really beginner in Python, so please forgive me if this is something obvious. I have an enum class, and I want to be able to compare the members. Below code seems to do what I want ( but not how I want )Now my question is how to code the comparison operator __le__ so that I can run the below code instead? 
Enum subclasses are somewhat special in that all enumeration values become instances of the class (with a few tweaks). This does mean you can 'just' define a normal method on the Enum subclass and they'll be available on each enumeration value.This applies to special methods like object.__le__() too; just define it as a regular method, not a classmethod:Note that I used the instance attribute .value, just like you can do AB.a.value.You could also use the IntEnum class; that makes each enumeration value a subclass of int, and they can be compared naturally:Demo:and using IntEnum as the base:
The  __le__ method should be called as a member function of the LHS operand and takes the RHS operand as its parameter.However it's not clear from your code which member variables of an AB object should be used in the comparison, so I can't really write the code for you.Roughly it should look something like:
Thanks to @Rawing and @machine yearning,


Answer URL
https://docs.python.org/3/library/enum.html#programmatic-access-to-enumeration-members-and-their-attributes
https://docs.python.org/3/library/enum.html#intenum
