Natural Text
I'm trying to write many JSON files to a CSV file. Each JSON file has several keys, but different files have different keys. Here are three JSON files as an example.file A:file B: file C:I'd like one CSV file like this with four columns and three rows (commas omitted for simplicity):One way to do this is by multiple try/except statements using csv writer. But that becomes infeasible as I am dealing with a large number of keys. Are there any alternatives?
You can append each JSON file to a list and then create dataframes and concatenate.
Assuming you know all the possible field names ahead of time csv.DictWriter already comes with a solution for this, use the restval argument to the constructor:If the row read has fewer fields than the fieldnames sequence, the  remaining keys take the value of the optional restval parameter.so specifying csv.DictWriter(..., restval=" ") would replace any missing values with a single space although by default restval is set to "" (an empty string) which will probably be more useful to you anyway.so basically your code would look like this:
You could load each individual dictionary with the missing keys and give them null values. So it might look like thisNow that each dictionary has the same keys, you should be able to write the csv easily in the format you want.
This works :


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
