Natural Text
This question already has an answer here:Why does this code raise csv.Error?                    1 answer                This is my code:How can I solve this issue? I think I need to change quoting to None and quote character to '"'. Am I going in the right direction?This is the complete traceback:The reason for writing to csv in if: else: is because I have to write multiple dataframes to the same file. I am using a count to check whether its the first write or not. 
The option quoting=3 is equivalent to quoting=csv.QUOTE_NONE. It is an instruction never to quote fields. If any of the fields contain the delimiter (a comma) then the comma will have to be escaped. However there is no escapechar set, and this raises an error. Documentation for csv quote constantsYou can set an escapechar df.to_csv(f,index=False, quoting=3, escapechar=r'\') for example, to use a backslash to escape any commas that appear, or you can use a different value for quoting. quoting=csv.QUOTE_MINIMAL (or quoting=0) will use quotes around only those fields that require them.To give a concrete example, suppose you have a dataframe with two rows and two columns:As a csv file with quoting=0 you get (quote marks used around the field containing a comma)With quoting=3, escapechar=r"\" you get: ("\" used to escape the comma)But with quoting=3 and no escapechar you get an error.The best solution would be to use quoting=0


Answer URL
https://docs.python.org/3/library/csv.html#csv.QUOTE_ALL
