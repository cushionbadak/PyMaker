Natural Text
Suppose I have the list f=[1,2,3] and index i -- I want to iterate over f, excluding i. Is there a way I can use i to split the list, something like f[:i:], where I would be given a new list of [1,3] when ran with i=1?Code I'm trying to fit this into:
Use enumerate() in order to have access to index at iteration time.In this case you can escape the intended index or if you have a set of indices you can check the membership with in:If you want to remove an item in a certain index you can use del statement:If you want to create a new list by removing that item and preserve teh main list you can use a simple slicing:
iterate y over the index:
Probably not the most elegant solution, but this might work:prints:
Well, it may seem scary but that's a one-liner that does the work:If you look at it slowly, it's not so complicated:The itertools.combination give all the possible options to the len(f)-1 combination:You wrap it with zip and reversed(f) so you can get each combination together with the missing value:Then you convert l to a numpy.array so you can add the missing value:And finaly you use itertools.chain to get the desired result.


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
