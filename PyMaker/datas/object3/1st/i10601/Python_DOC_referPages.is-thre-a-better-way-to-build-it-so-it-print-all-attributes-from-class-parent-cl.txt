Natural Text
I have a Student class extending Person class, both class implemented __str__ to list out all attributes in both Person and Student class. However, I am having issues with trying to do a print of __str__ in the __init__ function as below. When I execute the followingit would produce something like:When initializing Student, it's calling Student.__str__(self), and subsequently call Person.__str__(self) in order to bring back the name. Just wondering if there's a better way to build the the structure so it's more usable and inline with the OO concept. The result that I want is when I do the __str__ for both Student or Person, it would list out all attributes, such as:and when I do something like print Cameron, it would still give me I know my code is duplicating it at the moment, but I can't figure out a way to make it work the way I intended... Help please. 
You may use the getmembers function of inspect module to get the all the members of the class dynamically. Generic function to return attributes based on passed class or class's object can be define as:Now the demonstration, on HOW this will work:
Yes there is. Use super which calls "parent's" function realization. I'm quoting parent because it is little different than in other programming languages. There is awesome presentation by Raymond Hettinger on Pycon 2015 https://www.youtube.com/watch?v=EiOglTERPEo.Here as you see when we need to call method of current class we just do self.method(), but if we need to call parent method we do super().method()And i would suggest using format for string formating because it is more clear and readable.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.getmembers
