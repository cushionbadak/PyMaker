Natural Text
How can I sort an adjacency list in python that is store as a dictionary?I would like each row to be sorted by the floating point number.This is how the values were added but with a loop and reading from stdin rather than manually:I understand I have to use sorted() and I've tried stuff like this:oror
sorted returns a new sorted list given an iterable. If you want to sort in-place, use list.sort():The key=itemgetter(1) makes sure it is sorted on the second element of the tuple, alternatively you could also write key=lambda x: x[1].If you want to sort in decreasing order instead, use key=itemgetter(1), reverse=True.
Here's a working example:
You can use list.sort() with a key function. Since you want to sort by the second element of each tuple, the key function must select the second item (t[1] below) from each tuple, t:list.sort() will sort the list in place no rebinding of variables is required.


Answer URL
https://docs.python.org/3/library/functions.html#sorted
https://docs.python.org/3/library/stdtypes.html?highlight=sort#list.sort
https://docs.python.org/3/library/stdtypes.html?highlight=sort#list.sort
