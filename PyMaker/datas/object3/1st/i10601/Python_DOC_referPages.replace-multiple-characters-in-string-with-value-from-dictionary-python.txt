Natural Text
I'm trying to create a function that iterates through a string, finds characters that match to keys in a dictionary and replaces that character with the value in the dictionary for that key. However it currently only replaces first occurrence of a letter that is in the dictionary and stops there, where am I going wrong? 
You are prematurely ending your code with the call to return within the for loop. You can fix it by storing your new string outside of the loop, only returning once the loop is done:There is something wrong about the logic too, though. If you have a value in your dictionary that is also a key in the dictionary, the key may get replaced twice. For example, if you have d = {'I': 'i', 'i': 'a'}, and the input is Ii, your output would be aa.Here's a much more concise implementation using join that does not have this problem.
Your return statement is within the if statement, so if a character matches, your function replaces that single character and then returns.If you want all of your characters replaced, let it iterate through all characters of the string by moving your return statement outside of the for loop.
One liner -> print ''.join(d[c] if c in d else c for c in s)Sample Output:
As zachyee pointed out, your return statement is inside the loop.You may want to take a look at str.translate, which does exactly what you want:Note the use of str.maketrans that transforms your dict in something that string.translate can use. This method is however limited to mappings of single characters.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
