Natural Text
This question already has an answer here:How can I extract keywords from a Python format string?                    4 answers                How can I retrieve the expected format key name from a string?Lets say I have:If I input the wrong key name python throws a KeyError showing the expected name.Is there a way to test for this without regex or (ugh) purposely throwing the KeyError? I've looked over the string documentation but nothing jumped out at me.Edit 1:I do not want to suppress the error, nor do I want to silently fill it with None/empty string. I want to use the expected keyname to properly format the string.I could rework it upstream by mapping the strings to the keyname in a dict, but was hoping to avoid that if there is a way to find this after the fact.Regex would be a good solution, but at this point I am just curious more than anything.
You can use Formatter.parse like that:
Listen, this is a very nice question,and it made me busy for the last 5 minutes or soHere is a function I wrote to do the job.No regex, but yes exceptions. Here it goes:It returns a list of all the keys inside the string.
To find the keyname you would need to wrap it in a try/except clause.Edit: Another method could be to find the curly brackets within the string and use a slice to locate your keyname. The example below only finds the first instance of a keyname but could easily be modified to find additional keys.


Answer URL
https://docs.python.org/3/library/string.html#string.Formatter.parse
