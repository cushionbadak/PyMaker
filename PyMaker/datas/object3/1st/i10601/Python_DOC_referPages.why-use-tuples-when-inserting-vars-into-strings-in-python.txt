Natural Text
I feel like this would have been asked before, but could not find anything.In python, if you want to insert a var into a string, there are (at least) two ways of doing so.Using the + operatorAnd using a tupleWhy would one use the tuple method over using +? The tuple format seems a lot more obfuscated. Does it provide an advantage in some cases?The only advantage I can think of is you don't have to cast types with the latter method, you can use %s to refer to a, where a = 42, and it will just print it as a string, as opposed to using str(a). Still that hardly seems like a significant reason to sacrifice readability.
The string % (value, value, ..) syntax is called a string formatting operation, and you can also apply a dictionary, it is not limited to just tuples. These days you'd actually want to use the newer str.format() method as it expands on the offered functionality.String formatting is about much more than just inserting strings in-between other strings. You'd use it becauseyou can configure each interpolation, based on the type of object you are trying to insert into the string. You can configure how floating point numbers are formatted, how dates are formatted (with str.format()), etc.you can adjust how the values are padded or aligned; you could create columns with values all neatly right-aligned in fixed-width columns, for example.especially with str.format(), the various aspects you can control can either be hardcoded in the string template, or taken from additional variables (the older % string formatting operation only allows for field width and numeric precision can be made dynamic).you can define and store the string templates independently, applying values you want to interpolate separately:What fields are available can be larger than what you actually use in the template.it can be faster; each + string concatenation has to create a new string object. Add up enough + concatenations and you end up creating a lot of new string objects that are then discarded again. String formatting only has to create one final output string.string formatting is actually far more readable than using concatenation, as well as being more maintainable. Try to use + or string formatting on a multiline string with half a dozen different values to be interpolated. Compare:withNow imagine having to re-arrange the fields, add some extra text and a few new fields. Would you rather do that in the first or second example?
For a lot of reasons. One good reason is that not always you can or want to use separated strings, because they are already neatly arranged in a list or tuple:


Answer URL
https://docs.python.org/3/library/string.html#formatstrings
