Natural Text
I have written a Python class for parsing a specialized text format. As indicated the parser can be modified with the modifyParser method - but in most cases I will just use the Parser instance as it comes from the Parser.__init__(). I would like to be able to do this:This requires that the parseFile( ) method can be called both as an instance method - with a self - and as a classmethod. Is this possible? Bad form?
If I were you, I'd offer two distinct functions:mymodule.Parser().parseFile() (instance method), andmymodule.parseFile() (module-level function that uses the default instance).This is what happens for example with the standard json module, where you have json.JSONDecoder().decode() and json.loads(). Offering two distinct functions makes the code less ambiguous, more explicit and more predictable (in my opinion).However, yes: what you want to do is possible. You have to implement your own descriptor using __get__. Here's an example:
You'll have to use two separate names. In python due to it's dynamic nature there's no operator overloading as in C++, when one function has same name with different arguments.When you say def in your script, you tell Python "set the following object(function object) to this name". So in your code you just redefine the name to reference classmethod and your instance method function object is lost.Solution: use different names for instace method and class method.


Answer URL
https://docs.python.org/3/library/json.html
https://docs.python.org/3/howto/descriptor.html
