Natural Text
In the Python Queue documentation, there is the following example:I'm just wondering if this is the right approach, since it seems that the worker threads will never terminate. I think they'll become zombies in the end. Is it an issue that Python doc overlooked? Thanks.
It depends on what exactly your threads are doing and if they should be allowed to be terminated in the middle of doing one of their jobs.Since you're using daemon = True the child threads should be killed when your parent ends. (More info in the docs here)On the other hand, if you want to do a bit cleaner of a cleanup, you should probably not use while True and instead use while not parent_said_stop, removing the daemon = True. Then depending on how you stop the parent (whether it be through some key click, an interrupt, or whatever else not), you can catch the fact that the parent is stopping and have the message be sent to the children. (Ways of doing things when the process ends can be seen here)


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.daemon
https://docs.python.org/3/library/threading.html#thread-objects
