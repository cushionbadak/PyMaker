Natural Text
I'm learning how to write tests with py.test, but I can't get idea how to mock external calls.Let say I have a code for testing:app.py:And I want to be sure I check case for random.choice deciding I need to buy (and I want to check it properly join strings for 'buy' case).my test code should look like this:What should be in 'some mock magic' to make this test passing every time? Thanks!
That can be done with the library mock, which is included into standard library since Python 3.3.First, with a context manager:The same with a decorator:The library also allows making assertions regarding mock calls and irreplaceable for unit testing. Alternatively, some people prefer explicit dependency inversion, which means passing the function random.choice into your code as a function/method/constructor argument and replacing it with a mock in a test.
You could use the 'patch' decorator to mock external calls:http://www.voidspace.org.uk/python/mock/patch.htmlE.g. you could mock the 'random.choice' withThe key is where to patch:http://www.voidspace.org.uk/python/mock/patch.html#id1


Answer URL
https://docs.python.org/3/library/unittest.mock.html
