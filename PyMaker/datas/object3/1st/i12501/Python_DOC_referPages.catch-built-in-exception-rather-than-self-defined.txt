Natural Text
I want to patch a library to catch the built-in ConnectionError (which inherits from OSError).So far so good. As it happens, the library has a "self-defined" Exception that is also called ConnectionError:I guess, if I now tried to catch a ConnectionError, doing something likeI would only catch the self-defined ConnectionError, which inherits from LibraryError. (Disclaimer: I have to admit, I haven't tested that myself, as I didn't know how).How would I get Python to catch the built-in ConnectionError?
Use the builtins module, the explicit name for the namespace where built-in names like int and ConnectionError live.In Python 2, this would be __builtin__, although Python 2 doesn't have ConnectionError. Note that __builtins__ is its own weird thing; even if it looks like what you want, it's not.If you want code that works in both Python 2 and Python 3... well, the exception hierarchy looks pretty different in Python 2, and ConnectionError doesn't even exist, so it's not as simple as deciding whether to use builtins or __builtin__. The builtins/__builtin__ thing is easy enough to solve, at least.To import the right module depending on Python version, you can catch the ImportError and import the other module:Pretending for a moment that Python 2 has ConnectionError, you could save a reference to the built-in ConnectionError before shadowing the name:
Use the the ConnectionError defined along with the other exceptions in the builtins library:


Answer URL
https://docs.python.org/3/library/exceptions.html#ConnectionError
https://docs.python.org/3/library/builtins.html
https://docs.python.org/3/library/exceptions.html#ConnectionError
https://docs.python.org/3/library/builtins.html
