Natural Text
Suppose we have a list of terms:termList = ["A", "A", "B", "C", "C", "C", "E"]Now, suppose we have another list, containing more lists:otherList = [["A, "E"], ["A", "B", "C", "C"], ["B", "B"], ["A", "C"]]What I would like to do is for each index of otherList, check the sum of each of its terms plus those of all previous indices to see that the total amount of each term has not exceeded that in termList.For example:Iteration 1: A (1), E (1)Iteration 2: A (2), B (1), C (2), E (1)Iteration 3: Finds that there are three instances of B. This is more than the one instance that is present in termList so the loop ends.I am stuck on how to do this without nesting a million loops. I'm thinking we can use a combination of a generator expression, all, and sum but can't quite figure out how to add all the previous terms and also check that all sums are valid.
Counters would work for you and you can add them together:Output:
Is this homework?  One way to do this would involve two dictionaries.  Iterate over the first list and increment the dictionary value by 1 for each instance.  Output for your example would be:  { 'A' : 2, 'B' : 1, 'C': 3, 'E' : 1 }.  Next iterate over each list inside other list and do the same thing with a separate dictionary.  Output would be:  { 'A' : 3, 'E' : 1, 'B' : 3, 'C' : 3 }Now compare your lists (or do it while you iterate over the second list).  You'll probably also want to use a defaultdict for your dictionaries to return 0 as the default value.  This saves you the annoyance of having to account for key errors.Also it's not exactly clear what you mean by previous in this sentence.check the sum of each of its terms plus those of all previous indices to see that the total amount of each term has not exceeded that in termList.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
