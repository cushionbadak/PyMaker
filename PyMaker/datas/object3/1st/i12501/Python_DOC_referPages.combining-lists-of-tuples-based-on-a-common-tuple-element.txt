Natural Text
Consider two lists of tuples:Where len(data1) == len(data2)Each tuple contains two elements:list of some strings (i.e [X1])A common element for data1 and data2: strings 'a', 'b', and so on.I would like to combine them into following:Does anyone know how I can do this?  
You can use zip function and a list comprehension:
@Kasramvd's solution is good if the order is the same among all elements in the data lists. If they are not, it doesn't take that into account.A solution that does, utilizes a defaultdict:In order to get a list of it, simply wrap it in a list() call:
We can do this in a single comprehension expression, using the reduce functionIf the lists are large, so that data1+data2 imposes a severe time or memory penalty, it might be better to pre-compute itThis solution does not rely on all "keys" occurring in both lists, or the order being the same.If returned order is important, we can even doto ensure that the order is the same as in the original lists.  Again, pre-computing data1+data2 gives


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/functions.html#func-list
