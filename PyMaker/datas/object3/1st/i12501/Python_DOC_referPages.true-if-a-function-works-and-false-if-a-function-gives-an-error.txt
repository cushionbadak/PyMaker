Natural Text
Is there any way in python (built-in function or something) to check if a function execution fails due to an error or works? And return either true or false depending on the case it isExample of what I would expect to happen:Builtin method example: iserror
There is no such function. You couldn't build a function that does what you ask for, because by the time Python calls iserror(), the float('123') or float('as1f') expression has already been executed; if an exception is raised there, iserror() is never executed.You'd have to delegate calling to the function:then use it like this:Catching all errors is not that great an idea however. Although the above function tries to do the right thing by catching Exception (and thus avoids catching SystemExit or KeyboardInterrupt), it will catch MemoryError, which indicates you ran out of memory, not that the arguments to the function you tested were wrong!Always try to catch specific exceptions; you could extend iserror() to take a specific exception:then only catch ValueError to test your float() calls:This is no longer all that readable. I'd just stick with a simple inline try..except wherever you want to use a function call that could raise an exception, because then you can tailor your response to the specific exception without having to repeat yourself to handle the result after you determined there won't be an error:
While there is no such function for the general case, there is one that solves your particular problem:returns Truewhile returns False


Answer URL
https://docs.python.org/3/tutorial/errors.html
