Natural Text
I'm just trying to put together a simple RPG example in order to learn OOP in Python.I created a base class CharRace(object).  Then I created two derived classes from this, Elf(CharRace) and Dwarf(CharRace).  In addition, I have a second base class CharClass(object), with two derived classes: Wizard(CharClass) and Warrior(CharClass).  What I'd like to be able to do is create a new class called NewChar, that I can pass a name, a race, and a class, and it will create the appropriate object that inherits all the properties of both the race and the class.  For example, I want to created a class instance of NewChar with something like this:Player1 = NewChar("Bob", Elf, Wizard)Player2 = NewChar("Phil", Dwarf, Warrior)I sure there's a smart / correct / scalable way to do this, or perhaps my classes should be organized differently, but I'm having trouble finding it.  Any help or advice is appreciated!
What I'd like to be able to do is create a new class called NewChar, that I can pass a name, a race, and a class, and it will create the appropriate object that inherits all the properties of both the race and the class. If you really want to use this approach, you might try something like this:Here is a good discussion on the type function, and metaclasses, which you can use to fine-tune this even further.That said, this really isn't the best approach. Prefer composition to inheritance. What if your character changes class, or you want to dual class? You can try something like this instead:Check out the book Design Patterns: Elements of Reusable Object-Oriented Software or Head First Design Patterns to learn more.


Answer URL
https://docs.python.org/3/library/functions.html?highlight=type#type
