Natural Text
im making a login system in python that gets the username then checks a line on a text file then it checks the next line until it finds it then checks the same line on a second file (password file) and confirms the password with the username. when i try to log into an account i made it continually loops till it breaks itself. the variable it cant find is line in the checkusername functionif you want to run this file you need to have a user text file and a password text file in the same folder the program is. any help is appreciated
I see the following problems with your code:Unnecessary use of recursion: this maybe is not a problem now, but python have a limit of how much you can do recursive calls, to avoid hit that limit change all yours functions to use loops.read/readline/readlines: Looks to me that you are under the impression that when you do consecutive reads in the file you always get the same result, but that is not the case, when you do u.read() the first time you get the whole content of the file, no mystery there, but if you do u.read() again you get nothing that is because internally a file object have a read pointer that indicate where it is in the file, you can think of it as the palpitating | in a text editor when you do a read of any kind that pointer move according to kind of read you do, if it is readline it move to the next line but if its read or readlines it move to the end of the file and what you get from the operation is everything in between the previous position and the new position. But don't worry there is a way to tell it where to put say pointer with the seek method, to return to the start do u.seek(0) before any read to always get the same result from yours reads.readline(N)/readlines(N): in the same way as before you may think that that give you a particular line in the file but that is no the case take a look a the documentationread(size=-1)   Read and return at most size characters from the stream as a single str. If size is negative or None, reads until EOF.readline(size=-1)Read and return one line from the stream. If size is specified, at most size bytes will be read.The line terminator is always b'\n' for binary files; for text files, the newline argument to open() can be used to select the line terminator(s) recognized.readlines(hint=-1)Read and return a list of lines from the stream. hint can be specified to control the number of lines read: no more lines will be read if the total size (in bytes/characters) of all lines so far exceeds hint.Documentation: https://docs.python.org/3/library/io.html#high-level-module-interface 
Tread carefully when using recursion: in your case, the 'line' value is always being set to '1' in the first line of the checkuser() method. This means that it will always read the first line and always call checkuser() again if the user does not match (ad infinitum).It may be better to use a simple loop instead.You may wish to pass 'line' to your checkuser() method instead eg:


Answer URL
https://docs.python.org/3/library/io.html#high-level-module-interface
