Natural Text
I have a problem that when i try to use a global variable inside a method, an error is produced ("local variable 'b' referenced before assignment").Why is this not the case when the variable is an element of a list?this works fine:but this doesn't:
When you try to assign something to b Python does a LOAD_FAST which is in relation to locals. You need to add global b before trying to use b.From the other point of view of:Python instead does a LOAD_GLOBAL which loads in relation to globals. Thus when you did a[0] it first does LOAD_GLOBAL for a and then subsequently stores the value.
The official FAQ page has detailed explanation for this error:This is because when you make an assignment to a variable in a scope, that variable becomes local to that scope and shadows any similarly named variable in the outer scope. Since the last statement in foo assigns a new value to x, the compiler recognizes it as a local variable. Consequently when the earlier print(x) attempts to print the uninitialized local variable and an error results. And for code:It just reads value from and assigns value to the first slot of the global array, so there's no problem.


Answer URL
https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value
