Natural Text
Although I passed "%a %b  %d %H:%M:%S %Z %Y" as the format string in time.strptime(), it is operating on '%a %b %d %H:%M:%S %Y' and therefore causing error. Any idea on what might be causing it?The same thing runs perfectly in python console but not in the actual code.
The value for %Z comes from the tzinfo object attached to the datetime object, but there is no datetime object (and thus no tzinfo either) if you're using strptime() instead of strftime().  Indeed, the only tzinfo objects which come with the standard Python library are the fixed-offset timezone objects, and then only in Python 3.  The standard library does not have a canonical list of these, besides a standard UTC value; instead, you're expected to create them as needed, or use pytz instead.  As a result, the Python standard library has no mechanism for translating arbitrary three-letter codes into timezones.  It should be able to handle 'UTC', some synonyms, and perhaps your local time as returned by your system locale, but that's about it.(Hint: For most people, pytz is the Right Thing to use.)Three-letter codes are not globally unique anyway, so there is no "right" way to do what you're asking for.  You need to have something like an Olson database identifier (e.g. America/New_York is roughly synonymous with Eastern Standard/Daylight Time).
Actualy I just made a very silly mistake the order of parenthesis is wrong in above, it should be like this I was actually passing only time string to time.strptime() leaving the format Sorry for inconvinience caused  


Answer URL
https://docs.python.org/3/library/datetime.html#timezone-objects
