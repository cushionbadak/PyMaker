Natural Text
I'm trying to make a function that counts occurrences of the first letters of a list of strings and returns them as a dictionary. For example:list=["banana","ball", "cat", "hat"]dictionary would look like: {b:2, c:1, h:1}Here is the code I have which iterates but doesn't count properly. That's where I'm getting stuck. How do I update the values to be count?Also, how can I avoid the out of range error given the following format:Also, what do I need to do if the list contains "None" as a value? I need to count None. 
Problem with your code is that you seem to iterate on all letters of the word. letter[0] is a substring of the letter (which is a string).You'd have to do it more simply, no need for a double loop, take each first letter of your words:But once again collections.Counter taking a generator comprehension to extract first letter is the best choice and one-liner (with an added condition to filter out empty strings):c is now a dict: Counter({'b': 2, 'h': 1, 'c': 1})one variant to insert None instead of filtering out empty values would be:
This increases the value of the key by 1 for the already existing key, and if they key has not been found before it creates it with the value 1Alternative:
Also, what do I need to do if the list contains "None" as a value? I  need to count None.removing Nonecount None
you need counter:Now, dct stores the number of times every element in lst occurs. dct = {'b': 2, 'h': 1, 'c': 1}


Answer URL
https://docs.python.org/3/library/collections.html
