Natural Text
For mutable types, such as list, instead of using if else, we can deal with missing key issues like this:which only checks 'key3' in dic only once.But for immutable types, such as integer, we cannot use setdefault() like this:Since setdefault() will return the integer 0 instead of variable dic['key3']I'm not sure how to deal with it elegantly, for example the best I can do is like this:But this code checks 'key3' in dic twice and also use extra memory for dic['key3'] + 1 if 'key3' exists.Any suggestions?
You can use .get(..) to specify a default value, like:.get(key,default=None) performs a lookup on the dictionary. In case it fails to find the key, it will return the default.But I think in this case, you better use a Counter:A counter assumes that if a key is not present in the database, its value is zero.


Answer URL
https://docs.python.org/3/library/collections.html#defaultdict-objects
