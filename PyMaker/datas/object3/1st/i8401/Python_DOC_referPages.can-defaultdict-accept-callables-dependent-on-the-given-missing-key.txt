Natural Text
The examples given in the docs all seem to be the cases where the first callable argument in defaultdict is a "constant" function, like int, list, or lambda: const etc. I don't know if defaultdict is just supposed to take constant functions as its callabe argument, but if not, I want the callable to be dependent on the missing key values I give. For exampleWhat I expect is whenever I give a missing key string, for example 'barr', the container can create a new entry with 'barr' being the key and its length 4 being the value. But it doesn't work. Instead, it gives me the following error:I expected 'barr' to be this lambda's argument here, but it was apparently not the case. So what could have gone wrong?
The default factory is never given any arguments, so you can't do it like that. What you can do, though, is subclass defaultdict and define the __missing__ method:To make it more easily-extendible, you could also take advantage of the default_factory, but give it the key as an argument:
From the docs: If default_factory is not None, it is called without arguments to provide a default value for the given key, this value is inserted in the dictionary for the key, and returned.The defaultdict simply doesn't work the way you are trying to use it. 


Answer URL
https://docs.python.org/3/library/collections.html#defaultdict-examples
