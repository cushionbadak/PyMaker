Natural Text
I have the following string with some text / numbers in it. There is always a () with two numbers in between. These two numbers need to be extracted.The string looks like this:I need a regular expression for solving that. Pseudo code like thissearch s for ( and check if number is next charExtract numbers until ,Extract second number until )I found the following solution from stackoverflowwhich returns: ['4', '4', '34', '54.4433', '-112.3554', '45', '6', '6', '8']So I need to have this expression to only consider numbers between () with something like^( and $(.How is this done exactly?
You could simply use a regex to capture the elements between brackets, and then parse these using .split(',') and float to parse them to floats. Like:This prints:Furthermore here you parse a float. Therefore I think that the parsing will be less error prone: there will be more patterns that can be parsed, and the parsing is probably done correctly.The result of the map(..) is a list. So in case there can be an arbitrary number of values between the brackets, you can use values = map(..) and then process the elements in values.Float patternThe pattern the float(..) constructor can parse is described in the documentation:So the "added" value of using the constructor is that underscores are allowed as well (to separate groups of digits), and furthermore values like infinity, inf and nan are also allowed.
Something like this?Note that this works no matter how many numbers are in each segment, or how they are separated, which is more flexible than it sounds like you need.
If you're variable s is a string you can use the split method (docs python)You can make a code like that :This will return :numbers =But you have to be sure the separators are always ( , )


Answer URL
https://docs.python.org/3/library/functions.html#float
