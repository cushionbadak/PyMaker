Natural Text
I try to embed the Python Interpreter into C.In order to test this I create a shared library and try to load this one in Python with ctypes. Unfortunately this doesn't work and I would like to understand why.Here is an example c - code:  So I compile this into "mylib.so" with gcc and use python3.7-config --cflags and --ldflags for linking and so on which works.Here is the Python code I use to load this..So this simply loads both functions run_py and run_py2and executes them. This is the output... So basically this leads to segfault  when calling run_py2.The cause for this is the call of PyRun_SimpleString .However if I compile this as a standalone C programm everything seems to work just fine. I really would like to understand why this happens... but currently imout ouf ideas so any feedback is really appreciated here. BR jrsm
I changed your code a bit. Also, I'm testing on Win (as it's more convenient for me at this point), but I'm sure things are the same in Nix.dll.c:code.py:Output:The problem reproduces. First, I thought it's the [Python 3]: void Py_Initialize() call. But then I remembered [Python 3]: class ctypes.PyDLL(name, mode=DEFAULT_MODE, handle=None) (emphasis is mine) which states:Instances of this class behave like CDLL instances, except that the Python GIL is not released during the function call, and after the function execution the Python error flag is checked. If the error flag is set, a Python exception is raised.Thus, this is only useful to call Python C api functions directly.Replacing CDLL by PyDLL in code.py, yields:


Answer URL
https://docs.python.org/3/c-api/init.html#c.Py_Initialize
https://docs.python.org/3/library/ctypes.html#ctypes.PyDLL
https://docs.python.org/3/library/ctypes.html#ctypes.CDLL
