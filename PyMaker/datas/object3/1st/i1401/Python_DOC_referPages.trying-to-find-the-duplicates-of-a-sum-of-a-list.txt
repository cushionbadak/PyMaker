Natural Text
I am attempting to find the first set of duplicates in a list which is the sum of another list (should take a list such as [0,+1,+2,+1,-5,+1,+2] and return 0, because the sum of the list progressively [0,1,3,4,-1,0,2] has its first duplicate at 0). However, it seems to be returning wrong answers no matter what I do. Here's my code: 
From what you're doing, it seems like sumList is the "current" list (that is, the portion of sourceList that you've iterated over). If so, you need to append x (and not sourceList[x] as x is not the index but the number in sourceList). Next, you need to append x to sumList before you check histList:Output
One way to do this would be to use itertools.accumulate to build the list of accumulated sums for each position in the list.  We'll add each to a set as we go, checking if it already exists:Your sourcelist will return None, because there are no repeated values in the accumulated sums.  Counter(accumulate(sourcelist)).most_common(1) has a count of 1.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
