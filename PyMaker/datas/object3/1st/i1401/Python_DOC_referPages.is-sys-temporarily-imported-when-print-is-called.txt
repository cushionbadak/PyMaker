Natural Text
I was looking at the Python documentation for print which states:print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False)As it can be seen, if the file on which to print is not specified, the default sys.stdout is used, which got me thinking.Calling print definitely does not import sys in the background, so how does it work?is sys.stdout somehow reachable from everywhere?Example:I am using PyCharm and I want to create a function that either prints a message text to a file or to standard output. I began writing:So what goes after else? sys.stdout does not work and obviously, I am not interested in the verbose:
The other answer points out that print is implemented in C. However, even if it was implemented in Python, that would not mean that sys was available from everywhere.Consider this code:utils.pymain.pyHere sys is only available within utils, but print will still output to sys.stdout without it being accessible from main.
I think @DanielRoseman gave a good idea of why the implementation might not necessarily give you access to sys directly, but to address the last part of your question, you can use this approach...:... where basically you are unpacking the argument file=file if file is present, otherwise pass no argument.In terms of readability I think your original implementation is superior however.Actually you can just pass None:... and it would just print the text if file is not provided...


Answer URL
https://docs.python.org/3/library/functions.html#print
