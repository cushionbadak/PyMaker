Natural Text
I need to create a dictionary whose keys are values from a previously created dictionary. My previous dictionary is:This dictionary is of the form {key: (id, string, tags, likes, dislikes)}What I need to create is a dictionary whose keys are the tags from the first dictionary, and whose values are the id and strings which contain the tags, presented in the form of a dictionary.For example, if we take the tag 'SnowMan', the new dictionary should look like this:Or, if we take the tag 'StockholmeSyndrome', the new dictionary should look like this:In the end, the new dictionary needs to include all tags from the previous dictionary as keys, including the event in which there is no tag. I'm really stuck on this one, can anyone offer some guidance?
Using collections.defualtdict you can iterate and append to lists in a nested dictionary structure:defaultdict is a subclass of dict, so you generally need no further manipulation. However, if you require a regular dict object, you can use a recursive function:
what about this ?
After reviewing your requirements I have updated my previous post with the code below. I believe this is what you are trying to achieve. The only import needed is an OrderedDict from the collections module.output:


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
