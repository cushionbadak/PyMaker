Natural Text
I am coding a small program in Python3 that calculates the network availability.According to my Data Communications class, you determine your network availability by multiplying the availability of each device in your network.For example: There are 3 devices in your network. Device 1 has an availability of .67. Device 2 has an availability of .94. Device 3 has an availability of .79. Then you multiply the availabilities: .67 * .94 * .79 = .498 network availability.Here is my code so far:From here, I would like to store each availability input, and then multiply each device's availability and print the overall network's availability, but I am having trouble fulfilling this task as I cannot figure out how to individually store each device's availability. Can anyone help?PSIn simple terms, I am looking for the network's Total Availability.
The first thing is that you're defining ava from the input given. In this case the input given is supposed to be an int, so ava will be an int. You need to specify that ava is a list beforehand, so that you can use .append() to append the input value.After that you can loop through the ava list and multiply up to the result:
Use a dict for the values.
From what I can understand (not what everyone else has inferred) you want to find the total network availability, in other words the product of all availabilities.In order to individually store the availability you can use one of the many iterable objects in python, the simplest one is a list. A list is a data structure that holds multiple elements (not necessarily of the same type).In order to achieve what you want to accomplish you need the following:For example, when you enter 0.8, 0.7, and 0.6
Michael King had a great answer, and I marked it as correct. Here is my new code based on his answer. I just kind of organized it a little more and used a round function so the final result doesn't have ten decimal places.
You can create a list before the for loop add use list.append()


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
https://docs.python.org/3/library/
