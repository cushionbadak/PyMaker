Natural Text
I want to extract information after a chosen character and stop before a chosen character; for example, extract from * and end with a space, then put the identified words into a new list.I tried using split and find functions, or maybe check boolean type with startswith and endswith functions ... but it didn't really work..
You can use regular expressions for that:This collects all .+? groups (one or more of anything non-greedily) preceded by a '*' and followed by a word boundary '\b' (with space you'd miss the last match).
It appears the you're close with the methods you know:Split the string on spacesFind the elements that start with *Keep the remainders of those elementsextract_star(s):    words = s.split()    star_words = [word for word in words if word.startswith('*')]    result = [word[1:] for word in star_words    return result... or, in one expression ...
You can split by '*', ignore empty strings, split by whitespace, then extract the 0th value:Or functionally:
The rest have given plenty of options for how you can do this if it starts with the character.If it doesn't start with the special character (or even if it does), you can try doing something like this.


Answer URL
https://docs.python.org/3/library/re.html
