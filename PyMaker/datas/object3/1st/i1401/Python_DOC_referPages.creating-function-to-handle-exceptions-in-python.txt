Natural Text
I was wondering if it's possible to write a function to avoid calling a try ... except block each time for risky functions in Python. I tried following code but it didn't work:In this code, Python runs divider(1,0) and tries to pass result as an argument to the e function.What I wanted to do is to pass a function as an argument and run it in the function try ... except block so that, if any error occurs, I will add the error to a log directly.Is this possible?
You can do this .. but it does make code not really better to read. Your example does not work, because you feed the "result" of the function-call divider(1,0) to e. It never comes to handling the exception because you already called the function and the exception already happened.You need to pass the function itself and any params to e.Change it to:To get:In any serious code review you should get your code back to fix this though. I strongly recommend to not do this - you are only capturing the most general exception and making this construct more flexible will make it horrible to use! Exceptions should be:handled as locally as possibleas specific as possible your code is doing the exact opposit.Doku:Exception handling - you copied from there, ref is for othersarbitraty argument lists aka *argsunpacking lists


Answer URL
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
https://docs.python.org/3/library/logging.html
