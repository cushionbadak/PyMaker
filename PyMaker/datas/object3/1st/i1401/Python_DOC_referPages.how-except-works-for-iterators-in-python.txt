Natural Text
Can you explain to me why the except clause has never been executed and print never been called in the example?    
The StopIteration is thrown by next, not by the yield from:next(iterator[, default])Retrieve the next item from the iterator by calling its __next__() method. If default is given, it is returned if the iterator is exhausted, otherwise StopIteration is raised.So you could instead wrap the next call.Then you use it like this:Note that next also has a second argument that allows to provide a default instead of the StopIteration:
Your next calls are outside your h function and so are not covered by your try / except clause. For comparison, try this:Then run repeatedly:Result:
The function "h" returns a generator. The statement "yield" as a "return" does nothing, only returns a generator. The exception will not be in that part of the code.The exception must be transferred to another part of the code, where it will work.


Answer URL
https://docs.python.org/3/library/functions.html#next
