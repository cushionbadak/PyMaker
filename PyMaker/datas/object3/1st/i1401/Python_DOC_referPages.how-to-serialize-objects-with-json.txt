Natural Text
Both the Child and Parent classes inherit from Python dictionary:prints:After performing the serialization and de-serialization using json.dumps and json.loads the Parent['child'] becomes a regular dictionary:prints:Question: how to make sure that after the serialization, the parent_2['child'] is the instance of the Child and not a regular Python dictionary?
loads makes a dictionary and that's that. After some trial and error I found it out. (Note: It looks like you are using legacy Python so the syntax may need some tweaking from this solution.)Without calling the args of Parent with a dict initialized as Child, we can have no expectation of detecting the Child type unless you add additional logic to detect the type.
You could use pickle. It can be dangerous to unpickle unknown pickled objects(as they can be malicious).read documentation https://docs.python.org/3/library/pickle.htmlas it contains more information.You can also compress.In some cases, as using multithreading and lambda, dill, third-party module, can be handy as pickle throwsThe flow and danger(unpickling malicious software) are the same:Read dill documentation: https://pypi.org/project/dill/N.B: Never-ever load unknown pickled file
There is a package called jsonpickle. It seems to do the trick; Note; for this to work, the Json will have information about the original object graph so that it can be restored. 


Answer URL
https://docs.python.org/3/library/pickle.html
