Natural Text
I have been trying to run this code to start the communication with different sites but cannot establish one. Can someone help me with what I am missing here?Every time with different sites, I have been getting this error message:151.101.152.223b'HTTP/1.1 301 Moved Permanently\r\nServer: Varnish\r\nRetry-After: 0\r\nLocation: https://www.python.org/\r\nContent-Length: 0\r\nAccept-Ranges: bytes\r\nDate: Wed, 05 Dec 2018 17:10:03 GMT\r\nVia: 1.1 varnish\r\nConnection: close\r\nX-Served-By: cache-bom18222-BOM\r\nX-Cache: HIT\r\nX-Cache-Hits: 0\r\nX-Timer: S1544029803.224270,VS0,VE0\r\nStrict-Transport-Security: max-age=63072000; includeSubDomains\r\n\r\n'
This request is wrong un multiple levels:There is no HTTPS/1.1 protocol. There is only HTTP/1.1. To access a https://.. URL you need to first connect to the site (default port 443 and not 80 as you used), upgrade the TCP socket to SSL and the issue a proper HTTP request, i.e. with HTTP/1.1 not HTTPS/1.1.Additionally the line and header delimiter must be \r\n instead of only \n you used. Most servers will ignore the difference though.Also, HTTP/1.1 implicitly enables persistent HTTP connections (HTTP keep-alive). This means the server might not close the connection immediately after the response as your code expect but might wait a long time for more requests inside the same connection. For such simple requests it is better to use HTTP/1.0 which has no implicit keep-alive and also is simpler in other ways (no chunked transfer encoding).This not even an error. It is a HTTP redirect which says that you should access the site with https:// (which you likely tried to do but did the wrong way).At the end your code might look like this:Still, even if this code is working I really recommend to use a HTTP library like requests. If you instead insist on writing your own HTTP stack then please study the standard - the protocol is significantly more complex than a short look at a few examples suggests. 


Answer URL
https://docs.python.org/3/library/ssl.html#ssl.SSLContext.wrap_socket
https://docs.python.org/3/library/ssl.html
