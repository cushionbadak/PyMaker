Natural Text
This question already has an answer here:Python multiple inheritance constructor not called when using super()                    2 answers                I have a situation where I have to initialize all the base classesBut the above code results inMy concern is Why wasn't C initialized?
When two child classes provide the method (here it's __init__), Python calls the method only once and decides which one to call based on the method resolution order (MRO).You can inspect the MRO by accessing the __mro__ attribute.When a method is invoked, the first place to look is D, then B, then C, then object. 
Because super() doesn't automatically call all of the inherited methods, only the next one up in the hierarchy. To ensure that all are called, you should have super().__init__() in the __init__ method of B and C as well (in your specific scenario you only need to add it to B.


Answer URL
https://docs.python.org/3/library/functions.html#super
