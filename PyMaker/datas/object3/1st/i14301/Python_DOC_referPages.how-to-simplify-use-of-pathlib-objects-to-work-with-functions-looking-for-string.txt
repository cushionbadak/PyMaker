Natural Text
I quite like using pathlib for path management in python, but the drawback of using this package is that a lot of commands, like shutil.copy, .move, the builtin open requires a string and not a PosixPath object, giving as error The logical solution is of course to use str(). My question is how would it be possible (if it would be) to modify pathlib objects such that a call like open(pathlib.PosixPath) would work without the use of str().
The answer by @Navith is what you should now do in python 3.4. However, PEP-519 is proposed and accepted in python 3.6 to address this valid concern.This PEP proposes a protocol for classes which represent a file system path to be able to provide a str or bytes representation. Changes to Python's standard library are also proposed to utilize this protocol where appropriate to facilitate the use of path objects where historically only str and/or bytes file system paths are accepted.So in python 3.6 the standard library methods you refer to now accept Paths, and the answer to your question is use python 3.6.
Path objects have open, rmdir, chmod, ... methods that work the way you'd expect.


Answer URL
https://docs.python.org/3/library/pathlib.html#pathlib.Path
https://docs.python.org/3/library/pathlib.html#pathlib.Path.open
https://docs.python.org/3/library/pathlib.html#pathlib.Path.rmdir
https://docs.python.org/3/library/pathlib.html#pathlib.Path.chmod
