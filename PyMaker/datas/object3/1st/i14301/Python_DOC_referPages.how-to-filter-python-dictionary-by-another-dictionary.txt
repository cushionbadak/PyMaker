Natural Text
I want to create a method that, Looks through each value in the mainDict, returning an array of all the values that contain all of the key-value pairs listed in filterDict.i want to return this:
Assuming you run Python 3:Quoting the documentation:Keys views are set-like since their entries are unique and hashable.  If all values are hashable, so that (key, value) pairs are unique and  hashable, then the items view is also set-like. For set-like views, all of the operations defined for the abstract base class collections.abc.Set are available (for example, ==, <, or ^).Refer to Dictionary view objects for more information.If you need this to work in Python 2, just replace items() with viewitems().Example:Note that the above won't work if your values are not hashable (see the Glossary), but the following will
Just use a list comprehension, for each item d checking whether all the keys k from the filterDict are in that item, and if so, whether the value v is the same.This also works with Python 2. Example:
As a more pythonic way you can use dict.viewitems to get the intersection between your dictionaries and the filter dictionary then if the intersection was equal with filter you can return it :read more about dictionary-view-objects https://docs.python.org/2/library/stdtypes.html#dictionary-view-objects
Here is another way to do it, maybe it's more readable for you. It's python 2 and 3 compatible and pretty straight forward.It prints out:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
https://docs.python.org/3/glossary.html?highlight=hashable
