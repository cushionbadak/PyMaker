Natural Text
Given a test suite:I would like to produce a text file describing all the assertions and tests. For example:UpdateUsing inspect I have managed to get an iterable list of all the test methods in a module:The final step is to extract a list of strings describing the assertions from the test methods. My first solution is to use a load of regexes in conjunction with inspect.getsourcelines(method) but there must be less syntax dependent solution. Thanks to Kevin who suggested ast as a viable option, but this brings me to a more specific question.How can I use ast to parse the assertions out of a test method into a human readable format?Failing this maybe there are better options?
The doc string for the TestSuite base class says:For use, create an instance of TestSuite, then add test case  instances. When all tests have been added, the suite can be passed to  a test runner, such as TextTestRunner. It will run the individual test  cases in the order in which they were added, aggregating the results.  When subclassing, do not forget to call the base class constructor.If you choose to use the TextTestRunner, then you can provide a stream for it to write to: Edited to add verbosity = 2; this will print your doc string on each test as it executes.  Is this sufficient information?


Answer URL
https://docs.python.org/3/library/ast.html#ast.parse
