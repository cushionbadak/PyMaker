Natural Text
I've written a Numpy implementation that uses the Cox-de Boor recursive algorithm to compute B-spline basis functions.  I would like to memoize the object instance for a given order, but leave the function callable with respect to xi.In other words, after the object is instantiated, the recursive function should be "set", but remain callable at xi.  I really need this for speed, as I will be calling the function many times and do not want to reconstruct the recursive function over-and-over.Here is the current implementation:and is used aswhich returns the basis functions evaluated at 1.2.  However, I need to call this function many times and as it is written now, the recursive function is reconstructed for every call, and this is not necessary as the recursion level is set at instantiation as 4
It's very easy to memoize anything using functools.lru_cache in Python3, or, in Python2.7 using something like this:
Create a dictionary that saves the results of the function and then check to see if that value is in the dict before calling the function again. Something similar to this should work depending on your setup.


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
