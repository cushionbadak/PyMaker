Natural Text
I have a list that looks like:I need to cycle through this list one element at a time but when the end of the list is reached, the cycle needs to be reversed.For example, using itertools.cycle:I get:but what I need is:I need to cycle through a for a fixed number of times, say 200.
You can cycle the chain of your a and reversed a, eg:Which gives you:Note: If a is an exhaustable iterator, you will need to make a copy of a first. But given your example, this will be fine.
Do you actually need to cycle through the list, as in go forward and backwards forever?  Or just .reverse() the list?Will do what you describe.  The reversed() built-in also works, but you need to chain() it, as it returns an iterator, e.g.:You can call itertools.cycle() on either result to get an infinite iterator of the list concatenated with its reverse.
Make a copy of list a, reverse it, then append it.or based on a comment suggestion.
or (using cycle's approach, which works for all iterators)


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
https://docs.python.org/3/library/functions.html#reversed
