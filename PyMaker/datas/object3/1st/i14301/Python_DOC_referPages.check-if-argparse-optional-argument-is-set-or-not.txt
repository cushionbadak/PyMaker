Natural Text
I would like to check whether an optional argparse argument has been set by the user or not.Can I safely check using isset?Something like this:Does this work the same for float / int / string type arguments?I could set a default parameter and check it (e.g., set myArg = -1, or "" for a string, or "NOT_SET").  However, the value I ultimately want to use is only calculated later in the script.  So I would be setting it to -1 as a default, and then updating it to something else later. This seems a little clumsy in comparison with simply checking if the value was set by the user.
I think that optional arguments (specified with --) are initialized to None if they are not supplied. So you can test with is not None. Try the example below:
As @Honza notes is None is a good test.  It's the default default, and the user can't give you a string that duplicates it.You can specify another default='mydefaultvalue, and test for that.  But what if the user specifies that string?  Does that count as setting or not?You can also specify default=argparse.SUPPRESS.  Then if the user does not use the argument, it will not appear in the args namespace.  But testing that might be more complicated:Internally the parser keeps a list of seen_actions, and uses it for 'required' and 'mutually_exclusive' testing.  But it isn't available to you out side of parse_args.
I think using the option default=argparse.SUPPRESS makes most sense. Then, instead of checking if the argument is not None, one checks if the argument is in the resulting namespace.Example:Usage:Argument is not supplied:
If your argument is positional (ie it doesn't have a "-" or a "--" prefix, just the argument, typically a file name) then you can use the nargs parameter to do this:
You can check an optionally passed flag with store_true and store_false argument action options:This way, you don't have to worry about checking by conditional is not None. You simply check for True or False. Read more about these options in the docs here
Here is my solution to see if I am using an argparse variable This might give more insight to the above answer which I used and adapted to work for my program.


Answer URL
https://docs.python.org/3/library/argparse.html#nargs
