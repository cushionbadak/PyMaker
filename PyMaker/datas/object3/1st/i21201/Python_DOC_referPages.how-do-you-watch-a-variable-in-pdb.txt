Natural Text
I'm debugging a python script, and I want to watch a variable for a change (much like you can watch a memory adress in gdb).  Is there a way to do this?
Here is a really hacky way to do this with pdb. These commands can be put in your ~/.pdbrc for automatic loading every time you use pdb.This adds two commands, nextwatch and stepwatch which each take a variable name varname as an argument. They will make a shallow copy of the current frame's local variable for varname if possible, and keep executing next or step respectively until what that name points to changes.This works in CPython 2.7.2 but relies on some pdb internals so it will probably break elsewhere.
For watching a variable when you are hitting a breakpoint, you can use the commands command. E.g. printing some_variable when hitting breakpoint #1 (canonical example from pdb doc).Update for Python 3Additionally, you can use the condition command to ensure the breakpoint is only hit whenever the variable takes a certain value.eg:
For Python 3:you can use display functionality of pdbOnce you hit the breakpoint just type ipdb> display expressionexample:as you can see, each time you type display - it will print all of your watches (expressions). You can use builtin function undisplay to remove certain watch.You can also use pp expression to prettyprint the expression (very useful)
A possible solution is to use pdb++:Then "mark" the object you want to watch with the decorator @pdb.break_on_setattr:Here pdb will break on any change of the attribute bar on any Foo-object.CaveatsOnly invocations of the underlying __setattr__-method will trigger the breakpoint. This means that f.bar = 'XYZ' and setattr(f, 'XYZ') will work, but manipulating the bar-object will not trigger the breakpoint:Note: @break_on_setattr is not part of the standard pdb-module. pdb is overridden/monkey-patched by the pdbpp-package.You can also wrap an existing object (via its class) after pdb.set_trace():


Answer URL
https://docs.python.org/3/library/pdb.html#pdbcommand-display
