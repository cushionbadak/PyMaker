Natural Text
I have some small utility scripts written in Python that I want to be usable on both Windows and Linux.  I want to avoid having to explicitly invoke the Python interpreter.  Is there an easy way to point shebang notation to the correct locations on both Windows and Linux?  If not, is there another way to allow implicit invocation of the Python interpreter on both Windows and Linux without having to modify the script when transferring between operating systems?Edit:  The shebang support on Windows is provided Cygwin, but I want to use the native Windows Python interpreter on Windows, not the Cygwin one. Edit # 2:  It appears that shebang notation overrides file associations in Cygwin terminals.  I guess I could just uninstall Cygwin Python and symlink /usr/bin/python to Windows-native Python.
Unless you are using cygwin, windows has no shebang support. However, when you install python, it add as file association for .py files. If you put just the name of your script on the command line, or double click it in windows explorer, then it will run through python.What I do is include a #!/usr/bin/env python shebang in my scripts. This allows for shebang support on linux. If you run it on a windows machine with python installed, then the file association should be there, and it will run as well.
Read up on the Python Launcher for Windows in the docs, which was initially described in PEP 397. It letsyou define custom shebang configurations in an ini (e.g. to use pypy),but out of the box you can use virtual shebangs such as #!/usr/bin/env python3, or shebangs with real paths such as #!"C:\Python33\python.exe" (quoting is required for paths containing spaces). You can also add command-line options to a shebang. For example, the following shebang adds the option to enter interactive mode after the script terminates: #!/usr/bin/python3 -i.Python 3.3 associates .py (console) and .pyw (GUI) script file types with the respectively named launchers, py.exe and pyw.exe, to enable shebang support for scripts on Windows. The new launchers are installed to the root Windows folder (i.e. %SystemRoot%) when installing for all users. Otherwise you'll want to add the installation directory to PATH in order to use py.exe in the shell. Then from the command line you can run py -2, py -3, py -2.6, py -3.3-32 (32-bit), and so on. The launcher is handy when combined with -m to run a module as a script, e.g. py -3 -m pip install. There's also a version of pylauncher that can be installed separately if you only use Python 2.
Install pywin32. One of the nice thing is it setups the file association of *.py to the python interpreter.
Not with shebang ... but you might be able to set up a file association, see this SO question which deals with Perl and the associated answers which will also be pertinent as there's known problems with Windows and stdin/out redirection...


Answer URL
https://docs.python.org/3/using/windows.html#python-launcher-for-windows
https://docs.python.org/3/using/windows.html?#shebang-lines
