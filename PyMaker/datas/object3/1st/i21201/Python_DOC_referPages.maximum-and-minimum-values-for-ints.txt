Natural Text
I am looking for minimum and maximum values for integers in python. For eg., in Java, we have Integer.MIN_VALUE and Integer.MAX_VALUE. Is there something like this in python?
Python 3In Python 3, this question doesn't apply. The plain int type is unbounded.However, you might actually be looking for the machine's word size. That's still available in Python 3 as sys.maxsize. Python 2In Python 2, the maximum value for plain int values is available as sys.maxint:You can calculate the minimum value with -sys.maxint - 1 as shown here. Python seamlessly switches from plain to long integers once you exceed this value. So most of the time, you won't need to know it.
sys.maxint constant has been removed from Python 3.0 onward, instead use sys.maxsizeIntegersPEP 237: Essentially, long renamed to int. That is, there is only one built-in integral type, named int; but it behaves mostly like the  old long type.PEP 238: An expression like 1/2 returns a float. Use 1//2 to get the truncating behavior. (The latter syntax has existed for years, at  least since Python 2.2.)The sys.maxint constant was removed, since there is no longer a limit to the value of integers. However, sys.maxsize can be used as an  integer larger than any practical list or string index. It conforms to  the implementation’s “natural” integer size and is typically the same  as sys.maxint in previous releases on the same platform (assuming the  same build options).The repr() of a long integer doesn’t include the trailing L anymore, so code that unconditionally strips that character will chop off the  last digit instead. (Use str() instead.)Octal literals are no longer of the form 0720; use 0o720 instead.Refer : https://docs.python.org/3/whatsnew/3.0.html
If you just need a number that's bigger than all others, you can usein similar fashion, a number smaller than all others:This works in both python 2 and 3.
In Python integers will automatically switch from a fixed-size int representation into a variable width long representation once you pass the value sys.maxint, which is either 231 - 1 or 263 - 1 depending on your platform. Notice the L that gets appended here:From the Python manual:Numbers are created by numeric literals or as the result of built-in functions and operators. Unadorned integer literals (including binary, hex, and octal numbers) yield plain integers unless the value they denote is too large to be represented as a plain integer, in which case they yield a long integer. Integer literals with an 'L' or 'l' suffix yield long integers ('L' is preferred because 1l looks too much like eleven!).Python tries very hard to pretend its integers are mathematical integers and are unbounded. It can, for instance, calculate a googol with ease:
For Python 3, it is
If you want the max for array or list indices (equivalent to size_t in C/C++), you can use numpy:This is same as sys.maxsize however advantage is that you don't need import sys just for this.If you want max for native int on the machine:You can look at other available types in doc.For floats you can also use sys.float_info.max.
I rely heavily on commands like this.Max int returned: 9223372036854775807For more references for 'sys' you should accesshttps://docs.python.org/3/library/sys.htmlhttps://docs.python.org/3/library/sys.html#sys.maxsize
By using sys module (python 3)


Answer URL
https://docs.python.org/3/whatsnew/3.0.html
https://docs.python.org/3/library/sys.html
https://docs.python.org/3/library/sys.html#sys.maxsize
