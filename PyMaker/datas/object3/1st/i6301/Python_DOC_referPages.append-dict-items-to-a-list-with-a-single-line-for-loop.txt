Natural Text
I have a list I have dict entriesI wish to write a for loop in a comprehension manner filling the list. What I have tried is I need to then update the dict asThen again update the list lst.Which adds the tuples as [('a',1)('b',2)('c',3)('d',4)]What is the right way to iterate through a dict and fill the list? 
This is what the syntax for a list comprehension is and should do what you're looking for:In general list comprehension works like this:OUTPUTP.S. Apart from the question asked, you can also get what you're trying to do without list comprehension by simply calling :this will again give you a list of tuples of (key, value) pairs of the dictionary items.EDITAfter your updated question, since you're updating the dictionary and want the key value pairs in a list, you should do it like:
One approach is:Where the contents of lst are [('a', 1), ('b', 2), ('c', 3), ('d', 4)].Alternatively, using the dict class' .items() function to accomplish the same:
There are many valid ways to achieve this. The most easy route is usingAlternatives include using the zip function, list comprehension etc.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
