Natural Text
I am trying to write a method def permutations(lst) that takes in a list of integers (such as [1,2,3]) and prints all the possible permutations of it, without using recursion. I also have to use a stacks and/or queue in this method. So far I have:But the output I get is: [[3, 2, 1], [3, 2, 1], [3, 2, 1], [3, 2, 1], [3, 2, 1], [3, 2, 1]].However, when I print the lst instead of enqueueing it (replacing the enqueue lines with just print), I get the correct output. [[1, 2, 3],[2, 1, 3],[3, 1, 2],[1, 3, 2],[2, 3, 1],[3, 2, 1]].How do I modify my code to use enqueue? Any suggestions appreciated.
PROBLEMThe problem is in your list reference in enqueue: you got six references to the same list. Every time you change one element, you are changing all of them. Print q at intermediate points, and you'll see the effect:Output:Instead, make a copy of the list when you enqueue:This will give you the desired output.


Answer URL
https://docs.python.org/3/library/collections.html#collections.deque
