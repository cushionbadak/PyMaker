Natural Text
After much searching I couldn't find out how to use smtplib.sendmail to send to multiple recipients.  The problem was every time the mail would be sent the mail headers would appear to contain multiple addresses, but in fact only the first recipient would receive the email.The problem seems to be that the email.Message module expects something different than the smtplib.sendmail() function.In short, to send to multiple recipients you should set the header to be a string of comma delimited email addresses.  The sendmail() parameter to_addrs however should be a list of email addresses.
This really works, I spent a lot of time trying multiple variants.
The msg['To'] needs to be a string:While the recipients in sendmail(sender, recipients, message) needs to be a list:
You need to understand the difference between the visible address of an email, and the delivery.msg["To"] is essentially what is printed on the letter. It doesn't actually have any effect. Except that your email client, just like the regular post officer, will assume that this is who you want to send the email to.The actual delivery however can work quite different. So you can drop the email (or a copy) into the post box of someone completely different.There are various reasons for this. For example forwarding. The To: header field doesn't change on forwarding, however the email is dropped into a different mailbox.The smtp.sendmail command now takes care of the actual delivery. email.Message is the contents of the letter only, not the delivery.In low-level SMTP, you need to give the receipients one-by-one, which is why a list of adresses (not including names!) is the sensible API.For the header, it can also contain for example the name, e.g. To: First Last <email@addr.tld>, Other User <other@mail.tld>. Your code example therefore is not recommended, as it will fail delivering this mail, since just by splitting it on , you still not not have the valid adresses!
It works for me.
I tried the below and it worked like a charm :)
I came up with this importable module function. It uses the gmail email server in this example. Its split into header and message so you can clearly see whats going on:
I figured this out a few months back and blogged about it. The summary is:If you want to use smtplib to send email to multiple recipients, use email.Message.add_header('To', eachRecipientAsString) to add them, and then when you invoke the sendmail method, use email.Message.get_all('To') send the message to all of them. Ditto for Cc and Bcc recipients.
So actually the problem is that SMTP.sendmail and email.MIMEText need two different things.email.MIMEText sets up the "To:" header for the body of the e-mail. It is ONLY used for displaying a result to the human being at the other end, and like all e-mail headers, must be a single string. (Note that it does not actually have to have anything to do with the people who actually receive the message.)SMTP.sendmail, on the other hand, sets up the "envelope" of the message for the SMTP protocol. It needs a Python list of strings, each of which has a single address.So, what you need to do is COMBINE the two replies you received. Set msg['To'] to a single string, but pass the raw list to sendmail:
Well, the method in this asnwer method did not work for me. I don't know, maybe this is a Python3 (I am using the 3.4 version) or gmail related issue, but after some tries, the solution that worked for me, was the lineinstead of
I use python 3.6 and the following code works for me

you can try this when you write the recpient emails on a text file
It only worked for me with send_message function and using the join function in the list whith recipients, python 3.6. 


Answer URL
https://docs.python.org/3/library/email-examples.html
https://docs.python.org/3/library/email.examples.html
