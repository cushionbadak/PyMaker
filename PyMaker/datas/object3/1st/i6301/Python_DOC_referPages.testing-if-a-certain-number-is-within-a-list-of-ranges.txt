Natural Text
How do I test how many times a certain number is outside my list of ranges?Example: So, the output generated will be 1 because there is only one range where the value of 1 does not lie within.
Well, those aren't actually Ranges, but two-element lists. You could use manual comparison, as in the other answers, but in my answer I turn them into actual Range objects.Since Python's range(a,b) constructor is inclusive at a (that is, a is inside the range) and exclusive at b (b is outside the range), you have to add 1 to one of the endpoints if you want them both to be inclusive or exclusive. I assumed you wanted inclusive, so added 1 to the high end point:
You could use sum and a generator expression:a and b are lower and upper range bounds, respectively. a <= value <= b is a chained comparison, equivalent to a <= value and value <= b. The final return value is the number of times the not a <= value <= b expression evaluated to True.We can get a slightly longer but more readable solution if we apply De Morgan's laws:Technically, you can use range as shown in other answers, but they will be slower in Python 3 (due to the creation of the range object) and much slower in Python 2 (because Python 2's range creates an actual list, and containment checks on lists are O(n)):
list comprehension should be enough. 
You could try:
Using list comprehension :Using generators (recommended as it will be faster) :#driver value :
Just a parellel solution: 


Answer URL
https://docs.python.org/3/reference/expressions.html#comparisons
