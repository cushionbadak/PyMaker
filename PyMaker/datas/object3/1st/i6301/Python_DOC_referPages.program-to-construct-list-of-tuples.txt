Natural Text
I am trying to write a program that takes in a dictionary of frequencies and an integer, and returns a list of tuples containing all the words that appear more than min_times.There's something wrong however, the return value for the test above, is :This return value shouldn't have the last entry, because it's a duplicate.How can I make my code simpler, because a lot is going on and I can't determine the problem. Edit: I need the words inside the tuples to be grouped in lists. For example the first entry should be (['yeah'], 15) and for words that have the same value (one and lonely), I need them to be grouped like (['one', 'lonely'], 1)
Since you want to group keys by values, you could use itertools.groupby:
List comprehension may make your code simpler. 
This will return a list of tuples from a given dict if the value in the given dict is greater then the given minimum requirements:For example, with your shown dict:This basically does a for loop on a single line that is called a list comprehension. Read about them, they will save your life.If you want the first value in the tuple to be a list, the simplest way would be to add [] around the insertion of the value:And another example with your given dict:
This will work.
You can use Pandas:Whatever solution you end up going with, it may be helpful to consider that this is a reduce operation on word frequency, and frequency occupies the value slot in your word:freq key:value pairs.  reduce and/or groupby operations work by collapsing on keys, and then creating some aggregation of the associated values.  That's why you see a number of these answers reversing freqs at some point, to get things in shape for the reduce operation.
Use collections.defaultdictOutput:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
