Natural Text
Currently, a Python beginner looking for some help. I'm reading from a text file with 365 lines of integers. Each integer is representative of a day of the year. Like this, but for 365 lines:I need to go through the whole file and separate the 365 days into each of the 12 months and take the average of the numbers of each month. For instance, the first 31 lines are January, take the average, print it, then continue from there...At this point I have written code that goes through the whole file and gives a total for the year and an average per day, but am stuck on splitting the file into the separate months and taking individual averages. What do I do to achieve this?Here's my current code:I hope this question was clear enough. Thanks for any help!
You'll have to have the number of days per month. Either use a fixed table, or you could ask the calendar module:In case you decide to use a fixed table the only month of interest is February during leap years. You could just increment that if calendar.isleap() is True.Given an open file of integer per row you could simply slice it suitably, map int() over the slices, and use statistics.mean():where the_file was simply
First, you need a list with the quantity of days in each month:Now write a loop to step through the months, with another inside to step through the days:Do remember that Python indexing starts at 0, so you'll have month_num running 0-11, and day_num running 0-30 at most.Can you take it from there?RESPONSE TO OP'S COMMENTOkay, you're handicapped: lists are disallowed.  Instead, try this:


Answer URL
https://docs.python.org/3/library/calendar.html
https://docs.python.org/3/library/calendar.html#calendar.isleap
https://docs.python.org/3/library/itertools.html#itertools.islice
https://docs.python.org/3/library/statistics.html#statistics.mean
