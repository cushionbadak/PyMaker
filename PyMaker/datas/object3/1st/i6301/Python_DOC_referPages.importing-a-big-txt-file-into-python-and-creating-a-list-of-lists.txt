Natural Text
I've got a big txt file. Each line looks like this:  I would like to to create a list of list which one line in each list.How can I do it?
If the file is truly big, you might want to use a generator to keep memory usage down:
To get a lists of lists where each sublist is literally a string that represents each of your file lines you can do this:Here the program reads the file line by line and appends each line from the file as a sublist to the list data.Alternatively, if you want to have each space-separated element in the sublist as a separate element, use split() in the appending line instead,which will split the components by spaces - remove the extra [] too as split() will return sublists anyway.
You can define your own delimiters to split your strings by (or file lines in this case) with the module re https://docs.python.org/3/library/re.html. Using with open() means that the file link is closed after the with open() indent in your code has ended. I use list comprehension here because it's slightly faster than a for loop to construct listsJust put your choice of delimiters, or things to split the lines by in here (" ",",")The result is:If you just want a list of lines use this function instead:Just run it like this:If your python program is in the same folder as your txt file then your filepath can just be the name of the file like so "mytxt.txt" else you can use the os module to normalize a filepath for your operating system
Learn to make your life much easier and don't use with open. Instead, learn to use the awesome pathlib package. Using the pathlib.Path.read_text() method, you can load your file into a list of strings, each of which is a line: To make that into into a list of lines, use the split method, splitting at each line break:Almost there. Now you want to make your list of lists. I am a assuming you want each sublist to be made up of the things between the spaces and the commas. With that in mind, construct your list of lists like this: Finally, do it all in one go as follows:


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/library/pathlib.html
