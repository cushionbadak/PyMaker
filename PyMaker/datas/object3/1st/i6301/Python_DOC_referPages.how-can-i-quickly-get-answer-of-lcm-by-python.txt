Natural Text
I need to "quickly" get answer this problem.in test case, my code is very slow.
There are existing gcd implementations in Python, and LCM is definable in terms of gcd, so you may as well avoid reinventing the wheel. Specifically:gcd(a, b) x lcm(a, b) = a x bWith Python 3.5 and higher, there is an accelerated gcd function on the math module, so lcm can simplify to:On older Python, it's not accelerated, but fractions.gcd is a decent implementation provided for you, so you can use it instead, or to use the best possible gcd on whatever version you run on, a nested import attempt works:Your nlcm loop could also be simplified: You don't need to destructively iterate manually, just loop:Or if you want to get clever, use reduce (functools.reduce on Python 3.x) since it does exactly what that simplified loop is already doing:
Assuming the "long execution" is not in the example you provided but rather with bigger inputs, you can add memoization and increate the time getLCM() is calculated in case it's called again with the same numbers:


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
