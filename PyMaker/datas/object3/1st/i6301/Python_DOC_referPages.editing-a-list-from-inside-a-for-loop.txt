Natural Text
Let's say I have a list, mylist, and I define it to be [1, 2, 3, 4, 5]. How is there a simple way to double every element of the list from within a for loop?I know you could do something like:I also know that you could make a list comprehension:mylist = [2*i for i in range(1, 6)But is there a way to do it like this?I tried doing something like:but num is a local variable, so this doesn't modify mylist, just num. Does anyone know a good way to do this?
The usual way to do this is with a list comprehension, iterating directly over the list items, not indirectly via an index.outputThat replaces mylist with a new list object. That's generally ok, but sometimes you want to modify the existing object, eg when other objects have a reference to mylist. You can do that with a slice assignment.
It's not really possible since you shouldn't try to change a list while looping through it in that way. I would stick with your other two ways of manipulating the list 
Using an explicit for loop.  Use enumerate while iterating and assign a new value to each item.Just be careful - don't change the number of items in a list: Remove items from a list while iterating


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
