Natural Text
How do I use a function or set of functions from another module as a parameter in my own function I'm defining?I'm trying to write a function that compares one vector q and calculates its distance from each vector in a set of vectors x. The function get_distances should take the one vector q, the set of vectors x, and a parameter dist_method. dist_method is supposed to take any one of the distance calculations from scipy.spatial.distance and use that for the calculation, so I could call the function something like this: distances = get_distances(q, x, 'euclidean') Here's the scipy reference page - get_distances should be able to take any of the distance functions braycurtis, canberra, ... , sqeuclidean, wminkowski:https://docs.scipy.org/doc/scipy/reference/spatial.distance.htmlAt the top of the file1.py file where this function is located, I've imported scipy.spatial.distance, from which I thought I should have access to functions to use just like distance.euclidean(), but when I call get_distances in the interpreter, I get AttributeError: 'module' object has no attribute 'dist_method'.I found a lot of answers already like the below that say functions are 'first-class objects' and that I should be able to use them as arguments just like any other argument, and I've tried using the **kwargs concept, but I can't put it all together.Passing functions with arguments to another function in Python?How do I pass a method as a parameter in Pythonhttps://docs.python.org/3/tutorial/controlflow.html#keyword-argumentsCan someone help me understand what I'm missing?KNN.py:Here's what I'm doing in the interpreter:
The problem with:is that your attempting to use dist_method to access a function from dist whose name matches the value of the string (i.e "euclidean"), however dist.dist_method will look up a function named "dist_method" within the dist object, which does not exist. To access an object's function by name, you would use getattr, which will return the object attribute matching the string.What you want to do is:
@TheoretiCAL's answer shows you one approach to get desired result and here is another one:
The problem is that dist_method is not the name of anything in the module you're trying to use.  You can use the modules __dict__ attribute to "fetch" the appropriate method.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#keyword-arguments
