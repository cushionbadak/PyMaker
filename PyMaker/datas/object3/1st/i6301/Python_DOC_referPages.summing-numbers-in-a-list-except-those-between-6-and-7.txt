Natural Text
I'm attempting to write a function which takes a list and sums all the numbers in the list, except it ignores sections of the list starting with a list and extending to a 7, but continues to sum after the 7. Here is my code:Test cases show that 6 and proceeding numbers up until and including 7 are ignored while other numbers are added to the sum, and numbers after the 7 are also added to the sum (as was intended), but for some reason any 7 after the first 7 after a 6 is not summed - this is not what I want and I'm not sure why it's happening. Any suggestions?Test case results:`

The posted code is completely broken.For example for a list without any 6,i will be out of bounds of the list when reaching the nums[i] == 6 condition on the last element.You need to completely rethink the conditions inside the loop.Here's one approach that will work.If the current number is 6,then skip until you see a 7, without adding to the sum.Otherwise add to the sum.After performing either of these two actions (skipping numbers or adding to the sum),increment i.
Here is an intermediate alternative for learning new Python techniques:In principle, this function filters the input, collecting values into a result that meet your condition and drops the rest, then the sum is returned.  In particular you can observe the following techniques:extending a listitertools, e.g. itertools.takewhile, itertools.dropwhileiterators and generatorsnext() function and default valuessum() function assertion testing


Answer URL
https://docs.python.org/3/library/itertools.html
