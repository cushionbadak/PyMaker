Natural Text
Suppose I have a string of the of the format host:port, where :port is optional. How can I reliably extract the two components?The host can be any of:A hostname (localhost, www.google.com)An IPv4 literal (1.2.3.4)An IPv6 literal ([aaaa:bbbb::cccc]).In other words, this is the standard format used across the internet (such as in URIs: complete grammar at https://tools.ietf.org/html/rfc3986#section-3.2, excluding the "User Information" component).So, some possible inputs, and desired outputs:
This should handle the whole parse in a single regexAll that's needed then is to cast the second group to int.
Here's my attempt at this so far:
Here's a terser implementation which relies on attempting to parse the last component as an int:
Actually confused on whether this is what you wanted, but I rewrote it up a bit and it still seems to follow the ideal output:As on the first line I didn't really like the chained function calls e.g. getattr(getattr(getattr(string, 'rsplit')(':', 1), '__getitem__')(-1), 'isdigit')() for the expanded version and then it's repeated again two lines after, perhaps I should make it a variable instead so there's no need for all the calls.But I'm nitpicking here so feel free to call me out on that, heh.
Here's my final attempt, with credit to other answerers who provided inspiration:
Well, this is Python, with batteries included. You have mention that the format is the standard one used in URIs, so how about urllib.parse?This should handle any valid host:port you can throw at it.


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlsplit
