Natural Text
I have a csv file, which has got many columns. One column contains data in the form of dict objects as well as strings.For eg: Column contains data like : {"a":5,"b":6,"c":8},"usa","india",{"a":9,"b":10,"c":11}When I read this csv into a dataframe using :this column data is recognised as string when i did df.applymap(type)to check the type of each element stored in this particular column.But data does not have quotes around it neither in csv nor in the dataframe. But still dict objects are converted to string and stored in dataframe.On checking type of column, it turns out to be object.Please suggest how to read from csv into dataframe such that dict objects are recognised as dict and strings as strings in this particular column.
You can convert the strings that should be dicts (or other types) using literal_eval:Now you can apply this to your DataFrame:Note: This is pretty expensive (time-wise) as far as other calls go, however when you're dealing with dictionaries in DataFrames/Series you're necessarily defaulting back to python objects so things are going to be relatively slow... It's probably a good idea to denormalize i.e. get the data back as columns e.g. using json_normalize.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
