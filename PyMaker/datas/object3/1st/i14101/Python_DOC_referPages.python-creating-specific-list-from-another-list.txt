Natural Text
Learning python I encountered the following problem. I already have some list with integer numbers (for example initial_list). Then I'm trying to create list (for example result) with following numbers pattern:Example:Here is my first implementation:Here is my second implementation:I guess second one is much better because it does not contain append method and initialize list with concrete size. Also result = np.ones(len(initial_list) + 1) consists with float point number which is not correct. I wonder whether there is a simpler version of the implementation of this algorithm. After that algorithm I'm creating OrderedDict:Maybe I can reverse result list during creating OrderedDict for O(1) "on fly" like reversed works in for looping, so that I can simplify algorithm above.
If numpy is an option, you can do it with cumprod:
You can use itertools.accumulate and operator.mul
Why can't you just do


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
