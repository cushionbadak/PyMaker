Natural Text
I have got a problem when using python imports. I wrote a finished module, that itself uses several submodules (those are imported).e.g.Now I want to use this finished module by another supermodule, so the folder structure would change like thisHowever now all imports that are used in the code of main_class.py inside the module fail (I guess because the import now works in the namespace of main_class_super.py)Any idea how to solve this problem without restructuring the entire sources?The concrete error:In my main_class.py I use the line:In my supermodule.py I use the line:When executing the superclass that imports module.main_class of course the import submodule1 line is executed as well, but fails as it can not find the module in the namespace of supermodule.py.
If you are on python 2 you should add from __future__ import absolute_import  to your files (not needed on 3) so you can do the imports like Guido states in PEP 328According to this you shouldMake sure all your package folders have a __init__.py in it to mark them as importableIn main_class.py: replace import submodule1 or import module.submodule1 with from . import submodule1In main_class_super.py: replace import module.main_class with from .module import main_classThis way you don't have to care about any outer package structure.The option to use absolute and explicit relative imports was added in Python 2.5.


Answer URL
https://docs.python.org/3/whatsnew/2.5.html#pep-328-absolute-and-relative-imports
