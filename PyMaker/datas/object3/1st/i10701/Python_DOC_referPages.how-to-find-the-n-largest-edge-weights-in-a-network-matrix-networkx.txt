Natural Text
I have the following code that I attempt to use to generate a network matrix.  With this matrix, I would like to find the 20 highest-weighted edges that ARE NOT on the diagnal (i.e. i!=j in the matrix).  I also would like to get the names of the nodes (in pairs) composed of these edges.With this code, however, I failed to generate the 20 most weighted edges. I obtain raise ValueError("The truth value of an array with more than one "ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(). Instead, with thisIt gives me:WithI receivedAttributeError: is_multigraph not foundCould someone help me solve this question? Thank you very much!
The issue with this line:Is that nlargest does not expect an iterable of iterables, but an interable of numbers.So you could do this instead:itertools.chain.iterables takes an iterable of iterables, and creates a new iterable with the content of all the inner iterables.However, that won't entierly solve your initial problem, for two reasons:Why do you take the square of the adjacency matrix? Doing so would only give you the highest weighted sum of paths of length 2 in the graph, which is quite different from what you want. Just use the adjacency matrix instead.Nowhere in your code you remove the diagonal. You could do it like this: for n in G.number_of_nodes():  A[n][n] = 0


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
