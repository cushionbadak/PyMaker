Natural Text
How would I stub the output of pickCard() function which is being called twice in deal() function? I want to test both losing and winning cases.For example, I would like to have for the winning case, the first time pickCard() is called is given value 8 to card1, and second given value 10 to card2. I have tried using @Mock.patch, but this works only for doing one call.I have used  self.blackjack.pickCard = MagicMock(return_value=8) but again if i use it twice it will overwrite the return valueHere is the code:The test file is:EDITI ran this test with above code, and I get this stack trace instead of passingDo I need to put the two g.pickCard() elsewhere in the test? Or do I need to need to access this in the self.game.deal() method somehow?
mock.patch is the way to go, but instead of return_value you should specify side_effect=(8, 10)EDIT #1Pick card was just for demonstration that different cards are picked.In your code you pick both cards and then call game.deal which picks another two cards which are not mocked which raises StopIteration. Also, since your game object already exists (created in setUp) you should patch this object directly, not create a new game object, hence your test_1 should be:You path object's property pickCard with MagicMock and set it's side effects to 8 and 10 respectively.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
