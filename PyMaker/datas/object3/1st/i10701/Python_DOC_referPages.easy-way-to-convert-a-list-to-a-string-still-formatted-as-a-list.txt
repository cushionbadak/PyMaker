Natural Text
This should be quite simple but I can't find a simple solution. Frankly this should be a one liner.In Python 3, how can you convert a list, such asto a string that is formatted exactly the same, likeI don't wish to split it into two words.I want to keep the traditional list formatting. I initially thought you could just bind the list as a string like (str)list_name but apparently not. Is there not a simple function for this?EDIT:I found thanks to AChampion that it was a simple syntactical error. I was trying to bind a list to a string like this:When I should have been writing it like thisThat gives me exactly what I was looking for. Thanks for the help and sorry I had to bring such a beginner question here. Still getting used to Python.
Both a lists str() and repr() forms are what you are asking for, assuming that the it is a list of simple strings.If you have a more complicated structure and wish to transfer (serialize) to string form and back to object form you may want to look into the json module:
Just simply say:Python won't just convert the string to string format unless your explicitly tell it to. Like so:Or if you want a function:Although the function is really more like a wrapper. I'd just convert the list using python bulitin str() straight up, rather then trying to put it in a wrapper function.
Short answer is: You can't do exactly what you're asking.You cannot take any list that you typed in Python and get a string with the exact same original formatting. Python is pretty lenient with spacing within lists, so you can construct lists as such:['hello', 'world']['hello','world'][ 'hello', 'world' ][      'hello',         'world'       ]When Python creates these lists as lists, it doesn't preserve information about how you wrote it. So, there's not a way to get that back.If you just want a stringified list, you should probably use json.dumps.


Answer URL
https://docs.python.org/3/library/json.html#json.dumps
