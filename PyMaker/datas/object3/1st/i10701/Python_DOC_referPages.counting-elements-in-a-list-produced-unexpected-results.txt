Natural Text
This question already has an answer here:Loop “Forgets” to Remove Some Items [duplicate]                    10 answers                I'm trying to count the occurrences of each character in the sentence. I used the code below:The problem is, that the first letter of each word, except for the first word is not printed and the count is incorrect (every time a new word starts,  the count decrements by 1, starting from 7):When I create 2 for-loops, instead of 1, it works better:And here's the output:The only thing is, the 'o' character appears in the output twice... Why is that?Also, why won't 1 loop work?
Iterate over a copy of the list and use  an elif or else just continue after the remove, you don't want to count empty spaces.You could also just str.join after splitting on whitespace:But neither of your own solutions actually work correctly even making a copy of the list, you are missing letters in the output:There are 26 unique letters in the string but you output ~17.What you need is to keep track of the letters seen and only print the count once, your code keeps no record of what character has been printed it just randomly sets a flag:Or if the order first seen does not matter  then just call set on the string:Or if you had large amounts of data, you would be better with a Counter dict:
your are changing the list chars over which are are iterating:which gives:you should not modifier the list you are iterating over. just skip the element which you do not want to process:
The problem arises because you remove the space char while the loop runs, and it disrupts the iteration process.Simply don't do anything when a space char is encontered.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
