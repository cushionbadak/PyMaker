Natural Text
its suppose to produce "Hi, my name is Mark." or "Hi, my name is Steve."but instead it produces "Hi, my name is undefined."
It should be printing the object's representation in memory (something along the lines of Hi, my name is <__main__.Person object at 0x005CEA10>).The reason is that the first argument of a method is expected to be the object that the method is called upon.Just like you have def __init__(self, name): you should have def introduction(self, myname):.Then you will encounter another problem, as introduction now expects an argument myname which you don't provide it. You don't actually need it since you now have access to self.myname.Will output
You need to declare introduction() -> introduction(self) as an instance method (by passing in self) to be able to access the instance variable self.myname. Sample output:Please note however, that the first parameter in a function within a class is reserved for either a class, or object to pass itself to (unless a @staticmethod tag is applied to the method, then the first implicit parameter is not passed; which essentially behave as module methods).Also keep in mind that self is not a reserved word, so you could name it anything (even though self is PEP convention). The below example executes the same output as the example above, and is semantically the same. 9.3.5. Class and Instance Variables
Your problem is that your giving your introduction method the parameter myname, but never supplying it with a  valid argument.You can simply do:your giving the introduction method, the variable from your class myname.But the above is not even necessary. Since your initializing your name variable in the __init__ method of your class, it is like a global variable. So you can simply say:


Answer URL
https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables
