Natural Text
I am writing a program compatible with both Python 2.7 and 3.5. Some parts of it rely on stochastic process. My unit tests use an arbitrary seed, which leads to the same results across executions and languages... except for the code using random.shuffle.Example in Python 2.7:Same input in Python 3.5:Note that the pseudo-random number is the same, but the shuffled lists are different. As expected, reexecuting the cells does not change their respective output.How could I write the same test code for the two versions of Python?
In Python 3.2 the random module was refactored a little to make the output uniform across architectures (given the same seed), see issue #7889. The shuffle() method was switched to using Random._randbelow().However, the _randbelow() method was also adjusted, so simply copying the 3.5 version of shuffle() is not enough to fix this.That said, if you pass in your own random() function, the implementation in Python 3.5 is unchanged from the 2.7 version, and thus lets you bypass this limitation:Note however, than now you are subject to the old 32-bit vs 64-bit architecture differences that #7889 tried to solve.Ignoring several optimisations and special cases, if you include _randbelow() the 3.5 version can be backported as:which gives you the same output on 2.7 as 3.5:
Elaborating on Martijn Pieters excellent answer and comments, and on this discussion, I finally found a workaround, which arguably doesn't answer my very question, but at the same time doesn't require deep changes. To sum up:random.seed actually makes every random function deterministic, but doesn't necessarily produces the same output across versions;setting PYTHONHASHSEED to 0 disables hash randomization for dictionaries and sets, which by default introduces a factor of non-determinism in Python 3.So, in the bash script which launches the Python 3 tests, I added:Then, I temporarily changed my test functions in order to brute-force my way to an integer seed which would reproduces in Python 3 the results expected in Python 2. Lastly, I reverted my changes and replaced the lines:by something like that:Nothing to brag about, but as the saying goes, sometimes practicality beats purity ;)This quick workaround may be useful to somebody who wants to test the same stochastic code across different versions of Python!
Someone may correct me if I'm wrong but it seems that numpy.random module do not change between python 2 and 3.I got the same result in both Python 2.7 (with np 1.12.1) and 3.7 (with np 1.14.5).The doc also states that generated numbers should be the same between versions.Compatibility Guarantee A fixed seed and a fixed series of calls to  ‘RandomState’ methods using the same parameters will always produce  the same results up to roundoff error except when the values were  incorrect. Incorrect values will be fixed and the NumPy version in  which the fix was made will be noted in the relevant docstring.  Extension of existing parameter ranges and the addition of new  parameters is allowed as long the previous behavior remains unchanged.


Answer URL
https://docs.python.org/3/library/random.html#random.seed
