Natural Text
I'm using the subprocess module to execute two commands:I'm aware of a few pitfalls in this design, like the error_file being shared with the functions. This is easily refactored, though. What I'm trying to do is to detach the entire process to background. I would accomplish this with  But this would pose a race problem, because I want to make sure that comm_1 is finished before comm_2 starts. What is the best approach to do this with subprocess? I can't use python-daemon or other packages outside the standard Python 2.6 library.EDIT: I could try to use something likeBut the ideia is to have only one way to start the job from the python script.
You can check to make sure the process inside of comm_1 dies before starting the subprocess call within comm_2 by using wait(). But to do so, you're going to have to use Popen() instead of check_call().proc_1.wait() is going to wait for 20 seconds (you can change the time) for the process to finish before continuing. If it takes longer than 20 secs, it's going to throw a TimeoutExpired exception, which you can catch in your except block.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.wait
https://docs.python.org/3/library/subprocess.html#subprocess.Popen
