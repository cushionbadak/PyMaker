Natural Text
I am using recursion to get the permutation of a list. Here is what I wrote, but the yield version won't work:the result:I think I used yield like in this the answer.Can anyone tell me why yield doesn't take effect?By the way, leftlist = [onelist[j] for j in range(0,lenlist) if j != i]in permutation_rec2, is ugly I think. When the list is big, it creates many temporary lists. How can I improve that? 
You need to pass on the results of the recursive call; each call returns a generator and you do have to iterate over that. The answer you linked to certainly loops over the recursive call too.Add a for loop over permutation_rec1() and yield each resulting value on to the next caller:If you are using Python 3.3 or newer, you can use the new yield from generator delegation syntax:


Answer URL
