Natural Text
I have a string in python. I want to split it with maxsplit = 1 on separator which is pretty close to end of the string.For e.g.Will a.split(",", 1) be better in terms of performance than a.rsplit(",",1)?
Below is a time test using timeit.timeit to compare the speeds of the two methods:As you can see, they are about equivalent.  str.split is a few fractions of a second faster, but that is really unimportant.  So, you can pick whichever method you want.P.S.  Although, the str.split method is one less character to type. :)
Adding to the previous answers, using split vs rsplit should depend on where you want to search. Example:Here you are searching for 1, in which case using rsplit is faster than split, whereas for the examples in the previous answers, split is faster.
I'm super late to this party, but for anyone else stumbling across this, partition is faster than split(x, 1):And you can ditch the , easily if you want by h, _, t = s.rpartition(',') or such.
I think there is a slight difference between split() and rsplit():for example:You see, split() is used if you want to split strings on first occurrences and rsplit() is used if you want to split strings on last occurrences.
Just to complement @iCodez answer, you can run a timing test from the command-line:So, indeed, it's an irrelevant difference.


Answer URL
