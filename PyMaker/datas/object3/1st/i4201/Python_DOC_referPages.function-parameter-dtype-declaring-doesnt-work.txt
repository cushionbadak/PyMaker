Natural Text
Why doesnt this give back '12'?The '+' sign should concatenate two strings, not add them.
That's not what annotations are for. Annotations are metadata, not an instruction to Python to convert data. From the Function definitions reference documentation:Parameters may have annotations of the form “: expression” following the parameter name. Any parameter may have an annotation even those of the form *identifier or **identifier. Functions may have “return” annotation of the form “-> expression” after the parameter list. These annotations can be any valid Python expression and are evaluated when the function definition is executed. Annotations may be evaluated in a different order than they appear in the source code. The presence of annotations does not change the semantics of a function.(Bold emphisis mine).For example, the Python type hinting framework uses annotations to attach type information to functions for static analysis, validating that code actually passes in the types that are expected to be passed in.Just convert your values explicitly; in the call:or in the function itself:or in a decorator:Demo:


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#function-definitions
https://docs.python.org/3/library/typing.html
