Natural Text
I have 2 events on the canvas on mouse click.one on the canvas ...other on a shape in the canvas ...The problem I am having is that both the events are getting fired. Is there a way to consume the click event on the shape itself (hopefully not using a global variable)?
There is no mechanism to prevent the handling of the event by the widget, when both the canvas and a canvas item both are bound to an event.From the canonical documentation:If bindings have been created for a canvas window using the bind command, then they are invoked in addition to bindings created for the canvas's items using the bind widget command. The bindings for items will be invoked before any of the bindings for the window as a whole.Since the binding for the item is invoked first, one solution is to use a variable that the widget binding can use to know it should ignore the event.Another solution would be to not bind to the canvas items, and let all handling come from the binding to the widget. Within the bound function you can ask the canvas which item was clicked, and then do the item-specific function if something was clicked on.Here's an example of the second technique:
Here's something that's very similar to the second technique mentioned in @Bryan Oakley's answer except that does bind an event handler to each canvas item, not the the Canvas widget itself. To detect button clicks on widget itself that aren't on any item within it, a background rectangle item that fills the entire canvas is added first and given a special tag, which allows clicks which aren't on top of any other items on the canvas to be handled as special cases (such as calling a different event handler function). 


Answer URL
https://docs.python.org/3/library/tkinter.html#tkinter-life-preserverr
