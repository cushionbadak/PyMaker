Natural Text
I am developing an application wherein I am receiving serial byte packets of varying length which are marked by framing flags into a buffer and then utilizing the collected bytes to access a dictionary to identify values.  Currently, my serial read function watches the serial line until an END_FLAG byte is present or a timeout occurs as such...This ultimately reads the hex bytes into the buffer wherein they are represented with the escape character "\x##" or as their ASCII value.  Within the code I have a dictionary which allows me to identify the microcontoller model based on a four byte hex value as such:The problem I am having is that in order to access the values in this dictionary I need to combine two separate bytes(bytes 3 & 4 from the following packet). My goal is to reassemble bytes 3 and 4 into the value 0x0446 to use to access the previously mentioned dictionary.  However I am at a loss as to how to accomplish this as all attempts to do so have yielded either simply combined strings (which makes sense given that these are string representations), or integer values which are not held to be equivalent when I attempt to access the dictionary.  My question is, is there a way to combine these hex values (the 'F' and '\x04') so as to use them to access the dictionary value with key 0x0446?  OR, is there a better way to receive the hex bytes during my serial read function so that they are stored in a manner more conducive to combining them later on?
struct


Answer URL
https://docs.python.org/3/library/struct.html
