Natural Text
So I have a dictionary with index keys looks like :'00' : 'Value1''01' : 'value2'.....'99' : 'value 100'Im trying to get all possible combinations of key-value by using this :But there is a problem, it's creating duplicates like 01999901But I need only unique values, skiping strings like in example above, how can I do this ?
You do not have a problem, itertools.combinations() produces combinations that are unique in any ordereding, exactly as you already wanted. From the documentation:Elements are treated as unique based on their position, not on their value. So if the input elements are unique, there will be no repeat values in each combination.and the source code example given:Note that there is no BA, because AB is already generated.Concretely, for your example:Only '0199' is produced, '9901' will never be produced.As a side note, you don't need to call dict.keys() when sorting keys. sorted(KEY_DICT) will do just fine, as iteration over the dictionary produces keys too.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
