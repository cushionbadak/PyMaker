Natural Text
I want to get "next asset" with an iterator-like object, but (instead of __next__() method) there are two algorithms loading next asset (next1 and next2 below), which can be implemented as a "quasi-iterator" like:To be clear, what is the next retrieved object may depends on the "history" of calling next1 and next2, like:next1(); next1(); next2(); next1(); next2()My question: May this (two kinds of "next" step in an iterator) be implemented as a generator function?I guess this can be done with a global variable to which the function refers. But can it be done without using global variables, but with some local variable?If it is hard or impossible with current Python, can we discuss how to add new semantics to Python to make it possible?
Here's a simple example of using send to switch a generator between two different iteration modes: it either increments its current value or multiplies it. The same principle can be applied to your graph traversal task.The send method allows you to send an object into the generator. Annoyingly, the result of send is the current value that you would have obtained by calling next; it would be nice if you could send without having the generator yield a value, but that's just something we have to live with.outputIf you have trouble applying this technique to your graph traversal task please ask a fresh question (possibly linking to this one) that includes some relevant graph code, so that answerers don't have to write that stuff from scratch in order to test and demonstrate their code.
You can try this:


Answer URL
https://docs.python.org/3/reference/expressions.html#generator.send
