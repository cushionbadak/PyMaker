Natural Text
I am currently writing a program to model Dijkstra's algorithm, however I am having some trouble the graph in its current form below:I want to get the graph in the form such as the one belowWould this be possible?
You can use collections.defaultdict for this.Code:Output:
Here is a compact way using list comprehension:Breaking this down:{k: ... for k in G[0]} is iterating over the first element of G to get the keys of the output dictionary.{k: (... for v in G[1] if k in v[0]) ... } is a generator expression over the second element in G, which will yield a value if the key k is contained in the set.v[0] ^ {k} is the symmetric difference of the set with the key- this removes the key from the set.list(v[0] ^ {k})[0] converts the set to a list and gets the first element. This assumes there will always be only 2 elements in the set, one of which is the key.(list(v[0] ^ {k})[0], v[1]) makes a tuple where the second value is the number.dict([(list(v[0] ^ {k})[0], v[1]) ... calls the dict constructor on this list of tuples.Perhaps a slightly friendlier version, using more sensible variable names instead of tuple indexing and set.pop() instead of list indexing:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
