Natural Text
All I have a text file formatted like below which I am bringing into Python:Ultimately I want to develop a dynamic query that allows me to remove the '#' symbol and replace with a '$' symbol, and then add up the values within the text file/count the number of items within. I came up with this through some trial and error, but it isn't dynamic to handle changes in the text file:Any suggestions? Thanks ahead of time for reading.
You can do it the following way:Explanation: To count items, we've used a set to get unique count. If you want all, use a list instead.We've calculated sum by extracting the numbers from list by splitting on dollar sign.

What about:Now, you have a dictionary, keyed by item "name" (so they need to be unique in your file, otherwise a dictionary isn't the best structure here) and each value is a float corresponding to the parsed cost.There are some corner cases you may want to look at to make this solution more robust.  For example if the item "name" includes a # sign (i.e. there is more than one # per line), the values aren't properly formatted to be parsed by float, etc.
You can use:We have to cast the price (line.split("#")[1]), which is a string,  to a float, otherwise we get a Type Error when we try to add it to total_price.
Since it is long due that i should refresh my Python skills i had some fun with your question and came up with a parser class:This class takes a file path and a regex-like string, which is then compiled to a regex object. On instantiation it reads and parses the contents of the file while ignoring invalid lines (not matching the regex syntax like empty lines).I also added a get_values method which can apply converters to named groups from the regex, see the example (it converts the named group price of every line into a float value):ResultBut coding fun aside, i suggest you try to get clean csv-like data and handle it properly through the csv class.


Answer URL
https://docs.python.org/3/library/re.html
