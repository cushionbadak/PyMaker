Natural Text
I'm using this code on test time.clock() function in pythonand the result isthe doc say "On Unix, return the current processor time as a floating point number expressed in seconds." but if the thread is sleeping for 3 seconds how is the result  of end-start so low?
Processor time means what is usually called CPU time, which is how much work the processor has done on the current process's behalf. That is next to nothing if you have only slept for 3 seconds.Use time.time() instead. 
As @decece quoted from the manual, perf_counter() would be a better choice here.If you want to test arbritary code, the timeit - module is a good choice:Output:You can give it a setup= code that is executed once and let it execute your sourcecode a number of times, getting the total time for all executions with otherwise default settings. This will average out timings if you divide by number again - making the resulting time more robust.API: timeitYour concrete measurements for the sleep-method will vary, as it mostly guarantees to wait "at least" the amount of seconds given, depending on OS - rescheduling and interrupts it might take longer:Also, the suspension time may be longer than requested by an arbitrary amount because of the scheduling of other activity in the system.Changed in version 3.5: The function now sleeps at least secs even if the sleep is interrupted by a signal, except if the signal handler raises an exception (see PEP 475 for the rationale).


Answer URL
https://docs.python.org/3/library/timeit.html
https://docs.python.org/3/library/timeit.html
https://docs.python.org/3/library/time.html#time.sleep
https://docs.python.org/3/library/time.html#time.clock
