Natural Text
Case 1Expected Output: 10Actual Output: 10This output is the very expected, and that is how global keyword behaves. Case 2Expected Output: 0Actual Output: 10If my understanding of global is correct, how the global keyword for global x in if block affected the local keyword x in the else block. I believe those are two different blocks. Is there an explanation for this behaviour.
The global statement is a declaration which holds for the entire current code block. if does not introduce a new code block.A block is a piece of Python program text that is executed as a unit. The following are blocks: a module, a function body, and a class definition.global is a directive to the parser.if is being evaluated at runtime, but global is picked up by the parser. The parser doesn't care about and cannot evaluate if statements.Excerpts from https://docs.python.org/3/reference/simple_stmts.html#the-global-statement and https://docs.python.org/3/reference/executionmodel.html.In other words, any global statement anywhere within a function definition always applies throughout the entire function.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-global-statement
https://docs.python.org/3/reference/executionmodel.html
