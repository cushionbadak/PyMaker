Natural Text
I've been learning about about C++ in college and one thing that interests me is the ability to create a shared header file so that all the cpp files can access the objects within. I was wondering if there is some way to do the same thing in python with variables and constants? I only know how to import and use the functions or classes in other py files. 
First, if you've ever used sys.argv or os.sep, you've already used another module's variables and constants.Because the way you share variables and constants is exactly the same way you share functions and classes.In fact, functions, classes, variables, constantsâ€”they're all just module-global variables as far as Python is concerned. They may have values of different types, but they're the same kind of variable.So, let's say you write this module:If you import spam, you can use cheese, exactly the same way you use eggs:C++ header files are really just a poor man's modules. Not every language is as flexible as Python, but almost every language from Ruby to Rust has some kind of real module system; only C++ (and C) requires you to fake it by having code that gets included into a bunch of different files at compile time.
If you are just looking to make function definitions, then this post may answer your question:Python: How to import other Python filesThen you can define a function as per here:https://www.tutorialspoint.com/python/python_functions.htmOr if you are looking to make a class:https://docs.python.org/3/tutorial/classes.htmlYou can look at example 3.9.5 in the previous link in order to understand how to create a shared variable among different object instances.


Answer URL
https://docs.python.org/3/tutorial/classes.html
