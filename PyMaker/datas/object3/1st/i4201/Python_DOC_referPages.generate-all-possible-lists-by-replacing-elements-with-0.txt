Natural Text
I would like to create from a list all the different list were 0,1,2,3...all element are replaced by an otherFor example, if the replacement item is 0:So far, I've tried I managed to do what I whant using Itertools but only in the case where 1 value is replaced by 0Does anyone know how to do this ?
This is one way using itertools. The benefit of this method is that it is lazy.A new list is produced on every __next__ call of the generator transformer.Alternatively, as below, you can output all combinations by calling list on the generator function.
Everyone's trying too hard here.  We want each value to be either the original value or 0 -- we want pairs like (1,0), (2,0), and (3,0):and then we can just pass that into product:
You can use recursion. First, create a function that can generate a full combinations for each index of the input:Output:
It's not pretty, but I'm sure you can get this idea to work.The idea is to use itertools.combinations to get all combinations of indices for every length, then we flatten this list with itertools.chain().Then we loop through this list of lists, setting those indices to the replace character.[[[1, 2, 3]], [0, 2, 3], [1, 0, 3], [1, 2, 0], [0, 0, 3], [0, 2, 0], [1, 0, 0], [0, 0, 0]]


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
