Natural Text
I need a help in my code, I am not able to do the binary file manipulation.code for creating the binary file:code for file manipulation:correct output:Exit from my code:the numbers -9, 20.5, 6, 10.8 are not being changed.I need this help.
code.py:Notes:Module documentation: [Python]: struct - Interpret bytes as packed binary dataStored values used many times in the code as variables. Example: the int format: int_format = "i"Also used struct.calcsize to replace the value sizes that are read from file (as a coincidence both int and float are 4, but it's more general this way)Split the program in functions:write_file - generates the file based on the numeros listread_file - reads (and parses) file content and returns it as a listmodify_file - reads the file content and replaces some of the values on the wayCalculates the new values that are going to replace old ones (e.g. int_replacement once, before the loop)The conditions (e.g. if numInt[0] > 10) were reversed (got corrected in the meantime)By using if / elif when converting the int, if the float coming after it needs to be converted as well, it wouldn't be. Changed to 2 separate if statementsThe main flaw was the way how [Python]: seek(offset[, whence]) was performed: always to the beginning of the file. This is not correct: seek from the current position (os.SEEK_CUR):When changing the int: seek back 8 bytes (the float and the int), write 4 bytes (which will move the file pointer 4 bytes forward) and then seek forward 4 more bytes (the float that comes after it) - so at the end the file pointer is in the same positionWhen changing the float: simpler, seek back 4 bytes, and write 4 bytes (which will move the file pointer 4 bytes forward - where it was)main- aggregates the aboveIn read_file and modify_file, the int and the float are read at once, so the 2 commented lines are equivalent to the line below themSome other minor changes, there could be more, but I don't want to overcomplicate the codeThe floats are different because of precision loss during conversion, but if printed with one decimal only, will match the original onesOutput:


Answer URL
https://docs.python.org/3/library/struct.html#module-struct
https://docs.python.org/3/library/io.html#io.IOBase.seek
