Natural Text
I have a list of alphanumeric data,   I need to divide each word in dict form like  Could you please let me know the easiest way to do this in python.
You can use itertools.groupby to group the elements of your list based on your condition(first two characters). Then supply the result to dict constructor
output:
Edit:Sorry I didn't notice the replication in your output. Others have short solutions, but a pure pythonic way is:
Just to add to the first answer by Willian Vieira, I thought it would be helpful to know the output print(d) right after d= {i[:2]:[] for i in list}, which is:just to clarify this line in the two-line solution. Just to see how the keys are made from taking the first two characters in each element of the list (without duplication of these characters), and the values are initialized as empty lists. 
As per your comment to the question, rule to split is: split after the first digit. So, you can search for the index of the first digit, split and add to the dict. I ignored an input with no digits. 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
