Natural Text
This question already has an answer here:Why 1 in range(2) == True evaluates to False? [duplicate]                    2 answers                From the disassemble code I can see the foo1() should return False since it won't execute the in comparison and hence False.But what happens to foo2(), why does this return False?Whereas foo3() and foo4() works perfectly as we can be confirmed from the disassembled code.Ref: https://docs.python.org/2/library/dis.html Python2.7I've seen similar behavior python3+; the disassembled code is different but logic seems to be same in the disassembled code.Python operator precedence:https://docs.python.org/2/reference/expressions.html#operator-precedence Operator precedence for== and in is same but it doesn't match the expectation.
Both in and == are relation operators, and relational operators in Python chain. 3 in [1, 2, 3] == True performs both 3 in [1, 2, 3] and [1, 2, 3] == True simultaneously.But you shouldn't be comparing against booleans regardless. Pass the result to bool() if you need to, but in already results in a boolean.


Answer URL
https://docs.python.org/3/library/stdtypes.html#comparisons
