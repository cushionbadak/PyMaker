Natural Text
Suppose I have a function and, depending on its inputs, it must "advise" the caller function that something went wrong:Notice at the except block I want to pass something that the caller function can handle and stop its execution if it's necessary, otherwise, it will return the right object.
You already seem to know how exceptions work.The best thing to do in case of an error is to raise an exception.Returning some magic value is considered a bad practice, because it requires the caller to explicitly check for it, and a hundred of other reasons.You can simply let the sqlalchemy.orm.exc.NoResultFound exception escape (by removing the try: and the except: block in get_task()), and let the caller handle it with a try: ... except: ... block, or, if you prefer to do some hiding, you can define a custom exception:and use it like this:Feel free to make the YourException class more informative by explicitly adding some attributes and a constructor to set those, if needed.The default constructor makes a decent job however:


Answer URL
https://docs.python.org/3/tutorial/errors.html#raising-exceptions
