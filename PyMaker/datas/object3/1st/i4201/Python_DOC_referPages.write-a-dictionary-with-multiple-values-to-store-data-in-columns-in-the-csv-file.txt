Natural Text
I am trying to write following dictionary into csv file:The result I want to achieve is to have dictionary keys as column headers is csv file and map corresponding key values to those columns:I have tried following code but it's not working for me:
I've modified your function so it doesn't use a global variable which generally should be avoid whenever possible. The "trick" here is to use the built-in zip() function to transpose the values in the dictionary so they're in column-major instead of row-major order.To understand better what's going on in the code below, first consider that the dictionary.values() call is producing the following sequence from the sample data shown in the dictionary in your question:All of these are passed to the zip() function all-at-once by using the following shorthand Python notation (note the * prefix):Which is equivalent to calling it like this:So the zip() function rearranges them resulting it it producing this sequence:Another way to to think about is to consider the values as a 2D matrix:in which case zip() is doing to them:In other words, it's exchanging the rows and columns of the matrix, which is called "transposing" the matrix. As I said, it's being done here to put them into the order needed to write the column values row-by-row into csv file.Anyway, here's the code:Contents of the test_output.csv file produced:
If you're not opposed to pandas, this is very easy:Note, the sep=' ' is to have it as a space delimited csv. You can omit that (or use sep=',', which is the default) to have it as a regular comma separated csv
You could try the following:The output when you open the csv file is this:


Answer URL
https://docs.python.org/3/library/functions.html#zip
