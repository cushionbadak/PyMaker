Natural Text
I'm trying to write a python script that can echo whatever a user types when running the scriptRight now, the code I have is (version_msg and usage_msg don't matter right now)But if I try to run the script (python options.py -e hello world), it echoes just ['hello']. How would I go about fixing this so it outputs ['hello', 'world']?
A slightly hacky way of doing it:I then runOutput:
In argparse this is quite easy, with its nargs parameter:nargs is used to specify how many strings the Action takes.  '+' means one or more.  The results are collected in a list.  It models the nargs values on the regex usage (e.g. '?' and '*' also work).Looking at the optparse docs, I see a nargs parameter, but it must be a number.  For a variable number, we have to use a callback as described in:https://docs.python.org/2/library/optparse.html#callback-example-6-variable-argumentsUsing the function defined in this section:In argparse, nargs='+' collects values up to the next -- or -, but that allocation is done topdown, by the main parsing routine, not a callback defined for the option itself.
I think this is best accomplished by quoting the argument ie hello world becomes 'hello world' this ensures that the -e option consumes the entire string. If you really need the string to be broken up into pieces ie ['hello', 'world'] instead of ['hello world'] you could easily call split() on options.e[0]For a more complex method, you can use a callback, below links to a relevant example for you. https://docs.python.org/3/library/optparse.html#callback-example-6-variable-arguments


Answer URL
https://docs.python.org/3/library/optparse.html#callback-example-6-variable-arguments
