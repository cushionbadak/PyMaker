Natural Text
I'm now wrapping some functions in C++ dll whose original .h an .cpp file are not accessable. After learning the tutorial of ctypes, I still have the some questions. Let me show you some example:This is from the description file of the dll functions, just telling functions' names, effects and parameters:In order to wrap these functions in Python, what I'm tring to do is this:When I type and define the first function (after importing packages and loading the dll) in the VS2015 python interactice window, it gives me an error:Do I need to specify the type of input parameters? If so, how to do this? I can't recognize the type of some parameters in the forth function such as PUINT lpDeviceID and UINT TaskCode. How to specify them? Moreover, do I need to specify the functions' return value's type? If so, how to specify them?Could somebody give me the correct wrapping code of the examples above? Thanks for your attention!
Your problem is that you don't have the namespaces quite right. ItsYou can import the ctypes data you need directly into the module. And since ctypes creates function wrappers for you, you don't really need your own def to do the same thing. You can call them with cppdll.Whatever but if you like having the functions at the namespace level, you can just create variables for them.
Here's a full set of definitions that should work.  Note how to pass an output parameter by creating an instance of the type and passing it by reference.  Many common Windows types are also defined in ctypes.wintypes as well.Note for InitNetwork the first parameter types are char* in C, so you need c_char_p not c_char and you can directly pass Python byte strings as along as the C code doesn't write to pointers.  ctypes.create_string_buffer() can be used to generate a writable char array if needed.


Answer URL
https://docs.python.org/3/library/ctypes.html#return-types
