Natural Text
Is there a way to duplicate the unicode category matching capability of regex using just re?  I have an re match string which identifies words (r'\b[^\W\d_]+\b') which I would like to amend so that punctuation which is attached to the word (i.e. has no non-punctuation characters intervening between the word and the character) is included in the match.  Using regex I would do r'\b[^\W\d_]+\b\p{P}*' but I cannot be sure that regex will be installed on all the systems to which the final script will be deployed and thus would like to rework the match condition to be entirely re compatible.  Is that possible, and if so how would I do it?
To replicate the \p{P} functionality, you'd have to manually build the set, using the unicodedata module; you still need to manually filter all codepoints:Personally, I'd just install regex at this point, and not try to manually build huge character sets.You may want to do some statistical analysis on what kinds of characters you actually need to match, rather than all punctuation, to narrow down that set, or express it in terms of 'not a word character or whitespace', with [^\w\s]*, which is broader but faster to match.


Answer URL
https://docs.python.org/3/library/unicodedata.html
