Natural Text
I have a dict that looks like this:And I need to end up with a 2D dict that looks like this:My regex for splitting the key is: "[a-zA-Z]*[^\/]"But I'm absolutely stumped on how to go about making this. I believe I have to loop through the dict, split the key to two strings and construct the new dict using {str1:{str2: original dict value}} but my knowledge on dicts and slicing etc is shabby and I can't put my thought in code.Could you help in determining what "tools" I need to do this?Edit: I had totally forgot about .split(), however this wasn't the most important aspect of the question. Thanks all for reminding me though!
You can just split your string on the '/' character, there's no need for regex here.
You can use str.split:Output:
If you want to split on a regular expression you could use re.split(regex, stringToSplit):OutputHowever, for what you want to achieve i believe that key.split("\/") would be more than enough
You can split keys with str.split('/'). This one-liner will work:


Answer URL
https://docs.python.org/3/tutorial/
