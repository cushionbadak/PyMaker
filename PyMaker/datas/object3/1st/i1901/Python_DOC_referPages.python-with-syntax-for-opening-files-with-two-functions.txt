Natural Text
Let's say I want to open a text file for reading using the following syntax:But if I detect that it ends with .gz, I would call gzip.open(). If "do something" part is long and not convenient to write in a function (e.g. it would create a nested function, which cannot be serialized), what is the shortest way to call with either gzip.open or open based on the return of fname.endswith('.gz')?
The context manager helps close the object.You don't have to create the object used as a context manager, at the same time you use with to enter the context, though. The open() and gzip.open() calls return a new object that happens to be a context manager, and you can create them before you enter the context:In both cases, the object returns self on entering the context, so there is no need to use as f here.Also, functions are first-class citizens, so you can also use a variable to store the function and then call that in the with statement to create the context manager and file object:This doesn't really buy you anything over the other method here, but you could use a dictionary to map extensions to callables if you so desire.The bottom line is that with calls context-manager hook methods, nothing less, nothing more. The expression after with is supposed to supply such a manager, but creating that object is not subject to the context management protocol.
You can bind either context manager to the same name and choose early:This allows for some nice patterns, for instance if the input is possibly an opened file handle then you could use contextlib.nullcontext to get a no-op in the with block for the given case.



Answer URL
https://docs.python.org/3/reference/datamodel.html#context-managers
https://docs.python.org/3/library/contextlib.html#contextlib.nullcontext
https://docs.python.org/3/library/contextlib.html#contextlib.nullcontext
