Natural Text
I have a list of list, the content of which should be read and store in a structured dictionary.The 1st, 2nd, 3rd columns in each row represents 'id', 'attr1', 'attr2'. If 'id' in a row is not empty, a new object starts with this 'id'. In the example above, there are two objects. The object with 'id' being '1' has 3 elements in both 'attr1' and 'attr2'; while the object with 'id' being '2' has 2 elements in both 'attr1' and 'attr2'. In my real application, there can be more objects, and each object can have an arbitrary number of elements.For this particular example, the outcome should beCould you please show me how to write a generic and efficient code to achieve it?Thanks!
Just build the appropriate dict in a loop with the right conditions:
Not very beautiful code, could be a bit more concise.
Here's one solution using collections.defaultdict:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
