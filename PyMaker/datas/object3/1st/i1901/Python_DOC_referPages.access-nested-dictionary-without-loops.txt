Natural Text
This question already has an answer here:Access nested dictionary items via a list of keys?                    14 answers                If I have a nested dictionarymydict={'a1':{'b1':1}, 'a2':2}and a list of indexes index = ['a1', 'b1'] leading to an inner value, is there a pythonic / one-liner way to get that value, i.e. without resorting to a verbose loop like:
You can use functools.reduce.dict.get is a function that takes two arguments, the dict and a key (and another optional argument not relevant here). mydict is used as the initial value.In case you ever need the intermediary results, use itertools.accumulate.Unfortunately, the function does not take an optional initializer argument, so we are prepending mydict to keys.


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
https://docs.python.org/3/library/itertools.html#itertools.accumulate
