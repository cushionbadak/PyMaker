Natural Text
If I am looking for a small list of words (these words change dynamically) in a paragraph and want a case insensitive search, I use a pattern like:which turns into this pattern string:This works to find a match in text like the following using re.search():How do I return the actual word in the original match pattern? In this case the word "Cat" with a capital C and not the word in the search text with a lowercase c. Thanks
printsThis builds a regex like \b(?:(Cat)|(Dog)|(Horse))\b, i.e., a non-capturing group (this is the meaning of ?:) surrounded by word boundaries (the \bs), which is an alternation of capturing groups. The index of the last (and only, if any) matching capturing group is returned in match.lastindex, but this is also the index in the words list (because of how the regex was constructed), except it is offset by 1 because group 0 is the full match.The set of words found in the text is easily constructed byThe following is an edit by Patrick Artner, of which I don't think it's an improvement - but I'll leave it here because it is food for thought.Edit - pls, incorporate:
Somewhat clumsy with a workaround-dict that maps back from the regex-group-match to your original keyword - but should help you out:Output:


Answer URL
https://docs.python.org/3/library/re.html#re.Match.lastindex
