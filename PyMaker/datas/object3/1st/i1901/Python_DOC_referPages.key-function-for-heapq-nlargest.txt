Natural Text
I have a dictionary with {key: count}, saystatus_count = {'MANAGEMENT ANALYSTS': 13859, 'COMPUTER PROGRAMMERS': 72112}and I am trying to write a key function for heapq.nlargest() that sorts based on count and if there are ties I have to sort based on alphabetical order(a-z) of keys. I have to use heapq.nlargest because of very large N and small k = 10. This is what I got until now, top_k_results = heapq.nlargest(args.top_k, status_count.items(), key=lambda item: (item[1], item[0]))But, this would be incorrect in case of breaking ties with alphabetical order. Please help!
Simplest may be to switch to heapq.nsmallest and redefine your sort key:Alternatively, you can use ord and take the negative for ascending order:Remember to use str.casefold if you need to normalize the case of your string.


Answer URL
https://docs.python.org/3/library/functions.html#ord
https://docs.python.org/3/library/stdtypes.html#str.casefold
