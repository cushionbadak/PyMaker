Natural Text
I am trying to write a unit test (or call it integration test if you want) for my main module and main() method.It looks like this:I have tried to mock/patch the modules in these ways:and and andBut all of these ways do not mock/patch the mymodule.a.run method ending up in the real method invoked.When I tried to patch mymodule.main.a.run or mymodule.main.mymodule.a.run I only got ModuleNotFoundErrors. I tried these targets after reading the Where to patch part.Honestly I do not really understand where is the problem with the patching, as I am patching before the module mymodule.a is imported and it's run() is called (as this happens only after os.system('...') part in the test). Any help is highly appreciated!
Patching and mocking only works within the same interpreter, but your call to os.system('python [...]') runs the the main function in a new interpreter. Instead, you probably want to call the main function directly. That might involve patching some sys objects like sys.exit and sys.argv. However, a common practice is to provide an optional args argument to the main function:This way, one can easily inject and test command-line arguments:Also, the pytest.raises context can be used to manage the call to sys.exit:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
