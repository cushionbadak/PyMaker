Natural Text
Let us suppose we have the following structure:In outer_module.py we'd have:In inner_module.py we'd have:Then I get a ModuleNotFoundError: No module named 'foo' running the outer_module.py. How can I import this submodule that imports a submodule without getting a ModuleNotFoundError?
from foo imports from a top level module foo. You need to explicitly qualify that you are looking for a module in the same package.Use .foo to indicate you are importing from the same package:You can also specify an absolute path, but then you have to include the package name:Quoting from the import statement documentation:When specifying what module to import you do not have to specify the absolute name of the module. When a module or package is contained within another package it is possible to make a relative import within the same top package without having to mention the package name. By using leading dots in the specified module or package after from you can specify how high to traverse up the current package hierarchy without specifying exact names. One leading dot means the current package where the module making the import exists. Two dots means up one package level. Three dots is up two levels, etc. So if you execute from . import mod from a module in the pkg package then you will end up importing pkg.mod. If you execute from ..subpkg2 import mod from within pkg.subpkg1 you will import pkg.subpkg2.mod.
In inner_module.py, either use a relative or absolute import:Documentation links:https://docs.python.org/3/tutorial/modules.html#intra-package-referenceshttps://docs.python.org/3/reference/import.html


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#import
https://docs.python.org/3/tutorial/modules.html#intra-package-references
https://docs.python.org/3/reference/import.html
