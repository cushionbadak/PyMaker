Natural Text
Whenever I run part of my program that has a threading.Lock in it, my program stops running altogether (It does not crash, just pauses).I need this as it is a server and multiple clients may be connecting and trying to overwrite the data all at the same time. At the time of running this, only one thread was active with a client connecting to it. I use this for my Sqlite3 databases too. I have not noticed it causing a problem there, as it seems to run perfectly fine despite the global lock. All are done in the same format ofHere is where the thread starts alongside how I import the threadHere is the programThe two functions are called in this sequence:The with global lock works fine in deleteUser_InHash() function but stops the program in addUser_InHash().The program hangs here:Hanging on the line the piece of code:I know this is true as it never gets to the print statements:Inside "addUser_InHash()"
Note to all: I changed toand now my program is running fine, I believe it has something to do with the fact that RLock allows threads to re-acquire a lock more than once, whilst it seems that normal locks cannot?Source: https://docs.python.org/3/library/threading.html#thread-objects


Answer URL
https://docs.python.org/3/library/threading.html#thread-objects
