Natural Text
Look at the following list of numbers:Now I try to find the index numbers of all the numbers in the list which are higher than 25. Then I want to make a list of those index numbers.Now the problem is that it registers some index numbers twice. For example: we see the first number above 25: 28.6. This number has the index number 1. If we look further, we see again 28.6, this should have the index number 14. Instead, it got the index number 1 again.Here you see my "wrong" output:Would someone have an answer to my problem?Thank you in advance!
You could do it like the example below:The reason your code wasn't working correctly is because index returns the index of first occurance in that list, causing values later in the list to show up with a wrong index because they get the index of the item with the same value that's also appearing earlier in the list.
is one way you could do it with a simple list comprehension that uses enumerate to count from 0..len(my_values)-1
Using index returns the index of the first occurrence of that item in your list (https://docs.python.org/3/tutorial/datastructures.html). This is why you only get the earlier appearing indexes, to gather all the indexes you would want to use enumerateUse enumerate and only take the indexes of items with a value greater than 25
As an alternative, you could use numpy's where function:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
