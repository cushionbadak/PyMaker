Natural Text
If I run this code, I'v got the subject error message. But why? And how to avoid it getting the C class having its parents slots?
Simply speak, you just cannot do it.As stated in Documentation,Multiple inheritance with multiple slotted parent classes can be used, but only one parent is allowed to have attributes created by slots (the other bases must have empty slot layouts) - violations raise TypeError.The idea behind __slots__ is to reserve specific slots for each attribute in the memory layout of your instances. A and B are trying to reserve the same part of their memory layout for the slot1 and slot2 attributes, and C can't have the same memory reserved for two attributes. It's just not compatible.Thanks for JCode metioned in comment, the following method is modified to be correct.But there is always the way, I personally prefer to use a common base contained all required slots if __slots__ is necessary while there is multiple inherited class.UpdateThe 4 values will be 88, 88, 88, 312. Though __slots__ reserved.
It had (in my opinion) a silly workaround.That's why no TypeError is raised when __slots__ is empty, and having an empty __slots__ attribute preserves the "wondered" python behaviour what warns when assigning to an attribute not defined in __slots__.So, consider the following metaclass:An then deploy on base classes.If we execute following codeThis produces following output


Answer URL
https://docs.python.org/3/reference/datamodel.html#notes-on-using-slots
