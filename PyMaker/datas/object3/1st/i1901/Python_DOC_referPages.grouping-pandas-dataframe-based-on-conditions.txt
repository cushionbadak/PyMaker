Natural Text
I am following the suggestions here pandas create new column based on values from other columns but still getting an error. Basically, my Pandas dataframe has many columns and I want to group the dataframe based on a new categorical column whose value depends on two existing columns (AMP, Time). I am able to select the proper sub-dataframes based on the conditions specified above, but when I apply the above function on each row, I get the error. What is the correct approach to group the dataframe based on the conditions listed?EDIT:Unforunately, I cannot provide a sample of my dataframe. However, here is simple dataframe that gives an error of the same type:EDIT 2:As suggested below, enclosing the comparison operator with parentheses did the trick for the cooked up example. This problem is solved.However, I am still getting the same error in my my real example. By the way, if I were to use the column 'AMP' with perhaps another column in my table, then everything works and I am able to create df['GRP'] by applying the function f to each row. This shows the problem is related to using df['Time']. But then why am I able to select df[(df['AMP'] > 100) & (df['Time'] > day_1)]? Why would this work in this context, but not when the condition appears in a function?  
Based on your error message and example, there are two things to fix. One is to adjust parentheses for operator precedence in your final elif statement. The other is to avoid mixing datetime.date and Timestamp objects.Fix 1: change this:to this:These two lines are different because the bitwise & operator takes precedence over the < and > comparison operators, so python attempts to evaluate 100 & row['Time']. A full list of Python operator precedence is here: https://docs.python.org/3/reference/expressions.html#operator-precedenceFix 2: Change these 3 lines:to these 2 lines:
Some parentheses need to be added in the if-statements:
If you don't need to use a custom function, then you can use multiple masks (somewhat similar to this SO post)For the Time column, I used this code. It may be that you were trying to compare Time column values that did not have the required dtype (??? this is my guess)Here is the raw dataOne approach involves using masks for columnsAnother approach is to set a, b and Time as a multi-index and use index-based masks to set valuesSource to filter by datetime and create a range of dates.
You have a excelent example here, it is very useful and you could apply filters after groupby. It is a way without using mask.https://pandas.pydata.org/pandas-docs/version/0.22/groupby.html


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
