Natural Text
I've read that there is no strict enforcement of Encapsulation in Python. slots is generally used for purposes of faster attribute access and memory savings as reflected in here. However can encapsulation be enforced strictly with the usage of slots and decorators as shown in the following code:An instance of GetSet won't have dynamic variable setting(due to slots) and also the setter and getter methods would invoke the method definitions in the class. Isn't encapsulation invoked entirely?
I've read that there is no strict enforcement of Encapsulation in Python.Because attributes are public always. And they can be reached no matter what you do, even if you use __ member prefix:You just encapsulate by convention, you use single _ to signal your library code users that's a private member and they respect you, because otherwise their client-code can face consequences in the future.Properties are convenient because they allow you to avoid completely getters and setters. If you need them later you can add a property.


Answer URL
https://docs.python.org/3/tutorial/classes.html?highlight=mangling
