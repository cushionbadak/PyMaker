Natural Text
I am trying to create an extension module for Python in C++ using SWIG, which can return a Numpy array to Python. This numpy array is multidimensional and each cell can have a value or a list of values(int 64, [int32, int32] etc]. I am able to return a normal array to Python from C++. Could anyone guide me how to proceed with this? I come across numpy.i, arrayinterface, typemaps and I am not quite sure how to begin with. Could someone please guide me in this regard? Thank you.
I think the Numpy C API is a good approach. You can still use SWIG. But I would advice strongly against using SWIG typemaps, they are very complicated. Instead you can accept and return Numpy arrays as PyObject* pointer in your SWIG'ed signature and build/extract them using the C API. SWIG will wrap this correctly.If this is your first Python extension, make sure you read the Python C API intro. At the very least, you need to know the API contract for reference counting.Another option would be to implement the buffer protocol API which is understood by numpy.Yet another option is Boost.Python if you don't like C code into a C++ world. I don't have experience with it. Personally I like the Python C API for its low complexity.


Answer URL
https://docs.python.org/3/c-api/intro.html
https://docs.python.org/3/c-api/buffer.html#bufferobjects
