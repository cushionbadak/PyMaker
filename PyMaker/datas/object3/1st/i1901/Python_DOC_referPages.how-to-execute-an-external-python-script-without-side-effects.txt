Natural Text
I'm trying to build a simple DSL (domain specific language) in Python3 for a special kind of testing. The DSL infrastructure will define some commands for testing and then it will run external Python scripts written in terms of those commands, but also potentially containing any other valid Python.The first problem is to run the external scripts independently, without accumulating side effects from one script to another as the scripts are executed in a loop.The second problem is to execute functions (e.g., on_setup()) defined in the external scripts themselves. These functions need to be executed at the DSL interpreter level.Here is skeleton code for the testing framework ("cutest.py"):And here is "test_1.py" script:And finally, here is "test_2.py" script:Note that the "test_2.py" does NOT define its on_setup() function.Now, when I run python cutest.py in the directory with test_1.py and test_2.py, I get the following output:The problem is that the output from test_2.py shows "test_1.py:on_setup" (a side effect from running test_1.py, whereas it should show "on_setup() not found", because on_setup() is not defined in test_2.py.In my skeleton code "cutest.py", I used the Python exec(.., globals()) call, but perhaps the problems can be solved using __import__() or some other mechanism.
I found an acceptable way to make it work, and I'd like to know what Python gurus think of it.So, here is the modified "DSL interpreter" code ("cutest.py"):The first change is to use a global dictionary glb_dict instead of globals(). The glb_dict dictionary is initialized for each test script, so that any side effects are removed from the previous run.The second change is the call to the test-specific on_setup() function, which now goes from the glb_dict dictionary, like this: glb_dict['on_setup']().The modified cutest.py code executes the same two test scripts as follows:python cutest.pySpecifically: (1) it finds the "test_1.py:on_setup" function and (2) it does not find the "on_setup" function in test_2.py (because it does not exist).


Answer URL
https://docs.python.org/3/library/importlib.html
