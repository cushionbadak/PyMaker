Natural Text
By "strip" I don't mean strip for each item, I mean remove items, for instance, what I want to keep isby such a method or function, I think I can do it using a for loop with a flag to detect the two ends, but I thought it may be not pythonic. 
No, there is no built-in functionality for this. But there are about a million different ways to handle it. I would suggest using itertools.dropwhile on the original list, reverse the result, and do it again:The result:['a', 'b', 'c']  ['a', 'b', 'c']  ['a', '4', 'b', 'c']  
List comprehension would be more fast and convenient waySince its one line there is no need to have separate functionThough if you insist on a function you could simply wrap this in function
You could use itertools.dropwhile to generate a new list which has the items at beginning removed. Then you could just loop while last item on the list is one that you want to remove and delete it:Output:Above will run in O(n) time. If you don't care about the performance you could just replace dropwhile with another while loop that will delete items from the beginning.
This code uses the pop() method of lists to remove anything that matches item from the beginning and end of the list.running it produces the requested output:
Assuming that you want the behavior of the strip function but for lists, I'd recommend the following solution:This works by first stripping every occurrence of item from the left side of lst. We then flip the list around and, by doing so, strip every occurrence of item from the right side of the list. We finally flip the list back around again to its original ordering and return the list. 
You need to do something  like this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
