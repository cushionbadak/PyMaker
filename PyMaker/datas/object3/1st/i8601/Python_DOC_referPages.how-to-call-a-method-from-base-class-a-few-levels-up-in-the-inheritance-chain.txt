Natural Text
Assume we have following inheritance chain:The problem: I would like to somehow define method in Derived3 so that it calls itself from Base.Normally I would just write:But this would call method from Derived1, which is exactly what I want to avoid. I want to call method from Base.
The simplest approach is to call the Base method directly, passing self explicitly:If the goal is to skip to "whatever is after some known bad super class in the MRO" though, you can use super with explicit arguments to act as if it was called from the "bad super class" so it moves to "whatever comes next":
You can explicitly call a member of the superclass, simply passing self as the first argument:Complete example:This will execute Base.method on the instance specified by self, which is passed to Derived3.method automatically when it is accessed through an instance.


Answer URL
https://docs.python.org/3/library/stdtypes.html#methods
