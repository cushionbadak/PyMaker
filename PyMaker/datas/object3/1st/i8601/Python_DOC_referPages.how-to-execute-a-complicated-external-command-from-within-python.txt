Natural Text
I wonder how to execute a complicated external command from within python?It works well in linux bash command line:$ mysqldump --single-transaction -u myusername -pmypassword mydb mytable > mytable.sqlBut it doesn't work from within python code:subprocess.call(['mysqldump' '--single-transaction' '-u myusername' '-pmypasword' 'mydb' 'mytable' '>' 'mytable.sql'])What's wrong with my python code?Or I have to use os.system() ??Please tell me how it can work from within python code, thanks in advance.
The problem is that > isn't a command-line argument to the program. >, in this context, is actually a shell output redirection operator. It gets processed by the shell itself, not by the mysqldump program.Python's subprocess knows nothing about the shell, so it can't understand shell operators such as >. It just tries to give > and mytable.sql to mysqldump as arguments, which mysqldump also does not understand, causing an error.What you need to do is set up your subprocess to redirect its output. The way to do that in Python is:The stdout argument to subprocess.call allows you to direct your subprocess's output wherever you like, just as the > shell operator does.
It looks to be a syntax error,Missing the '-u' 'myusername' quote separation.Also, subprocess.run replaces subprocess.call in version >= 3.5.  Check python subprocess.call API deprecationThis should work for you.
Here is an example of executing complicated external command from within python:https://github.com/yokawasa/azure-shellAzure-shell is an iteractive Azure CLI 2.0 commandline interface that it internally us subprocessAn external command here is az command (azure-cli 2.0) which has lots of commands options and parameters, which thus can be very complicated. Therefore, azure-shell support auto-completion of both command options and parameters for the azure-cli that helps its users to save time for checking azure cli command reference or typing 'az  -h'. To achieve the auto-completion capabilities, it leverage python prompt toolkithttps://github.com/jonathanslenders/python-prompt-toolkitHope it would help


Answer URL
https://docs.python.org/3/library/subprocess.html?highlight=subprocess#call-function-trio
