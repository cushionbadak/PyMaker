Natural Text
Trying to 'shuffle' a list with even number of items. Splitting the list, L in half and alternating taking an element from each.I've tried pop, but that approach was unable to get me to a one-liner. (while loop) and I know there is likely some more succinct way to move through it.The shuffle from random isn't exactly what I need, either â€“ because that randomizes the entire order instead of alternating between the split list. If a one-liner isn't possible, is that because it's more readable in a while loop?other attempt:
Use slice assignment with a step:
If I understand correctly, you could also opt for itertools.chain.from_iterable after zipping to get the alternating effect. Demo
One possibility (requires an external library but the recipe can also be found in the itertools-recipes section) is:This is probably slower than list assignment but it also works for arbitary amounts of iterables without problems and it doesn't require odd-sized-input handling:I did some timings and @user2357112 definetly has the fastest solution but my solution is at least on the second place (note that this graph is in log-log, that means the difference in absolute terms may seem smaller than it really is!):Disclaimer: I'm the author of that iteration_utilities library.
list comprehension with index calculation using modulo and floor divisionstill one line for the general casethe index calc (i + (i % 2)*len(L))//2 can be parsed as addingi//2 which gives 0, 0, 1, 1, 2, 2 ...and(i % 2)*len(L)//2 where (i % 2) alternates 0, 1 for even/odd i0, len(L)//2, 0, len(L)//2, 0, len(L)//2 ...sum:0, len(L)//2, 1, 1 + len(L)//2, 2, 2 + len(L)//2 ...
Found two solutions. First one is very unpythonic (using python 2.7)Method One (using string magic):Method Two:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
https://docs.python.org/3/library/itertools.html#itertools-recipes
