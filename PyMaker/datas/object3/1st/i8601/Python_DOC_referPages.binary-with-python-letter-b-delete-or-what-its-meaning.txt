Natural Text
I just started with Python and want to find the binary code for any given character in a text file. The problem I encountered is when it prints the binary there is a "b" in the binary. This is the output I am currently getting:So my question is how can I get rid of "b" so it prints only 8 bits for each character. And if you know why this happens, please explain!. 
The  bin function returns the binary representation of a number, prefixed with 0b which makes such a representation suitable directly for input in Python source code.It is not what we want most of the time, so one valid thing would be to strip the first 2 chars of each string. But then there is another issue with bin: it only encodes as many bits of a number as needed to represent it. That means that ASCII characters would be encoded in 7 binary digits, when we usually want 8 bits on the representation.The alternative is to use string formatting itself for creating the representation. The .format string method allows you not only to ask for the binary (rather than decimal) representation of a number be printed, but further allows you to specify how many digits you want by typing in the leading zeros in the format string:(Take time to look at list comprehensions  - they look strange at first, but are far more powerful and readable than using the map and filter functions - the above line, for example, would require specifying a lambda function to be written using map as you had it)


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
