Natural Text
I am testing out my module using the unittest library. This includes plotting some graphs using the matplotlib library. The issue at the moment is that the testing pauses every time a graph is plotted, and it only resumes after I close the graph. How can I avoid this?
I will model my answer after the simple example code from the matplotlib tutorial: http://matplotlib.org/users/pyplot_tutorial.htmlLet's assume we have the following module, plot_graph.py to be tested:The calls to show can be patched as follows:As you can see, you should patch the calls to pyplot.show(). You can find more about patching and mocking in the docs: https://docs.python.org/3/library/unittest.mock.html. Usually the section about where to patch is really useful: https://docs.python.org/3/library/unittest.mock.html#where-to-patchFinally there are similar question already on the site: How to run nosetests without showing of my matplotlib's graph?
Don't call pyplot.show() if this is done in the tests. Also the documentation suggests using an experimental block=False keyword argument to the show function.
Just for completeness, I ran into a similar issue, but to fix it I had to mock out calls to matplotlib.pyplot.figure instead. I realize this isn't exactly what was asked, but this took me a while to figure out after coming across this thread, so I wanted to post it here.If, for instance, your plot_graph.py looked like this:then, at least in my case (running unit tests on a terminal that has no X11 forwarding and errors out when it tries to open a plot), I needed the following in test_plot_graph.py to run my test:


Answer URL
https://docs.python.org/3/library/unittest.mock.html
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
