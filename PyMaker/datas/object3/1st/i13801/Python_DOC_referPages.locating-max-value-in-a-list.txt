Natural Text
I'm very new to Python programming and I've been tasked by an online friend to write code to solve the following problem:'imagine a board game and you have to roll 2 dices.Write a program to roll the dices 100 times and find out which value (of both dices) appears most'My attempt below kind of works in the sense that I'm able to ascertain the max frequency of two dice faces added together but not the actual dice thrown.(e.g. the total '9' was the most frequently thrown).I'm sure there are plenty of ways of accomplishing the above so do excuse my very first attempt at coding!
collections provides Counter which makes this task easy:
I would redo much of it, reducing the amount of variables you're using.rather than a separate variable for each freq_#, use a list:This way, you also will not have to individually append each freq_# to a list afterwards.Once this list is filled with its values, you can use a few simple python calls to find the data you'd like:'The most frequent throw was 9 and it occurred 21 times'The most frequent throw will be the index with the highest number in the list.the number that was rolled will be represented by the index of the max
You don't need to write explicitly all the cases. For such a task python dictionaries are very useful. I won't solve the problem for you, but give you a hint how you could implement this using dictionaries:If then you want to get the key (so the count) that appeared the most:Hope this minimal example helps to get you started.
The other answers are good, but if for some reason you don't want to use them, then here is a simple loop that does the job after you have calculated the result.
What you must do to find the value of each die is you must compose another for loop which records when the value of each face is a certain number, and then increase the frequency of that value: From this you get the picture of what you must do, for as the values increase you will need more elif statements in addition to the initial if statement. Yes, it is a bit tedious but it should yield the desired results.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
