Natural Text
This question already has an answer here:How can I represent an 'Enum' in Python?                    43 answers                I would like to create an Enum class in python. I need also some get_str() method, something like:But unfortunately that approach doesn't work. The objects are ints and I got error message that 'int' object has no attribute 'get_str'... Do you have any idea how to implement that functionality?I tried to do something like:Operation.get_str(operation_reference) as well as operation_reference.get_str()UPDATE:
I would recommend to achieve you goal using metaclasses, in order to minimise the client code. So first of all checkout the below metaclass:It simply overrides the __getattribute__ and returns an instance of the child class using the attributes value as the constructor argument. Also it updates the original value, in order not to create a new instance every time, and besides to make equality check using the reference of the objectThen define an Enum class like this:This base class implements equals (==) operator, to compare using the int value, and __repr__ method, to return the string representation of your enum. So here you go:
Enums in Python are either:built-in as of Python 3.4available as a backport for Python 3.3 down to Python 2.4available in an enhanced library which also includes a class-based NamedTuple and a Constant classUsing that your code would look like:


Answer URL
https://docs.python.org/3/library/enum.html
