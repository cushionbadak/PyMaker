Natural Text
What (if anything) is actually different between using a name in a nested function and passing a name to a nested function? If there's no difference, which is preferred by convention?versus
The difference is that in the first one, bar variable is in a scope of the parent function, it can be used in the child function , unless you do assignment on it (This would be the case something similar to using global variables in function) . Example -In this case if you want to use the bar and assign to it as well, you need to use the nonlocal keyword , Example -Whereas in the second one, bar is a local variable to the put() function (because its an argument to it) and can be assigned without the above UnboundLocalError , Example -I would prefer explicitly passing the required arguments as done in the second case.
Since you're only talking about nested functions, and not closures, unless you have a specific reason to have it be nested, I would recommend defining each function in the module scope:If for some reason you do need it to be nested, it's better to pass in bar explicitly. However, if you do think you need it to be nested, ask about your reasoning first; there's a good chance that you don't. :)


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-nonlocal-statement
