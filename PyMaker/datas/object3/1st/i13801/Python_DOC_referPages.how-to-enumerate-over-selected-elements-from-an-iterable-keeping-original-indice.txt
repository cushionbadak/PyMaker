Natural Text
I run into the case of using an enumerator on selected elements form an iterable (i.e. a sequence or an iterator or similar) and want that the original indices were being returned instead of the default count, starting by 0 and going up to len(iterable) - 1.A very naive approach would be the declaration of a new generator object called _enumerate()... a new list object months.Using Pythons build-in enumerate function would yield this output for a [5::2] slice:The expected output of our own enumerator _enumerate again for a [5::2] slice:Do you know any better, more pythonic and more readable solutions? :)
Here my comment as an answer ;)Prints:
I don't like using range(len(..., but maybe it's okay here.To expand out of the one-liner:
To answer the further questions in comment:Normal slice won't work on itertools.izip, since it does not support the __getitem__ method.Yes, itertools.izip was removed from Python 3, and the regular builtin zip works with the same generator semantics.
You could use itertools.islice() + enumerate(), to select elements with original indices:It does not duplicate the slice information and uses existing functions with familiar behavior.Or if you know that the original iterable is small; you could call list():


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
