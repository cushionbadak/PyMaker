Natural Text
I'm trying to do a python regular expression that looks for lines formatted as such ([edit:] without new lines; the original is all on one line):  I wish to create a capture group of the body of this XML element (so the OtherTags...) for later processing.Now the problem lies in the first line, where Label="main-video", and I would like to not capture Label="main-audio"My initial solution is as such:This works, in that it filters out all other non-MediaLine elements, but doesn't account for video vs audio. So to build on it, I try simply adding  but this won't create a single match, let alone being specific enough to filter audio/video. My problem seems to come down to the space between line and Label. The two variations I can think of trying both fail:However, the following works, without being able to distinguish audio/video:  Why is the 'L' the point of failure? Where am I going wrong? Thanks for any help.And to add to this preemptively, my goal is an expression like this:  
By default, . doesn’t match a newline, so your initial solution didn't work either.  To make . match a newline, you need to use the re.DOTALL flag (aka re.S):Notice there’s also an extra ? in the first group, so that it’s not greedy.As another comment observes, the best thing to parse XML is an XML parser.  But if your particular XML is sufficiently strict in the tags and attributes that it has, then a regular expression can get the job done.  It will just be messier.


Answer URL
https://docs.python.org/3/library/re.html#re.DOTALL
