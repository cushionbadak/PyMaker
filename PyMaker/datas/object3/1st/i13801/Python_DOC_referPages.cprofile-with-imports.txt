Natural Text
I'm currently in the process of learn how to use cProfile and I have a few doubts.I'm currently trying to profile the following script:I execute the command python -m cProfile test_cprofile.py and I have the following result:However, when I edit the script with a pylab import for example (import pylab) on the top, the output of cProfile is very large. I tried to limit the number of lines using python -m cProfile test_cprofile.py | head -n 10 however I receive the following error:Can someone help what is the correct procedure to situations similar with this one, where we have an import pylab or another module that generates such high output information on cProfile?
I don't know of any way to do the selective profiling like you want by running the cProfile module directly from the command line like you're doing.However, you can do it by modifying the your code to explicitly import the module, but you'll have to do everything yourself. Here's how that might be done to your example code:(Note: The following code is compatible with both Python 2 and 3.)mystats_output.txt file's contents afterwards:Update:You can make enabling the profiling a little easier by deriving your own Profile class with a context manager method to automate things. Instead of adding a method with a name like enable_profiling() to do this, I've implemented it so that you can just call the class instance in a with statement. Profiling will automatically be turn off whenever the context controlled by the with statement is exited.Here's the class:Using it instead of a stock Profile object would look something like this:Since it's a Profile subclass, all the base class' methods, such as dump_stats() are all still available for use as shown.You could, of course, take it further and add e.g. a method to generate the stats and format them in some customized way.
If you change your script slightly, then it'll be much easier to profile the script without also profiling your imports.test_cprofiler.pyprofiler.pyRun as:Which produces the following output:


Answer URL
https://docs.python.org/3/glossary.html#term-context-manager
https://docs.python.org/3/reference/compound_stmts.html#the-with-statement
