Natural Text
how can i programaticaly replace one item in a list with two or more? I'm doing it with splits and indexes, and it looks very un-python.I'm wishing something like this exists:
The best way to do this would be to use itertools.chain.from_iterable:The 'multiple items per item' problem you face is solved by making a nested list, then expanding it out. By making all items tuples (single-item tuples where we only want one), we can achieve this.Of course, if you need a list, rather than an iterator, wrap the whole thing with a call to list().
I think you have the right idea.  However, list comprehensions aren't always a good fit.Here is a solution using list concatenation:and here one using a generator:
Here's a general* solution for multiple values, as demanded by OP here:Using an append-based method doesn't become any easier or harder, either:* if your old items are unhashable, then this won't work, and you'll need to make them hashable or figure out another datastructure. You'll still like that more than writing equality tests out. 
OK. More functional, but I'm not sure that's really more 'Pythonic':Really the same as another answer, except reduce instead of itertools. Reduce is a standard functional programming idiom, so it should be more obvious what it does.itertools.chain.from_iterable is cool, but kind of obscure. 


Answer URL
