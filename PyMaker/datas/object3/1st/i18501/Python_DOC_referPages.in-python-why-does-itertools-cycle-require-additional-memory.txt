Natural Text
This question already has an answer here:Why does Python's itertools.cycle need to create a copy of the iterable?                    1 answer                I'm curious about the warning in itertools.cycle(iterable) :Make an iterator returning elements from the  iterable and saving a copy of each. When the iterable is exhausted,  return elements from the saved copy. Repeats indefinitely. Equivalent to: The entry also contains the warning, "Note, this member of the toolkit may require significant auxiliary storage (depending on the length of the iterable)."Couldn't you avoid the additional storage requirement (and some complexity) with:What's the advantage of storing used items in saved?
Some iterables can only be iterated once. Thus cycle will store a copy so it can continue to read those items.See this related question.
The iterable could be some generator that does expensive calculations to generate the element.By caching the results of the iterable, you don't have to repeat what could be a potentially expensive and time-consuming operation to cycle through the iterable.


Answer URL
