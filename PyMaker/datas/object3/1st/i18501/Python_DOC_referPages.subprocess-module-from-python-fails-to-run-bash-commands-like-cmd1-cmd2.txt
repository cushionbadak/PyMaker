Natural Text
The following python script:it runs ok (the output is Hello). But when I use subprocess module this one:is not ok. The output is Hello world | cut -d' ' -f1 and I expect to be only Hello. How can I correct it?I saw that in general subprocess module will fail when I'm using a bash command like:
This:… is not actually a command, it's a fragment of shell script. So you need to have the shell execute it.You can do this just by adding shell=True to the Popen constructor.The documentation explains how this works. It also explains better ways to do the same thing without the shell. For example:Meanwhile, you almost never want to use split on a command line—and in fact, your example shows exactly why you don't want to:Notice that it split -d' ' into two arguments, -d' and '.If you're using shell=True, don't try to split the arguments at all; just pass a string as your cmd:If you're not using the shell, the right way to do this is with the shlex module:Notice that the "-d' '" turned into "-d " this time. That may seem odd at first glance, but it's in fact exactly what the shell would do, and what you want; the cut program will get a space as its d option. (In other words, the quotes are for the shell, not for the program the shell runs.)(The shlex module also has a handle quote function that you can use for the exact opposite purpose: building a command line from a list of arguments for shell=True.)However, it's usually better to just create an list of arguments in the first place, instead of trying to figure out how to create a string that, when run through shlex.split(), will give you the list you wanted.


Answer URL
