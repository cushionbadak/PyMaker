Natural Text
So I have a CSV file with the data arranged like this:I want to import the CSV to create a nested dictionary so that looks like this.After updating the dictionary in the program I wrote (I got that part figured out), I want to be able to export the dictionary onto the same CSV file, overwriting/updating it. However I want it to be in the same format as the previous CSV file so that I can import it again.I have been playing around with the import and have this so farBut this doesn't work as things are not arranged correctly. Some numbers are subkeys to other numbers, letters are out of place, etc. I haven't even gotten to the export part yet. Any ideas? 
Since you're not interested in preserving order, something relatively simple should work:The latter could be done a little more efficiently by making only a single call to thecsv.writer's writerows()method and passing it a generator expression.
You can use the grouper recipe from itertools:This will group your data into the a1/b2/c3 pairs you want.  So you can do data[row[0]] = {k: v for k, v in grouper(row[1:], 2)} in your loop.

I'm lazy, so I might do something like this:which works because row[1::2] gives every other element starting at 1, and row[2::2 every other element starting at 2.  zip makes a tuple pair of those elements, and then we pass that to dict.  This gives(Note that I changed your open to use 'rb', which is right for Python 2: if you're using 3, you want 'r', newline='' instead.)


Answer URL
https://docs.python.org/3/reference/expressions.html#generator-expressions
