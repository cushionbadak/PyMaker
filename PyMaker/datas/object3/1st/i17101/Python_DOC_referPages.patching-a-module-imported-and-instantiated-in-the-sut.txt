Natural Text
I'm trying to run unit tests on a class that imports two other modules, and I'm trying to patch out those modules using mock. One of these modules is instantiated in the class I'm testing, and I have not been able to patch it out. It appears that I have managed to patch out the other one.What is the best way to patch out the sequence.processor module in this code?Directory structure/parser/docparser.py/tests/testdocparser.py
You patch Processor in test_write_and_parse() but it's instantiated in DocParser.__init__() which is called from setUp().This should work, though I haven't tested it:I've used context manager instead of decorator to avoid changing setUp() signature (adding an argument).Also the order of mock arguments for test_write_and_parse() is incorrect in your code. Here's an excerpt from mock docs:When you nest patch decorators the mocks are passed in to the decorated function in the same order they applied (the normal python order that decorators are applied). This means from the bottom up...Correct order:Of cource, it doesn't really matter in your particular case because mock_proc and mock_logger are not used later.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#quick-guide
