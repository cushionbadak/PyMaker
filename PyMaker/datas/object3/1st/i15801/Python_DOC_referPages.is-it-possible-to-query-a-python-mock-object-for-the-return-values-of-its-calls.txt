Natural Text
Python 3 mock objects support being queried for arguments to their calls, is it possible to also query them for the  values returned by their calls?My particular scenario is that I mock tempfile.mkdtemp, but as a side effect call the real mkdtemp. I'd like to get hold of the created temporary directory in my test.
Unfortunately mock module don't store return value (I took a look by debugguer and there isn't any trace of it). You must store it before return the value of side_effect.You can use an object to take care of the dirty work. For instance a very base implementation can be something like that:If you want a more sophisticated side_effect that wrap a function and take care of arguments and exception an example could be:Of course you can write it as decorator and preserve the signature, but I think that part is out of scope in that answer.
if the comportment is deterministic and state less you can get the list of call done to your mock and call again the nested call you  are interested in to catch the result. Else I suppose you can do something like:And modify the mock this way:And then you'll have in result values a list of couple arguments, results.Hope it helps.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
