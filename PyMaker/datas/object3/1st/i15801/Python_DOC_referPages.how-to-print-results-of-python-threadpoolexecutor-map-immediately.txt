Natural Text
I am running a function for several sets of iterables, returning a list of all results as soon as all processes are finished.How can I print intermediary results e.g. for variable1 = 1, variable2 = 7 as soon as their results are calculated?
map already does this, but join needs to consume the entire iterable in order to create the joined string. Changing this to a for loop will let you print it incrementally:Keeping the same output as the join code is a bit more work, but doable regardless:
If you want to consume the results as they finish without preserving the order of the original iterable, you can use executor.submit along with concurrent.futures.as_completed:Output (though any order is possible on any given run, due to random.randint):as_completed will yield a Future from its input list as soon as that Future is marked as done, regardless of where it actually falls in the input list. This way, if the second item is done after 2 seconds, but the first takes fifteen, you'll see the result of the second items after two seconds, rather than needing to wait fifteen. This may or may not be desirable behavior, depending on your specific use-case.Edit:Note that you can still get the output in the original order this way. You just need to save the list you give to as_completed:Output:


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.as_completed
