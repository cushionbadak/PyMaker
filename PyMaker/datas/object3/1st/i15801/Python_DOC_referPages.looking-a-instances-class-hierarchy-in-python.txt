Natural Text
Taking zip for example.I just want to know is it an Iterable or Iterator or Generator .so I put this:it prints: zipWhy class name are lowercase?It prints: (zip, object)That's impossible. Python doc says zip returns an iterator (or generator?), but zip apparently is not inherited from Iterator or alikes according what getmro prints.So the two questions ,thanks for help.
Nothing in Python inherits from Iterator or Iterable, as they embody a protocol. Python looks for the __iter__ and __next__ methods, not for a specific base class. Any object can be an iterable or iterator, simply by implementing those methods.zip() is a built-in function defined in C code, and it follows the naming convention for all built-ins; these are always in lowercase; the type it returns is not all that relevant here and follows the function name.The collections.abc.Iterable and collections.abc.Iterator classes are abstract base classes; they implement special hooks that essentially return True if the instance or subclass against which you are test implement the required methods.zip() is both an iterable (it has an __iter__ method) and an iterator (__iter__ returns the object itself and it has a __next__ method):zip() is not a generator, as it doesn't have any of the special generator methods:


Answer URL
https://docs.python.org/3/library/stdtypes.html#typeiter
https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterable
https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterable
https://docs.python.org/3/reference/datamodel.html#customizing-instance-and-subclass-checks
https://docs.python.org/3/reference/expressions.html#generator-iterator-methods
