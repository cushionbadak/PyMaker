Natural Text
I want to create an int type with boundaries like:> a = BoundInt(2,4)a will only hold values 2, 3 or 4 and raise an error if a different value is assigned to it.But since Python doesn't let me override assignment and using setters is no Pythonic I'm kind of lost. How could I work this out in my class and what specific syntax would this require when assigning new values to my vars?
Assuming you're trying to attach this as an attribute to a classYou can do this via a property:Note that I am using a setter.  Python style generally discourages using a function when attribute access will do.  However, if you need to take some action when you set a variable, then a traditional setter or property is fine (depending on the API you want to expose).If you actually want to do this using a syntax similar to what you've already written, maybe using a descriptor:results in:
You can use a property:Problem here is that you have to hold your value as an attribute of your object, and then implement all the methods of int that allow you to use it as a number.  In Python, this is basically unavoidable.
You can subclass int:Please note, that you cannot prevent in Python assigment or value to name. Operator = only binds existing object (value of right hand expression) to a variable name. In Python it is value, that has type, not variable name.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#function-annotations
