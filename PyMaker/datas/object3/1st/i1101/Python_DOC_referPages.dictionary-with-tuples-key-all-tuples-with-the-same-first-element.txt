Natural Text
I have dictionary in python whose keys are tuples, like:I need to access all values whose keys have the same first argument. For example, I need to accessbecause all of them have 1 as the first element of the tuple key. One way is to use a for and if:However, my actual dictionary  and data are very huge and this method takes a lot of time. Is there any other way to efficiently do this?
You lose out on the benefits of creating a dictionary if you have to search through all its keys again. A good solution would be to create another dictionary That holds all keys which start with the correct first element.Mapping now looks like this:Now Just use the dictionary to lookup the keys needed in your original dictionary.  Output:
The dict built-in type maps hashable values to arbitrary objects. In your dictionary, the tuples (1, 'a'), (1, 'b'), etc. all have different hashes. You could try using Pandas multi-indexes to accomplish this. Here is a good example.Alternatively, as one of the comments suggested, a nested dictionary may be more appropriate here. You can convert it from my_dict viaThen something like nested_dict[1] would give you


Answer URL
https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
