Natural Text
For example, say that I have a list in which the the index of the list is a particular cell number and the value for that index is the temperature of that particular cell. Let’s say that the list looks like this:Then, let’s say that we want to create a coarser mesh, by reducing the number of cells in the mesh by a factor of 2, so we want to take the average temperature of sequential groups of two cells. The factor  that the finer mesh is reduced to a coarser mesh by could be any number though. So in this example case,What is the fastest way to do this with python? Speed matters because there could be hundreds of thousands of cells. It is OK to use open source libraries like numpy. Thanks in advance! :)
Using numpy you can vectorize addition (and multiplication, etc) and you can use slices so you can do the followingSince it's numpy it'll likely be quicker than a list comprehension. 
You could use a list comprehension:Or if you prefer numpy, you could use numpy.mean:Output


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
