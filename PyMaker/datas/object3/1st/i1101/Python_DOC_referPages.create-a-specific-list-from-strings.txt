Natural Text
Edited according to comments:I would like to use the strings 'ABC' and '123' to create the list The logic would be to pair the first string with the second string in sequence and then again backwards: forwards: A1, B2, C3backwards: A3, B2, C1B2 only appears once as the final list should be distinct values.I should be able to expand each of the two strings(they will always match in length) and have the same result pattern.I tried a couple of things but I would like to know if there is a more pythonic way to accomplish this.
The following solutions will work in Python 3.x,OutputThis first solution assumes you only need to repeat the iterables once. If you have to repeat the shortest iterable more than once you could use cycle to iterate several times over it:OutputThe idea in this second solution is to use a set of seen elements and only add to the final result if not seen. Finally you could combine the solutions and use cycle and OrderedDict:Output
If version greater than 3.6:Output:
I tried a couple of things but I would like to know if there is a more  pythonic way to accomplish this.Without saying what you've tried, it's hard to suggest an alternative, pythonic or otherwise. Looking at what you're doing, it seems you're constructing a mapping between sets of the form:This is about as atomic as it gets with respect to logical relationships; I'm not sure there's any method that would be quicker than a dumb-as-a-rock string concatenation by index:Output:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
https://docs.python.org/3/library/stdtypes.html#set
https://docs.python.org/3/library/collections.html#collections.OrderedDict
