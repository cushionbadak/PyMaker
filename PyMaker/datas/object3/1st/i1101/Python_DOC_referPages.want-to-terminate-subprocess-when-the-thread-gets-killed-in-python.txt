Natural Text
I have some code like this (not tested):Now, my main thread and t1 thread both gets killed at some point while the subprocess is still executing its command by collecting data. I want it to stop executing that command and kill the subprocess. So, whenever my parent thread(the thread calling the subprocess) gets killed I want to kill the subprocess. Is there any way to do that?
So a Thread will execute until it is joined, so we have to ask it nicely to go away somehow. As mentioned I would probably subclass it and create methods that allowed for a clean way of referencing the subprocess that it may have spawned and terminating it gracefully like so:I am on a Windows machine, so the following sequence opens a Command Prompt window and terminates when the spawned thread has its stop() method called:Now in your program you'll likely have some logic that requires you to have a t.join() line, which is fine, here I just force it by using t.stop() which ultimate joins the thread so your programs call to t.join() will work by either overriding the join() method or somewhere else in your program calling the defined t.stop(). The t.process.poll() checks to see if the process was terminated (just shown here for demonstration purposes). So now you have a way of terminating a thread and its subprocesses.


Answer URL
https://docs.python.org/3/library/threading.html#thread-objects
https://docs.python.org/3/library/subprocess.html#popen-objects
