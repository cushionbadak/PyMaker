Natural Text
I was trying to get a nice and clean representation of a string. My desired version would be ['Course Number: CLASSIC 10A | Course Name: Introduction to Greek Civilization1 | Course Unit: 4']However, the current output is ['Course Number: CLASSIC\xa010A | Course Name: Introduction to Greek Civilization1 | Course Unit: 4']. Something (\xa) is getting in the way of the first element. I will attach the part of codes below. Thanks in advance for helping me out.
As  @melpomene commented the string '\xa0' is a character - a non-breaking space... What you really need to be doing to this string is reformatting it to so called 'raw text', through the use of regex:This is generally my preferred way of removing special characters/formatting - but how does it work... If we look with the first set of quotation marks'[^A-Za-z0-9-|:]+'we see the first thing we state is A-Z which simply means from A to Z all in capital letters. We then get from a-z all in lower case. After that we have 0-9 which shows all values from 0 to 9 and finally we have |: which means any colons or pipes... Let's test this with a simple script:I would recommend running this code yourself to try it out but the answer you get back is True. Incorporating this into your script would be as simple as:If you encounter any other values you wish to include within your string, simple add them to the end of ^A-Za-z0-9-|:. For example, if you wished to keep underscores as well you would simply use '[^A-Za-z0-9-|:_]+'Hope this helped. To read more go to the regex how to section of the python3 docs.


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/howto/regex.html
