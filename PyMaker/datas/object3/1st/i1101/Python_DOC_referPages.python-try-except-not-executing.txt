Natural Text
I have written a script that is supposed to automate taking a data frame with pandas and interacting with it, then putting it to another part of the network as a reference, and then it interacts with SmartSheets. It uses a very basic API and most of the functions and logic work well, but the only issue is the try except block in the end that is supposed to be scheduled out.There is no error thrown, it just sits in a blank terminal; this is odd because if I stack the functions I wrote one after another, they work with no issue.This try except block is so that It can help write out errors on the machine and ultimately put into a scheduling function later in the script.This script is on a VM that runs Ubuntu 18.04. It is written in Python 2. I have researched online, and I cannot find a situation where the try except block does not error out and does not execute. I made sure my indentation on the IDE (Atom) is correct (4 spaces). I can line up the 4 functions themselves and they execute fine with no errors.When the script is run for the NDC_import() function, it won't execute at all. if the 4 functions Import_csv(), Clean_CSV(), Compare_files(), and SS_import() are just by themselves, they execute normally.Why can't it run in that try except block I wrote? It does not even throw an error and the terminal is blank.
I think the primary issue revolves around your exception handling. In particular, you're opening the files as w+ mode and then iterating through the opened file -- not exactly a syntax error but it's functionally broken. It's also worth noting that if there are no errors, you should not expect to see any printed output.I would suggest to take a different direction with handling errors entirely and consider using the fabulous logging library.An example of how you could use it would beThat logging.exception() line will print out the whole traceback to whatever logger is configured, and you can configure it to log to a file. 
You're opening the file in w+ mode. Example:w+ means it will create the file if it doesn't exist, or overwrite it if it does. That means that SS_import_error will always point to an empty file after this line. Then you immediately try to loop over the lines of that file:But attempting to loop over the lines of an empty file will end immediately, without ever executing the code within the block. The end result is that the except block runs, but it doesn't actually do anything (other than potentially wipe a file).I don't know exactly what you intended the for loops to do, so I can't suggest an fix.


Answer URL
https://docs.python.org/3/library/logging.html
https://docs.python.org/3/howto/logging.html#logging-to-a-file
