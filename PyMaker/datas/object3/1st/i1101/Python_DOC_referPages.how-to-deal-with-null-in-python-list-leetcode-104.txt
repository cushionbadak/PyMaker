Natural Text
I'm trying to solve Leetcode 104 in python: https://leetcode.com/problems/maximum-depth-of-binary-tree/ The code comment suggest the input type is TreeNode.The test case:  root = [3,9,20,null,null,15,7]I'm confused about the type of the input. Is the input type a list or "TreeNode"? Is TreeNode even a type? How does it differ from list? How do I get the len(root)? Because there is null there, I couldn't get use len(root). Of course i could turn null into a string "null", but that feel very hacky. (I wanted to use geometric progression to solve the problem. that's why I need the length)This is the code I wrote. Using Geometric progression. S = (a1*(q**n) - a1)/(q-1) when q != 1. The result is using my hacky way which is turned the null into the string "null" and treat root as a list type.  
Yes TreeNode is a valid type. And it is entirely different from a list. You get the definition of the TreeNode type in a comment on the top of the page. It has a value (self.val) and a left and a right cildren, which are also TreeNodes (altough it is not explicitly stated, this is the definition of a binary tree).The len() function calls the __len__() method of the argument. It is probably not implemented on the TreeNode. PS. You are mistaken when you try to solve the exercise uing the list as the input. You are expected to use the given TreeNode type.
If you activate the Python code type for the answer, you get this comment:[3,9,20,null,null,15,7] is just a linear description of that tree, where 3 is the first node, with the leaves 9 and 20, then 9 has the leaves null and again null (so, no leaves) and 20 has the leaves 15 and 7. But it makes no sense to give you the definition of the TreeNode and to let you take the parameter root, if they would want you to parse the linear tree description into the TreeNode form.So your task is, to travel down your root.left and root.right recursively and record the maximum depth.PS: The question does not change if you select a different programming language so I infer, that they mean null in a symbolic way where it is implemented as None in Python (especially since left and right are by default None for the TreeNode implementation).PPS: The said linear tree description works like this:You first name the root element of the tree [3]After that, you make a snapshot of the current tree and name all yet unnamed leaves from left to right. If one leaf is empty, you just call it null (Python specific: None).You repeat 2 until there is no unnamed leaf left


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__len__
https://docs.python.org/3/library/functions.html#repr
