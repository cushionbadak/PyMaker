Natural Text
Given list1 = [1,2,2,3], list2 = [1,2], what's the simplest way to subtract all element of list2 from list1 to get list list3 = [2,3] It seems sum work well for two lists but subtraction doesn't. To clarify: Order doesn't matter. L2 is a subset of L1. Duplicates need to be kept. Therefore can't use set. 
You can try using remove:Output:Update without list comprehension, using standard for loops.Output:
You could use collections.Counter and a list comprehension:OutputThe list comprehension is equivalent to:The tricky part here is the statement counts.get(l, 0) == 0 or counts.subtract((l,)). The counts.subtract((l,)) means subtract 1 from the count of l and the return value of the expression is None, the fact that None is a boolean-like value (that evals to False) allows to use it a single or expression. So the above or will only be True when counts.get(l, 0) == 0.  
This is how I would do it:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
