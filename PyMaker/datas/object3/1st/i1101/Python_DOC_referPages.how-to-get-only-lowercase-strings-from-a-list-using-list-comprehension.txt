Natural Text
The question asked:Use list comprehensions to generate a list with only the lowercase letters in my_list. Print the result list.My code:I tried it out, but got integers as answers and not the strings I wanted. 
Python strings have islower method. Also, you can directly iterate over the list, no need to check its length or the parity of the indexes.
Note: several answers here assume that what you want is to select the values in the list that are lowercase. This answer assumes that that was an example and that the thing you're trying to do is to select the values in the list that occur at every other list index. (This seems to me to be the correct interpretation, because that's what the implementation in the question appears to be trying to do.) I'm not sure who misunderstood the question here, but since the question can be interpreted multiple ways, I think the question is probably at fault here. Until the question is clarified, I think it should be placed on hold.The simplest and fastest way to do this is with a slice:To replicate the logic you're describing, where you want to take the values with indexes that are modulo 2, then you need to generate both the indexes and the values for your list in the comprehension, and use one for the filtering and the other for the result:
Your list comprehension:Will produce integers instead of characters. This is because range(len(my_list)) gives you indices. You instead need to get the characters. This can be done using enumerate():Or a less pythonic approach, using just indexing my_list:You can also just filter out the lowercase letters with str.islower():Which avoids having to use indices altogether. 
You can use list comprehension as following where you iterate over your individual elements and check if it is a lower case using .islower()

using islower() function    
To add a range(len(my_list)) that create the following range(0, 8)and char, in this case, is an integer and you create a list of integers.To generate a list with only the lowercase letters use 'islower' methodhi = ([ char for char in my_list if char.islower()])


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/stdtypes.html#str.islower
