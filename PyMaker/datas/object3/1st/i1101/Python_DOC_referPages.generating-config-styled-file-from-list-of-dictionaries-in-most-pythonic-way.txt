Natural Text
I have a list of dictionaries as,Each dictionary has an identifier for the dictionaries as 'section_id' and also a key as 'parent_section_id' which tells whether its a child dictionary of any other dictionary. So basically, if the parent_section_id is set to 0 (zero) then its a parent dictionary otherwise its the child of the dictionary mentioned with that section id. Now from the above list of dictionaries, I was asked to achieve the following format (yes i was asked, part of interview):I was told this is the format used to write config files for any program.I'm just curious as to what could have been the best possible way to generate a file from this list of dictionaries.
You can recursively output sections whose parent_sec_id matches the given parent ID, with the output from the children indented:Assuming your sample list of dicts is stored as variable sections, then '\n'.join(transform(sections)) would return:
Not very elegant, but you can collect your items in a collections.defaultdict(), then output your dictionary paths to a new file. The basic idea is to first collection your root parent ids with the value of 0, the add the proceeding child dictionaries to these roots. You can use the last value in each list for the parent id of the most recently added item. Demo:config file:Note: This is an iterative solution, not a recursive one. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
