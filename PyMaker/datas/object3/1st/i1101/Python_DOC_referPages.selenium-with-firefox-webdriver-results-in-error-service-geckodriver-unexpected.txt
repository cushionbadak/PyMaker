Natural Text
I have been wracking my brain over this. I'm getting the error:System geckodriver unexpectedly exited. Status code: -11. I am using a Linux server that is a shared hosting web server. I have everything set up in a virtual environment.Linux Server - CentOS, Release: 7.4.1708Selenium version 3.141.0geckodriver version 0.23.0Firefox 60.3.0Python 3.6.2 and cannot use a newer versionPython, Selenium and Geckodriver reside on a virtual environment on a Linux web server. Firefox resides outside of the virtual environmentto my terminal to have geckodriver be used in the PATH environment variable.Below is my code:Here is my traceback error:Why am I getting this error and how do I fix it?
This is at least a partial answer to your question.Status code -11 means that subprocess experiences a segmentation fault. Read more about it at Determining if a python subprocess segmentation faultsIn the past, there were some problems with certain versions of Selenium not working well together with certain versions of Firefox and/or geckodriver. Find out your versions, update them to the most recent versions if possible and look for existing bug reports for your versions.The following versions work well together on my Ubuntu 18.04 LTS Bionic Beaver system:Check Python versionCheck Selenium versionCheck Firefox versionCheck geckodriver versionIf you have to browse to a special path to make those commands work and those commands don't work directly in your terminal or virtual environment, you might need to set one of the following keyword arguments in your call to webdriver.Firefox:firefox_binary – Instance of FirefoxBinary or full path to the Firefox binary. If undefined, the system default Firefox installation will be used.executable_path – Full path to override which geckodriver binary to use for Firefox 47.0.1 and greater, which defaults to picking up the binary from the system path.Run nothing fancy as a test, but a minimal example of Selenium with Firefox in headless mode only, for example minimal_selenium_test.py:This should work on your local laptop as well as on a virtual server as well as inside a Docker container and should print:


Answer URL
https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module
