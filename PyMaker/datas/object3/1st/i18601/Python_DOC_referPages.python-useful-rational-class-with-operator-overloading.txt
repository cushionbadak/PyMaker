Natural Text
So I'm trying to create the following class in python:The class should use integer instance variables to store the numerator and denominator of the rational number.The rational number must be stored in simplified form.The sign of the rational number is reflected in the sign of the numerator.The class must perform data verification to ensure the denominator is not zero.Moreover I want to incorporate the following overloading opeartors:+ and -Arithmetic Operators+   -   *   /   //These operators should work with the following combination of parameter types:(Rational, Rational)(Rational, int)(int, Rational)Relational OperatorsThese are the binary operators   <   <=   ==   >=   >   !=These operators should work with the following combination of parameter types:(Rational, Rational)(Rational, int)(int, Rational)I also want two different accessor methods:numerator, which returns the rational number's numeratordenominator, which returns the rational number's denominatorThanks guys!
fractions.Fraction does everything you need.
This task is relatively straightforward.To implement operators, use the special method names:And then continue implementing __sub__, __mul__, etc.  A full list is available in the Python Data Model: 3.37 Emulating numeric types documentation section.  Comparison operators are named __lt__, __le__, etc.  You can implement the operations in the following way:There are other operators you probably to implement, like __repr__ and __str__.I hope this is enough to get you started, the other methods will be written just like __add__ above.


Answer URL
