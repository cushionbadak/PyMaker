Natural Text
This question already has an answer here:Accessing dict keys like an attribute?                    23 answers                I'm trying to make a VarDump class, where I can do:and So, this is the code:But I'm getting this error:
self.dump={} calls __setattr__ to set dump, which calls __getattr__ to get the dump to put dump into, which calls __getattr__ to get the dump, etc. You could resolve this with object.__setattr__, but the easier way is to just do this:__getattr__ is only called when the attribute isn't found by normal means, so this doesn't need to handle looking up attributes that have actually been set.
In Python 3.3, use the new types.SimpleNamespace() type instead:The documentation gives you a backwards-compatible version on a platter:The only difference between your version and this one is that this one doesn't use __setattr__ and __getattr__ (not needed at all), this version takes initial values in the initializer, and it includes a nice representation:
No need to override __setattr__ or __getattr__


Answer URL
