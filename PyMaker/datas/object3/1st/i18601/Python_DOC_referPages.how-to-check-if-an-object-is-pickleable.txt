Natural Text
I have a list of objects of various types that I want to pickle. I would like to pickle only those which are pickleable. Is there a standard way to check if an object is of pickleable type, other than trying to pickle it?The documentation says that if a pickling exception occurs it may be already after some of the bytes have been written to the file, so trying to pickle the objects as a test doesn't seem like a good solution.I saw this post but it doesn't answer my question.
I would propose duck testing in this case. Try to pickle into a temporary file or a memory file, as you find suitable, then if it fails discard the result, if it succeeds rename.Why?In python you can check if the object has some properties in two ways.Check if object is an instance of some Abstract Base Class. E.g. Number "The root of the numeric hierarchy. If you just want to check if an argument x is a number, without caring what kind, use isinstance(x, Number)." Or try it and then handle exceptions. This occurs during many occasions. The pythonic philosopy is based around the duck. Duck typing, duck test, and EAFP are the keywords.I even believe the 1st one has been properly introduced with python3 under the pressure from the part of the community, while many still strongly believe duck is the way to go with python.AFAIK there is no special preconditions that can be checked, nor any ABC that object can be checked against in case of pickling. So all that is left is duck.Maybe something else could be attempted but probably it is not worth of it. It would be very hard to do manual introspection of the object to find out preliminarily if it's suitable for pickling.
There's the dill.pickles method in dill package that does just that.We can use methods in dill to look for what causes the failure.So, the only thing that's failing that's not a "built-in" method of the class is x… so that's a good place to start.  Let's check 'x', then replace it with something else if it's the problem.Yep, x was causing a failure, and replacing it with an xrange works because dill can pickle an xrange.  What's left to do?Apparently (likely because references to x in the class __dict__ now pickle), f now pickles… so we are done.dill also provides trace to show the exact path in pickling the object.
dill allows for pickling more things that the builtin pickle.This should do what you what, I think:


Answer URL
https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled
