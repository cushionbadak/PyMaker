Natural Text
How python recognize class and instance level variables ? are they different ?Means, in above example when I access a.i (or b.i)  and abc.i are they referring to completely different variables?  
First, your sample is wrong for you can not init the instance if there is only a self in the __init__.Then, when you access the attribute on the instance, it will check the instance variables first. Refer the paragraph here. As you guess:Besides, the class variables is an object shared by all the instances, and instance variables are owned by the instance:
in above example when I access a.i (or b.i) and abc.i are they  referring to completely different variables?Yes.abc.i is a Class Object reference.a.i and b.i are each Instance Object references.They are all separate references.
This is all assuming your init is meant to be:Other wise it doesn't work. In the third case, abc.i the class hasn't been initialized so i acts as a static variable for which you set the value at 10 in the class definition. In the first two instances, when you called init you created an instance of abc with a specific i value. When you ask for the i value of each of those instances you get the correct number.


Answer URL
