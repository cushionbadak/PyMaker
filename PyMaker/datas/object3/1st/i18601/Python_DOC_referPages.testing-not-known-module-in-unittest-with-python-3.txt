Natural Text
I observe a strange behaviour with Python 3 unittest. Following Testcase tests in function testValue a module that does not exist.Python2 gives correctly following output:But Python 3 claims an AttributeError when the unknown_module.value is referenced.Why doesn't throw Python 3 an ImportError as Python 2 does?
You are importing an implicit namespace package. Quoting from the Python 3.3 What's New page:Native support for package directories that donâ€™t require __init__.py marker files and can automatically span multiple path segments (inspired by various third party approaches to namespace packages, as described in PEP 420)and PEP 420 Implicit Namespace Packages:If the scan completes without returning a module or package, and at least one directory was recorded, then a namespace package is created. The new namespace package:Has a __path__ attribute set to an iterable of the path strings that were found and recorded during the scan.Does not have a __file__ attribute.andNamespace packages and regular packages are very similar. The differences are:Portions of namespace packages need not all come from the same directory structure, or even from the same loader. Regular packages are self-contained: all parts live in the same directory hierarchy.Namespace packages have no __file__ attribute.Namespace packages' __path__ attribute is a read-only iterable of strings, which is automatically updated when the parent path is modified.Namespace packages have no __init__.py module.Namespace packages have a different type of object for their __loader__ attribute.Remove the unknown_module directory from your sys.path and your test will fail the way it did in earlier Python versions.


Answer URL
