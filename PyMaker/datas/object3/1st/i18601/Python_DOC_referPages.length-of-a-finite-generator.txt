Natural Text
I have these two implementations to compute the length of a finite generator, while keeping the data for further processing:Both have drawbacks, both do the job. Could somebody comment on them, or even offer a better alternative?
If you have to do this, the first method is much better - as you consume all the values, itertools.tee() will have to store all the values anyway, meaning a list will be more efficient.To quote from the docs:This itertool may require significant auxiliary storage (depending on  how much temporary data needs to be stored). In general, if one  iterator uses most or all of the data before another iterator starts,  it is faster to use list() instead of tee().
I ran Windows 64-bit Python 3.4.3 timeit on a few approaches I could think of:Shockingly, the fastest approach was to use a list (not even a tuple) to exhaust the iterator and get the length from there:Of course, this risks memory issues.  The best low-memory alternative was to use enumerate on a NOOP for-loop:Cheers!


Answer URL
