Natural Text
I am developing a Python 3 script that analyses a logfile line by line.It takes the logfile to analyse as a parameter, and processes it:Sometimes, though, the log files contain very weird characters.I don't even know how to copy and paste those characters here, so here is a screenshot from a text editor:And in those cases, I have the following exception:How can I sanitize the content of the lines before processing them, or simply ignore them without having my script to crash?Thanks!
open accepts errors option.errors is an optional string that specifies how encoding and decoding  errors are to be handled–this cannot be used in binary mode. A variety  of standard error handlers are available, though any error handling  name that has been registered with codecs.register_error() is also  valid. The standard names are:'strict' to raise a ValueError exception if there is an encoding error. The default value of None has the same effect.'ignore' ignores errors. Note that ignoring encoding errors can lead to data loss.'replace' causes a replacement marker (such as '?') to be inserted where there is malformed data.'surrogateescape' will represent any incorrect bytes as code points in the Unicode Private Use Area ranging from U+DC80 to U+DCFF. These  private code points will then be turned back into the same bytes when  the surrogateescape error handler is used when writing data. This is  useful for processing files in an unknown encoding.'xmlcharrefreplace' is only supported when writing to a file. Characters not supported by the encoding are replaced with the  appropriate XML character reference &#nnn;.'backslashreplace' (also only supported when writing) replaces unsupported characters with Python’s backslashed escape sequences.Pass errors='ignore' to ignore encoding errors.
You could always sanitise the strings before processing, e.g.:This should result in a line with any special characters represented as \xc0, etc.


Answer URL
