Natural Text
I have the following array [1, 4, 7, 9, 2, 10, 5, 8] and I need to separate the array in 3 different arrays: one for values between 0 and 3, anther for 3 to 6 and anther for 6 and 25.The result must be something like that:Any idea about how to do it simple?
First, define your "pole" numbersSecond, generate your intervals from those "pole" numbersThird, define as many lists as there are intervals.Then for each interval, scan the list and appends items in the relevant list if they belong to the intervalcode:result:This solution has the advantage of being adaptable to more than 3 lists/intervals by adding more "pole" numbers.EDIT: There's a nice & fast solution (O(log(N)*N)) if the output lists order don't matter:first sort the input listthen generate the sliced sub-lists using bisect which returns insertion position of the provided numbers (left & right)like this:result:
You can do that in a very simple way using a combination of a for loop and range functions:
"One-line" solution using set.intersection(*others) and range(start, stop[, step]) functions:The output:https://docs.python.org/3/library/stdtypes.html?highlight=intersection#set.intersection


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=intersection#set.intersection
