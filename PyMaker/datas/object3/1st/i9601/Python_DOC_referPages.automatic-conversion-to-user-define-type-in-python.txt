Natural Text
I'm building a type (dual numbers) and can't find the way to make them behave nicely in arithmetic expressions, like the complex numbers in Python do:    In my case:   I can easily make it work in, manipulate __add__method,  the other way: my type + built in. I, also, can do it making external function add and passing parameters, but, obviously, nice integration with '+' is much better.Thanks in advance.PS Where to find Python modules source code (I could look in a complex class myself)?  
There is no automatic type conversion to user defined types in Python.You need to implement the methods _add__ and __radd__, __sub__ and __rsub__, etc. to emulate the behaviour of numeric types.See the Language Reference for a list of magic methods you need to implement.You can find the source code of CPython at https://hg.python.org/.
Not sure You can do this. Those are called built-in types, and You can't expand them. However, You can do something like this:In action:         Of course, You'll have to implement all other significant functions too.


Answer URL
https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types
https://docs.python.org/3/reference/datamodel.html#object.__radd__
