Natural Text
someone can help me to solve that my problem?that problem is, if iam input int (1,2,3,4,5,6,7,8,9,0) always error?Error at :ex : if am input a#2
Unfortunately you can't use integers as string keys to a dictionary for element_index in the format language. This is a limitation of the format language, it treats an integer element_index as an integer. Unfortunately this is not explicitly stated in the documentation https://docs.python.org/3.5/library/string.html#formatspec other than saying:element_index     ::=  integer | index_string
From the docs for the field_name:The field_name itself begins with an arg_name that is either a number  or a keyword. If itâ€™s a number, it refers to a positional argument, ...andBecause arg_name is not quote-delimited, it is not possible to specify  arbitrary dictionary keys (e.g., the strings '10' or ':-]') within a  format string.The grammar spec for field_name is shown as I think the parenthesis/brackets are saying that arg_name can be either a dotAttribute or an index expression, [2] so the arbitrary dictionary key of the form '10' limitation applies - if that is correct then the docs could be clearer.Using '''{['1']}''' as the format string, returns a double quoted string which just doesn't work.Then using '''{1}''' for the format string creates an integer which is passed to __getitem__.format just cannot make a string that looks like '2' to be passed to __getitem__If the dictionary has a double quoted key, then it works
I think you get the same result with
Since your question has already been answered I wanted to point out another way you could convert characters to numbers without an extremely long dict. To be honest I think the original way might be better because it's extremely obvious what it does, but I just wanted to show that there is an easier way.  


Answer URL
https://docs.python.org/3/library/string.html#format-string-syntax
https://docs.python.org/3/library/string.html#format-string-syntax
