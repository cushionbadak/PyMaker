Natural Text
I want to create a function that will be called whenever the caller gets arguments of wrong instance, that will print caller's __doc__ attribute and exit. The function is the following:I got stuck in the step, where I have to get the __doc__ attribute. I know that inspect module can do it, in a way like the following:(you can suggest another one that is compatible with every Python version, including 3.5)but I think there must be another way. The reason for my scepticism is that the built-in return statement  returns something to the caller in an immediate way, so that means there must be a "hook" or a "pipe" accessible by the child function, which is being used as a medium for information exchange with the parent.So an initial question that triggered my interest was:Is this pipe send-only and no information can be send backwards? I have not been able to answer this, as the return statement is only briefly explained in the sites I searched. Apart from this, the inspect module, as far as I can tell, saves multiple frames in a stack and runs constantly in the background. For me, this is like I am trying to kill a fly with a minigun. I just need the caller function's name, not the function 10 frames before. If there is not any way to accomplish this, this is, in my opinion, a feature that Python must have. My question is:What would be the pythonic-programmatic way to get caller's attributes in Python, with universal support ? Excuse me if there is ignorance in my question, I am open to any corrections and "mind-openings". Thank you all for your answers.
I have a few functions that may be related to your issue


Answer URL
https://docs.python.org/3/library/inspect.html?highlight=frame#the-interpreter-stack
