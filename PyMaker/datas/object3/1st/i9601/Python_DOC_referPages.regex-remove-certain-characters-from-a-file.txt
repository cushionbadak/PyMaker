Natural Text
I'd like to write a python script that reads a text file containing this: And output a text file that looks like this:I essentially don't need the commas or the SEC, NSEG and ANG data. Could someone help me use regex to do this?So far I have this: 
Without regex:
My advice? Since I don't write many regex's I avoid writing big ones all at once. Since you've already done that I would try to verify it a small chunk at a time, as illustrated in this code.The first regex is your entire brute of an expression. The next line is the first chunk I verified. The next line is the second, bigger chunk that worked. Notice the slight change. At this point I would go back, make the correction to the original, whole regex and then copy a bigger chunk to try. And re-run. 
Let's focus on an example string we want to parse:We have space(s), digit(s), more space(s), some characters, then digit(s), a comma, and more digit(s). If we replace them with regex characters, we get (\d+)\s+J=(\d+),(\d+), where + means we want 1 or more of that type. Note that we surround the digits with parentheses so we can capture them later with .groups() or .group(#), where # is the nth group.


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects
https://docs.python.org/3/library/stdtypes.html#str.split
