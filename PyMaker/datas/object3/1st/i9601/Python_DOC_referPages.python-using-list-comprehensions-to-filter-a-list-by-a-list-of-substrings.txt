Natural Text
I think this is a simple question, so I'll just go straight to an example.Given these two lists:How do I write a list comprehension to filter list x in such a way that the result would be:I want a list comprehension that excludes any partial matches of the strings in y to the strings in x.  For example, 'a' in y would match 'a', 'ab', 'abc', and 'ac' in x.This comprehension only matches entire strings: result = [r for r in x if r not in y]If this has already been asked I'll gladly accept a link to a previous answer.  That said, I haven't found one on SO yet.
Use all:Or any:
This is a job for the any built-in.s in r does the partial match you want, for s in y checks all elements of y, and any is true if there was any match.  Then we just invert it.This is quadratic, O(len(x) * len(y)).  If y is long, it may be more efficient to synthesize a regexp:which should be merely O(len(x) + len(y)).
It depends on the length of your y what the best approach is, if it contains a lot of elements I would convert it to a set and check if any item in x has an intersection (one common character) with it:


Answer URL
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/functions.html#any
