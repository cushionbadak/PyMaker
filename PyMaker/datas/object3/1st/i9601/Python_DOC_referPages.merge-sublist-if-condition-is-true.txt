Natural Text
Example:The 1st element in the sublist is a string numberThe 2nd element in the sublist can be whatever stringI want to merge the sublists if the first element in a sublist is already in the list (and remove the strings who are double)Output:How can I obtain a merged list based on a condition?
If you want to keep both ordering of the sublists and items within the sublists as close to original as possible you could utilize OrderedDict:Output:Above constructs OrderedDict where keys are first elements from the lists and values are OrderedDict objects. Second level dicts contain the second elements from lists as keys. Second level values are irrelevant, OrderedDict is only used because Python standard library doesn't have OrderedSet.Update: Assuming that Sublists have third element which is list of two numbersResult list should be ordered based on first occurrence of first elementSublists should contain only unique pairs and be ordered based on the first number of the pairYou could use set on second level and sort the pairs when constructing result:Output:
Maybe you can try this code, but return not oredered list:
As an alternate solution to @niemmi you can use this, which also uses OrderDict:
This could probably be made into a generator expression, but written out simply, this approach should work...Output:Though, as mentioned, an OrderedDict, perhaps using the setdefault method may be a more apt solution, since dictionary keys are unique.edit: tweaked to remove dups
Another regular and straight forward and easy to understand example is:Output:


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
