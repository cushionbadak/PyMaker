Natural Text
Is there a way to give a comparator to set() so when adding items it checks an attribute of that item for likeness rather than if the item is the same? For example, I want to use objects in a set that can contain the same value for one attribute.I have implemented my own sorta thing that does similar functionality but wanted to know if there was a builtin way.
Just define __hash__ and __eq__ on the object in terms of the attribute in question and it will work with sets. For example:If you can't change the object (or don't want to, say, because other things are important to equality), then use a dict instead. You can either do:so new objects replace old, orso old objects are maintained if the value in question is already in the keys. Just make sure to iterate using .viewvalues() (Python 2) or .values() (Python 3) instead of iterating directly (which would get the keys, not the values). You could actually use this approach to make a custom set-like object with a key as you describe (though you'd need to implement many more methods than I show to make it efficient, the default methods are usually fairly slow):


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__hash__
https://docs.python.org/3/reference/datamodel.html#object.__hash__
