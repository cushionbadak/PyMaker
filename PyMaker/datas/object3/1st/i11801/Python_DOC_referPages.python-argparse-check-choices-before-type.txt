Natural Text
I'm trying to enable a user to pass in a function name.  For some reason it seems that argparse performs the type check/conversion BEFORE it checks the choices.  Is this a bug?  Best thing to do?This throws:
Yes, during parsing the type then choices order is clear and intentional (and not just incidental).  When preparing to assign arg_strings to the namespace it calls _get_values, which does:where _get_value applies the action.type function, and _check_value tests For parsing choices only has to respond to the in (__contains__) expression.So choices have to reflect values after conversion.  If type is int, then choices=[1,2,3] is correct, ['1','2','3'] is not.There are some (largely unresolved) bug issues over the display of the choices.  Long lists, e.g. range(100) work in parsing, but don't display nicely. And display also requires that choices be iterable (e.g. a list, tuple, dictionary).   This display issue affects the usage, the help and the error messages (each formats choices slightly differently).metavar is your most powerful tool for replacing an undesirable choices list.  I'd have to run a test case to see whether it solves things for all 3 situations.
Apparently so, however you can work around this simply by using functions.keys() as your choices, e.g.However, if you want to provide this kind of interface (mapping functions to command line arguments) you might want to take a look at click.


Answer URL
https://docs.python.org/3/library/argparse.html#choices
