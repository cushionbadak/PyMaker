Natural Text
I'm trying to set attributes to my SSLContext object and then trying to wrap the socket, but it shows me that none of the attributes are used while wrapping it.When I run it, the Cipher suites still have DH and it uses PROTOCOL_TLSv1 instead of the PROTOCOL_SSLv23 I'm trying to set it to. Can someone show me what I'm doing wrong here?
PROTOCOL_SSLv23 means that it uses a SSLv2 compatible handshake. It still will do TLS 1.x. See the documentation where it is clearly listed what protocols are supported in this case, namely all of SSLv2, SSLv3 and TLSv1.x. The protocol actually used in the handshake depends on what the client offers and what the server accepts and supports. In the case of SSLv23 the server accepts everything so it fully depends on the client. To deny the use of specific protocols better use the OPENSSL_NO_* flags.This is correct and this also works. I have no idea how you tested and determined  that it does not work. The idea of ciphers is the same as with the protocol: the client offers a number of ciphers and the server accepts one of these if this is supported on the server side. In this case the connection would fail if the client offers only DH ciphers. Note that as it is currently the code would fail when the client tries offers only DH ciphers no matter if you explicitly deny DH or not because you did not fully setup DH support. To do this you would need to load a DH file with context.load_dh_params(dhfile).Apart from that ALL:!DH is a bad choice since you include all the weak and anonymous ciphers with ALL which makes it really insecure. A safer choice would be DEFAULT:!DH.


Answer URL
https://docs.python.org/3/library/ssl.html#socket-creation
