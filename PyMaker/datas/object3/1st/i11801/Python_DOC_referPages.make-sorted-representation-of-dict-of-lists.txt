Natural Text
I have a dictionary of lists like wherea and b are mx.DateTime.DateTime objects i.e. time;c and f are mx.DateTime.DateTimeDelta objects i.e. result of operations between a and b;d is a boolean value.I want to write some value from the dictionary in a file in a sorted by time order:But I can't figure out how would I sort this by dict[key][4]. How can I make it?
Not sure to understand your question but here is one way you can create a list of sorted keys:PS: please do not use dict as a variable name since it is a built-in type in Python
dict by nature are data structure which does not keep order of their items (key:value) pair, so, if you want to write a sorted value from your dictionary, here is one way:Then you can loop through it to write to your file:On the other hand, if the order of items matters to you within your dictionary, then I suggest to you to use OrderedDict from collections module:This will create a dictionary as yours but at the same time it will maintain the order at which its items where inserted in the first place (during the for loop in this case)
You need to convert your dict into a list using dict.items(), as dict cannot be sorted.This returns a list of tuples [('p1':[a,b,c,d,f])]On that list, you can access element[1][4] to retrieve the fYou can apply that to a sort:


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
