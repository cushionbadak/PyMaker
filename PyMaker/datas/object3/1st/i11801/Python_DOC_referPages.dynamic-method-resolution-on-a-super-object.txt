Natural Text
I need to find a method on a super() object by name. This works when using the "dot operator" notation: super(self.__class__,self).p. However, I need to do that dynamically, something like super(self.__class__,self)["p"], which does not work.I tried to use __getattr__, but super object does not have that method. And super(self.__class__,self).__getattribute__("p") returns self.p instead super().p. How to do that correctly and elegantly?For instance:This code outputs:
What you're looking for is getattr(). This works:By using __getattribute__() directly, you lose the wrapping super() does to the object. You should always use getattr() for getting methods or other attributes. Generally, going directly to __dunder__ methods is discouraged if there are other options.


Answer URL
https://docs.python.org/3/library/functions.html#getattr
