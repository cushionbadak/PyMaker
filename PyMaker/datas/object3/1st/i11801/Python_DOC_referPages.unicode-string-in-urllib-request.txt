Natural Text
The short version: I have a variable s = 'b채r'. I need to convert s to ASCII so that s = 'b%C3%A4r'.Long version:I'm using urllib.request.urlopen() to read an mp3 pronunciation file from URL. This has worked very well, except I ran into a problem because the URLs often contain unicode characters. For example, the German "B채r". The full URL is https://d7mj4aqfscim2.cloudfront.net/tts/de/token/b채r. Indeed, typing this into Chrome as a URL works, and navigates me to the mp3 file without problems. However, feeding this same URL to urllib creates a problem.I determined this was a unicode problem because the stack-trace reads: ... and other than the obvious UnicodeEncodeError, I can see it's trying to encode() to ASCII. Interestingly, when I copied the URL from Chrome (instead of simply typing it into the Python interpreter), it translated the b채r to b%C3%A4r. When I feed this to urllib.request.urlopen(), it processes fine, because all of these characters are ASCII. So my goal is to make this conversion within my program. I tried to get my original string to the unicode equivalent, but unicodedata.normalize() in all of its variants didn't work; further, I'm not sure how to store the Unicode as ASCII, given that Python 3 stores all strings as Unicode and thus makes no attempt to convert the text.
Use urllib.parse.quote:


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote
