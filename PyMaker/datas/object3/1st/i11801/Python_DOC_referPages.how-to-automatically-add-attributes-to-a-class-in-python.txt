Natural Text
I have a class with quite a few attributes that are provided when instanciating (init).Looks like this, but with about 30 more attr:Works fine, but gets very long an repetitive and hard to update.Before I used a much smaller class:Works fine, much easier, but hard to keep track. When using an IDE (I use PyCharm) I will have no hints when writing an object and autocomplete hints are usually not working.I would look for some mix of both classes, like:Anybody knows if / how this is possible? Thanks a lotPython 3.4 +PyCharm 2016.1 CommunityEdition... Edit / Additional ...The problem seems to be primarily to "preserve" the code inspection in the IDE, so that the autocompletion etc. is still available on the object.
you can simply get a dictionary of the local variables with the locals builtin, then remove self and update:Although if you really want to make your IDE happy it needs to see the explicit attribute assignment, so you could instead write a code to write the code:then just copy-paste and indent the result from write_init_code into the actual function and you are done.
The module inspect allows you to query the running program. The below example demonstrates its use:output:As you can see, you can access a dictionary of the arguments and their corresponding parameter name through ArgInfo.locals. The second print out is an example of how to put the argument values in the order of the parameter declaration.You can use this to populate your instance variables, or you can simply copy the ArgInfo.locals dictionary.
You can use locals() to achieve what you want:
EDIT: Now that python 3.7 is out, the @dataclass class decorator solves this very elegantly.ORIGINAL ANSWER:With multiple cursors in PyCharm, you can easily convertto a very long line like:This is what I've done to keep PyCharm smart


Answer URL
https://docs.python.org/3/library/functions.html#locals
