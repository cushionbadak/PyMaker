Natural Text
I have some classes in Python:and a list myList whose elements are all either instances of Class1 or Class2. I'd like to create a new list whose elements are the return values of method called on each element of myList. I have tried using a "virtual" base classBut if I try map(Class0.method, myList) I just get [0, 0, 0, ...]. I'm a bit new to Python, and I hear that "duck typing" is preferred to actual inheritance, so maybe this is the wrong approach. Of course, I can dobut I like the brevity of map. Is there a way to still use map for this?
You can useBut I think this is better:Â PS.: I don't think there is ever a need for range(len(collection)).
The operator.methodcaller tool is exactly what you're looking for:Alternatively you can use a list comprehension:
This is best:Map seems to be favored by people pining for Haskell or Lisp, but Python has fine iterative structures you can use instead.


Answer URL
