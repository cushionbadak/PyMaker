Natural Text
I am trying to extract all the sentence containing a specified word from a text. but it is returning me :instead of :Any help please ?

No need for regex:
But note that @jamylak's split-based solution is faster:The speed difference is less, but still significant, for larger strings:
You can use str.split,
This line is a bit odd; why concatenate so many separate strings? You could just use r'..+apple.+.'.Anyway, the problem with your regular expression is its greedy-ness. By default a x+ will match x as often as it possibly can. So your .+ will match as many characters (any characters) as possible; including dots and apples.What you want to use instead is a non-greedy expression; you can usually do this by adding a ? at the end: .+?.This will make you get the following result:As you can see you no longer get both the apple-sentences but still the Me too.. That is because you still match the . after the apple, making it impossible to not capture the following sentence as well.A working regular expression would be this: r'\.[^.]*?apple[^.]*?\.'Here you donâ€™t look at any characters, but only those characters which are not dots themselves. We also allow not to match any characters at all (because after the apple in the first sentence there are no non-dot characters). Using that expression results in this:
Obviously, the sample in question is extract sentence containing substring instead ofextract sentence containing word. How to solve the extract sentence containing word problem through python is as follows:A word can be in the begining|middle|end of the sentence. Not limited to the example in the question, I would provide a general function of searching a word in a sentence: limited to the example in the question, we can solve like:The corresponding output is:


Answer URL
