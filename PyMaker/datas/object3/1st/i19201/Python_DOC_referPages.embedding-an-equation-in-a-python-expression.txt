Natural Text
I occasionally use Python, is there any way to get this syntax to work?That gives the error:SyntaxError: invalid syntaxOr do I have to do it the long way?
You cannot embed an assignment in an expression. The expression/statement distinction is fundamental to Python's design, and if you asked Guido how to do what you want, he would tell you to do it in two lines. Or, better, step up another level and see if there's another way to do what you were trying to do. For example, the most common reason for assigning a variable in an expression is to simplify a while or for loop. In Python, you usually want to just turn it into a for loop over the iterator instead, instead of a while or for loop around fetching the next value from the iterator.This is discussed in the official Python Design and History FAQ, under Why can't I use an assignment in an expression, which explicitly gives this example:The FAQ also acknowledges that this makes it harder to translate "line by line" from languages like C and Perl, and explains why this is a good thing about Python rather than a negative.That being said, there are ways you can fake it, using a closure or nonlocal variables. For example:However, it's hard to think of a case where this would be the right solution.
No, Python doesn't allow this. Assignment is a statement only, and can't be embedded in an expression.
No, there's not.  You can't print the results of an assignment as it takes place.
It is not possible to extract the value out of the assignment operator, but if you must absolutely do it in one line, you can write an object whose setter will store the received value and return it:Note that this goes against Python's conventions, which is for setters (and other kinds of mutators, such as set.discard or list.sort) to return None.
Note that in cases where all you're looking to do is use an expression once without assigning it to a variable you'll never reuse, Python does let you do things like print math.factorial(5).


Answer URL
