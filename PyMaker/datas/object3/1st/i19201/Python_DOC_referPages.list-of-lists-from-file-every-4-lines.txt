Natural Text
I'm reading from a file in Python and need to create a list of lists. Each line is a separate value in a record, each record is separated by a blank line \n.That gives me a list of values for every line, and excludes the \n however I'd like to start a new sub-list or list block within the larger list.e.g.'line 1a''line 2a''line 3a''\n''line 1b''line 2b''line 3b''\n'Is this possible with a list comprehension? I was originally creating this with two listsThank you for your help!Steven
If you're trying to collect things into groups of 4 lines, the grouper function in the itertools recipes makes that trivial:This returns you an iterable of iterables—in particular, an izip lazy iterator over tuples. If you specifically need a list of lists, you need to do something like:Since the recipes aren't part of the standard library module, you either have to copy and paste the function from the docs, or install a third-party module called more_itertools.If you want something slightly different… well, it's hard to know exactly how to code it without knowing exactly what you want, but you'll probably find it in itertools.For example, let's say you want to split it into groups delimited by lines that are nothing but whitespace. I'm pretty sure there's a function in more_itertools that does this for you, but you can write one yourself pretty easily.First, you can use groupby to group lines by whether or not they're all whitespace:But groupby returns key, group pairs. You only want the group without the key. And you also only want the groups of non-empty lines, not all groups.Or, if you explicitly need a list of lists, instead of a some arbitrary iterable type (in this case, a list of _grouper lazy iterables):If you look at the groupby docs, the examples are actually very close to this.I'd probably factor out lambda line: not line.strip() into a function (or use more_functools.negate(line.strip), or…), and write it as two or three lines instead of cramming it into a big list comprehension, but if you want a 1-liner list comprehension (and a 98-character line is acceptable), this is it.
You have blank lines separating the groups that should go into each sublist, right? Assuming your input is not too humongous to read in at once, you can do it like this:The first split gives you groups of three lines (or whatever), the second builds a sublist from each group.
Try somthing like this... it works."f.txt" is your file to read from


Answer URL
