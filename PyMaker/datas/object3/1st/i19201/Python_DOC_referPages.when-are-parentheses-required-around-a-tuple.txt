Natural Text
Is there a reference somewhere defining precisely when enclosing tuples with parentheses is or is not required?  Here is an example that surprised me recently:
The combining of expressions to create a tuple using the comma token is termed an expression_list.  The rules of operator precedence do not cover expression lists; this is because expression lists are not themselves expressions; they become expressions when enclosed in parentheses.So, an unenclosed expression_list is allowed anywhere in Python that it is specifically allowed by the language grammar, but not where an expression as such is required.For example, the grammar of the if statement is as follows:Because the production expression is referenced, unenclosed expression_lists are not allowed as the subject of the if statement.  However, the for statement accepts an expression_list:So the following is allowed:
Anywhere you are allowed to use the expression_list term, you do not need to use parenthesis.The if statement requires an expression, and does not support an expression_list.Examples of syntax that does allow expression_list:The return statementyield expressionsassignment(including augmented assignment)The for statement.Grepping the Expressions, Simple and Compound statements documentation for expression_list will tell you all locations that expression_list is used in the Python grammar.
Parentheses are also required when you want to avoid ambiguity.The following are two different expressions... just because something is an 'expression list', doesn't result in the expression list you might expect :)


Answer URL
