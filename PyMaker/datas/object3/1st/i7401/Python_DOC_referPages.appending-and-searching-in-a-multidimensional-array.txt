Natural Text
So my problem is that I want to append a name of something to an array, and a count.  Now I would like to search my 2d array by the name of the thing I am counting and add 1 to the second column      I would test for the existence of the item before adding 1 to the second columnI am not sure if this is possible, or if I will just need to search the entire first column of the array for the item before appending to the list.  I am going to be doing this for 37,731,481 items so I would need a way to search strings that would hopefully not be quadratic in run time, so I would probably just sort my list by the strings and do a binary search.  
I suggest you use a mapping instead of the nested lists, most preferably a collections.Counter object. The items will be the keys and their counts will be values. Then searching for a key can be done in constant time - O(1).And you won't need to test for key existence to add/update values:This is so because collections.Counter objects unlike vanilla dicts always return zero for missing keys rather than raise a KeyError.In case you need to manage negative counts, a Counter object will not be the best choice. You could use a collections.defaultdict object instead making the default_factory the int function:Works the same way as the Counter except negative counts are now properly handled.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
