Natural Text
Consider the following scenario:script.py:cant_import_this.py:The output of script.py is, surprisingly:What seems to be happening is:import cant_import_this checks if cant_import_this exists in sys.modulescant_import_this can't be found in sys.modules, so cant_import_this.py is found and loadedthe uninitialized cant_import_this module is put into sys.modulesthe module is executed, which removes cant_import_this from sys.modules and replaces it with sysinstead of returning the module itself, the result of the lookup sys.modules['cant_import_this'] is returnedIs this interpretation correct? More importantly, is this behavior documented anywhere? Could it possibly be considered a bug?
I found the answer in a footnote:The importlib implementation avoids using the return value directly.  Instead, it gets the module object by looking the module name up in  sys.modules. The indirect effect of this is that an imported module  may replace itself in sys.modules. This is implementation-specific  behavior that is not guaranteed to work in other Python  implementations.So it's not a bug, but it can't be relied on either.


Answer URL
https://docs.python.org/3/reference/import.html#fnlo
https://docs.python.org/3/reference/import.html#loading
