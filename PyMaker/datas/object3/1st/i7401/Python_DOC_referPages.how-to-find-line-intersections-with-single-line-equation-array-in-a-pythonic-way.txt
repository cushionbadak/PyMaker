Natural Text
What would the most pythonic way be, without using for loops, of finding line intersection points in an array comprised of m,c values?achieving the desired result with for loops would consist of something like:
The equation for the intersection of two lines y1 = a1*x + b1 and y2 = a2*x + b2 is x = (b2 - b1) / (a1 - a2).By making use of broadcasting it is easy to compute all intersections between any number of lines:This works by appling the element-wise - operator to a column vector of shape [N, 1] and it's transpose of shape [1, N]. The vectors are broadcast to a matrix of shape [N, N].The final result are two symmetric matrices xi and yi. Each entry xi[m, n] is the intersection of lines m and n. nan means the lines are identical (they intersect in every point). inf means the lines do not intersect.Let's show off the result:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
https://docs.python.org/3/library/itertools.html#itertools.combinations
