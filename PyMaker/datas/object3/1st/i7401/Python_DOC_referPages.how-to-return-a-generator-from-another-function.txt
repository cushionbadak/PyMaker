Natural Text
I have a generator function which I want to call from another function and return the generator obtained. I can see two approaches here - Note that the below functions are simple dummy functions to illustrate the purpose. Please don't come up with better ways to implement those functions itself.Method 1and use it as list(list(fun_b(10))[0]) to get [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]Method 2Then list(fun_b(10)) can give me [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]. While method 1 seems ok'ish, I don't want to return a list of list because in other cases I am returning a list and I don't want to mess up my code. Method 2 is just inefficient. What would be a really good approach to deal with this situation?
I you are using Python 3.3 or higher, you can use the yield from syntax introduced in PEP 380:PEP 380 adds the yield from expression, allowing a generator to delegate part of its operations to another generator. This allows a section of code containing yield to be factored out and placed in another generator. Additionally, the subgenerator is allowed to return with a value, and the value is made available to the delegating generator.If not, then you'll just have to use the for item in iterable: syntax.


Answer URL
https://docs.python.org/3/whatsnew/3.3.html#pep-380
