Natural Text
So let's say I have this bit of code:Now it's a simple enough method, and as you can see we are using an external library(coolObject). In unit tests, I have to create a mock of this object that roughly replicates it. Let's call this mock object coolMock. My question is how would I tell the code when to use coolMock or coolObject? I've looked it up online, and a few people have suggested dependency injection, but I'm not sure I understand it correctly.Thanks in advance!
In you test:
As Dan's answer says, one option is to use dependency injection: have the function accept an optional argument, if it's not passed in use the default class, so that a test can pass in a moc.Another option is to use the mock library (here or here) to replace your coolObject.Let's say you have a foo.py that looks likeIn your test_foo.py you can do:The path you use can include properties on objects, e.g. module1.module2.MyClass.my_class_method. A big gotcha is that you need to mock the object in the module being tested, not where it is defined. In the example above, that means using a path of foo.coolObject and not somwhere.else.coolObject.


Answer URL
https://docs.python.org/3/library/unittest.mock-examples.html
https://docs.python.org/3/library/unittest.mock.html
