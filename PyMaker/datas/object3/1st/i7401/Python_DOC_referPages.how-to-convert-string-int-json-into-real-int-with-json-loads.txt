Natural Text
I'm trying to convert a string which represents a JSON object to a real JSON object using json.loads but it doesn't convert the integers:(in the initial string, integers are always strings)Instead of {u'value': u'42'} I'd like it becomes {u'value': 42}. I know I can run through the whole object, but I don't want to do that, it's not really efficient to do it manually, since this parse_int argument exists (https://docs.python.org/2/library/json.html#json.loads). Thanks to Pierce's proposition:
As we established in the comments, there is no existing functionality to do this for you. And I read through the documentation and some examples on the JSONDecoder and it also appears to not do what you want without processing the data twice.The best option, then, is something like this:This has the downside of processing the JSON object twice â€” once in the super().decode(s) call, and again to recurse through the entire structure to fix things. Also note that this will convert anything which looks like an integer into an int. Be sure to account for this appropriately.To use it, you do e.g.:
In addition to the Pierce response, I think you can use the json.loads object_hook parameter instead of cls one, so you don't need to walk the json object twice. For example:As @ZhanwenChen pointed out in a comment, the code above is for python2. For python3 you'll need to remove the or isinstance(o, unicode) part in the first if condition.
Here is my solution! I used object_hook, it is useful when you have nested jsonThere is filter only for parsing json key to int. You can use int(v) if v.lstrip('-').isdigit() else v filter for json value too.



Answer URL
https://docs.python.org/3/library/json.html#json.loads
https://docs.python.org/3/howto/unicode.html#python-s-unicode-support
