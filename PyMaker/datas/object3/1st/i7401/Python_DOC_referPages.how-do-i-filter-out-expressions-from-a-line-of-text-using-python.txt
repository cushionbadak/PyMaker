Natural Text
I want to remove words that do not belong to a pre-defined list. For example, if my list is:My input is like this:I want my output to be:I tried this:But this removes the parentheses, and I get this:Also, because of the for loop, newlines are getting introduced, which I don't want.What am I doing wrong?
This is the foolproof solution: Use re.sub with a function. First get a set of the allowed words:or use Then re.sub with a regex for each word \w+, then check if they're in the ok - if yes, then return that word, otherwise return an empty string:prints This will consider only entire words and entire words only, unlike the various .replace solutions provided here. It will only retain a word if the entire word is in the set of allowed words. It will never remove a part of a full word. It will work with whatever the separators and operators would be.If you want to remove any excess space before the right parenthesis, use another substitution:which for the above result will produce
The solution using re.finditer() function:The output:
Use re sub:
If you are only going to process strings similar to the one you provided with parentheses, You can just split the line into words, strip them of parentheses, and then check if they are allowed or not:Now that we found all the words we want to remove, we just remove them, like this:The only thing wrong with newline now is those annoying spaces before the parentheses where we removed words, but that's easy:Your newline now should output '(ANIMAL (CARNIVORE (BIRD)) (HERBIVORE (MAMMAL)))'Also, as you can see I did not print each and every word during this session, which is why I get one single line newline that I can now print instead of multiple new lines on each print command


Answer URL
https://docs.python.org/3/library/re.html#re.finditer
