Natural Text
I try to understand why I get unreasonable result from the following if:I get 3 times 0 or 2 and then last one Only One Neg.What is the order of this complicated condition?I've tried this:and it's ok but I'm trying to understand why above doesn't work.
This is because condition a < 0 != b < 0 means a < 0 AND 0 != b AND b < 0 First of all when a >= 0 first condition evaluates to False and so nothing else gets evaluated. Then, if a is <0 but b=1 last condition in the chain is False. Therefore your chained condition is False 3 out of 4 times. This is well explained in section 6.10 of Python documentation. 
You need parentheses due to operator precedence
As CoryKramer pointed out, the operator precedence is making the difference.Your code is equivalent to this:Because != has higher precedence than < by language definition.So, use () to force the precedence that you need:Also, FYI you are coding the xor operator.
Due to operator precedence you need to place the two conditions in parentheses for your expected results. Otherwise the comparison operators are solved, checking for 0 != b in your code, which is not what you expect.Note that all comparison operators have the same precedence and comparisons can be chained arbitrarily, e.g., x < y <= z is equivalent to x < y AND y <= z
From this, you could make it more readable imo:


Answer URL
https://docs.python.org/3/reference/expressions.html#comparisons
https://docs.python.org/3/reference/expressions.html#operator-precedence
