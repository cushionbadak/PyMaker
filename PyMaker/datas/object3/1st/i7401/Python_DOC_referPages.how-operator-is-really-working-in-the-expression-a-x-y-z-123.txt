Natural Text
This question already has an answer here:Python Assignment Operator Precedence - (a, b) = a[b] = {}, 5                    1 answer                Very basic question but I think I am missing some background that I would like to understand.Let's say we have expressions:I know that first version is a messy code, but I wish to understand. Always I thought that result of this code is the same. I was wrong. Type of first "a" is a string, type of second "a" is a list. The question is why in the first case the type of the most right value is propagated to the left? 
Unlike in C, = is not an operator, and the statementis not parsed as a = ([x,y,z] = "123"). It does not take the result of the [x,y,z] = "123" assignment and assign it to a.The syntax of an assignment statement in Python isand, as stated in the documentation,An assignment statement evaluates the expression list (remember that this can be a single expression or a comma-separated list, the latter yielding a tuple) and assigns the single resulting object to each of the target lists, from left to right."123" is assigned to both a and [x,y,z], starting with a.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
