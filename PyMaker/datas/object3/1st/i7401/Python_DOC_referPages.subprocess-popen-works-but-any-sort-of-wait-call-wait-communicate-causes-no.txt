Natural Text
This works: This causes the program to not respond (I'm running on windows): wait, communicate and basically anything that makes the main process wait for the sub process causes the same. I want the main process to quit when the subprocess finishes successfully.Also, FYI: this function is hooked to a tkinter Button, and this program uses tkinter GUI and a mainloop(). Dunno if this affects this problem, but letting you know anyway.Thanks in advance!
There are few issues with your code.subprocess.call()Run the command described by args. Wait for command to complete, then return the returncode attribute.wait() and communicate() are also blocking functions.Use poll() instead.Since you want the GUI thread to be responsive you can start the sub-process on a different thread. something like this,
First of all, why you trying to subprocess another python script when you can just import it?Anyway, you problem stems from the fact that any of call, wait and communicate waits for termination of subprocess if timeout parameter is ommited. Because of this tkinter application unable to refresh itself and mainloop is unreachable for code flow.If you have something complicated in your mind - take a look at threading, multiprocessing and this topic.If you want just terminate the main process when the subprocess finishes - take a look at thoose snippets:test.py:main.py:The main idea here in keep mainloop reachable for code with combination of poll and after methods.


Answer URL
https://docs.python.org/3/library/threading.html
https://docs.python.org/3/library/multiprocessing.html
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.poll
