Natural Text
Is it possible to rename/alter all the keys of a dict? As an example, let's look at the following dictionary:I want to remove all the a_ in the keys, so I end up with
If you want to alter the existing dict, instead of creating a new one, you can loop the keys, pop the old one, and insert the new, modified key with the old value.(Iterating a list(a_dict) will prevent errors due to concurrent modification.)Strictly speaking, this, too, does not alter the existing keys, but inserts new keys, as it has to re-insert them according to their new hash codes. But it does alter the dictionary as a whole.As noted in comments, updating the keys in the dict in a loop can in fact be slower than a dict comprehension. If this is a problem, you could also create a new dict using a dict comprehension, and then clear the existing dict and update it with the new values.
You can use:
You can do that easily enough with a dict comprehension.Result:
You could use the str.replace function to replace key to match the desired format.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.replace
