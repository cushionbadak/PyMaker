Natural Text
I'm writing unit tests in Python and I'd like to create a mock function that returns another mock (specified by me) when called.Here's what I've tried:But when I call fn(), it returns a different mock, probably a default of some description.Any idea what I'm doing wrong? Also, is there a neater way to do this? I'd love to be able to write something like fn = MockFunction(my_mock).
Use the return_value argument:
From the docs, it's reasonable to expect your code to work. The docs do pretty much the same thing with the __str__ method in an example, and it works:However, this only works with most magic methods, and the exact list of which it works for is undocumented:Because magic methods are looked up differently from normal methods [2], this support has been specially implemented. This means that only specific magic methods are supported. The supported list includes almost all of them. If there are any missing that you need please let us know.__call__ happens to be one of the magic methods that isn't on the list. Instead, you need to use the return_value attribute of the mock itself, or provide a return_value argument to the constructor.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#magic-methods
https://docs.python.org/3/library/unittest.mock.html#id8
https://docs.python.org/3/library/unittest.mock.html#the-mock-class
