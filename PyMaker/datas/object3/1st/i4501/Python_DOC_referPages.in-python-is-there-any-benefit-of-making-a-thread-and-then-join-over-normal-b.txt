Natural Text
In Python, is there any benefit of making a Thread and then join() over normal blocking process? For example, is this code:  any better than this:  Is there any use-case or situation where one of it is better than the other?
In general, if you join on a single thread there is not much benefit over a non-threaded approach.The only thing I can think of is that you can specify a timeout for join to limit the time a computation may take. This is also possible without threads, but it would require you to modify the target function (to periodically check whether the time limit has been reached). Using a timeout for join is transparent to the underlying function.Obviously, if you have more than one thread then joining one or more of them is drastically different than a single-threaded program, since the threads then work in parallel while only the main thread waits for the join to complete.


Answer URL
https://docs.python.org/3/library/threading.html#threading.Thread.join
