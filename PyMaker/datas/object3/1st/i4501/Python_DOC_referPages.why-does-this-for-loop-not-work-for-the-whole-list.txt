Natural Text
trying to build my first game for a python course I'm doing.How would i get this for-loop to iterate through the entire list changing each value to the word 'bull'?Thank you!Input:Output:
This is a more interesting problem than it first appears.will iterate over 1,2,3,4.checks if 1,2,3,4, respectively, are in b, and sets b[x] to bull.Since Python is zero-based indexed, what a simple guess would expect to see is this:Instead you see this:What gives? And what is zero-based indexing?Zero-based indexing just means that, if you want the first element of something, you call it at index 0. In other words, if a = [1,2,3,4], then a[1] gives 2, and a[0] gives 1. Confusing, and there are debates among some computer scientists whether this is actually the best way to do it. Some languages, like Fortran and Julia, have one-based indexing, so something like what you're trying to do would actually work there.Now back to the problem: let's go loop-by-loop.On your first loop, x = 1, so x in b evaluates to True and b[1] = 'bull' evaluates to: b = [1,'bull',3,4].On your second loop, x = 2, but x in b evaluates to False! Remember that b = [1,'bull',3,4], so there's no longer a 2 in b, and it skips element assignment!On the third loop, 3 in b is True, so now b[3] = 'bull' and b = [1,'bull',3,'bull'].On the fourth loop, there is no 4 in b, so nothing happens.For what you're trying to accomplish instead, you can approach this in one of two ways:In this method, i is initialized at 0, and increased by one each loop. So i will span: 0,1,2,3. Perfect for zero-based indexing!Another approach is to do this:When x is 1, x-1 gives you 0, and remember that b[0] = 1.
You could use zip to check if elements at corresponding index of two lists are same. Note: List indices start from 0. So, you need to assign bull to index x-1 of b.Lastly if you need a 1-liner:
If x is 1, then b[x] = 'bull' will write to x[1], but the position of 1 in the a list is actually a[0].What you want is to use the indexes of the values of a to manipulate the corresponding values in b:If you actually want to replace the value in b, regardless of its index, you need to find the index to manipulate first:Or, even shorter, use a list comprehension:
You can try the below basic code.


Answer URL
https://docs.python.org/3/library/functions.html#zip
