Natural Text
In the example code, I would like to run 4 functions in parallel and return list values for each. Is the multiprocessing package appropriate for this task? If so how do I implement it?Example Code:Any information much appreciated. Thanks in advance. 
As explained in Process Pools, you need to submit all of the jobs to the pool, and then wait for all of the results.I'm not sure what arguments you want to pass to these functions, since it isn't in your question or your code, but I'll just make up something arbitrary.You can dramatically simplify this in multiple ways (e.g., each of those for loops can be replaced by a single call to extend, or you can just write full_list = result_a.get() + result_b.get() + result_c.get() + result_d.get()), but this is the smallest change to your existing code that works. (And if you really want to simplify this code, I think you'd be happier with concurrent.futures.ProcessPoolExecutor in the first place.)
Assuming (since my question was never answered) that each function receives the same number:


Answer URL
https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.pool
