Natural Text
I want a list containing Amharic alphabet from utf-8. The character ranges are from U+1200 to U+1399. I am using windows 8. I encountered SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 0-5: truncated \UXXXXXXXX escape. I tried this:[print(c) for c in u'U1399']How can i list the characters?
To print the characters from U-1200 to U-1399, I would use a for loop with an int control variable. It's easy enough to convert numbers to characters using chr().The integer value 0x1200 (i.e. 1200 in hexadecimal) can be converted to the Unicode codepoint U-1200 like so: chr(0x1200) == '\u1200'.Similarly for 0x1201, 0x1202, ... 0x1399.Note that we use .isprintable() to filter out code some of the useless entries.orNote that the code samples require Python3.
Your posted code doesn't produce any errors at all:It also doesn't have any non-ASCII characters in it.You probably wanted to use a Unicode backslash escape. And your problem is probably more like this:The reason is that—as the error message implies—a \U escape requires 8 hex digits, and you've only provided 4. So:But there's a different escape, sequence \u (notice the lowercase u), which takes only 4 digits:If you're using Python 2.7, and possibly even with Python 3 on Windows, you may not see that nice output, but instead something with backslash escapes in it. But if you print that string, you will see the right character.The full details for \U and \u escapes (and other escapes) are documented in String and Bytes literals (make sure to switch to the Python version you're actually using, because the details can be different, especially between 2.x and 3.x), but usually you don't need to know much more than explained above.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
