Natural Text
Background:I need to run a program on a remote server without logging into the server. The server would only allow people to contact it, not to see what files are on it or login.The server has in it a .py and an installation of Python. That file has the hardcoded login credentials to a database that I do not want users of the local machine program to see.I would like to contact the server, pass it arguments and request it to run the program with them.The reason is I don't want my program on the local machine to store the login credentials for the server, so I dont want to ssh because that would again require some form of localized credentialing which leaves the credentials exposed to the users at some point (and I never want them to see them).Traditionally when I am making remote machine calls, its to an exposed API through the requests or http.client libraries; from what I can find, this may require the socket library, and that is a library I am not very familiar with and couldn't seem to find examples of what I am trying to do.Server code:Question(s):How can I do a one way request to a server containing a script file and pass it arguments?Is this the appropriate way to handle ensuring users cannot see admin credentials?Question 2 is somewhat out of scope here, because the underlying problem is that the program needs to create a new user account on a database, but you must be logged in with an authorized account to do so. If I hardcoded or stored credentials in a file that the local machine could see, then a savvy user could debug the program and see what they are. I figured putting them on a server where nobody can see the files, just ask the server to run them, would be a safe bet and ensure security.
What you need seems to be a typical HTTP endpoint. Things to read and consider:A simplest web framework, like web.py. Or you can run your program as a CGI script, no matter the language.A config file that would keep the credentials of the mongodb admin user. Read it every time your program runs.The hardest part: a proper authorization layer on top of your script. Else anyone will be able to run it. At the very least, basic http auth, or token bearer auth.Unless it's inside your tiny private trusted VPN with built-in encryption, serve your endpoint over HTTPS. Since it will be fronted by a web server anyway (either as a pass-through, or via uwsgi), just use the fact that your web server already does HTTPS (and it does, right?).
a simple example and making the following request http://localhost:5000/adduser?user=root&pwd=1234on top of that you can use POST over SSL (HTTPS) so the data will be encrypted and transmitted in the request body instead the url (like GET) this suppose to be sufficient, security wise 


Answer URL
https://docs.python.org/3/library/configparser.html
