Natural Text
I am needing to create lists of random numbers (being either 0 or 1) with different lengths. I need lists with lengths of 10 numbers, 20 numbers, etc. all the way to 500. This is what I have:So I'm getting 50 lists of only one random number. I understand that the range() is my problem because it is only an iterator, so what would I do to avoid writing 50 for loops to get all of these lists?
The only way to generate 50 lists of random numbers (short of writing out all those commands sequentially) is to go through 50 loops generating the numbers.  The standard way to do this in most programming languages is with nested loops.  Some languages have features, or available libraries that can make this easier to write and/or more effecient. Python has a feature called list comprehensions that make creating lists very easy and convenient.They can also be nested to accomplish your task.Timing:Hmmm.  I was under the impression that list comps had more of a speed advantage over for loops.
A more efficient solution is to use numpy. See Why NumPy instead of Python lists?This creates a list of arrays of binary values, with arrays of length 10, 20, ... , 490, 500.Any answer which claims nested list comprehensions are efficient for this task should note that they are ~100x slower versus numpy in this instance.Benchmarking
You need nested loops:
I guess this solves your problem:     
Issues : There are 2 issues with your code first one is range() and second one is indent of   print(list1) list1.clear() .Fixed Code :
Since it seems you simply need the list printed out, you can use a list comprehension to generate the list of a certain length.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
