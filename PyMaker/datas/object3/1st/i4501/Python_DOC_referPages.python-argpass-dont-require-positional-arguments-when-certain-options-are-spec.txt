Natural Text
Positional parameters with nargs='+' or nargs=<integer> are required, meaning that argparse gives an error if the parameter is not specified at least once. However, no error is given if the user calls the program with the -h|--help option, regardless of whether the positional parameters were specified.How can I implement custom options like -h that do not require positional parameters to be set, while still requiring positional parameters for all other options?For example, if let's say my program has the following (or similar) usage text:How can I implement the following behaviour:calling PROG with no options and no positionals is an errorcalling PROG with -u and no positionals is an errorcalling PROG with only positionals is allowedcalling PROG with -h or -o is allowed regardless of whatever else is specifiedMy codeThis meets all requirements except the last one, namely -o still requires the positional parameter to be specified.Does argparse have a built-in way to say that positional is not required iff -o is specified, or must this behaviour be implemented manually?
Manual methodsSet nargs='?' or nargs='*' for the positional parameter (i.e. make it optional), and then add the following lines immediately after args = parser.parse_args():Or add these lines, courtesy of this answer:This simply prints the help message if no options or positional parameters were specified. This behaviour is consistent with many command line programs, e.g. git.Of course, making positional optional will affect the usage message:If you really don't want this to happen you can override the usage method like this:


Answer URL
https://docs.python.org/3/library/argparse.html#mutual-exclusion
