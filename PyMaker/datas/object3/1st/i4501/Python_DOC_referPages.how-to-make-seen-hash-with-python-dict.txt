Natural Text
In Perl one can do this:This is a way to remove duplicates by keeping track of what has been "seen".  In python you cannot do:The above python results in KeyError: 'one'.What is python-y way of making a 'seen' hash?
Use a defaultdict for getting this behavior. The catch is that you need to specify the datatype for defaultdict to work for even those keys which don't have a value:You can use a Counter as well:If all you need are uniques, just do a set operation: set(['one', 'two', 'three', 'one'])
You could use a set:
If you unroll seen[x] += 1 into seen[x] = seen[x] + 1, the problem with your code is obvious: you're trying to access seen[x] before you've assigned to it. Instead, you need to check if the key exists first:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
