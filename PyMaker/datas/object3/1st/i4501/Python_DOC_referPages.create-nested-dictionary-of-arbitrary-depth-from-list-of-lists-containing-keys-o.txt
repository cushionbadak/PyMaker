Natural Text
Given is a list containing lists of arbitrary lengths. Each list contains the keys of one level for the dictionary. Example:Given the list "DL"I would like to create a nested dictionary with four levels of the following structure:In Python notation:The values of the last level dictionaries (B11, B12) should be empty lists.
Here's a simple recursive function. Since all the nested dicts are the same, the function simply recurses once to build the sub-dict, and then copies it for each value with copy.deepcopy.Pretty-printed output of dictify(DL):
My solution iterates through each depth, starting at the "end" of the list, then iterates through each element, assigning it to the previous depth's dictionary.Output:
The solution can be reduced to creating a dictionary tree structure from a Cartesian product.This is a solution based on collections.defaultdict and itertools.product.Result:


Answer URL
https://docs.python.org/3/library/copy.html#copy.deepcopy
