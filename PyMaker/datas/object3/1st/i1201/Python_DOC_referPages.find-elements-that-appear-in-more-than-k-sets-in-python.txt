Natural Text
I am implementing a basic spell-correction system and I have built an inverted index for my domain's language, where every character bigram is mapped to a list of words that contain that bigram. Now I want to find all words that share more than 3 character bigrams with the given word w. So the main problem is: given a set of lists, how can one efficiently find elements that occur in 3 or more of them? For example, given sets:I like to get the output: since a and e have each appeared in more than 3 sets.I would appreciate your ideas.
You could try using collections.Counter:You get the output by using this (or something similar):
Additional to @Ralf. You can use dicts to construct a histogramHist now is:Which can be sorted with sorted(hist.items(), key = lambda x[1]) # sort along values 


Answer URL
https://docs.python.org/3/library/stdtypes.html#set
