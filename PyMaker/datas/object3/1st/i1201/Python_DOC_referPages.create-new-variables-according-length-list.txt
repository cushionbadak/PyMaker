Natural Text
I've a follow list below. I'd like to transfer each item from list to different variables individually without to know its lengthFor example, consider the following list:The result expected is:The real objective is avoid "out of range" error. Because I won't know the list length, and it can vary.In another moment, for example, the list could be:In this case, the result expected would be:Let me give you a real case. My script connect to a firewall and execute the following command:nameif = net_connect.send_command("show nameif")The output from this command can vary, depending how many interfaces there is on device. There are cases that it can have 3 interfaces, 4 interfaces or much more... So,  I filter to a list: nameif_entry = nameif.split()After I remove other information that it doesn't matter:del nameif_entry[0:4]nameif_edited = nameif_entry[::3]print (nameif_edited)['mgmt', 'dmzncl', 'dmz3', 'dmz5', 'dmz4', 'dmzvdi', 'dmzvdi1']After I run the following lines and send to many lists as below:int_0 = net_connect.send_command("show route %s %s" %(nameif_edited[0],src_ip))int_1 = net_connect.send_command("show route %s %s" %(nameif_edited[1],src_ip))int_2 = net_connect.send_command("show route %s %s" %(nameif_edited[2],src_ip))int_3 = net_connect.send_command("show route %s %s" %(nameif_edited[3],src_ip))int_4 = net_connect.send_command("show route %s %s" %(nameif_edited[4],src_ip))int_5 = net_connect.send_command("show route %s %s" %(nameif_edited[5],src_ip))int_6 = net_connect.send_command("show route %s %s" %(nameif_edited[6],src_ip))int_7 = net_connect.send_command("show route %s %s" %(nameif_edited[7],src_ip))int_8 = net_connect.send_command("show route %s %s" %(nameif_edited[8],src_ip))int_9 = net_connect.send_command("show route %s %s" %(nameif_edited[9],src_ip))int_10 = net_connect.send_command("show route %s %s" %(nameif_edited[10], src_ip))So it's here where the problem occurs. I receive a following error:int_7 = net_connect.send_command("show route %s %s"  %(nameif_edited[7], src_ip)) IndexError: list index out of range
If you do not know how long the list is beforehand, how do you plan to put enough variables into your source code to hold them?Generally speaking if you have a list and you want to do something with each element, you would do:You do not need an index at all (80+% of the time). If you need the index as well, use enumerate():Output:If you have an upper bound for your elements and "harmless" defaults you can cheat a bit:In this case the letters will be filled with the elements of list1 and any "non-present" element will take one of the empty strings. *_ will consume the rest of the list.This only works for small ranges though - f.e. if you get 3-8 strings, and want to have "" for any that is not provided. I might use that if I need several of those strings together at once and not after one another.Example:Output:Doku:for loopsenumerate()list of built in functionsExample for using the list decomposition (and a smarter way to do it - there almost always is a better way then resorting to the "cheaty" list decomposition with default values).Task: calculate   f(x) = k_0 + k_1*x +k_2*x**2 + ... for up to x**5 from a user inputted list, that has 1 to 6 elements:all of those work ... but this is smarter (and more conceise):Test:Outputs:


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#for-statements
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html
