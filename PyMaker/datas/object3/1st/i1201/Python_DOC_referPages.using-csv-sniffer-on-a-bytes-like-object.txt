Natural Text
I have the following code which I'm using to infer the field separator and line terminator in a csv file:From the above, I'd expect the csv Sniffer to be able to infer the separator is , and the line-terminator is \r\n. However it returns the following error:TypeError: cannot use a string pattern on a bytes-like objectWhat would be the best way to fix this?Note, the reason I'm opening it in b mode is so that I can see all characters, for example:
Open in 'r' mode and supply newline='':outputfrom the docs:newline controls how universal newlines mode works (it only applies to text mode). It can be None, '', '\n', '\r', and '\r\n'. It works as follows:When reading input from the stream, if newline is None, universal newlines mode is enabled. Lines in the input can end in '\n', '\r', or '\r\n', and these are translated into '\n' before being returned to the caller. If it is '', universal newlines mode is enabled, but line endings are returned to the caller untranslated. If it has any of the other legal values, input lines are only terminated by the given string, and the line ending is returned to the caller untranslated.When writing output to the stream, if newline is None, any '\n' characters written are translated to the system default line separator, os.linesep. If newline is '' or '\n', no translation takes place. If newline is any of the other legal values, any '\n' characters written are translated to the given string.
One possible option would be to decode it before passing it to the Sniffer. For example:


Answer URL
https://docs.python.org/3/library/functions.html#open
