Natural Text
I want to use RegEx to find the first sequence within a string where a set of words appears, by any order.For example, if looking for the words hello, my and world, then:for hello my sweet world the expression would match hello my sweet world;for oh my, hello world it would match my, hello world;for oh my world, hello world it would match my world, hello;for hello world there would be no match.After some research, I tried the expression (?=.*?\bhello\b)(?=.*?\bmy\b)(?=.*?\bworld\b).*, which does not solve my problem, as it matches the whole string if all words are present, as in:for oh my world, hello world it matches oh my world, hello worldWhat would be the apropriate expression to achieve what I described?(Although RegEx is the preferred method for my program, if you think is not the way to go, any other python solution is welcome.)
I think this task best gets done with some programming logic and regex wouldn't be easy and efficient. But here is a regex that seems to be doing your job and doesn't matter whether you have repeating words (hello my world) present or not,The idea here is,Make an alternation group \b(hello|my|world)\b and put it in group1Then optionally it can have zero or more any characters following it.Then it must be followed by any of the remaining two words and not the one that got matched in first group which is why I have used ((?!\1)\b(?:hello|my|world)\b) and this second match is then put in group 2.Then again it can have optionally zero or more any characters following it.Then again we apply the same logic where the third word should be the one that wasn't captured in either group1 or group2, hence this regex (?:(?!\1)(?!\2)\b(?:hello|my|world)\b)Here is a Demo
Unified iterative pythonic approach by using Pattern.finditer() function and Set object:The output:You may transform the above approach into a function to make it reusable.


Answer URL
https://docs.python.org/3/library/re.html#re.Pattern.finditer
