Natural Text
I am writing a syscall wrapper for python(just as a fun project to get me used to the API), and when I came upon implementing read(), I am perplexed as to how I can modify a python buffer that is sent to my function.The function is a simple cpython wrapper around the read() syscall.It takes an integer (the file descriptor), a buffer, and the maximum you want to read, then returns the amount read.I have everything working except for the modification of the buffer:After loading the module, then calling read:Though this is what I expected (and is what should happen, since I did not have an actual reference to the argument), I would like to know how to get a reference to the parameter.EDIT:After using @user2357112, it still does not modify the valueEDIT 2:But it does work with bytearray, if I size it correctlyThank you  @user2357112
You have a reference to the argument. You may have just corrupted the argument object or the memory surrounding it, in fact. You don't have a reference to the caller's s variable, but variables and references don't work like that in Python anyway; references always refer to objects.Python string objects aren't appropriate for use as mutable buffers. They're supposed to be immutable, after all. Also, they're Unicode, and read reads bytes. Instead, use an appropriately-sized bytearray and view its contents through a Py_buffer structure with the y* format code.Also, since read returns ssize_t rather than int, you should use the n format code rather than i. n corresponds to Py_ssize_t, which is intended to match ssize_t when ssize_t exists.


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytearray
https://docs.python.org/3/c-api/buffer.html#c.Py_buffer
https://docs.python.org/3/library/os.html#os.read
