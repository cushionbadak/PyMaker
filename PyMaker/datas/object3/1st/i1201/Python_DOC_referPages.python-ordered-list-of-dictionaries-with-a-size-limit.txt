Natural Text
This is a requirement for a chat application project that I'm creating with Python, Flask, Socketio, and Javascript:"Messages View: Once a channel is selected, the user should see any messages that have already been sent in that channel, up to a maximum of 100 messages. Your app should only store the 100 most recent messages per channel in server-side memory."So, what I think I should be doing is creating a list of dictionaries. Like this:My questions are..How do I append to/access a list of dictionaries like this?How do I limit the size of the list, and replace the oldest element with the second oldest element as I add to it?Is this the best practice for storing a fixed size of data server side?
One possible solution is to use the double-ended queue implemented in the standard library's collections package - collections.deque.Deques are similar to lists, but support efficient appending and popping from both ends, are threadsafe, and can be specified to have a maximum length.For example:If you add an element to a deque which has maxlen set, and which is already at maximum size, an element is removed from the other end of the deque:It's worth noting that Python's json module doesn't handle deques, so if you want to dump the deque to json you'll need to provide a function that converts the deque to a list:To recreate the deque from a json array, just pass the deserialised list to a new deque:


Answer URL
https://docs.python.org/3/library/collections.html#module-collections
https://docs.python.org/3/library/collections.html#deque-objects
