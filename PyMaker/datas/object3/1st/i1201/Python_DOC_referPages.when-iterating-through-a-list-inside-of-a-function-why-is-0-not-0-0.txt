Natural Text
I am trying to solve a problem in which I have to remove the zeroes (both 0 and 0.0) from a list and add them to the end of the list (the zero that is appended can be a 0, doesn't have to be 0.0). But the catch is that I must not remove False. I thought I finally figured out my problem by using is instead of == but for some reason it's not working:I've tried putting parentheses at the if statement but the result is the same. It removes all the 0 but for some reason it won't remove 0.0. Result:I rewrote the function but outside of the function and for some reason it works:And here the result is how I would expect it:Why is the floating point zero being removed when executed outside of the function, but when the function move_zeros is called, the floating points are not recognized in the if statement?
You only handle floats and ints - so you can construct a new list from your input if the value is not 0:Output:If x is an integer  only 0 and -0 can lead to 0.0  - if x is a float, only 0.0 and -0.0 can lead to 0.0 - simply do not put them into the output. .copy() is not needed because the list comprehension copies already for you.The check for intergers and is works because python caches integers from -5 to 256 or so - they all get the same id() and hence is "seems" to work. Only use is for None checks or if you know what you do, never for numbers.If you want to leave non (Ã¬nt,float) untouched you can check for that too:Read more:What's with the Integer Cache inside Python?Is there a difference between `==` and `is` in Python?thruthyness: why False is 0 - Part 1why False is 0 - Part 2Small sanity check:Output:
use ==, not is. is is for comparing identity (two "things" occupying the same space in memory, essentially), == is for equality (do two things have the same defining properties). Furthermore, with floats it is often useful to check whether things are "close enough", e.g. is_equal = a-b < 0.00001


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
https://docs.python.org/3/library/stdtypes.html#boolean-values
