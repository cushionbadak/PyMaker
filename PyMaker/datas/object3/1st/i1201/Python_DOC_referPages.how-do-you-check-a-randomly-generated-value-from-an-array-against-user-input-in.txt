Natural Text
I'm doing a music quiz for my OCR GCSE programming project. The aim of the python program is to generate a randomly chosen song from an array, display the initials of the song and also show the artist, then allow the user to guess the name of the song. The song array and the artist array are stored in separate external notepad files, and load in correctly, displaying the initials of the song and the artist. My problem is that, even if the user guesses the song name correctly, the program displays that it is incorrect and does not match the correct song name to the user input. I have tried displaying the song name to make sure I am guessing the song name correctly, and have also tried copying the song name and copying it into the user inputI expect the program to display "Well done!" if the user has not guessed the song incorrectly more than 3 times and guesses the answer correctly. However, the program never shows this and instead displays Nope! Try again and prompts for input for songnameguess until the user has guessed (incorrectly or correctly) three times, then prints Sorry, you've had two chances. Come back soon!
Like @Barmar said in the comments when you read a text file, you have to take into account the fact that you are going to get the newline character at the end of each line. But there's another bug in your code: in your while loop you never check to see if the user has given more answers than you wanted to grant him. So the user will be stuck in that loop until he gives the right anwser.So with minimal modifications it would look like:Solution 1
But we go can go further.Solution 2I've used context managers to open and read filesI've used nb_tries_left to keep note of the number of tries left before stopping. Instead of counting up to a value, I set that value first and decrement to zero.
We can go even further:Solution3I use the fact that file objects are iterable. So using zip(), I create a list of tuples containing songs and artists combined. I use random.choice() to pick a random song and artist


Answer URL
https://docs.python.org/3/reference/datamodel.html#context-managers
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/random.html#random.choice
