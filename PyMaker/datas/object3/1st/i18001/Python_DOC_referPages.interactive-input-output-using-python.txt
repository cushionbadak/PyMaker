Natural Text
I have a program that interacts with the user (acts like a shell), and I want to run it  using python subprocess module interactively. That means, I want the possibility to write to stdin and immediately get the output from stdout. I tried many solutions offered here, but none of them seems to work for my needs.The code I've written based on Running an interactive command from within pythonThe problem is that the queue remains empty, as if there is no output.Only if I write to stdin all the input that the program needs to execute and terminate, then I get the output (which is not what I want). For example if I do something like:Is there any way to do what I want to do?EDIT:The script will run on a Linux machine.I changed my script and deleted the universal_newlines=True + set the bufsize to 1 and flushed stdin immediately after wrtie. Still I get no output.Second try:I tried this solution and it works for me:
Two solutions for this issue on Linux:First one is to use a file to write the output to, and read from it simultaneously:Second, as J.F. Sebastian offered, is to make p.stdout and p.stderr pipes non-blocking using fnctl module:
None of the current answers worked for me. At the end, I've got this working:Tested with this dummy.py script:The caveats are: input/output always lines with newline, flushing child's stdin after every write, and use readline() from child's stdout (all of that managed in the functions). It's a pretty simple solution, in my opinion (not mine, I found it here: https://eli.thegreenplace.net/2017/interacting-with-a-long-running-child-process-in-python/). I was using Python 3.6.
Here is an interactive shell. You have to run read() on a separate thread, otherwise it will block the write()


Answer URL
https://docs.python.org/3/library/asyncio.html
