Natural Text
Ok so I've been using python to try create a waveform image and I'm getting the raw data from the .wav file using song = wave.open() and song.readframes(1), which returns :What I want to know is how I split this into three separate bytes, e.g. b'\x00\x00',  b'\x00\x00', b'\x00\x00' because each frame is 3 bytes wide so I need the value of each individual byte to be able to make a wave form. I believe that's how I need to do it anyway.
You can use slicing on byte objects:When handling these frames, however, you probably also want to know about memoryview() objects; these let you interpret the bytes as C datatypes without any extra work on your part, simply by casting a 'view' on the underlying bytes:The mv object is now a memory view interpreting every 2 bytes as an unsigned short; so it now has length 3 and each index is an integer value, based on the underlying bytes. 
Here is a way that you can split the bytes into a list: gives the result:
You are actually asking about serialization/deserialization.  Use struct.pack and struct.unpack (https://docs.python.org/3/library/struct.html).  This gives you nice primitives to do both unpacking and things like endian swapping.  For example:Note that your example splits 2 byte words, not bytes.Since this question is also coming up in searches about splitting binary strings:


Answer URL
https://docs.python.org/3/library/struct.html
