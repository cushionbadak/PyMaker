Natural Text
I have a function with many arguments and a detailed help message, e.g.:I also have a wrapper function which does some accounting and then calls my worker_function, passing all arguments to it as is.I want the help message (displayed by python built-in help() function) for wrapper function to have argument list and help message from worker function.The closest solution I could get is to do:This results in:But this description is missing the essential part - the argument list, that is:(In real-life function the argument list is long, with telling default values, and I would like that to be displayed automatically).Is there a way to add an argument list or worker_function to the help message of wrapper_function?
help() internally looks up the function data using the inspect module. Unless you overwrite the function meta data by default (if that’s even possible) I don’t think you can get rid of the wrapper function’s definition.What you can do however is fill the wrapper function’s help text with information from the wrapped function. You can either use the inspect module yourself (especially the getfullargspec method), or you can just use the pydoc module (which is what help internally uses) to generate it for you.Calling help on that will then generate a more useful output including the original signature.
To preserve argspec you can use decorator module. Or mimic its implementation.


Answer URL
