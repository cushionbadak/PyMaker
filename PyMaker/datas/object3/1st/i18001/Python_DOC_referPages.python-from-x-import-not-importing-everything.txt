Natural Text
I know that import * is bad, but I sometimes use it for quick prototyping when I feel too lazy to type or remember the importsI am trying the following code:It results in an error: `NameError: global name 'shaders' is not defined'If I change the imports:The error disappears. Why does * not include shaders?
shaders is a submodule, not a function.The syntax from module import something doesn't import submodules (Which, as another answer stated, not defined in __all__). To take the module, you'll have to import it specifically:Or, if you only want to have a few functions of shaders:And if you want to have all the functions of shaders, use:Hope this helps!
If shaders is a submodule and it’s not included in __all__, from … import * won’t import it.And yes, it is a submodule.
I learned this from my own situation. A module did not automatically import along with the rest of the package. Before that experience my mistaken understanding was that every packages's modules automatically import from an import x or a from x import *.  They don't.Beginners might expect EVERYTHING to import under those calls, I believe. But the following GUI programming code, which is common, demonstrates that that's not the case:In the above example, module ttk doesn't import automatically along with the rest of the tkinter package, for instance.  The explanation that I've been told is as follows: when you use from x import *, you actually only imported things in your-python-location/lib/x/__init__.pyPackages are folders.  Modules are files.  If the import calls for specific files then the package folder's __init_.py will enumerate the specific files to import.


Answer URL
