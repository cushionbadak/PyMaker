Natural Text
I have names like "Western Michigan" "Northern Illinois" and I need to change them to "W Michigan" and "N Illinois".  The following is the closest I have but this fails cause let's say I match the word "Western Michigan" it throws an error and says \2 is an unmatched group (\3 seems to return the W I want).  (this is python)  
You have 5 capturing groups - but that's already been explained.  You can get what you want easily if you reduce it to 1 capturing group, but it's a little subtle.  First you use a "positive lookahead assertion" to ensure that you're looking at one of the "long words" of interest.  An assertion doesn't match anything, though.  It just constrains the search.  Then you can capture the letter following, and consume the rest.  Like so:
Instead of passing a replace pattern, you can pass a callback:
The grouping for the regular expression is by the nth open paren:Thus, the 2nd group would be 'S' if it matched, the third group the 'E' if it matched, and so on.To rectify this, instead match the word and use the first character of the matched word.


Answer URL
