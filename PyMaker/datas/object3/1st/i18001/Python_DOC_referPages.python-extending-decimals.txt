Natural Text
Why is it that python sometimes extends numbers and is there a way to stop it? For example 1.7 may turn into 1.70000005.Specifically I'm encountering this while taking in a list of floats and trying to populate a new list. The console will print out numbers containing no more than 2 decimal places while the newList being returned will have 17 places and oftentimes include a non-zero in the last digit. It does this even if I attempt to round(value,2) inside the loop.
That's just the representation! Actually, the contents of the list is still the same.To show it properly, you can format it in a string:Alternatively, you can use the decimals module:Hope this helps!
CPython uses C doubles, and C doubles are typically implemented in hardware for speed.Hardware floating point is precise to only a limited number of digits.  Also, it's stored base 2, and we think mostly in base 10, and some numbers that have a finite expression in base 10, don't have one in base 2, and vice versa.So you should:Never compare a floating point value for equality to another. Instead, subtract them, take the absolute value, and compare thatresult to a small positive number like 1e-8.Round your floating point values to a palatable number of placesafter the decimal point, using string formatting or thehttp://docs.python.org/3/library/functions.html#round function.You can use the decimal module to get caller-specified precision.  Or if you have rational values, you can use the fractions module.


Answer URL
