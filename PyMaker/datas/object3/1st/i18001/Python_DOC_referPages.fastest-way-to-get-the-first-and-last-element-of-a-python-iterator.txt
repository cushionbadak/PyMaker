Natural Text
I'm trying to perform checks on the first and last elements of an interator. It has several thousand entries, so I need an expeditious method of checking. If found this post, that put me onto this strategy.Anyone have any opinions on a quicker method of accomplishing this? Thanks a lot!
Get the first value with the next() function:This assumes the iterable is finite.For an empty iterable, first and last are set to defaultvalue. For an iterable with just one element, first and last will both refer to that one element. For any other finite iterable, first will have the first element, last the very last.
Based on my answer to the linked question:Probably worth using __reversed__ if it is available. If you are providing the iterator, and there is a sensible way to implement __reversed__ (ie without iterating from end to end) you should do it
You can use a deque with a maxlen of 1 to quickly get the last element of a finite iterator:
According to my tests, islice is up to 3 times faster than for: pass or deque. This would require you to know how many items there will be, though.Or if you don't know the full length, but do know that it must be at least n, you could still "skip" to n as a shortcut:


Answer URL
