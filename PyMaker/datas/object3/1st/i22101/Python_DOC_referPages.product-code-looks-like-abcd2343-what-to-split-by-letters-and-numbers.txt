Natural Text
I have a list of product codes in a text file, on each like is the product code that looks like:abcd2343abw34324abc3243-23ASo it is letters followed by numbers and other characters.I want to split on the first occurrence of a number.
Or, if you want to split on the first occurrence of a digit:\d+ matches 1-or-more digits.\d*\D+ matches 0-or-more digits followed by 1-or-more non-digits.\d+|\D+ matches 1-or-more digits or 1-or-more non-digits.Consult the docs for more about Python's regex syntax.re.split(pat, s) will split the string s using pat as the delimiter.  If pat begins and ends with parentheses (so as to be a "capturing group"), then re.split will return the substrings matched by pat as well. For instance, compare:In contrast, re.findall(pat, s) returns only the parts of s that match pat:Thus, if s ends with a digit, you could avoid ending with an empty string by using re.findall('\d+|\D+', s) instead of re.split('(\d+)', s): 
This covers your corner case of abc3243-23A and will output abc for the letters group and 3243-23A for the_restSince you said they are all on individual lines you'll obviously need to put a line at a time in input
To partition on the first digitSo the two parts are always parts[0] and parts[1].Of course, you can apply this to multiple codes:If each code is in an individual line then instead of s.split( ) use s.splitlines().



Answer URL
https://docs.python.org/3/library/re.html#regular-expression-syntax
