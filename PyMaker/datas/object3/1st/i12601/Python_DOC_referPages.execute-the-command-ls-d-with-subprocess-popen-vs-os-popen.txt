Natural Text
On Linux OS, the python code below provides the directories inside the current directory.Because os.popen is deprecated, I'm migrating this call to subprocess.PopenHowever for some reason this doesn't work, I get the following error
*/ only works if globbing is being performed; in os.popen, the whole string is being evaluated by a shell which is wrapping the actual ls process, and the shell is performing the expansion. When you use the list based Popen, it's passing the literal string */ to ls, and ls doesn't expand globs on its own.You could pass a str and shell=True to Popen, but that's just reopening the performance, security and stability holes that os.popen has. Easier is to avoid subprocesses at all, just use the glob module or one of os.listdir/os.scandir/os.walk instead of using subprocesses at all.For example, in Python 3.5 with os.scandir, you can get all the directories in the working directory extremely efficiently with:On earlier versions of Python, os.listdir + os.path.isdir can be used to do the same thing slightly less efficiently (it involves a stat of each entry which os.scandir can avoid, but for small directories and/or local filesystems, the stat cost is trivial):


Answer URL
https://docs.python.org/3/library/glob.html
https://docs.python.org/3/library/os.html#os.scandir
https://docs.python.org/3/library/os.html#os.scandir
https://docs.python.org/3/library/subprocess.html
