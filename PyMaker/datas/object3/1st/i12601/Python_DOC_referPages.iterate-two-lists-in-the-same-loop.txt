Natural Text
How do I iterate through two lists in Python? I want exactly the result ofBut I think adding lists and then iterating through them is not efficient. I used for loop to iterate through the lists:But when I checked this with timeit execution time of both was very similar.Is it possible to make it faster?
For small data sets you will not find much difference. But normally if you want to chain and iterate multiple iterables, then you can use itertools.chain, like thisThis doesn't create any intermediate data structures and iterate each of the iterables one by one. The value returned by chain is an iterator. So that also doesn't create a container with all the items in it and it is very memory efficient if the iterables are going to be very big.And itertools.chain is effectively the same as your second approach. Quoting the equivalent implementation from the official docsIf we look at the byte code generated for the first program you have shown, with thisit would be something likeAs you can see, the BINARY_ADD code is used twice. It means that list1 and list2 are added first and a temporary list is created and that is again added with list3. This will be highly inefficient if any of the lists is very big.
Use itertools.chain:
You can use the method chain from itertools module to chain the three lists into single one:OR:
If you're more of a numbers person, here is a test case providing evidence that it is inefficient to add the lists together before iterating through.Note that hugelists.py contains three lists each containing 10,000 random four-digit numbers.Results:
You can try the builtin zip() function.Notice you can put other iterables into it.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/functions.html#zip
