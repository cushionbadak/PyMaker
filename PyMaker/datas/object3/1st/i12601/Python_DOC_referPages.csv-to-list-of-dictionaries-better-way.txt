Natural Text
I'm working on a function that takes in a filename of a CSV and converts each line to a dictionary and then returns a list of the dictionaries created (to be able to iterate through and organize in later functions.  I've gotten it to do what I want by doing the following but feel there's got to be a better way.  Any suggestions for improvement?Sample of CSV contents:
You have reinvented the csv.DictReader() class, I'm afraid:This relies on the header row for the dictionary keys. You can define your own dictionary keys with the fieldnames argument to DictReader() (the fieldnames field is matched, in order, to the columns in the file), but then the first row in the file is still read like any other row. You can use the next() function to skip rows (see Skip the headers when editing a csv file using Python).
Original task: List of dictsYou can use pandas. It is fast and can do it in a few lines; Now list_of_data contains:The .dropna(subset='Policies') removes the lines that have NaNs in the column Policies, i.e. missing values.  Pandas-only solution:If you don't want the list of dicts, keep the dataframe:This reads the Incident Time as very convenient datetime64[ns]object. The dataframe looks like this:


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictReader
