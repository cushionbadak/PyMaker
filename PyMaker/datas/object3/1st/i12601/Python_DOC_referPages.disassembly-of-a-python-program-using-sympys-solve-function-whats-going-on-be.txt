Natural Text
I have this Python code which solves a 3 variable linear equation.I am happy as well as baffled with that output. I want to understand what steps sympy follows to solve this, and what solver it's using?     Part 1 of the question is How is sympy solving AX-B above? Part 2: In general is there a method to see the disassembly for any python program (for the purpose of understanding it)?  
There are two basic methods:Read the sourceThe best way to understand it is to read the source. In IPython, you can type solve?? and it will show you the source code, as well as what file that source is in. You can also look at the SymPy GitHub.solve in SymPy is a bit complicated, because it can solve many different types of equations. I believe in this case, you want to look at solve_linear_system, which uses row reduction. That will be replaced with linsolve in a future version, which uses essentially the same algorithm (Gauss-Jordan elimination). Use a visual debuggerAnother way to understand what is going on is to step through the code in a visual debugger. I recommend a debugger that can show you the code of the function that is being run, as well as a list of the variable, along with their values (pdb is not a great debugger in this respect). I personally prefer PuDB, which runs in the terminal, but there are other good ones as well. The advantage of using a debugger is that you can see exactly what code paths are being traversed and what values the variables have at each step. 


Answer URL
https://docs.python.org/3/library/dis.html
https://docs.python.org/3/library/dis.html#dis.show_code
