Natural Text
In Python 2.7, str.format() accepts non-string arguments and calls the __str__ method of the value before formatting output:But when I pass a datetime.time object, I get ' <5' as output in both Python 2.7 and Python 3:Passing a datetime.time object to str.format() should either raise a TypeError or format str(datetime.time), instead it returns the formatting directive. Why is that?
'{0: <5}'.format(time(10, 10)) results in call to time(10, 10).__format__, which returns <5 for the <5 format specifier:This happens because time_instance.__format__ attempts to format time_instance using time.strftime and time.strftime doesn't understand the formatting directive.The !s conversion flag will tell str.format to call str on the time instance before rendering the result - it will call str(time(10, 10)).__format__(' <5'):
datetime objects support the datetime.strftime() options when formatting:That format includes support for literal text:The >5 format is treated as literal text. You can fit your time into a 5-character column using the following format:


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.time.__format__
https://docs.python.org/3/library/datetime.html#datetime.time.strftime
