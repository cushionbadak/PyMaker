Natural Text
I want to have a datetime formatted like %F %T %Z in Python2.  If I do it naively with datetime.now() the timezone part appears empty.  I've learned that Python2 doesn't have support for tzinfo objects, but there's a 3rd-party pytz module.Unfortunately, in order to construct a tzinfo with pytz I still need to name the timezone explicitly.  What I would like to have is a combination of localtime() and a default tzinfo, so that I get current time in local timezone.Compare the following three outputs:The second one is what I want, sans the need to specify the timezone explicitly.  On the other hand, /bin/date doesn't need any hint to look the timezone up:Looking at the source code for date(1) I can see that when compiled with glibc it relies on tm_zone field being part of struct tm, but otherwise will require TZ environment variable to be set.Any ideas how to make this work with Python2 w/o hard-coding the timezone?
On a platform with /bin/date (non-Windows), to print the current local time in a given format:To reproduce it portably, you need tzlocal that finds pytz tzinfo that corresponds to your local timezone:%F, %T are not portable.This code works even during a DST transition when the local time may be ambiguous.


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior
