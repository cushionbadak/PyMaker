Natural Text
My question is very simple.Can someone explain this python Regular Expression for me?neg_pattern = re.compile(r'\b(' + '|'.join(negations_dic.keys()) + r')\b')And the negations_dic is here:negations_dic = {"isn't":"is not", "aren't":"are not", "wasn't":"was not", "weren't":"were not"} I want to know what do the ( and ) and '|' mean .This is the command that use the regular expression above:neg_handled = neg_pattern.sub(lambda x: negations_dic[x.group()], lower_case) And what is the use of x.group mean? Does it return the key-value pair in the negation_dic?
In regular expressions:| means 'or' (so any one of the choices will do), and '( )' means a matching group.So, '(is|are|was)' will match any of the words 'is', 'are', or 'was'.But, the question seems to be more python than regular expression to me.'|'.join(['a', 'b', 'c']) will result in a matching group '(a|b|c)' which will match any of the elements in the list.


Answer URL
https://docs.python.org/3/library/re.html
