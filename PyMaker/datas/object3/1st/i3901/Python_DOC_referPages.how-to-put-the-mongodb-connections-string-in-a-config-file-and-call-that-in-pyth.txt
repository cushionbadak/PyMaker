Natural Text
I have a command line script that I run with a lot of arguments. I have now come to a point where I have too many arguments, and I want to have some arguments in dictionary form too.So in order to simplify things I would like to run the script with a settings file instead. I don't really know what libraries to use for the parsing of the file. What's the best practice for doing this? I could of course hammer something out myself, but if there is some library for this, I'm all ears.A few 'demands':Rather than using pickle I would like it to be a straight forward text file that can easily be read and edited.I want to be able to add dictionary-like data in it, i.e., some form of nesting should be supported.A simplified pseudo example file:
You can have a regular Python module, say config.py, like this:and use it like this:
The sample config you provided is actually valid YAML.  In fact, YAML meets all of your demands, is implemented in a large number of languages, and is extremely human friendly.  I would highly recommend you use it.  The PyYAML project provides a nice python module, that implements YAML.  To use the yaml module is extremely simple: 
I Found this the most useful and easy to usehttps://wiki.python.org/moin/ConfigParserExamplesYou just create a "myfile.ini" like:And retrieve the data like:
Yaml and Json are the simplest and most commonly used file formats to store settings/config. PyYaml can be used to parse yaml. Json is already part of python from 2.5. Yaml is a superset of Json. Json will solve most uses cases except multi line strings where escaping is required. Yaml takes care of these cases too.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
https://docs.python.org/3/library/configparser.html
