Natural Text
This question already has an answer here:Why can't I iterate twice over the same data?                    3 answers                Performing len on list of a zip object clears zip [duplicate]                    2 answers                I have the zip object:First call of L_RANGES is ok:Output:Bu the next calls do not display anything. Is there any way to maintain or reset that. So far I can just convert it to the list:
If you were to create a generator each time you loop, that would solve everything, because you could reuse that multiple times. For that, convert L_RANGES from a simple generator to a lambda creating generators, but don't forget to "call" it each time with ():Compared to the other answers this doesn't take up memory (which is the downside of converting to a list) and doesn't require multiple variables for each time you want to loop (by using tee) which makes this way more flexible (you can iterate 1000 times if necessary, without creating L_RANGES_1...L_RANGES_999) for example:
An iterator, once exhausted, may not be reused. In Python 3.x, zip returns an iterator. One solution is to use itertools.tee to copy an iterator n times.For example, setting n = 2, we can do the following:Conversion to a list allows use an arbitrary number of times, but is inadvisable for large iterables due to the memory overhead.For a large number of copies, you can use a dictionary. For example:
In Python 3.x zip() returns iterator that gets exhausted.Simplest way to avoid it is:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.tee
