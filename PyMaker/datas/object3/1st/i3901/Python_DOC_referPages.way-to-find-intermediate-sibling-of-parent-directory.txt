Natural Text
I have this directory tree:C:\A\B\C\D\E\F\myfile.pyI want to insert a directory for my packages like this:My problem is that many people are using various drive names (D:, E:, etc.)How can I dynamically traverse up directories and get to A\B\C without caring what the root level drive is called?I'm aware of __file__, but which combination of os functions will help me go up to the right level?
Look at pathlib. Its the new better replacement of os.pathYou can use paths as objects. .parts would have what you need.
You can use os.path.pardir as a reference to the parent dir (essentially ..) and then use os.path.join() to move up your path in a relative manner, and finally os.path.normpath() to normalize your path e.g. from C:\\A\\B\\C\\D\\E\\F\\myfile.py to get to C:\\A\\B\\C you can do something like:On Python 3.4+ you can also use pathlib to make these mundane path operations more bearable.


Answer URL
https://docs.python.org/3/library/os.html
https://docs.python.org/3/library/os.path.html#os.path.join
https://docs.python.org/3/library/os.path.html#os.path.normpath
https://docs.python.org/3/library/pathlib.html
https://docs.python.org/3/library/os.path.html?highlight=splitdrive#os.path.splitdrive
https://docs.python.org/3/library/pathlib.html?highlight=pathlib#pathlib.PurePath.parents
