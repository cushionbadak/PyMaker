Natural Text
I'm trying to find a way to pause a script's execution (one that is not timeout) that would allow me to e.g. check variable values at that point, input additional commands from the command line and then resume the execution once I'm ready. In IDL (from which I switched to Python very recently) I was able to do that by including "stop" at the chosen code line and then typing ".cont". Does something similar exist in Python?Many thanks in advance for the help!(This is my first post here, so I hope the above description meets the standards but if not I'd welcome any critical feedback!)
I believe you are looking for the Python Debugger (pdb):The module pdb defines an interactive source code debugger for Python programs. It supports setting (conditional) breakpoints and single stepping at the source line level, inspection of stack frames, source code listing, and evaluation of arbitrary Python code in the context of any stack frame. It also supports post-mortem debugging and can be called under program control.I'd suggest you to start with set_trace():The typical usage to break into the debugger from a running program is to insertimport pdb; pdb.set_trace()at the location you want to break into the debugger. You can then step through the code following this statement, and continue running without the debugger using the continue command.Be sure to take a look at the other ways to enter the Debugger and the Debugger Commands section.


Answer URL
https://docs.python.org/3/library/pdb.html
https://docs.python.org/3/library/pdb.html#pdb.set_trace
https://docs.python.org/3/library/pdb.html#pdb.run
https://docs.python.org/3/library/pdb.html#debugger-commands
