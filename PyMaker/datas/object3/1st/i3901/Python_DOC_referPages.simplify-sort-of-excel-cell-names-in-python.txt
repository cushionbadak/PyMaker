Natural Text
I am learning python and am having trouble with sorting. I feel like the key (for sorting) is too limiting and difficult to use once sorting algorithm begins getting more complicated. Here is the list I want to sort:where each value is like an excel column (ie. 'BB1' > 'AZ15' > 'AA1' > 'B3' > 'B2' > 'A1').Here is the solution I came up with after reading the following guide.Which gives the desired output I am wondering if there is any easier/more pythonic implementation to this (in particular, I would love if I could get rid of that wrapper class).
First of all, writing (or copy-pasting) a cmp_to_key function is unnecessary. Just use the one in itertools.In this case, though, it would be a lot more natural to use a key! Just split each element into a tuple of row name length (so B is before AA), a string row, and an integer column, and rely on the natural lexicographic ordering of tuples.Viz:
Very similar solution to @Sneftel's, but I approached the problem by finding the index of the first numeric character.


Answer URL
https://docs.python.org/3/howto/sorting.html
