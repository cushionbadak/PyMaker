Natural Text
I have a list of values (the order of the list matters):My goal is to find the most important loss. For example, in the list above the most important loss is 4, because 7 - 3 = 4.How can I iterate a list, so that if list[x] > list[x + 1] I go on to the next one?
You define loss as the difference between an element l[i] - l[i+x] where l[i:i+x+1] is a decreasing subsequence.Then we can traverse the list an have a loss counter on each decreasing sub sequence, keeping the max loss.Example:
To get the largest decrease between consecutive elements, it's not pretty, but we could make a for loop like so:
Here's a brute-force method:The idea is to take every number and every subsequent number pairwise, calculate difference, and then take the maximum of these differences. Using a generator expression as above means that no intermediary lists are built in the process.
This is possible using vectorised logic via 3rd party library numpy.The idea is to use broadcasting to take the difference between the array and its transposed representation. Then take the maximum of the lower triangle from the resulting array.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
