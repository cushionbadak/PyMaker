Natural Text
I'm writing a CLI to interact with elasticsearch using the elasticsearch-py library. I'm trying to mock elasticsearch-py functions in order to test my functions without calling my real cluster.I read this question and this one but I still don't understand.main.pyEscli inherits from cliff's App classsettings.pysettings_test.pyI want to have Escli._es.cluster.get_settings() to return what I want (a dict object) in order to not make the real HTTP call, but it keeps doing it.What I know:In order to mock an instance method I have to do something likeMagicMockObject.return_value.InstanceMethodName.return_value = ...I cannot patch Escli._es.cluster.get_settings because Python tries to import Escli as module, which cannot work. So I'm patching the whole lib.I desperately tried to put some return_value everywhere but I cannot understand why I can't mock that thing properly.
You should be mocking with respect to where you are testing. Based on the example provided, this means that the Escli class you are using in the settings.py module needs to be mocked with respect to settings.py. So, more practically, your patch call would look like this inside setUp instead: With this, you are now mocking what you want in the right place based on how your tests are running. Furthermore, to add more robustness to your testing, you might want to consider speccing for the Elasticsearch instance you are creating in order to validate that you are in fact calling valid methods that correlate to Elasticsearch. With that in mind, you can do something like this, instead: To read a bit more about what exactly is meant by spec, check the patch section in the documentation. As a final note, if you are interested in exploring the great world of pytest, there is a pytest-elasticsearch plugin created to assist with this. 


Answer URL
https://docs.python.org/3/library/unittest.mock.html#patch
