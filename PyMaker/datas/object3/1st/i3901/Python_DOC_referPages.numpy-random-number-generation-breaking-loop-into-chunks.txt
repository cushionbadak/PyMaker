Natural Text
A question regarding the generation of random numbers in Numpy.I have a code which does the following:since unfortunately very_big_number can really be a very large number, I wanted to break this loop into chunks, say e.g. call 10 times the same and then collate all the output together. However, I want to make sure that this division into blocks preserves the randomness of my generated numbers.My question is:reading the numpy docuemntation or equivalently this question on StackOverflow, I would be tempted to think that it is enough to just divide the loops and run the subloops on e.g. ten different cores at the same time. However I would like to know if that is correct or if I should set some random number seed and if so, how.
Dividing the loop.... the randomness is questionable....Instead go for parallel processing....Try below said "Joblib" library or any other library if you know for parallel processing....https://pythonhosted.org/joblib/parallel.htmlJoblib provides a simple helper class to write parallel for loops  using multiprocessing


Answer URL
https://docs.python.org/3/library/multiprocessing.html
