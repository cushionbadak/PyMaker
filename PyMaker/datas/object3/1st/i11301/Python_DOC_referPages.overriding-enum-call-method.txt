Natural Text
I have an Enum like so:I would like to override the __call__ method so that a call like          Animal('hee-haw') returns Animals.never_heard_of or None instead of raising ValueError. I would rather avoid a try statement everytime I call the Animal. What would be a pure Python equivalent of Enum.__call__ ?
Update 2017-03-30With Python 3.6 (and aenum 2.01) you can specify a _missing_ method that will be called to give your class one last chance before raising ValueError.  So now you can do:Original AnswerTo be clear: you want the __call__ that is associated with Animal() which is actually on the metaclass (EnumMeta in enum.py).This is a bag of worms you don't want to get in to, as it is very easy to break things.See this answer for more details, but the simple solution is to create a get method for your Animal enum:and then Animal.get('wolf') will return Animal.never_heard_of.1 Disclosure:  I am the author of the Python stdlib Enum, the enum34 backport, and the Advanced Enumeration (aenum)  library.


Answer URL
https://docs.python.org/3/library/enum.html
