Natural Text
I want to implement a class in Python where modifying a subset of its attributes leads to a specific class method being called. I see that Python offers many ways to achieve something what I want but I'm not sure which is the most Pythonic and minimalistic way to achieve this.For instance, let's say we have class Foo with attributes x, y, z, and we're interested in intercepting modifications to attributes x and y. Whenever someone calls foo.x = ... or foo.y = ..., I want method foo.bar to be called. Also, I don't really care if I have to use a wrapper for each attribute, provided that this wrapper would have to be written only once, e.g. somehow intercept calls to virtually non-existent methods foo.set_x(...) and foo.set_y(...) to def foo.set_member(self, member, value): ....
This is actually pretty easy with the new classes in Python, built on top of the object class :


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__setattr__
