Natural Text
I want to change all values in dictionary to different ones.For example, in a dictionaryI want to change dic's values to numbers in lst likedic = {'a': 100 ,'b': 200  ... }.Is there any way to change all the values without using the name of the keys? The length of my actual dictionary is about 100.
If you need to multiply each number in the dict by 100, you could iterate through all the values at once by using a dict comprehension.If you want the numbers of the list specifically to be assigned to letters in the alphabet (in the same order), you can zip your list with small caps letters, and use this list to build your dict:In this last example, the order of your list will be reflected by the order of the alphabet's letters. So that a will be 100, b will be 200, etc.But you can't make a dict remember it's "order". There's no order in a dict, you can just pick the values and set them individually, not iterate through them with a guaranteed order (as stated in another answer, you'd need OrderedDict for that).
Short answer: No, dictionaries are not ordered in python, so there's no easy way to match up values. Longer answer: Sort of, you can used Ordered Dictionaries. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
