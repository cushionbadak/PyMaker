Natural Text
How do I copy a file in Python?I couldn't find anything under os.
shutil has many methods you can use. One of which is:Copy the contents of the file named src to a file named dst. The destination location must be writable; otherwise, an IOError exception will be raised. If dst already exists, it will be replaced. Special files such as character or block devices and pipes cannot be copied with this function. src and dst are path names given as strings. 

copy2(src,dst) is often more useful than copyfile(src,dst) because:it allows dst to be a directory (instead of the complete target filename), in which case the basename of src is used for creating the new file;it preserves the original modification and access info (mtime and atime) in the file metadata (however, this comes with a slight overhead).Here is a short example:
Copying a file is a relatively straightforward operation as shown by the examples below, but you should instead use the shutil stdlib module for that.If you want to copy by filename you could do something like this:
You can use one of the copy functions from the shutil package:Example:
Use the shutil module.Copy the contents of the file named src to a file named dst. The destination location must be writable; otherwise, an IOError exception will be raised. If dst already exists, it will be replaced. Special files such as character or block devices and pipes cannot be copied with this function. src and dst are path names given as strings.Take a look at filesys for all the file and directory handling functions available in standard Python modules.
In Python, you can copy the files usingshutil moduleos modulesubprocess module1) Copying files using shutil moduleshutil.copyfile  signatureshutil.copy  signatureshutil.copy2  signatureshutil.copyfileobj  signature2) Copying files using os moduleos.popen  signatureos.system  signature3) Copying files using subprocess modulesubprocess.call  signaturesubprocess.check_output  signature
Directory and File copy example - From Tim Golden's Python Stuff:http://timgolden.me.uk/python/win32_how_do_i/copy-a-file.html
Look at module shutil. It contains function copyfile(src, dst) 
You could use os.system('cp nameoffilegeneratedbyprogram /otherdirectory/')or as I did it,  where rawfile is the name that I had generated inside the program.This is a Linux only solution 
For large files, what I did was read the file line by line and read each line into an array. Then, once the array reached a certain size, append it to a new file. 

I suggest using Swati's answer, but supposing you have a text file and don't want to use additional libraries in your code just to copy it, you can use the following one-liner:
Firstly, I made an exhaustive cheatsheet of shutil methods for your reference.Secondly, explain methods of copy in exmaples:shutil.copyfileobj(fsrc, fdst[, length]) manipulate opened objectsshutil.copyfile(src, dst, *, follow_symlinks=True)  Copy and renameshutil.copy()  Copy without preseving the metadatashutil.copy2()  Copy with preseving the metadata`shutil.copytree()``Recursively copy an entire directory tree rooted at src, returning the destination directory
Open the source file in read mode, and write to destination file in write mode.Above Code is self explanatory, anything to explain it more is like adding more overhead to the payload. Not all answers need explanation


Answer URL
https://docs.python.org/3/library/shutil.html
https://docs.python.org/3/library/shutil.html
https://docs.python.org/3/library/filesys.html
https://docs.python.org/3/library/shutil.html
https://docs.python.org/3/library/os.html
https://docs.python.org/3/library/subprocess.html
https://docs.python.org/3/library/shutil.html
https://docs.python.org/3/library/shutil.html#shutil.copyfile
https://docs.python.org/3/library/shutil.html#shutil.copy
https://docs.python.org/3/library/shutil.html#shutil.copy2
https://docs.python.org/3/library/shutil.html#shutil.copyfileobj
https://docs.python.org/3/library/os.html
https://docs.python.org/3/library/os.html#os.popen
https://docs.python.org/3/library/os.html#os.system
https://docs.python.org/3/library/subprocess.html
https://docs.python.org/3/library/subprocess.html#subprocess.call
https://docs.python.org/3/library/subprocess.html#subprocess.check_output
https://docs.python.org/3/library/shutil.html#shutil.copyfile
