Natural Text
Sorry for the poor explanation in the question, but here's my code:Basically, it asks the user for their name and the problem that they have and writes it to a .csv; this part works perfectly.However, when the user inputs a problem such as "My sound isn't working", nothing happens after that - no output, nothing. I have tried taking out the square brackets and replacing the commas with ' or ', but since I have multiple of these if statements for different solutions, it instead prints every text document in the code.The text documents contain the solutions, e.g. "Try restarting the phone.", "Check if it's on mute."If any other information is required, then I'm more than happy to provide; this problem is frustrating me and I can't find how to fix it.Thanks
As currently stated, you ask if whole list is found in another list. Check would be true if problem.split() would be equal to something like [["battery","charge","charged","low"], 'some', 'other', 1, 'values'] (obviously it'll never be).To do check you want, you may use any builtin function.
You are currently looking for a list within a list. This only looks for literal objects. [1, 2] would be in [3, [1, 2], 9], but not in [1, 2, 3]. The actual concept you are looking for is a set intersection:You can then do if problems & user_input: to execute a code block when there is some common ground between the available problems and the user's input.
I believe the problem is that you are looking for an array in an array... but I think you want to look for a string in the array?This seemed to work for me:
Your syntax is incorrect. Try this -
So you have 2 arrays here, the one with the list of words and the one with the words in the user's problem. You're asking python if your first array is in the second array, which it isn't. Instead, you should iterate through the words and check each to see if it's in the problem.And use that as a template for each problem
Like TigerhawkT3 already wrote, you can work with sets. In my opinion this is a very smart way to solve your issue.Here some example operations:https://docs.python.org/3/tutorial/datastructures.html#sets


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
