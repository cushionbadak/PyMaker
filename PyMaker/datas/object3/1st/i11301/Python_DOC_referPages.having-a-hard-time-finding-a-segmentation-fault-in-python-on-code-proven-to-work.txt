Natural Text
Edit: literally as soon as I posted it I found a way for it to work on my this PC. I had to do all my calculations individually like this:keeping the question up in case someone else has the same issue of functioning on other PC's but throwing errors.I've run into an issue. I've been working on a small personal project and so far my code is running on other computers; however not on this one. Basically I'm trying my hand a small (very basic) platormer game and I can get my character to move; however, once I add in vectors for more realistic movement I get these this error:Here's my code:PROBLEM FILE(?)Here's the SettingsAnd here's the main file:Any help is greatly appreciated, I've just never encountered this spoecific error before and a lot of online digging hasn't really found an answer that works for my situation. If it matters I'm running on a computer with 16GB of Ram and 8 cores@4.5Ghz. Windows 10 x64
My guess would be that there's a reference to a Vector2 object that isn't being counted. The key is in how the += augmented assignment behaves; it isn't guaranteed to operate in-place (it only does if the object implements __iadd__), meaning the sum vectors for pos and vel might be new ones. If the base type pygame.sprite.Sprite can do multithreaded access to them, for instance, the replacement might be done uncleanly. This would most likely be a bug in pygame, but it's the sort of thing that would explain the behaviour you described. This is the sort of hazard that can hide behind the simple statement "Sprites are not thread safe. So lock them yourself if using threads." and I for one would have appreciated if that also had a hint of how to lock them. 


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#augmented-assignment-statements
https://docs.python.org/3/reference/datamodel.html#object.__iadd__
