Natural Text
Why is my code so sluggish (inefficient)? I need to make two methods to record the time it takes to process a list of a given size. I have a search_fast and search_slow method. Even though there is a difference between those two search times. Search_fast is still pretty slow. I'd like to optimise the processing time so instead of getting 8.99038815498 with search_fast and 65.0739619732 with search_slow. It would only take a fraction of a second. What can I do? I'd be eternally grateful for some tips as coding is still pretty new to me. :)
The fastest way is using in operator, which tests membership of a value in a sequence.Reference: https://docs.python.org/3/reference/expressions.html#membership-test-operationsUpdate: also, if you frequently need to test the membership, consider using sets instead of lists.Some pros and cons can be found here: https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
Adding the following code to above:produces the following on my system:Hope this helps. The basic idea is to tap into underlying C code and not make your own Python code.
I managed to find out what made the code sluggish. It was a simple mistake of adding to the list byextend instead of append. Now search_slowclocks in at 3.91826605797 instead of 65.0739619732. But I have no idea why it changes the performance so much.


Answer URL
https://docs.python.org/3/reference/expressions.html#membership-test-operations
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
