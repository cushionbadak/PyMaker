Natural Text
I have a dictionary which I am populating with values. The values are served to the dictionary through a for-loop.This gives me the following output:While all key-value combinations are unique I would like to avoid any scenarios whereby the dictionary contains a key-value combination that is the same as the value-key combination. i.e In the dictionary above we have the following two key-value combinations:'word3': 'word2''word2': 'word3'I would therefore like to check whether a value-key combination and key-value combination is already in the dictionary before committing it to the dict. I came up with the following code, but PyCharm is giving me a KeyError:My desired output is one for the two scenarios:or:Here's the KeyError:I believe I understand why the error occurs. By including my check in the conditional if statement I am requesting the key-value for a dictionary key that doesn't exist yet.But how would anyone check a key-value then?I considered working with tuples instead but will require the dictionary's fast loopup in a different operation.
Here is one way to do it. I basically zip them, filter the entries we don't need and then convert the filtered list into dict.Output:
RESPONSE INACCURATEOk. With the help of @spectras and @wwii (thank you for pointing me in the right direction) I was able to come up with a solution. The issue was in the way I set up my logical check in combination with not using the some_dict.get(item) method. Here the solution:This generates the output as desired:Thank you everyone for your useful tips. This really helped me resolve this.M
Use zip on both list and check if a key-value pair has an alternate value-key pair in the dictionary:Existing keys get updated in your original code, and you're skipping the last items in both lists. I have replicated those here.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.get
