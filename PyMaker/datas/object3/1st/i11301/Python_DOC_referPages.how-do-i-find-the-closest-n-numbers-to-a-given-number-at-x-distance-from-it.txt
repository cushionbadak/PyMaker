Natural Text
For e.g. I have a list of number likeAnd I need 2 numbers at 3 distance from a given number let's say 5,so the output list should look like thisHere by distance I mean the distance on number-line and not in list index. So 3 numbers, 2 distance from 5 would giveWhat I tired doing was to use nsmallest from heapq like thisBut the problem here is that I don't know specify the distance. It will just outputs 3 closest numbers to 5.
You can use a list comprehension for that. See this post for more on list comprehensions. The logic is quite simple, we just see if the absolute value of the difference between each number and the given number, if so we return the value. Similarly Let's complicate a bit and try to use filter and closures. The code is: Just to show that it is an alternative. 
numpy approach:Check:Timings (in ms 1/1000 seconds ) for differently sized arrays/lists:plot:bar plot for arrays with size <= 1000 (df[df.index<=1000].plot.bar()):Code:Conclusion: numpy approach is faster compared to list comprehension approach for larger lists, for very small lists (less than 50 elements) it might be other way around


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#filter
