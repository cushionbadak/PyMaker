Natural Text
I'm new to Python so please be gentle.I seriously don't know what is wrong with my code.Here it is:Since epsilon(0) = 0, I'd expect (analytically) to get r = (-16/4)^(1/4) = (-1)^(1/4)*sqrt(2) = exp(i pi /4)*sqrt(2) = 1 + 1 iBut instead I get:I've tried to find the error. If I print epsilon(0) I get 0 as expected, and If i set epsilon(0) manually like:I get 1 + 1 j. And If I remove the to the power of 1/4, it works and I get -4So why doI get this error?
I noticed that the value returned by epsilon() is of type <class 'numpy.float64'>. The problem occurs when we include this value in Python's built in pow() function. For example, try pow(np.float64(-4.0), 1/4); it breaks too. Perhaps it's due to this:With mixed operand types, the coercion rules for binary arithmetic operators apply.  Built-in Functions: pow()I managed to fix the issue by casting the result of epsilon() to float.r = pow( float((epsilon(t) - 16) / 4), 1/4). 
Problem is probably caused by the numpy float thing. (as aswered by Schomes). Fix by convert to 'normal' float.
The reason is numpy float64 are like c float, and overload all operations (including) power to work as such. This is the type returned by exp and subsequently in all operations. Note you're trying to compute:which is an imaginary number. Python can handle that, and output the result, but numpy float64s are "real", so the above is an invalid expression. For this reason all the answers here suggesting to convert to float work:
Or


Answer URL
https://docs.python.org/3/library/functions.html#pow
