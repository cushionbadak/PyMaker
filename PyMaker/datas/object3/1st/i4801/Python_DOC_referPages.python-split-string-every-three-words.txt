Natural Text
I've been searching around for a while now, but I can't seem to find the answer to this small problem.I have this code that is supposed to split the string after every three words:Currently the output is as such:But I am actually expecting this output:And if I print(splitTextToTriplet("Do you know how to")), it should also output:how can I change the regex so it produces the expected output?
I believe re.split might not be the best approach for this since look-behind cannot take variable-length patterns.Instead, you could use str.split and then join back words together.Although be advised that with this solution, if some of your white spaces are linebreaks, that information will be lost in the process.
I used re.findall for the output you expected. To get more generic split function, I replaced splitTextToTriplet on splitTextonWords with numberOfWords as a param:output:['Do you know', 'how to sing']  ['Do you know', 'how to']  ['Do you know', 'how to sing', 'how to dance', 'how to']  ['A sentence this', 'code will fail', 'at']  ['A sentence this', 'code will fail', 'at']  ['A sentence this', 'code will fail', 'at s']  ['A sentence this code', 'will fail at s']  ['A sentence', 'this code', 'will fail', 'at s']  ['A', 'sentence', 'this', 'code', 'will', 'fail', 'at', 's']  None
Using the grouper itertools recipe:See also the more_itertools third-party library that implements this recipe for you.Code


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
