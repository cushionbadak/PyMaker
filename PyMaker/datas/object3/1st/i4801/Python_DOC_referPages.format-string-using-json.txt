Natural Text
Here is a file called subtitles.ass. If you have a look at it, you will find I define {font_size} and {sentence[0}. Obviously I want to format them with my input data.First I read data from subtitles.ass.And now input data comes.Finally I want to format subtitles with above json data. Simply, I want to replace {font_size} with 47. data is above json.However I got an error.Traceback (most recent call last):    File "iemoji.py", line 17, in       subtitles.format(data.get('font_size'), data.get('sentences'))  KeyError: 'font_size'EDIT for dataI load data like this.
What you need to unpack the dictionary inside format function to get key value pairs.try:This is exactly what format_map is for.working example:
The error here isn't coming from data.get, but from font_size.When you use a named parameter in a format string, you have to provide a keyword value with a matching name. But you're only providing positional values, so there's nothing that matches.You could fix this by doing something clumsy like:But really, this is exactly what format_map is for:For future reference, it's a lot easier to debug things like this if you (temporarily) break up the expression, so you can see exactly which part causes the exception:Then you'll see that it's the third line, not the first, that's raising the KeyError, and it'll be a lot easier to figure out why.Finally, I'm not sure why you're using data.get('font_size') instead of just data['font_size']. If you're doing it to get a default value instead of a KeyError if you left the font size out of the data dict, you almost certainly don't want that default value to be None, do you? Anyway, if there is a good reason for it, even that can be simplified: turn data into a collections.defaultdict(lambda: whatever-default-value-you-want), and then any missing key will have that default value. (Even if you use it with format_map.)


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/library/stdtypes.html#str.format_map
