Natural Text
I have a rather large project, including a class Foo which recently needed to be updated using the @property decorator to create custom getter and setter methods.I also stored several instances of Foo on my hard drive that at some point I might need to reload. My problem is, that I cannot access the attributes decoreted with property on these old objects.Consider the following example:The last line raises:NameError: name '_val' is not definedWhat options do I have to still access the attributes of my archived instances?Edit: Changed self.val to self._val in the constructor of the second Foo-definition.
A possibility is to use a custom Unpickler, although you would need to keep the old class around (with a different name, hidden if you want) and define the logic to convert an object of the old class to the new one. Here's a basic example:
The pickle documentation says:When a class instance is unpickled, its __init__() method is usually not invoked.Which is why the _val attribute wasn't defined You can workaround that by defining a __new__ method in the replacement Foo class and setting the instance attribute there:
This may be a total hack -- I'm not certain. However, I was able to reconstruct an object pickled from your first "Foo" class using the following code;


Answer URL
https://docs.python.org/3/library/pickle.html#pickle.Unpickler
https://docs.python.org/3/library/pickle.html#pickling-class-instances
