Natural Text
I need to generate 2-tuples from a list in Python, such that, in a tuple (a,b), a!=b and if a tuple (a,b) has already been generated, skip generating (b,a).Here is something I have written. It serves the purpose. However, when it is run in a pandas dataframe, it takes some good time to run.I would like to know if there is a faster way to attack the problem.Thanks in advance!!Update:I tried the solution by @ThalishSajeed. I enclosed it in a function and the function works perfect on a list of words as input. However, when I try applying it on a pandas Series containing list of words. This was my function,and the result I got on passing a single list (tuplize_faster(['Zero', 'rating', 'worst', 'service'])) is,Applying the same function on a pandas Series containing list of words gives this result.Is there something wrong with the way I have used apply?
Have you tried itertools? link to documentationretObject = itertools.combinations(word_list, 2)since you want 2 tuplesedits - To return the list s = [tuple(i) for i in retObject]Edited to show that the approach works for a Pandas Series. a = pd.Series(['Zero', 'rating', 'worst', 'service'])tuplize_faster(a)output[('Zero', 'rating'), ('Zero', 'worst'), ('Zero', 'service'), ('rating', 'worst'), ('rating', 'service'), ('worst', 'service')]


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
