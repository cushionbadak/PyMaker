Natural Text
Im trying to make a graph edge list from a dictionary in python, with the following code:This gets what I want, for example if I get this test dictionary:I get the following output:Problem is when I run a big dictionary it runs until the kernel crashes, any ideas I could make this code more efficient?
Itertools might help you here, as each edge is just a 2 item combination of the vertexes in each sublist:
gives the output
In addition to the suggestions offering itertools, it's worth noting that you have sets of disjoint clicks. That means you don't need to do all of these computations at once and certainly don't need to store all the results in memory at the same time. It also means that you could parallelize.
You can use itertools.combinations()(see how to get all combinations of a list's elements):Since you have imported itertools, use itertools.chain() it is possible to do the following one liner:Note 1. Performances issues:- with list.extend() : 7.23 µs per loop- with itertools.chain() : 8.15 µs per loop2. Huge, very huge, very very very huge dictionnary:As the operation you do on each key is independant one to another you can possibly parallelize your task (multiprocessing documentation if you require it)


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
https://docs.python.org/3/library/multiprocessing.html
