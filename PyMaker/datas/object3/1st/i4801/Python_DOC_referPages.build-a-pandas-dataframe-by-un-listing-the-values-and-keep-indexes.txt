Natural Text
From a json like this:I would like to have a df like this (indexes from 0 to 99 and then the values as a column):To replicate it: which gives:But then the only way I managed to do it is by creating a df from each item, which is really slow:This is 633ms for 4800 rows. So I wonder if this can be improved to work for millions of rows. Somehow to not append pd.DataFrame(item), but the item and keep the indexes...
itertools.chain provides one solution, which seems to yield a ~3.5x improvement:If each set of data has the same number of elements, you can further optimize index calculation:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
