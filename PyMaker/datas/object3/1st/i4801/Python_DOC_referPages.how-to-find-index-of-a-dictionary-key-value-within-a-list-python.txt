Natural Text
Lets say I have a list such as:If I were to go about searching for the index of 'Jack', how would I find his index if 'Jack' is a key value of a dictionary within a list?

Keeping it simple -  If idx has a value at the end you have the index of the element that had 'jack' as a key
Whatever you do, please don't look up the presence of a dictionary key from the list returned by d.keys(). Much more efficient is to query the dictionary directly. (Disclaimer: apparantly this only applies to Python 2, as the view returned in Python 3 also enables efficient membership tests...)Then you can just fetch the index of the first item that has the key, e.g., like this:For reference:https://docs.python.org/3/library/functions.html#nexthttps://docs.python.org/3/library/functions.html#enumeratehttps://docs.python.org/3/library/stdtypes.html#mapping-types-dict
I am unpacking the variable l into positional arguments, which I then pass to itertools.chain(). This results in a flat list with the values ['Jack', 'Barry']. The built-in function enumerate() returns a tuple containing a count (starts from 0) and the values obtained from iterating over iterable. The next and last thing I do is filtering with small anonymous function all the tuples where the second element (x[1]) equals to the desired str.
Maybe something like this:

Try this:Alternatively, if your dictionaries can have multiple keys and you're looking for all indices of those which contain 'Jack' as a key you could do:


Answer URL
https://docs.python.org/3/library/functions.html#next
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
