Natural Text
I'm working on unittesting some python3 code that calls sendmail on an SMTP class via a context manager and attempts to catch exceptions to log them.  I can successfully mock the SMTP class and do some checking on it in other tests (e.g. verifying that send_message was actually called), but I can't seem to get the method call to send_message on the class to raise an exception to log the error.Code to be tested (from siteidentity_proxy_monitoring.py):Unittest method:Output from the test result:I feel like I'm missing something related to the calls to __enter__ and __exit__, but I can't quite seem to tease out why my patching doesn't seem to trigger the side effect where I expect it to.  Unfortunately, most of the examples and documentation I've come across don't quite go that in depth with mocking method calls within contexts (as far as I've understood them, anyway).
Got stuck on similar issue just now, this is how get around it:Put a import pdb;pdb.set_trace() before line email.send_message(message)Run your test.When you get dropped into the PDB session, type email.send_message and you'll see something like <Mock name='mock_smtp().__enter__().send_message' id='...'>.In your test case, replace all ()s with return_value. In your case: mock_smtp.return_value.enter.return_value.send_message.side_effect = SMTPException.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#mocking-magic-methods
