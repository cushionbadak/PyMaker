Natural Text
I want to understand how global variables are implemented in web2py web framework.I assume that a reader knows the structure of web2py app.I don't understand how come variable db is available in every controller .py file without any import statement.I found that it db is created in models/db.py and it is bonded to current.db.How db is made globally available without any import.Thank you!
This is right there in the docs:Models, controllers, and views are executed in an environment where the following objects are already imported for us:(That's the reference docs; the tutorial says effectively the same thing, but without the complete list of everything that's imported.)If you want to know how that works, the basic concept simple: web2py doesn't just run your web app as a standalone script; it loads and executes your code the way it wants to. If you want full details, see the source. (From compileapp.py, it looks like they're part-way through publicly exposing the interfaces for loading applications and their components with an environment, but haven't gotten there yet.)If you want to know different ways you could do something similar, there are two basic ways. The hacky solution is to skip import entirely, and use exec to run the code within a custom globals. (Slightly better, you can compile the file (even using the standard .pyc caching mechanism if you want), and then exec the resulting code object.) This makes sense if you want to run the module directly in the top level namespace, or if you need more isolation than modules can give you and plan to build it yourself. But usually it's not what you want.The other solution is to intercept part of the import process. For simple cases, it's just a matter of calling __import__ with a custom globals.But a framework that's doing this often needs to customize a lot more. Python 3.3+ makes this relatively easily; if you want to be compatible with a wide range of Python versions, you end up rewriting large chunks of the import process yourself, which I'm guessing is what web2py does.
In web2py, model files are executed in an environment that has been populated with many of the framework API objects. The controller is then executed in that same environment after the model files have run, so any objects created in the models will be available in the controller (and the view).For more details, check out the Workflow section in the book and the end of the Dispatching section.Note, items such as db that are defined in a model file are not added to the current thread local object by web2py, though you can explicitly add them yourself in the app code.


Answer URL
