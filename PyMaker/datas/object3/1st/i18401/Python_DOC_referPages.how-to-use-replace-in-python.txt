Natural Text
I want to replace a word in a string with another word. Ex. replaceWord("cool","awesome","Stack overflow is cool.") Output would be: "Stack overflow is awesome" I don't understand why my code isn't working.
A string operation is never in-place - instead replace() will create a new string because strings are immutable.But wait...why do you want your own string replaceWord() method? Strings have their own build-in replace() method!
Why are you not just using the return value of aStr.replace(oldWord,newWord)? Why is it necessary to nest this function inside another function? As for your question it is because replace is not an in place operation. You need to do something like:Anyways I still find it strange that you wrapped it in a function...
Try This
As per http://docs.python.org/2/library/string.htmlstring.replace(s, old, new[, maxreplace]) Return a copy of string s  with all occurrences of substring old replaced by new. If the optional  argument maxreplace is given, the first maxreplace occurrences are  replaced.Your code should thus be modified to:This difference being that yours did not catch the returned (new) string from the replace function.Ideally thought you should just use aStr.replace(oldWord,newWord) without wrapping it in a function. There would be less overhead that way, and it makes the code clearer.If you want it to only replace the first word you can add the third, optional, parameter which is the number of replacements to do.


Answer URL
