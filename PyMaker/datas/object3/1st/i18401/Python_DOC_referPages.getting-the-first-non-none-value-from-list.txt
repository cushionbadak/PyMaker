Natural Text
Given a list, is there a way to get the first non-None value? And, if so, what would be the pythonic way to do so?For example, I have:a = objA.addreses.country.code b = objB.country.codec = None d = 'CA'In this case, if a is None, then I would like to get b. If a and b are both None, the I would like to get d.Currently I am doing something along the lines of (((a or b) or c) or d), is there another way?
You can use next():If the list contains only Nones, it will throw StopIteration exception. If you want to have a default value in this case, do this:
first_true is an itertools recipe found in the Python 3 docs:  One may choose to implement the latter recipe or import more_itertools, a library that ships with itertools recipes and more:Use:Why use the predicate?"First non-None" item is not the same as "first True" item, e.g. [None, None, 0] where 0 is the first non-None, but it is not the first True item.  The predicate allows first_true to be useable, ensuring any first seen, non-None, falsey item in the iterable is still returned (e.g. 0, False) instead of the default.
Adapt from the following (you could one-liner it if you wanted):This takes the first non None value, or returns None instead.
I think this is the simplest way when dealing with a small set of values (will work in a list comprehension as well):Will always return the first non "None' value


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
