Natural Text
I want to replace a string in a file created by my program, But I cant use .replace because It's not in 3.3, How do I replace a line from a file using two inputs(the previous string, replacement), Here Is the code so far:How do I do this, So that It replaces the word "beagles" with "pugs"?I'm learning python so any help would be appreciatedEdit :ive changed the replace code to thisbut in the file it outputs:how do i change it so it outputs only "pugs" not "pugsles"
The first idea which came to my mind is to loop over lines and check if the given line contains the word which you want to replace. Then just use string method - replace. Of course, in the end the result should be put/written to the file.
Perhaps what you were thinking of was the sed command in Unix shell, which will let you replace a specific text in a file with a replacement text from the shell itself.As others have said, replacing text in Python has always been str.replace().Hope this helps!
The fastest way to do this, without loading the whole file into memory, is using the file seek, tell and flush. Set your starting pointer to position 0, and increment through the file by len(replacement_word). If the few-byte snippet matches then you set a marker where you are within the file.After you've scanned the file, you rebuild the file using your markers and joining the segments with your replacement string between them.


Answer URL
