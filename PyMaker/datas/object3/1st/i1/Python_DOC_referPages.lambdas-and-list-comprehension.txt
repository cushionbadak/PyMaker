Natural Text
I'm trying to understand what's different about the following dictionaries, as they produce different results when passed as arguments into a third-party library's function.From my understanding, all three dictionaries should be identical but inspecting the variables reveals different function types for each:As far as my use-case, only the d3 implementation works (meaning I can't take a more dynamic approach without doing something horrifying with exec). Can someone help me understand the difference between these three types of lambdas?EditAfter everyone's help understanding scoping better, I was able to get my code to run by including the variable as a keyword arg in the function:As suggested by the FAQ page: https://docs.python.org/3/faq/programming.html#why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result
Distinct lambdas don't compare equal to each other, not even if they do the same thing. Therefore, objects containing those lambdas will also compare unequal.As to why the first two versions don't work, it's because when i is captured it's the variable i, not its current value. The lambdas aren't tied to a frozen value of i during the current iteration but rather the variable itself, which changes in successive loop iterations.See also:What do (lambda) function closures capture?Python Lambda in a loop


Answer URL
https://docs.python.org/3/faq/programming.html#why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result
https://docs.python.org/3/faq/programming.html#why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result
