Natural Text
I was practicing Fibonacci sequence generating in python and following example of memoization from How do I print a fibonacci sequence to the nth number in Python?.Then I encountered one interesting difference using return one-liner and not. For example, the example code is given below. In the first example, we do not use return one-liner and it runs very fast, however, in the second example we use return one-liner and it runs very slow.Aren't they supposed to be the same?Without one-linerWith one-liner returnQuestionAren't they supposed to be the same?Why the return one-liner is much much slower than another one?Can we write one-liner with different wordings so that it is equally fast? 
This Is not the same as The one-liner does not modify the contents of memo. If you want to compare apples to apples then try:For optimizing your one liner, and saving the dictionary value, you should change the one-liner to: Beyond learning how memoize works, you should look into using functools lru_cache's memoize, which is "written in C and will be much faster than anything you can reproduce in Python."Hat tip to meowgoesthedog, chepner, & FHTMitchell.


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
https://docs.python.org/3/library/functools.html#functools.lru_cache
