Natural Text
For some time, Python has had Abstract Base Classes (proposed orignally in PEP 3119) that, especially for container types, make it easier to write code that generalizes across custom types. For example,One of the ‘gotchas’ that’s tripped me up a few times is that str, bytes, and bytearray are all considered Sequences, in addition to more obviously list-like objects:This certainly makes sense: usually these three types behave just like lists or tuples of characters (or bytes). However, it seems like a pretty common use case to ask, is this object x both list-like and not string-like? The fix is straightforward:But this seems like it would be a common enough pattern that I wonder if I'm missing something in the standard library.Is there any abc in Python's standard library such that islistlike = lambda x: isinstance(x, abc) will behave like the last example above?Is there any design discussion around Sequence vs string-like containers somewhere? (I haven't found anything related to this in the standard library documentation or PEP 3119.)
No, there is nothing in the standard library to easily distinguish between str and bytes-like sequences vs other sequence types.  If this is common in your code-base then you may want to roll your own.


Answer URL
https://docs.python.org/3/library/abc.html
