Natural Text
I am using warnings in object code to alert users that something has happened but not halt the code.  Below is a simple mockup based on the more complex scenarios I am encountering in my real code:In my real code, when I instantiate the class which executes __init__(self, numberArg), the warning is output at the end after all the processing that follows the warning is done.  Why does this happen?  More importantly, is there a way to ensure the warning is output first and then the rest of my code runs and delivers its output?  As with the example provided here, the desired effect is to alert the user what is going to happen before it happens, not afterwards, and deliver the output like a warning with warning format.Note:  This problem was encountered using Python 2.7 on iPython/Jupyter on a Windows 7 environment
@direprobs provided the simplest answer to this question in the comments.  Add this line of code after the call to warn().  sys.stderr.flush()Note:  Though it comes from the sys library, you do not need an import statement because warnings writes to stderr and already imports the library.This code can be copied-and-pasted into Python 2.7 (Jupyter Notebooks) to quickly run it and see the effects:Experiment One (for comparison to code that follows it):Experiment Two:Experiment Three:Look for this code on github later.  Posted it here to help others investigating how to use warnings.


Answer URL
