Natural Text
Given a string:and a word:I want to modify s in the following way:!+abc+!, !+Abc+!, !+aBc+!, abc-def, abcaIn other words, I want to replace any occurrence of abc no matter of lowercase or uppercase letters in it, by itself preceded by !+ and followed by +!.I already know that my question is pretty similar to this question:Match string in python regardless of upper and lower case differencesThough, it remains slightly different.At the moment my solution is pretty dirty and does not work properly:
It's pretty straight forward even without a regex.edit: using a list comprehension instead of a generator comprehension is faster, soshould be preferred. Read this question and the answer by Raymond Hettinger in particular for the reason.
Use a regular expression:The patter (?: |^)(abc), will match every abc that proceeds by a space or the start of the string (^) and followed by a comma and replaces it with the first captured group surrounded with your expected characters. Note that :? in the first group makes it a non-captured group so the \1 will refer to abc. Also we are using re.I flag which is the ignore case flag.If you also want to keep the spaces just use a captured-group for the first group:Also note that if you want to pass multiple regex as the replacing pattern you can compile the first regex using re.compile() and pass the other patterns within a loop:As a more flexible way to deal with re.sub you can also pass a function as the replacer, and so more operations on your captured strings. For example if you want to lower case the matched strings:


Answer URL
https://docs.python.org/3/library/re.html#re.I
