Natural Text
I've got not words to thank you all of you for such great advice. Now everything started to make sense. I apologize for for my bad variable naming. It was just because I wanted to quickly learn  and  I wont carry out such practices when I write the final script with my own enhancements which will be posted here. I want to go an another step further by passing the values we've isolated (ip,port,and name) to a template. I tried but couldn't get it right even though I feel close. The text I want to construct looks like this. (I have tried this within the working script provided by rahul.(I've edited my original code abiding stackexchange's regulations. Please help out just this once as well. Many thanks in advance. orignial post:--Beginner here. I wrote the below code and it doesn't get me anywhere. The way to run this script should be "script.py :". i.e: script.py 192.168.1.10:80:string 172.25.16.2:100:string As you can see if one argument is passed I have no problems. But when there are more arguments I cant determine how to workout the regexes and get this done via a loop. So to recap, this is how i want the output to look like to proceed further.If there are better other ways to achieve this please feel free to suggest. 
Please name your variable with respect to context. You will need to use nargs=* for accepting multiple arguments. I have added the updated code below which prints as you wanted.Updated Code for new requirement
I would say what you are doing could be done more simply. If you want to split the input whenever a colon appears you could use:
Bad variable names aside, if you want to use argparse (which I think is a good habit, even if it is somewhat more complex initially) you should use the nargs='+' option:
If you look at the documentation for argparse, you'll notice that there's an nargs argument you can pass to add_argument, which allows you to group more than one input.For example:Would make it so that there is a minimum of one argument, but all arguments will be gathered into a list.Then you can go through each of your inputs like this:


Answer URL
https://docs.python.org/3/library/argparse.html#nargs
