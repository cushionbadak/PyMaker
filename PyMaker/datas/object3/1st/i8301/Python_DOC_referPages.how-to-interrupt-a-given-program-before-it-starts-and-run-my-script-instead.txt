Natural Text
I'm going to work with Python 3, mainly interested in Windows.Example of what I want to happen:A)User starts my script.User decides to blacklist the game Dota 2.User tries to open Dota 2.Because Dota 2 is on the blacklist, my script runs instead of Dota 2.After my script is done, Dota 2 either runs or doesn't run, depending on what my script chooses. This will ultimately be controlled by User.User closes my script.User tries to open Dota 2.Dota 2 opens right away without interruptions.B)Same as above, but for web sites.The last three lines is to signify that there needs to be a way of turning it on and off. My base assumption is that once I know how to do the first part, the second part will be easy. I still put it in there for clarification.I haven't really found anything online on where to even start with this. My guess for A) is that it will have to do something with going into the folders where the run file is an overriding it somehow.
You're talking about overriding OS behavior, so you'll need to hook into OS features (which Python can, and may already, have bindings for). For Windows specifically, you can use some features like WMI to hook process launches, but the easiest approach is probably to use Image File Execution Options (IFEO) to hijack the relevant processes at launch. This is a registry key, so you'd want the winreg module for Python 3.I've never tried setting a Python script as the target of an IFEO Debugger value, but it can probably be made to work. See this StackOverflow question for the basics of how IFEO works and what "debuggers" using it are expected to do. In your case, you'd probably have the script check the name of the process that the user tried to run, see if it's currently on the blocklist, and just exit if so; otherwise it would launch the process. If you want it to follow opening and closing a long-running script, you could have that script create a temporary lock file (which will vanish when the last handle to it closes) and have your launched-when-user-invokes-dota2.exe script check for that file.I'd I recommend asking a separate question (here or on Superuser, depending on whether it's a coding or OS-admin question) if you have problems getting IFEO to do what you want. Do note that it's in HKEY_LOCAL_MACHINE; you'll need to be running as Administrator to make changes there, though only the "control" script would require that (the "debugger" scripts could just run with normal permissions).


Answer URL
https://docs.python.org/3/library/winreg.html
