Natural Text
THIS is an updated version of the question providing a handy function pd_read_printed(str_printed_df) designed to create a pandas DataFrame out of the string written previously using print(some_pandas_DataFrame) :I put it together for own use after I have got here the answers to the following question: I see in Internet often the content of a pandas DataFrame in its printed version like for example:: The question is: How to obtain a variable holding the DataFrame from a string  variable in a style like: ?NOW let's use the provided function to create a DataFrame from df1_as_string: and check if it worked as expected: gives: 
Use read_clipboard.Or read_csv with separator one or more whitespaces - sep='\s+' or delim_whitespace=True:
Two methodsoption 1pd.read_clipboard This is my goto method for simply formatted dataframes.  I copy the dataframe text and follow it up with df = pd.read_clipboard()option 2StringIO + pd.read_csv For dataframes that have more complicated structure, I may need some of the options in read_csv so I might set it up this way.  Keep in mind that for the dataframe you provided, I'd almost never do it this way because it's slower for me to get at a dataframe.In either case, I end up with:


Answer URL
https://docs.python.org/3/library/io.html#io.StringIO
