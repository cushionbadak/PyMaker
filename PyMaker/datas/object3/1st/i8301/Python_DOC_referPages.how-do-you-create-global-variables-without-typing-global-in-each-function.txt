Natural Text
I'm trying to create a global variable, but from what I know you need to type "global" in every function.This example is in Python 2.7:I'm trying to re-create the code above without the use of global for every variable in every function I am going to create. Is there a better way to do this?To better explain this situation, I have a dictionary and I intend to use many different functions on it. The problem is, I don't really want to be using function(dict) or do_this(dict) each time, I prefer function() or do_this(). My thinking is that if dict was global, I could solve this problem.P.SThank you for all the answers! Not exactly what I was looking for, but I appreciate the answers.
If you just want to read the variable (not modify it), you don't need the global line. See the offical FAQ. However, if you really want to circumvent this rule, you can make a global dictionary (or list or other mutable data structure) and put your global variables in there. Then you can manipulate them through the global dictionary:Why does this work? (I'm going to explain the best I know here, but please feel free to edit if you know better). Replace "modify" with "reassign" in your head. When you change the value of a (a += 1 for example), you're actually reassigning a so Python won't let you. When you're changing a value in globs, you're not actually reassigning anything to the name globs, so it lets you. A link that may help you:http://www.pythontutor.com/visualize.html will step through what the interpreter is doing.The thing that you can't do in a function without declaring global is to change the arrow from the global namespace to point to something else.



Answer URL
https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python
