Natural Text
Ok I have a source directory which has multiple folders. Each folder has a file named tvshow.nfo from which I want to extract data. I wrote the following -I used glob to geth the exact paths of all nfos, then used splitlines to separate each path , iterated through file at each of those paths, then used regex to extract info. And tried to append this info to the empty List. I get the following output -I want the output exported to a new file as:Can anyone help me? Also is there a better way to do this than the one I attempted?
Based on what you showed, you may try this.
Instead of making one list with all of the different attributes for each show, you should structure your data in a more easily readable way. One possibility is a list of lists, where the top-level list has one entry for each show and the inner lists contain the title, year, status, and studio attributes for one show. You can modify your existing code quite easily to accomplish this:
From your example it looks like all of the tags for each show are on one line. If all of the tags for a show are on one line I think something like this might help:This uses with to open the file without needing to use a try-catch and close it yourself. Information about with can be found here: file methodsstr(d[0]) is needed to change the group list item from re.findall into a string. The if d is there in case a tag is missing on that line (and it's possible I'm misunderstanding how the tags are placed within the file, sorry about that if I am) It's also possible to build L with a list comprehension: L = [(find_tag("title", line), find_tag("year", line), find_tag("status", line), find_tag("studio", line)) for line in f] instead of appending to the list. The join method could then be used when printing the list: print(' '.join(str(d[0]) for d in data if d)). whether or not you want to do that depends on how much you like list comprehensions.I also created a find_tag function, but that's mostly from me trying to figure out what was going on.Without knowing what the file looks like it's hard to tell if you should be looking for each one on a separate line. It's also hard to tell if the order matters or if you need to do any error handling. 


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects
