Natural Text
I'm trying to learn decorators in Python and every time I think I get it I come across an issue such as this. I can't figure out why the print statement from my_func won't display and instead I get 'None' returned. If I include func in my return statement in my wrapper return (func, wrapper) I get an error saying tuple object not callable. What is wrong with this example?
You're never calling the wrapped func in your wrapper. Add a call, for example:would now produce (since func() implicitly returns None):If I include func in my return statement in my wrapper return func, wrapper I get an error saying tuple object not callable. The error must've come from you doing something like:Remember that decorating is (roughly) equivalent to just doing:Your my_dec() decorator now returned a tuple (func, wrapper) instead of a wrapper function, so when you try to call my_func(), you're actually trying to "call" the tuple that has been assigned to my_func.As a good measure you should learn how to use functools.wraps, which is a convenience function for invoking update_wrapper(), which updates the wrapper function to look like func:Without it you'd get:and with wraps:It copies over other useful attributes as well, such as __doc__.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#defining-functions
https://docs.python.org/3/reference/compound_stmts.html#function-definitions
https://docs.python.org/3/library/functools.html#functools.wraps
