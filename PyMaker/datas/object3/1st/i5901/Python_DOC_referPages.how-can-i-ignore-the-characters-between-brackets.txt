Natural Text
Example:The hardcoded input in the system:The one i get from an api call might differ by the day of the week or the name example:I want to compare these 2 lines and give an error if anything but the terms in brackets doesn't match.The way I started is by using assert which is the exact function I need then tested with ignoring a sentence if it starts with { by using .startswith() but I haven't been successful working my way in specifics between the brackets that I don't want them checked.
Regular expressions are good for matching text.Convert your template into a regular expression, using a regular expression to match the {} tags:To make sure the matching halts at the end of the pattern, put a $:Then match your string against the pattern:If you try matching a non-matching string you get nothing:If the start of the string matches but the end doesn't, the $ makes sure it doesn't match. The $ says "end here":edit: also you might want to escape your input in case anyone's playing silly beggars.
You can make copies that do not include anything that has brackets around it and compare those. It is relatively easy with regular expressions. As a function, it could look like this:edit: reworked my answer after seeing I got something wrong. It works now in a way that everything with curly brackets around it is replaced with a universal match. Now you can compare the hardcoded version with any returned from the API and still get either True or False, depending on whether they match or not.


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/library/re.html
https://docs.python.org/3/howto/regex.html
