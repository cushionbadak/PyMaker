Natural Text
I was expecting the shape to be (1,3) when I sum along axis=0 i.e. rows. But the shape remains same in both cases. Why is that?
numpy.sum returns:An array with the same shape as a, with the specified axis removed.With one axis removed in both cases, you are left with a singleton tuple.2 axes - 1 specified axis =  1 axisHowever, passing keepdims as True in both gives different shapes, retaining all the axes in the original array with a corresponding change of length along the specified axis:
Because summing along the axis of a ND array yields a (N-1)D array. This makes sense if you consider that If you want to turn your arr.sum(1) into a (1, 3) or (3, 1) 2D array, then useor
According to the documentation this is what you'll get:Returns:  sum_along_axis : ndarrayAn array with the same shape as a, with the specified axis removed. If a is a 0-d array, or if axis is None, a scalar is returned. If an output array is specified, a reference to out is returned.The shape of arr is indeed (3,3) and is two-dimensional. If you remove one axis you'll be left with a shape of (3,) - which is one-dimensional. An array with shape (1,3) still has two axes.
numpy.arrays have a logic which is not the same than  Matlab or even mathematics. From here :Handling of vectors (one-dimensional arrays) For array, the vector  shapes 1xN, Nx1, and N are all different things. Operations like  A[:,1] return a one-dimensional array of shape N, not a  two-dimensional array of shape Nx1. Transpose on a one-dimensional  array does nothing.Numpy story began not with linear algebra,  so a one dimension object is always horizontal, cannot be transposed, an so on. It is confusing first time with a different background, but with a lot advantages in other fields. in numpy 2-dim arrays are lines (dim0) of columns(dim1), like for matrix, but selecting a line or a column return always ... a line !  As an example :This convention accepted, nothing is very difficult.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
