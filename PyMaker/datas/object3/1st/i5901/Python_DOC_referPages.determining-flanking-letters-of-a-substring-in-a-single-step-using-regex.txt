Natural Text
I'm trying to cut up a list of letters using cutters where the corresponding position of the letter in cutters cuts at cutspots in such a way that 'K' (cutspots 1), cuts after a letter when read left-to-right, and 'S' (cutspots 0) cuts before a letter.I currently need to use a list comprehension inside another list comprehension to confirm this, but I'd like to lower this to a single list comprehension while returning the location of the word that is found to be successfully cut by this pattern in beginning and end.Is there a more clever way to go about doing this?
CodeSee regex in use hereUsageSee code in use hereUsage 2This version allows you to change the regex with variables.Explanation(?<=K) Positive lookbehind ensuring what precedes is K literally(?=WORDS) Positive lookahead ensuring what follows is WORD and S (WORDS) literallyPython has the method .span() that returns the position of the regex match.


Answer URL
https://docs.python.org/3/library/re.html#re.match.span
