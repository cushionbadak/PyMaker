Natural Text
I know that lists in Python are surrounded by square brackets [].I had an output that looked something like the following:Is this a list of a tuple? How can we access the items?Thanks.
Just give it a try in a terminal, it's all self-explanatory:Anyway, just because the output looks like a list, it doesn't need to be a list. It can be a more complex data structure (an object of some user-defined class) that specifies how to be printed by overloading __str__() or __repr__() (see https://docs.python.org/3/reference/datamodel.html#object.str for details)
This is a list containing a tuple which has the first four elements as  integers and the last element as a list of 2 integers.You can access all the values by indexing correctly. Here are some examples:
Yes, that is a list of a tuple.You would access the first item of the tuple like this:And the last item of the tuple is a list:And to access the elements of that list, you just add another layer of brackets:
This is a list that contains one tuple, that himself contains 5 elements, of which one of them is a table.To access:will return 76will return 98
Yes, it's a list containing one element. And -as you mentioned correctly- this element is a tuple. A tuple is used in this case, because its last element is a list as well (tuples are suitable to store heterogenous data).
While the straight forward Python description is a list with a tuple that contains integers and list, the display is also consistent with a numpy structured array.Define a compound dtype:Make an array with this list input.  Data for a compound dtype (structured array) is in the form of a list of tuples.  Each tuple represents the data of a record or element of the array:Print of this array looks just like the question:This is a 1 element array with 5 fields.  The last field has shape (2,), in effect a 2 element array.
So I wrote a type inspector awhile back that has served me well, because as asked we can only guess as to the type of the data when it's output as a string. For all we know it could be an object of type Person or Frombulate who chooses to str() as given.Which, for a basic python object gives, on your input:But I could write a custom class which str() output looks like that. The only way to know is to ask.If your data is as hpaulj suggested [a numpy array], you might see something like:Given everyone will have a different object they are interested in typing, this is a more general solution. It does, however, only investigate iterable objects.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__str__
