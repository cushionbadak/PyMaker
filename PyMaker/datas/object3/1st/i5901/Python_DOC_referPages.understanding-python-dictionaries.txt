Natural Text
Could someone explain how Python understands this key variable? If key is not defined anywhere else, why does this work?I've seen the key variable changed to other things as well (e.g. dict_key) to make it more readable, however I still don't grasp how Python understands what I'm asking it parse when it gets to the print line. How does it know what key and tweet[key] actually are?
A for loop is a kind of assignment: for x in y: ... works by getting an iterator for y, then repeating the body of the loop for each element returned by the iterator, after assigning it to x.An iterator for a dict simply returns the keys, so given your dict defined bythe for loop is equivalent toYou can also think of the for loop as an optimized version of the following while loop, in which you need to work with the iterator explicitly:
Read the tutorial section on dicts.  (Reading everything before that would be good too.) Then read the first example in the following section, which is similar to your code.  (And I would recommend changing your code to follow the example, except use value instead of v.You can use any name you want for the target name, which repeatedly gets bound to objects yielded by the iterable.  You used key, with is a standard name for a dict key.  I don't think that dict_key is any better.In your code, the name key is bound to a different key, such as id, media, or text, in no particular order, each iteration.  The name binding is like doing an assigment statement, key = 'id', or whatever.  I hope this helps.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
