Natural Text
I have two lists. For example,  I want to add the these numbers together so I get another four numbers. For example the result of 7+3 and 3+15.  My output overall should beI've tried using a for loop to do this however instead of getting 7+3 = 10 I get 7+3 = 73. I have also tried using the int() method but I get an error.   
Use zip, int, and str inside a list comprehension.Result:
First of all, your have lists of strings (not integers). "7" is a string. If you add it to "3", you will get "73". 7 is an integer. The first thing would be to convert your lists into integers. Here's one way of doing it and the one I'd use. This is asking python to call the int function on every element of the list1 in the argument and assign the return value back to list1. Similarly for list2. Once that's done, you have two lists of integers you can add. This can be done in several ways. I'd do it like this. The zip function will "zip" elements of multiple lists into groups. So your lists would get zipped into tuples like (7,3), (3, 15) etc. The loop with the double variable will unpack these tuples each time so that you'll get l1 =7 and l2 =3 in the first iteration and so forth. Sum them and put them back into the result list. There are more succinct ways to do this but this is clear. If you're interested, here's another. 
Your problem is that you are concatenating strings. Using the map function, you will get desired int list [7,3,19,5] from the original string list ["7","3","19","5"].Then you can use zip to sum both arrays.

I think this does what you want.First I convert the list into integers list. I zip them together and take each pair and sum them using sum is better than using c[0]+c[1]
Iterative solution (Python 2.x):Output:
Function that could be used to add any number of lists.['10', '18', '32', '21']


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#int
https://docs.python.org/3/library/functions.html#func-str
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
