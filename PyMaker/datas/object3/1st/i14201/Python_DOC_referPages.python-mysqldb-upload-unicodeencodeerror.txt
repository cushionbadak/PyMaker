Natural Text
I have a problem where I can upload CSV files to MySQL, but then something happens and I get an encoding error. Can some one please review my code and tell what is wrong? I'm new to enconding.The following snippet is how I write the CSV files that will be uploaded, the data is extracted from an MDB file using the MDN tools (mdb-export):The following is where I upload the CSV file, and here is where I get the error:The error I get is the following:I noticed that the given data gets uploaded, but not sure if all rows are uploaded.Thanks!
Try before putting csv into DB s.decode('UTF-8') and after getting it out of the DB s.encode('UTF-8')I did it for SQLite and it worked OK.
Getting this to work should not be too difficult, but you have to understand what you're doing. Don't just try all possible combinations of s.encode("UTF-8").decode("UTF-8") and stuff like that.First, understand the difference between a string and bytes. See https://docs.python.org/3/howto/unicode.html. You can encode a string to bytes: bytes = text.encode("UTF-8"), and you can decode bytes to a string: text = bytes.decode("UTF-8")Second since a CSV file is a text file, you should open the CSV file in text mode. open(fileName, 'w', encoding="utf-8"). There's no need to encode or decode text in your code when writing the file.Third, it is perfectly OK to write Unicode text to a TEXT field. No need for BINARYs or BLOBs. But make sure your database has a collation setting that can deal with it, usually that would be one of the utf-8 collations. Then to put Unicode in your database, use python strings and don't decode them to bytes.
The error message implies that the column definition in MySQL is CHARACTER SET ascii; is that correct?B4 sounds like the latin1 (not utf8) encoding for ´, which could be coming from a Microsoft Word document in a context such as it´s.So, even changing the column to be CHARACTER SET utf8 won't fix the problem.BINARY and BLOB are essentially the same type of field -- any byte is allowed.  VARCHAR and TEXT validate the bytes during INSERT to make sure they match the CHARACTER SET.


Answer URL
https://docs.python.org/3/howto/unicode.html
