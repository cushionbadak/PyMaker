Natural Text
This question is somewhat related to this, this, and this one. Assume I have two generators/iterators of different lengths:I now want to repeat iterating over the shorter one until the longer one is exhausted. The standard zip() function terminates once the shorter of the two is exhausted:The best I can come up with is wrapping the string into a generator like so:which gives me the desired result ofNow I wonder: is there a better and more compact way of doing this? Like an endless string join, or some such?
You could do this with itertools.cycle:Make an iterator returning elements from the iterable and saving a  copy of each. When the iterable is exhausted, return elements from the  saved copy. Repeats indefinitely.which is able to replace your function entirely:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
