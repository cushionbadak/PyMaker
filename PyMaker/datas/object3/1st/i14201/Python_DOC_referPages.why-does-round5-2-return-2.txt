Natural Text
Using python 3.4.3,Shouldn't it return 3?I tried using python 2 and it gave me the correct resultHow can I achieve a correct rounding of floats?
if two multiples are equally close, rounding is done toward the even  choice (so, for example, both round(0.5) and round(-0.5) are 0, and  round(1.5) is 2).Quoting the documentation for the round function.Hope this helps :)On a side note, I would suggest always read the doc when you face this kind of question (haha)
Rounding toward even is correct behavior for Python 3.  According to the Python 3 documentation for round():...if two multiples are equally close, rounding is done toward the even choice (so, for example, both round(0.5) and round(-0.5) are 0, and round(1.5) is 2)Since 2.5 is equally close to 2 and 3, it rounds down to 2.In Python 2, the docs for round() state:...if two multiples are equally close, rounding is done away from 0 (so, for example, round(0.5) is 1.0 and round(-0.5) is -1.0)Since 2.5 is equally close to 2 and 3, it rounds up to 3 (away from zero).If you want to control how numbers round, the best way to do it might be the way I learned to round numbers back in my Applesoft BASIC days:Umm...make that:
From docround(number[, ndigits]) -> number Round a number to a given  precision in decimal digits (default 0 digits).This returns an int  when called with one argument, otherwise the same type as the number.  ndigits may be negative.So


Answer URL
https://docs.python.org/3/library/functions.html#round
https://docs.python.org/3/library/functions.html#round
https://docs.python.org/3/library/functions.html#round
