Natural Text
This works and happily prints 81:But why? Isn't the method given the extra "self" argument and should be utterly confused?For comparison, I also tried it with my own Pow function:The direct function call prints 81 and the method call crashes as expected, as it does get that extra instance argument:Why/how does Pythons own pow work here? The documentation didn't help and I couldn't find the source.
This is because python functions defined in C (builtins) have auto handled self argument. Here is pow function header : static PyObject *math_pow(PyObject *self, PyObject *args)Here you can see that self is always passed by interpreter.
This behavior is connected to method binding. Have a look at what Python tells you about these functions/methods:andFurther the documentation states:Class dictionaries store methods as functions. In a class definition, methods are written using def and lambda, the usual tools for creating functions. [...]To support method calls, functions include the __get__() method for binding methods during attribute access. This means that all functions are non-data descriptors which return bound or unbound methods depending whether they are invoked from an object or a class. [...]But built-in functions don't have a __get__() method. That's why pow wasn't bound and could be used the way you observed, while Pow couldn't.


Answer URL
https://docs.python.org/3/library/functions.html#pow
