Natural Text
I have a sorted list of numbers and I need to get it return the range of index that the number appears. My list is:If I searched 0, I need to return (0, 3). Right now I can only get it to find the spot of one number! I know how to do the binary search, but I am stuck how to make it move up and down from the position to find the other same values! 
I present a solution faster than the raw functions taken from the bisect librarySolutionWith Optimised Binary SearchComparision vs. BisectUsing customised binary search...Copying the raw code from the source from bisect into python...Using default import is by far the fastest as I think it might be optimised behind the scenes ...ExtraWithout ext. libraries but not binary search
Why don't you use python's bisection routines:
Ok, here's another way that works by attempting to reduce the range first before doing bisect_left and bisect_right on half of the already-reduced range. I wrote this code because I think it is slightly more efficient than just calling bisect_left and bisect_right even though it has the same time complexity.I think the time complexity is O(log n) just like the trivial solution, but I believe this is a bit more efficient regardless. I think it's worth noting that the second part where you do bisect_left and bisect_right can be parallelized for large data sets since they are independent operations that do not interact.


Answer URL
https://docs.python.org/3/library/bisect.html
