Natural Text
I want output like this:  
In this situation, don't try to split, use re.findall:if you have to deal with nested curly brackets, the re module doesn't suffice, you need to use the "new" regex module that has the recursion feature.Where (?R) refers to the whole pattern itself.or this one (that is better):
You can split by this.See demo.https://regex101.com/r/jV9oV2/6
Do take a look at the argparse module, since I assume you are writing code to parse the arguments of your program.  Normally these arguments are stored in sys.argv, so you don't even need to care about splitting the command line string.  If you insist on using the command line, you may convert your argument string to an argument list with the str.split method.
Just split on the { and } then split the separate parts by a regular space:


Answer URL
https://docs.python.org/3/library/argparse.html
