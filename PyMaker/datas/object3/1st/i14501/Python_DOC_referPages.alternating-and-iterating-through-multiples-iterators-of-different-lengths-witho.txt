Natural Text
Here is an example:Here is what I have so far:With the same example this is what I am printing out:i can't figure out how to handle this StopIteration error. I am trying to implement this without using itertools
This is an application for izip_longest.Output:In this example it zipped the three sequences into tuples of three elements. If there wasn't a corresponding element for one of our sequences, we used a default value of ''. Then we flattened those tuples using chain.from_iterable and we finally joined all the characters together.If we are allowed only to use basic functions, we could do it like this:With this code we keep track of the exhausted iterators. When the number of live ones reaches to zero, we stop our generator. If an iterator is exhausted, then we don't check it next time.
A simple solution that doesn’t use itertools or zipping (and also doesn’t try to embed the zipping implementation):For any iterable:
This is a recipe in the itertools documentationFor example, using the IPython REPL:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
