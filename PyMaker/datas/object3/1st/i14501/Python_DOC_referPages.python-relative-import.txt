Natural Text
Suppose I have a module package containing the following files. An empty file C:\codes\package\__init__.py and some non-trivial files:One located in C:\codes\package\first.pyAnother located in C:\codes\package\second.pyThere is also a third file: C:\codes\package\general.py with the following codeWhen I run the latter file, everything goes fine. However, if I try to execute the file C:\codes\test.py containingI get the import error ImportError: No module named first. How to resolve this issue?
First, I suspect you forgot to metion you have a (possibly empty) file package\__init__.py which makes package a package. Otherwise, from package import general wouldn't work.The second case differs from the first in so far as you are in a package. From inside a package, you wouldn't do import first, but import .first. The equivalent to the latter is described here where you either add level=1 as a parameter or (but I am not sure about that) you put .first into the string and set level to -1 (if it isn't the default nevertheless, that's not clear from the documentation).Additionally, you have to provide at least globals(), so the right line isI have found this solution here.
In your case, you should import your module_name from package. Use fromlist argument:
Assuming, you're using Python 3, that's just because this version dropped the support for implicit relative imports. With Python 2 it would be working just fine.So either you'd need to use relative imports in C:\codes\package\general.py, which would result in erroneous call to it, or add your package to the path. A little dirty, but working hack would be:Maybe you can achieve a cleaner implementation with the importlib module.


Answer URL
https://docs.python.org/3/library/importlib.html
