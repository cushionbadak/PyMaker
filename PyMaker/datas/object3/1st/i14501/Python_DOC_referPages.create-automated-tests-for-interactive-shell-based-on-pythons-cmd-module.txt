Natural Text
I am building an interactive shell using Python 3 and the cmd module.  I have already written simple unit tests using py.test to test the individual functions, such as the do_* functions.  I'd like to create more comprehensive tests that actually interact with the shell itself by simulating a user's input.  For example, how could I test the following simulated session:
You can mock input or input stream passed to cmd to inject user input but I find more simple and flexible test  it by onecmd() Cmd API method and trust how Cmd read input. In this way you cannot care how Cmd do the dirty work and test directly by users command: I use cmd both by console and socket and this I cannot care where the stream come from.Moreover I use onecmd() to test even do_* (and occasionally help_*) methods and make my test less coupled to the code. Follow a simple example of how I use it. create() and _last_write() are helper methods to build a MyCLI instance and take the last output lines respectively.Take care that onecmd() return True if your cli should terminate, False otherwise.
Use python mock library to simulate user input. Here you will find similar problems with examples 1, 2.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
