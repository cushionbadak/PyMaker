Natural Text
I have a problem with Python's & bitwise operation:The problem is the conversion from decimal to hex. 65 is 0x41, however Python says that it is 'A'. Why?
The value that you already have is exactly the value you want. From a comment:I was using bytes function because I want to concat the result of base64.b64decode(coded_string) with one more byte at the end.bytes([65]) creates a bytes object with a single byte with the numeric value 65. What that number means depends on how you interpret the bytes. The fact that its repr happens to be b'A' isn't relevant. What the value actually is, is the one byte you want. But the repr of a bytes object, as the docs explain, uses the bytes literal format for convenience. Any byte that matches a printable ASCII character gets represented as that character, a few common values get represented with backslash escapes like \n, and anything else as a hex escape, all within b'…'So, repr(bytes([65])) is b'A', because byte 65 is the printable ASCII character A.If you want to get a string with the hexadecimal representation of the number 65, you can use the hex function—or, if you want more control over the formatting, the format function:But that's not what you want here. You want the value b'A', and you already have that.
65 is not A in hex, it's A in ASCII code; print(bytes([65])) and print(chr(65)) outputs b'A' and A, respectively (ASCII representations). Hexadecimal is merely a numeral system with 16 as its base. 0x41 is therefore 4 * 16^1 + 1 * 16^0 = 65.


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes
https://docs.python.org/3/library/functions.html#hex
https://docs.python.org/3/library/functions.html#format
