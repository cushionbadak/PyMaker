Natural Text
I am having a strange problem (this is my first exercise using python).I have a python script called run_class. I want to store the output (to stdout and stderr) in run-class.out.So I do the following (after looking on the web at some examples)I get:[1] 13553   ~$ nohup: ignoring input and redirecting stderr to stdoutSo, all is well for now. Indeed the program runs fine until I log out from the remote. Then the program comes crashing down. Logging out is exactly what is causing the program to crash. Not logging out takes the program to run to completion.The run-class.out has the following error:What is wrong with my nohup?Many thanks!Note that my command works without exiting, so I don't quite understand the problem.Btw: here is the program:
The ps command is returning an error (a nonzero exit status). Possibly just from being interrupted by a signal by your attempt to log out. Possibly even the very SIGHUP you didn't want. (Note that bash will explicitly send SIGHUP to every job in the job control table if it gets SIGHUP'd, and if the huponexit option is set, it does so for any exit reason.)You're using check_output. The check part of the name means "check the exit status, and if it's nonzero, raise an exception". So, of course it raises an exception.If you want to handle the exception, you can use a try statement. For example:But you can also just use a Popen directly. The high-level wrapper functions like check_output are really simple; basically, all they do is create a Popen, call communicate on it, and check the exit status. For example, here's the source to the 3.4 version of check_output. You can do the same thing manually (and without all the complexity of dealing with different edge cases that can't arise for your use, creating and raising exceptions that you don't actually want, etc.). For example:Meanwhile, if you just want to know how to make sure you never get SIGHUP'd, don't just nohup the process, also disown it.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.check_output
