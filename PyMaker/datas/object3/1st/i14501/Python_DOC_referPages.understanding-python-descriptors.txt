Natural Text
I am trying to understand descriptors better.I don't understand why in the foo method the descriptors __get__ method doesn't get called.As far as I understand descriptors the __get__ method always get called when I access the objects attribute via dot operator or when I use __getattribute__().According to the Python documentation:
z is an attribute on the instance, not on the class. The descriptor protocol only applies to attributes retrieved from a class.From the Descriptor HOWTO:For objects, the machinery is in object.__getattribute__() which transforms b.x into type(b).__dict__['x'].__get__(b, type(b)). and in the Implementing Descriptors section of the Python Data Model:The following methods only apply when an instance of the class containing the method (a so-called descriptor class) appears in an owner class (the descriptor must be in either the ownerâ€™s class dictionary or in the class dictionary for one of its parents). Your m.z cannot be found in the class dict; type(m).__dict__['z'] does not exist; it is found in m.__dict__['z'] instead. Here m is the instance and the owner class is MyClass, and z does not appear in the owner class dictionary.


Answer URL
https://docs.python.org/3/howto/descriptor.html#invoking-descriptors
https://docs.python.org/3/reference/datamodel.html#implementing-descriptors
