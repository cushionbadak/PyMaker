Natural Text
I have a class K() that has an __add__() method that works as followsHowever, if I change some dataand check again...The changing data has affected the original addition method. I've tried using .copy() to create copies of the variables we're adding, and use those- however I haven't had any luck...This just outright doesn't workI'm not sure how to make this work with copies
The problem here is that your copy method is presumably just making a new list with the same dicts. When you copy a collection whose elements are themselves mutable collections, they don't get copied.If you want to copy "all the way down", use the deepcopy function. For example, you can change your own copy method to call deepcopy. (And probably your __init__ method as well.)For example, maybe something like this:Meanwhile, your add method doesn't make any sense. You create slist and olist lists, but then you try to append to self_temp and temp lists, and then you try to use self_temp as if it were a K instance instead of a list. If you've got a copy method, it may be simpler to first define __iadd__, and then define __add__ in terms of it:


Answer URL
https://docs.python.org/3/library/copy.html#copy.deepcopy
