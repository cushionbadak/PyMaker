Natural Text
I have a list of lists:I want to iterate over each element and perform some string operations on them for example:I tried iterating over the list using: I wanted the out result to be the same as original list of lists but without the parenthesis. Also, I am looking for a method in editing lists of lists and not really a specific solution to this question.Thank you,
I just did what you did, i used the fact that each element of a list can be assigned a new (or updated) value:EDITThis is how you do it with the "real problem" that you mentioned in the comment:OUTPUT:^ All elements have been multiplied by a number and the original format is keptThis is how it works:So you have the initial list 'a' that has two sublists each with only ONE element (the tuple that contains the x,y,z coordinates). I go through list 'a' and make the tuples a list and set them equal to 'b' (so the fourth line has a value of [12.22, 12.122, 0.000] the first time around (and the next tuple (as a list) the next time around). Then I go through each of the elements in 'b' (the tuple converted into a list) and multiply each element in that tuple by a number with the use of the increment operator (+=, -=, /=, *=). Once this loop is done, I set that same position in the master list 'a' equal to the tuple of the previously converted tuple. < If this doesn't make sense, what I'm saying is that the initial tuples are converted into lists (then operated on), and then converter back to tuples (since you want it to end up with the same format as before).Hope this helps!
Edit:Yes, you should use normal for-loops if you want to:Preform multiple operations on each item contained in each sub-list.Keep both the main list as well as the sub-lists as the same objects.Below is a simple demonstration of how to do this:Output:Use a nested list comprehension:The [:] will keep the list object the same.



Answer URL
