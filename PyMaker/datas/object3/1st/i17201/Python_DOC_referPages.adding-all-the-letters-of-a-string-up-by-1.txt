Natural Text
When I input "abc" I would like to get "bcd" as output. So I want A to be B and B to be C and so on upto Z which will be A. So how would I go about doing this I have not the slightest clue.
You can use translate to directly change a letter to a different letter:
You can use ord function to get the code point of the character and then increment it by 1, convert it back to the character with chr function. Finally, join all the characters with str.join function, like thisThe special case of z can be handled like this
Using reduce:output:EDIT:For corner case:
You can use the ord function in python to get the codepoint of a character, and then chr to turn a codepoint back into a char. For ASCII characters, the codepoints of the letters are continuous and sequential in alphabetic order, so for instance ord('a') + 1 == ord('b'), etc. So you can do something like this (written our in long form for clarity, but it can easily be shortened with list comprehension):That's the basic case, but you will also need to handle wrapping from 'z' to 'a', presumably. You may need to do some error handling in case a char is outside of the valid range. You can do that like this:
Edit: code below only works in Python 2, in Python 3 the module is named str and print is a function.Use maketrans. Following is for letters a-z only, not A-Z, left as exercise:


Answer URL
