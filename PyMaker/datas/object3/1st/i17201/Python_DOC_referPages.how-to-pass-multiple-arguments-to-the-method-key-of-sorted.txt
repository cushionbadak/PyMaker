Natural Text
On a website, I am trying to sort a list of shop by their relative position of the user. Let me explain.A shop looks something like this:I get the position of the user in the session.So now I got a list of shop and I want to sort them. So I tried this:The question is pretty simple, how to pass more than one argument to the method distance_of_the_shop?
Just wrap the call in a lambda:and add two more arguments to the distance_of_the_shop() function to receive the longitude and latitude.The sorted() function calls the key for each value in shop_list, but nothing says the callable cannot itself call other functions. A lambda is the easiest way to create a new wrapper function that does just that.You could also use a functools.partial() object, provided the longitude and latitude values can be passed in as keyword arguments, or accepts those two values as the first two positional arguments. Treating them as keyword arguments is probably best, even if they are given a position (no default value), you can use their names as keyword arguments in the partial().Assuming the definition is:then useand sorted() will pass each shop to the partial(), which in turn calls distance_of_the_shop(shop, long=ulong, lat=ulat)
Your question is hard to comprehend because you never define a distance function, and the function you do provide, distance_of_the_shop, actually takes a single argument.If I understand correctly, you would like distance_of_the_shop to receive the current user and the shop being compared. To achieve that, use a lambda:Also note that it doesn't make sense to call sorted without assigning its value to some variable or container. If you want to sort a list in-place, use its sort method, as shown above.
First, we need a distance function (this one calculates great-circle distances):then we define a distance-function per user:and call it like


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
