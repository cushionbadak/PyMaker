Natural Text
Why is the self.year twice? I am having trouble to find out the logic of the line. Can some one help me with this?I am going through http://www.openp2p.com/pub/a/python/2004/12/02/tdd_pyunit.html and encountered the line ... And of course I have no problem understanding and, or, nor, xor, xnor, or any boolean expression. But I am confused by the way it has been used here..:-)
The order of evaluation matters (see here).  The code:could be rewritten:Or, in full:However, the expression you posted will always evaluate to True because of the or True at the end.  Using parenthesis to show evaluation order:
In this case, first there is an existence check on self.year which will return (i assume) None (in python==False) if it does not exist. after that it is compared to date.yearI think it is a bit redundant, because the comparison would return false anyway if self.year did not exist.As commented by Bereal on your question, the last or True is weird indeed, cause that seems to cause the total expression to always return Truegeneral Note: In python boolean expressions are always evaluated 'in order of appearence'. 
This line will always return true because you are doing an or with a true value.Apart from that, first it checks if self.year is not None or False, than checks if self.year is equal to date.year.
yes, it is required to include self.year twice. Because it will check that there is something self.year defined and if it's not defined it will give an error that there is no thing like "self.year" i.e. it's undefined. As it approves that self.year is something which is defined than it will check for it's value.


Answer URL
