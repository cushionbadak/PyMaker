Natural Text
I want to copy some tabular data from Excel into a python array. That is, user willselect a range in an Excel table, press "Copy" (CTRL+C) so that the range will be copied to clipboard. Then I will get this clipboard data into a python array (list). I use win32clipboard from pywin32 to get clipboard data into an array:I copy the following range A1:B5 from Excel:When I use the function above, I get a string like:How to split this string into a list, so that the list will look like:I use split method, but it doesn't give me what I want.
Using the code from my other answer, you can also handle other types as well:
Thereâ€™s actually a str.splitlines method which will split the string by line breaks, regardless of which line breaks are used. So this works on Unix systems with just an \n, on Windows with \r\n and even on old Mac systems where the line break was just an \r.Once you have this result, you can split by tabs to get the individual cells. So you essentially have to call cell.split('\t') on each cell. This is best done with a list comprehension:As an alternative, you could also use map to apply the splitting operation on each cell:As the copied data in the clipboard will always have the rows separated by newlines, and the columns separated by tabs, this solution is also safe to use for any range of cells you copied.If you further want to convert integers or float to its correct datatypes in Python, I guess you could add some more conversion logic by calling int() on all cells that only have digits in them, float() on all cells that have digits and the dot in them ., leaving the rest as strings:For a different string:
Output
Here is a breakdown of how it works:First, split on whitespaces:Convert the strings into ints:Use the grouper recipe to group every 2 items:
This just breaks the data into lines and then splits it according to white space. Check it out and modify according to your data.


Answer URL
