Natural Text
I am running my unit test suit with Python 3 on code that was developed under Python 2. All unit tests passed under Python 2 but not for Python 3.  It seems there is some change in the implementation of re, and it is a real head scratcher for me. Below is a minimal working example to replicate my problem:Clearly something is going on that I don't expect!  I am assuming that there is some set of default flags that are OR'd together to make flags be 34 in python3.  What I want to know is what these are so that I can make my assertion pass by comparing against the proper flags.  As a bonus, what is the purpose for this?
Following are the RegEx flags, in Python 3.x.OutputFrom the docs,Strings are immutable sequences of Unicode code points.So, re.UNICODE flag is enabled by default. Since you have enabled re.IGNORECASE, that is ORed with re.UNICODE and that gives you 34.
It's because in Python 3, strings are unicode, and so it makes sense for the UNICODE flag to be on by default.Python 3:
After digging through the re source code, I found the following in "sre_parse.py":If the "UNICODE" flag is not added, it is added for you.  It's value is SRE_FLAG_UNICODE == 32, so 2 | 32 == re.IGNORECASE | re.UNICODE == 34.This function does not exist in python2.x's implementation.


Answer URL
