Natural Text
I created a class named Options. It works fine but not not with Python 2.And I want it to work on both Python 2 and 3.The problem is identified: FileNotFoundError doesn t exist in Python 2.But if I use IOError it doesn t work in Python 3Changed in version 3.3: EnvironmentError, IOError, WindowsError, VMSError, socket.error, select.error and mmap.error have been merged into OSError.What should I do ???(Please do not discuss my choice of portability, I have reasons.)Here s the code:
You can use the base class exception EnvironmentError and use the 'errno' attribute to figure out which exception was raised:Or just use IOError in the same way:That works on Python 2 or Python 3. Be careful not to compare against number values directly, because they can be different on different platforms. Instead, use the named constants in Python's standard library errno module which will use the correct values for the run-time platform.
If FileNotFoundError isn't there, define it:Now you can catch FileNotFoundError in Python 2 since it's really IOError.Be careful though, IOError has other meanings. In particular, any message should probably say "file could not be read" rather than "file not found."
For what it's worth, although the IOError is hardly mentioned in Python 3's official document and does not even showed up in its official Exception hierarchy, it is still there, and it is the parent class of FileNotFoundError in Python 3. See python3 -c "print(isinstance(FileNotFoundError(), IOError))" giving you a True. Therefore, you can technically write your code in this way, which works for both Python 2 and Python 3.It might be "good enough" in many cases. Although in general, it is not recommended to rely on an undocumented behavior. So, I'm not really suggesting this approach. I personally use Kindall's answer.


Answer URL
https://docs.python.org/3/library/errno.html
https://docs.python.org/3/library/exceptions.html
https://docs.python.org/3/library/exceptions.html#exception-hierarchy
