Natural Text
I have a code here that displays the waveform of an audio file in PyQT Graph, unfortunately the graph seems so big.I can't attached an image yet so I'll provide a link of the screenshot of the graph that I made.And here is my code:Should I need to adjust X and Y range limits? Should I adjust the Y peak? As you can see the X(time) matches from the audio file that I used with 8 seconds duration. But the Y isn't(?). I am not sure how to adjust the data of the waveform so that it can be fit inside the window. Any response and suggestions will be of great help!
I think there are a couple of options depending on what you want to show.1: Adjust the Y-limitThe simplest solution is to scale the Y axis. You can check the docs here. That is if you want to keep all of the audio values the same as they are currently, although do you really need the audio data in terms of those values? Normally audio data is displayed as a float between -1 and +1 for scientific purposes at least.2: Adjust your dataAs said before audio data tends to be most useful when its scaled between -1 and +1; it's just easier for us to glance at it and instantly get a feeling for if the amplitude is correct (if we were testing a gain program for example). There are plenty of other Python libraries other than the built in wave module, which will handle this much easier for you like PySoundFile or many others (see this other SO post for other methods of reading .wav files in Python).Otherwise you can convert the data received from the wave module to floating point data using something like this (props to yeeking for the code):If possible using a library is always better in this case, because the wave module as it stands doesn't support many audio use cases (as far as I was aware, only mono 16 bit audio).Note: If you do convert it to -1 to +1 data probably still worthwhile adjusting the Y-Limit like explained in part 1. Just to avoid weird scaling when loading different .wav files.


Answer URL
https://docs.python.org/3/library/wave.html
https://docs.python.org/3/library/wave.html
