Natural Text
I can store functions in dictionaries by sayingI was wondering if there was a cleaner/neater way to write this - something along the lines ofHowever this code throws a syntax error
You can (ab)use a decorator.You can simplify this if you just want to use the defined name as the key and hard-code the dictionary to update:
For your example you can do this:If you want to use a class:
This is wrong:because after def you need to use some word that contains only allowed characters. That's why you got Syntax error.What you can use is:1) Lambda functions (as suggested by @bphi)2) Python class to dynamically create methods (inside the class) which are stored in MyDict, using setattr built-in function:or via lambda:or
If you can express all your functions as one-liners, use lambdas as suggested in  @bphi's answer.If you don't want to be rescricted by using the lambda calculus, another way is to use a class and its static methods. Static methods are methods of a class, not an instance of a class, so they don't have access to the inner state of an object and can be called on the class, not an instance.However, by reading through this answer you might see why this is not a very elegant (or recommended) approach, even though the result is exactly what you asked for.If you want to use the syntax of dictionaries as proposed in your question, you can use __dict__ on the class:And you can also add other functions to that dictionary:But as this dictionary is just a representation of the class MyClass, it also contains some items related to that class, like __weakref__. But you can extract your own functions:The result is exactly what you asked for, but I doubt the complexity of the approach is worth the result. I recommend a) using lambda-functions, b) staying at your first approach (define the functions first and then put them in a dict) or c) rethink your actual problem as you may find another solution besides storing functions in a dictionary.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions
https://docs.python.org/3/library/functions.html#setattr
