Natural Text
My code produces satisfied result in hacker rank compiler window for eleven out of fifteen test input in a certain problem. However, when i make subtle change in my code, all the the test inputs are run as OK.This is a snippet of my previous code which shows error (terminated due to timeout).When i changed the above code as below all inputs are run successfully.Aren't these two codes equivalent?
These code snippets are entirely equivalent apart from two things:Second one is more optimized - There are no multiple subset creations of string.Second one works for any collection - can work on dict, list, tuple, string and anything that implements both __len__ and __iter__.As you've added the error, saying it's a timeout error, I'm leaning towards issue #1 which is the string creation.If you're creating a subset of a very long string you do the following operations for each iteration:Allocate n-1 bytes of space. (Slowish)Set all that space to zero (done internally, probably using calloc())Copy n-1 bytes from the original string to that new space. (Slow)Find out the length (A very fast operation)Deallocate the space. (Fast as well)For long strings, this whole sequence can be a heavy operation, especially done for every iteration.Second algortithm does this:Get length (fast operation)Substract integer (fast operation)???Profit.


Answer URL
https://docs.python.org/3/library/collections.abc.html#collections.abc.Collection
