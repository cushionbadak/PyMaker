Natural Text
What is the difference between @property, @property.setter and getattr(), setattr(). When will I use them? If both are the same, which one is preferred to use in python 3.x?I am new to python and not understanding where to use and how to use them with OO pythonI have gone through many websites, but I'm not sure which one to use. Please give me some real time example. Appreciate your help.EX:getattr()class emp:    name='Harsh'    salary='25000'    def show(self):        print self.name        print self.salarye1 = emp()print getattr(e1,'name')setattr(e1,'height',152)@ propertyclass P:
In python we generally do not use getter and setter methods, instead preferring to directly get and set attributes wherever possible as it is far simpler and more intuitive than intermediating access to values through getter and setter methods.In the (fairly) rare case where you do need dynamic setters and getters, the @property decorator is the preferred way of defining dynamic setters and getters that can be used via . notation:These can be used in concert with getattr and setattr, which allow you to dynamically access attributes of an object by the attribute name:A more apropos question might be what is the difference between a @property and __getattr__ and __setattr__ which allow for dynamic property access similar to property but for any possible name:Which will function identically to the example above.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
https://docs.python.org/3/reference/datamodel.html#object.__setattr__
