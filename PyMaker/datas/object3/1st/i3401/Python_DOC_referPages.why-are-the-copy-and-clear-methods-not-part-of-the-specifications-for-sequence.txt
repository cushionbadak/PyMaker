Natural Text
EDIT: could it be that this is just an oversight that has not been addressed? The standard types documentation includes .copy() and .clear() in the table of methods for mutable sequence types. I noticed something a little curious this morning: the list object in Python >3.3  includes a .copy() method, and also a .clear() method. However the collections.abc Sequence and MutableSequence abstract base classes do not include these methods are part of their spec (.clear() would only make sense as part of the MS spec, of course).My understanding is that part of the reason to use MutableSequence is to signal to the universe you want your object to "act like a list" (unless clearly stated otherwise):Yet a fully defined S type cannot be copied (and a MS cannot be cleared) like a list:This seems weird and as with most things like this, there's probably a good reason for it. What is it?
Found an answer- at least with regards to copy()- after posting the question: it seems this issue was discussed quite a while ago in the bug tracker. A couple quotes:I don't think this is needed nor do I think that it is a good idea to  have a copy() method in the ABCs because they know so little about  their concrete underlying class (perhaps the backing store in the  filesystem or a database).and:The return type of copy() for ABCs feels problematic.  MutableMapping  doesn't have it either.As I expected, this was discussed and there seem to be sound reasons behind it. This little tidbit from GVR is also worth including:I personally despise almost all uses of "copying" (including the  entire copy module, both deep and shallow copy functionality).


Answer URL
https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types
https://docs.python.org/3/library/collections.abc.html
