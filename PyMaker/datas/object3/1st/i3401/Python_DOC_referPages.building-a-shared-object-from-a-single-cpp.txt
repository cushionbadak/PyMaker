Natural Text
I am trying to build a shared object library from a cpp file that is a simple set of functions.  I want to use ctypes to interface with python.Say I have  the cpp file:and header file I tried to build Then in pythonthe line yieldsnm -D print.sogives the outputWhat am I fundamentally doing wrong in the compilation step?
You are calling a C++ function while ctypes expects C functions linkage:C functions have a different (i. e. none) name mangling, as you noticedC function cannot have C++ parameters (std objects like std::vector, references, etc.)To solve your issue, declare a clean C-style API in your headers, and if you intend to implement the functions in C++ and use g++ as your compiler/linker, you must add an extern "C" declaration right before the function declaration in the header file, or as a block around your declarations:This will prevent the C++ name mangling.Using vectors and other C++ types in your interface functions will cause you ABI issues, i. e. "it won't work", even if everything links and compiles seemingly cleanly.Use C functions with the data types supported by ctypes (see Python docs on ctypes) in your functions as an interface, feel free to implement in C++, but then wrap your C function declarations in an extern "C" block to prevent name mangling.Please do refer to the documentation of ctypes to find out how to correctly use structs, unions, references, etc. as function parameters, as there are many pitfalls and issues to consider.


Answer URL
https://docs.python.org/3/library/ctypes.html#fundamental-data-types
