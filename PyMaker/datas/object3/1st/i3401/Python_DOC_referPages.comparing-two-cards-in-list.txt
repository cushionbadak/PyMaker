Natural Text
I'm trying to write Russian Schnapsen (Thousand Schnapsen) but I'm stuck at comparing two cards on the table (table is list with only two cards). Here's not entire code, because entire is not necessery and I would have to translate all my variables from native language to english. And there is class Game with not working function check (list table is filled with two cards earlier)The error I get is:My main and only question is how could I compare two cards in list (or maybe there is better solution than doing it in list) by their rank. 
Python objects don't automatically support comparisons. card > x requires that your Card class at the very least supports greater than comparisons.You can bypass that by just comparing the attributes of the cards directly. As you state in your question, the test should see which card has the higher rank, so you can just use the .rank attribute here:The .rank attribute is an integer value, and integers do support comparisons.If all comparisons between cards should be done by rank (so the suit of a card is never considered in the rules of the game), then you could implement rich comparison methods; these are called on the objects being compared (first the left object is tried, but the object on the right can also be consulted, see the linked documentation for details on that). For > the __gt__ method would be called on card, passing in x, and should return True or False; to compare ranks that can be as simple as:If < and >= and <= all should be based on the same attribute comparison, then you can keep things simple by implementing just one such rich comparison method and apply the  @functools.total_ordering class decorator to your Card class. However, that decorator also requires that you implement a __eq__ equality test method, which means that all card1 == card2 equality tests would return True just because their rank attribute is true, so ignoring the suit of the card. You probably would need to implement all rich comparison methods separately if that should not be true.From a quick reading of the Wikipedia article on Russian Schnapsen, I can see that the suit of a card does have significance in this game:[...] Russian Schnapsen features "marriages" (pairs of a King and Queen of the same suit) which are worth extra points.andIn the beginning of every round there is no trump suit, all suits are equal. The player who has at least one trick taken and still has a marriage in his hand can declare a suit of the Marriage to be a trump suit by making a move with either King or Queen card from available marriage and declaring it out loud by saying that suit X (X corresponds to the marriage suit) becomes a trump, or saying number of scores he gets by declaring a marriage suit a trump. The suit that just became a trump stays a trump until a new suit becomes appointed to be trump or until game round ends.Because of this significance, I'd not implement rich comparison methods here but just use card.rank and card.suit attributes directly in your implementation.
Overwrite the __gt__() function for greater than comparison. See this for more info on overwriting comparison operators in Python. 


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__lt__
https://docs.python.org/3/library/functools.html#functools.total_ordering
https://docs.python.org/3/reference/datamodel.html#object.__eq__
https://docs.python.org/3/library/operator.html
https://docs.python.org/3/reference/datamodel.html#object.__lt__
https://docs.python.org/3/library/functools.html#functools.total_ordering
