Natural Text
Hi everyone and thanks for trying to help me !I encounter trouble when trying to import a python module generated by swig.I have a basic library "example" containing few methods.Next to it I have a main program dynamically linked to python.This program imports the generated module and calls a function in it.If my library example is a shared one, named _example.so, everything works perfectly, and I can import it in python.But if my library is static, _example.a, and linked to the main program, then I will have the error "no module named _example was found" unless I add a call to SWIG_init() in the main function.What exactly does SWIG_init() , and when should I use it ? It seems quite weird to me because it's never said in the documentation to do such a call.I know that dealing with a .so shared library is better but I try to reproduce the behavior of what I have on a big project at work, so I really have to understand what happens when the module is static.Here is my main file :Here is how things are generated :
What you are calling is the init function of the native python module _example that is loaded by the SWIG generated python wrapper. For python 2 this function is named init_example, and for python 3 it is named PyInit__example.Every python extension with C or C++ needs such a function, it basically initializes everything and registers the name of the module and all the methods available for it. In your case SWIG has generated this function for you.The reason you have to call this function yourself when you compiled the library statically is simply that the python wrapper example imports the native module _example which is by the python convention a shared object, which you did not compile, and which is thus not found.By calling SWIG_init, you "preload" the module, so python does not try to reimport it, so it works even though there is no shared object anywhere on the python module path.If you have the shared object for your module, python will call this function for you after loading the shared object and you don't have to worry about this.


Answer URL
https://docs.python.org/3/extending/extending.html#the-module-s-method-table-and-initialization-function
