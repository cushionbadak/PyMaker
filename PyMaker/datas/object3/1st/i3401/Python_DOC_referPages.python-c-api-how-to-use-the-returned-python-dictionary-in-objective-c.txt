Natural Text
My Python script app.py has this function for example:I am using Python C-API in Objective-C as follows:After this, I am not really sure how I can convert the myResult to retrieve my dictionary. For doubles and strings, we usually use the PyFloat_AsDouble and PyUnicode_AsUTF8String, PyBytes_AsString functions but I can't seem to find a PyBLAHBLAH_AsDict or equivalent method. I don't have much experience with Objective-C so maybe I am not looking at the right place.Can someone help me figure out how I can convert the PyObject to a NSDictionary?I am basically looking for a C way of accessing the dictionary first (a map for example) which I can then use Objective-C methods to convert to NSDictionary. Similar to how I used PyUnicode_AsUTF8String, PyBytes_AsString and stringWithUTF8String all combined together to get a NSString out of the Python String. Looking for something similar for dictionaries. I have figured out a way to achieve this but I don't know if this is the best possible way of doing this. I modified my python script to use json.dumps to return a string representation of the dictionary. Then in myObjective C- code, I first get the string, then use JSONObjectWithData to convert the json string to a NSDictionary. This works for now but I am curious if there is a better way of doing this without having to return string instead of dictionary from Python. This seems more like a workaround solution to me. Here's what I have now:app.py:Objective-C:
Use PyDict_Next to iterate over key / value pairs of the dictionary.You should also provide the Python hash and equality functions if you are still going to be using PyObject*s. Otherwise, you should try and coerce them all into native types.(This is in pseudo code since I don't really know Objective-C, but have used the C-Api and Python)Another alternative would be to just use the Python API to access values of a dictionary. So iterate over all the values with PyDict_Next, PyDict_GetItemString to access string items with simple char *s, and PyDict_GetItem to access an arbitrary Python value.


Answer URL
https://docs.python.org/3/c-api/dict.html#c.PyDict_Next
