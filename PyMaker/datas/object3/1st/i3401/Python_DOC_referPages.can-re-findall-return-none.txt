Natural Text
The documentation only says that is returns "a list". I would assume that when it finds no matches it returns an empty list (but not None) and it never returns a None. But I'm not sure. Can anyone confirm?Also, is there a way for me to check that in the future on my own for other functions (e.g. ElementTree.findall())? Can I just assume that whenever the docs say "a list" it will behave the same way?
For these sorts of question, open your python shell and run it: as per the documentation, it always returns a list, but there is nothing to find, so its an empty list.For the inner question: "I just want the documentation to say "it doesn't return None" or "it always returns a list"." I think that you need to understand the style of the Python documentation. The first line is "Return all non-overlapping matches of pattern in string, as a list of strings". If it returned anything else, it would state this. e.g: on the same page, for sub: "Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl. If the pattern isnâ€™t found, string is returned unchanged" this states the edge case You can't assume that all functions written by anyone in any library will have as good documentation as the python core. But for core functions in Python, yes, they generally nearly always do as the docs say. (Core functions are anything inside the sub-pages of: https://docs.python.org/2/contents.html or https://docs.python.org/3/contents.htmlIf you go grab a random library from pypi, the docs might be less then perfect. One of the "bad" things about python is that its documentation suffers for things like exceptions. Languages like Java, where exceptions are part of the definition of a function/method, and the return types are stricter. Basically, try to remember the Zen of Python and just flow with it. python.org/dev/peps/pep-0020
I agree with the existing answers/comments that you can trust builtin functions to return only what the documentation says they return, and that a bit of quick self-testing should give you confidence in the behavior of common corner cases. But for the sake of completeness, let's look a little deeper. CPython's source code for findall can be found here. We're really only interested in the return statements, which are:So this function can return two possible values: a list, or NULL.Returning NULL here signals to the interpreter that the function will raise an exception. If the function wanted to return None, it would do Py_RETURN_NONE. It doesn't do that here, so we can reasonably assume that findall will always return a list, as long as it doesn't crash.


Answer URL
https://docs.python.org/3/contents.html
