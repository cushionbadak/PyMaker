Natural Text
In this question i will hardcode acceptable operators, these operators will be allowed in the code:Now i will give a string let's say :First step, after removing all non numbers and strings not in accepted_operators:We can see that it doesn't make much sense here same occurrences of multiplications more than once if ... or xxx should be reduced to only one, same with addition and division, however minus operator is different 2 minuses will result a + 3 minuses a minus and so on.In case of different operators next to each other:in case it's a +- regular math takes over.in other cases like having +/ or +x or -/ or -x the multiplication and division operators dominate and the +- are "deleted"however if we have x-5 we, for example, we don't delete the minus as it indicates 5 is negative.In case we have x/ the one to the right is "deleted" in this case /Final expected result:
You can do this using re.sub.The first call will remove unwanted characters.The second call will remove duplicate /, x and . using a capturing group as well as any + or - before them.The third one will normalize multiple occurence of a sign + or -.CodeOutputRegex explanation[^\dx/+-.]: a negative set [^...] matches anything that is not in the set[+\-]*([x/.])\1*: \1 matches whatever was matched by the first capturing group, that is the pattern in between (...).[+\-]{2,}: matches two or more signs. The method re.sub can then take a callable to which it passes the match and replace by the returned value.
StartRemove unwanted chars: [^0-9\+\/\-\*\.]LoopRemove unwanted duplication: \++(?=[0-9\/\-\*\.])|\*+(?=[0-9\/\-\+\.])Remove negative operators pairs recursively: \-\- until no more \-\-End


Answer URL
https://docs.python.org/3/library/re.html#regular-expression-syntax
