Natural Text
I have a SQL table that contains data of the mySQL time type as follows:I then use pandas to read the table in:df = pd.read_sql('select * from time_of_day', engine)Looking at df.dtypes yields:time_of_day    timedelta64[ns]My main issue is that, when writing my df to a csv file, the data comes out all messed up, instead of essentially looking like my SQL table:I'd like to instead (obviously) store this record as a time, but I can't find anything in the pandas docs that talk about a time dtype. Does pandas lack this functionality intentionally? Is there a way to solve my problem without requiring janky data casting?Seems like this should be elementary, but I'm confounded.
found a solution, but i feel like it's gotta be more elegant than this:
Adapted this code
Pandas does not support a time dtype seriesPandas (and NumPy) do not have a time dtype. Since you wish to avoid Pandas timedelta, you have 3 options: Pandas datetime, Python datetime.time, or Python str. Below they are presented in order of preference. Let's assume you start with the following dataframe:Pandas datetime seriesYou can use Pandas datetime series and include an arbitrary date component, e.g. today's date. Underlying such a series are integers, which makes this solution the most efficient and adaptable.The default date, if unspecified, is 1-Jan-1970:You can also specify a date, such as today:Pandas object series of Python datetime.time valuesThe Python datetime module from the standard library supports datetime.time objects. You can convert your series to an object dtype series containing pointers to a sequence of datetime.time objects. Operations will no longer be vectorised, but each underlying value will be represented internally by a number.Pandas object series of Python str valuesConverting to strings is only recommended for presentation purposes that are not supported by other types, e.g. Pandas datetime or Python datetime.time. For example:


Answer URL
https://docs.python.org/3/library/datetime.html#time-objects
https://docs.python.org/3/library/stdtypes.html#str
