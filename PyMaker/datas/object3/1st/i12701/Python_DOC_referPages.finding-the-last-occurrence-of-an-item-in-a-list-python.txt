Natural Text
I wish to find the last occurrence of an item 'x' in sequence 's', or to return None if there is none and the position of the first item is equal to 0This is what I currently have:When I try:This is the correct answer. However when I change 'x' to 2 instead of 5 I get this:The answer here should be 2. I am confused as to how this is occurring, if anyone could explain to what I need to correct I would be grateful. I would also like to complete this with the most basic code possible.Thank you.
To do it efficiently, enumerate the list in reverse order and return the index of the first matching item (or None by default), e.g.:Avoid reversing the list using slice notation (e.g. s[::-1]) as that would create a new reversed list in memory, which is not necessary for the task.
Your logic is incorrect, because you return the count if i==x and you have an extra loop at the trailing of your function.Instead you loop over the reverse forms of enumerate of your list and return the index of first occurrence :Demo:
Your code is wrong, it's checking the list from the beginning and stopping at the first match, what you want is to check the list in reverse order.Your first line gives you the correct answer only because of coincidence:- Counts equal 5 when checking for the first item.- Counts equal 4 when checking for the second item, it matches, then return 4.- Coincidentally, this is the index of your last item.  
Iterate list in reverse order and then check x. This could be an efficient way as reversing list and then finding index from beginning is resource intensive.


Thanks everyone for the replies and help! Unfortunately no one had the answer I was looking for but no matter I worked it out myself in the end but thank you very much all the same!Here is the final code:This returns the correct answers to all my tests.Thanks, Eimear.



Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#reversed
