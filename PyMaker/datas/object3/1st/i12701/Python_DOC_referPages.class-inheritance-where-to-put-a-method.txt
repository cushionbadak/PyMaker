Natural Text
For example we have a base class called A, and three sub classes called B C D, all inheritance of A. If I want some method only appear in B and C, but not in D. Where should I put this method?If I put it in A, D will have the method it doesn't need. If I put it in B and C, I repeat myself.
If it's meant to be the "same" method visible in both B and C, it sounds like you need to add another class into the hierarchy below A, but above B and C.  Let's call it E.  You'll have D and E as subclasses of A, and B and C as subclasses of E.
There is no 'standard' way of doing this unlike other languages.You can override it so that it raises an exception.
There are 2 things that you can do in your conceptIf all B, C and D need to ineherit from A and there is a method that should not come in D from A, then maybe you need to re-work the what methods need to go in A to avoid this.If still you cannot do any changes in A, and still D needs to inherit from A, then its best to raise the un-implemented/not-supported error like below
Python is a very flexible language in this respect.You can define your method outside of C and D classes scope, and bind it to them separately:You can introduce a new class that inherits from A, define your method in this class and inherit C and D from this new class. This is the 'classic' OOP approach.You can implement your method in A and override it in B, telling it to raise some exception. Preferably something else than NotImplementedError as it's intended to be used in abstract classes - AttributeError seems like a better candidate. Note that if you're not going to instantiate A class in your code, it will make sense for A.method to raise NotImplementedError, effectively converting A into an abstract class.You can resort to duck-typing and simply implement two identical methods in C and D. Python is big on duck-typing, but not big on duplicating code, so this might not be the best solution in this situation.


Answer URL
https://docs.python.org/3/library/exceptions.html#NotImplementedError
