Natural Text
I have a list of strings like such, Given a keyword list like ['for', 'or', 'and'] I want to be able to parse the list into another list where if the keyword list occurs in the string, split that string into multiple parts.For example, the above set would be split into Currently I've split each inner string by underscore and have a for loop looking for an index of a key word, then recombining the strings by underscore.  Is there a quicker way to do this?
will give you the desired output for the example dataset providedactually with the _ delimiters you dont really need to sort it by length so you could just do 
To combine them into a single list, you can use
You could use a regular expression:The pattern is dynamically created from your list of keywords. The string 'happy_hats_for_cats' is split on '_for_':but because we actually produced a set of alternatives (using the | metacharacter) you get to split on any of the keywords:Each split result gives you a list of strings (just one if there was nothing to split on); using itertools.chain.from_iterable() lets us treat all those lists as one long iterable.Demo:
Another way of doing this, using only built-in method, is to replace all occurrence of what's in ['for', 'or', 'and'] in every string with a replacement string, say for example _1_ (it could be any string), then at then end of each iteration, to split over this replacement string:OUTPUT:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
