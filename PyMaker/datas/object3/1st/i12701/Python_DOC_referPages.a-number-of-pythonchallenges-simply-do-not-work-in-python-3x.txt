Natural Text
I'm a newbie trying #pythonchallenge, with some help!I'm in Challenge 8 and a simple command such as:Won't work in Python 3X (but it does in Python 2x)A number of times I had to change from bytes.decode into str and vice-versa, but I'm just at a lost when to change and why.The other example was in Challenge 6I keep receiving the message TypeError: 'str' does not support the buffer interfaceAny help?I tried different pages to indicate portability from Python 2X to 3X and they say: 'strings are Unicode by default 'What does it mean? That I actually would not have to inform , right?Thanks, sorry if it sounds dumb!
Regarding the problems with the code you posted, the first snippet has to be modified to work with Python 3 as follows:The b prefix marks the string literal as a string of bytes rather than the default of Unicode string.In the second case, ZipFile.getinfo().comment is of bytes type, so you will need to do assuming that comments is of str type.As for the Python 2 and 3 text handling in general, it is one of the key differences between them. When starting out, I recommend to start by studying the official Python 3 Unicode guide first to understand the concepts and to learn the sane way of dealing with strings, bytes and encoding and then read the Python 2 version of the same guide to understand its specific quirks.
In python 3 you can think of bytes as something similar to python2's str, and str is python2's unicode. In python 3 the default literal is str, if you want to specify a bytes literal, you add a b before the literal. This is what python is asking for in the first case:TypeError: a bytes-like object is required, not 'str'So it would be:The second case, I don't know without seeing more code, but remember you can convert from bytes to str and back with the encode and decode methods, similarly to python 2 with str and unicode strings. For example, the following line:would convert the 'รก' str to a bytes encoded in utf8 and back to an str again.


Answer URL
https://docs.python.org/3/howto/unicode.html
https://docs.python.org/3/howto/unicode.html
