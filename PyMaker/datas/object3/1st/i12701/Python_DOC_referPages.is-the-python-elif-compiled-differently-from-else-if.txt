Natural Text
I know in languages such as C, C++, Java and C#, (C# example)the else if statement is syntactic sugar, in that it's really just a one else statement followed by an if statement. is equal to However, in python, there is a special elif statement. I've been wondering if this is just shorthand for developers or if there is some hidden optimization python can do because of this, such as be interpreted faster? But this wouldn't make sense to me, as other languages would be doing it too then (such as JavaScript). So, my question is, in python is the elif statement just shorthand for the developers to use or is there something hidden that it gains through doing so? 
When you really want to know what is going on behind the scenes in the interpreter, you can use the dis module.  In this case:It looks like our two functions are using the same bytecode -- So apparently they're equivalent.Careful though, bytecode is an implementation detail of CPython -- There's no telling that all python implementations do the same thing behind the scenes -- All that matters is that they have the same behavior.  Working through the logic, you can convince yourself that f1 and f2 should do the same thing regardless of whether the underlying implementation treats it as "syntatic sugar" or if there is something more sophisticated going on.
The keyword ‘elif‘ is short for ‘else if’, and is useful to avoid excessive indentation.Source
elif in Python is syntactic sugar for else if seen in many other languages. That's all.
The three following code snippets would all execute using the same logic however all use different syntax.Python's elif is just syntactic sugar for the common else if statement  


Answer URL
https://docs.python.org/3/tutorial/controlflow.html
