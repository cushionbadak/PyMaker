Natural Text
I am trying to return a constantly changing variable in Python 3, the variable is in a while loop, counting to the specified number, changing its value to zero, and starting again.(e.g 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0...)Here is my code:And when I run count(5) It prints the desired results, But 1: I'm trying to find a way to constantly run that loop in the background, and 2: the variable needs to be returned, not printedand have it return the desired results.I have tried adding this to the end of the function:But then it crashes with Maximum recursion depth exceeded during comparisonSo my questions are, 1: Is there a way to have x be continually returned without reaching Maximum recursion depth?, and 2: If there is, is there also a way to have count() be running in the background, so I can get x's current value, and if so how?
Looks like itertools.cycle can help:prints:Just use next(c) to get the next number.now prints:because we stopped at 3 before. You can set your ID value with:
What you want is a generator and to yield each value:
What you want is to make a generator functionsIt looks like a normal function except that it contains yield expressions for producing a series of values usable in a for-loop or that can be retrieved one at a time with the next() function.Usually refers to a generator function, but may refer to a generator iterator in some contexts. In cases where the intended meaning isn’t clear, using the full terms avoids ambiguity.You make a generator in cases where you want a series of value to be calculate in a certain way but don´t need all of then at once because you only need one at a particular time and/or there are too many or even infinite of them.A generator will remember were if was at the moment of yielding a value and will resume its calculation from that point on went a new value is required.@Mike Muller already give you the perfect solution to your problem, so how about another example, like the Fibonacci number, there are infinite of them, but you can make a generator that give you all of them like thisthis will give you every single Fibonacci number one at the time as you ask for them


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
