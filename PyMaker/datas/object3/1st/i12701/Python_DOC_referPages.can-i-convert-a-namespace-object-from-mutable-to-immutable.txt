Natural Text
I receive a namespace object from command line arguments.And I don't want to modify it.Can I do that or do you have some ideas? 
I initially proposed the custom Namespace class, but I like this idea of copying args to a NamedTuple better.NamedtupleAnother option is to copy the values from args to an immutable object/class.  A named tuple might do the job nicely.Create a namespacenow define a namedtupleYou could also get the tuple names from the Namespace itself (after parsing)create such a tuple with values from args:and it is immutable:Such a namedtuple cannot be used as a Namespace, since setattr(foo,'x',34) produces the same error. A clean way to do all of this is to wrap it all in a function:The calling code never sees the mutable args, just the immutable foo.Custom Namespace classTo build on Ingaz answer, argparse can use your own Namespace class.https://docs.python.org/3/library/argparse.html#the-namespace-objectNow args and anamespace reference the same MyNamespace object.  As long as getattr(anamespace, adest) and setattr(anamespace, adest, avalue) work, argparse can use this namespace object.Now, can you allow setattr(anamespace, 'string', 'value'), but disallow anamespace.string = value?  I think you can, but it will require a good understanding of how the latter expression works.  It may just require customizing .__setattr__, but I haven't studied this aspect of Python in a while.By design it is possible, and even acceptable to 'monkey patch' the argparse namespace - with a custom class like this.
You can redefine __setattr__ in your mutable_namespace:


Answer URL
https://docs.python.org/3/library/argparse.html#the-namespace-object
