Natural Text
This question already has an answer here:Why does `a == b or c or d` always evaluate to True? [duplicate]                    1 answer                I managed to get this code to work before, but I've changed something accidentally and can't figure out what.The code that will not work is:When I run the code and put in one of the answers, the program will not run the next part and gives no error message. In case it is necessary, I have put the code for the entire program below:EDIT: Thank you so much, the yes option is working now, but the program will still not exit when selecting any of the no options, as it did before. The edited code is:I checked by printing the answer value, and i believe it is registering the no input but not executing the command that follows for some reason.EDIT: I'm still a bit fuzzy on the logic, but changing it to exit() fixed the problem. It asks for confirmation when closing now, when it didn't before, but otherwise sorted.
Problem causing silent exit:That test is testing answer == 'no' as one test, then 'n' as a separate test, and so on. or chains return when any test returns a "truthy" value (or the last evaluated value if none are truthy), so the test always ends up evaluating as "truthy" because a non-empty string like 'n' is truthy. If you're trying to test for any one of those values, you'd do an "is contained in" test to see if answer is one of a recognized group of values, e.g.:
The reason is due to this expression:In python, the above is exactly the same as this:Since all but the first expression evaluates to true, the whole expression is true. The simplest solution is to convert your input to lowercase and trim off any extra space, then check if the answer is in a list of allowable answers so that you can easily compare for "n", "N", "no", "NO", "No", "nO". 


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
