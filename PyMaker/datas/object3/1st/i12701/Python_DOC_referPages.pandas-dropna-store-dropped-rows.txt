Natural Text
I am using the pandas.DataFrame.dropna method to drop rows that contain NaN. This function returns a dataframe that excludes the dropped rows, as shown in the documentation.How can I store a copy of the dropped rows as a separate dataframe? Is:always guaranteed to return the same rows that dropna drops, assuming that dropna is called with subset=['list', 'of', 'columns'] ?
You can do this by indexing the original DataFrame by using the unary ~ (invert) operator to give the inverse of the NA free DataFrame.Another option would be to use the ufunc implementation of ~.
I was going to leave a comment, but figured I'd write an answer as it started getting fairly complicated.Start with the following data frame:And say we want to keep rows with Nans in the columns col2 and col3 One way to do this is the following: which is based on the answers from this postSo this gives us the rows that would be dropped if we dropped rows with Nans in the columns of interest. To keep the columns we can run the same code, but use a ~ to invert the selectionthis is equivalent to:Which we can test:You can of course test this on your own larger dataframes but should get the same answer.


Answer URL
https://docs.python.org/3/reference/expressions.html#unary-arithmetic-and-bitwise-operations
