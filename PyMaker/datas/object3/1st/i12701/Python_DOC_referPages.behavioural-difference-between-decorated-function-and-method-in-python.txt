Natural Text
I use the following workaround for "Pythonic static variables":It works just as supposed to. But when I move such a decorated function inside a class I get a strange change:I can not see what causes such behaviour. It seems to me that it has something to do with python descriptors protocol, all that bound vs unbound method stuff. Somehow the foo.var attribute is accessible but is not writable.Any help is appreciated.P.S. I understand that static function variables are essentially class variables and this decorator is unnecessary in the second case but the question is more for understanding the Python under the hood than to get any working solution.
a.foo doesn't return the actual function you defined; it returns a bound method of it, which wraps up the function and has self assigned toa.https://docs.python.org/3/howto/descriptor.html#functions-and-methodsThat guide is out of date a little, though, since unbound methods just return the function in Python 3.So, to access the attributes on the function, you need to go through A.foo (or a.foo.__func__)instead of a.foo. And this will only work in Python 3. In Python 2, I think A.foo.__func__ will work.


Answer URL
https://docs.python.org/3/howto/descriptor.html#functions-and-methods
