Natural Text
Dill is obviously a very useful module, and it seems as long as you manage the files carefully it is relatively safe. But I was put off by the statement:Thus dill is not intended to be secure against erroneously or maliciously constructed data. It is left to the user to decide whether the data they unpickle is from a trustworthy source.I read in in https://pypi.python.org/pypi/dill. It's left to the user to decide how to manage their files. If I understand correctly, once it has been pickled by dill, you can not easily find out what the original script will do without some special skill.MY QUESTION IS: although I don't see a warning, does a similar situation also exist for pickle? 
Dill is built on top of pickle, and the warnings apply just as much to pickle as they do to dill.Pickle uses a stack language to effectively execute arbitrary Python code. An attacker can sneak in instructions to open up a backport to your machine, for example. Don't ever use pickled data from untrusted sources.The documentation includes an explicit warning:Warning: The pickle module is not secure against erroneous or maliciously constructed data. Never unpickle data received from an untrusted or unauthenticated source.
YesBecause Pickle allows you to override the object serialization and deserialization, viaClasses can further influence how their instances are pickled; if the  class defines the method __getstate__(), it is called and the returned  object is pickled as the contents for the instance, instead of the  contents of the instance’s dictionary. If the __getstate__() method is  absent, the instance’s __dict__ is pickled as usual.Upon unpickling, if the class defines __setstate__(), it is called  with the unpickled state. In that case, there is no requirement for  the state object to be a dictionary. Otherwise, the pickled state must  be a dictionary and its items are assigned to the new instance’s  dictionary.Because these functions can execute arbitrary code at the user's permission level, it is relatively easy to write a malicious deserializer -- e.g. one that deletes all the files on your hard disk.
Although I don't see a warning, does a similar situation also exist for pickle? Always, always assume that just because someone doesn't state it's dangerous it is not safe to use something.That being said, Pickle docs do say the same:Warning The pickle module is not secure against erroneous or maliciously constructed data. Never unpickle data received from an untrusted or unauthenticated source. So yes, that security risk exists on pickle, too.To explain the background: pickle and dill restore the state of python objects. In CPython, the default python implementation, this means restoring PyObjects structs, which contain a length field. Modification of that, as an example, leads to funky effects and might have arbitrary effects on your python process' memory.By the way, even assuming that data is not malicious doesn't mean you can un-pickle or un-dill just about anything that comes e.g. from a different python version. So, to me, that question is a bit of theoretical one: If you need portable objects, you will have to implement a rock-solid serialization/deserialization mechanism that transports the data you need transported, and nothing more or less.


Answer URL
https://docs.python.org/3/library/pickle.html
