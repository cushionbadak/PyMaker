Natural Text
I have two lists of strings with different lengths: I want to have the following output:The closest I have gotten is this: andThe ultimate goal with this is to use the key, value pairs to insert the contained strings into a string in a separate for loop. I'm using Python 3.6.Pseudocode:
For the first part of your question, use dict.fromkeys() :output: For the second part, you actually don't need the first, use itertools.product:output:
You can use a dictionary-comprehension:This creates a dictionary with keys x from k and values v.
A dictionary comprehension would do:
You're using the wrong method altogether: zip is for corresponding pairs only, giving you (a z) (b y) (c x) and so on, without providing the other pairings.Is there some reason you need to generate this more than once?  If not, this is a job for itertools.product, not zip.Output:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.fromkeys
https://docs.python.org/3/library/itertools.html#itertools.product
