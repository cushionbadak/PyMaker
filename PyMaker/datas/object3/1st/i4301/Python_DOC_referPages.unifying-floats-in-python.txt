Natural Text
How can i have rounded floating point numbers to be of equal values (so that == returns True) no matter what operations get applied on them (i want the end rounded results to be the same float). I have the following function:but it still doesn't give me the same floating number. Is there a way to make a float (no matter how it has been calculated) to look always strictly the same, since they are being used in a dictionary as keys and any small change results in a KeyError.
I think if you can control the accuracy of your floats without jeopardizing your application you can do something like:instead of your code. Just round to the n-th digit of your float.for example:round(a, 1) == round(b, 1) = True  round(a, 2) == round(b, 2) = True  round(a, 3) == round(b, 3) = False  round(a, 4) == round(b, 4) = FalseThis answer also is really relevant.
OK, if you need straight decimal truncation (i.e. without rounding up when last decimal is above 5) and use the result as a key for dictionnaries, I would suggest to convert the whole thing into strings. For instance:Result:If you need to perform some computation on the values afterwards, it's easy to convert back with float(x)


Answer URL
https://docs.python.org/3/library/decimal.html?highlight=decimal#module-decimal
