Natural Text
I am learning python and I'm trying to run some terminal command lines using python; eg: speed test and ping. I am using functional programming as my method of programming. However, upon reading more and browsing more with functional programming based from docs.python.org1. I don't think that I am doing it the right way. My question is: Is it good for a function to not have an argument/parameters and just input the command/s directly inside it? And is it really a good option to use os.system or is there a better module to use?Here is the sample of my code.
Regarding your first question, there is nothing wrong with directly executing the commands in the function without using arguments/parameters in your function. You could always add a parameter in your function definition to specify the path for example so that you can call the function and execute the command using different directories:Regarding your second question, yes, there is a better module to use than os.system.There exists an upgraded version of os.system which is Subprocess, according to the official Python documentation (Python 3.6):The subprocess module allows you to spawn new processes, connect to  their input/output/error pipes, and obtain their return codes. This  module intends to replace several older modules and functions.The recommended approach to invoking subprocesses is to use the run() function for all use cases it can handle.Run the command described by args. Wait for command to complete, then return a CompletedProcess instanceThere is even a section on how to replace os.system with the new subprocess here:I suggest you read more about the new module in the official Python documentation of Subprocess here: https://docs.python.org/3.6/library/subprocess.html
Use the speedtest-cli API as detailed in the wiki(following code from the wiki)for pinging in python, see this question and many answers


Answer URL
https://docs.python.org/3/howto/functional.html
https://docs.python.org/3/library/subprocess.html#replacing-os-system
https://docs.python.org/3/library/subprocess.html#module-subprocess
