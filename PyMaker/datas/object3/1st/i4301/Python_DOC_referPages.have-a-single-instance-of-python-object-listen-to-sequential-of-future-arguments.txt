Natural Text
Suppose I have a python class with a large overheadSuppose I want to have it listen to output of another program, or multiple programs, and I have a way to maintain this steady stream of inputs. How do I not initiate a new instance every time given the overhead? Do I create a new script and package the class to maintain its 'live'? And if so, how do I capture the output of the programs if they cannot be in direct communication with the script I'm running without going through a middle storage like SQL or file?
Lacking specifics...  Use asyncio to setup listeners/watchers and register your object's methods as callbacks for when the data comes in - run the whole thing in an event loop.While that was easy to say and pretty abstract, I'm sure I would have a pretty steep learning curve to implement that, especially considering I'd want to implement some testing infrastructure.  But it seems pretty straightforward.
You can use a class variable:now overhead is only evaluated once when the class is defined, and you can use self.overhead within any class instances.


Answer URL
https://docs.python.org/3/library/asyncio.html
