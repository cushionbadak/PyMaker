Natural Text
I'd like to replace the attributes of a dataclass instance, analogous to namedtuple._replace(), i.e. making an altered copy of the original object:This returns:How can I mimic this functionality in dataclass objects?
Python dataclasses module has a public API for field replacement on dataclass instances, documented here. This feature is provided by a module level helper function:The usage differs from collections.namedtuple, where this functionality was provided via a method on the generated type (Side note: namedtuple._replace is documented/public.  This name choice was called a "regret" by the author - see link at end of answer).Example usage:For more background of the design, see the PyCon 2018 talk - Dataclasses: The code generator to end all code generators.  The replace API is discussed in depth, along with other design differences between namedtuple and dataclasses as well as some performance comparisons.
dataclass is just syntactic sugar for the automatic creation of a special __init__ method and a host of other "boilerplate" methods based on type-annotated attributes.Once the class is created, it is like any other, and its attributes can be overwritten and instances can be copied, e.g.Depending on what the attributes are, you may only require copy.copy.


Answer URL
https://docs.python.org/3/library/collections.html#collections.somenamedtuple._replace
