Natural Text
I am trying to create a Randomized Binary Search Tree. I am following the instructions (pseudo code) on this web page. Also I am doing this with TEAP (Tree Heap) technique of given the elements different priorities and thus making a balanced Binary Search Tree.The code is what follows:Now, when I execute this code I get an error message that says AttributeError: 'function' object has no attribute 'getLeft'. Alright, so I check the object that is passed to the function, and this seems to happen:The element, that is the nodeobject, is passed, eventually, to the rotate_left(self,u) method. Here the parameter u is the nodeobject. I "reach" inside within this nodeobject to get its leftchild. Then in turn I 'reach' within this object back to the Nodeobject, leftchildobjects so called parent. Now things get mixed up: The Parentobject is perverted in some way. It should be identical to the Nodeobject, but I cannot see what I am doing wrong. If I print the nodeobject and its leftchild and leftchildParent, you will notice the difference.Nodeobject <__main__.TreapNode object at 0x7fcd32c90898>Leftchildobject <__main__.TreapNode object at 0x7fcd32c908d0>Leftchildobjects parent (this should obviously be Nodeobject above) <bound method TreapNode.getParent of <__main__.TreapNode object at 0x7fcd32c90898>>What is happening in the last step?EDITHere is the method where something doesn't work. The if statement if p.getParent().getLeft() == u raises an error namely AttributeError: 'function' object has no attribute 'getLeft'. What exactly am I supposed to do not to raise this error, it looks fine to me(?)
getParent is a method, you have to call it to get the value.  It's worth noting that the getter/setter pattern doesn't really make sense in Python, and your code would be greatly simplified without it.EDIT:Look at the line p.addParent(u.getParent).  What's happening there is that you are assigning u.getParent to be the parent of p.  But u.getParent is a method.  So when you do p.getParent().getLeft(), that's equivalent to u.getParent.getLeft(), which doesn't work because that method does not have a getLeft method.As to getters and setters: what makes you think you need them?  Your method could just as easily be I also don't see a __eq__ method defined in your objects.  The default __eq__ method only returns True if the two objects are the same instance.  Since you use == in your code, that's probably not what you want.


Answer URL
https://docs.python.org/3/reference/datamodel.html
