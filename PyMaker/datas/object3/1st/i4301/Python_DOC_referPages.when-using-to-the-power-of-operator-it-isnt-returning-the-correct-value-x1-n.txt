Natural Text
This question already has an answer here:Is floating point math broken?                    28 answers                so I'm just doing a basic math problem and noticed that it is returning an abnormally long float rather than the clean answer I was looking for. I am trying to take the 5th root of 100,000. So in normal mathematical notation we would be doing 100,000^(1/5)=10; however, my code in python is returning 10.000000000000002. I've tried the following bits of code:AndI understand why this might not work perfectly for, say, 1,000^(1/3) because 1/3 is a never ending decimal; however, I would think it should work fine for 100,000 ^ (1/5). Not sure what I may be doing incorrectly. Any help or insight appreciated.
This is because of the floating point precision. The floats in Python are encode on 64 bits (on a 64 bits system). So, you have a maximum possible precision to represent number. If you want absolute precision, use fixed point with the Decimal module.For further explanation, see this [article].(https://docs.python.org/3/tutorial/floatingpoint.html)


Answer URL
https://docs.python.org/3/library/decimal.html
https://docs.python.org/3/tutorial/floatingpoint.html
