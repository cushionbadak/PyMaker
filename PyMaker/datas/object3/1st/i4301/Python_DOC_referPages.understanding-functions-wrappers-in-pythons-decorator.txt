Natural Text
I have these two examples of python decorators implementation. I'd like to know what is the difference between them regarding function wrapper implementation. They work as the same way? There is any context difference? What is the pythonic way to do a function wrapper? Example 1Example 2
First of all, we are looking at something a little bit more sophisticated than a decorator. A decorator is a function that takes a function as input and returns a function. Here, the top functions return decorators. So they are actually also decorators in the sense above, even though what is usually called the decorator is the first inner function. This definition scheme is often useful to create parametric decorators.With that out of the way, it seems you are specifically asking about functools.wraps. If so, I can only urge you to take a look at the doc https://docs.python.org/2/library/functools.html. Basically, it used to make the function returned by the decorator look the same as the decorated function i.e.: have the same name, docstrings, etc...


Answer URL
https://docs.python.org/3/library/functools.html#functools.wraps
