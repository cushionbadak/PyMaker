Natural Text
Given some arbitrary dictionary I've written a small routine to flatten it in the process of writing an answer to another question.It works, giving me what I want:And should work for just about any arbitrarily structured dictionary. Unfortunately, it does not:Now recursive_flatten(mydict) will run until I run out of stack space. I'm trying to figure out how to gracefully handle self-references (basically, ignore  or remove them). To complicate matters, self-references may occur for any sub-dictionary... not just the top level. How would I handle self-references elegantly? I can think of a mutable default argument, but there should be a better way... right? Pointers appreciated, thanks for reading. I welcome any other suggestions/improvements to recursive_flatten if you have them. 
One way you can do it using set and id. Note this solution also uses generators which means we can start using our flattened dict before the entire result is computedProgram demoWe can make a slight modification if you would like to see output for self-referential valuesNow the output of the program will be
I'm not sure what your definition of "graceful" is, but this can be done with some bookkeeping of what has been seen before in a set of object ids:Testing it out gives me what I expectOut:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
https://docs.python.org/3/library/functions.html#id
