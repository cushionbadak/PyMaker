Natural Text
Is there any way to create a class from a dynamic list of base classes?This works as expected:But I can't figure out how to assign these bases from a list of arbitrary length:gives:EDITOne suggested solution:Gives:
You can use the three-argument form of the type() constructor. Quoting the documentation, "With three arguments, return a new type object. This is essentially a dynamic form of the class statement."The problem with the above is that you lose the class syntax. This makes it difficult, for example, to add methods to Derived.You can keep the nice syntax of class declaration, and still modify the call to type() by using a metaclass.Here is a complete example, demonstrating the use of metaclass=, type(), and both regular and mix-in base classes.You can pass arbitrary keywords to the metaclass function. Consider this example:Finally, note that all of the above examples are tested with Python3. Here is a Python2 version:
For the sake of completeness, here is a solution based on Robáµ©'s if you are already using another metaclass (as I am):Python 3Python 2


Answer URL
https://docs.python.org/3/library/functions.html#type
https://docs.python.org/3/reference/datamodel.html#metaclasses
