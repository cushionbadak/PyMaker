Natural Text
I need to process linux file with multiple parts in the name like:abc.def.gh.bz2bz2 is the real extension, I need to get abc.def.ghCan anyone tell me an elegant way to do this in python?Thank you very much.
Use os.path.splitext:
os.path.splitext does just what you want. It returns a tuple with the filename and the extension. Use [0] to get just the filename.
This one uses rsplit():
.rfind() to find the last dot.e.g "abc.def.gh.bz2".rfind(".") would find the index of the last dotAny dot below that index would not often* be indicator of filetype. So you could then do e.g filename = "abc.def.gh.bz2"[:"abc.def.gh.bz2".rfind(".")] which should slice away the extension, making filename to be a string of abc.def.gh*Though, keep in mind that in some cases e.g tar.gz or gh.bz2 should perhaps be counted as filename extensions. So keep in mind that what is a filename is a rather fleetly subjectUsing import os.path.splitext is no guarantee at all to getting the "filename". and all it will do is slice the . extension from the string passed to it
All you need is the split function. So the full solution you need is 


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.splitext
