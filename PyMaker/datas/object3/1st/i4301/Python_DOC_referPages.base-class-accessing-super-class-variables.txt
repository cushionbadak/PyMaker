Natural Text
I'm using python 3.6.My goal is to make a base class that would be able to somehow access through polymorphism - one of the child class variables.I know it sounds somewhat 'not oop', so if what im describing can't be done with python - I would like to know what is the best practice for this case.Following wikipedia's example:Prints the following:I would like to achieve the exactly same output - usingvariable overloading (is that a thing?) instead of method overloading.The reason is that in the programm im working on - dog, cat, and every other kind of animal will talk exactly the same way - influenced only by the data member, such as:Prints the following:Clearly, this won't work since vocabulary will be empty, as it is in the base class.I tried to find a solution using super, e.g:But the result would be AttributeError: 'super' object has no attribute 'talk'Am I using super wrong?
There are a few unresolved issues in your code, but since python is so dynamic, it will find the subclass instance attribute through normal lookup:If you want something to enforce this requirement more explicitly in the code, you can make Animal an abstract base class and make an abstruct property named vocabulary:here is a live link
Python is dynamically typed. There is no need to somehow declare an "abstract data member" in Animal for Animal methods to refer to self.vocabulary; in fact, your attempts to declare an "abstract data member" are causing your problems.Just remove self.vocabulary = [], and talk will automatically find the subclass vocabulary when it tries to access self.vocabulary.


Answer URL
https://docs.python.org/3/library/functions.html#classmethod
