Natural Text
I am using a modified version of this scikit-image demo to create contours from the edges resulting from watershed segmentation of an image. In this result, each level has one contour only, made of row-column index pairs.It is easy to display contours as in the demo. But what I'd like to do is use the enumerate loop to append each vertex of each contour to a Pandas DataFrame, separating the row and column index, and then add a level/contour index in a separate column. To illustrate I will start with a small toy example where each contour has one index only. With this code:I get this DataFrame:A more representative example would be something like this:which gives me this DataFrame:I can export this to an Excel file using XlsxWriter, like this:To get this:But what I would really like is to split the contours so as to get something like this as a final Excel output:
I would use pandas concatenation. For reasonably-sized data, it's a matter of taste whether you build up a list per column (though you would need a second nested loop to allow for arbitrary-sized contours). For larger data, I think this method should be faster because it makes use of NumPy/pandas vectorization where possible.Here's an example:Side note: you don't need to create an ExcelWriter if you are only writing a single sheet.
You are almost at your goal, you just need to play around a bit:The enumerate method works as intended. When we enumerate an iterable python object, we get a 1-1 correlation between the object's elements and a "pointer" which ranges from 0 to len(iterable_object)-1.Have a look at this example from the documentations:Now one way to achieve what you are showing us here, would be to use the pointer generated from enumerate 2 times and split the contents of each test elements accordingly:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
