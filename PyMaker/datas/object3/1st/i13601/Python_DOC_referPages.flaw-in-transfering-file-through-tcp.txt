Natural Text
Server-side code. Opens a file, reads a bit of the file, sends that bit, till it is finishedClient-side code, creates the file receives a bit of it, writes it to the file until it is finished.I know that I have to use socket.shutdown(socket.SHUT_WR) to notify the reciever that the file has finished, but further sends are disallowed. Is there a way to bypass that? Maybe use another command like .shutdown()? I need to keep the connection for further sends/receives.When dealing with complex files, somehow I receive more than I should. I am sure than the client writes irrelevant previous data to the file, received with client.recv(1024). Is there any way to "throw away", or empty the data safely  before the file's data arrive?  .jpg file: http://i.stack.imgur.com/kjXBZ.png.txt file: http://i.imgur.com/fVNfx2R.png(I don't have enough reputation to post images directly, sorry for that.)
I can see two intentions behind the question. First, learning the things; second, implementing something that is cool and that works (usefull). Part of the learning process is getting the passive knowledge via reading the documentation -- this is for opening the file, and using the with construct.However, part of the learning is also learning a bigger picture, and learning how others (more capable) solve the things. This can be done via reading source codes of the existing solution, and trying to understand the code.I suggest to get the paramiko module (https://github.com/paramiko/paramiko.git), and to study sftp_client.py, sftp_server.py, and the demos/.True, it is much more complex than the few lines that you tried, but you may learn a lot, and the knowledge of how to use paramiko may be valuable for you in future. Also, you will find more questions to focus learning to. ;)


Answer URL
https://docs.python.org/3/library/functions.html#open
https://docs.python.org/3/reference/compound_stmts.html#the-with-statement
