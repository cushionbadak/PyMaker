Natural Text
I need to parse text files that include configuration for an application. The file contents are formatted like this:param1=val1  param2=val2  hash.param3={  subparam3=subval3  subparam4=subval4  }  ...I want to store this in a dictionary as:   I have this working fine using global variables shared between some functions but wanted to try again using a class as a learning exercise, which I've done now but it still feels clunky. Here's what I have currently:I'm looking for suggestions on how to do this in a cleaner, more Pythonic way. Thanks!
You could do it using the builtin evals function.
If you have control over configuration files, then better use more programming friendly data format like json, yaml (even xml).Otherwise, convert it into json if thats possible, maybe by replacing '=' by ':'(if it's that simple). In that case, you can easily use json.loads
You can create a function that calls itself recursively when it encounters an opening brace. The code below returns what you want from your sample data.


Answer URL
https://docs.python.org/3/library/functions.html#eval
