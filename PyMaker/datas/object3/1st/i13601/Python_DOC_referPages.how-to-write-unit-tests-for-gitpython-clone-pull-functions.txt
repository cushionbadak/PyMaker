Natural Text
I have a python project that is using GitPython to perform clone and pull functions against a remote Git repository.As a simple example:I want to be able to write a unit test for this function, but obviously this needs to reach out to an external system as it stands currently.I am curious if anyone has experience mocking up this external interaction, in a manner similar to using Mock to mock up HTTP calls. I'd like to be able to perform these tasks in a way that can be mocked at test time without needing to call an actual Git remote.How should I go about writing tests for this?EDIT: To be clearer about what I'm asking, I should mention I'm new to Mock and was struggling to understand how to Mock instances of these classes rather than the classes themselves. My question should have been phrased better - something along the lines of "how do I use Mock to set instance-specific properties like bare?"I have since learned much about Mock and have figured out how to do this, so I will provide an answer to my own question.
This seems to be a common result of an incomplete understanding of Mock, or the use of the Patch method.The first thing to do is read the "where to patch" section located on the Mock documentation. Armed with that information, you should be able to use the patch function to mock the GitPython objects used in the function above. These decorators would appear above your unit test function.In order to provide a return value for an instance of one of these mocked objects, you can use PropertyMock. Here's a full example of a unit test which leverages this:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
