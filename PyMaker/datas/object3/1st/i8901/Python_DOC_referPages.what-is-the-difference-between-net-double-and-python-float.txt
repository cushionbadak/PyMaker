Natural Text
In C#:produces 0.2. In python 3:produces 0.19999999999999996.My goal is to write fast code in C# that produces the same floating point results as python 3. I'm obviously interested in any and all float arithmetic, not just the example above.What is the most practical way to achieve that? Is there a library I can use?In addition, I would like to understand, what accounts for this difference. Both representations are 64 bit, and both seem to be based on IEEE. So what is different about these implementations that make them produce different results?References:15. Floating Point Arithmetic: Issues and LimitationsWhy are floating-point calculations so inaccurate?Real literalsWhat Every Computer Scientist Should Know About Floating-Point ArithmeticIEEE Floats and Python
As Jon Skeet points out in the comments, you need to compare the bit representations. Try this in C#:result: 3FC9999999999998.Now in python 3 (courtesy of this answer):result: 3fc9999999999998As you can see, the result is the same.


Answer URL
https://docs.python.org/3/tutorial/floatingpoint.html
https://docs.python.org/3/faq/design.html?highlight=float#why-are-floating-point-calculations-so-inaccurate
