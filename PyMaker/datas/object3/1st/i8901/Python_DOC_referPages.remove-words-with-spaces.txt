Natural Text
I want to find all the "phrases" in a list in remove them from the list, so that I have only words (without spaces) left. I'm making a hangman type game and want the computer to choose a random word. I'm new to Python and coding, so I'm happy to hear other suggestions for my code as well.
Sets are more efficient than lists. When lazily constructed like here, you can gain significant performance boost.
Use str.split(). It separates by both spaces and newlines by default.Read the file normally and make a list this way:That should be good.
with is used because file objects are content managers. The strange list-like syntax is a list comprehension, so it builds a list from the statements inside of the brackets. map is a function with takes in an iterable, applying a provided function to each item in the iterable, placing each transformed result into a new list*. filter is function which takes in an iterable, testing each item against the provided predicate, placing each item which evaluated to True into a new list*. lambda is used to define a function (with a specific signature) in-line.*: The actual return types are generators, which function like iterators so they can still be used with for loops.
I am not sure if I understand you correctly, but I guess the split() method is something for you, like: 
As mentioned, the    .split()Method could be a solution. Also, the NLTK module might be useful for future language processing tasks. Hope this helps!


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functions.html#filter
