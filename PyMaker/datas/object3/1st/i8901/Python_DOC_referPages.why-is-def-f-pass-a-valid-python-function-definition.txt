Natural Text
I writing some Python code in an interactive console when I accidentally typedonly to find that, to my surprise, the interpreter wouldn't complain. I actually meant to have two dummy arguments, but why does the interpreter accept the function if the second parameter does not have a name?
Taking a look at the function definition syntax you can see that the list of parameters of a function has the following syntax:Which means that, after you are done with positional parameters, you can put a comma and go on with the named or starred parameters (parameter_list_starargs); but actually having those after that last comma is optional, and so it is legal to have one extra comma at the end of the list of positional parameters. Furthermore, looking at the syntax of parameter_list_starargs:It can be seen that it is also allowed to have one extra comma after the last named parameter.As a side syntactic note, the general syntax of a function declaration is:Which, among other things, indicates that the annotation of a function can be any expression, rendering in fact as valid code things like:
It is quite a general thing for python to accept trailing commas, but they are not interpreted as indicating another "anonymous" item to follow. They are just droppedAnd, of course, for the one element tuple the trailing comma is actually required.So it is not only function definitions (and calls for that matter) that handle trailing commas gracefully.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#function-definitions
