Natural Text
I want to understand how this piece of code is working when we don't have any reference to printScore function, yet we are passing it as an argument to processGame function which is called. 
Here processGame is being called with arguments (5,printScore).Python creates a second reference to the function object called "callback" in the local function namespace.Therefore now score has value 5 and callback refers to printScore.In the body printScore is invoked by callback() with argument 5.:P
Functions in Python are first-class objects. A function object, and a variable holding a reference to it are created by the def statement. There's no need to "create a reference" to a function, it's name is a reference already.You can learn more about the different kinds of objects in Python in the Data model chapter of the Python language reference. The parenthetical comment in its first paragraph is very relevant to your question:Objects are Python’s abstraction for data. All data in a Python program is represented by objects or by relations between objects. (In a sense, and in conformance to Von Neumann’s model of a “stored program computer,” code is also represented by objects.)The statement "code is also represented by objects" is speaking about functions. (It probably also refers to code objects, but you usually don't need to interact with those directly, since they're wrapped in function objects.)


Answer URL
https://docs.python.org/3/reference/datamodel.html
