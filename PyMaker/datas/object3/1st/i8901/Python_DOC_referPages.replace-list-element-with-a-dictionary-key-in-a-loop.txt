Natural Text
I'm working on a function that coverts an integer to hexidecimal.  There's more work to be done with two's compliment and handling negatives but right now I'm just working on getting the core logic to work.  Here is what I have:I want the output to look like this for this example:I'm trying to use a loop to iterate through rlist and check to see if an element in rlist matches a key in symdict.  If it does I want to swap the list element for the dictionary value that it matched.  So if say 10 is found in the list, it will be found in the dictionary and that element in the list will be changed to "A" the matching dict value.  I don't know where to go from here 
You could use enumerate to iterate over (index, value) tuples. For each value you could use dict.get to either get value from symdict or use default value passed as a second parameter. Then just assign whatever the get returns to the index in rlist:Note that I've changed rlist to contain integers instead of strings since the keys in symdict are integers as well.In case you just want convert int to hexadecimal representation you can use hex builtin:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.get
