Natural Text
Working on a new version of the library I change one of the default arguments of several functions. So I'd like to add a temporary warning that occurs when user calls a function without explicitly specified parameters (so function is called with its defaults).It could be easily done just by adding the warning function and calling it inside each of base functions:However it would be more convenient to do it using decorator (for code readability). So I've implemented something like this:That works as expected when I call my_function without formatting parameter and if formatting is specified as a keyword parameter.But how to include the possibility that my_function can be called with only positional parameters? Calling decorated my_function('arg1', 'arg2', 'some_format') will produce an TypeError due to duplication of formatting parameter.Note: I cannot assume that the formatting is always the 3rd parameter as I need to decorate different functions. I also cannot change the parameters order to preserve backward compatibility.
In python 3, you can use the inspect module's Signature.bind_partial:


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.Signature.bind_partial
