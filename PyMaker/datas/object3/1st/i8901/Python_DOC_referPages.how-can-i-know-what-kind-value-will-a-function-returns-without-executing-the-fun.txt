Natural Text
This is my decorator. I want any function that has this decorator to be checked if _kwargs["_dir_abs"] is an absolute path or not. If not I want to fault the _function by returning False if the decorated _function returns bool. And returning None if the _function returns anything other than bool.The thing is _function is a folder operation (deleting, moving, naming, ...) hence I cannot just try it to see what it returns.Is there anyway I can check what value _function will be returned without actually executing it? Is there any workaround?
You can try annotating your function with return type.Now you can get return type using __annotations__ attribute.This does however require you to annotate return type of all functions which return type you want to check.To be honest, I also don't know when it was added to Python, but it works for me with Python 3.5.If you are hardcore programmer who has plenty of time, I think you can use ast module to check bytecode of function for return statements and guess types. I don't recommend it though.
No, you cannot do this by definition. This is how dynamic languages work; you cannot know what type will be returned until you execute the function.


Answer URL
https://docs.python.org/3/library/inspect.html#types-and-members
https://docs.python.org/3/library/ast.html
