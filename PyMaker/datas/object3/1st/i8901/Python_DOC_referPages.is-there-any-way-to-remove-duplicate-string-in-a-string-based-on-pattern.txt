Natural Text
I'm working with files with this format:As you can see, every SPEC line is different, except two where number of the string spectrum is repeated. What I'd like to do is take every chunk of information between the pattern =Cluster= and check if there are lines with spectrum value repeated. In case there are several lines repeated, removes all of them except one.The output file should be like this:I was using groupby from itertools module. I assume my input file is called f_input.txt and the output file is called new_file.txt, but this script remove the words SPEC as well... And I don't know what I can change in order to don't do this. EDIT: New conditional. Sometimes part of the line number can change, for example: As you can see, the last line has changed the part PRDnumber. One solution would be check the spectrum number, and remove the line based in repeated spectrum. This would be a solution: 
Shortest solution in Python :poutput:(if you are on Windows, awk can be installed easily with Gow.)
This is how I would do it.This is not a groupby solution but a solution that you can easily follow and debug if you have to. As you mentioned in the comments, this file of yours is 16GB big and loading it to memory is probably not the best idea..EDIT: "Each cluster has a specific spectrum. It is not possible to have one spec in one cluster and the same in another"
This will open your file containing your original code as well as a new file that will output the unique lines per group.seen is a set and is great for seeing if something exists within it already.data is a list and will keep track of the iterations of "=Cluster=" groups.Then you simply review each line of each of the groups (designated as i within data).If the line does not exist within seen it is added.EDIT: Moved seen=set() to within the for i in data to reset the set each time otherwise "=Cluster=" would always exist and would not print for each group within data.
The solution using re.search() function and custom spectrums set object for keeping only unique spectrum numbers:


Answer URL
https://docs.python.org/3/library/re.html#re.search
