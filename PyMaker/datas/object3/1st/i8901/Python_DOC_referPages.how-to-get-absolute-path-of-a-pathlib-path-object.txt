Natural Text
Making a path object with pathlib module like:The p object will point to some file in the filesystem, since I can do for example p.read_text().How can I get the absolute path of the p object in a string?Appears that I can use for example os.path.abspath(p) to get the absolute path, but it awkward to use an os.path method, since I assume that pathlib should be a replacement for os.path.
You're looking for the method .absolute, if my understanding is correct, who's documentation states:With a test file on my system this returns:This method seems to be a new, and still, undocumented addition to Path and Path inheritting objects.Created an issue to document this.
Use resolve()Simply use Path.resolve() like this:This makes your path absolute and replaces all relative parts with absolute parts.Avoid absolute()You should not use absolute() (which does nearly the same) because it's not documented, untested, and considered for removal.  (See the discussion in the bug report created by @Jim Fasarakis Hilliard).The difference is that absolute() does not replace the relative parts of the path, and it never raises FileNotFoundError.Beware FileNotFoundErrorOn Python versions predating v3.6, resolve() does raise a FileNotFoundError if the path is not present on disk.So if there's any risk to that, either check beforhand with p.exists() or try/catch the error.If you're dealing with a path that's not on disk to begin with, and you're not on Python 3.6+, it's best to revert to os.path.abspath(str(p)).From 3.6 on, resolve() only raises FileNotFoundError if you use the strict argument.But beware, using strict makes your code incompatible with Python versions predating 3.6 since those don't accept the that argument.
You can use the .absolute() function (which, oddly, doesn't seem to be documented) to make your path absolute, then str to convert it to a string:
If you simply want the path and do note want to check if the file exists, you can doas document in the Operations section.


Answer URL
https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve
https://docs.python.org/3/library/pathlib.html#operators
