Natural Text
I'm trying to sort a fasta file by alphabetical order of the sequences in the file (not the ID of the sequences). The fasta file contains over a 200 sequences and I'm trying to find duplicates (by duplicates I mean almost same protein sequence, but not same ID) within a bit master (using a python code).So I wanted to make a dictionary out of the fasta file and then sort dictionary's values.The code I am trying to use is the following :I keep getting this message error :I also tried to look for how to fin this error but there ares't much information about this, and few of the informations I read where apparently saying that the length of sequences stored in dictionary dictionary may be a problem?... If so how to sort the fasta file without SeqIO?
As mata said, you need to pass a key function to sorted:returns:Now, for what you're trying to accomplish. If you've sorted the 200 sequences alphabetically, you still need to scan the list manually to find the near duplicates. That is error prone, so better write some code for that as well.In computer science, edit distance is a way of quantifying how dissimilar two strings (e.g., words) are to one another by counting the minimum number of operations required to transform one string into the other.There are several implementations of this algorithm available. We'll take the one from this answer.Now we need to decide on a treshold of how dissimilar (how many insertions/delations/substituons) two sequences may be. Then we pairwise compare every two sequences in our FASTA file:This gives:
Here is another way to eliminate duplicates from a fasta file based on bioawk and fastq-tools (and also awk and uniq which are usually present in any UNIX-like command-line environment):bioawk is a modified version of awk that facilitates the manipulation of some common bioinformatics formats.The first line converts the data to fastq format because that's what fastq-sort can work with. The -c fastx option tells bioawk to parse the data as fasta or fastq. This defines a $name and a $seq field that can be used in the command. We use the $seq field as a dummy quality to get valid fastq format.The second line tells fastq-sort (from fastq-tools) to sort the data by sequence (option -s).The third line uses bioawk to extract the name and sequence and put them as two tab-separated fields, to have the relevant information in one line per record.The fourth line uses uniq to eliminate duplicates ignoring the first field when comparing successive lines (if I understood properly the meaning of -f option I just discovered). If my understanding of uniq is correct, the name of the fused records will be that of the first record in a same-sequence series.The fifth line uses awk to reformat the tab-separated fields into fasta.I tested this approach on some of my data and it seemed to work.


Answer URL
https://docs.python.org/3/howto/sorting.html#key-functions
