Natural Text
I have a large array and a function that returns index lists into the array, i.e.,A typical case is that the range is the entire array, range(n). Unfortunately, a[range(n)] scales with n while a[:] is of course constant-time. It's a pity that one cannot return : from get_idx.What can I return from get_idx to use as an index for the entire array?
NumPy has a helper np.s_[] which can be used to construct slice and Ellipsis objects:In general, a[np.s_[ <stuff> ]] is exactly the same as a[ <stuff> ].
Have a look at slicewill return [0, 1]UPDATEAnd for your need get_x function should beUpdateas @Eric correctly noted it's better to pass None instead of n.So function would be:
You can use Ellipsis (translates to '...')Edit:I feel I should mention one caveat: If you are sure this will only be used on 1d arrays, it's a perfectly fine and simple solution. However, in a public interface I wouldn't recommend it because it doesn't generalise correctly if a user uses the output of getidx for indexing a multi dimensional array.For example A[getidx(k), ...] won't be safe anymore and the semantics of A[getidx(k), someslice] will be inconsistent if A has three or more dims.That said, slice(None) isn't perfect in this respect either, for exammple A[getidx(k), getidx(k)] will behave inconsistently.arange(n) looks like it's always giving the correct behaviour, but of course it's wasteful in most cases.


Answer URL
https://docs.python.org/3/library/functions.html#slice
