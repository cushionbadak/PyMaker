Natural Text
As you can see down here I have a "main" dictionary where each value is a dict by itself. Now I want to compare the main dictonaries'(can be more than 2) "name" values to each other, so for example "DE, Stuttgart" with "DE, Dresden" and X and have only unique "name" values left. I know of the x for x in y if x['key'] != None structure for example, but to my knowledge I can only use this to filter single dictionaries.Input:output:
You could collect the names to Counter and then reconstruct the original dict while preserving only those sub dicts which have unique name:Output:
This will output the desired dict, for any number of locations. Note that @niemmi's solution is much more efficient :
Let's say d1 and d2 are your two dictionaries. You can get the list of keys of d1 that are not in d2 with :


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
