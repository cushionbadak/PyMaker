Natural Text
Using numpy as an example, I can't seem to realize what the benefit of doing an import like this would accomplish:after the import finishes, numpy is available as a name, equivalent to if you imported it directly:in both cases, you can access the submodule lib only with dotted access:is there a case where doing import numpy.lib would be beneficial?
SummaryThe actual effect depends on how the module is implemented.  The outer module  might or might not import sub-packages.  See the tutorial section on packages for details.Example Directory StructureFor example, here is a possible directory structureCase where outer/__init__.py is emptyCase where outer/__init__.py loads the submoduleIf the outer/__init__.py file contains from . import inner, then you get:Specific case from NumPyThe numpy module matches the second case, so import numpy and import numpy.lib have the same effect.  Here is an except from numpy's __init__.py file:ConclusionIn the specific case of numpy, import numpy and import numpy.lib have the exactly the same effect.Hope that clears it up for you :-)


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages
