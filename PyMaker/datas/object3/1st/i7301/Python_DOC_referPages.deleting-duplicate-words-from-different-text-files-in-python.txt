Natural Text
I'm trying to delete same words comparing two different files.file_list.txt and name.txt are files.What I want to do is to compare two files and delete a word in file_list.txtif the same word is in name.txtFor instance,the file_list.txt has lines belowand name.txt has lines belowthen the result should be like this.or that also would be a good way if lines would be deleted so only third and fourth lines remains like this.I tried to find a solution here in this site but this code is working only whenmatching a line, not a word.
Since you already have a set of words to exclude, you could for example form a set of parts of the paths and check if they intersect:This is a Python 3 answer, since you've included the relevant tag. To use pathlib in Python 2, you could use the pathlib2 backports package. Alternatively you could split using os.sep:Note that this will only remove exact matches, not for example:givenIf you need a more generic substring match, consult the other answers that use string membership tests.
I would switch the the order, and create a bag of words that are "bad words". Then, I'd check, for each of my lines, if it contains a bad word.This is my suggested modification to your code:
Your condition if line.rstrip() not in exclude is testing whether the entire line is in the list of excluded words. A simple fix would be to replace this with if any(word in line for word in exclude)If you are guaranteed to have the same format for all lines as in the list you provided, then you could extract the text after the final \ and check if it is in your excluded list, which will be more efficient:


Answer URL
https://docs.python.org/3/library/stdtypes.html#set.intersection
https://docs.python.org/3/library/os.html#os.sep
https://docs.python.org/3/reference/expressions.html#membership-test-details
