Natural Text
Consider the following code:The output of this is:The first eval uses the iterator a in a plain eval, and it works.The second eval uses a static variable b when evaluating a generator, and it works. The third eval combines the two ideas - it uses an iterator variable when evaluating a generator, and it fails to detect the variable and raises an error. Why does this happen?
A genexp, like (x == a for x in [0]), creates its own scope.So do list comprehensions, at least in Python 3.Nested scopes inside an eval don't see variables from the locals used for the eval.That means that in this line:The a lookup inside the eval happens in a nested scope, so it doesn't see the a variable from the local variables of the scope where the eval occurred.


Answer URL
https://docs.python.org/3/library/functions.html#exec
