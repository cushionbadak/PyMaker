Natural Text
Consider the following directory structure,Contents of the files and python version are,Now in an interactive session I get the following behavior,Why is parent.mod2 accessible when I had only imported mod1 in the parent/__int__.py file ? (is it a bug?)I understand that AttributeError with parent.mod3 occurs because only the modules imported in the __init__.py file are accessible when plainly importing the parent using import parent syntax.
Whenever you import a module, Python creates a module object and stores it in the sys.modules dictionary. Subsequent imports of that same module will reuse the module object from sys.modules. Additionally, each time you import a submodule, the attribute is added to the parent module object.There's one instance of sys.modules for a given Python process, and therefore in general there's only one instance of every module per Python process. It means that if you have access to a module object, you also have access to its submodules that have been imported anywhere within the current process.In this particular case, import package runs package/__init__.py, which imports package.mod1, which imports package.mod2. As a result, mod1 and mod2 are added to the "shared" parent module object, and you can access them.


Answer URL
https://docs.python.org/3/library/sys.html#sys.modules
