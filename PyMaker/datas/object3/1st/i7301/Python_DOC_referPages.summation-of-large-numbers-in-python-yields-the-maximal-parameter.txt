Natural Text
In my program I use numpy to get number's exponents, then I use the sum function to summarize them.I've noticed that summarizing those large numbers, with or without numpy, results in the largest parameter being returned, unchanged.The same with just python:Is this a problem with approximation? Should I use a larger datatype to represent the numbers?How can I get a more accurate result for these kind of calculations?
1.57171938e+81 is a number with 81 digits, of which you only enter the first 9. 1.60451506e+56 is a much much much smaller number, with only 56 digits.What kind of answer are you expecting? The first utterly dwarfs the second. If you want something of a similar precision to your original numbers (and that's what you get using floats), then the answer is simply correct.You could use ints:But how useful that is is up to you.
You could use the decimal standard library:Output:You could convert it back to a float afterwards, but this will cause the same problem as before.Output:Note that if you store Decimals in your numpy arrays, you will lose fast vectorized operations, as numpy does not recognize Decimal objects. Though it does work:Output:
It does seem to be a problem with approximation:You can get arount this by casting to int:


Answer URL
https://docs.python.org/3/library/decimal.html
