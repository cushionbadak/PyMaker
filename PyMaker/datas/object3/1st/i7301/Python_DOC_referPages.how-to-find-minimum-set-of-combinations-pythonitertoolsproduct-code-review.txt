Natural Text
How can I improve this code, without computing all possible combinations returned by itertools.product function.Is there any other solutions to do it efficiently.This is what I have tried: output:
I believe I have it. You can take advantage of the fact that itertools.product yields its tuples in a deterministic way; you know beforehand when all the singletons would be yielded. You just have to calculate when that will happen.In this case, the last singleton would be {3} because 3 appears on the last position of the first list (i call that pivot in the code). To get its singleton you have to get all others first and that takes 3 * 3 yields for each. That is 9 + 9 = 18. Now for the last, you just need to find its index in the remaining lists (in a 1-index based system) and multiply those together.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
