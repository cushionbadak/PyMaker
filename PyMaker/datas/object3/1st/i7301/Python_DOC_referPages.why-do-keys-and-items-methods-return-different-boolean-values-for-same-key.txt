Natural Text
In python 3.6, when checking whether a key exists in a dictionary the keys() method returns True, while the items() method returns False for the same key. Why is that the case?
items() contains tuples, key-value pairs:Your key is not such a tuple. It may be contained in one of the tuples, but in does not test for containment recursively.Either test for the correct key-value tuple:or if you can't get access to just the keys() dictionary view, use the any() function to test each pair individually (iteration is halted early when a match is found):orOn a separate note, if all you are doing is testing for a key, then just use key in dictionary. There is no need to create a separate dictionary view over the keys for that case; it's just a waste of Python cycles and memory as containment testing against the dictionary achieves the exact same result.
This is because items() returns a list of key and value pairs.
dict.keys() will return a list but dict.items() will return you list of tuples in key,value pair so it would not match. for example :name is not equal to ('name': 'Zophie')Hope you get the point.
Of course they are different.In your spam variable --> spam = {'name': 'Zophie', 'age': 7}:name, and age are the Keys.'name': 'Zophie' and 'age': 7, the items.


Answer URL
https://docs.python.org/3/library/functions.html#any
