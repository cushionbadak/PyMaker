Natural Text
This question already has an answer here:Accessing the index in 'for' loops?                    23 answers                How to find all occurrences of an element in a list?                    14 answers                Finding the indices of matching elements in list in Python                    3 answers                Below is the code. Why is it behaving so? What is the alternative?Output is:Why is it not incrementing ?. How do I resolve. I need increments of index ? Instead of index do we have something like position of X
Using that index call is very costly in each iteration, when you have it for free if you just use enumerate. Furthermore, please be aware about how index works, in that you will always only ever get the first time the value comes up.In terms of cost of how your implementation, and this answer works. You can't really compare the functionality of index, with the functionality of enumerate. Your first list is going to be O(n), naturally because you are simply iterating through the entirety of your list. However, with each call to index, that in itself is going to be O(n). That is huge in terms of inefficiency. The enumerate iterates through your list once, providing a tuple result where the first value represents your index, and the second is simply the next value in your list, thus giving you just a O(n) complexity. Your print statement, therefore in the solution I am providing bears no cost, because you are simply just outputting the value you already have without any extra computation required. 


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
