Natural Text
ast.literal_eval works well for evaluating python's inbuilt types:It fails for custom class objects:But, eval works just fine:How can I combine the safety of ast.literal_eval with the functionality of eval for custom objects?I've looked at this but this pertains to variables that already exist.
if your data was like this -literal_eval would have worked. Because it would think that Foo(1) and others are strings and would recognize them.As far as I know, this cannot be used as argument in literal_eval.From docs, Safely evaluate an expression node or a string containing a Python literal or container display. The string or node provided may only consist of the following Python literal structures: strings, bytes, numbers, tuples, lists, dicts, sets, booleans, and None.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
