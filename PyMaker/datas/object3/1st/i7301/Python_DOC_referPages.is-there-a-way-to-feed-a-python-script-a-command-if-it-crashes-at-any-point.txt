Natural Text
I am familiar with try, except. However I'm looking for a more general method that just runs a simple command before the script stops running after any error is raised.For example if I'm using xlsxwriter:
This is what context managers are for (the with statement). The Workbook class actually provides what is necessary.It is as simple asSee Workbook documentationIn case you want to do other things as well, the try ... except ... else ... finally statement(s) are what you need. See documentation
For the specific case of calling a close method (where the object doesn't support the context management protocol natively, so you can't use it bare in a with statement), you can improve a bit on try/finally by using contextlib.closing to wrap it such that it's with statement compatible, replacing your code:with (adding import contextlib to the top of your file):That calls close unconditionally when the block is exited, whether by exception, return, or just naturally leaving the block without error or returning (which is usually what you want). If for some reason you only want to call it when you have an exception, you can do:That will only close when an exception occurs, and will reraise the exception (because continuing silently in this scenario is probably wrong).
Well. In general this is solved by:


Answer URL
https://docs.python.org/3/tutorial/errors.html
https://docs.python.org/3/library/contextlib.html#contextlib.closing
