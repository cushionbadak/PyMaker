Natural Text
I have two lists:How do I compare the lists and only return the points at which listA was greater than listB into a third list listC while preserving the indices so that the result looks like:After all that, there is a fourth list listD:and I am trying to collate it with listC so that I end up with list C & D matching in terms of indices:Final Result:I was looking into list comprehension as I was told it would help, but I'm not really sure how to apply what I've read.
This is a perfect use-case for itertools.compress:Get a new list of booleans where True means item in listA was greater than corresponding item in listB.Now we filter listA and listD based on bools using compress.
I'd not use a list comprehension here; you are building two lists, not one, and that's just easier with a regular for loop:Using zip() you can iterate over lists in parallel, removing the need to track indices altogether.You can still use a comprehension here, but then you'd build a sequence with (a, d) values, and then use zip() again to split that result into two separate lists:This however becomes harder to follow and explain, and you actually have tuples, not lists, in that case (depending on your usecase you'd have to convert those to lists again).Demo:
Get the result by list comprehension:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.compress
