Natural Text
I have two line that looks something likeTo parse, I used a command like ("^Content-Type:\s(.*)") to capture the (text/plain) portion. On the other hand, I used regex like ("^Content-Type:\s(.*)[;]") to capture the same string (text/plain). Is there any way that I can use one that will work in both cases? I am using python and I am new to regex. thanks
You can just modify your Regex a bit:Here is a working link:  Regex101
It looks like you are looking for the ? quantifier (6th down in the list in the docs). It will allow the trailing portion to appear once or not at all, covering both cases:Here are the changes I would recommend:Do not capture . in your capture group. * is greedy, so you will get undesirable characters sometimes: e.g. if you have two semicolons in the string, the first one will get captured. Instead, capture [^;], which means "anything but semicolons".Change the quantifier in the main catpure group from * to +. You want at least one character to match, which is what + expresses.I would also add the + quantifier to the preceding \s just to be safe. It will allow you to match multiple spaces, should that ever happen.Make the part that matches the ; into a non-capturing group (a group starting with (?:. This allows you to apply the ? quantifier to it.As @RudyTheHunter indirectly points out, if you use plain re.match, you don't need the leading ^ or the trailing portion after the semicolon at all since match looks in the beginning of the string.You can therefore use just
As I've stated in the comment, regex is an overkill for such a simple match, so for the sake of completeness:It's more verbose but, in theory, it should be faster.


Answer URL
https://docs.python.org/3/library/re.html#regular-expression-syntax
https://docs.python.org/3/library/re.html#re.match
