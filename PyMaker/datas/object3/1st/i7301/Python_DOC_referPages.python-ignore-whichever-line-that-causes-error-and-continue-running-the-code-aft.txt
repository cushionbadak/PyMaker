Natural Text
I understand the try/except method. What I'm trying to do is:In the above code, when the error is raised at do_something_else(), the error is handled but then the try statement is exited. What I want is for python to continue whatever code that is after the line that causes the error. Assuming that an error can happen anywhere in the try statement so I can't just wrap the try/except around do_something_else() itself, is there a way to do this in python?
What you want to do (try with restart) is not possible in Python. Lisp can do it (http://www.gigamonkeys.com/book/beyond-exception-handling-conditions-and-restarts.html), and you can implement it in Scheme using call/cc.
Just put the code that you want to do after the possible exception after the except.  You may want to use finally (see https://docs.python.org/3/tutorial/errors.html for the documentation):if continue_doing_something_else() can also throw exceptions, then put that in a try/except too:as a general rule, your exception handling should be kept as small in scope as possible while remaining sensible, consider excepting only the 'expected' exceptions and not all of them (e.g. except OSError: when attempting to open files)


Answer URL
https://docs.python.org/3/tutorial/errors.html
