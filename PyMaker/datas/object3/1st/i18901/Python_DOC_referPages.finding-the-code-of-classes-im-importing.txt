Natural Text
In a shell executed by python -v, I put in from gi.repository import Peas and it gave me the directory of the module: Now I went into this directory expecting to find subdirectoriessuch as Peas, RB, Gtk (which I can import) etc, but what's actually in it are That's it. How is Python importing Peas from this module when it has only an __init__.py file? How can I take a look at the code inside the Peas module?Obviously I'm not understanding all this well. What's the explanation?EDIT: Okay so this is very related to my earlier problem:Strange module auto complete behavior in IPythonSo gi.repository is generated at import time since it's a dynamic binding. Makes sense.But if I'm importing Peas from gi.repository, there still should be a way to check out what code is being imported right? Since I want to use PeasActivable interface. 
Because the repository directory has a __init__.py file, gi.repository is a package. This means that you can import from it and the package “root” will be the __init__ file. If you had a file named module.py in the same directory, you could also import from gi.repository.module.So your names Peas, RB and Gtk should be all defined within the __init__.py file.


Answer URL
