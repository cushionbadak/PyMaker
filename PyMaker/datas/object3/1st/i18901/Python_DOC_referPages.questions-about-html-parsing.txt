Natural Text
This is a program we've written for html parsing.It works perfectly.We found a demo program on the net, and we modified it for our needs.But we don't understand how it works. Our questions:why does the class HTMLparser have to be called in the first place?why is that function handle_data being called, and how does that function work?why is global y necessary despite y being in the class itself?
It is not being called; you are inheriting from it instead; MyHTMLParser is called to create an instance of the class.handle_data() is called by the HTMLParser code; your subclass overrides it to handle textual data in the document. By calling .feed() on your MyHTMLParser instance the process is started.See the html.parser module documentation for the full API. You could try to understand the full html.parser source code if you really want to know how this all works.The example you found is doing things quite wrong, actually. The global y refers to a different y variable, one that lives in the module scope. That line shows that the original developer of that example did not understand what they were doing. The global y line is not the only example; the code could be made much more Pythonic in other ways.The y definition in the class scope otherwise unused. The handle_data() method should refer to self.y instead:This stores the element text in self.y for each element, and if a next element matches your str1 global variable, then it is printed as well, together with the professor name.You may want to look into using BeautifulSoup instead for a more intuitive HTML parser API.


Answer URL
