Natural Text
If I want to use the results of argparse.ArgumentParser(), which is a Namespace object, with a method that expects a dictionary or mapping-like object (see collections.Mapping), what is the right way to do it?Is it proper to "reach into" an object and use its __dict__ property?I would think the answer is no: __dict__ smells like a convention for implementation, but not for an interface, the way __getattribute__ or __setattr__ or __contains__ seem to be.
You can access the namespace's dictionary with vars():You can modify the dictionary directly if you wish:Yes, it is okay to access the __dict__ attribute.  It is a well-defined, tested, and guaranteed behavior.
Straight from the horse's mouth:If you prefer to have dict-like view of the attributes, you can use the standard Python idiom, vars():â€” The Python Standard Library, 16.4.4.6. The Namespace object
Is it proper to "reach into" an object and use its dict property?In general, I would say "no". However Namespace has struck me as over-engineered, possibly from when classes couldn't inherit from built-in types. On the other hand, Namespace does present a task-oriented approach to argparse, and I can't think of a situation that would call for grabbing the __dict__, but the limits of my imagination are not the same as yours.


Answer URL
https://docs.python.org/3/library/argparse.html#the-namespace-object
https://docs.python.org/3/library/functions.html#vars
https://docs.python.org/3/library/argparse.html#the-namespace-object
