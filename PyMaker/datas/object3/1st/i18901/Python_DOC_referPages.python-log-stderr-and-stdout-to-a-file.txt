Natural Text
This question already has an answer here:Redirect stdout to a file in Python?                    11 answers                Just wanted to pick your brains on this.  I have several subprocesses running and I wanted to print the stderr and stdout to a file.  I've done this so far:Is this the best way to do this.  If I have more than one process, I guess its going to re-write the log files, so that could be a problem.  Appreciate some advice here. Thanks
I'm pretty sure that you can provide your own file instances as keywords to subprocess.Popen.Here's the portion of the subprocess.Popen documents that matters:stdin, stdout and stderr specify the executed program’s standard input, standard output and standard error file handles, respectively. Valid values are PIPE, DEVNULL, an existing file descriptor (a positive integer), an existing file object, and None. PIPE indicates that a new pipe to the child should be created. DEVNULL indicates that the special file os.devnull will be used. With the default settings of None, no redirection will occur; the child’s file handles will be inherited from the parent. Additionally, stderr can be STDOUT, which indicates that the stderr data from the applications should be captured into the same file handle as for stdout.


Answer URL
