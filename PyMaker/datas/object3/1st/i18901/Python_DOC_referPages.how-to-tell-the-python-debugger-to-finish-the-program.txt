Natural Text
I have recently come across a VERY cool Python module called pdb. For those that are not familiar with it, it is super easy to use and gives you access to pretty much anything within scope at the time. All you have to do to use it is import pdb and put this line in your program where you want to set the breakpoint:It works very much like gdb, and I wouldnt be surprised if it was built on top to some extent. Anyway, what I would like to know:Say I have stopped at my first breakpoint, evaluated some things, and now I want to finish my program. How can I tell the debugger to finish the program, WITHOUT stopping at any more breakpoints? There are some commands, like continue, step, and next, but none of these seem to run the rest of the program uninterrupted. Anyone have some experience with this or am I asking for something that doesnt exist? Thanks!
I would just override pdb.set_trace function, delete all breakpoints and continueThe good thing is that you can do monkey patching in the debugger.it stopped for the first timewhen i want to skip everything i just replace the function
the command is cl or clear.cl(ear) [filename:lineno | bpnumber [bpnumber ...]]With a filename:lineno argument, clear all the breakpoints at this line. With a space separated list of breakpoint numbers, clear those breakpoints. Without argument, clear all breaks (but first ask confirmation).


Answer URL
