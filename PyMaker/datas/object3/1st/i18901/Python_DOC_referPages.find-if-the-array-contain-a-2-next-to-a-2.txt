Natural Text
I am stuck on this problemGiven an array of ints, return True if the array contains a 2 next to a 2 somewhere.I know the basic idea (there are syntax errors) but I can't implement it. I would also like to know what type of problem this is, eg. graph, search?
In Python 2 use: from itertools import izip if you want a lazy zip
I have just corrected your code. It runs in linear time so don't see any reason to work on it further.Here is the running code on codebunk. http://codebunk.com/bunk#-Ivk7Xw2blX3cIWavI17
You can use iter():
I would do this:This uses a similar idea as the other answers, but works with a generator (as would be preferred in cases like this).

Use enumerate() to get both index as well as item, iterating over list only returns it's elements not index.
This uses the idea that index() might be faster due to being implemented not in Python.  Didn't measure it, though.Concerning your questions:  Your code suffers from not using range() at the for loop init.  The way you put it, x will not be the indexes but the elements of your list.  And it also suffers from using = for comparison (which actually just is assignment).  Use == for comparison.This is not a graph problem, it is a simple search issue.  There are quite nifty strstr solutions (besides the straight-forward one) for finding strings in strings (what you actually do).
def has22(nums):  for i in range(len(nums)-1):    if nums[i:i+2] == [2,2]:      return True  return False

This was the simplest solution I came up with. Using a for loop to check if the iterated number, nums[i] == 2 "and" the one very next to it, [i+1] == 2 as well.(len(nums)-1): this line prevents it from going out of the range through the for loop as the i+1 on the final loop will check out of the range.
Potentially the simplest solution:Suppose nums == [1, 2, 2, 3, 4, 5]. It then follows that nums[1:] == [2, 2, 3, 4, 5]. The zip() function, when called as zip(nums, nums[1:]), zips them into an iterator of the same tuples as below:And it should be clear how (2, 2) in [(1, 2), (2, 2), (2, 3), (3, 4), (4, 5)] is true. This is the same result as (2, 2) in zip(nums, nums[1:]).



Answer URL
https://docs.python.org/3/library/functions.html#slice
https://docs.python.org/3/library/functions.html#zip
