Natural Text
I'm using patch from unittest.mock to change the behavior of a remote API call in my test.I have three different functions that return three different json files that represent the mock data to be returned from the API. For each mock api call, I am setting side_effect to be one of these functions. This pattern isn't DRY, but I don't know how to pass a parameter to a side_effect function.The three mock api call functions look like this:Here's my testHow can I refactor this code to be able to pass a parameter to the side_effect (mock_call(1) instead of mock_call_1).From the unittest docs, I see that:side_effect: A function to be called whenever the Mock is called. See  the side_effect attribute. Useful for raising exceptions or  dynamically changing return values. The function is called with the  same arguments as the mock, and unless it returns DEFAULT, the return  value of this function is used as the return value.I see that the function passed to side_effect takes the same arguments as the mock, but I'm still not sure how best to use mock to accomplish this. I'll eventually want to add more test cases, so I don't want to be hard-coding different mock_api_call functions.
Use a lambda function:
I think the easiest way to do this is to set side_effect to a function that returns a function. Now I can pass mock_call(1) to side_effect and it will behave as expected.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
