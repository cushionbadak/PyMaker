Natural Text
The unittest framework in python outputs a stack trace when you encounter an exception. Each line of the stack trace is accompanied by source code in the output. This causes the stack trace to be hundreds of lines of scrolling and, in my opinion, very hard to read.Is there a way to run a python unittest so that when an exception is caught the stack trace output is in a shortened form? I'd like just the source lines, excluding all the extra source.
It is the job of TestResult.addError() to format exceptions:Called when the test case test raises an unexpected exception. err is a tuple of the form returned by sys.exc_info(): (type, value, traceback).The default implementation appends a tuple (test, formatted_err) to the instanceâ€™s errors attribute, where formatted_err is a formatted traceback derived from err.If you want to format your tracebacks differently, this is where you'd step in to change them. You have two options:Write your own traceback formatter (to replace the current implementation)Post-process the formatted_err value that the base implementation adds.The latter might be simpler; just delete any further indented lines following a line that starts with '  File':then use that as your test runner; if you run with unittest.main() in a __main__ guard, then use it like this:


Answer URL
https://docs.python.org/3/library/unittest.html#unittest.TestResult.addError
