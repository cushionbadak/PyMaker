Natural Text
BlockquoteI have a date string in the format Day Month Year, like 1st Mar 1984, 4th Apr 1973, 22nd May 2006, where:Day is in the set {"1st","2nd","3rd",...,'"30th","31st"}Month is in the set {"Jan","Feb","Mar",...,"Dec"}Year is in the range [1900,2100]I gotta convert the date string to the format YYYY-MM-DD, like:1st Mar 1984 -> 1984-03-014th Apr 1973 -> 1973-04-04(The function reformatDate has the following parameters:dates[dates[0],...,dates[n-1]] is an array of date strings in the format Day Month Year)Sample Input420th Oct 20526th Jun 193326th May 196020th Sep 1958Sample Output2052-10-201933-06-061960-05-261958-09-20
This is kind of an ad-hoc solution specific for your case. You could avoid the use of calendar package by passing your own month name to number mapping. There are probably more generic and pythonic solutions though.
This is one approach using datetime module.Ex:Output:Note: re.sub(r"(st|th|rd)", "", i) to remove st, th, rd from date. 
You can use a lambda with a list comprehension:Output:
As all the previous answers use output modules (re, datetime or calendar are in the standard Python library but still, they require to be imported as such), I wrote a solution with built-in python functions. Don't hesitate to suggest improvements:Output:
You wrote: I'd rather not use outside modules if possiblein a comment, but datetime and calendar are parts of the standard library and are not external modules! That is: these modules are part of the Python language as integers, loops, functions and classes are. (Well... almost: see Is the Python standard library really standard? and Which parts of the python standard library are guaranteed to be available?.). Remember this:Python has a “batteries included” philosophy. (Guido van Rossum, https://docs.python.org/3/tutorial/stdlib.html#batteries-included)You should not try to avoid to use the standard library but rather learn how to use it.If you want still want to try do this on your own, you can play with the usual one-liner:Explanation:The format {:0>4} means: the width shall be 4, right aligned (>) for numbers and strings and  filled with 0s (see: https://docs.python.org/3.7/library/string.html#formatspec).month_names.index(m)+1 is the numer of the month (fails if the month is unknown)d.rstrip("stnrdh") just clears the suffix of the day number ("st", "nd", "rd", "th")map(str.split, date_strings) splits the dates into three parts (day, month, year).Please note that this code will fail if the input is not valid. In other words, I wouldn't rely on this code unless input is validated.


Answer URL
https://docs.python.org/3/tutorial/stdlib.html#batteries-included
