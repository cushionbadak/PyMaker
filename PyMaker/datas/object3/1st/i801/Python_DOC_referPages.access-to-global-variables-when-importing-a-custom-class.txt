Natural Text
I'm bit confused about how the global variables work. I have a large project, with around 50 files, and I need to define global variables for all those files.What I did was define them in my projects main.py file, as following:I'm trying to use myList in subfile.py, as followingAn other way I tried, but didn't work eitherAnd inside subfile.py I had this:But again, it didn't work. How should I implement this? I understand that it cannot work like that, when the two files don't really know each other (well subfile doesn't know main), but I can't think of how to do it, without using io writing or pickle, which I don't want to do.
The problem is you defined myList from main.py, but subfile.py needs to use it. Here is a clean way to solve this problem: move all globals to a file, I call this file settings.py. This file is responsible for defining globals and initializing them:Next, your subfile can import globals:Note that subfile does not call init()— that task belongs to main.py:This way, you achieve your objective while avoid initializing global variables more than once.
See Python's document on sharing global variables across modules:The canonical way to share information across modules within a single program is to create a special module (often called config or cfg).config.py:      Import the config module in all modules of your application; the module then becomes available as a global name.main.py:      or       This will also let you set such a variable dynamically:      In general, don’t use from modulename import *. Doing so clutters the importer’s namespace, and makes it much harder for linters to detect undefined names.
You can think of Python global variables as "module" variables - and as such they are much more useful than the traditional "global variables" from C.A global variable is actually defined in a module's __dict__ and can be accessed from outside that module as a module attribute.So, in your example:And:
Using from your_file import * should fix your problems. It defines everything so that it is globally available (with the exception of local variables in the imports of course).for example:and:
Hai Vu answer works great, just one comment: In case you are using the global in other module and you want to set the global dynamically, pay attention to import the other modules after you set the global variables, for example:
Your 2nd attempt will work perfectly, and is actually a really good way to handle variable names that you want to have available globally.  But you have a name error in the last line.  Here is how it should be:See the last line?  myList is an attr of globfile, not subfile.  This will work as you want.Mike


Answer URL
https://docs.python.org/3/faq/programming.html#how-do-i-share-global-variables-across-modules
