Natural Text
I have a set of file names in a list in different folders as shown below:Input filesI would like to group the files as follows:Output listThat is to say the files should be grouped based on the pattern of files. Note DEF_1 and DEF_2 have to be grouped separately. The numbers 10, 956 are random, i.e., they are not known before hand. A MWE is given below, which groups based on first few letters as obtained from OP, how can I extend it to the other letters that is DEF.MWE
You can use recursion:Output:
You probably should try Regular Expression in Python (re library).re.findall(pattern, string, flags=0)  Return all non-overlapping matches of pattern in string, as a list of strings.In the code example, \d represents one digit and {n} represents the number of occurrence of the previous pattern. Thus \d{3} means 3 digits.You could get more information about regular expression here.
This is based on Ajax1234's answer. It avoids that answer's redundant computation. Rather than doing a recursive partition by an equivalence relation. This does discrimination. This reduces the cost from N**2/2 calls to is_match to only N calls to key. key uses None as a wildcard for the parts of the filename that are digits.This results in:It seems I wasn't clear enough on where to make the changes:


Answer URL
https://docs.python.org/3/library/re.html
