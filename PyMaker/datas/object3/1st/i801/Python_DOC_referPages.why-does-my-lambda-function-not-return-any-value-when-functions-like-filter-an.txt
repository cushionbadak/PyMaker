Natural Text
This question already has an answer here:Getting a map() to return a list in Python 3.x                    9 answers                I am using Jupyter notebook, and for practice want to use the lambda and filter functions in my code to filter the even numbers out of a given list, consisting of numbers from 1 to 10.The code shows what I have attempted to do, but the output is not what I expected.I left the code for a while, and tried using a map() function, this time to square the values of the list, but it too isn't giving a proper output.The filter code:The map code:I expected the output to be the values 2, 4, 6, 8, 10, and a list of squares in the second case. Instead, the code is giving me the above responses. I am pretty sure that the problem is in lambda, but what is it?
Reading the docs of map() (the same goes for filter()), it clearly states:Return an iterator that applies function to every item of iterable ...So this is the expected behaviour, as it does not calculate all elements in one go (saves memory and CPU time), but waits till you need them:You can iterate over the result:or convert it to list or tuple:
If we try executing those set of statements in both python2 and python3,for filter(), the output of python2 will be ~ [2, 4, 6, 8, 10]whereas, the output of python3 will be ~ <filter object at 0x1014ba240>Similar will be the case with map() as well.The reason is that those functions return a list in python2, whereas, in python3, they return an iterator. To be able to use their result as in python2, all you have to do is convert it to a list before using the result. 


Answer URL
https://docs.python.org/3/library/functions.html#map
