Natural Text
I have this input, where each value has a range of 200:And I am looking for this expected order:Already tried something like this, but the order is just wrong:
You can split the key into parts at '-' and use the first part as integer value to sort it. The second part is irrelevant for ordering because of the nature of your key-values (when converted to integer): Output:Doku:sorted(iterable,key)Related:How to sort a list of objects based on an attribute of the objects?  for more "sort by key" examples Are dictionaries ordered in Python 3.6+? .. which lets you omit the OrderedDict from 3.7+ on (or 3.6 CPython)
If you want to order your dictionary by the first year first (and then by the second year if needed, which is unnecessary in the given example, but feels more natural), you need to convert to integers and set a custom key:The conversion to integers is needed because e.g. "1000" < "200", but 1000 > 200. This list can be passed to OrderedDict afterwards like in your code, if needed.


Answer URL
https://docs.python.org/3/library/functions.html#sorted
