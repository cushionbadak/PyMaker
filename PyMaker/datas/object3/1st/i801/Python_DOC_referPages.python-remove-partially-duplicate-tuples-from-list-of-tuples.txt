Natural Text
I have a list of tuples and need to delete tuples if its 1st item is matching with 1st item of other tuples in the list. 3rd item may or may not be same, so I cannot use set (I have seen this question - Grab unique tuples in python list, irrespective of order and this is not same as my issue)For eg if I got a as:[(0, 13, 'order1'), (14, 27, 'order2'), (14, 27, 'order2.1'), (0, 13,  'order1'), (28, 41, 'order3')]I want the output as:[(14, 27, 'order2'), (0, 13, 'order1'), (28, 41, 'order3')]I am getting the desired output using below code.Is there a better or more pythonic way to achieve the same.
The usual way is keying a dict off whatever you want to dedupe by, for example:This is O(n) time complexity, superior to O(n log n) groupby based approaches.
You can get the first element of each group in a grouped, sorted list:
You should avoid modifying your list in place while iterating over it. Instead, you can use the popular itertools unique_everseen recipe, also available in 3rd party more_itertools. Just use operator.itemgetter in the key argument:This solution takes O(n) time, but is generally less efficient than a dictionary-based solution, although it is arguably clearer in its intention.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
https://docs.python.org/3/library/operator.html#operator.itemgetter
