Natural Text
I have a list of functions as strings:I have a list of Sympy Symbol objects (basically variables) whos .name attribute cooresponds to the variables names in the function strings:I found that Python have a neat function called eval() which can evaluate strings, for example:Basically this is what I want to do with my functions strings. However, since this is a dynamic implementation I don't have variables defined on a line above eval() in my program, they are in a list instead. For example, in the example above x is defined as 1, so then the eval() function can use it. But I have my variables in a list, not defined as a variable in the scope of my function. How could I use the eval() function and utilize my list of variables?
eval takes local variables as third argument(reference),so you can do this:However, maybe you should use parse_expr which is part of SymPy.
How about this, and you can wrap following codes of replacing and eval in your symbol class（through inheriate）.Always remember that using eval is "EVAL" 'cause you should not trust the string passed in, listeral_eval is safer.
You could do something along these lines:Output:
Look at full definition of eval (expression[, globals[, locals]])You can substitute globals/locals on eval.E.g.How could I use the eval() function and utilize my list of variables?You have 2 namespaces and you can do everything you want with them.
Best way to do it in my opinion would be to add all of the variables to locals. Then you can reference them by name in eval. Example:


Answer URL
https://docs.python.org/3/library/functions.html#eval
https://docs.python.org/3/library/functions.html#locals
