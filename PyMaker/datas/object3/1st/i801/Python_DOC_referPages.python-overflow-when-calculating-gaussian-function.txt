Natural Text
I am trying to calculate the value of the Gaussian function using the following definitionBut I am getting an overflow with values of 20000, 30000, 1000000, etc.Do you know a workaroundThanks!
Use math.exp:This is more performant and numerically accurate than e**.Note that ...**1/16 probably doesn't do what you want. ** has higher operator precedence than /, so the above is equivalent to (...**1)/16. Wrap the fraction in parentheses:Writing 16 in floating point format (16.0) to prevent integer division.Use exponent rules to incorporate the 1/16:This reduces large arguments, which helps to improve precision. Flip the sign of the argument and change the division to a multiplication:This will underflow instead of overflow in extreme cases. Underflows are much more well-behaved in this situation â€“ you'll just get zero instead of an OverflowError.
My advice is to rework the formula by taking the logarithm of it (i.e. convert the formula with the product of terms into the sum of the logarithm of each term) and then take the exponential of the result.


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
https://docs.python.org/3/reference/expressions.html#operator-precedence
