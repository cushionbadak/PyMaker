Natural Text
I tried to open several serial ports in python at the same time. I think it makes sense that every port as a class process, then I can group the respective properties and methods within this. Ok, I thought multiprocessing could be fine, but I have struggled to get it to work.Why can't I initialize the serial port in the init.When using super(serialManager, self) without the init the loop_starter is executed, but not as a process.super(serialManager, self).__init__(target=self.loop_starter,args=(serial_port, baudrate, timeout)) isn't executed, why? how can I properly put all props in a class and process a method inside this class?regardsok, I also tried this little script without success. why isnt the run executed?
Your test script executes run() fine. Per the Process documentation:If a subclass overrides the constructor, it must make sure it invokes  the base class constructor (Process.init()) before doing anything  else to the process.Your serialManager class is invoking super() at the end instead of the begining of __init__


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process
