Natural Text
I'm trying to understand futures in Python by reading the PyMotW guide.I asked a question yesterday, and in the comments, it was stated that:A more serious issue with the guide is that creating and manipulating  raw futures is considered bad style in modern async programming.I tried searching for more information, but the closest I found was in the Python guide about Future:The rule of thumb is to never expose Future objects in user-facing  APIs, and the recommended way to create a Future object is to call  loop.create_future(). This way alternative event loop implementations  can inject their own optimized implementations of a Future object.Question:Why is it considered bad practice to create and manipulate futures? Are the reasons documented somewhere?
Thanks to @user4815162342, for providing a link to the async/await presentation by Yury Selivanov.I managed to reach out and ask him. Here is what he said.The warning is there because Future is a low-level API.  You should  use it to build async/await facade around existing callbacks-based  code.  But if you are writing async/await code from scratch, there are  higher-level builtin async/await APIs in asyncio that are just easier  to use (and less error prone).


Answer URL
https://docs.python.org/3/library/asyncio-future.html#future-object
