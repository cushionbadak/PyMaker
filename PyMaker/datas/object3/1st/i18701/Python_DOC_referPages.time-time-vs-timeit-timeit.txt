Natural Text
Sometimes, I like to time how long it takes parts of my code to run.  I've checked a lot of online sites and have seen, at large, two main ways to do this.  One is using time.time and the other is using timeit.timeit.So, I wrote a very simple script to compare the two:Basically, it times how long it takes to print "ABC" 100 times in a for-loop.  The number on the left is the results for time.time and the number on the right is for timeit.timeit:As you can see, sometimes, time.time is faster and sometimes it's slower.  Which is the better way (more accurate)?
timeit is more accurate, for three reasons:it repeats the tests many times to eliminate the influence of other tasks on your machine, such as disk flushing and OS scheduling.it disables the garbage collector to prevent that process from skewing the results by scheduling a collection run at an inopportune moment.it picks the most accurate timer for your OS, time.time or time.clock in Python 2 and time.perf_counter() on Python 3. See timeit.default_timer.


Answer URL
https://docs.python.org/3/library/time.html#time.perf_counter
