Natural Text
I am trying to make a hash breaking application that will check all the lines of one file with all the lines in the rockyou dictionary. While with pre-hashing the rock you i got the time of checking one hash down to a few seconds its still not enough. This is why i am moving my program to multithreading. But my threads stop without rising any exceptions. Here is output:When i run it after some time there is only one thread reporting. Why?Thanks for all helpEDIT: One of the threads rises a key error.I dont know what that is
As calculating hashes is a CPU bound problems, using multithreading won't help you in cPython because of the GIL.If anything, you need to use multiprocessing. Using a Pool, your whole code could be reduced to something like:As to your problem with the threads: You're concurrently accessing ThreadClass.list_len from multiple theads.First you access it and compare it to 0. Then you access it again, decrease it and store it back, which is not thread safeAnd then you access it again when you print it. Between any of these operations, another thread could modify the value.To show this, I've modified your code a little:When I run this 10 times, what i get is:So sometimes it seems to run ok, but others there are a lot of values that have been added multiple times, and list_len even manages to get negative.If you disassemble the run method, you'll see this:Simplified you can say, between any of these lines another thread could run and modify something. To safely access a value from multiple threads, you need to synchronize the access.For example using threading.Lock the code could be modified like this:I'm not entirely sure that this is the cause of your problem, but it may be, specially if you're also reading from an input file in your run method.


Answer URL
