Natural Text
I am making an email-scraper and the pseudo-system is as followsThe main action part is in stage2 under while len(unprocessed_urls) I would have my logic to create urls and a try except for requesting the response of the urls, heres where the magic happens.Here i can simply put an except KeyboardInterrupt and send it to my function.Now the problem comes at stage3 where I am scraping the emails, this part isn't in any try/except blocks so I cant really implement an interrupter or im not sure how to without an abrupt stopThe core problem is that there's a certain moment where if I press ctrl+c It throws the default error exception and my code is never run.Here is the logic:So the question is, how can I build my code to rest assured when any keyboardInterruptions are initiated I can run my code ? 
scissored from How do I capture SIGINT in Python?I would suggest you use and register the appropriate signal handler, at least if your main goal is to simply catch any user-/system-interrupts.It's a nice way to clean up any exits / interrupts.Can also be used if you're running your application as a service to handle shutdown events and such.
I feel like this might not the right way, but you could try using a contextmanager:Test output:At least this way you don't need to wrap your entire function in a try... except block.


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
