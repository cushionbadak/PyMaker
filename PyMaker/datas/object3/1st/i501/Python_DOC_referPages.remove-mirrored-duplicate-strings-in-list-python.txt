Natural Text
What is an efficient python algorithm to remove all mirrored text duplicates in a list where the items are in the format as below?Required result: [' dutch english italian ', 'dutch german italian' ]
This solution uses the set datastructure and focuses on producing compact code, mostly with list/set/generator comprehenstions. If this is a homework task for a beginner course and you just copy the result, it will be very obvious that you did not write the code yourself. Try to follow the thought process and reproduce the results yourself.1) split each element at " " (space)2) remove now empty elements due to superfluous spaces in the input. This can be done in 1 line with the step above (empty strings are "falsy") using a list comprehenstion:3) Put the result in a set, which by definition disregards order and ignores duplicates. For this step we primarily need the property of unordered identity, meaning set([1, 2]) == set([2, 1]). This can be combined with the line above using a generator comprehension:Now, within that loop, put all those sets of languages into another set. This time, because all the item sets with the same items in any order are considered equal, the outer set will automatically disregard any duplicates. To be able to put the item set into another set, it needs to be immutable (because mutability might cause a change in identity), which is called a frozenset in python. The code looks like this:Or, as a set comprehension on one line:The result is as follows:you can turn that back into lists if the set print output looks confusing to you
This may work for you:
This might not be the most efficient solution, but hope it will be of some help.Using the property that keys of dictionary are unique.


Answer URL
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
