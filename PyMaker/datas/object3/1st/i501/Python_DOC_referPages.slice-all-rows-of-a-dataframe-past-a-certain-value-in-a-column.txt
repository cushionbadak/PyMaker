Natural Text
I am trying to find a more pandorable way to get all rows of a DataFrame past a certain value in the a certain column (the Quarter column in this case). I want to slice a DataFrame of GDP statistics to get all rows past the first quarter of 2000 (2000q1). Currently, I'm doing this by getting the index number of the value in the GDP_df["Quarter"] column that equals 2000q1 (see below). This seems way too convoluted and there must be an easier, simpler, more idiomatic way to achieve this. Any ideas?  Current Method:Output:Also, after the DataFrame has been sliced, the indices now start at 212. Is there a method to renumber the indices so they start at 0 or 1? 
The following is equivalent:
As pointed in the comments you can use the new awesome method query()  that Query the columns of a DataFrame with a boolean expression that  uses the top-level pandas.eval() function to evaluate the passed  query with pandas.eval method that Evaluate a Python expression  as a string using various backends that uses only Python  expressions.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#expression-statements
