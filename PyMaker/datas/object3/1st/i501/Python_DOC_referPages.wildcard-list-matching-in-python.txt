Natural Text
I have a list of stringsAnd paths are likeHow can I perform filter for the paths if they exist in the list l.condition likeshould return True and for all given paths above.
If your wildcards are always the last thing in the query string, I recommend chopping it off and using .startswith(). Otherwise, use the fnmatch module which interprets "glob"-style wildcards:
OUTPUT:EDIT:If you want a method that would return the boolean value:OUTPUT:EDIT 2:If you want the * ones to match with the path, you can remove the * from the original list and then iterate like:OUTPUT:
If I understand correctly, you want to see if the wildcard pattern would hold true. For this you can use the fnmatch module from glob. Supposing you have this:You could get this:
The fnmatch solutions posted already are certainly recommended for this problem, however, the answer below demonstrates a non-import solution:Output:
Or a list comprehension:
You can use a regular expression to replace a * at the end of the path pattern with .* and than use those as regular expressions themselves to match the paths in the list.


Answer URL
https://docs.python.org/3/library/fnmatch.html
