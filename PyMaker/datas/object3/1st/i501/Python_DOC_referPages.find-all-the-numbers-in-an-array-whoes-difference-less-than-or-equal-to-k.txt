Natural Text
I want to find two numbers A[i] and A[j] whose difference is less than or equal to K, I need to store index of such numbers in array L (Left) R (Right) and return L & R Expected output:
You should use itertools.combinations to get all possible combinations, then test their differences and append if needed.Test:Though it's not your expected output, I feel like your expected output may have a few errors according to your logic.
An O(n log n) solution that exploits the ordering in your example A (if it's not ordered, you can always pay O(n log n) a second time to sort it, though preserving the original indices would likely make it not worth the complexity):This uses the bisect.bisect function to find the end point for each start point in O(log n) time, making the overall cost O(n log n). It doesn't even need to directly test most values against k, since bisect finds the end of the indices which meet the different criteria, and all values in between definitely meet it. Rather than building the list manually, I've made this a generator function that can be converted to the L and R values with zip and unpacking:You could do it with lists explicitly:but I kind of like the generator->zip->unpack approach for letting Python do most of the work. Either way, the theoretical cost of O(n log n) is better than O(n * (n - 1) / 2) (roughly O(n ** 2)).


Answer URL
https://docs.python.org/3/library/bisect.html#bisect.bisect
