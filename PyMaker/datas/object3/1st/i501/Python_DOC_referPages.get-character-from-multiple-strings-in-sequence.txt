Natural Text
How do I take the first character from each string in a list, join them together, then the second character from each string, join them together, and so on - and eventually create one combined string? eg. if I have strings like these:I want the end result to be helloitsmeiwaswonderingafterI put together a very hackneyed version of this which does the job but produces an extra line of gibberish. Considering this is prone to index going out of range, I don't think this is a good approach:gives me helloitsmeiwaswonderingafterhomani when it should simply stop at helloitsmeiwaswonderingafter.How do I improve this?
You can use a nested comprehension:or use nested joins and zip
Problems related to iterating in some convoluted order can often be solved elegantly with itertools.Using zipYou can use zip and itertools.chain together.In the event you needed the strings in final_c to be of different lengths, you could tweak your code a bit by using itertools.zip_longest.Using cycleThe fun part with itertools is that it offers plenty of clever short solutions for iterating over objects. Here is another using itertools.cycle.
Here is a code that works for me :I hope it helps
I don't understand what you are expecting with the line final_message += final_c[0][:-1] The code works just fine without that. Either remove that line or go with something like list comprehensions :This gives the expected output:
looks like you can have a matrix of form nxm where n is the number of words and m is the number of character in a word (the following code will work if all your words have the same length)


Answer URL
https://docs.python.org/3/library/itertools.html
