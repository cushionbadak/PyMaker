Natural Text
Examplefor the word 'apple':i can't figure out how to add the indexes of the letters that reoccur in a word so that it can look like:the code i got so far is:
Two main problems;First: Let's take a look at this loop:Here, with each iteration of the loop, you are overwriting the entry for letter_dict for that letter. You don't want to do that, because you will end up with something like {'a': [[0], False], 'p': [[2], False], 'l': [[3], False], 'e': [[4], False]}, which is still not what you want. Instead, you want to be able to update your entry in the dictionary, instead of overwriting it. We can do this by checking if we already have an entry before making our assignment.Second: .index always returns the index of the first occurrence of a character in a string. Therefore, when you call 'apple'.index('p'), it will always return 1. Observe:How do we fix this? I would recommend looking into enumerateI will leave it as an exercise to the reader to combine the solutions to these two problems
Another easy option would be to collect your indices in a collections.defaultdict(), then modify it at the end to include False:Also note strings are iterable, so you can use 'apple' instead of ['a', 'p', 'p', 'l', 'e']. 
Try this:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/collections.html#collections.defaultdict
