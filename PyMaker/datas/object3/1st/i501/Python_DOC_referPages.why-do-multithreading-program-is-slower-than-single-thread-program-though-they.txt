Natural Text
I have several txt files which contains CDR information, CDRs are distributed within several files. I need to find phone maches in these files, than check the matches vs xls file. I wrote single thread version, then multithread and found that sometimers multithread is slower than single thread.Multithread:Single Thread:
Python does not support real multi-threading, you always have the Global Interpreter Lock [ more about GIL ] which allows only for execution of single statement at a time. So there is only really one thread plus the added code for handling threads so it will be slower in most cases.There can be some speed up in I/O operations but not always. Multi-threading module serves more for a different type of programming style than for example async programming (for which python also has a module link). If you would like to see real performance improvement you should use python multiprocessing module which does not suffer from GIL, however data exchange between two process is more complicated than using threads.https://docs.python.org/3.7/library/multiprocessing.html
Python uses the Global Interpreter Lock (GIL). It essentially makes the whole process a single threaded app.Python multithreading is only useful if you are I/O-bound. If you want to parallelize your workload then you should use multiprocessing. It has a similar API as multithreading except the processes do not share memory between them.
when it comes to process data with multithreading in python is slower because in fact python it is using one single thread (because of GIL) that switch between some pyhton "threads", check this link it is slower because of the switch timeyou should use multiprocessing 


Answer URL
https://docs.python.org/3/library/asyncio.html
https://docs.python.org/3/library/multiprocessing.html
