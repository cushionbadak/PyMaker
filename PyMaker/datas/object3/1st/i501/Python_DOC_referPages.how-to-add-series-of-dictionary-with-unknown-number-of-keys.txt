Natural Text
I have created following dictionary test, consisting of Series objects:I would like to perfrom test['A'] & test['B']. My problem is that I want to perfrom bit-wise addition for any possible number of keys in the dictionary. (I.e. it can be 'A' or 'A' and 'B' or 'A' and 'B' and 'C' etc.). In any case, the value for each key has the same length, and all the Series are boolean.
There are many advantages to working with a DataFrame instead of a dictionary of Series objects. Converting from the latter to the former is trivial:While the DataFrame constructor is pretty smart about parsing the input data, you could explicitly tell it you are initializing from a dictionary by using the from_dict classmethod:Now you can apply & using the all method along any axis you want:The same goes for | using any:
There is a simple one-line solution to your problem (if you want cumulative and operation over columns e.g. A and B, A and B and C, A and B and C and D and so on):Using cummin, if any value is False, all coming after it will be False as well as it's the smallest value.Original dataframe:Cumulative and:First column is A, second is A and B, third A and B and C, last is A and B and C and D.


Answer URL
https://docs.python.org/3/library/functions.html#classmethod
