Natural Text
My code is:I'm trying to write my files asynchronously, but it doesn't actually write.What am I doing wrong?
What am I doing wrong?Function doesn't become async just because you use await before it. You have to declare function as async def to make it async in the first place.Any function that uses await should be defined as async def up to entry point of your program (like async def main()). You should run entry point in event loop to make async code work.Both functions plt.imshow and plt.savefig are sync by their nature. You can try to cast second one to async using run_in_executor and awaiting for result, but I'm not sure if it'll work. I'm also not sure if you need it: you probably won't achieve any speedup paralleling these disk I/O operations.Long story short, please read this answer to better understand why people use asyncio in the first place. I also advice you to read this part of documentation and starting with more trivial async task.
You forgot to add await ahead of save_file(...). That means the asyncio loop will never schedule the file writing function.Very common mistake in my experience...Update: From your comment, it appears you never kick off the asyncio loop to process functions. You'll need to start the top level function, as per docs. Python 3.7 has a nice new simple syntax, the principle is the same in 3.5 and 3.6 but a bit more long-winded.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#coroutines
https://docs.python.org/3/library/asyncio-task.html#asyncio.run
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.run_in_executor
https://docs.python.org/3/library/asyncio-task.html
https://docs.python.org/3/library/asyncio-task.html#asyncio.run
