Natural Text
Here is a list subclass which delegates its item getting to itertools.compress.The above works fine, although I was under the impression that I could directly assign compress to __getitem__.This raises the following:I believed this breaks because compress is a class and not a function, but the message shows the TypeError was raised from calling compress.At which point did the __getitem__ protcol call compress with a single argument?
A function can be used as a method because it has a __get__ attribute. The class compress doesn't have a __get__ attribute:and so cannot be a method.When invoking an attribute with a __get__ method, the __get__ method is called and its return value is returned, rather than the value of the attribute itself. That is, l[0] == l.__getitem__(0) == l.__getitem__.__get__(l, type(l))(0), where the return value of __get__ is an object that already has l passed to the function.(If you've ever wondered what the classmethod and staticmethod decorators do, they return objects with different __get__ methods.)


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.compress
https://docs.python.org/3/reference/datamodel.html#invoking-descriptors
https://docs.python.org/3/howto/descriptor.html
