Natural Text
Let's suppose I have the following list:list1 = [{'a': 1}, {'b': 2}, {'c': 3}]Which I want to convert it to a panda dataframe that have two columns: one for the keys, and one for the values.To do so, I have tried to use pd.DataFrame(list1) and also pd.DataFrame.from_records(list1), but, in both cases, I get a dataframe like:Is there any way to specify what I want? By doing research I could only find the way I am describing above.
Use list comprehension with flattening for list of tuples:Detail:
If your keys across dictionaries are unique, you can create a single dictionary and feed to pd.DataFrame.from_dict. This can be facilitated by collections.ChainMap:Alternatively, you can feed directly to pd.DataFrame constructor via a list:
While @jezrael answered perfectly to my question, I would like to point out that if you convert each dictionary ({'a':1}) to a list (['a',1]) you will simply need to use pd.DataFrame(list1), getting the desired result.


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
