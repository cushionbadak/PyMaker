Natural Text
I have a dataframe with independent variables in the column headers, and each rows is a seperate set of dependent variables:I would like to fit a curve of type Y=A*x^B to each row. I need to solve for A & B for about ~5000 rows, 6 datapoints in each row.  I was able to do this using np.apply, but it takes about 40 seconds to do this.  Can I speed up using Cython or by vectorizing somehow?  I need precision to about 4 decimalsHere is what i have:
You actually do two curve_fits per row, one for a and one for b. Try to find a way to insert both of them at the same time, so you can halve your execution time:And to make this more reusable, I would make curvefit also take the x-values and function, which can be passed in with functools.partial:
I was able to bring my runtime down to 550ms by following the advice of @Brenlla.  This code uses an unweighted/biased formula similar to Excel, which is good enough for my purposes (@kennytm discusses it here)


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
