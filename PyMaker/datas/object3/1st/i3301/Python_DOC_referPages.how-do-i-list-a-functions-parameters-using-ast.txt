Natural Text
I'm using the ast module to parse docstrings in a Python module to turn our docs into read the docs format. I'm using the following to get the function names and docstrings into a list of dicts which the rest of my code works well with. I'm looking for something to get the parameters of the function as well:I'm looking for what I can use to fill in the function's parameters into the dict. Thanks!
The Abstract Grammar section of the ast documentation tells you where to find the parameter definitions in a FunctionDef node:In the parameters is a sequence of type name entries; the names become attributes on the node. The types are further covered in the documentation (with several 'builtin' types listed at the top, which are reflected as Python strings and integers). Types with * after them are sequences (lists), a question mark means they can be set to None.So each FunctionDef node has name, args, body, decorator_list and returns attributes. The args attribute is a new node, of type arguments, also documented:so FunctionDef.args.args is a list of arguments, each an arg object, etc.arg is documented aswhere identifier is a built-in type, so just a string here.You probably want to look at the ast.dump() function, which will give you a quick overview of an AST node:From there you can then explore and further 'dump' information to get to the actual data you need:The defaults are attached to the last names in the args or kw_args sequences (defaults for args, kw_defaults for kwonlyargs); a list of N defaults attached to the last N names in args or kwosnlyargs. Any catch-all names (*args and **kwargs in my example) are listed separately.


Answer URL
https://docs.python.org/3/library/ast.html#abstract-grammar
https://docs.python.org/3/library/ast.html#ast.dump
