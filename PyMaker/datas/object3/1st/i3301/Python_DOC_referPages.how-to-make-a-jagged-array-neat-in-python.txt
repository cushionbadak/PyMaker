Natural Text
I have an array like this: ['a', ['e', 'r', 't'], 'c'].I want to use some sort of processing to make the array neat:[['a', 'e', 'c'], ['a', 'r', 'c'], ['a', 't', 'c']].If the array is: ['a', ['e', 'r', 't'], ['c', 'd']].The result is:[['a', 'e', 'c'], ['a', 'e', 'd'], ['a', 'r', 'c'], ['a', 'r', 'd'], ['a', 't', 'c'], ['a', 't', 'd']].And the length of the array is not fixed to 3, other examples:So what should I do? Is there a solution in Numpy?
Unless I misunderstand the question, you just want the product of the sub-lists, although you have to wrap any single elements into lists first.
I have a recursive solution:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
