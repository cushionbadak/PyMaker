Natural Text
I have a text file which I read in. This is a log file so it follows a particular pattern. I need to create a JSON ultimately, but from researching this problem, once it is in a dict it will be a matter of using json.loads() or json.dumps(). A sample of the text file is below. The dict structure which I am ultimatly looking for is I am ignoring the timestamp information in each list for now. This is a snippet of the code I am using, Which results in an undesired output, I need to dynamically populate the dict because I don't know the actual field/key names. 
Output
This is one of the rare cases where recursion in Python seems to be appropriate and helpful. The following function adds a value to the hierarchical dictionary d specified by the list of keys:The function works with the dictionaries of arbitrary depth. The rest is just the matter of calling the function:Result:You can modify the code to exclude certain levels (like the timestamp).
You could use a nested collections.defaultdict() here:Which gives the following:Note: defaultdict() is a subclass of the builtin dict, so their is not reason to convert it to dict in the end result. Additionally, defaultdict() can also be serialized to JSON with json.dumps(). 
You can use itertools.groupby:Output:
Check for the presence of keys:

Source : Result : 


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/json.html#json.dumps
