Natural Text
I am new in python I am implementing a binary search on the big array of values where the length of Array is 258000, I have tested my code on linear search it also crashes when it exceeded maximum recursion depth, thats why I use binary. but binary not working on that big array also, as I test my code on small array it works fine, here is a code:I know how to increase the sys.setrecursionlimit() I have tried but it still kills because it exceeded the RAMs limit, I have use bisect code of python and it works fine, But as I am new in python I want to absorb the in-depth concept of algorithm, rather than a builtin functions, if someone can help me to correct this code I will appreciate this, thanks
You don't need recursion at all. You can do binary search in iterative way. However, even with recursion you shouldn't hit maximum recursion depth with such array. The reason you are hitting this is that you are not doing binary search correctly.This is obviously wrong as l // 2 will be evaluated first. What you want is:Also, I don't get the rationally behind returning l - 1 when h < l. Normally you should return -1 to signal that key is not found. l - 1 at some recursive step may provide a valid index for initial call.And finally, if the list is not sorted than there is no point to sort it first and then doing binary search, unless you do lots of searches on same array, since sorting will take more time than a simple linear search.
If the array of strings is not going to change for a long time or if it is not going to be changed very frequently and search is going to be used very frequently then you can use the Trie data structure, which will enhance your time complexity on the cost of space complexity. Where worst time complexity would be O(length of the longest string in that array)
That's not an enormous list, just use list.index. Example


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
