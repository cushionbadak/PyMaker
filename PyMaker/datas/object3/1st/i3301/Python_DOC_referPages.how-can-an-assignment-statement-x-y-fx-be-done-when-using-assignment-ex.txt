Natural Text
I read in Twitter:#Python news: Guido accepted PEP 572.  Python now has assignment expressions.(correction mine in the 2nd line of code)As indicated, PEP 572 -- Assignment Expressions describes this to be present in Python 3.8:This is a proposal for creating a way to assign to variables within an expression using the notation NAME := expr.I've gone through the description and examples and I see this is a convenient way to avoid repetitions of either calls or assignments, so instead of:or the more efficient:One now can say:Similarly, one can now say:However, I do not understand how this example given in the PEP is not valid:Will it be correct to say y0 = (y1 := f(x))? How could it be used?Foot note for those who wonder where will this be available: I already installed Python 3.7 and it does not work there, since the PEP currently shows as "Status: Draft". However, the PEP talks about Proof of concept / reference implementation (https://github.com/Rosuav/cpython/tree/assignment-expressions)
As explicitly stated in the PEP,Unparenthesized assignment expressions are prohibited at the top level in the right hand side of an assignment statement; for example, the following is not allowed:Again, this rule is included to avoid two visually similar ways of saying the same thing.And later,As follows from section "Exceptional cases" above, it is never allowed at the same level as =. In case a different grouping is desired, parentheses should be used....


Answer URL
https://docs.python.org/3/whatsnew/3.7.html
