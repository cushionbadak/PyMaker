Natural Text
Segmentation Fault in subprocess.stdout while displaying on QPlainTextEditHi,I am starting a thread to the function shown and streaming its result to a QTextEdit object in the thread. The function sometimes crashes with a segmentation fault for unknown reasons. The make dccommand is a call to the design compiler synthesis tool. If I try to print thelinevariable instead of writing to the plainTextEdit Object the thread runs fine, displaying the result in the terminal window. Any help/advice is welcome......Thank You
You can't use QT things from a python thread. Your options:Send the data back from the thread to your main program, using a queue.Queue or some other similar synchronization object. Then the main program adds the data to the text widget. Documentation here.Use a QThread, which is the QT equivalent of threads. Documentation here.
You cannot update the Qt GUI from another thread. Fortunately for us, Qt gave us signals, and PyQt gave us pyqtSignal, just for this situation. There are a few ways to do it, but I prefer the following style.
Instead of using subprocess.Popen() you should use QProcess which is GUI friendly so it is not necessary to use a new thread.


Answer URL
https://docs.python.org/3/library/queue.html#module-queue
