Natural Text
Im working on a python script taking all the files in sub folders inside a folder and move to another folder that has identically structured sub folders. (see picture)pictureMy script currently just grabs all the files from directories and move to another folder location. Is there an elegant way to do this? I'm dealing with 31 sub directories inside a folder so hard coding for all 31 would be tedious thanks a lot
You can use os.path.relpath to obtain the relative path to src and then join the relative path with dst to obtain the new path name:
To address the multiple directories, you can build a dict of {'src':'dest'} pairs:
First, if you're in the mood for something hacky, IIRC, you can call copytree and pass move rather than copy2 as the copier, and it ends up moving all of the files to the right place, but on either Unix or Windows (I forget which) it leaves empty directories behind instead of nothing. But that's trivial to clean up:If you don't want something hacky:From your diagram, it seems like you just have 31 subdirectories all directly under the source directory, not nested underneath each other. So, trying to walk the whole hierarchy recursively with walk, and then trying to reassemble the paths properly, etc. is just making things more complicated, and probably even less efficient.All you have to do is get those 31 directories, and move them. For example, using scandir:Or, if you have files as well as directories at the top level, it's even simpler:If you're on an old version of Python that doesn't have scandir, you'll have to use listdir, but that's only a tiny bit more difficult:


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.relpath
https://docs.python.org/3/library/shutil.html#shutil.copytree
https://docs.python.org/3/library/os.html#os.scandir
