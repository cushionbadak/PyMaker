Natural Text
Is there anyone who could help figure out what the double greater-than symbol (i.e. Drug >> float in line 10 and Drug >> int in line 13) means in the following python scripts? The code is copied from here and runs in python 3.  The >> symbol here is not bitwise operator. Python's bitwise operation, say x >> y, requires y to be an integer. It is clear that the code here (Drug >> float) is not shifting Drug right by float bits. Although similar questions were asked before (see here and here), their answers mostly pointed to the so-called "print chevron" in python 2, where the >> redirects the to-be-printed messages to the file-like object specified right after the >>. They do not apply to my question because here is not a case of print statement.  To trace the >> in the code above, I revised the script in line 10 as class has_for_cost(Drug >> list, FunctionalProperty) (namely replace >> float with >> list) and ran the code again. It raised an AttributeError as follows:With the traceback info, though, I still could not find the answer. I would be very thankful if anyone could help figure out what the >> does in the code. 
Drug >> float calls Drug's __rshift__ method. That method can do whatever it wants; it doesn't have to be a binary shift operation.Reading the owlready2 documentation reveals that domain >> range is a fancy way of creating an ObjectProperty.
Aran-Fey has answered the question in brief. Below is just to save time for those who don't want to download and parse the source codes of owlready2 but still want to trace how it works in the actual codes.  Drug is an object created on the basis of another object ThingClass, as defined in /owlready2/entity.py.Drug >> float calls Drug.__rshift__(self, float) [explained].It is not Drug but its base object ThingClass that has a __rshift__ method, which reads in the entity.py:  Drug >> float is equivalent to __rshift__(Domain=Drug, Range=float), which is in fact not doing a binary arithmetic operation but returns/creates either a DataProperty or an ObjectProperty, depending on the type of Range.


Answer URL
https://docs.python.org/3/library/stdtypes.html#bitwise-operations-on-integer-types
https://docs.python.org/3/reference/datamodel.html#object.__rshift__
https://docs.python.org/3/reference/datamodel.html#object.__rshift__
