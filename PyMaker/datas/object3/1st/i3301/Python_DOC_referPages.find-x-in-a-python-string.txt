Natural Text
I am unable to replace \x in a python string with ''gives ValueError: invalid \x escape.gives False.returns '\x01' with no effectHow can I replace '\x' with the empty string?
From the comments it sounds like the biggest problem you have is an inconsistent data source. In the given list of values you have regular floating point values: nan, 1.0, 0.0 strings that represent floats: "1.0", "0.0" and strings that contain integers as binary values: "\x01"It's relatively trivial to sort out the floats from the strings with something like:Furthermore if you want to sort out the nan values (a special type of float) you can do this:Sorting out the strings is a little trickier as there are many ways to represent a value using a string.The regular string to float conversion using float("1.0") works if your string already looks like a float (rules for looking like a float). If however the value is represented by the binary value of the string characters (it sounds like this may be the case) you will have to find a way to differentiate between the two types of string. This may be as simple as first trying to call float(item) and catching errors when the format doesn't match the "like a float" criteria. Then assuming you only have a single character you could use ord(item) to return the binary representation of said character. This might look something like this:


Answer URL
https://docs.python.org/3/library/functions.html#float
