Natural Text
Imagine that I have a dictionary in my Django application:Now I want to easily create an urlencoded list of GET parameters from this dictionary. Of course I could loop through the dictionary, urlencode keys and values and then concatenate the string by myself, but there must be an easier way. I would like to use a QueryDict instance. QueryDict is a subclass of dict, so it should be possible somehow.How would I make the second to last line work?
How about?
Python has a built in tool for encoding a dictionary (any mapping object) into a query stringhttp://docs.python.org/2/library/urllib.html#urllib.urlencodeQueryDict takes a querystring as first param of its contstructordef __init__(self, query_string, mutable=False, encoding=None):q = QueryDict('a=1&b=2')https://github.com/django/django/blob/master/django/http/request.py#L260Update: in Python3, urlencode has moved to urllib.parse:
Actually a little indirect but more logical way to achieve this is using MultiValueDict.This way multiple values per key can be stored in a QueryDict and .getlist method should then work fine.
My solution works both for single and multiple key values:


Answer URL
https://docs.python.org/3/library/urllib.parse.html
