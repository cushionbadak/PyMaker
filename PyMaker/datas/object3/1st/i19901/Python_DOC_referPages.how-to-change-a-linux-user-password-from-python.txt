Natural Text
I'm having problems with changing a Linux user's password from python. I've tried so many things, but I couldn't manage to solve the issue, here is the sample of things I've already tried:sudo_password is the password for sudo, sudo_command is the command I want the system to run,user is get from a List and is the user who I want to change the password for, and newpass is the pass I want to assign to 'user''A' is the return value for the execution of os.system, in this case 256. I tried alsobut it returns the same error code. I tried several other ways with 'passwd' command, but whithout succes.With 'chpasswd' command I 've tried this:also with:I tried 'mkpasswd' and 'usermod' too like this:but, if you go to https://www.mkpasswd.net , hash the 'newpass' and substitute for 'newpassencryp', it returns 0 which theoretically means it has gone right, but so far it doesn't changes the password.I've searched on internet and stackoverflow for this issue or similar and tried what solutions exposed, but again,without success.I would really apreciate any help, and of course, if you need more info i'll be glad to supply it!Thanks in advance.
Try using the '--stdin' option to the passwd command in your pipes. To quote from the man page:Another option, if your Linux has the usermod command, as root (or via sudo) you can explicitly set the (encrypted) password using the '-p' option.
I ran accross the same problem today and I wrote a simple wrapper around subprocess to call the passwd command and feed stdin with the new password. This code is not fool proof and only works when running as root which does not prompt for the old password.If you need the output of passwd you can also pass stdout=subprocess.PIPE to the Popen call and read from it. In my case I was only interested if the operation succeeded or not so I simply skipped that part.Security consideration: Do not use something like echo -n 'password\npassword\n | passwd username' as this will make the password visible in the process list.SUDOSince you seam to want to be using sudo passwd <username> I would recommend adding a new line to your /etc/sudoers (use visudo for that!)Sudo will not ask for the password for some_user and the script will run as expected.Alternatively simply add an extra p.stdin.write(u'%s\n' % SUDO_PASSWORD) line. That way sudo will receive the user password first and then passwd receives the new user password.
usermod-based version:
The user you are running this as must have sudo permission to run the passwd command without a password.
As mentioned before passing passwords on the command line is not very secure unfortunately. Additionally something like "--stdin" for passwd is not available on every passwd implementation. Therefor here is a more secure version using chpasswd:Explanation:With subprocess.Popen we launch an instance of chpasswd. We pipe the user name and password to an instance of chpasswd. chpasswd will then change the password using the settings defined for the current operating system. chpasswd will remain completely silent if no error occurred. Therefor the code above will raise an exception if any kind of error occurred (without having a closer look to the actual error).


Answer URL
