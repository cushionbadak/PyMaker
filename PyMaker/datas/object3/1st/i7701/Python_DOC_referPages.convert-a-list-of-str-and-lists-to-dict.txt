Natural Text
In Python, how do I convert a list that contains strings and lists that have two values into a dictionary such that the key is the string and the value is a list of lists such that the first value of each list is the key.For example, the current list I have is:and I want the dictionary:{'A': [['A', 1]], 'B': [['B',1], ['B',2]], 'C': [['C',1], ['C',2], ['C',3]]}Thank you. EDIT: The number of lists that follow a string is arbitrary.
With this, no matter the order of the list, it selects exactly what you're looking for.

You can try defaultdict 
It seems like it doesn't matter what the string values are in your list. Based on the current structure of the list provided, and the required output, you can just check for the lists inside the list, and by using the defaultdict construct, you can simply just craft your dictionary accordingly: Output:So, here, the defaultdict will take a list as its default collection value. Therefore, when adding a new key, the default value will be a list. As you iterate over the list, simply check the type of the data in the list. When you find a list, you insert it in to your dictionary taking the first value of that list as the key, and then append the list as the value. It should give you the output you are looking for. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
