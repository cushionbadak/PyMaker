Natural Text
My problem is: Python logging configuration is not working using configuration file and multiprocessing.I'm using python2.7.ExampleHere my example.py:And here my logging.conf file:At this point, example.py is working. You will get in my.log file logging lines from both main program and new processes.Reproduce my problemNow, if I replace lines:ByIn my.log file you will see logging lines only from main program, not from processes.Now my questions:Why this is happening?What is the solution?Thank you for your help.
You shouldn't expect writing from multiple process into a single file to work (it may work in some situations, but can't be guaranteed). The correct way is to use a multiprocessing Queue and have all the file writing done by a single process, as outlined in this blog post from 2010 (too long to reproduce here). The important thing is that each process configures logging after it's created. You could adapt the linked example to use dictConfig rather than the programmatic configuration shown in the example, if you need to.
the problem is that __name__ will evaluate '__main__'; you need to either: rename "Main" in your config file to "__main__" (for the name of the logger)or (maybe more robust): logger = logging.getLogger('Main') in your main filethe logger you are getting with logging.getLogger(__name__) is not configured otherwise.
In logging.DictConfig, the root logger is defined by "". Thus in your dictionnary, you should use:to properly set the root logger (and in the .ini file, you use "root", don't ask me why)


Answer URL
https://docs.python.org/3/howto/logging-cookbook.html#logging-to-a-single-file-from-multiple-processes
