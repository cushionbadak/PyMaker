Natural Text
I'm new to Python programming and i had a question around Multiprocessing in loops which must maintain position. In my example, i'm traversing multiple AWS IAM accounts, and creating an excel workbook, with multiple worksheets, one for each account. Within the context of each account worksheet, i need to return a bunch of permissions pertaining to the current account only.However, the processing time needed to go through each bucket is very long as there can be upwards for 400k files in each bucket. But the calls themselves aren't very taxing on the host system. So i'm looking to go through 4-6 buckets at a time, but still have them write out to their respective sheets properly.I've been unable to find an example that does something similar. Could one of you fine chaps point me in the right direction. My pseudo code is below. I'm doing this in Python 2.7 TIA!
Use thread pool:In this example executor.submit will schedule a write_permission_to_worksheet execution with permission argument.executor.submit doesn't wait until submitted task will finishes and returns right after the task was scheduled.To make sure all tasks are finished you have to invoke executor.shutdown(wait=True) however this call is guaranteed to be made by nice with ThreadPoolExecutor(max_workers=4) as executor: statementSo thread pool manages attaching a new task to working thread, switching thread to a new task and shutting down all worker threads if you ask for it.P.S. about your comment: you better use threads, not processes. Memory is not shared between processes, os prevents one process from access another process memory space. Common resources accessing (which I assume your worksheet to be) could be a very tricky problem for processes. On the other side all threads started by one process share same memory. 


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
