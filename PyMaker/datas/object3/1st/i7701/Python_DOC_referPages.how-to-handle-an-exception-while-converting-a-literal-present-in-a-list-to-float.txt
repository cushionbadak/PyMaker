Natural Text
I have a list which has values shown above. When I am trying to add to an excel sheet using pandas, it is being added as text rather than float or int. I want to remove quotation marks so that it won't be seen as text in excel sheet, I know it can be done using split, and if I try to convert all of these to float, it throws an exception for this '0(1:1)' element saying that invalid literal for for float.How do I handle this? 
The simpler solution is to wrap the for body in a try-except and append None or the original value (elem) if it fails for a particular iteration:A ValueError will be thrown when elem can't be parsed as float, while TypeError will be thrown when elem is None.Like that you don't need to check if elem is None using and if and both exceptions can be handled consistently (assuming that's what you want).Note the .strip("''") is not needed as it is actually not doing anything. According to the docs, strip() will...:Return a copy of the string with the leading and trailing characters removed.That is, it will try to remove '' from the start and the end of your values, but none of your values start or end with two single quotes. Actually, any of them contain quotes at all, those around them are just the way to represent a string, but are not part of their value.Also, float() will automatically take care of converting a string representation of a number ('1') to Float.
You can use literal_eval from ast module and use a try ... except block like this example:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.strip
https://docs.python.org/3/library/functions.html#float
