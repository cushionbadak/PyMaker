Natural Text
Please could someone help me with getting an index of an item in a nested list where a certain condition is met using Python 2.7?  I know that there are similar questions on StackOverflow about this but I can't seem to find good examples that deal with "nested" lists.I have a list of data which is hundreds of thousands of lines long, in the format below:For each row I want to compare the data in "column 5" (the first col of decimal numbers) to a certain value (lets use 1.52440 as an example) and return the index of the first row where the data is greater than my certain value.I have made code that does this the 'traditional' way using a for-row-in-data type loop, but I would like to use a better (faster) method if possible and cannot seem to produce the expected result.The rather poor attempt that I have made so far is:The first row extracts the price data col as a new list.  I am not sure this is really necessary but as my understanding of list comprehensions is poor I was trying to break things into steps I understand.I dont really understand what the second line is doing, but it seems to return (0, 1.52411) - the first item in the list - regardless of what comparison value I enter.I have also tried:and it seems to produce the same result.I thought the comprehension was saying:"Make a list of price's for each price you look at in the list-of-indexed-prices if the price-you-are-looking-at is greater than 1.5440", but it seems I am mistaken!Please could someone point out the error of my ways and help me out?  Thank you for any assistance!
Problem is, you're comparing a tuple with a float, since enumerate returns tuples of the index and item, however, tuples are deemed greater than floats in Python 2:Therefore, the first tuple produced by enumerate always yields a match.To solve this, you should instead unpack the tuple first, and return the first matching index from your generator expression using next:
You are misusing enumerate. It iterates over the sequence/iterator you provide it and yields index/value couples.Try this instead:Thepart is a generator, it yields indexes of rows meeting the condition.next iterates over this generator until the first row is returned.Because his uses a generator rather than an intermediary list, you don't have to go through the whole list. The search stops after the first row is found that matches the condition. This can be important when the table has many rows, like yours.Note that you'll get a StopIteration exception if no matching row is found. If you want to get a specific value in this case (e.g. None), you may pass it as a second argument to next:
This can be achieved by splitting the enumrator into index and value:The StopIteration section is executed when no item in the list matches the predicate.



Answer URL
https://docs.python.org/3/reference/index.html
