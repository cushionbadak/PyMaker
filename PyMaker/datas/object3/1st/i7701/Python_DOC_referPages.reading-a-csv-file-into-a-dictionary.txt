Natural Text
First I want to start off by saying I am NOT asking you to write code. I only want to discuss and get feed back on what would be the best way to go about writing this program because I am stuck on figuring out how to break down the problem. My program is supposed to open a CSV file which contains 7 columns: Here is part of the file: Then read each line into a dictionary. There are many many lines in this text file, the only lines I want/need are the lines whose Variety column reads "All GE varieties." Please note each state also has multiple lines. The next step is to use a user input of a crop and only examine the data for that crop. The final step is to then figure out (for each state) what is the max and min value and its corresponding year and print it. The way I was thinking of going about this was possibly creating a set for each line, checking if "All GE varieties" was in the set and if it is then add that to a dictionary. And then do something similar for the crop? My biggest dilemma is probably that 1.) I don't know how to go about ignoring lines that don't contain "All GE varieties." Do I do that before or after I create the dictionary? and 2.) I know how to create a dictionary with one value and one key, but how would I go about adding the rest of the values to the key? Do you do that with sets? or lists? 
As previously mentioned, you can use the csv module to read in the csv file. I wasn't exactly sure how you wanted the data structured after the state key but I thought it might be nicer to be able to look up each particular crop_title and then be able to access the value for each year separately.You could also convert year and value into integers like this crops[state][crop_title][int(year)] = int(value) which would allow you to make calls like this (where the return value is an integer):
Figuring out if "All GE varieties" is in the string is relatively straightforward - use the in keyword:For the data structure, I'm partial to lists of dictionaries, where each dictionary has a defined set of keys:The problem in this case is I'm not sure what you would use as the key, if each field is a value. Also remember the split() command can help:This would give you a list (varieties) containing lists, each of which single fields from each line.Something like this:From here it would be fairly easy to pick out the state or year, etc. using slices (2D array).
I put your data into a file named "crop_data.csv". Here's some code that uses the standard csv module to read each line into its own dictionary. We use a simple if test to make sure we only keep lines where 'Variety' == 'All GE varieties', and we store the data for each state in all_data, which is a dictionary of lists, one list per state. Since the state 'Name' is used as the key in all_data we don't need to keep it in the row dict, similarly we can discard the 'Variety', since we don't need that info anymore.After all the data is gathered we can print it nicely using the json module.Then we loop over all_data, state by state, and calculate its maximum and minimum.outputNote that in this data there are 2 years with the value of 88. You could use a fancier key function than value_key if you want to break ties by year. Or you can use value_key to sort the whole state data list, so you can easily extract all the lowest and highest records. Eg, in that for state, data loop doand it will print all the records for that state in numerical order.


Answer URL
https://docs.python.org/3/library/csv.html
