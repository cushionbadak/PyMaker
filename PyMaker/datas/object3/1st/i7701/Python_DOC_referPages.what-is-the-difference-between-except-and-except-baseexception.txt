Natural Text
What is the difference between those two:and I mean in the first case all possible exception are caught, but is this true for the second?Also can the error message be printed using the first case?
Practically speaking, there is no difference between except: and except BaseException:, for any current Python release.That's because you can't just raise any type of object as an exception. The raise statement explicitly disallows raising anything else:[...] raise evaluates the first expression as the exception object. It must be either a subclass or an instance of BaseException.Bold emphasis mine. This has not always been the case however, in older Python releases (2.4 and before) you could use strings as exceptions too.The advantage then is that you get to have easy access to the caught exception. In order to be able to add as targetname, you must catch a specific class of exceptions, and only BaseException is going to do that.You can still access the currently active exception by using sys.exc_info() though:Pick what you feel is more readable for your future self and your colleagues.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement
https://docs.python.org/3/library/sys.html#sys.exc_info
https://docs.python.org/3/library/exceptions.html#exception-hierarchy
