Natural Text
This question already has an answer here:How to clone or copy a list?                    20 answers                Help! I have a big problem using Python.   We know in Python if A=[1,2,3] and if B=A, B[1]=10, then A=[1,10,3].  To fix this, we can import copy and B =copy.copy(A) or B=A[:].  In both cases, doing B[1]=10 won't change A.Now I extend A as a dictionary, and A[1]=[1,2,3]. Doingthe result showsIt only changes A[2], not A[1]. So it is good.   But If I do A[1] = [[1],[2],[3]], andwhich instead gives menotwhere A[1] was changed. Anyone can help me figure this out? I even use A[2] = copy.copy(A[1]) still doesn't work. Thank you very much for the solution!!!!
The explantation for this behavior is that you're only copying at the first level. When you set up your dictionary asthen A[2] is an independent copy of A[1] only at the first level (id gives the memory address of an object):However, respective elements of A[1] and A[2] are still references to the same object:As pointed out in other comments, you would have to make a deepcopy to also copy at the second level:


Answer URL
https://docs.python.org/3/library/copy.html#copy.deepcopy
