Natural Text
So I have a csv file of arbitrary amount of columns and rows (fully rectangular so no missing cells) of which I want to turn into a dictionary.I want to have a dictionary that will follow this patternWhat I'm doing right now is reading each line. If I'm reading the first line each element becomes a key in the dictionary and maps to an empty list. Then I continue reading each line but here's where I run into the problem. I don't know how I assign the elements of each line to it's correct key (as dictionaries are random), that's assuming I know how to make generate a list of values that I can properly assign in the first place (for example, how can i make 1 go to key1, 2 go to key2 and 3 go to key3). I want to do this all without imports. Let me know what you guys think. 
s[0] is the first row of headings.The .split() breaks the words into the field namess[1:] gets the lines after the header rowline.split() splits the row into field valuesint(x) converts the string entry "1" into the number 1zip(*rows) transposes the list of rowszip(fields, transposed_rows) makes a list of key/value pairsdict(list_of_pairs) makes the dictionarySee references at:int() documentationzip() documentationdict() documentationstr.split() documentationTutorial coverage of string slicing


Answer URL
https://docs.python.org/3/library/functions.html#int
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#func-dict
https://docs.python.org/3/library/stdtypes.html#str.split
https://docs.python.org/3/tutorial/introduction.html#strings
