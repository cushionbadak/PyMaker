Natural Text
I am writing a simple caesar cipher program in python using threads and queues. Even though my program is able to run, it doesn't create the necessary output file. Would appreciate any help, thanks! I am guessing the anomaly starts where I use the queues to store ciphered strings, here:Here is the whole code:
while not q1.full can never be True, as full is a method, and as such will always be True in a boolean context, therefore not q1.full will always be False, you need to call the method: q1.full(). Same for q2.full.Also, you should'n try to detect wheather the queue is full in this case. If it ever would be not full, then you would continut to add data until it was and then ignore the rest, or your index can increase beyond the size of data and you would continue to add 0-length data chunks.You should use a separate thread for writing to q1 and for reading from q2, then you can just let q1 block on put().Also, you're using the same lock in your worker threads to basically serialize all computations, which defeats the purpose of threading. The problem you're dealing with is CPU bound, for which multithreading isn't going to give you any speedup in python. Have a look at the multiprocessing module. Using multiprocessing.Pool.map() (or some other of the map-methods) the whole program could be simplified dramatically and give you a speed up through mutliprocessig at the same time.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map
