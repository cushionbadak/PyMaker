Natural Text
I have an assignment in a mooc where I have to code a function that returns the cumulative sum, cumulative product, max and min of an input list.This part of the course was about functional programming, so I wanted to go all out on this, even though I can use other ways.So I tried this:  My problem is that it doesn't work. zip will pass only one object to reduce if I use it inside map, and unpacking the zip will yield the 4 tuple of (function and argument list l) so I defined reduce2 for this reason, I wanted to unpack the zip inside it but it did not work.Python returns a TypeError: int' object is not iterableI thought that I could use return reduce(l[0],l[1]) in reduce2, but there is still the same Error.I don't understand the behavior of python here. If I merely use return reduce(l), it returns again a TypeError: reduce expected at least 2 arguments, got 1What's happening here? How could I make it work? Thanks for your help.
Effectively, you are trying to execute code like this:But sum takes an iterable and isn't really compatible with direct use via reduce. Instead, you need a function that takes 2 arguments and returns their sum -- a function analogous to mul. You can get that from operator:Then just change sum to add in your program.BTW, functional programming has a variable naming convention that is really cool: x for one thing, and xs for a list of them. It's much better than the hard-to-read l variable name. Also it uses singular/plural to tell you whether you are dealing with a scalar value or a collection.
FMc answer's correctly diagnoses the error in your code. I just want to add a couple alternatives to your map + zip approach. For one, instead of defining a special version of reduce, you can use itertools.starmap instead of map, which is designed specifically for this purpose:However, even better would be to use the often ignored variadic version of map instead of manually zipping the arguments:It essentially does the zip + starmap for you. In terms of functional programming, this version of map is analogous to Haskell's zipWith function. 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.starmap
https://docs.python.org/3/library/functions.html#map
