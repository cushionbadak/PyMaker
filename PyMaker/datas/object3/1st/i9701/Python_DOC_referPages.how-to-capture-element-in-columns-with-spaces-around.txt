Natural Text
ExampleI want to reorder columns.The first thing I do is to separate the columns between the text using a separator. p.e.(?<=\S)(\s{2,})(?=\S) or(?<=\S)(\s{1,})(?=\S)Then I want to to put the columns in a list like this:expected output:I have no idea how to capture the spaces.I tried this to capture the spaces after use of the separator:but this removes the spaces before the elements in a column.How can I capture the elements in a list as in my example above?
Assuming that you're working with strings, you can use `ord' to obtain the ascii values, and split your string where alphas and numerics begin and end.To break it down:Intake each line in text one at time (from what I've read it looks like your original text could be a .txt?) to import your can use file i/o methods (more about that here and here)Pass each line as a string and convert to ascii values using ord(), store these values in a separate variableSet up logic to see where words/numbers begin (you should be looking for a pattern of an alpha, or numeric, followed by 0 or more alpha/numeric(s) followed by spaces, and after those series of spaces, you should find another alpha or numeric. Store the locations of each beginning (beginning defined as the first in the string, or the first alpha/numeric to follow after a series of spaces)Index the line of text your currently working with and pull out desired strings. This might be unclear, so see the psuedo code below:


Answer URL
https://docs.python.org/3/library/functions.html#open
