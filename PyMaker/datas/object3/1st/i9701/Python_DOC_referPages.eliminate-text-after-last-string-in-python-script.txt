Natural Text
To create a dictionary from a table file, where some columns have special characters, as "|" but I need to eliminate all the text after the last "|".For example:I wrote this to create the dictionary:Resulting in a mess dictionary like this:My intention is to eliminate the "mess" and "me.." text before to include it in the dictionary because I need this value to compare with other list without these texts.My own solution:
Split might be not performance-wise but the algorithm is simpler this way.
Given that you already read in the dictionary, this should do it if I understood you correctly:(This prints out):
You're looking for how to turn this 'this_is|my_B|best|result|mess  40' into this_is|my_b|best|result 40Say s is your string ,What this does is it gets the last index of a delimiter, in your case a '|' and constructs a new one similar to the one you want / s[::-1] is reversing the string, if it seems unfamiliar
You can try this:
You can eliminate while you are reading the file or when you have the dictionary. In my solution I will clean the dictionary:Result:
An efficient way to find the last pipe character in your tab-delimited data is to split each stripped line on tabs and then use the str.rfind method. outputIf .rfind doesn't find a pipe char in text it will return -1, so my code will simply append a pipe if text doesn't contain one.


Answer URL
https://docs.python.org/3/library/re.html#re.findall
