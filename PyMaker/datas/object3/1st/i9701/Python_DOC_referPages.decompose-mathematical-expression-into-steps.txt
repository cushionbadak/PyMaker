Natural Text
I would like to know if there is a way to print each step considering python follows PEMDAS 1. Can I make it print each step it does in solving this problem without building my own library?1 Parentheses, Exponents, Multiplication and Division, and Addition and Subtraction
The "library" can be pretty lightweight:Now any arithmetic computation that involves a verbose_number instance gets printed and returns another verbose_number, so the calculation is printed step by step:Note that this relied on the fact that I made the first number in the expression a verbose_number.  A refinement on the approach is to write a handy routine for parsing string expressions: This works by turning every numeric literal in the string into a verbose_number constructor call, thereby ensuring that all steps will be verbose no matter where Python's parser starts in the expression.  Here's how it can be used to evaluate your example:
You could use ast.parse and ast.dump to get a grasp of it.If formatted nicely, the output can look like this:Inspired by jez's answer I came up with the following solution to transform the dump into some linear steps:It prints:astviewer can give you a graphical represention of the tree. For example astviewer.main.view(source_code='(3+7-2)*4/(3+32)', mode='eval') gives you:
Nope. Not even dis.dis will show you individual steps since it all gets simplified out to a single constant before being compiled to bytecode.


Answer URL
https://docs.python.org/3/library/ast.html#ast.parse
https://docs.python.org/3/library/ast.html#ast.dump
https://docs.python.org/3/library/dis.html#dis.dis
