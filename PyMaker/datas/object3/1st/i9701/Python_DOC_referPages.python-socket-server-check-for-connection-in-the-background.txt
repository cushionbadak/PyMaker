Natural Text
I am working on a Wi-Fi thermostat with an app running on my iPhone. It uses sockets to communicate with a python program using the built in socket library. The problem I'm having though, is that I would like to be able to change the temperature when the phone is not connected however the server will search for 1 second then time out (minimum time for the iPhone to connect) this doesn't allow me to adjust the temperature with a rotary encoder smoothly through. is there a way to listern in the background?Thanks!
Your terminology is a bit confusing, but I think I see what you're trying to do. When your program executes accept with a 1 second timeout, that's not "searching" -- it's simply waiting for a client.It sounds like you should split your code into three pieces: actually adjusts the thermometer listens for a connection from your iPhone client (TCP listener)waits for ("listens for") adjustments from the rotary encoder.I would put each in a separate thread (using the python threading module). Create a FIFO queue (with the queue module). Have the first (thermostat-adjuster) thread wait on the queue (Queue.get), and have the other two accept instructions (from TCP and rotary encoder, respectively) and feed commands through the queue (Queue.put).Then you can get rid of the timeout in your TCP listener, and just have it block on the accept indefinitely. Likewise, your rotary encoder listener can simply wait for adjustments. And the thermostat-adjuster thread can just block waiting on instructions from the queue. This makes all three much easier to program, understand and troubleshoot.


Answer URL
https://docs.python.org/3/
