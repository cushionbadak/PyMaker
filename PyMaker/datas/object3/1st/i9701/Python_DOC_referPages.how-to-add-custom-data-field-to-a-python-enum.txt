Natural Text
Consider:Is there a way to adapt the ideas for simple enums to this case? (see this question) Ideally, as in Java, I would like to cram it all into one class.Java model:
Python 3.4 has a new Enum data type (which has been backported as enum34 and enhanced as aenum1).  Both enum34 and aenum2 easily support your use case:[aenum py2/3][enum34 py2/3 or stdlib enum 3.4+]And in use:1 Disclosure:  I am the author of the Python stdlib Enum, the enum34 backport, and the Advanced Enumeration (aenum)  library.2 aenum also supports NamedConstants and metaclass-based NamedTuples.
Use a namedtuple:
For Python 3:And you can use it as a standard enum or factory by type:


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html#planet
