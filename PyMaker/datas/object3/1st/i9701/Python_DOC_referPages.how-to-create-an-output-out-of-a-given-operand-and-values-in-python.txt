Natural Text
So I'm creating a program that gives random outputs including addition, subtraction, multiplication and division. In order to remove repeating any code I am attempting to narrow the function down to essentiallyI am looking to be able to call say sum(*) so c would return the product of a and b. I feel like this is a concatenation issueHere I am using sum as an arbitrary name. The function should be able to add, subtract, multiply and divide, all depending on the operand passed through. For example, if "-" is passed through, c would be a - b, if "/" was passed through, c would be a / bThanks
"operand" is a string.operate(50,5,"*") would return 250, for example.The eval() function takes a string and executes it.  This converts a and b to strings, so in the example given, the resulting string would be "50*5", which would then be executed by eval().
Python:: Turn string into operatorThis question basicially asks the same allthough with a different starting point.From the accepted answer by Annon:Reference to imported operator class:https://docs.python.org/3.6/library/operator.html
You can try this:Sample output:
Unified solution (for int numbers, as example) emulating numeric objects and calling __add__, __sub__, __mul__ and floordiv methods:The output:int(a).__int__() will create an instance of class <class 'int'>__add__, __sub__, __mul__ and floordiv methods:each method takes two objects (the operands of +|-|*|/|) as arguments and returns the result of computationhttps://docs.python.org/3/reference/datamodel.html#emulating-numeric-types


Answer URL
https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types
