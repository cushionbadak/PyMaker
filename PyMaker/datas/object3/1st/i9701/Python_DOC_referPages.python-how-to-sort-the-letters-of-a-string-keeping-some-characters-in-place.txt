Natural Text
I've already asked this question, but it was for Ruby, now it's Python's turn!I want to sort the words of a string, keeping non-alphanumeric characters in place, for example:Based in the answer I've previously received, I've tried to do:But this error pops up:
You are trying to apply the regular expression to the whole list, not the individual word:Next, you want to pass in a your sortStr function if you want it to be used for each replacement, and have that function deal with a match object. You'll also want to replace \w+ (word characters), not non-word characters:When you pass in a function as the second argument to re.sub(), it is called for every match found in the third argument, passing in a match object; calling match.group() returns the matched text (so a single word in this case). The return value is then used as the replacement.Demo:
It makes more sense to match consecutive alphanumeric characters, sort them and replace the original words while keeping all other characters untouched. That is:


Answer URL
https://docs.python.org/3/library/re.html#match-objects
https://docs.python.org/3/library/re.html#re.match.group
