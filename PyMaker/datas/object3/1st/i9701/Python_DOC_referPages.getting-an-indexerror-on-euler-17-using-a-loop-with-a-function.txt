Natural Text
I'm working on Project Euler #17 and am getting an index out of range error. Here is the text of the problem:If the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of "and" when writing out numbers is in compliance with British usage.I wanted to create a list using a loop that stores numbers from 1 to 1000 as integers, then use a function that can take the number as an argument, convert it to a string that says the number in English, and then count the number of words in each one and return that as an integer.I then create a for loop that intakes the integers from the list and puts each one through the function.Here is my code:When I run the code (using El Cap's python bash command) I get the following error message:Traceback (most recent call last):    File "euler017.py", line 40, in       letter_count.append(numToWords(i))    File "euler017.py", line 31, in numToWords      if u>=1: words.append(teens[u])  IndexError: list index out of rangeI tested the function on a bunch of random numbers individually and it worked. I also tested it on a loop of numbers from 1 to 10. It's when the loop is 100 or higher that I get the error.For the function I modified one I saw in an old post:https://stackoverflow.com/a/19193721/5960074I am not sure how this is the case. I'm not modifying any lists but creating a new one so how can something be out of range?Thanks for any help.
Move the comma between 16 and 17 out of the quotes:you havebut you want Your error is not noticed by the interpreter because it's valid python:String literal concatenation


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-literal-concatenation
