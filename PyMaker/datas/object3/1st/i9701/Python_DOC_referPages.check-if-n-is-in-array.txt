Natural Text
I would like to create a program in Python 3 which allows the user to enter the amount of letters the word has, and the some letters.For instance:I don't really know how to explain this in proper words, but you are developers as said so I'm sure you understand that.You let the user input the amount of letters that are in the word.Then you let the user input _ as blank letters and proper letters as they are shown (st_ing >> string)Then it will come up with some words that match that search that is from a dictionary array or a text file (By array I mean words = ["word1", "word2", word3"] etc..)Then you can type to narrow the search if there are no more than 1 findOnce there is only 1 find, it will prompt to restart, and then yes = restart.I'm new to python so this is probably the most complicated for me, that is why I'm asking you!I'm asking how complicated would this be and if it is even possible, how would  I go about it. I have started it, here is all I have right now: (Keep in mind I just started)
If I was developing this, I would:Keep all the words in a single setSkip the first question (you can determine word length by the length of the 2nd question)Set up a while loop for each question you ask the user so that it repeats the same question on invalid input. To check for the word, you could compile a regular expression and replace all _'s with .s:Now the part you've been waiting for, checking if an item in the set matches:The list comprehension above basically iterates through every word in the list (which can be prefiltered by length if you prefer), then checks it to see if it matches the regular expression created earlier. If it's a match, m will be a Match Object that you can get the first group of which will be the word you are looking for all packaged together as a list of words that match.The last line prints all the matches separated by a space, or "No matches" if there isn't any matches.This code is untested, and I'm not familiar with Python 3 as I am with Python 2. Good luck!


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
https://docs.python.org/3/library/re.html#re.compile
https://docs.python.org/3/library/re.html#match-objects
