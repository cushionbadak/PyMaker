Natural Text
Hey! I'm in need of an efficient program to generate every word of 20 or less letters. I have created the code above to generate all possible 1, 2 and 3 letter words. However, this seems to be an inefficient method. So my question is: 'Is There a more efficient method to generate these words upto and including 20 letters' Edit: I'm in python 2.7.9 if that helps
The below uses itertools.product to produce the combinations of letter and ''.join to join them into a word.Pretty much no matter what you do this is going to take a long time.  Even a 5 letter word will have 26**5 possibilities, which works out to 11881376 or almost 12 million.  Unless generating all the 20 letter combinations is an absolute requirement, you should look for a way to avoid it.
This isn't possible. The number of possibilities is far too high. If it was easy to generate all combinations up to 20 characters, then password cracking would be extremely easy.Let's say we can generate 10 million combinations per second, how long would it take to generate all possible combinations of just 20 characters? Note, this is JUST 20 character words - it does not include 19 character words or 6 character words.You can use itertools.product to generate combinations up to specific lengths, but you'll want to time how long (and how much memory is used) it takes for specific lengths. I think you'll find once you hit 8-10 letters it becomes unreasonably long to calculate.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/library/itertools.html#itertools.permutations
https://docs.python.org/3/library/itertools.html#itertools.combinations
