Natural Text
I want to keep a track of exceptions inside a dictionary and return the same. However when I do so, finally block gives me an empty dictionary. The logic pretty much works for scalars. Can someone explain the behavior please.In scalar context:With dictionary: 
You caused another exception to be raised in the exception handler, which is swallowed because there is a finally handler that returns from the function.You can't just concatenate an exception object and a string, so an additional TypeError is raised, and the assignment to the dictionary is never reached.Converting the exception to a string first works:From the try statement documentation:If finally is present, it specifies a ‘cleanup’ handler. The try clause is executed, including any except and else clauses. If an exception occurs in any of the clauses and is not handled, the exception is temporarily saved. The finally clause is executed. If there is a saved exception it is re-raised at the end of the finally clause. If the finally clause raises another exception, the saved exception is set as the context of the new exception. If the finally clause executes a return or break statement, the saved exception is discarded[.](Bold emphasis mine).
The line "something" + error raises an error which is discarded because you returned from finally. Due to the error the assignment to the dictionary temp is never performed giving the impression that nothing happens.This is stated in the documentation for try-except:If finally is present, it specifies a ‘cleanup’ handler. The try  clause is executed, including any except and else clauses. If an  exception occurs in any of the clauses and is not handled, the  exception is temporarily saved. The finally clause is executed. If  there is a saved exception it is re-raised at the end of the finally  clause. If the finally clause raises another exception, the saved  exception is set as the context of the new exception. If the finally  clause executes a return or break statement, the saved exception is  discarded.(Emphasis mine)Without an error (i.e temp['except'] = error you get the expected behavior:


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-try-statement
https://docs.python.org/3/reference/compound_stmts.html#the-try-statement
