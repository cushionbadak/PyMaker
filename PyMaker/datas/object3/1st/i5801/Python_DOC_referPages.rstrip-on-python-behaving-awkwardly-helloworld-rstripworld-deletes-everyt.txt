Natural Text
I had started learning python recently, and I have encountered a awkward behavior with rstrip.My understanding is that the str.rstrip() will delete all characters as soon as it encounters one of the character it took in an argument.I'm totally confused by the result I've got.Shouldn't the first code supposed be producing 'He' instead?
The rstrip() in Python takes a set of characters as the argument.If no argument is provided, the default is a whitespace.It starts stripping the set of characters from the right if and only if it encounters character(s) mentioned in your character set, on the extreme right of the input string.Which explains why l wasn't stripped in the first example.In the second example World matches with the character set provided in the argument. So, World is stripped as well as the double l and o in Hello because World has has an l and an o in it.Which leaves you with He which is the correct outcome.
str.rstrip() removes characters from the end of the string that are present in the set of characters supplied to rstrip() (if passed, and not None). rstrip() stops as soon as a character in the string is found that is not in the set of stripping characters.So, for the first example, the final character in string a is 'd' which is not in the set of stripping characters passed to rstrip(). Therefore nothing is stripped from the original string.In the second example, any of the characters in the set 'World' can be removed from the end of the string. You will notice that the substring 'lloWorld' comprises characters that are present in the stripping characters, so all of those characters are removed, leaving 'He' as the final result.However, consider the case that there is a character at the end of the string that is not in the set 'World', e.g. a full stop.nothing has been stripped because '.' is not in 'World'.
The [rl]strip methods strip away any char that is in the string that you pass as argument. Since l and o are in 'World', they get stripped as well.From the rstrip docs:the characters in the string will be stripped from the end of the string this method is called on.... not the string passed itself is stripped, but its characters!
It seems to start from the right and stop as soon as it encounters a character that is not in the set you passed as argument.
Take a look at the documentation.rstrip removes all of the characters in its argument that are in the right side of the string you modify. So since "lloWorld" are all made up of characters in "World", those get removed; e isn't, so it stops there.On the other hand, in the first call, l isn't actually on the right side (rstrip) of the string, so nothing is removed.
string.rstrip returns a copy of the string with trailing characters removed.So, a.rstrip('l') won't change anything as 'l' isn't at the end.But, a.rstrip('World') will, as the string 'World' exists at the end, all characters in string 'World' are removed from the text.Check this for a further read : http://python-reference.readthedocs.io/en/latest/docs/str/rstrip.html


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=str%20rstrip#str.rstrip
https://docs.python.org/3/library/stdtypes.html#str.rstrip
