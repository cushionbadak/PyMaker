Natural Text
I have the following string representing a UTC timestamp: 2017-12-03T20:38:00.971261ZI would like to convert it into Posix timestamp (IE: seconds since the epoch)Using this online converter (https://www.epochconverter.com/) I know the answer is 1512333480But when I do the following code, the result is off by 1800 seconds -- 30 minutes:Anyone know what I'm missing here??
You created a new timestamp and put it in the Europe/London timezone. That is not the same thing as UTC. The Europe/London timezone from the PyTZ database includes historical offsets, and those affect how datetime.datetime() interprets the timezone.Just use the datetime.timestamp() method on the datetime object you already parsed from the string:Your original temp_time1 datetime object is timezone agnostic, so the timestamp() object already assumes no timezone conversion has to take place.If you must apply the Europe/London timezone first for whatever reason, then at least use the timezone.localize() method to get the right offset applied:See How to make an unaware datetime timezone aware in pythonFor Python 2 and Python 3.0, 3.1 or 3.2, where datetime.timestamp() is not available, subtract the epoch date:Add in the UTC timezone when dealing with timezone-aware datetime instances:Combined into a function:


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp
