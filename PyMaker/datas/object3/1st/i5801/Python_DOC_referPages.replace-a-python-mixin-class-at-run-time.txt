Natural Text
I have a data access class which fetches the data from database. It is implemented as a mixin i.e. ReferenceData i want swap this class with MockReferenceData class so in unit test i do not have to access the DB. But is not working.*Note: I can not use the dependency injection. As team does not want to use it considering it will be very big code change. So i am looking to replace mixin at runtime.Out put is:I was hoping as i have used extend_instance method to point to new mocked class output will be:
If you look at the MRO of the class Car you can see:So methods are looked up first on Car, then on ReferenceData and finally on object.Compare this to the MRO of your new class (I use NewCar as name for clarity):This contains the MRO of the Car class. Methods here are still looked up first on Car and then on ReferenceData, so as totalNumberOfSeats is found on ReferenceData the implementation from MockReferenceData is not used.What you could do is to insert your mock class in the MRO before the Car class:Now methods will befirst looked up in the MockReferenceData class and if they do not exist there fall back to the previous version. So this extend_instance method should work for this simple case:
Don't use inheritance. It's a overused abstraction in many cases, and this is an example. By using dependency-injection, you can easily default to the actual DB, but replace your backend with a mocked one.Also please follow PEP8 for coding-conventions in Python. You use the "wrong" indentation depth of 2, resulting in editing problems for fellow developers like me. Same goes for method-names.
Thanks @mata i also did the same i changed the order and it worked.


Answer URL
https://docs.python.org/3/glossary.html#term-method-resolution-order
