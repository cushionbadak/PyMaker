Natural Text
This question already has an answer here:Celery task with multiple decorators not auto registering task name                    1 answer                I'm having a bit of trouble with Python decorators. I've got a scenario set up like so:For some reason, whichever function I call first seems to be persisted as the func in the decorator.So for instance, if I start up a shell and run:or, if I restart the shell and start with the second test:I found this question with a similar issue, but the few answers revolved around using extended classes for the task methods instead.If I specifically want to do this via decorators and functions, is there a trick to getting that to work?Note that without the @celery.task decorator, the functions work as normal. It's specifically the combination of the two decorators that's causing an issue.Thanks!
Each task needs to have a unique name celery docs, since it's not provided it is using the name of your wrapper function.


Answer URL
https://docs.python.org/3/library/functools.html#functools.wraps
