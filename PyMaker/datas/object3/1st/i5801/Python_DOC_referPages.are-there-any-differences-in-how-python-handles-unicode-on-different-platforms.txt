Natural Text
This is not a specific but rather a general question: are there any differences in how Python handles Unicode on different platforms?I use Python 3 to read a text file. The following code opens a file and skips the first row:I run the same code on a Linux computer and on Mac. I use conda environment that was created using the same environment.yml file. I also verified that I use the same Python version on both the computers (Python 3.6.3 :: Anaconda, Inc.). The data file is fetched from the same Git repository. For some reason, the Linux version raises an exception:
The encoding doesn't depend on python but on your LOCALE variables.It is likely that you are not using a UTF-8 locale. You can check which locale python is using withwhich on your Mac should return UTF-8, while on your linux system something like US-ASCIIHow to fix it?On Most system, the locale is taken from environment variables (see the POSIX locale documentation Adding LC_ALL=en.UTF-8 to your .bash_profile or equivalent will fix the problem.
From the python3 docs for the open() builtin:... In text mode ... the contents of the file are returned as str, the bytes having been first decocded using a platform-dependent encoding or using the specified encoding if given ... The default encoding is platform dependent (whatever locale.getpreferredencoding() returns)...Are you sure that the preferred encoding reported by the locale lib is the same on both platforms? You can enforce the encoding for reading from text files like this:Note that you don't need the file mode rt, as the t is assumed for basic file read modes; in fact, you don't need r either, as it's the default mode. So you can just do this, if you like:


Answer URL
https://docs.python.org/3/library/functions.html#open
https://docs.python.org/3/library/functions.html#open
https://docs.python.org/3/library/functions.html#open
