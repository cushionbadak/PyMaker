Natural Text
I have a list of signals (representing consecutive mesures) :I consider a signal valid only if equal to the previous n mesures.Eg. if we consider only 2 mesures for validation (n=2), the first time signals turns from 0 to 1 we consider it still 0 but the next mesure, if it's 1 again then we consider it is still valid and make it 1. Then we would need 2 mesures of 0 to turn it to 0 again, etc... Here signals are 0 and 1 for simplification but in my application they can be other integers.Desired output :I was looking of a pythonesque one-liner way of doing it but can't seem to find the desired output. I tried something along the lines :Edit : I'm open to numpy if it makes it easier as it's already imported.
I don't think there is a good way to make this a one-liner / list comprehension. While you could use all with a slice of the list to see whether the value is the same as the n values before, I don't see a good way to determine which should be the last valid value in case it is not.Instead, you could use a good-old "many-lines" for loop:Afterwards, res is [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0]Alternatively, a bit shorter, using itertools.groupby; result is the same:
But I reconsidered this and think that a pure iterative (less Pythonic) approach is probably more efficient.  After completing my new approach I now think that it is the same idea as @tobias_k already implemented in his answer:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
