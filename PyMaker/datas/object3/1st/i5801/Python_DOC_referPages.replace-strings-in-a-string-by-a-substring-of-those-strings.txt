Natural Text
Let's say I have a string like this:and I want to turn it into then - in this particular case - I could simply dowhich gives the desired output.However, in my actual data there might be not only X_ but also other prefixes, so the above replace statement does not work.What I would need instead is a replacement of a capital letter followed by an underscore and an arbitrary sequence of letters and numbersbyeverything after the first underscore. So, to extract the desired elements I could use:which printshow can I now replace those elements so that I obtain?
If you need to remove an uppercase ASCII letter with an underscore after it, only when not preceded with a word char and when followed with an alphanumeric char, you may useSee the Python demo and a regex demo.Pattern details\b - a leading word boundary [A-Z]_ - an ASCII uppercase letter and _([a-zA-Z0-9]) - Group 1 (later referenced to with \1 from the replacement pattern): 1 alphanumeric char.
If you just need to replace a capital letter followed by an underscore, you can use the regular expression r'[A-Z]_'.You may need to add to it if you have other criteria not mentioned. (For example, some of your target values follow a word boundary and some follow parentheses.) The above might give you the wrong output if you have input like XY_something. It depends on what you expect the output to be.
Another re.sub() approach:The output:[A-Z]_(?=[a-zA-Z0-9]+) - (?=...) positive lookahead assertion, ensures that substituted [A-Z]_ substring is followed by alphanumeric sequence [a-zA-Z0-9]+
You could use re.sub() with a lookahead assertion:from the docs:(?=...)      Matches if ... matches next, but doesn’t consume any of the string. This is called a lookahead assertion. For example, Isaac (?=Asimov) will match 'Isaac ' only if it’s followed by 'Asimov'.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
https://docs.python.org/3/library/re.html
