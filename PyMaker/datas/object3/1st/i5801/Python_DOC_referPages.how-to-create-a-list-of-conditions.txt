Natural Text
I am trying to create an if else code where there is about 20conditions for the elif, how do I create a list of conditions where i can just type something such as:That's my current codeIt should print "yay", instead there is syntax error
It's not actually simpler than writing a chain of if/elif/elif etc, but something like this seems to do what you are asking:Each predicate is a small anonymous function (a lambda) which receives a single argument and evaluates to either True or False.  If you have a large number of arguments you want to check against a large set of predicates, it's nice to be able to encapsulate the predicates like this. The ability to programmatically add or remove predicates from the list truly extends the versatility of this construct beyond what you can (easily, naturally) do with if/elif/elif.This particular set of predicates can't all be true for a single number. Maybe you want any() instead of all()...?
Your "conditions" are functions mapping the input to booleans. Therefore, you can write them as functions:Then you can evaluate all of these functions on some input:And if you want to know if all of these or any one of these are true, you can use the functions all and any:And not all(…) is True if one of the conditions is not fulfilled, not any is True if none is.Edit: One thing to notice is that the list comprehension [… for … in …] in check_all always evaluates all functions. This is not necessary if you use any or all, which can use an iterator and stop evaluating it onces the result it fixed (at the first True for any and the first False for all). If you use them, you can just replace the list comprehension [… for … in …] by a generator expression (… for … in …).
You could create a tuple of booleans and check it via all.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions
