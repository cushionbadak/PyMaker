Natural Text
Thisshould output 2017-08-01T00:00:00Z or 2017-08-01T00:00:00 but I get instead, probably because of local timezone.How to make .isoformat() output an UTC time instead, i.e. 2017-08-01T00:00:00?If possible I'd like to use only datetime, and no other third party library like arrow or dateutils.
Use utcfromtimestamp() rather than fromtimestamp(). From the docs:Return the UTC datetime corresponding to the POSIX timestamp, with tzinfo None.With no tzinfo specified in fromtimestamp():If optional argument tz is None or not specified, the timestamp is converted to the platform’s local date and time, and the returned datetime object is naive.Which doesn't seem to be what you want.
Shouldn't it be datetime.utcfromtimestamp() then?From python docs:classmethod datetime.utcfromtimestamp(timestamp)¶  Return the UTC datetime corresponding to the POSIX timestamp,  with tzinfo None. This may raise ValueError, if the timestamp is out  of the range of values supported by the platform C gmtime() function.  It’s common for this to be restricted to years in 1970 through 2038.


Answer URL
https://docs.python.org/3/library/datetime.html
