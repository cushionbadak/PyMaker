Natural Text
I have two programs. My main program is in python and I have another one in c++ because I have to connect to a machine and the only way I can use this machine is a dll/lib made with c++ that the constructor gave me. In my python, I'm getting from a database thousands points and I'm doing some operations on them and those points are stocked in differents array in a class. Now, I need to send thoses points to the c++ program and I was wondering how. I can send them as parameters to the main of the c++ program but the command line is then too long and I think even if it wasn't too long, this would be a really bad practice (If someone can explain a little why, that would be cool!). Actually, I'm thinkinng to generate a file with all the coordonates in this file in my python program and send it too the c++ but I have to parse it then in c++. Is it a good way to do it? Or maybe an other solution would be better?
Some ways:Use subprocess.Popen() with stdin=subprocess.PIPE and write the data one per line, parsing it on the C++ sideUse temporary files, either text files or other filesUse ctypes and load the C++ part as shared library and then call into the C++ functions from Python directlyUse Python's struct module to encode your data from Python into C structs, which avoids the string formatting and string parsing -- this can be combined with any of the three above: subprocess.Popen (read binary data from stdin in C++), temporary files (open in binary mode) or ctypes (pass a pointer to the struct directly to the library function)As to the question why passing arguments on the command line is problematic, there are limits imposed by the OS, e.g. getconf ARG_MAX.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen
https://docs.python.org/3/library/ctypes.html
https://docs.python.org/3/library/struct.html
