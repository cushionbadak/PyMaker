Natural Text
I have a CSV file I'd like to parse as a Dict, so that the first item with the key of "key" can be unpacked to a variable, then the rest of the values as a list of keyed languages. Is there a nice, clean way of doing this?My CSV is like so:Dict object as such:I did have a go but then realised that unpacking isn't the same with dicts (I assume) because they're not ordered like with lists. Am I overcomplicating things and should just saved the row['key'] to a variable and then remove it from the dict? Python isn't my bread & butter language so I'm not that knowledgable on the more magicky bits of the syntax.This is what I was kinda getting at before realising I'm lost:The basic thing I'm trying to get is t_key to be "wanna_play_a_game" and langs to be ('english': 'Wanna play a game?', 'spanish': 'Â¿Quiero jugar a un juego?')
Your question is tagged Python 3.6, and in 3.6, DictReader returns OrderedDict instances, so unpacking should actually not be a problem, if you just change return [dict(d) for d in reader] to return list(reader), otherwise you are converting those OrderedDict back to regular unordered dict.Tested with the online interactive Python shell as I'm stuck with 3.5 here:Or if the number of languages is not known, * unpack to a list:In your case, you probably need this (also remember to return list(reader)):Alternatively, you could also use a dict-comprehension to create a dictionary mapping the value of the "key" key to an OrderedDict of the translations for the different languages:Note, however, that this modifies the dicts in the list as you create the dictionary comprehension, which can be considered bad practice, but in this case, and considering that you do not keep a reference to the original dicts in the first place, I think this can be used.
Unpacking is not what you want here. You should just pop t_key from the dict and then iterate over the rest.
You can try something like this using the split() method :output:


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictReader
https://docs.python.org/3/library/collections.html#collections.OrderedDict
https://docs.python.org/3/library/csv.html#csv.DictReader
