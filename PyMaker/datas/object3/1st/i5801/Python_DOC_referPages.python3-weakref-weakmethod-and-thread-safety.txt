Natural Text
I am trying to create a simple callback that can be registered to an object from another thread. The initial object that calls the callback is running on its own thread in this case.This is best illustrated through the following example:Now the above code works just fine. But I am concerned about thread-safety here. Reading through weakref docs, it isn't very clear if weakref is really thread safe or not, except for the line:Changed in version 3.2: Added support for thread.lock, threading.Lock, and code objects.I might be simply not reading that right. Do I need to add locking, or is everything actually fine and pretty thread safe?Many thanks
OK, I understand. This is not a problem about thread safe, but just a problem about weak reference.There is an executable example:output:If you explicitly call gc.collect(), callback loses its last strong reference and then it becomes None. As you will never know when will gc collect garbage, there is a potential issue.It is no matter you use thread or not, just a normal behave of weak reference.BTW, be careful that exiting SomeThread.run will also implicitly del dummy, you can test it by removing del dummy and moving gc.collect() into try block. 


Answer URL
https://docs.python.org/3/library/weakref.html
