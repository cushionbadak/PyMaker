Natural Text
I am in the process of learning Python for a summer class, and have encountered this error: In the following code you will see I have a package which I load into Director.py, which I am using as my main file. However, BluePrints.py is missing when it is clearly in the directory. I have also checked numerous times for typing errors, but that is not the issue. There is no documentation on this issue in the book I am learning from, none that I can see in the Python documentation online, and cannot find this specific problem on StackOverflow. Here is my code:Builder/HouseBuilderInterface.pyBuilder/HouseBuilders.pyBuilder/BluePrints.pyNote: This assignment is an implementation of the Builder software pattern. Also, I have only been testing the build_room method, as seen in the Director.py file. I am not concerned with any bugs unless they pertain to the issue importing BluePrints.py The exact error message is ImportError: no module named 'BluePrints'Edit:I am using Python3.4 
The issue is that after you have imported HouseBuilders into your Director.py , the sys.path still remains at the directory of the Director.py , and hence there are no BluePrints.py directly in any directory specified by sys.path.And it is sys.path that python looks up when trying to find a package or class to import. Also I am guessing you are using Python 3.x .A fix would be to do what the documentation says -6.4.2. Intra-package ReferencesWhen packages are structured into subpackages (as with the sound package in the example), you can use absolute imports to refer to submodules of siblings packages. For example, if the module sound.filters.vocoder needs to use the echo module in the sound.effects package, it can use from sound.effects import echo.So in Builder/HouseBuilders.py , change your import statement to -


Answer URL
https://docs.python.org/3/tutorial/modules.html#intra-package-references
