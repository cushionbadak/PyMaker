Natural Text
When I run this little main from rfxcom python library :I see that CPU usage is getting very hight (around 100%). I can't understand why : there is very few messages (~ 1 message every 5 seconds) received by the module, and I thought that when epoll_wait was called then the CPU should be idled, waiting for the next event.I launched the main with python cProfile, and it shows this :So the first three function calls in term of elapsed time are python3.4/asyncio/base_events.py, python3.4/selectors.py and python3.4/asyncio/selector_events.py.EDIT : the time command on a similar run gives :Can someone explain me why ?EDIT2: As the the number of fonctions calls is very high, I made a strace of the process and found that there is a loop on epoll_wait with a timeout value of 2ms :I saw in base_event._run_once that the timeout is calculated, but I can't figure it out. I don't know how to set this timeout higher to lower the CPU.If someone has a clue...Thank you for your answers.
I answer my question as it may be usefull for others.After having set the environment variable PYTHONASYNCIODEBUG to 1, there was lines and lines like :In the Rfxcom library there is a writer mechanism with a queue to push data to the serial device. The intention was I think "asyncio, tell me when I can write, and then I'll flush the write queue". So there was a line like this :self.dev is the Serial class instance and self.dev.fd is the serial file descriptor.As the doc says "add_writer(fd, callback, *args) : Start watching the file descriptor for write availability". I thought that a serial device was always available for writing so I made a little script:And saw the lines looping endlessly, bringing CPU to 100%:So I think there is no need to put a writer callback, but simply call write on the serial device.


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html
