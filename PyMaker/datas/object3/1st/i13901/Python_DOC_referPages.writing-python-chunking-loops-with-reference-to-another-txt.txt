Natural Text
I've been working on this for a while and I'm getting pretty frustrated with it. Basically, I have two text documents that both have important information. The first document contains some information I want to extract (chromatin name, start point, and end point), and I want to use this information to search for information in the second text (I want to count the atgc for each chunk defined by the start and end point). So I am trying to extract the start-end sequence numbers, and then use those to chunk and count the frequencies of atcg for each of the frequencies. I feel like I am getting close, but my biggest problem is how can I use the start and end points I extracted from the first text, and use them as start and end points in making chunks in the second? Here is what I have so far:Right now this just prints a long list of numbers, counting how many a's there are in every chunk of 600 characters. However, I want to figure out how to define these chunks by what I have as the results of my first_text. (I.e. for the result "chrom1, 10000, 10600", in the second part of my code I want 10000 to the the start, 10600 to be the end, and then loop through all of the starts and ends, to count "a" in every trunk. If I could return a result like, "Chrom1, chunk 10000 - 10600 has 175 a's", I would be so happy!Can anyone help me out? I'm not a very good programmer... I know some of my code is redundant. Anyway, any input is much appreciated!! EDIT to clear up some things:The extraction of the start and end points is working. If IMy results aremany more. The first number in each one is the start point (e.g. 10000). The second point is the end point in each set (e.g. 10600)Edit - the start and end points should be the start and end points of the chunks. So I want to use 10000 and 106000 to find format2[10000:106000] and count the a's in this chunk, and then do this for all of the starts and ends I get. 
A bit of cleanup; you can remove all the tabs from raw before you split it.You want to save all of the extracted data instead - here is one way with a list.If your data looks like this:You can create a list of slice objects:That used a list comprehension to create start_stop.  Written as a traditional for loop it looks like this:This uses unpacking to separate the items:slice objects can be used to index into a sequence:start_stop is a list that contains slice objects which can be used extract the desired text from format2Expanded as a for loop:You seem to have forgotten to close the second file.  You can avoid that mistake by using files in a context manager using the with keyword:


Answer URL
https://docs.python.org/3/library/functions.html#slice
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#slice
https://docs.python.org/3/library/functions.html#slice
https://docs.python.org/3/library/functions.html#slice
https://docs.python.org/3/glossary.html#term-slice
https://docs.python.org/3/library/collections.html#collections.Counter
