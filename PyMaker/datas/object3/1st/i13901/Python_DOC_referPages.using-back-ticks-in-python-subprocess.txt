Natural Text
I want to run this git command through a Python script and get the output of it:The purpose of the command is to see what changes have been made on mybranch since the last merge with develop.To achieve this I'm using subprocess.Popen:However, this does not work. The variable output.communicate()[0] simply gives me a printout of git usage -- essentially telling me the input command is wrong.I saw that a similar question exists here, but it only told me to use shell=True which didn't solve my problem.I also attempted to run the two commands in succession, but that gave me the same output as before. It is possible that I am missing something in this step, though.Any help or tips are appreciated.
Backticks and subprocessThe backtick being a shell feature, you may not have a choice but to use shell=True, however pass in a shell command string, not a list of argsSo for your particular command (assuming it works in the first place)Notice when you call Popen() you get a process, shouldn't be called output IMOHere's a simple example that works with backticksOr you can use the $(cmd) syntaxHere's what did NOT work (for backticks)
On POSIX, the argument list is passed to /bin/sh -c i.e., only the first argument is recognized as a shell command i.e., the shell runs git without any arguments that is why you see the usage info. You should pass the command as a string if you want to use shell=True. From the subprocess docs:On POSIX with shell=True, the shell defaults to /bin/sh. If args is a  string, the string specifies the command to execute through the shell.  This means that the string must be formatted exactly as it would be  when typed at the shell prompt. This includes, for example, quoting or  backslash escaping filenames with spaces in them. If args is a  sequence, the first item specifies the command string, and any  additional items will be treated as additional arguments to the shell  itself. That is to say, Popen does the equivalent of:You don't need shell=True in this case.


Answer URL
https://docs.python.org/3/library/subprocess.html#popen-constructor
