Natural Text
I must find a way to get the item position when iterating over a list using a for structureFor each value inside my dict, i got a key that have a correspondent item in the list.the dict's first key, "19", corresponds to the "10" inside the other list..So i have to get the item position while using a for structure, so then i can access the correspondent key in the dict, and use the dict's value in a replace()
There are three issues here, not one. In Python (and most other languages), dictionaries aren't sorted, and replace returns a new string. They have no order. In order to get around this, you can use an OrderedDict and do something like:Look into enumerate and zip.Also notice that I renamed dict to dct and list to lst, as dict and list builtin functions. In addition, there may be a bug in your code, as you are never actually using item; I'm not sure what it's purpose in your code was.
This should be helpfull:


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#func-dict
