Natural Text
I'm trying to read stdin asynchronously on Windows 7 64-bit and Python 3.4.3I tried this inspired by an SO answer:However, it raises an OSError: [WInError 100381] An operation was attempted on something that is not a socket. Could a file-like object like stdin be wrapped in a class to give it the API of a socket? I have asked this question separately, but if the solution is simple please answer here.Assuming that I cannot wrap a file-like object to make it a socket, I tried using streams as inspired by this gist:And that raises a NotImplementedError in asyncio.base_events._make_read_pipe_transportPlease advise how to read stdin using asyncio on Windows...
The NotImplementedError exception is raised because the connect pipes coroutines are not supported by the SelectorEventLoop, which is the default event loop set on asyncio. You need to use a ProactorEventLoop to support pipes on Windows. However, it would still not work because apparently the connect_read_pipe and connect_write_pipe functions doesn't support stdin/stdout/stderr or files in Windows as Python 3.5.1.One way to read from stdin with an asynchronous behavior is using a thread with the loop's run_in_executor method. Here is a simple example for reference:In the example the function sys.stdin.readline() is called within another thread by the loop.run_in_executor method. The thread remains blocked until stdin receives a linefeed, in the mean time the loop is free to execute others coroutines if they existed.


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#connect-pipes
https://docs.python.org/3/library/asyncio-eventloops.html#asyncio.ProactorEventLoop
