Natural Text
This is my bit of troublesome code:I'm trying to print the numbers 50 through 150 separated with semicolons and spaces so it looks something like this: '50; 51; 52; 53;' and etcetera. I don't want to have the last semicolon at the end, but I can't figure out how to delete it. I've already tried the [:-1] and .rstrip methods, none of which I can think of a solution to, beacause they both delete all of the semicolons when applied like so: I'm not sure if I'm coding this incorrectly or if there's just some algorithm of functions I haven't thought of.
You can pass the whole range to print() in one go:Note the *; it expands the values produced by the range() into separate arguments to print(), which then uses the sep argument between those arguments.The alternative would be to use the str.join() method to join the integers into a long string and then print those values, but you'd have to convert them all to strings first:Here the map() function converts each integer yielded by range() into a str object.If you must use a loop, then you should loop to 148 and use an extra, separate print() call to print the last value, and use the end argument to produce your separator:Using str.rstrip() would only work if you had already built the whole string and needed to remove the trailing '; ' from that string. It won't work when using print(), as you don't have the whole string to operate on at that time.
How about print('; '.join(map(str, range(50, 150))))


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/library/functions.html#map
