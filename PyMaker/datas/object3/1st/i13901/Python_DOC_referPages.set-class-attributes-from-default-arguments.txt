Natural Text
I would like to automatically set default argument as class attributes.For example, I have (with more arguments, like a dozen or two) :And I want define the attributes automatically, without having to rewrite self.x = x all the time in __init__ body.I could use something like :But now I cannot give them default values.What I would like is some function that gives me a dictionary of the arguments with default values :With defargs being {'a':1,'b':2,'c':3,...} (but not containing kwargs).Closest thing I managed to do is :But I don't know if there is not some potentially unsafe behavior in this code.
In Python 3.3+ this can be done easily using inspect.signature:Output:
You could define the defaults manually as a dict:
You could always set actual class attributes (you're referring to instance attributes) to hold the default values, and either get them explicitly:Or just leave them to be accessed normally (not recommended for mutable attributes):Either way, Foo().a will get you 1 and Foo(a=2).a will get you 2, and you can now easily refactor to a loop over ('a', ...) for the names of relevant attributes.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.signature
