Natural Text
I am having a Python application which offloads a number of processing work to a set of celery workers. The main application has to then wait for results from these workers. As and when result is available from a worker, the main application will process the results and will schedule more workers to be executed.I would like the main application to run in a non-blocking fashion. As of now, I am having a polling function to see whether results are available from any of the workers.I am looking at the possibility of using asyncio get notification about result availability so that I can avoid the polling. But, I could not find any information on how to do this.Any pointers on this will be highly appreciated.PS: I know with gevent, I can avoid the polling. However, I am on python3.4 and hence would prefer to avoid gevent and use asyncio.
You must be looking for   asyncio.as_completed(coros). It yields as and when the results are ready from different coroutines. It returns an iterator which yields - in the order in which they are completed. You might also want to see how it differs from asyncio.gather(*coros) which returns once everything submitted to it has fininshed
I implement on_finish function of celery worker to publish a message to redisthen in the main app uses aioredis to subscribe the channel, once got notified, the result is ready


Answer URL
https://docs.python.org/3/library/asyncio-task.html#task-functions
