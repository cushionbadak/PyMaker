Natural Text
right now I have Python 3 code that takes a column of data within a CSV file, delimits the phrases in each cell into individual words based on spaces, then exports the data back into a new CSV file.  What I am wondering about is if there is a way to tell python to only apply the formatting code to a specific column with a particular header?Here is what my source data looks likeand here is my code which delimits the phrases in each cell into individual words based on a space so that the source data becomesetc                In this case, I only need all of this code to apply to the one column with the heading Keyword.  Ideally, what I am trying to do is also extend the data found in the "Source" and "Number" to these newly created rows (Lions US 3 -- Tigers US 3 -- Bears US 3  etc) but I haven't really figured out that part yet!I've been poking around the forum for awhile trying to find an answer and I know you can tell python to read the first line of the CSV file where the headers are placed (headers = file.readline()) but beyond that I am lost.  Would this be an easier task using the CSV reader?
Use the csv module to split your data into columns. Use the csv.DictReader() object to make it easier to select a column by the header:The DictReader() will read the first row from your file and use it as the keys for the dictionaries produced for each row; so a row looks like:Now you can address each column individually, and update the dictionary with just the first word of the Keyword column before producing additional rows for the remaining words. I'm assuming here that your files are comma separated. If a different delimiter is needed, then set the delimiter argument to that character:for a tab-separated format. See the module documentation for the various options, including pre-defined format combinations called dialects.Demo:


Answer URL
https://docs.python.org/3/library/csv.html
