Natural Text
I'm trying to write a program that converts two hex strings to bytes, and from bytes to binary. Once in binary, I want to perform an XOR transposition on them. This having been accomplished, I want to convert the binary strings back to bytes, and again into hex. I already know what the answer should be, it's just a question of getting from A to B. The code I have so far is as follows: The function "hexconvert" is comprised of the following code: My code is currently spitting out the following: All good so far. I'd like to know what I can add to the end of this code to convert xor1 to bytes then to hex so that I can compare it to the result it should be. I've been trying to figure out how to use struct, binascii, and even bitstring, but I'm getting nowhere. Any and all suggestions greatly appreciated. It would also be great if anyone could suggest how to make the code more efficient. Thanks very much in advance!
You don't have to convert to bits here; you can XOR bytes just fine. When you iterate over a bytes object you get the individual values as integers in the range 0-255, and you can XOR those. Vice versa, you can create a new bytes object again from a sequence of integers.Convert from hex to bytes with binascii.unhexlify(), back again with binascii.hexlify():The decode is there to convert the bytes output of hexlify back to a string.Demo:
If all you need is to xor two hex strings:


Answer URL
https://docs.python.org/3/library/binascii.html#binascii.unhexlify
https://docs.python.org/3/library/binascii.html#binascii.hexlify
