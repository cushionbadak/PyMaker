Natural Text
This is relatively a simple question.Currently, I am trying to import other python files and know that the code is quite simple for  a file in the same directory. From my knowledge it is just:import filenameSome of my files, however, have punctuation in them such as '4.1' or '4-1'.  Is there anyway to import the files as is or do I need to change the file name?currently I am running python 3 but my class is using python 2Thank you so much in advance!
If you don't have extra dots in the filename then this is possible with importlib. For example, supposing you have the filename 4-1.py:You'll still have to bind the module object to a name which is a valid python identifier, even though the my_module.__name__ attribute itself doesn't actually have such a restriction.If you have more dots in the filename, the situation is more tricky because dots indicate to Python's import system that you have submodule structure within a package.  Nonetheless it is still possible to load such a file with imp, the predecessor to importlib:importlib use is quite normal to use when you have a module name stored in a string variable at runtime. You could use it to ensure the consistency of a collection of module names with some external data source where the names are out of your control, for example. However, it would not be good to use this just to workaround having weird filenames that are within your control - better just to rename the files.
You can't import names with symbols using the import statement, but you can always use the __import__ built-in:import creates variables. It can only work with valid variable identifiers. Using __import__, you assign a different name yourself, and can refer to the target module with a string.Also, the importlib.import_module() function is less powerful than __import__, but a valid alternative for this use case.


Answer URL
https://docs.python.org/3/library/importlib.html
https://docs.python.org/3/glossary.html#term-package
https://docs.python.org/3/library/imp.html
