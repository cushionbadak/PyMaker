Natural Text
This question already has an answer here:Python - Create a list with initial capacity                    9 answers                Is there any way to create many objects at once in Python? Let say, that I want to populate a list with 1.000.000 object instances. Instead of initializing objects one-by-one in loop, is there any way to create them in one call?Iterating one-by-one takes some time and I am looking for a way other than running many threads to reduce this time.My adventure with Python started a month ago, so I am quite unaware of many Python specific tricks. Any hints how to deal with this problem? 
You must iterate N times to make N objects, either in a for loop or list comp.For example to instatiate a list of intFor a small list of 10 int:
I would use a generator:Notice at this point, obj has not been called. Once you actually convert to a list (or much better still, iterate over it) the objects will be created in turn:
objectList = [None] * 1000 # Make a list of 1000 None'sADDEDIf you are wanting to preallocate a list to avoid the overhead of reallocation the list as it continues to grow, this construct is appropriate as is will allocate the entire memory for the list and initialize each member of the list using the same object.If you need the initialize each member to a different object, you have to initialize each list element separately via a loop, list comprehension, etc.Memory reallocation under Windows tends to be a good bit slower than under Unix based systems, so this approach can be faster than simply initialing the loop as this construction runs at native speed.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
