Natural Text
I want to mock all test methods of a TestCase.My first try to use TestCase.setUp() did not work, since setUp() finishes before the test methods gets executed.I can't mock the real test method with this inside setUp():I guess I am missing something.How to use mock.patch() for all methods of a test case?
with mock.patch() is a context manager, the patch is unapplied when the context ends, and the context ends at the end of the block of code.That means that the patches are unapplied again when setUp() ends.Your options are to either use @mock.patch() as a class decorator or to use the start and stop methods on the patchers.Using @mock.patch() as a class decorator has the same effect as applying it as a decorator to each and every test method:Here both test_one and test_two are passed in a mock object because the @mock.patch() class decorator has found all test methods and decorated them.Using the start and stop methods lets you apply and unapply patches in the setUp and tearDown methods:Here patch1 is started on set-up, and stopped again when the test is torn down. This acts just like the context manager, but instead hooks into the test boundaries.Instead of using a tearDown, you can also register the patch.stop() as a cleanup function with TestCase.addCleanup():
You can use mock.patch.start, mock.patch.stop. (See patch methods: start and stop).For example:
The most general solution, which works for all context managers is:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#patch-methods-start-and-stop
https://docs.python.org/3/library/unittest.html#unittest.TestCase.addCleanup
https://docs.python.org/3/library/unittest.mock.html#patch-methods-start-and-stop
