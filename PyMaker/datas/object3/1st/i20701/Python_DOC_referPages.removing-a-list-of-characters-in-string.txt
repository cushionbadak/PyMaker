Natural Text
I want to remove characters in a string in python:But I have many characters I have to remove. I thought about a listBut how can I use the list to replace the characters in the string?
If you're using python2 and your inputs are strings (not unicodes), the absolutely best method is str.translate:Otherwise, there are following options to consider:A. Iterate the subject char by char, omit unwanted characters and join the resulting list:(Note that the generator version ''.join(c for c ...) will be less efficient).B. Create a regular expression on the fly and re.sub with an empty string:(re.escape ensures that characters like ^ or ] won't break the regular expression).C. Use the mapping variant of translate:Full testing code and timings:Results:(As a side note, the figure for remove_chars_translate_bytes might give us a clue why the industry was reluctant to adopt Unicode for such a long time).
You can use str.translate():Example:
You can use the translate method.

If you are using python3 and looking for the translate solution - the function was changed and now takes 1 parameter instead of 2.  That parameter is a table (can be dictionary) where each key is the Unicode ordinal (int) of the character to find and the value is the replacement (can be either a Unicode ordinal or a string to map the key to).Here is a usage example:
Another approach using regex:  
you could use something like thisThis code is not my own and comes from here its a great article and dicusses in depth doing this
Why not a simple loop?Also, avoid naming lists 'list'. It overrides the built-in function list.
Also an interesting topic on removal UTF-8 accent form a string converting char to their standard non-accentuated char:What is the best way to remove accents in a python unicode string?code extract from the topic:
Perhaps a more modern and functional way to achieve what you wish:please note that for this particular purpose it's quite an overkill, but once you need more complex conditions, filter comes handy
simple way,output:this-is-string--foo----bar--tuna---sandwich--is---good
These days I am diving into scheme, and now I think am good at recursing and eval. HAHAHA. Just share some new ways:first ,eval itsecond , recurse itHey ,don't downvote. I am just want to share some new idea.
How about this - a one liner. 
i think this is simple enough and will do!this is one way to do it. But if you are tired of keeping a list of characters that you want to remove, you can actually do it by using the order number of the strings you iterate through. the order number is the ascii value of that character. the ascii number for 0 as a char is 48 and the ascii number for lower case z is 122 so:
I am thinking about a solution for this. First I would make the string input as a list. Then I would replace the items of list. Then through using join command, I will return list as a string. The code can be like this:This would remove anything from the string. What do you think about that?
Here is a more_itertools approach:Here we split upon items found in the blacklist, flatten the results and join the string.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
