Natural Text
I recently upgrade Django from v1.3.1 to v1.4.In my old settings.py I have This will point to /Users/hobbes3/Sites/mysite/templates, but because Django v1.4 moved the project folder to the same level as the app folders, my settings.py file is now in /Users/hobbes3/Sites/mysite/mysite/ instead of /Users/hobbes3/Sites/mysite/.So actually my question is now twofold:How do I use os.path to look at a directory one level above from __file__. In other words, I want /Users/hobbes3/Sites/mysite/mysite/settings.py to find /Users/hobbes3/Sites/mysite/templates using relative paths.Should I be keeping the template folder (which has cross-app templates, like admin, registration, etc.) at the project /User/hobbes3/Sites/mysite level or at /User/hobbes3/Sites/mysite/mysite?
As far as where the templates folder should go, I don't know since Django 1.4 just came out and I haven't looked at it yet. You should probably ask another question on SE to solve that issue.You can also use normpath to clean up the path, rather than abspath. However, in this situation, Django expects an absolute path rather than a relative path.For cross platform compatability, use os.pardir instead of '..'.
To get the folder of a file just use:To get a folder up just use os.path.dirname againYou might want to check if __file__ is a symlink: 
You want exactly this:
Personally, I'd go for the function approach
Update:If you happen to "copy" settings.py through symlinking, @forivall's answer is better:The method above will 'see' wrong.html while @forivall's method will see right.htmlIn the absense of symlinks the two answers are identical.
If you are using Python 3.4 or newer, a convenient way to move up multiple directories is pathlib:
I think the easiest thing to do is just to reuse dirname()So you can call if you file is at /Users/hobbes3/Sites/mysite/templates/method.py This will return "/Users/hobbes3/Sites/mysite"
This might be useful for other cases where you want to go x folders up. Just run walk_up_folder(path, 6) to go up 6 folders. 
For a paranoid like me, I'd prefer this one


Answer URL
https://docs.python.org/3/library/pathlib.html
