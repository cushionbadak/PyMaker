Natural Text
During the runtime of a process I would like to read its stdout and write it to a file. Any attempt of mine however failed because no matter what I tried as soon as I tried reading from the stdout it blocked until the process finished.Here is a snippet of what I am trying to do. (The first part is simply a python script that writes something to stdout.)I know that there are multiple questions out there that deal with the same subject. However, none of the ones I found was able to answer my question.
What is happening is buffering on the writer side. Since you are writing such small chunks from the little code snippet the underlying FILE object is buffering the output until the end. The following works as you expect.However, you may not be expecting the right thing. The buffering is there to reduce the number of system calls in order to make the system more efficient. Does it really matter to you that the whole text is buffered until the end before you write it to a file? Don't you still get all the output in the file?
the following code would print stdout line by line as the subprocess runs until the readline() method returns an empty string:update relating to your question better:
You can use subprocess.communicate() to get the output from stdout. Something like:More info available at: http://docs.python.org/library/subprocess.html


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate
