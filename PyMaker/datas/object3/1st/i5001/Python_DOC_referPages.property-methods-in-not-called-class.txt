Natural Text
I have the code above (found here) and I wish to understand if there is any usability for not calling the class and getting the following result.I understand that the usual would beFor usability, I mean that Parrot.voltage has many methods of the @property available, such as deleter, fdel, getter, etc. However, I am not understanding how to use these.
I wish to understand if there is any usability for not calling the class and getting the following result.Well, you could ask the same question about getting a function back when looking up a method on a class, ie:In this example, you could keep a reference to this function and call it later passing it a Foo instance as self argument:It's actually just what Python does when you call the method on an instance (using foo.bar() instead of Foo.bar(foo)). You could do the same with your property object:Here again, that's actually what Python does behind the scene when it sees something like:FWIW, python's functions are descriptors too so the real equivalent of foo.bar() is actually Foo.bar.__get__(foo)()All this might look useless, and you usually don't use methods nor properties that way indeed - you just look them up on the instances, not on the class, and let Python do the grunt work. But having the whole object model implemented in terms of a couple simple concepts (classes, metaclasses, callables and the attribute resolution rules - including the descriptor protocol) makes the language highly dynamic and gives  opportunities to hook into the whole mechanism and customize it. As an example (general example I mean) this is specially handy for framework code by vastly reducing the boilerplate. 


Answer URL
https://docs.python.org/3/library/functions.html#repr
https://docs.python.org/3/howto/descriptor.html
