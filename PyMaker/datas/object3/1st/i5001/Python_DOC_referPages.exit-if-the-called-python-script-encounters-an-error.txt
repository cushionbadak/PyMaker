Natural Text
I have a central python script that calls various other python scripts and looks like this:Now, I want to exit from my central script if any of the sub-scripts encounter an error.What is happening with current code is that let's say script1 encounters an error. The console will display that error and then central script will move onto calling script2 and so on.I want to display the encountered error and immediately exit my central code.What is the best way to do this?
Overall this is a terrible way to execute a series of commands from within Python.  However here's a minimal way to handle it:But, honestly this is all horrible. It's almost always a bad idea to concatenate strings and pass them to your shell for execution from within any programming language.Look at the subprocess module for much more sane handling of subprocesses in Python.Also consider trying the sh or the pexpect third party modules depending on what you're trying to do with input or output.
You can try subprocess 
I don't know if it's ideal for you but enclosing these commands in a function seems a good idea to me:I am using the fact that when a process exits with error os.system(process) returns 256 else it returns 0 as an output respectively.
Invoking the operating system like that is a security breach waiting to happen. One should use the subprocess module, because it is more powerful and does not invoke a shell (unless you specifically tell it to). In general, avoid invoking  shell whenever possible (see this post).You can do it like this:If you don't care about the output, just remove the subprocess.PIPE stuff and return only the returncode from the function. You may also want to add a timeout to the execution, see the subprocess docs linked above for how to do that.


Answer URL
https://docs.python.org/3/library/subprocess.html
https://docs.python.org/3/library/subprocess.html#module-subprocess
