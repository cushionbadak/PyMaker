Natural Text
This question already has an answer here:How can I decorate an instance method with a decorator class?                    3 answers                I recently came across a technique in the Python decorator library's memoized decorator which allows it to support instance methods:The __get__ method is, as explained in the doc string, where the 'magic happens' to make the decorator support instance methods. Here are some tests showing that it works:What I'm trying to understand is: how does this technique work exactly? It seems to be quite generally applicable to class-based decorators, and I applied it in my answer to Is it possible to numpy.vectorize an instance method?. So far I've investigated this by commenting out the __get__ method and dropping into the debugger after the else clause. It seems that the self.func is such that it raises a TypeError whenever you try to call it with a number as input:As I understand from https://docs.python.org/3/reference/datamodel.html#object.get, defining your own __get__ method somehow overrides what happens when you (in this case) call self.func, but I'm struggling to relate the abstract documentation to this example. Can anyone explain this step by step?
As far as I can tell, When you use a descriptor to decorate an instance method(actually, an attribute), it defines the behavior of how to set, get and delete this attribute. There is a ref.So in your example, memoized's __get__ defines how to get attribute fibonacci. In __get__, it pass obj to self.__call__ which obj is the instance. And the key to support instance method is to fill in argument self.So the process is:Assume there is an instance dummy of Dummy. When you access to dummy's attribute fibonacci, as it has been decorated by memoized. The value of attribute fibonacci is returned by memoized.__get__. __get__ accept two arguments, one is the calling instance(here is dummy) and another is its type. memoized.__get__ fill instance into self.__call__ in order to fill in self argument inside original method fibonacci.To understand descriptor well, there is an example:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__get__
