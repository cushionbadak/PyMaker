Natural Text
I'm programming in python and have a list of lists ofHow can I merge the lists of the similar element in sub-index [0] and remove the list that contains the smallest element of index [3] ?Expected output:since a[0][1] will be added to a[1][1] and a[0] will be completely removed.I'm planning to use this to a list of ten thousands of lists.EDIT:I''ve made:But this would not work on lists if there are more than two lists that are similar in index [0], the code should be run again and again depending on how many similar elements are there. In application, my list of lists would have hundreds of similar elements in a specific index.
What you really need is to group your data by the common keys. itertools.groupby is made for this, and you can use operator.itemgetter to group by the key elements of each sublist. Once iterating over the groups, tracking the respective sum and maximum you need is not hard. This does assume that you intend on keeping the maximum and not removing the minimum, as having more than 2 elements in a group would make this impossible to do while summing the second elements.  DemoIt is also worth noting that if you have many operations to apply to tabular data like this, you may want to look into the Pandas library. Using Pandas, a succinct solution to your problem could be 
Below is my solution, it seems that can handle elements that more than 2:
Thank you everyone, I've managed to answer my problem with the use of itertool's groupbyHere is my working prototype:Output


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/operator.html#operator.itemgetter
