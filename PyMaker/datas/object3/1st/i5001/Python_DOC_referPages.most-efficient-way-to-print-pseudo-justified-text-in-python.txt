Natural Text
Suppose I have a string s with plenty of words separated by spaces. Now suppose I wanted to print this string spread out across several lines (that is, there should be a newline character periodically in between some of the words) so that each of the lines is approximately equal in number of characters per line (doesn't have to be exactly equal, there could be small variances here and there. What would be the most efficient way of doing this (in both lines of code and running time)? I realize I could insert a newline character every certain number of characters but this might slit the word in an undesirable way so that is not acceptable. The reason I ask is because I know in Java, strings are immutable and thus building a string one character at a time is O(n^2). Anyone got any clever ideas?
You're looking for textwrap.wrap:Wraps the single paragraph in text (a string) so every line is at most width characters long. Returns a list of output lines, without final newlines.Demo:


Answer URL
https://docs.python.org/3/library/textwrap.html#textwrap.wrap
https://docs.python.org/3/library/textwrap.html
