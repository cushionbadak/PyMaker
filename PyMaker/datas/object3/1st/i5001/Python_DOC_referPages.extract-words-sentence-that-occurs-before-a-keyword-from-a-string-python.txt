Natural Text
I have a string like this,Now, I want to extract the current champion and the underdog using keywords champion and underdog . What is really challenging here is both contender's names appear before the keyword inside parenthesis. I want to use regular expression and extract information. Following is what I did,However, I need the results, champion as:and the underdog as:kamil kubaru, the challenger from alexandria, virginiaHow can I do this using regular expression? (I have been searching, if I could go back couple or words from the keyword to get the result I want, but no luck yet) Any help or suggestion would be appreciated.
You can use named captured group to capture the desired results:between\s+(?P<champion>.*?)\s+\("champion"\) matches the chunk from between to ("champion") and put the desired portion in between as the named captured group championAfter that, \s+and\s+(?P<underdog>.*?)\s+\("underdog"\) matches the chunk upto ("underdog") and again get the desired portion from here as named captured group underdogExample:
There will be a better answer than this, and I don't know regex at all, but I'm bored, so here's my 2 cents.  Here's how I would go about it: for the underdog, you will have to change the 6 to a 7, and '("champion")' to '("underdog").'Not sure if this will solve your problem, but for this particular string, this worked when I tested it.  You could also use str.strip() to remove punctuation if that trailing period on underdog is a problem.  


Answer URL
https://docs.python.org/3/library/stdtypes.html
