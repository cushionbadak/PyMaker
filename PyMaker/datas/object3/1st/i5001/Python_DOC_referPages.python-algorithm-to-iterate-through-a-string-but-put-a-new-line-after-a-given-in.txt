Natural Text
I'm writing a function that should take an integer w and a string text and return a string where the following are true1) lines are of length w (the last line may be shorter as needed)2) if a word is bigger than a line, the word will be wrapped to the next line3) if there are consecutive spaces we will not output the extra spaces ExamplesMy function works as it should if it were written grammatically right but I have to account for things like the 2nd example. Example 1Example 2This fails because of multiple consecutive spaces and printsWhen it should print"However, it will break long lines at a space rather than center of a word in text"Example 3Stuck at this part. Is there an easier way to know if a word can be spelled out with the given integer w ?bend(w,text) should printinstead ofThis is my code so far
The following steps are necessary to create a function that will create lines with at most w characters by joining the words from the original string:1) remove duplicate spaces. We do this by abusing .split() which will insert an empty string into a list when a delimeter appears multiple times, then using filter to remove those empty strings.2)Create a new list that joins words that can create a line of length <= w  Handle edge case of words being larger than lines by wrapping words on next line.3)Join lines by newline characters and return the stringNow for the three examples, we obtain the following:           
The basic idea is to not look for whitespaces but split the string into single words and work with those. That also avoids possible complications with potential multiple whitespaces.The code might seem long, but that's only because of all the comments...And please keep the code documentation as you did in your example, thats a very good habit!:)


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
https://docs.python.org/3/library/functions.html#filter
https://docs.python.org/3/library/textwrap.html
