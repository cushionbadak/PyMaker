Natural Text
I'm trying to implement a jump search algorithm. However, in this example below, I cannot find the number of 72, even though it is clearly in the list that I defined. Here is the code, can someone explain to me why the rest of the numbers can be returned, but not 72 which is at position index 0 on the list?I have seen other examples on the net, however, I really wanted to test my own abilities at writing code and logic from scratch in order to get the result. So my rudimentary understanding of jump search is preventing me from knowing whether or not this is a 'correct' way of doing a jump search. Any evaluation or improvements to the code or even a sample of the 'optimal and right' way of writing a jump search would be valuable to my learning!
If you look at your while loop you'll see that what happens when list[i + constant] is no longer smaller than 72:You increment when list[i + constant] is smaller, not when equal or larger. So we know that the value is between list[i] and list[i + constant] inclusive. However, range() produces numbers exclusive the end value. From the range() documentation:For a positive step, the contents of a range r are determined by the formula r[i] = start + step*i where i >= 0 and r[i] < stop.(Bold emphasis mine).So you have an off-by-one error. The last value produced by the range() is i + constant - 1, and 72 is found at i + constant instead.You need to add one to your end value and search through range(i, i + constant + 1):
The index of 72 is exactly on one of the steps (6 in your case, and your steps are 3), and you miss it because you used a < instead of <= sign.Change list[i + constant] < number to list[i + constant] <= number.
I added some debugging output to your function, so that you can see what's going on:You can see that the while loop only executes once.  The second line of output for the while loop shows that mylist[3+3] is equal to number and the next iteration of the while loop tests whether mylist[6] < number, which is false.  So, execution jumps down to the for-loop, and the output shows that the for loop never finds a mylist[j] that is equal to 72


Answer URL
https://docs.python.org/3/library/stdtypes.html#range
