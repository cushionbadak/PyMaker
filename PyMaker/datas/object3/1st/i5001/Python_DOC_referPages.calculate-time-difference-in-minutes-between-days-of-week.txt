Natural Text
Assume we have an empty list called interval and a list of lists named shifts that consist of: day_of_week, shift_start, and shift_end:The interval list will consist of the time differences (in minutes) between the shifts. As an example, the first element of interval will be the time difference between 'Mon', '22:00' and 'Tue', '02:00' which is 240 and the last element will be time difference between 'Sun', '23:00' and 'Mon','01:00' which is 120This is my code:The problem is, the program ignore the day_of_week, so it assume the t1 and t2 were on the same day. So in my program, the first element of interval is 1320 which is 22 hours.Need help to solve the problems. If my whole code is wrong or inconvenient please provide the best way to solve it.
This would help probablyThis appending here, we can call it a small hacky preprocessing.Method get_delta returns timedelta of two datetime params.Enumerating list provides you with index and the value which are unpacked as i, day1. And further there is a condition for end case. Day2 is taken by next index.Result (in Minutes):
You can convert the start times and the end times to epoch (which is basically a number), and then simply calculate the difference. This difference will be in seconds (or ms, depending upon implementation), which you can further convert to seconds/minutes/hours as per your requirement.Epoch is basically used for storing the date, but since they are not very important to you (as in Monday 18th and Monday 25th is same), just take a random date and assign epoch to start and end times. Since it's more or less a standard thing, there will be a lot of libraries to help you out.So ...This difference will give you expected result.
Choose some random dates that fall on Sunday-SaturdayUse a timedelta object to get the next mondayWalk through the shifts and make datetime.datetime objects of the start and end times be combining the dates previously created with the shift timesGet the start and end times for adjacent shifts, subtract and printAdd a week to Monday and use it for the last interval


Answer URL
https://docs.python.org/3/library/datetime.html
