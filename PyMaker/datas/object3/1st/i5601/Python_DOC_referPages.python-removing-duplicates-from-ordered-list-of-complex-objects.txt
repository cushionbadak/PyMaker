Natural Text
I have list of several milions of dictionaries produced from json in form like this:List needs to be safe-sorted by _id key however there are disctionaries with duplicated _id. There's really few duplicates comparing to size of list (around 10-100 at most). I want to take only first (or last, doesn't matter as long as it's deterministic) dictionary for each duplicated _id. In JavaScript I'd use following:However I guess python variant of filter doesn't allow accessing index of item? Is there any similarly short way to accomplish such thing in Python? I found sorted(...) function that allows me to sort this list the way I want, however I still don't know how to filter out following duplicates (without obvious, brute for loop).
Use a dictionary to remove duplicates (this will always keep the last occurrence for each _id):Then sort its values by _id:
An idiomatic way, in python, would be:Note, the built-in python sorted is an stable-sort, using an adaptive merge-sort called timsort.  itertools is a very useful module, implementing various lazy-iterators efficiently. groupby is a grouping iterator:You can create a transliteration of your javascript, using python anonymous functions and a ternary operator (in Python, a "conditional expression"). Note, Python's sorted function doesn't use a comparator function, it uses a key-based function:key specifies a function of one argument that is used to extract a  comparison key from each list element: key=str.lower. The default  value is None (compare the elements directly).In Python 2, a cmp argument that works similarly to the Javascript version still is available (e.g. a function that returns -1, 1, or 0)cmp was deprecated and finally removed in Python 3 in favor of key.
Using sorted, filter, and map:Output:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/functions.html#sorted
