Natural Text
I need to send a simple form to a remote server using POST method with python.This form is a bit strange... some fields name are repeated without using the [] but only passing the key=value pair (this is a requisite otherwise the process on server side doesn't work!).Below an example of the original form:I use "Requests" and as per the documentation, i can pass a dictionary for sending post parameters.So i implement below code. The real data that fill the sourceDataList variable are read from a text file with a windows EOL (CR+LF), so to "emulate" the file for this example, i compile a list with some value similar to real values that are present in the fileThe problem start here.. when I print the dataList I discover that the data are "mixed" in a strange way.. sometime there is a swap between key and value!as example, the code above produce below result:where did i go wrong?- UPDATE 1 - my purpose is to create a dictionary that i can use with "Requests".If i use above set the call work as expected and send the data to server but in wrong order (some key and value inverted)If i use a real dictionary like this (notice that now i use : instead , ):and use it as parameter for "requests":I get an error:
Here you are storing your data as set.  Sets in Python are unordered in nature. {a, b} (note comma , here) is a syntax of a set. Probably you want to store it as dict (if you want it as key-value pair) which has the syntax {a: b} (note here the colon : instead of ,). OR, may be you can store it as a tuple too.For example:Here are one-liners to get the same result:Here are the sample of the result that you'll receive:
after some tests and after reading a lot of documentation about requests I finally found a solution to my specific problem.To sum up, i need to send some data to a web address using POST method with one parameter. This parameter can contain different data with same field name.As example:TESTFIELD= test01, TESTFIELD= test02and so on..now, the problem can be solved using this syntax:this function return below dictionary:{'TESTFIELD': ['test01', 'test02', 'test03', 'test04']}that request convert in a POST body like this:TESTFIELD=test01&TESTFIELD=test02&TESTFIELD=test03&TESTFIELD=test04FINAL WARNING! this is specific uses case, where the field name must be always the same, this imply that also the server side code must be able to read this specific set-up. I must use this service that is not made by me and i can't change anything on server side so i need to find this solution.The correct way to pass multiple value with same field name is to use [].As example:TESTFIELD[] = test01, TESTFIELD[] = test02 and so on...This return an array on server side. Instead, if you use this solution some server side languages can't handle it with standard functions.As example, with PHP you can't rely on $_POST superglobal you will always find ONLY ONE VALUE because this is a non standard way to pass multiple value for same parameters.If you use PHP you must use file_get_contents("php://input") to obtain all values and you must parse it by yourself.


Answer URL
https://docs.python.org/3/library/functions.html#func-set
https://docs.python.org/3/library/functions.html#func-dict
https://docs.python.org/3/library/functions.html#func-tuple
