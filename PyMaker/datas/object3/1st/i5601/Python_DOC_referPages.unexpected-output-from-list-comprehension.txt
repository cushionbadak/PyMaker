Natural Text
I have an input list as follows:which I need to flatten, so getting rid of the tuple and list as respective second and third element of test_listExpected output:I have a problem finding the correct list comprehension for this.I have tried the following 2 examples:as you can see, it does "flatten" the list, but it repeats the last element based on the number of characters in the last element. Example if the last element of the test_list is 'jklm' then the in the result the last element is repeated 4 times.I would like to know if there is a list comprehension which flatten my input list to the expected output without repeating the last element.
The following nested comprehension will work:This uses isinstance which should preferred over type(...) and can be given multiple types. If any top level element is not a list or tuple, it is wrapped in a list.
You can try:But I wouldn't use this, I would just write a for loop
You could always convert all single elements in test_list to lists:Then just flatten this with itertools.chain_from_iterable:or all in one line:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
