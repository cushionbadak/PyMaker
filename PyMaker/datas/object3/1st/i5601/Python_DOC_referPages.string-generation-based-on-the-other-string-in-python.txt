Natural Text
I want to create a simple string generator and here is how it will workI declare a pattern_string =  "abcdefghijklmnopqrstuvwxyz"My starting string lets say starting_string = "qywtx"Now I want to generate strings as follows: Check the last character in my starting_stringagainst the pattern string.Last character is x. We find this character in the find it in the pattern_string: abcdefghijklmnopqrstuvw x yzand see that next character is y so I want output qywty....However, when I reach the z, I want my string to increment second last character and set the last character to the first character of the starting_pattern so it will be qywra and so on...Now questions:Can I use REGEX to achieve that?Are there any libraries out there that already handle such generation?
The following will generate the next string according to your description.For multiple 'z' in the end:For all 'z', start over with 'a' of incremented length:To my knowledge there is no library function to do that. One that comes close is itertools.product:But that doesn't not work with an arbitrary start string. This behaviour could be mimicked by combining it with itertools.dropwhile but that has the serious overhead of skipping all the combinations before the start string (which in the case of an alphabet of 26 and a start string towards the end pretty much renders that approach useless):


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
