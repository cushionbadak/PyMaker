Natural Text
The following code snippet has two coroutines each for server and client. The client coroutine has a logic to break the while loop after 10 seconds and server should stop after 15 seconds.When I run the script this doesn't stop, ideally, it should stop after 15 seconds but this is not happening.
If you run code you will see something like this:ok, client_coroutine finished successfully, but what state of server_coroutine at this moment? It stuck at this line msg = yield from server_socket.recv_string() waiting for possibility to recive string from server_socket, but it won't happen since there's already no client to send it! And since your event loop runs until both coroutines done it would run forever.Here's the simplest fix:Note, this fix is only to demonstrate issue and one possible way to solve it. In real life I think you would want to do something different: probably, set timeouts to you coroutines to guarantee they won't stuck forever if client/server stops responding.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for
