Natural Text
This question already has an answer here:What exactly do “u” and “r” string flags do, and what are raw string literals?                    6 answers                How to write string literals in python without having to escape them?                    6 answers                Python raw literal string                    2 answers                I am trying to split a string in python into a list of characters. I know that there are a lot of ways to do this in python, but I have a case where those methods don't give me the desired results. The problem happens when I have special characters like '\t' that is explicitly written in the string (and I don't mean the real tab).Example:the output I need is:but when I use the methods that are given in this question, I get a list that contains '/t' as whole string - not separated. Example:I want to know why this happens and how to get what I want.
You can substitute your string accordingly:Output:The list comprehension looks more  "positive" and uses list(itertools.chain(*[...])) instead of list("".join([...])) which should be more performant.
You should take a look at String Literal document, which says:The backslash (\) character is used to escape characters that otherwise have a special meaning, such as newline, backslash itself, or the quote character. String literals may optionally be prefixed with a letter r' orR'; such strings are called raw strings and use different rules for backslash escape sequences.In your example string, \t are not two characters but a single character which represents ASCII Horizontal Tab (TAB).In order to tell your Python interpreter that these two are separate character, you should be using raw string (using r before string "")as:But here also you'll see two \\ in the resultant list, which is just a Python's way of representing \.For Python interpreter '\' is an invalid string because \' in a string represent Single quote ('). Hence, when you do '\', it raises below error because for Python there is no end quote present in the string:If you can't declare your string as raw string (as it's already defined or imported from some other source), you may convert it to byte string by setting encoding as "unicode-escape":Since it is a byte-string, you need to call chr to get the corresponding character value of each byte. For example:
You could maybe convert to a Python's literal string and then split character by character?Outputs:The Ascii 92 is a single backlash, even though when you print it in a terminal, it'll show it escaped.
\t means tab, if you want to explicitely have a \ character, you'll need to escape it in your string:Or use a raw string:


Answer URL
https://docs.python.org/3/library/functions.html#chr
https://docs.python.org/3/library/stdtypes.html#dict
