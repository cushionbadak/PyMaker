Natural Text
This question already has an answer here:Identifier normalization: Why is the micro sign converted into the Greek letter mu?                    2 answers                I have learnt from PEP 3131 that non-ASCII identifiers were supported in Python, though it's not considered best practice.However, I get this strange behaviour, where my ùúè identifier (U+1D70F) seems to be automatically converted to œÑ (U+03C4).Is that expected behaviour? Why does this silent conversion occur? Does it have anything to see with NFKC normalization? I thought this was only for canonically ordering Unicode character sequences...
Per the documentation on identifiers:All identifiers are converted into the normal form NFKC while parsing;  comparison of identifiers is based on NFKC.You can see that U+03C4 is the appropriate result using unicodedata:However, this conversion doesn't apply to string literals, like the one you're using as a dictionary key, hence it's looking for the unconverted character in a dictionary that only contains the converted character.You can see similar problems with e.g. string literals used with getattr:


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#identifiers
https://docs.python.org/3/library/unicodedata.html
https://docs.python.org/3/reference/lexical_analysis.html#identifiers
