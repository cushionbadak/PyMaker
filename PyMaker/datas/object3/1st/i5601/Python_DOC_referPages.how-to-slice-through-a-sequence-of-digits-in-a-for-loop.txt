Natural Text
This question already has an answer here:Rolling or sliding window iterator?                    19 answers                I have an N length string of digits or a number. I then turn it into a list to iterate over the digits. I want to slice the list into 5 digit blocks that look like so:and so on...I am having trouble finding code examples of this for python, specifically slicing and for loops. Any help would be appreciated, thanks.
First, you need to understand how each of the elements in N = '1234567890' is indexed. If you want to access "1", you can use N[0]. "2" with N[1]. And so on till N[9] which equals to "0".Your goals is to create things likeLet's take a look at slice1 with both values and how to access then via NNow we turn to list slices. Given a list l. One can select a part of it by specifying the start and end, two indeces like l[start:end]. Note that l[start:end] will select elements Yes. l[end] is not selected. The selection will include the starting index but exclude the ending index.Back to the slice1 example, how do you select '12345'? From the discussion above, we know we want indeces from 0 to 4. Thus, we need to put N[0:5] because as mentioned, N[5] would not be included in this way. Given this practice, you can now write a for loop to yield slice1, slice2, and slice3 in a row.We can do it like We did it by defining a variable gap. There is always a gap of 5 between the starting index and the ending index because the slices we want are of length 5. With some more observation: if a starting index is i and then the ending index should be i + gap. We increment one at a time to get a new slice.Note that I only introduce one way to do list slicing that matches your particular need in this example. You can find more usage in this question Understanding Python's slice notation 
You can create a list of using list comprehension.
Just do thisthis should do the trick. But I need to say that it is hard to believe you actually search the Internet because it is a frequently asked question...UPDATEif you want to use the different slices you can try this:So what happens here is:You make an array that has the size of the string and fill them with None valuesYou check if the remaining size of the string is 5 pieces longif so you slice the string in pieces of 5 with [i:i+5] and do the check again for the next slicesif not you delete the remaining None values and break the loop
You can also try converting N to a list beforehand, and popping off the first character each iteration, until the list is less than length 5. Then you could just take the first five characters each iteration.Here is an example using collections.deque:Which Outputs:Note: itertools.islice was used here to slice the deque object. You could also use list(items)[:5], but this creates an extra copy of the list everytime. 
Using a dict comprehension:Usage:and so on...
As simple as that:-


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
