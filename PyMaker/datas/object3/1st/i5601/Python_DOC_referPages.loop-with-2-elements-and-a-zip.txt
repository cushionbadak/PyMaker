Natural Text
A friend sent me a Jupyter notebook with the below code:I understand the output as it creates a new column 'Allocation' in each dataframe 'aapl', 'cisco'... and applies weights to the Normed Returns. However, I do not understand the syntax enough that I could do it again by myself.How does this for loop on 2 elements and the zip work please? (I thought that the elements had to be of similar length when zipping otherwise the output data would be truncated).
The key bit of Python syntax here is the zip() function.From the documentation, we can see that this:Returns an iterator of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables. So it is passed iterables and  'zips' them together. This may be easier to see with an example:So, in your code, this is being used alongside a method called 'tuple unpacking' which is just doing something like:This allows for clean code that will iterate over the tuples that are returned from the zip(). If you are still unsure on what the loop is doing, we could modify it to print the variables (for simplicity I also converted the variables passed into zip to strings):which you can see from the output gives what we expected:I hope that clears up the code for you, it seems from how you asked the question that you already know how these variables are actually being dealt with in the loop so I won't go into that.
This looks like a portfolio diversification kind of code. The aapl, cisco, ibm and amzn are DataFrames containing at least a NormedReturn field.The DataFrames might as well be containing single values, like 'NormedReturn':[13], no problem.Zip function zips together iterables. It is assigning the given allocation weights to these returns; .3 weigth to the aapl stock, .2 weight to the cisco stock, etc:Gives us the stock returns and the respective allocation weight:Finally the assignment multiplies return series by the allocation weights:Gives your allocation, i.e. return*weight series:I think after this your friend must be putting all of the NormedReturns and Allocations together, which is like your final portfolio return.


Answer URL
https://docs.python.org/3/library/functions.html#zip
