Natural Text
Here I am trying to get all the continuous capital letter strings in a sentence. I have tried the following which gives an output as 'LJ'I haven't been able to figure out why it doesn't add STRR and HLLJ but it adds only LJ instead to the list. Does it assume [""] as a string.My input is :STRR hello HLLJ and I wish to get an output as ["STRR","HLLJ"]Test case :     ABCD AAA lkjl JJJJJJ. Here it should give ["ABCD AAA","JJJJJJ"]Any help is appreciated.Using Reduce I came up with this Finally but its not efficient: reduce(lambda x, y : x[0:len(x)-1] + [x[-1]+y] if y.isupper() or y.isspace() else x + [""] if not x[-1].strip() is "" else x,"STRR Hello HLLJ", [""])
Finding patterns in strings is what the re module is for:or, if you don't want to include capital letters that are part of another word, you can exclude them using word boundary anchors:Caveat: This only looks for ASCII letters.
With a regular expression and re.findallExplanation:[A-Z\s]+ matches one or more subsequent captial letters or whitespacefindall returns a list of all matches.
Just for completeness, another solution using itertools.groupby:
This is my version using reduce which works as it should for input "STRR Hello HLLJ" it gives output ['STRR H', ' HLLJ']. Its nice to get different ways to solve.I know this is not efficient.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
