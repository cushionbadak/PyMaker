Natural Text
I need help with the next situation. There is one project, that is requiring two versions of one library. Let this lib be lib, and its versions: libold and libnew. These libs are not accessible via pypi, i.e. they are each in their own folder. Let the paths of these folders be /path/to/libold and  /path/to/libnew.In my project I need instances of classes from both these libs, but I can't import them both, but only either old or new lib.I tried the next method:After performing this commands, libold and libnew represents the same library, libold.I also tried importlib and imp and got same result.How can I perform importing 2 versions of a lib?
Python adds imported modules to sys.modules. When you write import lib as libnew, sys.modules['lib'] already exists, and therefore the new lib is not imported.To import the new lib, you should delete the old one from sys.modules, like this:However, you may encounter serious problems by doing so. In particular, if the old lib tries to import a submodule (say, e.g. lib.submodule), it will get the new one instead. For this reason, you'd better import all submodules of the old lib before deleting sys.modules['lib'] and before importing the new one.However, that's a dirty hack, not a real solution. In Python, modules and packages are identified by name, not by path. This is how it works and has always worked, and there's nothing you can do about it.Consider using multiprocessing instead to overcome these "limitations". With multiprocessing you can run two processes: one that uses the old lib and the other that uses the new one. multiprocessing gives you many tools to make interprocess communication easy.


Answer URL
https://docs.python.org/3/library/multiprocessing.html
