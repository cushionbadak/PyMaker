Natural Text
I have following code:Now I want to unit test this function; when input is not starting with "prefix" it can actually throw an exception. Here's my unittest code:The problem with this test code is: it catches the exception, but the exception is 'int' object has no attribute 'startswith', instead of input should start with prefix!. The test will pass, but it's not a good test. How can I identify the two exceptions?
raise Exception is very bad form - try to be more specific when raising exceptions. Using such a general exception makes it really difficult to distinguish between the two different cases you're trying to test for.In this case, for example, I think ValueError would be most appropriate within foo, as it's the right type of thing (a string) but doesn't have the right value (no 'prefix' at the start). This lets you distinguish between the type of the input being wrong (which raises an AttributeError due to the absence of .startswith*):and the value of the input being wrong (the ValueError explicitly raised for a missing 'prefix' prefix):Note how you can use the with context manager form of assertRaises to get access to the error itself. This allows you to also check that the correct message is being provided for the error.* You could even consider handling the AttributeError within foo, and raising a TypeError instead. That seems like a more natural fit for "that parameter was the wrong type".
You are passing an int to your function foo but it looks like you wanted a str (as you're using startswith on the input parameter). Your unit test should be:
The line that is raising the error is:And not:Because you are passing an int instead a string: 999 instead '999'Remember that int, have not an attribute startswith.
Simply implement and raise your own exception.Note that your test would fail now. I'm not sure if that's what you wanted to test.


Answer URL
https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises
