Natural Text
This question already has an answer here:How to merge two dictionaries in a single expression?                    44 answers                I was doing django project about processing request.data and from.cleaned_data issues. When user only inputs specify fields, it will send request to my server. Next, the form class process the request, except processing inputed fields and return no inputted fields from form built-in fields.This is request data:This is cleaned data from from class:I know these are dictionary type. I hope getting their union keys of them and values of cleaned data. I expect that it returns:This is my attempt:Is it readable? or is there any built-in functions about processing union dictionary in python?
You can use intersection operations (which sounds like what you really want, not union) to efficiently limit iteration to keys common to both dicts, then use a dict comprehension to achieve this fairly efficiently:So when a key exists in both the request and the cleaned data, you'll have a mapping from that key to the cleaned data. All other keys that appear in only one input dict or the other are dropped. In Python 3, you'd replace .viewkeys() with just .keys() (and this won't work before Python 2.7, which is where .viewkeys() was introduced).
There's nothing inherently wrong with what you're doing, all totally fine. However, the more pythonic way to do this would be to use a dictionary comprehension:
just do: request_data.update(form.cleaned_data)


Answer URL
https://docs.python.org/3/whatsnew/3.0.html#views-and-iterators-instead-of-lists
