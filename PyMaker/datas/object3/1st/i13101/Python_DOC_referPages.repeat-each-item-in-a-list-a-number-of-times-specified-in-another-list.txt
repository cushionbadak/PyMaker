Natural Text
I have two lists, x and y:I want to use these to create a new list.  The new list will have each element in x repeated the number of times specified by the corresponding element in y.  Hence, the desired output isThe order of the elements in new_list doesn't matter to me.  It's also not crucial that it be a list -- any sequence type is fine.What is the fastest, most efficient, most Pythonic way to achieve this?
You can use list comprehension, like thisHere, we zip the x and y so that the element from x and its corresponding count from y are grouped as a single tuple. Then, we iterate count number of items to produce the same item.If your objects in x are immutables, then you can create count copies of the same and put them together in a list, like thisYou can do the same lazily, with itertools.repeat, like thisPlease note that the chain returns an iterable, not a list. So, if you don't want all the elements at once, you can get the items one by one from it. This will be highly memory efficient if the count is going to be a very big number, as we don't create the entire list in the memory immediately. We generate the values on-demand.Thanks ShadowRanger. You can actually apply repeat over x and y and get the result like thishere, map function will apply the values from x and y to repeat one by one. So, the result of map will beNow, we use chain.from_iterable to consume values from each and every iterable from the iterable returned by map.
numpy's repeat function gets the job done:
Simple using for loop.
One way to achieve this is via using .elements() function of collections.Counter() along with zip. For example:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.repeat
https://docs.python.org/3/library/collections.html#collections.Counter.elements
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/functions.html#zip
