Natural Text
I have string in a python script which contains some java code. How can I extract base java class name from it in order to execute it using subprocess? I think it can achieved using regex, but I don't know how.Sample:
As I said in comment, use re.findall() like this:As the function name, findall() can find all of the class names. And use \w here will match all ascii letters(will be better than .* if you're using class MyClass{).About find the main class, use re.S like this:A more simple way, only one line use list comprehension:
A main class is a class which contains the public static void main function. If it is possible in your environment; you could use a library that can parse Java source code such as plyj or javalang:If there is a package declaration e.g., package your_package; at the top of the Java source i.e., if the full class name is your_package.second then you could get the package name as tree.package.name.Or you could use a parser generator such as grako and specify a Java grammar subset that is enough to get the class name in your case. If the input is highly regular; you could try a regex and expect it to fail if your assumptions about the structure of the code are wrong.
An approximate solution to the problem is possible with regular expressions, as you guessed. However, there are a few tricks to keep in mind:A class name may not terminate with whitespace, since MyClass{ is legal and commonA type parameter can be provided after the classname such as MyClass<T> and the compiled .class file's name will not be effected by this type parameterA file may have more than one top level class, however one must not be declared public and this class cannot have the same name as the fileThe public class that has the same name as the file may have inner class (which may even be public) but these must necessarily come after the outer class declaration.These tips lead to searching for the first occurrence of the phrase public class, capturing the next run of characters, then looking for whitespace, a { or < character.This is what I came up with (may be a bit ugly): public\s*(?:abstract?)?\s*(?:static?)?\s*(?:final?)?\s*(?:strictfp?)?\s*class\s*(\w.*)\s*,?<.*$
Using only regex is hardly ever going to work. As a basic example of why it could not, consider this:You get the idea... Regex could always be fooled into believing they found something which isn't really what you are looking for. You must rely on more advanced libraries for parsing.I'd go with J.F. Sebastian's answer.
Here's a crude way:...which essentially takes all the words, and find the first word after the first occurrence of "class".  It also removes "{" and anything after it, if you have a situation like However you would need to do a lot more if you have multiple classes in a file.  


Answer URL
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/library/re.html#re.S
