Natural Text
I have an object to store data: and a list to store this objects im using another list to store keys of my vertices, so i can easy access(withot looping every object), each time i need to check vertex with such key exist, like that:i think it a bit complicated, maybe someone now better way, to store multiple Vertices objects with ability easy to check and access themThanks
your example works fine, the only problem you could have is a performance issue with the in operator for list which is O(n).If you don't care about the order of the keys (which is likely), just do this:then:you'll save a lot of time in the in operator because set in is way faster due to key hashing.And if you don't care about order in self.verteces, just do a dictionary, and in that case, you probably don't need the first key parameter to your Vertex structure.
When you need to check for membership, a list is not the best choice as every object in the list will be checked.If key is hashable, use a set.If it's not hashable but is comparable, use a tree (unavailable in the standard library). Try to make it hashable.
If I understand correctly, you want to check if an element has already been added for O(1) (i.e. that you do not have to check every element in the list).The easiest way to do that is use a set. A set is an unordered list that allows you to check if an element exists with a constant time O(1). You can think of a set like a dict with keys only but it works just like a list:If you need an ordered list (most of the time, you don't), your approach is pretty good but I would use a set instead:


Answer URL
https://docs.python.org/3/library/stdtypes.html#set
