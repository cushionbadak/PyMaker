Natural Text
I need help,I convert a program written in HPBASIC to python a VNA network analyzer.Whose data format is:Data Transfer Format:FMB Select IEEE-754 64-bit data transfer format.Binary Data Transfer Message FormatÂ :MSB MODE: Byte Count Byte Count BytesHere is an excerpt:OUTPUT @ Vna360B; "FMB MSB"! Transfer format 64-bit, most significant byte.                                                                             ! FMB (64-bit) 3068 (Maximum Number of Collected Points).OUTPUT @ Vna360B; "OFV"! Output frequency values.ENTER @ Vna360B; P, S! Return two integers.ENTER @ Vna360b; Freqs (*)! Return Array foat frequencies.Here's what I get with PyvisaI should have gotten by decoding a value of 2.6 Ghz:Out: [ '\ x00 \ x08A \ x08A \ xe3_ \ x1b @ \ x00 \ x00']My questions are:What is this format, Binary, hexa?How to make python to decode '\ x00 \ x08A \ x08A \ xe3_ \ x1b @ \ x00 \ x00'  ?Thank you for your help.
FormatsThe data is a list of bytes. You can decode the bytes in any number of different ways. For example, we can iterate through the bytes and list the bytes decoded as integers:Or we can consider each byte as an ASCII character:Note that most of these characters aren't visible. Some are the backspace character! An ASCII code table can show you how each byte is being decoded. Both of the two above approaches consider each byte separately. One byte is too small to store your value of 2.6 GHz.Decoding Larger FormatsThe struct module is made for reading packed byte arrays into python-readable values and writing python values into byte arrays. Struct is a builtin package, you don't have to install it separately. First, let's start with our known value: 2.6 GHz. We'll pack that as a bytearray and see how it compares with the value recieved from the instrument:This looks just like the end of the array we read from the instrument! The only difference is that the order is backward. The instrument must be using "big-endian" rather than "little-endian" byte order. (To read more about byte order, see the struct docs.) We can switch the byte order by using > instead of <.This matches the end of the array exactly! (In your original example, you may have cut off one of the zeros when pasting your result.) The first 4 bytes probably have some other meaning, you'll have to check the manual of the network analyzer for details. In order to read the bytes and convert to a float, we'll use unpack:The output is returned as a tuple. Since only enough bytes exist for one float value, the tuple has length 1.


Answer URL
https://docs.python.org/3/library/struct.html
https://docs.python.org/3/library/struct.html
