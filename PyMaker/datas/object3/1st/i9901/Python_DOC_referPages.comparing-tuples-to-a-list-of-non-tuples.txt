Natural Text
Wrote the code below to take in a list/set and a string and if I am able to break the string into two words that are in the list then I return. I know I'm close, I just cant get the comparison right or something. e.g.would return True.This is where I don't know where to go now.        
Add your word pairs as tuples, rather than as a space-delimited single string, then filter that list on tuples that are a subset of your wordset1 set:I used the set.issuperset() method here; it returns True if all of the elements in the argument iterable are present in the set, so if it returns True only if both elements in the tuple are present.Only then combine the words into a single string:You don't need those intermediary lists, really; you only need to find if there is any such tuple that is a subset for your function to return True:I turned breakup into a generator expression; no need for the whole list to be built if you can find a matching word-pair early on. The any() function returns True as soon as one of the values it iterates over is true. Since that's a generator expression too, this tests word pairs lazily until a match is found.Demo:
Here is an example with itertools.combinationsTrue


Answer URL
https://docs.python.org/3/library/stdtypes.html#set.isdisjoint
https://docs.python.org/3/library/functions.html#any
