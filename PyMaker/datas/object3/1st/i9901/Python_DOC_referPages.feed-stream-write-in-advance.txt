Natural Text
I am translating a metronome I wrote for Android into Python for classic Desktop machines.Under Android, the buffer was 2s long and always filled wich means it was 2s-lag-proof.With Python and Pyaudio, I am doing something like (bar with 4 beats):And see:PyAudio is waiting for his buffer to get empty before resuming. The "Blocking" way as I understand.Instead, I would like to see (as in Android)With a BPM of 120 it means the stream always has a 2sec buffer ready to be read.My question:  Is there any to feed the buffer at the same time it is read?When I try my metronome in a virtual machine on crappy hardware host, the first beats are lagging wich worry me...I am not sure the callback method would allow that and since I need to play specific sound depending on where I am in the structure (my metronome handle complex structure) and bar, it would be painful to implement.
You could do that using Python threads (from the threading module), but it makes much more sense to just use the callback API (which will create a separate audio thread for you).You can implement buffering with a Queue.I just created an example program for the sounddevice module, which shows how this can be done.


Answer URL
https://docs.python.org/3/library/threading.html
https://docs.python.org/3/library/queue.html
