Natural Text
Can you help me on how to make this script work.For DefragFor Disk Clean upUpon trying this scripts, it didnt do anything and no error message prompt. Thank you.
If your defrag.exe or cleanmgr.exe are not in your path, they won't execute and you won't get an error messageYou would need to run the scripts as an administrator to make them work.You don't need to terminate your lines with a semi-colon in PythonIf you want to find the the correct full path of your executable, you can use the following script:I'd suggest to Spectras' idea and read the output while it comes and not once everything is finishedIn addition I think Python is an overkill here, a simple batch file will do the job
Building upon my comment: my bet here is the script works perfectly, but you expect to see output right away and, not seeing any, abort the program.However, read() will stop your script until the command completes. And only then will the pringint happen. Thus, no output will ever be displayed until after the command has completed.I would change it like this:The idea being to print as it goes: when a size is specified, read does not loop until the descriptor is closed, it returns as soon as it reads something.It's not the most efficient here as it will read chars one by one. For the programs you're running it should not matter much, and reading more without introducing buffering delays with python is complex.If you are not using the output in your program and just want it to pass through, maybe you'd be better off just calling :With no additional parameters, output will just go to your script's output. The function waits until the command completes before returning.
the problem you face is because you are trying to launch 64-bit executable out of 32-bit process.When your python or cmd prompt you launch the scripts is 32-bit, it will launch defrag.exe in 32-bit mode if you just specify defrag.exe alone without full path.And cleanmgr does not return anything, you should just get an empty string back.Try code below, it should works for both python 32-bit or 64-bit targeting 64-bit OSSuggest to use subprocess instead, os.popen is deprecated


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.check_call
