Natural Text
in a simple list following check is trivial:but if it is a list of list, such as:how can this be addressed in order to return True?
Try this, using the built-in any function. It's the most idiomatic solution, and it's also efficient, because any short-circuits and stops as soon as it finds the first match:
Here's a recursive version that works for any level of nesting.Here are a few tests:
You can use set.issubset() and itertools.chain():You can also chek the membership for multiple items efficiently:
This would work:I would recommend Oscar's answer as any is the right option here.
TL;DRNote that, somewhat interestingly:Is over 50% slower to execute.Original Answer(s)What if you have a depth greater than 2? Here's one approach to the generic case:Not sure about speed though, but as I said, it's one approach that may be useful to someone!EDIT - BETTER (FASTER) ANSWER:This reduces the time taken (if n is found, actually even if it is not found, about half the time actually...) by returning early. This is slightly faster than @Curt F.'s answer, and slower than creating a function that assumes a maximum depth of 2 (the accepted answer).Quick timing (very hacky, sorry, busy today!):
try 
My code is based on Óscar López's solution. His solution wasn't exactly what I needed for my problem but it gave enough info for me to figure out my problem. So if you have nested elements in one list and need to see if they're in another nested list, this would work.


Answer URL
https://docs.python.org/3/library/functions.html#any
