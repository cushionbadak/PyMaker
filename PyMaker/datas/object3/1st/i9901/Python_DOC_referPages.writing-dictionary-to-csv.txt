Natural Text
After looking around for about a week, I have been unable to find an answer that I can get to work. I am making an assignment manager for a project for my first year CS class. Everything else works how I'd like it to (no GUI, just text) except that I cannot save data to use each time you reopen it. Basically, I would like to save my classes dictionary:after the program closes so that I can retain the data stored in the dictionary. However, I cannot get anything I have found to work. Again, this is a beginner CS class, so I don't need anything fancy, just something basic that will work. I am using a school-licensed form of Canopy for the purposes of the class.
Either use the csv library, or do something simple like:Edit: Since it seems that you can't read or write files in your system, here's an alternative solution (with pickle and base85):To save something, you call save on your object, and copy the string that is printed to your clipboard, then you can save it in a file, for instance.To load, you call load() and enter the string:
L3viathan's post might be direct answer to this question, but I would suggest the following for your purpose: using pickle.By this method, the variable would retain its original structure without having to write and convert to different formats manually.
The pickle approach described by @Ã‰be Isaac and @L3viathan is the way to go. In case you also want to do something else with the data, you might want to consider pandas (which you should only use IF you do something else than just exporting the data).As there are only basic strings in your dictionary according to your comment below your question, it is straightforward to use; if you have more complicated data structures, then you should use the pickle approach:That gives you the following output:In detail:.from_dict(classes, orient='index') creates the actual dataframe using the dictionary as in input.sort_index() sorts the index which is not sorted as you use a dictionary for the creation of the dataframe.rename(columns={0: 'assignments'}) that just assigns a more reasonable name to your column (by default '0' is used).to_csv('my_csv.csv') that finally exports the dataframe to a csvIf you want to read in the file again you can do it as follows:


Answer URL
https://docs.python.org/3/library/csv.html
