Natural Text
I'm currently stuck on a question where I need to check for every instance of the letter "a" in string1 and replace it with a substring.For example lets say that the substring is "dragon", if the original string1 was "apple", I would need to return "dragonpple". So far I have my attempts are:I dont really know how to structure this but this was my general thought process. I'm not sure how to remove the letter "a" and replace it with the substring without breaking up the string itself. Also I can't use indexes or the .remove method. Would appreciate the help.
There's a number of issues here; let's break them down without altering your original code too much:You function definition lacks a name, define it with a name properly. For example:I'm guessing this might be a copy-paste omission.if letter ! = "a": is a SyntaxError, ! = doesn't get interpreted as != (but as two separate operators ! and =), unfortunately, that needs fixing too.elif letter = "a": is another SyntaxError; assignment statements should not be confused with equality checks, that is = is not similar to using ==.new_string.append(letter) is a TypeError; the method append isn't defined for strings, strings are immutable and appending is a method that mutates the object. append is available on lists.a = substring isn't doing much :-(. You assign to a and then simply don't use it.FInally, you don't return anything. Even if your function created the string correctly, you can't get it back because your don't use the return statement.One approach you could consider is to use a list of character strings and mutate that; lists are mutable so mutate to your hearts desire. Then, you join the list in the end and return a string out of all the characters inside it:This yields your wanted result. If you can't use a list, mutate it and then join you could resort to incrementally building a new string:This again behaves like the previous list based function but relies on += which creates new strings by joining the old value in new_string with the letter or the substring based on the condition.Of course, .replace on strings would do the trick as the comment by @yper suggests but that beats the point of explaining how your attempt didn't achieve what you were after.You were close but missing a couple of basic things, I'd advice you take a look at the Python Tutorial. :-)


Answer URL
https://docs.python.org/3/tutorial/index.html
