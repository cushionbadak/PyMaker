Natural Text
If I have a list of dictionaries, is there a way to refer to a specific element within the for loop declaration?Something like this:Or something similar?
No, there's no as clause in for statements.But it's pretty easy to do this explicitly:Or, more simply:Or, if you want to get fancy:Or, just for fun:Which you can wrap up as a reusable function:As a side note, you actually can do for d['a'] in dict_list:, but that just reassigns d['a'] (assuming d is already a dictionary) to each new dictionary in the list, which is usually a confusing thing to do. (It can be useful for obfuscated code contestsâ€¦)
You can use a generator expression like so:
This is one of the fastest and Pythonic methods to do it, lean on Python 3:There is also a similar method items which does almost the same. items will create a list of tuples with key and value if you call it in the for loop statement. There is also a similar method keys which only returns you a list of keys.iteritems will not generate a list of tuples when you call it in the for loop. Each element will be evaluated in each loop cycle. So there is no initial overhead and extensive memory usage. If you break the loop it's better as well.
you can use this:


Answer URL
https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression
