Natural Text
The structure of my modules: I want to test take_action (which basically loads values and checks with user before taking action) by mocking both load and check.Here are the mocks: How do I use patch.multiple to achieve this? 
The short answer is no you cannot use patch.multiple() to do it. As described in patch.multiple all arguments will be applied to all created mocks and all arguments MUST be attribute of the same object. You MUST do it one of the time by single patch calls.Unfortunately you are using python 2.6 so you can use just nested fron contextlib like pointed in python: create a "with" block on several context managers and Multiple context `with` statement in Python 2.6.Maybe the more cleaner and simple way to do it is use @patch as decorator:If you need it in all tests of a test class you can decorate the class and use the mocks in all test methods:Finally you can do it by using with and contextlib and the first example become:... Or nest it by hand ....My feel is that decorators are the most readable and simple to use.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#patch-multiple
