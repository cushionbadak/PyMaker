Natural Text
I'm trying to use processing.Manager to share data between processes (processing.Manager.list, processing.Manager.dict, ...). But, when i use it, object are duplicated:Output:Shareds objects are duplicated when used: 0xb72a64a8 != 0xb72a64e8.I'm doing it wrong ?Why these objects are duplicated ?How can i use objects with processing.Manager.list/dict/etc ?
It's pretty much inherent that objects are copied, not shared, between processes. That's the definition of separate processes: that they have separate heaps with separate objects.If you want actual shared data, you have to use Value, Array, or sharedctypesâ€”but of course in that case, you're limited to "native" values and those you can express in terms of C structs. And, even then, there's no guarantee that the id will be the same across processes, only that the value itself will be.The point of Manager is that you can put an object like, say, a list in a server process, and a proxy to that object in each child process. The list proxy looks like a real list as far as core list functionality goes (iteration, indexing, append, insert, index, etc.). But the proxy doesn't try to fake "under-the-covers" introspection functionality like id.The exact list of types that can be proxied by Manager out of the box differs between Python versions, but you can find it in the docs for your version. As of 3.4, it includes list, dict, Namespace, Lock, RLock, Semaphore, BoundedSemaphore, Condition, Event, Barrier, Queue, Value and Array. At any rate, it's never going to include object, because object has no functionality beyond the under-the-covers stuff.Of course you can register your own types with the Manager with custom proxies. But I'm not sure what you'd want to share with object.See Sharing state between processes for an overview and Managers for full details.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes
https://docs.python.org/3/library/multiprocessing.html#managers
