Natural Text
Is there a quick way to replace part of the path in python? for example:I don't know the beginning of the path (/abc/dfg/), so what I'd really like to tell python to keep everything that comes after /ghi/ (inclusive) and replace everything before /ghi/ with /jkl/mno/:
You can use the index of ghi:
If you're using Python 3.4+, or willing to install the backport, consider using pathlib instead of os.path:If you just want to stick with the 2.7 or 3.3 stdlib, there's no direct way to do this, but you can get the equivalent of parts by looping over os.path.split. For example, keeping each path component until you find the first ghi, and then tacking on the new prefix, will replace everything before the last ghi (if you want to replace everything before the first ghi, it's not hard to change things):This is a bit clumsy, so you might want to consider writing a simple function that gives you a list or tuple of the path components, so you can just use find, then join it all back together, as with the pathlib version.
First grab the relative path from the starting directory of your choice using os.path.relpathThen add the new first part of the path to this relative path using os.path.join
A rather naive approach, but does the job:Function:Example:


Answer URL
https://docs.python.org/3/library/pathlib.html
