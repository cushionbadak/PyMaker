Natural Text
Okay so I'm asking a follow up question for tokenizing a string. It's almost working however I missing this one edge case.Right now my function is:And it almost does what I want it do except for the input: I guess its something to do with escaping but i thought i matched it in my regex. Any suggestions? 
Your problem is that the only backslashes inside your character classes are being interpreted as escape characters. The \\! is parsed by Python into \!, and then by the regexp engine into an escaped !. Likewise, the \\] is parsed by Python into \], and then by the regexp engine into an escaped ]. So, there's nothing to match a backslash.You could double-escape the first backslashes, so the \\\\! will get parsed by Python into \\! and then by the regexp engine into a \ followed by a !. Of course you'd leave the \\] alone, because you want that to be parsed as an escaped ]. And you'd want to escape the backslash before w as well; you happen to get away with that one because Python (at least as of 2.7 and 3.4) doesn't have a \w escape sequence, but it's not a good idea to count on that.But really, your life will be a lot easier if you use raw string literals, to prevent Python from interpreting any backslashes, so you know they all get to the regexp engine. This is explained in the Regular Expression HOWTO.Now, the \\! is not touched by Python, so the regexp engine interprets it as a literal \ and a !. Also note that I've removed the double backslash before ], because we don't want to escape that one, we want it to escape the ].Debuggex Demo
off topic but this also works


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
https://docs.python.org/3/howto/regex.html#the-backslash-plague
