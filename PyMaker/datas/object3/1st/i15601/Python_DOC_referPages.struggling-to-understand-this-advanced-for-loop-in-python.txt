Natural Text
I know how to do basic for loops but I'm struggling to understand the for loop in this code snippet. I am looking for a way to find a substring within a list and grab the index (so I can take that string and slice it - in this example, extract the value 25 given there is a list item X minute[s]).This code works and returns 3, but I am struggling to understand i for i etc. - I've only ever worked on for loops that start with for. Note i haven't defined i or s. I do understand the enumeration. Note theres probably other ways to do this but when I started down this road I realised I didn't understand the many examples I found which are similar to the for loop below, so I'm fixated now on understanding this method. Much appreciate the explanation in advance
The first term here, i, is what gets returned for each iteration of the loop (assuming the condition is true - more on that later).In the second part, for i, s in enumerate(uptime_list) the enumerate function will make the list of strings into a list of tuples that can be iterated over like this:Then, multiple assignment happens for each iteration in the loop. For example, if you do x,y = 0,1 then x will be 0 and y will be 1. The only difference is that in this case, the tuples are coming from the enumerate function and are being assigned to i and s.Finally, the last portion, if 'minute' in s will only cause the first i to be returned when the condition is true (i.e., when "minutes" is in the s variable that is currently being looked at). If you add a second term to uptime_list containing the string "minutes", min_index will then contain multiple numbers because the condition will be true for multiple elements in the list.
The function enumerate() will return a list of tuples in the form [(0, element1), (1, element2), ...] and a conditional list comprehension is used to filter that list, finally only the indexes are chosen. 
List comprehensions can be directly translated to explicit for statements.You take everything from the first for clause and nest them as separate statements. In the innermost statement, you append the expression before the for clause to the list. That's the entire rule. So, this:â€¦ means:For a longer explanation, see List Comprehensions in the official tutorial.  For the fully gritty details of the syntax and semantics, see Displays for sets, lists, and dictionaries in the language reference.*If you don't understand enumerate, that's just a way of getting both the index and value of each element of a list (or other iterable). For example, enumerate(['x', 'y', 'z']) gives you (0, 'x'), then (1, 'y'), then (2, 'z').So, each time through the loop, s is one of the values from uptime_list, and i is the index of that value. So at the end, we have a list of all the indices from uptime_list whose corresponding values included the string 'minute'. For example, given this:You'll get [1, 3], because elements #1 and #3 contain minute.* Note that some of the details have changed over time, so if you're using an older version, especially a 2.x version, switch to the right version in the docs.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/reference/expressions.html#displays-for-lists-sets-and-dictionaries
https://docs.python.org/3/library/functions.html#enumerate
