Natural Text
How do you sort all the values within the nested list structure, so that the sublists are both the same length as in the original list and so that the values shift to the appropriate sublist so that they are sorted overall, not just within each sublist individually. How does one go about this??for instance:Becomes:Any help is appreciated
This works.You need to get list lengths at some point to build the final lists2. To get your ordered values properly, you flatten and sort the list, then you add lists to list2 by slicing your sorted items.Note that this will work for arbitrary length lists and tuples.
You can use chain.from_iterable to chain the lists, sort them and create an iterator. Then you can just iterate over the original lists and create a result using next:
I would use itertools for this and confine the whole thing inside one function:Use it:The idea is to chain all sublists together and then sort the outcome. This sorted output is then sliced based on the lengths of the original list of lists.I hope this helps.
Similar to @Evan's answer
Another variation with itertools:The output:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
