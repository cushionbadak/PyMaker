Natural Text
I have a text file I am reading in from, and I create two variables called ppm and peakAvg. peakAvg is a variable that I want to reuse, it is defined in a loop. This is my code: The way I get peakAvg is by reading in from a text file, grabbing certain values (which is what ppm is). From those values, I group them by name (which is what atom is). However, peakAvg is generated by taking all the ppm values (which are numbers) and taking their average by their group (atom)The variable peakAvg looks like this (i.e.: if i printed the values of peakAvg it would look like this):  (This is just a snippet but the last number is the actual last number in the list)In the loop above, I call my function getQMultiI want to use my variable, peakAvg, for another function I created called getQPred. This is what my second loop (where I call getQPred) looks like: Now if I print out what peakAvg is, I just get a list of one number (this is just a snippet but the whole list is just this number):How can I get my peakAvg variable to be what it was before (i.e.: the first list of numbers I had) because now when I call my function getQPred I get inaccurate results. Edit: These are the functions I am using:
In your code, peakAvg isn't a list, it's a single value that gets changed each time through the loop. The way to do this is something like the following:That is, first initialise peakAvg_List to an empty list, and then, each time through the list, append the new value of peakAvg to the list. This way, peakAvg_list contains the whole list of things that you want, which you can return if you want.If you want do something further with the list, you can do another loop:But you need to figure out what the ultimate output/goal of this code should be. Do you want a list of all the QPred quantities that you are calculating? Or do you somehow need to collect them into a single number? The answers here depend on what you're actually trying to do, which is separate from the Python syntax...Also, given that you are interested in doing the same operation on all the elements of various lists, you should learn about numpy. (More generally, you probably need to learn about lists and looping in Python, which are pretty basic concepts, so you might want to start with something like the official Python tutorial.


Answer URL
https://docs.python.org/3/tutorial/
