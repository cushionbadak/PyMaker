Natural Text
I have a list of elements with certain values of type float. I want to iterate over the elements and count them if they are over a certain value, but also only count them if they appear over the treshold value a minimum_count of times. So for example, if a have following input: the answer should be 4, since the treshold_value 1.0 is consecutively exceeded 4 times only at indexes 0-3. I now have the code below, I know there should be some pythonic way to achieve this :)Edit: The sum of all consecutive subsequence values over the threshold should be counted.
You could use itertools.groupby() to help:This will provide the count of the number of values that are above the threshold in groups of minimum_count or more. Note that it handles multiple groups that match the criteria.For example the groupby() for the last example will return the following:Any group of 1 or more values >= the threshold will appear in a group with key True. Only those with a length >= the minimum count will be considered further, where its length will be tallied with other such groups.This code can be written more succinctly, and far less readably, like this:
The following use of groupby with a conditional generator and max with appropriate key function should work:groupby groups an iterable by consecutive identical values wrt to the key function. It produces pairs of the key value and according sub-iterable.
just iterate over the list and create a dictionary with key = the float number and value = the number of times you encounter this number. and only add to dict floats that are greater then threshold . something like this:
It looks like you don't care about the order. In this case, groupby isn't correct because it only groups adjacent elements.You could use a Counter and two list comprehensions to filter values:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
