Natural Text
The ast module's documentation explains how to replace a node in the AST using the NodeTransformer class, but does not explain how to insert a new node into the tree.For example, given this module:I would like to add another import, and set a class variable on Baz.  How can I create and insert these nodes into the AST? 
Python ASTs are essentially composed of nested lists, so new nodes can be inserted into these lists once they have been constructed.First, get the AST that is to be changed:We can see that the outer Module has a body attribute that contains the top level elements of the module:Construct an import node and insert:Like the root module node, the class definition node has a body attribute that contains its members:So we construct an assignment node and insert it:To finish, fix up line numbers:We can verify that our nodes are in place by dumping the root node with ast.dump, or use the unparse* tool from the CPython repository to generate source from the AST.The Python3 unparse script** can be found in the Tools directory of the CPython repository.  In Python2 it was located in the Demo directory.When constructing AST nodes, you can get an idea of what the node should look like by using ast.parse and ast.dump (observe that ast.parse wraps the statement in a module):* Credit to this answer for documenting the existence of the unparse script.** Use the version of the script from the git branch that corresponds to the Python version being used.  For example, using the script from the 3.6 branch on 3.7 code may fail due to differences in the versions' respective grammars.


Answer URL
https://docs.python.org/3/library/ast.html
https://docs.python.org/3/library/ast.html#ast.NodeTransformer
