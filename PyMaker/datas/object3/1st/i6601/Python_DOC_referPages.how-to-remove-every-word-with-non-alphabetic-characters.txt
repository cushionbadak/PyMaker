Natural Text
I need to write a python script that removes every word in a text file with non alphabetical characters, in order to test Zipf's law.For example:toHow should I proceed?
Using regular expressions to match only letters (and underscores), you can do this:
You can use split() and is isalpha() to get a list of words who only have alphabetic characters AND there is at least one character.You can then use join() to make the list into one string:
Try this:
The nltk package is specialised in handling text and has various functions you can use to 'tokenize' text into words.You can either use the RegexpTokenizer, or the word_tokenize with a slight adaptation.The easiest and simplest is the RegexpTokenizer:Which returns:Or you can use the slightly smarter word_tokenize which is able to split most contractions like didn't into did and n't.which returns:
may this will help
You can either use regex or can use python in build function such as isalpha()Example using isalpha()
str.join() + comprehension will give you a one line solution:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.isalpha
https://docs.python.org/3/library/string.html#string.join
