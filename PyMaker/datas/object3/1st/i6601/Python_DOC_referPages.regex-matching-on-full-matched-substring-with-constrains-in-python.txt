Natural Text
Since it's a regex question. This is a potential duplicated question.Considering those given stringsMy desired return is google.* or www.google.* but not api.google.*. Which means, in above case, 2, 5, 8, 10 should not return any match.I have tried several regex, but I can not find a one line regex string for doing this tasks. Here are what I tried.Here, I am seeking a way to ignore *.google.* except www.google.* and google.*. But I got stuck while finding a way to get *.google.*.PS: I have found a O(n**2) way with split() to solve this.
You may useSee the regex demo.Details(?<!\S) - a location preceded with a whitespace or start of a string (note that you may also use (?:^|\s) here, to be more explicit)(?:https?://)? - an optional non-capturing group matching an optional sequence of https:// or http://(?:www\.)? an optional non-capturing group matching an optional sequence  of www.google\. - a google. substring\S* - 0+ non-whitespace chars.Python demo:Output:
Had my keyboard been working properly I would have answered a half hour before.Anyway, I would recommend to not exaggerate the complexity of regexes. You can use the host language to manage black- (and even white-) lists and use the re module auxiliary. Below is what I did all packed inside a script. Obviously you may need some restructuring if you have to integrate this code into a class or function:Unfortunately, with my a and h keyboard keys not working, I wasn't able to quickly find a way to remove the dot in the URL location (like in api.google, www.google, calendar.google and so on). I highly recommend to do that.The output displayed on my console was:


Answer URL
