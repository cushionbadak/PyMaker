Natural Text
I am new to using python so I apologize if I do not use the correct terms. I am writing a simple program to where the user inputs a decimal number and the program converts it to a binary number. So far I have:If I input 11, the output looks likeMy question is how can I format it to be in one single line, and how can I reverse is so it is written correctly? (ex. from the output shown above to '1011'). I am also aware there is a binary function, but I am not allowed to use it in my program.
Try using That should print everything on the same line :)If you want some explanation, we import the sys module first which gives us access to the stdout.write() method.This method doesn't automatically insert a new line so it fits your purpose.We also convert the integer to string since the sys.stdout.write() method will not accept integer values.
To print binary results in a single line use end='' as second argument in the print function to prevent printing a new line after printing the result.Or you can declare a variable and concatenate the string value of binary result and print is out side of the loop, LikeGood luck
While @Manan's answer will print the values on the same line, it is not very pythonic and does not reverse the result as you require. I would suggest storing the values you need and then reversing them:Alternatively you could repeatedly append to the beginning of your stored result to achieve the reversal:
Use a simple and clean approachOutput
When you run following script, be aware the indent.you will get: 1101If you have much much bigger binary value need to be reverse, binary tree(data structure) can help with. But list is the easiest way.
print is a function that accepts keyword end to specify how the end of each output should be handled. The default end argument is the newline character '\n': end=’\n’, which we can change to be '', essentially nothing.The other issue to print from most significant bit (LSB) to least significant bit (MSB) could be handled building a list and print it with the reversed function.Putting it all together:demo:Hope this helps.


Answer URL
https://docs.python.org/3/library/functions.html#print
