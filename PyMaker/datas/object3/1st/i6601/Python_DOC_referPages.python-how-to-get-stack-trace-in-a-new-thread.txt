Natural Text
logger.exception doesn't show stacktrace if executed in a pool and error msg is passed as arg. Setup:Doesn't show stacktrace:Shows stackTrace:
This code works because the issue is being logged before being submitted to the threadpool:In reality, what you're sending to the thread pool is None.This doesn't work because there's a bit of magic happening in the logger.exception call that doesn't work when it's outside of the exception handling context (which it will be when it's run in another thread):It usually helps to check the documentation.  For the .exception() method the docs say:Logs a message with level ERROR on this logger. The arguments are interpreted as for debug(). Exception info is added to the logging message. This method should only be called from an exception handler.The relevant part of the documentation for .debug() is:logging.debug(msg, *args, **kwargs)Logs a message with level DEBUG on the root logger. The msg is the message format string, and the args are the arguments which are merged into msg using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)There are three keyword arguments in kwargs which are inspected: exc_info which, if it does not evaluate as false, causes exception information to be added to the logging message. If an exception tuple (in the format returned by sys.exc_info()) is provided, it is used; otherwise, sys.exc_info() is called to get the exception information.So, this line:will invoke cause sys.exc_info() to be called in the thread handling the logging, which has no exception information--so no traceback is logged.  Instead, you want:So in it's final form, it would look like:Even better is to avoid the logger.exception() call and just use logger.error() instead:If you want the exception message as the message for the log, you can just do this (similar to what you did in your original code):e will get converted to a string and used as the message for logging the traceback.


Answer URL
https://docs.python.org/3/library/logging.html#logging.Logger.exception
