Natural Text
I was expecting ['jelly%s'% x*x for x in range(1,11)] would give me a list of jellyx*x, but it returned the following value.What's wrong with the code?
The problem is in the expression:This is equivalent to:Because the % and * operators have the same precedence.Precedence just means which operators get evaluated first in an expression. Operators with higher precedence "bind" before operators with lower precedence, operators with equal precedence get evaluated left-to-right. This is similar to mathematics, so:Note, the arithmetic operators have the precedence that is typical for arithmetic operators from mathematics.And finally, you might not know, but with sequence-types (which includes str, list, tuple, the * operator causes a "repitition operation", so:So, to get what you want, try:Alternatively, you could use the .format method on strings:Or better even, use f-strings in Python 3.6:
You can also do :Will give :Here, the [x*x for x in range(1,11)]] will give [1, 4, 9, 16, 25, 36, 49, 64, 81, 100] which you then use in your string.For more explanation on the behaviour of the OP's code (due to precedence of operators * and %) , have a look at Juanpa's answer.


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
