Natural Text
I have written code that finds all of the tests that can be run in a package and gathers them into a single test suite. The only thing is that some of the tests are dependent on other tests already being run.That might seem like bad test architecture but what I'm testing is the startup and shutdown of an application. So I have tests that makes sure everything comes to life appropriately, and then another set of tests that make sure that everything is cleaned up properly. Obviously though, I can't run the shutdown tests until the startup tests have finished. Is it possible within Python's unittest to say "only run this test if the following is true, otherwise run other tests and come back to me"?I understand that I could enforce this ordering by explicitly saying run the startup tests, now run the shutdown tests. But I'm using test discovery so that you can write more tests without explicitly having to invoke them so I am trying to avoid doing that.
The unittest module requires each test to be able to run independently:  no dependence on other tests running before or after. However, you can depend on other code to run before or after each test by adding setUp() or tearDown() methods to a test class. You can also depend on other code to run before or after a group of tests with setUpClass(), setUpModule(), and their tear downs.I think there's even more flexibility in the PyTest fixtures, but I haven't used them much.


Answer URL
https://docs.python.org/3/library/unittest.html#class-and-module-fixtures
