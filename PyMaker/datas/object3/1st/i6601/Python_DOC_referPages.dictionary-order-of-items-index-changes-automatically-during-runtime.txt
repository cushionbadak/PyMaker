Natural Text
The order of index of the items in the dictionary that I assigned some Key/Value data to it in the constructor of my class as one of the class fields, changed automatically during runtime every time I run the program.I also checked the program using Cython debugger and the interesting thing was actually the python itself change the index of items!I'm using Python3.5.4I put a breakpoint exactly after the line of dictionary definition and here is a picture of this problem.
Dictionaries don't preserve order (i.e. if you iterate over the keys or values of a dict, they don't necessarily show up in the same order as when you defined the dictionary)! If you want to preserve the order you have to use collections.OrderedDict.
Dictionaries are unordered in Python. It's not a bug, it's just how dictionaries work.You may want to read about collections.OrderedDict.That's the list of changes in Python 3.6. As far as I know dicts in 3.6 may preserve the order, but you need to try it for yourself. It's better to use OrderedDict.
I think that you are referring to the order of the items in the dictionary?This is normal because dictionaries are unordered, therefore the presentation order of items does not need to follow the order in which the items were added to the dictionary. Similarly, iterating over the keys of the dictionary will often not follow the order of creation.


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-compactdict
