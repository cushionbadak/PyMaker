Natural Text
I have a dictionary of dictionary for example:'object2':{'time1':['value1','value6'],'time2':['value7','value8']}}How can I iterate over the dictionary such that I can find value1 appears 3 times in total? 
You can iterate over the values & count like this:
You may use the combination of collections.Counter and itertools.chain to achieve this as:In order to fetch the count of 'value1' in your counter_dict, you need to just access the value of this key as:
Well the tricky way is:but you can always just do a nested loop.
This may not be the most elegant solution but it works for your nested dictionary problem:lst is a list of nested dictionaries. sub_val creates a nested list of values for each nested dictionary. This results in a list of double nested list hence d_val flattening appears twice. Finally, count returns number of occurrences of value1 in the flattened list d_val.
Try with list.count(x):


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/itertools.html#itertools.chain
