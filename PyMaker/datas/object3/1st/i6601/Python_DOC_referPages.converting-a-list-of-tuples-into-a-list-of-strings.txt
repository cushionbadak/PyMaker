Natural Text
So I have a list of tuples, for example [('GGG',), ('AAA',), ('BBB',)] and I want to convert it into a list of strings: ['GGG' , 'AAA', 'BBB']. I have tried using a for loop with the join method but cannot get it to work. Any help would be appreciated, Thanks. 
Use a simple list comprehension:
Use chain.from_iterable from itertoolse.g.output ['GGG', 'AAA', 'BBB']The use of list is only to allow printing the output. It forces the lazy object returned from chain.from_iterable to be evaluated immediately. You don't need it if you will later iterate over object.
There are multiple ways you can achieve this. If array is z = [('GGG',), ('AAA',), ('BBB',)], then:1) Using zip: list(list(zip(*z))[0])well the other ways have been just written by the other two most recent answers :).Also, even though it was not asked, but I got interested in performance, and I wanted to share the results of a rather simple benchmark:Input@Paul Rooney@COLDSPEED@this@mentalita
Above one gives list of strings
you can just use itertools chain method tested in python2 & python3The itertools.chain method returns chain object, you can get  elements using list or iterate using for.
You can use 'isinstance' or type()==tuple method can done the job in just one line using list comprehension ::)


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
https://docs.python.org/3/library/itertools.html
