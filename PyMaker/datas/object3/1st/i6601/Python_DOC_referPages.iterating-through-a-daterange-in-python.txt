Natural Text
Okay so I am relatively new to programming and this has me absolutely stumped. Im scraping data from a website and the data changes every week. I want to run my scraping process each time the data changes starting back on 09-09-2015 and running to current. I know how to do this easily running thru every number like 0909 then 0910 then 0911 but that is not what I need as that will be requesting way too many requests from the server that are pointless.Here is the format of the URLhttp://www.myexamplesite.com/?date=09092015I know the simple:But one thing i've never been able to figure out is manipulate pythons dateTime to accurately reflect the format the website uses.i.e: 0909201509162015092320150930201510072015...09272017If all else fails I only need to do this once so it wouldnt take too long to just ignore the loop altogether and just manually enter the date I wish to scrape from and then just append all of my dataframes together. Im mainly curious on how to manipulate the datetime function in this sense for future projects that may require more data.
A good place to start are datetime, date and timedelta objects docs.First, let's construct our starting date and ending date (today):Now let's define the unit of increment -- one day:A nice thing about dates (date/datetime) and time deltas (timedelta) is they and can be added:We can also use format() to get that date in a human-readable form:So, when we put all this together:we get a simple iteration over dates starting with 2015-09-09 and ending with today, incremented by 7 days (a week):
Take a look herehttps://docs.python.org/2/library/datetime.html#strftime-and-strptime-behaviorYou can see the table pictured here for formatting dates and times and the usage.Of course, if the format of the dates changes in the future or you are parsing different strings, you will have to make code changes. There really is no way around that.


Answer URL
https://docs.python.org/3/library/datetime.html#datetime-objects
https://docs.python.org/3/library/datetime.html#date-objects
https://docs.python.org/3/library/datetime.html#datetime.timedelta
https://docs.python.org/3/library/functions.html#format
