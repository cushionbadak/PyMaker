Natural Text
I am looking for a 2-byte sequence in a binary file that is too large to fit in memory. I can't simply read 2 bytes at a time, because, e.g.Likewise, I can't simply look for the first and then see if the second is there, becauseI would really like to be able to do something like:Is there some feature to do this lookahead work without all the bookkeeping details required to do it myself?
The io.BufferedReader() object has a peek() method:Return bytes from the stream without advancing the position. At most one single read on the raw stream is done to satisfy the call. The number of bytes returned may be less or more than requested.You get such an object whenever you open a file in binary mode for reading, so you can used it directly in your code:Take into account that the byte we peeked at is still 'in the stream', the next f.read() call will include it. You'd have to issue an explicit f.read(1) if you don't want that.I replaced your while loop with a iter() 2-argument call to read the file 1 byte at a time in a for loop.


Answer URL
https://docs.python.org/3/library/io.html#io.BufferedReader
https://docs.python.org/3/library/io.html#io.BufferedReader.peek
https://docs.python.org/3/library/functions.html#iter
