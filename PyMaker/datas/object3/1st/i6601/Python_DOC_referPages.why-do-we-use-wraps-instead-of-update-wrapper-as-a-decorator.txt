Natural Text
Decorator functools.wraps calls method functools.update_wrapper. I want to understand the need to use wrap instead of update_wrapper.Why can't we use update_wrapper as decorator instead of using wraps?For example:and  work. But why the following doesn't?with errorThe declarations of wraps and update_wrapper are:andThe positional argument wrapper is the first argument to update_wrapper, so why doesn't the following pick up call_it as wrapper argument to update_wrapper?Is there some way to use update_wrapper as a decorator instead of using wraps?
Using @ as a decorator basically boils down to this:Being the same as:Now if we apply it to your case:The problem here is that the first time, it is only called with the second argument. It then raises the error immediately.This is because update_wrapper is not designed to be used as a decorator, but wraps is a decorator (factory).


Answer URL
https://docs.python.org/3/library/functools.html
