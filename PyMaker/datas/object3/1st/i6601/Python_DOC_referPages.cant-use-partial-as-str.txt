Natural Text
This question already has an answer here:functools.partial on class method                    1 answer                I ran into this problem while trying to write a pretty print procedure for a program in which I use several named tuples containing floating point pairs.I want to format the floating point numbers when printed because the result of:Is too long:So I created a function to print the named tuples:The name and labels should be fixed for every type and only the obj argument varies so I thought I could use functools partial.But this throws a TypeError: pretty_float_pair() missing 1 required positional argument: 'obj'.Surprisingly if I use lambda to create the functions it works.Prints what I wanted:I'm trying to understand why the partial version doesn't work.
functools.partial returns a non-descriptor callable, roughly equivalent to an unbound method. This means that it is not being passed a self parameter, which is consistent with the error you are seeing.Since a lambda behaves just like a regular function  defined with def, it is in fact a descriptor. The __get__ method of the lambda returns a bound version that passes in the instance as x.To get a partial function that behaves more like a method, use functools.partialmethod instead. You will have to move obj to the beginning of your argument list so it can receive self when the method is bound.Here is your example:
Functions get their implicit self argument by being descriptors: the lookup x.f constructs and returns a method object that remembers x so as to supply it to f.  functools.partial(...) does not return a descriptor, so it doesn't get that special treatment.  (It's actually a class, so it "returns" an instance of itself.)


Answer URL
https://docs.python.org/3/reference/datamodel.html#descriptors
