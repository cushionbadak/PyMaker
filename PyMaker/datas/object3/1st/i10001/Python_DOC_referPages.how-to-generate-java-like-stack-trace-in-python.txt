Natural Text
In my experience programming with Java, I have become quite fond of the stack traces it generates when my code goes awry, but I feel that the traces generated by python are a bit lacking by comparison.  For example, a trace in java might look like this:Whereas a python trace might look like this:While both of these traces convey basically the same information, I personally find that the trace from java is easier to follow.Is there a means to change the format python uses for printing its stack traces, or would that sort of change require me to create a custom exception handler at the root of my program?
There is a means to change the format Python uses to format its stack traces, and that is that you write your own formatter instead.  There is only one built-in format.You can assign your own function to sys.excepthook and it will act as a top-level exception handler that will get access to exceptions that were about to rise uncaught and cause the program to exit.  There you can make use of the traceback object to format things however you like.  Triptych's answer shows how to use the traceback module to get the info for each stack frame.  extract_tb returns a 4-tuple of the filename, line number, function, and source text of the offending line, so if you want to not display the source text you could just throw that away and concatenate the rest.  But you'll have to do the work of constructing whatever output you want to see.
using traceback module
If you really want to, you can reformat exception tracebacks with the traceback.extract_tb method.ref: https://docs.python.org/2/library/traceback.html#traceback.extract_tb


Answer URL
https://docs.python.org/3/library/sys.html#sys.excepthook
