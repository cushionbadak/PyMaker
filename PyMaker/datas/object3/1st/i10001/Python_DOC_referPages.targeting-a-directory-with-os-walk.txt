Natural Text
Due to a large and convoluted directory structure, my script is searching too many directories:The TARGET directory is the only one I need to traverse and it has a consistent name in each project (we'll just call it Target here).I looked at this question:Excluding directories in os.walkbut instead of excluding, I need to include the "target" directory which isn't at the "root" level, but one level down.I've tried something to the like of:But this one effects the root directory (thereby ignoring all the directories it needs to traverse, Project A, Project B...)
The issue with your code is that you are always modifying the dirnames list, but this means that even at the root level all the subdirectories are removed and hence the recursive calls do not end up visiting the various Project X directories.What you want is to purge other directories only when the TARGET one is present:This will allow the os.walk call to visit the Project X directories, but will prevent it from going inside the Irrelevant ones.
For a whitelisting scenario like this, I'd suggest using glob.iglob to get the directories by a pattern. It's a generator, so you'll get each result as fast as it finds them (Note: At time of writing, it's still implemented with os.listdir under the hood, not os.scandir, so it's only half a generator; each directory is scanned eagerly, but it only scans the next directory once it's finished yielding values from the current directory). For example, in this case:See the docs on os.scandir for more advanced usage, or you can just make the inner loop a call to os.walk to preserve most of your original code as is.If you really must use os.walk, you can just be more targeted in how you prune dirs. Since you specified all TARGET directories should be only one level down, this is actually pretty easy. os.walk walks top down by default, which means the first set of results will be the root directory (which you don't want to prune solely to TARGET entries). So you can do:


Answer URL
https://docs.python.org/3/library/glob.html#glob.iglob
https://docs.python.org/3/library/os.html#os.scandir
