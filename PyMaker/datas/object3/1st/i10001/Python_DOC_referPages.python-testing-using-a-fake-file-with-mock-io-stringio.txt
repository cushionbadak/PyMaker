Natural Text
I'm trying to test some code that operates on a file, and I can't seem to get my head around how to replace using a real file with mock and io.StringIOMy code is pretty much the following:I have a class that can take either a list or a file, if it's a file it opens it and extracts the contents into a list, and then does what it needs to do to the resulting list. I have a working test as follows:I want to replace the call to the filesystem. I have tried replacing the file with io.StringIO but I get a TypeError from os.path.isfile() as it's expecting either a string, bytes or int. I also tried mocking the isfile method like so:but I still get the same TypeError as the _io.StringIO type is causing the exception before isfile gets a chance to return something.How can I get os.path.isfile to return True, when I pass it a fake file? Or is this a suggestion I should change my code?
Just mock out both os.path.isfile and the open() call, and pass in a fake filename (you are not expected to pass in an open file, after all).The mock library includes a utility for the latter: mock_open():This causes the if isinstance(data, list): test to be false (because data is a string instead), followed by the elif os.path.isfile(data): returning True, and the open(data) call to use your mocked data from the mock_open() result.You can use the mock_open variable to assert that open() was called with the right data (mock_open. assert_called_once_with('mocked/filename') for example). Demo:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#mock-open
