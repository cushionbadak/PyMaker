Natural Text
I have the following problem. In my code I am getting at one point a list which does look like the following example:Now I want to know how often does a string occur with 0, 1, 2, 3,... bars.Is there an easy way to do it? Edit: I thought something like ['-0---110', '--1--110', '01---100', '1--101-0', '10-1-100',...., '10100010'].count(-)should work but it doesn'tEdit2: My second try which also seems to work is:
I get the sense of what you were going for, but you'll need to loop through the list. Here is a solution that returns a dictionary mapping from number of bars to frequency of which that many bars appeared in a string:This outputs: defaultdict(<class 'int'>, {0: 1, 2: 1, 3: 2, 4: 2}) i.e. it is saying 1 string contained 0 bars, 1 string contained 2 bars, 2 strings contained 3 bars, and 2 strings contained 4 bars.After you understand what's going on here, if you want to see a more Pythonic (and imo, better) way to do it, do check out the other answer. You can use collections.counter which essentially provides the functionality of the bar_freq dictionary in this solution.
If you have Python 2.7+ you can actually use collections.Counter:In our case the Counter counts how often a value appears in an iterable. Now to get a suitable iterator, we just need to get a list of whatever we want to count. In this case how many “bars” a string contains.The result will be something like this:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
