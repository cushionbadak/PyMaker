Natural Text
I have a large collection of DAT files that need to be converted (eventually to a unique file type). The DAT's have a mixed amount of whitespace between fields, and the column headers are on different lines. Any advice?I have a basic script:Which I will certainly change to account for mixed whitespace, but I don't know how to work with the wonky column headers.Eventually I want my headers to just be:
Treat those header lines in the input file with all the disdain they deserve. (Or, in other words, read them and discard them.)
This is answer for "Python - download and convert .dat to .csv [duplicate]". I couldn't post there so FYI you can get you exact output from here.
It looks like you can combine the header rows dynamically based on a word's position in the line. You can skip the first two lines, and combine the next two. If you do it right, you will be left with an iterator over a file stream that you can use to process the remainder of the data as you wish. You can convert it to a different format, or even import it into a pandas DataFrame directly.To get the headers:You can now convert the file to a true CSV, or do something else with it. The important thing here is that you have iterator pointing to the actual data in the file stream, and a bunch of dynamically loaded column headers.To write the remainder to a CSV file, without having to load the entire thing into memory at once, use csv.writer and the iterator from above:You can combine the nested output with and the outer input with into a single outer block to reduce the nesting levels:To read in a pandas DataFrame, you can just pass the file object to pandas.read_csv. Since the file stream is past the headers at this point, it will not give you any issues:


Answer URL
https://docs.python.org/3/library/csv.html#csv.writer
