Natural Text
The Python 3 tutorial about the unpacking operator (*) generically speaks of a "list or tuple," while the error message for improper use says that a "sequence" is needed:Python 3's Built-in types documentation lists the following sequence types:Sequence Types — list, tuple, rangeText Sequence Type — strBinary Sequence Types — bytes, bytearray, memoryviewQuick test:Note that set types (like set and frozenset) and mapping types (dict) are not included here.My question: Why are all iterable types (including a set or dict) unpackable? They are not sequence types, as the TypeError above suggests they should be, and unordered behavior leads to undefined results when unpacking for positional args:
The error message is most likely a little bug*. Anything that is an iterable is accepted during function calls; this is hidden inside the section for Calls in the Python Reference Manual:If the syntax *expression appears in the function call, expression must evaluate to an iterable. Elements from these iterables are treated as if they were additional positional arguments.(Emphasis mine)*Which, as of 3.5.2 as @sytech pointed out, was fixed in Issue 4806 to correspond to the correct wording in the reference manual.
This is no longer the case in (at least) Python 3.5.2 -- Probably was recognized as an issue and changed in a version later than what you're using. The message now more appropriately reads iterable instead of sequenceSee https://bugs.python.org/issue4806


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
https://docs.python.org/3/library/stdtypes.html
