Natural Text
I have a software - FUNCOR2.exe - for calculating the autocorrelation function given a data file, i.e. test.txt.First, I execute FUNCOR2.exe from Windows command line and then the program takes control and asks me for the input data file.I want to automate this in Python, so I can use working:But then I am not able to type INTO the program the input file name.So far I've tried:which I took from Generate keyboard events, but it does not work, and also:it does not work either.This program does not accept arguments, so I cannot use:I've found something similar in here: Writing in the cmd after executing an app.exe from java, but not at all.Any ideas?
The only thing that I've found (other than your question) which refers to FUNCOR2 is the paper "A library of computer programs for assisting teaching and research in cyclostratigraphic analysis" . Since this is from the Journal "Computers and Geosciences" and since you are in the GIS field, I assume that this is correct.There are a couple of possibilities (beyond sending keystrokes, which is dicey at best):1) The paper clearly gives the formula being used (and a quick glance at the actual Fortran code downloadable from the Journal's website confirms that nothing else is done) suggests that this is easily implemented in Python, either straight-Python or using pandas (which has functions for computing autocorrelations).2) Modify the Fortran source and recompile with an open source Fortran compiler (I'm not a Fortran expert, but this seems to be Fortran 77). Towards the beginning of the code you see:The first line is how the code gets the file name from the user. Replace that line by a line which reads a command line argument and voila -- you have a version of FUNCOR2 which gets its input file from the command line, hence easily invoked from Python. It should be easy enough to find examples for getting a file name from a command line argument in Fortran. My guess is just 1 or 2 lines of code replacing that line would be enough. I am not interested enough to try, and doubt that it is worthwhile. This is because another line in the source is:Oddly enough, the program would fail if your file has more than 1024 observations. Maybe something like that made sense in the late 90s when the paper was written, but there is almost certainly equivalent pandas code which will be able to handle millions of observations. Sometimes old code should be allowed to die.


Answer URL
https://docs.python.org/3/library/subprocess.html
