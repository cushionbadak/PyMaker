Natural Text
I was looking at the documentation for try except and the built in values listed there, but I figure out what I should be using to catch a general function fail.  here's what I mean say I have these:foo.pywith appleMaker.py:and BananaMaker.py looking exactly the same as appleMaker.py respectively. What I want to be able to do is in foo, something like:
Generally you would read the documentation for create_apple() to see what exceptions it can raise, and catch those.Unlike Java, though, Python functions aren't required to declare all the possible exceptions they can raise, so any function could conceivably raise many different exceptions.Your best bet might be some sort of catchall condition at the end:UPDATEIt appears you're looking for advice on how a function should raise exceptions, not how a caller should catch them.If your function can fail in several distinct ways, then defining specific exceptions for each failure condition can be convenient for the caller, as it can easily handle each failure condition separately (as I showed in the example above.)But if your function can really only fail in one way, with possibly slightly different details in some cases, then perhaps the best thing to do is raise a general exception with a specific message:In the end it's a design decision.  Both ways will work.


Answer URL
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
