Natural Text
I was wondering if anyone knew a way to make a dictionary ordered by the spelling of a particular word? Since a dictionary is unsorted, I resorted to the use of OrderedDict, but I believe you can only sort it through the keys and values. Any idea of how to order it in this way?Here's part of the project I was working on:I was trying to keep it in order of the word 'apple' and then somehow convert the dictionary into plain text:
As a first point, note that your code is a pretty inefficient and unpythonic way of doing something pretty simple:(Inefficient, because you are counting every letter every time, e.g. 'aaaaa' will count 'a' 5 times; unpythonic, because you declare and don't use a length variable and loop throw with range(len(...)) which is almost never a good idea.)You can then sort this counter and make it an OrderedDict. I am sorting by the first occurrence in the word:Note that the answer will be very different if you are simply grouping letters: a dictionary is not the right data structure if you want to do something like 'b1o1b1'.If your desired output is just the string 'a1p2l1e1', you can do the following:Or as a one-liner:
Straight from the docs:Usage:


Answer URL
https://docs.python.org/3/library/collections.html#ordereddict-examples-and-recipes
