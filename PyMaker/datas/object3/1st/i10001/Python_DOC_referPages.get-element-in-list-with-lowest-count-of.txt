Natural Text
I have a list and I want to find the element that has the lowest count of '*'. So the answer in this little test is '11234'This works but is slow (I'm working with massive genomic data:This is less eloquent but works:Is there a better way?I was trying to do a schwartzian transformation but can't figure it out.
You can use min with key parameter:key is a function that is called on each item on the iterable to specify the ordering the same way as in sorted.Above approach will result to O(n) time complexity where as sorting is O(n log n).Update: If your strings are really long then you could count the occurrences of * in a loop and reject the string as soon as count is the same as current minimum. You could also terminate the search if string with 0 occurrences is found:
You may further improve the performance by creating the separate function for key instead of lambda as lambda functions are slow. For example as:Below are the timeit stats:Using lambda function: 1.25 usecUsing separate function: 1.19 usec


Answer URL
https://docs.python.org/3/library/functions.html#min
