Natural Text
In python, is there a difference between raise and raise e in an except block?dis is showing me different results, but I don't know what it means.What's the end behavior of both?
There is no difference in this case. raise without arguments will always raise the last exception thrown (which is also accessible with sys.exc_info()).The reason the bytecode is different is because Python is a dynamic language and the interpreter doesn't really "know" that e refers to the (unmodified) exception that is currently being handled. But this may not always be the case, consider:What is e now? There is no way to tell when compiling the bytecode (only when actually running the program).In simple examples like yours, it might be possible for the Python interpreter to "optimize" the bytecode, but so far no one has done this. And why should they? It's a micro-optimization at best and may still break in subtle ways in obscure conditions. There is a lot of other fruit that is hanging a lot lower than this and is more nutritious to boot ;-)
There is a difference in the backtraces that the two forms generate.Using raise, this code:Gives the following backtrace:Using raise e as follows:Gives the following backtraceThe difference is that in the raise case, the correct line referencing the original source of the exception is quoted in the backtrace, but in the raise e case the traceback references the raise e line not the original cause.Therefore, I recommend always using raise rather than raise e.
It is possible to clear the "last exception" (i.e. the result of sys.exc_info()) info with sys.exc_clear(). For instance, this would happen if the catch block called a function foo(), which itself has special error handling.In that case, raise with and without an argument would mean diffent things. raise e would still have a reference to the exception caught a few lines above, while the raise shorthand would try to raise None, which is an error.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement
