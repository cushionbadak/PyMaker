Natural Text
I have a tuple x = (2,) to which I would like to append a variable y. I do not know ahead of time exactly what kind of variable y will be.y could be:a tuple, in which case I'm quite happy to use x+y, ora single object (typically string or int), in which case I should use x+(y,).Adopting one strategy will give me a TypeError half of the time, and adopting the other will give me (2, (3, 4)) when I want (2, 3, 4).What's the best way to handle this?
Use isinstance in a if condition. 
Use the second strategy, just check whether you're adding an iterable with multiple items or a single item.You can see if an object is an iterable (tuple, list, etc.) by checking for the presence of an __iter__ attribute. For example:Try this. This snippet will behave exactly like you describe in your question.Note that in Python 3, strings have an __iter__ method. In Python 2.7:In Python 3+:If you are on Python 3, which you didn't mention in your question, replace hasattr(y, "__iter__") with hasattr(y, "__iter__") and not isinstance(y, str). This will still account for either tuples or lists. 


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
