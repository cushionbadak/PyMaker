Natural Text
In the following code fragment function f gets executed as expected:But in the following similar code fragment a doesn't increment:But if we shortcircuit with  True instead of False a gets incremented:How does shortcircuit work for this to run this way?
That's because f() and False is an expression (technically a single-expression statement) whereas a += 1 and False is an assignment statement. It actually resolves to a += (1 and False), and since 1 and False equals False and False is actually the integer 0, what happens is a += 0, a no-op.(1 and True), however, evaluates to True (which is the integer 1), so a += 1 and True means a += 1.(also note that Python's and and or always return the first of their operands that can unambiguously determine the result of the operatio)
I believe that is equivalent toandis equivalent toFor example:


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
