Natural Text
I have events that have occurred on specific dates e.g:I am looking for a data structure in Python to store this information in such a way that I can easily retrieve events that occur between specific dates. In essence, I want to be able to query a data structure and return events that occurred between two dates. e.g.:Is there a builtin structure in Python which easily allows this? I am not looking to re-invent the wheel if there is already something which is optimized for this sort of query. If not, would list-comprehension be the best approach?
No, there's no simple built-in structure that would do this in an optimized way.However, the standard library module bisect provides functions for working with sorted lists in a more optimized way than list comprehensions would. You can use this to accomplish your task; it just takes a little work and care.Unfortunately, they don't take a key function as an argument, like list.sort() does. So to use the bisect functions you need to preprocess your event objects into things that are comparable, and will compare primarily based on their dates. Tuples can be nice for this:Now you can use bisect_left() and bisect_right() to get the indices of your sorted list where the events you want begin and end (assuming your endpoints are both inclusive):Note that you have to turn start_date and end_date into tuples to be comparable with the tuples in the sorted list.Knowing the start and end indices, you can get a list of all the events with a slice of the sorted list, and if need be convert them back into whatever form you want to return them in.Don't forget to check your slice indices, and your choices of bisect_left() and bisect_right(), to make sure you're including/excluding the endpoints you want to include/exclude. Especially in the case where you have multiple events on the same date as your start_date or end_date.


Answer URL
https://docs.python.org/3/library/bisect.html
