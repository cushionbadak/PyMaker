Natural Text
This is easy-peasy:This doesn't work, yielding a KeyError:Is there a way to accommodate a defaultdict in string formatting?
** unpacking produces a dict, which is why this isn't working. If you're running Python 3.2 or higher though, you can pass the defaultdict without unpacking to str.format_map which exists for precisely the purpose of passing non-dict mapping types:Edit: Apparently, in Python 3.5 at least, 'foo {bar}'.format(**d) actually does work with a defaultdict(int), and d is modified (after the formatting, the repr is defaultdict(<class 'int'>, {'bar': 0})), so it looks like in modern Python, format_map may not be necessary for subclasses of dict. Interesting.
Given another answer and in a comment, apparently that does work in Python3, but in Python2 you need to do something a little more hackish:
Based on @zondo's answer (and to a small degree, @ShadowRanger's), you could do something like this which worked correctly in both Python 2.7.11 and 3.5.1 for me.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format_map
