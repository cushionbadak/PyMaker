Natural Text
I've got an object which I print to the terminal, and it looks like this:So I then wondered from which function this the result is. So I tried the following:As you can see, neither of these functions displays what the print statement shows. I always thought that print actually shows the result of either __repr__(), __str__() or __unicode__(), but that is clearly not the case. So what does print actually call?
It is easy enough to check this sort of thing:In fact what happens internally is that print (as a function that is, I haven't checked the opcode though I think it is the same) calls PyFile_WriteObject with the Py_PRINT_RAW flag.int PyFile_WriteObject(PyObject *obj, PyObject *p, int flags)Write  object obj to file object p. The only supported flag for flags is  Py_PRINT_RAW; if given, the str() of the object is written instead of  the repr(). Return 0 on success or -1 on failure; the appropriate  exception will be set.
object.__str__(self)Called by str(object) and the built-in functions format() and print() to compute the >'informal' or nicely printable string representation of an object. The return value must >be a string object.This is from python documentation. So clearly, print function will call defined __str()__, if you define both __str()__ and __repr()__ inside the class. But in the case you just implement __repr()__, then print(object) shall use __repr()__.Hope this will help.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__repr__
