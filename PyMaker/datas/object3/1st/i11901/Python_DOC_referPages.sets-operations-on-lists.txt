Natural Text
The idea is that I have a string 'four' consisting of 4 sub-strings. I am trying to find words from the list 'folder' that match exclusively with the 4 sub-strings (subsets). So 'paul' would match but 'pauls' wouldn't. The only issue I have is that 'sets' cant handle identical strings. The code below will print 'aa' but there is only one a in the string 'four'. Is there an operation 'issubset' available for use with lists? 
If you want to match the same chars  including repeats use a Counter dict to count the chars in each word:If you get an empty Counter after A - B it means all the letters in A appeared at least as many times in A as they did in B:You could also use all making sure at least as chars in wordstrings appears in four app which would short circuit if one did not:sets simply won't work as all elements are unique so repeated chars will be counted as 1.
To the best of my knowledge, lists don't have a function like subset. Sets always strip away duplicates because you don't need to know that a value is duplicated to know that it exists in a set. The problem here is that when you're iterating through in the for-loop, word = 'aa' becomes wordstrings = {'a'} which is a subset of four. Do you have to use set? I'd just have a counter and not convert the words into set.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
