Natural Text
I like some ways of how string.capwords() behaves, and some ways of how .title() behaves, but not one single one.I need abbreviations capitalized, which .title() does, but not string.capwords(), and string.capwords() does not capitalize letters after single quotes, so I need a combination of the two. I want to use .title(), and then I need to lowercase the single letter after an apostrophe only if there are no spaces between.For example, here's a user's input:And I want to convert it to:.title() would capitalize the 's', and string.capwords() would not capitalize the "e.t.".
You can use regular expression substitution (See re.sub):[a-z] will match lowercase alphabet letter. But not after ' ((?<!') - negative look-behind assertion). And the letter should appear after the word boundary; so t will not be matched.The second argument to re.sub, lambda will return substitution string. (upper version of the letter) and it will be used for replacement.
Edited to use the capitalize function instead. Now it's starting to look like something usable :). But this solution doesn't work with other whitespace characters. For that I would go with falsetru's solution.
if you don't want to use regex , you can always use this simple for loophope this helps :)


Answer URL
https://docs.python.org/3/library/re.html#re.sub
