Natural Text
I have to create a function that takes a message the user wants to encrypt and returns the encrypted string. The encryption follows a set of rules:Character: In the alphabet and uppercase [A-Z], Replace with: Lowercase character and add a ^ character afterwardsCharacter: In the alphabet and lowercase [a-z], Replace with: Do not changeCharacter: 1, Replace with: @Character: 2, Replace with: #Character: 3, Replace with: $Character: Any other character, Replace with: *This is my code so far. It'll only return 'p^', so I figured something is wrong with my first if statement and the return value. If someone could steer me in the right direction I'd appreciate it!Examples:Note: These are examples of what the program should return, not actual instances of the program running.
Let's start from the top and work our way down.First off, this is not encryption.This is just adding random characters to text, not converting the data into cipher-text which can then be decrypted via a key. If anything I'd call it obfuscation.Now that we have that out of the way, let's tell you why your code is not working.Please research the return statement through this stackoverflow post or through this video.Since you were appreciative of feedback, I have decided to go one step further in helping and am going to give you a better way to do the program so you can learn from it.If you want to know what the variable conversions is, it is known as a dictionary.If you want to know what the [] brackets denote, they denote a list. Note that .append() is a function that adds a new element on to the end of a list or compatible data structure, and that ''.join() is a function which joins a list together into a string.If you want to know what I'm doing with string.ascii_uppercase, I'm calling a variable defined in the string module. For more information on modules, please look at the documentation.For more information on how to work with Python's control flow statements, please, please, please read up on them here.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
https://docs.python.org/3/tutorial/modules.html
https://docs.python.org/3/tutorial/controlflow.html
