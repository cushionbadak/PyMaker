Natural Text
I have two lists - list1 when printed looks like this:And list2 when printed looks like this:[11, 110, 108,....]Now I want to join these two lists and write the result into a csv file so that output looks like this:So basically the values of list2 becomes the 4th column in csv file. I wrote this code in ipython but it produces output in wrong format and also does not write all the records in the file (last 26 records are not in the file):The output in file looks like:As you can notice there " and [] around the list1 item and strings in list1 have ' around them. How can I get the correct format of output and why last 26 records are not getting written to file?NOTE: list1,list2 as well as final_list that I am forming all are of same size (300) but yet in file I see only 274 records
Since list1 is a list of lists, performing zip(list1, list2) will end up with something like this:So you'll need to add an extra step in there to add last element to the first list.This will get you,And that should output the CSV properly.
You are using zip the wrong way, for more look here zip lists in python.the problem is that zip joins elements in the input lists, here the element in the first list itself is a list so its joined to the elements in the second list. the correct way to do it is
It's all in how zip works. From the docs: Returns an iterator of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables.So zip expects each argument to be an iterable.  It will then create an iterable (in python2 a list) of tuples grabbing the ith element of each argument for the ith tuple.  So if you pass in a list of lists as the first argument and a list of strings as the second, your final items will each be a tuple where each first element is the inner list of list1 and the second element is the corresponding indexed string from list2.Instead, you want something like:As to why the last 26 records are not in the file, from the zip docs:The iterator stops when the shortest input iterable is exhaustedSo your list2 has 26 fewer elements than list1. Rather than guess at what to add to the last 26 items from list1, it just doesn't include them in the result. Note: Using min() in the new final_list formulation as above will result in the same short-circuiting behavior


Answer URL
https://docs.python.org/3/library/functions.html#zip
