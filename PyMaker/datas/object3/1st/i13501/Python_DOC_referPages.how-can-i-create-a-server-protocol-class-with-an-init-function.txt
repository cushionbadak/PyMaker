Natural Text
I come from a Twisted background, so I have a solid understanding of protocols and factories, as implemented by Twisted.  However, I am in the midst of switching over to asyncio, and I'm having a bit of trouble understanding how factories integrate into this particular framework.In the official documentation, we have an example of a server's asyncio.Protocol class definition.  It does not have a user-defined __init__ function, so we can simply call loop.create_server(EchoServerClientProtocol, addr, port).What happens if our Protocol needs to implement some initialization logic?  For instance, consider this example which sets a maximum buffer size:In Twisted, you'd create a Factory class to hold all of the configuration values, which you would then pass to the function initializing the connection.  Asyncio seems to work in the same way, but I cannot find any documentation.I could use functools.partial, but what is the correct way of handling this case?
The documentation has an example where they use a lambda for this, so my guess is that functools.partial is fine. They also state that protocol_factory can be any callable. So to have something like Twisted's Factorys, you'll just need to implement __call__ on a class the way you'd implement buildProtocol in Twisted.


Answer URL
https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-server-protocol
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.create_server
https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-client-protocol
https://docs.python.org/3/library/asyncio-eventloop.html#creating-connections
https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-client-protocol
https://docs.python.org/3/library/asyncio-eventloop.html#creating-connections
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.create_connection
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.create_server
