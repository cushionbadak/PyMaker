Natural Text
I want to read some input, which contains python assignment statements like this string:So I use one of these:I want to use this variable in other code, but after exec(...) it is not in current namespace. It is possible to get the variable value like this:however, if I dont know the name of variable it is not solution for me.So how to get that new variable into my namespace?UPDATE:My data for exec are like this:I defined functions SetCustomPropertyValue and StringLeft. I want to avoid some complicated translation of this script to python with all possible inputs. Exec() seems to be very quick solution, but after reading this post - Modifying locals in python I am little bit stuck.
pay attention to the comments warning about how dangerous it is to execute arbitrary code from a foreign source.if the statements have a consistent format, for example like the one in the example, you could easly parse it and extract the variable name:  or something more sophisticated using regular expressionsif the statement always introduces exactly one new variable, you could compare locals() before and after execution and check which new variable has been added:
How about using a small domain specific language as found in configparser to declare your new variables? This way you don't need to run untrusted code, and get simple things like variable expansion (though probably in a slightly different syntax).E.g. considering the following input as simple parser could look like:
There is some issues around locals() in Python 3 (see this post) so generally speaking, changes in locals() during runtime is not allowed.So I made some workaround, where I defined my own namespace dictonary my_dict_locals and my_dict_globals. To my_dict_globals I copied some necessary definitions from current namespace (like SetCustomPropertyValue function definition ...). Then I just calledwhere each could be like one of following:This works for me as I expected and I have in my_dict_locals all variables from above script defined.


Answer URL
https://docs.python.org/3/library/configparser.html
