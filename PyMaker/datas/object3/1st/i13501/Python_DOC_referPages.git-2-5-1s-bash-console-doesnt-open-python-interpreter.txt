Natural Text
If I do it in CMD, it works without issues, but if I try it in Git Bash it doesn't work. I like to use Git Bash as my only console, but I can't do that if it doesn't work with Python 3.4.Example is in the picture below. This can be easily reproduced. Uninstall Python and Git if they are installed, install Python 3.4, install Git 2.5.1 and you get that result.How can I make the Python interpreter work in Git Bash ?
The MinTTY terminal that is the new default terminal for Git simply doesn't support Windows console programs.  I don't know why the decision was made to change the default terminal, but I know a few ways to work around this:Write a Bash alias to launch python with winptyBash Alias (put in your .bashrc):Note: As of Git for Windows 2.7.1, Winpty is included out of the box.  winpty can be found installed at Git\usr\bin.Write a Bash alias to launch python in interactive mode if there are no arguments:Bash Alias (put in your .bashrc):Launch python in interactive mode explicitlyNote that this may not work correctly using arrow keys to browse command history:Or for scripts:What Is py.exe?In case you are wondering why I'm referencing C:\Windows\py.exe instead of a particular python.exe installation, I wanted to explain a few benefits of using it (the Python Launcher for Windows:It's installed with newer installations of Python (Python 3.3+)It understands and attempts to use the specified installation of python in shebang linesIt works with Virtual Environments (shebang line example for venv)For changing your preferred/system installation (e.g. for interactive mode), see this answer.
You need to explicit python interactive mode: python -iYou can define an alias in your .bashrc: alias python='python -i', but doing this, you will not be able to run a script file (i.e.: python script.py).Found here:Using Windows Python from Cygwin
Building onto @Darthfett's answer. I had to make sure there were quote marks and not reference the .exe files So in the end in your .bashrcalias python='winpty python'alias pip='winpty pip'  # Rescue pip as wellThen is all worksPythonPip
It's trying to open the console for the output.  Unless you compile python or get a version for mingw you may need something like:WinPty
Thanks for @darthfett 's answer, which largely solves the problem!Just FYI: Same symptom also exists when your script is using import getpass; getpass.getpass(), and in this case python -i your_script.py will NOT fix it, but winpty python your_script.py still works like a charm. (Lucky that they at least provide Winpty out of box with recent versions of Git For Windows.)So, to setup once (per virtual environment) and forget it, you can append this line at the end of your env/Script/activate:It will work in that bash console. (However, if you happen to be a vim user, it still won't work inside a vim when you do :python my_script.py in vim.)
You can configure the git bash console by editing the file in your "$HOME/.bashrc"Add this line to your $HOME/.bashrc 
When installing git for windows, choose to use windows default console window as shown in the picture below. This option allows you to use interactive python or nodejs. Also getpass works on this console.enter image description here
When installing git for windows, choose to use windows default console window as shown in the picture. This option allows you to use interactive python or nodejs. Also getpass works on this console.


Answer URL
https://docs.python.org/3/using/windows.html#python-launcher-for-windows
https://docs.python.org/3/tutorial/venv.html
