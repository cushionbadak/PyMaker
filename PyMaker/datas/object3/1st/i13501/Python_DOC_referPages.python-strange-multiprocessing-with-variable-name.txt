Natural Text
a simple example:run with error when do current_process in __del__:if I change a variable name:it get the right result:and I tried many variable name, some ok, some error.Why different instance name, will cause multiprocessing module be None in __del__?
The code raises if the global variable multiprocessing is deleted before kls gets deleted.In general, the order in which objects are deleted is not predictable. However, per the docs:Starting with version 1.5, Python guarantees that globals whose name begins with a single underscore are deleted from their module before other globals are deleted; if no other references to such globals exist, this may help in assuring that imported modules are still available at the time when the __del__() method is called.Therefore, if you name the instance _kls (with an underscore), then you can be assured that its __del__ will be called before multiprocessing is deleted:yieldsOther methods of ensuring a del method is called before the module is deleted include using atexitusing a context managersaving a reference to the module as an attribute of Klass. 


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__del__
