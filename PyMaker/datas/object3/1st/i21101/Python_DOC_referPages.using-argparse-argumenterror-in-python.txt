Natural Text
I'd like to use the ArgumentError exception in the argparse module in Python, but I can't figure out how to use it. The signature says that it should be called as ArgumentError(argument, message), but I can't figure out what argument should be. I think it should be some part of the parser object, but I couldn't find any documentation for it.
From the source documentation:ArgumentError: The exception raised by ArgumentParser objects when there are errors with the parser's actions. Errors raised while parsing the command-line are caught by ArgumentParser and emitted as command-line messages.The argument parameter of the constructor is the Action object from which the exception is raised. Usually there is no need to raise it outside of an Action subclass, and when subclassing it, there is no need to raise it explicitly; you usually raise ValueError (or whatever is appropriate) instead.Float values between 0 and 1In regards to your comment, that you only want to accept floating point values between 0 and 1. For this you should use the ability to define custom types. You can do it for example like this:Note that this is also safe against non-floats as float(string) will raise a ValueError for non-floats which also triggers an invalid type error by the argparse module. ArgumentTypeError is just a way to specify a custom error message.Mutually exclusive parametersFor mutually exclusive parameters, you should use argparse.add_mutually_exclusive_group.Parameter dependencyParameter dependency isnâ€™t really something that should be done by the argument parser. For semantic details, you should instead simply do it yourself:You can use ArgumentParser.error to raise custom error message which will interrupt the program and print to the console.But of course in such a basic situation it would make a lot more sense just to implicitly guess -p if possible.
While parser.error() is what most people probably want, it is also possible to use argparse.ArgumentError() (as the question asks.)  You need a reference to the argument, like the bar_arg in the example below:This will result in output like the one below:


Answer URL
https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.error
