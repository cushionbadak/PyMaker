Natural Text
I'm adding UTC time strings to Bitbucket API responses that currently only contain Amsterdam (!) time strings. For consistency with the UTC time strings returned elsewhere, the desired format is 2011-11-03 11:07:04 (followed by +00:00, but that's not germane).What's the best way to create such a string (without a microsecond component) from a datetime instance with a microsecond component?I'll add the best option that's occurred to me as a possible answer, but there may well be a more elegant solution.Edit: I should mention that I'm not actually printing the current time â€“ I used datetime.now to provide a quick example. So the solution should not assume that any datetime instances it receives will include microsecond components.
If you want to format a datetime object in a specific format that is different from the standard format, it's best to explicitly specify that format:See the documentation of datetime.strftime() for an explanation of the % directives.

In Python 3.6:https://docs.python.org/3.6/library/datetime.html#datetime.datetime.isoformat
This is the way I do it. ISO format:You can replace the 'T' if you don't want ISO format:
Yet another option:By default this uses local time, if you need UTC you can use the following:
Keep the first 19 characters that you wanted via slicing:
Since not all datetime.datetime instances have a microsecond component (i.e. when it is zero), you can partition the string on a "." and take only the first item, which will always work:
I usually do:output:
We can try something like below
I found this to be the simplest way.


Answer URL
https://docs.python.org/3/library/datetime.html?highlight=strftime#strftime-and-strptime-behavior
