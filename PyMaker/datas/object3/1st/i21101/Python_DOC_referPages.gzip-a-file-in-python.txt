Natural Text
I want to gzip a file in Python. I am trying to use the subprocss.check_call(), but it keeps failing with the error 'OSError: [Errno 2] No such file or directory'. Is there a problem with what I am trying here? Is there a better way to gzip a file than using subprocess.check_call?Thanks!!
Try this:Depending on what you're doing with the data of these files, Skirmantas's link to http://docs.python.org/library/gzip.html may also be helpful.  Note the examples near the bottom of the page.  If you aren't needing to access the data, or don't have the data already in your Python code, executing gzip may be the cleanest way to do it so you don't have to handle the data in Python.
There is a module gzip. Usage:Example of how to create a compressed GZIP file:Example of how to GZIP compress an existing file:EDIT: Jace Browning's answer using with in Python >= 2.7 is obviously more terse and readable, so my second snippet would (and should) look like:
In Python 2.7 format:Even shorter (Tested on python 2.7.6)
Use the gzip module:Your error: OSError: [Errno 2] No such file or directory' is telling you that the file fullFilePath does not exist.  If you still need to go that route, please make sure that file exists on your system and you are using an absolute path not relative.
the documentation on this is actually insanely straightforwardExample of how to read a compressed file:Example of how to create a compressed GZIP file:Example of how to GZIP compress an existing file:https://docs.python.org/2/library/gzip.htmlThat's the whole documentation . . . 

From the docs for Python3Gzip an existing fileCreate a new gzip file:Note the fact that content is turned into bytesAnother method for if you aren't creating content as a string/byte literal like the above example would beSee this SO question for a discussion of other encoding methods.


Answer URL
https://docs.python.org/3/library/pathlib.html#pathlib.Path.unlink
