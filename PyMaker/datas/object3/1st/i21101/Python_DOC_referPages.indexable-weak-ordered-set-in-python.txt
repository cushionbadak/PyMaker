Natural Text
I was wondering if there is an easy way to build an indexable weak ordered set in Python.  I tried to build one myself.  Here's what I came up with:Is there an easier way to do this?
The easiest way to is to take advantage of existing components in the standard library.OrderedDict and the MutableSet ABC make it easy to write an OrderedSet.Likewise, you can reuse the existing weakref.WeakSet and replace its underlying set() with an OrderedSet.Indexing is more difficult to achieve -- these easiest way it to convert it to a list when needed.  That is necessary because sets and dicts are intrinsically sparse.Use it like this:Note as of Python 3.7, regular dicts are guaranteed to be ordered, so you can substitute dict for OrderedDict in this recipe and it will all work fine :-)
Raymond has a great and succinct answer, as usual, but I actually came here a while back interested in the indexable part, more than the weakref part. I eventually built my own answer, which became the IndexedSet type in the boltons utility library. Basically, it's all the best parts of the list and set APIs, combined. If the weakref part is critical you can likely add it via inheritance or direct modification of a copy of the code (the module is standalone, pure-Python, and 2/3 compatible).


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableSet
https://docs.python.org/3/glossary.html#term-abstract-base-class
https://docs.python.org/3/library/weakref.html#weakref.WeakSet
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
