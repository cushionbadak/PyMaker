Natural Text
I'm just too confused, and can't come up with proper way to do this:I have this directed graph:and have two dictionaries, which show outgoing and incoming scoresFor example, in graph_to, node a goes to node b with score 2 and to node c with score 3; and in graph_from node a receives score 1 from node b.I want to create undirected graph such that scores between two nodes are summed up. It should become this dictionary:
You could try to make a collections.defaultdict() of collections.Counter() objects, and sum the edge counts as you iterate both graph dicts:Which gives:Note: Counter and defaultdict are subclasses of dict, so you can treat them the same as normal dictionaries. If you really want normal dictionaries in the final undirected graph, you can use either of these dict comprehensions:Additionally, you can also use dict.update() here to refactor sum_edges():
I hope we appreciate taking things in own hand, here's with simple logicOutput: 


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/stdtypes.html#dict.update
