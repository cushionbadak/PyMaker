Natural Text
I want to install pip. It should support Python 3, but it requires setuptools, which is available only for Python 2.How can I install pip with Python 3?
edit: Manual installation and use of setuptools is not the standard process anymore.If you're running Python 2.7.9+ or Python 3.4+Congrats, you should already have pip installed. If you do not, read onward.If you're running a Unix-like SystemYou can usually install the package for pip through your package manager if your version of Python is older than 2.7.9 or 3.4, or if your system did not include it for whatever reason.Instructions for some of the more common distros follow.Installing on Debian (Wheezy and newer) and Ubuntu (Trusty Tahr and newer) for Python 2.xRun the following command from a terminal:Installing on Debian (Wheezy and newer) and Ubuntu (Trusty Tahr and newer) for Python 3.xRun the following command from a terminal:Note:On a fresh Debian/Ubuntu install, the package may not be found until you do:Installing pip on CentOS 7 for Python 2.xOn CentOS 7, you have to install setup tools first, and then use that to install pip, as there is no direct package for it.Installing pip on CentOS 7 for Python 3.xAssuming you installed Python 3.4 from EPEL, you can install Python 3's setup tools and use it to install pip.If your Unix/Linux distro doesn't have it in package reposInstall using the manual way detailed below.The manual wayIf you want to do it the manual way, the now-recommended method is to install using the get-pip.py script from pip's installation instructions.Install pipTo install pip, securely download get-pip.pyThen run the following (which may require administrator access):If setuptools is not already installed, get-pip.py will install setuptools for you.
I was able to install pip for python 3 on Ubuntu just by running sudo apt-get install python3-pip. 
Python 3.4+ and Python 2.7.9+Good news! Python 3.4 (released March 2014) ships with Pip. This is the best feature of any Python release. It makes the community's wealth of libraries accessible to everyone. Newbies are no longer excluded by the prohibitive difficulty of setup. In shipping with a package manager, Python joins Ruby, Nodejs, Haskell, Perl, Go--almost every other contemporary language with a majority open-source community. Thank you Python.Of course, that doesn't mean Python packaging is problem solved. The experience remains frustrating. I discuss this at Does Python have a package/module management system?Alas for everyone using an earlier Python. Manual instructions follow.Python ≤ 2.7.8 and Python ≤ 3.3Follow my detailed instructions at  https://stackoverflow.com/a/12476379/284795 . EssentiallyOfficial instructionsPer https://pip.pypa.io/en/stable/installing.htmlDownload get-pip.py, being careful to save it as a .py file rather than .txt. Then, run it from the command prompt.You possibly need an administrator command prompt to do this. Follow http://technet.microsoft.com/en-us/library/cc947813(v=ws.10).aspxFor me, this installed Pip at C:\Python27\Scripts\pip.exe. Find pip.exe on your computer, then add its folder (eg.  C:\Python27\Scripts) to your path (Start / Edit environment variables). Now you should be able to run pip from the command line. Try installing a package:There you go (hopefully)! 
For Ubuntu 12.04 or older, won't work. Instead, use:
Update 2015-01-20:As per https://pip.pypa.io/en/latest/installing.html the current way is:I think that should work for any versionOriginal Answer:
if you're using python 3.4+just type:
I'm not sure when exactly this was introduced, but it's installed pip3 for me when it didn't already exist.
Single Python in systemTo install packages in Python always follow these steps:If the package is for python 2.x: sudo python -m pip install [package]If the package is for python 3.x: sudo python3 -m pip install [package]Note: This is assuming no alias is set for pythonThrough this method, there will be no confusion regarding which python version is receiving the package.Multiple PythonsSay you have python3 ↔ python3.6 and python3.7 ↔ python3.7To install for python3.6: sudo python3 -m pip install [package]To instal for python3.7: sudo python3.7 -m pip install [package]This is essentially the same method as shown previously.Note 1How to find which python, your python3 command spawns:Notice python 3.6.6 in the second line. Note 2Change what python3 or python points to:  https://askubuntu.com/questions/320996/how-to-make-python-program-command-execute-python-3
Older version of HomebrewIf you are on macOS, use homebrew.Also note that you should check the console if the install finished successfully. Sometimes it doesn't (e.g. an error due to ownership), but people simply overlook the log.UPDATED - Homebrew version after 1.5According to the official Homebrew page:On 1st March 2018 the python formula will be upgraded to Python 3.x and a python@2 formula will be added for installing Python 2.7 (although this will be keg-only so neither python nor python2 will be added to the PATH by default without a manual brew link --force). We will maintain python2, python3 and python@3 aliases.So to install Python 3, run the following command:Then, the pip is installed automatically, and you can install any package by pip install <package>.
If you use several different versions of python try using virtualenv http://www.virtualenv.org/en/latest/virtualenv.html#installationWith the advantage of pip for each local environment.Then install a local environment in the current directory by:Note that you specify the path to a python binary you have installed on your system.Then there are now an local pythonenvironment in that folder. ./ENVNow there should be ./ENV/pip-3.3use ./ENV/pip-3.3 freeze to list the local installed libraries.use ./ENV/pip-3.3 install packagename to install at the local environment.use ./ENV/python3.3 pythonfile.py to run your python script.
Here is my way to solve this problem at ubuntu 12.04:Then install the python3 from source code:When you finished installing all of them, pip3 will get installed automatically.
This is what I did on OS X Mavericks to get this to work.Firstly, have brew installedInstall python 3.4Then I get the latest version of distribute:I hope this helps.
For python3 try this:The good thing is that It will also detect what version of python you have (even if it's an environment of python in your custom location).After this you can proceed normally with (for example)source:https://pypi.python.org/pypi/setuptools/1.1.6#upgrading-from-setuptools-0-6
Assuming you are in a highly restricted computer env (such as myself) without root access or ability to install packages...  I had never setup a fresh/standalone/raw/non-root instance of Python+virtualenv before this post.  I had do quite a bit of Googling to make this work.Decide if you are using python (python2) or python3 and set your PATH correctly.  (I am strictly a python3 user.)  All commands below can substitute python3 for python if you are python2 user.wget https://pypi.python.org/packages/source/v/virtualenv/virtualenv-x.y.z.tar.gztar -xzvf virtualenv-x.y.z.tar.gzpython3 virtualenv-x.y.z/virtualenv.py --python $(which python3) /path/to/new/virtualenvsource /path/to/new/virtualenv/bin/activateAssumes you are using a Bourne-compatible shell, e.g., bashBrilliantly, this virtualenv package includes a standalone version of pip and setuptools that are auto-magically installed into each new virtualenv.  This solves the chicken and egg problem.You may want to create an alias (or update your ~/.bashrc, etc.) for this final command to activate the python virtualenv during each login.  It can be a pain to remember all these paths and commands.Check your version of python now: which python3 should give: /path/to/new/virtualenv/bin/python3Check pip is also available in the virtualenv via which pip... should give: /path/to/new/virtualenv/bin/pipThen... pip, pip, pip!Final tip to newbie Pythoneers: You don't think you need virtualenv when you start, but you will be happy to have it later.  Helps with "what if" installation / upgrade scenarios for open source / shared packages.Ref: https://virtualenv.pypa.io/en/latest/installation.html
What’s New In Python 3.4pip should always be availableBy default, the commands pipX and pipX.Y will be installed on all platforms (where X.Y stands for the version of the Python installation), along with the pip Python package and its dependencies.https://docs.python.org/3/whatsnew/3.4.html#whatsnew-pep-453so if you have python 3.4 installed, you can just: sudo pip3 install xxx
To install pip, securely download get-pip.py.Then run the following:Be cautious if you're using a Python install that's managed by your  operating system or another package manager. get-pip.py does not  coordinate with those tools, and may leave your system in an  inconsistent state.Refer: PIP Installation
And for Windows 8.1/10 OS Users just open cmd (command prompt) write this : C:\Users\%USERNAME%\AppData\Local\Programs\Python\Python36-32\Scriptsthen just write this : pip3 install {name of package}Hint: the location of folder Python36-32 may get different for new python 3.x versions 
If your Linux distro came with Python already installed, you should be able to install PIP using your system’s package manager. This is preferable since system-installed versions of Python do not play nicely with the get-pip.py script used on Windows and Mac.Advanced Package Tool (Python 2.x)Advanced Package Tool (Python 3.x)pacman Package Manager (Python 2.x)pacman Package Manager (Python 3.x)Yum Package Manager (Python 2.x)Yum Package Manager (Python 3.x)Dandified Yum (Python 2.x)Dandified Yum (Python 3.x)Zypper Package Manager (Python 2.x)Zypper Package Manager (Python 3.x)
Below video is how I did in cygwin:https://asciinema.org/a/hSu4kmJ6wb7b2UiuvxiXqtgGKThere is weirdness in python's pip, pip2, pip3 craziness. In crazy situations like these, it is imperative that there is less talking or explanations, but instead demonstrate things out. 
pip is installed together when you install Python. You can usesudo pip install (module)orpython3 -m pip install (module).


Answer URL
https://docs.python.org/3/whatsnew/3.4.html
https://docs.python.org/3/whatsnew/3.4.html#whatsnew-pep-453
