Natural Text
I'm early in the learning stages of python, and I've spent the last hour or so trying to find a more efficient way to format multiple integer variables to have thousands separators. This method works, but I can't shake the feeling that if you're doing the same thing 4 times, there is probably a better way to do it.Thanks in advance!-Rali
Basically what you want to do is perform the same operation on a group of elements. This will require for you to know about lists/tuples and the use/definition of functions. One of the simplest way to solve this is to implement a function that does this for you for any amount of arguments you are going to pass to it by using (*args). which will outputA more elaborated, but much more compact way would be:For this you will need to learn about the use of map, which applies a function to all element of an iterable object and lambda which lets you define a quick oneline nameless function. is kinda equivalent to
You could also store your variables in a list, then map() them with a lambda.That lambda will act like a function (and you can define it using a function def as well) but lambdas are shorter. It can be passed one (positional) argument, and it returns s if s > 999 is false (i.e. 0) or '{:,}'.format(s) when s > 999 is true (i.e. 1). You're basically accessing a list, indexing it whether or not s > 999.What's great about a lambda/function is that you can keep the repetitive code all in one place.You can then use a map() like soThe map() will apply the change lambda (or function) onto each variable and return a generator with the results.Output:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
