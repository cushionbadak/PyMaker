Natural Text
In my program I create an un-ending amount of class instances. the amount depends on how long the program is running. However I don't need the instances at all after a certain code being run. How could i remove them completely from memory?Simple example code:Would del p in this case completely remove that instance?
Python will remove them from memory for you when they are no longer referred to. If you have Player instances that refer to other Player instances (ex: p.teammates = [list of Players]) you could end up with circular references that may prevent them from being garbage collected. In this case you should consider the weakref module.for example:so how do we fix it?
In this instance, del p would only remove the reference to the Player object, so that it can later be picked up by the garbage collector. However, this also happens when it goes out-of-scope.In most everyday Python, there is no need to use explicit del statements.
There is no way in Python to delete an instance. Instead you can delete references to the instance, and once they are all gone, the object is reclaimed.


Answer URL
https://docs.python.org/3/library/weakref.html
