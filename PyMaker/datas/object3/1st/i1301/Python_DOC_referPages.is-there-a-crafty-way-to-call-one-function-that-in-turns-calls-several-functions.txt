Natural Text
In Python 2.7 I have several functions that I cannot modify, just use.Three of them are the "front" ones and three of them are the "rear" ones; lets call them  f1(), f2(), f3(), r1(), r2(), r3(). And I also have 17 functions with different numbers and types of parameters with different name keywords, e.g.:and so on.I need to call them all 17 this way:That block of code 17 times (for NN=1 to 17) !Is there a crafty way to do it without writing the 17 blocks ??***ADDED INFO ... What I have now is an horrid code:And one the 17 functions has "nameless" parameters.:-S
Make a list with the functions and their parameters:You can change the parameters later,too. For example:
Why not use a loop, like this:
Functions are just like objects, you could pack em all into a list and call them from it.for example:In your case, you would also need to pack the parameters, so you will have to use some thing like this:
Since the functions are accepting different arguments, you will have to write them together once somewhere with their respective arguments once atleast. But you can do that somewhere outside that block for better readability, either in a wrapper function or as a list.Ex:Or
You can also use globlas() like this:globals()  returns a dict that functions in globals scope will be an accessible form that dict. for more information about globals() read Here.
Have a look at contextlib module. Very basic exampleoutput


Answer URL
https://docs.python.org/3/library/contextlib.html
