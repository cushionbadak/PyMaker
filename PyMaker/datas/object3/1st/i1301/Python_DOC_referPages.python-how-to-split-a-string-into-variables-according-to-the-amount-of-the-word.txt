Natural Text
I have a string like:and I want to split the text into words and create a variable for each word without setting it manually.some thing like this:but if there is a different string with more or fewer words it will create an amount of variables according to the amount of words; for example, if there are seven words it will create seven variables.
You can have a dictionary and create the variables on the fly for each value in text:So, you don't have to worry about larger strings. It will create n number of variables depending upon its length.Then, you can access the dictionary like below:
Just unpack the values, for example:Notice the usage of *_ in case the resulting split has more words than desired. In case it has less it will always fail.Here you have the live example
The best way to deal this problem would be to use list of dict instead. But for some reasons, if you want to create variables as you mentioned then this might helpTrying accessing the variablesOutput
I read this as two different questions.1. Split each word in the string into a separate variableYou can do this very simply with the .split() method for strings. As answered above2. Count the letters of each wordOne way that you could approach this is to first sort the words by the number of letters they have, and then second to assign them to proper variables. For instance
suppose we have this stringthen we need to split it to get all array elements of the string as:To persist the dynamic variable's value, we can use Hash:And then we need to iterate the array and assign the element to the unique variable as below:which will give the output as:And to print Hash, we can write:Hope, this will provide some hint to write to your next logic..


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
