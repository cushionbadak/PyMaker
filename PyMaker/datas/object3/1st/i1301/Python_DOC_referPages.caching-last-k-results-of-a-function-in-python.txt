Natural Text
I want to write a function that accepts a single-argument function f, and an integer k, and returns a function that behaves the same as f except it caches the last k results of f.For instance, if memoize is the function we're after, and let mem_f = memoize(f, 2), then:What I have done is:This function returns the result from cache and if it is not in cache, it is computed and cached. However, I am not clear how to cache only last k results of f? I am newbie, any help would be appreciated.   
You could just use functools.lru_cache to do the caching. I accepts a maxsize parameter to control how much it caches:results:calling function  4  4  calling function  6  6  calling function  8  8  calling function  4  
Expanding on the excellent suggestion of Mark Meyer, here's what the solution looks like using lru_cache and the terminology of your question:Result:
SolutionYou can fix the code you have by using OrderedDict like this:Testing it outOutput:This version of memoize will likely work well for your own code. However, for production code (ie code that other people have to rely on), you should probably use the standard library function (functools.lru_cache) that Mark Meyer suggests.


Answer URL
https://docs.python.org/3/library/functools.html
