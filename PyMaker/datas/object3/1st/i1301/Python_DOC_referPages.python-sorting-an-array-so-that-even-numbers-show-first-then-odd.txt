Natural Text
I have a unsorted list of number with even and odd. I need to segregate odd and even numbers in sorted order.For example:Expected output :My program to segregate the odd and even numbers.I am trying to sort the list using insertion sort, couldn't get right output. Any way to sort this easily
Using a "smart" key function for list.sort / sorted:maps even numbers to the value [0, n], and odd numbers to the value [1, n], so that even numbers come first according to natural ordering.
We can first sort on n%2 (n modulo 2), which will be 0 for odd numbers and 1 for even ones, then on the number itself:The tuples we use as a key are sorted according to their first item first, then to their second.And it will also work for negative numbers... 
Simply use list comprehension basics
Make a list of evens and list of odds and then combine:Or using filter, lambda:
If you are happy to use a 3rd party library, you can use Boolean indexing with numpy.numpy.lexsort sorts in reverse fashion, i.e. it considers A % 2 before A:Related: Why NumPy instead of Python lists?
i suggest this if you want to avoid using external libraries:
A simple solution:


Answer URL
https://docs.python.org/3/library/stdtypes.html#list.sort
https://docs.python.org/3/library/functions.html#sorted
