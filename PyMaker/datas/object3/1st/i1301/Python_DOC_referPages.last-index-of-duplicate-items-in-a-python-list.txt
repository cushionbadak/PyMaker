Natural Text
Does anyone know how I can get the last index position of duplicate items in a python list containing duplicate and non-duplicate items? I have a list sorted in ascending order with [1, 1, 1, 2, 2, 3, 3, 4, 5] I want it to print the last index of duplicate items and index on non-duplicate items like thisI tried doing this way but could only print the starting index of duplicate elements and misssed non-duplicate items.
You can use enumerate and check the next index in the list. If an element is not equal to the element in the next index, it is the last duplicate:
Loop on the list using enumerate to get indexes & values, and use a dictionary and retain the last index (last index "wins" when there are duplicates). In the end, sort the indexes (as dictionaries aren't ordered, but you can use an OrderedDict):prints:The advantage of this solution is that it works even if the duplicates aren't consecutive.Python 3.7 guarantees the order of the base dictionaries so a simple dict comprehension solves it:
You can use a list comprehension with enumerate and zip. The last value will always be in scope, so we can include this at the end explicitly.


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#zip
