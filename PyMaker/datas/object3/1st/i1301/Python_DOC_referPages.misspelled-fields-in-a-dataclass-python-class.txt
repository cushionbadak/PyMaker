Natural Text
How to make it raise an exception on setting a misspelled fields in a @dataclass-decorated Python class?I want a practical way to do this. Do I need to write my own decorator instead?
One straightforward way (which works with any class) is to define __slots__:The purpose of slots is to serve as a small optimization. It allows the instances of the class to use a symbol table instead of a dict as the namespace of the class. It increases the speed of attribute access slightly, and can significantly improve the per-instance memory usage (because the instance doesn't carry around a dict underneath the hood), however, it disallows dynamic attribute setting.This is actually my favorite feature of __slots__.Note, you must take care when using inheritance with slots, at least, if you want subclasses to retain the slots behavior.


Answer URL
https://docs.python.org/3/library/dataclasses.html#dataclasses.field
