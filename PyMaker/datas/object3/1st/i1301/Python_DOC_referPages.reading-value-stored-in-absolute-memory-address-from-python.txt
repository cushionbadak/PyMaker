Natural Text
I used cheat engine to find an absolute address (See the attached image below)Memory addressNow I would like to know how can I read the value which is "1" from an address which is "0x14340A654"I tried finding the same on StackOverflow and this is what I could gather.But this returns some gibberish like
code.py:Notes:get_long_data is the function that does the work (everything else it's just for display / test purposes)The address alone is kind of useless (if one wants to be able to reconstruct the number), that's why the size (in bytes), and the sign of the number are returned as wellThe code relies on [Python 3]: PyLongObject's structure (most of int functionality is located in [GitHub]: python/cpython - (master) cpython/Objects/longobject.c). Below it's its definition:The array at the end holds the actual number value (that's why numbers in Python can get so big)For 0, sys.getsizeof only returns PyObject_VAR_HEAD's size, that's used to get the array offset inside the structure[Python 3]: int.to_bytes(length, byteorder, *, signed=False) is used for verification, but note it will match our output only if: 0 <= n < 2 ** 30 (the method does some processing on the array contents, it doesn't directly store the raw data into the returned byte stream)It's visible that the bytes are (4 byte) reversed in the output buffer (0x12345678 is the most eloquent example), compared to the number's hex representation; that is because of little endianness (can check [SO]: Python struct.pack() behavior (@CristiFati's answer) for more details)Output:


Answer URL
https://docs.python.org/3/c-api/long.html#c.PyLongObject
https://docs.python.org/3/library/stdtypes.html#int.to_bytes
