Natural Text
When I parse source code with the ast module, why is the lineno attribute of a Name inside a FormattedValue set to 1, even when the f-string isn't on line 1?I'm trying to see which lines of the source code are included in a function definition, so I'm walking the abstract syntax tree nodes below the FunctionDef node. I collect all the lineno attributes into a set, and that tells me which lines are part of the function definition.However, when f-strings appeared in Python 3.6, they somehow broke this technique. Here's an example of the problem:Here's the output from that script:I know that's pretty unreadable, so here's the same output with some extra whitespace:The only source code was on line 2, so what's with this part of the output?I thought it might be the line number within the string, but when I try this, it still reports lineno=1.
After some research, it seems that f-strings are more powerful than I realized. Each set of braces isn't just a dictionary key as in previous versions of Python, it's a complete block of Python code. That means you can write Python expressions in the braces like this:With that understanding, it makes sense that the lineno value is the line number within the braces, not within the string or within the whole file. To test that theory, I tried this code, and the lineno changed to 3.If I just ignore line numbers from FormattedValue nodes, my code works again.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#f-strings
