Natural Text
Suppose I have a function like this:Then I can call:Both return the same as expected.However, I would like to do something like this:The idea behind this is that I would like to pre-configure a function and then put it in a pipe like this:Then, bar(1,2,3)(data) would be called as a part of the pipe. However, I don't know how to do this. Any ideas? Thank you very much!Edit:A more illustrative example was asked for. Thus, here it comes:As you can see, the DataFrame is piped through the functions, and filter_columns is one of them. However, the function is pre-configured and returns a function that only takes a DataFrame, similar to a decorator. The same behaviour could be achieved with this:However, I would always have to run two calls then, e.g. filter_columns()(df), and that is what I would like to avoid.
well I am unfamiliar with toolz module, but it looks like there is no easy way of curry a function with arbitrary number of arguments, so lets try something else.First as a alternative to (and by the way, df[*args] is a syntax error )to avoid filter_columns()(data) you can just grab the last element in args and use the slice notation to grab everything else, for exampleAnd use as filter_columns(df), filter_columns("date", "temperature", df), etc. And then use functools.partial to construct your new, well partially applied, filter to build your pipe like for example


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
