Natural Text
Is there a way to add a header row to a CSV without loading the CSV into memory in python? I have an 18GB CSV I want to add a header to, and all the methods I've seen require loading the CSV into memory, which is obviously unfeasible. 
Just use the fact that csv module iterates on the rows, so it never loads the whole file in memoryusing writerows ensure a very good speed. The memory is spared here. Everything is done line-by-line. Since the data is properly processed, you could even change the separator and/or the quoting in the output file.
You will need to rewrite the whole file. Simplest is not to use pythonPython based solutions will work at much higher levels and will be a lot slower. 18GB is a lot of data after all. Better to work with operating system functionality, which will be the fastest.
Here is a comparison of the three suggested solutions for a ~200 MB CSV file with 10^6 rows and 10 columns (n=50).The ratio stays approximately the same for larger and smaller files (10 MB to 8 GB).cp:shutil:csv_reader 1:10:55i.e. using the builtin cp function is approximately 55 times faster than using Python's csv module.Computer: regular HDDPython 3.5.2 64-bitUbuntu 16.04i7-3770If you really want to do it in Python, you could create the header file first and then merge it with your 2nd file via shutil.copyfileobj.


Answer URL
https://docs.python.org/3/library/shutil.html
https://docs.python.org/3/library/csv.html
