Natural Text
Given the string abc. the aim is to break it into two groups abc and .. Actually, I'm only interested in the group before the .. Why is re.search not getting the right group while re.findall is getting it?Another example where the input is abc.def., the expect output is to isolate the final fullstop and get abc.def and .. So re.findall is getting it as desired:But re.search lumps the final fullstop into the first group.Is it possible for re.search('^(\S+)\.$', text).group(0) to return only abc.def? Is there some flags that needs to be set?
Because you are asking for the wrong group. Group 0 is the entire match, which includes the dot. Group 1 is the first capture group within the match. This is all spelled out in the docs for the match object, which re.search returns. If you absolutely need something zero-based, use re.search(...).groups()[0]. 
Group numbers start at 1, so you want group(1). group(0) is the entire match text.


Answer URL
https://docs.python.org/3/library/re.html#re.match.group
