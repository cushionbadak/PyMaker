Natural Text
Is there a way I can use Python eval() and/or exec() to maintain state between program runs without writing data to a file or database.Here's the question more specifically. I want to write a program that prints out a number and then keeps adding 1 to itself every time it's run again without persisting any variable in a file or database.I got asked this question in a recent interview. Any help appreciated.
Disclaimer: I do not recommend doing this. 99.999% of the time, it's better to store serializable information in its own file.If by "without writing data to a file", you mean "without writing data to its own file",you can open the Python file that is running and rewrite the data in-place:Now the value will change with each subsequent execution.But again, it's preferable to just keep the data in a separate file, using for example shelve:Or perhaps json if you value human-readability:Or even a full-fledged database if you've got a lot of data.
This should ideally be code-golf, but it was fun!Here is a solution using exec and eval as you requested.The code is 15 lines long, on each run an additional line (z=1) is added to the .py fileand what is printed is number of lines in file now - 15, thus printing increments on each runOUTPUT:
You can use the file stats to keep track of the last modified value (which is an integer), and update it each run using os.utime:Consecutive runs:


Answer URL
https://docs.python.org/3/library/os.html#os.stat
https://docs.python.org/3/library/os.html#os.utime
