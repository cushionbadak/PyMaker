Natural Text
What's the pythonic way to implement this:This does give me ['this', 'is', 'my', 'string'] as I need but I fell there's a more elegant way to do it. Suggestions?
You could use itertools.accumulate(), perhaps:You could inline the start values by adding another accumulate() call starting at zero:This version can be made into a list comprehension:Demo of the latter version:The double accumulate could be replaced with a tee(), wrapped in the pairwise() function from the itertools documentation:I threw in an itertools.chain() call to prefix that 0 starting position, rather than create a new list object with concatenation.
I would use enumerate for that, with accumulating:With your example:
Could use islice. Probably not efficient, but maybe at least interesting and simple.
Just because I believe there have to be ways to do this without explicit loops:OUTPUT


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
https://docs.python.org/3/library/itertools.html#itertools-recipes
https://docs.python.org/3/library/itertools.html#itertools.chain
