Natural Text
I am looking for some analogue of decltype in C++. What I am trying to accomplish is the following: So the idea is to use type annotation of another function. The solution I found looks somehow clumsy:Basically, the question is whether there exists something like decltype (perhaps it should be called "return_type") or whether it's planned in further versions. I have also written a small function that illustrates possible use of this functionality:UPD As was suggested by Jim Fasarakis-Hilliard we can also use get_type_hints instead of annotations
Nothing like that currently exists and no issue on the tracker for typing seem to indicate that it is planned. You're always welcome to create an issue and see how this is welcomed.Currently your approach does the trick (that is assigns a type), the only change I'd introduce would be to use get_type_hints from typing rather than grabbing the __annotations__ attribute directly. Coupled with .get (since it returns a dict), could make this shorter, too:Which can of course be removed from the function and used in a single line if you're so inclined.If the possibility of random objects being supplied to return_type exits, you'll need to catch the TypeError it raises and return your default Any:Of course since this assigns a type dynamically you can't expect static type checkers to catch it, you need static hinting for that.


Answer URL
https://docs.python.org/3/library/typing.html#typing.get_type_hints
