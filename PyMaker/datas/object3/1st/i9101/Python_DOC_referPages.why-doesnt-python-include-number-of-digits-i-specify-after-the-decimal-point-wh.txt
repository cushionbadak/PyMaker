Natural Text
For example,The output is 31.0. I would have expected 31.00.The output is 7.36. I would have expected 7.360.
You are confusing rounding with formatting. Rounding produces a new float object with the rounded value, which is still going to print the same way as any other float:Use the format() function if you need to produce a string with a specific number of decimals:See the Format Specification Mini-Language section for what options you have available.If the value is part of a larger string, you can use the str.format() method to embed values into a string template, using the same formatting specifications:
Python always prints at least one digit after the decimal point so you can tell the difference between integers and floats. The round() function merely rounds the number to the specified number of decimal places. It does not control how it is printed. 7.36 and 7.360 are the same number, so the shorter is printed.To control the printing, you can use formatting.  For example:
Python does round to 3 decimal places. It is the printing that cuts additional zeros. Try something like print("%.3f" % number) 


Answer URL
https://docs.python.org/3/library/functions.html#format
https://docs.python.org/3/library/string.html#formatspec
https://docs.python.org/3/library/stdtypes.html#str.format
