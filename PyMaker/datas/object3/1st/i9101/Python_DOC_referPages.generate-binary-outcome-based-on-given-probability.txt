Natural Text
I'm writing code that requires the generation of a binary outcome from a given probabilities or list. I'm looking at the random module but was unable to find anything that would solve the problem.ExampleRETURN 1 30% of the timeEXAMPLERETURN 1 OR 0 45% and 55% of the time
Generate a uniform(0,1) random value, check if it's â‰¤ the desired proportion/p-value, and return 0 or 1 accordingly.  Assuming rand is a U(0,1) generator, pseudocode would look like this:
random.choices will certainly do what you want, but it might be overkill. It can generate an arbitrarily long sequence if choices from a finite set where each element has an independent frequency. There is an example of its use in the examples section of the linked Python documentation:In that example, the weights are specified as a cumulative distribution: An equivalent call using individual weights, as in your example, would beThe weights don't need to add up to Q; they will be normalized.


Answer URL
https://docs.python.org/3/library/random.html?highlight=random.choices#random.choices
