Natural Text
I want to sort a list by the number of occurrences of the elements in the list.When I use this form:    the result is not what I want: [2, 1, 3, 4, 2, 2, 3].But, when I write like it using sorted:    the result is right: [1, 4, 3, 3, 2, 2, 2].what's the reason for this behavior?
This is by design and intentional. CPython temporarily "disallows" access to the list while the list is being sorted in place, the behavior is documented here:CPython implementation detail: While a list is being sorted, the  effect of attempting to mutate, or even inspect, the list is  undefined. The C implementation of Python makes the list appear empty  for the duration, and raises ValueError if it can detect that the list  has been mutated during a sort.You can inspect that by printing A inside the key function - you'll get an empty list:But, if you do that for sorted():It is also documented inside the sort() implementation:
It seems that A is changed during the in-place sort process, so you cannot rely on the value of A during the sort process.Making a copy also works.Confirmed by this line in python documentationCPython implementation detail: While a list is being sorted, the effect of attempting to mutate, or even inspect, the list is undefined. The C implementation of Python makes the list appear empty for the duration, and raises ValueError if it can detect that the list has been mutated during a sort.
I believe it's because A.sort is modifying the list in place underneath while computing. sorted() doesn't modify the list and returns therefore a correct result.
The built-in sorted creates a list out of the sequence provided and then sorts that based on the key argument (omitting error checking):This essentially translates to something like what Jean provided in his answer:By making that copy B and referencing A in the key function, this removes the restriction imposed by A.sort which can't peek in itself.


Answer URL
https://docs.python.org/3/library/stdtypes.html#list.sort
https://docs.python.org/3/library/stdtypes.html#list
