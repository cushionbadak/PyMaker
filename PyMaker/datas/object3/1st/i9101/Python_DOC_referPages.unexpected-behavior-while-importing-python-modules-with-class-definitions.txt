Natural Text
Consider the code in the file my_module.py:Now, when I import this moduleI get an error,While I understand that my_module does not have er defined, but I am never creating an instance of class A. Therefore it is puzzling that python tries to execute the __init__ callback when simply importing the module. Although, the __init__ call is not fully executed as explained by the example below:Now, when I import the module - nothing is printed and this is expected behavior. I am puzzled why is function er called in the first example when I donot instantiate an object of class A. Any pointers to the documentation that explains this? 
Because in Python, default argument values are evaluated at definition time. See, for example this question, or this notorious question. This is documented hereThe default values are evaluated at the point of function definition  in the defining scope, so thatf() will print 5.Important warning: The default value is evaluated only once. This  makes a difference when the default is a mutable object such as a  list, dictionary, or instances of most classes. For example, the  following function accumulates the arguments passed to it on  subsequent calls:This will printIf you donâ€™t want the default to be shared between subsequent calls,  you can write the function like this instead:


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#more-on-defining-functions
