Natural Text
I am writing a python command line interface tool on top of cement.Cement is working quite well for standard argument parseing. However, I want to be able to add a specific amount of non-flagged arguments. Let me explain.Typical command line tool:Now, lets say I want to add some arguments without flags, for example how cd worksmy/dir is an argument without a flag.Is there anyway to do this with cement?My current example cement app:So lets say I wanted to do myapp command1 some/dir some_stringis there a way to parse those arguments?
You can do this using optional positional arguments in ArgParse.  There is actually an issue open in GitHub for better documentation on this subject:https://github.com/datafolklabs/cement/issues/256Basically, if you want "command1" to handle the operation, then "some/dir some_string" would be positional arguments.  You could add the following to MyAppBaseController.Meta.arguments:( ['extra_arguments'], dict(action='store', nargs='*') ),And then access those arguments like this inside of the command function:if self.app.pargs.extra_arguments:    print "Extra Argument 0: %s" % self.app.pargs.extra_arguments[0]    print "Extra Argument 1: %s" % self.app.pargs.extra_arguments[1]
As said in the Cement doc: "Cement defines an argument interface called IArgument, as well as the default ArgParseArgumentHandler that implements the interface. This handler is built on top of the ArgParse module which is included in the Python standard library" You could achieve this by telling the argparse module to consume one argument from the arguments list an store it in the name attribute of the pargs list.


Answer URL
https://docs.python.org/3/library/argparse.html
