Natural Text
I have an inheritance hierarchy whereby some of the classes have a class property named e.g., 'pickled'.  I would like to get A.pickled if it exists or None if not â€” even if A derives from many classes including e.g., B and B.pickled exists (or not).Right now my solution crawls A's __mro__.  I would like a cleaner solution if possible.
To bypass the normal search through the __mro__, look directly at the attribute dictionary of the class instead. You can use the vars() function for that:You could just access the __dict__ attribute directly too:but using built-in functions is preferred over direct access to the double-underscored attribute dictionary.object.__getattribute__ is the wrong method to use for looking at class attributes; see What is the difference between type.__getattribute__ and object.__getattribute__?type.__getattribute__ is what is used for attribute access on classes, but that'd still search the MRO too.
I'm not sure, but perhaps


Answer URL
https://docs.python.org/3/library/functions.html#vars
