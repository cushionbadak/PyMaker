Natural Text
I use the following simple code to parse some arguments; note that one of them is required. Unfortunately, when the user runs the script without providing the argument, the displayed usage/help text does not indicate that there is a non-optional argument, which I find very confusing. How can I get python to indicate that an argument is not optional?Here is the code:When running above code without providing the required argument, I get the following output:
Parameters starting with - or -- are usually considered optional. All other parameters are positional parameters and as such required by design (like positional function arguments). It is possible to require optional arguments, but this is a bit against their design. Since they are still part of the non-positional arguments, they will still be listed under the confusing header “optional arguments” even if they are required. The missing square brackets in the usage part however show that they are indeed required.See also the documentation:In general, the argparse module assumes that flags like -f and --bar indicate optional arguments, which can always be omitted at the command line.Note: Required options are generally considered bad form because users expect options to be optional, and thus they should be avoided when possible.That being said, the headers “positional arguments” and “optional arguments” in the help are generated by two argument groups in which the arguments are automatically separated into. Now, you could “hack into it” and change the name of the optional ones, but a far more elegant solution would be to create another group for “required named arguments” (or whatever you want to call them):
Since I prefer to list required arguments before optional, I hack around it via:and this outputs:I can live without 'help' showing up in the optional arguments group.
Building off of @Karl Rosaenand this outputs:


Answer URL
https://docs.python.org/3/library/argparse.html#required
