Natural Text
In Python the symbol int is used both as a type and a built-in function.  But when I use int in the REPL, or ask for its type, the REPL tells me it is a type.This is fine, but int is also a built-in function: it is listed in the table of built-in functions right in the Python documentation.Other built-in functions are reported like this in the REPL:But I can't get type to show me this for int. Now clearly I can use int as a function if I want to (sorry for using map instead of a comprehension, I'm just trying to make a point):So Python knows to use the function.  But why does type pick the type over the function?  Nothing in the definition of the type function says to expect this.  And then as a follow-up, what is the meaning of this expression:Is this giving me the id of the type or the function.  I expect the former.  Now if it is the former, how would I get the id of the built-in function int?
There is only one thing called int and only one thing called abs.The difference is that int is a class, and abs is a function. Both, however, are callable. When you call int(42), that calls the int class's constructor, returning an instance of class int.It's not really much different to:Here, Int is callable, and can be used to construct instances of the class.Once you realise this, the rest will follow.


Answer URL
https://docs.python.org/3/library/functions.html
https://docs.python.org/3/library/functions.html#type
https://docs.python.org/3/library/stdtypes.html#typesnumeric
