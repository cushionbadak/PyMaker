Natural Text
I'm a C++ guy, I love parallelism, HPC applications and I know OpenMP pretty well. Now I'm learning python and I know the basics.As a personal project to improve my python skills, I would like to implement a parallel version of the Elkan algorithm for k-means. A parallel version implemented with C and OpenMP of this algorithm is present in VLFeat. Now, I know how I could easily implement the Elkan algorithm in python...But what about parallelism? The cool thing about OpenMP is that you take serial code, you add #pragma omp parallel for and SBAM, it's parallel!How can I achieve something similar in python? Or do I have to design the parallel algorithm from the beginning, i.e., not writing the serial version first and then make it parallel, but managing threads explicitly etc (which is an huge pain)?
First, CPU parallelism in Python can only be obtained via native code or via multiple processes.Second, the analogy to OpenMP would be the multiprocessing module.It has a lot going on, but for simple for loops, etc. it's quite easy to use.would become


Answer URL
https://docs.python.org/3/library/multiprocessing.html
