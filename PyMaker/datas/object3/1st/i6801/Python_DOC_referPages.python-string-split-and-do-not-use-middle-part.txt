Natural Text
I am reading a file in my Python script which looks like this:I wrote a script to read and split the "this is important" part and ignore the comment lines that start with #.I only need the first and the last word (In my case "this" and "important"). Is there a way to tell Python that I don't need certain parts of a split?In my example I have what I want and it works.However if the string is longer and I have like 10 unused variables, I gues it is not like programmers would do it.Here is my code:
Another possibility would be:If I recall correctly, *_ is not backwards compatible, meaning you require Python 3.5/6 or above (would really have to look into the changelogs here).
On line 8, use the following instead of use:Negative indexing in python, parses from the last. More info 
I think python negative indexing can solve your problemRead more about Python Negative Index
You can save the result to a list, and get the first and last elements:If you want to print each 3rd element, you can use:Otherwise, if you don't have a specific pattern, you'll need to manually extract elements by their index.See the split documentation for more details.
If I've understood your question, you can try this:str.split() returns a list of the words in the string, using sep as the delimiter string. ... If sep is not specified or is None, a different splitting algorithm is applied: runs of consecutive whitespace are regarded as a single separator, and the result will contain no empty strings at the start or end if the string has leading or trailing whitespace.In that way you can get the first and the last words of your string.
For multiline text (with re.search() function):The output:


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=split#str.split
