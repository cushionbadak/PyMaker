Natural Text
I have a regex like --and an input inp = "Ahhwps edAn". I want to extract all the matched pattern along with unmatched(remaining) but with preserving order of the input.The output should look like -- ['Ahh', 'wps ed', 'An'] or ['Ahh', 'w', 'p', 's', ' ', 'e', 'd', 'An'].I had searched online but found nothing.How can I do this?
The re.split method may output captured submatches in the resulting array.Capturing groups are those constructs that are formed with a pair of unescaped parentheses. Your pattern abounds in redundant capturing groups, and re.split  will return all of them. You need to remove those unnecessary ones, and convert all capturing groups to non-capturing ones, and just keep the outer pair of parentheses to make the whole pattern a single capturing group.Use Note that there may be an empty element in the output list. Just use filter(None, result)  to get rid of the empty values.
The match objects' span() method is really useful for what you're after.Here's what the output looks like.This technique handles any non-matching prefix and suffix text as well. If you use an inp value of "prefixAhhwps edAnsuffix", you'll get the output I think you'd want:
You can try this:Output:


Answer URL
https://docs.python.org/3/library/re.html#re.split
