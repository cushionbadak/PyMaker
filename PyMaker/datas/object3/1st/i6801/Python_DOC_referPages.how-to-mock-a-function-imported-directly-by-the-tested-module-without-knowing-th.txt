Natural Text
Assume I have a function defined in a module:module_a.pyAnd I want to create an API to patch the function:patcher.pyThe thing is, I don't know what is the name of the module that will use my API. so a test looking like this:test1.pywill work. But a test written like this:test2.pywill Fail.Is there anyway not making the API user to write it's tests and modules(!) like the first option?
There is a way to "patch" over a function without knowing where the patch is occurring. That was the requirement for my question since the patcher is my library API, and I don't want to be given a path to each test module using my library.The solution I found was to pass on all loaded modules and try to find foo in them, and then changing it - sorta implementing patch by myself. If the import will happen only after the Patcher is started, I loaded the module myself, and changed it too.Now the code will look like this:Patcher


Answer URL
https://docs.python.org/3/library/unittest.mock.html
