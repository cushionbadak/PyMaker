Natural Text
I have the following code that takes a string biology_score and after splitting it, converts it into a string ('b'). The desired output is to produce what I have constructed manually below (a list of users with their corresponding scores)I would be interested in the most efficient way to construct a for loop to achieve this with a list. Note: I am aware that the best way to approach this would be a dictionary, but these purposes I want to use a list. Code:Required answerThe most elegant solution (for loop to produce the above by looping through the list)The easiest/quickest method to convert the string to a dictionary, using the least number of steps, and then achieving the same output (user: score)
I'm not sure if this is what you're looking for:
If this is what you need.Note: Python versions <3.6 does not support element orders. So, when you go with dict, the order might not be retained.
One of the options is to use dictionaryIf the iterables are of uneven length, missing values are filled-in with fillvalue
You can use the grouper recipe from the itertools module:Then:To make a dictionary:Or use an OrderedDict if the original order of the items should be preserverd.
Mostly a rewrite of @chngzm's answer, and it's probably unsuitable for your teaching purposes, but using a generator is quite nice:
One Pythonic way to get the desired result is to use zip:If you want integer scores, you can use map:


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#map
