Natural Text
I'm trying to get data from some web-service with python 3.4 via 'requests' lib. I need to get a valid xml-string for parsing with 'lxml' library. But for some reason data inside xml encoded uncorrectly:With following code:How can I extract data without symbols like '>' inside XML? Is this possible without manual replacing &gt; symbols to its equivalent?
Currently your SOAP response is valid, well-formed XML. The reason for the character entities is because you have an embedded XML document and hence actual markup cannot show for that inner XML in order for entire response to remain valid. Simply parse out the embedded XML, encode it as a bytes object to accept the special declaration characters, and parse at its own XML tree. Above code tested on this string which completes a valid <xmlData> as OP omits the rest of embedded XML:
There might be another way to do this, but a coarse grained approach is to create a table of characters you want to convert and just replace them;Added note; a small table can be found here w3schools entities
You can use the unescape function from the standard library's sax package.unescape handles ampersands and angle brackets by default; you can pass a dictionary to handle other replacements. From the docs:xml.sax.saxutils.unescape(data, entities={})Unescape '&', '<', and '>' in a string of data.You can unescape other strings of data by passing a dictionary as the optional entities parameter. The keys and values must all be  strings; each key will be replaced with its corresponding value.  '&amp', '<', and '>' are always unescaped, even if entities is  provided.


Answer URL
https://docs.python.org/3/library/xml.sax.utils.html#module-xml.sax.saxutils
https://docs.python.org/3/library/xml.sax.utils.html#xml.sax.saxutils.unescape
