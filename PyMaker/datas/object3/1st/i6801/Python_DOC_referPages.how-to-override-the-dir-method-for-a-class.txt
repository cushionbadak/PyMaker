Natural Text
I want to change the dir() output for my class. Normally, for all other objects, it's done by defining own __dir__ method in their class. But if I do this for my class, it's not called.How can I change the dir() output for class?
That's because dir calls the __dir__ of the type of the input (equivalent to: type(inp).__dir__(inp)). For instances of a class it will call the classes __dir__ but if called on a class it will call the __dir__ of the meta-class.So if you want to customize dir for your class (not instances of your class) you need to add a metaclass for your X:
As @MSeifert already explained, dir calls the __dir__ attrbiute of the object's class. So type(X).__dir__ is called, not X.__dir__. Just for those that are interested, here is a look behinds the scenes of what exactly occurs.The implementation of dir is in bltinmodule.c:The dir function calls the API function PyObject_Dir. The PyObject_Dir function is implemented in object.c:PyObject_Dir is defined using two helper functions. When an object is passed in - as is the case here - then the _dir_object function is called. It is also implemented in object.c:The part were focusing on is:This is where the __dir__ special method is looked-up on the object passed in. This is done using _PyObject_LookupSpecial. _PyObject_LookupSpecial is defined in typeobject.c:_PyObject_LookupSpecial first calls Py_TYPE on the object passed in, before looking-up the attribute using _PyType_LookupId. Py_TYPE is a macro that gets the ob_type member of objects. It's expanded form is:And as you probably guessed, The ob_type attribute is the class (or type) of the object:So, as you can see from above, the __dir__ attribute used is indeed the object's class.


Answer URL
https://docs.python.org/3/reference/datamodel.html#special-lookup
