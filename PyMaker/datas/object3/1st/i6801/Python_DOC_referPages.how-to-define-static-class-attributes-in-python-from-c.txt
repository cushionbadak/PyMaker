Natural Text
I wonder how can I define a static class variable from C++ for Python? The equivalent Python code would be like:I tried to use tp_getset field when defining the type, but it turns out it doesn't work and returns a getset_descriptor in Python, and it doesn't work when called on instances (AttributeError). Furthermore, Python doc says directly manipulating tp_dict with C API is unsafe. But it doesn't tell what to use instead. (see here)I deliberately chose int in the example since I'm referencing some other class in it, if that matters.
The tp_getset defines descriptors for a type; descriptors are bound to instances when accessed via the __getattribute__ hook, so are not suitable to define class attributes.You can add attributes to a class by setting them on the PyTypeObject.tp_dict object for the type; do so in the module's initialization function (PyInit_<modulename>), for example, after finalising the type with PyType_Ready() (which makes sure the tp_dict object exists):This is untested C code; I'm not familiar enough with C++ to confidently provide you with a C++ version instead.If you want to see a real-life example, see the datetime module, where the datetime.min, datetime.max, etc. class attributes are set.


Answer URL
https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_dict
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_dict
https://docs.python.org/3/c-api/type.html#c.PyType_Ready
