Natural Text
I'm going through the PyMongo tutorial  and there's one thing that I don't understand.We are shown that we can create a database collection like this: My initial thought was: "Did they make sure to include a test_database attribute for the client and a test_collection attribute for the database just to make it work with the tutorial?" But further experimentation showed me that I could create databases and collections in this way with any "attribute name" I please! For example:How does this work in Python? I've tried to understand it by reading the pymongo files in the GitHub repository but it's quite difficult for a newbie to understand.
MongoClient overrides a "magic" method, __getattr__. Whenever you access an attribute on a MongoClient object that isn't actually a property or attribute of the object, for example when you access "test_database", the Python interpreter calls:The implementation of MongoClient.__getattr__ then creates a Database object and returns it.Database also overrides __getattr__ to return a Collection with any name.Both classes also override __getitem__ so that bracketed access works:See the __getattr__ docs here.
You need to implement __getattr__ method in your class to make it work.Simply speaking - whenever you access an attribute that is not defined in the class, __getattr__ method will be invoked (it's actually a little more complicated). See example below:You can read more about __getattr__ here:Python: how to implement __getattr__()?


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
