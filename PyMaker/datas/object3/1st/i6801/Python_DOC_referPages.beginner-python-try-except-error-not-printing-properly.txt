Natural Text
Below is my code. The goal is to convert a date input into a dashed format (e.g. 01-01-2001). After converting the date, it should print the date. However, if the date is unintelligible or not a valid input, it should print "Not a valid date" and return None. Right now, even for correct date inputs, it only returns None. The conversion script was used in a previous task and works fine, so I do believe the issue is in the 'try/except' chunk.Testing inputs: Thanks!
You're taking some extra steps, and you're skipping some steps.  Validating the date and/or dealing with different date formats is the tricky part, and you're not doing it: is the separator /, -, . ?  Is it dd-mm-yyyy or mm-dd-yyyy or one of the myriad other formats? (may not be a problem if you're pulling from a source with a known format, but certainly will be a problem if you're expecting human date input).  Your component conversion functions don't have to conditionally call .zfill(), that is '12'.zfill(2) is not an error - which means you don't really need functions for this at all.  Your try/except seems to be misplaced: it should really be around validating the input, once you have three elements it's not going to fail joining them to create the return. You could just as easily use string formatting.  And so on.Using the module for date manipulation as noted above seems the way to go!
Python has date parsing and date formatting functions included in the standard library. Why not just use those?By using this you also can make sure that input that are not actual dates (35/01/78, for example) are rejected.Usage of datetime format strings is documented here: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
For the except to work, it should be instead ofThe function below should work fine:The result of the code above will be 


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
