Natural Text
It is said that everything is object in python, I am not able to understand why following codes work in different ways:Output: <__main__.Foo object at 0x0000029ACB4DA978>Output: 10Now if everything is an object, then why is print(a) is not printing what print(foo) did?
print displays the string representation of an object by calling it's __str__ method.  Foo appears to have inherited the default __str__, which returns a string showing the object's type and identity.  An int returns a string showing the decimal representation of its value.
When you are using print( ) you are asking Python to display visual representation of the object so that we humans can see what it is. To print the object it must have a method __str__ or __repr__. For simple objects like strings "your string" or integers 123 the __str__ method is used when you type print(123).That method is set to display the integer value then.But for more complex objects and especially for objects created by the programmer (you) if you have not implemented your own __str__ or __repr__ method Python will just print function's (object's) name and address in memory where that object is located.Once you get to deeper understanding of object oriented programming you will be able to create your own __str__ and __repr__ methods which will override then the basic method used by Python and display whatever information you want for that object.Hope it helps a bit.Tomasz Kluczkowski


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__repr__
