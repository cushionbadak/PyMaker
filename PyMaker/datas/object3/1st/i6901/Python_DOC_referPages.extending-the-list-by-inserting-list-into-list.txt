Natural Text
I want to extend the list the result of this will be '(0, (0, (0, (0, (0, (0, 1))))))'But what I really want is (0, 0, 0, 0, 0, 0, 1).Do you have any idea doing it?
you could do: s= (0,)+s to create a new tuple with leading 0 (instead of nesting the tuple at each iteration like you're doing.But maybe the best way would be to prepend with a tuple of zeroes using multiplication (to avoid the loop):what bothers me even more is the need to use a global. I would pass s as a parameter:resulting in the following tuple:you may want to read about lists and tuples and their differences: What's the difference between lists and tuples?. It's much easier to work with lists because of the available in-place operations they offer (but they cannot be used as dictionary keys or to be stored in sets)
s = 0, 1 is not a list but a tuple which is immutable.It would be better to use proper list s = [0, 1] and then use insert() method.Or event better to avoid the for loop:If you want to use a tuple, then the answer from @Jean-Fran√ßois Fabre is the way to go.
Given your particular use case Jean's answer would be better. But if you want to make that nested tuple into a single dimensional tuple, the more canonical operation is called flatten(). flatten() takes an arbitrarily-nested sequence and 'flattens' it into sequence with no nesting. flatten() isn't included in the python standard libraries, but is an incredibly useful operation included in many other languages. I took this below implementation from here, which includes other implementations and discusses their strengths and weaknesses.The usage is simple:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
