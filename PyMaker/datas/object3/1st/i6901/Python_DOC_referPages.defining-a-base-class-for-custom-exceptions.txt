Natural Text
Question:What is the need to define a base class for handling errors?Background:I was reading through the docs on User-Defined Exception Handling when I noticed in the example they defined class Error(Exception). The remaining classes are all subclasses of it. When I have been defining custom exceptions, I've simply written class MyExc(Exception) and never define a base class.I don't understand, particularly in their example, the need for defining class Error(Exception) when all it does is pass. Yes they could just raise Error for a particular case, but couldn't they have just as well defined the two other exceptions as subclasses of Exception vice Error?
When you write a library you usually define a base exception class for all your exceptions so that a user has a simple way to handle them all at the same time, e.g.MyLibsome other codeBut to be honest this "lib specific" handling hardly ever happens (usually you either catch a specific exception or just catch all except Exception:). So I guess it's not that important. More a matter of style.


Answer URL
https://docs.python.org/3/tutorial/errors.html#user-defined-exceptions
