Natural Text
I am given a list of numbers a = [1, 2, 3, 4, 5, 6] and using only Python's reduce function, return a value. The value is calculated by:(((...(a[0] + a[1]) * a[2] + a[3]) * a[4] + ...)So in the above example where a = [1, 2, 3, 4, 5, 6], the answer should be ((1 + 2) * 3 + 4) * 5 + 6 = 71I'm fairly new to Python and I'm trying to learn it:reduce(lambda x,y: x * y, map(lambda x,y: x+y, numbers))
The tricky bit is, of course, that you have to alternate between two functions in reduce. Since you can't really keep track of the current position in the list1), in order to decide which operation to use, your best chance is to use an iterator that alternates between + and *.You could use itertools.cycle to alternate between add and mul and use those in reduceIf you can't use those modules, you can make a generator expression alternating between + and * using lambdas in a ternary expression. The rest remains the same.1) Well, you can, using enumerate(a), or zip(range(len(a)), a), if you prefer...Or shorter, using tuple-unpacking in the lambdas, but this only works in Python 2.x:
Improving the solution of Akash Patel, i have come up with this, with only reduce.We need to add odd number of elements and multiply even number of elements with previous elements.
This was a tough problem because you wanted to use everything in reduce. So just use reduce twice!


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
