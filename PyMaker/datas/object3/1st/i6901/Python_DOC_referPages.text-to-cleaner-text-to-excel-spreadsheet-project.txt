Natural Text
I have a text file full of pc data, organized as a list of blocks of one of two types. Either:My goal was to have Python (3.6.2) open and read the file, clean it up, and compile the data into an excel spreadsheet as follows:Here is my code. I use Pycharm, and am in a virtual env:Now, this works perfectly for the file in question, but, in addition to the terribly suboptimal code, I'm sure, there is something I can explicitly see that needs improved. In this block: I only want "NO ERROR" to be appended to my list if my line starts with "Computer Name" AND the next non-blank line does not begin with "ERROR." Naturally, I tried this:The problem is, this creates a jacked up excel spreadsheet, and I don't at all know why. Even in the step afterward in the main code where I print gold_lst (just to check if the list is correct), the list is terribly inaccurate. I can't even seem to figure out of what the list is comprised. How can I fix this?As for a second question, if I may ask it in the same topic, more general text files of this type which I am likely to receive in the future may contain computers with more than one ID and password. The block would look like this, if I had to guess:And there may be even more than 2 such ID/Password combos. How can I modify my code to allow for this? As it stands, my code will not easily account for this. I am quite new to Python, so maybe it could, but I don't see it.
One approach to this problem is as follows:Read in the whole file, skipping any empty lines.Use Python's groupby() function to split the list of lines into blocks based on the Computer Name line.For each block, try and extract both an error and a list of IDs and Passwords. Leave blank if not present.For each block, write any extracted data to the next row in the spreadsheet.The script is as follows:Assuming your BLRP.txt is as follows:You would get a spreadsheet as follows:How does groupby() work?Normally when you iterate over a list, it gives you the entries one item at a time. With groupby(), you are able to iterate over this list in "groups", where the number of items in each group is based on a condition. The condition is provided in the form of a function (I have used lambda to avoid writing a separate function). groupby() will build up the group of items to return until the result from the function changes. In this case, the function is looking for lines that start with the word Computer Name. So when that is true it will return with one item (unless there are two adjacent lines with Computer Name on them). Next it will return with all the lines that don't start with Computer Name, and so on.It returns two things, a key and a group. The key is the result of the function startswith(), which will either be True or False. The group is an iterable holding all the matching items. list(g) is used to convert it into a normal list, in this case all the lines until the next Computer Name line is returned.To write the entries onto different rows and to convert known error messages into numbers:


Answer URL
https://docs.python.org/3/library/itertools.html?highlight=groupby#itertools.groupby
