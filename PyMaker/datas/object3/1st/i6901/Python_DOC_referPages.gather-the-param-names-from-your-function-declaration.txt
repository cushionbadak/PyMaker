Natural Text
I have the following generic debugger:Debugger will do:this pleases me slightly, but notice I missed the true info. What I want is:Those args have semantic meaning, and can be used as start and end...they aren't *args. Is there a way deep in python standard library I can read this method generate_minutes_in_timespan and pluck off the declaration, the names and order of required positional args, also the names of any declared kwargs (like declaring cutoff_date=None, I would want to know cutoff_date was offered as a kwarg, vs the optional **kwargs...)I shoot for {'args': [('start', 'the value given'), ('end', 'the user given value')], 'star_args': None, 'kwargs': {'cutoff_date': None}, 'star_kwargs': None} for full debug info.
From within the decorator, use the inspect module to discover the arg names:Matching up the arguments passed with the actual arg names is left as exercise for the OP.  
Use inspect.signature(method).bind:If you're on Python 2, there's a backport of this functionality on PyPI you can use.
The result is nice:does


Answer URL
https://docs.python.org/3/library/inspect.html
https://docs.python.org/3/library/inspect.html#introspecting-callables-with-the-signature-object
