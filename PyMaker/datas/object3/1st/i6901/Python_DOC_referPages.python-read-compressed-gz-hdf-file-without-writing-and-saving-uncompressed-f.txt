Natural Text
I have a large number of compressed HDF files, which I need to read. I can read in uncompressed HDF files with the following methodand repeat this for each file. However, this is more time consuming than I want.I'm thinking its possible that most of the time overhang comes from writing the compressed file to a new uncompressed version, and that I could speed it up if I simply was able to read an uncompressed version of the file into the SD function in one step.Am I correct in this thinking? And if so, is there a way to do what I want?
According to the pyhdf package documentation, this is not possible.There is no other way to instantiate an SD object that takes a file-like object. This is likely because they are conforming to an external interface (NCSA HDF). The HDF format also normally handles massive files that are impractical to store in memory at one time.Unzipping it as a file is likely your most performant option.If you would like stay in Python, use the gzip module (docs):
sascha is correct that hdf transparent compression is more adequate than gzipping, nonetheless if you can't control how the hdf files are stored you're looking for the gzip python modulue (docs) it can get the data from these files.


Answer URL
https://docs.python.org/3/library/gzip.html
https://docs.python.org/3/library/gzip.html#module-gzip
