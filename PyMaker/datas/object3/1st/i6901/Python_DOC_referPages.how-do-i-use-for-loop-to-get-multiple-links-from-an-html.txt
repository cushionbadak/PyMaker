Natural Text
This is what I have at the moment:I parses the html, gets one link, the first one, and since I know the url finishes at 1882 and the next I want is 1881, I wrote this for-loop to get the rest.It only prints one result as if there was not loop written.Strangely, if I reduce the indentation for the return function it returns a different url.I didn't quite get how For-loops works yet. Also, this is my first post ever here so forgive my english and ignorance.
The first time you hit a return statement, the function is going to return, regardless of whether you're in a loop. So your for() loop is going to get to the end of the first iteration, see the return, and that's it. The other 19 iterations won't run.The reason you get a different URL if you dedent the return is that your for() loop can now run to completion. But since you didn't save any of your previous iterations, it will return only the last one.What it looks like you might want is to build a list of results, and return that.Just remember then that link in your outer scope will actually be a list of links, and handle it accordingly.
How do you expect to get multiple outputs (url here) with a single method call? The for loop helps you iterate over a range multiple times and get multiple results, but its of no use until you have a single call. You can do one of the following:Instead of writing a loop inside the method, call the method in a loop. That way your output will be printed for each call.Write the entire thing in the method so that you have multiple print statements.Do the following:
Your function returns control to the caller once it encounters the return statement, here in the first iteration of the for.You can yield instead of return in your function to produce image links successively from the function and keep the for loop running:References:Understanding Generators in PythonPython yield expression
It happened because you make return in the loop. Try it:And you can change this:on this:
The other answers are good and general, but for this specific case there's an even better way. xkcd provides a JSON API, so you can use a list comprehension:This is also faster and more friendly to the xkcd servers.
When you call 'return' during the first loop the entire 'getXkcdComic' function exits and returns.Something like this may work and print like the original code intended:


Answer URL
https://docs.python.org/3/reference/expressions.html#grammar-token-yield_expression
