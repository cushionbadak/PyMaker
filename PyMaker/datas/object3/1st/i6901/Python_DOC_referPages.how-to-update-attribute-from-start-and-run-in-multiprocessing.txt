Natural Text
I create sub-class from multiprocessing.Process.Object p.run() can update instance.ret_value from the long_runtime_proc, but p.start() can't get the ret_value updated though long_runtime_proc called and ran.How can I get ret_value with p.start()?
Calling Process.run() directly does not start a new process, i.e. the code in Process.run() is executed in the same process that invoked it. That's why changes to self.ret_value are effective. However, you are not supposed to call Process.run() directly.When you start the subprocess with Process.start() a new child process is created and then the code in Process.run() is executed in this new process. When you assign the return value of long_runtime_proc to self.ret_value, this occurs in the child process, not the parent and thus the parent ret_vaule is not updated.What you probably need to do is to use a pipe or a queue to send the return value to the parent process. See the documentation for details. Here is an example using a queue:With this code ret_value will end up being assigned the value off the queue which will be 1234.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.run
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.start
https://docs.python.org/3/library/multiprocessing.html#exchanging-objects-between-processes
