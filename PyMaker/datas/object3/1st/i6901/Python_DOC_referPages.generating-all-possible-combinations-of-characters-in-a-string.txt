Natural Text
Say I have a string list:I would like to construct a new list such that each entry of the new list is a concatenation of a selection of 3 entries in the original list. Note that each entry can be chosen repeatedly:The brutal force way is to construct a 3-fold nested for loop and insert each 3-combination into the new list. I was wondering if there is any Pythonic way to deal with that? Thanks.Update:Later I will convert the new list into a set, so the order does not matter anyway.
This looks like a job for itertools.product.yield from is available to you from python3.3 and beyond. For older version, yield within a loop:
The best way to get all combinations (also called cartesian product) of a list is to use itertools.product using the len of your iterable as repeat argument (that's where it differs from the other answer):or if you want the result as list:It's a bit cleaner to use the repeat argument than to multiply and unpack the list you have manually.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
