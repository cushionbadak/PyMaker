Natural Text
I have a question about how Python knows certain things. For example, when I writePython knows that a_list is a list. How does that work? where is it written in the default modules of python?I want to create an object that works kinda like a list, but when I want to obtain the item in a specific position, I would want to writeinstead of a method likeAnd I would want to create an object doing something likeAnd I can't inherit from list cause it's prohibited in the project I'm working on.Is this even possible? I was searching here and on the internet, but I can't even put my question in words to search properly.
To answer your first question, that would be a consequence of the implementation of the __getitem__ method.Note that this is a very bare implementation, and I haven't used a list because you said you can't use it.To answer your second question, that would involve making changes to the fundamental syntax and grammar of the language, which you, as an end user of the language, are currently not entitled to do.
Python knows that a_list is a list. How does that work? where is it  written in the default modules of python?Python interpreter recognize the list literal and then create a list object. The Python list object is part of the "standard types that are built into the interpreter".I want to create an object that works kind like a list, but when i  want to obtain the item in a specific position, i would want to writeYou can do that use object.getitem(self, key). There is a lot of useful example on Internet.And i would want to create an object doing something like$"car", "plane"$like yo do ["car", "plane"] by defaultIf you don't want change the Python interpreter, you could have a less "native/hardcore" solution parsing the string and creating the objects that you want by yourself., something like: 


Answer URL
https://docs.python.org/3/library/stdtypes.html#lists
https://docs.python.org/3/reference/datamodel.html#object.__getitem__
