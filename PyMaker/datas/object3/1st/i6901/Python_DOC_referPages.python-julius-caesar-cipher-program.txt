Natural Text
I am trying to make the Julius Caesar Cipher program but adding a twist by adding a random letter to the beginning and end of the sentence. For some reason when I enter a long string part of the string is lost when printing. I am using python 3. Can someone explain how to fix this issue and why this is happening? Thank youOUTPUT : ENCODED:DECODING:FINAL DECODED SENTENCE:
It looks like the problem is that, when decoding, you do str.replace replaces all occurrences if you don't include the optional third count argument. That means you're removing more characters than you bargained for.If all you want to do is strip the first and last characters off the string, you can do something likewhich is much cleaner, since you don't actually care what the first and last characters are, you just want them gone.
I think I know the problem here.those two lines:your problem here is that you choose to delete by value, and not by index.this works on, maybe an array of objects (for example if you use remove),because every instance of an object always has a different object reference.(unless you use something like arr[1] = arr[3], which means you copied the reference).anyways, it's a good habit to replace by index when you want to replace by index.besides that you're using the function wrong. it is supposed to give you a new string,when it's arguments are a substring and a substring to replace.replace searches for ALL instances of the substring and replaces them.it's not supposed to remove it like that.so, the reason it's starting to delete parts of the message on larger messagesis probably because you're always deleting all instances of a random char,and the longer the string the more likely it is to have the random char in it.anyways, I like using:when I do something like that.I also don't think it's a good idea to do a recursive call like that:mainly because, even though you may not know it does, but each and evey timeyou do a recursive call it saves the location you called from.this is true  not only for recursive calls but most function calls.so you're creating something which equals to a new int, but you never delete it.try using


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.replace
