Natural Text
I've just had a situation where a multi-threaded app I wrote was hanging at some point when it was interacting with a Queue, which was being populated by a library, in another thread.In the simplest form, I was just doingThe reason I had that, and no more (specifically leaving out task_done) was that I wasn't that experienced with multi-threading, or Queues in python, and that's what was in the sample code.In my situation, at some point after hours of operation, the app would hang, sometimes at q.empty(), sometimes at q.get(), and sometimes after q.get().When I read about others who'd had similar issues, it was only then that I learned about task_done, and when I added that to my code, simply like,These hangs I was experiencing ceased.  I do a few queueing operations like this throughout the app, and I want a standardised way to handle running through the q while not q.empty(), getting a row with q.get(), and calling q.task_done().
The favourite method I've found for this, which I'm now using is a combination of a context manager to handle the get and task_done like,in combination with a generator function to handle the not empty() check, and yield the row back to you like,So now, instead of writing,I use,which I personally consider more elegant, and overall safer (because I won't forget about calling task_done as was the case before).


Answer URL
https://docs.python.org/3/reference/datamodel.html#context-managers
https://docs.python.org/3/library/queue.html#queue.Queue.get
