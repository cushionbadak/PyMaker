Natural Text
So i'm making a game, and I have a dictionary of tuples containing the coordinates of the objects on the playing field that looks like this (for example):later in my code, I want to change the coordinates to easier to understand areas. The first defining part would be a corresponding letter, and then the second a number, looking like this: player would be in B4, monster in C2, and so on. the top right 'area' is represented by the tuple (4, 4), and the bottom left 'area' is represented by the tuple (0, 0). The only thing I have been able to think of that might work is something like this:In short, it didn't work. I think the problem is in unpacking the tuples from the dictionary and using it as the number to get the letter from the list letters. Sorry is this was confusing, i'll try to answer all your questions. 
The core of the question is how to convert numerical row/column coordinates to something more readable (battleship-style).  Here is a simple and fast function to do just that:
Use a dictionary comprehension using string formatting to build the new values. Unpacking the value-tuples is easily done:Also, you can use string.ascii_uppercase instead of defining a list of alphabets manually.OTOH, since your board supposedly has a (0, 0) not sure what you intend to make of index 0 since A is already taken as 1.
You can use string.ascii_uppercase to get a full list of the alphabet to use for each coordinate:Output:


Answer URL
https://docs.python.org/3/library/string.html#string.ascii_uppercase
