Natural Text
I have the following class:Examplary use:How can I iterate on this structure without knowing the names of the attributes? Python provides us with the built-in method __getattribute__, but I still need to know the name of the requested attribute:
The __dict__ attribute holds what you want.The class has it:And any instance has it as well:You should access this attribute through the vars builtin function.Calling vars(foo) will return foo.__dict__.See this related post: Use __dict__ or vars()?.Documentation for vars:vars([object])Return the __dict__ attribute for a module, class, instance, or any other object with a __dict__ attribute.Objects such as modules and instances have an updateable __dict__ attribute; however, other objects may have write restrictions on their  __dict__ attributes (for example, classes use a types.MappingProxyType to prevent direct dictionary updates).Without an argument, vars() acts like locals(). Note, the locals dictionary is only useful for reads since updates to the locals  dictionary are ignored.In addition, I tried and wrote a decorator that might interest you.This is a class decorator, that adds a initKwargs to the class it decorates.Besides, it wraps the __init__ method of that class as well, so as to have it append the kwargs dictionary it receives to the class' initKwargs attribute.Demonstration:I find this approach much cleaner that using vars, because you know what you're accessing since you define it yourself.It gives you more control on the class' behaviour.


Answer URL
https://docs.python.org/3/library/functions.html#vars
