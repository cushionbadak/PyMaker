Natural Text
I need to get files with the biggest size in different folders, change their name to folder name that they belong to and save to a new folder. I have something like this and I got stuck:To make it more clear: Let's say the name of the sub-folder is "elephant" and there are different elephant photos and subfolders in in this elephant folder. I want to go through those photos and subfolders and find the elephant foto with the biggest size, name it as elephant and save it to my target folder. Also repaet it for other sub folders such as lion, puma etc.How I could achieve what I want ?
How to get the files with the biggest size in the folders, change their name and save to a different folderBasically you already have a good description of what you need to do. You just need to follow it step by step:get all files in some search directoryfilter for relevant files ("*.jpg")get their sizesfind the maximumcopy to new directory with name of search directoryIMO it's an important skill to be able to break down a task into smaller tasks. Then, you just need to implement the smaller tasks and combine:I'd use os.scandir because it avoids building up a (potentially) huge list of files in memory and instead allows me (via a generator) to work one file at a time. Note that starting with 3.6 you can use the result of os.scandir as a context manager (with syntax).Filtering is relatively straightforward except for the IMO strange choice of Ã¬tertools.filterfalse to only keep elements for which its predicate returns False. This is two steps in one: Get the maximum with the builtin max function, and use the file size as "key" to establish an order. Note that this raises a ValueError if you don't have any images ... so you might want to supply default=None or handle that exception.shutil.copy copies the file and some metadata.  Instead of hardcoding path separators, please use os.path.join!Now all of this assumes that you know the subfolder_name. You can scan for those easily, too:
To find biggest file and save to another locationif you want only images then add one more condition in loopTo get all folders biggest file
Here's some code that does what you want. Instead of using the old os.walk function, it uses modern pathlib functions.The heart of this code is the recursive biggest function. It scans all the files and directories in folder, saving the matching file names to the files list, and recursively searching any directories it finds. It then returns the path of the largest file that it finds, or None if no matching files are found.You can call it like this:Note that the copied files will have the same name as the top-level folder in rootdir that they were found in, with no file extension. If you want to give them a .jpg extension, you can changetoThe shutil module on older versions of Python 3 doesn't understand pathlib paths. But that's easy enough to remedy. In the copy_biggest function, replacewith


Answer URL
https://docs.python.org/3/library/os.html#os.scandir
https://docs.python.org/3/library/itertools.html#itertools.filterfalse
https://docs.python.org/3/library/shutil.html#shutil.copy
https://docs.python.org/3/library/os.path.html#os.path.join
https://docs.python.org/3/library/pathlib.html
