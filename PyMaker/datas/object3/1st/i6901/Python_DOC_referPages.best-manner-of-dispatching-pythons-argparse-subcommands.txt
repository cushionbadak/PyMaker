Natural Text
I am playing around with Python's argparse module in order to get a rather complicated and large sub-commands structure. So far, the arguments parse goes pretty well and everything works fine but I am looking for a better way to manage how sub-commands are executed.Here is an example of my dummy/playaround application:As you can see, here I use a simple dict (CMD_DISPATCHER) as a map relating the sub-command name to its function.As I said, this is just a simple example of what I want to achieve but the real project will have many nested sub-commands so I would like a better way to manage those several sub-commands.Do you know a better/more-professional way to do this? 
OK, after some more research I have found a good way that fits my needs: set_defaults. I have used this function earlier but always to set default existing default argument values. I did not notice the clear example that argparse documentation provides:As you can see the line parser_bar.set_defaults(func=bar) sets a new variable to parser_bar arguments. In this case bar is a function that is eventually used as the sub-command executor in line args.func(args).I hope this helps someone in the future.


Answer URL
https://docs.python.org/3/library/argparse.html
