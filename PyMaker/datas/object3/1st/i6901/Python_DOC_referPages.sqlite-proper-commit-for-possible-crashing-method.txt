Natural Text
Python 3.5. Sqlite3The goal is to have a method that add records to a log table but it doesn't knows whether that method will crash:open logger connectionlogger insert "Method starts"do somethinglogger insert "I did something"do another thinglogger insert "I did another thing"logger insert "Method ends"close logger connectionHow do I commit that? Until now while learning Sqlite I though I had to use as many executeas I wanted and just commit them before closing the connection to actually "save" the changes, something like this:But if we take into account that it can crash before it gets to the commit part, how would you do? why?For reference, this is my real code:Called as this:
Updated based on comment clarifications:Per your comment, you don't mean an exception, but an actual hard termination (e.g. power failure). In that case, you need to commit your log queries individually, as a committed transaction is the only thing that's going to be persisted through a hard termination like that.Previous answer:Assuming by crash you mean an exception gets raised, you can use a try/finally block:The code in the finally block will be run even if the code in the try block raises an exception. Note however that only the code from the try block that has already run by the point of the exception will be run; the rest of the try block will not be run (execution will move directly to the finally block, followed by the exception continuing to raise up the stack).


Answer URL
https://docs.python.org/3/tutorial/errors.html#defining-clean-up-actions
