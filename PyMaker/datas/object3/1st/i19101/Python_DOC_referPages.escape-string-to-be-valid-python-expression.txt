Natural Text
My question is simple. Lets assume you have string in python like this Foo '" \ Bar.What is the correct way to convert it to valid python expression like 'Foo \'" \\ Bar' (so you just simply can copy&paste it to python interpreter and it'll work)?I thought of '"{}"'.format(some replace magic), but there's gotta be better solution.
You can use the unicode_escape codec; this produces a bytes instance:unicode_escape expliticly produces valid python string literals:Produce a string that is suitable as Unicode literal in Python source codeTo go back to Unicode, simply decode from ASCII:Alternatively, use repr():Return a string containing a printable representation of an object. For many types, this function makes an attempt to return a string that would yield an object with the same value when passed to eval(), otherwise the representation is a string enclosed in angle brackets that contains the name of the type of the object together with additional information often including the name and address of the object.The output of repr() of a string can be pasted straight back into a Python interpreter without additional formatting.Note that repr() and unicode_escape only escape quotes when absolutely necessary. Only when both styles of quoting, single and double, are present does one of these get escaped:
Thatâ€™s exactly what repr is meant to do:


Answer URL
