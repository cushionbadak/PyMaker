Natural Text
In my project, I have a bunch of strings that are read in from a file. Most of them, when printed in the command console, exceed 80 characters in length and wrap around, looking ugly.I want to be able to have Python read the string, then test if it is over 75 characters in length. If it is, then split the string up into multiple strings, then print one after the other on a new line.I also want it to be smart, not cutting off full words. i.e. "The quick brown <newline> fox..." instead of "the quick bro<newline>wn fox...".I've tried modifying similar code that truncates the string after a set length, but just trashes the string instead of putting it in a new line.What are some methods I could use to accomplish this?
You could use textwrap module:help on textwrap.fill:Use regex if you don't want to merge a line into another line:output:
This is what the textwrap module is for.  Try textwrap.fill(some_string, width=75).
This is similar to Ashwini's answer but does not use re:Output when the input is your question:


Answer URL
https://docs.python.org/3/library/textwrap.html
https://docs.python.org/3/library/textwrap.html#textwrap.fill
