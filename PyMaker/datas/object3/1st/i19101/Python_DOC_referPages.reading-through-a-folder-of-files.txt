Natural Text
I am assigned to write a program that catches plagiarists. Given a folder of files, how would I iterate through them file-by-file, constructing a list of all 6-word phrases in each file. An example of this isNow is the time for all good men to come to the aid of their country. Contains the 6-word phrases: Now is the time for all, is the time for all good, the time for all good men,time for all good men to, ...and so on.Is what I have so far to create the lists of 6 word phrases. How then would I go about doing this for each file and then comparing those results to see if any two files have over 200 of the same phrases? I have done very little with using files in Python so dumb everything down as much as possible. Thanks!
Since it's homework, I think a couple of links will help you more than complete code.Take a look at os.listdir that lists all files in a folder and os.walk that traverses a directory tree.Then you can make a list where each item is a container of phrases. I suggest using a set of phrases for each file, and a list of such sets, or maybe a set of frozensets.Then you can take all pairwise combinations of those sets with itertools.combinations and compute the intersection for each pair. If the size of any intersection is above the threshold, you've found the plagiarist.A comment on your current code: there is a naming convention that variable names should start with lowercase letters, and capitalized names are used for classes.


Answer URL
