Natural Text
I am wondering what the practical reason there is for the observed behavior in python 2.7:Returns false.  But...Returns true.  I understand that the hexdigest/digest return the final string representations, but since the same data has been entered into the two hash objects directly, shouldn't they evaluate as equal to one another?  Wouldn't the md5 HASH object be aware of the internal identity when the magic __eq__ methods are called?  For what reason would the objects themselves evaluate inequality?  Really just curious.
There's no equality comparison for hashlib.md5 objects so, as they are different objects, the result is false.The .hexdigest method generates a string (or byte string if you're on Python 3) and strings can be compared.BTW:
The reason may be that using == to compare checksums is suject to timing attacks: https://groups.google.com/forum/?fromgroups=#!topic/keyczar-discuss/VXHsoJSLKhM (credits to jwilkins in https://stackoverflow.com/a/14487254/821378)In a recent Python version, a function was added but I forgot if itâ€™s for all hashes or only HMAC: http://docs.python.org/3/library/hmac#hmac.compare_digest


Answer URL
