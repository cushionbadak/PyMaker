Natural Text
How can I turn a list of dicts like thisInto a single dict like this
This works for dictionaries of any length:As a comprehension:
In case of Python 3.3+, there is a ChainMap collection:Also see:What is the purpose of collections.ChainMap?
Note: the order of 'b' and 'c' doesn't match your output because dicts are unorderedif the dicts can have more than one key/value
For flat dictionaries you can do this:
This is similar to @delnan but offers the option to modify the k/v (key/value) items and I believe is more readable:for instance, replace k/v elems as follows:unpacks the k,v tuple from the dictionary .items() generator after pulling the dict object out of the list
This is asymmetrical because you need to choose what to do with duplicate keys; in this case, dict2 will overwrite dict1. Exchange them for the other way.EDIT: Ah, sorry, didn't see that.It is possible to do this in a single expression:No credit to me for this last!However, I'd argue that it might be more Pythonic (explicit > implicit, flat > nested ) to do this with a simple for loop. YMMV.
Note I added a second key/value pair to the last dictionary to show it works with multiple entries.Also keys from dicts later in the list will overwrite the same key from an earlier dict.
You can use join function from funcy library:
dic1 = {'Maria':12, 'Paco':22, 'Jose':23}dic2 = {'Patricia':25, 'Marcos':22 'Tomas':36}dic2 = dict(dic1.items() + dic2.items())and this will be the outcome:dic2{'Jose': 23, 'Marcos': 22, 'Patricia': 25, 'Tomas': 36, 'Paco': 22, 'Maria': 12}


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
