Natural Text
I haveI want 

If the order of the elements much match the order in your example then you can use a combination of zip and chain:If you don't care about the order of the elements in your result then there's a simpler way:
Parsing in your head is easy enough if you recall that the for and if clauses are done in order, followed a final append of the result:and would be easier had it have been written with more meaningful variable names:
An alternate method using index slicing which turns out to be faster and scales better than zip:You'll notice that this only works if len(a) == len(b) but putting conditions to emulate zip will not scale with a or b. For comparison:
If you care about order:print c gives [1, 'a', 2, 'b']
main()
Here is a standard / self-explaining solution, i hope someone will find it useful:output:Of course, you can change it and do manipulations on the values if needed



Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
