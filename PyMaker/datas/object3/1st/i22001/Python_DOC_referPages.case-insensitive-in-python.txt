Natural Text
I love using the expressionwhere USERNAMES is a listIs there any way to match items with case insensitivity or do I need to use a custom method? Just wondering if there is need to write extra code for this.Thanks to everyone!
Alternatively:Or, yes, you can make a custom method.
I would make a wrapper so you can be non-invasive.  Minimally, for example...:Now, if CaseInsensitively('MICHAEL89') in whatever: should behave as required (whether the right-hand side is a list, dict, or set).  (It may require more effort to achieve similar results for string inclusion, avoid warnings in some cases involving unicode, etc).
Usually (in oop at least) you shape your object to behave the way you want. name in USERNAMES is not case insensitive, so USERNAMES needs to change:The great thing about this is that it opens the path for many improvements, without having to change any code outside the class. For example, you could change the self.names to a set for faster lookups, or compute the (n.lower() for n in self.names) only once and store it on the class and so on ...
I think you have to write some extra code. For example:In this case we are forming a new list with all entries in USERNAMES converted to upper case and then comparing against this new list.Update As @viraptor says, it is even better to use a generator instead of map. See @Nathon's answer.
You could doUpdate:  played around a bit and am thinking you could get a better short-circuit type approach usingThe ifilter function is from itertools, one of my favorite modules within Python.  It's faster than a generator but only creates the next item of the list when called upon.
str.casefold is recommended for case-insensitive string matching. @nmichaels's solution can trivially be adapted.Use either:Or:As per the docs:Casefolding is similar to lowercasing but more aggressive because it  is intended to remove all case distinctions in a string. For example,  the German lowercase letter 'ß' is equivalent to "ss". Since it is  already lowercase, lower() would do nothing to 'ß'; casefold()  converts it to "ss".
Here's one way:For this to work, both string1 and string2 objects must be of type string.
My 5 cents'a' in "".join(['A']).lower()


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.casefold
