Natural Text
How do I get the numbers after a decimal point?For example, if I have 5.55, how do i get .55?
An easy approach for you:
Keep in mind this won't help you with floating point rounding problems. I.e., you may get:Or otherwise a little off the 0.55 you are expecting.
Use modf:
What about:Or, using numpy:
Using the decimal module from the standard library, you can retain the original precision and avoid floating point rounding issues:As kindall notes in the comments, you'll have to convert native floats to strings first.
Try Modulo:

similar to the accepted answer, even easier approach using strings would be

Use floor and subtract the result from the original number:
This is a solution I tried:
Float numbers are not stored in decimal (base10) format. Have a read through the python documentation on this to satisfy yourself why. Therefore, to get a base10 representation from a float is not advisable.Now there are tools which allow storage of numeric data in decimal format. Below is an example using the Decimal library.
Example:This is will give you two numbers after the decimal point, 55 from that example. If you need one number you reduce by 10 the above calculations or increase depending on how many numbers you want after the decimal.
Sometimes trailing zeros matter
It definitely worked
What about:Output:print(b)0.23399999999999999round(b, length-2)0.234 Since the round is sent to a the length of the string of decimals ('0.234'), we can just minus 2 to not count the '0.', and figure out the desired number of decimal points. This should work most times, unless you have lots of decimal places and the rounding error when calculating b interferes with the second parameter of round.
Another crazy solution is (without converting in a string):


Answer URL
https://docs.python.org/3/tutorial/floatingpoint.html
