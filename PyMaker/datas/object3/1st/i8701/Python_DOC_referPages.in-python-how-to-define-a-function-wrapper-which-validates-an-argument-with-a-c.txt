Natural Text
I'm writing several functions which accept an argument called policy, which is allowed only to have certain values (namely, 'allow' or 'deny'). If it doesn't, I would like a ValueError to be raised.For brevity, I would like to define a decorator for this. So far, I have come up with the following:The problem is that this only works if policy is the first positional argument of the function. However, I would like to allow for policy to appear at any position.To be specific, here are some (dummy) functions called make_decision and make_informed_decision which accept an argument policy at different positions, and some test cases to go with them:Currently all the tests pass except the third one, because the first positional argument 'allow' is interpreted as the policy rather than as the data as it should be.How can I adapt the validate_policy decorator such that all the tests pass?
You can use the inspect module's Signature.bind function:
Here is another solution using inspect.getcallargs:It makes all the tests pass.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.Signature.bind
