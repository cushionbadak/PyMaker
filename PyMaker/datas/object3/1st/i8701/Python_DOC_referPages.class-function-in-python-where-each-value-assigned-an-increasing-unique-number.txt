Natural Text
Is there a data structure/function in Python where each value called is assigned an increasing "id" numberSpecifically, the first value entered (e.g., "a") would get id value 0, the next (e.g., "b") would get id 1, and if an earlier one is used (e.g "a" again) it would get the original value (i.e. 0))At the moment i use the following code, but wondered if it may be a built-in function for this. 
You can use defaultdict with your own function passed to it to clean things up a bit.EDIT thanks to @Rawing. It's very clean now!EDIT2 thanks to @JonClements it is now a one-linerCODE:OUTPUT:
You can just use a simple list, and the index as the ID. That way the id is guaranteed to be unique and it's "increasing" like you wanted. I don't see why you'd give yourself headaches trying to make your own ID assignment logic, which could introduce more bugs into your code.edit: lookup time for a list by index is actually O(1), see: https://wiki.python.org/moin/TimeComplexity
The Python 3 tutorial, section 3.1.3 introduces the List data type as:Python knows a number of compound data types, used to group together  other values. The most versatile is the list, which can be written as  a list of comma-separated values (items) between square brackets.When you create a list in your code what you add a value to a position in a sequence which acts as a key. The dictionary data type, what you are using in your question, lets you assign a key explicitly. If you would like to create a dictionary of words with the count of appearances in a corpus of text see the example below. While creating a function to push words in a dictionary and increment the counter is a good start, you may want to check out a tutorial for Bag of Words models on Kaggle. The tutorial provides a great overview of other techniques to use when processing text.


Answer URL
https://docs.python.org/3/tutorial/introduction.html#lists
