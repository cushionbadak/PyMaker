Natural Text
I am trying to implement a custom class which returns a different value when called as list(c) or dict(c). However, it is my impression that both list(c) and dict(c) use c.__iter__() under the hood? If that is the case, how can I get different behaviour calling list(c) and dict(c)? I know that it is possible because Python dictionaries and pandas DataFrames have different hevariours.For example:Calling dict(c) I get what I want:However, I can't get list(c) to print out a list of keys (or values), but instead get both:The equivalent code for a dictionary is much cleaner:
Obviously the __iter__ must only return the keys, otherwise list(f) wouldn't work.The Python documentation says the following of the dict constructor:If a positional argument is given and it is a mapping object, a dictionary is created with the same key-value pairs as the mapping object.Now, the question is what is a "mapping" enough for the dict constructor? DataFrame doesn't inherit from any mapping class, neither is it registered against an abstract base class. It turns out we only need to support the keys method: If the object passed to dict constructor has a method called keys, this is called to provide an iterable of the keys [CPython source]. For each key, the value is fetched by indexing.I.e. the dict constructor does the logical equivalent of the following:Using this we getTesting:(As you can see from the code above, there is no need to actually inherit from anything)However, it is not guaranteed that all mapping constructors behave in the same way - some other might call items - thus the most compatible way would be to implement all of the methods required by collections.abc.Mapping and inherit from it. I.e. it would be enough to do
@mgilson's comment is correct, this can be accomplished by inheriting from the collections.abc.Mapping class:


Answer URL
https://docs.python.org/3/library/stdtypes.html#typesmapping
https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping
https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping
