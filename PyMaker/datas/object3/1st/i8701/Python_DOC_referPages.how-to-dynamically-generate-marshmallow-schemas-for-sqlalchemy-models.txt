Natural Text
I'm creating a Flask API using SQLAlchemy models.I don't want to define a schema for every model I have, I don't want to do this every time:I would like each model to have a schema, so it can easily dump itself.Creating a default Schema and setting the Schema.Meta.model didn't work:Why is a generic Schema with the model overwritten different than a Schema with the model declared?
You could create a class decorator that adds the Schema to your models:and thenThe schema will be available as the class attribute Entry.Schema.The reason your original attempt fails is that marshmallow Schema classes are constructed using a custom metaclass, which inspects the namespace created from executing the class body and does its thing. When you modify the already constructed class, it is too late.If you're unfamiliar with metaclasses in Python, read about them in the language reference. They are a tool that allows for great things and great misuse.
The marshmallow recipes prescribe a couple of alternative options for throwing common schema options into a base class. Here's a quick example straight from the docs:and then extend the base schema:The advantage of this approach is that you can add more de/serialization to specific models More examples and recipes on the linked docs


Answer URL
https://docs.python.org/3/reference/datamodel.html#metaclasses
