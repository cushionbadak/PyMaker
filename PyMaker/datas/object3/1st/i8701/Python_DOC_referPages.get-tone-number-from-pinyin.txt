Natural Text
Say I have a pinyin:How could I get the "tone number" of the accented character? eg,in this case, Ä“ would be first tone, ideal output would be ge1ge. But really, first step is just how would I convert the tone into a number?Example input / output:BECOMESI would like to do this ideally in python, but im flexible.Thanks! :)
When expressed in normal form D (*) (decomposition), the four pinyin tone use the following combining (unicode) signs:COMBINING MACRON ('\u0304') for tone 1COMBINING ACUTE ACCENT ('\u0301') for tone 2COMBINING CARON ('\u030c') for tone 3COMBINING GRAVE ACCENT ('\u0300') for tone 4That means that automatic processing in Python is almost trivial: you normalize your (unicode) string into its normal form D and replace the above combining characters with their digit valueCode could be:You can then use:in Python 3, or in Python 2:(*) Refs:module unicodedata in Python standard library reference manualPinyin on wikipedia
Use regular expressions. There is a useful regex command:                           You could use it first to identify all accented characters, and afterwords replace them with the string replace method, for example


Answer URL
https://docs.python.org/3/library/unicodedata.html
