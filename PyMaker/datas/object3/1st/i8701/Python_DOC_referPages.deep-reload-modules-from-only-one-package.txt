Natural Text
How do you deep reload a package without importing modules from any other outside packages?For example, for reloading the following:IPython's deepreload module cannot specify a whitelist for imports and uses module level variables during reloads which makes it unreliable for threaded environments.A question similar to this has been asked before, but it focused on discovering dependencies (as was mentioned in a comment) not exclusively within a single package.
Using the sys and importlib modules, a function can be written to remove the package and its modules from Python's import cache. This allows for the package to reload its child modules when it is re-imported.This code can be extended with a Lock to make it thread-safe as well:Note: these functions come with one of the caveats from the standard library's reload. Any references elsewhere in the program leading to the old package will be maintained and will not be replaced automatically. For that, you can look at globalsub, which can replace all references to an object in the interpreter with a different object (usually for debugging purposes).


Answer URL
https://docs.python.org/3/library/sys.html
https://docs.python.org/3/library/importlib.html
https://docs.python.org/3/library/threading.html#threading.Lock
https://docs.python.org/3/library/importlib.html#importlib.reload
