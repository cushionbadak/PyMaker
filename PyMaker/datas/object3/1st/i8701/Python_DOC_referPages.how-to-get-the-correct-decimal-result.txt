Natural Text
I'm trying to write a program to search for duplicate representations of integers in fractional number bases. Consequently, I have to do things like this:which equals 1.9487171. However, python automatically represents that result as a float, whereas the given value is exact. This is what I need, which is not the same as rounding a float. I also must allow the program to specify how many decimal places there are. I've tried using the decimal module but can't quite get it to work. What would be the best way to do this?
The decimal module will give you exact results:For non-decimal bases, the fractions module will do the exact arithmetic.  The only issue though is that the output is in fractional form rather than indicating the decimal notation (likely with repeating, non-terminating sequences) that you seem to be looking for:
decimal.Decimal arguments should be strings. If you use a float, it carries along it's imprecision:VS
fractional number basesSounds like fractions, no?
Have you tried checking for equality to within a tolerance? E.g.


Answer URL
https://docs.python.org/3/library/decimal.html#module-decimal
https://docs.python.org/3/library/fractions.html#module-fractions
