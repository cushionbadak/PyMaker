Natural Text
I have an array, let's say arr = [1, 2, 3, 4, 5, 6, 7, 8]and another indices array: idx = [0, 3, 4, 6]and I want to get two arrays, one is only those indices from arr: [1, 4, 5, 7]and another one is all the rest: [2, 3, 6, 8]Can someone help me with that? I can only think of ugly ways to do it, but it must be some function that does it elegantly. Thanks a lot!
You could do it like this:If arr has no duplicates, you could also do:
Way to do it:
With one traversal:Or (as commented by Chris_Rands):Though idx should either be small for this or turned into a set (same goes for the solutions in the other answers, I guess they just don't want to talk about it).Demo:
There is a neat solution with numpy:
You can use itertools for a one line solution:Output:
You can also map each value in arr to a dictionary, indicating if it's index is present in idx:Which gives this dictionay:I also converted idx to a set since in this case, duplicate indices are not necessary, and set/dictionary lookup is O(1). However, list lookup is O(n), so this optimization is worth it if possible. Once you have this dictionary,  you can filter out the elements you want to keep, and the rest of the elements from this:Which Outputs:Note: You can also use list comprehensions above filtering of keep and rest:


Answer URL
https://docs.python.org/3/library/functions.html#filter
