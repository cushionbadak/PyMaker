Natural Text
I would like to rename images based on part of the name of the folder the images are in and iterate through the images.  I am using os.walk and I was able to rename all the images in the folders but could not figure out how to use the letters to the left of the first hyphen in the folder name as part of the image name.Folder name:  ABCDEF - THIS IS - MY FOLDER - NAMECurrent image names in folder:Want to change to show like this:What I have is this, but I am not sure why I am unable to split the filename by the hyphen:
Okay, I've re-read your question and I think I know what's wrong.1.) The os.walk() iterable is recursive, i.e. if you use os.walk(r'C:\'), it will loop through all the folders and find all the files under C drive.  Now I'm not sure if your C:\folderPath has any sub-folders in it.  If it does, and any of the folder/file format are not the convention as C:\folderPath, your code is going to have a bad time.2.) When you iterate through files, you are split()ing the wrong object.  Your question state you want to split the Folder name, but your code is splitting the files iterable which is a list of all the files under the current iteration directory.  That doesn't accomplish what you want. Depending if your ABCDEF folder is the C:\folderPath or a sub folder within, you'll need to code differently.3.) you have imported join from os.path but you still end up calling the full name os.path.join() anyways, which is redundant.  Either just import os and call os.path.join() or just with your current imports, just join().Having said all of that, here are my edits:Answer 1:If your ABCDEF is the assigned folderAnswer 2:Assuming your ABCDEF's are all sub folders under the assigned directory, and all of them follow the same naming convention.import os    from os.path import joinNote:If your scenario doesn't fall under either of these, please make it clear what your folder structure is (a sample including all sub folders and sub files).  Remember, consistency is key in determining how your code should work. If it's inconsistent, your best bet is use Answer 1 on each target folder separately.Changes:1.) You can get an incremental index without doing a i += 1.  enumerate() is a great tool for iterables that also give you the iteration number.2.) Your split() should be operated on the folder name instead of files (an iterable).  In your case, image is the actual file name, and files is the list of files in the current iteration directory.3.) Use of str.format() function to make your new file format easier to read.4.) You'll note the use of split("\\") instead of split(r"\"), and that's because a single backslash cannot be a raw string.This should now work.  I ended up doing a lot more research than expected such as how to handle the os.walk() properly in both scenarios. For future reference, a little google search goes a long way.  I hope this finally answers your question.  Remember, doing your own research and clarity in demonstrating your problem will get you more efficient answers.Bonus: if you have python 3.6+, you can even use f strings for your new file name, which ends up looking really cool:


Answer URL
https://docs.python.org/3/library/functions.html?highlight=enumerate#enumerate
https://docs.python.org/3/reference/lexical_analysis.html#f-strings
