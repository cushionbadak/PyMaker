Natural Text
What goes on under the hood in if statement? For example:Can we say that implicitly something like this happens?
The value ofis surprisingly neither True nor False - it's simply str_ or list_ :-)More precisely - from Python Language Reference:The expression x or y first evaluates x; if x is true, its value is returned; otherwise, y is evaluated and the resulting  value is returned.Then, for evaluation in the if statement:In the context of Boolean operations, and also when expressions are used by control flow statements, the following  values are interpreted as false: False, None, numeric zero of all types, and empty strings and containers (including  strings, tuples, lists, dictionaries, sets and frozensets). All other values are interpreted as true. User-defined objects  can customize their truth value by providing a __bool__() method.So, in your particular case, str_ is empty, so its boolean value is interpreted as False, andwill evaluate to the value of the variable list_, i. e. to [1, 2, 3].Thenis interpreted asbecause [1, 2, 3] is not empty.
if you saythen zzz is equals to 123. So if evaluates expression and operates on that answer. Since Python takes non empty strings, lists, non None values, not zero numbers - as True then whole system follows bool algebra. 


Answer URL
https://docs.python.org/3/reference/expressions.html#boolean-operations
