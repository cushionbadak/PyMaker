Natural Text
I am trying to use SequenceMatcher.ratio() to get the similarity of two strings: "86418648" and "86488648":The ratio returned is 0.5, which is much lower than I expected because there is only one character different in the two strings.It seems that the ratio is calculated based on matching blocks. So I tried to run SequenceMatcher.get_matching_blocks():But I expected the result to be:Can anyone help to explain why it didn't match from the first 3 numbers "864"?
SequenceMatcher.get_matching_blocks() works by repeated application of SequenceMatcher.find_longest_match() to as-yet-unmatched blocks of the two sequences. Quoting from the docstring for find_longest_match():In the case of the two sequences a = "86418648" and b = "86488648", the longest block in a matching a block in b is the single 8648 at a[4], and the earliest match for it in b is the first of two such possible matches, at b[0].Once this match is decided, there are no longer any further matches such that, per the guarantee provided by SequenceMatcher.get_matching_blocks(), "The triples are monotonically increasing in i and in j".For instance, matching the as-yet-unmatched 864 at a[0] with the as-yet-unmatched 864 at b[4] would require that i decrease as j increases (or vice versa), in violation of the aforementioned guarantee.


Answer URL
https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher.get_matching_blocks
