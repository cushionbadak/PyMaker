Natural Text
I have a large number of entries in a file. Let me call it file A.File A:('aaa.dat', 'aaa.dat', 'aaa.dat') ('aaa.dat', 'aaa.dat', 'bbb.dat')('aaa.dat', 'aaa.dat', 'ccc.dat')I want to use these entries, line by line, in a program that would iteratively pick an entry from file A, concatenate the files in this way:All I need to do is to substitute the filenames iteratively and create an output in a "aaa-aaa-aaa.dat" format. I would appreciate any help-- feeling a bit lost!Many thanks!!!
You can retrieve and modify the file names in the following way:This program reads your input file, here named fnames.txt with the exact structure from your post, line by line. For each line it splits the entries using a precompiled regex (precompiling regex is suitable here and should make things faster). This assumes that your filenames are only alphanumeric characters, since the regex substitutes all non-alphanumeric characters with a space. It retrieves only 'aaa' and dat entries as a list of strings for each line and forms a new name by joining every second entry starting from 0 and adding a .dat extension to it. It joins using a - as in the post. It then retrieves the individual file names from which it will extract the content into a list content by selecting every second entry from line. Finally, it reads each of the files in content and writes them to the common file new_name. It reads each of them all at ones which may be a problem if these files are big and in general there may be more efficient ways of doing all this. Also, if you are planning to do more things with the content from old files before writing, consider moving the old file-specific operations to a separate function for readability and any potential debugging. 
Something like this:
If your problem is just calculating the new filenames, how about using os.path.splitext?Which can be probably better understood if you see it like this:HOWEVER: If your issue is that you can not get the filenames in a list by reading the file line by line, you must keep in mind that when you read files, you get text (strings) NOT Python structures. You need to rebuild a list from a text like: "('aaa.dat', 'aaa.dat', 'aaa.dat')\n". You could take a look to ast.literal_eval or try to rebuild it yourself. The code below outputs a lot of messages to show what's happening:


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
