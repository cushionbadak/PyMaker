Natural Text
This question already has an answer here:How do you rotate a two dimensional array?                    60 answers                I'm trying to 'rotate' a grid 90 degrees clockwise and came up with the following Python code.printing rotate90(grid) on the grid [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']] outputs [['7', '4', '7'], ['8', '5', '4'], ['9', '4', '7']], whereas I expected [['7', '4', '1'], ['8', '5', '2'], ['9', '6', '3']]. What is the reason for this difference?(The reason I haven't converted these to ints is that eventually I will be using '@' and '-' characters rather than numbers.)
Your function doesn't work because you didn't make a new structure when you initialized rotatedGrid.  You made a copy of each row, but the elements are pointers to the originals in grid.  When you assigned within the loop, you were pointing to shared matrix locations.Fix it with this:Given that change, your code produces the desired output.
We can easily transpose a list l with zip(*l), then reverse the sublistsreturns 


Answer URL
https://docs.python.org/3/library/copy.html
https://docs.python.org/3/library/functions.html#zip
