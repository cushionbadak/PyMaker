Natural Text
I have changed the numeric value of log levels using addLevelName() and then put logs in my modules but in the log file the log.error is giving me level name as DEBUG.Here is the piece of code that am trying to 
The logging module is not set up for arbitrary re-assignment of the standard logging levels. The logging.addLevelName() method is really only meant to add new levels, not for adjusting existing levels.What happens under the hood is that logging.error() uses the module-level constant logging.ERROR to log the error message. That constant has been set to 40, a numeric value you just told the module to map to the string 'DEBUG'.If you really must re-map all the levels, you also need to reassign the constants. Because Python is a dynamic language, that is certainly possible:However, I strongly advice you not to do this. There may be 3rd-party frameworks that rely on the constants to stay, well, constant.If you are trying to adjust how a third-party library logging, you have better options. Each log message includes a logger name, and names with a . in them form a hierarchy, so a logger name of foo.bar.baz is seen as a child of foo.bar and foo, letting you adjust logging for child logging nodes by settings on a parent node. See the Logger objects documentation intro for details and how to configure these.Even if the per-logger-object and per-hierarchy configuration options do not fit your specific use case, you can almost certainly monkeypatch such a module to replace the logger object with a custom wrapper based on the LoggerAdapter pattern. That's because the standard, best practice method of logging in a 3rd party library is to create a top-level logger object and apply all logging to that object. You can replace that object with a wrapper:You can use the same pattern to filter specific messages; it may be sufficient to provide a custom LoggingAdapter.process() method in that case.


Answer URL
https://docs.python.org/3/library/logging.html#logger-objects
https://docs.python.org/3/library/logging.html#loggeradapter-objects
