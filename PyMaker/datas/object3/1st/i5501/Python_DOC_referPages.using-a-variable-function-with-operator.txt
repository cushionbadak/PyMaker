Natural Text
I'm messing around with * and **, and figuring out what the use-cases of these operators would be. For this "study", I wrote a function scandir_and_execute that traverses a directory (recursive by default) and executes a function exec_func on each file that is encountered. The function is variable, meaning when calling scandir_and_execute the programmer can indicate which function to run on every file. In addition, to figure out *, I added a func_args variable (defaults to an empty list) that can hold any number of argument.The idea is that the programmer can use any exec_func that they have defined (or built-in) to which the file is the first argument, and that they provide the needed arguments themselves, in a list, which is then expanded on the exec_func call.Note: at least Python 3.5 is required to run this function.Is this the correct way to use *, or am I misinterpreting the documentation and the concept of the operator? The function works, as far as I have tested it, but perhaps there are some caveats or non-pythonic things that I did? For instance, would it be better to write the function like this where the unnamed "superfluous" arguments are tupled together (or another way)?
That is how you use the splat operator, but consider whether it needs to be your function’s responsibility to pas arguments at all. Say you’re using it like this now:you can rewrite scandir_and_execute to accept a callable taking one argument:and let the caller handle its business:Then drop the callback entirely and make a generator:(Close to walk, but not quite!) Now the non-recursive version is just this generator:so you may as well provide only the recursive version:


Answer URL
https://docs.python.org/3/library/os.html#os.walk
