Natural Text
I have list of dictionaries like below:As you see the length of the dictionaries are not the same and also the key : value in each dictionary are not necessarily similar. I was wondering how to sum the values assigned for each key in all dictionaries:For instance for key4: (val43 + val44 + val45) or for key3: (val31 + val32 + val34).
Starting with this - Here's one way of getting what you want, using the collections.Counter data structure - Convert each dict to a Counter using mapSum each Counter object with sumThe great thing about Counters is that you can add them up, quite nicely.  The second argument to sum is the start of the "sum". If you want a dictionary back (instead of a Counter), call dict(r).Note that this solution works when your dicts only have keys with numeric values.
You may also use collections.defaultdict to get the count of all the values corresponding to each key. All you need to do is to iterate each element and sum the values to the defaultdict. For example:This will return you the dict as:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.defaultdict
