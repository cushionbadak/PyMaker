Natural Text
Is there a way for Python to save an output to a file on the computer once a specific variable has been set and then if the code is restarted python would read the state of the variable from the file and see whether or not the code can be launched.So basically where the code says that "Your Steam Community privileges..." I would like to have a variable or whatever it's called save to a file and then right at the start of the code I would like an if statement that says something like If #the code from the file says VAV == True then exit() but I do not know how I would do that.
Short answer:Yes, this is possible and relatively simple.Long answer:This essentially boils down to something like the below script:If you add this to a file and place a document called "file.txt" in the same directory with its contents being either "True" or "False" then you will notice that when you run the program you end up printing either "True" or "False" depending on the contents of the file.Let's break this down real quick:There's a lot going on in the above line, if you want to learn the details of this line there's a brilliant explanation in this article. All you really need to know is that we're opening the file "file.txt" and storing it in the variable f. We're also ensuring that we properly close the file once we're done with it so that we don't cause any problems later on.Calling .read() on the file (which we stored inside f) will return it's contents. We're then checking to see if the contents are equal to "True" . . .. . . If the contents are equal to "True" then we can do whatever operations we want here, this is where you'd continue with the actions you want the program to do in the event of a "positive" (as in we want to proceed with the program's normal operations) variable being stored in the file.Otherwise, we check to see if it equals "False", in this case, we're looking at what we'd do in the event of a "negative" (as in we don't want to proceed with the program's normal operations) variable being stored in the file.Once you understand the basic concepts at play here you can start doing things "cleaner" using a filetype like JSON or XML.Using the above script along with a JSON file named "file.json" in the same directory with the below contents . . . We can do the same thing as the first script, however, now we can easily add more variables to check. If for example, you wanted to script to automatically jump to a specific page/screen/dialogue, well then you just add a variable for that to your JSON script and a check for it in Python and hey presto, you've got the ability to pick up at specific points in your program.


Answer URL
https://docs.python.org/3/library/configparser.html
