Natural Text
I'm working with this tutorial, and I'm using pandas to go through.This is the code fragment I typed and received an error:Error produced by code above:I figured it out how to make it work by writing:Is there an easier way to do this without writing in full file path? I use a Windows 64 Pro.
There are several ways to specify path in pandas.read_csv() documentation:filepath_or_buffer : str, pathlib.Path, py._path.local.LocalPath or any object with a read() method (such as a file handle or StringIO)The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. For instance, a local file could be file ://localhost/path/to/table.csvclass pathlib.Path(*pathsegments)A subclass of PurePath, this class represents concrete paths of the system’s path flavour (instantiating it creates either a PosixPath or a WindowsPath):pathsegments is specified similarly to PurePath.class pathlib.WindowsPath(*pathsegments)A subclass of Path and PureWindowsPath, this class represents concrete Windows filesystem paths:pathsegments is specified similarly to PurePath.class io.TextIOBaseBase class for text streams. This class provides a character and line based interface to stream I/O. There is no readinto() method because Python’s character strings are immutable. It inherits IOBase. There is no public constructor.  TextIOBase provides or overrides these data attributes and methods in addition to those from IOBase:read(size)Read and return at most size characters from the stream as a single str. If size is negative or None, reads until EOF.TextIOBase provides or overrides these data attributes and methods in addition to those from IOBase:Also I've found question about path specifying in Windows, answers say, that it can be done in several ways:you can use always:this works both in linux and windows. Other posibility isif you have problems with some names you can also try raw strings:however best practice is to use the os.path module functions that  always select the correct configuration for your OS:TLDR: Easiest and least complex way is by specifying path variable as orand better, though still easy way would beyou can also specify path relatively to your working directory (for example if you have your script in C:\Users\User\Documents\Python3\ml-100k\ml-100k, you could simply specify filename:also you can specify URL, like mentioned on the top.
I find usefull to work with the pathlib module. I create Path objects on top of my scripts (or in a dedicated file) like this:Then this is helpfull for the rest of your scripts. You can use these objects like so:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str
https://docs.python.org/3/library/pathlib.html#pathlib.Path
https://docs.python.org/3/library/io.html#io.StringIO
https://docs.python.org/3/library/pathlib.html#pathlib.PurePath
https://docs.python.org/3/library/pathlib.html#pathlib.PurePath
https://docs.python.org/3/library/pathlib.html#pathlib.PurePath
https://docs.python.org/3/library/pathlib.html#pathlib.PurePath
https://docs.python.org/3/library/pathlib.html#pathlib.Path
https://docs.python.org/3/library/pathlib.html#pathlib.PureWindowsPath
https://docs.python.org/3/library/pathlib.html#pathlib.PurePath
https://docs.python.org/3/library/io.html#io.IOBase
https://docs.python.org/3/library/io.html#io.TextIOBase
https://docs.python.org/3/library/io.html#io.IOBase
https://docs.python.org/3/library/stdtypes.html#str
https://docs.python.org/3/library/pathlib.html
