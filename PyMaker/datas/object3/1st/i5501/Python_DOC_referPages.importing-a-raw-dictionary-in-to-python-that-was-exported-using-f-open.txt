Natural Text
This question already has an answer here:Writing a dict to txt file and reading it back?                    6 answers                everyone.I was tinkering with ways to store dictionaries and retrieve them later, loading them into and replacing the existing dictionary values.  I was intending to use this as a way to store game data in a simple text-based game.To my delight, I discovered that this does work, and it creates six files names "p1.txt", "p2.txt", and so forth in the folder that the program is saved. It looks exactly like the original dictionary:However, upon attempting to try and create an import_save() function, I ran into a problem. I couldn't use unpickle(), because that's not how I exported the dictionary in the first place. Any tips on how this could be solved?I was also looking to find a way that the imported dictionary could over-write the existing dictionary? I couldn't find anything about it... I'm not against re-writing the code if that is needed.
As @Mark suggested, json is the best way:
Try this instead:Although as Patrick Haugh mentions, and the duplicate answer also indicates, json will convert all dictionary keys to unicode strings, so, for example, if you had integers like {1: 'a'} decoded would be {u'1': u'a'} which is not the same as the original dictionary - note the key is now a string, not an integer. Using the pickle module would avoid this particular issue, but it is not human readable, nor is it readable by other computer languages - pickle is a Python object serialization.


Answer URL
https://docs.python.org/3/library/json.html
