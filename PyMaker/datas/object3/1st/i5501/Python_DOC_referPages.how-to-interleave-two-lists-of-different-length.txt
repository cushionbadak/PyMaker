Natural Text
I'm quite new to Python and I am still having a hard time actually using the language itself into my program. Here's what I have so far:Now the program is supposed to yield outputs like these:

This composes a list comprehension using zip_longest from itertools (which is part of the standard library) to interleave items from both lists into a tuple, which by default uses None as the fillvalue. This also uses chain also from itertools to flatten the list. Finally it filters the None items from the list: Or as recommended from @EliKorvigo, use itertools.chain.from_iterable for iterating lazily:Testing
A basic approach:You could zip() the lists normally, and append the rest of the biggest list if both lists are not the same size:Which works as follows:Another possible approach:You could also use collections.deque to convert the lists to deque() objects beforehand, and pop off the beginning of each one with popleft(), until one of the objects is empty. Then you could append the rest of the list that is not yet empty. Here is an example:Note: Both of the approaches are O(n) time, which is expected for this kind of problem. 
Here's a solution that deals in iterators. The advantage to this is that it will work with any iterable data structure, not just lists.
If you don't care whether your original lists (a and b in the following example) change, you can use the following snippet:Produces the following output:


Answer URL
https://docs.python.org/3/library/itertools.html
