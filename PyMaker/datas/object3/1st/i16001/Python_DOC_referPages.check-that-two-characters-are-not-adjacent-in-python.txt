Natural Text
In my program, I need to check a user-input equation to make sure that it's a valid equation. I got rid of any operators at the beginning or end by using myEquation[0].isdigit and myEquation[-1].isdigit() but now I need to make sure that no operators are next to each other.I thought about somehow putting '+', '-', '/', '*', and 'x' into a list called operator and then checking if any contents of that list were adjacent but I don't really know if lists work like that or how to do that.For example, if the user inputs "4++8-9" the program should return False
List works
use this :demo here : http://regex101.com/r/lL7bL8/2this will replace the operators if they are repeated by one operator
Given an string s which contains an equation the following code will iterate it and check that no subsequent characters are in a set operators.It uses itertools.tee to set up to iterators which can be iterated over in turn to check neighbouring characters. any will return True if any of the iterations returns True (in this case if two neighbouring characters are in operators).I've also done some simplistic replacing of ' ' with '' to take into account people who like to put spaces in their equations, this is something you'll have to think about more seriously.
You could achieve this through regex.Explanation:^(?!.*?[-+*\/x][-+x*\/]) matches the start of a line only when the operators aren't exists consecutively. 
You can generate all the pairs of consecutive characters like this:So then you only have to check that there aren't any of those pairsfor which both symbols are operators:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.tee
