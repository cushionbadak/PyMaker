Natural Text
In python3 this just worksBut in python v2.7.6 it raises TypeError, because there is unhandled exception when the metaclass bases try to call sorted on the values.We can fix it like this: My question: why is definition order unavailable in python2 ?  I'm assuming that's why the python2 version doesn't work, correct me if I'm wrong here.If we make an enumeration like this:Will the ordering be safe and well-defined? Or will it be unreliable, like dict or set iteration?  edit: with traceback
Enum makes use of a new metaclass feature: preparing the class namespace, allowing the metaclass to specify an alternative namespace implementation with a with __prepare__ hook. This is not available in Python 2.By having __prepare__ return a custom mapping object, you can capture the definition order of the class body. See the _EnumDict implementation and EnumMeta.__prepare__ definition. The _member_names attribute is a list, an ordered structure, and names in the Enum subclass are added to it as they are defined.In Python 2, you are stuck with the normal dict namespace for class bodies, which don't retain definition order. As such your last example the attribute order is subject to the implementation details of the mapping object used. Without an __order__ attribute, in Python 2 enum34 sorts by value, and in Python 2 that means the order is arbitrary if the items do not actually have a defined order. Your sets have no defined order because they are not strict subsets of one another:so the original class namespace order is used, which is arbitrary. If you switch on hash randomisation you'll see the order fluctuate:As I am using Python 2.7.8 I did not see your TypeError; until the fix for issue 8743 made it possible to use the collections.Set() ABC with set() objects, set objects were indeed not orderable.The fix for that issue is part of Python 2.7.8, and I personally consider the old behaviour a bug; a NotImplemented sentinel should have been returned instead rather than raise an exception.So, if you have to have an enum with a mix of types for the values, you are stuck with the __order__ attribute until you can upgrade to 2.7.8. That a set doesn't play nice when ordering heterogenous types is a pity, but hardly enum34's fault.


Answer URL
https://docs.python.org/3/reference/datamodel.html#preparing-the-class-namespace
