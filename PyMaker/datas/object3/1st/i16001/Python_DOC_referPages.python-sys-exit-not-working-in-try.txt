Natural Text
This question already has an answer here:Why is “except: pass” a bad programming practice?                    16 answers                Why am not able to trigger sys.exit() in try, any suggestions...!!!The code posted here has all the version details.I have tried all possible ways i know to trigger it, but i failed.It gets to 'except' block.Thanks in advance..
sys.exit() raises an exception, namely SystemExit. That's why you land in the except-block.See this example:This gives you:Although I can't imagine that one has any practical reason to do so, you can use this construct:
based on python wiki :Since exit() ultimately “only” raises an exception, it will only exit the process when called from the main thread, and the exception is not intercepted.And:The exit function is not called when the program is killed by a signal, when a Python fatal internal error is detected, or when os._exit() is called.Therefore, If you use sys.exit() within a try block python after raising the SystemExit exception python refuses of completing the exits's functionality and executes the exception block.Now, from a programming perspective you basically don't need to put something that you know definitely raises an exception in a try block. Instead you can either raise a SystemExit exception manually or as a more Pythonic approach if you don't want to loose the respective functionalities of sys.exit() like passing optional argument to its constructor you can call sys.exit() in a finally, else or even except block.Method 1 (not recommended)Method 2 (Recommended):


Answer URL
https://docs.python.org/3/library/exceptions.html#SystemExit
