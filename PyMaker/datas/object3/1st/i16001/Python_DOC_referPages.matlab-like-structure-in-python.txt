Natural Text
I'm new to Python. I would like to use MATLAB-like structure in python. I already see several solutions in stackoverflow using dictionary, such as this and this. However, I feel like the dummy object approach in the code below is more MATLAB-like and more natural to use since we don't need the double quotes for names of attributes. The use case for me is sololy to wrap several objects together in a casual way, such that some of the functions don't need to have a long list of arguments. For example, the last function below only has two arguments rather than 6. My question is: now I have to define the dummy class Structure in my script. Is it necessary? If many of my scripts need to use it, I will have to put it somewhere that all my functions can access. Is there a built-in "dummy class" already existed I can just use?
python3.3 added types.SimpleNamespace which is what you're looking for.  For earlier versions of python, you may have to rely on something built for a similar (close enough) task -- e.g. argparse.Namespace.And, of course there is always collections.namedtuple if you actually want something structured (which is usually preferred to something unstructured).
You created this structure in a file. For example put that code in struct.pythen in another python script just write from struct.py import Structureor if you created other structures you can import all that clases using from struct.py import *


Answer URL
https://docs.python.org/3/library/types.html#types.SimpleNamespace
https://docs.python.org/3/library/argparse.html#argparse.Namespace
