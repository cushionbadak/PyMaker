Natural Text
I'd like to make a simple clock (CLI) that prints the time into one line, and updates it every second. Is this even possible? Should I just print a new line every second?This is what I have at the moment, which functions terribly:
If I understand, what you want to do is write the time, then, a second later, overwrite it with the new time, and so on.On most terminals, printing a carriage return without a newline will take you back to the start of the same line. So, you can almost just do this:In general, there's a problem with this: the carriage return doesn't erase the existing text, it just lets you overwrite it. So, what happens if the new value is shorter than the old one? Well, in your case, that isn't possible; you're printing a 10-digit number that can never turn into a 9-digit number. But if it were a problem, the easiest solution would be to change that {} to something like {<70}, which will pad a short line with spaces, up to 70 characters. (Of course if your lines could be longer than 70 character, or your terminal could be narrower than 70, don't use that number.)Meanwhile, if you just do this over and over as fast as possible, you're wasting a lot of CPU and I/O, and possibly screwing up your terminal's scrollback buffer, and who knows what else. If you want to do this once per second, you should sleep for a second in between.So:If you want to get fancy, you can take over the whole terminal with curses on most non-Windows platforms, msvcrt console I/O on Windows, or even manually printing out terminal escape sequences. But you probably don't want to get fancy.
print function print newline (\n) after the string you passed. Specify carriage return (\r) explicitly does what you want.To print every second, call time.sleep(1) after printing.UPDATETo make cursor remains at the end of the line, prepend \r:


Answer URL
https://docs.python.org/3/library/curses.html
https://docs.python.org/3/library/msvcrt.html#console-i-o
