Natural Text
I want to prohibit certain operators being used in a function, for example, say I want to make sure the ** power operator is not being used in the following function: I have used inspect.getsource to get the source and checked if "**" is in the source but that will wrongly cause an assert error if there happens to be "**" in the source elsewhere  so how to actually check the code for the existence of a particular operator?
I'd personally go for Ashwini's answer if you have 3.4 at hand, however, if you need to be a bit more compatible and don't mind parsing the source, then you can make use of ast, eg:
Note: Byte code we are dealing with here is a CPython implementation detail. Don't expect it to work on other implementations of Python. Prefer Jon Clements's approach.In CPython 3.4+ you can use dis.get_instructions to check if BINARY_POWER instruction is present in function's code object or not(Also explained in What's new in Python 3.4 doc):For CPython 2.X specifically you can try byteplay package available on PyPI(its Python 3 fork: https://github.com/serprex/byteplay).:Related: Bytecode: What, Why, and How to Hack it - Dr. Ryan F Kelly
Maybe using the dis module?:You probably need to redirect stdout to a stringIO to parse it in Python<3.4


Answer URL
https://docs.python.org/3/library/dis.html#dis.get_instructions
https://docs.python.org/3/library/dis.html#opcode-BINARY_POWER
https://docs.python.org/3/whatsnew/3.4.html#dis
