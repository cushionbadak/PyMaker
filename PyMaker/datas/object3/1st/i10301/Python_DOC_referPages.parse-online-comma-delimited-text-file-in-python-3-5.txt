Natural Text
I guess this is a combination of two questions - read online text file and then parse the result into lists. I tried the following code, which can read the file into byte file but not able to convert into list
You can use standart csv module with StringIO wrapper for file content (example with requests library for getting data):
Rather than attempting parse every line from the url and put it into specific rows for a csv file, you can just push it all into a text file to clean up the formating, and then read back from it, it may seem like a bit more works but this is generally my approach to comma delimited information from a URL. You can take what is in that forloop, and swap it around to actually saving the lists into a array of lists so you can use rather than print them.Also note that upon splitting, you will still notice that there is content that has quite a large amount of white space after it, you could run through the entire list, for each list in the array, and remove all white space but that would ruin the first element in the list, or just convert the numeric values which have the white space into actual integers as they were read in as strings. That would be your preference. If you have any questions feel free to add a comment below.EDIT 1:On a side note, if you do not wish to keep the file that was saved with the content, import the os library and then after you read the lines into the lines array, remove the file.
Assuming you want to interpret the file as a table you want to first get the rows by using split. Then you can get the columns by splitting each row again.You can then iterate through the list of lines and for each entry in lines you can iterate through the columns.


Answer URL
https://docs.python.org/3/library/io.html#text-i-o
