Natural Text
Arabic and Chinese have their own glyphs for digits.  int works correctly with all the different ways to write numbers.I was not able to reproduce the behaviour (python 3.5.0)Am I doing something wrong?  Or is the claim simply incorrect (source).  
int does not accept all ways to write numbers. It understands digit characters used for positional numeral systems, but neither Rumi nor Chinese numerals are positional. Neither '五五' nor two copies of Rumi numeral 5 would represent 55, so int doesn't accept them.
Here's a way to convert to numerical values (casting to int does not work in all cases, unless there's a secret setting somewhere)result: 5.0Someone noted (and was right) that some arabic or other chars worked fine with int, so a routine with a fallback mechanism could be done:EDIT: as zvone noted, there are fraction characters that return floating point numbers: ex: numeric('\u00be') is 0.75 (3/4 char). So rounding to int is not always safe.EDIT2: the numeric function only accepts one character. So the "conversion to numeric" that could handle most cases without risks of rounding would beresult:(I don't want to steal user2357112 excellent explanation, but still wanted to provide a solution that tries to cover all cases)
The source is incorrect.From python doc:class int(x, base=10)Return an integer object constructed from a  number or string x, or return 0 if no arguments are given. If x is a  number, return x.__int__(). For floating point numbers, this truncates  towards zero.If x is not a number or if base is given, then x must be a string,  bytes, or bytearray instance representing an integer literal in radix  base. And an integer literal is just a string of numbers.Edit: Was wrong, dug into the source code and found this function is called when python wants to convert a string to int. There is a py_CHARMASK which I guess contains the information we need, but I could not find it :/


Answer URL
https://docs.python.org/3/library/functions.html#int
https://docs.python.org/3/reference/lexical_analysis.html#integers
