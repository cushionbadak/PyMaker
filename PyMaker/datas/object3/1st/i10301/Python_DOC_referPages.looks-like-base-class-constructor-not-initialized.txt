Natural Text
I am a newbie in python and trying my hands in oops programming here.I am initializing base class constructor in derived class , but when trying to print its attribute in base class it gives me errorobject has no attributeWhat am i doing wrong here ? I tried like calling super.get_name() also which was a getter function instead of self.__name but this also did not work.I am working on python3.4 
This is why you must not use double-underscore prefixes for your instance attributes. These are name mangled, and almost never do what you expect.Just use self.name and self.owner everywhere.
Replace your method get_name of Animal with the following codeAlso remember to update the toString of Dog toThere're some things that I think it's worth point out if you're new to Python:Regarding getters and setters, Python's use the @property and @property.setter decorators instead of the get_something/set_something conventions in language such as Java.Using toString is also not very Pythonic. First, method names should be in snake_case. Second, define a method with the signature def __str__(self) and return a str. Then you'll be able to do print(rocky) without having to call the __str__ as you do for toString.The proper way to use super in Python 3 is just super(), with no arguments passed (https://docs.python.org/3/library/functions.html#super).
Variables starting with double underscores are said as private. They are mangled so they cannot be used in subclasses. Using CPython 3.5, you can confirm it simply with:When called from Dog class, self.__name searches a _Dog__name attribute and cannot find it.There are two common ways do deal with it:do not use private variables but simply hidden ones, that is just use simple underscore prefixes. The variable will not be displayed by help, but will not be mangled and will be accessible from subclassesuse the getter from base class:This correctly gives:


Answer URL
https://docs.python.org/3/library/functions.html#super
