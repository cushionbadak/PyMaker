Natural Text
i want to turn a queryset into a list of tuples. "result" ist what it should look like:So the solution i do have right now is this one, but it seems to me that there could be a way to shorten the code, and make it more efficient. Is there a way?My current solution:
Assuming queryset is supposed to look like this, with 'x' and 'y' as string keys:
If you can have multiple keys and you just want certain key values, you can use itemgetter with map passing the keys  you want to extract:
If this is an django ORM queryset (or result of it), you can just use values_list method instead of values. That will give exactly what you want.
Use list comprehension and dict.values()UPDATEas @aneroid reasonably mentioned, since dict object are not ordered the code snippet could return different order in tupleSo since i don't want to add duplicate solution. There is one option, not so elegant, and maybe with a lack of efficiency, to use OrderedDictBut i personally think that @PadraicCunningham 's solution is the most elegant here.
your_tuple = [(x, y) for x, y in queryset.items()]EDITyour_tuple = [(x.get('x'), x.get('y')) for x in queryset]
You can use dict.values():Or in one line:If you want them in a particular order:result = [(i[x], i[y]) for i in queryset]


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
