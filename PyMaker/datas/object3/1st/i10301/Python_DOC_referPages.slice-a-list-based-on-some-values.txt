Natural Text
Hi I'm looking for a way to split a list based on some values, and assuming the list's length equals to sum of some values, e.g.:list: l = ['a','b','c','d','e','f']values: v = (1,1,2,2)so len(l) = sum(v)and I'd like to have a  function to return a tuple or a list, like: (['a'], ['b'], ['c','d'], ['d','e'])currently my code is like:I'm thinking about make this clearer, but closest one I have so far is (note the results are incorrect, not what I wanted)the problem is I couldn't increase s at the same time while iterating values in v, I'm hoping to get a better code to do so, any suggestion is appreciated, thanks!
Maybe make a generator of the values in l?
If you weren't stuck on ancient Python, I'd point you to itertools.accumulate. Of course, even on ancient Python, you could use the (roughly) equivalent code provided in the docs I linked to do it. Using either the Py3 code or equivalent, you could do:
You could just write a simple loop to iterate over v to generate a result:Output:
The idea here is using a nested loop. Assuming that your condition will always holds true, the logic then is to run through v and pick up i elements from l where i is an number from v. Output:[['a'], ['b'], ['c', 'd'], ['e', 'f']]The first answer https://stackoverflow.com/a/39715361/5759063 is the most pythonic way to do it. This is just the algorithmic backbone. 
Best I could find is a two line solution:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
