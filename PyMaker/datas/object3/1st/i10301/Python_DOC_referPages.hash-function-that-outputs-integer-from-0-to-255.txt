Natural Text
I need a very simple hash function in Python that will convert a string to an integer from 0 to 255.For example:It does not matter what the integer is as long as I get the same integer every time I call the function.I want to use the integer to generate a random subnet mask based on the name of the network.
You could just use the modulus of the hash() function output:This is what dictionaries and sets use (hash modulus the internal table size).Demo:Caveat: On Python 3.3 and up, hash randomisation is enabled by default, and between restarts of Python you'll get different values. The hash, then, is only stable if you don't restart the Python process or set PYTHONHASHSEED to a fixed decimal number (with 0 disabling it altogether). On Python 2 and 3.0 through to 3.2 hash randomisation is either not available or only enabled if you set a seed explicitly.Another alternative is to just hashlib.md5() and just take (integer value of) the first byte:MD5 is a well-establish cryptographic hash, the output is stable across Python versions and independent of hash randomisation.The disadvantage of the latter would be that it'd be marginally slower; Python caches string hashes on the string object, so retrieving the hash later on is fast and cheap most of the time.


Answer URL
https://docs.python.org/3/library/functions.html#hash
https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHASHSEED
https://docs.python.org/3/library/functions.html#hash
