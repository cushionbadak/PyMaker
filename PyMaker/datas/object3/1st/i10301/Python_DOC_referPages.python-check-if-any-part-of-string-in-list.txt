Natural Text
I have a list containing synonyms for the word 'Good' (this list here is shortened)And the program asks how the user is feelingBut sometimes, the user may respond to the question with "I am good" (or similar)If the answer contains a word in the good synonym list, I want the program to replynote that the first line is not real python languageBut I don't know which phrase to use to do the action.
There are many ways you could try to do this. Since you are a beginner, let's just go for something that will work - efficiency should NOT be your first consideration.Of course it won't stop your program from acting as though "not good" is a reply deserving a happy answer, but this is a programming site.
Instead of a list with mixed-case words, use set objects; sets make membership testing and intersection testing much easier. Store lowercase text only, and simply lowercase the input string:Now test if the input string, lowercased and split on whitespace, is a disjoint set with set.isdisjoint(). If it is not a disjoint set, there is overlap between the two sets and that means at least 'good' or 'well' is present:Testing if a set is disjoint is efficient; it only has to test words up to the first one that is in the good_synonym set to return False quickly. You could calculate the intersection instead, but that would always test all words in the status to build a new set object.Other solutions you may have seen, use the any() function; given a generator expression it too can be efficient as it would return True early if any of the outputs is true:This, however, does all the looping and testing in Python code, while set.isdisjoint() is implemented entirely in C code.
Simple!We can iterate over the good_synonyms list and check if any of them are present in the input string.PS: To save memory, you could perhaps store the synonyms only in lower-case, as ['good', 'well'], and when you check if these are in the 'status' variable, you could just apply the .lower() on it, which just converts the entire string into lower-case, as:Hope this helps!Note: holdenweb's answer works too, but applying the split function on status isn't really required as you can check whether a word is present in a string(provided the words in the string are separated by a space) or not using the 'in' keyword as described above.
A short and simple solution would be to use regular expressions for pattern matching like this:The search function of re looks for a match of pattern anywhere in the string and returns a boolean which then can be used in an if statement with any
This is a NLP question, the following code is a simple version of detecting synonym:


Answer URL
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
https://docs.python.org/3/library/stdtypes.html#set.isdisjoint
https://docs.python.org/3/library/functions.html#any
https://docs.python.org/3/tutorial/classes.html#generator-expressions
