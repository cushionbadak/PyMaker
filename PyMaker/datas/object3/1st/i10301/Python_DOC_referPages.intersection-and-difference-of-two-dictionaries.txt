Natural Text
Given two dictionaries, I want to look at their intersction and difference and perform f function on the elements that intersect and perform g on the unique elements, Here's how I found out what the unique and intersecting elements are where d1 and d2 are two dictionaries, How do i print out the d_intersection and d_difference as dictionaries inside a tuple?  The output should look something like this ({intersecting keys,values}, {difference keys,values})for example: given The output should be ({1: 70, 2: 70, 3: 90}, {4: 70, 5: 80, 6: 90})Can someone tell me where I was going wrong and why does my code give key error 4?
Here's one way of doing it, though there may be a more efficient method.Output:{1: 70, 2: 70, 3: 90}{4: 70, 5: 80, 6: 90}
You get a KeyError for 4 as ^ looks for the symmetric difference which means keys unique to either, the keys are not in both. You also don't need to create sets, you can use the view object returned from calling .keysd1.get(k, d2.get(k)) works for the symmetric difference as it catches when we get a unique  key from d2.The code for python2 is slightly different, you would need to replace .keys with .viewkeys to get a view object:To get the just the difference between two sets i.e what is in a but not in b, you need -:The symmetric difference is like doing the union of the differences:All the operators are discussed in the python docs, also the wiki page on Set_(mathematics) gives you a good overview.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
