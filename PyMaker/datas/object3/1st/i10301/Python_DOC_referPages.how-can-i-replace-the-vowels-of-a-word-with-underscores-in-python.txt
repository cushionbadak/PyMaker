Natural Text
I'm a beginner learning the python language and I'm stumped on how take the vowels of a word and replacing them with an underscore. So far this is what I have come up with and it just doesn't work
You can use string.translate and maketrans.You may also want to check uppercases.
Make vowels an array with each element it's own letter.Then do
Lists can be used to easily build words, and with .join() you can combine the list items into a single string.Here's the same thing in a generator expression:
you can use regex 
To answer why your approach didn't work.Does not do what you are thinking. It actually compares the letter against a full string "aeiouy". It will always be unequal (e.g. "a" != "aeiouy" is True and so is any other letter).More likely what you mean wasWhich under the hood will iterate over vowels and compare each character to letter, returning True if any of the letters match.The second mistake is hereYou are adding the original word to the new word rather than the letter you just checked. So make thatThe third thing to note is that your logic is the reverse of what you intended. You wanted to replace vowels with _ but your if statement allows vowels into the new word and replaces consonants with the underscore. So if you reverse your if and else clauses.All up you end up with
Using a list comprehension and setting vowels as a set object (this is really only valuable for speeding up performance if you have a large list of words over which you're iterating):
If you have Python 3, use str.maketrans to build a string translation table:Shows: __, th_s _s _ w_ck_ phr_s_!
DRAX: I'll do you even better!Output


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.maketrans
