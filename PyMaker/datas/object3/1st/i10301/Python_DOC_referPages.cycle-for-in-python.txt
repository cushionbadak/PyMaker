Natural Text
I have to create a three new lists of items using two different lists.So, len(list_one) != len(list_two)Now I should create an algorithm(a cycle) which can do this: [oneblue, twoblue, threeblue, fourblue, fiveblue]. Same for 'green' and 'white'.I undestand that I should create three cycles but I don't know how.I've tried to make a function like this but it doesn't works.What am I doing wrong?
I think you might be looking for itertools.product:
You should do this
There are a few problems with your code:When you do a for loop for i in ...:, you do not need to initialize i (i = 0) and you should not increment it (i = i + 1) since Python knows that i will take all values specified in the for loop definition.If your code indentation (indentation is very important in Python) is truly the one written above, your return statement is inside the for loop. As soon as your function encounters your return statement, your function will exit and return what you specified: in this case, a string.new_list is not a list but a string.In Python, you can loop directly over the list items as opposed to their index (for item in list_one: as opposed to for i in range(len(list_one)):Here is your code cleaned up:This can be rewritten using a list comprehension:And because list_two has more than one item, you would need to iterate over list_two as well:
return should be out of for loop.No need to initialize i and increment it, since you are using range.Also, since both list can be of variable length, don't use range. Iterate over the list elements directly.def mix(): should be like def mix(l_one,l_two):All above in below code:Output:Using List Comprehension, mix() function will look like below:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
