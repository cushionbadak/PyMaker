Natural Text
I am trying to extract English titles from a wiki titles dump that's in a text file using regex in Python 3. The wiki dump contains titles in other languages also and some symbols. Below is my code:But I am getting an error:at the line: letters_only = re.sub(b"[^a-zA-Z]", " ", text)But, I am using b'' to make output as byte type, below is a sample of the text file:I have searched online but could not succeed. Any help will be appreciated.
You have to choose between binary and text mode.Either you open your file as rb and then you can use re.sub(b"[^a-zA-Z]", b" ", text)  (text is a bytes object)Or you open your file as r and then you can use re.sub("[^a-zA-Z]", " ", text)    (text is a str object)The second solution is more "classical".
The problem is with the repl argument you supply, it isn't a bytes object:Instead, supply repl as a bytes instance b" ":Note: Don't prefix your literals with b and don't open the file with rb if you aren't looking for byte sequences. 
You can't use a byte string for your regex match when the replacement string isn't.Essentially, you can't mix different objects (bytes and strings) when doing most tasks. In your code above, you are using a binary search string and a binary text, but your replacement string is a regular string. All arguments need to be of the same type, so there are 2 possible solutions to this.Taking the above into account, your code could look like this (this will return regular string strings, not byte objects):Note that the code does use a special type of string for the regex - a raw string, prefixed with r. This means that python won't interpret escape characters such as \, which is very useful for regexes. See the docs for more details about raw strings.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
