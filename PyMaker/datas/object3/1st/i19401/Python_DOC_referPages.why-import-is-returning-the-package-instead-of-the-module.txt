Natural Text
I have this file structure (where the dot is my working directory):If I load the testmod module with the import statement, I can call a function that is declared within:but if I try to do the same using the __import__() function, it doesn't work:indeed, it returns the package testpack instead of the module testmod:How come?
This behaviour is given in the docs:When the name variable is of the form package.module, normally, the  top-level package (the name up till the first dot) is returned, not  the module named by name. However, when a non-empty fromlist argument  is given, the module named by name is returned....The statement import spam.ham results in this call:spam = __import__('spam.ham', globals(), locals(), [], -1)Note how __import__() returns the toplevel module here because this is  the object that is bound to a name by the import statement.Also note the warning at the top: This is an advanced function that is not needed in everyday Python  programming, unlike importlib.import_module().And then later:If you simply want to import a module (potentially within a package)  by name, use importlib.import_module().So the solution here is to use importlib.import_module().It's worth noting that the double underscores either side of a name in Python imply that the object at hand isn't meant to be used directly most of the time. Just as you should generally use len(x) over x.__len__() or vars(x)/dir(x) over x.__dict__. Unless you know why you need to use it, it's generally a sign something is wrong.


Answer URL
