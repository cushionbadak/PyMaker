Natural Text
I'm trying to create a function that takes a list of floating points and returns a list of two numbers, which is equal to the sum of all positive and all negative floating points. For example:Here's what 've been able to do so far:But I'm kind of stuck. Can anyone help me understand this a little better?
I'd filter them into two lists:And then use sum():Or if you want to make your instructor mad:
The solution uses generator expressions (x for x in it if cond(x)) that use the same syntax as list comprehensions [x for x in it if cond(x)] but yuild one value at a time instead of creating a whole list at once.In a single pass:This solution exploits the fact that True == 1 and False == 0 in Python therefore sums[n > 0] is sums[1] if n > 0 and it is sums[0] otherwise.
Yet another solution:


Answer URL
