Natural Text
I am processing largish text files (10 MB gziped). There are always 2 files that belong together, both of equal length and structure: 4 lines per dataset. I need to process data from line 2 in every block of 4, from both files at the same time.My question: what is the most time-efficient approach to this?Right now I'm doing this:But since I only need line2 of each, I'm guessing there's probably a much more efficent way to do this?
This could be done by constructing your own generator:The generator advances to the first item to be given (in this case, we want the second item, so we skip one to place the iterator before the second item), and then yields one value, and advances to place itself before the next item. This is quite a simple way to achieve the task at hand.Here using consume() from itertools' recipes:As a final note, I'm not sure if gzip.open() gives a context manager, if it doesn't, you'll want to use contextlib.closing().
I would suggest to use a straight away itertools.izip_longest to zip the content of both the files and itertools.islice to select every fourth element starting from line 2
If you have the memory then try:But only if you have the memory.


Answer URL
