Natural Text
Suppose i have the any iterablevar = "ABCDEF"I get the iterable like thisit = itertools.combinations(var,2)is there any single function to print all values of iterables likeprintall(it)rather than using the for loop
This rather depends what you want, if you want to print out all the values, you need to compute them - an iterable doesn't guarantee the values are computed until after they are all requested, so the easiest way to achieve this is to make a list:This will print out the items in the normal list format, which may be suitable. If you want each item on a new line, the best option is, as you mentioned, a simple for loop:If you don't need the data in a specific format, but just need it to be readable (not all on one line, for example), you may want to check out the pprint module.A final option, which I don't really feel is optimal, but mention for completeness, is possible in 3.x, where the print() function is very flexible:Here we unpack the iterable as the arguments to print() and then make the separator a newline (as opposed to the usual space).
You could use the str.join method and join each element of the iterable on a new line.
You can use format which will allow each element to be formated as you please:Each element does not need to be a string necessarily, but must have a __repr__ method if it is not a string. You can then easily write the function you desire:I am using a list, but any iterable would do.
You can use chain() function from itertools to create iterator for var data and then just unpack using * operator of iteratorIf you just need to iterate over existing data and print it out again you can use star operator * for this


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
