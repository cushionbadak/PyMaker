Natural Text
I get an object oData (classed as an iterable object) in python via some blackbox function:When I do this:I get:I can't doI just get a 500 server error. Why is this not just a string? How do I get this to output the info I need? Anyway that is secondary. Ultimately what I want to do is have oData as a dictionary object so I can add one element to it like so:How do I do that? ----- Edit: just to clarify some things... (and also omitted some irrelevant info above)oData is indeed an immutable object with a definition for an __iter__() method.The answer I seek would probably involve cloning its data somehow so that I can append to it.I've tried this with no luckIn PHP I would simply gather the key-value pairs and store them into an associative array. 
When you call type(oData), you get - unsurprisingly - a type object, which is not iterable (what would that even mean?).You want a string representation of that object. Use str for that:will get you the name of the type, andwill return something like
Based on your comment on another answer, I'm betting oData is a list of namedtuples and that HttpResponse is doing some kind of magic to convert it to the result you see. Observe this demonstration, which gives the same error you mentioned:That would explain why you can't modify it. Tuples, named or any other kind, are immutable.The simplest way I can think of to convert it to a dict is to make use of varsSince someFunction returns an iterable, you'll need to iterate over each element to turn all rows into dicts:You could try to extract the first element instead if you expect 1, but that would mean more code handling the case when there's not 1.Normally, calling vars returns a dict, but for namedtuple, it seems to return an OrderedDict. If the OrderedDict doesn't bother you, you can leave off the extra call to dict.Additionally, I would highly recommend you be a bit more explicit about the output you want to include in your response. Relying on HttpResponse's behavior will probably make it more difficult to remember what the code is supposed to do later on. If you want to send a JSON response, explicitly converting it to JSON would be a good idea.


Answer URL
