Natural Text
I am writing a function to split numbers and some other things from text in python. The code looks something like this:Now, this code works perfectly fine in python3, but it does not work under python2 and get an "unmatched group" error. The problem is, I need to support both versions, and I could not get it to work properly in python2 although I tried various other ways.I am curious what could be the root of this problem, and is there any workaround for it?
I think that the problem might be that the regex pattern matches one or the other of the subpatterns EN_EXTRACT_REGEX and NUM_EXTRACT_REGEX, but not both.When re.sub() matches the alpha characters in the first pattern it attempts to substitute the second group reference with \2 which fails because only the first group matched - there is no second group.Similarly when the digit pattern is matched there is no \1 group to substitute and so this also fails.You can see that this is the case with this test in Python 2:The difference must lie within the different versions of the regex engine for Python 2 and Python 3. Unfortunately I can not provide a definitive reason for the difference, however, there is a documented change in version 3.5 for re.sub() regarding unmatched groups:Changed in version 3.5: Unmatched groups are replaced with an empty string.which explains why it works in Python >= 3.5 but not in earlier versions: unmatched groups are basically ignored.As a workaround you can change your pattern to handle both matches as a single group:Output


Answer URL
https://docs.python.org/3/library/re.html#re.sub
