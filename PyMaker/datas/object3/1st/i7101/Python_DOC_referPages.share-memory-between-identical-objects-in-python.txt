Natural Text
I create a long list of python objects, with many identical entries. In order to save some memory, I want to ensure that identical elements share their memory. For example:The two list elements are equal, but use separate memory. In this simple example the problem can be fixed byHow can this be done in a more general way? The list is not sorted, so identical elements are usually not next to each other. One solution I came up with is this:This works, but introduces new problems. It seems silly to use a dict, a set should do, but I don't know how to make this work. And then the dict holds an additional reference to each object, so the memory doesn't get freed when the elements are deleted from the list.  To fix this, I delete the dict occasionally, but as a result it must be re-created whenever new elements get added to the list.Is there is better solution to this problem? Thanks.
I imagine you are manipulating huge data structures in order to be concern about that. One way to keep g_dedupdict scoped to a given data structure is to encapsulate it inside your own list implementation:The implementation may not be complete, but I think can get the idea from the code snippet above.


Answer URL
https://docs.python.org/3/library/collections.html#collections.UserList
