Natural Text
Command dir(__builtins__) just list all the 151 builtin libraries.However, It lists 68 built-in functions in 2. Built-in Functions â€” Python 3.6.2 documentationI tried to get the functions from dir(__builtins__) as the following steps:How to list the 68 built-in functions directly?
One approach in Python 3.5 would be to list objects that have the __module__ attribute and it set to builtins and lowercase name:Notice that __import__ is listed in the docs but __build_class__ is not. 67 names on Python 3.5. The list in the docs has 68 names... This is also because help and open from the documentation do not match my filter, as open is from module io and help is from site builtins; actually the documentation is wrong, because help need not be available:Likewise many exception types are always available, even though they're not listed there.
I tried being smart about it but partially failed, but still an interesting find, so here it is:This returns a list of 42 items for me in python 3.5.3Without using types, a nice seperator is to check if the items in __builtins__ start with a lowercase letter, that usually indicates a function, so Returns 72 items for me, perhaps it's more complete than the documentation is? My guess would be yes. Check it out for yourself to test these ideas
Technically, there are only 42 (in 3.4) or so builtin functions and methods in Python. The rest of the list is builtin variables and typess:Note that zip or int, for example, are not really functions. They are constructors of the namesake builtin data types:
I tried to filter it (mostly) by functionality and came up with:It produces the same 72 items that @OferSadan's simple i[0].islower() filter produces! (+1)Additions are: copyright, credits, exit, license and quitDeletions are: __import__If you eliminate the not x.startswith('__') test, you get back __import__ but you also get __build_class__ and __loader__


Answer URL
https://docs.python.org/3/library/functions.html
