Natural Text
I have the file 'f1' that looks like this: I want to run a command (let's say print to make it simpler here) using the x, y, z values for each ID value in the file f1This code returns x, y and z lists for each line of f1, but I would like that it returns the x, y and z lists for each different value of the ID column. For instance for ID = 3 it should return:Any help would be very much appreciated !
Make a container for your result:Iterate over the file and split each line to extract the parts you are interested inThen add it to the dictionaryUsing collections.defaultdict as the container simplifies the code a bit - you don't need to account for KeyErrors the first time an id_ is seen.
If you're able to use Pandas, here's a simple solution:To get precisely the output you specified in OP, use:
How about this -
No try-except, no defaultdict, no pandas.  Just build the dictionary of data using the well kept secret that you can reference a dict value not only by d[k] but also by the method d.get that allows you to specify a default value if the key is not yet present in d, just like in d.get(k, default).Our default value must be the empty list, to which we can append a list of values to be obtained from the rest of the line, that we can get using the new syntax of Python a, *r = alistIf you need a dictionary of numpy arrays,That's all.
The answers here seem unduly complicated. Here's a two-liner using only numpy:Just load the whole file and find the unique ids:Then, create a list by indexing a at each id:which gives:For example, if you now want the y-values for the first id, just use b[0][:, 1].


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
