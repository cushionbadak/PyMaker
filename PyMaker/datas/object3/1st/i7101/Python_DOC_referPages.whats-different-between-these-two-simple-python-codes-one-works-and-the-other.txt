Natural Text
the code above is a simple python code which computes inverse of randomly sampled matrices with multiprocessing. However , the following code doesn't workthe only difference is whether there is if __name__=='__main__: or not.As far as I know, if __name__=='__main__: recognize if this module is imported by the other module or this module run itself. So I thought actually there's no difference between two codes to decide what computer should do. what's wrong?
Specifically, every time you make a child process that process starts by importing your script (much as you might import numpy as np).  If you don't block off the parts of your script that generates new processes under if __name__='__main__':, all those sub-process would spawn their own sub-sub-processes whenever they import the script, which would spawn their own sub-sub-sub-processes and so on until you have . . . well . . . a Stack Overflow.  And nobody likes them. 
if __name__ == '__main__': is required for the multiprocessing module to work. See Programming Guidelines, specifically:Safe importing of main moduleMake sure that the main module can be safely imported by a new Python interpreter without causing unintended side effects (such a starting a new process).


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing-programming
