Natural Text
Say I have a range:Using this range, I want to cycle infinitely and yield the numbers as they come:This would correctly produce values of:However, I sometimes want to start the yielding from a specific value but continue on with the range as it's defined. That is, if I want to start at 3, the sequence would be:Is there a way to do this with a combination of range and cycle (or some other way)?
Just dropwhile until you reach the first value you want to emit:Per the docs (emphasis mine):Make an iterator that drops elements from the iterable as long as the  predicate is true; afterwards, returns every element.The predicate only takes effect until the first value for which it evaluates false-y.
Another way to do this is to chain two ranges together and pass the chain to cycle.outputThis approach has an advantage over islice or dropwhile if the start and stop args are large because it doesn't need to discard the unwanted initial items.
Since cycle starts from the beginning of the iterator given to it, give it an iterator (a sequence in this case) that starts where you want:The 1 above is the lowest value to repeat, the 6 is one more than the highest value, and the 3 used twice is the starting value. It should be clear how to generalize this to other cases.
perhaps unesthetic but practical? sys.maxsize being "practically infinite" for many purposessys.maxsize*1e-9/3600/24/365Out[117]: 292.471208677536 that's years at 1 ns per request - on a 64 bit systembut of course it runs a bit slowerthe modulo takes more time as requests keeps upping ibut that doesn't seem to be the big time sink
you are looking for the islice function


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
