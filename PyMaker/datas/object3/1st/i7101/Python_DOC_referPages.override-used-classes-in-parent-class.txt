Natural Text
Suppose there is a class NiceClass using some other class LesserClass in a place I can't editNow I want to use my own class MyLesserClass instead of LesserClass everywhere in an inherited version of NiceClassBut all the non-overridden methods in MyNiceClass will use the LesserClass from the old NiceClass.py.Everything would work as I want if I just copy-pasted in the whole definition of NiceClass into MyNiceClass.py.It's like I just want to inherit the source code and not the whole namespace. Maybe inheritence is the wrong way?
I hope this is only limited to methods under NiceClass using the class LesserClass.Now if you want the methods inside MyNiceClass to use MyLesserClass instead of LesserClass then you could update the __globals__ dict of those methods and make the name 'LesserClass' point to MyLesserClass.Here's a simple example demonstrating the same by overriding __getattribute__:Output:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattribute__
