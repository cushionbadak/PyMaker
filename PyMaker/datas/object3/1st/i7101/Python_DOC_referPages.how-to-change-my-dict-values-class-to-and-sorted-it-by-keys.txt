Natural Text
I have a string...my def should return this:My solution returns:i need to sorted that dictionary by key and change value's class...my values class is {} but i want []My solution:how can i do this?anyone can help?
You have sets, because you create one here:You'd need to make it a list there:and use .append(), not .add() to add more elements.Note that your code can be simplified by using dict.setdefault():.setdefault() returns the value for a given key; if the key is missing it'll first set that key to the default value provided in the second argument.If you wanted to only keep unique words you'd have to either convert the sets to lists after the fact with an extra loop:The last line is a dictionary comprehension; it builds a new dictionary with the same keys, and each set value converted to a list. Note that sets are unordered, so the resulting list will list the unique words in arbitrary order. If you need to preserve the order of the words in the input, then you'll have collect those words into a list, and then apply a technique from How do you remove duplicates from a list in whilst preserving order? to each value.Dictionaries are otherwise unordered too, just like sets, and can't be sorted. See How can I sort a dictionary by key? for work-arounds.For example, you could produce an OrderedDict() instance from the sorted (key, value) pairs:
You can also use Counter() from collections to solve this problem. It will make your life easier.
Dicts are unordered by default in python < 3.7. What you can do is use an OrderedDict. It retains the order of data insertion, and if you insert the data sorted, it will stay sorted.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
https://docs.python.org/3/library/collections.html#collections.OrderedDict
https://docs.python.org/3/library/collections.html#collections.OrderedDict
