Natural Text
My input is a dictionary with values such as:{0: '205,3', 1: '0,110,18,49,8', 10: '11,73'}Unfortunately the values of the dictionary as you can see are strings ''.My expected outcome is some like this[(0,205),(0,3),(1,0),(1,110),(1,18).....]My code is the following.                         The problem is that as you can see, the number denoted as values a cut digit by digit with an outcome of:[(0,2),(0,0),(0,5),(0,3),(1,0),(1,1),(1,1),(1,0).....]How can i circumvent this problem and get the values as whole numbers instead of one digit numbers?
You can use collections.defaultdict and create a defaultdict(list).As told in the docs:When each key is encountered for the first time, it is not already in the mapping; so an entry is automatically created using the default_factory function which returns an empty list. The list.append() operation then attaches the value to the new list.So you can easily construct the dictionary that you want:You simply iterate over each tuple in your list and append it's values to the dictionary.If you want to get rid of the [] within each value, you can use str.join():I implemented a function called join_lists(), which accepts a dictionary as a first parameter and an optional separator as a second (which defaults to ", "). The functions returns a new dict, which has the same keys, but it's values are comma-separated.
It looks that you just want the very first value for the key, key being the yearso this should do itthis will of course drop the later occurrence of the second item in the tuple. I do not see you specifying what you want to do with it 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
