Natural Text
I'm trying to use Hy, which is a Lisp dialect built on top of Python.I've tried running the following, but, as expected, I get an AttributeError: Cannot overwrite NamedTuple attribute __init__.On the other hand, I don't know which syntax to use for defining field variables in a class. I've tried the following, but it raises a NameError: name 'KEY' is not defined.So how exactly do I set field variables in a Lispy/Python class?
Named tuples from Python's standard library don't need a class declaration. You create the class using a function call.Named tuple instances are immutable, like normal Python tuples. You can't assign to them.Python lets you set arbitrary attributes on most objects though. Here's an example of doing that in Hy.In the above example, I set an attribute x on an empty function object. Some objects don't have an attribute dict though. You can create such objects yourself using the __slots__ syntax. (See the Python documentation for how this works.)In Python (and Hy) self doesn't exist in a class declaration, only in methods, because it's the first argument. That's why you can't assign to it. You can just setv a name directly instead, but that puts in in the class dict, not in any particular instance.Hy does not yet have a syntax for Python's type annotations. The NamedTuple metaclass uses these. You can work around this in some cases by creating the __annotations__ dict yourself.This should work the same as the PythonThough it actually compiles to something more likeThere are other ways to create an OrderedDict in Hy, but this is one of the most straightforward. We need the annotations dict to be ordered because NamedTuples are ordered.A HySymbol is-a Python string (subclass), and works the same in most contexts. The :G_1235 is a Hy gensym name. These aren't Python valid identifiers, but Hy compiles to Python Abstract Syntax Trees and the AST will accept names like that. You can see for yourself how Hy compiles things in the repl with the --spy option or (disassemble ...) function for either the AST itself, or its approximate Python equivalent.You can also provide a default value for NamedTuple by assigning to a name you've annotated in the class body with setv.If you're on Python 3.6+ (and you would be given the NamedTuple metaclass), then you can use kwargs to make an OrderedDict, due to PEP 468. Don't make OrderedDicts this way in earlier versions where the order of kwargs is not guaranteed.In Hy,Note that one setv can assign multiple pairs. Those last two pairs are used by the metaclass as the NamedTuple defaults.At the repl


Answer URL
https://docs.python.org/3/reference/datamodel.html?highlight=__slots__#object.__slots__
https://docs.python.org/3/library/typing.html#typing.NamedTuple
