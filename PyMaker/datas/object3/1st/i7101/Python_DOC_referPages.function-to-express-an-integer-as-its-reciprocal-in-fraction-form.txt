Natural Text
I am writing a small function that turns a integer into its reciprocal in its fraction form. This is how I've defined my function so far:This sort of works but the problem is that it doesn't print the answer on the screen as I'd like to because say i did print reciprocal(3) it would show  ('1/', 3) on the screen instead of 1/3. I have tried all sorts of combinations of speech marks and brackets in the code but the answer has still got extra brackets and  back-ticks around it. I am using python 2.7.10, is there any way to get rid of these? Or is there any other simple way to express an integer as its reciprocal in fraction form that would get rid of them? Thank you
Yes. Because what this line is actually doing is returning a tuple: If you simply print: You will see the result will be tuple.In order to keep the functionality of: You would want to do something like this instead:Now, the above will actually return you a string instead of a tuple. The above is using the string format method, which you can read about here. Ultimately what you are doing is creating a string that will look like 1/x, where x will be number. The way to denote the x is by using the curly braces which is then used a placeholder that will set whatever you passed to format. Read more in the documentation to understand how it works.To help expand it, what it actually looks like when separated is this: Now, you want to be able to set your argument number. The string object supports several methods, one of which, is format. So you can actually simply call it: s.format(). However, that won't simply work the way you want it. So, per the documentation, in order to use this format method, you need to set in your string where exactly you want to set your argument that you want to place in your string. This is done by using the placeholder characters {} to indicate this. So: Will now beWe set our {} as the placeholder of where we want number to be, and we assigned what will be in that placeholder by passing number to format.You can further see how now you have a string if you in fact print the type of the result: You will see it is now a str type. As a note in Python, you can create a tuple with comma separated values: This is exactly why your function returns the tuple, because of the fact you are returning two values simply separated by a comma. 
You can try this:Output:
Right now you're returning a tuple made of the string "1/" and your number because of the comma. I think what you want to do is return just a string.Something like return "1/" + str(number)
if you want to print a tube, maybe you can try the return ('1/', number)def reciprocal(number):    return ('1/', number) print(reciprocal(4)) In [5]: print (reciprocal(4))         ('1/', 4)


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
