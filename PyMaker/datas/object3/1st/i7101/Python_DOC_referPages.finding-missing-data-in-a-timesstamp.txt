Natural Text
I am trying to look though a CSV file, but i want to make sure all the data are there. The CSV time is in 15 Min format is yyyy-mm-dd-hh:mm . I have collectet the data and made timestamp. lst = list()As seen below, the CSV is just a long list of data. Again i really want to check that all data is there for every 15 min. But i dont know exactlyhow to code it.'2015.12.09.19:45 123.251',  '2015.12.09.20:00 123.188',   '2015.12.09.20: 15123.192',  '2015.12.09.20:30 123.242',   '2015.12.09.20: 45123.166',  .. etc..
You might not have noticed that items in that data list are inconsistent in format. For instance, there's white space between the date and the other data in 2015.12.09.19:45 123.251 but the gap is placed differently in 2015.12.09.20: 45123.166. I'm going to assume that you will deal with that.I begin by creating a consistently formatted list of data items similar to yours. Although most of the dates are separated by fifteen minute intervals I deliberately put in some gaps.Now I read through the dates subtracting each from it predecessor. I set the first 'predecessor', which I call previous to now because that's bound to differ from the other dates.I split each datum from the list into two, ignoring the second piece. Using strptime I turn strings into dates. Dates can be subtracted and the differences compared.
There is a Python package called datetime that you could use.  If you kept track of the previous entries time as a datetime object called prev, and created a timedelta for 15 minutes called delt, you could easily check if the next time in the file (as a datetime named new_dt) has prev+delt==new_dt.  If they all do, you are not missing any time.More info on the datetime package here:https://docs.python.org/3/library/datetime.html
I think it is not good practice to duplicate your own question, less than 24H after the first post. Moreover including a full answer to your first post in the new one.It feels messy for new readers and a bit disrespectful to the people that answered your first question.That being said, your processing would probably be faster using pandas.Note that I am not sure of the format of your CSV file, which could require additional operation to be loaded as a pd.Dataframe.


Answer URL
https://docs.python.org/3/library/datetime.html
