Natural Text
I've seen several answers on this topic - some of which are now (using Python 3.6) out of date - and I'm still no clearer on the best way to do this.I wish to be able to run a script, and if it encounters an error, it jumps to a point where it pauses and I can test the value of any local variables to see what might be amiss.In other languages (eg VBA) I could have On Error Goto ErrorHandler, then put a break point in the error handler, print out the error description and the line number from which it came, then use the Locals or Immediate window to see what values my variable have at that point.I don't want a whole bunch of try/except statements, nor do I wish to run it in debug mode every time.Is there a simple Pythonesque way to get it to pause while I have a look at the problem?
You'll find the pdb module useful.The module pdb defines an interactive source code debugger for Python  programs. It supports setting (conditional) breakpoints and single  stepping at the source line level, inspection of stack frames, source  code listing, and evaluation of arbitrary Python code in the context  of any stack frame. It also supports post-mortem debugging and can be  called under program control.pdb is useful for setting breakpoints and post-mortem debugging. I believe this is what you're looking for.Again, from the docs:The typical usage to break into the debugger from a running program is  to insertat the location you want to break into the  debugger. You can then step through the code following this statement,  and continue running without the debugger using the continue command.


Answer URL
https://docs.python.org/3/library/pdb.html
