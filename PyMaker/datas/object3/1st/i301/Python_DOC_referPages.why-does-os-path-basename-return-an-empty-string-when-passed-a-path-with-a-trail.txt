Natural Text
Is there a principled reason why having a trailing directory delimiter in an argument to os.path.basename would yield an empty string? I'm not sure I can make any sense of that return value beyond it seeming like an unhandled implementation edge case or an implementation side effect.
The documentation for basename states this:Return the base name of pathname path. This is the second element of the pair returned by passing path to the function split().The documentation for os.path.split says this (emphasis added):Split the pathname path into a pair, (head, tail) where tail is the last pathname component and head is everything leading up to that. The tail part will never contain a slash; if path ends in a slash, tail will be empty. Calling os.path.split on "/tmp/" yields ('/tmp', ''). Because the second element of the pair is '', basename returns ''.
Looks like this is mentioned in the documentationhttps://docs.python.org/3/library/os.path.html#os.path.basenameNote that the result of this function is different from the Unix  basename program; where basename for '/foo/bar/' returns 'bar', the  basename() function returns an empty string ('').Apparently it's just by choice.


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.basename
