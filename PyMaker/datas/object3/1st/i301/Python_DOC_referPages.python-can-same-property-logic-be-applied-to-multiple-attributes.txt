Natural Text
Is there a way to apply the same property logic to a set of attributes in a class? For example, I want to apply the same @attr1.setter decorator to attr2, attr3, and attr4 without having to define the property for each attribute.
Just create your own descriptor for this:Now, in action:See the Descriptor HOWTO and some more relevant documentationNote, I incorporated the possibility of None in your setter logic (your code would have raised a TypeError on initialization of an instance, because the setter checks if None < 0). Also note, you probably don't want to be using double-underscore name-mangling (which doesn't mean private), so I used the conventional single-underscore to denote a variable not part of the public api. Using double-underscore name-mangling complicates things here.
You could override the __getattr__ and __setattr__ to behave the way you want them. This way you don't need to define any private variables nor initialize any of the member variables either. 


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/reference/datamodel.html#implementing-descriptors
