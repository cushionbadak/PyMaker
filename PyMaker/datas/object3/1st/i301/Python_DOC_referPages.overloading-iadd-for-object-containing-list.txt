Natural Text
The following is a class which is designed to hold a list, and add to the list any new values that are provided to it (as well as being able to print the list):The function add is only present for testing purposes.This issue that this was presenting was that the two functions of the object, add and __iadd__() did not behave the same. Or so I thought...In reality, the two functions mentioned above do produce the same result, but add and += produce different results.Example run:As you can see, the += operation turns the testStr instance of foobar into a NoneType, thus (obviously) removing the value contained within.It was my understanding that __iadd__() and the += operator should behave the same, but it would seem not. Can __iadd__() be implemented here to update the behaviour of += appropriately here, or is there an issue with this type of operation?
__iadd__ must return the updated object (which can be self):You didn't return anything, so None, the default return value, was used instead.From the __iadd__ documentation:These methods should attempt to do the operation in-place (modifying self) and return the result (which could be, but does not have to be, self). [...]  For instance, if x is an instance of a class with an __iadd__() method, x += y is equivalent to x = x.__iadd__(y).Bold emphasis mine; note the x = x.__iadd__(y) equivalence.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__iadd__
