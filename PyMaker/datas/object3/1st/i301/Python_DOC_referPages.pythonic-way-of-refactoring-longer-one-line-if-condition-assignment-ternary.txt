Natural Text
My current code uses tenary assignments One line if-condition-assignment, but with more verbose identifyers it is easily passing line length limits.Since I am not yet into pythonic coding, I would be glad to see some refactoring suggestions.Using locally short variable names seems part of solution, but I like to have more explanatory function arguments. Hm. So dramatically shortening function argument names results in (for me) unreadable code.So shall I resort to multi line if - else assignments? It will stretch and bloat the simple logic dramatically.(Surely I (sh/)could also refactor the whole code around the shown example... This example snippet comes from function with arguments, which could be scalar float/int or 1D numpy.array. If it is an array it will apply each item to each label, just being plain scalar it will apply it globally to all labels) But here again how is the pythonic way? When to start to refactor more exhaustively and when to stay put - because it works?
The issue here is that you are repeating yourself for each variable; indexing if the object is an array, otherwise using the object directly. I'd use a utility function here:Note that I used isinstance() to test for the type of each object, see What are the differences between type() and isinstance()?Another option is to not test for arrays each iteration. Test once, and if it is not an array, turn the scalar float or int value into a sequence of the expected length:or, again, with a helper function:at which point you can use zip() to iterate:


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
