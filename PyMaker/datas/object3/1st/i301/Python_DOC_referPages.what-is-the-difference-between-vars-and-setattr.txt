Natural Text
After failing to use vars to change db.Model(flask-sqlalchemy) value I solved it by using setattr instead, but after reading doc still don't get the difference between vars and setattr. Here is what I have triedFailed in varsCodevars(var)[option_key] = options[option_key] works fine in initing a Application object , but failed in modification(name didn't change).Log/TestAnd I tried to print the application.__dict__ before db.session.commit(), it did be modified!outputBUT When I checked in mysql, it did not workSuccessed in setattrThen I changed to setattr(var, option_key, options[option_key]) in function set_option_parameters.it works good in both init and modification, and the output of application.__dict__ is the same!
From the docs for vars:Objects such as modules and instances have an updateable dict attribute; however, other objects may have write restrictions on their dict attributes (for example, classes use a types.MappingProxyType to prevent direct dictionary updates).Looking through the SQLAlchemy source code (for instance, here), it is a common pattern to return a copy of some_model.__dict__ when accessed, rather than returning the __dict__ itself. So you are likely updating a copy rather than the original. Otherwise, it's possible that the dict is getting overwritten by the attributes themselves, even if the dict changes.setattrs is the correct pattern, and is more explicit.


Answer URL
https://docs.python.org/3/library/functions.html#vars
