Natural Text
There is a problem with removing successive elements from a list. For example I have an list;I want remove from list elements that has @ char. The output is; (found only first element, skipped second one.)if I add some value between this element; It catch two of them; I debug the code, if there are succesive somewords which include @ char, remove function skip the second one, because of the changing of indices after removing process. how can i remove these words?
You can use a list comprehension to filter out elements based on a condition:Or replace them:See documentation for more info. Hope it helps!
You should never change a list you are iteraring through, but rather make a new one:
you need to add the list 'a' into a list. The below code might help you
another way is you can user filter 
It's not advisable to mutate the element of a list while you're looping over it.The output of this is From this you can see that '@someword' is deleted and the element at index 2 is no longer '@otherword' it is now 'bbbb'. Therefore '@otherword' can not be deleted.The second example you gave works because when you delete '@someword' the element at index 2 becomes '@otherword' therefore it can be deleted on the next iteration.I'll advise you to create a new list and just store the elements that don't contain '@' in it 
The actual problem here is that you are looping through a list that you are editing(removing/adding items). This means that when you remove item 2 while you're on the second item, you will then reach item 4 in the next iteration.Solutions are to loop over a copy of the list, or to create a copy of the list and return that (with list comprehension for example)A copy of the list can be created with word[:].


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
