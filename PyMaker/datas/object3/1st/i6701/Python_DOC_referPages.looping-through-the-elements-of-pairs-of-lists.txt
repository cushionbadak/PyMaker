Natural Text
I have a list of tuples, which in turn consist of two lists again. For example:I'd like to call some function on each combination of (letter, number).I currently have a big ugly set of three nested for loops, along these lines:That is, I'd like do_stuff to be called once, for each combination of (letter, number) present in my list.Is it feasible to collapse these three loops into one or two? Preferably in a way that isn't ugly and unPythonic?
I think itertools may help:This saves you a loop, so now you only have one nested loop to deal with. And I think it's bit more Pythonic.
You could also combine itertools.product with starmap and chain.from_iterable:Of course, whether that's more clear is a matter of opinion. Or just use a generator expression:Both ways, the result (as list) is [('A', 1), ('A', 2), ('B', 1), ('B', 2), ('C', 1), ('C', 2), ('X', 9), ('X', 8), ('X', 7), ('Y', 9), ('Y', 8), ('Y', 7)].


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/library/itertools.html#itertools.starmap
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
