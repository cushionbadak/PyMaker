Natural Text
There is the code:x can be None or np.ndarray, so I want to check whether x is None or np.ndarray, but if I pass np.ndarray into check, it will raise a error,because np.ndarray==None should use np.any() or np.all(). So what should I do?
Checking for ndarray typePreferred over type(x): use isinstance.From PEP 8:Object type comparisons should always use isinstance() instead of  comparing types directly.In your example: use if isinstance(x, np.ndarray):Checking if x is NoneOption 1: Use elif x is None:.  This explicitly checks that x is None.Option 2: Use elif not x:.  This takes advantage of the "Falsiness" of None, but it also would evaluate to True if x is other "Falsey" values such as np.nan, 0, or an empty data structure.
Try this one:
The reason it raises the value error is that with a recent enough version of Numpy the __eq__ override of arrays does an elementwise object comparison even when comparing to None.With Numpy 1.12.1:and with Numpy 1.13.1:The error is quite self explanatory. Numpy has a different view on truthiness of an array compared to how plain Python sequences behave.In order to check if an object is the singleton value None, you should use identity comparison as also explained here:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__eq__
https://docs.python.org/3/library/constants.html#None
https://docs.python.org/3/reference/expressions.html#is
