Natural Text
This question is related to Python concatenate text filesI have a list of file_names, like ['file1.txt', 'file2.txt', ...]. I would like to open all the files into a single file object that I can read through line by line, but I don't want to create a new file in the process. Is that possible?
Use input from fileinput module. It reads from multiple files but makes it look like the strings are coming from a single file. (Lazy line iteration).If you need all the text in one place use StringIO
try something along this lines:you can call it with or 
Let's say multiple_files is a list which contain all file namesOpen the output file which will contain all This way you don't have to read each and every line of your files.Although the above method is simpler, You also have fileinput module as an alternative.fileinput docsYou can use fileinput to access and process multiple files.  Example:
You can use fileinput package. This module implements a helper class and functions to quickly write a loop over a list of files 
Instead of making python read multiple files, pipe the contents from the shell and read it from stdin. This will also make your program more flexible as you can pass in any set of files into your python program without changing your code.
EDIT:As pointed out in the comments, this solution probably would not be optimal for large files as it loads everything into memory. A solution using generators would be better if large files are involved. Thanks to LohmarASHAR for pointing that out!You could just create on big list from all of the files by looping over the list of filenames. This wouldn't create a new file object, just a new list object:Not that we are not explicitly calling close() on the file, this is because the with... statement will close the file for us as soon as it goes out of scope.If you are able to use external libraries, pandas might be worth looking into for storing the file data in efficient, easy-to-use objects.
Simplest way, is to use itertools.chain,which provide an easy way to read from multiple iterators.Make an iterator that returns elements from the first iterable until  it is exhausted, then proceeds to the next iterable, until all of the  iterables are exhausted. Used for treating consecutive sequences as a  single sequence.Let's assume you have to files: file1.txt and file2.txt.file1.txt data is:and, the same way, file2.txt data is:This code:will output this:
Using built-ins:file.readlines() outputs the contents to a list and the file is closed.You could also write:It's shorter and probably faster but I use the first because it reads better to me.Cheers


Answer URL
https://docs.python.org/3/library/fileinput.html#fileinput.input
https://docs.python.org/3/library/fileinput.html
https://docs.python.org/3/library/fileinput.html#module-fileinput
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/fileinput.html#fileinput.filename
https://docs.python.org/3/library/fileinput.html#module-fileinput
