Natural Text
Why can't I get the definition of Callable from module collections in the following code?How can I get the definition of a class in a module? Thanks.
In general, this is easily done with inspect.getsource which accepts a module, a class, a method, a function, a traceback, a frame,or a code object. The source they represent should of course be written in Python else an error is raised.In this specific case, you just happen to be unlucky because while Callable is defined in _collections_abc the Callable.__module__ name is callections.abc:This throws getsource off because it won't look in _collections_abc that contains Callables definition but, instead, in collections.abc which merely imports all definitions from _collections_abc:Normally, getsource doesn't have an issue finding the source, for example, on itself:In this specific case, though, it does (due to Callable.__module__ returning collections.abc.) You could replace __module__ with '_collections_abc' for a tricky way to see the source:but this doesn't make me feel very comfortable.
get_source(fullname)Return the source code for the specified module.So you should return the whole module, as Callable is defined in the module of _collections_abc, so your code should be this:and you can see the definition of Callable in the print result.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.getsource
