Natural Text
I am interested in streaming a custom object into a pandas dataframe. According to the documentation, any object with a read() method can be used. However, even after implementing this function I am still getting this error: ValueError: Invalid file path or buffer object type: <class '__main__.DataFile'>Here is a simple version of the object, and how I am calling it:Am I missing something, or is it just not possible to use a custom generator in Pandas? When I call the read() method it works just fine.EDIT:The reason I want to use a custom object rather than concatenating the dataframes together is to see if it is possible to reduce memory usage. I have used the gensim library in the past, and it makes it really easy to use custom data objects, so I was hoping to find some similar approach.
The documentation mentions the read method but it's actually checking if it's a is_file_like argument (that's where the exception is thrown). That function is actually very simple:So it also needs an __iter__ method.But that's not the only problem. Pandas requires that it actually behaves file-like. So the read method should accept an additional argument for the number of bytes (so you can't make read a generator - because it has to be callable with 2 arguments and should return a string).So for example:will be recognized as valid input.However it's harder for multiple files, I hoped that fileinput could have some appropriate routines but it doesn't seem like it:
One way to make a file-like object in Python3 by subclassing io.RawIOBase.And using Mechanical snail's iterstream,you can convert any iterable of bytes into a file-like object:prints
How about this alternative approach:


Answer URL
https://docs.python.org/3/library/fileinput.html
https://docs.python.org/3/library/io.html#io.RawIOBase
