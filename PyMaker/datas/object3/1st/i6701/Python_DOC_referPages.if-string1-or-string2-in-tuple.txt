Natural Text
So I stumbled upon a problem (solved it eventually via experimentation) with checking for the existence of strings inside a tuple.evaluated  True even if neither were in tuple.gives me the desired result.What did the first variant actually evaluate?Edit:  @Cricket_007 ... the question you pointed to in your dupe report didn't cover the in, therefore I believe this not to be a dupe.
The difference is the in container checking,If you break this statement: if 'String1' or 'String2' in tuple: 'String1' returns True because testing str() returns True as long as the string is not empty'String2' in tuple returns True only if the string is contained in the tupleThe first condition always returns True. The second line tests both variables for in containment first, and then performing or between the results 


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
