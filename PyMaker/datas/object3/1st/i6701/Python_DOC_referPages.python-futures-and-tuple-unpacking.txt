Natural Text
What is an elagant/idiomatic way to achieve something like tuple unpacking with futures?I have code likeand I would like to convert it to use futures.Ideally I would like to write something likeThe first line of that throwsthough.How can I get a,b,c without having to make 3 additional ex.submit calls? ie. I would like to avoid having to write this as:I guess a potential solution is to write an unpack function like below,which works: for example if you first define:then you getI thought something like this might already exist.The above only works with dask.distributed.Future. It does not work for plain concurrent.futures.Future.
A quick glance at:https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Futuresuggests that you'll have to do something likesubmit returns a Future object, not the result of running f(x).This SO answer indicates that chaining futures is not trivial:How to chain futures in a non-blocking manner? That is, how to use one future as an input in another future without blocking? 


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future
