Natural Text
From https://docs.python.org/3/reference/expressions.html#callsThe primary must evaluate to a callable object (user-defined functions, built-in functions, methods of built-in objects, class      objects, methods of class instances, and  all objects having a      __call__() method are callable). Does "class objects" refer to "instances of classes" or "classesthemselves as objects"? I guess it tries to mean the latter, but the wording seems to mean the former. If I am correct, in C++ andJava, objects always mean instances of some classes, and that isprobably the cause of my confusion. What are some names thatare used to refer to "instances of classes"?Does "methods of class instances" mean "functions as attributes ofinstances of some classes" or "functions as attributes of someclasses which operate on instances of the classes"? I guess it triesto mean the latter, but the wording seems to mean the former. Aninstance of a class may have an attribution which isn't an attributeof the class and which is a function:where c.myfun is a function attribute of instance c, not afunction attribute of class C.What are some names commonly used to refer to the attribute of aninstance of a class, which is not an attribute of a class?Thanks.
Class objects refer to class objects.. not instances of that class.Everything in python is an object. There are first class objects (here's a great answer about this subject https://stackoverflow.com/a/245208/840582).'Methods of class instances' refers to methods (functions) defined inside the class and bounded to an instanceClass instances are objects created using that class; a = C() a is an instance of C. You can see that in <__main__.C instance at 0x0293A5F8>In general, everything you see inside a class definition code that starts with self is an attribute of instance of the class. These are referred as instance variables.Class variables (that is, all objects actually share the same variable) are defined without self. prefix. So for example


Answer URL
https://docs.python.org/3/reference/expressions.html#calls
