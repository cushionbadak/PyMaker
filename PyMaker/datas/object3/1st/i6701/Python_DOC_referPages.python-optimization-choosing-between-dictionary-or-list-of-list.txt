Natural Text
I'm new to python3, and I got a question about different approaches to solve this problem.  question about using different data structure.My question is how to compare tradeoff with different sampling techniquesI used a dictionary data structure in my program to first solve this problem. Then I tried to rewrite it using only the list data structures.  I tried to consider the benefits of sorting, and I cannot tell what's the difference between the two approaches. It does not seem to make that much difference between the two approaches.Method 1. I use dictionary to create my histogram key and value pairs inside my histogramMethod 2 takes in a source text in string format and returns a list of listsin which the first element in each sublist is the word and the secondelement is its frequency in the source texts
Which is more readable? I would think that the dictionary version is easier to understand. Also, note that you could pass the list of 2-tuples from your second method to the dict constructor to reproduce the output from the first method. This should give you an idea of how these two implementations are roughly equivalent at least in some respect. Unless this is causing a performance issue, I wouldn't worry too much about it.The strength of Python is that you can write the same code, in a readable fashion, in five lines. 
I would generally agree with Joran Beasley's comment above, it is often better to solve your problem, and then go back and refactor for efficiency later.When working with histograms I would recommend checking out Counter inside the collections module. The collections module as a whole is really great, and has a lot of useful containers.Another cool module is the Timeit module, which allows you to run small timing experiments on code snippets. Keep in mind execution speed is dependent on a lot of factors that are not necessarily in your program's control.


Answer URL
https://docs.python.org/3/library/collections.html?highlight=collections#collections.Counter%22the%20counter
https://docs.python.org/3/library/timeit.html%22timeit
