Natural Text
I was looking forward to using the somewhat new typing.NamedTuple class, which allows the creation of named tuple classes using the usual Python class syntax (including the ability to add docstrings and methods,  provide default values, type hints, etc etc).However: the class at the bottom is producing the following error message:From this I gather just what it says: overriding __new__ is a still no-no. This is very disappointing.The "old way" of going about this would be to inherit from a named tuple class, but this requires what I consider to be some ugly boilerplate code:Is there some other alternate way I can cast the zero, width, and precision arguments below to int prior to the creation of the named tuple, but still using the same class creation syntax? Or am I stuck using the old way?
One way would be to split this up into two classes, and do the arguments modification in the child class:I don't much care for this approach, but at least it is more readable than the "old way" (even though it still needs that hanging __slots__ nonsense).Another way would be a factory:...or a factory method:However, these are both pretty clunky compared to simply being able to do:


Answer URL
