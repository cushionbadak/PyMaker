Natural Text
I am trying to interleave shuffle a deck of cards. For example [1,2,3,4,5,6] gets cut in half into [1,2,3] and [4,5,6] and then shuffled to become [1,4,2,5,3,6]. To accomplish this I have:Now my question is, how can I take listD (the shuffled cards) and repeat this process until I get back to the original order (1,2,3,4...)? And print out the amount of shuffles that occurred. 
Just throw all of the code into a while loop that checks when ListD equals ListA. (when it stops they will be the same)
How about using a list slice assignment?First we create a shallow copy (with cards[:]) of the original list (just to get a "writable" list of the same size). Then we assign the lower half of the initial list to even indices of the result list (res[::2]), and the upper half to the odd indices (res[1::2]).For example:
The Complete solution . 


Answer URL
https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types
