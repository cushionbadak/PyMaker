Natural Text
I have a question about a regex pattern. I have to write a function where I have to find sentences that start with a certain word and have a certain number of words. This is what i've written so far:But the problem is that when i put the brackets around the part that i have to repeat: (\s\w*){2} it's not working. It's just giving me a list where I have just one random word in the middle of some random sentence sentence and not even the word that the sentence should start with. Could ypu please tell me what I'm doing wrong. Thank you :)
In order for the function to work, I changed the first line to be:and I used the following data and function call:The value of pattern=upper+w[1:]+'(\s\w*){2}' is This(\s\w*){2}, which means it matches the word This followed by (\s\w*){2} (two words). The parentheses around \s\w* will capture the last one (second one) of the two words captured, including the space in front of it -- meaning, the third word, counting from This:I added parentheses around the entire pattern:So now the pattern is: (This(\s\w*){2}), which has two sets of parentheses. The first one encompasses entire pattern, so it will capture entire match (the word This and two following words), while the second one will capture the third word (with it's preceding space), returning:Your can then loop through this list and take the first one of each tuple.To simplify your code, you can also add ?: after the ( of the group(s) that you don't want to capture, for example, (?:\s\w*). Now the code is:and it returns:Also, this is not a good practice:In this case, there is no problem, because the function upper() is a method in string class. But if you did something like this:it could cause the problem further on, because the function len is not accessible anymore. The name len now refers to the variable len.In this example:the output will be:


Answer URL
https://docs.python.org/3/library/re.html#re.findall
