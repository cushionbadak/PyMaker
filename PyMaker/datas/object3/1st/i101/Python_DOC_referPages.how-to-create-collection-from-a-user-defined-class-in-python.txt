Natural Text
Let i have the following class in python:now i want to create a collection of class Word which hold following logic when an Word object word1 is being added to collection:if the collection contains a Word object word where word.lemma = word1.lemma then word.frequency = word.frequency + word1.frequencyelse add word1 to collectionHow can i do it?Previously i used a list to do so where i checked if the list contains a Word object which has same lemma as word1.lemma. But the approach has O(n^2) complexity to add n word in the collection.
Your wording may confuse community members, who're familiar with Python. I think you're using "dictionary" term as the part of your domain model and not as data structure in Python.If you really need both Word and Corpus classes - you should go forward with code like this:Key points are:Usage of type hintsHow dict lookup (e.g. 'b' in {'a': 23, 'b': 24}) is working - When does __eq__ gets called using hash()?defaultdict usage__eq__ and __hash__ usageAnd I highly recommend to think if you really want to store Word instances in Corpus.
You could do it easily by using a dictionary instead of a list, using the word.lemma as key:a inconvenient is that it duplicates the lemma information...If using a Word class is not mandatory, your could use a defaultdict (with a 0 default value) that just associate frequency (value) to lemma (key):


Answer URL
https://docs.python.org/3/library/typing.html
https://docs.python.org/3/reference/datamodel.html#object.__eq__
https://docs.python.org/3/reference/datamodel.html#object.__hash__
