Natural Text
I am trying to run the following code:But it seems there is an error somewhere in my generated python code (SOME_PYTHON_CODE) and so ret comes out as NULL indicating an exception was raised. How can I get access to this exception?
You can do:To get a standard stack trace printed out on standard error. There are other more fine tuned function calls to handle errors, but I believe this is the simplest, bare bones approach.You can also get the actual exception/traceback objects with:ex will be non-NULL if the error indicator is set. See Exception Handling for more info.And here is a question/answer about accessing the traceback objects. One of the answers shows how to get the backtrace copied into a C string, which you could then write to file (or GUI in your case).
Since you didn't specify the number of statements SOME_PYTHON_CODE there may be another issue at play: according to this page of a Boost Python Tutorial, the output of PyRun_String also depends on the start parameter:Py_eval_input for interpreting isolated expressionsPy_file_input for interpreting sequences of statementsPy_single_input for interpreting a single statementIt goes on to say:When using Py_eval_input, the input string must contain a single expression and its result is returned. When using Py_file_input, the string can contain an abitrary number of statements and None is returned. Py_single_input works in the same way as Py_file_input but only accepts a single statement.So if you use Py_file_input in your call to PyRun_String you'll always receive None. Instead you might use Py_single_input.


Answer URL
https://docs.python.org/3/c-api/exceptions.html
