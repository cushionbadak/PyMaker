Natural Text
The background is I am working on a wrapper script for an ansible project. I have to check a lot of None return values and I just wonder if there is a short pythonic version for this?Example 1Replace the standard config with a config from a file, only when this file is availableExample 2Only when version is explicitly passed, use this to replace the versionExample 3Only replace the version in the config when get_latest_tag() returns an actual resultQUESTIONOften I see myself doing things like if x != None: y = x in python. I am coming from the php world and my gut feeling is this can be done much nicer in python. Is there any way?In php I would have written some things like:However, this type of short ternary does not exist in python and the available ternary in python does (afaik) not support the kinda ?: style.
The Python equivalent ofis:However, be careful if bar could be something that's not None, but is falsey, like False or a numeric 0 or an empty sequence. If you're not sure that couldn't happen, be explicit:(Note that I used is not None rather than != None. In general, you should never use equality to compare the handful of built-in singletons like None and True. However, in the case of True and False, you should almost never be comparing them in the first place. Note that the case to be careful of won't come up there, because there are no boolean values that are falsey but not False.)And of course either way, you can always wrap it up in a function if you want something less verbose. Since you showed four completely different examples, it's hard to see how to make it readable, but presumably if this is annoying you, it's because you're writing the same thing a dozen times in a row. Whatever that something is, wrap it up as a function.Also, look into defaultdict; I suspect it may make some of your use cases simpler.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
