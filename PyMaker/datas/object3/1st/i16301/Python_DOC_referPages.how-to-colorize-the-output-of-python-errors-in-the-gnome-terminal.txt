Natural Text
Note: I am asking this question after researching how to actually do it. Other questions which are somewhat similar, but actually differ from my question relate to:Color-coding within the python script Importing color libraries within the scriptUsing tools like Solarized to improve tools like Vim to color-code python code.What I am looking for:I already have a simple python script (say, test.py) and I am executing it from the Gnome terminal.test.py will output some errors right in the terminal.Error example:I want the error keywords to be in bold red for example, line numbers in a specific color amongst others, such that it is easy to track down the errors.As you can see, Stackoverflow already color-codes the error nicely. On my Gnome-terminal, the output is uni-color. How can I get such a nice color-coded output on the terminal?Thank you!
You could use the IPython coloring. Just put this at the beginning of your program.Every exception will be then handled by ultratb and be displayed in color and also show the locals() values for the code snippet that made the exception.This will work even if you invoke your script with the vanilla python interpreter.
FWIW, you can wrap the script in a main function, and call the main function within a try ... except block, get the error message, colourize it and print it;To get the error message you need a call to sys.exc_info. traceback.format_exception formats the stack-trace and the exception information. Using basic regex you can wrap every ..Err.. inside a \033[91m...Err...\033[0m which turns the colour into red:Result:
Quick hack solution, UNIX only. Redirect stdout to a file with .py suffix. Then display file using vimcat for colorised output. Wrap this all up in a shell function. For example in bash;  


Answer URL
https://docs.python.org/3/library/traceback.html#traceback.format_exception
