Natural Text
I'd like to have something like a custom error code/message database and use it when raising exceptions (in Python 3.4). So I did the following:This works as expected, but the raise statement is just monstrous. Sure, I could have stored the values in a more compact way, but what I really want to know is: Can I just do something like raise RecipeError(code) and leave the work of getting the message to RecipeError?
Sure. Exception classes are just normal classes, so you can define your own __init__ that calls super appropriately:You might also want to save the code:Take a look at the information stored in the standard library's exceptions (which are pretty decent in 3.4, although there are still more changes to comeâ€¦) to see what kinds of things might be useful to stash.Some side notes:First, it may be better to use subclasses instead of error codes. For example, if someone wants to write code that catches an ERRBADFLAVORMIX but not an ERRNOINGREDIENTS, they have to do this:Or, if you'd used subclasses:That's exactly why Python no longer has a monolithic OSError with an errno value that you have to switch on, and instead has separate subclasses like FileNotFoundError.If you do want to use error codes, you might want to consider using an Enum, or maybe one of the fancier enum types on PyPI that make it easier to attach a custom string to each one.You almost never want to inherit from BaseException, unless you're specifically trying to make sure your exception doesn't get caught.


Answer URL
https://docs.python.org/3/library/enum.html
