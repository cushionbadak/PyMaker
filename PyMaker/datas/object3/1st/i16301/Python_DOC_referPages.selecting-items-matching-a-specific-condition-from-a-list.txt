Natural Text
I have a dict that contains keys like this:I need to iterate over this list of keys and pull out certain items:For items that share the same numeric prefix and have an alphabetic character at the end, I need the item with the highest character, i.e. in this case 237870c, 115460d, and 212365a.Any other item with a unique number without a trailing alphabetic character, i.e. 229898 & 109678So, my result should be:sorry I don't have any code to show as i'm really not sure how to even start writing this...
First of all, this has nothing to do with dictionaries: as you said yourself, you’re operating on a list of keys. The origin of the list isn’t important.You can use itertools.groupby for this, with a clever key function. For itertools.groupby to work properly, we first need to sort the keys:Then we have to think about a key function. This must be designed in a way so that only the numeric prefix is used to group:This will strip the last character if it is alphabetic, so that itertools.groupby won’t take it into account when grouping. We’ll then take the last element of the grouped items, which will be the one with the highest alphabetic character.Now we can apply groupby to obtain a list of items as you need:See it in action:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
