Natural Text
Let's say I haveAs a result I wantGive an id to the first item of every sub-list (i.e a[:][0]) and then continue with the second item of every sub-list (i.e a[:][1])I've tried:result:Which is "close" but I want the id to start from 0 and go on.I know what id() returns and I don't need that.
Use collections.defaultdict() and itertools.count(); transpose the sublists with the zip() function first, transpose back again after assigning numbers:The defaultdict() stores a new count() value each time a key has not yet been seen, producing a unique counter per string.Demo:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/itertools.html#itertools.count
https://docs.python.org/3/library/functions.html#zip
