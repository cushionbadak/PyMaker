Natural Text
I have 4 parallel arrays based on a table representing attributes of a map. Each array has approx. 500 values, but all have the same number of values.The arrays are:start = location of the endpoint with the smaller flow accumulation,end = location of the other endpoint (with the larger flow accumulation),length = segment length, and; shape = actual shape, oriented to run from start to end.I am attempting to create a data structure from which I can use a recursive function on to determine the start and end points every 2000m along the length.The following question and answer describe what I am attempting to accomplish:https://gis.stackexchange.com/questions/87649/select-points-approx-2000-metres-from-another-point-along-a-riverHow do I store these 4 parallel arrays in a dictionary keyed by start?I am new to writing functions, dictionaries and using arrays in dictionaries. I am attempting to do this task in Python.
If you want to do things a little bit more Python-esque, you can use enumerate:or even better - zip:Note that you can leave out the parantheses around the first part of the for loops (i.e. between the for and in keywords). I used them solely for enhanced code readability.As with WeaselFox's answer, d[some_start_value] will now hold the corresponding shape, length and end values.
I think this is what you mean:so now d[some_start_value] will hold the corresponding shape length and end values.
In addition to the above answers, I would recommend using namedtuple to simplify accesses:etc. 


Answer URL
