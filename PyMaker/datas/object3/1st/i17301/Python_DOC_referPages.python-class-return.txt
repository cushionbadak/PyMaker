Natural Text
I'm teaching myself Python, and want a helper class to load images from either a shell script or other classes.Here's what I have so far:My issue is how to use this.  Lets say I copy this to /home/jason/python_project which has a directory structure likeWhat I want to happen is upon instanciation of LoadImage with a valid path name, type(img) returns numpy.ndarray.Lets say I open up an ipython shell in python_project and enterHere, img returns but img.img returns the matrix array of the numpy ndarray which is created upon cv.imread().How can I modify this setup so that I can do this from the shell:
When you call LoadImage("images/test1.jpg") it calls the "constructor" and it will always return an instance of the class. What you should do is call the load function after you create an instance, and change the code so that it does not call load in the init.Updating your code to reflect the changes mentioned above;And you would call it like;    import LoadImageOR if you don't really need a class here, you can just write a function that does all of this for you like;
for the type thing, I have no comment; but for the attributes, you can customize attribute access as explained here; this is a minimal example where attributes look-up falls back on img:now, you can access Foo attributes as if you are working with a np.ndarray, and it falls back on img attributes:still you get:but as long as duck-typing is in effect, this works like a np.ndarray; ( you also need to overwrite __setattr__ method, as documented here)


Answer URL
