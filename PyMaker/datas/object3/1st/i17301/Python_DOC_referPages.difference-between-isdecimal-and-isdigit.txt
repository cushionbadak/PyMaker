Natural Text
This question already has an answer here:What's the difference between str.isdigit, isnumeric and isdecimal in python?                    4 answers                The Python 3 documentation for isdigit saysReturn true if all characters in the string are digits and there is at  least one character, false otherwise. Digits include decimal  characters and digits that need special handling, such as the  compatibility superscript digits. Formally, a digit is a character  that has the property value Numeric_Type=Digit or  Numeric_Type=Decimal.So it sounds like isdigit should be a superset of isdecimal. But then the docs for isdecimal sayReturn true if all characters in the string are decimal characters and  there is at least one character, false otherwise. Decimal characters  are those from general category “Nd”. This category includes digit  characters, and all characters that can be used to form decimal-radix  numbers, e.g. U+0660, ARABIC-INDIC DIGIT ZERO.That sounds like isdecimal should be a superset of isdigit.How are these methods related? Does one of them match a strict superset of what the other matches? Does the Numeric_Type property even have anything to do with the Nd category? (And is this contradictory documentation a documentation bug?)
As I found out, the correspondence between string predicates checking for a numeric value and Unicode character properties is the following:E.g., ᛰ (RUNIC BELGTHOR SYMBOL, U+16F0) belongs to Nl, therefore:
The way I read section 4.6 of the Unicode 6.0 standard, the digit category is a superset of the decimal digit category.Decimal digits, as commonly understood, are digits used to form decimal-radix numbers. They include script-specific digits, but exclude characters such as Roman numerals and Greek acrophonic numerals, which do not form decimal-radix expressions. (Note that <1, 5> = 15 = fifteen, but  = IV = four.)The Numeric_Type=decimal property value (which is correlated with the General_Category=Nd property value) is limited to those numeric characters that are used in decimal-radix numbers and for which a full set of digits has been encoded in a contiguous range, with ascending order of Numeric_Value, and with the digit zero as the first code point in the range.So the decimal category would exclude digit types such as Roman numerals, fractions, etc.
Python 3The Python 3 documentation for str.isdecimal appears to have been corrected so it no longer says that decimals include digits:str.isdecimalReturn true if all characters in the string are decimal characters and there is at least one character, false otherwise. Decimal characters are those that can be used to form numbers in base 10, e.g. U+0660, ARABIC-INDIC DIGIT ZERO. Formally a decimal character is a character in the Unicode General Category “Nd”.Python 2The Python 2 documentation still appears to be wrong (doesn't match the 2.7.14 implementation) and consistently states that decimals include digits:str.isdigitReturn true if all characters in the string are digits and there is at least one character, false otherwise.  For 8-bit strings, this method is locale-dependent.unicode.isdecimalReturn True if there are only decimal characters in S, False otherwise. Decimal characters include digit characters, and all characters that can be used to form decimal-radix numbers, e.g. U+0660, ARABIC-INDIC DIGIT ZERO.A quick test of the character '³' in Python 2.7.14 shows that decimals do not include digits:SummaryPython 2 and 3 now have similar behavior (digits include decimals) matching the Python 3 documentation, whereas the Python 2 documentation is wrong.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.isdecimal
