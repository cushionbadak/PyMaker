Natural Text
I read out of the XML-files their category and I rename and save them with the year.So, file "XYZ.xml" is now "News_2014.xml".The Problem is that there are several XML-files with the category "News" from 2014. With my code, I delete all other files and I can save only 1 file.What can I do in order that every file is saved? For example, if there are 2 files with the category "News" and the Year 2014, there file-names should be: "News_2014_01.xml" and "News_2014_02.xml".Since there are other categories, I can not simply implement an increasing integer, i.e. another file with the category "History" should still have the Name "History_2014_01.xml" (and not ...03.xml).Actually, I have the following code:
Once you have figured out the “correct” name for the file, e.g. News_2014.xml, you could make a loop that checks whether the file exists and adds an incrementing suffix to it while that’s the case:You can put that into a function, so it’s easier to use:And then use that in your code:
[EDIT] @poke solution is much more elegant, let alone he posted it earlierYou can check if target filename already exists, and if it does, modify filename.The easiest solution for me would be to always start with adding 'counter' to file name, so you start with News_2014_000.xml (maybe better be prepared for more than 100 files?).Later you loop until you find filename, that does not exist:So, if you want to save as 'News_2014_###.xml' file you can create name as usual, but call os.rename(sourcename, versioned_filename(targetname)).If you want more efficient solution, you can parse output of glob.glob() to find highest count, you will save on multiple calling to os.path.exists, but it makes sense only if you expect hundreds or thousands of files.
You could use a dictionary to keep track of the count. That way, there is no need to modify file names after you've renamed them. The downside is that every filename will have a number in it, even if the max number for that category ends up being 1.


Answer URL
