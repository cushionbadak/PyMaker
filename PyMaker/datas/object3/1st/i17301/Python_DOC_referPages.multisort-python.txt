Natural Text
I'm trying to write a custom exporter for Blender in Python. However, I'm having some trouble figuring out how I could use Python's native sort implementation to sort my vertices in the way I need.Basically, I need to export the vertices in such a way where they can form a grid like this, assuming that V is a double.The "engine" that I'm writing automatically retrieves the X and Z value of the coordinate based on where it is in the vertex map shown above. The V represents the Y coordinate. So this 5 by 5 map of vertices would create a 4 by 4 faced mesh.However, in Blender, vertices appear to be ordered individually for each face of a mesh, rather in a format like mine. So, in order to export it, I need to order the coordinates first by depth (Y coordinate in Blender) and then by width (X coordinate in Blender). It would have to behave like a SQL query, where the first paramter given takes precedence in order compared to the second.Here is what my code currently looks likeThe first call to sorted() successfully orders it according to depth (Y). However, The 2nd call to sorted messes up the order (as expected). How could I amend this to allow both sorts to occur without the 2nd messing up the first?Thanks for your time in advance!
Change to ...and that should do it. 
If I understand correctly, you want to order your vertices by decreasing y coordinate, with coordinates with equal y values ordered by increasing x coordinate. If that's right, you can return a tuple (-x.co.y, x.co.x) from your key function to sorted and Python will do both the whole sorting at once.An alternative would be to take a page from radix sort and sort by least-significant coordinate (e.g. x) first, then by the more significant coordinate (y). This will work since Python's sort is stable.


Answer URL
