Natural Text
I'm trying to use a cached property decorator that can take arguments.I looked at this implementation: http://www.daniweb.com/software-development/python/code/217241/a-cached-property-decoratorBut the problem I have is that I cannot call the decorator with the @ syntax if I want to use the parameter:How to use the @ syntax with decorators arguments?Thanks
You need a decorator factory, another wrapper that produces the decorator:Use this as:A decorator is really just syntactic sugar for:so as long as the expression after @ returns your decorator [*] it doesn't matter what the expression itself actually does.In the above example, the @cachedProperty(name='test') part first executes cachedProperty(name='test'), and the return value of that call is used as the decorator. In the above example, decorator is returned, so the my_func function is decorated by calling decorator(my_func), and the return value of that call is property object, so that is what'll replace my_func.[*] The @ expression syntax is deliberately limited in how much it is allowed to do. You can do attribute lookups and calls, that's it, the decorator grammar rule only allows an optional call with arguments at the end of a dotted name (where dots are optional):This is a deliberate limitation of the syntax.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#grammar-token-decorator
