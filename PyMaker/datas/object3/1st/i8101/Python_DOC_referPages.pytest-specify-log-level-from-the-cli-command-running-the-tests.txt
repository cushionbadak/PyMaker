Natural Text
my team and I are using Pytest + Jenkins to automate our product testing. we have been using the standard Logging lib of python to get proper log messages during testing, before and after each test etc. we have multiple layers of logging, we log out ERROR, WARNING, INFO and DEBUG. the default value for our logger is INFO. we create the logger object in the primary setup of the tests, and pass it down to each object created, so all our logs go to the same logger.so far when we are developing a new feature or test, we are working in DEBUG mode locally, and change it back to INFO when submitting new code to our SVN, but i am trying to add option to change logging level using the CLI, but i haven't found anything easy to implement. I've considered using Fixtures, but from what i understand those are only for the tests themselves, and not for the setup/tear-down phases, and the log is created regard less of the tests.any hack or idea on how to add a Pytest option to the CLI command to support changing logging level?
Combining pytest commandline options and the python loglevel from commandline example you can do the following: Add the following to conftest.py:and then request the logger fixture in your testsThen run pytest liketo set the log level to INFO.
This is now built into pytest. Just add '--log-level=' to the command line when running your test. For example:Documentation updates can be found here: https://docs.pytest.org/en/latest/logging.html
Try --log-cli-level=INFOlike:


Answer URL
https://docs.python.org/3/howto/logging.html#logging-to-a-file
