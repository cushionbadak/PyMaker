Natural Text
I'm trying to improve my own GDB pretty printers using the GDB python API.Currently I'm testing them with a core. I'm trying to get info for some QMap, QList content, but they have so many elements that printing them with it's contents is really slow (minutes). So, I would like to know if there is any known way to profile which parts are slower.I've already checked Python profile manual and google-perftools, but I don't know how to use them in the GDB execution cycle.gdbcommands.txt:Link to load-qt5-printers.py content:Then I launch gdb to automatically run those commands:
they have so many elements that printing them with it's contents is really slow (minutes).Do the Qt pretty-printers respect the print-elements limit? Is your limit set too high?Profiling is unlikely to help here: if you are printing a list with (say) 1000 elements, it's likely that GDB will need to execute 10,000 or more ptrace calls, and ~all the time is spent waiting for these calls. You can run gdb under strace -c and observe how many ptraces are executed while printing a list of 10 elements, and 100 elements.If the increase is linear, you can try to optimize the pretty printer to do fewer accesses. If the increase is quadratic, the pretty printer may do unnecessary pointer chasing (and that would certainly explain why printing long lists takes minutes).


Answer URL
https://docs.python.org/3/library/profile.html#module-cProfile
