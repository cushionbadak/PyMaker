Natural Text
Let's say I have a dictionary d that has either a key 0 or a key 1. I want to assign to x the value d[0] if it exists and d[1] otherwise. I also want to destroy key 0 if it exists. I would write:But then running this for d = {0:'a'} raises an error.Similarly, let's say I have a function that takes a keyword argument x. If x is computed already, then I want to use the value that is given. Otherwise, I need to compute it.Running f(x='test') takes 10 seconds.I could do something like but this is a bit cumbersome. Do you have any suggestions?
For caching function results, have a look at functools.lru_cache. Example: The second call returns the cached value:If you just want to short circuit dict.pop() I think it's more straight forward to just put it in nested try blocks. Like: 


Answer URL
https://docs.python.org/3/library/functools.html
https://docs.python.org/3/library/functools.html
