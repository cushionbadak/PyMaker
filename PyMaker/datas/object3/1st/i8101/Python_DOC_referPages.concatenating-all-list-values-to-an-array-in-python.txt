Natural Text
I would like to concatenate all numpy arrays (all same size) in a python dict to a new array.the result that I would like to see is:whats the best way to do that?Edit: Solution seems to be slightly different for python 2 and 3. The accepted answer solves it for python 3.
In Python 3, you'd need to convert the dict.values() to a list first.The objects returned by dict.keys(), dict.values() and dict.items()  are view objects. They provide a dynamic view on the dictionaryâ€™s  entries, which means that when the dictionary changes, the view  reflects these changes.  (https://docs.python.org/3/library/stdtypes.html#typesmapping)You get a 2-D array, with rows in a random order (Python dicts are unordered).To get a 1-D array, you can use np.concatenate:If the order is important, you could use a list of tuple or an OrderedDict instead of a dict.
Probably the easiest way:With list, the dictionary's values will be stored in a list (i.e. one obtains a list where each item is a numpy array). This list of numpy arrays can then itself be converted to a numpy array by applying np.array().You should not use dict as a name for your dictionary, though, as this shadows the built-in name dict. Instead, use e.g.:And make sure to rename your dictionary to dct.
You can get all values of a dictionary by using dictionary.values() and pass it to numpy.arrayPlease do not use dict as name it is a reserved keyword in pythonExampleOutput


Answer URL
https://docs.python.org/3/library/stdtypes.html#typesmapping
https://docs.python.org/3/library/collections.html#collections.OrderedDict
