Natural Text
I need to split sentences on punctuation marks in python.This command works nearly fine:The problem is that, if the last character of the sentence is a punctuation mark, the last token is a void token.How can I avoid that?I would like a solution that allows me not to insert a void token. I cannot afford to cancel it afterwards: in my case efficiency is an issue since I need to run this command over very large corpora of texts.
Instead of trying to split by non-word (\W+) characters, you can use re.findall with \w+:SIDE NOTE: You'd better to use r'raw string literals' to avoid backslashes to be used as escape sequences.Alternative: Pass the string without trailing non-word chracters to the re.split:NOTE: You may also strip leading non-word characters. To handle both sides, use ^\W+|\W+$ pattern.


Answer URL
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
