Natural Text
I have a python class,called settings, which includes an __init__ method for setting some values as below:In another python file(main script), I define an instance of my settings class via this codes:But when I run my main python script, I got this error:I expect that when I am defining an instance of a class, settings class here, its init function will be triggered and I will have values for its attributes.
The variables are local to the __init__ of your class. To have them as instance attributes, you need to bind them to the instance using say a dot reference to the instance:Synonymous (but less verbose) to binding attributes to/setting attributes on the instance using setattr:On another note, you don't need that global statement since you only want to set new attributes on the instance; nothing to do with the global namespace.You could easily check the behavior of the new __init__ as being different from the previous by analyzing the bytecode:Notice how we are not calling the popular STORE_FAST as with a vanilla assignment but STORE_ATTR.
So far you have only created "normal" variables in your __init__() method. They are only accessible locally within that function. If you want to create instance attributes you have to assign them to self:
I believe I had a similar problem some time ago, not sure my solution is the best practice, but it did achieve my goal that was to create a datetime variable for each user, getting the start time of a survey, I simply needed to declare the variable global in the Get method (survey start), so I could be able to pass it to the Post method (survey ended).  Then I could compare start time to the end time, and calculate time spent answering the survey for each participant. After a review, I see other more simpler way to reach the same goal, in any case, here is the code I used:class EmView(DistanceMixin, RegistredIP, View):


Answer URL
https://docs.python.org/3/library/dis.html#opcode-STORE_ATTR
