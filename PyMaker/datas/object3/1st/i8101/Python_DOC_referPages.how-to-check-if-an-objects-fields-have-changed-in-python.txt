Natural Text
I have class like this:I create an instance of this class by:I want to know if any field of this class was changed. I suppose that there can be some kind of hash function which results I can compare.For example, in bash I can write md5sum <<<"string", md5sum <<<"string" in order to get x, y respectively. Then I can compare x and y to find out if they are different or not. Is there an analogous method which works on Python's object?
You can simply achieve that by overriding __setattr__ class method.
Yes, there is a way to hash all the instance variables to detect changes:The technique uses:vars() to access the instance dictionaryitems() to get the key and values as a list of tuplesfrozenset() to make a hashable unorderedhash() to compute the checksum


Answer URL
https://docs.python.org/3/library/functions.html#vars
https://docs.python.org/3/library/stdtypes.html#dict.items
https://docs.python.org/3/library/functions.html#func-frozenset
https://docs.python.org/3/library/functions.html#hash
