Natural Text
What is the best way to open a file as read/write if it exists, or if it does not, then create it and open it as read/write? From what I read, file = open('myfile.dat', 'rw') should do this, right?It is not working for me (Python 2.6.2) and I'm wondering if it is a version problem, or not supposed to work like that or what.The bottom line is, I just need a solution for the problem. I am curious about the other stuff, but all I need is a nice way to do the opening part.UPDATE: the enclosing directory was writeable by user and group, not other (I'm on a Linux system... so permissions 775 in other words), and the exact error was:IOError: no such file or directory.
You should use open with the w+ mode:
The advantage of the following approach is that the file is properly closed at the block's end, even if an exception is raised on the way. It's equivalent to try-finally, but much shorter.a+ Opens a file for both appending and reading. The file pointer is  at the end of the file if the file exists. The file opens in the  append mode. If the file does not exist, it creates a new file for  reading and writing. -Python file modesseek() method sets the file's current position.Only "rwab+" characters are allowed; there must be exactly one of "rwa" - see Stack Overflow question Python file modes detail.
r+ means read/write
Good practice is to use the following:
Change "rw" to "w+"Or use 'a+' for appending (not erasing existing content)
My answer:
open('myfile.dat', 'a') works for me, just fine.in py3k your code raises ValueError:in python-2.6 it raises IOError.
I think it's r+, not rw. I'm just a starter, and that's what I've seen in the documentation.
What do you want to do with file? Only writing to it or both read and write?'w', 'a' will allow write and will create the file if it doesn't exist.If you need to read from a file, the file has to be exist before open it. You can test its existence before opening it or use a try/except.
Put w+ for writing the file, truncating if it exist, r+ to read the file, creating one if it don't exist but not writing (and returning null) or a+ for creating a new file or appending to a existing one.
example:I hope this helps. [FYI am using python version 3.6.2
Since python 3.4 you should use pathlib to "touch" files.It is a much more elegant solution than the proposed ones in this thread.Same thing with directories:
Use:Make sure you close the files after you open them. The with context manager will do this for you.
If you want to open it to read and write, I'm assuming you don't want to truncate it as you open it and you want to be able to read the file right after opening it. So this is the solution I'm using:

So You want to write data to a file, but only if it doesn’t already exist?.This problem is easily solved by using the little-known x mode to open() instead of the usual w mode. For example:If the file is binary mode, use mode xb instead of xt.


Answer URL
