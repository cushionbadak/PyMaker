Natural Text
This question already has an answer here:Why does “return list.sort()” return None, not the list?                    6 answers                I have following program. I wanted to sort list a and list b and store the results in m and n.Actual output:Expected:
.sort() returns None as it sorts the list in place and doesn't return the list back. But wheras sorted will.
The sort() method changes a, b themselves, and doesn't return anything. If you want to create sorted copies, do instead
sort() sorts the list inplace without creating new listsyou can either print a and b after sort()or use sorted(a) and sorted(b) which will create new lists keeping original lists as it is
From the docs: The method sort() does not return any value but it changes from the original list. You therefore either useor use sorted(), which returns a sorted list from the given iterable.
.sort() method do the sorting inplace and sort itself is a void function without any output as you can see ,so your original array is sorted now
Please try sorted.a.sort() changes a itself, and return None.
It's because sort, modifies the list inplace and returns nothing, your code fixed: 


Answer URL
https://docs.python.org/3/library/functions.html?highlight=sorted#sorted
