Natural Text
Problem: Given a list of 3 numbers [4, 8, 15] generate a list of all possible arrangements of the numbers.That's 3*3*3 = 27 unique entries from what I can gather. Something like:I tried using itertools.permutations and itertools.combinations but I can't get all 27 values.list(itertools.permutations([4,8,15],3)) for example only prints 6 values: [(4, 8, 15), (4, 15, 8), (8, 4, 15), (8, 15, 4), (15, 4, 8), (15, 8, 4)]Is there something that's available  out of the box or is this more of a "roll your own" problem?
you are confusing permutations with product:
The answer is still in itertools. The function called product does the trick; it takes two arguments: first is the iterable which has the usable elements, second is the amount of times the iterable can repeat itself.itertools.product([4,8,15],repeat=3) would return the permutations you want in your example.The reason permutations or combinations don't work for you is because they don't allow items to repeat themselves; product calculates the cartesian product, which allows for repetition of items.
This code prints what you requested :)


Answer URL
https://docs.python.org/3/library/itertools.html
