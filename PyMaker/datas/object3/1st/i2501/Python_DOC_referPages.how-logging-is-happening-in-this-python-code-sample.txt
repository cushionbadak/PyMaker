Natural Text
I am trying to understand python logging by fiddling with this basic example. I add some lines in that code and reproduced below. Find #added by me comment to find which line I added:spam_application.pyauxiliary_module.pyConsole outputspam.logDoubtsWhy I get following lines in console?:Why those last five lines in console do not follow format of others?Why there is noWhy these lines not in file:Basically how child module logging behave when I call logging.xyz() instead of logging.getLogger('abc').xyz() inside child module (here auxiliary_module)?
1, 2, 3, 4.The nature of your problem is that you use two loggers. The first one you have created with the code logger = logging.getLogger('spam_application'). The second one is root logger. You started it with the code logging.debug("-->testing logger debug"). Usually you need multiple loggers to distinguish between sources of logging messages. Keep track of your loggers and do not mix them.To take an easy start with logging in python you may use only root logger. You can configure it with logging.basicConfig(...) and create log messages with, for example, logging.info(...).5.It behaves just fine. You do not need any extra actions to make logging work correctly. Although you may experience difficulties with logging across multiple threads and processes.


Answer URL
https://docs.python.org/3/howto/logging-cookbook.html#using-logging-in-multiple-modules
