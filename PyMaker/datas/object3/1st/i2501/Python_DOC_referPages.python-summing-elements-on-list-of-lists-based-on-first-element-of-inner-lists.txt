Natural Text
I have a listI require the output from summing the second element in each sublist for a unique first element. In this case it is:Where [0.5, 7] is summing the second element of [0.5, 2] and [0.5, 5].What would be the most efficient way to do this for say lists of length 1,000.
Accumulate with a defaultdict:Note that the value for 2 was automatically "promoted" to a float by addition, even though this is a defaultdict of int.  This is to match the desired output posted in the question, but I think you should consider to use homogeneous output types rather than a mix of int and float.
Using Pandas, you can retain the original 'order' of the data:
Will this work?Output:
You can get away with sorting and itertools.groupby:This will not preserve the original order of the keys.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/itertools.html#itertools.groupby
