Natural Text
I am currently working on a calculator program. I have managed to make the validation code function so the entry widget only receives values from valid_input list. Although, I am currently trying to prevent inputs such as "5**2" and "2//2", is there a way to use the validation code or test_input function to make the user unable to enter in two of the same operators. This is mainly regarding the division and multiplication operator.
In the validation function you can split up the logic for inserting a number and inserting an operator/point.Since you care about what's already in the entry and the place you are inserting a character, you should pass some more info to the validatecommand. The information you would need is (from this answer):You can then do several checks to disallow anything that would insert two operators or point after another:withI forgot that this messes up insertion of the answer, since I assume only one character to be inserted at a time. You can fix this in (at least) two ways:You can turn off validation for inserting the answer and turn it back on when you have inserted:Or, since answers are always all numbers, you can change the second if in the validation command to allow multiple numbers instead of only one:
You can use regex to validate these kind of strings:output:<_sre.SRE_Match object; span=(0, 4), match='3*42'>as you can see, re.match returns an object if the RegEx is matching, else it returns None.  With this information, we can check if the match returns something to decide if a string is valid or not:output:Operation 3*42 is: VALID  Operation 3.14-42.0 is: VALID  Operation 12.0.0+21 is: INVALID  Operation 3--42 is: INVALID  Operation 3,14/42 is: INVALID  Operation 123 456 is: INVALIDHere's how the RegEx works:[0-9]+: Matches one ore more digits\.?: Matches zero or one dot[0-9]*: Matches zero or more digits[\+\-\*\/]: Marches exactly one of this four symbols (+-*/)[0-9]+: Matches one ore more digits\.?: Matches zero or one dot[0-9]*: Matches zero or more digits  If we put everything togheter, we're asking for:One or more digits, followed by zero or one dots, followed by zero or more digits, followed by an operator, followed by One or more digits, followed by zero or one dots, followed by zero or more digitsand just as a hint, you can change your valid_input with a RegEx:


Answer URL
https://docs.python.org/3/library/re.html#re.match
