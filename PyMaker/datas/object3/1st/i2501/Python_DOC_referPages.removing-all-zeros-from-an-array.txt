Natural Text
I have an array of shape [120000, 3] in which only the first 1500 elements are useful and the others are 0.Here an exampleI have to find a way to remove all the elements that are [0.0, 0.0, 0.0]. I tried to write this but it doesn't workeditAll the solutions in the comment work, but I gave the green tick to the one I have used. Thanks to all.
There are a few related approaches, split into two camps. You can either use a vectorised approach via calculation of a single Boolean array and np.ndarray.all. Or you can calculate the index of the first row which contains only 0 elements, either via a for loop or next with a generator expression.For performance, I recommend you use numba with a manual for loop. Here's one example, but see benchmarking below for a more efficient variant:Performance benchmarkingTest codeSetupFunctionsChecks
Don't use for loops--those are slow.  Calling np.delete repeatedly in a for loop is a recipe for poor performance.Instead, create a mask:That is an array of length 120000 which is True where all the elements in that row are 0.Then find the first such row:Finally, slice the array:
The simple iterative solution:A better solution (Python 3.x):output:
For logarithmic complexity, you can use numpy.searchsorted after casting data by rows:index will be the number of not null items if the first ones are all not null.test :  
know it is over just thought i would give my answer :)then a simeple list comprehension can be madeand outputs:takes take the time with a gram of salt it is really inconsisten give my 2 sec to get a better estimationwhen:i get the time tothis time is hugely based on wather they are 0 or not, 0 are way faster since it is ignored.
A simple iterative solution with usage of vstack


Answer URL
https://docs.python.org/3/library/functions.html#next
https://docs.python.org/3/reference/expressions.html#generator-expressions
