Natural Text
I am trying to generate combinations of a 5-character strings consisting of four letters (exactly two are equal and another repeated two are equal) and one digit.  Example for CORRECT combinations:  Example for INCORRECT combinations:  This is the code I am using:  It prints that I have 79,800 combinations but this is incorrect because I am counting duplicated combinations:The problem is because it chooses some letter, for example a to appear twice and then repeated letter, like f, to appear twice so we will get something like: a3faf but later it chooses the first letter as f and the second as a and get again a3faf.In math I can solve it with dividing by 2:  But not sure how to do it properly in my code.  Can you suggest how I can prevent it in my code ? Meaning, get the combinations without duplication.   
Change permutations(letters, 2) to combinations(letters, 2).  permutations() will deliver ('a', 'b') and ('b', 'a'), but combinations() will deliver just ('a', 'b').  Your combinations for letter positions takes care of all orderings of those letters so you don't need to see them twice.Edit: In addition to the previous fix, calculating the positions of the second letter based on the first letter finally fixes it.  So if 'a' is at index 0 and 2 then 'b' must be at index 1 and 4.
You can write a recursive function:Output (first 100 results):
For fixed length and format this straightforward code generates 39900 combinations:


Answer URL
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
