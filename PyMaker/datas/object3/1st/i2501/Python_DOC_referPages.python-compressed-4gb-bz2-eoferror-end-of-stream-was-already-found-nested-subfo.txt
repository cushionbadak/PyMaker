Natural Text
I'm trying to read a specific file from a compressed file bz2 using python.But at the end I got the error:I also tried to list the files within the tar through 'tar.list()' and again ...I listed the files inside the archive using the tar command. Here is the result:I think this is due to the fact the archive has subfolders and for some reason python libraries have problems in dealing with subfolders extractions? I also tried to open the tar file manually and I have no problems so I don't think the file is corrupted. Any help appreciated.
Comment: I tried the debug=3 and I get : ReadError: bad checksum  Found the following related Infos: tar: directory checksum error Cause  This error message from tar(1) indicates that the checksum of the directory and the files it has read from tape does not match the checksum advertised in the header block. Usually this message indicates the wrong blocking factor, although it could indicate corrupt data on tape.Action  To resolve this problem, make certain that the blocking factor you specify on the command line (after -b) matches the blocking factor originally specified. If in doubt, leave out the block size and let tar(1) determine it automatically. If that remedy does not help, the tape data could be corrupted.   SE:tar-ignore-or-fix-checksum  I'd try the -i switch to see if you can just ignore and messages regarding EOF.  Example bugs.python.org:tarfile-headererror  The comment in tarfile.py reads (Don't know the date of the file!):  ReadError: unexpected end of data  From the tarfile Documentation The tarfile module defines the following exceptions:exception tarfile.ReadError      Is raised when a tar archive is opened, that either cannot be handled by the tarfile module or is somehow invalid.First, try with another tar archiv file to verify your python environent.Second, check if your tar archiv file match the following format:tarfile.DEFAULT_FORMATThe default format for creating archives. This is currently GNU_FORMAT.Third, instead of using tarfile.open(...), to create a tarfile instance, try to use the following, to set debug=3.class tarfile.TarFile(name=None, mode='r', fileobj=None, format=DEFAULT_FORMAT, tarinfo=TarInfo, dereference=False, ignore_zeros=False, encoding=ENCODING, errors='surrogateescape', pax_headers=None, debug=0, errorlevel=0)


Answer URL
https://docs.python.org/3/library/tarfile.html#module-tarfile
https://docs.python.org/3/library/tarfile.html#tar-examples
