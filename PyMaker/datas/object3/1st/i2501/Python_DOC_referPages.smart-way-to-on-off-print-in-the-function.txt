Natural Text
I want to use standard output if a function() have args use_standard_output = True.Like this:Is there smarter way to implement this?Thanks.
Look into the logging module. It comes equipped with different levels.For example, you could replace your call to print with logging.info("Print something to monitor the process")If you configure it with logging.basicConfig(level=logging.INFO), you will see the output. If you raise the logging level (e.g. logging.basicConfig(level=logging.WARNING), it will be ignored.For a complete example:
Whether it's "smart" or not, you can redefine the print function. This was the rationale for making it a function in Python 3. Since you'll be "shadowing" the built-in function (i.e. re-using its name locally, effectively redefining it) you do, of course, have to retain a reference to the built_in function so you can use it inside your redefinition.Then a global (here, OUTPUT_REQUIRED) can determine whether or not it produces any output:The *args, *kwargs notation may not be familiar to you. Using it as the code does, in both the definition and the call, it is a simple way to call system_print with the same positional and keyword arguments that your print function was called with.You could continue to use the additional argument by explicitly naming it in the definition, and not passing it through to print:This represents a change to the API which would make switching back to the standard function more difficult. I'd recommend simply using a different name in this case.The logging module, while extremely comprehensive, takes a little more effort to understand.
If you want either write the message to the terminal or to a log file you can work with streams. You simply work with a stream object pointing to a file or STDOUT.


Answer URL
https://docs.python.org/3/howto/logging.html#logging-basic-tutorial
