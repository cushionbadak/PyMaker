Natural Text
I was messing around and noticed that the following code yields the value once, while I was expecting it to return a generator object. My question is what is the value of the yield expression and also why are we allowed to nest yield expression if the yield expression  collapses?
The value of the yield expression after resuming depends on the method which resumed the execution. If __next__() is used (typically via either a for or the next() builtin) then the result is None. Otherwise, if send() is used, then the result will be the value passed in to that method.So this:Is equivalent to this:Which in this case (since you're not using generator.send()) is equivalent to this:Your code is only looking at the first item yielded by the generator. If you instead call list() to consume the whole sequence, you'll see what I describe:Output:If we iterate the generator manually (as you have), but .send() it values, then you can see that yield "returns" this value:Output:


Answer URL
https://docs.python.org/3/reference/expressions.html#yield-expressions
