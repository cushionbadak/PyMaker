Natural Text
I'm trying to validate multiple functions from separate files all with the same names in Python 3.So, consider I have a directory of directories: dir1 which has s1, s2, s3, ..., sn which all are directories and each contain a file called submission.py. I do not know what s1 through sn are until run time.In each submission.py, there's functions f1 through fm. I would like to create a script that executes f1 through fm and prints their output for each s1 through sn's submission.py file.I would like to think that I could import each submission.py file in each directory, but the problem is that each file has the same name. Also, s1 through sn is not known until run time. Obviously, I can determine s1 through sn using the os.listdir() function. Any idea on how I can call f1 from two different files after getting the names of the directories through os.listdir() and os.path.isdir()? Another poster suggested this for 2.7:This is possible using imp.Then, to call a function f3 in the submission.py module contained in subdirectory s2 for example, it would be:modules['s2'].f3().This would be a perfect solution. Can anyone suggest a similar solution in Python 3.4 or 3.5?
importlib doesn't support importing given a full pathname, but does support importing from packages.You can make each sub-sirectory, s1, s2 etc., a package by adding a blank __init__.py in the directory, and then use importlib.So, in each directory, you have __init__.py and submission.pyThen the following example code should work:Note that I'm on Python 2, which only has importlib.import_module(), Python 3 has more functionality, but I would expect the above to still work.Not also that the directory which contains s1 etc. must reside in your PYTHONPATH.


Answer URL
https://docs.python.org/3/library/importlib.html
