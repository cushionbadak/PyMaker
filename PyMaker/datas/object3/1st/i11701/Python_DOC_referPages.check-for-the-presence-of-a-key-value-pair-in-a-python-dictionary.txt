Natural Text
What is the shortest way to check for the existence of a certain key/value pair in a dictionary if I don't know that the key exists?So far, I've come up with:This is really long with longer variable names or longer key/value names, such as:What's a shorter way to check for the presence of a key and a corresponding value?
You can fetch the value, and compare it right away:orCheck out Python dict.get docs.
Actually, none of the answers captures the full problem. If the value that is being queried for happens to be None or whatever default value one provides, the get()-based solutions fail. The following might be the most generally applicable solution, not relying on defaults, truly checking the existence of a key (unlike get()), and not over-'except'-ing KeyErrors (unlike the other try-except answer) while still using O(1) dict lookup (unlike items() approach):
If you're just looking for existence of the key
Ok, my suggestion, to make your code more readable:This could be another short code but definitely not efficient as a dict.get:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.get
