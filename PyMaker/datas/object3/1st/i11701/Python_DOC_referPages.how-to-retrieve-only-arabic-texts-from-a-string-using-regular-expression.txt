Natural Text
I have a string which has both Arabic and English sentences. What I want is to extract Arabic Sentences only.This Link shows that the Unicode range for Arabic letters is 0600-06FF. So, very basic attempt came to my mind is:But, this fails miserably as it returns the following list.As you can see, this is exactly opposite of what I want. What I am missing here?N.B. I know I can match the Arabic letters by using inverse matching like below:But, I don't want that.
You can use re.sub to replace ascii characters with empty string.Your regex didn't work because you are using Python 2 and your string is str you need to convert my_string to unicode for it to work. However it did perfectly work on Python3.x
Your original code was correct, just needed to encode my_string with proper encoding, 'utf-8' and add u in your re pattern since you are working with Python2, This will give you a list of matched unicode strings instead of single characters that you don't need to join them back with ''.joinIf you were in Python3, you don't need any of encoding tweeking as default encoding is 'utf-8':
Your code is:When matching a byte sequence, there is no such concept as Unicode code points. Therefore, the \u escape sequences in the regular expression don’t make any sense. They are not interpreted as you thought, but just mean u.So when parsing the regular expression for bytes, it is equivalent to:This character class is interpreted as “one of u060, or a byte in the range 0-u, or one of 06FF”. This, in turn, is equivalent to [0-u], since all the other bytes are already included in this range.Demonstration:Note that the zz is not matched, since it comes behind u in the ASCII character set.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
