Natural Text
I am trying to make a script which finds everything between a symbol {} in a text document. It takes the .txt documents specific part in the {} and organizes it alphabetically, then writing it inplace back to the text document.  Example of text document..Desired output(sorted alphabetically)..What its still printing..My code..  It prints the sorted/alphabetical list as [airplane:hobby, apple:banana, this: something else], but how do I get it to replace the original text in the text document? Has to be inplace, but can make a new txt.
This should work:I have used re.sub() in order to replace with the sorted match in-place.
Following code will sort items between { & } and write the result to same file:
I would approach this problem in pieces. First, you want to be able to read from one file and write to a new file. You could do this a multitude of ways. If your file is small you can just use readlines(), truncate your original file, and then write it back out.But I'm going to assume the possibility of huge files (i.e. larger than will easily fit in RAM/swap space. Currently several GB in size).Now we're reading each line and writing it out to the destination. Now all you need to do is intercept the line and change it up if that's necessary:You might have to tweak with the exact algorithm, but that's the approach that I would take when confronted with a problem like this.
The entire program can be written succinctly as follows,    


Answer URL
https://docs.python.org/3/library/re.html#re.sub
