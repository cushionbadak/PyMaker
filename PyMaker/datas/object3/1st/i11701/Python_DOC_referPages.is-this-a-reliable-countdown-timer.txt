Natural Text
I want to create a countdown timer that counts down from 60 minutes until it hits 0. I don't need it to be exactly accurate. Just within like 10-15 seconds. Is time.sleep the correct task for the job?
I think you're overcomplicating this by making a distinction between minutes and seconds. Use a base unit (seconds), then loop backwards over the total and apply the delay there, eg:
No, time.sleep() does not provide reliable times. It can sleep to short if any kind of signal interrupts the sleep, but it can also be longer depending on your system load.I would recommend you to store the current time when you start the countdown using e.g. time.time() (returns current time as floating point decimal in seconds since epoch):Then compute the time (also in seconds since epoch of course) when the countdown will be over:Now you can start the while loop which checks whether the current time is lower than the target_time. If that's the case, you can use time.sleep(RESOLUTION) to save CPU time. Your countdown will be as exact as you chose RESOLUTION: the time it's running is always greater or equal to the desired time, but lower than the desired time plus RESOLUTION. I would chose a value between 0.1 and 1 seconds.Here's the full code:The advantage is that even if the system is highly loaded or the things you do inside the while loop take very long, the countdown still stays pretty accurate.
The simple way is to use divmod. Idea is to reduce the counter after a second using sleep for 1 sec.


Answer URL
https://docs.python.org/3/library/sched.html
