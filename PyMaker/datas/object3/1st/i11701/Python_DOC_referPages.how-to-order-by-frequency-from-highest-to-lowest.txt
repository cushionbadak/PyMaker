Natural Text
So the goal is to open this twitter file with tweets and order the hashtags by frequency to tell the trending topics, i already asked this before but ive changed my code a bit and got to the point where it is printing the hashtags and the amount, but how would i order this and send it to another file called trending.txt 
Use a Counter dict with most_common using the csv  lib to write the data to your outfile:Using map(str.capitalize, data) will map str.capitalize on all the lines which will be more efficient than repeatedly calling in your loop, writerows takes an iterable of iterables so it will write the  tag, count tuples returned from most_common to each line of your outfile. 
Rather than a dictionary, use a collections.Counter() object; it is a specialised dictionary that contains your desired functionality out of the box:The Counter.most_common() method produces (key, count) values in sorted order, from most frequent to least. You can limit the number of entries returned by passing in an integer:Note that your for tag in data will only iterate once; it'll read the first line, after which for line in data: processes the rest of the  file. You could use next(data, None) instead of that loop:Last but not least, if you are trying to produce a CSV file (comma-separated data), use the csv module:The above writes all counts, in sorted order, to the CSV file.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.Counter.most_common
https://docs.python.org/3/library/csv.html
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.Counter.most_common
https://docs.python.org/3/library/csv.html
