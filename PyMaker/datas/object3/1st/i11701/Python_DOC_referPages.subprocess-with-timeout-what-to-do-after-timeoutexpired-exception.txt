Natural Text
This question already has an answer here:How to terminate a python subprocess launched with shell=True                    10 answers                subprocess timeout=SECONDS don't work for me if I follow the advice of the python docs:The docs advice to use pipe.kill() and pipe.communicate() after TimeoutExpired: https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicateIt does not work for me. The second communicate() does not return soon.Exception:If I use ['sleep', '5'] instead of shell=True, then it works.If I don't supply stdout=subprocess.PIPE, then it works, too.I guess the shell does not react on the pipe.kill(). What is the best way to solve this?
The general pattern: catch TimeoutExpired, kill started processes, call .communicate() again is correct.The issue is that pipe.kill() in your code kills only the shell while its descendant processes such as /bin/sleep may continue to run. See  How to terminate a python subprocess launched with shell=True.Note: if desired; it is not necessary to wait for grandchildren processes. See Python subprocess .check_call vs .check_output.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate
