Natural Text
I am trying to understand how to write a script that would first take a directory name as a command line argument, then discovers all files in the associated directory subtree. It stores the information in a Sqlite3 database, in a table named files containing 3 fields: (ext, path, fname), which represent the file extension (.cpp, .doc, etc.), the full path name of the directory (only) the file resides in, and the name of the file (e.g., foo.cpp).The name of the SQLite database file should be the second command-line argument ().This is a sample command line:Here is a sample of some of the entries in files:I am not very familiar with accessing databases in the first place and just need some suggestions on best ways this can be done. 
To get the command line arguments you can use the sys.argv list. For your example command invocation:Executing that results in root being set to 'Stuff' and db_name set to 'filesdb'.The other part of your question can be solved using os.walk() to traverse the file system.A potential performance improvement can be gained by using cursor.executemany() instead of a query per file. To do that you would build up a list of tuples containing (ext, dirpath, filename) and pass that to executemany().


Answer URL
https://docs.python.org/3/library/os.html#os.walk
https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.executemany
