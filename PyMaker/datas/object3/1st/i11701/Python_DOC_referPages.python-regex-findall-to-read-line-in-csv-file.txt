Natural Text
I have a .csv file (or could happily be a .txt file) with some records in it:etc etcI have used python to open and read the file, then regex findall (and attempted a similar regex rule) to identify a match:which gives the resulting output:I have tested this out, and it seems I have the regex findall working, in that it is correctly identifying a 'match' and returning it.My question is, how do I get the remaining content of the 'matched' lines to be returned as well? (eventually I will get this written into a new file, but for now I just want to have the matching line printed).I have explored python dictionaries as one way of indexing things, but I hit a wall and got no further than the regex returning a positive result.I guess from this a second question might be: am I choosing the wrong approach altogether?I hope I have been specific enough, first question here, and I have spent hours (not minutes) looking for specific solutions, and trying out a few ideas.I'm guessing that this is not an especially tricky concept, but I could do with a few hints if possible.
A better way to handle this would be to use Python's csv module. From the looks of your CSV, I'm guessing it's tab-delimited so I'm running off of that assumption.This should then output the following from matched_row:
I'd use the csv module, read in the file with the tab as delimiter, and then compare line by line. If there is a match in that line, append it to a results list. 
If you want to read all the values in .csv file and save them in a dictionary with key as JB74XYZ and the details related to this. Then you can read this file line by line and just use split(" ") to get the list. Then you can easily make dictionary by just removing the first element from list and making it key and saving the remaining list as value of the dictionary.If you want to use regular expresssion, you should refer to this link:https://docs.python.org/3/library/re.html for extraction of details from your file and saving it in tuples.
So, after looking at all the excellent replies, I ended up focusing (as advised by a few here) to look a csv module in a bit more detail. With some digging around I've ended up with this (and, tbh at this stage, I'm not sure how I did it exactly...):and this resulted in an output that I think I'll be able to write to another file:
You could try re.search or if you require it to be at the start, re.match. Both return a MatchObject with information about the operation, including access to the original string. For example, to get the remaining string:import reNote that I had to change the regex to a group, in order to tell re that I want to track the position of what I matched.


Answer URL
https://docs.python.org/3/library/re.html
