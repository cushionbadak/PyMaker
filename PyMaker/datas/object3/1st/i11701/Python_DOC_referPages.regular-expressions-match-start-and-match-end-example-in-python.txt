Natural Text
Struggling to get a good grasp of regular expressions and especially of their match.start() and match.end() methods.While playing with this code (found here):I cannot understand the use and logic when computing the line and column using the mo.end() and mo.start(). For example, if I were to have the NEWLINE and the SKIP to also yield a Token output then the column indexes are messed up completely.Tried re-calculating with the mo.end() the column indexes to accommodate for this case as mentioned in the example but failed.Any ideas, example-code and/or explanations would be awesome.  
mo.start and mo.end will return you the start and end indexes of the match so that string[mo.start():mo.end()] will return you the matched string. Every time your example matches \n it will increase the line_num that tracks current line and update line_start to contain the index of first character in current line. This allows the program to later calculate the column when token is matched: column = mo.start() - line_start.To illustrate the line and column tracking behavior I've created a simple example that finds all the numbers in given string. For every number it will output the line and starting column:Output:
Here's an implementation that I believe satisfies your criteria: if you could post what you've tried perhaps we could better understand the problems you're having.Output:


Answer URL
https://docs.python.org/3/library/re.html#writing-a-tokenizer
https://docs.python.org/3/library/re.html#re.match.start
https://docs.python.org/3/library/re.html#re.match.end
https://docs.python.org/3/library/re.html#re.match.start
