Natural Text
so i just started learning python in school and I've been practicing it at home so i am new to python.The problem im having is that i am trying to carry over the values from def two() into main(), however when i use {0} to put them in a print or a calculation, it says error and that they don't have any value.here's my code:And heres what i get from running it:
You can return the values from your previous function and then set them to be variables.At the end of two()In main() where you set main = two()Also, you should rename main you can override functionality by using namespaces that are already reserved.You can then do division with these valuesAs it is now these are singletons i.e. - sets containing one element.You can then use format to input these into your strings in your print statements
In your code here:{0}, {1} and {2} are sets containing one element. You can't divide sets, which is what the error is complaining about.You will need to pass the values from two() to main(). See Slayer's answer for details as to how that is done.You cannot just use the {0} tokens where-ever you want because they are read from strings by format() to format text. Outside a string it's a set containing zero.
The issue at play here is that you're attempting to apply string formatting to a non-string operation within your main function.The curly braces that you're using in the line above only substittue for values within that single format function call. When you call ans=({0}/{1}/{2})/1 , you're actually creating three separate sets; that's a different Python data type. You're getting that error because sets are not meant to be divided like your code is attempting to do.As mentioned in Slayer's answer, your best bet is to return all three variables form your 'two' function:That way, you can assign them other variable within your main function. I would highly recommend against creating a variable that's named the same thing as your function too. It'll create some very confusing behavior for you.Finally, the line of code that's actually creating the exception can be modified to work.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
