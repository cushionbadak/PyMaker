Natural Text
I need some help for a python program. I've tried so many things, for hours, but it doesn't work.Anyone who can help me? This is what I need:I have this file: http://www.filedropper.com which contains information about proteins.I want to filter only the proteins which match the ...exists.From these proteins, I need only the ... (the text of 6 tokens, after >sp|, and the species (second line, between the [])I want the .. and ..in a .., and eventually in a table.What I have so far:You're a hero if you help me out!        
My first recommendation is to use a with statement when opening files:The problem with your FilterOnRegEx method is:  if ploop in line.  The in operator, with string arguments, searches the string line for the exact text in ploop.Instead you need to compile the text form to an re object, then search for matches:This will help you to move forward.As a next step, I would suggest learning about generators.  Printing the lines that match is great, but that doesn't help you to do further operations with them.  I might change print to yield so that I could then process the data further such as extracting the parts you want and reformatting it for output.As a simple demonstration:Addendum:   I ran the code I posted, above, using the sample of the data that you posted and it successfully prints some lines and not others.  In other words, the regular expression did match some of the lines and did not match others.  So far so good.  However, the data you need is not all on one line in the input!  That means that filtering individual lines on the pattern is insufficient.  (Unless, of course, that I don't see the correct line breaks in the question)  The way the data is in the question you'll need to implement a more robust parser with state to know when a record begins, when a record ends, and what any given line is in the middle of a record.
This seems to work on your sample text. I don't know if you can have more than one extract per file, and I'm out of time here, so you'll have to extend it if needed:


Answer URL
https://docs.python.org/3/library/stdtypes.html#common-sequence-operations
https://docs.python.org/3/library/re.html#re.compile
https://docs.python.org/3/library/re.html#re.regex.search
https://docs.python.org/3/tutorial/classes.html#generators
https://docs.python.org/3/library/re.html#re.regex.search
