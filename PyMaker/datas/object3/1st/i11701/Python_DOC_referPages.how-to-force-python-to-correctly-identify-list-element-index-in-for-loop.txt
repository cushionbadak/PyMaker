Natural Text
There is a simple list, for example, I want to run through my_list[1:] with for loop to get previous element value for each iteration:I expected to see a b b c on output, but get a a b b instead.I guess this is because index() method search only for first i value, ignoring the fact that there are two elements "b" as well as two "c"...How to fix this code to get expected output?
The list.index() method will return the index of first occurrence of its argument. And since you have multiple duplicate items in your list it doesn't give you the expected result. You can use a simple slicing to get your expected output:Or if you want to access these items through a loop you can use zip() function like following:
Matching elements with their predecessors or sucessors is a common use case for zip:
You can always emulate the behaviour of C/Pascal/Perl/whatever 'for' instead of Python 'for' (which is actually more like foreach). Note that the range starts with 1 to avoid returning the last element on the first iteration.Not very Pythonic, but this approach is sometimes more intuitive for people with background in other languages.
As you noticed, using index does not work here, as it always finds the first position of the given element. Also, it is pretty wasteful, as in the worst case you have to search the entire list each time.You could use enumerate with start parameter to get the element along with its index:
This will do the trick:


Answer URL
https://docs.python.org/3/library/functions.html#zip
