Natural Text
I'm am attempting to setup some import hooks through sys.meta_path, in a somewhat similar approach to this SO question. For this, I need to define two functions find_module and load_module as explained in the link above. Here is my load_module function,which works fine for most modules, but fails for PyQt4.QtCore when using Python 2.7:which returns,The same code works fine with Python 3.4 (although imp is getting deprecated and importlib should ideally be used instead there). I suppose this has something to do with the SIP dynamic module initialization. Is there anything else I should try with Python 2.7?Note: this applies both with PyQt4 and PyQt5.Edit: this may be related to this question as indeed,fails with the same error. Still I'm not sure what would be a way around it...Edit2: following @Nikita's request for a concrete use case example, what I am trying to do is to redirect the import, so when one does import A, what happens is import B. One could indeed think that for this it would be sufficient to do module renaming in find_spec/find_module and then use the default load_module. However, it is unclear where to find a default load_module implementation in Python 2. The closest implementation I have found of something similar is future.standard_library.RenameImport. It does not look like there is a backport of the complete implementation of importlib from Python 3 to 2.A minimal working example for the import hooks that reproduces this problem can be found in this gist.
UPD: This part in not really relevant after answer updates, so see UPD below.Why not just use importlib.import_module, which is available in both Python 2.7 and Python 3:on Ubuntu 14.04:Since it's a dynamic module, as said in the error (and the actual file is QtCore.so), may be also take a look at imp.load_dynamic.Another solution might be to force the execution of the module initialization code, but IMO it's too much of a hassle, so why not just use importlib.UPD: There are things in pkgutil, that might help. What I was talking about in my comment, try to modify your finder like this:Can't test the code above now, so please try it yourself.P.S. Note that imp.load_module(), which worked for you in Python 3 is deprecated since Python 3.3.Another solution is not to use hooks at all, but instead wrap the __import__:output:shelve renamed to pickle, and pickle is imported by default machinery with the variable name shelve.
When finding a module which is part of package like PyQt4.QtCore, you have to recursively find each part of the name without .. And imp.load_module requires its name parameter be full module name with . separating package and module name.  Because QtCore is part of a package, you shoud do python -c 'import PyQt4.QtCore' instead. Here's the code to load a module.  Test;  


Answer URL
https://docs.python.org/3/reference/import.html#import-hooks
