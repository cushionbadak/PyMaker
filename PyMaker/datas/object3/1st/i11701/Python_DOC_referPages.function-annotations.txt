Natural Text
I really do like function annotations, because they make my code a lot clearer.But I have a question: How do you annotate a function that takes another function as an argument? Or returns one?And I don't want to do Function = type(lambda: None) to use it in annotations.
Use the new typing type hinting support added to Python 3.5; functions are callables, you don't need a function type, you want something that can be called:The above specifies that your x takes a callable object that accepts any arguments, and it's return type is Any, e.g. anything goes, it is a generic callable object. x then returns something that is just as generic.You could express this with x(f: Callable) -> Callable: too; a plain Callable is equivalent to Callable[..., Any]. Which one you pick is a style choice, I used the explicit option here as my personal preference.


Answer URL
https://docs.python.org/3/library/typing.html
