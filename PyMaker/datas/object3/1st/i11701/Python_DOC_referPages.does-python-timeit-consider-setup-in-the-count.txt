Natural Text
I'm using python timeit to see how long it takes for a function to run.the results I'm getting are bigger than a 'normal' check with datetime.Does timeit also count the time the setup takes, and if so - how can I disable it? 
Does my_func(l) mutate l? That could affect the timings.timeit will run the setup once and reuse the objects created by the setup each time it calls the code that is to be timed. Also it can call the code a few times to gauge roughly how fast it runs and choose the number of iterations before the actual timed run (though not when you've specified the number of runs yourself). That would mean if there is an initial fast run it won't be included in the timed results.For example if my_func() was a badly written quicksort function it might run quickly when you call it on a shuffled list and very very slowly when you call it again with a (now sorted) list. timeit would only measure the very slow calls.
The docs say:The execution time of setup is excluded from the overall timed  execution run.
The Python 2.0 docs are pretty clear that the setup statement is not timed:Time number executions of the main statement. This executes the setup  statement once, and then returns the time it takes to execute the main  statement a number of times, measured in seconds as a float.But if you're not sure, put a big, slow process into the setup statement and test to see what difference it makes.


Answer URL
https://docs.python.org/3/library/timeit.html#python-interface
https://docs.python.org/3/library/timeit.html#timeit.Timer.timeit
