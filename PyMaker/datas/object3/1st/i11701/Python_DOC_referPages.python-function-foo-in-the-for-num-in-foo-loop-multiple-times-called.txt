Natural Text
This question already has an answer here:How does a for loop evaluate its argument                    3 answers                Is foo() called in every repeat of the loop?and if that would be inefficient, is this code better?
No. In both foo() is called only once. The former can be expected to be slightly faster than the latter. Also, list is a name of a built-in function/type, and you shouldn't use it as a variable name.You can use Python bytecode disassembler dis.dis to find out what bytecode is produced by CPython:In the bytecode above, the loop body starts at 10 FOR_ITER and continues until 19 POP_BLOCK. Compare with:Here the loop body starts at position 16, and continues until 25. The bytecode for the loop body is identical; the only differences are the extra opcode STORE_NAME to store the return value of foo() into list, and extra LOAD_NAME to retrieve the value from list.


Answer URL
https://docs.python.org/3/library/dis.html
