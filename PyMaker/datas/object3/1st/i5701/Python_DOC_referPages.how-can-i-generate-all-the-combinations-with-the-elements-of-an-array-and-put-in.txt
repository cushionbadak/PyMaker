Natural Text
How can I do it with itertools or do it efficiently? The length of that list is 557845
You can indeed do this with itertools.product. You also might want to consider itertools.combinations_with_replacement rather than simply itertools.combinations for generating your original list. EDIT: itertools.product might be what you want for the original list as well. If this is the case, then you can go straight to using itertools.product(alphabetALPHABET, repeat=20). (Where alphabetALPHABET is your original string, of course.)However, no matter how you do this, it is going to take a very, very long time. There are 557845^5 elements in your list, or 7311616^5 if you use combinations_with_replacement or itertools.product, as you probably should. That's over 10^28 elements in this new list. Even if you avoid memory issues with a generator:the runtime for this loop will exceed the current age of the universe. This barrier is intractable, no matter how well you know the language or whatever small optimizations you apply. I suggest you try a different approach.


Answer URL
https://docs.python.org/3/library/itertools.html
