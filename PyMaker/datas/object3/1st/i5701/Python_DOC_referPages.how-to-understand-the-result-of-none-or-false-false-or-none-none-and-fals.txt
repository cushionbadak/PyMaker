Natural Text
I thought I understood these two singleton values in Python until I saw someone using return l1 or l2 in the code, where both l1 and l2 are linked list object, and (s)he wanted to return l1 if it is not None, otherwise, return l2.This piece of code is good because it is quite short and seems easy to understand. Then, I write some code to figure out what is going one here.The printed results are as expected. However, when I try to put None and False together. Something really weird happened.So, my guess the rules of return A or B are:return the first True (not None, Not False) value in order (First A and then B)if there is no True value, then the last value will be returned.At last, I run this code to verify my guess.The results seem to prove my theory. But anyone has more explanation?Also, I got something interesting when I use and. Why?
The short answer is that 'and' returns the first false value or last true value and 'or' returns the first true or last false answer....
In python an empty string, set, list, dictionary, other container or 0 are all equivalent to False for logical operations.  Non-empty collections and non-zero numbers are logically True.For an 'or' the last expression will be returned if no logically True expression was previously encountered. That expression will logically evaluated by the above rule.
No need to guess.  For or, Python's Reference Manual says"The expression x or y first evaluates x; if x is true, its value is returned; otherwise, y is evaluated and the resulting value is returned."In other words, x if x else y, where x is evaluated just once and y only if needed.For and, change 'true' to 'false'.The expression x and y first evaluates x; if x is false, its value is returned; otherwise, y is evaluated and the resulting value is returned.In other words, x if not x else y, where x is evaluated just once and y only if needed.


Answer URL
https://docs.python.org/3/reference/expressions.html#boolean-operations
https://docs.python.org/3/reference/expressions.html#boolean-operations
