Natural Text
Here's my code :This is what it prints :Why doesn't the hp1 change inside the health?
To do what you wish to do, you must use a class. This is the closest form of a pointer you will encounter in python.Here is an example :Your question is also a possible duplicate ofPointers in Python? .What is happening here in your program has been explained by the others.
To automatically change the output with any mutations of hp1, you can use a class:Output:
The following line:Is creating a tuple with two values: "you have" and 100 (Note that the value of hp1 is copied, and not referenced). It's then assigning this tuple to a new variable named health1.health1 has nothing to do with hp1. If hp1 get overriden, deleted, thrown away, or anything happens to it, health1 doesn't care.If you are so eager to pass this variable a reference, you can create a wrapper class around the int type:
Because you defined health1 - a (string, int) tuple - as hp1 was still 100 and didn't change it since then. This is not a pointer in C/C++ sense, just a copy by value.
In your code you have done like this,In this code, You defined hp1 as 100, let it be stored in a location 1000You made a tuple names health1 as 'you have', hp1. It will be stored in a location say 2000You subtracted 50 from hp1 making hp1 50, this will make no change to health1 variable because it is stored in different location. But it will change the value of hp1Hope this helps.!!


Answer URL
https://docs.python.org/3/tutorial/
