Natural Text
I am doing some operations in a Python code that are too slow for python. I need to explain a little the global context of what I am doing.I am reading some input from a board in python. It is a continous operation (I read continuously the datas from the board).I need to treat those datas in continous also by doing some computations on those. They are saved in numpys arrays in practice.To increase the speed of thoose computation I would like to run them in C or C++.But as everything is continous, I need a very fast transfer of thoose numpy arrays from python to C++. Thus my question are the following :What is the better way to run a C++ code from python such that the variable transfer from numpy arrays to C++ tables is the fastest possible ? Is it possible in the ideal case that the C++ code "directly" read the numpy arrays in the memory ?I have read some topic about using C++ in Python but I am not sure if the C++ will be run at full speed or if it is just to simply use a C++ code in python (but it will run slower than a fully C++ program).
What you want to achieve can be done by using a precompiled library via cython.Compile your C/C++ code into a dynamic library (.so on *nix, .dll on Windows); export the functions you want to use from python.You can then load the library in your python code using ctypes.cdll.LoadLibrary (https://docs.python.org/3/library/ctypes.html) and pass a pointer to your numpy array using numpy.ctypeslib.ndpointer (https://docs.scipy.org/doc/numpy/reference/routines.ctypeslib.html).If you make sure that the numpy array is continuous, it can be used in C/C++ like expected. 


Answer URL
https://docs.python.org/3/library/ctypes.html
