Natural Text
So there are two tasks that are to be performed simultaneously on a dictionary.Sort the dictionary and extract the top 10 keys along with their valuesIgnore keys which have a certain value while reporting top 10For e.g.So, if I want top 3 while ignoring keys with value 100 and 101 is Right now I am using the following :but it has two problems:I don't know how to add a filter in my expression to ignore certain valuesIt returns a dictionary, in which the keys may be unsorted although they would be top 10 values.I was hoping if there was a way to do it in one go, or a more Pythonic and efficient way instead of doing it in 2 steps, like removing the keys I don't want and then sorting.EDIT : It is not necessary to sort the complete dictionary. I just need to extract the top 10 results along with their values.
to filter datato sort dict by key valueand full your solution
Do this-
Almost the same as @BearBrown's answer. But using built-in features and break it down, for doing it step-by-step:In the end you will get OrderedDict(dict that have order) as you wanted.
You can do it stepwise:The result is a list of tuples with the "value" on [0] - no lambda needed for sorting that way as tuples get sorted by [0] first, then [1]Dictionarys like sets are inherently unordered. And to get the top 10 out of anything you need to sort all of the items to find the biggest ones.Output:
you can try:operator.itemgetter(1) will sort dict by value; and operator.itemgetter(0) will sort dict by key


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
