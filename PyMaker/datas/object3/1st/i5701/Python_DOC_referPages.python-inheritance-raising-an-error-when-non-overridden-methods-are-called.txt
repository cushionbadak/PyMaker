Natural Text
I am writing a subclass of dict that maps from string keys to values of arbitrary types. If a key is a regex, it is stored and queried separately.Because this class will be used by other libraries (which is why I have to use inheritance), I want to make sure that an error is raised when non-overridden methods in the base class are called. How should I do this?
You should inherit from collections.abc.MutableMapping instead of dict.It will fill in the gaps automatically, and also let you know which things you have to implement.In addition to __getitem__ and __setitem__, you’ll also have to implement __delitem__, __iter__ and __len_. If you can’t implement those reasonably, you can raise e.g. NotImplementedError from them (even though that will limit the use of your class a lot).This will have the advantage that all dict methods which only need __getitem__ and __setitem__ (+ what you implement) internally will work out of the box.
Don't subclass. To convince third-party libs that your object is a dict, set __class__ attribute.output:


Answer URL
https://docs.python.org/3/library/collections.abc.html
