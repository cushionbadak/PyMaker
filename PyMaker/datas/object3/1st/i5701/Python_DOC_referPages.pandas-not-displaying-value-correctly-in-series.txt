Natural Text
I have a class called Point() and I want the print out to be WKT instead of the JSON that is given from the service it gets the point.The Point class inherits from dict and everything on the class works great except when I display the column in ipython or print the dataframe object.I've tried the following on the Point class (simplified class):Example:But if I doWhich is the correct desired output.How do I get the DataFrame to honor my classes repr or str?Here is another edit to show very basic issue that I am seeing:The output for the series 'G' isn't honoring the classes __repr__ or __str__.Thanks
I had to go to the github page for Pandas, and found out from the dev team that the pprint function they use does not honor __str__ or __repr__ on iterable objects.  Therefore if you inherit from dict, you will get the default print from a dictionary.  The basic solution would be to not inherit from dict and just use the default object.
what you have overridden here are the built-in functions for object, in python. pandas knows nothing about it. it's correct that when you try to access the item in G in repl you get the correct overriden output because that is what you have dictated at object level. but when you try to print G itself, you will get the object representation not str(object) or repr(object). you can read more here repr(object) Return a string containing a printable representation of  an object. For many types, this function makes an attempt to return a  string that would yield an object with the same value when passed to  eval(), otherwise the representation is a string enclosed in angle  brackets that contains the name of the type of the object together  with additional information often including the name and address of  the object. A class can control what this function returns for its  instances by defining a __repr__() method.in short, overriding __repr__ manipulates what repr() returns, it is not manipulating object representation. foo in G columns are still objects, they are not str(foo).  Therefore you need to give G the str(object) or repr(object) as its items.you are assuming here that when you give objects to DataFrame, pandas is auto-translating object representation to str(object) or repr(object). it's not in this case.initial attempt to your desired result you can do this:


Answer URL
https://docs.python.org/3/library/functions.html#repr
