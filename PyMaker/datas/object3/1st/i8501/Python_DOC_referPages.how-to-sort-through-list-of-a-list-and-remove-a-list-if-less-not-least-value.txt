Natural Text
Currently, this takes the list of the candidates and sorts it so that the candidates with the lowest score are in the first positions, how would I get it so that it checks each list and if the number in the second field is not equal to the first one it deletes this list? I am trying to remove all lists that are not the lowest or equal lowest number in candidate [x][1]:so the following code should only delete candidates [1]Thanks!
The problem with your solution is that you are modifying the candidates list while iterating over the very same list. This causes problems as you probably noticed.Rather than sorted() you can use min() with a key to determine the item with the least value. This gives better performance - O(n) vs. O(n log n) - which might be important if there is a long list of candidates.Furthermore, you would be better off determining the minimum value upfront, store it in a variable, and use that in a list comprehension/filter when comparing items. This avoids multiple redundant calls to min() resulting in a more efficient solution:Note that I use a list comprehension here. They are considered more Pythonic, may have better performance, and can easily be changed into generator expressions which can also yield better performance in many situations.
You can try this, if I don't misunderstand your meaning:Use filter() method to remove the sublist, if the second field is not equal to the lowest score.If you're using Python3.x, you should use list(filter(...))Output:UpdateI forgot that you can use min() to get the lowest score, it is an more efficient way:


Answer URL
https://docs.python.org/3/library/functions.html#min
