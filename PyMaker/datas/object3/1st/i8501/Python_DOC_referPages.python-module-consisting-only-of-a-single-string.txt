Natural Text
It seems to be legal Python code to have a file consisting only of a single quote-enclosed string. The Python interpreter will not complain about the following:If I wanted to keep some one-off value (say an API key) isolated from other configuration settings, is it possible to import a file like this into another script as a module and use the string?The default string representation of the imported module will be something like <module x from y-path>. Can the string value contained within that module be somehow accessed?(To preemptively cut off tangents, I understand I could just read the file as text or assign the value to variable and from module import variable in another script. There are more conventional ways to accomplish related goals. I am asking out of a desire to better understand the language's design and capabilities.)
That string actually ends up being the docstring for the module.So it is accessed by the __doc__ attribute of the module.Python picks up the first loose string it finds in a module, class, or function to determine its docstring.https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring
You can also retrieve your string by using inspect. Which is almost the same as __doc__ except that it also got "cleaned up" by inspect.cleandoc()


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.cleandoc
