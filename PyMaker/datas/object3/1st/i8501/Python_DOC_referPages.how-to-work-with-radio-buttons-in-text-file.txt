Natural Text
I am creating a simple multiple choice quiz in python 3 with tkinteri am planning to add all questions along with answer in a text file. But i don't know how to get my radio buttons to work with text file and then call them. i need a small example so i can complete my program.i have tried to use google and other python documents but i am not getting anything proper.
There are 2 parts you need to understand.First part is to get the values from your text file. How you do this depends on the format of your text file (which you haven't specified). I would suggest you use either a csv (csv documentation) or even a config file (config parser documentation).Once you have the questions and answers loaded into variables, you can assign the values to the radiobuttons. The key point to remember is that radiobuttons in a group all point to one variable. If you programmatically set the variable to a valid option, that button will be selected; if the user selects a radiobutton, the variable will be set to that value - and you can test that value against the answer you loaded from the csv or config file.(From Modern TKinter for the Busy Python DEveloper by Rocci Rossi):Radiobuttons are created using the ttk.Radiobutton function, and typically as a set:Each of the radiobuttons of the set will have the same linked variable, but a different value; when the variable has the given value, the radiobutton will be selected, otherwise unselected. When the linked variable does not exist, radiobuttons also display a "tristate" or indeterminate, which can be checkedvia the "alternate" state flag.  
To show you how it could be done, below is a complete, standalone, tkinter application that illustrates the basics (as well as one or two bonus features).One important point to grasp is that as a whole, all the tk.Radiobuttons together form a functional group, and share a single tk.IntVar control variable to hold the value of which one, if any, is currently pressed. When one in the group is pressed, using it will not only update that button's indicator, but also those of all the others' automaticallyâ€”which eliminates the need for writing any of your own code to make that happen. See this article for more information about tkinter "variable" classes.The question and answer information is read from a plain text file which is structured in a super simple format with only one datum per line. The first line is the question. The second line is the number of possible answers. The third line is the number of the correct answer (counting from 1). Following these three are a variable number of lines which each contain one of the specified number of answers. Optional comments are allowed on any of these lines.Here's an example showing the layout of the data in the question and answer file:Here's the results of it in the running script:[And this is the code:
here is the way I found for this using tkinker


Answer URL
https://docs.python.org/3/library/csv.html
https://docs.python.org/3/library/configparser.html
