Natural Text
I have a list in PythonThere are "groupings" of consecutive 1's and 0's. For my purposes, I am only interested in the consecutive 1's. Let's say if there is a solitary 1, e.g. I would like it to be changed into a 0. Similarly, if there are only pairs of 1's, these should become 0s as well. e.g. should becomeBut "triplets" of consecutive ones or higher are ok. I considered keeping track of the counts of 1s via a dictionary, but this feels too complex. The idea would be to iterate through the list, keeping track of the count of consecutive 1s in a list. But, how do you "go back" and switch the 1s to 0s?
itertools.groupby can help by grouping the list into runs of 0s or 1s. From there, we can use the length of a group of 1s to decide whether to switch it to 0s, and use itertools.chain.from_iterable to fuse the groups back into one stream:
This is an erosion followed by a dilation, common operations in computer vision:The composition of the two operations is called an opening:
You can use methods from image processing for this. The morphological operation "opening" with the structure element [1 1 1]should do the job. Should be a 1-liner.
Using a simple for-loop. Not sure it is the most efficient way, but it does the trick.
You could turn it into a string and use a regular expression to substitute short runs of '1' with equivalent runs of '0', then turn it back into a list:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
