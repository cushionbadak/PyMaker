Natural Text
I have a REST API wrapper which is supposed to run in an interactive Python session. HTTP requests are made both through an automated background thread (which uses the API wrapper) and manually by the end user through the interactive session. I am trying to migrate all HTTP request management to asyncio from the former new-thread-per-request approach, but since I can't run the asyncio loop in the main thread (it has to be free for ad-hoc Python commands/requests), I wrote the following to run it in a background thread:The actual API wrapper is something like the following:However, aiohttp highly recommends against making a ClientSessionoutside of coroutine and turning on asyncio debug mode before initializing ClientSession raises a RuntimeError. Therefore, I tried making a slightly different version using asycio.Queue in order to avoid making a ClientSession inside a coroutine:However, this approach is more complex/verbose and I don't really understand if it is actually necessary.Questions:Why is it a problem starting a ClientSession outside of a coroutine?Is the queue approach better/safer? If so, why?Is there any problem in my approach for starting a loop inside a background thread?
Why is it a problem starting a ClientSession outside of a coroutine?That's how aiohttp is built, in theory it should be possible to initialize some kind of client session outside a loop ie. outside a coroutine but it's not how aiohttp is built. AFAIU in the issue that introduced this warning, it's because a) it's difficult to test b) it's prone to errorIs the queue approach better/safer? If so, why?I don't understand what you try to achieve so I am not sure how to answer. Maybe the problem you have is that you try to initialize a ClientSession inside the constructor aka. __init__ of another class. In this case, you should work around that issue by creating a helper method that is a coroutine that will finish the initialization of the class. This is known pattern when working with async code. Is there any problem in my approach for starting a loop inside a background thread?It's perfectly ok.


Answer URL
https://docs.python.org/3/library/asyncio-dev.html#debug-mode-of-asyncio
