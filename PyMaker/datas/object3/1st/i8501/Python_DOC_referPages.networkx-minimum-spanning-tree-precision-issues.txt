Natural Text
I am creating a graph from a weighted adjacency matrix the size of 222 x 222 nodes. All of the weights given in the matrix are a floating point numbers between 0.42757498546089029 and 1.6671726002927263. nx.minimum_spanning_tree(G, weight = "weight") method gives me the first picture below, meanwhile if I multiply all matrix values by 100.0 the same method gives me the second picture. This doesn't occur while plotting the same with igraph. Documentation of Networkx is silent about precision issues. Do you know why it might occur?networkx code:igraph code:
What you see is expected behaviour and not a precision issue at all. As the name suggests, the spring layout "simulates" the action of springs between your nodes onto their positions. The node positions are initialised on a circle, and then the force of the springs is applied to your nodes for a certain number of iterations (50 by default). With weak connection weights, your nodes will more or less remain on the circle (first case), with strong weights your nodes will gravitate towards the centre (second case). In igraph, by default, the unweighted graph is used to compute the layout and you need to give the plotting routine the weights explicitly. I suspect that you might have plotted the graph without specifying the "weights" parameter. 


Answer URL
https://docs.python.org/3/tutorial/floatingpoint.html
