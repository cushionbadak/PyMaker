Natural Text
python version 3.5.2I tried to get parent class from a child class:after a little research, I got a solution from python doc: use __base__. (a special class attribute)But I couldn't find this "__base__" in B.__dict__ or dir(B), which are my normal ways of getting attributes.This is definitely class related information, if it's not in B.__dict__ where is it? (although I realized that "__base__" is returned by type(B).__dict__)And why isn't dir() returning it? based on this stackoverflow question I read, dir() has some logics behind and it is supposed to return "a complete picture of all available attributes."I initally thought this is hiding on purpose...but you can still easily manipulate a child's parent:
See the note on dir() (emphasis mine):Note: Because dir() is supplied primarily as a convenience for use at an interactive prompt, it tries to supply an interesting set of names more than it tries to supply a rigorously or consistently defined set of names, and its detailed behavior may change across releases. For example, metaclass attributes are not in the result list when the argument is a class.B is a class, its metaclass is type. So if you really want the full picture, you should also look as the metaclassâ€™ dir():And there you have __base__ and __bases__, and also those other things that appeared in the list you linked, like mro and __subclasses__.


Answer URL
https://docs.python.org/3/library/stdtypes.html#class.__bases__
https://docs.python.org/3/library/functions.html#dir
https://docs.python.org/3/library/stdtypes.html#special-attributes
