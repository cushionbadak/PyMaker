Natural Text
I would like to write a unit test that can ensure a SQL statement in a function call is schematically correct. It should test the execution of this call. I would then like to mock the call to commit, so that no insertions to the database take place. I'm using psycopg2 for my tests.I have a function like:when calling test_insert(1,2,3) I see the row inserted into the table. Now I try to mock the call. I've taken a few approaches so far:This seems to work but does not actually call the execution statement. test_insert(1,4,'xyz') fails for instance while test(1,4,'xyz') does not. Next I tried to mock just the commit method of the connection class in psycopg2:but this gives me a syntax errorIs there a good way to do what I am trying to do?
I assume you are using pytest and it is not a good practice to name your functions starting with test_ if they are not actual tests as this will probably raise problems with the testing framework. Therefore I slightly modified your initial snippet as follows and I named the module psyco.pyNext, I created the test for your method by taking into account how patch works and where to patch. As you are dealing with os environment variables this question can help you understand why I mocked it that way.An example implementation of the test could be as follows:


Answer URL
https://docs.python.org/3/library/unittest.mock.html
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
