Natural Text
As part of my unittests, I am testing some responses using the fantastic Requests library. Something cool you can do with this library is test a response for a 200 OK status code by simply calling:The way this works behind the scenes is Requests updates the __bool__() protocol method of the response returned according to the type of status code.What I'd like to do is to be able to mock the response object of requests.get() well enough so that I can not only patch the methods/attributes I'm interested in checking (status_code, json()) but also to be able to return False whenever I choose to.The following isn't working for me, as once I call r from the sample code above, it returns the Mock object <Mock id='2998569132'> which evaluates to True.I thought the answer might lie in Magic Mocking the protocol method's return value, but read here that __bool__ is only supported for Python 3.0.
In python2.7, you should mock __nonzero__ instead of __bool__.m = mock.MagicMock(__nonzero__=mock.Mock(return_value=False), status_code=400)m.status_code  # > 400bool(m)        # > False


Answer URL
https://docs.python.org/3/library/unittest.mock.html#magic-mock
