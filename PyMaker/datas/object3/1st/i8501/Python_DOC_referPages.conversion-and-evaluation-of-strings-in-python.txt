Natural Text
How can I get a Python list from a text file with the following contents?For example:with the types:Means, every string which python understands as int should be from type int.I tried to use eval but it has difficulties with \n and \x00. The user input (list of strings to convert) is assumed to be safe.
WARNING : Using eval is dangerous. Be very careful with it, or, better yet, find an alternative without.That being said, you could define a regex to check if the string looks like something you'd like to eval. For example, anything with only numbers, spaces and mathematical operators could be deemed safe:With Python3, you might use ast.literal_eval, which might be a little less dangerous than a plain eval :Yet another alternative would be to use @poke's "expression evaluation algorithm", since literal_eval doesn't understand '2 * 3'.Finally, even a "safe" expression like '2**2**2**2**2**2**2**2**2**2' could bring your server down.
how about:output:
Let's get serious about avoiding dangerous eval here >:)Yes, I took a couple of assumptions here, but you can modify them to suit your needs as strictly as you really need. The AST is pretty easy to understand. When you do a parse, you get a Module. Inside the Module is a Statement. Inside that is (most likely) discard code (that just means it isn't being used anywhere).If it isn't discard code, we assume it's a string. For one thing, this is likely to prevent any dangerous side effects from eval. (Someone prove me wrong here – wrap a dangerous expression in discard code.)Inside that is the meat of your expression – from there I assume that anything that is a plain string will appear to be a name in the AST. Anything that isn't a name is probably a number or a math operation.I think eval should be safe at this point, which is necessary if the expression is really math.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
