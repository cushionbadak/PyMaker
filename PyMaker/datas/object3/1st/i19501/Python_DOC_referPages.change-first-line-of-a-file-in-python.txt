Natural Text
I only need to read the first line of a huge file and change it.Is there a trick to only change the first line of a file and save it as another file using Python? All my code is done in python and would help me to keep consistency.The idea is to not have to read and then write the whole file.
shutil.copyfileobj() should be much faster than running line-by-line. Note from the docs:Note that if the current file position of the [from_file] object is not 0,  only the contents from the current file position to the end of the  file will be copied.Thus:
If you want to modify the top line of a file and save it under a new file name, it is not possible to simply modify the first line without iterating over the entire file. On the bright side, as long as you are not printing to the terminal, modifying the first line of a file is VERY, VERY fast even on vasy large files.Assuming you are working with text-based files (not binary,) this should fit your needs and perform well enough for most applications.
Unless the new line is the same length as the old line, you can not do this. If it is, you could solve this problem through a mmap.
The sh module worked for me:
An alternate solution that does not require iterating over the lines that are not of interest.
The solution i would use is to use  create a file missing old first linefrom_file.readline() # and discard    shutil.copyfileobj(from_file, tail_file)then create a file with the new first linethen use the following to concatenate the newfirstline file and tail_file


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.copyfileobjeobj
