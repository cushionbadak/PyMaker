Natural Text
I have a data in format:id1   id2   valueSomething likeand so on.I want to convert it in json format:So, from the original data to above format.. the nodes contain all the set of (distinct) names present in the original data and the links are basically the line number of source and target in the values list returned by nodes.For example:1 is in the first element in the list of values holded by the key "nodes"234 is the second element in the list  of values holded by the key "nodes"Hence the link dictionary is {"source":1,"target":2,"value":0.2}How do i do this efficiently in python.. I am sure there should be better way than what I am doing which is so messy :(Here is what I am doingfrom collections import defaultdict
Don't construct the JSON manually. Make it out of an existing Python object with the json module:Now, you can use json.dumps to get a string:
I'm assuming by "efficiently" you're talking about programmer efficiency—how easy it is to read, maintain, and code the logic—rather than runtime speed efficiency. If you're worried about the latter, you're probably worried for no reason. (But the code below will probably be faster anyway.)The key to coming up with a better solution is to think more abstractly. Think about rows in a CSV file, not lines in a text file; create a dict that can be rendered in JSON rather than trying to generate JSON via string processing; wrap things up in functions if you want to do them repeatedly; etc. Something like this:


Answer URL
