Natural Text
I have a Flask server running in standalone mode (using app.run()). But, I don't want any messages in the console, likeHow do I disable verbose mode?
You can set set level of the Werkzeug logger to ERROR, in that case only errors are logged:Here are a full working example testet on OSX, Python 2.7.5, Flask 0.10.0:
Another reason you may want to change the logging output is for tests, and redirect the server logs to a log file.I couldn't get the suggestion above to work either, it looks like loggers are setup as part of the app starting. I was able to get it working by changing the log levels after starting the app:Unfortunately the * Running on localhost:9151 and the first health check is still printed to standard out, but when running lots of tests it cleans up the output a ton."So why log_names?", you ask.  In my case there were some extra logs I needed to get rid of.  I was able to find which loggers to add to log_names via:Side note: It would be nice if there was a flaskapp.getLogger() or something so this was more robust across versions.  Any ideas?Some more key words: flask test log remove stdout outputthanks to:http://code.activestate.com/lists/python-list/621740/ and How to change filehandle with Python logging on the fly with different classes and imports
@Drewes solution works most of the time, but in some cases, I still tend to get werkzeug logs. If you really don't want to see any of them, I suggest you disabling it like that.For me it failed when abort(500) was raised.
In case you are using WSGI server , please set the log to None
This solution provides you a way to get your own prints and stack traces but without information level logs from flask suck as 127.0.0.1 - - [15/Feb/2013 10:52:22] "GET /index.html HTTP/1.1" 200
A brute force way to do it if you really don't want anything to log into the console beside print() statements is to logging.basicConfig(level=logging.FATAL). This would disable all logs that are of status under fatal. It would not disable printing but yeah, just a thought :/EDIT:I realized it would be selfish of me not to put a link to the documentation I used :)https://docs.python.org/3/howto/logging.html#logging-basic-tutorial


Answer URL
https://docs.python.org/3/howto/logging.html#logging-basic-tutorial
