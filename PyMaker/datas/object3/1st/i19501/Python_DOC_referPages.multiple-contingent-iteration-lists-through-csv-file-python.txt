Natural Text
I'm on a Windows 7 x64 workstation running Python 2.7.3.I have a CSV file containing rows of item IDs, with each row belonging to a group ID, like so:What I need to do is generate a list of tuples, wherein each tuple is a string of the GroupID and a list of each ItemID associated with the GroupID, like so:So far I've thought of using a function or list to set conversion to de-duplicate the GroupID column, then doing some sort of comparison if statement on a second loop through. Could anyone give me some advice please? Thanks!
You are looking for itertools.groupby():Make an iterator that returns consecutive keys and groups from the  iterable. The key is a function computing a key value for each  element. If not specified or is None, key defaults to an identity  function and returns the element unchanged. Generally, the iterable  needs to already be sorted on the same key function.For example:We combine this with an operator.itemgetter() to say we want to group by the first item in the row, then we use a nested list comprehension to extract the data we want. Which gives us:Naturally, unless you need a list, it is better to use a generator expression here to do the operation lazily. (We use a list comprehension here to get nice output).Note that I assume your file is comma separated like you say, not as shown in your example. If it's tab separated, use csv.reader(file, dialect=csv.excel_tab) to parse it correctly.
If the grouping key is sequential, then something like:Otherwise, use a collections.defaultdict.


Answer URL
