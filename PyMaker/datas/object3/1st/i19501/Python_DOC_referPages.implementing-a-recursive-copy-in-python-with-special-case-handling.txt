Natural Text
I'd like to implement a version of cp -r in Python that handles certain directories in a special way. If you do mycp.py -r indir outdir, I'd like indir and all of its files/subdirectories to be copied exactly into outdir, except for certain filenames. What is the most portable way to do this in Python? Example: I have this directory structure:file1 is a file and specialdir is a directory containing a file myfile.bar. I'd like to copy dir1 and all of its contents, but handling specially directories that have *.bar files in them. In this case only specialdir meets the criteria. I'd like to mycopy to copy all of dir1 but replace any special directories with a zipped version of themselves. In the above example that would mean copying dir1 as is, but replacing specialdir with specialdir.zip that might contain a processed version of myfile.bar.I tried to follow the suggestion below but I'm not sure how to deal with the copying:If I try it it correctly detects the special directories:how can I make make it insert specialdir in the right corresponding place in copy_dir1? I'd like copy_dir1 (the destination dir) to have exactly the same structure as dir1 (the source dir) except with special handling of directories containing the .bar files.
It sounds like you want shutil.copytree utilizing the ignore parameter:If ignore is given, it must be a callable that will receive as its arguments the directory being visited by copytree(), and a list of its contents, as returned by os.listdir(). Since copytree() is called recursively, the ignore callable will be called once for each directory that is copied. The callable must return a sequence of directory and file names relative to the current directory (i.e. a subset of the items in its second argument); these names will then be ignored in the copy process. 'ignore_patterns()' can be used to create such a callable that ignores names based on glob-style patterns.So something like this should work:Edit for expanded question and exampleHere's an example.  The simplified ignore function still creates an empty special directory, but it is easy to delete before doing the special zip copy.  I also nested the special function so my_copy could be used more than once without relying on using a global variable.  Doing the zip is an exercise for the user:Output


Answer URL
