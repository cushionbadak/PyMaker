Natural Text
Suppose I have read all the lines of a text file as follows:Now, suppose I have the following regular expression:I can useto obtain a list of matches, but what I want is a list of matching groups.  For example, instead of output like:I want output like:How can I do this?
The inner loop, (rgx.match(line) for line in f) is a generator expression that acts like apply().  For each line in the file, it calls rgx.match() and yields up the result, an SRE_Match object (I usually just call it a "match object").The outer loop has if m which discards any result that does not evaluate true (re.match() returns None when the pattern doesn't match).  Then m.group(1) uses the match object to get the text from inside the parentheses.  See the documentation for the re module for details.  Since the outer loop is part of a list comprehension, a list of results is built and returned.
Since the prefix and suffix are fixed string, you can use look-around:I think there should be some way to use your regular expression to do the job, though.
You get "match" objects back from the match command (unless you implicitly turn it into a string using filter), alas. there isn't decent documentation available via. ipython help but it is online: http://docs.python.org/3/library/re.html#match-objectsEg.



Answer URL
