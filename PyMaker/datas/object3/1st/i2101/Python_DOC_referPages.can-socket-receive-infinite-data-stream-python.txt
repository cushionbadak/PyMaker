Natural Text
While trying to attempt to go for python based socket, I have 2 questions which I am not able to resolve. Kindly help me. Here is my sample socket code:  The above one is server and the below is client:  Now the questions:   1) What is the meaning of the number in this statement: client.recv(4096)? What is 4096, is it bit or byte of kilobyte for data receiving?  2) Can I receive infinite data stream through the socket? Meaning, as this statement client.recv(4096), whatever is the menaing of 4096, may be byte, then the socket will receive the 4096 bytes of data only. I do not have a control on the size of data received through the socket, hence, can I generalize it to accept any size of data through socket?Please help me get the answers to above queries. I tried the python documentation for socket but didn't found much. I guess I miss something. Please help me get through it.
According to documentation "If a message is too long to fit in the supplied buffer, excess bytes may be discarded depending on the type of socket the message is received from."found here"https://linux.die.net/man/2/recv"which was from python 3.6 docs "he maximum amount of data to be received at once is specified by bufsize. See the Unix manual page recv(2)"found here"https://docs.python.org/3.6/library/socket.html"so it is a bytes object and it may actually truncate the message depending on the protocol. So message integrity is handled by the next layer up. So presumably you would loose part of a UDP packet, and you would get either a retry or an additional packet for TCP if the message was too large to fit in the buffer.


Answer URL
https://docs.python.org/3/library/socket.html
