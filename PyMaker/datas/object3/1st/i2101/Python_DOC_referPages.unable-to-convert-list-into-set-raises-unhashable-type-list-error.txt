Natural Text
So I'm trying to find all sub-lists of a list and here is what I have now. I'm new to Python and I don't understand why " Q3_ans=set(ans)" raises an error. I've tried to convert a list to set before and it works.Here is the error when I run my code    y=[1,2,3,4,5]
As you can figure out why, immutable types like lists can't be hashable, so can't be converted to a set. You can try returning tuple instead; an immutable counterpart for list:thenYou can read more about tuple type in the documentation.
Here's the essence of the problem:So, what does that mean?set([iterable])Return a new set ... object whose elements are taken from iterable. The elements of a set must be hashable.hashableAn object is hashable if it has a hash value which never changes  during its lifetime (it needs a __hash__() method), and can be  compared to other objects (it needs an __eq__() method). Hashable  objects which compare equal must have the same hash value.Hashability makes an object usable as a dictionary key and a set  member, because these data structures use the hash value internally.All of Pythonâ€™s immutable built-in objects are hashable; mutable  containers (such as lists or dictionaries) are not.The keywords here are mutableMutable objects can change their value but keep their id(). and immutableAn object with a fixed value. Immutable objects include numbers,  strings and tuples. Such an object cannot be altered. A new object has  to be created if a different value has to be stored. They play an  important role in places where a constant hash value is needed, for  example as a key in a dictionary.So, you can't use a list as set element. A tuple would work:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
https://docs.python.org/3/library/stdtypes.html#set
https://docs.python.org/3/glossary.html#term-hashable
https://docs.python.org/3/glossary.html#term-mutable
https://docs.python.org/3/glossary.html#term-immutable
