Natural Text
I am learning about classes and wanted to find out how python keeps track of what the type of an object is. I would imagine, that it is easy to tell what the type of an int is because it is a built in type How does python know that this object is of type p. I understand, that if I wanted to know the type of p1, I would call type(p1), but I was wondering how the type is represented in memory. I thought that it is an attribute inherited from the object class that gets set when I call the constructor, but when I call print(object.__dict__), there is no type attribute. 
I don't want to confuse you with metaclasses yet, so I'll be giving a brief explanation. The __class__ attribute of an object returns the class of that instance, which you are referring "type" here.returns this.The __main__ is the module and Point is the class obviously.However there is more than this. Classes are also objects and when you callIt returns type, and type is a metaclass in Python. Basically the class of a class is type.
Builit-in dir will give you list of valid attributes for that object.Your example:Then


Answer URL
https://docs.python.org/3/library/functions.html#dir
