Natural Text
I have a csv which contains text like when I run the code like below:it will project as follow:But I want to display as a series of words like below:Is there anything wrong in the code?
Your example looks like you simply need
The example you provided doesn't look like a csv file. It looks like a simple text file. The you could have something as simple as : Input.txtSolution.pyThis is taking advantage of:A file object can be iterated on. This will give you a new line from each iterationEvery line received from the file will have newline character at its end. Since you seem to not want it we use the method .rstrip() to remove itThe .join() method can accept any iterable even a...Generator expression which will help us create an iterable that will accepted by .join() using .rstrip() to format every line coming from the input file.EDIT: OK let's decompose further my answer:When you open a file you can iterate over it. In the most simple way to explain it, let's say that it means that you do a loop over it (for line in input_file: ...). But not only that, but with an iterator you can create another iterator by transforming each element. This is what a list comprehension or, in the case I have chosen, a generator expression does. So the expression (x.rstrip() for x in input_file) will be a iterator that takes every element of input_file and applies to it .rstrip()The string method .join() will glue together the elements provided by an iterator using that string as a separator. Since I use here an empty string there won't be a seperator. I have used the iterator defined before for this.I then print() the string provided by the .join() operation explained before.I did a minor correction on my answer because there is the edge case that if there are space or tab characters at the end of a line in the input file they would have been removed if I use x.rstrip() instead of x.rstrip('\n')
You could start with an empty string, and for every row read from the csv file, remove the newline at the end and add the contents to the empty string.Output:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.rstrip
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/tutorial/classes.html#generator-expressions
https://docs.python.org/3/library/stdtypes.html#str.rstrip
https://docs.python.org/3/library/stdtypes.html#str.join
