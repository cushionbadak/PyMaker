Natural Text
i am trying to grasp Regexp using python. I am trying to match patterns wherein the first character of the block of characters cant be a number while the rest can be any number or character or _. The first char can only be _ or characters. e.gMy code: This accepts -john too whereas it should only accept _ or a-z in first place.
This would find nothing for -john but find _john:Output:The difference is I prepended ^ to the pattern, meaning: beginning of line.From the doku: https://docs.python.org/3/library/re.html#re.searchre.search(pattern, string, flags=0)  Scan through string looking for  the first location where the regular expression pattern produces a  match, and return a corresponding match object. Return None if no  position in the string matches the pattern; note that this is  different from finding a zero-length match at some point in the  string.re.search is not contstrained to find at the begin of a string - use re.match(pattern, string, flags=0) for an implicit "find at string beginning" search:
Problem here lies in your boundary: it matches the boundary between - and a letter.You have to rework it another way.I chose to use a lookbehind to match only when not preceded by a non spacing character, replacing \b by (?<!\S):(?<!\S)[_a-z][-a-z0-9.]*NB: The trailing word boundary is useless, as trying to match [-a-z0-9.]* will always stop when no more is met.


Answer URL
https://docs.python.org/3/library/re.html#re.search
