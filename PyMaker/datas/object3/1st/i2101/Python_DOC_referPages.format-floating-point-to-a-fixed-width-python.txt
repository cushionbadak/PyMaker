Natural Text
I don't care about the placement of the decimal point, and would like to print in scientific notation when appropriate to display with maximum accuracy.  However, I would like to round appropriately to maintain a fixed width, ragged left or ragged right is fine.e.g.EDIT to clarify the examples, the width formatting specifier does not provide a fixed width.  It provides a minimum width.  How do I obtain a fixed width representation?
the g format specifier is generally good if you want scientific notation, i.e:should do the right thing:I realised later that the above function doesn't do what the OP wantedBased on helpful comments from @a_guest I've come up with the following:I now get ['4.56e-08', '12.345679', '1.2346e+16'] back which is closer to what was wanted.I've tested this by generating a lot of random numbers using:pretty arbitrary, but generates numbers reasonably close to the distribution I care about.  I.e. mostly around 1, but some very small and large with decent probability.I've passed numbers from this to my_format 100k times and I get appropriately formatted numbers back.
You can test to format the number in both {:f} and {:e} and then parse the resulting strings to see which one fits better:
what you need is a way to maintain the number of characters displayed. So create a function to do that.
This seems to work.  It is possible to get rid of numpy, but the rounding would require a little more work.


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
