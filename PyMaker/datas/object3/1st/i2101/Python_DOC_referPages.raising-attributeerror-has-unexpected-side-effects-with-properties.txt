Natural Text
Given a contrived Python class:Calling Item().thing_a() produces the expected output:However, I really want thing_a, thing_b, and nonexistent_thing to be properties. So, if I change my code to:and call Item().thing_a, I get an unexpected result:Uh-oh... the print() output appears to be the reverse of the execution order, and the message for AttributeError is for thing_a, which does exist.During my experimentation to figure this out, I discovered that changing AttributeError to a plain old Exception makes everything work ok:So, it seems AttributeError itself doesn't play well with @property, possibly because it's being caught somewhere by the property object. But AttributeError appears to be the most appropriate exception for __getattr__ to raise, and it's not ideal to raise an Exception without subclassing.Is anyone able to shed some light on this problem, and know of a way to have @property and __getattr__ with AttributeError work together in harmony?I've tried this in Python 2.7 and 3.6.EDIT: Added (contrived) logic for __getattr__ to respond to if name starts with "exists". I do want it to fail for nonexistent_thing, but I want it to raise AttributeError at the correct time with the correct name.
The missing piece to the puzzle is that @property is a descriptor (an object which implements __get__ / __set__ / __del__ to participate in attribute lookup).Implementation of descriptors is done via the __getattribute__ magic method.The important bit of the implementation here from the docs (emphasis mine):Called unconditionally to implement attribute accesses for instances of the class. If the class also defines __getattr__(), the latter will not be called unless __getattribute__() either calls it explicitly or raises an AttributeError.To illustrate with your example a little further:The call sequence goes:The calls to __getattr__ are in response to AttributeErrors during descriptor resolution in __getattribute__.Here's the output of the above python snippet:


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/reference/datamodel.html#object.__getattribute__
