Natural Text
I have a class A with multiple fields a, b, c. I have a list of objects of this class A. Now, I want to extract 3 lists, first containing the field a's values from all the objects, second list containing the field b's values and third c's values. I found the below answersThis answer says I can use list comprehension as belowThis answer says to use Generator Expressions to conserve memoryNow, my question is will this work when I want to extract multiple attributes? If I write the line 3 times as belowI'll be iterating through out the list 3 times. Won't it be costly? In that case, is it better to use for loop?Which is faster? Which is a better approach. Is there any other better optimized way?Thanks!
Anytime you think "is X faster then Y" you need to measure. You can devise a way to not pass your list three times. This "way" then might still not be faster though, due to it making the whole code more complicated and computational expensive.One way to not go through the list of object trice is leveraging zip and map like so:Objects:Result:You would still have to measure if thats faster then going through a list of objects trice.zip()map()And even if it would be slower for 18 elements it might be faster for 2 millions. So it is highly circumstantional what to use.Timings:Result:


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#map
