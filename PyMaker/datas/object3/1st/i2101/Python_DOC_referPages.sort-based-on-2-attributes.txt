Natural Text
I'm trying to sort numbers in lexicographical (reverse) order and from shortest to longest number. So for example the numbers 9989, 989, 9 should be rearanged as 9, 9989, 989.I'm trying this code:but it only does a right job when the numbers have the same length. How should I fix it so that shorter numbers would come before longer numbers (i.e., 9 before 99)?
Something like this?
This is what I came up with, similar idea to @Andyk's solution but avoiding a double sort and using int input. It requires importing math.inf to handle, for example, [9989, 989, 999, 9, 99].
You can hardly write a meaningful key function in Python 3 for this type of sorting without resorting to a comparator function and then using functools.comp_to_key to make it into a key function.Check which of the items is larger up to their minimum length (using zip to iterate on both stops at min length), if both are same, check their lengths:The sort function is quite readable, does not process further when the items are equal, and with zip, stops on the min length; adaptive.


Answer URL
https://docs.python.org/3/library/functools.html#functools.cmp_to_key
