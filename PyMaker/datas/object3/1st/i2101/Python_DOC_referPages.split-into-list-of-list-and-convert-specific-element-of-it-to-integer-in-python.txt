Natural Text
Suppose we have a string:I want to make A into a list of list with the first element still str and second element converted to int:What i have done is :Any suggestion?
You can just get the values without lambda:[[s.split('\t')[0], int(s.split('\t')[1])] for s in A.strip().split('\n')]Note: strip() is added to parse out the trailing '\n'.
I think you are overcomplicating this. You don't need an anonymous function here at all. First, split the string, then iterate over groups of two from the resulting list and convert the second element of the pairs to int. For the second part, the itertools documentation has a recipe called grouper. You can either copy-paste the function or import it from more_itertools (which needs to be installed).Finally, if you want to flatten the result, apply itertools.chain.
If you like to use lambda, here's a simpler way;


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
