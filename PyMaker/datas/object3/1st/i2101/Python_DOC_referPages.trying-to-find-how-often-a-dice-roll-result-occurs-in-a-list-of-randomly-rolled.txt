Natural Text
I am trying to find the occurrences of each number for sides going 1 up to the number of sides on a dice roll. I would like the program to find the number of occurrences for each number that is in listRolls. Example: if there were a 6 sided dice then it would be 1 up to 6 and the list would roll the dice x amount of times and I would like to find how many times the dice rolled a 1 so on and so forth. I am new to python and trying to learn it! Any help would be appreciated!
Fastest way (I know of) is using Counter() from collections (see bottom for dict-only replacement):collections.Counter([iterable-or-mapping])) is a specialized dictionary that counts the occurences in the iterable you give it. random.choices(population, weights=None, *, cum_weights=None, k=1) uses the given iterable (a range(1,7) == 1,2,3,4,5,6 and draws k things from it, returning them as list. range(from,to[,steps]) generates a immutable sequence and makes random.choices perform even better then when using a list.As more complete program including inputting facecount and throw-numbers with validation:Output:You are using python 2.x way of formatting string output, read about format(..) and its format examples.Take a look at the very good answers for validating input from user: Asking the user for input until they give a valid responseReplacement for Counter if you aren't allowed to use it:
You could trim this down a bit using a dictionary. For stuff like dice I think a good option is to use random.choice and just draw from a list that you populate with the sides of the dice.  So to start, we can gather rolls and sides from the user using input(). Next we can use the sides to generate our list that we pull from, you could use randint method in place of this, but for using choice we can make a list in range(1, sides+1).  Next we can initiate a dictionary using dict and make a dictionary that has all the sides as keys with a value of 0.  Now looks like this d = {1:0, 2:0...n+1:0}.From here now we can use a for loop to populate our dictionary adding 1 to whatever side is rolled.  Another for loop will let us print out our dictionary. Bonus. I threw in a max function that takes the items in our dictionary and sorts them by their values and returns the largest tuple of (key, value). We can then print a most rolled statement.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/random.html#random.choices
https://docs.python.org/3/library/functions.html#func-range
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/library/string.html#format-examples
