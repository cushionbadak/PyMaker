Natural Text
Consider a C style nested for loop like so:What is the recommended python translation for that?Following Effective Python, which dictates that range(len(something)) should be avoided and enumerate should be used wherever possible, I'm thinking of:but mix of enumerate and range appears inconsistent.Whereas,looks consistent but uses range(len(some_iter)).What is the recommended Python style for this?
As written, you're not actually using i or j for anything, so the nested loop is nonsense; you could just loop a calculated number of times as a single top-level loop.That said, it follows the pattern commonly seen for processing all unique pairings from a given input sequence, and that is a solved problem in Python:is the Pythonic equivalent, without unnecessary indexing, of:If you also needed the index, just pair it with enumerate:Using itertools.combinations_with_replacement (with or without enumerate) is going to be more efficient, and more general: If you're relying on indexing, you limit your inputs to sequences, so arbitrary iterables (set, dict, generator expressions, etc.) won't work without converting them to a sequence first. Using the Pythonic approach means you can accept and work with any finite iterable without needing to perform manual type conversions and indexing.
I try to use for item in itemList: whenever I can, instead of using i as a variable, and i as an iterator.so the second for loop slices the list from the index of the current item to the end.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations_with_replacement
