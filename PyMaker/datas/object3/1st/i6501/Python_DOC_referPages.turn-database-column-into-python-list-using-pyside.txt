Natural Text
Using PySide/Qt's QSqlTableModel is there a quick, elegant way to turn a database column into a Python list? In R, for example, this would be one, short line of code. Right now, I'm manually looping over rows in Python, which seems cumbersome for a high level language:
There is no need to create a model just to get a set of values. It is much simpler and more efficient to use a query to get the values. This won't give you a one-liner - but one of the main strengths of Python is its readability, not its brevity.The example below could easily be adapted to create a generic function that took a query-string and returned a list (or iterator) of values:EDIT:Here is a generic fetchall function (akin to cursor.fetchall in the python's sqlite3 module). My implementation of this takes either a query string or an active QSqlQuery object, and returns either a list of values (for one column) or a tuple of values (for multiple columns):This could also be implemented as a generator, which would be more suitable for very large result sets.EDIT2:If you use a model for querying then, once the rows have been selected, you can use a list comprehension to pull out the column values:
The PySide layer is nearly 1 to 1 for all the Qt methods in C++.  Some C++ code is given below.Because the Qt Sql layer is abstracted for the backend database type, and geared towards Gui interfaces on an event loop, it doesn't have the same one liners available that R or other languages may have.  Though you can do it in a few lines.  Also Qt's error handling methods for SQL is usually through querying the last error or looking at the return of the exec or the open call.  Tuples aren't native in C++, so the python interface doesn't heavily use tuples.http://doc.qt.io/qt-4.8/sql-sqlstatements.htmlhttp://doc.qt.io/qt-4.8/qsqltablemodel.html#detailsAlternate syntax specifying the queryhttp://doc.qt.io/qt-4.8/qsqlresult.html#sizeThe real power of Qt's Sql interface is in how easy it is to make a GUI for representing a database in almost any sort of configuration you can think of, and how it is abstracted from the database engine.Even with all that said about how Qt handles it's SQL calls... it still is on par with other Python libraries for interacting with databases:How to retrieve SQL result column value using column name in Python?Hope that helps.


Answer URL
https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.fetchall
https://docs.python.org/3/library/sqlite3.html#module-sqlite3
