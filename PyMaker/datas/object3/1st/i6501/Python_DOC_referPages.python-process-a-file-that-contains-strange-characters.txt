Natural Text
I have a strange text file that I am required to replace any social security number with XXX-XX-XXXX.  Great!  Simply suck the file in, regex that junk out, and write the file out.  Loving life, this will be easy as pie.  My acceptance criteria is that I can only change the SSNs the rest of the file must stay exactly the same since it has fixed width columns and even strange characters must be kept for debugging other processes.  OK, cool, I got this.I read the file in:filehandle = open("text.txt", "r", encoding="UTF-8")And it gives me some encoding errors like this: I can't figure out the encoding.  I've tried chardet and it thinks it's ASCII but I just get a different encoding error.  I just need a way to suck this file in, do a simple regex and put it back out.  I can put in:And it won't crash but ends up stripping out some of the strange characters which then throws the spacing of the columns off.  Here is an example of one of the characters I'm talking about with it's hex (need to use images since I can't copy/paste it here):The 4E is the 'N' in CHILDRENThe EF BF BD make up the .. stuffThe 53 is the S in CHILDRENI'm sure this is part of the problem.  So, what should I do to simply:Take the file in, use a regex to simply change \d{3}-\d{2}-\d{4} to XXX-XX-XXXX where the file has some weird characters in it without changing anything else in the file?  Thank you all!
You should open your file in binary mode and avoid processing Unicode decoding of UTF-8.Then use a bytes regular expression to find the social security numbers and replace the found places with relevant bytes.


Answer URL
https://docs.python.org/3/howto/unicode.html
