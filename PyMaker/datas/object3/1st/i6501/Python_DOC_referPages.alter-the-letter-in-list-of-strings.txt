Natural Text
An example:I'm trying to remove any word from the list of words which is a separate word in the string of text. The string of text should be converted to lower case before I check the elements of the list of words are all in lower case. There is no punctuation in the string of text and each word in the parameter list of word is unique. I don't know how to fix it.output:expected:
I've done it like this:text.lower().split() returns a list of all space-separated tokens in text.The key is that you're required to alter word_list. It is not enough to return a new list; you have to use Python 3's list methods to modify the list in-place.
If the order of the resulting list does not matter you can use sets:This function will update word_list in place due to the assignment to the list slice with word_list[:] = ...
1Your main problem is that you return a value from your function, but then ignore it.  You have to save it in some way to print out, such as:What you printed is the original word list, not the function result.2You ignore the text parameter to the function.  You reuse the variable name as a loop index in your list comprehension.  Get a different variable name, such as3You still have to involve text in the logic of the list you build.  Remember that you're looking for words that are not in the given text.Most of all, learn basic debugging.See this lovely debug blog for help.If nothing else, learn to use simple print statements to display the values of your variables, and to trace program execution.Does that get you moving toward a solution?
I like @Simon's answer better, but if you want to do it in two list comprehensions:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
