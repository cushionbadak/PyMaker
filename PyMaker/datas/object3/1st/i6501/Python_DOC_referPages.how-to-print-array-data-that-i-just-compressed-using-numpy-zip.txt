Natural Text
I am trying to figure out how to see the the data from the zipped content.The scenario is as follows in the code:outputbut i want to see the data inside the zip so when i say it showsnow people are discussing in similar posts about D_stacking like..but it shows the output as a error0 dimension..?what does this mean..?it says the same for other possible solution i found as Decompressing ziperrorthen i went thrugh zip() function in programiz.com there i found set() function..errori believe I'm doing something bad in basic x,y,z data.. but my knowledge is limited to the level of whatever you think about me.. could you please help me with things I'm missing and also explain that lil important point i missed.When I search for TypeError: iteration over a 0-d arraypeople talk about json which I have 0 idea other then FC3, sorry for that.
zip of a tuple of lists is a kind of list transpose:But in Py3, zip is generator like; you have to wrap the result in list (or iterate on it) to get a list:So far I'm not using numpy, just plain Python.  zip documentation: https://docs.python.org/3/library/functions.html#zipYou can make an array from such a listTrying to make an array from the zip produces a single element array,  0d, that contains a pointer to this zip object.  There's little point doing anything more with this.But to get a 2d matrix from these lists it is easier, or at least more direct, to use some version of concatenate, which takes a list of arrays or lists.  stack for example lets you specify a new axis to join things:A common use of zip is to iterate on several lists at once:From the comments you seem to be focused on fetching values from this array:You can pull an item out of a 0d array with a [()] index.  data.item() also works:Now you can apply list and see the items:zip doesn't actually contain its arguments.  Rather it has references to the original lists.  That's true of the data arrays as well.
Do you need to zip the data? You can pass NumPy a list of lists, e.g.:output:


Answer URL
https://docs.python.org/3/library/functions.html#zip
