Natural Text
I have a list of items: list = [a, b, c, d]I'd like to modify each item and then time.sleep(10) before moving on to the next iteration. On the final iteration, I'd like to modify the item, but avoid sleeping.  Doesn't have to be this structure--looking for any method that gets the job done.
Yet another solution using enumerate:output
You could sleep first, but skip sleep the first iteration sleep, instead:It falls off at the last item, without sleeping.
If you inverse the problem and add a boolean to signal the first element you can do this:
You can use enumerate to track index :
If you want to avoid testing for the last element at each iteration.In case the changes needs to be applied to the elements within the list (without creating a new one).If you want to avoid copying the list you can use islice. Note that len([]) has O(1) cost.



Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
https://docs.python.org/3/library/itertools.html#itertools.islice
