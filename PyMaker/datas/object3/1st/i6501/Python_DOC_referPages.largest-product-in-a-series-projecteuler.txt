Natural Text
The ProjectEuler's problem 8 states:The four adjacent digits in the 1000-digit number that have the  greatest product are 9 × 9 × 8 × 9 = 5832.Find the thirteen adjacent digits in the 1000-digit number that have  the greatest product. What is the value of this product?I know that there are various solutions for this excercise available, but I don't want to spoil myself. I have a certain algorithm in mind: calculating the product of the first thirteen digits d_1, ..., d_13, then move one to the right and calculate the product of d_2, ..., d_14, and if this product is greater then the product before, this is supposed to be our new greatest product and so on, until we reach the end of the digits. But I don't see how I would go about something like this in Python. Naive as I am, I tried to copy the whole 1000 digit number, but yeah, I guess this isn't what I am supposed to do here. But how am I able to work with this number then?
To read in the number as a string you can use Python's implicit string literal concatenation:Once you have the string, you can read the digits in chunks of the required length and calculate the product. For that, the reduce() function may be useful:


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
