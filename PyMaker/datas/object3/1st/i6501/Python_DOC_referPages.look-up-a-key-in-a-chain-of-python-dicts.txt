Natural Text
Is there a built-in way in Python to look up a key k in a dict d and, if the key is not present, look it up instead in another dict e?Can this be extended to an arbitrarily long chain of dicts d => e => f => ...?
You could use a collections.ChainMap:This would output:Notice that the lookup for key 'b' was satisfied by the first dictionary in the map and the remaining dicts where not searched.ChainMap was introduced in Python 3.3
If you're using Python < 3.3, ChainMap isn't available.This is less elegant, but works:You add all the dicts to a list, and use a method to look over them.
May be like below:


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
