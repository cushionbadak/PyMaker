Natural Text
I am writing a Python function to pick out objects from a sorted list which have a date stamp within a certain range. The user provides a start and end date. They can leave either of them blank if they want to use the beginning/end of the list as the start/end dates, respectively. If the user provides date(s), they are able to choose whether to include or exclude them. Currently, my function looks like this:(I can post the rest of the function if it will help, but it's the same few if statements, tweaked for the absence of start_date and end_date).My question is: Is there a way of preparing the if statements marked with the # symbol so that the code can be condensed a little? Perhaps in a way analogous to Python string formatting, e.g.where I can assign op1 and op2 to be < or <= at the beginning of the function.This is the first question I've ever submitted, so please let me know if there's any other information I can provide to help/clarify. Thank you!
One way to remove the need for all the different comparisons is to setup the start and end date in the beginning of your function, and then do only one comparison.You can leave the start and end date as a special case, or tweak them to fit in the comparison as nutmeg64 did.
Python operators are available as methods in the built-in operator package.You may also reduce the complexity of you code by first filtering all items < start_date then all items > end_date.That gives something like this (untested):
There is no way to generally generate a Python code (unless a different Python script writes it to a file and that is a bit complicated).In this case you could do something like:
You can solve this problem using the operator module:


Answer URL
https://docs.python.org/3/library/operator.html#operator.xor
