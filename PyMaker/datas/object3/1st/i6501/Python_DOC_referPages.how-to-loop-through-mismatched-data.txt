Natural Text
So I have been trying to think of how this would be possible, but nothing comes to mind. I have 2 csv files with dates and data in them. The dates, however, are mismatched. I want to be able to write a code that allows me to loop through all the data, find the matching dates, and then create a text document with the date in common and the 2 data values from the separate sheets. The other alternative is matching them myself in excel. Any suggestions?Ex. of what I am trying to accomplish:Say I have this file1: and this file2: What I would hope to have returned is (after running a loop):Any help would be appreciated, thanks!
Use a defaultdict of lists to store the data from the CSV files, then find those items in the dict that have more than one value in the list.This will (almost) produce the file that you require, the only difference being that the delimiter is a single | instead of | (with surrounding spaces). I also assumed that the input files are similarly delimited.
I think pandas join logic is well suited for this task since you are effectively asking for an inner join as keyed by date.First define a parsing function for your dates (which I added in case you needed to treat these as actual dates for further processing in python). Then load each csv file into a separate dataframe. Finally join and drop NaN values to get the inner join you seek (or just explicitly inner join by setting how parameter in join function). You can also easily drop the outptut dataframe into a csv file with the to_csv function.If you are looking to get a little more creative with aggregating or joining then pandas is the way to go.This would also work but you lose all of the date-specific functionality within python:
Read the first record from each file, r1 and r2Extract dates d1 and d2while there's remaining data in both files:if d1 == d2:merge records and printget next line of each file (new r1 and r2)else if d1 < d2get next r1elseget next r2Briefly, you're stepping through both files, keeping a "bookmark" in each.  If the records match, merge them and print; advance both files.  Otherwise, advance the bookmark that's "behind" in the date.
Using CSV module to read out both files, convert them to a dictionary which maps date => list[values], then prints them.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
