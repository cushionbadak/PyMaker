Natural Text
I am writing python tests for the first time. I am trying to test a basic mock. I want to return some value that I want when I call the function, rather than a mock object.Here is the code: In views:In test:output:PS: I don't have my methods in a class and I don't want to change that.
You have a direct reference to myfunction() in your test module, and that reference is never patched. You only patched the reference in the trailblazer.views module.Your test would work if you used that reference instead of myfunction:However, a more meaningful test is to test the code that uses myfunction(). You use mocking to be able to focus on the behaviour of a specific unit of code, where mocking lets you precisely control interactions with other units.In other words, if you have code like:then when testing some_function_to_test() it makes sense to patch myfunction().I recommend you read up on how Python names work; I highly recommend Facts and myths about Python names and values, together with Where to patch in the unittest.mock documentation.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
