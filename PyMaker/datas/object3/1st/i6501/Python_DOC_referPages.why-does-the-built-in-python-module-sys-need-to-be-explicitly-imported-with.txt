Natural Text
The python documentation says: "One particular module deserves some attention: sys, which is built into every Python interpreter."My understanding is that if a module is built into the Python interpreter itself, then there is no need for an explicit import statement. If the sys module is built-in the Python interpreter, then why is an explicit import statement required for the sys module?
sys is imported at Python startup.  So when you import sys, it does not actually do anything except bind a variable name to the already-existing module.  When creating a module instance, there is no reason to have the sys name bound in the module scope when many (probably most) modules don't need to use sys.  So, that name is not in scope by default.  
import performs two functions:It loads the module from disk, initializing and executing it.It adds the module to the local namespace.With "built-in" modules item 1 is not an issue, but item 2 is still important; without it the code would throw a NameError.


Answer URL
https://docs.python.org/3/tutorial/modules.html#standard-modules
