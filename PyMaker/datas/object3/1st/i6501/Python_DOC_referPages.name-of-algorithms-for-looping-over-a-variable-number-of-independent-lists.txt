Natural Text
Please excuse the vagueness of my question, I don't have any formal training in CS. I'm pretty sure a solution already exists, but I can't find an answer because I don't know what question to ask.Essentially, I'm looking for the name of an algorithm, or group of algorithms, to find all combinations of several lists where each list contains the possibilities for a single position. That is, some function that can perform the mapping:such that the result can be used to iterate over all possible combinations of the per-position lists in order.The number of lists is variable, and the size of each list is variable and independent of the other lists. All the example solutions are missing at least one of those criteria.It would also be awesome if anyone knew of pseudocode or example implementations for any of those algorithms, or a Python package that can handle this.I can and have solved the problem previously, but I would like to know if there are better solutions out there before I implement my design again.Thanks for your time.For those curious, my previous solution looked something like what is described in this paper, which is the only example solution I've found. However, it doesn't name the problem, nor does it give me a jumping off point for further research. Here is an (untested) Python listing of my general solution:
You are looking for itertools.product. It is equivalent to the nested for loop of arbitrary depth that you describe.For your particular example (with appropriate syntactic modifications):


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
