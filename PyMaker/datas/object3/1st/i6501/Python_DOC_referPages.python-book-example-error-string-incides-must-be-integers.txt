Natural Text
Scripting Language: Python 3.6Reference Book: Python Data Visualization Cookbook [MilovanoviÄ‡ 2013-11-25]Teaching myself Python Data VisualizationWhen I execute code from bookI get error How to troubleshoot? When I see similar threads, I draw a blankIs the code from book even correct?[As an aside, where did set() in repos = set() come from?]Please point me in the right direction
The API being used is obsolete.  The following code uses the current API:As others have pointed out set() creates a set object, which can only contain unique values.  Example:Note that a set is unordered, so don't depend on the items being sorted as they seem to be in the example.
If you print the json_obj you get this:So this link seems to be old and you will have to look the new one up.For your second question:set() is a data container similar to dict() and list(). sets are similar to lists in that they store a number of objects. The biggest differences are: sets are not sorted (like dictionaries)sets only contain unique itemsYou can find more info in the python documentation:https://docs.python.org/3/tutorial/datastructures.html#setsI hope this helps, good luck with your learning.
Just so you get some answers to your questions...The TypeError: string indices must be integers is because, since the API is down, entry is now only a string (u'documentation_url'), and when entry['repository'] it raises an error because, with strings, you can only get the n-th character from an integer n (you can't get the repository-th character).[As an aside, where did set() in repos = set() come from?]When you do repos = set() you're only creating an empty set object an assigning it to repos. You would fill it later with repos.add(entry['repository']['url'])
The entry object you are trying to access is a string, so you cannot access it with non-integer indices. I tried running your code and the url seems to be down or blocked because of too many requests, so this might be the reason why entry ends up becoming a string object.the repos = set() means that, when you add new urls to repos it will ignore cases where that url is already in the set so you don't end up with duplicates. If you used repos = [] instead you would have to manually check for duplicates at every insertion (unless you wanted to allow duplicates).You can read more about the set() data structure here: https://docs.python.org/3/tutorial/datastructures.html


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
https://docs.python.org/3/tutorial/datastructures.html
