Natural Text
I have the following issue with Python and I was wondering if there is a direct way to deal with it (using a specific function which I am not aware of, etc.).I have a list with different types of inputs (integer, string, etc.). I transform the list into a string using the str() function. Now the type of the variable is a string. I do some processing with this string and then I want to transform the string back into the initial list with the initial variable types it had (integer, string, etc.).Here is an illustration:I thought maybe I could in the beginning iterate my list and store the type of its attributes in a list (list_b). Later when I convert the string to a list I will explode the string and convert the strings to the variable types corresponding to the list_b.I was wondering if there is a more straight forward way than this?
You can use ast.literal_eval to convert a string into a Python object.Note that, as per the docs linked above, the string can only be formed of strings, bytes, numbers, tuples, lists, dicts, sets, booleans, and None.
This seems like a good use case for Python's 'json' module, as it can transform lists and dictionaries into JSON (which is a string format) and vice versa.So for example:This only works with simple data structures (dict, list, tuple, str, int, long, float, boolean, and None) (more information on this here)You can check out this answer if your list will contain other kinds of objects that you want to make serializable.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
