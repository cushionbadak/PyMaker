Natural Text
It appears that Python 2 has PyString_Type whereas Python 3 has PyBytes_TypeWhat is going on under the hood?I'm writing a C++ wrapper (currently wrapping Python3, but I hope to add Python2 support later), and I just got round to the task of wrapping strings.Is it correct that 2&3 both provide separate support for a byte-string and a Unicode-string, but they have just done some renaming?If this is so then is this table correct?:And if so, how to complete it?EDIT: Python2 doc for String says:These functions have been renamed to PyBytes_ in Python 3.x*. Unless  otherwise noted, the PyBytes functions available in 3.x are aliased to  their PyString_* equivalents to help porting.
In Python 2, str contains bytes (and the type bytes == str) and unicode contains Unicode strings. Therefore 2.x has three types effectively.In Python 3, bytes contains bytes and str contains Unicode strings. The str type in 3.x is the unicode type of 2.x. Therefore 3.x has two types effectively. This is the conceptual approach that you should take and any 2.x-related work should also separate Unicode strings and bytes in this way.Based on this section in the documentation that means PyUnicode is used in both 2.x and 3.x for the Unicode strings. PyBytes is used for byte-strings in both and the PyString type only has meaning in Python 2.x.


Answer URL
https://docs.python.org/3/howto/cporting.html?highlight=pystring#str-unicode-unification
