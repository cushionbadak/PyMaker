Natural Text
In Python, I can assign alternative values to a variable if the first assignment to this variable raise exceptions, something like:I wonder can we replace the try/except with context manager?Here what I tried:I guess I must do something instead of yield but don't know what must I do. Any suggestion?
The exception (ZeroDivisionError in this case) is not caused by assignment failure, but becasue of dividing by 0.The first code can be converted as follow:How about the following approach (yielding default value, change the value in with statement body)?
There is no way for the context manager to know what you are doing within the context. It especially won’t be able to tell which variable you are assigning a value to; it also won’t be able to access that variable; and even if it could, there would be no guarantee that you only did that one assigment inside the context manager too. So, no, you can’t do it like that.What you could do however, is to do it the other way around. Your 0 is a default value, so you would set that one first. Afterwards, you try to assign your actual value 1/0 and ignore the ZeroDivisionError. So it would look like this:And that you can do with a context manager, with contextlib.suppress:
you can use Decorator like:


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.suppress
