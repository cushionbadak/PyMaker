Natural Text
Is there any difference between above three?I am confused with these choices.Which needs to be used at what time and is string append method faster than the others?
Short answer: Neither. It's like asking which spoon feeds faster? silver or plastic? Neither, it's up to the person who uses it.In other words this is inapplicable to a language. A language simply talks about grammar and semantics but not about speed i.e. it specifies ways of expressing something and its grammar, not how fast it is done.Speed is a parameter of an implementation not language; know the difference. An implementation may treat both s += 'a' and s = s + 'a' similarly underneath (so there's no difference between the two on such an implementation) but another implementation can implement one faster over the other. So when talking about speed/efficiency/performance, it's vital to specify what implementation, platform, compiler, etc. is being used.CPython, IronPython, etc. are implementations of the Python language, again their speed in performing such expressions may vary based on the compiler, platform, etc. Measure, don't speculate!
Assuming that s is a string, the time required seems to be identical:Also, string objects to not have an append() method.
You can always run the test time yourself, and check:Both give similar result:
Have a look on http://www.skymind.com/~ocrow/python_string/s.append(a)  is faster among these. Then s needs to be a string list. 


Answer URL
https://docs.python.org/3/reference/grammar.html
