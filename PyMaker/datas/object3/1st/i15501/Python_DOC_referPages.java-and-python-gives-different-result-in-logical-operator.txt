Natural Text
I am trying to get broadcast ip address coding in Java and Python for practice. Here is my code in java which gives me correct output:Here decimalIP is the number representing IP address, getMaskLength - number representing its mask. Here I got expected broadcast address.By in python using the same logic I got unexpected results:Here all components represent the same entries as in java. After debugging I got that number (~(0xffffffff ^ (1 << 32 - self.mask) - 1)) is negative. In documents operator ~ gives inversion in bits but I don't understand why this number is negative in Python and not in Java?
Python integers are not bounded and are not signed, so ~ creates a negative number:However, ~ in Java would give you the two's complement, while the operation on the subnet mask requires a one's complement, which can be achieved by using XOR on the netmask. Since that'd undo the other XOR operation you already applied, you don't need to use the 1's complement here at all:I suspect that you could just use IPv4Network.broadcast_address here:


Answer URL
https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.broadcast_address
