Natural Text
I read the docs of structlog: ConfigurationThe goal is to reduce your per-file logging boilerplate to:Is there a way to even reduce this to one import line (without )?
It is not possible to perform a call inside of an import statement.From Python's grammar:The grammar does not specify a form for an import statement where a call is possible. In particular, the only form accepting parentheses is , where  is defined as , while a call to a function requires the use of .I recommend a thorough reading of the grammar specification for an in-depth understanding.However, it is possible to accomplish what you are aiming at in one line. Here are three solutions.The first one is what you mentioned in your question. The second one was evoked by Chris_Rands in comments (and later on in an answer). The third one is basically a cheat, that looks like a one-liner from the main file.With a semi-colonBy calling the underlying  functionNote that this is not an import statement, since it does not match any specified form of the above abstract.By using an intermediary fileinterface.pymain.pyThis is more like cheating, but from the point of view of the main file, the import is a single line.If you pick this method, I strongly recommend to create a fresh file for the . You could be tempted to add a  at the end of , but you could break the module, the most obvious situation being that some variable called  already exists.This said, having your code in two lines is absolutely fine. I understand that one can want to make one-liners as often as possible, since Python is pretty good at it (I won't link my posts about  expressions, but you can easily find some examples).However,  is actually referenced as , which means that it can receive arguments to initialize the logger it returns. The way these are used is documented in 's source.Now, suppose you have to perform some processing to produce these arguments. Your code will look something like:Well, you could still make it into a one-liner... But it would become unnecessarily long, and pretty much unreadable.
As I mentioned in my comment, to get a one liner, you could use :However, as stated in the documentation, using  is not generally recommended:Direct use of __import__() is also  discouraged in favor of importlib.import_module(). requires importing itself, adding another line via , unless you import  via , which seems like a bad idea.Anyway, you don't need  or  in your case, which are normally used when you are importing dynamically from a variable that stores the module name as a string. I think you should keep the two lines you have, which are concise and readable in my opinion.
As stated by others, there is no clean way to do import and function call on the same line. However, there might be a different approach to this problem.I assume you want to enforce DRY principle. If this is the case, you can place small file in your code base doing both:Now, in all other places you can simply get logger instance directly:


Answer URL
https://docs.python.org/3/reference/grammar.html
https://docs.python.org/3/library/functions.html#__import__
https://docs.python.org/3/library/functions.html#__import__
https://docs.python.org/3/library/functions.html#__import__
https://docs.python.org/3/library/importlib.html#importlib.import_module
