Natural Text
Person Node ValueI am attempting to get the following into a data structure similar to thisI know this might not be the best approach, but what I am trying to do with my data structure is the following:Dictionary whose key is a value and check if it a value.Value of dictionary is another dictionary and need to check if key is already in the value. Value of the second dictionary is a list which needs to be appended to if the list exists like in Bob's case.I have tried numerous approaches, but right now, my code is looking like this. 
I would use a , where the default is a  with a default .  Then it's very easy to populate that dictionary
Use nested dictionaries by implementing the perlâ€™s autovivification feature.
I would solve it like this. I am sure it could be shortened quite a bit if you make it more recursive and use comprehension. But to understand the principle and make it similar to your start (solution not tested for syntactic errors):
Don't let the code confuse you.  You defined pretty clearly what you need to do.  Now just take it slow and do it.First, as you said: value of second dictionary is a list.  You don't wantInstead you want:Now in your else, you know that person is already in names.  Is value?  If it is, add to the list, otherwise, create a new list:Now, you can probably go about this a whole lot cleaner using the  method of a dict.This would do the same thing:
Quite a well known pythonic technique is to use  to specify complex dictionary structures at initialization time.Disclaimer: I would highly recommend considering class structures to handle this data, as these kinds of nested dictionaries can lead to code smells rather quickly.Sample Output:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/collections.html#collections.defaultdict
