Natural Text
This question already has an answer here:How to return dictionary keys as a list in Python?                    9 answers                So I have a dictionary which is like - Is there a way in which i can print it out so that it becomes a list like - So that only the keys are printed and not the values that go along it. Also is there a way to make the dictionary not work in arbitrary order - such that if two keys are repeated instead of giving it the value of the last one, we give it the value of the first one? eg;    When printed The output comes as instead of coming as 
Printing the keys is straightforward. In Python 3:In Python 2,  already returns a list instead of a special view object, so you can doYou can set values in a dict without overwriting previous keys using the  method. This method sets the value of a key only if it is not already present in the . The only catch is that it only handles one key at a time, so you would need to put it in a loop or do it sequentially: OR
Dictionaries can't have two identical keys by definition. You should read the python docs to understand how they really work.To answer your question: which will returnIf you really want to print them in the exact format you specified: which will returnNote that dictionaries are unsorted by definition, so the exact output may vary.
dict.keys() would suffice to achieve the first thing you asked.Your second question is a bit tricky. You see, dictionaries store key value pairs, and there is this notion that a dictionary has unique  keys.  So, you can not put multiple values corresponding to a key in the manner you described.Instead, what you can do is defining each value in the dict to be a list, and appending new values for a key to the list for that key. (i.e. dict[key]) Then, when you try to read a random value of a key, you can pick a random value from the list dict[key].
This will get you keys in a list


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
