Natural Text
I have two functions func1 and func2 that are specific implementations of func0 that YIELDS its result:how should I refer to func0 inside the "specific" functions to make them yield their results? Is return ok?
If you use , then  will return the generator that is . Alternatively, if you use , then the wrapping function becomes a generator itself, yielding the individual items from . The yielded elements are the same in both cases.Note how  returns a -generator, while  returns a -generator.Note that  was introduced in Python 3. In Python 2, you can achieve the samy by yielding from a loop.
In Python 3.3+, the normal way would be to use . From the documentation:PEP 380 adds the yield from expression, allowing a generator to delegate part of its operations to another generator. This allows a section of code containing yield to be factored out and placed in another generator. Additionally, the subgenerator is allowed to return with a value, and the value is made available to the delegating generator.For Python 2.7 that's not possible, however. Here's an alternative that works instead:Output
This is how i would do it:You can take a look at  there. As i said in the comments it essentially clones your function with some of its required parameters already set.So if  yields so do its partials  and .
You are returning generators from the functions.You need to read about generator, it's not long, anyway is here a way to use it:or     res = next(gen)  # python 2 and 3


Answer URL
https://docs.python.org/3/whatsnew/3.3.html#pep-380
