Natural Text
In modern versions of Ppython one can have static type analysis using function annotations, according to PEP 484. This is made easy through the typing module.Now I'm wondering how I would give a "type hint" towards a "filestream".What would I insert as ?Using  returns  which isn't clear at all.Isn't there a generic "file" type?
I think you want , "[t]he abstract base class for all I/O classes, acting on streams of bytes."Note that this includes also in-memory streams like  and . Read the documentation on the module  for details.
You can use , , and  to represent different types of I/O streams. To quote the documentation:class typing.io     Wrapper namespace for I/O stream types.      This defines the generic type  and aliases  and  for      respectively  and . These represent the  types of I/O streams such      as returned by .    These types are also accessible directly as , , and      .
Either this:OR thisThe second approach would avoid to import the class during execution. Although python would still have to import  during execution, it is a good practice to avoid importing classes for type hinting only:  (1) doesn't get executed (just parsed), and (2) it could avoid cyclic import. 


Answer URL
https://docs.python.org/3/library/io.html#io.IOBase
https://docs.python.org/3/library/io.html
https://docs.python.org/3/library/typing.html#typing.io
https://docs.python.org/3/library/functions.html#open
