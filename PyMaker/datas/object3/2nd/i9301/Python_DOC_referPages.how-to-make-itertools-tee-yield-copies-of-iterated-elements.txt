Natural Text
I am using  for making copies of generators which yield dictionaries and pass the iterated dictionaries to functions that I don't have control about and that may modify the dictionaries. Thus, I would like to pass copies of the dictionaries to the functions, but all the tees yield just references to the same instance.This is illustrated by the following simple example:The output is:While I would like to have:Of course, in this example there would be many ways to work around this easily, but due to my specific use case, I need a version of  that stores copies of all iterated objects in the queues of the tees instead of references to the original.Is there a straightforward way to do this in Python or would I have to re-implement  in a non-native and, hence, inefficient way?
There is no need to rework . Just wrap each generator produced by  in a  generator:This automatically produces a shallow copy of each dictionary as you iterate. Demo (using Python 3.6):


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.tee
