Natural Text
This question already has an answer here:Determine the type of an object?                    9 answers                I have the following function. Ideally, I want to have either a single string or a list of strings passed as an input.  In either case, I need to use .upper on it.   But, when only a single string is passed, the iterator iterates through each character.  How can I have an if statement that tests whether a list of strings or a single string? (I can't seem to avoid the iterable nature of strings)
Check the type using .Use  instead of  for Python 3.
You can use  to check whether your function arg is of type  or not:
One way would be to explicitly check if the argument is a list or a string and handle it differently within conditional clauses.An alternative that I think might be nicer (if it's suitable for your use case) might be the following:However, this approach isn't appropriate if calling code may provide lists without splatting it.This approach relies on the usage of the  operator, which here is used in two different ways.In the function definition context (), this operator essentially makes  a variadic argument; that is, an argument that "scoops up" all arguments passed to the function into a tuple, which for the purposes of  acts like a list (it can be iterated over). If I were to make a call ,  would have the value .You can read more about variadic arguments here. In the function invocation context (), this operator will "splat" or unpack each element of the list. Essentially,  is equivalent to .You can read more about splatting here.
You could use the  function as so:


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
