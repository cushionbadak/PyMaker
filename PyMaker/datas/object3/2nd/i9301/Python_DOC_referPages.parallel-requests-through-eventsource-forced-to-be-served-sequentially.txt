Natural Text
What exactly does passing  to  do?My application processes input from the user, and takes a bit of time to do so. During this time, the application is unable to handle other requests. I have tested my application with  and it allows me to handle multiple requests concurrently.
As of Flask 1.0, the WSGI server included with Flask is run in threaded mode by default.Prior to 1.0, or if you disable threading, the server is run in single-threaded mode, and can only handle one request at a time. Any parallel requests will have to wait until they can be handled, which can lead to issues if you tried to contact your own server from a request.With  requests are each handled in a new thread. How many threads your server can handle concurrently depends entirely on your OS and what limits it sets on the number of threads per process. The implementation uses the  class, which sets no limits to the number of threads it can spin up.Note that the Flask server is designed for development only. It is not a production-ready server. Don't rely on it to run your site on the wider web. Use a proper WSGI server like gunicorn or uWSGI) instead.
How many requests will my application be able to handle concurrently with this statement?This depends drastically on your application.  Each new request will have a thread launched- it depends on how many threads your machine can handle.  I don't see an option to limit the number of threads (like uwsgi offers in a production deployment).What are the downsides to using this? If i'm not expecting more than a few requests concurrently, can I just continue to use this?Switching from a single thread to multi-threaded can lead to concurrency bugs... if you use this be careful about how you handle global objects (see the g object in the documentation!) and state.  


Answer URL
https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn
