Natural Text
Suppose I have list and what I want is a list where those elements appear twice, one after the other, soand I want to do this in the most pythonic way possible.My half solution is doing something likewhich yieldsFrom here, I'd have to parse (walk) the list to remove the inner lists and obtain a single flat list.Anyone has a better idea to do this in one go? Obviously things like  wouldn't help as it gives  and I want the same elements adjacent.
Link to origin: Stackoverflow: Repeating elements of a list n times
Using only list comprehension, you can do:Output:
You can  the list against itself, then flatten it in a list comprehension.
You can use  function Output 
More general:
Here is a short solution without list comprehension, using the intuitive idea :
If you like functional approaches, you can do this:While this might not perform as fast as the other answers, it can easily be used for arbitrary iterables (especially when they are infite or when you don't know when they end) by omitting .(Note that some of the other answers can also be adapted for arbitrary iterables by replacing their list comprehension by a generator expression.)


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
