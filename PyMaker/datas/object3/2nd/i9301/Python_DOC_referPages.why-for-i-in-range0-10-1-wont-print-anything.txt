Natural Text
Why the  above program prints nothing ,i expect it to print at least 0According to "for i in range(start, end, iterator)" definition ,it evaluates first element and then uses iterator to get to next element.So in theory the Example code snippet should first take 0 and print it and then next element is evaluated as -1 which is not in 0-10 then it should bail out 
With a negative "", python keeps on yielding1 elements while the current value is greater than .  In this case, you start at .   is not greater than or equal to  so python's done and nothing gets yielded.1This is a simplification of course --  returns a  object on python3.x which is an indexable sequence type so it doesn't exactly , but the basic idea is the same ...
There is no evaluation of the first element by the  call, and Python's  function will not return anything if  is negative and  is not greater than .  For your example,  is not greater than , so your  call returns the empty list, and your  loop has nothing to iterate over.'s documentation:range(stop)range(start, stop[, step])This is a versatile function to create lists containing arithmetic progressions. It is most often used in for loops. The arguments must be plain integers. If the step argument is omitted, it defaults to 1. If the start argument is omitted, it defaults to 0. The full form returns a list of plain integers [start, start + step, start + 2 * step, ...]. If step is positive, the last element is the largest start + i * step less than stop; if step is negative, the last element is the smallest start + i * step greater than stop. step must not be zero (or else ValueError is raised). Example:
Third argument in  is In range you can give  as ,  etc. When you give , it will not do step in .If you want to print reverse order you can try 
In Python, the range function works with the arguments  the problem you have is that you are assigning a negative step to a situation where the StartingValue is less than EndingValue. Since this is the case, it never enters the loop, because the end value has already been reached, and exceeded.To fix this, just reverse the first two values:  . Think of it as if you were saying it in a sentence, such as 


Answer URL
https://docs.python.org/3/library/stdtypes.html#ranges
