Natural Text
I have several functions that use tempfile.mkstemp() to create and use temporary files that stay on disk after the function has been called. Each of them repeats the same scaffolding code to clean up the file descriptor when the function exits. For example:I'd like to pull this try-finally scaffolding out to a decorator. I tried writing one, but I'm a bit lost and it isn't working:I'm unsure of how to pass the  parameter to this function (or any other decorated function). I'm not sure I know how to pass in the parameters needed by mkstemp(), either. (i.e. How do I specify the file suffix when calling the decorated function?)
Rather than use a decorator, you'd want to create a context manager. A context manager is told when a block of code (the context) exits, so you can clean up after yourself at that point.Ironically, there is a decorator that makes it easy to write a context manager, called :Note the  line; that's the point at which this function is paused, and the  value is then returned from the resulting context manager  method, and becomes available to the  clause.Then use this in a  statement:Not that you need to re-invent the persistent-temp-file wheel here. You could just use the  object here instead:


Answer URL
https://docs.python.org/3/library/stdtypes.html#typecontextmanager
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
