Natural Text
I am using mock with Python and was wondering which of those two approaches is better (read: more pythonic). Method one:  Just create a mock object and use that. The code looks like:Method two:  Use patch to create a mock.  The code looks like:Both methods do the same thing.  I am unsure of the differences. Could anyone enlighten me?
 is a very very different critter than .   replaces the class with a mock object and lets you work with the mock instance.  Take a look at this snippet: replaces  in a way that allows you to control the usage of the class in functions that you call.  Once you patch a class, references to the class are completely replaced by the mock instance. is usually used when you are testing something that creates a new instance of a class inside of the test.   instances are clearer and are preferred.  If your  method created an instance of  instead of receiving an instance as a parameter, then  would be appropriate here.
I've got a YouTube video on this.Short answer: Use  when you're passing in the thing that you want mocked, and  if you're not.  Of the two, mock is strongly preferred because it means you're writing code with proper dependency injection.Silly example:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
