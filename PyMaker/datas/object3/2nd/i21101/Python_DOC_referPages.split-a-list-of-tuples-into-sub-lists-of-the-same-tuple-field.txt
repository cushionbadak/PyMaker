Natural Text
I have a huge list of tuples in this format. The second field of the each tuple is the category field.What is the most efficient way to break it down into sub-lists of the same category ( A, B, C .,etc)?
Use itertools.groupby:yieldsOr, to create one list with each group as a sublist, you could use a list comprehension:The second argument to  is a function which  applies to each item in  (the first argument). It is expected to return a .  then groups together all contiguous items with the same .operator.itemgetter(1) picks off the second item in a sequence.For example, ifthenequals .As @eryksun points out in the comments, if the categories of the tuples appear in some random order, then you must sort  first before applying . This is because  only collects contiguous items with the same key into groups.To sort the tuples by category, use:
 requires the input to be sorted by the key field, otherwise you will have to sort first, incurring O(n log n) cost. For guaranteed O(n) time complexity, you can use a  of lists:
To get multiple lists of singletons from a list of tuples:If you prefer to get multiple tuples of singletons:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
