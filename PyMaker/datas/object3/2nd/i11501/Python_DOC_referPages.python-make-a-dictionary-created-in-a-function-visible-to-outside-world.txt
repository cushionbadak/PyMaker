Natural Text
Code is as follows:To which I get:If I assign the returned dictionary like this:instead of the create_dict() line then it works but this script will be called multiple times so I don't want my_dict being overwritten each time I call it. What I want to be able to do is call the function creat_dict() once at the beginning to create the dictionary then just add/remove things as I see fit. If I keep calling the script then my_dict will always be overwritten with an empty dictionary.I could do this:but I'm curious nonetheless whether it is possible to return a 'Global' dictionary from a function (that terminology may be off).
Just put  in front of the variable, and conditionally instantiate it.
I don't think in this case it is good to suggest the use of global variables. What you need to do is to put the   line outside that script you keep calling, and put it just once, at the beginning, in whatever is the other place from where you keep calling your script.
Well, you can implement this behavior with the   statement for example: To check if  exists in the global scope and to avoid re-assignment inside the function's body you have to do something like the following: Here's a little note you have to take into your consideration, it's best to keep the function . In other words, global variables assigned inside the function may make your program maintenance a bit harder. I wouldn't be harsh here and say avoid them at all costs, but I'd rather say, use them when and only when you think they're truly necessary. The Zen of Python says: "Simple is better than complex."


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-global_stmt
