Natural Text
I'm using python 3.5 and I'm checking the performance of urllib module Vs requests module.I wrote two clients in python the first one is using the urllib module and the second one is using the request module.they both generate a binary data, which I send to a server which is based on flask and from the flask server I also return a binary data to the client.I found that time took to send the data from the client to the server took same time for both modules (urllib, requests) but the time it took to return data from the server to the client is more then twice faster in urllib compare to request.I'm working on localhost.my question is why?what I'm doing wrong with request module which make it to be slower? this is the server code :this is the client code based on urllib :this is the client code based on requests :thanks very much
First of all, to reproduce the problem, I had to add the following line to your  function:Otherwise, I was getting “connection reset by peer” errors because the server’s receive buffer kept filling up.Now, the immediate reason for this problem is that  (which is called implicitly when ) iterates over the response data in chunks of 10240 bytes:Therefore, the easiest way to solve the problem is to use , thus telling Requests that you will be reading the data at your own pace:With this change, the performance of the Requests version becomes more or less the same as that of the urllib version.Please also see the “Raw Response Content” section in the Requests docs for useful advice.Now, the interesting question remains: why is  iterating in such small chunks? After talking to Cory Benfield, a core developer of Requests, it looks like there may be no particular reason. I filed issue #3186 in Requests to look further into this.


Answer URL
https://docs.python.org/3/library/urllib.request.html#module-urllib.request
https://docs.python.org/3/library/http.client.html
