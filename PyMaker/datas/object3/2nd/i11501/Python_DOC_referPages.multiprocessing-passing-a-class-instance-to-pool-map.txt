Natural Text
I swear I saw the following in an example somewhere, but now I can't find that example and this isn't working. The __call__ class function never gets called.EDIT: Code updated pool.map appears to start the QueueWriter instance and the __call__ function is reached. However, the workers never seem to start or at least no results are pulled from the queue. Is my queue set up the right way? Why do the workers not fire off? So the log does indeed print the initialization message, but then __call__ function is never called. Is this one of those pickling issues I've seen discussed so often? I've found answers about class member functions, but what about class instances? 
At the gentle and patient prodding of martineau (thanks!) I think I've ironed out the problems. I have yet to apply it to my original code, but it is working in the example above and I'll start new questions for future implementation problems. So in addition to changing where in the code the target file (the log, in this example) gets opened, I also started the QueueWriter instance as a single multiprocessing process rather than using . As martineau pointed out the map call blocks until the  returns and this prevented the workers from being called. There were some other bugs in the code above, but those were incidental and fixed below:


Answer URL
https://docs.python.org/3/library/multiprocessing.html#exchanging-objects-between-processes
