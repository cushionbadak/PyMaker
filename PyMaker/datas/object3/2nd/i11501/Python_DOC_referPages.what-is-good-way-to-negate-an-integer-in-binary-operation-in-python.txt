Natural Text
Based on what I've read about the binary representation of integers, the first bit is for sign (positive or negative).Let's say we have an integer  and  returns  (that is binary representation in 28 bit).For now I am trying to flip the first bit to  by using but it returns .I was just wondering whether it needs to be some negative number? (not -5)Is there anything wrong with what I am doing?
You can't switch a Python  from positive to negative the way you're trying to, by just flipping a bit in its representation. You're assuming it's stored in a fixed-length two's complement representation. But integers in Python 3 are not fixed-length bit strings, and they are not stored in a two's complement representation. Instead, they are stored as variable-length strings of 30- or 15-bit "digits", with the sign stored separately (like a signed-magnitude representation). So the "lowest-level" way to negate a Python  is not with bit operations, but with the unary  operator, which will switch its sign. (See the end of this answer for details from the Python 3 source.)(I should also mention that  does not tell you the number of bits in your . It gives you the number of bytes of memory that the integer object is using. This is also not the number of bytes of the actual stored number; most of those bytes are for other things.)You can still play around with two's complement representations in Python, by emulating a fixed-length bit string using a positive . First, choose the length you want, for example 6 bits. (You could just as easily choose larger numbers like 28 or 594.) We can define some helpful constants and functions:Now we can do something like you were trying to:Which shows that turning on the high bit for the number 2 in a 6-bit two's complement representation turns the number into -30. This makes sense, because 26-1 = 32, so the lowest integer in this representation is -32. And -32 + 2 = -30.If you're interested in the details of how Python 3 stores integers, you can look through Objects/longobject.c in the source. In particular, looking at the function :you can see that all it does in the normal case is negate the  value of the integer object.  is simply a reference to the  field of the integer object. When this value is 0, the integer is 0. Otherwise, its sign is the sign of the integer, and its absolute value is the number of 30- or 15-bit digits in the array that holds the integer's absolute value.
Negative number representations in python :Depending on how many binary digit you want, subtract from a number (2n):Function to generate two's compliment(negative number):Output:Refer : two's complement of numbers in python


Answer URL
https://docs.python.org/3/library/sys.html#sys.getsizeof
