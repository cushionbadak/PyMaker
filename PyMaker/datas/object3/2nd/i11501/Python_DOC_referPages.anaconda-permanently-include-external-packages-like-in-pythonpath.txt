Natural Text
I know how to install packages in Anaconda using  and also how to install packages that are on PyPi which is described in the manual.But how can I permanently include packages/folders into the  of an Anaconda environment so that code that I am currently working on can be imported and is still available after a reboot?My current approach is to use :which is not really convenient.Any hints?Thanks in advance!
I found two answers to my question in the Anaconda forum:1.) Put the modules into into site-packages, i.e. the directory  which is always on . This should also work by creating a symbolic link.2.) Add a  file to the directory . This can be named anything (it just must end with ). A  file is just a newline-separated listing of the full path-names of directories that will be added to your path on Python startup.  Alternatively, if you only want to link to a particular conda environment then add the .pth file to Both work straightforward and I went for the second option as it is more flexible.*** UPDATE:3.) Use conda develop i. e.  to add the module which creates a  file as described under option 2.).4.) Create a setup.py in the folder of your package and install it using  which is the cleanest option from my point of view because you can also see all installations using .Thanks anyway!
The preferred solution would be to build your own conda package (information here).Another solution would be to create a link between your package directory and any directory in sys.path. In this way, when you ask python to import your package, anaconda will search through its various sys.path directories and it will read the link to your package as if that package were in one of the sys.path directories.Linking a directory can be performed easily with the  (link_name) command. As an example:The above link will allow you to import your package in the default environment of anaconda from any directory. This will not affect any of the other environments. If you want to add the package to a specific environment (e.g. - "myenv") within anaconda, you can link the package to one of that particular environment's sys paths:Note the following:Linking your package directory to a sys path, rather than actually moving the package directory to a sys path, allows you to keep your package in your directory of choice.The  flag generates a soft link (much like a shortcut). If you move your package directory, the link will fail to work. Running  without the  flag generates a hard link (like a mirror copy) that will not be affected by moving (or even deleting..) the package directory. The pros and cons of soft links and hard links are debated hereWindows users should utilize mklink. For information, look here.
Just to add to Cord Kaldemeyer's answer above, for the 2nd option.  If you only want to link to a particular conda environment then add the .pth file to 
I'm able to include local modules using the following: I hope it helps.
The way I use to do this, which I believe is the most native to , is by creating  files in my environment, as per the official documentation here.For macOS and Linux users, the steps are as follows:Go to your environment folder (e.g. ).  is the environemnt variable for your environment path.Create the  and  directories.Inside the each respective directory, create one  file. The one in the  directory will set (or ) your environment variables when you  your environment. The file in the  directory will serve to unset the environment variables when you  your environment.First edit the  to  the desired environment variables.Afterwards, open to edit the , in order to  the env variables when you  like so:Again, the source of my description comes straight from the  docs here.


Answer URL
https://docs.python.org/3/distutils/setupscript.html
