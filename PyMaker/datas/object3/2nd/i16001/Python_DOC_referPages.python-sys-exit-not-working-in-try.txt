Natural Text
This question already has an answer here:Why is “except: pass” a bad programming practice?                    16 answers                Why am not able to trigger sys.exit() in try, any suggestions...!!!The code posted here has all the version details.I have tried all possible ways i know to trigger it, but i failed.It gets to 'except' block.Thanks in advance..
 raises an exception, namely . That's why you land in the -block.See this example:This gives you:Although I can't imagine that one has any practical reason to do so, you can use this construct:
based on python wiki :Since exit() ultimately “only” raises an exception, it will only exit the process when called from the main thread, and the exception is not intercepted.And:The  function is not called when the program is killed by a signal, when a Python fatal internal error is detected, or when  is called.Therefore, If you use  within a  block python after raising the  exception python refuses of completing the 's functionality and executes the  block.Now, from a programming perspective you basically don't need to put something that you know definitely raises an exception in a  block. Instead you can either raise a  exception manually or as a more Pythonic approach if you don't want to loose the respective functionalities of  like passing optional argument to its constructor you can call  in a ,  or even  block.Method 1 (not recommended)Method 2 (Recommended):


Answer URL
https://docs.python.org/3/library/exceptions.html#SystemExit
