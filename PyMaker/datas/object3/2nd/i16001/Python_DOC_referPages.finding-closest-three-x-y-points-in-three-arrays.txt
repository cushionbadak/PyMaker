Natural Text
In Python, I have three lists containing x and y coordinates. Each list contains 128 points. How can I find the the closest three points in an efficient way?This is my working python code but it isn't efficient enough:Any idea how this can be done using numpy?
You can use Numpy's broadcasting features to vectorize the two inner loops:It's also possible to vectorize all of the 3 loops
Let's try timing some different solutions to see.I'm going to initialize three arrays using numpy's random functions. If you have existing variables that are lists of tuples or lists of lists, just call  on them.First let's time your code so we have a starting point.One function that might be helpful is , which calculates all the pairwise distances between two arrays of points. So we can use this to calculate and store all the distances beforehand, then simply get and add distances from those arrays. I'm also going to use  to simplify the loop, though it won't be doing any speedup work.So using  buys us an order of magnitude speedup.That, however, doesn't even compare to @pv's answer. An implementation of his with some stuff stripped away to compare better with the previous solutions (see @pv's answer for the implementation that returns the points).So that's a massive speedup and is definitely the right answer.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
