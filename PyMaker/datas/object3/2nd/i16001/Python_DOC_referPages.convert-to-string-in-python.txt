Natural Text
i am working on my project where i i want to capture video frames from my webcam and send to remote client in python, i am using opencv to capture frames but i have to send it to remote client frame by frame without saving in server...I am stuck here since a week pls help me should i have to conver it to string to send via sockets? if yes then how?PLS help me my code is 
In addition to the problems in the other answer—which you still have to fix—you have another problem. returns an image object.  takes a filename or an integer file descriptor. An image object is quite obviously not a filename, so that  is going to raise an exception.The only way you're going to get a filename that you can pass to  is if you have a file, e.g., by saving the frame to it. You claim that you had code that did that. Presumably in that code, you had code similar to this:I don't know what params you used; the  is presumably the image you read by capturing a frame.The  function is similar to , except that it creates an image file in-memory, in a buffer, instead of writing it to disk. It takes the same parameters as , except with a file extension instead of a full filename (because it isn't going to save anything to disk, but it still needs to know what type of file—PNG, JPE, etc.).So:And now,  is the bytes you can pass to .
I think the problem you're trying to solve is here:If you read the docs for :Send data to the socket. The socket must be connected to a remote socket. The optional flags argument has the same meaning as for  above. Returns the number of bytes sent. Applications are responsible for checking that all data has been sent; if only some of the data was transmitted, the application needs to attempt delivery of the remaining data. For further information on this concept, consult the Socket Programming HOWTO.And in fact, sending a big hunk of data immediately upon opening a TCP socket is exactly the kind of situation where you'd expect it to send only part of the data.You could read the linked HOWTO, which will explain how to deal with partially-sent buffers, but for your problem, since you're doing nothing but handling one client at a time with no concurrency, completing the request, and hanging up on it, the next function in the docs, , does everything you want.However, this isn't the only problem in your code. For example, the very next line does this:Just referencing a function, without calling it with , has no effect. Which turns out to be a good thing, because if this had an effect, it would be closing the listener socket, not the client socket. If the client waits for shutdown, it would wait forever; meanwhile, if a second client tried to connect, it would be rejected.Also, if you wrote the client side yourself, I'm willing to bet you just used , which is going to have the same problem: it's not necessarily going to receive 87029 bytes, it'll receive anything up to that many bytes. You have to loop around  adding to a buffer until you get enough. See Sockets are byte streams, not message streams for more details.
please, never, ever try to convert an image to a string, it's a total waste.yes, you will have to encode the image fom the webcam, but not to base64 (instead,you will need an image, that your client can read, like a png in memory)do not use the deprecated cv2.cv api, it will be gone soon (opencv 3.0)stick to a well known protocol, like MJPEG


Answer URL
https://docs.python.org/3/library/functions.html#open
