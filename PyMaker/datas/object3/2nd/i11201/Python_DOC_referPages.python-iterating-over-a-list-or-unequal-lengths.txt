Natural Text
This question already has an answer here:Python: zip-like function that pads to longest length?                    4 answers                From a config file, I would like to iterate over a list that contains , , and a  and then assign those values to variables to create a repository object using github3.py.  The  and  lists will not be equal length. For now, there's two users and several repos, but this can change over time.  I've tried to use , but it is only working if the lists are the same length. I would like for it to keep the last value in the  list and map that with the last repo in the  list ().The code below is where I would like to use those values.
Assuming that the repository list will always be at least as long as the user list, then you can simply use  to zip them together:As you note,  ends after the shortest iterable is exhausted.  In contrast  will continue until the longest iterable is exhausted, using the given  (which defaults to ) when a value can no longer be taken from the shorter iterables.So here, we can simply set  to be the last member of  to have it broadcast over the remaining repositories.(In python 2.7 this iterator is named )
Use a hash (dictionary in Python I think)than you can get the last repo with 
Use the izip_longest method in the itertools module to zip over the longest iterable. This will return 'None' in cases where there is no value in the shorter list, so you would need to catch this in a function or loop.
I'd say the better way is to map each user to a repo in a dict, but the closest thing to what you want is something like this


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
