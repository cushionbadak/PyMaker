Natural Text
Issue:When calling the function time.time() I notice it jumping about 30 seconds after reboot. By jumping I mean it changes its return value by about 40 seconds instantly.Setup:I am running my script on a Raspberry Pi 3B, immeadiately after reboot. The issue does not occur when ran later.Question:Why does that occur? I suspect the Raspberry of changing its System clock at some point after reboot through WiFi. May that be the issue? I do not think posting code is helpful, as it really is a question related to the time.time() function.
Many operating systems update their clock on boot.  returns the time since Epoch, so if the clock changes, the delta between now and Epoch changes too.You may want to use monotonic timer if you want to avoid these jumps. Python 3.3 introduced , check it out. From the documentation:Return the value (in fractional seconds) of a monotonic clock, i.e. a clock that cannot go backwards. The clock is not affected by system clock updates. The reference point of the returned value is undefined, so that only the difference between the results of consecutive calls is valid.For Python < 3.3 there's also the monotonic third party package.
This is most likely because the Raspberry Pi does not have a real time clock. I would instead recommend that you use monotonic. This should provide you with consistent output, regardless if the system clock changes.The library I usually use is available here, and supports both Python 2.7 and Python 3.X.
Check wheather it ajusts clock from external source like NPT. 


Answer URL
https://docs.python.org/3/library/time.html#time.time
https://docs.python.org/3/library/time.html#time.monotonic
