Natural Text
I got the following code from the accepted answer in the following question.  When I run it up on my windows 10 x64bit machine, in Python 3.5.1 it starts the threads but only one of them shows any CPU usage, and it is very little at that.  While this is happening the terminal is scrolling up numbers from the print statement so it is running... When I run other python scripts that use loops I see 13.5% CPU usage for the script.  I expected to see this spin up 4 threads each with 13.5% CPU usage.I am running the script via windows command prompt and and these are the only 5 python processes running.  When I exist the script by pressing Ctrl+C all the processes stop.Why is this not working as expected?Question:How do I "multi-process" the itertools product module?Code From Accepted Answer:Thanks for your time.
You're not running anything asynchronously here; you call the functions before passing to the async workers. You should pass the callable, not the result:Also note that the return value from  is an AsyncResult instance: when you do come to calculating things in the workers, you'll need to call  on those values - again, after all the processes have finished - to actually get the results.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.AsyncResult
