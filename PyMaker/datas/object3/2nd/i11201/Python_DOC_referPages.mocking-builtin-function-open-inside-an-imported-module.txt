Natural Text
I want to test that the  function is called with the right arguments. This however is part of a different module from the one were the test live.In the  module I have this method (which is part of a class):I've create a  module where I have a series of unittests. I was thinking to patch both  and , because I'm passing to  . This however returns an AttributeError because the module doesn't have an attribute . How can I make sure Mock understand I'm trying to mock the builtin function?Is there also a better way to test I'm passing the right arguments to ? I'm kinda new to mocking. EDIT: I've made some progress. I think the issue was that I was trying to patch the wrong object. With  I think I have to patch . A bit counter-intuitive.Unfortunately now the compiler is complaining about the fact that the Mock object doesn't have a  method. EDIT 2: Following RedCraig's advice I've patched the  method in the local namespace and passed to  ftp_file instead of ftp_file.read()). So the current unit test is:And the code I'm trying to test:The current error I get is:
AssertionError: Expected call: storbinary('STOR output.zip', )Actual call: storbinary('STOR output.zip', <_io.TextIOWrapper name='./output/output.zip' mode='r' encoding='UTF-8'>)For the actual call  was given  rather than the mocked object. Seems like the mocking of  isn't working, perhaps your module name is incorrect.Here are the unittest.mock examples, this page has an example of mocking open:I tried mocking open in another module and it works, there's a catch when using it with . When patching open mock uses a MagicMock object, every call to  returns a new object. So the test case which patches  using a  style statement will have a different value for  than the open call from  ad  will fail.While I'm sure there's a better way with  and , I resorted to using a  object when mocking  so that each call returns the same  instance:This passes. Obviously you'll have to change your  to your module containing .Original Answer (@any so mod: should I just delete this?):1) This looks like the answer you're looking for:How do I mock an open used in a with statement (using the Mock framework in Python)?It mocks  using .2)  AttributeError: Mock object has no attribute 'read'It's complaining about the read because you're passing the read method to :and your mocked instance of open  doesn't have that method.3) You're checking that  was called with  but you're passing in .  invokes the read method whereas  is a reference to the method.4) Looking at the docs for , it expects the file object itself, not a reference to the file objects  method. It should be:Passing in the (mocked) file object will address point 3) above.


Answer URL
https://docs.python.org/3/library/unittest.mock-examples.html
