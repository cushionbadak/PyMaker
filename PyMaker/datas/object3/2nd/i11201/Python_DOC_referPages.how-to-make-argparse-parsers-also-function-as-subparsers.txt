Natural Text
Say I have some parsers already defined:Now I want those parsers to appears as sub-parsers.I know I could do this by repeating all of the add_argument calls, but I'm hoping for a DRY solution.Does argparse allow this, or do I have to define my subparsers anew?The reason I am asking, is that I have a collection of stand-alone scripts that I don't want to monkey with, but I would also like to provide a unified interface via sub-commands.  I want to import the parsers from each of the standalone scripts, and make them behave as subparsers in the unified interface.
Have you tried the  mechanism?  It's a way of populating a new parser (including a subparser) with arguments (and groups) from another parser.  Some even use it as a way of adding a subset of arguments to multiple subparsers.  It copies the arguments (Action objects) by reference.  Usually that works ok, but it imposes limits on customizing the arguments.https://docs.python.org/3/library/argparse.html#parents==================A subparser is created with this method:In theory it could be customized to work with your predefined parser instead of creating a new one.  It probably would take me a half hour to debug such a change.


Answer URL
https://docs.python.org/3/library/argparse.html#sub-commands
https://docs.python.org/3/library/argparse.html#parents
