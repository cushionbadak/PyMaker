Natural Text
hi am looking for a way to extract header names (what is in bold) from this block of text (originaly from mbox file)i tried this regex that worked on sublime text regex search but didnt work on python^\w+-?(\w+)?-?(\w+)?:THIS IS WHAT IS INSIDE mailX-Apparently-To: test@yahoo.com; Thu, 09 Jun 2016 13:41:21 +0000   Return-Path:    Received-SPF: pass (domain of yahoo.com designates 72.30.235.45 as permitted sender)   Received: from 127.0.0.1  (EHLO n3-vm9.bullet.mail.bf1.yahoo.com) (72.30.235.45)   by mta1287.mail.ne1.yahoo.com with SMTPS; Thu, 09 Jun   2016 13:41:21 +0000   DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoo-inc.com; s=yibm; t=1465479679;    To: test@yahoo.com   From: "Yahoo"    Reply-To: "Yahoo"    X-YMailISG: PCypxycWLDvGv4Bg8ShrtzVYi3vpFMAjYaqWyWybcVJ_ZQff  eyquyqb..Qu6UKhX_Tyz5b3da2iDtRStJpVnNulZHOb8GznJQTCKk9sjvboS   KsbzY4E1uScWz0Ieo0jjG0YHrB1dTCzOSeMiPNumCCFS1sR3_SkyMBGG_D2D   wWtdRducxLa2YgEMMubVpMtNJMBv.bwk0.E.jQNEy8I3LnJEqcDpmIUM7bZL   XgkEFz7yl1Zo6Sj4r0z6pGlVIFOql7uG9Bwq2VJoK1Q1upKJUOBfQqzf64y2   9fXLnQsWENpZloxwncGzLhdzEYGgE3xNuFV8QFxZGXyvtKZFoykH49M03URN   jtx8Yg6ypjyRbBIRVJGVFbjAvW6io3yeyIFh042jlgYQtLxbneFA60hn9ifT   Mit3bQ5l7Tginw0OgRM2cbqLo0tEZFt9vlN597Z3vPGwsVdBcTp9wnk6orj2   TqjEpAmODy3Yru2HzDP7Dbwq9CGaIozUm91VNWqw5Dy7AMQEsuvnBop7Fflk   G21m1WKMBgrS.2bOLQ4797E09LjlyyoWI9FouUNNhDljnPPf2AeKUKzauctw   ULOQPveWAm4lDsNLMp5yvXDYNIe5HMor84SVd8_xF3Icna1PAftXGzJUHrXK   NZSEN_VO0GprGfaNQg4uSW_0wXFXwC6TYQ4CMjz53o0qNGpILogVfRLwFCFL   DtW8nimkLLsNzmDajzJsR_juA86Orw2NE5ED4qdpPxmyxyrXYOQPu3O6zeYf   7mBzU0aX7VHJUxJ4L3HdB9qTjbTaCdnySrnjGtd7u9Cn9yRJirDNeg3UA82P   PeA1ZDfc0vKdrn5QI6e6YKa2TTt7Dspy3jObgSapH5epc3LyQVyN7yjpxrq_   MXAbpqedjUfcwq3c7lpt8xxUxy.MXWg0fJO059xijvb_sYTaQTGUWAMeVU.6   IW.hSksejwpn._CgE9Kqabbk5qgYIdYRW1pmz5OBYh0skCX1TrFRuxbGvDit   R_wr.wbTpJGiSST.b0ZetmgN72bVvlRtmNPw1Dk.zxaacXxhGSMWupPUDLJZ   OMrap2ax8oiQrxT3jIhk8seIkaNJ.tGUhlPx6G4lJJaz0g89LmjBaEjGUG8P   W3Phh9db3hjxUIX5UC0jg5ai2XZ7u_wXn2Muk61N1eRCZ0oA2S25YDPK1dh.   3VQ6pH8SSBxVkQHUJXbZUNqLAzi5V5wRS7oeitXERGgA2DiZB268.rJxS7di   OMT5eGoITG4LnAo1M3nsVQ6xceHDd4v6KD9KfBgTHX_iLUv_skCv4dVUgVvj   edKOFiOMHBTpJ9J9BECjTTzEUpc.fCNUcRwSsiSkqbRhUsAdCbxQZir3Nb1Z   6FzI6J2eNqpj4azjmDeI15R8MyN7VFc6bl6pCZySk2Tx5SQESDm.sVkADSVR   pI2nuscEjU3xo_qGUxbh5mbAA17K2zYpcFXaOce8_9Eszos5pURCcdtBYUqI   I_DOtvNe.zWY1ShRcr9ZzTj3ibmc7NBmvumhVMjqirb12mfJ6oxHv8d86gze   HtAJmJghczUg5otSzdxSgEJJxjMZrzSidJ9FP.gPiPWtuukz82YpZ32MnCVs   6.V2DRxpUmZa31KH93QSEzwMlCn3FFTLBv9izcjoFP81yeAn.3QloF8XIC3K  WmtXtloyeGjuygAhlkd_prXmMGGC5JmPlY8xu4k1NavkdDh6pG6zIkt83Wsd  p.D.0BgM   X-Originating-IP: [75.30.245.45]   Authentication-Results: mta1287.mail.ne1.yahoo.com  from=yahoo-inc.com; domainkeys=neutral (no sig);  from=yahoo-inc.com;  dkim=pass (ok)
A simpler approach than devising an appropriate regex might be to use a more appropriate tool that comes with python ... the  module, which is designed to parse rcf822 messages such as this.
If you're running a regex over the entire mbox file then a regex will not work - you're going to have to write a program.  The reason is that the body of the message has the potential to have tokens that will match exactly what a header token will look like.Assuming that you're ONLY running the regex over the header portion of the mbox file(s) then, looking at the email RFC (section 2.2.) then the following regex should work:'^([^:]+):'
Python provides the email package that can do those low-level tasks for you, but if you want to learn email headers the hard way, the reference is the RFC5322 (formely RFC822)Among other sensible information, you find the definition of header fields:Header fields are lines beginning with a field name, followed by a     colon (":"), followed by a field body, and terminated by CRLF.  A     field name MUST be composed of printable US-ASCII characters (i.e.,     characters that have values between 33 and 126, inclusive), except     colon.  A field body may be composed of printable US-ASCII characters     as well as the space (SP, ASCII value 32) and horizontal tab (HTAB,     ASCII value 9) characters (together known as the white space     characters, WSP).  A field body MUST NOT include CR and LF except     when used in "folding" and "unfolding"Folding is later defined by:the field body portion of a header field can be split into a     multiple-line representation; this is called "folding".  The general     rule is that wherever this specification allows for folding white     space (not simply WSP characters), a CRLF may be inserted before any     WSP.That means that:when a line does not start with a WSP ( in a regex) the start of line up to a column is the header name.when a line starts with a WSP, it is a continuation line.So this regex should be enough: 
Your  regex matches the beginning of a string (), then 1+ word chars, followed by an optional , then 1+ word chars are captured into an optional Group 1 (and those are returned by  as the first item in each tuple returned as a list), followed with an optional hyphen, again a capture group matching 1+ word chars (optional, but still returned as the 2nd item in the tuple), and a  at the end. It would not work because of , optional  between  and 2 capture groups.If the input you get complies with the rfc 8222 message style, you should consider switching to a  solution given above.Alternatively, it seems to me you can just capture all characters other than whitespace and a colon up to a colon that is followed with whitespace at the beginning of a line:And use it with  and  flag.Regex explanation: - start of line (as  makes  match the position after a newline) or start of string) - Capture group 1 matching 1+ characters other than whitespace and a colon - a colon - a whitespace character.See the regex demoPython demo where  returns only the captured texts:UPDATENow, since you requested to get values only, you can use the same approach, but just strip the keys when found and add the values to the resulting list:See the IDEONE demo


Answer URL
https://docs.python.org/3/library/email.parser.html
