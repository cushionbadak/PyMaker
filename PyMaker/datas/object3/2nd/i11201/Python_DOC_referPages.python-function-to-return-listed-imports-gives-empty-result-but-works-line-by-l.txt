Natural Text
Adapting code fromHow to list imported modules?to look likeand saved as imports.py. Intended to be activated in the formInstead, returns an empty list .Have looked herePython.org classes + generatorsherePython.org Data structures: list comprehensionsand herePython return list from functionand not getting it.When I run the function body line by line I get the desired result (a list of the imported modules stored in ). When it's run as a defined function it gives an empty list. Why is my returned list variable empty? I've also tried  with the same result.
The  function returns the global namespace for the module it is used in. You are seeing the modules that are imported in your  module, and there are 0 such imports. You can't use this function if you wanted to access the globals of the code that called your function.You'd have to use the globals of the calling frame instead; in CPython you can do this with the  function, which returns a frame object; the  attribute on that frame is the global namespace of the caller of your function:Alternatively, have the caller pass in a namespace; that way you can list the modules used in any module:The above version still uses  if you call the function without arguments. But you could use it on any dictionary now:This uses the  function to grab the namespace dictionary of the  module, for example. This produces:


Answer URL
https://docs.python.org/3/library/functions.html#globals
https://docs.python.org/3/library/sys.html#sys._getframe
https://docs.python.org/3/library/functions.html#vars
