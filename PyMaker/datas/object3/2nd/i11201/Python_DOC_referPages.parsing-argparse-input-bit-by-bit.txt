Natural Text
I am using Argparse to parse shell input to my Python function. The tricky  part is that this script first reads in a file that partially determines what kind of arguments are available to Argparse (it's a JSON file containing criteria by which the user can specify what data to output). But before these arguments are added to my parser, I would like to read in some arguments relating to the file reading itself. (e.g. whether to fix the formatting of the input file). Kinda like this:When I try to run  twice, after the initial input and after adding more keys, things fall apart: Argparse quite predictably complains that some of the user input are . I thought I might use subparsers to that end.So I tried variations of (following the example in the docs as best as I could):Then I try to parse only the "settings" part like so:This seems to work. But then I add my other keys and things break: If I parse any input for any of the arguments from keys, Argparse complains that I make an . Now I don't understand why I have to choose from "settings"; the docs say that the parsewill only contain attributes for the main parser and the subparser that was selected by the command line (and not any other subparsers)what is my error of understanding here?and if this is the wrong approach, how would one go about parsing one bit of input before another bit?Any help is much appreciated!
 calls .  This returns the  namesparse along with a list of strings (from ) that it could not process ().   raises this error if this list is not empty.https://docs.python.org/3/library/argparse.html#partial-parsingThus  is useful if you want to parse some of the input. remains unchanged.  Subsequent calls to a parser (whether it was the original one or not) use that again, unless you pass the .I don't think subparsers help you here.  They aren't meant for delayed or two stage parsing.  I'd suggest playing with the documentation examples for subparsers first.To the main parser, the subparsers look likeIn other words, it adds a positional argument where the  are the subparser names that you define.  That may help you see why it expects you to name .  Positionals are normally required.(there's an exception to this in recent versions, https://stackoverflow.com/a/22994500/901925)


Answer URL
https://docs.python.org/3/library/argparse.html#partial-parsing
