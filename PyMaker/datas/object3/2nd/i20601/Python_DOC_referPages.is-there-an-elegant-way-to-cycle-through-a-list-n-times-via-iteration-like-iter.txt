Natural Text
I'd like to cycle through a list repeatedly (N times) via an iterator, so as not to actually store N copies of the list in memory.  Is there a built-in or elegant way to do this without writing my own generator?Ideally, itertools.cycle(my_list) would have a second argument to limit how many times it cycles...  alas, no such luck.  
Itertools is a wonderful library. :)

For the special case where you need to iterate over a list several times, this is not too bad.It does create a list of  references to , so if  is very large it is better to use Darthfelt's answer
All the other answers are excellent. Another solution would be to use . This allows you to interrupt the cycle at any point:
You said that you don't want to write your own generator, but a generator expression would probably be the easiest and most efficient way to accomplish what you're after. It doesn't require any function calls or importing of any modules.  is a great module, but maybe not necessary in this case?or justor
@Darthfett's answer is documented as an itertools recipes:For convenience, I add that the  library implements this recipe (and many others) for you:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
