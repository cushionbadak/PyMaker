Natural Text
I'm having trouble removing entries from a set.'asins' is a set of tuples, created like this:oos is a list.  I'm trying to remove every entry in 'asins' that exists also in 'oos'.  Unfortunately, the "del asin" doesn't actually work, as it doesn't delete the entry from 'asins'.
You can do this readily with a generator expression. It shouldn't be that inefficient, but I wouldn't call it efficient either.Note that this creates a new set. This is probably for the best as you cannot iterate over a set and change it in place. For example, changing  to  will raise a .
 used like that will just delete the local variable  but not the actually referenced object, and especially not the object that is contained in the set.Instead, you would need to call  to remove the element:However, you don’t actually need to loop through the set to remove an item from it. The whole benefits of sets is that you have constant time access, so you can check membership in constant time, making looping over it rarely useful.Since you’re storing complex tuples though, and you only identify an element by the first tuple element, you cannot do that here. What you should do is switch to a more appropriate collection. In your case, you want a dictionary:Then you can just do the following:That would be O(n) in the average case.


Answer URL
https://docs.python.org/3/library/stdtypes.html#set.remove
