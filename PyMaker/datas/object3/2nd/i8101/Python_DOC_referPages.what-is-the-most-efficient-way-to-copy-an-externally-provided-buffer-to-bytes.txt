Natural Text
I am interfacing to an external library using ctypes. This library returns to me a binary buffer. The interface looks like this:The library also exports a deallocator so that I can free the buffer when I am done with it, but that aspect presents no problems to me, so I don't think we need to cover it.In my ctypes code I am representing the  argument as . I would like to copy this buffer into a bytes object as efficiently as possible.At the moment I have:where  is  and  is .As I understand it, this performs two copies. Once to the bytearray object, and then again to the bytes object.How can I do this with only a single copy? My current efforts have concentrated on Python 2, but in due course I will need to support this for Python 3 as well.
Apparently you can slice a ctypes pointer. Not , , or , but  types work. For a , slicing it gives you :Thanks to eryksun for bringing that up. Also, it's not clear why  is a  instead of already being a . (For a , the code would be just .)For getting  from a general object that supports the buffer protocol,  involves one less copy than :This is compatible with both Python 2 and Python 3.Keep in mind that the  here needs to be a pointer to the buffer, not a pointer to a pointer to the buffer.  takes a pointer to a pointer (so probably ).


Answer URL
https://docs.python.org/3/library/ctypes.html#ctypes._Pointer
