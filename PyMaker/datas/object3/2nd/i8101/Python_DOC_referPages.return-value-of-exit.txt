Natural Text
I understand that and  are used to implement a context manager. if an exception occurs in a  statement, the exception's type, value and traceback are passed to the  method. can handle the exception:Returning : the exception is gracefully handled.Returning anything else: the  statement raises the exceptionI came across the following  method. Is the return statement  redundant? since it seems to me that,If no exception occurred,  will naturally be , so  returns true. Nothing is raised.If an exception did occur,  is set to the actual exception type, so  returns false. The exception is raised as is.
Yes, that return statement is redundant. Only when  is not   does the return value matter.From the  documentation:If an exception is supplied, and the method wishes to suppress the exception (i.e., prevent it from being propagated), it should return a true value. Otherwise, the exception will be processed normally upon exit from this method.Note that a true value will suppress the exception; so  or  would also work, not just .Removing that  line would result in  being returned instead, and the functionality would remain unchanged. Readability would be improved however, because that  statement is just confusing on multiple levels (why not use  for example?).


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__exit__
