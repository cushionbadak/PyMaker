Natural Text
Imitating an "increasing" C-styled for loop in Python is very simple:can be easily implemented in Python, Without consuming memory for an array from A to B, using:But what about decreasing loops?How can one imitate C-styled loops such as:Even using  constructs an array in the memory, as  first has to evaluate the whole  generator in order to yield its values reversed...Is there any trick for implementing such a for loop in Python, without constructing an array in the memory? Is there an equivalent for  generator, that yields decreasing numbers?
range takes 3 args . The step arg can be negative to iterate backwards.Note that the start is  because lists are 0-indexed so the max idx is 9 for a list of length 10.Negative steps don't have to be 1 either:In answer to your second question, you can set arr to be a countdown from the beginning
Just go ahead and call  on the result of . It won't build the whole list because the  object has a  method, which the  function detects and uses. Here's how you can see that it has that method:This is assuming you're using Python 3. In Python 2,  builds a list in memory regardless of whether you reverse it, although most of the time it makes no performance difference. You can use , which is like Python 3's , and also has a  method.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__reversed__
