Natural Text
Why does a "?" character appear in the following hex value? (I am using Python 3.5.1)My aim is to convert  into hex value pairs.The value for  I get is this:What is the significance of the  character? I would have expected the output to have been:
The ? occurs due to the fact that unhexlify has used 3F as a byte code, which is the ASCII code for '?'. Thus, Python has displayed these bytes as an ASCII code.
@Benedict answer's is correct, Here is some sources to help you understand:binascii.unhexlify() official python documentation.wikipedia -- ascii tableOriginally based on the English alphabet, ASCII encodes 128 specified  characters into seven-bit integers as shown by the ASCII chart  above.[8] The characters encoded are numbers 0 to 9, lowercase letters  a to z, uppercase letters A to Z, basic punctuation symbols, control  codes that originated with Teletype machines, and a space. For  example, lowercase j would become binary 1101010 and decimal 106.  ASCII includes definitions for 128 characters: 33 are non-printing  control characters (many now obsolete)[9] that affect how text and  space are processed[10] and 95 printable characters, including the  spaceThe ascii table valuesConvertor to hexa, decimal, octal, asciiFor  character:binary: 00111111. in python,  will output octal: 77.        in python         will output decimal: 63.      in python           will output hexadecimal: 3F.    in python         will output As you can see, you can use prefixes like , , or  before  to make python understand you are not working with decimal numbers. However  is out of the ascii table (because it goes from 0 to 127).  being 140 in decimal it cannot display the equivalent.
This problem can be solved by the below given way.Answer ùasdfsadfé asdfsdfsdf À sdfsdfsdfdsf ú


Answer URL
https://docs.python.org/3/library/binascii.html#binascii.unhexlify
