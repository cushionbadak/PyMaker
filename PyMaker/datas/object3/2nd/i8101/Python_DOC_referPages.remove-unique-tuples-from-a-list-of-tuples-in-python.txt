Natural Text
I'm writing a program that find duplicated files, and right now I have a list of tuples as I want to remove the entries that have a unique hash, leaving only the duplicates. I'm usingwhere I pop an entry, look if there is other one with the same hash and group then in a list of list with the same hash. Then I make another list just with the sublists with len > 1 and flat the resulting list of lists into a simple list.My problem is that when I remove an entry from a list while using 'for myfile in mylist:' on the some list, it jumps same entries and live then behind.
Copy your list in a dictionary where the hash is the key, and on a second pass remove those with a single count - you can even use  to spare one or two lines of code:(Non-related tip: avoid naming your variables as "list" or "dict" - that overrides Python default built-ins for those)
I would use a defaultdict() to group the tuples by their hashvalue:
Solution using groupby
You can use double  like this:Result:Note that in Python 3,  returns an iterator, so you'll need to convert it to a list like this: 


Answer URL
https://docs.python.org/3/library/collections.html#defaultdict-objects
https://docs.python.org/3/library/functions.html#filter
