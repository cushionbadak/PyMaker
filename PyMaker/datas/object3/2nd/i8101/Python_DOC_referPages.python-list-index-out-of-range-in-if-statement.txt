Natural Text
I have a list that usually contains items but is sometimes empty.Three items from the list are added to the database but I run into errors if it's empty, even though I'm using an  statement.This still raises the  error if the list is empty. I can't find any other ways in which it could be done, but there must be a better way (I've also read that you should avoid using  statements?)
If a list is empty, the list has no index; and trying to access an index of the list causes an error.The error actually occurs in the if statement.you could obtain the result you expect by doing this:This line of code creates a temporary list consisting in the concatenation of  and a list of (3 minus the size of ) "unknown" strings; which is always a 3-items list. It then unpacks this list in the ,  and  variablesdetails:You can multiply a list to obtain a bigger list with duplicate items:  gives . This is used to create a list of "unknow" strings. Note that multiplying a list by 0 results in an empty list (as expected).You can use the addition operator to concatenate 2 (or more) lists:  gives . This is used to create a 3-items list from  and the 'unknown' list created by multiplication.You can unpack a list in several variable with the assignation operator:  gives . It it even possible to use extended unpacking  gives .example:
Python will throw this error if you try to access an element of an array that doesn't exist. So an empty array won't have index 0.
 will immediately raise an error if there aren't 2 elements in the list; the behavior isn't like that of languages like Clojure, where a null value is instead returned. Use  instead. 
You need to check if your list is long enough to have a value in the index position you are trying to retrieve from. If you are also trying to avoid using  in your condition statement, you can pre-assign your variables with default values.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
https://docs.python.org/3/tutorial/index.html
