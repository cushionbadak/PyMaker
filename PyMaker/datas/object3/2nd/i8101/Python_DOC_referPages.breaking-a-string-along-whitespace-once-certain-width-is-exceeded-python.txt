Natural Text
I am rendering text atop a base image. One core requirement is for the string to wrap to the next line(s) whenever the total width of characters exceeds the width of the base image. I accomplish this via the following correctly-working snippet:The result  is a list of substrings gotten via breaking up the original string. Now I need to improve this algorithm. The problem is that it breaks the line mid-word. E.g. The string  could end up as . Instead, the ideal break-up for me is the much more human readable , or . In other words, I want to break the lines along white spaces, and not mid-word. Can someone give me an illustrative example of how I can accomplish that? Can't seem to wrap my head around it.
Here's an attempt to get your code working with minimal changes, and lots of debug output:Output:
There is a python module textwrap specifically for this:edit:I misunderstood the author's purpose. The problem is that the width of a line is not defined as the number of characters but as the width of the image containing the rendered text. I came up with a hacky method by implementing a custom string class with correct width definition and modifying the  class slightly:
Maybe this simple approach helps, although I assume recursion may be more elegant. Note that the fixed value for character width needs to be replaced with the corresponding function call.Output:
I couldn't get this out of my head, so here it is a little more compact:
Here's a modified version of @handle's third answer that also allows splitting long words.This function also allows one to specify a maximum number of lines and truncate with "..." when over the limit.
Here's how I've approached the problem's solution (re-wrote my original code):


Answer URL
https://docs.python.org/3/library/textwrap.html
https://docs.python.org/3/library/stdtypes.html#str.split
