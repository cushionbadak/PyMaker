Natural Text
I am making a library that deals with Python modules.  Without getting into details, I need a list of the common Python module extensions.Obviously, I want , but I'd also like to include ones such as , , etc.  In other words, I want anything that you can import.Is there a tool in the standard library which will make this list for me?  Or do I have to make it myself (and hardcode all of the values)?
This functionality can be found in the  module. Inside, there are numerous constants which relate to the various Python module extensions:So, you could very easily join these into a global set1:You might also be interested in the  function:Note however that this function will replace  with  if Python is launched with either the  or  options.  To avoid this, you can do:This will ensure that both  and  are in the set.Finally, you should be wary of .  As @MartijnPieters noted in the comments, it will always be equal to either  or .  This means that if you add it to the collection, you will get either a duplicated  or a duplicated  value (unless you use a set of course).From the docs:A list of strings representing the recognized file suffixes for bytecode modules. Set to either  or   based on whether  is true.I didn't bother using this constant however because I want both  and  in the collection.  So, there is no reason to add it.1I decided to use a set because they have a faster lookup time than lists.  Meaning, they are better suited for a global collection of values that will not change and which needs no particular order.  In addition, they will ensure that we do not accidentally add duplicate extensions to the collection.


Answer URL
https://docs.python.org/3/library/importlib.html#module-importlib.machinery
https://docs.python.org/3/library/importlib.html#importlib.machinery.all_suffixes
https://docs.python.org/3/using/cmdline.html#miscellaneous-options
https://docs.python.org/3/library/importlib.html#importlib.machinery.BYTECODE_SUFFIXES
https://docs.python.org/3/library/importlib.html#importlib.machinery.BYTECODE_SUFFIXES
