Natural Text
Suppose I have a number of lists of pairs (int, str), not necessarily of the same length. The only constraint here is that the lists are sorted in ascending order by their integer parts:What I would like to do is to emit the string elements in the order in which their corresponding integer elements occur i.e. in this case:I am wondering if there is an obvious (nice + pythonic) way to do this just using iterators of ,  and ? I've looked at  but can't immediately see how to use the functionality in this case. The lists , ,  might be very large so I'd like to do this without reading them into memory and then sorting ...
Since the lists are already sorted, you can use :This is also very efficient with large lists since it uses iterators internally.  From the docs link given above:Similar to  but returns an  iterable, does not pull the data into memory all at once, and  assumes that each of the input streams is already sorted (smallest to  largest).
is by far the most pythonic imho (although you can probably just leave it as a list and not wrap the extra you could certainly speed it up if this was a bottleneck(which I doubt it is)
 is likely the best choice.  FWIW  also offers a mergesort tool, similar to the accepted accepted answer:OutputSee  docs for more information.


Answer URL
https://docs.python.org/3/library/heapq.html#heapq.merge
