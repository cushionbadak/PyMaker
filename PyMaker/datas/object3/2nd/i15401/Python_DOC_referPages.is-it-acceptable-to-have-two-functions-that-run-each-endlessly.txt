Natural Text
I built a simple Python program to find if an input is a power of two or not. I have two functions,  and . After  runs,  then runs and reruns  Here's my code:Is code like this acceptable among Python programmers or is there a better way to replicate what I am doing here?
One problem with this approach is that you will eventually run out of stack, because we have a pair of mutually recursive functions. Each call uses up memory in the stack, which is never recovered.This isn't obvious with an interactive program since it will take a long time to create enough recursive calls, but if we speed things up:We get:Some languages can do tail-call optimisation so this technique works fine - but in Python it's better to create a loop to "play again", unless you can be sure that there will only be a small call depth.
It's not a very good way to programme in general because (aside from the possible maximum recursion depth problem) if your programme gets more complicated, you will end up with multiple spaghetti-like jumps between different functions, making it increasingly hard to read and debug.Instead it is more standard to have a  function that controls the overall programme flow and calls the other functions. It will also be better to have a clearer separation of roles between the two functions.
No - as was already said, you have the risk to run into stack overflow.You would better doThis is close to your solution, but far from perfect.It would be better to jet the function just do what it promises: check if the number is a power of two and nothing else.If you want to use a for loop, you can craft an iterable in the form of a generator which yields values until there are no more:Even this inner while loop can be replaced with a for loop, e. g. for counting:


Answer URL
https://docs.python.org/3/library/constants.html?highlight=quit#quit
