Natural Text
So, I've attempted to make a simple Base 10 to Base 16 converter (I realize this is Base 10 integer to a mock-Base 16 string). I'm fairly new to Python; I just started learning it this week (I have prior programming experience with C#, so I'm not lost on this).After running and inputting 1048575 (that's the highest it can go, so I'm expecting "fffff" as an output), it gives me:After I ran some tests which mainly involved printing the  to  values at the beginning and the end of the function, I've come to the conclusion that the issue lies somewhere in the  section. At any time before that, the variables behave normally. Right at the start of the function, after being inputted, the variables are numbers 0 through 15.Right before function  finishes up, they are 0 through 9, or "a" through "f". However, if I were to print value  immediately after , it gives me  as an output.From what I've read, this is essentially Python's null value. So, I've narrowed down the problem to the section where I'm running the function .
All functions in Python return  by default unless you have a return-statement.  So, if you want your  function to return a value other than , you need to put one:Since you say you have C# experience, perhaps you thought that doing:would pass  as a reference which would be modified inside  whenever you did:This is incorrect though because  is treated as a local name that gets assigned the value of .  For more information on this, see How do I pass a variable by reference?Also, there are a few things I'd like to mention about your  function:You do not need parenthesis with if-statements in Python.  In fact, most Python programmers consider them to be bad style. Instead, you should just do:There is not really a reason to do:since you can compare with integers directly:If you want, you could use a dictionary to avoid all those if-statements:


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-return_stmt
https://docs.python.org/3/library/stdtypes.html#typesmapping
