Natural Text
I can not explain the following behaviour:It seems to be that  refers to a copy, whereas  refers to the object itself.
 first takes a slice of all the elements in  (), which (as per list semantics) returns a new list object containing all the objects in  -- it's a shallow copy of .It then replaces the first element of that copied list with the integer  ().Then, the copied list is discarded because nothing is done with it.Your second example  replaces all the elements in  with those in the list . It's a slice assignment.
This is caused by python's feature that allows you to assign a list to a slice of another list, i.e.will set 's first two values to  and  respectively. Similarly,assigns new values to all elements of .More info about assignments in the docs.


Answer URL
https://docs.python.org/3/tutorial/introduction.html#lists
