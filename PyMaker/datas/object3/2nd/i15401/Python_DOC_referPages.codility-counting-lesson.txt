Natural Text
I'm studying Codility Counting Lesson (https://codility.com/media/train/2-CountingElements.pdf) and I need help to understand the fastest solution.I am wondering why the difference is divided by 2 in line 8 ? Shouldn't the difference be sufficient to find the elements that we can swap between the arrays?The Problem: You are given an integer  () and two non-empty,  zero-indexed arrays  and  of  integers, , , ... ,   and , , ... ,  respectively (, ).  The goal is to check whether there is a swap operation which can be  performed on these arrays in such a way that the sum of elements in  array  equals the sum of elements in array  after the swap. By  swap operation we mean picking one element from array  and one  element from array  and exchanging them.The solution:
A swap between ] and  adds  to  and subtracts the same value from ; therefore it affects the difference of the sums by twice .As a consequence, it's correct to halve the original difference (after checking it's even -- if it's odd no swap will work!-) to form the target for a possible swap.Note also that the  function they provide is not optimal modern Python -- to avoid reinventing the specific wheel of "counting items", see https://docs.python.org/2/library/collections.html#collections.Counter for Python 2, or https://docs.python.org/3/library/collections.html#collections.Counter for Python 3.
Let . Let . Then swapping element  and  would cause the following effects on those sums: , . According to the Problem description, then those sums should be equal, so  Let's designate  . Then we have the following equality:  which gives us  or . For the case when (Eb - Ea) is odd please see the comment from Alex MartelliThe only thing left is to find such  and  so that .


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
