Natural Text
I have the following code:I run this function until complete. The problem occurs when shutdown is set - the function completes and any pending tasks are never run. (You see this as an error). How do I schedule a shutdown correctly?To give some context, I'm writing a system monitor which reads from /proc/stat every 5 seconds, computes the cpu usage in that period, and then sends the result to a server. I want to keep scheduling these monitoring jobs until I receive sigterm, when I stop scheduling, wait for all current jobs to finish, and exit gracefully.
You can retrieve unfinished tasks and run the loop again until they finished, then close the loop or exit your program.pending is a list of pending tasks.asyncio.gather() allows to wait on several tasks at once.If you want to ensure all the tasks are completed inside a coroutine (maybe you have a "main" coroutine), you can do it this way, for instance:Also, in this case, since all the tasks are created in the same coroutine, you already have access to the tasks:
As of Python 3.7 the above answer uses multiple deprecated APIs (asyncio.async and Task.all_tasks,@asyncio.coroutine, yield from, etc.) and you should rather use this:
You might also consider using asyncio.shield, although by doing this way you won't get ALL the running tasks finished but only shielded. But it still can be useful in some scenarios.Besides that, as of Python 3.7 we also can use the high-level API method asynio.run here. As Python core developer, Yury Selivanov suggests:https://youtu.be/ReXxO_azV-w?t=636Note: asyncio.run function has been added to asyncio in Python 3.7 on a provisional basis.Hope that helps!


Answer URL
https://docs.python.org/3/library/asyncio-task.html#shielding-from-cancellation
https://docs.python.org/3/library/asyncio-task.html#running-an-asyncio-program
