Natural Text
Suppose I have a dictionary that is nested arbitrarily:And a list of keys whose position tells me which nested dictionary to look for every key in:Is there a simple one liner to do this? I've looked at the questions listed below, and they are similar, but not really what I'm looking for. I have also attempted it myself and came up with this:The problem with this, is that in case of second list of keys (see commented out keys), it continues looking up nested keys further, even though the higher level key wasn't found, and continuing is pointless. How can I stop  as soon as I find a final match or fail (one of the questions listed below addresses it, but I can't really apply it in my use case... or can I?)? Any other ideas? Oh and I want to accomplish this using official python libraries only. So no ,  etc, but ,  are finePython: Convert list to dict keys for multidimensional dict with exception handlingIs there a simple one-liner for accessing each element of a nested dictioanry in Python?Accessing nested values in nested dictionaries in Python 3.3Using itertools for recursive function applicationStopping a Reduce() operation mid way. Functional way of doing partial running sumFinding a key recursively in a dictionaryThanks!
You can use :For the keys you mentioned, it goes like this:call  with  (initial) and the first item of  () to get call  with the result (a dictionary) and the next item in  () to get call  ......until  is "reduced" to the final value ()Edit: As  results in  if there is no such key, there might be undesired results.  If you want to have a , you can use  instead.
Here's a solution I came up with that also gives back useful information when given an invalid lookup path, and allows you to dig through arbitrary json, including nested list and dict structures. (Sorry it's not a one-liner).



Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
