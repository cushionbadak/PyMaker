Natural Text
I am attempting to split a string of integers by every n character and then convert them to unicode. Unfortunately, I came across a problem... Since the leading 0s has been dropped from the string, it makes me confused about how to handle them. Here is an exampleï¼šHere the leading 97 is a valid number in the ASCII table and I can simple add a "0" before the string so that this whole string will be correctly split into something like this:However, what if the first three digits are actually valid in the ASCII table? Like this:In this case I want it to be split into But how do I make sure this does not need a "0" anymore if something happens in my function?My current code is below:
Just add leading zeros when necessary.
I would do this using  to round up the length of my string to the multiple of  then  my string. From there to split my string what other better way than using a generator function?Demo:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format
