Natural Text
I have to assert that value val1 >= val2. That is in terms of Model checking, the witness(counterexample) has to assert that the val1 >= val2. I can do it easily in C (cbmc) by:Is there a way to do that in Python?Update:causingBut if I do The result is the reverse of what I want (I want val2 >= val1).Edit:Depending upon the value of z and r chosen, this will break or goes through and prints x , y. So this not working as __CPROVER_assert does, which finds a witness / interpretation that is valid / satisfied !For example, my three different runs of same code resulted as:Is there any way to check satisfiability of a constraint in Python.
(Given the original post) With the following Python code, If  is ,  will be , and there will be no :
I still not sure if this is what you want, but if all you need is 2 random numbers x, y such that x>=y all you need to do if force that condition, like thisas we only want 2 numbers we can use the build-in function  and  to choose the order of those numbersexample of use:this can be extended to any arbitrary size by returning a list instead, and if we want that that list be ordered as well we can use the build-in  functionhere I use a generator expression, to well, generate as many number as asked for, pass that to  and let it do its job and with  I control if it is descending order or notexampleif the order is irrelevant, then a simple list comprehension is enoughexample


Answer URL
https://docs.python.org/3/library/functions.html#max
https://docs.python.org/3/library/functions.html#min
https://docs.python.org/3/library/functions.html#sorted
https://docs.python.org/3/howto/functional.html?highlight=generator%20expression#generator-expressions-and-list-comprehensions
https://docs.python.org/3/howto/functional.html?highlight=generator%20expression#generator-expressions-and-list-comprehensions
