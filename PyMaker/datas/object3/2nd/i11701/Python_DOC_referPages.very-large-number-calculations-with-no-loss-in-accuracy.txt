Natural Text
Very Large number Calculations with No Loss in Accuracy ?Given a 1700 digit number, we want to store the value and perform two functions on itwith NO loss of accuracy, its ok if calc time takes longer but better if faster.Where  = a 1700 digit long numeric valueThe two calcs to be computed with be ; * (up to a four digit value )then we take the modulus of this resultant of 400 ;If we cant multiply  [  * (up to a four digit value ) ] and then take the modulus due to processing bottlenecks, ceilings - then can this be done where we first take themodulus of the original  = 1700 digits and then multiply this by the four digit valueand then take the modulus of this after?  Ideally Id prefer to be able to do thefirst scenario.Constraints Im aware of regarding this to date ;Firstly, Im only running on a WinXp 32 bit system and not able to upgrade currently.Secondly, Ive been becoming aware of a lot of issues, bugs, errors with python, sympy,etc.. in properly handling very large number calcs.  These problems seem to ariseout of data loss through use of floats and related.  Details on a number of differentapproaches can be viewed here ;https://groups.google.com/forum/#!topic/sympy/eUfW6C_nHdIhttps://groups.google.com/forum/#!topic/sympy/hgoQ74iZLkkMy system will not properly handle "float128" floats, although Ive been toldby one person this would be able to handle wsuch a computation - altho the probis it seems that float128 is rarely actually a 128 float and certainly not on my system.Also due to internal processing peculiarties it seems that most floats will losedata on these kinds of computations.  If I understand correctly, one of the best candidates for getting the most accurate values returned involves the useof arbitrary precision and representing the inputs as strings and not just straight numerocvalues?  Also, ideally, Id like the formula to be able to handle rationals withoutaccuracy loss.  So  "x" starts off as a whole number, but when I multiply itby the four digit value, Id like that value to be any numeric value such as an integer,whole number or rational like "2243.0456".Structure of one of the methods Ive been experimenting with ;An example with live data ;But I have no idea if accurate results are being returned with this, would love to hear anyones suggestions?
Fractions can grow to a very large amount. Although less efficient, they might do what you want.


Answer URL
https://docs.python.org/3/library/fractions.html
