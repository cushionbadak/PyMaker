Natural Text
I am trying to analyze some binary files and assumed that Python's  function returned a string from this article and a Tutorials Point article.Yet when I messed around  myself I got a something other than what I read.When tested on my own, the output of a  call returned a  object, not a  object. What am I not getting?
You are using Python 3.  You linked to information about Python 2.The documentation states:As mentioned in the Overview, Python distinguishes between binary and text I/O. Files opened in binary mode (including 'b' in the mode argument) return contents as bytes objects without any decoding. In text mode (the default, or when 't' is included in the mode argument), the contents of the file are returned as str, the bytes having been first decoded using a platform-dependent encoding or using the specified encoding if given.Python 3 is very deliberate about bytes versus characters (strings).  Python 2 is sloppy about it, which can cause many problems.  
You can open in  or  mode (the default is read binary, giving you bytes).  This is mentioned in the  docstring:  The mode argument can be "r", "rb", "w", "wb", "x", "xb", "a" or "ab" for  binary mode, or "rt", "wt", "xt" or "at" for text mode. The default mode is  "rb", and the default compresslevel is 9.If you pass the keyword argument  when opening (and you know the right encoding), then you should get a string returned when calling  method.  


Answer URL
https://docs.python.org/3/library/functions.html#open
