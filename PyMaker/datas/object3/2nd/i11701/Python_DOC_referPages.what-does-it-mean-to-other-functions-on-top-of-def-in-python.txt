Natural Text
I'm looking at some Python code which used the  symbol, but I have no idea what it does. I also do not know what to search for as searching Python docs or Google does not return relevant results when the  symbol is included.
An  symbol at the beginning of a line is used for class, function and method decorators.Read more here:PEP 318: DecoratorsPython DecoratorsThe most common Python decorators you'll run into are:@property@classmethod@staticmethodIf you see an  in the middle of a line, that's a different thing, matrix multiplication. Scroll down to see other answers that address that use of .
PreambleI admit it took more than a few moments to fully grasp this concept for me, so I'll share what I've learned to save others the trouble.The name decorator - the thing we define using the  syntax before a function definition - was probably the main culprit here.ExampleThis shows that the // you're defining after a decorator is just basically passed on as an  to the / immediately after the  sign.First sightingThe microframework Flask introduces decorators from the very beginning in the following format:This in turn translates to:Realizing this finally allowed me to feel at peace with Flask.
This code snippet:Is equivalent to this code:In the definition of a decorator you can add some modified things that wouldn't be returned by a function normally.
In Python 3.5 you can overload  as an operator. It is named as , because it is designed to do matrix multiplication, but it can be anything you want. See PEP465 for details.This is a simple implementation of matrix multiplication.This code yields:
What does the “at” (@) symbol do in Python?In short, it is used in decorator syntax and for matrix multiplication.In the context of decorators, this syntax:is equivalent to this:In the context of matrix multiplication,  invokes  - making this syntax:equivalent to and equivalent to where  is, for example, the numpy matrix multiplication function and  and  are matrices.How could you discover this on your own?I also do not know what to search for as searching Python docs or Google does not return relevant results when the @ symbol is included.If you want to have a rather complete view of what a particular piece of python syntax does, look directly at the grammar file. For the Python 3 branch:We can see here that  is used in three contexts:decoratorsan operator between factorsan augmented assignment operatorDecorator Syntax:A google search for "decorator python docs" gives as one of the top results, the "Compound Statements" section of the "Python Language Reference." Scrolling down to the section on function definitions, which we can find by searching for the word, "decorator", we see that... there's a lot to read. But the word, "decorator" is a link to the glossary, which tells us:decoratorA function returning another function, usually applied as a function transformation using the  syntax. Common  examples for decorators are  and .The decorator syntax is merely syntactic sugar, the following two  function definitions are semantically equivalent:The same concept exists for classes, but is less commonly used there.  See the documentation for function definitions and class definitions  for more about decorators.So, we see thatis semantically the same as:They are not exactly the same because Python evaluates the foo expression (which could be a dotted lookup and a function call) before bar with the decorator () syntax, but evaluates the foo expression after bar in the other case.(If this difference makes a difference in the meaning of your code, you should reconsider what you're doing with your life, because that would be pathological.)Stacked DecoratorsIf we go back to the function definition syntax documentation, we see:is roughly equivalent toThis is a demonstration that we can call a function that's a decorator first, as well as stack decorators. Functions, in Python, are first class objects - which means you can pass a function as an argument to another function, and return functions. Decorators do both of these things.If we stack decorators, the function, as defined, gets passed first to the decorator immediately above it, then the next, and so on.That about sums up the usage for  in the context of decorators.The Operator, In the lexical analysis section of the language reference, we have a section on operators, which includes , which makes it also an operator:The following tokens are operators:and in the next page, the Data Model, we have the section, emulating numeric types, [...]  These methods are called to implement the binary arithmetic operations (, , , , , , [...]And we see that  corresponds to . If we search the documentation for "matmul" we get a link to What's new in Python 3.5 with "matmul" under a heading "PEP 465 - A dedicated infix operator for matrix multiplication".it can be implemented by defining , , and   for regular, reflected, and in-place matrix multiplication.(So now we learn that  is the in-place version). It further explains:Matrix multiplication is a notably common operation in many fields of  mathematics, science, engineering, and the addition of @ allows  writing cleaner code:instead of:While this operator can be overloaded to do almost anything, in , for example, we would use this syntax to calculate the inner and outer product of arrays and matrices:Inplace matrix multiplication: While researching the prior usage, we learn that there is also the inplace matrix multiplication. If we attempt to use it, we may find it is not yet implemented for numpy:When it is implemented, I would expect the result to look like this:
What does the “at” (@) symbol do in Python?@ symbol is a syntactic sugar python provides to utilize ,to paraphrase the question, It's exactly about what does decorator do in Python?Put it simple  allow you to modify a given function's definition without touch its innermost (it's closure).It's the most case when you import wonderful package from third party. You can visualize it, you can use it, but you cannot touch its innermost and its heart.   Here is a quick example,suppose I define a  function on IpythonYou see, I forgot to add a name to it.How to solve such a problem? Of course, I could re-define the function as:Nevertheless, what if I'm not allowed to manipulate the original function, or if there are thousands of such function to be handled.Solve the problem by thinking different and define a new_function  Then employ it.Tada, you see, I amended  without touching it inner closure. Nothing stops me equipped with .What's about  is a fancy and handy way to say , it's a syntactic sugar, there's nothing more fancier about it.
If you are referring to some code in a python notebook which is using Numpy library, then  means Matrix Multiplication. For example:
Starting with Python 3.5, the '@' is used as a dedicated infix symbol for MATRIX MULTIPLICATION (PEP 0465 -- see https://www.python.org/dev/peps/pep-0465/)
@ symbol is also used to access variables inside a plydata / pandas dataframe query, .Example:
It indicates that you are using a decorator. Here is Bruce Eckel's example from 2008.
To say what others have in a different way:  yes, it is a decorator.In Python, it's like:Creating a function (follows under the @ call)Calling another function to operate on your created function.  This returns a new function.  The function that you call is the argument of the @.Replacing the function defined with the new function returned.This can be used for all kinds of useful things, made possible because functions are objects and just necessary just instructions.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#class-definitions
https://docs.python.org/3/glossary.html#term-decorator
https://docs.python.org/3/reference/lexical_analysis.html#operators
https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types
https://docs.python.org/3/whatsnew/3.5.html?highlight=matmul#pep-465-a-dedicated-infix-operator-for-matrix-multiplication
