Natural Text
Below I have an example program. When the button is pressed, it takes a second before it can calculate the value to show. If the user presses the button in rapid succession they end up waiting a long time to see the last answer, which is the only answer they care about. In the code, you can see that the  function needs to know , but  does not depend on the output of .My question, therefore, is how can I interrupt the normal execution of  on subsequent calls in order to keep the GUI free to do other stuff, and to not waste processing time when it is not needed? I realize that I will likely need to use a thread to run  and some sort of Queue to get the appropriate  to display, but I do not understand how to put this all together.
So, finding an answer to this was more complicated than I thought. As @MTset mentions in one of the comments, python does not offer any means by which to cancel the execution of a Thread. So, what I did was create a 'threadHandler' class that, well, handles thread. It keeps track of the last thread that was created and offers a means by which to get the result from the execution of the last thread.I am posting an modified version of the test code from the original post as well as the threadHandler code in full in case anyone has use for it.File 1 hereFile 2 below
You could disable the button after it's pressed until an answer is ready using:    setEnabled(False)Then reset it just before providing the result.


Answer URL
https://docs.python.org/3/library/threading.html
