Natural Text
I'm am attempting to setup some import hooks through , in a somewhat similar approach to this SO question. For this, I need to define two functions  and  as explained in the link above. Here is my  function,which works fine for most modules, but fails for  when using Python 2.7:which returns,The same code works fine with Python 3.4 (although  is getting deprecated and  should ideally be used instead there). I suppose this has something to do with the SIP dynamic module initialization. Is there anything else I should try with Python 2.7?Note: this applies both with  and .Edit: this may be related to this question as indeed,fails with the same error. Still I'm not sure what would be a way around it...Edit2: following @Nikita's request for a concrete use case example, what I am trying to do is to redirect the import, so when one does , what happens is . One could indeed think that for this it would be sufficient to do module renaming in  and then use the default . However, it is unclear where to find a default  implementation in Python 2. The closest implementation I have found of something similar is . It does not look like there is a backport of the complete implementation of  from Python 3 to 2.A minimal working example for the import hooks that reproduces this problem can be found in this gist.
UPD: This part in not really relevant after answer updates, so see UPD below.Why not just use , which is available in both Python 2.7 and Python 3:on Ubuntu 14.04:Since it's a dynamic module, as said in the error (and the actual file is ), may be also take a look at .Another solution might be to force the execution of the module initialization code, but IMO it's too much of a hassle, so why not just use .UPD: There are things in , that might help. What I was talking about in my comment, try to modify your finder like this:Can't test the code above now, so please try it yourself.P.S. Note that , which worked for you in Python 3 is deprecated since Python 3.3.Another solution is not to use hooks at all, but instead wrap the :output: renamed to , and  is imported by default machinery with the variable name .
When finding a module which is part of package like , you have to recursively find each part of the name without . And  requires its  parameter be full module name with  separating package and module name.  Because  is part of a package, you shoud do  instead. Here's the code to load a module.  Test;  


Answer URL
https://docs.python.org/3/reference/import.html#import-hooks
