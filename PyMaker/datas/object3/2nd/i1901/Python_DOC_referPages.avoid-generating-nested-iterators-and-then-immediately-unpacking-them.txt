Natural Text
In my some code I'm working on, I'm handling generating a lot of one-level deep nested iterators that need to be combined. As a working solution, I've wrapped each of these parts in  (where  is from the well-loved itertools module). However, repeating this expression several times makes me feel this expression is ugly and possibly misguided; As an example of the one level deep generation code, most of them are constructed the following way:  Thus I end up with .Is there a better approach, specifically in terms of generating the iterator without unpacking and with comparable efficiency (or ideally, better efficiency)?
You can just use the following nesting:in order to get a flat generator. This also avoids the spurious intermediate lists for better space efficiency. The order of the two  constructs may seem counter-intuitive at first as you have to turn them around in comparison to the one creating nested generators/lists. Also, their scoping does not correspond to my natural language "feel", but that's the way they work.


Answer URL
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/reference/expressions.html#generator-expressions
