Natural Text
I'm running a python script that for some reason gets killed and because of it, the stdout is not printed. I know I can get the buffered stdout with . However, since I don't know when the script is killed, I can miss the time between the last flush and the actual process ending. For example, is the following code only "test 1" will be saved before the 60s sleep ends. If I kill the program before that my log file will contain only the "test 1" print. How can I catch the last stdout before the script is killed? How can I get the "test 2" print even if I kill the script before the 60s sleep ends?
calling Will write whatever is in the buffer to the file.All print does is write objects to the output file stream that'sprovided so when forcibly ended the buffer may not have been flushed.should have a look at this for more info print function.If you want it to flush the buffer with every print pass the flush param like this:
You can use the  parameter of print() function. Write a decorator to flush all the prints made inside the decorated function.So decorating a function like this, will flush all the prints made inside the function:


Answer URL
https://docs.python.org/3/library/functions.html#print
