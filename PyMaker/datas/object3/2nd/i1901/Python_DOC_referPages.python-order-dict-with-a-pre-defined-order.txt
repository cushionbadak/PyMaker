Natural Text
Receive a dict and return a new ordered dict A json returned from an api:The goal:there is some way where I can define the order of keys?For example to achieve this order on goal:Thanks
If you're using Python 3.7 or later*, you can specify the order of items in your dict, because insertion order is preserved. Create a new dictionary and insert the items in whatever order you like:Result:(*you can also do this in CPython 3.6, but this is an implementation detail which should not be relied upon)Prior to 3.7, you can't directly control how items in a dict are ordered. But you can use the  type. Use the function in the previous code block, switching out  with .A more concise (albeit slightly opaque) approach is:This takes advantage of the fact that dict comprehensions and OrderedDict can be constructed with duplicate keys, while staying in order in relation to the first appearance of each key.This is still a little longer than jpp's solution, since it is trying to be a bit more error-tolerant. It works even if  contains keys that  doesn't, and vice-versa. Items whose order is not specified will appear in the result after items that do have a specified order.
You can use a list comprehension to feed a list of tuples to :Works for Python 2.x onwards. For Python 3.7+, you can rely on insertion ordering and use a regular dictionary.
Ordered Dictionary is the thing you need my friend.]Edit: this only works in Python 3.6+. Also feed the  with a list of tuples instead of a dictionary to maintain the order of key-value pairs.
If you're on Python <3.7,  preserves the order of the items:


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
