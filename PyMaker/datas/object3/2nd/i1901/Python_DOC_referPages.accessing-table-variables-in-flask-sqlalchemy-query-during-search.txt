Natural Text
I am writing a RESTful api using Flask and Flask-SQLalchemy, as well as Flask-Login. I have a model  that's initialized like:There are other elements in the table but the lat and lon are most relevant. I have a method  that takes in the currently logged in user's latitude and longitude, as well as a latitude and longitude from the table to calculate distance between them. But I can't figure out how to access the table values during the following query that calls  without receiving a syntax error:Just in case, here's the  method:An example of the error is:Which, in my understanding, is essentially saying that  and  don't refer to a float or even a number, and instead an attribute to a table. My question is how to actually use what lat and lon are equal to (In the database they are equal to 37.7 and -122.4 respectively). 
Your intuition is correct and the error is the result of passing SQLAlchemy's instrumented attributes to Python's  library functions, which have no clue what to do with such.In order to query based on distance you can either fetch all the data from the database and filter in Python (usually not desired), or send the operation to the DBMS in the query for evaluation. The trick is then to form a suitable SQL expression. Instead of calling Python's math functions you need to create SQL function expressions using :and in the view:You could also wrap the distance calculations in a hybrid attribute that would handle either producing an SQL expression or performing the calculation on instances in Python.But there is a problem: SQLite does not have the required math functions by default. It does allow creating custom functions easily, though. Such operations should be handled once when a connection is created by the pool for the first time:
I solved it by taking the distanceMath function and placing it into my Users model class and passing it "self" and "math", as well as referring to the table values accordingly: Then when performing the query, just pass in the current_user as the Users instance, and everything works perfectly:


Answer URL
https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.create_function
