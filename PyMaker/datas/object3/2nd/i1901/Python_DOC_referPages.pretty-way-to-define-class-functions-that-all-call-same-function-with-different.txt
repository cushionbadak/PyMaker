Natural Text
I'm writing a class that has a bunch of member functions that all call the same function with different parameters. The way I have it written right now is like:This seems incredibly redundant and is a pain to deal with since it takes up so much space. Is this the best way to deal with class functions that all have the same structure or is there a better way to deal with this?
Since functions are first class objects in Python you can create and return one inside of another. This means you could do define a helper function and use it inside the class to get rid of some of the boilerplate code:If you're using a fairly recent version of Python, you don't even have to write the helper function because there's a built-in one named :


Answer URL
https://docs.python.org/3/library/functools.html#functools.partialmethod
