Natural Text
i wrote a program to evaluate what numbers in a certain range are divisble by only certain numbers (in the range  to ). So far the code seems to work but i tested the steps it takes through at pythontutor http://www.pythontutor.com/visualize.html#mode=edit and something odd happened.In the second loop, the code doesnt always check all values  for its divisibility but sometimes leaves out the last value .Better to give you an example:Here the output is as follows:And its the output that its supposed to be, as in the second list are only the numbers divisible by  and . Also on pythontutor the second for loop goes through all values .But when i change the range of number like the following (line 2, change range from  to ):the output is as the following:If i run this code on pythontutor, the code stops at  and doesnt check for .Why is it behaving that way? Is it a problem with the check on pythontutor?Or is there a problem with my code?I want to understand why Python is doing what it does.Thank you very much for your help. Iam sorry if this is a noob question or iam missing out something obvious. 
Don't remove items from the list you iterate over, as the other answer states.  Changing the length of the list affects the iteration.  Example:Also  is never used, although  is the equivalent. Instead, iterate directly over  and add items to a new list if it satisfies your condition:Output:If you haven't seen , the  only executes if you don't break from the  loop, so all of  has to be true.  Another option is to use list comprehensions, which really simplify the code:Output:Note 1575 and 1785 are divisible by 3, so both your sample lists had errors from removing values in the list.
Your problem is in this line:because you are removing element from the same list that you use for the for loop so when you delete an element the list is going to be shorter but next iteration you will jump an element.I advice to use two list or use a while loop and when you remove the element from list you don't go to next iteration and you decrease the len of the list of 1; example:This code could be improved but was for let you understand how you can do it


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
