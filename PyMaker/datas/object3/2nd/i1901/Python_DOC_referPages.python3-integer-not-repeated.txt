Natural Text
Out of a random list of integers, with integers being repeated in the list, what is  the way to print that integer out of the list which is not repeated at all?I have tried to solve the question by making the following program:K being the number of the elements in the list.When I try to run the above program, it works well in the case of less elements however, when it is tested with a list having (say, 825) elements, the program times out.Please help me in optimizing the above code.
Elements whose repetition count in the list is one will be your answer.Output:Counter class creates a dictionary of elements and repetitions by iterating through the list once that takes time O(n) and each element's access takes O(1) time.The count function of the list iterates every time you call it on a list. In your case taking O(n^2) time.
This will print the number that occured least often:Output:It uses a specialized dictionary: collection.Counter thats built for counting things in iterable you give it. The method  returns a sorted list of tuples of (key, count) - by printing its last member you get the one thats least often.The built-up dict looks like this:A similar approach is to use a collections.defaultdict and count them yourself, then get the one with the minimal value:The last solutions is similar in approach without the specialized Counter - the advantage of both of them is that you iterate once over the whole list and increment a value instead of iterating n times over the whole list and count each distinct elements occurences once.Using  on a list of pure distinct elements would lead to  counting-runs through  elements =  actions needed.The dictionary approach only needs one pass though the list so only  actions needed.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#defaultdict-objects
