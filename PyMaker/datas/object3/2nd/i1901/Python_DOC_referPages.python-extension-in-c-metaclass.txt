Natural Text
I have the following python code: is used only to require that  defines certain attributes. This class structure must remain as is because this is how my project is structured.  is actually called  and  is actually a user-defined class derived from .I'm working on translating  and  into a C extension. This is the module:This is the python code used to test module :Unfortunately, there is no  member in the  struct, so how do I specify  as the metaclass of ?EDIT:Modified C code:
The metaclass is nothing but a type that is used as the type (!) of the class (type)... (clear, isn't it)...  does not inherit from  but is an instance of `MetaType.Hence, the place where  should go if it works as it should, is : checks the  field - if it is , it takes the  of the ; but if  is set already, it is left as is. Actually you can set it in the  initializer:The first argument goes to the  field.
There is no direct way to do this. According to the py docs, there is no members or flags to directly indicate a class is a meta class of another. The attribute responsible for indicating a meta class is inside the class dictionary. You could implement something that modifies the  member, but this is actually deemed unsafe if done through the dictionary C-API.Warning It is not safe to use PyDict_SetItem() on or otherwise modify tp_dict with the dictionary C-API.EDIT:From the python source code, it seems meta class is accessed as an  via the C dictionary API, but the methods to do so are prefixed with an , and don't appear in any documentation.These methods are apart of the "limited api", and can be used by defining the  macro


Answer URL
https://docs.python.org/3/c-api/typeobj.html
https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_dict
https://docs.python.org/3/c-api/stable.html
https://docs.python.org/3/extending/newtypes_tutorial.html#subclassing-other-types
https://docs.python.org/3/c-api/structures.html#c.PyObject
