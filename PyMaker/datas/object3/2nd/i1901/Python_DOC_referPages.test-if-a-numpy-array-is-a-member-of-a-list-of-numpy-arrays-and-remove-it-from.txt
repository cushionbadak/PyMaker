Natural Text
When testing if a numpy array  is member of a list of numpy arrays :I get:ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()However, the answer is rather clear:  is exactly , so  should return True!How to correctly test if a numpy array is member of a list of numpy arrays?The same problem happens when removing:ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()Application: test if an  contour (numpy array) is member of a list of contours, see for example Remove an opencv contour from a list of contours.
You are getting the error because  essentially invokes  on every element  of . It's the  conversion that is raising the error:The same applies for removal, since it tests for equality with each element.ContainmentThe solution is to use  or apply the  method to each comparison:ORRemovalTo perform the removal, you are more interested in the index of the element than its existence. The fastest way I can think of is to iterate over the indices, using the elements of  as comparison keys:This option short circuits quite nicely, and returns  as the default index rather than raising a . You can remove the argument  to  if you prefer the error. If you prefer, you can replace  with .Now you can remove as usual:
This solution could work for this case:This function iterates over a list of arrays and tests the equality against some other array. So the usage would be:To remove the array from the list, you can get the index of the array and then use . In the function , we enumerate the list of arrays, meaning we zip the indices of the list and the contents of the list. If there is a match, we return the index of the match.Please see the python data structures tutorial for the documentation of  https://docs.python.org/3/tutorial/datastructures.html
Use  to delete the index of the list you want to remove.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
