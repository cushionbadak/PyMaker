Natural Text
Imagine an instance from a classes has an attribute attr. I want to know from where it got that attribute.Let's consider those 2 cases in Python :And If you execute the following line of codes :s has the value 5. Both cases are different, in the first case, speed is an attribute of the class "vehicle" and in the other case, it's a attribute of an instance of the class "vehicle".My problem is the same in both case, i want to know from where b got his attribute "speed", I would like to have a function that i could call on b and "speed" and would point me to the place where b.speed was defined. In my example, it's easy to see where b got its attribute from, but you could imagine classes and subclasses being defined across multiple documents, and having a long inheritance chain. For example :In this last case, my c has an attribute speed, and if I want to see where its coming from, i have to go through all previous import, and that's where it would be useful to have a function to show me that c.speed comes from doc1.py .
Generally, I would advise you to use a proper IDE like PyCharm that allows you to Ctrl+click on any attribute and that will navigate you to where that attribute is assigned.That being said, you can use a class's mro to dynamically extract some information about where attributes may originate by inspecting the instance's and its classes'  and :You can use this function for arbitrary objects and attributes:


Answer URL
https://docs.python.org/3/glossary.html#term-method-resolution-order
https://docs.python.org/3/library/stdtypes.html#object.__dict__
https://docs.python.org/3/reference/datamodel.html#slots
