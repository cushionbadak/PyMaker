Natural Text
I have a list in python with a few string entries. I want to compare this list with a word (say ), and find the index of the entry in the list of which the chosen word is a part.For example, letâ€™s consider the following list:Here  is a part of the entry  in list . So, the index that I want is 1. I checked this post. But, it requires the word to exactly match the entry in the list. My case is different. The entry in the list  can have suffix or prefix (or both), after or before the word under consideration. How can I achieve this?
You can use  to pair elements with their indexes and use a common substring-check with :The first option uses a conditional list comprehension to build a  of all "word-containing indexes". The second option uses  with an appropriate generator expression and default value.If you want to check only for true pre-/suffixes instead of substrings, you can substitute  with  or .
you could simply loop over the list and check the word you search for against all the words in the list:
Though elegant approaches & answers already in place but just like to add Without enumerate():Or SimplyNote: This is likely to run in O(n^2), whereas using enumerate will be O(n)


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#next
https://docs.python.org/3/reference/expressions.html#generator-expressions
https://docs.python.org/3/library/stdtypes.html#str.startswith
https://docs.python.org/3/library/stdtypes.html#str.endswith
