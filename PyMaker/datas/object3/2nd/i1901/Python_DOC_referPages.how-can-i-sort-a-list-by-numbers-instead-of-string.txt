Natural Text
I have this code:from which I get :The H1-H12 numbers at the end reflect how I want to sort it. But right now, H10-H12 is sandwiched in the middle. How can I sort from H1-H12?Regex isn't my strong suit and I'm unable to move forward.I tried splitting and got this far:
Assuming you want them to sort them by int value you could use regex in the following way:OutputExplanationThe pattern  means match any group of digits  preceded by an  and followed by . and use  to get the group of digits. Then transform the groups of digits into an  and use them as a key for sorted.No regexIf you want to avoid regex altogether use the following function as key:NoteFinally if you want to sort by the string value simply remove the calls to the int function.
The names that you sort have a simple and regular structure; you can survive without invoking regex. Sort the names by taking the first part of a name after the "_H", then the first part of it before the ".", and converting the result to an integer:
You can achieve this without using a regexThis key first compares these filenames with the idea thatLonger numbers are largerIf numbers are the same length then comparing numbers or strings is the sameSpeed comparison with other answers here:Timings were obtained using  in iPython3.7 running on 2.7 GHz Intel Core i7
Instead of  function use the  one from the natsort module:(The name  means natural sort - as opposed to the lexicographical one.)


Answer URL
https://docs.python.org/3/library/re.html
