Natural Text
I've written a script to pipe through data from the Kustomer API to our database, and although it works fine its a bit messy, was wondering if there's a more elegant solution to this. I'm defining the row of results im pushing through as a dictionary then pushing to MySQL, but the messy part comes when some of these values aren't available in the JSON all the time.This has resulted in a try / except statements for each data point that may or may not be missing. Is there a better way of doing this? Code below. 
First you should try, where possible, to use  with a default value specified. Next you can consider  to make your code significantly cleaner. Consider this:Now rewritten, you can ensure consistent error handling without repeating logic:You can define an arbitrary number of functions like  for various rules you wish to apply.
You can use function, that give you element from nested dicts, and doesn't raise an exception, if it doesnt' exists.Like this quick draft:So, instead of:You just type:
The different naming conventions on the input and output sides make it hard to beat the clarity of explicit assignments.  Preserving the exact semantics of your version (e.g., that it doesn't assign  in the absence of a  even if  is available) excludes certain choices (like making a data structure to loop over with a / on each access); you might be able to do better with more assumptions about your input data.Nonetheless, in addition to the  already mentioned, you can use builtins (, , and ) and introduce a helper function and a few temporary variables to make the code much more readable:While you might have a policy against it, in this case I recommend writing the remaining  clauses on one line each: it helps the visual bracketing of the tentative code.


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
