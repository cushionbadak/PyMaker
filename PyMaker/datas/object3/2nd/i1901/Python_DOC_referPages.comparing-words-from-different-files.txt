Natural Text
I am new to Python and stuck on a problem. I have written code to identify total word counts as well as unique word counts of multiple files (in this case the .txt files are chapters of a book: sample text from file1 "It has been disputed at what period of time the causes of variability, whatever they may be, generally act; whether during the early or late period of development of the embryo, or at the instant of conception."; sample text from file2 "Finally, then, varieties have the same general characters as species, for they cannot be distinguished from species, except, firstly, by the discovery of intermediate linking forms"). I can't find any examples online of how to compare the words between files. I need to identify the number of words that are shared between the files and the number of words that are unique to each file (relative to the other file(s)). My final output should include 7 numbers: total word count for file1 and file2, unique word count for file1 and file2, # of words shared between file1 and file2, # of words in file1 but not in file2, and lastly # of words in file2 but not in file1. I know I have to use set() to do this, but I am not understanding how.Desired output:
You read in both files and convert the read text into lists/sets. Using sets you can use set-operators to calculate intersections/differences between them:An explanatory table of set-operations can be found here: Doku 2.x / valid for 3.7 as wellDemo:Output:You are already handling the file reading and "unifying" to lower case - I left that out here. The output uses string interpolation syntax for python 3.6: see PEP 498


Answer URL
https://docs.python.org/3/library/stdtypes.html#set
