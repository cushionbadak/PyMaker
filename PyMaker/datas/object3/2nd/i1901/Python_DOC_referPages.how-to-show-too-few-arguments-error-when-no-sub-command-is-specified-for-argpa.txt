Natural Text
An example script:With Python2:This is what I want, when missing sub command in command line, the script prompt an error of missing argument, and prompt me with a brief usage message.But with Python3:It doesn't prompt any help about the usage and exit silently (though I can use  to get the help messages). How can I change the code to make it works like the python2 way and make it compatible for both Python2 and Python3? So in Python2, it can detect missing sub command error and quit early, but not for Python3. The problem for me is I have many code after  that relies on the parsed args, it works for python2, and I find this issue when migrate it to Python3, if no sub command is specified in command line, these code will raise error, I need a way to detect that there is sub command specified in command line, and should not break the script to run under python2.One possible solution for me could be check whether the parsed 'args' is empty, but it doesn't work for me because my script has some global options like:
In the 3.7 docs the subcommands section, https://docs.python.org/3/library/argparse.html#sub-commands, includesrequired - Whether or not a subcommand must be provided, by default False.This is missing in earlier v3 versions, but you can useAlso make sure you include a  (or your choice) so the error message can name the missing subparsers command.Subparsers used to be required (since under the covers the argument is a positional which normally required).  But with a change in Py3 in how required arguments were tested and reported, subparsers fell through the cracks.  So Py3 subparsers have been not-required for some time.  Adding the  parameter gives you the option of fixing that (the default False is nod toward that awkward interim case).


Answer URL
https://docs.python.org/3/library/argparse.html#sub-commands
