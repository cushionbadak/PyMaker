Natural Text
I have one process who's reading from a file (using ) and one process who's writing to the same file (). The problem is it doesn't work - I get no errors but they can't operate at the same time. I've tried making the read and write operations none-blocking and then flushing the stream, as follows:Am I completely misunderstanding it? How should one accomplish writing and reading to one file from different processes?
test1.pytest2.pyThis works fine for me.
Is there a reason to use a common file? Inter-process communication is probably much easier using sockets.
Take a look at this Read-Write Lock class:http://code.activestate.com/recipes/502283-read-write-lock-class-rlock-like/and at this articles about locking and threading:http://effbot.org/zone/thread-synchronization.htmhttp://linuxgazette.net/107/pai.html
Another great way to do this is to use a pipeThis example instantiates a pipe, which returns a reader and a writer object. Then one process writes to the pipe using the writer and the other reads from it using the reader.Python os.pipe(): https://docs.python.org/3/library/os.html#os.pipe


Answer URL
https://docs.python.org/3/library/os.html#os.pipe
