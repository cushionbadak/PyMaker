Natural Text
What is an efficient way to repeat a string to a certain length? Eg: Here is my current code:Is there a better (more pythonic) way to do this? Maybe using list comprehension?
For python3:
Jason Scheirer's answer is correct but could use some more exposition.First off, to repeat a string an integer number of times, you can use overloaded multiplication:So, to repeat a string until it's at least as long as the length you want, you calculate the appropriate number of repeats and put it on the right-hand side of that multiplication operator:Then, you can trim it to the exact length you want with an array slice:Alternatively, as suggested in pillmod's answer that probably nobody scrolls down far enough to notice anymore, you can use  to compute the number of full repetitions needed, and the number of extra characters, all at once:Which is better? Let's benchmark it:So, pillmod's version is something like 40% slower, which is too bad, since personally I think it's much more readable.  There are several possible reasons for this, starting with its compiling to about 40% more bytecode instructions.Note: these examples use the new-ish  operator for truncating integer division.  This is often called a Python 3 feature, but according to PEP 238, it was introduced all the way back in Python 2.2.  You only have to use it in Python 3 (or in modules that have ) but you can use it regardless.
This is pretty pythonic:


How about 
Perhaps not the most efficient solution, but certainly short & simple:Gives "foobarfoobarfo".  One thing about this version is that if length < len(string) then the output string will be truncated.  For example:Gives "foo".Edit: actually to my surprise, this is faster than the currently accepted solution (the 'repeat_to_length' function), at least on short strings:Presumably if the string was long, or length was very high (that is, if the wastefulness of the  part was high) then it would perform poorly.  And in fact we can modify the above to verify this:
i use this: 
Not that there haven't been enough answers to this question, but there is a repeat function; just need to make a list of and then join the output:
Yay recursion!Won't scale forever, but it's fine for smaller strings. And it's pretty.I admit I just read the Little Schemer and I like recursion right now.
This is one way to do it using a list comprehension, though it's increasingly wasteful as the length of the  string increases.
Another FP aproach:



Answer URL
https://docs.python.org/3/library/functions.html#divmod
