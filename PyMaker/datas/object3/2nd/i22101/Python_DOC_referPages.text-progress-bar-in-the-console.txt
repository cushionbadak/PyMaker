Natural Text
Is there a good way to do the following?I wrote a simple console app to upload and download files from an FTP server using the ftplib.Each time some data chunks are downloaded, I want to update a text progress bar, even if it's just a number.But I don't want to erase all the text that's been printed to the console. (Doing a "clear" and then printing the updated percentage.)
Here's an aggregate of many of the answers below that I use regularly. Sample Usage:Sample Output:
Writing '\r' will move the cursor back to the beginning of the line.This displays a percentage counter:
tqdm: add a progress meter to your loops in a second:
Write a  to the console. That is a "carriage return" which causes all text after it to be echoed at the beginning of the line. Something like:which will give you something like: 
It is less than 10 lines of code. The gist here: https://gist.github.com/vladignatyev/06860ec2040cb497f0f3
Try the click library written by the Mozart of Python, Armin Ronacher.To create a simple progress bar:This is what it looks like:Customize to your hearts content:Custom look:There are even more options, see the API docs:
I realize I'm late to the game, but here's a slightly Yum-style (Red Hat) one I wrote (not going for 100% accuracy here, but if you're using a progress bar for that level of accuracy, then you're WRONG anyway):Should produce something looking like this:... where the brackets stay stationary and only the hashes increase.This might work better as a decorator. For another day...
Check this library: clintit has a lot of features including a progress bar:  this link provides a quick overview of its features
Here's a nice example of a progressbar written in Python: http://nadiana.com/animated-terminal-progress-bar-in-pythonBut if you want to write it yourself. You could use the  module to make things easier :)[edit]Perhaps easier is not the word for curses. But if you want to create a full-blown cui than curses takes care of a lot of stuff for you.[edit]Since the old link is dead I have put up my own version of a Python Progressbar, get it here: https://github.com/WoLpH/python-progressbar
output[ 29% ] ===================
and, just to add to the pile, here's an object you can useresults in:This would most commonly be considered to be "over the top", but it's handy when you're using it a lot
Run this at the Python command line (not in any IDE or development environment):Works fine on my Windows system.
Install .()and use it as follows:That's a 10 seconds progress bar that'll output something like this:
http://code.activestate.com/recipes/168639-progress-bar-class/ (2002)http://code.activestate.com/recipes/299207-console-text-progress-indicator-class/ (2004)http://pypi.python.org/pypi/progressbar (2006)And a lot of tutorials waiting to be googled.
I am using progress from reddit. I like it because it can print progress for every item in one line, and it shouldn't erase printouts from the program.Edit: fixed link
based on the above answers and other similar questions about CLI progress bar, I think I got a general common answer to all of them. Check it at https://stackoverflow.com/a/15860757/2254146In summary, the code is this:Looks likePercent: [##########] 99.0%
I recommend using tqdm - https://pypi.python.org/pypi/tqdm - which makes it simple to turn any iterable or process into a progress bar, and handles all messing about with terminals needed.From the documentation: "tqdm can easily support callbacks/hooks and manual updates. Hereâ€™s an example with urllib"
Try to install this package:   :progresssbar github: https://github.com/WoLpH/python-progressbar
NOTE: if you run this in interactive interepter you get extra numbers printed out
lol i just wrote a whole thingy for thisheres the code keep in mind you cant use unicode when doing block ascii i use cp437and you call it like soso it looks like this
With the great advices above I work out the progress bar. However I would like to point out some shortcomings Every time the progress bar is flushed, it will start on a new line  like this:[] 0%[#]10%[##]20%[###]30%  2.The square bracket ']' and the percent number on the right side shift right as the '###' get longer.3. An error will occur if the expression 'progress / 10' can not return an integer.  And the following code will fix the problem above.  
A very simple solution is to put this code into your loop:Put this in the body (i.e. top) of your file:Put this in the body of your loop:
Code for python terminal progress bar
Putting together some of the ideas I found here, and adding estimated time left:
Well here is code that works and I tested it before posting:Pros:20 character bar (1 character for every 5 (number wise))Custom fill charactersCustom empty charactersHalt (any number below 0)Done (100 and any number above 100)Progress count (0-100 (below and above used for special functions))Percentage number next to bar, and it's a single lineCons:Supports integers only (It can be modified to support them though, by making the division an integer division, so just change  to )
Here's my Python 3 solution:'\b' is a backslash, for each character in your string.This does not work within the Windows cmd window.
function from Greenstick for 2.7:
The python module progressbar is a nice choice.Here is my typical code:  
https://pypi.python.org/pypi/progressbar2/3.30.2Progressbar2 is a good library for ascii base progressbar for the command line    import time    import progressbarhttps://pypi.python.org/pypi/tqdmtqdm is a alternative of progressbar2 and i think it use in pip3 but i am not sure of that
i wrote a simple progressbar:as you can see, it have: length of bar, prefix and suffix, filler, space, text in bar on 100%(oncomp) and bordershere an example:out in progress:out on complete:


Answer URL
https://docs.python.org/3/library/functions.html#print
