Natural Text
I need to produce a time string that matches the iso format .  The  and  class methods almost do what I want.
Something like the following example. Note I'm in Eastern Australia (UTC + 10 hours at the moment). 
To get the current time in UTC in Python 3.2+:To get local time in Python 3.3+:Explanation:  produces a timezone aware  object in UTC time.  then changes the timezone of the  object, to the system's locale timezone if called with no arguments. Timezone aware  objects then produce the correct ISO format automatically.
You need to make your datetime objects timezone aware. from the datetime docs:There are two kinds of date and time objects: “naive” and “aware”. This distinction refers to whether the object has any notion of time zone, daylight saving time, or other kind of algorithmic or political time adjustment. Whether a naive datetime object represents Coordinated Universal Time (UTC), local time, or time in some other timezone is purely up to the program, just like it’s up to the program whether a particular number represents metres, miles, or mass. Naive datetime objects are easy to understand and to work with, at the cost of ignoring some aspects of reality.When you have an aware datetime object, you can use isoformat() and get the output you need.To make your datetime objects aware, you'll need to subclass tzinfo, like the second example in here, or simpler - use a package that does it for you, like pytz or python-dateutilUsing pytz, this would look like:You can also control the output format, if you use strftime with the '%z' format directive like
With arrow:
You can do it in Python 2.7+ with  (which is insalled on Mac by default):Or you if you want to convert from an existed stored string:


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.now
https://docs.python.org/3/library/datetime.html#datetime.datetime.astimezone
