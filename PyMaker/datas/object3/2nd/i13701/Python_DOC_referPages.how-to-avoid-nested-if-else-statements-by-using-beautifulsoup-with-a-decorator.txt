Natural Text
Problem descriptionBecause of the fact that BeautifulSoup is returning a  or , there have to be as much  statements in a function as subsequent searches via  or  will occur.QuestionHow can one avoid this by using a decorator (or a similar approach)?ExampleLets say there are two different html sites (with these example snippets):If you doing the search below on snippets everything is ok for the first html snippet, but for the second you will get this:There are two obvious ways to handle this :What about a third solution by using a decorator function for that? How can this be done?
Thanks to the comments (nearly a discussion) made by @jonrsharpe and the answer by @Logan I would stick to the decorator idea, but with getting information where the search will return .Here is my decorator as one possible solution.now I can use
Instead of a decorator and manually checking for  via if/then, you might consider using your own function instead of  and . Also, there are 2 issues with returning plain-old .You have no idea where the error is propagating from, so debugging would be hard.After returning , you might end up doing something like  or  on what is, in actuality, . This wouldn't help you at all.So you might try something like this:This '' shouldn't have those issues. Also, each instance is created with some identifier of what caused the . All 'children ' caused by  or  are really just the same object in memory, and thus have the same initial cause of failure in . Good for debugging!...Omg, this is a PseudoNone! That's not what I wanted. Where did I go wrong!!?Notes:Use , not . (We can't subclass)If  gets too large for memory, consider hashing the  and  in the values of PseudoNone.debug (and/or making use of  in python3)This might be a hack.


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.suppress
https://docs.python.org/3/library/contextlib.html#contextlib.suppress
