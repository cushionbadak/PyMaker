Natural Text
Is there a way to have a default value if the number of values to unpack is too little compared to the variable list?For example:This works if  returns an array of three or more variable. If it only returns two, I get an exception while assigning . So, is there a way to set  to a default value if it can't be unpacked properly? Something like:Which is similar to what you do when defining a function with default arguments.Thank you!
You could try  unpacking with some post-processing:This will assign  and  as normal. If  is assigned something, it will be a  with one element. If only two values were unpacked, it will be an empty . The second statement assigns to  its first element if there is one, or the default value of  otherwise.
You can use chain function from itertools, which is part of the Python standard library. It serve as default filler in case if there are no values in the first list. 'defaults' list variable in my example can have number of different values for each variable that you unpack (in an example I have default value for all three values as 0).Outputs:
In answer to the question no you can't do that.Furthermore I would recommend against returning different numbers of arguments from functions - this will only cause compilcations further issues down the line (this question case in point).  Everytime you call that function you will need to test if there were 2 or 3 values returned. (Unpacking could be useful here, but you will still need to check those returned variables). eg:It would make more sense, assuming read_json is your function, if the function can return a dict with the default values set:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
