Natural Text
I'm trying to improve my Python skills and general basic coding. I have a csv file, the first 7 rows (including the header) of which are shown below:I am trying to implement the following code such that an output file will be generated that shows, based on the result from their most recent game, if the home team was / was not coming off a win. I am stuck at the section marked with ******From what I have done and read thus far I can see there being two problems:Problem 1: how can I get the second for loop, marked with ****, to iterate over the previously read rows until it reaches the most recent row to contain the variable define by 'a' ?Problem 2: How do I start the code block from the 3rd row? The reason this needs to be done is to prevent A. reading the header and, more importantly, B. trying to read a non existent / negative row i.e. row1 - 1 = row0, row0 doesn't exist!?NB the desired output file would be as follows:
A good thing to do is to write down, in words, the steps you think you need to take to solve the problem.  For this problem I want to:skip the first line of the fileread a line, and split it into its partsIf this is the home team's first game print a blank, if not print the result of the last game it played.repeat till the file is exhausted.While the file is being read, store the result of the most recently played game so it can be looked up later.  dictionaries are made for this - .  When looking up each team's first game, there wont be a previous game - the dictionary will throw a .  the  can be handled with a  block or  could be used to account for this.I like to use  when extracting items from a sequence - it makes the code a bit more readable for when I look at it later.Instead of printing the results, you could easily write them to a file or collect them in a container and write them to a file later.If you want something other than an empty string for your , you could do something like this


Answer URL
https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/operator.html#operator.itemgetter
