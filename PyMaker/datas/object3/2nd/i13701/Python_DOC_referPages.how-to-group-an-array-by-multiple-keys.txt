Natural Text
I'd like a function that can group a list of dictionaries into sublists of dictionaries depending on an arbitrary set of keys that all dictionaries have in common. For example, I'd like the following list to be grouped into sublists of dictionaries depending on a certain set of keysIf I wanted to group by type, the following list would result, which has a sublists where each sublist has the same type:If I wanted to group by type and color, the following would result where the list contains sublists that have the same type and color:I understand the following function can group by one key, but I'd like to group by multiple keys: This is my attempt using the group_by_function aboveThe issue there is that it ungroups it right after it grouped it by a key. Instead, I'd like to re-group it by another key and still have one list of sublists.
 +  will do what you want.  takes an iterable and a key function, and groups the items in the iterable by the value returned by passing each item to the key function.  is a factory that returns a function, which gets the specified items from any item passed to it.Examples:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/operator.html#operator.itemgetter
