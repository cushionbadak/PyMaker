Natural Text
I have a script that runs through a directory and searches all files with a given ending (i.e. .xml) for given strings and replaces them. To achieve this I used the python multiprocessing library. As an example I am using 1100 .xml files with around 200MB of data. The complete execution time is 8 minutes on my MBP '15 15". But after some minutes, process for process is going to sleep which I see in "top" (here after 7m...).top outputSo now only one process is doing all the work while the others went asleep after 4 minutes.Code snippetSo why are all processes going asleep?My guess: The file list is separated to all Workers in the Pool (same amount each) and a fews are just "lucky" to get the small files - and therefore finish earlier. Can this be true? I Was just thinking that it works more like a Queue so that every worker gets a new file when it is finished - until the list is empty.
As @Felipe-Lema pointed out it is a classical RTFM. I reworked the mentioned part of the script using a multiprocessing Queue instead of a Pool and improved the runtime:


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map
