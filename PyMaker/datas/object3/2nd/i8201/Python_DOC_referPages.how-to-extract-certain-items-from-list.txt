Natural Text
Suppose I have these lists:and I need to write a code that give me the following lists:Currently, I do the followings:Iterate over every item in the input listCheck if the last string of each item is alphabet Check if the last string of the next item is also alphabet Keep checking until the last string of the next item is not alphabet and collect the previous items that end with alphabets Check if the collected items have the same digits  and produce the sub-lists as appropriate.The above steps work, but are quite long. I wonder if there is any code/trick in python libraries that can make the code shorter and look cleaner/ more elegant.
You first need to check if the last character is a letter:You can then use  with a  of  to group the strings by numbers: expects strings to be already sorted, which seems to be the case here.Finally, you get a list as an output, not 4 distinct variables. It's usually much easier to work with a list of 4 elements than with 4 distinct variables.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
