Natural Text
I have a really basic if/else logic question for Python. An exercise in the book required me to write a function that takes a list of integers are returns True if the list contains all even numbers and False if it doesn't.I wrote:This code always returns True. Why is that? Doesn't the code see the -1 during the loop of all the values of the list and returns the False?The book gives the answer of this. Why does this work and mine doesn't?
Pay close attention to where that  is placed.  Indentation and nesting matters here!In your first example, it will return  on the first element that satisfies your condition because your first  check fails.In your second example, it will return  after all elements have been iterated through and a return value hasn't been produced.
The first function checks the first number only, since it returns something as soon as the for loop starts.By the way, you can but should not use  as an argument or a variable name, since it is a keyword.
I strongly recommend writing a print statement to output x before both of your return statements.  It will help you understand the flow of the code.The short answer is that only the first element is being checked by your code, and the function returns True or False based on that value.In the book solution, any failure causes a return of False, but the loop simply continues otherwise.  Only if all elements are checked without failure does the return True reached.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-if-statement
