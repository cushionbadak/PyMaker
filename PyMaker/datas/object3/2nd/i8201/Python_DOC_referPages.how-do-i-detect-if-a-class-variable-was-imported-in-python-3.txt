Natural Text
This is the contents of :This is the contents of :Now, if I ran  the output would be:What I need is a way to detect if  was imported.This is what I imagine the source code of  would look like:Then if I ran  the output "should" be:What is this called, does this feature exist in Python 3 and how do you use it?
You can't. Effort expended on trying to detect this are a waste of time, I'm afraid.Python imports consist of the following steps:Check if the module is already loaded by looking at .If the module hasn't been loaded yet, load it. This creates a new module object that is added to , containing all objects resulting from executing the top-level code.Bind names in the importing namespace. How names are bound depends on the exact  variant chosen. binds the name  to the  object binds the name  to the  object binds the name  to the  object binds the name  to the  objectIn this context it is important to realise that Python names are just references; all Python objects (including modules) live on a heap and stand or fall with the number of references to them. See this great article by Ned Batchelder on Python names if you need a primer on how this works.Your question then can be interpreted in two ways:You want to know the module has been imported. The moment code in the module is executed (like ), it has been imported. All of it. Python doesn't load just  here, it's all or nothing.You want to know if other code is using a specific name. You'd have to track what other references exist to the object. This is a mammoth task involving recursively checking the  object chain to see what other Python objects might now refer to .The latter goal is made the harder all the further in any of the following scenarios:, then use ; references like these could be too short-lived for you to detect., then . Unless something else still references the same string object within the imported namespace, that reference is now gone and can't be detected anymore. is a legitimate way of referencing the same string object, but does this count as an import?, then  would create a list of all objects defined in the module, but these references are indices in a list, not named. Does this count as an import?


Answer URL
https://docs.python.org/3/library/gc.html#gc.get_referrers
