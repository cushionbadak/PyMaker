Natural Text
There is a string with characters 0123456789AB.I have a regexp:The problem that it match first instead of longest. How to make it match the longest in python? I'm not hoping that it is possible in regexp.Edit: I need to find all matches. Preferably with index of succeeded pattern.Example of input:Another example:Example with output:Added: currently I use this code:
Edit: See below for a solution that shows the position of the longest match.The closest build-in tool for your problem is : 'Return all non-overlapping matches of pattern in string, as a list of strings.'A problem for your case is that different matches can overlap --- but  only returns non-overlapping matches.  For example, the input string  contains two different matches:  and . The  function would find and return the first match .  Then, it continues where it left off --- returning only  as the next match.You can solve this problem by breaking your regexp into pieces to be matched one-by-one:The function  returns all matches (but not always in order). In python3, you can write this function shorter:In any case, you can extract the longest match with the built-in function :If you also want the position of the longest match, work with : 'Return an iterator yielding match objects over all non-overlapping matches for the RE pattern in string.'  For each returned ,  gives us the start position and  the text of the match.


Answer URL
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/library/re.html#re.finditer
https://docs.python.org/3/library/re.html#match-objects
