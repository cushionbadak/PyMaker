Natural Text
I want to build two  lists from a document that may vary in formatting but should roughly be two columns with some separator. each row is :for example.My lists should be "list_of_word1", "list_of_word2".I want to build them at once. I know that I could use pandas, but for some reason (the script should be able to work without specific import, only on general library),  I also need to use regular document opening.My attempt was:  The generator doesn't serve any purpose since extend returns None, so that may be seen as bad to use a form that won't be reused there or that might be unnecessary in the first place.Plus, I would like to know how to avoid to have to reuse the split function, that's "ok" for 2 times per line, but if I was to use the same principle on more columns, it would become very unefficient. My try to avoid reuse split was to make it like this:  but that indeed doesn't work, since it doesn't find tuples to unpack. i also tried starred unpacking but that's not working.But that somehow feels unsatisfactory, too contrived.What do you think?
This answer will work regardless of the delimiter used (provided it is some number of spaces!)For example, if 'temp.txt' is:We get:
Maybe this?(might need some tweaking)
You can use  together with argument unpacking to achieve this.Example input file :Code:See also:Transpose/Unzip Function (inverse of zip)?Transpose list of lists
Actually at first I wanted to use zip, hence the generator. But I mixed up things and ended up adding    list_of_word1=[]    list_of_word2=[]which are useless like that.What should be done would be:That works like a charm. Still the fundamental problem remains, while I could do what I wanted, I still have the problem of not knowing how to do If I have to manage a split unpacking in a comprehension. if you have any idea...?


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
