Natural Text
I'm writing a rudimentary mocking framework just so I can test some calls to peewee.  I know in peewee, you can make  calls like In order to detect which fields of the model are being compared, I will be overriding the comparison operators of the field.  Then I would inject that model in place of a peewee model.  It would provide the same interface as the peewee model(only as much as needed, though) but instead of accessing a database, it would record comparisons and calls; but it would all depend on the arguments being evaluated before the method is called.  I've run an example using anaconda, and for whatever python comes with Linux Mint, and they seem to operate as I would like.  I'm not sure if it's a fluke of runtime, or maybe python really does evaluate comparisons just before they are needed.  So, regarding the following, can I rely on  running the comparison before the first  is called?  Can I rely on  running its comparison before the second  is called and after the first ?  
Method parameters are resolved as they are being marshalled for the call. Since the second  hasn't been looked up when the first  is called, its parameters have not yet been resolved. The sequence for this statementis lookup lookup  on that objectit has no parameters, so call it and get its result objectlookup  on the result objectits a function so evaluate its parameters left to rightcall the function and get its result objectlookup  on the result objectits a function call, so evaluate its parameters left to rightcall the function
Yes. From the docs:The primary must evaluate to a callable object (user-defined functions, built-in functions, methods of built-in objects, class objects, methods of class instances, and all objects having a  method are callable). All argument expressions are evaluated before the call is attempted.


Answer URL
https://docs.python.org/3/reference/expressions.html#calls
