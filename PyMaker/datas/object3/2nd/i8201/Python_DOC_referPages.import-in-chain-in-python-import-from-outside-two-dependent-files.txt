Natural Text
ProblemI struggle to find a nice way to import modules in chain when your second import is from outside the folder. More clearly, here is my folder organisation:In  -- typically a big piece of code -- I want to do something like this:but in  -- typically some kind of library -- I have already something like this:When I run , I have an import error saying that  does not know the module . Of course, when I run  alone, I have no error.Possible solutions so farA simple workaround is to put:instead in . But it feels strange to have to specify the module  since both files live in the same folder. When you develop something in , you should not have to care about this.I can also add something like:in . But in this case in  I can completely ignore the module structure and just import:which does not feel right either.This is purely a question of style, but I am sure that there is a nice solution for this, probably using the  files. I can't find it though. Any idea? I am using Python 3.4 by the way
You can use package relative imports in .See Intra-Package References for details. Note that if you run  directly, it is a top-level script () and is not a member of the package. If some other module imports , you get a different copy. Personally, I put top-level scripts in a different  directory so they are not mistaken for package modules.


Answer URL
https://docs.python.org/3/tutorial/modules.html#intra-package-references
