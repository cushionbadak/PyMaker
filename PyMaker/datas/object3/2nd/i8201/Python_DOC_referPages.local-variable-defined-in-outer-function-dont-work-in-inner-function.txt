Natural Text
I define a variable in a function, and I want to use this variable in inner function defined in the outer function. However, there is an error: this variable referenced before assignment. I don't know why."result" is the variable. And error is like this:if I replacewithThen it works. And I am so confused about this.
By setting  you are telling python that it is a local variable, which will be defined in the inner-most scope. If you are using python3, you can use  for using the same variable as the outer scope. In python2 this variable is essential "read-only" and you can't assign to it within the inner scope.From the documentation:A special quirk of Python is that – if no global statement is in effect – assignments to names always go into the innermost scope. Assignments do not copy data — they just bind names to objects. The same is true for deletions: the statement del x removes the binding of x from the namespace referenced by the local scope. In fact, all operations that introduce new names use the local scope: in particular, import statements and function definitions bind the module or function name in the local scope.The global statement can be used to indicate that particular variables live in the global scope and should be rebound there; the nonlocal statement indicates that particular variables live in an enclosing scope and should be rebound there.


Answer URL
https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces
