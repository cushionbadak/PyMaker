Natural Text
I am trying to loop through two lists and only want to print an item if it DOES exist in the second list. I will be doing this through very large files so do not want to store them in memory like a list or dictionary. Is there a way I can do this without storing into a list or dict?I am able to do the below to confirm they are NOT in the list but unsure why it is not working when I am trying confirm they ARE in the list by removing the "not".Code to verify item DOES NOT exist in list_2.Code to verify item DOES exist in list_2.
This is a solution using  to create memory mapped files:The  and  files contain the strings from the question with one string on each line.OutputI do not have any really large files to experiment with, so I do not have any performance measurements.
You can use python's sets to work out the items in both listsSee https://docs.python.org/2/library/sets.html
So this is how you get them:And to  them:But if you want to just print:
I was able to accomplish the inverse by doing a True/False evaluation.
I recommend  which works well on large-scale data.Use pip to install it:And in a way you may achieve it like this:And now you would see the magic things if you execute See Pandas Docs
The problem the code is how the all() function is being evaluated. To break it down a bit more simply.Evaluates toInversely if you do something like thisEvaluates toI can not pinpoint why this is the cause, but it may be how the all() function returns true if all elements of the iterable are true and false otherwise.In any case I think using any() instead of all() for the DOES exist part would work.
One issue with your code is that the all method returns false if any single check returns false. Another is that the  section is checking to see if  is a substring of . If we were to modify the lists to make your logic work they would look like:but could be:since  is in . If we were to continue to use iteration to make this check, as opposed to an intersection of sets, as @wrdeman suggested, then, using the dataset you provided, it would look like this:The other modification could be to change  to , which returns true if any of the iterables items return true. Then your code would look like:


Answer URL
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/functions.html#any
