Natural Text
I need to append the values from one dictionary (N) to another (M)  -   pseudocode belowDoing this for every key in N seems quite untidy coding.What would be the most efficient way to achieve this?
Of course you should be iterating your keys in "x" already - but a single line solution is:
not entirely sure what your  is (guessing the keys of both  and ), then this might work:for the example:you get:or please clarify what the desired output for the given example would be.
When you say "append", I assume that means that the values in your dicts are lists. However the techniques below can easily be adapted if they're simple objects like integers or strings.Python doesn't provide any built-in methods for handling dicts of lists, and the most efficient way to do this depends on the data, because some ways work best when there are a high proportion of shared keys, other ways are better when there aren't many shared keys.If the proportion of shared keys isn't too high, this code is reasonably efficient:outputYou can make this slightly faster by caching the  method and the empty list:If you expect a high proportion of shared keys, then it's better to perform set operations on the keys (in Python 3, dict.keys() return a set-like View object, which is extremely efficient to construct), and handle the shared keys separately from the unique keys of N.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
