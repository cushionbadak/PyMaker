Natural Text
This question already has an answer here:What's the difference between %s and %d in Python string formatting?                    10 answers                In python string formatting %s supports string, integer, and floatwhere as %d accepts and formats only integer and %s accepts only %fWhy is that %s alone accepts all three and even more
 explicitly converts the input to string. ,  and  are the only three placeholders that convert values. From the -style formatting documentation:  String (converts any Python object using ).So  supports any object, as all Python objects support  conversion.  does not do any conversion.The other placeholders only support specific types. You probably want to use the new string formatting syntax instead (via  or -strings), where conversion and formatting types have been separated. There ,  and  can be added to first convert the value before formatting, keeping the syntax distinct and clearer that conversion takes place.You still can't apply the  format to strings, of course, you'll have to explicitly convert non-integer input values to integers manually if you want to use a  field format.The  and  string conversion is useful for types that do not otherwise have explicit formatting support. It allows you to accept any type of object and still give it some formatting in a template string, even if only to limit the field width or set a text alignment. And only string conversion is universally supported, you can't convert arbitrary objects to integers or floats, for example.


Answer URL
https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting
https://docs.python.org/3/library/string.html#formatstrings
