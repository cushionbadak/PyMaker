Natural Text
The following minimal example uses a dummy decorator, that justs prints some message when an object of the decorated class is constructed.Using it however makes  raise the following exception:Is there anything I can do to fix this?
Pickle requires that the  attribute of instances can be loaded via importing. Pickling instances only stores the instance data, and the  and  attributes of the class are used to later on re-create the instance by importing the class again and creating a new instance for the class.Pickle validates that the class can actually be imported first. The  and  pair are used to find the correct module and then access the  object named by  on that module, and if the  object and the object found on the module don't match, the error you see is raised.Here,  points to a class object with  set to  and  set to , but  doesn't point to a class, it points to a function instead, the  nested function your decorator returned.There are two possible solutions:Don't return a function, return the original class, and perhaps instrument the class object to do the work the wrapper does. If you are acting on the arguments for the class constructor, add or wrap a  or  method on the decorated class.Take into account that unpickling usually calls  on the class to create a new empty instance, before restoring the instance state (unless pickling has been customised).Store the class under a new location. Alter the  and perhaps the  attributes of the class to point to a location where the original class can be found by pickle. On unpickling the right type of instance will be created again, just like the original  call would have.Another option is to customise pickling for the produced class. You can give the class new  and new  methods that point to the wrapper function or a custom reduce function, instead. This can get complex, as the class may already have customised pickling, and  provides a default, and the return value can differ by pickle version.If you don't want to alter the class, you can also use the  function to register a custom  handler for the class.Either way, the return value of the reducer should still avoid referencing the class and should reference the new constructor instead, by the name that it can be imported with. This can be problematic if you use the decorator directly with . Pickle itself would not deal with such situations either (as  would not match .


Answer URL
https://docs.python.org/3/library/pickle.html#pickling-class-instances
https://docs.python.org/3/library/pickle.html#object.__reduce_ex__
https://docs.python.org/3/library/pickle.html#object.__reduce__
https://docs.python.org/3/library/copyreg.html#copyreg.pickle
