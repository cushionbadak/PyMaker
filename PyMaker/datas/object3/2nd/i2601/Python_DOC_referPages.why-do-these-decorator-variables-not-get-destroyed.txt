Natural Text
This question already has an answer here:Python Closures Example Code                    5 answers                Suppose you have a decorator function that creates a dict to store already calculated results for performance reasons. E.g.:When I decorate a function with , I have a hard time understanding why this works.I have initially thought that cache would get lost after returning the memoized function, as it goes out of scope. I would only return a reference to the decorated function. Obviously, this is not the case. Can somebody tell me what is going on behind the scenes?
Decorator function have self nonlocal scope where storing cache. This scope doesn't destroy after function call. More info there https://docs.python.org/3/reference/simple_stmts.html#the-nonlocal-statement


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-nonlocal-statement
