Natural Text
Original post:If one has an executable  that uses  with the following structure:How can one create a controller program  that uses  (I think with ?) to have a similar usage to below:then using the subprogram:How could all of the parameters propagate up from  to the ? EDIT (More specific with error message):The programChecking to make sure the docs workTrying to run it:
The parent program could have code likeAs written, importing  doesn't run its parser.  But calling its  will, but using the list it finds in .The parent parser should be written in a way that it accepts arguments that it needs, and doesn't choke on inputs the  wants, '-X' and '-y'.  It would then puts those 'extra' values in a modified , which the  parser can handle. is one way of accepting unknown arguments, https://docs.python.org/3/library/argparse.html#partial-parsing, https://docs.python.org/3/library/argparse.html#nargs, is another way of collecting remaining arguments for passing on.If   was written as:it could be called withthat is, with an explicit  list, instead of working through .Keeping the main parser from responding to a '-h' help could be tricky.   is probably the cleanest way of doing that.You could combine subparsers with the invocation of a the  .  I won't try to work out those details now.Another way to define the  is:And use it asin other words, use  to define the parser, but delay the parsing.
My actual solution was an adaptation to the above:


Answer URL
https://docs.python.org/3/library/argparse.html#partial-parsing
https://docs.python.org/3/library/argparse.html#nargs
