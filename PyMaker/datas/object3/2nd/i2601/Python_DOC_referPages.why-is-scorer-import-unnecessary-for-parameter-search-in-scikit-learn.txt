Natural Text
If I want to optimise the regularisation parameter for a logistic regression model (for example) based on area under the ROC curve, I can use  for a suitable range of parameters and set .This can be done using , and there is no need to include .However, if I want to calculate the area under the ROC curve manually for a particular fitted dataset then I do need to include .How does this work? I assume that by importing  we are somehow importing  behind the scenes? Unfortunately I can't seem to follow this through in the source code - I'd really appreciate an explanation.If this is the case, does it also mean that by importing  we end up importing all possible scoring methods behind the scenes?Why then can I not use  "manually" myself if I have imported  only and not  itself? Is it not implicitly "there" behind the scenes?I appreciate this may be a more general question about python importing and not specific to scikit-learn...
GridSearchCV extends BaseSearchCV class. This means that it will be using the  function defined in BaseSearchCV.So now as you can see in source code here:It checks all the parameters supplied during the construction of GridSearchCV here.For  param, its calling a method . Now on top of this file, you will see many imports.The method  points to  file:Similarly tracing the method calls, we will reach here:Looking at , we will reach here:Now look at the parameters here,  is sent to . So from where it is imported? Look at the top of this file and you will see this:So from here, the actual scoring object is returned to the GridSearchCV. Now, the library is using relative and absolute imports, and as @Denziloe correctly said, those imports are local for that module, not the global imports. See these answers for more information on import scope and namespaces:Python "import" scopePython: Namespaces with Module ImportsAnd this python documentation page


Answer URL
https://docs.python.org/3/reference/import.html
https://docs.python.org/3/tutorial/modules.html
