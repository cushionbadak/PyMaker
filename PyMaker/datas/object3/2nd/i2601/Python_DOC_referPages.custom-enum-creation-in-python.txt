Natural Text
This question already has an answer here:Overriding Enum __call__ method                    1 answer                I can easily create a class likeThen I can assign variables by enum value:However -- I want to assign variables by things that could be the correct value.  I.e., I'd like to doand have them all work, and all map to the same enum value.Is there a way of doing this without making a factory method?  I've currently defined a  method, so  works, but I'd like things to be seamless.
The thing you are looking for is called  and is available in the stdlib as of Python3.6, and in 1 as of 2.0.If  fails to return a  member then  will raise an exception (so  doesn't have to worry about that part)2.1 Disclosure:  I am the author of the Python stdlib , the  backport, and the Advanced Enumeration ()  library.2 Thanks, Aran-Fey, for bringing that up.
This can be achieved by subclassing , which is the metaclass responsible for defining the  method that's invoked by .(Keep in mind that all the enum values have to be lowercase; i.e.  would not work.)Demonstration:


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html#enum-classes
https://docs.python.org/3/reference/datamodel.html#object.__call__
