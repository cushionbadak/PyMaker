Natural Text
Let's say you have a dataframe in a Jupyter notebook called MainNotebook.ipynb and you're passing this dataframe to an external python function called  in a python file called :Here's the code for testmath.py:I'm trying to get the function to return BOTH the DataFrame  AND the variable  so that I can use them for later analysis.However, what's weird is that when you run  from , while the DataFrame is returned with the new column added, the variable 'Feb' is not accessible.By this I mean that if you run the following from MainNotebook:The command to  returns the error:    NameError: name 'Feb' is not definedIs there any way to retrieve the variables generated inside the function? Especially if you have a lot of them? (I would prefer a method that doesn't involve global variables, gulp)I've already tried deleting pycache, and restarting the kernel and clearing the outputs. I also updated all of the conda packages, but still no luck.
Since your function returns a , you can use sequence unpacking:The right hand side returns a tuple of results, which are unpacked to variables  and . These variables can then be accessed like any other variable.Equivalently, with :


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
