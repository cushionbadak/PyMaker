Natural Text
I need to write a thread which:runs for n seconds and then does A (and exits)except if it is told by its parent to stop earlier, in which case it does B (and exits)I wrote something which works but is really convoluted (I believe). It (mis)uses a  as a flag :It works correctly (I do not care about slight shifts in the time - 6 seconds vs 5 in that case, due to the co-running of the main thread and the spawned one):As I mentioned, this solution looks very convoluted to me. Is there a more pythonic construction which would run a timeout-ing thread, interruptible by its parent?
If the extra thread is to be used only for counting down, and not to execute any other function in the mean time, the  object is made just for this.If needed, the timer can be canceled ahead of time, using the  method. More information can be found in the official documentation.Rewriting the example from the question (slightly modified) gives code looking something like:


Answer URL
https://docs.python.org/3/library/threading.html#timer-objects
