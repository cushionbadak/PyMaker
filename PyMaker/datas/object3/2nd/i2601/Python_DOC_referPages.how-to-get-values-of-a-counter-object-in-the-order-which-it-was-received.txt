Natural Text
This question already has an answer here:How to get count dict of items but maintain the order in which they appear?                    3 answers                How Ordered Counter recipe works                    1 answer                Task:The first line contains the integer, N. The next N lines each contain a word.Output should be:1) On the first line, output the number of distinct words from the input. 2) On the second line, output the number of occurrences for each distinct word according to their appearance in the input.I had no difficulty with #1. For point #2, I used Counter to get the occurrences of the words. However I am having difficulty in printing them in the order which it was received. Below is my code.Input:Output of my code:Expected output:
This isn't going to work:First you're creating a  by iterating . Since a  is just a  under the hood, depending on your Python version, this may be in insertion order, consistent-but-arbitrary order, or explicitly-randomized order.Then you create an  by iterating that . That will preserve the order of the â€”which isn't very useful if the  was in arbitrary order.What you want to do is to create a class that does everything  does but also does everything  does. Which is trivial:This isn't quite perfect, because its  will give you the wrong class name, and it won't pickle right. But fixing that is almost as simple. In fact, it's given as an example in the docs:


Answer URL
https://docs.python.org/3/library/collections.html?highlight=counter#ordereddict-examples-and-recipes
https://docs.python.org/3/library/collections.html?highlight=counter#ordereddict-examples-and-recipes
