Natural Text
I am trying to append small (num) lists to a final list (lst).The small lists are modified in a loop and at each modification they are appended to the final list.But the result is strange and I did not like the solution.Here is the code.The result of this code is:However, if instead of using , I use , I get the expected result:Is this really the correct way for appending values of a list to another list?UPDATE:I see that when I do  this does not mean that the values of num are appended to lst. It is a reference and because I change the content of num, in the end, all entries of my list lst will reference to the final num. However, if I do this:I get what is expected, i.e., a list lst with the values [0, 1 , 2]. And in this case, num is changed at every iteration and its final value is num=2.
Lets have a closer look at this loop.You are appending same  multiple times. So, all elements of  has the same reference to list  and you are updating it at each iteration. That is why you are getting same value at each element of  after the loop has completed.But, when you are doing , you are generating a new list each time. So, each element of  has different reference. And you are getting expected output.So, to answer your question, the way you are adding a list to a list is fine. That is how you should do it. It has nothing to do with your expected outcome.
I think the explanation for your result is that when you do  you are actually modifying the preceding copies of num that were appended in  at previous stages of the loop. When you do  you are creating a unique version of .


Answer URL
https://docs.python.org/3/faq/programming.html
