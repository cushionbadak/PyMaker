Natural Text
I have the following dictionaries:My aim is to multiply each float in  by a factor defined in  for some variables. Since a command (highest level keys in  can define multiple variables, these are mapped in .So first I need to check, if the variable is contained in , since  has no unit. Then for each variable in every command I need to get the unit. In the next step I get the conversion factor depending on the unit from . Since the values of the highest level keys in  can be of the type float, list or dict, I wrote a different method for each case. This is put into a function and called in a loop over .The desired output is for the functionand for the main programI managed to convert floats and lists but no dictionaries. In this shortened problem statement, I had the error that the local variable 'converted' is referenced before the assignment.If somebody has an easier way to convert the quantities, I would appreciate that.    
The main issue with your existing code is that yourloop doesn't accumulated the changed items in the nested dictionary, so the  produced by that part of the code will only be the converted last  in ; also that section only handles nested dictionary items that are lists, it will fail on plain floats.FWIW, your  at the bottom of the main  loop looks a bit suspicious: an unconditional  inside a loop will cause the function to return at the end of the first loop iteration. That's actually ok here, since we do want to exit the loop after we get a successful match , but it still makes it a bit tricky for someone reading your code. :)A minor issue is the use of  for type testing. It's recommended to use  instead. See Differences between isinstance() and type() in python for details. As the answers there mention it's best to avoid  checking in Python as much as possible, since that interferes with duck typing.Anyway, here's a modified version of your function. My code was tested on Python 2.6.6, but it should perform correctly on Python 3... I think. :)outputFWIW, although  is ok for displaying dictionaries, you can get prettier output using .


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
