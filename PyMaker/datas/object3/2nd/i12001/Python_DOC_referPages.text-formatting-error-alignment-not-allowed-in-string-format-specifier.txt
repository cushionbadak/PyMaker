Natural Text
What does  mean in the following error message, and why does this code cause it?The code has a subtle problem: the input value  is text, not a number. But the error message doesn't appear to have anything to do with that.Nothing in the error message indicates why “'=' alignment” is relevant,and it does not appear in the code. So what is the significance of emitting that error message?
The error message occurs because  has been implied by the format specifier.The  format spec mini-language parser has decided on thealignment specifier “=” because:Preceding the width field by a zero ('0') character enables  sign-aware zero-padding for numeric types. This is equivalent to a  fill character of '0' with an alignment type of '='.So by specifying  as the “zero-padding to N width”, you have implied both “the input is a numeric type”, and “the zeros should go between the sign and the digits”. That latter implication is what is meant by .Since the value  is not numeric, the “=”-alignment handling code raises that exception. The message is written expecting you know what it's talking about because you requested (by implication) the “=” alignment.Yes, I think that error message needs to be improved. I've raised an issue for that.
A workaround is to use  (right justify) padding, which is with the syntax:with  align being , fill being  and width being .The problem was that there is a different  in the format specification:That zero just makes  default to  and  to . alignment is specified as:Forces the padding to be placed after the sign (if any) but before the digits. This is used for printing fields in the form ‘+000000120’. This alignment option is only valid for numeric types. It becomes the default when ‘0’ immediately precedes the field width.Source (Python 3 docs)This expects the argument to be an , as strings don't have signs. So we just manually set it to the normal default of  (right justify).Also note that  just specifies the default values for  and . You can change both or just the align.
 doesn't know what to do with your  part. That only works with numbers:If you actually want to zero-pad a string, you can use :
You are trying to insert 'string->"1" where a float->3.44 is required. Remove the quotes "1", i.e. num=1, and it will work
This format would be acceptablebut the way you have the placeholder specified  is not. That is an interesting ValueError though, if you remove the  the interesting error is replaced by a standard .


Answer URL
https://docs.python.org/3/library/string.html#formatspec
https://docs.python.org/3/library/string.html#grammar-token-align
