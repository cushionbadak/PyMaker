Natural Text
The default  module from the Python standard library does not allow for the serialization of functions with closures, lambdas, or functions in  (see here). I need to pickle an object using some custom functions that will not be importable where they will be unpickled. There are a few other Python object serializers, including  and , that are capable of doing this. The  documentation seems to be saying that even when you pickle using , you can unpickle using the standard  module. This is extremely attractive, because I cannot even install packages in the environment where I need to unpickle. Indeed, the example in the documentation does basically the following:Pickle:Unpickle:But, running that second block in an environment where  is not installed, even though it is never imported, yields the error:Probably the most easily reproducible example would be to install  for Python2, run the first block, and then try to load in the pickled file with the second block using Python3 (where  was not installed).What is going on here? Why does  need to be installed to run the standard  load if it is not even called?
In theory,  should not need to be installed to  a pickled object.  In theory, what  would do would be too include all functions necessary to unpickle an object within that object. However, that's in theory.In the method registry (e.g. with ), a serializer would need to register the method that enables the serializer to create a new object of the required type and imbue it with the saved state.  For a serializer to not be required to be installed on load, the serializer would need to include all of the required deserialization methods within the pickled object itself (this is possible because a pickle is recursive). assumes  is installed, and therefore (to make the resulting pickled object smaller), does not include all of the required methods.  This is unlike , as a counter-example, which the  method on the  does include the  method in the pickle (you can see this as  appears in any pickle of an ).


Answer URL
https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled
