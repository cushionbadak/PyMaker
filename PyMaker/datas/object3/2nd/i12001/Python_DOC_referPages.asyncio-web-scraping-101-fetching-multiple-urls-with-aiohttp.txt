Natural Text
In earlier question, one of authors of  kindly suggested way to fetch multiple urls with aiohttp using the new  syntax from :However when one of the  requests breaks (as above because of ) the error is not handled and the whole thing breaks.I looked for ways to insert tests about the result of , for instance looking for places for a , or for a  but I am just not understanding how to work with ,  and the various objects.Since  is still very new there are not many examples. It would be very helpful to many people if an  wizard could show how to do this. After all one of the first things most people will want to test with  is getting multiple resources concurrently.GoalThe goal is that we can inspect  and quickly see either: this url failed (and why: status code, maybe exception name),  orthis url worked, and here is a useful response object
I would use  instead of , which can return exceptions as objects, without raising them. Then you can check each result, if it is instance of some exception.Tests:
I am far from an asyncio expert but you want to catch the  error you need to catch a socket error:Running the code and printing the_results:You can see we get catch the error  and the further calls are still successful returning the  html.We should probably really be catching an OSError as socket.error is   A deprecated alias of OSError since python 3.3:If you want to also check the response is 200, put your if in the try too and you can use the reason attribute to get more info:


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.gather
