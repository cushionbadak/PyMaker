Natural Text
Hi I'm having a function that looks like it is only working in a 2.x (2.7) system. But the rest of my program is written in python 3.4The file a.py (version 2.7) was a script i could run in 2.7 by calling the script as:And then calling the following code from python 3.4 in b.py workesBut then I wanted to change the script in a.py to be a function with kwargs such as:So I want to do something likeSo the question is: how can I send parameters to another script's function?can I use both args and kwargs?I know if I could have run the script with python 3.4 i could have just imported the function as My solution for this would be to read the whole python script as a string, use str.replace('busSystem.raw',in) and str.replace(''busSystem_out.raw',out) and save it back as a a_new.pyand run it as mentioned before.The script in a.py need to be in python version 2.7, because it is interacting with Siemens PSS/E 33, which only communicates through py2.7. 
Function calls work only within a single process and, generally, only within a single language.  So you have a script that can be run with no arguments.  Now you want this script to process command line arguments.  This has nothing, really, to do with function calls and keyword arguments.You should read the Argparse Tutorial in the Python documentation.  It introduces the concept of command line arguments, since you seem to be unfamiliar with it, and then shows some examples of using the built-in  module to do the hard parts of parsing the arguments.Then you should read about the  module.  It will work better for you than .Alternatively, you could update the script so that works correctly in Python 3.  This is what I would start with.Here is some untested example code.In your existing script In your other program:


Answer URL
https://docs.python.org/3/library/subprocess.html#module-subprocess
