Natural Text
I was having an issue where no matter what I did I couldn't access an IntEnum (from the enum34 lib) in my Django template.I was able to get around it by converting it to a dict:These don't work when DEMO is an IntEnum, but do when DEMO is converted to a dict:Any ideas why? Is this a known issue?
A little more digging and I found the answer.From the website:Technically, when the template system encounters a dot, it tries the following lookups, in this order:Dictionary lookupAttribute or method lookupNumeric index lookupIf the resulting value is callable, it is called with no arguments. The result of the call becomes the template value.That last line should say:If any of the resulting/intermediate values is callable, ...Stepping through that process:lookup  in the , get check if it is callable (it is)call it with no argumentsget a So the problem is that an  class is callable, and the templating system will try to call it, which will raise an error and abort (returning an empty string: ).However, there is a way around that problem.'s calling code contains the followingguard condition:The code checks for an attribute called , and if  then it will skip the call portion, which should solve the problem.Using Python's  (or the  backport) the simplest way will be to use a decorator.  If Django doesn't already have one for this purpose, you can roll your own easily enough:and then decorate your :The additional attribute does not interfere with your set of Enum constants, because Enums are fixed once defined.
Using Django's  you can use  property:Reference


Answer URL
https://docs.python.org/3/library/enum.html#iteration
