Natural Text
I'm working with a bunch of  arrays that don't all fit in RAM, so I need to periodically save them to and load them from the disk.Usually, I know which ones I'll need to read ahead of time, so I'd like to hide the latency by issuing something like a "prefetch" instruction in advance.How should I do this?(There is a similar question related to TensorFlow: However, I am not using TensorFlow, and so I wouldn't want to create a dependency on it)
If you're using Python 3.3+ on a UNIX-like system, you can use  to initiate a prefetch after opening a file. For example:Aside from that, Python doesn't directly offer any APIs for explicit prefetch, but you could use  to manually load an OS appropriate prefetch function, or use a background thread that does nothing but read and discard blocks from the file to improve the odds that the data is in the system cache.
[disclaimer: shameless self-advertising here :-)]I have written a library that should help on this, and it is compatible with python 2.7: documentation/repositoryYou can use its  function which does what it says, prefetch some values:It has a few more options if you want to switch from threads to processes etc.Note that fetching an item different from the one provisioned according to  will reset the buffer.


Answer URL
https://docs.python.org/3/library/os.html#os.posix_fadvise
