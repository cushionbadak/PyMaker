Natural Text
This code in python3 is problematic：Its output is:Why did I get ？What could I do to get the right response？The right text should be
The  is a byte string: an array of bytes, not a real string.To convert to a real string, useThis uses the default encoding 'UTF-8'. For ASCII encoding, usefor example
As the documentation says,  returns an object whose  method gives you a sequence of bytes, not a sequence of characters. In order to convert the bytes to printable characters, which is what you want, you will need to apply the  method, using the encoding that the bytes are in.The reason the result seems to make sense is that the default encoding Python picks to display the bytes happens to be the right one, or at least happens to match the right one for these characters.To do this properly, you should  where  is the encoding value from the  HTTP header, accessible through the  object (that is, , in your code). If there is no  header, or if it doesn't specify an encoding, you're reduced to guessing which encoding to use, but for typical English text it doesn't matter, and in many other cases it's probably going to be UTF-8.
Python 3 distinguishes between byte sequences and strings. The "b" in front of the string tells you that urllib returned the contents as "raw" bytes. It might be worth reading into the python 3 bytes/strings situation, but basically, you did get the right text back. If you don't want the result to be bytes, you'd just have to convert it back to a "real" python string.
The third-party requests library handles decoding to unicode strings automatically.  It does its best to infer the correct encoding so you don't need to guess the encoding yourself.Same thing with  and an assumed  encoding:


Answer URL
https://docs.python.org/3/library/http.client.html#httpresponse-objects
https://docs.python.org/3/library/http.client.html#httpresponse-objects
