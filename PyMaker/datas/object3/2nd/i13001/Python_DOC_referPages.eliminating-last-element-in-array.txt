Natural Text
So I am working on a small hangman text based game.The problem I am currently dealing with is calling random words from my text file. Each word has one additional character for a new line (\n).For instance, running through my function that separates a string's letters into individual elements I get something to the effect of:however, when joining the array back together the following is shown:as you can see, it is a bit difficult to guess an element that does not show up.For clarity here is my function for arrange_word:What I am stuck on is that when trying to guess letters, the \n is impossible to guess. The win condition of my game is based on the guess being identical to the answer word. However the \n keeps that from working because they are of different length.These answer arrays are of different length as well, since I am just pulling random lines from a text file of ~1000 words. After hours of searching I cannot seem to find out how to drop the last element of an array.
For this line here: Before you take the length, what you can do is this first:Explanation:strip removes leading and trailing whitespace.With all this in mind, you don't need the rest of this code anymore: Applying the  will give you your word without the whitespace character, then all you want to do after this to have a list of characters, is simply:So your method can now simply be: Demo: Output:
All these answers are fine for specifically stripping whitespace characters from a string, but more generally, Python lists implement standard stack/queue operations, and you can make your word into a list just by calling the list() constructor without needing to write your own function:
Use List slicingArray slicing syntax is [startindex:endindex:offset(2, means each 2 element)] So in your case you could. Which mean start at the begging of the list, to the last element -1 for every 1 element in the list.
you can access last element by -1 index like:guess[-1]and you can delte it by:
Just strip the word:
Maybe first line of your arrange_word function should beto remove all leading/trailing whitespace characters.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.strip
