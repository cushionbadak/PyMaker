Natural Text
What system call does os.listdir internally perform and is there a possiblity of Python process hanging because of a scenario where  is over a mounted network drive? We are suspecting a problem in our app server because of  which tries to list a samba share mounted on to a linux machine. Apparently DNS of the samba share had changed round about the time we had this issue. We are still trying to replicate this scenario, but can anyone tell me how would it work? And also would commands like  also hang like this?Are there any ways we could handle this at user-space?
CPython's implementation of  uses platform-specific C library calls to read the contents of a directory. On Unix-like platforms those are  and , and on Windows it uses  and .How these calls behave in the presence of unreachable network file systems will depend on the operating system. When using Linux or Windows, they are certain to hang in those situations in which system commands such as  hang. To prevent arbitrarily long pauses, one can use specialized frameworks, such as asyncio and twisted which make use of non-blocking IO. The use of these frameworks can be daunting, though, and typically requires using them throughout the application and the whole program to event-driven model.A simpler and somewhat beginner-friendly way to make sure IO system calls don't block in presence of network file systems is to use threads. As an example, here is a  function that returns the directory contents, or  if the call took longer than a specified timeout:In Python 3 one could use the excellent  package. It not only simplifies the implementation, it automatically limits the number of created threads if  is called many times, and ensures that exceptions raised in  are correctly propagated to the caller:


Answer URL
https://docs.python.org/3/library/asyncio.html
