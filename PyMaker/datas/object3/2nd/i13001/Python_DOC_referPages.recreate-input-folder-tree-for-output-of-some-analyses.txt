Natural Text
I am new to Python and, although having been reading and enjoying it so far, have ∂ experience, where ∂ → 0.I have a folder tree and each folder at the bottom of the tree's branches contains many files. For me, this whole tree in the input.I would to perform several steps of analysis (I believe these are irrelavant to this question), the results of which I would like to have returned in an identical tree to that of the input, called output.I have two ideas:Read through each folder recursively using os.walk() and for each file to perform the analysis, andUse a function such as shutil.copytree() and perform the analysis somewhere along the way. So actually, I do not want to COPY the tree at all, rather replicate it's structure but with new files. I thought this might be a kind of 'hack' as I do actually want to use each input file to create the output file, so instead of a command, I need an  command. The rest should remain unchanged as far as my imagination allows me to understand.I have little experience with option 1 and zero experience with option 2.For smaller trees up until now I have been hard-coding the paths, which has become too time-consuming at this point.I have also seen more mundane ways, such as using  to first find all the files I would like and work on them, but I don't know how this might help find a shortcut in recreating the input tree for my output.My attempt at option 1 looks like this:however I fear this is going to be very slow, I would also like to do some kind of filtering on files too - for example the  files created in mac trees are included in the results of the above. I would attempt to use the  module to filter only the files I want.I have seen in the  function that it is possible to ignore files according to a pattern, which would be helpful, however I do not understand from the documentation where I could put my analysis function in on each file.
You can use both options: you could provide your custom  that performs analysis instead of the default   to  (it is a more of a hack) or you could use  to have a finer control over the process.You don't need to create parent directories manually either way.  creates the parent directories for you and  can create parent directories if you use :


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.copytree
