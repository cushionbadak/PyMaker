Natural Text
I have basically a similar question, though I do not feel it has been answered properly:Tkinter: How can I dynamically create a widget that can then be destroyed or removed?The accepted answer is:You'll want to store the dynamically-created widgets in a list. Have  something likeYou can see that the reference they speak of is not variable, here the number 0 is used. But when dynamically creating widgets, how do you connect these references to the buttons?Say that you create a Toplevel widget (displays a file's content), and want to have a button to close the widget. The dynamic creation will allow multiple files to be open. The problem is that even with this list, how will the button "know" to which widget it belongs, as there is no hard reference (great that you have a list of the items, but toplevel 5 + button 5 have no clue they are 5th in their lists). There will always be just one "active" version of the button and the toplevel, and this one can be deleted.
How does the button know which window it belongs to? You tell it:By the way, you're assigning  to  in your code. This is because you are doing , which means  gets the value of  which is always None.If you are going to save a reference to a widget, you must create the widget in a separate step from when you place it in a window.An even better solution is to take advantage of classes and objects. Create your own subclass of Toplevel, and the instance will keep track of all of the subwidgets for you. For example:
APass in a index to your command function using the  function:Make sure that you pass the index as a keyword parameter to bind the value when defining the lambda (a closure would use the last value of ). takes a second argument, the index to start at, which defaults at 0.


Answer URL
