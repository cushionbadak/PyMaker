Natural Text
I've compiled my regex using:and it manages to match the 1990-1991 in the following string:but when the string is decoded (or when it's passed into a function)the matching no longer occurs, I'm guessing it has to do with the boundaries '\b' not matching because it looks like one continuous string but I'm not exactly sure.I think that I've put all the unicode requirements (compiled with 're.UNICODE' flag and also put 'ur' in my regex string.  The last thing I'm going to try is the Python regex library that everyone says is good, but I'd like to know what's wrong with my current stuff! :).
\bThere isn't a word boundary between the letter  and the number â€”they are both alphanumerics. When Unicode-aware regex is being used this is correctly handled, hence no match. If you don't want to treat katakana and other non-ASCII letters as being alphanums, remove the  flag which controls this behaviour.When you send a byte string to a regex that was compiled from a Unicode string, it is automatically decoded. For some reason it seems to be decoded as ISO-8859-1 (rather than, say, )... don't know why that is, but implicit encode/decode is in general evil to be avoided.The UTF-8 byte sequence for , when mis-decoded as ISO-8859-1, comes out as . The degree sign is not an alphanum so you get a match.


Answer URL
