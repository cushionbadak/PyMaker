Natural Text
I need to do an XOR of two hex strings so that each byte is XORed separately, but it doesn't work because the  function that I use seems to be getting an  as input instead of the intended string. Take a look at his code first to see what I mean:And the error that I am getting:I then checked the values of q, and they indeed where integers for some reason. I don't see why, because according to my logic they are supposed to be strings because I gave it a hex encoded string, unhexlified it and then stuck each character into a slot in q.
You are using  and  on Python 3, where they return a  object. You then zip these objects, which iterates over the  objects to create the pairs. Iteration over a  object produces integers. See the  type documentation:While  literals and representations are based on ASCII text,  objects actually behave like immutable sequences of integers, with each value in the sequence restricted such that .You do not need to use  when looping over a  object; you already have integers representing the individual bytes.Simply use a  object again after XOR-ing the values:Note that  returns a  object too. If you have to have a string (unicode) object then decode from ASCII:Demo:
output 


Answer URL
