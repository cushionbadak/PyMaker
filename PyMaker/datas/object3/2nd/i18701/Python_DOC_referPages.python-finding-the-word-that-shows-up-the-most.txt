Natural Text
I'm trying to get my program to report the word that shows up the most in a text file. For example, if I type "Hello I like pie because they are like so good" the program should print out "like occurred the most." I get this error when executing Option 3: KeyError: 'h'
I think you may want to do:Currently, you are just iterating through every character in the . So to iterate through every word, we must first split the string up into an array of words. By default  splits on whitespace, but you can change this by just passing a delimeter to .Also, you need to check if the word is in your dictionary, not in your original string. So try:Then, to find the entry with the highest occurrences:Then, just print out the value of  and .To keep track of ties, just keep a list of the highest words. If we find a higher occurrence, clear the list and continue rebuilding. Here is the full program so far:
Instead of rolling your own counter, a better idea is to use Counters in the collections module.Also, as a general code style thing, please avoid adding comments like this:It makes your code less readable, not more.
The original answer is certainly correct, but you may want to keep in mind that it will not show you 'ties for first'.  A sentence likeWill only reveal either 'a' or 'present' to be the number one hit. In fact, since dictionaries are (generally) unordered, the result you see may not even be the first word that's repeated multiple times.If you need to report on multiples, might I suggest the following:1) Use your current method of key-value pairs for 'word':'hits'.2) Determine the greatest value for 'hits'.3) Check for the number of values that equal the greatest number of hits, and add those keys to a list.4) Iterate through the list to display the words with the greatest number of hits.  Par example:Depending on Python 2.7 or Python 3, your mileage (and syntax) may vary.  But ideally - IMHO -  you'd first want to determine the greatest number of hits and then just go back and add the relevant entries to a new list.EDIT -- you should probably just go with the Counters module as suggested in a different answer.  I didn't even know that was something Python just came prepared to do.  Haha don't accept my answer unless you necessarily have to write your own counter!  There's already a module for that, it seems.
With Python 3.6+ you can use statistics.mode:
I'm not too keen on Python, but on your last print statement, shouldn't you have a %s?i.e.: print("The word that showed up the most was: %s", word)


Answer URL
https://docs.python.org/3/library/statistics.html#statistics.mode
