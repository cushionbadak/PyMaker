Natural Text
I am reading serial data like this:The problem is that it prevents anything else from executing including bottle py web framework. Adding  won't help.Changing "while True"" to "while ser.readline():" doesn't print "test", which is strange since it worked in Python 2.7. Any ideas what could be wrong?Ideally I should be able to read serial data only when it's available. Data is being sent every 1,000 ms.
Put it in a separate thread, for example:http://docs.python.org/3/library/threading
Using a separate thread is totally unnecessary. Just do this for your infinite while loop instead (Tested in Python 3.2.3):This way you only read and print if something is there. You said, "Ideally I should be able to read serial data only when it's available." This is exactly what the code above does. If nothing is available to read, it skips on to the rest of your code in the while loop. Totally non-blocking.(This answer originally posted & debugged here: Python 3 non-blocking read with pySerial (Cannot get pySerial's "in_waiting" property to work))pySerial documentation: http://pyserial.readthedocs.io/en/latest/pyserial_api.htmlUPDATE:  27 Dec. 2018: added comment about  vs . Thanks to @FurkanTÃ¼rkal for pointing that out in the comments below. See documentation here: https://pyserial.readthedocs.io/en/latest/pyserial_api.html#serial.Serial.in_waiting.27 Oct. 2018: Add sleep to let other threads run.  Documentation: https://docs.python.org/3/library/time.html#time.sleepThanks to @RufusV2 for bringing this point up in the comments.Note on multi-threading:Even though reading serial data, as shown above, does not require using multiple threads, reading keyboard input in a non-blocking manner does. Therefore, to accomplish non-blocking keyboard input reading, I've written this answer: How to read keyboard-input?.
Use a timer driven event to test and read the serial port.Untested example:


Answer URL
https://docs.python.org/3/library/time.html#time.sleep
