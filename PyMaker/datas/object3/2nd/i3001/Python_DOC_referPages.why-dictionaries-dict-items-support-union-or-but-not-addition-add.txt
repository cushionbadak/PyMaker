Natural Text
Example to illustrate:Meanwhile...Is there a reason for this? Wouldn't it be reasonable to assume that addition and union should do the same for dictionaries?In Python 2 this works perfectly fine:Although in Python 2  returns a regular list (in contrast to ), so maybe it's by accident.Finally, I don't think "what happens if keys have different values"-dilemma applies here as operator  doesn't seem to mind anyway (one of two values is selected seemingly at random).
Some  views (notably not ) support set operations.   isn't a set operation, so there's no real reason it should be included.
Just to add a bit to @Patrick's answer, the  object is a subclass of and  doesn't have the  operation:
Let's fall back to the most basic Python mantra: the Zen of Python.There should be one-- and preferably only one --obvious way to do it.So you're asking why  shouldn't be defined to do the same thing as . Your answer is right there: there would be two equally correct ways to do the same thing, which would not be Pythonic.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
https://docs.python.org/3/library/stdtypes.html#set
https://docs.python.org/3/library/stdtypes.html#frozenset.difference
