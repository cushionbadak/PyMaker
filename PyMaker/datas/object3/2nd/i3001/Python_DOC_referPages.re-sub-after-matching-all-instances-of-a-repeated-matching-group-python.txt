Natural Text
I am matching digits in str using a regex in Python. My desire is to capture numbers that might have a thousands separator (for me, a comma or a space) or can just be a string of numbers. The following shows what my regex capturesThis is the matching behavior I want. Now, I want to take each of the matched numbers and remove the thousands separators ( or ) if they exist. This should leave me withBasically, I have one regex to capture the number. This regex is used in multiple places, e.g. to find dollar amounts, to get ordinal numbers, ... For this reason, I've named the regex, .What I want to do is something like the following:As things are, I can not use substitution groups. If you just want to see the regex, you can check out https://regex101.com/r/AzChEE/3 Basically, part of my regex is as followsI'll represent that without the "scrolling line":The regex engine doesn't keep the repeated  because of the  for repeated capturing groups.I'm sure there's a way to use the  parts of the s. That would be quite involved, however, and I'm dealing with strings with thousands to hundreds-of-thousands of characters. Is there a simple way to do  after the  or  or whichever other method is used to find the number pattern?@abarnert got me the right answer - using a lambda function. My comment under @abarnert's answer, beginning with 'Verified!' shows all the steps.My AttemptsBy the way, I have looked at these questions on SO (replace portion of match, extract part of a match, replace after matching pattern, repeated capturing group stuff), but they simply show how to use substitution groups. I've also tried to use  as shown below with the following result.The Big RegexIn case something happens to the regex101.com link, here is the giant regex:
I don't see any reason you can't just use  instead of  here. Your  gets applied once for each match, and the result of substituting each  with  in  is returned, which is exactly what you want.I can't actually run your example, because copying and pasting  gives me a SyntaxError, and copying and pasting  gives me an error compiling the regex, and I don't want to go down a rabbit hole trying to fix all of your bugs, most of which probably aren't even in your real code. So let me give a simpler example:Obviously your  function will be a bit more complicated than just removing all of the commasâ€”and you'll probably want to  it out-of-line rather than try to cram it into a . But whatever your rule is, if you an write it as a function that takes a  object and returns the string you want in place of that match object, you can just pass that function to .


Answer URL
https://docs.python.org/3/library/re.html
