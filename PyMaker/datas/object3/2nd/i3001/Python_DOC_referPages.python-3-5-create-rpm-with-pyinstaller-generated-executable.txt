Natural Text
I've got a build generated with a pyinstaller.I need to create .rpm package which will put the executable into the  and create a systemd service which will run that executable.I found this https://docs.python.org/3/distutils/builtdist.html and https://docs.python.org/2.0/dist/creating-rpms.htmlHowever it doesn't give me a full picture.Is it possible to make it?What toolset do i need to use? (Basically,  to make it).If possible - sample code
First of all, forget about . It's for a / project, so you would need a  script that invokes  under the hood to bundle the executable, somehow redefines the  command to be able to package binary executables and also handles the packaging of the  unit files. Instead, write a spec file which is the instruction manual for  to build and install your package.setupThis is the example project to play with.No magic here - prints  once called. Will be bundled via  to a binary named . I didn't call the project  to avoid ambiguity, because  also creates a file with  extension, so that running it does not overwrite the rpm spec file.Simple service calling the binary .Will call  every ten seconds.The instruction for the package. In  section, we bundle , then install the bundled executable  to  along with the  unit files.build the packageThere are lots of tutorials out there that explain building  packages in-depth, for example Fedora Packaging Guidelines, so just listing the minimal sequence of commands here:test the packageEdit: as mentioned in the comments, use  in favor of . Quote from the  mans:The general form of an rpm upgrade command isThis upgrades or installs the package currently installed to a newer version. This is the same as install, except all other version(s) of the package are removed after the new package is installed.So usefor test installation.Now  should be available from command line:Start the timer:Check the logs:Once verified things work, stop the timer and uninstall :


Answer URL
https://docs.python.org/3/distutils/builtdist.html
