Natural Text
I've got some text:Which looks like this:I'm trying to parse out the messages within them. Ultimately I'd like to have a list or dictionary where I have the From and To, and then the message body with which to do some analysis on.I've tried parsing it out by turning everything lower, and then string splitting.is there a better way to do this?
That's not how  works. Your  uses the punctuation chars as a translation table, so it maps '\n', which is codepoint 10 to the 10th char in , which is '+'. The usual way to use  is to first create a translation table using , which lets you specify chars to map from, the corresponding chars to map to, and (optionally) chars to delete. If you just want to use it for deletion you can create the table using , egwhich makes a dict associating the codepoint of each char in  to .Here's a repaired version of your code that uses  to perform the case conversion and the punctuation deletion in a single step.outputHowever, simply deleting all the punctuation is a bit messy, since it joins some words that you may not want joined. Instead, we can translate each punctuation char to a space, and then split on whitespace:output
If all you wanted to achieve was to parse a string containing a standard-format email, then use the  module; it is part of the standard library.You'll still need to separate the emails in the larger text, but the  header can help there, using a regular expression:The regular expression matches any newline character that is directly preceded by another newline (so there is an empty line), followed by the text  and at least one space (so the next line looks like an email  header).Trying to get those same parts by removing or replacing punctuation is not a very effective method of getting the same information, even when you use the tools correctly.Demo:
You can use  to split messages (explanation of this regexp on external site). The result is list of dicts with keys , ,  and : Prints:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.maketrans
https://docs.python.org/3/library/stdtypes.html#dict.fromkeys
https://docs.python.org/3/library/email.parser.html
