Natural Text
I would like to compare nested dictionaries as following: is the total full dictionaries that will be use to compare with ,  and .If  happens to found in siteA-00000000, then I would like both value (in this case 3 and 5) add up to become 8.If  is not found (in this case, it's true), I would like to append the dictionary into the .If  is not found, would like to append into .Thanks!
 is useful for summing values in dictionaries and adding keys where they do not exist. Since  is a subclass of , this should not break other operations. Apart from a one-off conversion cost, it is efficient and designed specifically for such tasks.Result:
You can use  from  in combination with .As the name suggests, the counter counts the same elements, and a defaultdict lets you access non-existing keys by providing a default value (an empty  in this case). Your code then becomes
Given the format of your dictionaries dict[site][address], let's say, this merge function will take the values from dictFrom and insert them into dictTo according to your rules.This may be preferable to jpp's answer because the objects at dict[site] are all still basic dicts.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
