Natural Text
So when I run this... the error is on this line  but the trace shows me a bunch of code from the  library to get to the error. How do I suppress all that and have the error just look like this:I just want what's relevant to me and the last line of code that I wrote which was bad.This is the original:
I would highly encourage you not to limit your traceback output, because it is bad practice. You feel like there is too much info; but this is only because you already looked at it already and you know what error to look for.In most cases, the problem may be hiding elsewhere. So there has to be a better way to achieve what you look for.Why not wrap your function call in a  clause and print the exception message? Take this scenario for example:When called, this is the output:This prints only the relevant exception in your code, hiding any information about the traceback, but the traceback is still available and you can print it as well (just raise the exception from your except block).Compared to this, if I remove the  block:You better use this technique to capture the relevant exception, rather than limiting the tracebacks. If you want your program to stop, just add  in the  block.
You can define how far back a traceback goes using the  variable. If your code is only 3 levels deep, (a function in a class in a file), then you can define this appropriately with the code:at the top of your file. BE CAREFUL WITH THIS: As you write more code, the portion that you've written will become deeper and deeper, and you may sometime soon find that an error is a result of something deeper in the traceback. As a general rule, I would avoid using the variable and just deal with a longer traceback for the time being.
Please, don't ever think about limiting the stack trace. It is very important.Only at this moment, in this small example of yours, the error really is in your code.But in an infinite other cases, an error could be triggered much deeper than that. It could be in the framework, or even out of the code whatsoever, like a configuration error, or it could be in the platform, like an Out of Memory error, etc.The stack trace is there to help you. It lists all frames the compiler was executing, to give you all the info you need to understand what was going on.


Answer URL
https://docs.python.org/3/library/sys.html#sys.tracebacklimit
