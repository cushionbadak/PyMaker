Natural Text
Normally, I'm happy with the way numpy determines the minimum type required to hold the objects of the sequence in :That is quite intuitive: I need to upcast an integer to a float in order to handle the data.However, the following case seems to be less intuitive to me:I would prefer the resulting array to be of type . I don't want to callbecause I would like to keep the old behavior in the case of  and also in case of  (which would result in type being ).Is it possible to tweak the default behavior in order to prevent the upcasting  of numerical values to a string, or is there any workaround with the same effect?
It looks like you want to do a bit of pre-processing on your data before you let numpy determine the data type. From what I understood of your criteria, if all the objects in the list are numbers, or all of them are not numbers, you want to let numpy determine the type. If the categories are mixed, you want to use .Fortunately, all numbers in Python have the abstract base class  hooked in:The phrasing here isn't ideal, but it should work, and give you a starting point for something more elegant and efficient.
After looking through all of the C code that I could in ~30 minutes, I've concluded there is no great way of doing this.My best bet would be the following:I'll admit that this is really hacky, since it relies on the fact that  casts these string/float arrays to unicode data types, but it should work well, at least for small arrays.


Answer URL
https://docs.python.org/3/library/numbers.html#numbers.Number
