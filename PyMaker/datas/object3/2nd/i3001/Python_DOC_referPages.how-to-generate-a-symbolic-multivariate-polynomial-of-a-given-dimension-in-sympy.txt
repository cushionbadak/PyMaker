Natural Text
I want to use power series to approximate some PDEs. The first step I need to generate symbolic multivariate polynomials, given a numpy ndarray. Consider the polynomial below:I want to take a  dimensional  of  where s are non-negative integers, and generate a symbolic multivariate polynomial in the form of symbolic expression. The symbolic expression consists of monomials of the form:Fo example if  the output should be For this specific case I could nest two  and add the expressions. But I don't know what to do for s with arbitrary length. If I could generate the  dimensional ndarrays of  and  without using for loops, then I could use   as Frobenius inner product to get what I need. 
I would use  and  for this:The result beingRemarks:  depends on , but this does not seem to be an issue for you. If it was, I would create symbols one by one using The format  is more efficient than  for forming symbolic sums with a large number of terms, see SymPy issue 13945. 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
