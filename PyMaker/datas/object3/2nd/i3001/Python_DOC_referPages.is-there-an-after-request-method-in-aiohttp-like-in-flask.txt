Natural Text
Flask provides this nice  decorator which allows to execute a method after an http request has been handled. See documentation here.How would you achieve a similar pattern with aiohttp?Typically to send logs after the request has been handled.
The  web server supports signals, which are hooks to be called at specific points.The  signal is the moral equivalent of Flask's  handler. Use it to modify the response as it is being prepared to be returned to the client:The signal receives both the  and  objects. If you want to implement the Flask pattern for registering a callback per request, and are using Python 3.7, you can use a  context variable:then use it like this in a request:If you need to support Python versions < 3.7, you'd have to store the list of callbacks on the ,  or  objects instead; see the data sharing section of the  FAQ.  Personally, I think that contextvars are the better pattern here, as this provides better encapsulation for utilities like , which now can be distributed separately without fear of clashing with other data set in the  object mappings. 


Answer URL
https://docs.python.org/3/library/contextvars.html
