Natural Text
I want to convert  into  in python3.In the webpage,the  means NO-BREAK SPACE whose unicode point is U+00A0       .     Notice:  is unprintable , character column is blank here.    relationship on unicode point,character,utf-8  How to  convert  into  with replace method?   
You were already almost there:
Since  is a bytes object, you cannot use string methods on it. So when you call  on it, you are not calling  but . While those two look and behave very similarly, they still operate on different types: replaces a substring inside of a string with another string. And  replaces a sub-bytestring inside of a bytestring with another bytestring. So the types of all arguments always match:So in order to replace something inside of a bytes string, you need to pass bytes objects:How to make  displayed as ?You generall cannot do that.  and  are both equal to another:Both contain the same single byte value, a . It’s just that there are multiple ways to represent that content as a bytes literal in Python. Just like you can write , ,  or  to refer to the same  object with the decimal value of 10, you can describe a bytes object in multiple ways.Now, when you use the interactive Python REPL, when you just write , then Python will interpret that bytes literal, create a bytes object with the single byte 0x38, and then the REPL will print out the  of that bytes object. And the repr() of bytes objects just happen to attempt to use ASCII letters whenever possible.There is no way to change this, but there’s also no need to change that. The  that you see is just one representation of the same bytes object. And if you use that object and do something with it (e.g. write it to a file, transform it, or send over the network), then it’s the actual bytes that are sent, and not some string representation of the bytes object.If you however want to actually print the bytes object, you can deliberately convert it into a string using your favorite representation. For example, if you want a hex representation of your bytes string, you could use one of the many ways to do that:
Is that data being read from a file? Maybe you opened the file in binary mode:This means that the data read from the file is returned as  object, not .If that is so, try to open the file as a textfile instead by replacing the  mode with .


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes-objects
https://docs.python.org/3/library/stdtypes.html#bytes.replace
