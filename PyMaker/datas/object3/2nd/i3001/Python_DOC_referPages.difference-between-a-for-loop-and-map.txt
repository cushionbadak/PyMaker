Natural Text
From the title, yes there is a difference. Now applied to my scenario: let's consider a class :If I use this:I indeed get . But if I map the function  to the ,  remains empty.What is it doing?
A very interesting question which has an interesting answer.The  function returns a Map object which is iterable.  is performing its calculation lazily so the function wouldn't get called unless you iterate that object.So if you do:The expected result will show up.
 only creates an iterator. You should iterate through it to add items into . Like this:Yep, don't do it in your code:) But the example is just useful for understanding.
Quoting the documentationReturn an iterator that applies function to every item of iterable, yielding the results.which means you have to collect the iterator, e.g.Hmmm, strange. Why None, None, ...Yes, you can convert any loop in a map statement, but it's not always useful.Map takes a parameter and does something with it (in most cases) an returns it, without side effects! Here's an example:The true power comes, when you combine it with other functions like 


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functions.html#filter
