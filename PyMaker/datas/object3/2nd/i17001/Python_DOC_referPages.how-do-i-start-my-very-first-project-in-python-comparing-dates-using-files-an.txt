Natural Text
IÂ´m very new at Python and I had an idea for my very first project, but seems kind of complicated given my short experience. May be you guys can help me figure out how to design it, to make it simpler or more efficient. I get these emails once a week, on an XLS file, with the entire week's operations of a business. Here's a small fictitious example on how the XLS looks like.What I intend to do is, read this XLS file every time I get it from an specific folder and build a daily operation database on a separate text file (I've chosen to output to a text file just because I think it's easier for me to write in than writing another XLS file with the XLWT module).Output Text file should look like this (so you can have an idea), Here are my questions:I want the program to check the last date on the last line from the text file, and compare dates with the first line is going to append from the XLS. Is this feasible, and how?   Should I output to a tuple, a list or a simple string to make it easier for me to extract the date and to compare it to the XLSs first line to append. My example here is kind of a CSV file.How should I think the order as for the code: open txt, get date data, compare dates with XLS with xlrd, get data from XLS with xlrd and append data to text file.Thank you for getting all the way through this post, I'd appreciate any kind of help since I'm starting with Python 3.3.5. 
Break the problem into subgoals, and solve those first. For example:Read and print some kind of data from the XLS file (or converted CSV file) within python.Read in the column and row headings and data into some kind of data structure (maybe list of lists, or perhaps an object per column.Figure out how to read in and compare two dates.... etc. If you get stuck on something more specific and cannot find any related search results, then that might be a good time to turn back to stack overflow again.
I agree with kazagistarSome hints to how I would do it....The comparison problem is maybe best solved by reading everything into a dictionary. Lets say you set a key with a unique ID, like a timestamp. Then set the value for each key to be the entire row as a list, that you access by index position (basically column nr). Then update it against a sqllite database for storage and look-up.Start with this link for xlrd:


Answer URL
https://docs.python.org/3/tutorial/index.html
