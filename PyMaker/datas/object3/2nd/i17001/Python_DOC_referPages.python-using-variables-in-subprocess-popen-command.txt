Natural Text
I'm new to coding and need some assistance. I am writing a python script that will go through the contents of a directory and as its walks through the directory it will send each file to a Bluetooth device.It works fine if I specify the filename but I canâ€™t get it to work by using the file name as a variable. Here is the code belowI am trying to replace 'image1.jpg' in the command with the variable 'file' like below but have not been successful.Will really appreciate any help.
There are several issues: is unnecessary. Drop it and use a list argument:you are trying to pass command-line arguments as separate arguments for . Use  instead of . The later is wrong completely. See  function signature in the docsdo not use  and/or  unless you read from / pipes otherwise your child process may block forever if it fills any of the OS pipe bufferssave a reference to  to wait for its status later. It is optional but it helps to avoid creating too many zombiesYou could extract the file generating part into a separate function:Then to execute commands for each file in parallel:If you don't want to run the commands in parallel then just use  instead of :It runs one command at a time.
Try this:You want to pass to  a list of strings. An alternative would be to build a space-separate command such as:Is shell=True Unsafe?I would like to make a couple of points regarding the use of .In this case, as m.wasowski points out in the comment, it is not necessary.  is unsafe if you don't have any control on the command. For example, if you take the command from user's input, then the user can pass you something like . It is unsafe because once invoke the shell, the  might be different. When you issue a command such as , it might not come from the usual place () but some malicious places such as That being said,  is safe if you have control over the command, in this case, --you define what the command is, instead of receiving it from elsewhere. Thank you m.wasowski for bringing up this point.UpdateRemove . See comments.
So, there are a bunch of files and you want to run a command once with each file as an argument. I think the following should work well.Here's the changes I made:I'm using the  function instead of  as you wanted to run the commands sequentially and not in parallel. The  function takes the same arguments as , but waits for the process to finish and raises an exception if the process fails.I am passing an array (written in square brackets) as the first argument, the command to . This also means there is no need for a shell to interpret a command string and so I removed the . The first item in this array is the command the rest are commands passed to it.The last item in the array is the full path to the file. The  variable only holds the file's name. But we need its path as it might lie somewhere deep inside a folder (as you are ing recursively). The  joins two strings with a  or  as appropriate in the platform.I also removed the  and  arguments. This means the output and errors from the command are going to turn up in the command line, which is probably what you want. The  and  arguments make sense when you want to read the output of the command and process it yourself instead of showing it in the terminal.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen
