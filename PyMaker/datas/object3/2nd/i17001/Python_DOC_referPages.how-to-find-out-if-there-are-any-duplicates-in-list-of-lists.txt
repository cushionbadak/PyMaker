Natural Text
So I'm taking an intro computer science course right now, and I was wondering how to check if there were any duplicates within multiple lists. I've read up on these answers:How can I compare two lists in python and return matches and How to find common elements in list of lists?However, they're not quite what I'm looking for. Say for example I have this list of lists:There are two sets of duplicates (66 and 41), although that doesn't really matter to me. Is there a way to find if the duplicates exist? What I'm looking for is if there are duplicates, the function will return True (or False, depending on what I want to do with the lists). I get the impression that I should use sets (which we have not learned about so I looked up on the internet), use for loops, or write my own function. If it's the case that I'll need to write my own function, please let me know, and I'll edit with an attempt later today!
A very simple solution would be to use a list comprehension to first flatten the list and then afterwards use  and  together to test for any duplicates:Be warned however that this approach will be somewhat slow if  is large.  If performance is a concern, then you can use a lazy approach which utilizes a generator expression, , and :
Iterate and use a set to detect if there are duplicates:This makes use of the fact that  returns . A  is a unordered collection of unique values; the  test is  if  is already part of the set.Demo:
Here is more straightforward solution with sets:for information about  and its operations,see docs: https://docs.python.org/2/library/stdtypes.html#set


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#func-set
https://docs.python.org/3/library/functions.html#len
https://docs.python.org/3/library/functions.html#any
