Natural Text
I am trying to determine the best way to execute something in command line using python.  I have accomplished this with subprocess.Popen() on individual files.  However, I am trying to determine the best way to do this many time with numerous different files.  I am not sure if I should create a batch file and then execute that in command, or if I am simply missing something in my code.  Novice coder here so I apologize in advance.  The script below returns a returncode of 1 when I use a loop, but a 0 when not in a loop.  What is the best approach for the task at hand? EDIT: An example command string looks like this:C:\Path\to\executable.exe -i C:\path\to\input.ext -o C:\path\to\output.ext
Try using the commands module (only available before python 3)Your code might look like thisYou are not entirely clear about the problem you are trying to solve. If I had to guess why your command is failing in the loop, its probably the way you handle the console=False case.
If you are merely running commands one after another, then it is probably easiest to cast aside Python and stick your commands into a bash script. I assume you merely want to check errors and abort if one of the commands fails.Update: OP updated his question with sample data that indicate he is on Windows.You can get  for Windows through cygwin or various other packages, but it may make more sense to use PowerShell if you are on Windows. Unfortunately, I do not have a Windows box, but there should be a similar mechanism for error checking.  Here is a reference for PowerShell error handling.
You might consider using subprocess.callIt also will output 0 for success and 1 for failure.
What your code is trying to accomplish is to run a command on a file, and exit the script if there's an error.  accomplishes this - if the subprocess exits with an error code it raises a Python error. Depending on whether you want to explicitly handle errors, your code would look something like this:Which will execute the command and print the shell error message if there is one, or Which will print the shell error code and exit, as in your script.


Answer URL
https://docs.python.org/3/library/subprocess.html
