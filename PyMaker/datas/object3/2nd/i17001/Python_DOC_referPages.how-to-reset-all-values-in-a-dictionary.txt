Natural Text
this is the dictionary defined as 'completeddict'.What I want to do, is to change ALL values no matter what they are called to 0. However bear in mind that new account names will be added at any point as 'keys' so I cannot manually do "completeddict[green] = 0", "completeddict[lewis] = 0", etc etc.Is there any way to have python change ALL values within a dictionary back to 0?EDIT: Unfortunately I do not want to create a new dictionary - I want to keep it called 'completeddict' as the program needs to use the dictionary defined as 'completeddict' at many points in the program.
Another option is to use :fromkeys(seq[, value])Create a new dictionary with keys from seq and values set to value.Demo:
Sure, its pretty easy:This is dictionary comprehension and is equivalent to:These dict comprehensions were introduced in v2.7, so older vesions will need to use the expanded form. 
A form that will work in virtually any Python version is just use the  constructor with a list comprehension or generator:Which you can then use with a mutable argument or some form of callable:Now each element of  is a new list (or whatever else mutable or not you would want to set the value portion of the tuple to be).
If you don't want to create a new dict, it seems like all you need is a simple two-line loop, unless I'm missing something:
Adding to alecxe asnwer, your dictionary is,now this dictionary can be updated with default values, Done. your completeddict is updated with default value for all keys.Ex:Output:It can be observed that id of the dictionary same even after it is updated with default values.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.fromkeys
