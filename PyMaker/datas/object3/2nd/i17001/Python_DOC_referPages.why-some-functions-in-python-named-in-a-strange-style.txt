Natural Text
This seems to occur a lot, and was wondering if this was a requirement in the Python language, or merely a matter of convention?Also, could someone name and explain which functions tend to have the underscores, and why (, for instance)?
From the Python PEP 8 -- Style Guide for Python Code:Descriptive: Naming StylesThe following special forms using leading or trailing underscores are  recognized (these can generally be combined with any case convention):: weak "internal use" indicator. E.g.  does not import objects whose name starts with an underscore.: used by convention to avoid conflicts with Python keyword, e.g.: when naming a class attribute, invokes name mangling (inside class FooBar,  becomes ; see below).  : "magic" objects or attributes that live in user-controlled namespaces.  E.g. ,   or .  Never invent such names; only use them as documented.Note that names with double leading and trailing underscores are essentially reserved for Python itself: "Never invent such names; only use them as documented".
The other respondents are correct in describing the double leading and trailing underscores as a naming convention for "special" or "magic" methods.While you can call these methods directly ( for example), the presence of the underscores is a hint that these methods are intended to be invoked indirectly ( for example).  Most python operators have an associated "magic" method (for example,  is the usual way of invoking ).
Names surrounded by double underscores are "special" to Python. They're listed in the Python Language Reference, section 3, "Data model".
Actually I use _ method names when I need to differ between parent and child class names. I've read some codes that used this way of creating parent-child classes. As an example I can provide this code: ...and the child that have a _worker method ...
This convention is used for special variables or methods (so-called “magic method”) such as__init__ , len. These methods provides special syntactic features or does special things. For example, file indicates the location of Python file, eq is executed when a == b expression is excuted. A user of course can make custom special method, it is very rare case, but often might modify the some built-in special methods. (e.g. You should initialize the class with init that will be executed at first when a instance of class is created.)
Rear Double Underscore (Name Mangling)/ From the Python DocsAny identifier of the form __spam (at least two leading underscores,  at most one trailing underscore) is textually replaced with  _classname__spam, where classname is the current class name with leading underscore(s) stripped. This mangling is done without regard  to the syntactic position of the identifier, so it can be used to  define class-private instance and class variables, methods, variables  stored in globals, and even variables stored in instances. private to  this class on instances of other classes.Name mangling is intended to give classes an easy way to define  “private” instance variables and methods, without having to worry  about instance variables defined by derived classes, or mucking with  instance variables by code outside the class. Note that the mangling  rules are designed mostly to avoid accidents; it still is possible for  a determined soul to access or modify a variable that is considered  private.


Answer URL
https://docs.python.org/3/reference/datamodel.html#special-method-names
