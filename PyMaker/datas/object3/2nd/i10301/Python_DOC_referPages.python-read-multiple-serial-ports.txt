Natural Text
I am trying to read from multiple serial ports in python. But contrary to this thread I want to be able to change the number of ports dynamically (reading it via command line option).My idea was to put the ports into a file "ports", read this file and put the opened serial ports into a list, according to the number of lines in "ports". My minimal example:"ports" looks the following (at the moment):The error: Apparently the file is not correctly read to an array, and I already tried various different methods and ways (using pythons own methods or np.loadtxt).Does anybody have an idea how to a) read the file correctly and b) solve the multiple port issue in a useful way? Thanks in advance.
Your config file format is very simple and can easily be parsed without numpy. You can use simple string splitting to load each port definition.Or you could use the  module:The second part of your question is more difficult because you haven't provided many details about how the serial port readers will process the data received over the ports.If the application is I/O bound, which is most likely the case, you can asynchronously check when a serial port has some data to read, then read it as required. That can be done with the  module, or if you're using Python >= 3.4, the  module. You do not require multiple processes to do this.If the application is CPU bound then you could use  or . Instead of opening the serial ports in the parent, pass the serial port parameters to the child as arguments/command line arguments to the child function/process and let the child open the port, processes the data, and close the port.N.B. Untested - don't know if this will work with a serial port. If you must open the ports in the parent, hook the stdin of the subprocess up to the serial port. You'll need to be careful with this as it's easy to deadlock processes where the parent and child are are mutually blocked on each other.If using  you can pass the open serial port to the child as an argument. This might work... ?
I didn't quite clearly understood what you are trying to do, but if I had a file like:and want to read it and store as a list, a way to go would be:which will give you:and if you want to split the integers, you could do:Now because you said that 'np.loadtxt' didn't work, a way to convert a python list to a numpy-array is:But again I am not sure If that is what you are looking for. 


Answer URL
https://docs.python.org/3/library/csv.html#module-csv
https://docs.python.org/3/library/select.html#module-select
https://docs.python.org/3/library/selectors.html#module-selectors
