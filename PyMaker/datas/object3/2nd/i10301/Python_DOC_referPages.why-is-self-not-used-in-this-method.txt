Natural Text
I was under the impression that methods within Python classes always require the  argument (I know that it doesn't actually have to be , just some keyword). But, this class that I wrote doesn't require it:See? No . When I include a  argument to , I get a  error. In my search to figure out why this is happening, I actually copied and tried to run a similar program from the docs:and I get the same error! In the same module that contains the  class, I have multiple classes that all make use of . I don't understand the theory here, which makes it difficult to know when to do what, especially since a program copied directly from the docs (this is the docs page) failed when I ran it. I'm using Python 3.5 and 3.4 on Debian Linux. The only thing that I can think of is that it's a static method (and the  as written above works fine if you include  above the  method), but I can't find a good explanation to be sure.
You are trying to use it as a static method. In your example;Calling  assumes  is static for . You can make it static as:
The thing with  is that it's added implicitly. That is, the calling code says , but the callee sees . It also implies that the method is called from some instance of , which is placed in  variable. The point is that methods are probably somehow using and/or modifying instance data (otherwise why would they be in that class?) and it's handy to have the instance in question automatically supplied.If you don't need the instance data, you should use either  if it's actually more like a function than object method or  if the method is meant to be inherited and possibly used differently by different classes. See @pankaj-daga answer for a little intro to staticmethods.The  syntax is also used by functions imported via  instead of , which is also a possible source of confusion. That, for your purposes, is an entirely different thing.


Answer URL
https://docs.python.org/3/tutorial/classes.html
