Natural Text
I have a function that will either return a generator () or , depending upon the value of an argument. For example:How do I tell it that I can optionally return a list or another type? Or, for that matter, what about a bunch of different types?I've looked over documentation on a module  but haven't as of yet found any methods there that allow for this. I haven't been able to find any examples by Googling either.
The two solutions that immediately spring to mind are: Make a  typewhich means "returns either list or generator" (you could also use  and ); orType based on the behaviour you can expect from either return value, e.g. that they are :In both cases you could also provide more detail: list or generator/iterable of what?That said, something that returns either a list or a generator sounds like an odd interface, and it would be helpful to provide a bit more context around what consumers of your function should expect to do with whatever they receive. It may be that:a single function with two different returns isn't the right interface design; or rather than  you could use the more general , to permit e.g. s to be used instead.
Wouldn't it be better to pass "type" as an argument? Dont know if this is the case.


Answer URL
https://docs.python.org/3/library/typing.html
https://docs.python.org/3/library/typing.html#typing.Union
https://docs.python.org/3/library/typing.html#typing.Generator
https://docs.python.org/3/library/typing.html#typing.List
https://docs.python.org/3/library/typing.html#typing.Iterable
https://docs.python.org/3/library/typing.html#typing.Sequence
