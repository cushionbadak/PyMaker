Natural Text
I'm looking to create random numbers since due to circumstances I cannot use the  library. Basically I'd like to be able to replicate the  and  methods using pure python.I don't expect anyone to dump an entire code in python (though that would be great), but can someone refer me to a similar C/C++/Java algorithm that can be easily replicated into python?EDIT: I'm looking for references on how to create random numbers using python code, not reasons why I shouldn't do it myself and find a way to use  or  at any cost
Since you are forced to use on online IDE, I will assume that this is course work and you do not need the latest and greatest and most reliable random number generator.  Instead, you simply need something just adequate for completing ephemeral class assignments.If that is the case, a common algorithm for generating random numbers is the linear congruential generator.  With typical parameters:This algorithm returns supposedly random integers from 0 to (2**32)-1.Here are some sample results:You can read more about this algorithm here.This algorithm will always start from the same point after the function is defined unless you change the seed.Again, this is not for serious work for which the quality of the results is important.Simulating  and To return a "random" number between zero and one, , and using the above function :Likewise for :If the  value in  is changed, then  should be changed here as well.
If you can't use , but you can use , you could always use  to get random bytes, then convert them as needed.For example, using , it's trivial to implement 's behavior (and in fact,  implements it precisely this way):If you click the source link about, you'll note that  really only implements a couple methods as "core" features, and the rest of its implementation is borrowed from the regular  class; you can always borrow the  of  then use it to implement , , etc., the same way Python does it.


Answer URL
https://docs.python.org/3/library/os.html#os.urandom
