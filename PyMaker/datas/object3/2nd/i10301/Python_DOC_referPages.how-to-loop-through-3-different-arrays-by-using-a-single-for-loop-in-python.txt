Natural Text
I have 3 different arrays:I need to loop through all this arrays. Presently I am using the below method:How I can do this using a single for loop and iterate through all the arrays. Functionality inside the loop is same for all. I need an efficient way to do this. I checked many other already answered questions, but couldn't find a fitting answer.
There are two ways. The more traditional way is to use an index and a for loop. In this case, it's assumed that all lists are the same length and gets that length from the first item:Python, however, has a convenience function called  that takes multiple lists and iterates them all the same time, returning a tuple.This can be made more readable by unrolling the tuple:Zipping doesn't need lists to be the same length and will add  for any missing values.
If as you mention, the functionality inside the loop is the same for all three arrays, then why not factoring it into a single function and call such function on your three arrays?For example:
Why not just this?or
I put the lists in a list and took the index of the new list.
Problem 1: updating a tupleYou cannot modify a tuple. Tuples are immutable!You can either replace the whole tuple, or not use tuples at all:Option 1:Option 2:Problem two: updating a list in a loopJust one list for now. This does not do anything:Try it:Why? Because  assigns values from  to variable , then  assigns some other vaue to . The only thing ever changed is .If you want to change , you have to access , for example .This is not very elegant code, but the way the question is written, that is the thing to do for one list.Problem 3: multiple listsThis is easy.You just have to decide how to calculate . That depends on what you want to do.
You could also use lambda function (or just normal function) with map function. Map runs the function given to it as first argument for each value of iterable given as second argument and returns iterator.Python map documentation 


Answer URL
https://docs.python.org/3/library/functions.html#map
