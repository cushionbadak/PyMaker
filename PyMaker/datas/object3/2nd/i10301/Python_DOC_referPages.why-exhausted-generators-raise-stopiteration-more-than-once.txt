Natural Text
Why is it that when an exhausted generator is called several times,  is raised every time, rather than just on the first attempt? Aren't subsequent calls meaningless, and indicate a likely bug in the caller's code?This also results in this behavior when someone accidentally uses an expired generator:If second and later attempts to call an exhausted generator raised a different exception, it would have been easier to catch this type of bugs.Perhaps there's an important use case for calling exhausted generators multiple times and getting ?
Perhaps there's an important use case for calling exhausted generators multiple times and getting ?There is, specifically, when you want to perform multiple loops on the same iterator. Here's an example from the  docs that relies on this behavior:
It is a part of the iteration protocol:Once an iteratorâ€™s  method raises StopIteration, it must  continue to do so on subsequent calls. Implementations that do not  obey this property are deemed broken.Source: https://docs.python.org/3/library/stdtypes.html#iterator-types


Answer URL
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/library/stdtypes.html#iterator-types
