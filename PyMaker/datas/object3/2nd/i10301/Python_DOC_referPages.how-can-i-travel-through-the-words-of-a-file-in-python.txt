Natural Text
I have a file .txt and I want to travel through the words of it. I have a problem, I need to remove the punctuation marks before travelling through the words. I have tried this, but it isn't removing the punctuation marks.
The problem with your current method is that  doesn't really do what you want.  It removes leading and trailing characters (and you want to remove ones within the text), and if you want to specify characters in addition to whitespace, they need to be in a list.Another problem is that there are many more potential punctuation characters (question marks, exclamations, unicode ellipses, em dashes) that wouldn't get filtered out by your list.  Instead, you can use  to get a wide range of characters (note that  doesn't include some non-English characters, so its viability may depend on the source of your input):An even faster method (shown in other answers on SO) uses  to replace the characters:
only removes characters found at the beginning or end of a string.So  first to cut into words, then  to remove punctuation.Or use a natural language aware library like : http://www.nltk.org/
You can try using the  module:See the re documentation for more details.Edit: In case of non ASCII characters, the previous code ignore them. In that case the following code can help:
The following code preserves apostrophes and blanks, and could easily be modified to preserve double quotations marks, if desired. It works by using a translation table based on a subclass of the string object. I think  the code is fairly easy to understand. It might be made more efficient if necessary.Here's typical output.
I would remove the punctuation marks with the  function after storing the words in a list like so:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.strip
