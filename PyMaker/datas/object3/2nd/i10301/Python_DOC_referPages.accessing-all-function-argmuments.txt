Natural Text
I have a function with 4 arguments and want to check those 4 arguments for something.Currently I do it like this:I think this is not really a nice way to do it, so my idea is to do something like this:Is there a way in Python to get a list of all the arguments passed to ?Thanks for your help and ideas.
Since you have a set number of arguments just create an iterable out of them, for example, wrap the argument names in a tuple literal:If you don't mind your function being capable of being called with more args just use  syntax:which then exposes the arguments with which the function was invoked as a tuple which can be iterated over.If you need to store the results for every invocation, it is better to change the  in a list comprehension creating a list of the returned values. For example, given a function that takes a value and simply adds  to it:We create a list comprehension that takes every  and supplies it to  and then stores it as an entry in a list, then we unpack to . The values now contain the results of the function calls:In the previous examples  can always be replaced with  if you use the  syntax when defining the function, the results will be similar.As an addendum, if you're more a fan of functional programming, you could always  the arguments to the function and save a few characters :-). I'll add a  definition of  this time:Same result.
Yes, use :More information can be found here.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#function-definitions
https://docs.python.org/3/library/functions.html#map
