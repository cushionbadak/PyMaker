Natural Text
I have a use case where I'd like the user to be able to provide, as an argument to argparse, EITHER a single string OR a filename where each line has a string.Assume the user launches The logical flow I'm looking for is something like this:The script determines whether the string foobar is a readable file.IF it is indeed a readable file, we call some function from the script, passing each line in  as an argument to that function.  If foobar is not a readable file, we call the same function but just use the string  as the argument and return. I have no ability to guarantee that a filename argument will have a specific extension (or even an extension at all). Is there a more pythonic way to do this OTHER than just coding up the logic exactly as I've described above?   I looked through the argparse tutorial and didn't see anything, but it also seems reasonable to think that there would be some specific hooks for filenames as arguments, so I figured I'd ask.  
A way would be:Let's say that you have created a parser like this:Where  points to the  which will be an outer function that evaluates the input of the user and decides if it is a  or a More information about  you can find in the documentation.Here is a minimal example that demonstrates this use of :The above example shows that with  we can control the input at parsing time. Of course in your case the function would implement another logic - evaluate if the input is a string or a filename.
This doesn't look like an  problem, since all you want from it is a string.  That string can be a filename or a function argument.  To a  these will look the same.  Also  isn't normally used to run functions.  It is used to parse the commandline.  Your code determines what to do with that information.So here's a script (untested) that I think does your task: just provides the  string.  It's the try/except block that determines how it is used.================Here's a prefix char approach:this is supposed to work with a file like:https://docs.python.org/3/library/argparse.html#fromfile-prefix-chars


Answer URL
https://docs.python.org/3/library/argparse.html#type
https://docs.python.org/3/library/argparse.html#fromfile-prefix-chars
