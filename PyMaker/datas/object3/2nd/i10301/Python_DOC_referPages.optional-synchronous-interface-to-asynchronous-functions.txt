Natural Text
I'm writing a library which is using Tornado Web's  to make requests which gives my code a  interface of:I want to make this interface optionally serial if the user provides a kwarg - something like: . Though you can't obviously call a function defined with the  keyword from a normal function without . This would be ideal - though almost certain imposible in the language at the moment:I'm not been able to find anything online where someones come up with a nice solution to this. I don't want to have to reimplement basically the same code without the  splattered throughout.Is this something that can be solved or would it need support from the language?Solution (though use Jesse's instead - explained below)Jesse's solution below is pretty much what I'm going to go with. I did end up getting the interface I originally wanted by using a decorator. Something like this:This gives you this interface:I sanity checked this on python's async mailing list and I was lucky enough to have Guido respond and he politely shot it down for this reason:Code smell -- being able to call the same function both asynchronously   and synchronously is highly surprising. Also it violates the rule of   thumb that the value of an argument shouldn't affect the return type.Nice to know it's possible though if not considered a great interface. Guido essentially suggested Jesse's answer and introducing the wrapping function as a helper util in the library instead of hiding it in a decorator.
When you want to call such a function synchronously, use run_until_complete:Of course, if you do this often in your code, you should come up with an abbreviation for this statement, perhaps just:Then you could do:


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.run_until_complete
