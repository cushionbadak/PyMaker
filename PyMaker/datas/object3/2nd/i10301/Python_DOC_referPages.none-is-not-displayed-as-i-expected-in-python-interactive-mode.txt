Natural Text
I thought the display in Python interactive mode was always equivalent to , but this is not so for . Is this a language feature or am I missing something? Thank you
Yes, this behaviour is intentional.From the Python docs7.1. Expression statementsExpression statements are used (mostly interactively) to compute and  write a value, or (usually) to call a procedure (a function that  returns no meaningful result; in Python, procedures return the value  ). Other uses of expression statements are allowed and  occasionally useful. The syntax for an expression statement is:An expression statement evaluates the expression list (which may be a  single expression).In interactive mode, if the value is not , it is converted to a  string using the built-in  function and the resulting string  is written to standard output on a line by itself (except if the  result is , so that procedure calls do not cause any output.)
It's a deliberate feature. If the python code you run evaluates to exactly  then it is not displayed.This is useful a lot of the time. For example, calling a function with a side effect may be useful, and such functions actually return  but you don't usually want to see the result.For example, calling  returns , but you don't usually want to see it:
In Python, a function that does not return anything but is called only for its side effects actually returns None. As such functions are common enough, Python interactive interpreter does not print anything in that case. By extension, it does not print anything when the interactive expression evaluates to None, even if it is not a function call.If can be misleading for beginners because you have but but is is indeed by design
 represents the absence of a value, but that absence can be observed. Because it represents something in Python, its  cannot possibly return nothing;  is not nothing.The outcome is deliberate. If for example a function returns  (similar to having no return statement), the return value of a call to such function does not get shown in the console, so for example  does not print  twice, as the function  equally returns .On a side note,  will raise a  in Python.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#expression-statements
https://docs.python.org/3/library/constants.html#None
https://docs.python.org/3/reference/simple_stmts.html#expression-statements
