Natural Text
In Python, the  and  operators exists to implement specific bahavior for  and . See Emulating numeric typesBut I don’t understand why  (or ) doesn’t exist, whereas  function exists in the built-ins. See Built-in Functions.Am I missing something? Any reason?Changes in Python 3I have found this reference Operators And Special Methods in "What’s New In Python 3.0":The oct() and hex() special methods are removed – oct() and hex() use index() now to convert the argument to an integer.
You can use  to handle  calls in Python 2. From Python 3 onwards it works for  and  as well but not in Python 2.From Python 3 docs:Called to implement , and whenever Python needs to  losslessly convert the numeric object to an integer object (such as in  slicing, or in the built-in ,  and  functions).  Presence of this method indicates that the numeric object is an  integer type. Must return an integer.It is not documented(clearly) in Python 2 but works there as well:The CPython code for  internally calls  which in turn calls  and this function invokes the  slot on that object.


Answer URL
https://docs.python.org/3/reference/datamodel.html?#object.__index__
https://docs.python.org/3/reference/datamodel.html?#object.__index__
