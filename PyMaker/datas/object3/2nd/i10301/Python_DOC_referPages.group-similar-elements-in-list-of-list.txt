Natural Text
I have a list , and I am trying to group similar elements together. I need the output to be . This is grouping similar elements in the list of lists. Is there a preferred method to do this?
You can loop over each of the items in the input list and construct groups (as needed):This uses sets,  and a list comprehension at the end.Example:
I'd recommend you to use a list of sets, let's call it results_list, starting from an empty list, and then fill it while traversing your input list of lists: For every item in the sub-list of your input list, you will have to check if they belong to any of the sets in results_list. If none of them belong, you just add a new set with the elements of that sub-list. If they do, you have to modify results_list merging all the sets where at least one of the items is present, including in that set all the items of the sub-list.Examples:
Here's another one. A bit shorter than other solutions.The idea behind this code is simple: elements from one clique will always share  set object. A set will contain all elements that are already known to be in a corresponding clique. So in the end we just need to get unique set objects from  dictionary. We employ builtin  function which returns object memory address (in CPython) for that: different elements from the same clique in  dictionary contain the same set object, so we can squash  dict into a smaller one which values will be unique.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
https://docs.python.org/3/library/functions.html#any
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
