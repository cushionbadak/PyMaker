Natural Text
I want to implement in python a simple model for optical propagation. The rule is that if I chain three elements m0 -> m1-> m2 what I would get as system is:tau = tau0 * tau1 * tau2B = B2 + B1*tau2 + B0*tau2*tau1(tau is transmission, B is background).I wanted to implement overloading the  operator such that I can declare:So far I wrote this:However this code seems only to get the transmission and background of the rightmost elements:Returns 0.56, while I am expecting 0.504.Background behaves the same, I am getting 19.7 instead of 25.3 (first element ignored).Do you guys have any idea on how to implement several chained elements using the operator overloading? (putting parenthesis works, but I wanted to have cleaner code).Thanks!Andreu
 is equivalent to .As  will be considered ,  will test  and return its value, which is the 0.56 you get.You could use the multiplication operator, which will work as expected:
The way chained comparisons work is that  is evaluated as , which results in , as returns  if  is truish.So this is the reason why your code seems only to get the rightmost comparison.Instead, you can do.which evaluates both  operators in the given order.This results in 


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__rshift__
