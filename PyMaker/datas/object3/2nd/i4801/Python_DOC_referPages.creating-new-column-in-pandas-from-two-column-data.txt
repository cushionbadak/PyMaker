Natural Text
I have a following :It looks like this:Now I want to have something like:How can I achieve this?I tried the following:but it gives me a wrong result:Sorry for a dumb question, but this one pandas: combine two columns in a DataFrame wasn't helpful for me.
.
The problem in your code is that you want to apply the operation on every row. The way you've written it though takes the whole 'bar' and 'foo' columns, converts them to strings and gives you back one big string. You can write it like:It's longer than the other answer but is more generic (can be used with values that are not strings).
You could also use
Here are more solutions, in increasing order of performance.This is a simple -based approach.You can also use f-string formatting here:-based ConcatenationConvert the columns to concatenate as , then add them together.List Comprehension with I cannot overstate how underrated list comprehensions are in pandas.  Alternatively, using  to concat (will also scale better):List comprehensions excel in string manipulation, because string operations are inherently hard to vectorize, and most pandas "vectorised" functions are basically wrappers around loops. I have written extensively about this topic in For loops with pandas - When should I care?. In general, if you don't have to worry about index alignment, use a list comprehension when dealing with string and regex operations. The list comp above by default does not handle NaNs. However, you could always write a function wrapping a try-except if you needed to handle it. Performance Measurements - Setup and TimingsWe can time these solutions using :The performance is relative; the plot is logarithmic along the Y-axis.Functions

@DanielVelkov answer is the proper one BUTusing string literals is 10 times faster


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#zip
