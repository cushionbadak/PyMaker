Natural Text
I am currently writing a color palette generator in Python. I would like to be able to input a Mode as an argument that will produce a specific type of color scheme. Like COMPLEMENTARY or PASTEL etc.I have seen functions like colorMode(HSB) vs. colorMode(RGB) where one of the arguments is a "Mode". I have seen this many times before, they usually are all caps and the IDE usually color codes them in some way. How are these Modes usually stored within the function? Are they color coded because they are some kind of class? Or are they stored as a string or number?Sorry if a question like this already exists, I just have no idea what type of jargon to use to describe this scenario.
The other answers are correct for general development, but since you've tagged this with processing, I'll explain how Processing does it.Processing (and Processing.py) does not use enum values for this. It just uses  values.In Java (regular Processing), there are just a bunch of  variables defined. That happens here, but it basically looks like this:So whenever you use one of the variables, you're just refering to these values.This does the same thing as if you had typed:Then inside the  function, Processing does something like this:I'm using Java as an example because I have more familiarity with it, but note that this is all explained in the Processing.py reference here:mode : Either RGB or HSB, corresponding to Red/Green/Blue and Hue/Saturation/BrightnessNotice that  is an .If you're writing your own code, enum values are probably the way to go. But if you're asking about how Processing does it internally, then they use  values.
You could use the enum library. For example to create a "Mode" like you want you could do:Afterwards you can access it using:
Use the  module:Output:


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html
