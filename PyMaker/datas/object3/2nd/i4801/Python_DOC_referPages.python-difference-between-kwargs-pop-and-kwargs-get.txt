Natural Text
I have seen both ways but I do not understand what the difference is and what I should use as "best practice":
get(key[, default]): return the value for key if key is in the dictionary, else default. If default is not given, it defaults to None, so that this method never raises a .pop(key[, default]) if key is in the dictionary, remove it and return its value, else return default. If default is not given and key is not in the dictionary, a  is raised.NB: Regarding best practice question, I would say it depends on your use case but I would go by default for  unless I have a real need to 
The difference is  also removes the item from the dict.There is no best practice. Use the one which is more convenient for your particular use case.Most times, all you need is ting the value.Other times, you want to make sure no extra/unexpected kwargs are provided. In this case, it is convenient to use . E.g.:
So the get and pop functions do very different thingsget is used to return a value for a given key in the dictionarypop removes the value from the dictionary and returns the removed valueAll of the dictionary functions are documented here (for python3): https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
Consider the next example, where the use of  or  makes a difference:Let's begin with :This code snippet raises  exception:When Bar executes  it is forwarding to Foo the same dict he has recived: . Then Foo raises  because input paramteres doesn't respect its interface.If you   before executing the call to , Foo only recives its required input parameter , and all goes fine.Output is:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.get
https://docs.python.org/3/library/stdtypes.html#dict.pop
https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
