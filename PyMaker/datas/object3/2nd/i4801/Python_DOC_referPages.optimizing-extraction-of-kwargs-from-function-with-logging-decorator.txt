Natural Text
What's the best way NOT to have to extracts the SAME KWARGS twice: once in the decorator (wrapper function) and once in the function itself.Here is the function:and here is the decorator (used for logging the close event):
Start by making your keyword arguments explicit for the  function.Note that I used  as default values for the mutable default values to avoid a common pitfall.Then in your decorator use , similar to this answer:This will raise a  if one of those fields is not defined (either in the signature or the passed keywords). Of course it will show  for those where that is the default in the signature.The full argspec will also contain positional arguments, so you might be able to figure those out as well.
-notation can be used within function argument lists to both pack and unpack arguments.-notation within a function definition collects all the values into a dictionary.-notation within a function call unpacks all the values as keyword argumnts.So when you pass kwargs (kwargs := {'arg1': 1, 'arg2': 2, 'arg3': 3}) to  you get this:...but if you unpack it first:All of this applies for  as wellYour specific case: in a function defintion gives you a regular old . You can turn that dictionary into a list -- however you wish to do that --, unpack that list and pass it on to another function. You'll have to account for ordering though, so it's difficult to make this work for all functions.I'm not sure why you insist on your decorator function taking keyword arguments while your decorated function doesn't. You can, of-course, do whatever you want, but I would argue against such an approach, because you're decorator function is changing how your actual function behaves.If you manage to sort those keyword arguments in to a valid argument list you'll be good.Hope this helps.EDIT: Oh, I forgot to point out that you're unpacking  in your decorator function () and then you're repacking them in your actual function (. I'll be honest, that's a silly thing to do.EDIT: You can use  or  to get a functions argument list. If you just have your decorator take in , you can match each value to a corresponding name from the argument list.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.getargspec
https://docs.python.org/3/library/inspect.html#inspect.signature
