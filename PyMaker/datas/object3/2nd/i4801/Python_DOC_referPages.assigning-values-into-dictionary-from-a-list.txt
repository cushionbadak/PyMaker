Natural Text
I want to create a dictionary that stores the full name of the 50 states in the word, and the abbreviations in the value, given a list of the names and abbreviations. I am expecting a dictionary like {'Alabama' : 'AK', 'Alaska': 'AL', ...}. I've tried And I'm getting {'Alabama': 'WY', 'Alaska': 'WY', 'Arizona': 'WY', 'Arkansas': 'WY', 'California': 'WY', 'Colorado': 'WY', 'Connecticut': 'WY', 'Delaware': 'WY', 'Florida': 'WY', 'Georgia': 'WY', 'Hawaii': 'WY', .....} 
You can try:Update:As suggested in comment, you don't need extra loop for word, you can simply try:Then, using  you can assign in single line for above loop:Also, since you are using two lists, you can try using , you can also look for example in documentation:
Try 
The naive way to do what you are trying to do is the following:You have instead a nested loop, but that's not what you want, the nested loop loops over the cartesian product of your two lists, i.e.:But really, in Python, instead of using indices, you'd use  to iterate over two lists "in parallel":But really, you should know that the  constructor takes an iterable of key-value pairs already, so what you really want is:
Here's a 1-liner version: (Python 3)Prints out:
You can try anyone of these method :output:


Answer URL
https://docs.python.org/3/library/functions.html#zip
