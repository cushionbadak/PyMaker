Natural Text
could someone explain to me why some of the integers passed to to_bytes() method gives a strange result?How to interpret '@' '!' ' '? For 16592 I expected b'\x40\xd0'.I read Python 3 documentation and all examples from there work fine. Python 3 to_byte() description.I also try an example for this Stackoverflow post and it works like a charm. Aditional info:Program runs on Fedora 27.
If the value of a byte, interpreted as ASCII, is printable, then the  of that byte is the printable character.Since the ASCII value of  is 0x40, these two values are equivalent , .This may be more easily seen through demonstration than an explanation:But regardless of representation, that object is a  of length 1, with a value of 64 in the first byte:Returning to your example, if you want to know the hex value of each byte, you can use : 


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=to_bytes#int.to_bytes
