Natural Text
I need to write some files that take inputs from two different and very large lists. The following python code works, but due to the size of the lists and other variables involved takes a long time to run:Data structures in the above code:ugFA is a listloci is a listugSeqs is a dictionarywantedContigs is a listf is a listMergeSeqs is a dictionaryI have attempted to parallelise the code using . The following code does the job, but (i) doesn't run any quicker, (ii) doesn't seem to use more than 100% CPU, and (iii) spits out the error message shown below when finished, even though it completes the tasks in the loop:Is there something I have done wrong in the construction of my code? I can I properly construct it to fully utilise the expediency of the  module?
The problem isis calling the function  (in the main thread, hence the 100% CPU) and then passing the results as an argument to .  The correct signature isFor this to work in your case, you would need to rewrite the  function to take only one argument.  From the looks of it, you'd need to significantly refactor your code to do this.  Writing to the same file simultaneously might be a concern.Your previous version could be appropriately modified:Please make sure to verify that things aren't getting garbled in the output due to the parallel writing identical files.  Ideally, it would be best to have each worker write to its own file(s), and merge afterward.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map
