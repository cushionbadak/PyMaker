Natural Text
Today I came across this expression:...and I'm wondering what is the order of assignment.For example  set  to  from my test, does it actually set  to 1, 2, than 3?What's the rule it follows? And what happens in more complex conditions like the first code snippet?
The relevant part of the documentation on assignment statements is: If the target list is a comma-separated list of targets, or a single target in square brackets: The object must be an iterable with the same number of items as there are targets in the target list, and the items are assigned, from left to right, to the corresponding targets.(Emphasis mine: that's how the order is determined.)
It will load the couple of tuples that load_data() returns into variables x, y and _ which you define. This in turn will assign the first member of each tuple to x and y and the last value to the  variable (which gets overridden the second time it's called).Example:Outputs1 3 4
This is a really interesting question, though I should say first that you probably shouldn't assign the same variable more than once per line.The first example expects  to return two tuples. It will assign  to the first one. The underscore is a convention for unpacking values you don't care about. It will be overwritten when the second tuple is unpacked.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
