Natural Text
I have a working file [below], but I would like to know if there is a better solution to the first three lines.I have several files in a folder, and a script that processes them based on a particular and conserved  in each file's name. However, I was told I should not use  (I am not a CS major, and don't fully understand why). Is there a better option? I could not find any other concise solution.Thanks.
Generally in Python, double-underscore methods should not be called directly; you should use the global functions or operators that correspond to them. In this case, you would do .
It would be more usual to writeinstead ofHowever, I would go one further than that and suggest your use case is more suited to 
As Daniel Roseman explains, the double-underscore methods aren't there to be called by you, they're there to be called by the Python interpreter or standard library.So, that's the main reason you shouldn't call them: It's not idiomatic, so it will confuse readers.But all you know is that there must be some operation that you are intended to use, which Python will implement by calling the  method. You have no idea what that operation is. How do you find it?Well, you could just go to Stack Overflow, and someone helpful like Daniel Roseman will tell you, of course. But you can also search for  in the Python documentation. What you'll find is this:Called to implement membership test operators. Should return  if    item is  self,  otherwise.So,  is there for Python to implement .And now you know what to write: .And if you read on in those linked docs, you'll see that it isn't actually quite true that  does the same thing as . That's true for the most common cases (including where  is a string, as it is here), but if  doesn't have a  method, but is an iterable, or an old-style sequence,  will use those instead.So, that's another reason not to directly call . If you later add some abstraction on top of strings, maybe a virtual iterable of grapheme clusters or something, it may not implement , but  will still work.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__contains__
