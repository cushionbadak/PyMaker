Natural Text
I've found plenty about calling variables from another module, but I can't find anything about editing a variable in a separate module.For my first actual project with python I'm writing a little text adventure.I've got GV.py for global variables, and Classes.py for weapons/armor etc.I want Classes.Longsword() to modify a variable in GV.py, specifically variable GV.weapon.In GV.pyin Classes.pyThis does not edit the variable weapon in GV.py.. Am I missing something?Since it was asked I'll put the output here.repl from GV.py
Your problem is that, when you run the script , what you get isn't a module named , but a special module named .If you've seen the familiar main guard idiom, that can be used to write a single file that works as a module or as a top-level script, this is exactly how it works:That will be true when you're running the file as a script, and it will not be true when you're importing the file as a module.Now, when you do  from inside , that imports the exact same  file, and builds a second module object out of it (and this one, of course, is named ).So when you then do , you're changing the  global in the  module, not the  module.If you're wondering how this works under the covers: the way Python makes sure there's only one  module object no matter how many times you  is dead simple: it just caches loaded modules in a dict, , and looks them up by name.If you fix that, you've got a second problem here: the first thing  does is to . The first thing  does is to . This is a circular import. The usual way to deal with both of these problems is pretty simple: put the shared globals in a simple module that does little or nothing beyond holding those shared globals, so everyone can  it:


Answer URL
https://docs.python.org/3/library/sys.html#sys.modules
