Natural Text
 detects following non-word charactersBelow are two lines, first line starting with (is a pure comment), second line is multi-line string with intermittent commentsSome of the above lines have  as the last non-word character.Goal is to construct the above syntax to a single string: How to detect backslash  on end of every line? Because...
To get the desired output:Read the file line by line.Remove the last character if it is '\'.Join the modified lines.The above operations should provide the required result. I think using regex would just complicate the solution without any added benefits.Quoting the doc on lexical analysis:When an 'r' or 'R' prefix is present, a character following a  backslash is included in the string without change, and all  backslashes are left in the string. For example, the string literal  r"\n" consists of two characters: a backslash and a lowercase 'n'.  String quotes can be escaped with a backslash, but the backslash  remains in the string; for example, r"\"" is a valid string literal  consisting of two characters: a backslash and a double quote; r"\" is  not a valid string literal (even a raw string cannot end in an odd  number of backslashes). Specifically, a raw string cannot end in a  single backslash (since the backslash would escape the following quote  character). Note also that a single backslash followed by a newline is  interpreted as those two characters as part of the string, not as a  line continuation.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-byte-literals
