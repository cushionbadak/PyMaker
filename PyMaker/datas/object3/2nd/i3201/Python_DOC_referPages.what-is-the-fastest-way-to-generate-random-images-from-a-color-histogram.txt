Natural Text
Suppose I have a color histogram. Is there a slick way in python to generate a random image from the color histogram?More specifically, I want to generate each pixel with a random color according to the distribution of the color histogram.thanks!
numpy.random.choiceThe arguments, from the linked docs:a : 1-D array-like or intIf an ndarray, a random sample is generated from its elements. If an  int, the random sample is generated as if a were np.arange(a)size : int or tuple of ints, optionalOutput shape. If the given shape is, e.g., (m, n, k), then m * n * k  samples are drawn. Default is None, in which case a single value is  returned.replace : boolean, optionalWhether the sample is with or without replacementp : 1-D array-like, optionalThe probabilities associated with each entry in a. If not given the  sample assumes a uniform distribution over all entries in a.The argument  should be the size of your image, e.g., . The argument  should be the distribution, and the argument  should be the distribution generated by the histogram.For example,yieldsTo support multiple color channels, you have several options. Here is one, where we choose from the color indices instead of the colors themselves:
random.choices can select elements from a weighted population. Example: 


Answer URL
https://docs.python.org/3/library/random.html#random.choices
