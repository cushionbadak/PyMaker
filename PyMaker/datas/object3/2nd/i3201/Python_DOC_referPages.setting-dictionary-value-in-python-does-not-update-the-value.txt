Natural Text
I am trying to simply replace missing date values from two strings, but splitting them into a dictionary of "year", "month", etc. However I am running into a very odd issue I did not find the answer for after 20 minutes googling.Here's my code:I just began twiddling with it so it's very rough, but I am working on it. However, while  prints out as , after , the value of  prints out as  still. So the dictionary does not update the value. Is there something I'm missing about how dictionaries work in python? I'm quite new to it. I've tried also different forms of the dictionary update command.Using Python 3.6 with Anaconda.
You change the return value of a function. Since you don't store it anywhere, it's lost. Instead, do something like
Each time you call  it returns a new dict, so updating it won't have an effect on the next call. Instead, you should assign the returning value of  to a variable and then use that variable for further processing.
you cannot save changes on a function call, you have to store it in a variable.
As others have said you need to save the dictionary returned by  so you can modify it. However, your  function is much larger than it needs to be, so I've written a more compact version using . Your  function won't always work correctly on earlier versions of Python, where a dict is an unordered collection, but it's ok on Python 3.6+ since dict now retains the insertion order. Also, there's no need to call  in . All the values in the dict returned by  are already strings. output


Answer URL
https://docs.python.org/3/library/functions.html#zip
