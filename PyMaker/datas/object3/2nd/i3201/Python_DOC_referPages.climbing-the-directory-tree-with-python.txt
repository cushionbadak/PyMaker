Natural Text
Let's say I have this folder structure:From , using Python 2, how would I get a list of all its parent directories? It should look something like this:
You can get the path of the current Python module by using the  attribute set on all Python modules when Python loads them from a file on disk. This is a string representing the absolute or relative path (the latter usually only when it's the  script) to the source file or  byte-cache file of the module.Use the  module to a) ensure that the path is absolute, and b), get all the directory names:The  call is needed to on Windows, where network (UNC) paths can start with  or with  (drive letters). The above includes such a prefix as the first element. Another happy side-effect of splitting of a UNC prefix is that this avoids one corner-case where  would not replace  separators ( on Windows) with  (the Windows  value) if the path starts with the special  or  prefixes.Demo:On Python 3.x, or if you are prepared to install a backport, you can also use the  library; it provides  instances that have a  attribute that gives you exactly the same info (with the root part represented by  or the drive letter or UNC path on Windows):(Note:  produces a tuple, if you must have a list, pass the result to  first).You may also be interested in the  sequence, which gives you all the parent directories as  instances, in reverse order:
To get the list of the directory in a list, Just get your current working directory and split with For a specific file,


Answer URL
https://docs.python.org/3/reference/import.html#__file__
https://docs.python.org/3/library/os.path.html#os.path.splitdrive
https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.parts
https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.parents
