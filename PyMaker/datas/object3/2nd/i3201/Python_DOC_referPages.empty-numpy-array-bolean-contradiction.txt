Natural Text
This question already has an answer here:How do Python's any and all functions work?                    7 answers                I accidentally found something in Numpy, which I can't really understand. If I check an empty Numpy array for any true valueit will evaluate to false, whereas if I check all values to be trueit evaluates to true. This appears weird to me since no value is true but at the same time all values are true...
The logic you are seeing is not specific to NumPy. This is a Python convention which has been implemented in NumPy: returns  if any value is . Otherwise . returns  if no value is . Otherwise .See the pseuedo-code in the docs to see the logic in pure Python.In the case of  or , there are no  values, because you have a 0-dimensional array or a 0-length list. Therefore, the result is .In the case of  or , there are no  values, because you have a 0-dimensional array or a 0-length list. Therefore, the result is .
This isn't a bug, it returns  because all values are not equal to zero which is the criteria for returning  see the following note:Not a Number (NaN), positive infinity and negative infinity evaluate  to True because these are not equal to zero.compare with the following:This would be equivalent to an array full of  which would return 
This is a normal behavior.It is not possible to find a value that is true, so  is FalseFor every value in the array, this value is False (It is easy to check, because there are no values in the array, so you don't have to check anything).


Answer URL
https://docs.python.org/3/library/functions.html#all
