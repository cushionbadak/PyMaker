Natural Text
How can I have argparse only parse commands that come after a positional argument?Aka if I have the command How can I have it so that the first  is parsed by argparse, and anything after the positional command is parsed by that command itself (read  as a single argument basically)So that the argument list would be pythonfile.py-d dir-e testpos_cmd_1 -d -s -etcSo anything before the positional command would be optional.  And anything after the positional command would be part of the positional command itself.Edit:  When trying to run the command with double dashes, it tells me that the arguments that come after aren't recognized.It says  are unrecognized arguments instead of bundling them with the command.
you can achieve this just by slightly changing your command line toby adding , you tell argparse to stop looking for options. So all remaining arguments are set in the positional argument list instead.An alternative is quoting the rest of arguments:and (because it creates just one positional argument) use argument parser again on the splitted string (not ideal if you want to pass quoted strings in those args)The advantages of those approaches is that they're natively supported by ,  and also that is a standard mechanism that won't surprise the users of your command.if you want to stick to your approach, maybe you could pre-process argument list to insert the double dash by detecting 2 non-option arguments in a row: is now: 
With the simple parser:It tries to parse the last '-d' and hits an error.   doesn't help.With strings other than '-d' and '-e'  works:A positional with a  nargs appears to work: is supposed to work  much like the '--', capturing input for use by another parser or command.It can have problems if it's expected to catch the whole commandline, as in:https://docs.python.org/3/library/argparse.html#nargs


Answer URL
https://docs.python.org/3/library/argparse.html#nargs
