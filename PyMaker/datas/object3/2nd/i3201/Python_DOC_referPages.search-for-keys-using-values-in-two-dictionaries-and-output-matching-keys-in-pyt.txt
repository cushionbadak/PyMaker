Natural Text
I've written some code (or at least tried to) to compare the keys and values of two dictionaries (X and Y) which have the exact same keys but not always the same values, like an x-y coordinate map. The code is supposed to:Search for the keys using their values (the specifically needed value to be searched for is provided by a pre-set variable). Compare the result keys against each other for matches and return either as output if they match.I have used Python 2.7 in all my code (I'm quite new to the language), however Python 3 solutions are welcome but not preferred.Here is the code:The expected output is Unfortunately, the code doesn't produce the expected output (produces ), probably as a result of locationX and locationY never matching.I've tried using a different form of the above code by removing the last  block and inserting a  at the top of the function. But that only causes the code to loop forever.My larger aim with the code is to write a  function for a Player class which returns the location of the player using x-y coordinates assigned to each location. I understand that I could probably achieve this using a single dictionary and keys with unique values but I would much rather use the x-y coordinates.I ran out of solutions I could think of and tried searched for solutions elsewhere on the internet including Stack Overflow and have found similar and somewhat helpful suggestions, but these do not solve the problem either includingthis. Thank you for your time.
My take on the problem:Prints:JerseyHowever, it's unclear why you store the city names in both dictionaries. Better solution would be storing the dataset like this:That way you can index it by .
You aren't storing all the keys with the required values. You need to store all of them and then find the intersection. Output:
First of all please follow some style guide for example PEP8.I have for You solution using generator Result :


Answer URL
https://docs.python.org/3/library/functions.html#zip
