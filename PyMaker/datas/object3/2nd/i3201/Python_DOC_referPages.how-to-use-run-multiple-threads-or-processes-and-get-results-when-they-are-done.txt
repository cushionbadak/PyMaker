Natural Text
Have function that has a dynamic amount of time it will 'do something', I dont' want to keep the rest of my program waiting on this function, so I want to send it to a different process or thread. Let's say I run the function 10 times concurrently, but i want to use the data from the quickest functions first. (like a queue on who works the fastest) I tried this approach, but as you can see by the output some functions finish first, but I still have to wait until all 10 are done before I can iterate through the results.??????????????????????????????????????---------------------------------also tried thishow to loop through queue infinite? there could be situation where the do() takes so long the queue will become empty, but i still want to check until something goes in queue?? tried this, but it just shows last item in queue
You might not need  unless you need something . Look out for  which is more preferred for I/O operations. I would recommend  within Python.For your use case, where you just want fastest results, use a . is a blocking get. Whatever thread completes first and puts the results in queue, you will get it right away.
---------- in this scenario i 


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map
https://docs.python.org/3/library/concurrent.futures.html
https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example
