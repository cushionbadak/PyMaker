Natural Text
I am searching for an easy way to create enums in python with many and potentially an infinite number of members.For example, this could be proven useful to enumerate countable sets or when you do not want to create enum with 10000 members, but rather create them on demand (on the fly).My use case is to create an enum for the WRS-2 tiling grid, but it could be used as well for chemistry formulas for example.I was thinking about first defining four methods: name = f1(value)value = f2(name)f3(value) returns if value is correctf4(name) returns if name is correctThen I wanted to use some magic methods of python to plug these methods at the right place.For example, I tried to catch the  call in a new metaclass, and to extend the enum using aenum package but I could not get it work.Thank you
I am not quite sure what is your understanding of  and what properties do you want it to have, but it really looks like you are defining a function where to some  you associate it to a number (any number), as long as it is the same. I think this could be done relatively easily with a generator and a list like this: If you want to have control over what value gets associated to the name, what you want is actually a  (possibly with slightly different syntax) or a (hash?) function.
I think what you're looking for is the  builtin class. Following the tutorial within the official documentation is a good place to start: Sets can be created via literal syntax or via a function call:They do not contain duplicates:They support very fast membership testing, which is why I think they're suited for your problem at hand:Sets can grow as large as they need to grow:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
