Natural Text
What is the most efficient way to toggle between  and ?
Solution using NOTIf the values are boolean, the fastest approach is to use the not operator:Solution using subtractionIf the values are numerical, then subtraction from the total is a simple and fast way to toggle values:Solution using XORIf the value toggles between 0 and 1, you can use a bitwise exclusive-or:The technique generalizes to any pair of integers.  The xor-by-one step is replaced with a xor-by-precomputed-constant:(This idea was submitted by Nick Coghlan and later generalized by @zxxc.)Solution using a dictionaryIf the values are hashable, you can use a dictionary:Solution using a conditional expressionThe slowest way is to use a conditional expression:Solution using itertoolsIf you have more than two values, the itertools.cycle() function provides a generic fast way to toggle between successive values:Note that in Python 3 the  method was changed to , so the first line would be now written as 
I always use:If p is a boolean, this switches between true and false.
Here is another non intuitive way. The beauty is you can cycle over multiple values and not just two [0,1]For Two values (toggling)For Multiple Values (say 4)I didn't expect this solution to be almost the fastest too
The  operator negates your variable (converting it into a boolean if it isn't already one). You can probably use  and  interchangeably with  and , so just negate it:But if you are using two arbitrary values, use an inline :
Just between 1 and 0, do this x can take 1 or 0
Trigonometric approach, just because  and  functions are cool.
Surprisingly nobody mention good old division modulo 2:Note that it is equivalent to , but the advantage of modulo technique is that the size of the group or length of the interval can be bigger then just 2 elements, thus giving you a similar to round-robin interleaving scheme to loop over.Now just for 2, toggling can be a bit shorter (using bit-wise operator): 
one way to toggle is by using Multiple assignmentUsing itertools:
The easiest way to toggle between 1 and 0 is to subtract from 1.
Using exception handlerOk, I'm the worst:
How about an imaginary toggle that stores not only the current toggle, but a couple other values associated with it?Store any + or - value on the left, and any unsigned value on the right: Zero works, too:Easily retrieve the current toggle value ( and  represent + and -), LHS (real) value, or RHS (imaginary) value:Easily swap LHS and RHS (but note that the sign of the both values must not be important):Easily swap LHS and RHS and also toggle at the same time:Guards against errors:Perform changes to LHS and RHS:...but be careful manipulating the RHS:
I use abs function, very useful on loops   x will be 0.
Variables a and b can be ANY two values, like 0 and 1, or 117 and 711, or "heads" and "tails".  No math is used, just a quick swap of the values each time a toggle is desired.
Let's do some frame hacking. Toggle a variable by name. Note: This may not work with every Python runtime.Say you have a variable "x"
If you are dealing with an integer variable, you can increment 1 and limit your set to 0 and 1 (mod)
Switching between -1 and +1 can be obtained by inline multiplication; used for calculation of pi the 'Leibniz' way (or similar):


Answer URL
https://docs.python.org/3/library/stdtypes.html#bitwise-operations-on-integer-types
https://docs.python.org/3/search.html?q=logical_xor
