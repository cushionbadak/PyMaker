Natural Text
For the list shown in the example:    or 
Turn the list to a set then use :Since  is unordered you may want to sort the output:Full example:
You can use a  to keep track of already-seen elements and use a loop or list comprehension to get whether each element is the first of its kind. Then, use  to get the indices.
You could also collect indices in a dictionary, where only the first occurence of each item is recorded:A  is used to maintain order of insertion. 
The list has a build in function .index:.index searches through the list in order until it finds a match then and stops. If you expect to need indices of more matches, you should use a list comprehension. First, you may want to convert your text into numbers (lists of numbers will not need that) e.g hi = 0, babe = 1 etc. This should do it (might be a better way): Then your list comprehension:Which means you have a 'babe' on the 1st and 3rd position in your list.Might be a simpler way! Hope this helps.


Answer URL
https://docs.python.org/3/library/collections.html
