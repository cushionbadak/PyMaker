Natural Text
I'm working my way through the MIT Open Courseware class Introduction to Computer Science and Programming in Python and I've spent an embarrassing amount of time trying to wrap my head around the "Finger Exercise" from the textbook:  Write a program that examines three variables—x, y, and z—and  prints the largest odd number among them. If none of them are odd, it should  print a message to that effect.I wrote a couple of solutions that didn't quite work, missing odd numbers if there were larger even numbers.  I finally threw in the towel and searched here for solutions that others people working on this class had asked.  This solution from AFDev seemed to be the simplest to me (in the context of what the intent of the exercise was and how concise the solution was.)  I combined that with my user input to get the following:This works great, as long as x is an odd number. If x is zero or an even number, I get the following error:The little bit of Googling I did said that Python 2.* was a little more liberal in allowing comparisons between NoneTypes and integers.  I changed the line to initialize largest = 0, but then realized that this would give invalid results if the user input a negative number.I tweaked the code to the following:Is there a better way to initialize (for lack of a better term) "largest" so that I can compare it to an integer or is the way I'm doing it good enough?I understand that there are better ways to compare the numbers to find the largest (I found max when googling.) I'm trying to baby-step my way through this stuff.Thanks!
 seems fine if you're going to do it this way. (I'd say it's safer than using a large negative number.) You can get round the code duplication with  as e.g.Couple of things, compare to  with . Second, if the first part of an  is True, the second part won't be executed (called short-circuiting), so you won't get an error trying to compare a  using .
Or don't initialize it at all - just keep a Boolean to keep track of whether an odd number has been found yet.The repetitious code at the start then screams to be replaced with a uniform loop:
I would do:This works because an empty container in Python is  and the list  will be empty if there are no odd numbers. You can use  to find the largest odd number if there are any and the Python ternary of You can do the same thing this way:If you don't want to use the max function, you can write your own:
I guess using a very large negative number, to make sure you're good.doing something like : and by the end checking this :
Instead of putting:you should put:


Answer URL
https://docs.python.org/3/library/functions.html#max
