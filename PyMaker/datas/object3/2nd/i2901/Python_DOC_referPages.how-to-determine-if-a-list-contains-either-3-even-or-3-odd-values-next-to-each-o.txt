Natural Text
How do you determine if a list contains either 3 even or 3 odd values all next to each other?Example lists (True, False, True):Closest code:
Here is some code. This is considered more "pythonic" than iterating over indices--this iterates over consective-triples, using the  function. This will give an error if the list has fewer than three items--you can add that error check. The  function stops when one of the iterables runs out of values, which is exactly what we want here.Or, even shorter (borrowing an idea from @jdehesa which I should have thought of on my own, so upvote his answer as I did),The printout from that is
You can use :This can be easily adjusted for any group size.
You can iterate through the list of numbers in blocks of three:Output:If you want to be more idiomatic or "pythonic" you can improve the code and do for example something like this:
One more short and generic solution:output:Some explanation: The  part gives the number of odd number in each n-uplet. When all numbers are odd or even, this sum is equal to either  or zero. For the other cases, the result of the sum falls in-between. So,  is equal to  only when all the n-uplet numbers are either odd or even. 
If you are looking for exact 3 of odd or even in a list of 4 element:And if list length and number of odd or even elements are parameters you can change 2 and -2 to a parameter.
one way with two int counters:function:3 lists from your example output   . (tested with python2)
Tried a simple way to do it. Maintain two flags for even and odd. If you find an even, increment the even flag and reset the odd flag, and vice versa. As soon as one flag's value becomes 3, you know you have found three in succession.
Use  to create n element tuples (3 in our case), the use  to find if all the 3 elements in the tuples are odd and then use  to check if there is atleast one match.Using  and  would guarantee minimal number of odd or even checks needed 
Here is a solution using a simple  loop.The idea is to maintain a list, whose values depend on whether elements in the input list are even or odd. Clear the list when you don't have a consecutive odd/even.If at any point you have 3 items in your tracker list, the function returns .
Just checks that odd/even holds as long as the minimum sequence length requested, 3 in this case.output
Using list indices, you can test only specific items in a list. For example,  would test the 4th item in a list ( is the first item in a list,  second, etc.). So we use this method to test the first, second, and third items individually.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
