Natural Text
In Python 2 rounding is done away from , so, for example,  is .In Python 3.x, however, rounding is done toward the even choice, so   is .What function can I use in Python 3.x to get the old behavior?
If your code is not particularly performance sensitive, you can use the standard  library to achieve the result you want.  allows choosing the rounding method:
To get the Python 2 rounding behavior in Python 3 for the one-argument form of  you can use a custom function like this:Demo:
This solution might work for you. For x = -1.2 , x = 2.3  etc.edit: this solution will crash for x = 0. you can change the return value to
Equivalent of Python 2.7  when rounding to an integer (one-parameter):
This is a possible solution I've come up with:Tests:
According to CPython source code,The basic idea is very simple: convert and round the double to a  decimal string using _Py_dg_dtoa, then convert that decimal string  back to a double with _Py_dg_strtod.  There's one minor difficulty:  Python 2.x expects round to do round-half-away-from-zero, while  _Py_dg_dtoa does round-half-to-even.  So we need some way to detect and correct the halfway cases.If you care about the performance, consider copying the relevant C code and import as an extension. But if you don't care, here's a Python implementation:


Answer URL
