Natural Text
I am currently writing an application that generates C++ code into a python string. I want to compile this code and create a  from it.The easiest way is to write the python string containing the code into a file, and use  to invoke g++/clang to compile it into a , but I would rather not write the string to disk first and have that as an intermediate step.I have looked online for g++/clang bindings in python, and they were all simply parsers(for example, ), and do not actually compile anything.Is there an alternative method that I'm missing here? Or do I need to bite the bullet and use ?
Mat's comment in python3 using the  argument of This uses the fact that g++ accepts code from standard input when passed the file name . Because there is no file name suffix, the compiler cannot guess the language, so it should be specified with .The  argument was added to make the input argument accept a string, otherwise it expects a bytes-like object.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.run
