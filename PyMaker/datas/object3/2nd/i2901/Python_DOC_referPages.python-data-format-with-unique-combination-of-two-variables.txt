Natural Text
I am still kind of a beginner with Python (I don't use it much except from data gathering which is what I am doing now).I have a couple of CSV which basically consists in a collection of info about several machines, identified by an ID, over several years.It is something like that:Now my goal is to try and gather that data into a format that I can easily process. Indeed, currently the data is scattered in multiple CSVs, and I would like to make it a single JSON file. Edit 1: Other CSVs contain either data per year or more generic data in the format of:So I guess my starting question would be concerning what kind of data structure I should use to read and store the CSV data. I thought about using a dictionary, but I don't think a dictionary could have two keys. Then I thought that I could just make some kind of list as the key, but then I don't know how to properly store the info in a JSON format. That's the reason why I'm asking for your help today.Thanks in advance.Have a good dayIn the end I would like my a JSON object to be about a single ID, with all the data for multiple years contained such as:Edit 2:
There are several options available to you. Probably the simplest, conceptually, would be a dictionary keyed to a tuple , with the values as tuples (variable1, variable2), or as a dict, egI would consider creating an object to represent this data, though, since it's likely that the problem and your requirements will become more complex as you go along, and an object allows you to define methods to address new requirements as they arise. An intermediate solution would be a namedtuple, of which a quick example follows:(see the documentation for more info on this)Note that namedtuples do not play well with json serializers, so I still incline towards a simple object which knows how to emit a dict of its data, suitable for serializing. What I mean by "an object which knows how to emit a dict of its data" would normally just mean that the object has a method which produces a dict of the appropriate keys and shape, for exampleHowever, you want something a little fancier, you want to summarize the data across instances. This will require taking a list of objects (or of data blobs) and doing a little parsing to group by id and list instances by year. Something like:should work. (but bear in mind that this is not tested and is intended as an example, not as working code) 


Answer URL
https://docs.python.org/3/library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields
https://docs.python.org/3/library/csv.html
