Natural Text
I have a quite a few sums of strings that look like this: "a name / another name / something else".I want to get to this: "a name/another name/something else".Basically removing the spaces before and after the forward slashes only (not between the words themselves). I know nothing about programming but I looked and found that this can be done with Python and Regex. I was a bit overwhelmed though with the amount of information I found. 
You can use the pattern: Non capturing group. Lookbehind for . OR Positive lookahead for . Close non capturing group.You can try it live here.Python snippet:Prints:
Here is an answer without using regex that I feel is easier to understandoutput: joins elements of a sequence by a given seperator, docs  removes beginning and trailing whitespace, docs  splits the string into tokens by character, docs
This pattern will match for any amount of whitespace surrounding  and remove it. I think the regex is relatively easy to understand Has a capturing group that matches the backslash (that's what the middle part is). The  parts match whitespace (at least one up to any amount of times). You can then replace these matched strings with just a  to get rid of all the whitespace. 
There's no need for regex here, since you're simply replacing a string of literals.
 being your string: 
Use the following code to remove all spaces before and after the  character:Check this document for more information.


Answer URL
https://docs.python.org/3/library/re.html
