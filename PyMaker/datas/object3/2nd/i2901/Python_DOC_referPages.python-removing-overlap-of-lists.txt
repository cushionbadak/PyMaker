Natural Text
I'm aware variations of this question have been asked already, but none of the ones I've been able to find have addressed my specific aim.I am trying to take two lists in Python with string elements and remove the overlapping sections of the two. For example:Should go toI've considered a list comprehension along the lines of but this would yieldas both instances of "7" would be taken out.How can I achieve what I'm trying to do here? Thanks. Edit - this was marked as a possible duplicate. In my example with the list comprehension, I already explained how it is a different problem to the one linked.
Essentially, you want a difference operation on a multi-set, i.e. a bag. Python implements this for the  object:Several mathematical operations are provided for combining Counter  objects to produce multisets (counters that have counts greater than  zero). Addition and subtraction combine counters by adding or  subtracting the counts of corresponding elements. Intersection and  union return the minimum and maximum of corresponding counts. Each  operation can accept inputs with signed counts, but the output will  exclude results with counts of zero or less.So, for example:In Python 3.6+ this will be ordered (although this is not currently guaranteed, and should probably be considered an implementation detail). If order is important, and you are not using this version, you may have to implement an ordered counter.Indeed, the docs themselves provide just such a recipe:
Using  method. Probably slow. O(n^2) in worse case.list.remove(x)


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#ordereddict-examples-and-recipes
