Natural Text
I am writing unit tests for a Python library using pytestI need to specify a directory for test files to avoid automatic test file discovery, because there is a large sub-directory structure, including many files in the library containing "_test" or "test_" in the name but are not intended for pytestSome files in the library use argparse for specifying command-line optionsThe problem is that specifying the directory for pytest as a command-line argument seems to interfere with using command line options for argparseTo give an example, I have a file in the root directory called  as follows:I also have a folder called  in the root directory, containing a test-file called :If I call  from the command line, the test passes fine. If I specify the test directory from the command line with , the following error is returned:My question is, how do I specify the test file directory for pytest, without interfering with the command line options for argparse?
 without argument reads the  list.  That will include the 'tests' string. also uses that  with its own parser.One way to make your parser testable is provide an optional :Then you can test it with:and use it in for real with Changing the  is also good way.  But if you are going to the work of putting the parser in a function like this, you might as well give it this added flexibility.
To add to hpaulj's answer, you can also use a library like unittest.mock to temporarily mask the value  of . That way your parse args command will run using the "mocked" argv but the actual  remains unchanged.When your tests call  they could do it like this:


Answer URL
https://docs.python.org/3/library/unittest.mock.html
