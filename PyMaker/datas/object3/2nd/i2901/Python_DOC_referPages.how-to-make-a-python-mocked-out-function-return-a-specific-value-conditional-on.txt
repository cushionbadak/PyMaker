Natural Text
I have a python 2.7x Tornado application that when run serves up a handful of RESTful api endpoints.My project folder includes numerous test cases that rely on the python  module such as shown below.The RESTful endpoint  has two internal calls to  respectively:  and .I want to mock out  in this test-case such that it returns  if it is called with ==2, but otherwise it should return what it would always normally return. How can I do it?I know that I should do something like this:But I don't know how to properly specify that something so that its behavior is conditional on the arguments that my_method is called with. Can someone show me or point me to an example??
I want to mock out  in this test-case such that it returns 0 if it is called with , but otherwise it should return what it would always normally return. How can I do it?Write your own method mock calling the original one on condition:For patching: if you don't need to assert how often the mocked method was called and with what args etc, it is sufficient to pass the mock via  argument:If you want to invoke the whole mock assertion machinery, use  as suggested in the other answer. Example:
you could use  to change return value dynamically:update: as you want to run original  code under some condition, you may need a method proxy,  can't get back the real function object being patched.will outputs:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_called
