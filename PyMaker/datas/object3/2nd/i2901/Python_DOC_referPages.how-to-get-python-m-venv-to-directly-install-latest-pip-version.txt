Natural Text
As part of the compilation step for a new python version, I fetch and run , to have the latest pip installed next to the python executable:I have 25 such versions under , although I mostly use the five latest versions of each major.minor version that is not EOL. To setup an invorment I used to run  or my  with the  option to get a virtual environment with a specific version.With Python 3.7 this gives the imp module deprecation warning:I have little hope this will be solved in virtualenv, as this has had a  at least since 2014 (as can be seen from the output in this question)While investigating replacing  with  in , I first created a new  based virtual environment by hand:That has an old  version! If you use it, you'll get:You are using pip version 10.0.1, however version 18.0 is available.  You should consider upgrading via the 'pip install --upgrade pip' commandIn the virtual environment created with  you immediately get the latest version:I can run a post-creation step:which will take extra time. And if there was a some security update for , this would imply running the non-secure version to get a secure version, an ideal point of attack.From  it is trivial to do the multiple steps to create a -less virtualenv and then add  using . From the command-line this is not so simple:pip 18.0 from /opt/python/3.7.0/lib/python3.7/site-packages/pip (python 3.7)What is causing  to take that old  version? Is that the version available when 3.7.0 was released? How can I update my install under  in some way so that using  creates a virtualenv with the latest  version without reverting to scripts, aliases or using multiple commands? Having the latest  installed under  obviously is not enough.There are two bundled wheels:I suspect I need to update those. Is there a better way than updating those by hand? Some option for  would be nice.(And running  doesn't do the trick)Running the deprecated  has the same old  version problem. 
It is an expected behavior.  calls  to install  and This answer shows that  would only install the bundled version even with  option. There isn't any official option to update the bundled  and .Well I have also no good idea to fix this problem as it just is the designed behavior. I would like to give two suggestions:Use . It is really good! And it will be the next-generation official package manager in the future(Although there is a big problem related to current Pypi's structure. In short, a package manager can only decide the dependencies with downloading the whole package. This gives a huge difficulty to building dependencies graph.).Implement your custom , actually there is an official example about this. And in the example, it also use  to install the latest .


Answer URL
https://docs.python.org/3/library/venv.html#an-example-of-extending-envbuilder
