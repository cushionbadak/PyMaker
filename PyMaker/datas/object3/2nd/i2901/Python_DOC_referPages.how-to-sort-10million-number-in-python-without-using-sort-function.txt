Natural Text
Sort the list of random generated 10 Million numbers between 1 and 100, in python without using inbuilt functions, Quicksort didnt worked for me here.I have used quicksort code from the mentioned link:http://interactivepython.org/runestone/static/pythonds/SortSearch/TheQuickSort.htmlError I got while implementing it :for x in range (0, 100000):    listOfNumbers.append(random.randint(1, 100))quickSort(listOfNumbers)print(listOfNumbers)RuntimeError: maximum recursion depth exceeded
You can use any sort algorithm you want, as long as you implement it right. But the problem is calling out for a radix sort. In particular, the dumbest kind of radix sort, a bucket-counter.You have  total values and a range of  distinct values. A bucket counter will take  time, which is better than , and  space,1 which is negligibleâ€”and. best of all, it's dead simple:You can obviously extend this to not be hardcoded for numbers from 1-100 (actually, I hardcoded it for numbers from 0-100, wasting 1% space, but who cares?). Or you can add support for a  function. Or you can make it even simpler by using a  instead of a .1. Technically, it's  space, because the counts range up to , which takes  bits, which the values only range up to 100, which takes a constant number of bits. But practically, all of the counts fit into a single 30-bit "digit" in CPython, so the  factor never comes up.
You can use the mighty Bogosort.
Maybe  will be faster... you can convert numbers to a  then use numpy.sort Like this:which give you:


Answer URL
https://docs.python.org/3/library/functions.html
