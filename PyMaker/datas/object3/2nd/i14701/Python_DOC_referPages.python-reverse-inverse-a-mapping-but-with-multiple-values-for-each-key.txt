Natural Text
This is really a variation on this question, but not a duplicate:Python reverse / invert a mappingGiven a dictionary like so:How can one invert this dict to get:Note that values span uniquely under each key.Note: I previously had syntax  and  Reminder not to use  and  as they are built-in functions, see excellent comments and answers below :)
TL;DRUse dictionary comprehension, like thisThe above seen dictionary comprehension is functionally equivalent to the following looping structure which populates an empty dictionaryNote: Using  shadows the built-in  function. So, don't use that as a variable name unless you know what you are doing.Other similar ways to do the samePython 3.xYou can use , like thisWe use  method here, which would create a view object from the dictionary which would give key value pairs on iteration. So we just iterate over it and construct a new dictionary with the inverse mapping.Python 2.xYou can use  like thisWe don't prefer  method in 2.x, because it will return a list of key-value pairs. We don't want to construct a list just to iterate and construct a new dictionary. That is why we prefer , which returns an iterator object which gives a key value pair on iteration.Note: The actual equivalent of Python 3.x's  would be Python 2.x's  method, which returns a view object. Read more about the view object in the official documentation, here. vs  methods in Python 2.xThe main difference between  functions and  functions in Python 2.x is that, the view objects reflect the current state of the dictionary. For example,now we add a new element to the dictionaryIf you try to check if  (key-value pair) is in the , it will throw an errorbut view object will reflect the current state of the dictionary. So, it will work fine
Output:{'c': 'a', 'b': 'a', 'e': 'd', 'f': 'd'}Note: a dictionary is an unordored data structure, so the result may not be ordered as you want it to be. 


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/stdtypes.html#dict.items
