Natural Text
I have a list of lists like so I want to search through the bigger list for the individual lists with the same first element, then average the second element, then append the new average value to a new list like so:The problem is I don't know how to search through the lists to do so. I'm very new to python, can someone help?
You can use a simple function to loop over the items:Then use your list:
You can use a dictionary to store every name with corresponding values :  that this answer works if you have more that 1 number in your sub lists!!But for this case as i write before edit you can just do :
You can use a collections.defaultdict to store all the scores for each name in a single list and  then use statistics.mean if you have python >= 3.4 to calculate the average:If you want to keep the dict structure just update the values:Or create a list using a list comprehension:Obviously without using mean you can simple calcualte it yourself:If the order matters then use a collections.OrderedDict:
I think this should work, and it's fairly clean too. We create a defaultdict and append each value for each name to a list, then reduce those down by adding, and then divide by length to get an average. 
Build a dictionary whose values are lists of numbers, using the  method of dictionaries.Build a list using the builtins  and  to compute the mean.Using the  interpreterPrompted by Kevin's comment to the OP about the eventual requirement of conserving the order  of  labels in the original list, I'd suggest using an  from the  module


Answer URL
https://docs.python.org/3/library/statistics.html#statistics.mean
