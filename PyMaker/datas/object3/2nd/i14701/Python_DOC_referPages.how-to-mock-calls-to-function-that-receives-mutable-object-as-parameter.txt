Natural Text
Consider example:And test function that tries to test func_a and mocks func_b:After func_a has executed I try to test if func_a made correct calls to func_b, but since in for loop I am mutating list in the end I get:
The following works (the importing  from  is a Python 3 thing, and  is where  and  are):This inherits from , and redefines the call behaviour to deepcopy the arguments and keyword arguments.You can pass the new class into  using the  parameter, however it cannot co-exist with . Note that your function calls  with a list, so  has to be changed to . When run by calling , this does nothing (passes).Now we cannot use both  and  because  is a generic factory but in our case is just a  override. But Autospeccing is a very cool 's feature, we don't want lose it.What we need is replace  by  just for our test: we want avoid to change  behavior for all tests... could be dangerous. We already have a tool to do it and it is , used with the  argument to replace the destination.In this case we use decorators to avoid too much indentation and make it more readable: Or:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#autospeccing
