Natural Text
I'm trying to leverage Python's new asyncio library to send asynchronous HTTP requests. I want to wait a few miliseconds (the  variable) before sending each request - but of course - send them all asynchronously and, not wait for a response after each request sent.I'm doing something like the following:The output that I am getting (by printing the 200 responses) looks like this code is running synchronously. What am I doing wrong?
There are a couple of issues here:You should use , not , because the latter will block the event loop. You shouldn't be using  after the  call, because that will make the script block until the  coroutine is complete, which means you don't end up doing anything concurrently; you process each line, wait for the processing to complete, then move on to the next line. Instead, you should run all the  calls without waiting, save the  objects returned to a list, and then use  to wait for them all to complete once you've started them all. Putting that all together:


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.sleep
https://docs.python.org/3/library/asyncio-task.html#asyncio.wait
