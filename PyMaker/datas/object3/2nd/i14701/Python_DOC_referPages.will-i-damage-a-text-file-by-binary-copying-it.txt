Natural Text
I want to copy a tree of files/directories (recursively, of course) that have bad characters in the file names. So, I'm opening the file, reading its contents, and dumping them into a new file with a cleaned name.If the contents of a file are text, and I read() them into write() while in binary mode, is there any chance of that damaging the contents?
No, there is no chance of damaging the contents. You'll be reading the exact contents as they are, bit for bit, insofar your hardware can provide you with the accurate contents.What can happen is that you forget to copy across all the file metadata; access control information and modification and creation dates are lost, for example.Rather than read the whole file into memory, use the  function to handle the file copy for you; it'll copy data across in blocks. Better still, use the  or  functions and it'll copy across permissions too;  also copies file access and creation times.All three functions open the file in binary mode; the source is opened with , the destination with . If you must have exclusive opening (mode ), you'll need to open the file objects yourself (as you already do) and use  to get the efficient file copy, followed either by a  call (to replicate  and copy file permissions) or a  call (to replicate what  does).


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.copyfile
https://docs.python.org/3/library/shutil.html#shutil.copy
https://docs.python.org/3/library/shutil.html#shutil.copy2
https://docs.python.org/3/library/shutil.html#shutil.copyfileobj
https://docs.python.org/3/library/shutil.html#shutil.copymode
https://docs.python.org/3/library/shutil.html#shutil.copystat
