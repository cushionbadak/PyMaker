Natural Text
Here is my input and result for regex:result :I want this sort of result:;any change in regex?
As an alternative without using regex you can do the job just with  and  methods :Or with regex you can use look-around in your regex :Note that the logic is simple you just need to match the string that is between open parenthesis  and a close parenthesis that followed by an open bracket  .
I feel you do not need any regex for the sample string you provided:Output of the sample program:
You need to match either strings that are between  and , or between  and . That way you avoid matching strings like  in . You can do that by using lookaround assertions since they don't consume the string searched. Lookahead assertion:       Matches if  matches next, but doesn’t consume any of the string.   This is called a lookahead assertion. For example,  will match  only if it’s followed by .Positive lookbehind assertion:      Matches if the current position in the string is preceded by a match for ... that ends at the current position. This is called a  positive lookbehind assertion.  will find a match in  , since the lookbehind will back up 3 characters and check if  the contained pattern matches.In the code below i use  flag to make it more readable.


Answer URL
https://docs.python.org/3/library/re.html#lookahead%20assertion
