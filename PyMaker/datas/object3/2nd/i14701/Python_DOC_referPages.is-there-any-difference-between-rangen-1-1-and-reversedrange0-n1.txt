Natural Text
They produce the same results.contrasted with:From what I understand, Python3's  creates a generator rather than storing the whole range in memory.  likewise generates its values one at a time, I think. Is there any reason to use one over the other?
The  function in Python has a special case for when you pass it a .  The only real difference between  and  is that you can iterate over a  more than once, but  returns an iterator, so it can only be used once.You can see that in both cases, the iterator type is .  So, the performance of the loop itself will be identical in both cases.Since the only overhead to  is one extra function call, I always prefer  over .
This is the results from using  on the two modulesAs you can see, the second way is slower that is because it has an additional call to the function . 
 makes it an iterator so depending on how you  use it there are differences:
The only real difference between  and  is that  returns a range object that can be further used/manipulated before iterating over it. Whereas  returns an iterator -- all you can do is iterate over it.Examples of using a range object, which cannot be done with an iterator.Since range objects can be sliced this also opens up the possibility of reversing them in another way:However, unless additional functionality of a range object is needed, then  is vastly preferable as it is easier to understand.


Answer URL
https://docs.python.org/3/library/timeit.html
https://docs.python.org/3/library/functions.html?highlight=reversed#reversed
