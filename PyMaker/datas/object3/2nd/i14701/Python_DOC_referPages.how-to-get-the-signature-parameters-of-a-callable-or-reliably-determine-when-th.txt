Natural Text
The built-in  takes two parameters:However, (in CPython 3.4.0)  shows 0:in contrast with a user-defined function:The docs for  do say:Some callables may not be introspectable in certain implementations of Python. For example, in CPython, some built-in functions defined in C provide no metadata about their arguments.But they also say:Raises ValueError if no signature can be provided, and TypeError if that type of object is not supported.So I am surprised that I did not get a  and instead got what appears to be an incorrect signature.Is there a way to reliably (and programmatically) determine when it is not possible to get the parameters for a callable with ? That is, if I am given something like , is there a way to distinguish between "this thing does not have any parameters" and "it is not possible to determine what parameters this thing has"?
There's an open bug report for this:  http://bugs.python.org/issue23934The problem is that if the obj passed to  is a 'type', and it doesn't have a user defined init or new, it just gives up and returns the signature for , which has 0 parameters.If the obj is in the builtins module, and it's a 'type', but not an Exception, there's a pretty good chance it's not going to work with .  I came up with this workaround to find the problem objs... It's not particularly elegant, but it may be useful to you:Output:


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.signature
