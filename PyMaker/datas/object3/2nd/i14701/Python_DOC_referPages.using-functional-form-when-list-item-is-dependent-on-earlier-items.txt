Natural Text
I have list of tuples which each tuple has length of element. I use following code to calculate offset of element depending on lengths of earlier elements.Output is Is there a way to do the loop in functional form, like list comprehension? I cannot figure out how to avoid temporary variable , which makes it impossible?
It's not pretty, and it's not efficient, but here is a list comprehension that does what you requested:It works by recalculating the offset up to the current item at each iteration, hence it's inefficient.It works on both Python 2 & 3.
If you have tuples:
Probably not what you meant by functional but hey, always fun.But yeah, I don't think this is really a pattern python allows a person to address in a manner without local state (unless of course you use a high level function like the aforementioned itertools.aggregate that just conceals the state). Of course, if you really needed to you could just define some sort of counting object (or use a closure).


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
