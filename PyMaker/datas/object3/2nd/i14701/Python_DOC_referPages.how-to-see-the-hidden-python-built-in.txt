Natural Text
Some python built-in method (e.g. vars) are "hidden" by some identical local variable names. How to call the "hidden" built-in method?I was in debug mode using , and can't see the hidden built-in method () in the  dictionary:
You can use the special  module:If you're using the Python debugger (),  seems to appear as , so use:Note that this is a hack, the 2 leading & trailing underscores are Python conventions for "used internally, do not use in a script". Python gives you access to this anyway, but with this great power comes great responsibility, as it gives you the ability to do both very smart, and very stupid things!Remember that in Python functions are like any other variables, so another way would be to save the previous  function:However, by far the best solution is to not overwrite these variables ;-) Most editors should highlight these, so you can easily recognize the most commonly overwritten ones (, , ). Experience tells me that sooner or later you will be confused, and will cause hard-to-debug bugs, so just say "NO" ;-)You can get a complete list of all these built-ins with the  function:


Answer URL
https://docs.python.org/3/library/builtins.html
