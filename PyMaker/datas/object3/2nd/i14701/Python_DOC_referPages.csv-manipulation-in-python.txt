Natural Text
I want to be able to change the CSV data as we can do in javascript for JSON. Just code and object manipulation, like -how can I do like this but for CSV files and in python ?Something like -I have a csv file customers.csvID,Name,Item,Date these are the columns. eg of the csv file -I know very well that the python csv library can handle it but can it be treated as an object as whole and then manipulate ?I basically want to combine the firstname and lastname, and perform some math with the IDs, but in the way javascript handles JSON
Not sure but maybe you want to use https://github.com/samarjeet27/CSV-MapperInstall using OutputThis combines the firstName and lastName by accessing it as a dict, as maybe you want to remove the last name and firstname I think, replacing it with just a 'name' property. You can use  if you want to access it as in javascriptEditYou can save it back to CSV too.And regarding being able to perform math, you could use a custom mapper file like And specify the type(s)
JSON can, by design, represent various kinds of data in various kinds of arrangements (objects, arrays...) and you can nest these if you wish. This means that its relatively easy to serialise and deserialise complex objects.On the other-hand, CSV is just rows and columns of data. No structured objects, arrays, nesting, etc. So you basically have to know ahead of time what you're dealing with, and then manually map these to corresponding objects.That said, Python's CSV module does have dict reader functionality, which will let you open a CSV file as a python dictionary consisting of the CSV's rows. It automatically maps the first / header row to field-names, but you can also pass-in the field-names to the constructor. You can therefore reference a property from a row by using the corresponding column header / fieldname.  It also has a corresponding dict writer class. If you don't need any fancy nesting or complex data structures, then these may be all you really need?This example is directly from the python module documentation:


Answer URL
https://docs.python.org/3/library/json.html
