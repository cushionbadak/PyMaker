Natural Text
I have a class that I need to patch, which works similar to thisHow would I set up a mocking class for Foo such thatreturns a mock result, but still taking into account the data passed in for . I thought of subclassing  like thisbut I can't quite figure out how to apply  to use  instead of  in the actual TestCase. I need to be able to write a test similar to this.I know I can just use plain  with  or something and override the return values for each of the methods, but it would be nice to have a mock class which I can just use to replace the production class in one go. The key bit being, having to access the member variable  in the mock methods, while having it initialized in the constructor (just like the production class). 
About you base question the answer is use  parameter in : If you need to add some argument to  init call consider that every argument not used in  will be passet to the mock constructor ( in your case).If you need to a wrapper of your production class maybe you are looking in the wrong place: mock is not wrapper.When you mock something you don't really want to know how your mock do the work but just how your code use it and how you code react to mocked objects answers.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#patch
