Natural Text
I have a list called records that contains a mw value in records[1]. I then test these mw values with four  statements, and I change the output result based on the value of mw as seen below.The main idea behind the  statements is that I need to change some list values based on the mw value. This means that the output1 variable will be slightly different from output2.How can I combine these four outputs? Ideally, I would want all the results for output 1 first then 2 then 3 and so as seen below.
I don't see how you're getting all that output with only 4 variables.  Or to put it another way, using lots of numbered "sibling" variables will just give you headaches --- you need a function that you can call over and over.  Something like:This returns the same tuples you were assigning to , , and so on, but can be used as many times as you like.  (Note that since it operates on only one record at a time, I changed its name and its parameter to the singular "record".  And I changed the separate  statements to a series  statements with a default case.)Your output tuples start with a number... and in Python tuples automatically sort by their first element, then their second, etc.  So you can just use the built-in  function to produce the output you want:If, in your real code, you don't have the numbers fortuitously located at the beginning of the tuple, or if your value category strings ( and so on) don't happen to sort alphabetically into the same order the numbers do, you can still use , but you'll have to provide it a key function to produce the sorting you want.A key function gets applied automatically to each element of the list to be sorted, converting it into something easier to sort, often something simple like an integer or string.  You could just return the -or-whatever string, if you didn't care about the numerical order.  My example below sorts on that string, then the number, then everything else, since I can't tell if those other fields are significant or not.Now, you just have to use it:Check the Sorted HowTo for more sorting tricks.Finally, I suggest you consider using a namedtuple for your data records --- it would make your tuples (and the code that uses them) much more self-descriptive and easier to work with.
Since you want the outputs in order, I don't think it'll be easy to do this in one loop -- it's probably best to have four separate loops. This might be a nice place for list comprehensions. We can generate four lists, one for each of the output formats, then glue them together and return the composite list. Assuming that you have a list of records that you're reading from:


Answer URL
https://docs.python.org/3/library/collections.html#collections.namedtuple
