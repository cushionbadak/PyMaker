Natural Text
I am trying to write a function eliminate that takes a string and 2 optional arguments. The first optional argument (bad_characters) takes a letter and the third argument (case_sensitive) takes a Boolean value. The function should take a string s and remove all instances of bad_characters. If case_sensitive is true, then the function should act case sensitive. If false, then it does not need to. This is what I have so far.I am having a hard time figuring out how to make the function remove upper case letters if needed. The function should also work if bad_characters is a list, tuple, or string.
Your problem is miss understanding about  because it just replace one character so you need to loop over  and remove them one by one.SO instead of using  you can just use  operand,for check the membership, and then remove  from your string :And as a more pythonic way for remove a special characters from string you can use str.translate method :
You can use a very handy  function here. Please note that the below code overrides  for clarity, but you can easily modify it to keep it unchanged.

You may use the (python2). string.translate(s, table[, deletechars])Delete all characters from s that are in deletechars (if present), and then translate the characters using table, which must be a 256-character string giving the translation for each character value, indexed by its ordinal. If table is None, then only the character deletion step is performed.Other mistakes in the code:Initialize  only with .  is . then  adds nothing. Remove it. is an assignment while you need a comparison .   is a boolean, so just use it is  or . is wrong. You cant compare a list to a character. use  instead.Here is the whole solution with corrections:



Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
