Natural Text
I am using python 3I would like to start from a list of nodes in 3 dimensions and build a grid. I would like to avoid the constructI am looking for a more compact version of the above lines. An iterator like , but that would iterate on all possible tuple in the grid
You can use something like  to construct your grid.  Assuming that  is properly vectorized, that should be good enough to construct If  isn't vectorized, you can construct a vectorized version using .Also note that you might even be able to get away without using  through judicious use of :As pointed out in the comments,  can be used as a shortcut instead of :Also note that with this stupid simple function,  isn't necessary and will actually hurt our performance a lot...
Say your func is something likeHook the lists you want to it using partial by doingNow just do a map supplying the indices and you're set!
With a simple function:and space defined by:This iteration is as fast any as any, even if it is a bit wordy:As  explains, you can generate 3 arrays that define the 3d space with: was written so it works with arrays just as well as with scalars, so:So if your function fits this pattern, use it.  Look at those  arrays, with and without . There are other tools for generating the  sets.  For example: is fast, especially when used as .  But the iteration mechanism isn't that important.  It's the repeated call to  that take up most of the time. actually uses , which can be used directly in: is best described in: https://docs.scipy.org/doc/numpy/reference/arrays.nditer.html.  It is best used as a stepping stone toward a cython version. Otherwise it doesn't have any speed advantages.  (Though with this , and 'external_loop' it is as fast as ).  Note that this doesn't need the indices (but see 'multi_index').And yes, there's .  Convenient, but not a speedy solution.


Answer URL
https://docs.python.org/3/library/functools.html
