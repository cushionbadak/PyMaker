Natural Text
I am taking a udacity course on python where we are supposed to check for profane words in a document. I am using the website http://www.wdylike.appspot.com/?q= (text_to_be_checked_for_profanity). The text to be checked can be passed as a query string in the above URL and the website would return a true or false after checking for profane words. Below is my code. It gives me the following errorTraceback (most recent call last):   File  "/Users/Vrushita/Desktop/Rishit/profanity_check.py", line 21, in        read_content()   File "/Users/Vrushita/Desktop/Rishit/profanity_check.py", line 11, in  read_content      check_profanity(content)   File "/Users/Vrushita/Desktop/Rishit/profanity_check.py", line 16, in  check_profanity      connection = urllib.request.urlopen("http://www.wdylike.appspot.com/?q="+text_to_read)  File  "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py",  line 163, in urlopen      return opener.open(url, data, timeout)   File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py",  line 472, in open      response = meth(req, response)   File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py",  line 582, in http_response      'http', request, response, code, msg, hdrs)   File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py",  line 510, in error      return self._call_chain(*args)   File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py",  line 444, in _call_chain      result = func(*args)   File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py",  line 590, in http_error_default      raise HTTPError(req.full_url, code, msg, hdrs, fp) urllib.error.HTTPError: HTTP Error 400: Bad RequestThe document that I am trying to read the content from contains a string  "Hello world" However, if I change the string to "Hello+world", the same code works and returns the desired result. Can someone explain why this is happening and what is a workaround for this?  
 accepts it, the server doesn't. And well it should not, because a space is not a valid URL character.Escape your query string properly with ; it'll unsure your string is valid for use in query parameters. Or better still, use the  function to encode all key-value pairs:
The below response is for python 3.*400 Bad request occurs when there is space within your input text.To avoid this use parse. so import it. If you are sending any text along with the url then parse the text. Check the explanation here - https://discussions.udacity.com/t/problem-in-profanity-with-python-3-solved/227328The Udacity profanity checker program - 
I think this code is closer to what the Lesson was aiming to, inferencing the difference between native functions, classes and functions inside classes:
I'm working on the same project also using Python 3 like the most. While looking for the solution in Python 3, I found this HowTo, and I decided to give it a try. It seems that on some websites, including Google, connections through programming code (for example, via the urllib module), sometimes does not work properly. Apparently this has to do with the User Agent, which is recieved by the website when building the connection. I did some further researches and came up with the following solution: First I imported  from  and created a class called  as a subclass of . Now I could create a "regular" User Agent by setting the variable  inside the  class. Then just created an instance of it and used the  method in place of  to open the URL. (It works fine, but I'd still appreciate comments, suggestions or any feedback, also because I'm not absolute sure, if this way is a good alternative - many thanks)


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode
