Natural Text
I'm trying to convert the following Unicode string to a list  [I threw two spaces in to make it fit...]:I use the following code to convert the string above, , to a list:This results in this though, and I can't seem to drop the  easily...My goal is to put this into some sort of list, or any other collection, that makes it easier to extract the information out of that...
You were close. There's something about string support in the documentation:And while the module doesnâ€™t directly support parsing strings, it can easily be done:Note the  around the string. Without those braces,  module seems to returns 1 row per element, but that seem undocumented.Since I didn't know about the part above from the documentation at first, my first "pragmatic" approach was to take the element inside the row using a list comprehension:yields:With this approach, we have to get rid of the empty strings (that's just a workaround), if we need them intact, we're stuck BTW:result:But after having read the documentation, the correct way to do this would be:result (note that the number of empty strings are respected now):If we want to remove the empty string, let's do it with a list comprehension, simpler than the other one:result:
Once you have the CSV row, you can simply useTo get the list avoiding the commas as elements (your approach is using quotes as string delimiters, it seems.Also, using csv library itself, this question could help.And the answer there says the quotes should be treated automatically, while this answer says you get the row as a list!
Since you only have one string, you need to put it in an iterable, like a , so the  will read it properly.Output:
If the first input is one string, you can use :If you want to flatten your result, you can use:
Have you tried string.split(',') ?    


Answer URL
https://docs.python.org/3/library/csv.html
https://docs.python.org/3/library/ast.html#ast.literal_eval
