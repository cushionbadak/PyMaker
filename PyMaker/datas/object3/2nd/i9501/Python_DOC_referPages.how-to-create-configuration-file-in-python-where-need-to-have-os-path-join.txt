Natural Text
I have a couple of Python modules, something like:I take an Excel file, process it and then create a .pdf report. It's very linear, procedural programming. In a main  module, I call the functions one after another:etc.I also have a  module where I store global variables and settings that are imported in , , and .However, along the execution, I am creating multiple intermediate files in the same folder where the Excel file is stored. In , it is very handy to have multiple variables that are created based on the location of the source Excel file:Then in the modules that actually do the work, I would like to import the  and then use the variables from this module:However, as I call  and supply as an argument the path to Excel file, I cannot store the path to Excel file in .If I use solutions like  or just plain  file, if I understand it right, I cannot take advantage of  and other Python functions for constructing paths.What would be an efficient way to organize the configurations in my particular case?
Could you create a class? in Configuration.py you would just declare a variable:In your main program you would declare a class and as soon as you have excel_file path available, create an instance:In every module importing Configuration you would be able to access Configuration.foo.scratch_folder and other class variables. You could also add a get method if you want to do validation, error handling or something else to your class variables.Hannu


Answer URL
https://docs.python.org/3/library/configparser.html
