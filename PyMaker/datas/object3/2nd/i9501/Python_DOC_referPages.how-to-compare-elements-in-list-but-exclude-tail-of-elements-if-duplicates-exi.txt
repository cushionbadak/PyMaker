Natural Text
I have looked around here, and found a ton of list comparing methods. but not one that cover my specific question...so here it goes:I have a list:I want to remove duplicates, but I don't want to include  or  or  with any number behind it for that matter.Then I want to make a new list, and if any duplicates are found in , I would like to make a new list with only one element of the duplicates, but I would also like the new element to include the numbers found in the duplicates.Essentially when the new list is created, I would like the difference to be like this:and the new list created after comparing elements in .The new list only have 1 element of but it has the combined numbers 1 and 3 added to the tail of the string, coming from the duplicates in .I know how to remove duplicates leaving out the index, I could do that with a if test on if  exists in the string.. the problem I'm facing is that I want to keep the numbers behind  and recreate 1 single element with all the numbers behind the  string.I hope this makes sense. I would greatly appreciate any help on this python problem.
An approach would be using an  (to keep the same order of ) with  and some list comprehensions like this:Output:


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
https://docs.python.org/3/library/stdtypes.html#str.split
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
