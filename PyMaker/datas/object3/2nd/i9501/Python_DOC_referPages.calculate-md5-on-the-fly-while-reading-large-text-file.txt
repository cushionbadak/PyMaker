Natural Text
Updated QuestionI know how to use python to create a md5 hash from a file http://docs.python.org/3.5/library/hashlib.html#hash-algorithms. I also know how to read a text file line by line. However my files can grow large, and it is inefficient to read the file twice from beginning to end. I wonder whether it is possible to read the data only once from disc, and like in a stream/pipe, combine the 2 tasks intelligently. May be something like:Initialize md5 open the file in binary moderead a chunk of data (e.g. buffer_size=65536) into a bufferupdate the md5 with the chunk just readprovide the buffer to another stream to continue processing the datause TextIOWrapper(?) to read the data again, but this time it is text read the text line by line. When the buffer is consumed, ask the underlying layer for more data, until EOF. It'll read more binary data, update md5, provide the new buffer ... and I can continue reading line by line (this is like: repeat from step 3 until EOF)upon EOF, I've processed all my text line by line, and have the md5The objective is to become more efficient, by reading the (large) files from disc just once, instead of twice, by intelligently combining binary md5 calculation and text based processing on the same file.I hope this explains it better. Thanks again for your help.Juergen
Yes, just create a single  object and update it with each chunk:If you need to also read the data as text, you'll have to write your own wrapper:either one that implements the  API (implement all stub methods that relate to reading), and draw data from the  object produced by the  call each time a line is requested. You'll have to do your own line splitting and decoding at that point.or one that implements the  API (again implement all stub methods), and pass this as the buffer to a  class.
This seems to work in python 3.6


Answer URL
https://docs.python.org/3/library/hashlib.html#hash-algorithms
https://docs.python.org/3/library/io.html#io.TextIOBase
https://docs.python.org/3/library/io.html#class-hierarchy
https://docs.python.org/3/library/io.html#io.BufferedIOBase
https://docs.python.org/3/library/io.html#io.TextIOWrapper
