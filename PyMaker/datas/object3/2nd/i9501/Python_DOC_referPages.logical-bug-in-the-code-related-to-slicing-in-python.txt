Natural Text
Consider the following piece of code that generates all subsets of size k of an array [1,2,3,...,n]:For example,  will generate all subsets of length 2 of [1,2,3,4]. There are two lines in the code that produce a list with the last element removed. I tried accomplishing it with  and creating a brand new list by slicing off the last element (i.e. ). The version with  produces the correct result. But, version with  doesn't. There is no runtime error; just a logical bug (i.e. incorrect result). I suspect this has something to do with creating a new list when doing slicing vs. keeping the same list with . I can't seem to understand why this is an issue. 
I didn't notice at first that your function is recursive (should've read your tags better).You're right, functionally the two are almost the same. Here is the exact same thing:The result of each of the above will be that you end up with a list containing the same elements. But while  and  mutate your original list, the middle one rebinds the name to a new list with the same elements. When you pass on this new list to the next recursive step, it will operate on its own copy rather than on the single list the previous recursive levels are working on.To prove this, you can call  after each of the above options, and see that the  changes in the rebinding case, while it stays the same throughout the mutating ones.


Answer URL
https://docs.python.org/3/tutorial/introduction.html
