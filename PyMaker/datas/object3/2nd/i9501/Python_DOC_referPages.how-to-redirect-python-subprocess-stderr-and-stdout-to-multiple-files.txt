Natural Text
This question already has an answer here:Python subprocess get children's output to file and terminal?                    1 answer                I just want to redirect stderr and stdout to multiple files.For example: stderr should redirected to file_1 and file_2.I am using below to redirect output to single file.Above thing redirects  and  to a single file.Can anybody tell the way to do same(redirect output to both files log_file and err_file e.g.  should redirect to both log_file and err_file and  should redirect to err_file and new_file)
You can create your own file-like class that writes to multiple file handles. Here's a simple example, with a test that redirects  and .After running that code, here's what those files contain:q1q3q2FWIW, you can even do this, if you like:Unfortunately, file-like objects like  can't be used with  because  accesses files via the underlying OS file descriptor, i.e., it wants something that the OS considers to be a file, so only Python objects that supply a valid  method can be used for 's file arguments.Instead, we can use  Python 3's  features to execute the shell command and to copy its stdout and stderr output concurrently.Firstly, here's a simple Bash script that I used to test the following Python code. It simply loops over an array, echoing the array contents to stdout and the array indices to stderr, like the previous Python example.multitest.bshoutputAnd here's Python 3 code that runs multitest.bsh, piping its stdout output to files q1 and q2, and its stderr output to q3 and q2.After running the code, here's what those files contain:q1q3q2The asyncio code was lifted from J.F. Sebastian's answer to the question Subprocess.Popen: cloning stdout and stderr both to terminal and variables. Thanks, J.F!Note that data is written to the files when it becomes available to the scheduled coroutines; exactly when that happens depends on the current system load. So I put the  command in multitest.bsh to keep the processing of stdout and stderr lines synchronised. Without that delay the stdout and stderr lines in q2 generally won't be nicely interleaved. There may be a better way to achieve that synchronisation, but I'm still very much a novice with asyncio programming.


Answer URL
https://docs.python.org/3/library/asyncio.html#module-asyncio
