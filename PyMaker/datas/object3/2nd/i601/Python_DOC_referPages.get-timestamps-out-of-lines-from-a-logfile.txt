Natural Text
I have a code that reads all the lines from multiple log files inside a directory using a given regex pattern:Here is the code:The above code gives me all the required lines from the log file with a time stamp at the end of each line......................and so on.Now I want to fetch all the last lines that contains the timestamp i.e.  (it may always be something different)and calculate the total and average time for all the timestamps collected from these log files.
Just add the timestamp1-getting to the regular expression you're using anyway.For that, use "capture groups".To get the numbers as format , you have two digits, a colon, two digits, another colon and another two digits. Quantifying that is hard, so you'll probably just write it exactly like that:  (if you want, you can  those , but to me it seems more complicated).Note the parenthesis around the digit matchers: they tell  to capture the contents separately to you and make it available as , starting at 1 and , a tuple. To make sure to match the end of the line (not in the middle), you add  (strictly, this shouldn't be neccessary, as  id "greedy", but it's clearer).If you add this to your regex, (removing the groups you already have if you don't need them; accounting for them otherwise), you get:Now, you can match that and get the time for every run like this:I said above quantifying is hard, but it can be done, I'm aware of a 2-step approach:You first get all the timestamp, and then process it separately. In this case, the added complication is too much, but, if you have something different, it might be good to keep in mind: captures you any length of two digits separated by colons, you can then simple  it and perform your calculations.1 it usually refers to a specific point in time, not a duration. As to not confuse you, I used "timestamp" in my answer. The actual timestamp in your log output is , not . 


Answer URL
https://docs.python.org/3/howto/regex.html#grouping
