Natural Text
I know if I had two lists of, say integers, I could simply do  to get the intersection. However, in my two lists, I have mutable objects, namely s. Node is a class that can be initialized with a value.Without having to do a double for-loop, is there any way to get the intersection of two lists based on their ids? I'm looking for something similar to .Update: By id I am referring to the built-in  function in Python which returns the address of where the object is stored in memory. So, I'm asking what is the Intersection of say,  and . Obviously I can't use the set intersection method above. I need to identify they are the same by accessing memory. If I can't try to identify them based on their value attribute because they may Node1 may have the same value as Node100, but they are not the same objects in memory.
There's no need to intersect two sets. In this case you can just check if the  exists in another set.The complexity of this code is . I'll explain this in following equivalent but more readable code:In total it's .There is also an alternative solution if you can make change to the  class by just defining the  and  method.
The solution you suggested will work.The reason this works is because despite being mutable, an instance of a class for which you did not define  or  will be hashed and compared by its  by default because it inherits those methods from .You can check this is true with the following experiment.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__hash__
https://docs.python.org/3/reference/datamodel.html#object.__eq__
