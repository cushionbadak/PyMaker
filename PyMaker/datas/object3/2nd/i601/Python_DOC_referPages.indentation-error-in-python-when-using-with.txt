Natural Text
This question already has an answer here:“inconsistent use of tabs and spaces in indentation”                    19 answers                I am not able to execute the following code in python:It gives me the following error:What is the reason for this?
From the documentation:Indentation is rejected as inconsistent if a source file mixes tabs and spaces in a way that makes the meaning dependent on the worth of a tab in spaces; a TabError is raised in that case.You state the body of the  statement is indented with 3 tabs. If that is true, it would appear the line with  itself is indented with 4 spaces. That means that if tab stops were set to just a single space each, the body of the  statement would no longer be indented relative to the first line, resulting in the .Consider this code (with tabs replaced by a ):If your tab stop was set to 8 characters, this would look like a  loop that contains an / statement. If the tab stop was set to 4 characters instead, it would look like a  loop with an  clause. Other tab stops would look like invalid uses of indentation.Python 2, by contrast, would replace tabs with spaces during parsing so that the indentation was a multiple of 8, and only then determine if the resulting indentation was consistent. This could lead to unintended indentation errors, as code could still parse but have a behavior different from its "visible" indentation. For example, the preceding example would be accepted by Python 2 as in  statement with an  clause, even though in an editor using tab stops of 4 spaces it would look like the  went with the .


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#indentation
