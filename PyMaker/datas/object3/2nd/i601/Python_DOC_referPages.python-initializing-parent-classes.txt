Natural Text
I am trying to figure how to use super() to initialize the parent class one by one based on condition. How do I use super() in  such that it only initializes  first, then I do some calc and call super() to initialize 
You cannot do what you ask for in , as  doesn't give you any control over which specific inherited methods get called, only the order in which they are called, and that is controlled entirely by the order in which the parent classes are listed.If you use , you need to use it consistently in all the classes. (That's why it's called cooperative inheritance.) Note this means that  cannot inject any code between the calls to  and . is particularly tricky to implement correctly when using , because a rule of  is that you have to expected arbitrary arguments to be passed, yet  doesn't take any arguments. You need each additional argument to be "owned" by a particular root class that is responsible for removing it from the argument list.The MRO for  is , so the call tree looks something like this: is called with no arguments resolves to , so  is called with  and .In ,  resolves to , so  is called with .In ,  resolves to , so  is called with no arguments ( being empty)Once  returns,  is set to Once  returns,  is set to Once  returns,  finishes upOK, the first sentence isn't entirely true. Since neither  nor , as currently written, use , you might be able to assume that an appropriate use of  will simply call one parent function and immediately return.I'm not entirely certain, though, that this doesn't introduce some hard-to-predict bugs that could manifest with other subclasses of , , and/or  that attempt to use  properly.
You can actually refer the base classes explicitly:


Answer URL
https://docs.python.org/3/library/functions.html#super
