Natural Text
I'm using Python 3.7.1 on macOS Mojave Version 10.14.1This is my directory structure: contains the following import statement, which I do not want to change: contains the following import statements:I need the second import in  because  needs access to a function in .My rationale behind the first import (Soft) was to facilitate the aforementioned import statement in .Contrary to my expectation, however, the import statement in  gives rise to:when I runfrom a directory above man/.Is there any way to resolve this error without changing the import statement in  and without adding anything to sys.path?Edit:  from the original version of the question changed to 
There are a couple of confusing requirements with your setup but I'll try to give you what you want.FIRST, if you want to be able to access man1.py from man1test.py AND manModules.py from man1.py, you need to properly setup your files as packages and modules.Packages are a way of structuring Python’s module namespace by using  “dotted module names”. For example, the module name  designates a  submodule named  in a package named ....When importing the package, Python searches through the directories on   looking for the package subdirectory.The  files are required to make Python treat the  directories as containing packages; this is done to prevent  directories with a common name, such as , from unintentionally  hiding valid modules that occur later on the module search path.You need to set it up to something like this:SECOND, for the "" error caused by  in man1test.py, the documented solution to that is to add man1.py to  since Mans is outside the MansTest package. See The Module Search Path from the Python documentation. But if you don't want to modify  directly, you can also modify : is initialized from these locations:The directory containing the input script (or the current directory when no file is specified).  (a list of directory names, with the same syntax as the shell variable ). The installation-dependent default.THIRD, for  which you said "was to facilitate the aforementioned import statement in man1.py", that's now how imports work. If you want to import Soft.SoftLib in man1.py, you have to setup man1.py to find Soft.SoftLib and import it there directly.With that said, here's how I got it to work.man1.py:man1test.pymanModules.pyTerminal output:As a suggestion, maybe re-think the purpose of those SoftLib files. Is it some sort of "bridge" between man1.py and man1test.py? The way your files are setup right now, I don't think it's going to work as you expect it to be. Also, it's a bit confusing for the code-under-test (man1.py) to be importing stuff from under the test folder (MansTest).


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages
https://docs.python.org/3/tutorial/modules.html#the-module-search-path
https://docs.python.org/3/tutorial/modules.html#the-module-search-path
