Natural Text
I have some strings like this:I want to take out the word after @ in a data frame and delete this word from its data frame.now I use this one for taking out the first word after @ but the result is not correct in all strings.and for removing the word after @ and writing the whole string without @ and the word, I will receive these:could you please help me with this problem? it would be better to not use any library. but if it is the only choice, it is ok.Thanks
Here is your code with testsfind_match(str)The core idea is to use regexp.We are looking for the first word which starts with  sign. It's easy to describe with next regexp => where  means match the exact character and  match 1 or more word characters(docs explanation for this). And also we use  to pick the resulting group, as we interested in a word without  we wrap  only=> sub_match(str)It uses the same idea for regexp but it's a little bit tricker because of the case with the first match of  character. For that purposes first, we match all chars which are not  ->  regexp part, and then we use the same regexp which we used in  but without group as we just need to replace the whole thing with . PSLink to launch the code in web  https://repl.it/repls/SinfulWhichSynergyHere you can test your python regexps and practice with 
Another implementation using regex, this gets the word following  from the string.this printsAlso it's good to note, re is a  standard python library so you are not using anything that isn't included with python already.If you don't want to use regex you can use split still but something like this will result in the same as the above:EditAs per your comment, to get the first occurence of the word following  for example the first word  in  just use list slicing (just be sure to make sure there is at least one word that matches the regex otherwise use a try except block)To get the word without the first occurence of the @word use sub I also included a space and question mark after it to remove a space so it looks right when printed. (if you want it to print all of the occurences removed just remove  from this method)I have everything I did in a repl.it give it a try
This answer just uses simple python functions, and tries not to be 'pythonic' since this can be confusing for beginners.Basically it looks for an  in the sentence with , which returns the location index of the first occurrence of '@', or .  One of the things not mentioned in the OP's question, is what constitutes an "@word" - more importantly where does it stop.  I added the  constant to hold all the letters that denote the end of a word.  So the function finds an "@word" from the first  and up to the first character in .One other point to note, is that there is no test case where there is no '@' in the sentence.Giving the result:


Answer URL
https://docs.python.org/3/library/re.html#index-31
https://docs.python.org/3/library/re.html
https://docs.python.org/3/library/re.html#re.sub
