Natural Text
This question already has an answer here:What does -> mean in Python function definitions?                    4 answers                I have found the following python function definition:I don't quite understand 'List[str]' and -> 'None'. I have found that the arrow is a function annotation but I couldn't find anything useful and understandable for List[str].Is it just an annotation? or does it enforce that the type of parameter s must be a string array?
It's just python type hinting, You can learn more in PEP 484
The list[str] does not really play a role as long as the function is always supplied with an  value when it is called. I tried the function with  and it worked the same.About the arrow issue, just try it:Call:Then check the output:NoneNoneTypeMore info about the arrow here.
This is an instance of python3 type hinting. The use of  indicates that the function does not have a return statement.  is more interesting: The  part indicates it will return a list type, and its argument  indicates it is a parameterized type. In practice, python lists may contain any type of object, but in strongly-typed language a list is a homogeneous collection.Using this hint both indicates to a caller of the function that  must contain only strings, thus avoiding any exceptions for whatever operation will be performed, and it also indicates to an intelligent IDE (e.g. PyCharm, VSCode) that the objects contained in the list have string instance methods for autocompletion indicators.The python interpreter does not do anything with this information in terms type checking, however the mypy interpreter will typecheck your code.For more information see PEP 484 and the typing module, which has also been backported to pre-3.5 python3 and 2.7.


Answer URL
https://docs.python.org/3/library/typing.html
