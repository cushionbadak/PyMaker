Natural Text
I'm writing a piece of code that needs to perform a function round-robin style for all keys/values in a dict. To simplify the problem, I have a dict:And I would like to call a function that takes each key value as input against every other key:(The function will output an integer.)And save the results:I have tried multiple for loops but am going in circles:Thank you for your time.
Use  and :Suppose you have a  that adds the first index of both lists together:Your result would be:
You can slightly modify your loop and turn it to a dictionary-comprehension to work like the way you need:Shamelessly taken from another answer (:p), suppose if  is:This outputs the expected:
I think you are asking about something like this:Which for me outputs: ......(it's long). I think you were maybe unaware of  which returns the keys and values for the dictionary. You can loop through two of these and so long as  you will not compare a key value pair with itself. You can then use the  to store these values in a dictionary. Once you've filled your temporary dictionary , which gets reset each loop you can save the values in the dictionary of dictionaries . I believe you can just change the function  and this code would work for you!
You can use the below code to call your my_func for each value without the repetition of previous keys.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/itertools.html#itertools.combinations
