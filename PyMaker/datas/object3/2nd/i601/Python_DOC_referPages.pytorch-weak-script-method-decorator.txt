Natural Text
I came across some code in an introduction to Word2Vec and PyTorch that I'm not quite familiar with. I haven't seen this type of code structure before.I'm a little confused about the following line of code.I may have inadvertently ignored this syntax in the past, but I don't recall seeing a variable being passed to a class instance before? Referring to the PyTorch documentation where  is defined, is this behaviour enabled with decorator  wrapping ? The code below suggests this may be the case?Why is the use of decorator  preferable in this case?
No,  has nothing to do with it.  follows the Python function call syntax, which can be used with both "traditional" functions and with objects which define the  magic function. So this codewill result in  being printed to stdout. Similarly,  is an object which you construct by telling it how many embeddings it should contain, what should be their dimensionality, etc, and then, after it is constructed, you can call it like a function, to retrieve the desired part of the embedding.The reason you do not see  in  source is that it subclasses , which provides an automatic  implementation which delegates to  and calls some extra stuff before and afterwards (see the documentation). So, calling  is roughly equivalent to calling .The  decorator has little to do with it. It is related to  compatibility, and  is a variant of  designed for internal use in PyTorch - the only message for you should be that  is compatible with , if you wanted to use it.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__call__
