Natural Text
I have two functions for newtons method to estimate roots of a number that the user inputs, but I am tasked with "packaging these functions into a module". I admit I am struggling to wrap my head around the concept of modules and can't really find any material that helps me. Have tried saving the functions separately as two different files and using the import command but can't seem to find any success.[Edit] Trying to get the previous_x to not display once the final estimation established.[Edit2] Still "None" appears for previous_x
Your idea of "saving the functions separately as two different files and using the import command" is correct. Here's one way to just that:::Then in your main module, named  you would import each module into separate namespaces at the top and reference them individually:
So yes this gets confusing when you start, I am with you on that.  So let me make it super easy. Functions  in python are containers with code in it. They run once and complete. Classes are instances that hold a bunch of functions (called methods) inside that can manipulate the data inside the class until the class is closed, or the program is done with the named instance.Modules are files with either functions or classes in them.  ALL modules are imported. Then they can be called like this:Any .py file can be imported.  A directory can be imported if it has a file named  inside of it.  The file can be empty.  Then the directory name becomes the module name, and the single files are submodules imported like this:That's about as easy as I can make it.  Any more questions, you need to look at the documentation.  But your best bet is to experiment, doing it the wrong way until you do it the right way is the best teacher.  


Answer URL
https://docs.python.org/3/tutorial/modules.html
