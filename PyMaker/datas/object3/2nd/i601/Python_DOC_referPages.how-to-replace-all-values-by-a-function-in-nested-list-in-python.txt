Natural Text
There are many suggestions but I can't make it stick. The closest solution I have below. The data is like:and a functionexecution:It gives empty array but print(x) gets the source as is. I'm close I guess. The problem is I don't know how to pass  at  as a integer not list.EDITOutpit:in the same format (nested). The custom function just takes each element (int) and returns its attribute from dict (letter). Another try:This part is a custom function:so G can be whatever. You can take it as For example: 
It seems like you are looking for a kind of  function that works for nested lists. Try this:This will convert the outer  to another , though. If you need that to be a tuple, or if there can be more tuples within, it should not be too hard to extend that function accordingly. Example:In your case, the mapping function  might be something like this, not entirely sure though. (You might also want to change your  data structure so you don't have to iterate all the items but can access item  directly.)
A simplified version, following your structure, might look like this:This results in the expected nesting:
You just need to make a recursive function to do the convert:
Define a custom mapperMapping dict will look like this{1: 'a',  2: 'b',  3: 'c',  4: 'd',  5: 'e',  6: 'f',  7: 'g',  8:  'h',  9: 'i',  10: 'j',  11: 'k',  12: 'l',  13: 'm',  14: 'n',  15:  'o',  16: 'p',  17: 'q',  18: 'r',  19: 's',  20: 't',  21: 'u',  22:  'v',  23: 'w',  24: 'x',  25: 'y',  26: 'z'}You can also use  function with custom mapperOutput


Answer URL
https://docs.python.org/3/library/functions.html#map
