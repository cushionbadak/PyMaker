Natural Text
Could anyone explain to me, why unzipping a zipped object (z1) leaves the initial object (z1) empty?
 returns an iterator, and you can only consume an iterator once.If the number of elements is small, you could create a list or tuple with the elements, or you could use  to create several independent iterators from the original:Result:
It doesn't delete it.If you execute , you will see that it prints a zip object. This is because  does not create a  or a , but rather an iterator.An iterator is something that generates values on demand. In this case, the zip object generates pairs taken from the input; namely, the  and  lists. To see this in action, after you assign , you can call , which causes  to generate the next pair and print it; in this case, .If you keep calling , it will iterate through the two lists until it reaches the end. At that point, it has no data left to read, so if you try calling  again, it will raise the  exception, which signifies that the iterable is exhausted.Conversely, if you did something like , you would be able to call  as many times as you wanted. However, if you did that and then tried to call , you would realise that  was empty. This is for the same reason as the above: building  from  has already exhausted it, so when  tries to get values from , it immediately hits  and so generates an empty .


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.tee
