Natural Text
I have a text file named corpus.txt containing the following 4 lines of textI want the output of the program to print a word and the number of times it occurs for example likeetc.This is the code that I have writtenI am getting the error Traceback (most recent call last):  File "F:\New folder\1.py", line 25, in     if uword[k] == lwords[x][y]:IndexError: list index out of rangeCan anyone tell me what is the problem here
You are having way too many different lists here. Also, don't rely on all those magic numbers for number of lines, maximum number of words/entries per list, etc. Instead of having one list for the words in each line, just use a single list for all the words. And instead of a second list for the counts, just use a dictionary to hold both the unique words and their counts:Afterwards,  looks like this:  For retrieving words and counts, you could also use a loop:Of course, you can do the same in fewer lines of code using , but I think doing it manually will help you learn more about Python.To be honest, I don't understand half of what any of the code below  is supposed to do. It seems like maybe you want to create a kind of co-occurance matrix for the words? In this case, too, I would suggest a (nested) dictionary, making it much easier to store and retrieve antries.The code is almost the same as before, but with another nested loop looping over the other words on the same line. For example, the output for  would be 
IndexError: list index out of range means one of your indexes tries to access something outside of your lists - you would need to debug your code to find where that is the case.Use collections.Counter to ease this task:Output:Related:Explanation of how nested list comprehension works?collections.Counterformatted string literals (f-strings)
Honestly, I don't get your code because you way more loops and unnecessary logic(I guess). So I am doing it in my own way.If you are in real hurry then use collections.Counter 
using dictionary you can do this


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/tutorial/inputoutput.html#formatted-string-literals
