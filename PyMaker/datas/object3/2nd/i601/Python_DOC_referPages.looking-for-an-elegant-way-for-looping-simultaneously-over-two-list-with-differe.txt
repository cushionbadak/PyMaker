Natural Text
I'm looking for the most elegant/short/pythonic way to iterate through two uneven lists simultaneously. If the shorter list ends at some point, it should start to iterate from the beginning.So far, I managed to do it with the , which I consider as ugly, and too long (from various reasons I need as short code as possible).The expected result should look like this. I'm achieving it with while loop (the code above). But I need to have as short code as possible:
 both lists, feeding the shortest one to  so it repeats indefinitely (until  ends):prints:(of course don't use  as  never ends, which would create an infinite loop)
You could do:Output
I've got something that is a bit cleaner than what you've got and doesn't require you know in advance which is larger.  No idea if this is the most elegant/short/pythonic way to do things but here goes:prints the following: 
If you don't know the sizes of your lists, use  to get it:Now you can  the shorter one, and :This won't necessarily print your items in the order that you may have originally wanted ( on the left,  on the right). To fix that, you can just compute the longer list by hand:You could make it a one-liner with
Use :


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
https://docs.python.org/3/library/itertools.html#itertools.cycle
