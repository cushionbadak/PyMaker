Natural Text
So, I am working on a project, and I have the following list :I want to run a code that will check whether the first character of each string is present in an other string, and select them to add them in a new list if yes. I know how to do it, but only for two strings. Here, I want to do it so that it will select all of those which start with the same string, and sort it through the number of original string there is . For example, I want to regroup by sublist of 3 strings (so, coming from the original list), all the possible combinations of strings which start with the same string. Also, I wish the result would only count one string per possible association of substrings, and not give different combinations with the same substrings but different orders.The expected result in that case (i.e when i want strings of 3 substrings and with  ) is: You see that here, I don't have , because i already have And when i want to regroup by sublist of 4, the expected output is I managed how to do it, but only when grouping by subset of two, and it gives all the combinations including the one with the same substrings but different order... here is it :  Thanks for your help !
You can use  and  for that task:Note that if the order of elements should only depend on the first character you might want to add another  to the  function. If the data is already presorted such that "similar" items (with the same first character) are next to each other then you can drop the  all together.Details puts the data into groups, based on their first character (due to , which selects the first item, i.e. the first character, from each string). Expanding groups, it looks like this:Then for each of the groups  computes all possible combinations of length 3 and concatenates them in the list comprehension (for groups with less than 3 members no combinations are possible):


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/itertools.html#itertools.combinations
