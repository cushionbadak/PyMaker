Natural Text
Basically I want to have two classes  and . The second  one would be a copy of the first with few more attributes. The  instances would be deleted after I get copies on I have solved this by passing attributes manually.It kinda works as expected but I feel it is not elegant. Is there any other (better) way to move class instance to other class?
For this specific case, assuming no use of , and that the three attributes used are in fact the sole attributes of , you could get away with a small cheat, changing:to: returns the  of  itself, which we then unpack with  into the name/value pairs as the keyword arguments to initialize  with.That solution is a little kludgy (as noted, it depends on not using  and not having any other attributes). Really, the nice way to do this is to define an alternate constructor for  that does the slog work for you, simplifying use for the caller:Yeah, it's the same code, but it's written once, and every call site can simplify to:which is both concise and self-documenting.
Inheritance sounds useful here:But I think more information would be needed for us to provide you with a more appropriate answer...


Answer URL
https://docs.python.org/3/library/functions.html#vars
