Natural Text
If one browses through the official Python docs, one can see function (or class) signatures of varying kinds.   For examplerandom.uniform(a, b)is simple to understand: You pass it two objects  and  (that are floating point numbers and it returns a random number from the interval between them). Similarly simple to understand is the signature fromSSLSocket.getpeercert(binary_form=False)where a default value for the argument is also specified, in case it's called without any argument.But then there are also functions with really weird signatures likemin(iterable, *[, key, default])orreadline.append_history_file(nelements[, filename])orcsv.register_dialect(name[, dialect[, **fmtparams]])What do these all mean? Is there some reference guide explaining how to read things like ?These example were just randomly taken from the official Python docs and don't cover all signature types I've come across. I need a general explanation how to read these signatures.
The asterisk in the example below means that key and default are keyword only arguments:min(iterable, *[, key, default])Parameter in square brackets are optional, so below filename is optional:readline.append_history_file(nelements[, filename])Argument with a single asterisk mean that the function can have any number of positional arguments, for instance:a_function(a, b, *args)Argument with 2 asterisks mean that the function can have any number of keyword arguments, for instance:class dict(mapping, **kwarg)Everything is explained in the Python documentation: Function definitions
NB: I know this has been asked before but cannot find the dup so if someone does, please bip me and I'll delete my answer... This is mainly a simplified EBNF notation.  means that the  functions takes a mandatory  argument, a facultative  argument and facultative arbitrary keyword arguments.
A common notation is that square brackets  represent optional values. I'm not sure where this originates from, it might be BNF grammar. represents any number of positional arugments. represents any number of keyword arugments. and  are legit python syntax. you can have a function signature looking like  for example. These are defined in the language reference. An easier reading might be the python tutorial.
Parameters in square bracket are optional. That means they have a default value which is used if you do not provide a value. If you read the function description, is usually explained.When you have nested brackets, it means that the argument in the inner bracket cannot be provided if at least one of the arguments in the outer bracket is not provided. For example:csv.register_dialect(name[, dialect[, **fmtparams]])means that:  is valid,  is valid,  is valid but  is not valid.* and ** are args and kwargs, here more reference on them.


Answer URL
https://docs.python.org/3/
https://docs.python.org/3/library/random.html
https://docs.python.org/3/library/ssl.html
https://docs.python.org/3/library/functions.html#min
https://docs.python.org/3/library/readline.html
https://docs.python.org/3/library/csv.html
https://docs.python.org/3/reference/compound_stmts.html#function-definitions
https://docs.python.org/3/reference/compound_stmts.html#function-definitions
https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists
