Natural Text
I'm working with generators-as-coroutines as described in the excellent triplet of presentations by David Beazley (at http://www.dabeaz.com/coroutines/) and I can't figure out how to type the decorator .  Here's what I have so far:Example of use, kind of abridged:Bold  marks where I'm unsure - and I'm also unsure about the type I defined .  (Problem is, without the (decorator) function  itself typed, I'm not sure  is analyzing any generator function with that decorator so that's why I'm unsure about .)I'm interested in the tightest type, something better than , so that when I compose chains of these coroutines  will give me nice warnings if the chain isn't set up right.(Python 3.5 if it matters.)
As a more specific way, here are few things you can do:Use  type instead of question marks.Use  for  and drop the .Coroutines return a generator and the return type could be a  or one of its supertypes The reason that you should use callable instead of question marks is that  is supposed to be a callable object at first and that's why you're wrapping it with a decorator. The  will be created after calling the object and the return type is/should be obviously a callable object as well.Note: As it's also mentioned in documentation, if you want to use a more precise syntax for annotating the generator type you can use the following syntax:Read more: https://docs.python.org/3/library/typing.html#typing.Generator


Answer URL
https://docs.python.org/3/library/typing.html#typing.Generator
https://docs.python.org/3/library/typing.html#typing.Generator
