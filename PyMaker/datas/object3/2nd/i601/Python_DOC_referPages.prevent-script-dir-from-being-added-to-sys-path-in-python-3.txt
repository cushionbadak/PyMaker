Natural Text
Is there a way to prevent the script's directory from being added to sys.path in python3? I'm getting import conflicts due to the fact that imports are relative in python. A legacy project I'm working with has a file called  in the root directory of the script which conflicts with the built-in . The custom build system that I use ends up creating symlinks to all the files and dependencies and in production, at runtime we use the  flag to ignore any system set  and set the path to what we want. But running tests/scripts from PyCharm doesn't work because of this conflict.
At the top of your script, you can try doing something like:then do your normal imports.Beware, this will cause all relative imports from your current directory to fail, potentially causing more problems than your legacy With regards to your second question, whether or not there's anything that can be done to prevent the directory from being added to  in the first place, the short answer is no. From the Python 3 docs on "module search path" :sys.path is initialized from these locations:The directory containing the input script (or the current directory when no file is specified).PYTHONPATH (a list of directory names, with the same syntax as the shell variable PATH).The installation-dependent default.I suppose you could set up a symlink from your current working directory to another directory, keep your actual script there, and point the symlink at it. Also from the above docs (emphasis mine):On file systems which support symlinks, the directory containing the input script is calculated after the symlink is followed.


Answer URL
https://docs.python.org/3/tutorial/modules.html#the-module-search-path
https://docs.python.org/3/tutorial/modules.html#the-module-search-path
