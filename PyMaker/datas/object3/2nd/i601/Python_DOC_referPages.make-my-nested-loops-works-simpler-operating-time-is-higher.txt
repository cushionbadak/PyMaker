Natural Text
I am a learner in nested loops in python.Below I have written my code. I want to make my code simpler, since when I run the code it takes so much time to produce the result.I have a list which contains 1000 values:I am storing the element no 1 in another listI created a temporary list called temp and a numpy array for iteration through Loop:Loop operation:I am comparing the  element available between the range of 30000 before and after  element, that is `range(Brake_index_values[0]-30000, Brake_index_values[0]+30000).If the  available between the range, I should ignore that element and go for the next element  and follow the same process as before for  & If it is available, store the Value, in  thorough append operation. In other words :(Lets take 3 values a,b & c. I am checking whether the value b is in range between (a-30000 to a+30000). Possibility 1: If b is in between (a-30000 to a+30000) , neglect that element (Here I am storing inside a temporary list). Then the same process continues with c (next element) Possibility 2: If b is not in b/w those range put b in another list called original_top_brake_index(this another list is the actual result what i needed)The result I get:It is working, but it takes so much time to complete the operation and sometimes it shows MemoryError.I just want my code to work simpler and efficient with simple operations.
Try this code (with numpy):    Note: you can probably make it even more efficient, but this already should reduce the number of operations significantly (and doesn't change much the logic of your original code)
We can use the  module to shorten the elements we actually have to lookup by finding the smallest element that's greater or less than the current value. We will use recipes from hereLet's look at this example:Which gives us:There might be another, more mathematical way to do this, but this should at least simplify your code.


Answer URL
https://docs.python.org/3/library/bisect.html#searching-sorted-lists
