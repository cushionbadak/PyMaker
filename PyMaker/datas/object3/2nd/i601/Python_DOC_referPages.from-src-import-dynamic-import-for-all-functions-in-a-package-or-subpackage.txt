Natural Text
Goal:I want to be able to dynamically import all functions in a sub-package with 'a direct call'Usage:my project:  has just one function:  has just one function: and finally : Comments: if my  is something like thisI will be able to call  or  but not  or if my  is something like this:I will be able to call  or  but for each new sub package I will have to modify my Assuming that  is not the most pythonic method, and assuming that it could be very dangerous to have direct calls due to possible naming conflicts such as  and ,  is there any method to reach my goal?
Personally, I prefer to keep things explicit, and just import names that are part of the package API into  explicitly. Your project won't change so rapidly that dynamically importing everything into the  is going to be a time saver.But if you want to do this, then you have a few options here. If you need to support Python versions older than 3.7, then you can update the package namespace by poking at the  dictionary. List all  files and import them using  (or with  if you need to support Python versions before 2.7):The above keeps the namespace clean; after the  function has run it is removed from the package. It uses the  global to determine the current path and finds any sibling  files from there.If you only need to support Python 3.7 and up, you can define module-level  and  functions to implement dynamic lookups.Using those hooks in your package  file could look like:


Answer URL
https://docs.python.org/3/library/functions.html#globals
https://docs.python.org/3/library/importlib.html#importlib.import_module
https://docs.python.org/3/library/functions.html#__import__
