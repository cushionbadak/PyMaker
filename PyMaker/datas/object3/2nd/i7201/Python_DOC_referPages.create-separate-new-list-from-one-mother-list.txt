Natural Text
I am trying to do a script that read a seismic USGS bulletin and take some data to build a new txt file in order to have an input for other program called Zmap to do seismic statisticsSO I have the following USGS bulletin format:this has many seismics events, so I did the following code which basically tries to read, split and save some variables in list to put them all together in a final *txt file.From the USGS catalog I'd like to take the: Latitude (lat), longitude(lon), time(tiempo), depth (prof), magnitude (mag), type of magnitude (t_mag), with this part of teh code I took the variables I needed:but I had some troubles with the tim, so I applied my newbie knowledge to split the time from  to .Now I am suffering trying to have in one list the year () in other list the months (), in other the day ([]), in other the hour ([]), and the minutes with seconds merged by a point (.) like () or (), so I tryied to do this (to plit the spaces) and no successno success because i got this result:can you give me a hand in this part?, or is there a pythonic way to split the date like I said before.Thank you for the time you spent reading it.best regards.Tonino
suppose our tiempo2 holds the following value extracted from the csv : here we used the zip function to zip years, months, days, etc ...I applied the conditional mapping for each item to an int if the index of the list is not the last otherwise to a float
I would suggest using the  function to parse the time string into a Python  which is a . That means you can access any attributes you want using  notation.Here's what I mean:You could process a  of time strings by using a  loop as shown below:Output:
Another solution with the iso8601 add-on ()Edited 2017/8/6 12h55IMHO, it is a bad idea to split the  timestamp objects into components (year, month, ...) in individual lists. Keeping the  timestamp objects as provided by  could help to compute time deltas between events, check the chronological order, ... See the doc of the  module for more https://docs.python.org/3/library/datetime.htmlHaving distinct lists for year, month, (...) would make such operations difficult. Anyway, if you prefer this solution, here are the changes


Answer URL
https://docs.python.org/3/library/datetime.html
