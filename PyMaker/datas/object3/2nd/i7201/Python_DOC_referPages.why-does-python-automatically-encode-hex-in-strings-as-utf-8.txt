Natural Text
I have been using python to do ascii-to-binary translations and kept running into issues with parsing the result. Eventually I thought to look at what the Python commands were generating.There seems to be a rouge  inserted in the output (for example):Indeed this happens regardless of where such bytes are used:On a hunch, I poked around at UTF-8 and sure enough,  is encoded as . Apparently, Python takes the liberty of assuming by  I actually meant the encoding for . Is there  a way to change this default behavior or otherwise explicitly dictate my intention of including the singlar byte  and not the UTF encoding?
Python 3 does the right thing of inserting a character into a  which is string of characters, not a byte sequence.UTF8 is the default encoding. If you need to insert a byte, a different encoding where that character is represented as a byte is needed.PYTHONIOENCODINGIf this is set before running the interpreter, it overrides the encoding used for stdin/stdout/stderr, in the syntax  encodingname:errorhandler. Both the encodingname and the :errorhandler  parts are optional and have the same meaning as in str.encode().
If you want to output raw bytes in Python 3 you shouldn't be using the  function, since it's for outputting text in your default encoding. Instead, you can use .ASCII is a 7 bit encoding, so if your so-called ASCII contains characters like  it's not legal ASCII. Perhaps your data is actually encoded with iso-8859-1, aka latin-1, or it could be the closely-related Windows variant cp1252. To do this kind of thing correctly you need to determine the actual encoding that was used to create the data.If you want to output  and have the hex dump look like this:You can doThis works because Latin-1 is a subset of Unicode. Here's a quick demo:outputHowever, if you're actually working with binary data then you shouldn't be storing it in text strings in the first place, you should be using , or possibly . The sane way to produce the  bytes string from my previous example is to do And if you have a  object like  you can dump those bytes to stdout with 


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes-objects
