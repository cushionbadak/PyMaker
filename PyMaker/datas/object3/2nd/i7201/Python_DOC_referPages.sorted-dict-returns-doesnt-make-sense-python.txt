Natural Text
I have been debugging a program I have been trying to get running correctly, and it all comes down to the first line of code as below. I have a dictionary of keys (string) and values (integer). I am trying to sort these in place in ascending order so that I can get the smallest element. However the order of the returned values doesn't make sense. It is not returning the smallest first, in fact it returns the largest (even though documentation clearly says it should be in ascending order). It is not in alphabetical order either, even though the first string is AAAAA..AAA - but it doesn't follow an alphabetical order. I am not even sure how to access the elements of what is returned by sorted and what type it is. According to the errors I have received while experimenting, it is a "list". How can I solve this problem? This one line is making the computation all wrong. 
What you wrote returns a list of the dict's keys, sorted by the value of the 2nd character of the keys ( picks out the 2nd character of key ).It's not clear you want instead.  If, e.g., you want the keys sorted by their associated values, then here's one way to do it:Another way to do exactly the same, faster but perhaps less obvious:
I have a dictionary of keys (string) and values (integer). I am trying to sort these in place in ascending order so that I can get the smallest element. You can make a list of keys sorted by the values by using  as the key-function:If writing __getitem__ looks too weird, you can still use a lambda for the key-function:  .FYI, if all you want is the smallest element, there is no need to do a full sort.  The min() function would be cleaner, clearer, and much more efficient:
I think you will see interesting results by changing:to: This will sort your keys based on the entire key and not just the second character.


Answer URL
https://docs.python.org/3/glossary.html#term-key-function
https://docs.python.org/3/library/functions.html#min
