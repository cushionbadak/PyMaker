Natural Text
I have read my materials, which tell that a python iterator must have both  and  method, but an iterable just needs . I check a list and find it has no  method. When using  on it, it will become an iterator. This means that  will add a  method to a list to convert it to an iterator? If yes, how does this happen? 
No.  returns an iterator, it does not convert the list into an iterator. It doesn't modify the list at all, and certainly, the list does  not get a  method.Lists are iterables, not iterators. They implement a  method, thus they are iterable:But not , thus they are not iterators:Iterators themselves are iterable, by definition, since they implement  as well. Consider:Most iterators should simply return themselves when you use  on them:Indeed, this is a requirement of the iterator protocol: "Iterators are required to have an  method that returns the  iterator object itself so every iterator is also iterable and may be  used in most places where other iterables are accepted."Note, again, they are the same iterator:So an iterator implements  and , an iterable just means that it implements . What is returned by  is an iterator, so that must implement .


Answer URL
https://docs.python.org/3/glossary.html#term-iterator
https://docs.python.org/3/glossary.html#term-iterator
