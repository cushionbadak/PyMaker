Natural Text
I have a set of functions in python that gets the same 2 parameters + other parameters. I waned to create a decorator that replace the need to call with the first 2 parameters by pushing the parameters before calling the function:But if I omit the parameters then the decorator can't call it either and if I leave them then the caller need to specify them as well.  anyway to solve this?Can I do something with args* but still have named parameters for specificParam?Also, How can I reference param1 and param2 inside myMethodA 
It sounds like you may want .  It returns a new function with some parameters already specified:
You can add those two parameters when you call the function in the decorator's wrapper function as part of the . All decorated functions will automatically have those two parameters passed as keyword arguments before making the call:You can drop the  part if all you'll be passing from the main function call are the specific parameters for each function.
I'd recommend you go old school, and just reassign the names using :Then elsewhere (or lower in the file, if you like) you can do this:
Sounds like you need , to pre-populate the "constant" parameters:


Answer URL
https://docs.python.org/3/library/functools.html?highlight=functools.partial#functools.partial
