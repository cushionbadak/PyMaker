Natural Text
I have a string like this:And I can't remove the .Initially this string was a bytes object but then I converted it to stringI tried with  and with  but nothing...
The issue is that the string contains a literal backslash followed by a character.  Normally, when written into a string such as  these are interpreted as escape sequences, with  representing a carriage return (0x0D in the ASCII table) and  representing a line feed (0x0A).Because Python interprets a backslash as the beginning of an escape sequence, you need to follow it by another backslash to signify that you mean a literal backslash.  Therefore, the calls need to be  and .You can see the list of escape sequences Python supports in the String and Byte Literals subsection of the Lexical Analysis section in the Python Language Reference.For what it's worth, I would not use  to remove the sequence.   removes all characters in the string (it treats the string as a set, rather than a pattern match).   would be a better choice, or simply using slice notation to remove the trailing  off the string when you detect it's present:
Alternate solution with just slicing off the end, which works better with the bytes->string situation:Or hell, even a regex solution, which works better:
You could also determine the length of the string say 20 characters then truncate it to 18 regardless of the last two characters or verify they are the characters before you do that.  Sometimes it helps to compare the ascii value first pseudo logic:if last character in string is tab, cr, lf or ? then shorten the string by one.  Repeat till you no longer find ending characters matching tab, cr, lef, etc.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
https://docs.python.org/3/library/stdtypes.html?highlight=strip#str.strip
