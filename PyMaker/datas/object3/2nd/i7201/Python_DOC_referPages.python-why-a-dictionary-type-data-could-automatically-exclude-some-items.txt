Natural Text
I created a dictionary containing six items as below:But when I check the dictionary I found that the items  have been excluded.However if I create a new dictionary with the excluded items.It becomes normal.Could anybody explain me why is that?
You cannot have duplicate keys but you can have multiple values. In other words,  each key is unique. So each time you assign new values to the same key, you override the previous values of the key.A way to assign 2 values (or lists) like in your example can be the following:ResultFinally, you can access each key as follows:ResultThis seems to be what you want to do.Hope this helps.
The thing with dictionaries in Python is that each key is unique. That is, when you add an existing entry the previous value stored is overwritten by the new one.When you typed:You gave the dictionary two values for the keys  and . That is you asked the dict to change the value previously stored.I hope my answer was clear enough :)EDIT: format & language
In the  you cannot have duplicate keys. If any duplicate key is present into the ,   automatically replaces the first values by the new ones.  behaves as  key.In your example:Then your  will be:I think, It will be helpfull .
As Python Documentation says It is best to think of a dictionary as an unordered set of key: value pairs, with the requirement that the keys are unique (within one dictionary). A pair of braces creates an empty dictionary: {}. Placing a comma-separated list of key:value pairs within the braces adds initial key:value pairs to the dictionary; this is also the way dictionaries are written on output.The main operations on a dictionary are storing a value with some key and extracting the value given the key. It is also possible to delete a key:value pair with del. If you store using a key that is already in use, the old value associated with that key is forgotten. It is an error to extract a value using a non-existent key.Reference : https://docs.python.org/3/tutorial/datastructures.html


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
