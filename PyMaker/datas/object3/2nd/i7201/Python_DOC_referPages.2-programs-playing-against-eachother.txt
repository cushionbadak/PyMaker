Natural Text
I'm currently writing 2 programs in python that must play a number game against each other. One program picks a number between 1 and 100. Then the other attempts to guess what that number is. Each time the guesser gives it's guess, the chooser then replies with 'too big', 'too small', or 'you got it'. According to what the reply is the guesser adjusts its next guess accordingly.Here's my code for the program that chooses:And here's the code for the program that gives the guesses:My main question is how to get the 2 programs to interact with eachother. I'm currently trying to use a method of having them communicate through a text file called response, but surely there's an easier way?The main problem I'm having it seems is that when chooser tries to get the variable g from guesser it can't because there's no response currently in response.txt meaning switch = int ('')Traceback (most recent call last):   File  "C:\Users\Jash\Downloads\guesser.py", line 8, in       switch = int (infile.readline()) ValueError: invalid literal for int() with base 10: ''And yes, they must be 2 separate programs. And it must be done in python.
It would be a lot easier to put both players in the same program.If you really want to use 2, though, you can run them like this on unix or linux:This will effectively pipe each program's output into the other's input.  Of course anything you want to see should be printed to standard error.
You can open the child scripts from your main script like this:
as mentioned by Matt Timmermans:if it is not absolutely neccessary, put the whole logic into one program:please note that the random.randint(...)-calls of createNum and guessNum are only placeholders for your preferred implementations of it.see also: random.randintas for your question how to execute multiple scripts.say you have 3 files:you start , it does something, calls  and after that calls  with the result.you can do it this way:again: if you write all three of the files, consider to put them together into one. this method is good if you have to call third party software or something like that (e.g.:)
Create a third, referee program. Take two arguments - the names of the picker and the guesser programs. Have the referee program open read/write pipes to the two programs, and using either the  or the  module.


Answer URL
https://docs.python.org/3/library/random.html#random.randint
https://docs.python.org/3/library/subprocess.html
