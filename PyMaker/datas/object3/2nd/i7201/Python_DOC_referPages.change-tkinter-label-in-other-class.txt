Natural Text
Can somebody help me please, I'm making an exercise about class and running task on other thread then tkinter. I want to change the label in another class. Can't get my script to work.I tried different things but I'm having some troubles with understanding the inheriting from classes and the threads, so this is just an example to learn more about it.
As I said in a comment,  doesn't support multithreading itself, but you can do it as long as only one thread, usually the main one, uses (or "talks") it.If you want to affect what the GUI displays, the other thread(s) must communicate somehow with the GUI thread. This is often done through a , but in this relatively simple case it can be done through a  variable provided that concurrent access to it is controlled by some meansâ€”sharing memory space (i.e. global variables) is one of the advantages of multithreading vs multitasking, but it has to be done and done correctly.An easy way to share a resource like this is by using a  dedicated for that purpose. (See the Wikipedia article Lock (computer science) for more details.)All references to this shared resource (the  flag) should only be done after "acquiring" the  and "releasing" it afterwards. Fortunately it's trivial to do this using a Python  statement (as shown below).Another crucial aspect of the multithreading problem is how any information exchanged between the two threads is processed. In this case I choose to make the  thread poll the running flag, watch for changes, and update any affected widgets accordingly. This can be done by using the universal widget method  which tells  to schedule a future call (inside the 'mainloop') to a user-supplied function or method and to pass it certain arguments. To get this to happen repeatedly, the called function can reschedule itself to run again by calling  before it finishes.Below is a modified version of your code that does these thing. Note that  never calls  or touches any of its widgets, which is why it works.


Answer URL
https://docs.python.org/3/library/queue.html#
https://docs.python.org/3/library/threading.html#lock-objects
https://docs.python.org/3/reference/compound_stmts.html#the-with-statement
