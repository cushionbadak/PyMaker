Natural Text
While parsing attributes using , my  is not .How is this possible?How to check if a static method is callable?I provide below a more detailed example:Script Result for python2Same result for python3
The reason for this behavior is the descriptor protocol. The  won't return a  but a normal function while the  in  is a  (and  is a descriptor).In short  isn't the same as  in this case - but rather  (see also the section in the documentation of the Data model on descriptors):In your case I would check for callables using  (which knows about descriptors and how to access them) instead of what is stored as value in the class :Which prints (on python-3.x):The types are different on python-2.x but the result of  is the same:
You can't check if a  object is callable or not. This was discussed on the tracker in Issue 20309 -- Not all method descriptors are callable and closed as "not a bug". In short, there's been no rationale for implementing  for staticmethod objects. The built-in  has no way to know that the  object is something that essentially "holds" a callable. Though you could implement it (for s and s), it would be a maintenance burden that, as previously mentioned, has no real motivating use-cases. For your case, you can use  to perform a look-up for the object named ; this is equivalent to performing . , after finding the staticmethod object, will invoke its  to get back the callable it's managing. You can then use  on that. A nice primer on descriptors can be found in the docs, take a look at Descriptor HOWTO.


Answer URL
https://docs.python.org/3/library/stdtypes.html#object.__dict__
https://docs.python.org/3/library/functions.html?highlight=staticmethod#staticmethod
https://docs.python.org/3/library/functions.html?highlight=staticmethod#callable
