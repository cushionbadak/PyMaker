Natural Text
This is a task I could have used a dict for, if it weren't for the fact that I will need to store much more data than can fit in my 4 GBs of RAM. I'm also doing other memory-demanding stuff in the same program, so the lower mem-requirements, the better.I just want to store many stringscheck whether a string is included or not in the collectionIs there a Python way of doing this? I'm using 3.3 so berkelydbs are out.It also needs to give exact answers, so no Bloom-filters.
If the data won’t fit into your memory, then you won’t have a choice, you will have to store some of that data temporarily in an external storage (your disk). As you correctly guessed, file access is expensive and slow, so the thing is to keep the disk operations at the minimum.As you seem to have a need for a key-value store (as you have a dict), it would be a good idea to split that up in a way so that related data is in a similar place which you then can quickly read block-wise into the memory for calculations.But how to do that completely depends on what you are actually doing, and without further information we cannot really help you there.Btw. as you mentioned Berkeley DB, there are actually bindings for Python 3.2, and I wouldn’t be surprised if they worked on Python 3.3 too. Otherwise 3.3 is still rather new, so an update might be coming. If you are looking for an alternative key-value storage database, maybe give redis a try. I haven’t tried the Python bindings though.
use sqlite3 it fits perfectly your needsif you abolutly needs fast lookup you can use marisa tree see http://kmike.ru/python-data-structures/ but first you have to confirm that it's a bottlenneck in your application. Especially cache can do wonderful things with disk database. Don't optimize too early. profile.
Well if you just need to store it, why keep it in memory, use some kind of database.
Just use the standard  module to create a persistent dictionary.


Answer URL
