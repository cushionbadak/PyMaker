Natural Text
Let's have a CSV table with row and column headers, e.g.:I want to get row and column headers, i.e.:Of course I can do something like...but it does not look Pythonic enough.Is there a neater way for this natural operation?
Take a look at .If the fieldnames parameter is omitted, the values in the first row of the csvfile will be used as the fieldnames.Then you can just do . This, of course, only gives you column headers. You would still have to parse the row headers manually.I think your original solution is pretty good, however.
Now I see that what I want is the easiest (and the most robust) to accomplish with Pandas.And if I want, it is easy to extract:Otherwise, in the "raw" Python, it seems that the method I wrote in the question is "good enough".
I am aware that this solution gives you another output format than the requested, butit is very convenient. This reads the csv line into a dictionary:
Without 3rd party libs (and if you can live with results being tuples from the  op):Gives you for ,  and :
Agree, pandas is the best I found too. I'm interested into read specific values of my dataframe. Here is what I did:And this is what it returns:Note that I can check row names with 'index' and column names with 'columns'. Also note that I can read a specific element of the 'dataframe' base on its row and column names, and that the values are still numeric, that why I added '+0.333' in the last print.I chaged the data file, I removed the quote chars (" ") and spaces after commas in the first row. Here you have 'easyEx.csv' file:Hope this can help =)


Answer URL
