Natural Text
I have a series with a MultiIndex like this:I'd like to get the s['b'] values where the second index ('') is between 2 and 10.Slicing on the first index works fine:But not on the second, at least by what seems to be the two most obvious ways:1) This returns elements 1 through 4, with nothing to do with the index valuesHowever, if I reverse the index and the first index is integer and the second index is a string, it works:
As Robbie-Clarken answers, since 0.14 you can pass a slice in the tuple you pass to loc:Indeed, you can pass a slice for each level:Note: the slice is inclusive.Old answer:You can also do this using:(It's good practice to do in a single ix/loc/iloc since this version allows assignment.)This answer was written prior to the introduction of iloc in early 2013, i.e. position/integer location - which may be preferred in this case. The reason it was created was to remove the ambiguity from integer-indexed pandas objects, and be more descriptive: "I'm slicing on position".That said, I kinda disagree with the docs that ix is:most robust and consistent wayit's not, the most consistent way is to describe what you're doing:use loc for labelsuse iloc for positionuse ix for both (if you really have to)Remember the zen of python:explicit is better than implicit
As of pandas 0.14.0 it is possible to slice multi-indexed objects by providing  a tuple containing slice objects:
The best way I can think of is to use 'select' in this case. Although it even says in the docs that "This method should be used only when there is no more direct way."Indexing and selecting data
not sure if this is ideal but it works by creating a maskEDIT : hayden's solution is the way to go


Answer URL
https://docs.python.org/3/library/functions.html#slice
