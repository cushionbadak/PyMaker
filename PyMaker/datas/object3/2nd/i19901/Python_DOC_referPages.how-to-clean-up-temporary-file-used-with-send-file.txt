Natural Text
I'm currently developing a server side json interface where several temporary files are manipulating during requests.My current solution for cleaning up these files at the end of the request looks like this: In this case, the cleanup takes lace in object.__exit__()However in a few cases I need to return a temporary files to the client, in which case the code looks like this:This currently does not work, because when I the cleanup takes place flask is in the process of reading the file and sending it to the client.Â¨How can I solve this?Edit: I Forgot to mention that the files are located in temporary directories.
If you are using Flask 0.9 or greater you can use the  decorator:EDITSince that doesn't work, you could try using  instead (this assumes that your files are small enough to fit in memory):Alternately, you could create the temporary files as you do now, but not depend on your application to delete them.  Instead, set up a cron job (or a Scheduled Task if you are running on Windows) to run every hour or so and delete files in your temporary directory that were created more than half an hour before.
The method I've used is to use weak-references to delete the file once the response has been completed.And in the flask call I had:This is quite general and as an approach has worked across three different python web frameworks that I've used.
I have two solutions.The first solution is to delete the file in the  method, but not close it. That way, the file-object is still accessible, and you can pass it to .This will only work if you do not use , because it uses the filename.The second solution is to rely on the garbage collector. You can pass to  a file-object that will clean the file on deletion ( method). That way, the file is only deleted when the file-object is deleted from python. You can use  for that, if you don't already.
It's a bit late, but this is what I did using madjar's suggestions (in case anyone else comes across this). This is a little helper function that I use (it takes a PyExcelerate Workbook object as parameter) which you could adapt to your case. Just change the way you create/build your tempfile.TemporaryFile and you're set! Tested on Windows 8.1 and Ubuntu 12.04.


Answer URL
https://docs.python.org/3/library/weakref.html
