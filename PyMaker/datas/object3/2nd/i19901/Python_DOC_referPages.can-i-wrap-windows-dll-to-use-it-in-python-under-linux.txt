Natural Text
I wonder if it is possible to wrap Windows DLL (driver for specific hardware) to use it from Python under Linux. If yes, what would be the best approach?
Disclaimer: Depending on the context, the following is certainly NOT the best approach. It is just ONE possible approach that kind of fits the description.I wrote a small Python module for calling into Windows DLLs from Python on Linux. It is based on IPC between a regular Linux/Unix Python process and a Wine-based Python process. Because I have needed it in too many different use-cases / scenarios myself, I designed it as a "generic"  module drop-in replacement, which does most of the required plumbing automatically in the background.Example: Assume you're in Python on Linux, you have Wine installed, and you want to call into  (the Microsoft C runtime library). You can do the following:Source code (LGPL), PyPI package & documentation.It's still a bit rough around the edges (i.e. alpha and insecure), but it does handle most types of parameters (including pointers).I'd be really interested to see how it behaves and performs when used with a hardware driver. Feedback is highly welcomed!


Answer URL
https://docs.python.org/3/library/ctypes.html
