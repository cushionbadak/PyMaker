Natural Text
I would like to write a function in Python that will take arguments just like  does but instead of printing the strings to stdout, I would like to write the strings formatted into a text file.How do I define the arguments for such a function arguments to accept the string formatting, I'm wondering?I am looking for something that would replacewithbut the % rguments should also be supported.So far I have only come up with this:which works fine for a simple string but i don't think it'll take the % arguments nor will I be able to call it like logger "TEST"
You can use the "print chevron" statement to do what you want like this:See the documentation for the print statement.Of course, it probably is better practice to use the  function as Martijn Pieters suggests.UpdateIf I change your  function to use the print chevron syntax, I get this:If you call this function like:You'll have a line in your log file that looks like this:So you can use this with the  formatting (although you really should take a look at the new-style formatting), but you won't be able to call it like:That's because print is a simple statement, which is a language level construct, and you can't add those to Python.
 already lets you do that:If you are on python 2, use  to get the same functionality.You can always implement a function with the same arguments as the  function and use that as a replacement, or use wildcard arguments (, ), then add the  keyword argument as needed. You can always reach the original builtin  function via the  structure:
Since by default  outputs to , you could create a  as described in this answer of mine, which would allow you to use regular , regardless of whether you're using the statement or a function version.


Answer URL
