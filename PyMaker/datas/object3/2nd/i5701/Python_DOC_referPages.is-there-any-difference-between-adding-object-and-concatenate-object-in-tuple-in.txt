Natural Text
In a video lecture on pluralsight, they said that you cannot add a new element to tuple but you can concatenate new object to a tuple.
The original tuple is still unaffected. You get a new tuple that contains the values of both tuples.Contrast this with a list, which allows you to add elements to it:
This comes down to  and  data types.Since a  is , it cannot change. Hence, you cannot add/append elements to the end of it. It works in the exact same way a  does.So, after defining a , all you can do is reassign that same (unchanged)   concatenated with another  to the same  name. This is different to how a  () works.To give some examples:
Tuples are one of Python's immutable sequence types.Tuples are immutable sequences, typically used to store collections of heterogeneous data (such as the 2-tuples produced by the enumerate() built-in). Tuples are also used for cases where an immutable sequence of homogeneous data is needed (such as allowing storage in a set or dict instance).
The other answers already gave some good examples, but mainly using different methods of "adding" for (mutable) lists and for (immutable) tuples. But it may be even clearer when using the same operation, i.e. , for both. This will add to the list (modify it), but it will create a new tuple, being a concatenation of the original tuple and the new values.


Answer URL
https://docs.python.org/3/library/stdtypes.html#tuples
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
