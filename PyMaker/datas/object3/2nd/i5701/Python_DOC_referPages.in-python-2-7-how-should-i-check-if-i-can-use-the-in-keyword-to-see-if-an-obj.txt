Natural Text
Before performing a test likeI would like to test if it's safe to use the  keyword on .   I believe that  will work in this usage if  has one of several methods such as  and .   Is there a test similar to the following I can use, but that checks for compatibility with  instead of containing ?Or should I just 
Note: I have made this answer a CW post simply to mark this question as answered. The real credit goes to juanpa.arrivillaga and Nick A, in the comments.It's easier to ask for forgiveness than permission looks to see of an object contains  first, then looks for , then finally looks for . While you could check for each of them, doing a  would allow  to do it for you, or to error if it can't. Here's the section that juanpa.arrivillaga linked to:6.10.2. Membership test operationsThe operators  and  test for membership.  evaluates to  if x is a member of s, and  otherwise.  returns the negation of . All built-in sequences and set types support this as well as dictionary, for which in tests whether the dictionary has a given key. For container types such as list, tuple, set, frozenset, dict, or collections.deque, the expression  is equivalent to .For the string and bytes types,  is  if and only if x is a substring of y. An equivalent test is . Empty strings are always considered to be a substring of any other string, so  will return .For user-defined classes which define the  method,  returns  if  returns a true value, and  otherwise.For user-defined classes which do not define  but do define ,  is  if some value  with  is produced while iterating over . If an exception is raised during the iteration, it is as if  raised that exception.Lastly, the old-style iteration protocol is tried: if a class defines ,  is  if and only if there is a non-negative integer index i such that , and all lower integer indices do not raise IndexError exception. (If any other exception is raised, it is as if  raised that exception).The operator  is defined to have the inverse true value of .


Answer URL
https://docs.python.org/3/reference/expressions.html#membership-test-details
