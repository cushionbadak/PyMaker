Natural Text
I need a thread-safe (atomic?) data structure in Python that can ensure the following:
As a high level programming language, Python is not particularly close to the processor that supports atomic operations like CAS.  In fact, the Python global interpreter lock prevents your threads from running at the same time.  This doesn't obviate the need for atomic operations of course (another thread could still be scheduled between the check and set) , but it does make Python look pretty unattractive for the CPU intensive applications that make atomic operations valuable.  There's perhaps one way to do it; Python can integrate with c library files.  So you could write C to perform CAS operations, maybe.  I think it would still be subject to the GIL .I usually use Python threads to handle concurrent blocking operations like parallelization of API calls.  In these cases other inter thread communication mechanisms make more sense than atomic operations on shared variables.  They're simpler to implement, easier to reason about, and, given the performance characteristics of Python, are fast enough.    


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
