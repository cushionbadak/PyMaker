Natural Text
I seem to have found out a weird bug in Python and I do not know if it exists already or is it something wrong that I am doing. Please explain.We know that we can zip two lists in python to combine them as tuples. We can again parse them easily. When I am trying to parse the same zipped variable more than once, Python doesnt seem to be doing that and it ends up giving empty lists []. The first time it will do it but more than once it wont.Example:Output:I have the solution to fix it which is by making multiple variables for the same zip i.e as below:Output:The solution is always possible if we dont care about memory.But the main question why does this happen?
 returns an iterator in Python 3. It produces only one tuple at a time from the source iterables, as needed, and when those have been iterated over,  has nothing more to yield. This approach reduces memory needs and can improve performance as well (especially if you don't actually ever request all the zipped tuples).If you need the same sequence again, either call  again, or convert  to a list like . You could also use  to create "copies" of a  iterator. However, behind the scenes, this stores any items that haven't been requested by all iterators. If you're going to do that, you might as well just use a list to begin with.
Because zip function returns an iterator.This kind of object can only be iterated once.If you want to iterate multiple times the same zip I recomend you creating a list or a tuple from it ( or )


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.tee
