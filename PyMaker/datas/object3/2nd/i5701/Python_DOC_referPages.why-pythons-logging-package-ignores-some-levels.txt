Natural Text
Exposition:Using the logging module in a 3.6.3 Python there are some misunderstood issues.At first, I create 2 logs with the standard config, without a name and level = 30, which is logging.WARNING.As the docs said, the log object cames without handlers, I change the log level to 10 (logging.DEBUG) and when I'm going to print|log with INFO (which is level=20), first, being in level 10 (beneath info level) the info doesn't logs and, finally, the log hasn't got any handlers, but the doc of https://docs.python.org/3/library/logging.html?highlight=logging#module-logging says :logging.basicConfig(**kwargs)Â¶ :Does basic configuration for the logging system by creating a  StreamHandler with a default Formatter and adding it to the root  logger. The functions debug(), info(), warning(), error() and  critical() will call basicConfig() automatically if no handlers are  defined for the root logger.So, my questions are, what I'm doing wrong? why is this caused? Can't I instantiate the log, set level for Root as log.setLevel(logging.INFO) and make log.info("poo") as I was doing until this issue?.Code:UPDATED:1UPDATED:2
I think the quoted documentation is not clear enough. When you click on the listed functions on the docs webpage, they are linked to functions like . You were using logger object methods with same names instead.


Answer URL
https://docs.python.org/3/library/logging.html?highlight=logging#module-logging
