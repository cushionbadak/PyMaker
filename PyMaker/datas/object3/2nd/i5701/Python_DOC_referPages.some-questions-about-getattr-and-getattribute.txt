Natural Text
The first demo: is , but the second demo: is , why? And  invokes , but don't invoke , does it mean  will prevent from invoking ?
The ,  and  methods are called for all attribute access (getting, setting and deleting).  on the other hand is only called for missing attributes; it is not normally already implemented, but if it is then  calls it if it could not otherwise locate the attribute, or if an  was raised by .You replaced the standard implementations of the 3 main methods with methods that do nothing but print and return  (the default in the absence of an explicit  statement).  is just another attribute access, and your  method returns , and never itself calls  or raises an .From the Customizing attribute access documentation:  Called when an attribute lookup has not found the attribute in the usual places (i.e. it is not an instance attribute nor is it found in the class tree for ).and   Called unconditionally to implement attribute accesses for instances of the class. If the class also defines , the latter will not be called unless  either calls it explicitly or raises an .(Bold emphasis mine).Either call the base implementation (via ) or raise an :Note that by calling  the actual  attribute is found. By raising an  instead,  was called, which also returned .


Answer URL
https://docs.python.org/3/reference/datamodel.html#customizing-attribute-access
