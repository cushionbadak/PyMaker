Natural Text
Suppose I have the following code:Why is  true?Why doesn't this code produce error?Why do braces have no effect?This does not seem logical, since if  then  should also be true, however, this is no the case.At the same time expression  is 
There are two things to consider here:How  works with strings is not . is , which might seem confusing but it makes sense when looking at how  and  work in general: returns  if a is , else returns . returns  if a is , else returns .Thus: is  is What the parentheses doThe brackets do have an effect in your if statement.  has a higher precedence than  meaning that if you writeit implicitly means the same aswhich will only check if y is in the target string. So, usingwill have an effect. You can see the whole table of operator precedences in the Python docs about Expressions.SolutionTo achieve what you are wanting to do, @Prem and @Olga have already given two good solutions:or 
You seem to be confusing how  operator works.andSo in your first case, you do check if  is present. In reverse, you check if  is present in string.
Because it is checking for just 'y' in target.You need something like this:
You may want to use  instead 


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
