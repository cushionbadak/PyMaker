Natural Text
In a shell script I have:     inside  how can I access  and  arguments? I have tried: it seems like this doesn't work. 
For you to access the variables, your variable file must define the function , which will be given the arguments passed from the command line. This function needs to return a dictionary where the keys are the robot variable names.For example:If your variable file is based on a class, the class needs to have the  method.For example:When you do the above, your test will have two variables set:  and  which will have the values that were passed via the  argument.Here is a test that can be used to verify the above:Here is how to run the test in order for it to pass:Of course,  and  are completely arbitrary. You can pass raw strings, too:Passing arguments is described in the user guide section titled Getting variables from a special function
 reads the arguments fron the command line, as they appears to it: contains the script name, the first argument (whatever it is), the second, and so on.You should use , it helps to build comprehensive CLIs. A nice tutorial exists on the Python website.
You seem to make assumptions about how the arguments are parsed which are not true.  Here's how these arguments are passed from the shell to Python: is  is  is  where the values of the shell variables  and  are substituted. is The last one is  because without quotes around the argument,  might actually be split into multiple values.  For example, if  contains  then actually is  is  is a list of files in the current directory, and is  where similar further processing for the value of  may take place.There are Python argument parsing modules which assign further semantics e.g. to arguments which start with a dash (these will be interpreted as options) but by itself, Python does no such thing.  If that's what you want, maybe look at  or one of its replacements; but you still need to understand how the basic mechanics work.  A common arrangement is to avoid internal structure in arguments, and instead require the user to pass each value as a separate argument -- so perhapswith quoting to prevent the shell from attempting to perform whitespace tokenization and wildcard expansion on the variable values, and then probably in your script an  definition which says to merge multiple option arguments into a list.


Answer URL
https://docs.python.org/3/library/argparse.html
