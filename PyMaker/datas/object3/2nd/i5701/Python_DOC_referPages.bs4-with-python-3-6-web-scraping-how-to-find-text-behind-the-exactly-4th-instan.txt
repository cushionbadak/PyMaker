Natural Text
I'm using BeautifulSoup4 on Python3.6 to web scrape a generated page. The information is always laid out exactly the same, but the information itself changes, which is what I'm scraping.Imports: BeautifulSoup4, LXML, Tkinter, Sys, OS, TimeI've been using a basic soup.find to get the first bit of information, which is easy since it's always the very first tag.Scraping that with:always pulls what I'm looking for, which is [important information]. This is all in the , with the first bit scraping successfully.The issue I'm having is, I need the information that's just after the 4th instance of the tagWhich is inside the same line as several instances of But the information changes. When I replace the soup.find that pulls the first bit of information and turn it intoI get "AttributeError: 'NoneType' object has no attribute 'previousSibling'. I assume this is because the information I'm browsing for doesn't have  or  tags, but the code I'm using wasn't generated myself and I'm still unfamiliar with how to adjust it correctly. Replacing  with  doesn't work and I'm not sure what else I should try.TL;DR, does anyone know how to get the information directly after the 4th instance of  OR directly after the SECOND instance of ?Edit 1: An easier way is to find the next integer, which can go up to the triple digits.It looks like , where I'd want to scrape the 1 just before .   is not unique, there are two. The one I am hunting for is the second occurrence of this string.Edit 2: SOLUTION!I will leave this on the internet for any other folks having similar issues and can't grasp the documentation. Just be aware that it counts from 0, not 1. tags[0] is the first instance. Just keep printing more numbers.
I think that you are looking for  which returs a list of all occurences of a tag instead of just returning the first occurence.should give what you need...
Use  and set a limit to first  matches found.
Collect the list of tags you're interested in:Using islice to get the desired elemtents:Does this give you what you wanted?


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
