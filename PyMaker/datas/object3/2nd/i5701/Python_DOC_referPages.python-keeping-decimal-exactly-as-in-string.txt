Natural Text
I'm new to Python, and I have an issue with decimals and can't figure out for a few hours already how to solve it. Basically I want to read CSV file with pandas and keep the decimals exactly as they are stored in text, for future comparisons and simple math operations.So here's what I have on the input:  then I am trying to convert them to float, which gives me the value which ends with 3999 insead of 4right after importing the dataset, I've tried to convert it to float, and in console it works properly, returns me the desired value, but when I am trying to apply it to the whole dataset, it doesn'tdoes anyone have an idea how this can be solved? I've been trying to google, but couldn't find a solution.Thanks a lot.
I have some good and bad news for you.The bad news is that in python: will give you And  will give .This is not just in python. This phenomena occurs in very large number of programming languages. In fact, there is a whole website dedicated to it! : https://0.30000000000000004.com/You can read more about this in the official python docs, here.The thing is, dealing with floats is tricky, especially when you try to do exact math (i.e. equality) just like your case.Never expect exact math when dealing with floats!Instead, when you try to check to floats for equality, you check if they are very close to each other.Python 3.5+ provides this functionality (see here), and you can implement one yourself.A simple float equality comparison goes like this:But what if we want more precision than what standard python offers?In that case you can use an arbitrary precision library, like mpmath. That's the good news (maybe, idk).
Normally I'd use print formatting for strings or the round function.https://docs.python.org/3/library/functions.html?highlight=round#roundBecause you are using decimal you might meet your requirements by altering precision https://docs.python.org/3/library/decimal.html?highlight=round


Answer URL
https://docs.python.org/3/tutorial/floatingpoint.html
https://docs.python.org/3/whatsnew/3.5.html#pep-485-a-function-for-testing-approximate-equality
https://docs.python.org/3/library/functions.html?highlight=round#round
https://docs.python.org/3/library/decimal.html?highlight=round
