Natural Text
I'm having difficulty understanding how this code works. I was doing a codewars challenge to return the number of elements with duplicates in a string. eg. Asasd --> 2I came up with my own implmentation but I wasn't able to really understand what this code does. If anyone could point me in the direction, it would be much appreciated :)
This is, first of all, a highly inefficient solution to the problem. But let's break it down: would convert all the characters in a string to lower case: would create a set (make sure to read about what sets are) of characters from a string - eliminating all the duplicates: iterates over every single character in a set we created abovefor every character in this set, we apply this if condition: . The  here would count how many times  appears in the string. The  helps us to leave characters that are met more than 1 time in a string is called a list comprehension. It is basically a short way of creating a list. Here, we are creating a list of characters that occur in a string more than one time. Check out this topic about how to verbalize and read the list comprehensions. then just gets us the length of the list To summarize, you iterate over the unique characters in a given string and count which of them occur in a string more than one time.
and All in all the function finds number of not unique elements in a string ,ignoring case. I believe using  is more efficient:



Answer URL
https://docs.python.org/3/library/stdtypes.html#str.lower
https://docs.python.org/3/tutorial/datastructures.html#sets
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
