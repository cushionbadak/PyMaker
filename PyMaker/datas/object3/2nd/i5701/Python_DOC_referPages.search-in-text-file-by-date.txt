Natural Text
I have code like this:And text file like this:I try to search movie projections by date...If there is a projection on the entered date it will find it and print the list, but before printing that list it will always print "Date input error" and after that list "No projection on that date". (if I put  in  statement it will print only the first found projection on entered day, withouth  statement, obvious)Questions: How to print ONLY list of projections without "date input error" if date is correctly input.How to print only "No projection on that date" if date is correct but there is no projection and how to ask user for input that until puts it correctly? In this way with recursion it will always throw exception and recursion  function.
There are a whole bunch of major problems with your code. As it happens, they showcase why some general advice we hear so often is actually good advice.The line  creates a string named .  always returns a string. Strings in Python do not have a method called . Which brings us to issue #2:You should not catch generic exceptions. You were probably looking to trap a  or  in the  clause. However, you are getting an error that says . This is because you can't call methods that you want to exist but don't. Your except line should probably read something like .Your  clause does nothing useful (beyond the problems listed above). If the string is not formatted correctly, you print a message but continue anyway. You probably want to use  in the  clause to propagate the exception further. Luckily for you, you actually want the date to be a string, which brings us to issue #4:Why are you attempting to convert the string to a date to begin with? You can not compare a date object and a string that you get from the file and ever expect them to be equal. You want to compare a string to a string. If you had some kind of validation in mind, that's fine, but use  and don't replace the original string; just raise an error if it doesn't convert properly.The  clause in a  loop will execute whenever the loop terminates normally (i.e., without a ). Since you always iterate through all the lines, you will always trigger the  clause. You need to have another way to determine if you found matching items, like a boolean flag or a counter. I will show an example with a counter, since it is more general.You never close your input file. Not a huge problem in this tiny example, but can cause major issues with bigger programs. Use a  block instead of raw .Your method of iterating through the file is not wrong per-se, but is inefficient. You load the entire file into memory, and then iterate over the lines. In Python, text files are already iterable over the lines, which is much more efficient since it only loads one line at a time into memory, and also doesn't make you process the file twice.Combining all that, you can make your code look like this:I trusted your use of  since I am not familiar with the module and have no intention of installing it. Keep in mind that the date verification is optional. If the user enters an invalid string, that's the end of it: you don't need to check for dates like  because they will just print . If you insist on keeping the verification, do it more like this:That's it. It will raise a  if the date does not match. You don't need to do anything with the result. If you want to change the error message, or return instead of raising an error, you can catch the exception:Notice that I am catching a very specific type of exception here, not using a generic  clause.


Answer URL
https://docs.python.org/3/library/functions.html#input
https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime
