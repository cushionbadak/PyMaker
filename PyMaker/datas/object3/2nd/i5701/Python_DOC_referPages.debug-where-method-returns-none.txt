Natural Text
I have a big legacy Python method which contains roughly twenty  statements.The method should not return  but it does so. It is repeatable in a simple test case.Up to now I used a debugger and stepped through the code line by line to find the matching return statement.But is there an easier way?Is there a way to raise an Exception as soon as the method returns None?and Of course I need to see the line containing the return statement.Example:Above is a simple code snippet. The result:Above traceback does not help very much, since I want to see the line inside . In the example above I want to see which I marked with .I use PyCharm, but a pure python or other solution is welcome.Just for the records. There is a follow-up question which tries to enable this feature in PyCharm: PyCharm: Debugging: r(eturn) Continue execution until the current function returns
pdb has a  command for this need:r(eturn)  Continue execution until the current function returns.example:see more detail in pdb doc.


Answer URL
https://docs.python.org/3/library/pdb.html#pdbcommand-return
https://docs.python.org/3/library/pdb.html#pdbcommand-return
