Natural Text
I have two loops that finds the product of the items in a list. Seen below:Loop ALoop BMy question is what happens inside the for-loop that makes an explicit call of an iterator i.e.: iter([1,2,4,8]) necessary ? Can't python discern that [1,2,4,8] is list hence an iterable as it did in the for loop?
A  statement in python is by definition an iterative loop. The  statement is non-iterative, and so an iterator must be created for it. From the documentation:Pythonâ€™s for statement iterates over the items of any sequence (a list or a string), in the order that they appear in the sequence.The while loop executes as long as the condition (here: ) remains true.Loop A and Loop B represent two different ways of accomplishing the same thing, through a different method.Loop A uses the  statement to iterate through the given list [1, 2, 4, 8]Loop B uses a  statement, which by definition is non-iterative, and continues until given a false condition, or by .In order to end the while loop, Loop B establishes an iterator across the list with . When  reaches the end of the iterator , it triggers the exception, which uses  to exit the  loop.Loop A would be considered by many to be the more pythonic and safer way to compute the product in this manner.
You have used  in  loop which return an iterator object


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-for-statement
