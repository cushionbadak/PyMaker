Natural Text
I already know that if we have a list of two tuples like:by the below command:it would be;What shall I do if we have a plenty of tuples the below, and I want to use something like loop command? I want:
Use , and you can simply supply the list as arguments using  to expand them.Also do not use pre-defined types such as  as a variable name as this redefines them to not being what they really are, and the parentheses  syntax results in a , not a .
Firstly, you are not merging two lists as you say in the question.What you're doing is making a list of list into a list.There are many ways you can do this. Apart from the ways listed in other answers, one possible solution could be:Note: This solution is typically labelled as C - like as it doesn't make use of any Python methods.
This uses a nested list comprehension approach. A good explanation of how to read them can be found here.Think how you'd do it with regular loops. One outer loop will extract a list and an inner loop will append every element of the list to the result. Similarly, in the nested list comprehension above - the  extracts a sublist, the  loops over each item and the  at the beginning of the comprehension does an automatic  to the final result. The biggest difference from regular loops is that what you want to get automatically appended to the final result is placed at the beginning. 
Using   ,or   ,or comprehension,
One simple way is using  inbuilt method.
In this case, all the entries of the list are integers and so it would be easy to use . The extra advantage of using regular expressions here is that it will work on any arbitrary nested list vs. chain that does not work when the list is .The output is;So if we are given an  arbitrarily nested list like:we can do;and the output is;Which is arguably more helpful.


Answer URL
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/library/functions.html#sum
https://docs.python.org/3/library/itertools.html#itertools.chain
