Natural Text
I'm running two threads in my python program, one thread which uses python curses to run a menu system and waits for input, and one thread which does analysis based on menu choices and outputs it's status via the built in  function. My problem here is that print doesn't play well with curses, as, if  is on, then it prints to the line where I am waiting for input, and if  is used, then the output is  not displayed at all.Since I want control over where and when the output is displayed, my solution to this initially was to set  and then have the input loop like this:This works quite well to allow me to check for output from stdout every second, and then if need be update the menu, while still allowing user input. The problem that I'm having is that I have no idea how to capture stdout and choose to display it when I need to. Is this at all possible?
So I figured this one out, but as a disclaimer, I have no idea if this is thread safe (no problems thus far though).It's possible to capture the output of print using the python library io, and more specifically  from that library.N.B. This is for Python3Essentially, the solution was to set  to an instance of  and read from that.Below I've included a short example of the menu system I was using in case the above isn't clear to anyone having this issue, in the hopes that this will clear it up.Cheers!Unmodified VersionSo the menu's display and event loop used to look a lot like this: (note that this is a simplified version of things and therefore a lot to do with displaying the menu and displaying what a user types has been left out). This basic example displays a menu and allows user to exit the program, enter digits into their selection, or enter their selection, which is then printed out.In this example the problem still occurs that any output from a thread running simultaneously to this one will be printed at the cursor of  where the program is currently waiting for input from the user.Modified Version


Answer URL
https://docs.python.org/3/library/io.html
https://docs.python.org/3/library/io.html#StringIO
