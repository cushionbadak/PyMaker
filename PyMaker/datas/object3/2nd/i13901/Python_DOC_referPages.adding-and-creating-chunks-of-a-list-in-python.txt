Natural Text
This is my listi tried to do thisNow i'd like to add a 'data' to every chunk so that it would look likebut tuples are immutable and i'd have to destroy them, append and create them again.is there a better way to accomplish this in python?

You can use  to create a new iterator contain the  and then apply the  function on your prior iterators and new repeated iterator :Note that as @Padraic Cunningham mentioned on his answer there is no need to call the  function in .So you can simply use If you want to modify the list of tuples after creation you can use a list comprehension to modify your tuples by adding the new elements to the tuples.Example :
This should be a linear time way to do it:If I am not ignoring some Python intricacy, since tuple() has complexity O(n), the slice accessor has complexity O(k) and the overhead caused by the  isn't greater than simply appending a node at the end of a list (which is ), it should be  aka , where  is fixed to 3 in your case.means:aka:It is also well behaved with odd lists:
Since tuples are immutable, if you're adding and deleting from them often, you're perhaps better off using lists of lists:
How about adding them to the  function when you are creating the  itself -For Python 3.x , you would need to divide the  using  operator (for it to return int) . (And most probably wrap  in  , since  in Python 3.x , returns an iterator.)


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.repeat
