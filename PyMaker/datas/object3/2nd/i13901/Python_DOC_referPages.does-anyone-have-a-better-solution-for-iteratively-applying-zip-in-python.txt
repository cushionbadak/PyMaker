Natural Text
Let us assume we have three lists:If I do  I get a list that looks like this (and this is what I actually want as an end result):What I however couldn't get easily get to work was applying  "iteratively", i.e. applying it to  and  and then at a later stage applying  to  again. Something like this:gives me the following result:and is not quite what I want. When I played around with it I discovered that:does exactly what I want and gives me:Does anyone know of a better way of doing this? I feel that my solution is overly complicated for what should be quite simple.
To demystify the code you've written so far, do this:Now it's easier to see why after doing , the way to add an extra column to your matrix is to do:Or:But you can also see from this that the code in johnrsharpe's answer is likely to be more efficient for larger examples, since it creates fewer intermediate objects that you don't keep. 
If you make the result a list of lists, rather than of tuples, you can  to them:If you stick with tuples you can use tuple addition to add the  element, e.g. within a list comprehension:Otherwise, I think what you have is as neat as it's going to get.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
