Natural Text
I have two lists:and I want to sum the corresponding values in  to similar values in , so it would look like this:Sorry for the confusion. Stealing JPeroutek's clarification: It looks to me like he wants only unique values to exist in . The values in  correspond to those in . Wherever you have a duplicate in , you sum the corresponding  values.Nathan Bartley's answer worked for me.
A good way to do this would be to use a dictionary. The logic is very much like JPeroutek describes. You go through list b, store the corresponding number in list a, and if you encounter a value in b you've already seen, then you add the new number in a it. You might try something like this to generate it:In case the try & except doesn't make sense you can rewrite those four lines to look like thisThis will result in a dictionary that looks like the following:It's important to note that the dictionary may not preserve the order that you want. For example:would result inIf ordering is important, this would pose a problem with the next step.You can split the dictionary into ret_a and ret_b by messing with the result of     for instance:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
