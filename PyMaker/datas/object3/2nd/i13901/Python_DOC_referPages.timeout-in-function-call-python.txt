Natural Text
I've got this codeWhere  is the name of an executable c file, is a command line argument used by  and  is the input text for the file My  function is...I want to add another parameter inside my  function, called .Basically, I want it so that if my  function is taking longer than 5 seconds, i'll call  and end it there.The proper call of my  function, with the added  parameter, would be  The general idea of my complete code, all of it is not here, is to compile and  execute a C file and check if its output is what it should be.I was recommended to See section 17.5.1 of the Python3 library documentation for information on how to implement a timeout, but was not able to understand how to. And I tried some solutions to similar questions, but it didn't work out.Any help?EDIT:More info on the  function..The prog argument is a string which specified the name of the executable file in the temporary directory. The args argument contains a list of strings which are to be used as command line arguments for the program named by prog. The run method executes the program, supplying the command line arguments. If the program, while running, reads from its standard input then that standard input is taken from the argument named input. The input argument is a list of strings; each string represents one line of text input to be read by the program.When the run method returns, the result is either None (for an apparently successful completion) or a string (which specifies a reason for the pro- gram not executing or not completing successfully). Whatever is returned by the function call, both the standard output stream and the standard error output stream should be checked. is the class name that  is found in..UPDATE:After some help, I'm getting syntax error For the line of code in the above chunk, 
For Python 3+ , you can use the  argument for  , passing in the timeout you want to specify , and then if the timeout expires before the child process got terminated, subprocess would terminate the child process and raise  exception, which you can catch, and then call  .So in your code, you would do -Also, the  function returns the returncode, not the process itself, so trying to do  inside the  does not do anything.Demo - Where  is a python script, that loops 100000 time.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.call
