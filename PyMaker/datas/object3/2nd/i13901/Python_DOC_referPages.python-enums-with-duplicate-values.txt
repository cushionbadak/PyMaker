Natural Text
I'm having trouble working with an Enum where some attributes have the same value. I think Enums are so new to python that I can't find any other reference to this issue. In any case, let's say I have the followingClearly these are the card numbers and their corresponding values in black jack. The ten through king have the same value. But if I do something like , I get back . What's more, if I iterate over these, it simply iterates over unique values.How can I get around this issue? I want CardNumber.QUEEN and CardNumber.TEN to be unique, and both appear in any iteration. The only thing I could think of was to give each attribute a second value which would act as a distinct id, but that seems unpythonic.
Yes, labels with duplicate values are turned into aliases for the first such label.You can enumerate over the  attribute, it is an ordered dictionary with the aliases included:However, if you must have label-and-value pairs that are unique (and not aliases), then  is the wrong approach here; it doesn't match the usecases for a card game.In that case it'll be better to use a dictionary (consider using  if order is important too).
UpdateUsing ()](https://pypi.python.org/pypi/aenum)1 you have a couple choices:use  instead: does not provide any of the  extras (iterating, lookups, etc.) [see: original answer below]use : has all the normal  behavior except every member is unique and by-value lookups are not availableAn example of :and in use:Original AnswerIf you want named constants and don't care about the other features of s, you can use the  class from the aenum library:Duplicate values are still distinct:1 Disclosure:  I am the author of the Python stdlib , the  backport, and the Advanced Enumeration ()  library.


Answer URL
https://docs.python.org/3/library/enum.html
