Natural Text
I am using python logging module (python 3.4.3). Let's say my logging level is set to INFO and I would like to use a function as an argument of my logging message.Now I would expect when log level is decreased (e.g. WARNING) that the argument functions are not executed.Is this true?Example (console):The function is probably not executed, but still there is noticable delay. Could someone explain me please the possible cause?
Function arguments evaluations before callWell you see the arguments you pass to  need to be evaluated before  gets called, and evaluating  takes timeIt doesn't matter if ultimately the function does nothing in its call, the arguments will still get evaluatedConceptually you can think of it as doingWorkaroundUsing Python 3's logger.getEffectiveLevel()Given that the levels are ordered asYou can see that our if block (with ) will only run on  and below (so  and )
The problem is that you evaluate the function before you call. One way of dealing with this is using  as described by bakkal. This can be a bit verbose though. Another way to get around this is to create an intermediary object to pass to the logger that does the work in it's  function. This delays the function call until the logging module is sure the message will be emitted.For example:The logging module is also kind enough to preserve the line on which the log call was actually made if there is ever an error.Outputs:


Answer URL
https://docs.python.org/3/library/logging.html#logging.Logger.getEffectiveLevel
