Natural Text
I have 23 bits represented as a string, and I need to write this string to a binary file as 4 bytes. The last byte is always 0. The following code works (Python 3.3), but it doesn't feel very elegant (I'm rather new to Python and programming). Do you have any tips of making it better? It seems a for-loop might be useful, but how do I do the slicing within the loop without getting a IndexError? Note that that when I extract the bits into a byte, I reverse the bit-order. 
You can treat it as an int, then create the 4 bytes as follows:
The  module was designed for exactly this sort of thing â€” consider the following in which the conversion to bytes has been broken down into some unnecessary intermediate steps to make understanding it clearer:A harder-to-read, but shorter, way would be:

You can perform the split in one line using  method:As an algorithm, you can pad  to length 32 and then use  method to group it in octects:Your code would be like this:


Answer URL
https://docs.python.org/3/library/stdtypes.html#int.to_bytes
