Natural Text
Task: When an error occurs in one of my views I need to show a custom error view. The error type does not matter.I tried to override all exceptions by registring a view for all exceptions, like this:It worked good. All exceptions were showing my view. But the problem was that those errors stopped logging. Of cource I can do something like logger.error(traceback) in my error view, but this is a dumb idea.How can I register a view for all errors without breaking the logging pyramid system.
You can log the error in your view via the plain old python logging. Or Set the status on the response to 500 (assuming your view is now return a status of 200 which indicates a successful response ). Edit: working exampleI'm not a logging expert, but I was under the impression that your logging config in development.ini/production.ini would be picked up, the example below seems to prove that but you be the judge.....changes to log config from defaultthe viewsconsole output:
It is not dumb to log the exception in your own error view (the exception will be available as .) As is always the case with exceptions, you can either do nothing, handle the exception and log it, or re-raise the same exception.In my setup, an uncaught exception is logged by the WSGI server itself, in this case wsgiref. It's not possible to trigger both the WSGI server's normal response mechanism and its exception logger.wsgiref's exception logger:One alternative that may be acceptable to you is to display your custom error page at the web server layer instead of at the Pyramid layer.
The plugin pyramid_exclog fills this purpose very well. It is implemented as a tween so that you can still write a view for  and it will log the details of the exception to whatever log handler you specify in your pyramid configuration file - weather that is to the console, a file or an email.In addition to the pyramid_exclog documentation I also found the Python Configuration file format section of the Python documentation very helpful since the config is a quite tricky to get right.


Answer URL
https://docs.python.org/3/library/logging.config.html#configuration-file-format
