Natural Text
I want to encrypt texts using PyCrypto AES and write the output ciphertext to a text file. As you know the  output returns bytes and so I have to decode it to unicode first for it to be accepted by  method. My problem is both  and  methods throw the same error: Here's part of the encrypted text I'm trying to decode to utf-8:......
If you are writing to a binary file (something like) is the key, then you can just call .If you are writing to a text file, you'll need to use  or something similar to encode in a format that can be included in text.   and  are the common options.To encode in base64 do something likeThen use  to get a string back
AES encryption can output all 1-byte hex numbers (0x00 to 0xFF), however UTF8 requires the last byte in each character  be  in the range 0x00 to 0x7F. This means there will be numerous AES characters that have no corresponding UTF-8 translation, which seems to be the error you're getting.In fact, if you look closely at your sample text given, it is already in unicode-8. Look at the beginning of your example:\xa5- \xd9\x14_This expression contains a unicode-8 hyphen, space, and underscore. The other raw bytes shown are those for which Python couldn't find a corresponding unicode-8 translation.There is a hyphen, a 


Answer URL
https://docs.python.org/3/library/io.html#binary-i-o
