Natural Text
Consider the following code:In Python 3, the interpreter tries to decode the strings it reads, which might lead to exceptions like . These can of course be caught with a  block around the whole loop, but I would like to handle them on a per-line basis.Question: Is there a way to directly catch and handle exceptions for each line that is read? Hopefully without changing the simple syntax of iterating over the file too much?
The Pythonic way is probably to register an error handler with  and declare it in the open function:That way if there is an offending line, the  will the called with the , and will be able to return a replacement string or re-raise the error.If you want a more evident processing, an alternate way would be to open the file in binary mode and explicitely decode each line:
Instead of employing a  loop, you could call  on the file-iterator yourself and catch the  manually.
Place your try-except catch inside the for loop, like so:


Answer URL
https://docs.python.org/3/library/functions.html#open
