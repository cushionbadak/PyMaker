Natural Text
I have a list of numbers:  testList = [1, [1], [12], 2, 3]I want it to become:  flatList = [1, 1, 12, 2, 3]Using a typical list comprehension such as below is not working.I suspected it is because the un-nested items are being treated as iterable sublists, so I tried this:But I am unclear on the syntax, or if there is some better way to do this. Trying to remove val from the else clause means val is undefined. As is, it still gives me the same TypeError.The code below does work for me, but I am interested to see if it can be done in list comprehension style, and people's opinions on that.
Since you're using Python 3, you can take advantage of  with a recursive function. It has been introduced in Python 3.3.As a bonus, you can flatten arbitrary nested lists, tuples, sets or ranges:Here's another example with a debug line:
If the sublists always contain only one item then


Answer URL
https://docs.python.org/3/whatsnew/3.3.html#pep-380
