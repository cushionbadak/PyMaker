Natural Text
I love the  in Python 3.6. But there's often the case where the  contains a non-hashable attribute and I want to use it as a  key or  member. If it makes sense that a  class uses object identity ( for  and ) then adding those methods to the class works fine.However, I now have this pattern in my code in several places and I want to get rid of the boilerplate  and  method definitions. I know 's are not regular classes and I haven't been able to figure out how to get this working.Here's what I've tried:Is there a way I don't have to repeat these methods in each  that I need 'object identity' in?
The magic source of  class syntax is its metaclass , behind the scene,  created a new class for you, instead of a typical one, but a class created by .The problem is, when  creating new class object, it ignored bases classes, you could check MRO of , there is no :you could extend it to take care of base classes:


Answer URL
https://docs.python.org/3/reference/datamodel.html#metaclasses
