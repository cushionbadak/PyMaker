Natural Text
I've simplified my import problems down to this simple base case. Say I have a Python package:a.py contains:b.py contains:Running  produces  on both Python 2.7.6 and Python 3.3.5. I have also tried adding  in both cases, same issue. Expected:I expect possibility 1 to work just fine.Why do I want to do this:Possibility 2 is less desirable. Hypothetically, the standard library could introduce a package called  (unlikely in this case, but you get the idea). While Python 2 searches the current package first, Python 3+ includes absolute import changes so that the standard library is checked first.No matter what my reason, possibility 1 is supposed to work, no? I could swear I've done it thousands of times before.Note: If you write a script external to ,  works without issue.My question is similar to python - absolute import for module in the same directory, but the author implies that what I have should be working.
 is the correct form. Don't run scripts from inside the Python package directory, it makes the same module available using multiple names that may lead to bugs. Run  from the directory that contains  instead.To be able to run from any directory,  should be in pythonpath.      
I think the problem comes from the fact that you don't have a reference to mypkg inside the mypkg folder. Look at what Python is doing  when I try to run your example (using the verbose option):That's why it can find the module, because it doesn't exist. One hack you could do is to have a file called mypkg.py with the linebut that's just your 2nd possibility above in another jacket. Without knowing what you want to accomplish, I would choose the first example on the Intra-package Reference text. I would write b.py as such:
Yes it will not work, because at the moment you call ,  is still loading ( -> ). This is because Python loads parent modules first. https://docs.python.org/3/reference/import.html#searchingWhat you can do is wrap  into a function:And then:Or even:Also you can help Python to find your module:
Try this:


Answer URL
https://docs.python.org/3/reference/import.html#searching
