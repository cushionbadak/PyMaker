Natural Text
I am trying to combine multiple JSON files in a Ubuntu platform. As an example, the data from two files are as follows:File_1File_2I wrote a Python script to combine them. I added a new line and a comma after each record.The output from the merge file is:When I validate these records using JSON Lint (http://jsonlint.com/), it tells me that the file is broken and not a valid JSON. even after spending quite sometime, I am not able to figure out what is going wrong with the merging. It would be helpful is anyone has any thoughts on this.
You can't just concatenate two JSON strings to make valid JSON (or combine them by tacking  to the end of each). Instead, you could combine the two (as Python objects) into a Python list, then use  to write it to a file as JSON:If you wanted to do it without the (unnecesssary) intermediate step of parsing each JSON file, you could merge them into a list like this:
Your generated JSON isn't valid. You end up with something like:which, of course, is not valid.If you want to go with your approach, you should remove the last  and the first  from the new file, and then merge them (you still have to be sure that the JSON files you want to merge are in a valid format).I suggest I use the  module for what you need to achieve, it is cleaner.
If you wanted to produce a JSON list of those objects, you are missing opening  and closing  brackets here, and will have written one comma too many.It'll be easier to have Python decode the objects, then write the output as a new JSON list:
Python solution:You have file1.json and file2.json files.Each file has structure:And your goal to merge them and get next view:Code:
There is a module called  which merges dictionaries. It can be used very simple by just providing two dictionaries  or you can define schema's that described how to merge, like instead of  overwriting same key's, automatically create a list and append to it.More examples with complex rules: https://pypi.org/project/jsonmerge/#description


Answer URL
https://docs.python.org/3/library/json.html#json.dump
