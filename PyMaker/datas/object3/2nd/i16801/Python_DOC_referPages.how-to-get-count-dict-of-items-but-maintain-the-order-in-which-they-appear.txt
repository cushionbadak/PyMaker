Natural Text
For example, I need to count how many times a word appears in a list, not sorted by frequency but with the order in which the words appear, i.e. insertion order.So instead of: I'd rather get: And I don't really need this  method, any way that will produce correct result is OK for me.
You can use the recipe that uses  and :
On Python 3.6+,  will now maintain insertion order.So you can do:Unfortunately, the Counter in Python 3.6 and 3.7 does not display the insertion order that it maintains; instead,  sorts the return by the most to least common.But you can use the same OrderedDict recipe but just use the Python 3.6+ dict instead:Or, since Counter is a subclass of  that maintains order in Python 3.6+, you can just avoid using Counter's  by either calling  on the counter or turning the counter back into a :This presentation of that Counter is sorted by most common element to least and uses Counters  method:This presentation is as encountered, or insertion order:Or,
In Python 3.6, dictionaries are insertion ordered, but this is an implementation detail.In Python 3.7+, insertion order is guaranteed and can be relied upon. See Are dictionaries ordered in Python 3.6+? for more details.So, depending on your Python version, you may wish to just use  as is, without creating an  class as described in the documentation. This works because  is a subclass of , i.e.  returns , and therefore inherits the insertion ordering behaviour of .String representationIt is worth noting the the string representation for , as defined in the  method, has not been updated to reflect the change in 3.6 / 3.7, i.e.  still returns items from largest counts descending. You can trivially return the insertion order via .Here are some examples demonstrating the behaviour:ExceptionsYou should not use a regular  if additional or overwritten methods available to  are important to you. Of particular note: and consequently  offer  and  methods.Equality tests between  objects are order-sensitive and are implemented as .For example, equality tests will yield different results:


Answer URL
https://docs.python.org/3/library/collections.html#ordereddict-examples-and-recipes
https://docs.python.org/3/library/collections.html#collections.OrderedDict.popitem
https://docs.python.org/3/library/collections.html#collections.OrderedDict.move_to_end
