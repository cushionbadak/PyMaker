Natural Text
For the last 6 months I have been learning python and practicing with the logic of python. However, as I continue to become more advanced, I find that I just have more and more to learn. One question that I have encountered is how to work with multiple files in one project. An example of what I am trying to do is: If i have a solution that is running predictive analysis on stock data being scraped from the web, and I want to compare these results with SP500 data, I am currently using two different projects and comparing the data by hand. As you can imagine this is extremely inefficient and leads to more errors than benefits. When learning C# and VB.NET in visual studios, there was a way to create multiple forms for a GUI, and reference those forms from other forms. While I know this is not the same as what I am trying to ask, I am wondering if there is a way to work with multiple .py files in one solution, each having their own logic, and reference these different files from other files. 
I focus only on your core problem:If I have a solution that is running predictive analysis on stock data  being scraped from the web, and I want to compare these results with  SP500 data, I am currently using two different projects and comparing  the data by hand.My advice is not to combine different projects for the sake of comparing output. Don't let any interface or environment decide how you structure your code.Code structure is dependent on what you are actually doing. If you need to compare outputs of 2 different classes from different projects, write a script to calculate and compare results from your 2 classes:comparer.py:If there are specific tests your scripts should satisfy, consider using  from the standard library.
If you had a file like start.py and then things.py held functions, objects, or classes...start.pythings.pyIt's really that easy.  You can also store several files into a directory and just import the directory the same way, you just need to have an empty  file in it.  Your import would be 


Answer URL
https://docs.python.org/3/library/unittest.html
