Natural Text
I am doing a task in class about a password guesser. I stumbled into a lot of problems trying to solve this task, my first approach was to use for loops (code below), but I realized that the amount of 'for loops' is equal to the length of the string.The program above is very concrete. It only works if there are exactly 3 characters entered. I read that you could use a package called intertools, however, I really want to find another way of doing this. I thought about using recursion but don't even know where to start.
If you don't want to use  you can certainly do this with recursion, which will work with passwords of any (reasonable) lengthâ€”it's not wired to three characters.  Basically, each recursive call will attempt to append a new character from your alphabet to your running value of guess. The base case is when the guess attains the same length as value you're seeking, in which case you check for a match. If a match is found, return an indication that you have succeeded (I used ) so you can short circuit any further searching.  Otherwise, return a failure indication (). The use of a  counter makes it a bit uglier, but produces the same results you reported.One way to avoid the global counter is by using multiple return values:

Ok, Thanks everyone I figured it out.
Here is my full answer, sorry if it's not neat, I'm still new to coding in general. The credit goes to @JohnColeman for the great idea of using bases. 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.permutations
