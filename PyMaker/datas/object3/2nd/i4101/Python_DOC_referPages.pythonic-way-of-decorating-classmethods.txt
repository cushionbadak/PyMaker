Natural Text
Given the following example:I would like to write another method which uses  above but adds a constant, i.e.This would be one way. However, this smells very much like decorating! What would be the proper pythonic way to do this?
You can write a simple function outside the class:Output:Edit: you can utilize  with a  in Python3. The wrapped function  will return  and the decorator  will add  to the returned result of the function passed to it. However, to be able to save the original functionality of , you can utilize the  attribute:Output:
Extending answer of @Ajax1234, you may try to: - parametrize your decorator, - call your decorator explicitly (without ).[EDIT]You may also improve the decorator with  (which is a decorator itself). All you need to do is to change your wrapper declaration:


Answer URL
https://docs.python.org/3/library/functools.html#functools.wraps
https://docs.python.org/3/library/functools.html#functools.wraps
