Natural Text
In numpy subarrays obtained through any of slicing, masking or fancy indexing operations are just views to the original array, which can be demonstrated as follows:In the above example, the entire subarray was assigned to. However if we assign to an element of the subarray, the result of the slicing operation still behaves as a view, whereas the results of the masking and fancy indexing operations behave as independent copies:Is this a bug in numpy, or is it by design? If it is by design, then what's the substantiation for such an inconsistency?
It's not a bug. As far as you pass a slice object to Numpy array the returned sub array is a view of the original items which means that even slice assignment or single item assignments will change the original array. But in other cases the returned result is not a view. It's, in fact, a shallow view (copy) of the chosen slice which only supports slice assignment like what other mutable objects in Python support.It's also mentioned in documentation:[...] As with index arrays, what is returned is a copy of the data, not a view as one gets with slices.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__setitem__
https://docs.python.org/3/reference/datamodel.html#object.__getitem__
