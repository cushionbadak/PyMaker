Natural Text
These docs have a nice example on how to compile some external C/C++ code and load this using ctypes. This works great with manual compilation (where i'm controlling the names of my library which later gets loaded).Now how to prepare some code to be used within scipy with full incorporation into scipy's build-system? A more general github-issue does not provide the information i'm looking for (and sadly, there is not much action).Also: i'm more interested in using ctypes (no real usage within scipy? despite numpy's explicit tools provided?), not cython which is used in all the other wrappers (i don't see any good reason for cython, except for it's common use there: my lib will only get loaded/called once and it's slow compared to potential call-overheads).Let's assume i added a directory like:Let's touch :Now this works in regards to:which produces (within ):and can be loaded in the interpreter (started from dir )Now the questionAssuming i want to add a new file:No matter what i try, i'm not able to load this one. E.g.:The second argument is probably expected to be a full-path (opposed to partials or wildcards). All my attempts failed with the general error:What should i do here? (goal: ready to be a real addition to scipy: multiple platforms).Is the approach itself doomed? From a naive perspective it's promising: the expected downsides of ctypes are irrelevant for me and it's part of the standard. Additionally it got dedicated support in numpy and i control the C/C++-part, so that i can provide a simplified single-function wrapper to be called. Why isn't this used in other parts of scipy? 
Inspired by numpy's sources, i'm now able to load the lib using:Well... at least in theory!Against my prior assumption, my lib-build is not equivalent to a manual-compile and the function i want to load is not available (). But the problem of locating the lib feels clean now and is solved for me.


Answer URL
https://docs.python.org/3/library/ctypes.html
