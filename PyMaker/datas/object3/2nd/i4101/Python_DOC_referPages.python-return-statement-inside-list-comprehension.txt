Natural Text
Is it possible to put a return statement in a list comprehension? My guess is no since the code after the return statement isn't executed. 
 is a statement.List comprehensions cannot contain statements, only expressions.In fact, that's true for all expressions in Python: they can only contain other expressions.So, no, you can't put a  inside a list comprehension.If you really need to mutate  in-place, what you're trying to do is much better written as a  statement (which, being a compound statement, can of course contain other statements):While comprehensions are faster than  statements for building a list, that's mainly because they can use a specially-optimized version of . If you don't actually want the resulting list, they're slower, because even a really fast  is still a lot slower than not building a list at all.And, more importantly, using comprehensions just for side effects isn't just inefficient, it makes your code less idiomatic, and harder to understand.Anyway, if you really need to optimize this code, you probably shouldn't be mutating  in-place. Every time you call , that takes linear work to find the first occurrence of  and then shift the whole rest of the list up. So, if  is roughly the same size as , this takes quadratic work. But you can just copy the list, filtering as you go, in linear time:(I'm assuming here you don't have any duplicate values in  and â€”if you do, I'd be willing to bet  wasn't actually doing what you want. But, if so, you do need something a bit more complicated here.)


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-return_stmt
https://docs.python.org/3/reference/expressions.html#grammar-token-comprehension
https://docs.python.org/3/library/ast.html#abstract-grammar
https://docs.python.org/3/reference/simple_stmts.html
