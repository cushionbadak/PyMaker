Natural Text
The 2D list should be like this:I am unable to find the logic for this. I have done this using numpy's reshape function. But unable to do without numpy.
Here is one simple way:You can also wrap in a generic function:ExplanationThe syntax for  construction is .  is optional; if it is not specified, it is assumed to be 1.The first part  creates a range object from  to , inclusive.The second part  iterates in steps of  to , not including the final term. Since  is non-inclusive, squaring  provides the desired cap.
This is one approachOutput:
I like this one too:
Use a list-comprehension like this with tuple unpacking:
or you could use the  from the  recipes to split a given list (or iterable) into an 2d matrix. this is something along those lines:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
