Natural Text
What's the most pythonic way to know if a member of a class is a method? Note: I had only the name of the (posssible) method (could be a class method, an instance method or a static method).Currently I'm comparing the type of the object in the dictionary of the class with :I really don't know if this will work on all the cases.The  part is just for getting the type , Is there a better way to do that?
On Python 2, use :For Python 3, unbound methods are gone, and you'd use  instead.You can also use the  type object to test against:Both tests work for  methods and regular methods. By design these tests fail for  methods; those are just functions that resist binding ( returns the function itself). You can test for functions with , or use  to catch all 3 in one test.If all you wanted is to test if something is callable, you could use the  function. It'll work even if the object is an instance with a  method:Using  works on all 3 method 'types' as well as custom objects such as the above. Note that classes, being factories, are callable too.
Use callable on it.Example:


Answer URL
