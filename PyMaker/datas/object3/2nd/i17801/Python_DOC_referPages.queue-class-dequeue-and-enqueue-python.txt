Natural Text
So I have this question and it says create a class queue and make the method dequeue and enqueue Here's what I have so far, could someone direct me on the right track? 
There are a few problems here. by itself refers to your class, not to the instance's attribute with the same name, which is . You have to use the  all the time. And it would really help to give the class and its attribute different names, to avoid this confusion. (It would also help to use PEP 8 style and name the class .)When the queue is not empty, you do compute the return value , but you never  it; you just fall off the end of the function, which means you automatically return . is trying to slice the type , not your actual list (). What you wanted is .You probably don't want to return a string—which could be a perfectly valid thing to stick in the queue—on errors. That's exactly what exceptions are for.Your  takes an argument that it never uses. You probably wanted to use this as a starting value for the queue's contents. And you probably also want to make it optional.The  function doesn't take a  like  for its first argument, it takes an index like .If this is Python 2.x, you do not want to create classic classes; if you have nothing else to inherit from, inherit from `object.It looks like you may be mixing tabs and spaces for indentation. Don't do that.Plus, there are a few things that could be simpler:If you want to slice to the end of a list, just leave off the end, like , instead of using .But to both fetch and remove a value from the left side of a list even more simply, you can use .To add a value to the right side of a list, you can use .To check if a list is non-empty, just do , not . Empty collections are always falsey, and non-empty collections truth.But you really don't need to check anyway—if the list is empty,  will raise an exception, which is exactly what you wanted to do.So:If you want to customize the exception, so it says, e.g.,  instead of , you can do that with a  statement:If you want to test that your queue class works properly, you will need to write test functions, and then call them. For example:Now you can just run the file as a script, and it will run your tests.In real life, you'll want to think of more complete tests that cover all the weird edge cases you can think of. And you'll probably want to use the  library or a third-party solution like  to organize and simplify your tests.
Use self.queue, otherwise you will get erroryou did not return element when self.queue is not emptyAnd you'd better not return a message when queue is empty, should just raise exception 


Answer URL
