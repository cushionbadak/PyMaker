Natural Text
This question already has an answer here:Why does += of a list within a Python tuple raise TypeError but modify the list anyway? [duplicate]                    2 answers                I found some questions asking about  on SO, but still, I'm confused about this:Consider the code snippet:My questions are:tuples are immutable, but  successfully changed its value.Why?(I know I dont really understand python immutability..)If  is accepted, what's the reason that  raise ?In ,  gets modified, then what's the point raising a ?Thank you 
It's because tuples are immutable, but it can contain mutable data types( a list in ur case) as an element. Your tuple  is a tuple of lists. So that's why you were able to append data to a[0] - which is a list. In this:You were attempting to change the value of the tuple which raises the exception TypeError (due to the use of '=' assignment operator)In three, the list got concatenated due to the use of '+' operator.


Answer URL
