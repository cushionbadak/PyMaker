Natural Text
I'm trying to parse command-line arguments such that the three possibilities below are possible:Thus, the list of files is optional. If a  option is specified, then nothing else can be on the command line. Said in a "usage" format, it would probably look like this:I thought the way to do this with Python's  module would be like this:But Python complains that my positional argument needs to be optional:But the argparse documentation says that the  argument to  meant that it is optional.I haven't been able to find any other value for  that does the trick either. The closest I've come is using , but that only grabs one file, not an optional list of any number.Is it possible to compose this kind of argument syntax using ?
short answerAdd a  to the  positionallongThe code that is raising the error is, If I add a * to the parser, I see that the  attribute is set:while for a  it would be False.  I'll have dig a bit further in the code to see why the difference.  It could be a bug or overlooked 'feature', or there might a good reason.  A tricky thing with 'optional' positionals is that no-answer is an answer, that is, an empty list of values is valid.So the mutually_exclusive has to have some way to distinguish between a default  and real .For now I'd suggest using , a flagged argument rather than a positional one if you expect  to perform the mutually exclusive testing.The code that sets the  attribute of a positional is:So the solution is to specify a default for the The default could even be .  The parser is able to distinguish between the default you provide and the one it uses if none is given.oops -  was wrong.  It passes the  and  test, but produces the mutually_exclusive error.  Details lie in how the code distinguishes between user defined defaults and the automatic ones.  So use anything but .I don't see anything in the documentation about this.  I'll have to check the bug/issues to see it the topic has been discussed.  It's probably come up on SO before as well.
You are trying to use the 'files' argument to catch a number of files but you are not supplying it on the cmdline examples. I think the library gets confused that you're not using the dash prefix. I would suggest the following:



Answer URL
https://docs.python.org/3/library/argparse.html#nargs
