Natural Text
I would like to use bisect (as shown here, in the second answer: Does python have a sorted list?),but instead of using a list of numbers, I have a list of objects. In specific, objects from this class: https://networkx.github.io/documentation/latest/_modules/networkx/classes/graph.htmlI would like the list to keep the graphs sorted by their number of nodes.If I push these graphs into the list, it looks like it is being inserted in an arbitrary way, (If I run it many times, it changes between the runs).Is there "sort" function that each class can define, that when applying sorting it will be used (like operator overriding in other languages) ?If there's another way of doing that, it would be great to.Thanks
The somewhat arbitrary order of your list is due to the fact that objects are ordered by id (which is derived from the RAM address of the object in CPython) unless they provide some other way to define an ordering.The easy way to solve your problem is to simply use the built-in  method (or the  function), passing  as the key function argument.However, if you want to use  to maintain a sorted list, you can do that too, but your class needs to define the Rich Comparison methods. You could add these methods to your graph class, but it may be easier (and cleaner) to define a new class as a wrapper.Here's a simple example that wraps the built-in  type. It defines a private method,  to perform length-based comparisons, and the Rich Comparison "magic" methods call . For greater efficiency, the Rich Comparison methods should be defined directly, to avoid calling another method, but using  is easier to read (and to write :) ).outputYou may like to take a look at : you may find it better for your purposes than .  will (of course) use the Rich Comparison methods if they are defined.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__lt__
https://docs.python.org/3/library/heapq.html#module-heapq
