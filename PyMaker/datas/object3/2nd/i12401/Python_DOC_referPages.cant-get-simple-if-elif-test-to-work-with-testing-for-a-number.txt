Natural Text
My assignment is:You have been asked to write a program that will give the name of a  shape depending on the number of sides. The user can only enter  numbers between 3 and 8, if they enter any other number then the  program should tell them to enter a number between 3 and 8.And here's my Python answer:After the  statement I somehow also need to loop it so that if the person inputs other than 3-8 then it will keep asking for them to enter a number from 3 to 8.The  statement does not work for some reason and outputs this answer in F5:
 produces an object of a different type;  is always going to be true.Either test if you integer is outside a range with  or  and chaining:or use  to see if the number is outside the range:or simply use  on all your tests but the first, and  for the last branch; it'll picked only if the  tests did not match:Note that there is only one  now; logically, the  and  parts belong to that one  statement. Any other  forms a separate, new set of choices, and your  expression was always true, meaning the  test would be true any time  was not true.You can simplify your code by using a dictionary. It lets you associate a key with a value; make the numbers your keys, and you can simply test if  is in the dictionary, or return a default value if it is not:Here, the  method returns the value for the given key, or the default value if the key is not present.If you need to continue the loop, test for the presence of the key and branch based on that:For further tips on how to ask a user for input and handle their wrong input, see Asking the user for input until they give a valid response.
Your  is only "associated" with the previous , so it will hit that  for anything that is not an octagon, then as others have noticed your comparison is not testing if you're in the right range, you're comparing an int against a list.Probably you really want all of your  statements except the first to be  and the one you have as an  to be the  clause for that whole block.Better still, you could have a dictionary that maps the number of sides to the message, and if you don't have a key in the dictionary you can print the error message.For the loop, if you put the whole thing in  you could  after each success and not after the invalid number of sides, which would cause it to repeat the loop until they finally enter a valid number.
 outputs a range of numbers between  and . You're then comparing an integer (which is the value of sides) to a list. Obviously it isn't equal to the list, because it is an integer!
Look at last   , so your code will enter  statement and  will be executed.
You've already covered all the legal answers with your  and  statements, so there's no need to do any specific checking of other values.Just change the last statement into an :
I would do something like this (and it seems to work) : 


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
https://docs.python.org/3/library/stdtypes.html#dict.get
