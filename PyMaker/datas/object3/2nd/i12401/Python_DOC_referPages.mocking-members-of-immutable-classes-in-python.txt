Natural Text
I have a class which uses a sqlite3 database and want to write a test suite for it. In particular, I want to check that  is called with the correct SQL command. However, I have run into trouble with mocking this method since  seems to be written in C and thus the class is immutable. This means I can't just patch the execute method, but if I try to patch the whole class, the assert fails, saying that execute was never called.Below is my best attempt so far, but the assert fails, saying that there was no call. I would appreciate some suggestions as to what I'm doing wrong. Thanks.myclass.pytest_myclass.py
Here goes another approachYou could patch out  and mock the and then mock the return value of .Answer inspired in this answer
 is a C extension and you cannot patch C calls. Any way you should not to test  behavior but just your how code the call  module.What you can do is to patch  method and check if your code call the API in the correct way:Note:I patch  absolute path and not  do the same thing but it is more clear ( and  are exactly the same reference)I'm using  to avoid strange errors like explained in AutospeccingConsider to write your own wrapper and mock it in your test: your code will be more testable and less coupled to  module


Answer URL
https://docs.python.org/3/library/unittest.mock.html#autospeccing
