Natural Text
I have a list of lists, I don't know the length of the main list but each 'sublist' contains necessarily 6 floats. I need to compare each float of each sublist and keep the smaller one for the first three floats and the higher one for the last three and finally, I need to return all these values in a 6-float list in the same order.Here is an example:I read about , sets, list comprehension and different topics on this site but I couldn't achieve what I want.
If you do , you'll create a list of the first element of each sublist together, the second elements together, etc. So you want to get the minimum value of the first 3 and the maximum value of the next 3.In Python 3  will fetch the zipped sublists lazily like an iterator, while in Python 2 it will create the whole list in advance. This is similar to  between the two version. If you want a lazy generation in Python 2, you can use the iterator version from the itertools module.Edit: Visual example of what  achieves.The star syntax unpacks the list in several arguments, so that  becomes , which is what you want.
You can do it "manually" using 2 nested for loops
NumPy solutionYou can use NumPy:Full examplePrints:


Answer URL
https://docs.python.org/3/library/functions.html#zip
