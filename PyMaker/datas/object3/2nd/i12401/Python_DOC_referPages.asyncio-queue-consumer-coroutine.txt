Natural Text
I have a  subclass receiving data from a server.I am storing this data (each line, because the data is text) in a .I want to have another coroutine responsible for consuming the data in the queue and processing it.Should this be a ?What if the queue becomes empty because for a few seconds no data is received? How can I make sure my consumer doesn't stop ()?Is there a cleaner way than using a global variable for my queue?
Should this be a asyncio.Task?Yes, create it using asyncio.ensure_future or loop.create_task.What if the queue becomes empty because for a few seconds no data is received?Simply use queue.get to wait until an item is available:Is there a cleaner way than using a global variable for my queue?Yes, simply pass it as argument to the consumer coroutine and stream protocol:How can I make sure my consumer doesn't stop (run_until_complete)?Once the connection is closed, use queue.join to wait until the queue is empty.Full example: Alternatively, you can also use streams:


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.ensure_future
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.create_task
https://docs.python.org/3/library/asyncio-queue.html#asyncio.Queue.get
https://docs.python.org/3/library/asyncio-queue.html#asyncio.Queue.join
https://docs.python.org/3/library/asyncio-stream.html?highlight=streams#tcp-echo-client-using-streams
