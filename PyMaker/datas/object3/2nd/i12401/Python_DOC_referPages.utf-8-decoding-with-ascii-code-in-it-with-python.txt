Natural Text
From the question and answer in UTF-8 coding in Python, I could use binascii package to decode an utf-8 string with '_' in it. This code works fine with only utf-8 characters:However, this code does not work when the string has normal ascii code in it. The ascii can be anywhere in the string. Maybe, I can use regular expression to extract the utf-8 part and ascii part to reassmeble after the conversion, but I wonder if there is an easier way to do the conversion. Any good solution? 
Quite straightforward with :
That is some truly terrible input you've got. It's still fixable though. First off, replace the non-"encoded" stuff with hex equivalents:The above is a verbose version that shows the individual steps, but as chthonicdaemon's answer point's out, it can be shortened dramatically. You use the same regular expression with  instead of , and pass a function to perform the replacement instead of a replacement pattern string:You can package that up as a function itself, so you have one function that deals with purely hex encoded UTF-8, and a second general function that uses the first function as part of processing mixed non-encoded ASCII and hex encoded UTF-8 data.Mind you, this won't necessarily work all that well if the non-encoded ASCII might contain  normally; the regex tries to be as targeted as possible, but you've got a problem here where no matter how finely you target your heuristics, some ASCII data will be mistaken for encoded UTF-8 data.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
https://docs.python.org/3/library/re.html#re.split
