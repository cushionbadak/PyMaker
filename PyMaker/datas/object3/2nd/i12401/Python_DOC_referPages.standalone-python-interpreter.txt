Natural Text
I want to run a python program without any underlying OS. I have read articles on running python on small microcontrollers, but i want it on a bigger processor (Intel, ARM).My criteria is:It could be directly run as binary.The Python interpreter could be loaded, onto which I can run my program.At worst, tell me an extremely small, basic OS i can run it on.Note: I want to use my program like a minimalistic operating system. I should be able to load it like any other OS, and it should be able to access memory and have basic I/O.Note 2: Will there be limitations in terms of python's functions?
Note: this post describes x86 exclusively, as, next to ARM, requested by the OP.It could be directly run as binary.Binary? Python is not compiled, so no binary is produced. I think you mean just "run a Python program directly" here.You could implement an additional compilation step, so that Python source files are compiled to bytecode prior to being executed, of course.The Python interpreter could be loaded, onto which I can run my program."loaded" is a problem here. You need software to load the interpreter, displaying a chicken-egg problem. Intel x86 solves the problem by using a so-called BIOS (Basic I/O System), which starts further, user-defined programs. This "user-defined" program would be your Python interpreter then.On more modern machines, UEFI is used instead of the legacy BIOS.I want to use my program like a minimalistic operating system. I  should be able to load it like any other OS, and it should be able to  access memory and have basic I/O.The aforementioned BIOS provides, as the acronym says, basic I/O functionality like reading/writing from/to disks, reading/writing from/to the screen, etc. Either use these basic routines and abstract from these or circumvent them and rewrite them all from scratch. That includes graphics drivers (a basic VGA driver will suffice), disk drivers (for loading Python files from disk), and filesystem (a simple FAT-16 is sufficient).After all, you not only need to write a Python interpreter but a whole development environment from scratch.Will there be limitations in terms of python's functions?It depends on what you implement. For networking you need the appropriate drivers, for file stuff a filesystem + secondary storage driver. You are the ultimate master of your system you create, so it is up to you how un/limited your Python environment will be. 


Answer URL
https://docs.python.org/3/library/dis.html
