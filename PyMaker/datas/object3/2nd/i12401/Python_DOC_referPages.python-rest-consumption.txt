Natural Text
I'm beginning to expand my python knowledge and am attempting to consume (e.g. update and receive data from a database with http POST requests with XML payloads) a REST API. I'm well aware of how to consume a REST API, but am a bit unsure what libraries to use with regards to Python specifically.Is  the way to go? the  module?  (of which I'm entirely na√Øve to)? This is not intended to be a subjective answer filled with opinions, but a simple introduction and a point in the right direction on how to use  (or others) in conjunction with REST API. How do you consume a REST Service with Python?
There are many python libraries that You can use to make REST call, famous among them is Requests.Sample GET callSample POST callYou can check out this link http://stackandqueue.com/?p=75 for more details
Hi I am assuming that by stating  you meant to use a REST api as a client ( doing GET requests or PUSH ) This might be my personal preference, but I always use the requests library to do my http calls Once I get a respond, depending on the type of results, I will parse it with either the built-in json library or with beautifulsoupConsuming a REST API that returns JSON results is great because a json can be decoded ( loaded ) into a python dictionary easily. ( a python dictionary has the same structure as json - sort of ) I am going to give you an example with a  request with a JSON response because it is easier but you can find example of  request get easily as well
Both urllib2 and requests will do the work. If it's just a web service API, simply make a http call. requests module is the better choice for JSON responses since urllib2 doesn't come with a native JSON serializer which requests has. For XML responses, you will have to use a external XML parser(such as minidom). Regarding making http calls, requests and urllib2 are really not that different. A comparison is here(What are the differences between the urllib, urllib2, and requests module?) but actually they are quite exchangable.Django is a web service framework and is on an entirely different level. Django applications can be both service provider and client of REST APIs but Django doesn't come with it natively. You will still have to build the functionalities with other tools. You can use django-rest-framework to build your own REST APIs or call 3rd-party the same way with request.
For a REST Client I would also recommend requests, I would have just made this a comment on biobirdman's answer but don't have enough rep.If you are working with json you don't need to import the json module, and you can send a straight dict object and parse the json response back into a dict like this: eg.Hope that helps.


Answer URL
https://docs.python.org/3/library/json.html
