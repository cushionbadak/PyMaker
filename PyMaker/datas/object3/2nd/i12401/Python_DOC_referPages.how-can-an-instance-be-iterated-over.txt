Natural Text
In datatstructures.py, there is a method : is an instance of the class; how can it be iterated over?
Simple, it has to implement  method, e.g.
The class which the given method belongs to extends  which is iterable, thus the method can iterate on the class. 
If the object in question is Iterable it can be iterated. This is how lists, dicts, and other sequences are designed.
My question is not How to but rather How can (as in: how can it be possible) refers to the actual tangible object you deal with,  are more like their interface (don't interpret this too strictly); if an instances' class defines a  (or ) method they can be iterated over in a  loop. PEP 234 deals with the semantics and implementation of iterators.In your specific case the function is a generator which has nothing to do with the  method, it simply transforms the  function to a generator in order to support iteration of the form:If the object doesn't define an  it won't be able to be iterated over, as an example:The instance  is now not iterable:On the other hand, we can use  in a  loop:Changing  to  changes the picture, now the instance  is iterable:Iterating through  is done intuitively with:Asking why, as in, how can this be possible is like asking why can strings be multiplied with . This is the way things were implemented because it just made sense as a way of handling the common case of looping through the contents of a container. Don't overthink things, it isn't necessary.


Answer URL
https://docs.python.org/3/glossary.html#term-iterable
