Natural Text
I am trying to make my own lemmatizer for Spanish in  using a lemmatization dictionary.I would like to replace all of the words in a certain text with their lemma form. This is the code that I have been working on so far.Here is an example  file which contains the lemmatized forms used to replace the words in the , or . The example dictionary is a tab-separated 2-column file in which Col. 1 Represented the values and Col 2 represents the keys to match.ExampleDictionaryMy desired output is as follows:Using these inputs (and the example phrase, as listed in within the code). My actual output currently is:Currently, I can't seem to understand what it going wrong with the code.It seems that it is replacing letters or chunks of each word, instead of recognizing the word, finding it in the  and then replace that instead.For instance, this is the result that I am getting when I use the entire dictionary (more than 50.000 entries). This problem does not happen with my small example dictionary. Only when I use the complete dictionary which makes me think that prehaps it is double "replacing" at some point?Is there a pythonic technique that I am missing and can incorporate into this code to make my search and replace function more precise, to identify the full words for replacement rather than chunks and/or NOT make any double replacements?
Because you use text.replace there's a chance that you'll still be matching a sub-string, and the text will get processed again.  It's better to process one input word at a time and build the output string word-by-word.I've switched your key-value the other way around (because you want to look up the right and find the word on the left), and I mainly changed the replace_all:
I see two problems with your code:it will also replace words if they appear as part of a bigger wordby replacing words one after the other, you could replace (parts of) words that have already been replacedInstead of that loop, I suggest using  with word boundaries  to make sure that you replace complete words only. This way, you can also pass a callable as a replacement function.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
