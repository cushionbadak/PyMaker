Natural Text
What is the best way to replicate this simple function using a list comprehension (or another compact approach)?
In Python 3, you'd use :Accumulate yields the running result of adding up the values of the input iterable, starting with the first value:You can pass in a different operation as a second argument; this should be a callable that takes the accumulated result and the next value, returning the new accumulated result. The  module is very helpful in providing standard mathematical operators for this kind of work; you could use it to produce a running multiplication result for example:The functionality is easy enough to backport to older versions (Python 2, or Python 3.0 or 3.1):
Since you're already using , you can use :
Ok, you said you did not want  but here is my solution anyway.It seems to me that you are simply taking the cumulative sum, thus use the  function.For a random example


Answer URL
https://docs.python.org/3/library/operator.html
