Natural Text
Does anybody know what is the equivalent of batch script's  in python ?Clarification: in a batch file  is all parameters specified in the command line  --  this is very useful if you want to forward the parameters to another program.My Problem is that I want to convert one batch call to a python call :Batch call is :what is the equivalent python call ?(P.S. I know I can just go through the whole  list and append parameters in some string and pass that to the batch file, but I am looking for a simpler solution here)I tried following :But that is not working. I tried similar thing using  as well. Its not working either. Please help.
 is pretty close. The thing is that  is a list of arguments, and  is a slice of a list, which is again a list. If you want a string with all arguments combined, you can join them again:Or even better, you use the  module which methodâ€™s accept a list of arguments:Subprocess is much more flexible when handling parameters and will also behave similar to the parsing in . As an example, when calling a script with the arguments , argv will contain this:Now if we were to simply join this list, we would get a single stringAs you can see, the information of the compound argument  is lost, resulting in a completely different meaning.When using  however, you keep your list and subprocess will automatically make sure to pass these arguments correctly to the called program. So the called program will be able to get  as a combined argument too.
You want  (or one of it's convenience wrappers):It's definitely preferred to .  The advantage here is that commandline arguments which may need to be quoted to keep their meaning effectively stay quoted.  Additionally, this alternative is probably safer than  since it avoids creating a subshell.
If you want to use , you need to put the command line back together manually. Python has already parsed the command line apart into separate arguments (or MSVCRT has done it on Python's behalf). This means you need to not just concatenate them back together, but also quote them appropriately.There is nothing in the stdlib that handles the "quote them appropriately" exactly the way MSVCRT wants. That's partly because Windows quoting is actually ambiguous; there are some cases where it is impossible to round-trip things. But, for simple cases, either POSIX-style quoting (with ) or just sticking explicit quotes around each argument will work. So, either of these:Then:But using  is better than . One reason is that you don't have to fiddle with quoting things; you can just do this:Someone still needs to put the list of arguments back together in a string so it can be passed to the shell, but now that "someone" is the  module rather than your code.


Answer URL
