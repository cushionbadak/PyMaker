Natural Text
I am pondering over Request/Response methods of Scrapy.Can somebody explain me what the below statements (the request part) actually do?:thanks
When you say "I am pondering over Request/Response methods of Scrapy", I think you're a little confused.  and  are classes, not methods.And, while these classes of course do have methods, you don't ask about any of them, you just ask about one of the data attributes, .Or, if you meant methods in the HTTP sense, well, a  defaults to , but you can specify a different one with the  argument; what else is there to know?As the documentation for  says:A  object represents an HTTP request, which is usually generated in the  and executed by the , and thus generating a .In other words, you usually don't want to create one yourself. You give the  a list of URLs to start with, and it makes a  for each URL on the list, and for each additional URL that it discovers while scraping.You may sometimes need to look at the  that goes with a . And you may occasionally need to customize the creation of s inside a complex . But you will rarely need to craft them manually.Meanwhile, you seem to have confused yourself with your naming. You've got a variable named , but it's not a list of URLs, it's a single URL. Which, if you actually used it as a  in the normal way, would be treated as a list of single characters. But fortunately, you're not doing that; you're passing  as the  argument to a  object—and, since it happens to be just a single URL, your two confusions cancel out and you create a valid  object.You could then feed this  object to a  manually to get back a  object. But there's no good reason to do that. If you want to download files manually instead of spidering them, just use the stdlib module /, or a third-party library specifically designed for making manual downloading easy, like , not a spidering library.Meanwhile,  will just return a . As the  docs explain, it's just a dictionary, which is empty for new s (unless you pass a  argument to the constructor, which you didn't), and:… is usually populated by different Scrapy components (extensions, middlewares, etc). So the data contained in this dict depends on the extensions you have enabled.Since you haven't actually done anything with the  after creation, it doesn't matter what extensions you have enabled; it's going to be empty.


Answer URL
