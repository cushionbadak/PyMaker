Natural Text
I'm relatively new to Python, and reading through a tutorial page on the documentation website, I came across this snippet:This made me curious, so I decided to type it into a Python file and test it out. When I did this, however, it gave me a different result:This question may seem trivial, but I'm curious why the actual behavior did not match what the Python documentation said it would do. Any answers?This behavior occured while using an online interpreter. Running it locally returned False.
You never said which version of Python you're running, and that can make a huge difference. The arithmetic is likely to be IEEE based doubles which should be consistent from system to system. However CPython is based on underlying C libraries, and those can vary in the way they round floating-point constants as they're input. Other versions of Python will also be dependent on some underlying platform.Edit: Confirmed. Using the online interpreter given in the question I get:Using Python 2.7 on Windows:It appears the online interpreter rounds the input differently.
First comment is the answer. On my system:from python docs (http://docs.python.org/2/tutorial/floatingpoint.html):Binary floating-point arithmetic holds many surprises like this. The  problem with “0.1” is explained in precise detail below, in the  “Representation Error” section. See The Perils of Floating Point for a  more complete account of other common surprises.


Answer URL
