Natural Text
I want a function that normally takes in an argument of type X where X is either a scalar, a list, or a dict, and returns a list of X's with the same key values, based on other information.My question is, how can I dispatch between the three types?edit: A string is to be interpreted as a scalar, not a list/iterable. Tuples are to be interpreted as iterable.edit 2: I want duck typing, not strict typing.
It depends on how strict you want to be with your input. The  approach forces you to specify the types to accept (I.e., no duck-typing). It works as long as your users are only passing in those classes or subtypes of those classes.  You can also try to distinguish parameters by the methods they support. An example of this would beEdit: added the special case for stringsThe choice of control flow depends on how flexible you want to be, and also how you want yo deal with ambiguous cases. Eg, is a string considered a sequence of characters or a scalar?
You need to do things in the proper order since  and  types are iterable.
Use the new fancy stuff :) by import collectionsYou should also consider looking at the types module
maybe?? (Im probably missing a few types) ...
Or you can use type, but isinstance is recommended according to http://docs.python.org/2/library/functions.html#type
Thanks for all the information!I ended up doing this, since I had to do some preprocessing of the  prior to iterating over the information:
Then you never have to worry about failing an  because of somebody implementing an iterable subclassed from something unexpected.


Answer URL
