Natural Text
I am looking at this tutorial in twisted python.https://github.com/jdavisp3/twisted-intro/blob/master/twisted-client-3/get-poetry.pyI have never really debugged python before.I wanted to see which classes's instances are alive before the reactor.stop fires.I was checking this Printing all instances of a classwith this codeHow can I selectively view the top most information and then further inherited data and so on?From a twisted point of view, I want see which factory instances are currently active and how is it related to the protocols
But, if you really just want to poke things to get a feel for how to debug Python, check out 'dir(obj)', which will list all the properties and methods of an object.Will yield:Now, your mileage may vary with stuff like objc - since it's a thin Python wrapper around making shared library calls. They won't have docstrings, or in some cases respond to 'dir' if function lookup is lazy-lookup against shared libraries. But, you never know.Most of the time when it came to the objc stuff, I just dug around in their source code to figure out how they did things when the normal methods of digging up dirt didn't work.Speaking of normal methods:A neat feature with Twisted, you can also serve a telnet or SSH accessible interactive Python shell that can actually poke and prod things 'live'.  Check here for details on TwistedConch.Or..Another trick is to add a 'del(self)', function to your objects that prints something out as the object gets cleaned up by the garbage collector (when it's deleted / out of scope)Or..You could also play with pdb, or if you like ncurses pudb is awesome. Check out this question for a couple nifty tricks for using pdb. starting-python-debugger-automatically-on-errorAnd, if worse comes to worse - you can always use help(object). Those are pretty much the debugging methods that get me through the day. If anyone else has some clever ideas don't be shy.


Answer URL
