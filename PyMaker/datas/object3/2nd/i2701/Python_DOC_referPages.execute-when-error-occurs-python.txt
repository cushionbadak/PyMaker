Natural Text
I guess I'm not the first asking this question, but I haven't found a solution that I could use/understand yet. And the issue is probably not as simple as i first expected.I think it can be boiled down to two general questions:1) Is there a way to avoid Python to stop when an error occur and just jump on to the next line of code in the script?2) Is there a way to make Python execute a line of code if an error occurs? Like, if error then...My concrete problem:I have a very large program with a lot of functions and other stuff, which would take forever to adjust individually by using "try" for example (if i understand it correctly)My program run as a large loop that gather information and keeps running. This means that it does not really matter to me, that my program fails multiple time as long as it keeps running. I can easily handle that some of the information is with error and would just like my program to take a note of it and keep going.Is there a solution to this?
As you rightly pointed out, the  block in Python is by far your best ally:Alternatively, you could also use, in case you didn't need the Exception:
Your only possibility is to rely on the  clause. Keep in mind that the  may use also  and  (see documentation:or, when an error is raised:I urge to point out, by the way, that ignoring everything makes me shiver:you really should (at least, more or less) identify which exception can be raised, catch them (, check built-in exceptions) and handle them individually. What you're trying to do will probably snowball in an endless chain of problems, and ignoring them will probably create more problems!I think that this question helps to understand what a robust software is, meanwhile on this one you can see how SO community thinks python exceptions should be handled


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#try
https://docs.python.org/3/library/exceptions.html
https://docs.python.org/3/tutorial/errors.html
