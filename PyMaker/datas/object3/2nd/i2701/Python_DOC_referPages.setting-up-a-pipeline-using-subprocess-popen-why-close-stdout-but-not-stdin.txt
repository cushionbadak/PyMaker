Natural Text
The Python 3 documentation for  (1) presents the following sample code for pipelines:The p1.stdout.close() call after starting the p2 is important in order for p1 to receive a SIGPIPE if p2 exits before p1.Why is this necessary? Previous questions (Replacing Shell Pipeline, Under what condition does a Python subprocess get a SIGPIPE?, Explain example from python subprocess module) have answers stating that  has multiple readers, which must all be closed to prevent 's output pipe from closing.What is the relation between  and , and do I have to close ?
No, you do not have to close . In fact you can't, because it's None.This is because , while a Python stream object is only created if . See subprocess Popen.stdin docs)I wrote a test program (Python 3) which terminates with  if , but spins forever?? if :


Answer URL
https://docs.python.org/3/library/subprocess.html#replacing-shell-pipeline
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stdin
