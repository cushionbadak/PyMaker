Natural Text
Hi I want to merge two dictionaries' values if the keys are the same. Idea outputOutput for the Keys that cannot be foundI triedThere is nothing in DOC and all the dictionary elements are in NO_MATCH, no error message. don't know where goes wrong, also I think there must be better ways to do this.Thank you!
Edited: You can declare two separate dictionaries and iterate through all the keys of both dictionaries. For every iteration, check if the key exists in  and  and concatenate the two corresponding lists  
It's not particularly fancy but this should solve what you're looking forwhere  and  are s. The  takes the union of the two key sets.
As for why your code goes wrong.Not there! Everything you define inside a loop, will be redefined everytime the loop goes around.This goes to the else block even if there's a matched key. For instance, in your case, it compares  in  with  in , . BUT, then it proceeds to compare  in  with  in ,  which is wrong, because  IS a matched key and  IS in .Not sure how you didn't get an error, seems very erroneous.This lines add the entire  to , wrong!FIX:BETTER WAYSome list comprehensions would keep things clean.EXPLAINATION:This, in English, create a new dictionary called .For every key in , if the key is also in , create the same key in  and assign both the values of that key from  and .This ... For every key in , if it's not in , create a key and assign the associated value from This ... For every key in , if it's not in , create a key and assign the associated value from This ... is a cool way of merging 2 dictionaries (Only for Python 3.5 and up)
This looks like a great use for The key precedence will be on the order of the dictionaries, so if you can't control order or if the  are mixed and matched: this way can't help.


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
