Natural Text
The return value of the  function in Python 3 is an Iterator.Why can the  function use the  result, when it needs an Iterable?
The  function can consume the iterator returned by  because an iterator is an iterable object. All iterators have an  method that returns the iterator itself. That's all you need to be iterable (an  method that returns an iterator, though you can instead get by with a  method in some cases).That said, a few people will be careless of their terminology and use the term iterable when an iterator won't do (perhaps because they need to iterate on the same input several times). There's unfortunately not a single precise name for that subset of iterables (though sequence is often appropriate).The Python documentation is usually pretty good about this though. If it says a function expects an iterable, and iterator should always be acceptable. If a function or method needs to iterate over the input multiple times (as for instance,  does), it will build its own temporary sequence internally if the input isn't already of an acceptable type.


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functools.html#functools.reduce
