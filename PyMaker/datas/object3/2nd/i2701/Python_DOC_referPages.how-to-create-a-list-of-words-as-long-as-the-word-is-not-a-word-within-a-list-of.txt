Natural Text
I have some words: I also have a list of tuples that I need to check against: What I want to do is create a list out of all the words that are not in the list of tuples.  So the result of this example would be  What I tried seems to create duplicates:  How do I generate a list of the words not in the tuple-list, and do it as efficiently as possible?  No use of sets.  Edit: chose answer based on following restriction of 
Here is a oneliner using list comprehensionThe inner list,  extracts the second element from the tuple list.The outer list,  extracts the words filtering out the ones in the just extracted list.P.S. I assumed you wanted to filter only the second element of the tuple list.
Make a  of known words from your tuples list:then use it as you did before:Checking if an item exists in a set is O(1), while checking in a list or tuple is O(length of the list), so it is really worth using sets in such cases.Also, if you don't care about the order of the words and want to remove duplicates, you could do:
this is a version where i flatten (using ) your tuples into a  and compare against that set (using a  will speed up the lookup for the  operator):
I have made a an assumption, that tuple[1] would have only one element, if not that would need a small change.


Answer URL
https://docs.python.org/3/library/itertools.html?highlight=chain#itertools.chain
https://docs.python.org/3/library/stdtypes.html?highlight=set#set
