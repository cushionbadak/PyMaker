Natural Text
I am very new to coding and picked python as my first coding language. I am working on a exercise called Run Length Encoding. After some searching I found solution but I am having hard time understanding the code. Can someone break this code and explain in simple words. Thank You.
The first thing to do is to break down the expression into smaller ones:The second one is easy: we have some list of bits, each of which is a string, and we just join them up into one big string.The first one is a list comprehension. Every list comprehension can be rewritten as a  statement around an , so let's do that:The  part may seem tricky if you've never seen  before, but if you just call it separately, it should be pretty obvious:This gives you:In other words, each group  is a run of equal elements, and  is just the thing they're all equal to.Now let's break down the inner statement:into parts:The last two lines are hopefully obvious. So, that just leaves us with the first one.We're calling  on a generator expression. Generator expressions are just like list comprehensions but lazy, and we don't care about the laziness here, so we can break it down the same way we did above:So now it should be obvious what  does: it's just the number of things in . In fact, it's just like calling , except that it works for arbitrary iterables, including lazy iterators, not just sequences.This is the idiomatic way to count possibly-lazy iterablesâ€”but we could have replaced it (at the cost of a bit of performance) with:So, putting it all back together:Use  to convert the string into a bunch of groups, each of which is the same character repeated over and over.For each one:Count the length of that group.Make a string like  using the key  and the fact that the group of s has 12 members.Append that to a list.Take that list of  and join it into a string .
Consider .Your code is equivalent to:From the documentation, " groupby makes an iterator that returns consecutive keys and groups from the iterable".It's easier to understand it with an example.outputs:In practice each element in the iterator returned by groupby is a  with an iterator to the list of all the consecutive .In your code you first create a list with all the pairs (c, number of consecutive times c appears):then all the elements in the list are joined together to create a single string


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/itertools.html#itertools.groupby
