Natural Text
My program has a lambda as a command for a tkinter object inside a loop. I want the lambda to pass an argument for a function where the function will make some changes according to the argument.Whenever I try to run this, it always passes in the last iteration of cat because of some weird nature in tkinter commands. Instead, I want it so that the argument matches exactly whatever iteration it was at when the lambda was defined. I don't want the argument to change just because I clicked the check button after its iteration.Here is the function that the lambda calls.As some context to what this program is, I am trying to have a bunch of checkbuttons toggle on and off in response to a click on a main checkbutton. The only way I know which checkbuttons to toggle (since I have many) is to pass an argument to a function using lambda.I do understand that I could just find the value of the current iteration using if/elif/else and pass a string instead of a variable but I seriously don't want to do that because it's just not scalable.If it helps, the text for my checkbutton and the argument I want to pass is one and the same.Is there any workaround so I can preserve the current iteration without Tkinter going all wonky?
You need to bind the data in  to the function when it's created. For an explanation, see this question. There are a few ways to do this, including partials and closures. This is how you would apply a partial to your example: ExplanationIn your code, the lambda refers to an iterator variable () declared in the outer scope of the loop. One thing to note is that the scope of a loop "leaks" the iterator variable, i.e. you can still access it after the loop. The lambda functions refer to the iterator variable by reference, so they access the most recent value of the iterator. A runnable example: Instead, we want to bind the value of the iterator to the functions at each step. We need to make a copy of the iterator's value here. 


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
