Natural Text
I have the following regex in python to parse listings in text:Everything works as expected, except when the re is compiled with the  flag, then the first two chars are not returned.Output from re group 1 when compiled without the IGNORECASE flag:Output from re group 1 when compiled with the IGNORECASE flag:The documentation regarding the flag states:Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too. This is not affected by the current locale. To get this effect on non-ASCII Unicode characters such as ü and Ü, add the UNICODE flag.So no hint regarding this behaviour, what could explain it or am I missing something obvious here?EDIT: As requested in the comments, the full code example (Python 3.6.5):Code above returns wrong result, removing the re.IGNORECASE flag returns the correct result.
The problem here is that you're passing the  flag in the wrong place. Since  is a compiled regex,  has a signature like this (docs):Pattern.search(string[, pos[, endpos]])[...]The optional second parameter pos gives an index in the string where the search is to start; it defaults to 0. This is not completely equivalent to slicing the string; the '^' pattern character matches at the real beginning of the string and at positions just after a newline, but not necessarily at the index where the search is to start.As you can see, you've passed  as the value of the  parameter. Since  happens to have a value of 2, you end up skipping the first 2 characters.The correct usage would be to pass the flags to :


Answer URL
https://docs.python.org/3/library/re.html#re.Pattern.search
https://docs.python.org/3/library/re.html#re.compile
