Natural Text
Usually, a period in Python denotes class membership:Sometimes the language doesn't seem quite flexible enough to completely express an idea from domains outside of computer science though. Consider the following example which (fairly brittly for brevity) uses the same operator to seem like something completely different.Here we've taken over  so that in many scenarios where Python would attempt to find an attribute from our vector it instead computes the mathematical dot product.If such behavior is kept restricted in scope to the domain of interest, is there anything wrong with such a design pattern?
It's a bad idea.Why? Because the "dot operator", as you call it, isn't really an operator to begin with. That's because the "operand" on the right-hand side is interpreted as a string, not as an expression. This may seem insignificant to you, but it has plenty of problematic consequences:Python programmers are used to  meaning "Take the  attribute of the  object". Turning the dot into a dot product operator breaks this expectation and will confuse people who read your code. It's unintuitive.It's ambiguous, because you cannot know if the user is trying to calculate a dot product or access an attribute. Consider:Keep in mind that methods are attributes, too:Because the right-hand operand is interpreted as a string, you have to jump through a whole bunch of hoops to turn that string into something useful - as you've tried to do with , which looks up a variable in the global scope. The problem is that - in certain situations - it's completely impossible to access a variable just by its name. No matter what you do, you will never be able to access a variable that no longer exists because it's already been garbage collected:Because the right-hand operand is a string, you cannot use arbitrary expressions on the right-hand side. You're limited to variables; trying to use anything else on the right-hand side will throw some kind of exception. And to make it worse, it won't even throw the appropriate  like other operators would:Unlike real operators, the "dot operator" can only be implemented in the left-hand operand. All other operators can be implemented in either one of two corresponding dundermethods, for example  and  for the  operator. Example:This isn't possible with your dot product:Bottom line: Implementing a  method in your  class is the way to go. Since the dot isn't a real operator, trying to turn it into one is bound to backfire.
I would not recommend it. What do you mean by "the language isn't flexible enough to express an idea"? In your example,  is expressive and has the desired effect. This is, by the way, exactly how  does it.
If you want to use vectors, there's a special method name that isn't mentioned in th most part called . This comes with its corresponding in-place and reflected methods  and . The operator is an :


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__add__
https://docs.python.org/3/reference/datamodel.html#object.__radd__
