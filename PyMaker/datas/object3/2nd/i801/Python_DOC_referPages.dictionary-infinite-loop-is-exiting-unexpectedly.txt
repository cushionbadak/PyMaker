Natural Text
I was experimenting with various ways of creating an infinite loop in Python (other than the usual ), and came up with this idea:On paper, I traced out the way this would infinitely loop:I loop through the key's value in the dictionaryI delete that entry.The current counter position in the loop  will be the new key with value  which updates the dictionary.I output the current counter.This, in my head, should output the natural numbers in a sort of infinite loop fashion:I thought this idea was clever, however when I run it on Python 3.6, it outputs:Yes, it somehow stopped after 5 iterations. Clearly, there is no base condition or sentinel value in the code block of the loop, so why is Python only running this code 5 times?
There is no guarantee that you will iterate over all your dict entries if you mutate it in your loop. From the docs:Iterating views while adding or deleting entries in the dictionary may  raise a RuntimeError or fail to iterate over all entries.You could create an "enumerated" infinite loop similar to your initial attempt using . For example:
In this case, like @benvc wrote, this is not guaranteed to work. But in case you wonder why does it work in C-Python:The C-Python implementation destroys the dict object after some inserts and copies it to a new space in memory. It does not care about deletions. So when this happens, the loop notices it and breaking with an exception.Check out this link if you want to read more about this, and many other interesting  python internals here.https://github.com/satwikkansal/wtfpython#-modifying-a-dictionary-while-iterating-over-it
I just tested your code in python2 and python3One thing comes to mind that could be going on. Either there is only a certain amount of memory being allocated in your dictionary when you create the first key value and when you delete the key value we do not allocate any memory or deallocate the memory you are just removing the value. Once all the allocated memory is used it exits. Because if you run without that del you will get this errorSo python creates enough memory for that key value and a few more and once it is used up theres no more memory allocated for your dictionary. 
As many pointed out, modifying a datastructure during iteration with a  loop is not a good idea. The  loop though does allow that as it re-evaluates its loop condition at each iteration (I'm impressed nobody suggested that as alternative yet). One just has to find the right loop condition. Your script would have to become:In Python, a dictionary is falsy when it is empty (see docs), so the loop will only stop if at the beginning of an iteration  is empty. Since the dictionary only has one key-value pair,  should be enough to get that pair and remove it from the dictionary. As the next integer is added right after the dictionary is emptied, the loop condition will never be false when evaluated thereby resulting in an infinite loop.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
https://docs.python.org/3/library/stdtypes.html#dict.popitem
