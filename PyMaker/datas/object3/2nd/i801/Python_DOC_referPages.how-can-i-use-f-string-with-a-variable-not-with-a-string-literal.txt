Natural Text
I want to use f-string with my string variable, not with string defined with a string literal, .here is my codeThis code gives output:But I want:how can I do this?
If you want the user to have access to your namespace, you can do that, but the consequences are entirely on you. Instead of using f-strings, you can use the  method to interpolate dynamically, with a very similar syntax.If you want the user to have access to only a small number of specific variables, you can do something likeYou can of course rename the key that the user inputs vs the variable name that you use:And you can just go and let the user have access to your whole namespace (or at least most of it). Please don't do this, but be aware that you can:The reason that I went with  instead of  is to avoid the situation where literal braces get treated as further, erroneous expansions. For example, 
 strings are great when interpolating expression results into a literal, but you don't have a literal, you have a template string in a separate variable.You can use  to apply values to that template:String formatting placeholders that use names (such as ) are not variables. You assign a value for each name in the keyword arguments of the  call instead. In the above example,  passes in the value of the  variable to fill in the placeholder with the .Unlike -strings, the  placeholders are not expressions and you can't use arbitrary Python expressions in the template. This is a good thing, you wouldn't want end-users to be able to execute arbitrary Python code in your program. See the Format String Syntax documenation for details. You can pass in any number of names; the string template doesn't have to use any of them. If you combine  with the  call convention, you can use any dictionary as the source of values:The above would let a user use any of the names in  in their template, any number of times they like.While you can use  and  to produce dictionaries mapping variable names to values, I'd not recommend that approach. Use a dedicated namespace like the above to limit what names are available, and document those names for your end-users.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/library/string.html#formatstrings
