Natural Text
I am writing a python installer script that needs to install 2 additional modules via pip inside the script, then import and use those modules to finish the installation in the same script. The pip call works fine, but when I attempt to import the module (winshell) I just installed, I get an error that it cannot import another module (win32con) which is part of the second module I installed (pywin32).If I re-run the script after the error, everything works like it should, so I know the actual pip installs are working correctly. I seems like the running python script just doesn't know about some of the installed modules until the program is re-run. Is there a way to make a running script "update" the modules it sees available without having to re-run the program? Here is the simplified code:Here is the error:When I run the second time (and the modules are already installed):
This is a possible solution that I would recommend you to check:try installing  using This problem does not seem to be related to your code, but rather to the module installation itself. I still find it weird since it works well when you run it the second time, but still worth giving a try
If you install new modules during a program's execution, you need to invalidate the module finder caches to make sure the import system sees the new modules:
be careful that never chose the file name same as your library or modules name.for example if I want to use of requests and import it, if I chose my file name 'requests'when Run the code will raise error 


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.invalidate_caches
