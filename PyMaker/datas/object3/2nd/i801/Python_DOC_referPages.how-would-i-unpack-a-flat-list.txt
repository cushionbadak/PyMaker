Natural Text
This question already has an answer here:What is the most “pythonic” way to iterate over a list in chunks?                    34 answers                Please understand, I searched for this and it already has an answer. However I'm looking for a different way to get this result. This could potentially be flagged as a duplicate although I think there is a cleaner answer for this possibly using itertools (most likely ).Say I have a list . And I want 3 values at a time assume the list is number of valuesⁿ long as to rule out improper amount of values at the end.Here's how I'd like to iterate through the list (this code wouldn't work obviously):Now with the code above I'd like  to be  then  respectively in each iteration.I'm sure there's a cleaner approach out there than the one in the answer I linked to.For the lazy people that don't want to click on a link to see the approach I'm referring to, here it is:You can use slices if you want to iterate through a list by pairs of successive elements:
Here's a hacky solution with  and :Output:Additionally if you want it to iterate over everything when your original list isn't divisible by three you can use  from :Output:
Perhaps use an iterator and increment the iterator when you want the next element in the chunk:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
