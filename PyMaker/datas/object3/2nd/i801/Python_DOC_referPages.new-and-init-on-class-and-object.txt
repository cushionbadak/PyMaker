Natural Text
In Python 3, when defining a subclass, why do you need to use  as the first argument of , but not to use  as the first argument of ?An example:When I compared these functions I got more confused:So, what are the differences between  and  behind these results? Which methods are bound and which are free? Why are you able to call  but not ? Is  a method defined in  itself or in its metaclass?
The biggest part of the picture you're probably missing is that  is a staticmethod, special-cased to be one even if you don't use the  decorator.When calling a method through ,  performs the same kind of argument binding that would be performed normally for that kind of method (using the descriptor protocol). For a staticmethod like , that means no arguments are automatically bound, so  has to be passed explicitly. For an instance method like , that means  is bound automatically, which is why you don't have to pass  to .
The main purpose of  is to allocate a new instance of the class, while 's job is to set up an existing instance.According to the docs: is a static method (special-cased so you need not declare it as such) on the other hand, is a proper instance method. It can be called multiple times on the same instance, by the way.That should be enough to explain your terminal session:You just called , which essentially doesNotice that the return value of  is not required to be an instance of the class it belongs to, but  is called only if it is. In your case, it is. is a static method, so attempting to bind it to the instance does nothing: it stays a class method. This is the same reason that you have to pass  explicitly when calling : it's the same free function, unbound to either class or instance.Not only are these not the same thing, but their types are different.  is a regular function.  is a bound method which lacks the first parameter of .This has already been called, but for , it's a no-op you can call as many times as you like. Notice that the first parameter is not being passed in, being as it is a bound method.This is calling the raw  function, which requires that the  parameter be passed in. Since you don't do that, it raises. Try this instead:
 stands for class itself, while  stands for object itself. These are just conventions.The  method is called before the object is created, in fact, should create the object and return it. Therefore, it needs a class to create object. After that, the  is called to initialize the object, so it needs the object as the first argument.  For example: is static method, so the class and instance share the same  method.  is the method of instance. If you want to call it via class, you need to pass the instance as the first argument explicitly.Anything in Python is object, including the class itself. So for class, it has its own  and  which are used by  to create class and initialize class.These are meta programming of Python, I suggest to read the ninth chapter of Python Cookbook.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__new__
https://docs.python.org/3/reference/datamodel.html#implementing-descriptors
https://docs.python.org/3/reference/datamodel.html#object.__new__
https://docs.python.org/3/reference/datamodel.html#object.__init__
