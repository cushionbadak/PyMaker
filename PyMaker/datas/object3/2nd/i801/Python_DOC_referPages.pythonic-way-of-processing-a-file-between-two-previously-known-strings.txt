Natural Text
I process log files with python. LetÂ´s say that I have a log file that contains a line which is  and a line that is , like below:What I do want is to be able to store the content between the  and  lines for further processing. I do the following in Python:And then I process the .Looks to far complicated for the purity of Python, and hence my question: is there a more Pythonic way of doing this?Thanks!
To perform that, you can use  discussed in this post , that will read until a sentinel value is reached, in your case 'END' (after applying ).
You are right that there is something not OK with having a nested loop over the same iterator. File objects are already iterators, and you can use that to your advantage. For example, to find the first line with a  in it:This will raise a  if there is no such line. It also sets the file pointer to the beginning of the first line you care about.Getting the last line without anything that comes after it is a bit more complicated because it's difficult to set external state in a generator expression. Instead, you can make a simple generator:The generator will yield nothing if you don't have a , but it will yield all the lines until the end if there is no , so it differs a little from your implementation. You would use the generator to replace your loop entirely:Wrapping the generator in  immediately processes it, so the lines persist even after you close the file. The iterator can be used repeatedly because at the end of your call, the file pointer will be just past the  line:The relatively lesser known form of  converts any callable object that accepts no arguments into an iterator. The end is reached when the callable returns the sentinel value, in this case an empty list.
This is a mission for regular expressions , for example: The  is necessary for spanning multiple lines.


Answer URL
https://docs.python.org/3/library/functions.html#iter
