Natural Text
Question:How can I find the text for all opening and closing HTML tags with python (3.6).This needs to be the exact text, keeping spaces and potentially illegal html:Attempt at solution:Apparently this is not possible in Beautifulsoup, this question: How to get the opening and closing tag in beautiful soup from HTML string? links to html.parserImplementing a custom parser is easy. You can use  to get the text corresponding to the last opened tag. But for some reason, there is no analogous method .Which means that my parser produces this output:The  argument of the  is just a string  or , not some custom datatype that can provide the whole tag.
You can use recursion and iterate over the  attribute:Output:Edit: for the invalid HTML, you can use :Output:
While the answer from @Ajax1234 contains some nice python + beautifulsoup, I found it to be very unstable. Mostly because I need the exact string of the html tag. Each tag found by the method must be present in the html text. This leads to the following problems:It parses the tag names and attributes from HTML and plugs themtogether to form the string of the tag . This gets rid of extra whitespace in the tag:  becomes It always generates a closing tag, even if there is none in the markupIt fails for attributes that are lists:  becomes The whitespace problem can be partially solved by cleaning the HTML prior to processing it. I used bleach, but that can be too aggressive. Notably, you have to specify a list of accepted tags before you use it.A better approach is a thin wrapper around html.parser.HTMLParser.This is something I already started in my question, the difference here is that I automatically add generate a closing tag.This solved the problems mentioned above, but it has one shortcoming, it doesn't look at the actual text for the closing tag. If there are extra arguments or whitespace in the closing tag, the parsing will not show them.


Answer URL
https://docs.python.org/3/library/html.parser.html#module-html.parser
