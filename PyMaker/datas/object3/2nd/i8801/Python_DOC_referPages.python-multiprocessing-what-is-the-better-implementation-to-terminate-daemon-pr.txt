Natural Text
I'm using multiprocessing on Python 3.6 on Ubuntu to handle the faster communication with another device. I set  to terminate the child process when the parent process finishes. However, when the main process is terminated, the another process (_another_process in the following code) sometimes isn't terminated and continues to be alive. Then, when I run the same program again, I get  error when I run the above code. Of course, I can kill this process, but it's annoying and I'd like to solve. I don't know why sometimes terminated and sometimes not, but are there any better implementations to realize what I want? Or, is  the best way? I believe I shouldn't use  because my child process has an infinite operation, but if I misunderstood, please let me know.
From the python3 docs, process.terminate() in the main's destructor: This will send SIGTERM to be handled by the child process.alternatively, use  to send SIGKILL.Full example at https://docs.python.org/3/library/multiprocessing.htmlFor how to handle SIGTERM in your application:How to process SIGTERM signal gracefully?
To solve the "address already in use" problem, try adding the SO_REUSEADDR socket option.


Answer URL
https://docs.python.org/3/library/multiprocessing.html
