Natural Text
This question already has an answer here:Python list comprehension - simple                    3 answers                I know that it is list comprehension but how does this statement work, I am unable to understand the functioning of for loop in aforementioned python statement. Please help me to get the answer. Thanks in advance !!
here all the values of list expanded_nodes is checked one by one and after checking all the elements only those values  where "node.state != None" will be remaining in the list
That expression is called a list comprehension. To understand why it's useful, let's take a look at what the same code might look like without the comprehension. Functionally, this should be equivalent to the comprehension above:That kind of filtering operation is pretty common. It comes up all the time. In fact, it's so common that you've probably seen functions whose sole purpose it is to filter or otherwise transform one list into another. Let's see what that looks like:Notice how many times we have to reference the intermediate variable, . Wouldn't it be great if we could make that function a bit less redundant? With comprehensions, you can!As you get used to this terse formulation, you'll notice that the function wrapper might not feel as useful anymore. So let's lose it:
What you are seeing is a list display, where the values are specified as a comprehension. This is considered to be good, idiomatic Python.See the docs for more on comprehensions, etc.


Answer URL
https://docs.python.org/3/reference/expressions.html?highlight=generator#displays-for-lists-sets-and-dictionaries
