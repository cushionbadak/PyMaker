Natural Text
Given the directory structure:Where src contains the source code, and test contains the unit tests, how do I setup a "package" so that my relative imports that are used in the unit tests located in  can load classes in ?Similar questions: Python Relative Imports and Packages and Python: relative imports without packages or modules, but the first doesn't really answer my question (or I don't understand it) and the second relies on symlinks to hack it together (respectively).
I figured it out.You have to have  in each of the folders like so:This tells python that we have "a package" in each of the directories including the top level directory. So, at this point, I have the following packages:So, because python will only go "down into" directories, we have to execute the unit tests from the root of the top-most package, which in this case is:So, from here, I can execute python and tell it to execute the unittest module and then specify which tests I want it to perform by specifying the module using the command line optionsThis tells python:Execute python and load the module unittestTell unit test to run the tests contained in the class TestFoo, which is in the file foo_test.py, which is in the test directory.Python is able to find it because  in each of these directories promotes them to a package that python and unittest can work with.Lastly,  must contain an import statement like: Because we are executing from the top level directory, AND we have packages setup for each of the subdirectories, the src package is available in the namespace, and can be loaded by a test.


Answer URL
https://docs.python.org/3/library/unittest.html#command-line-interface
