Natural Text
Suppose I have a package containing two submodules and also a substantial amount of code in  itself:and, to make planned future refactorings easier, I want components of the package to exclusively use relative imports to refer to each other.  In particular,  should never appear.From  I can doto get access to the  module, and vice versa.The question is, what do I write to import  in this manner?  I want exactly the same effect as , only without having to specify the absolute name .UPDATE: Inspired by maxymoo's answer, I triedThis does not set  to the the module defined by ; it instead gets what appears to be a bound method wrapper for the  method of that module.  I suppose I could doto get the thing I want, but (a) yuck, and (b) this makes me worry that the module hasn't been fully initialized.Answers need to work on both Python 2.7 and Python 3.4+.Yes, it would probably be better to hollow out  and just have it reexport stuff from the submodules, but that can't happen just yet.
python2 and python3 (uses the discouraged ):from 1st level module (, , ...):from module in subpackage (, ...):python3 only*:From  or :From :* on python2 tries load  in this case, unfortunately.
There's nothing special about the dunders (they're just discouraged when writing your own module/function names); you should just be able to do


Answer URL
https://docs.python.org/3/library/functions.html#__import__
