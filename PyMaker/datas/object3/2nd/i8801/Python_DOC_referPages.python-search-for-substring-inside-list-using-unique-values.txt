Natural Text
I have two lists, both containing file paths to PDFs. The first list contains PDFs that have unique file names. The second list contains the file names with the same unique file names that need to be matched up to the first list, although it is possible that there could be multiple PDFs in the second list that could be matched to the first. It is a one to many relationship from ListA to ListB. Below is an example.List A: C:\FolderA\A.pdf, C:\FolderA\B.pdf, C:\FolderA\C.pdfList B: C:\FolderB\A_1.pdf, C:\FolderB\B_1.pdf, C:\FolderB\C_1.pdf, C:\FolderB\C_2.pdfI need to find a way to iterate through both lists and combine the PDFs by matching the unique filename. If I can find a way to iterate and match the files, then I think I can combine the PDFs on my own. Below is the code I have so far.I have verified everything works up to the last if statement. From here is when I am not sure how to go about it. I know how to search for a substring within a string, but I cannot get it to work correctly with a list. No matter how I code it, I either end up in an endless loop or it does not successfully match.Any ideas on how to make this work, if it is possible?
It would be better to use gather all the information together in one data structure, rather than separate lists. That should allow you to reduce your code to a single function.Completely untested, but something like this should work.This should produce a data structure like this:
I think what you want to do is create a  and set it up to hold lists of matching names.You can then strip the filenames in folder B down to base names, and put the paths into the dict:Now you have a list of pdf files from folder B, grouped by base name. Go back to folder A and do the same thing (split off the path and extension, use that for the key, add the full path to the list). You'll have lists, which have files sharing a common base name.
To compare the two files names, rather than split along the '_', you should try the str.startwith() method : A.startwith(B) returns  if the string A beginning is the string B.In your case, your code would be : I hope it works for you
One more solutionresults in :


Answer URL
https://docs.python.org/3/library/collections.html?highlight=collections.defaultdict#collections.defaultdict
