Natural Text
I want to create a property decorator that computes the property value once upon object initialization, rather than every time the property is accessed. For example:I'd like this be equivalent to:Is it possible to somehow add code to  from within the method decorator?
We need to sub class  so that we can later find all the cached properties of the object and initialize them after :The actual decorator evaluates the method body when called for the first time, and remembers the result for later accesses:Now we can use a base class to access the cached properties after  so that the values will be available from the cache:To make the example from the question work, we need to let our class inherit from this property initializing base class:


Answer URL
https://docs.python.org/3/howto/descriptor.html
