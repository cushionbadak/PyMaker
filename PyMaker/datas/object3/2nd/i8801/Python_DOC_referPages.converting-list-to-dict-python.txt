Natural Text
Given a list:I need a dict from this list in the format:What is the syntactically cleanest way to accomplish this?
Use a dict-comprehension:However it's probably opinion-based if that's the "syntactically cleanest way" but I like it.
Here's an additional approach, provided here to give you a flavor for how Python implements the functional programming technique called reduction, via the  function.  In Python 3,  is in the functools package.  In Python 2,  is a built-in function.  I use Python 3 in the example below:The first argument to  is the function to operate on the iterable, the second is the iterable itself (your list ), and the third is the optional initializer object to put at the beginning of the  to reduce.  Each step of the reduction requires an object to be operated on: namely, the result of the previous step. But  does not return anything, so we need the  function above, which performs the update and then returns the  being updated, thus providing the required object for the next step.  Were it not for  not having a return value, this would all be a one-liner. Because  operates directly on the original , we need that optional empty  initializer object to start out the reduction - without it, the first  in your original  list would be modified. For all these reasons, I like @MSeifert's dict-comprehension approach much better, but I posted this anyway just to illustrate Python reduction for you.
If you use it often, you might want to define a  function, which you can then pass to  :


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
https://docs.python.org/3/library/stdtypes.html#dict.update
