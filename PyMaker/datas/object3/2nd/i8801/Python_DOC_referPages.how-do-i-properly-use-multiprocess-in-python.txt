Natural Text
I have a simple example problem that I am struggling with in Python.  I am using multiprocess to execute an example where the function "Thread_Test()" will generate a uniform array of random numbers over the interval of 0 to 1, with "Sample_Size" number of data points in the array.  Once I get this example down, I plan on generating multiple copies of the process in an attempt to accelerate code execution and then I will be putting a much more complex set of calculations in Thread_Test().  This example works fine as long as I keep the Sample_Size below 9,000.  The execution time increases as I increase the Sample_Size from 10 to 8,000, but at 8,000 the code only takes 0.01 seconds to execute.  However, as soon as I increase the Sample_Size to 9,000, the code just goes on in execution forever and never finishes the calculation.  What is causing this?
The issue happened because if you put sth in Queue (producer as you see) in sub process, you must promise main process (consumer) gets element at the same time. Otherwise, main process will wait in "p.join()", while sub process waits in "Queue.put" because too many elem in the queue and no consumer to make more room for new elem.As doc here:So in simple word, you need to call "get part" before "p.join()".If you worry about main process exits before sub process works, you may change code a little like below:The whole part likes below:


Answer URL
https://docs.python.org/3/library/multiprocessing.html#all-start-methods
