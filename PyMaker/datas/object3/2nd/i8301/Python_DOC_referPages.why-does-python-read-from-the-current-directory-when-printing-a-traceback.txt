Natural Text
Why does Python confuse the string  with a file matching that filename?  I didn't want Python trying to just read whatever files from my disk if it encountered an unhandled exception.  You can also get it with the  filename:Is there any way to prevent that behaviour, or is it hardcoded into the REPL? 
Python doesn't keep track of what source code corresponds to any compiled bytecode. It might not even read that source code until it needs to print a traceback, for example if a module is loaded from a  file.When Python needs to print a traceback, that's when it tries to find source code corresponding to all the stack frames involved. The file name and line number you see in the stack trace are all Python has to go on. If it were using the  module, the code path would go through a section in  that excludes filenames starting and ending with  and , but the default  doesn't go through that path.The default  goes through the native call , which eventually winds up using  to display individual source lines.  unconditionally tries to find the file in the current working directory (for some reason - misguided optimization?), then calls  to search  for a file matching that name if the working directory didn't have it. Usually, it won't find a  or  file, and it'll just skip printing source code when it can't find a file, but if it finds one, it prints from that file.I initially thought you could prevent this by running Python with the  flag, putting it in isolated mode. One of the effects of isolated mode is to remove the script's directory from . Experiment proved that this didn't change things, which is when I realized  tries the working directory no matter what.It would be fairly straightforward to fix this by excluding  filenames in the native code path, like  does. The code that unconditionally searches the current directory for the file should also be changed.


Answer URL
https://docs.python.org/3/using/cmdline.html#cmdoption-I
