Natural Text
So I have this question where I'am to read a set of integers until -1 is input. I need to print the length of the longest continuous sequence of numbers where a number is the sum of the 2 preceding. This does not include the first 2 numbers in the length of the sequence.An example of what numbers would be input and the answer would be:1,2,3,4,5,8,13,21,34,55,10,6,7,8,20,25,30,40,-1 => 4What I have so far:So I have worked out how to end the loop when it reaches -1, how to skip the first 2 numbers and read the next number. But what I don't understand is how to read the previous numbers and work out if it is the sum or how to work out the longest sequence of numbers.
In addition to , the current number, have two more variables:, the previous value of ,, the value before .It is then obvious how you compare the current value to the sum of the previous two values. When you need to input a new number, dothen input a new value of .
There are various ways to approach this. You can process the input while you're reading it, but it makes things simpler to read the input into a list and then process the list.You can read the input like this:Note that this will raise  if a non-integer is read.Now that we have our numbers in a list, we can process them in the way that Rory Daulton suggests.outputJust for fun, here's a "one-liner".Both of these solutions cope if .That last one is a bit dense and hard to read. Here's a breakdown:output
try this :-
You could possibly do something like below. You don't need to do the list I did to return the longest run of numbers matching your criteria it was just me being sloppy with storage to demonstrate a way you could do it.Fixed up both the initial count to include the first two numbers for longer streak and made sure the last count is considered for when the loop exits.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
