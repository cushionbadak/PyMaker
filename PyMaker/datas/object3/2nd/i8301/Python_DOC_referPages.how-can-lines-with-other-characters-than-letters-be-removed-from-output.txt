Natural Text
I have a code where I extract bigrams from a large corpus, and concatenate/merge them to get unigrams. 'may', 'be' --> maybe. The corpus contains, of course, a lot of punctuations, but I also discovered that it contains other characters such as emojis... My plan was to put punctuations in a list, and if those characters are not in a line, print the line. Maybe I should change my approach and only print the lines ONLY containing letters and no other characters, since I don't know what kinds of characters are in the corpus. How can this be done? I do need to keep these other characters for the first part of the code, so that bigrams that don't actually exist are printed. The last lines of my code are at the moment:And the output I get is:These lines won't be of any use for me... Would really appreciate some help! :) 
If you want to check that each string contains only letters you can probably use the  method.As you can see from the example, this method should recognize any unicode letter, not just ascii.
To filter out strings that contain a non-letter character, the code can check for the existence of non-letter character in each string:
You can use the unicodedata module to classify the characters:
If you want to remove from your lines only some characters, then you can filter with an easy replace your line before edit it:Then you can do what is needed for your bigram exercise. Hope this help.Second query: in case you have lots of characters then on your string you can use always the isalpha():In this case you will only check for characters. Hope this clarify second query.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.isalpha
