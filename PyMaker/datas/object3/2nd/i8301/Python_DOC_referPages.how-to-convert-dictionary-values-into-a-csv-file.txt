Natural Text
I am an absolute beginner in Python. I am doing a textual analysis of greek plays and counting the word frequencies of each word. Because the plays are very long, I am unable to see my full set of data, it only shows the words with the lowest frequencies because there is not enough space in the Python window. I am thinking of converting it to a .csv file. My full code is below: I found the code for the csv on the internet. What I'm hoping to get is the full list of data from the highest to lowest frequency. Using this code I have right now, python seems to be totally ignoring the csv part and just printing the data as if I didn't code for the csv.Any idea on what I should code to see my intended result? Thank you. 
Since you have a dictionary where the words are keys and their frequencies the values, a  is ill suited. It is good for sequences of mappings that share some common set of keys, used as the columns of the csv. For example if you had had a list of dicts such as you manually create:then a  would be the tool for the job. But instead you have a single  like:But, you've already built a sorted list of  pairs as , which is perfect for writing to csv:python seems to be totally ignoring the csv part and just printing the data as if I didn't code for the csv.sounds rather odd. At least you should've gotten a file Aeschylus.csv containing:Your frequency counting method could also be improved. At the momenthas to loop through the list  for each word in , so O(nÂ²). You could instead iterate through the words in the file, filter, and count as you go. Python has a specialized dictionary for counting hashable objects called :Then, as before, print the words and their frequencies, beginning from most common:And/or write as csv:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
