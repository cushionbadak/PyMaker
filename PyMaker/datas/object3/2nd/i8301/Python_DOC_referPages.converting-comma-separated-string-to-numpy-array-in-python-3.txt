Natural Text
I'm using Python to read data from an Arduino sensor using PySerial in Python 3.I want to plot the data using PyQtGraph, so I'm attempting to convert the string that is read from the sensor (288 comma separated values) to a Numpy array. However, I've tried a couple different methods and haven't gotten it to work.Reading from the sensor works great with this code:Which gives me the correct output (288 comma separated values): 137,136,151,145,141,133,145,139,140,145,144,139,143,141,139,136,137,138,137,127,142,135,136,137,134,140,127,141,134,128,139,135,136,180,149,147,147,151,156,140,153,143,143,155,163,164,192,250,277,282,275,258,258,248,245,231,215,225,195,195,159,186,175,168,171,173,177,185,213,224,228,231,227,219,261,229,231,231,250,253,262,276,269,274,274,277,276,272,291,303,351,417,483,500,473,399,315,263,255,239,238,244,234,231,231,242,255,272,294,293,299,314,307,306,302,310,319,304,312,327,370,464,507,514,492,425,358,327,313,299,292,291,281,259,245,232,229,224,223,222,216,226,215,211,197,202,199,197,198,193,198,185,190,196,177,198,188,183,201,193,187,159,189,184,186,185,186,185,184,196,195,200,201,198,193,241,189,186,167,179,187,174,188,180,179,169,177,173,172,175,181,175,171,180,175,176,180,184,176,190,182,172,171,179,178,174,188,175,178,167,183,171,168,174,175,171,230,175,177,159,177,170,172,171,173,168,167,169,172,168,171,177,173,167,167,171,163,170,177,172,169,167,163,157,173,161,168,174,162,165,171,165,162,152,165,173,158,193,161,161,147,159,161,159,169,173,168,158,161,159,158,171,167,167,155,159,169,156,159,162,157,165,161,158,147,161,171,159,From there, figured I'd just be able to pass  to PyQtGraph's  function, but after running this line of codeI got the error  I tried converting the string before passing it to PyQtGraph using various methods like  and  but none of the methods I've tried work.Any ideas on how this could be accomplished?EDIT: I've gone through the answers and none of them seem to be working, details in the comments for each response. Any hints would be great.
line.decode() returns a string, not a list. So you are getting back a single entity, not 288 values.Python has a method associated with strings that will take a string and split it into component parts. Calling the .split() method and giving it the substring to split upon, in this case a ',' should do the trick.NOTE: as @umutto mentions in a comment above, for plotting purposes, there should be no need to convert the values to a numpy array. A list should do just fine.But, if for some reason you find that you want/need an array:y = np.array(values)
Use the  method for converting the line to a  of strings. Also as @Alien suggests, you should use the  function for getting , instead of enumerating all the values manually.
With a copy/paste of your string: produces a list of strings.  If I wrap that in , I get an array of strings:I need to tell it to convert the strings to integers:The first time I tried it, the string ended with a comma: .  The split then included an empty string, which  could not convert to integer.  I edited that out.  I could also have removed it from the list of strings with indexing, .If it works to pass the list of strings (after split) to the plot function, it's because that function performed this same sort of  (or float) conversion.can be used to create a list of integers.  



Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=str.split#str.split
https://docs.python.org/3/library/functions.html#func-range
