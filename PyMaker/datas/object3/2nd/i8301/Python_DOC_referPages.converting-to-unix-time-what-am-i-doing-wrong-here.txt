Natural Text
I have a time in UTC from which I want the number of seconds since epoch.I am using strftime to convert it to the number of seconds. Taking 1st April 2012 as an example.1st of April 2012 UTC from epoch is 1333238400 but this above returns 1333234800 which is different by 1 hour. So it looks like that strftime is taking my system time into account and applies a timezone shift somewhere. I thought datetime was purely naive?How can I get around that? If possible avoiding to import other libraries unless standard. (I have portability concerns).
If you want to convert a python datetime to seconds since epoch you could do it explicitly:In Python 3.3+ you can use  instead:Why you should not use Python doesn't actually support %s as an argument to strftime (if you check at http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior it's not in the list), the only reason it's working is because Python is passing the information to your system's strftime, which uses your local timezone.
I had serious issues with Timezones and such. The way Python handles all that happen to be pretty confusing (to me). Things seem to be working fine using the calendar module (see links 1, 2, 3 and 4).

(Sorry, it wouldn't let me comment on existing answer)
This works in Python 2 and 3:Just following the official docs...https://docs.python.org/2/library/time.html#module-time
if you just need a timestamp in unix /epoch time, this one line works:and depends only on works in python2 and python3
For an explicit timezone-independent solution, use the pytz library.Output (float): 1333238400.0
In Python 3.7Return a datetime corresponding to a date_string in one of the formats  emitted by date.isoformat() and datetime.isoformat(). Specifically,  this function supports strings in the format(s)  YYYY-MM-DD[*HH[:MM[:SS[.fff[fff]]]][+HH:MM[:SS[.ffffff]]]], where *  can match any single character.https://docs.python.org/3/library/datetime.html#datetime.datetime.fromisoformat


Answer URL
https://docs.python.org/3/library/datetime.html?highlight=re#datetime.datetime.timestamp
https://docs.python.org/3/library/datetime.html#datetime.datetime.fromisoformat
