Natural Text
I have the following Python regex:    :   word boundary  :   one or more alphanumerical characters  :   one or more whitespaces (can be , , , ..)    :   backreference to group 1 ( = the part between )This regex should find all double occurences of a word - if the two occurences are next to each other with some whitespace in between.The regex seems to work fine when using the search function:The found match is , just as I had expected. The weird behaviour is in the findall function:The found match is now only . Why the difference?
When using groups in a regular expression,  returns only the groups; from the documentation:If one or more groups are present in the pattern, return a list of groups; this will be a list of tuples if the pattern has more than one group.You can't avoid using groups when using backreferences, but you can put a new group around the whole pattern:The outer group is group 1, so the backreference should be pointing to group 2. You now have two groups, so there are two results per entry. Using a named group might make this more readable:You can filter that back to just the outer group result:


Answer URL
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/library/re.html#re.findall
