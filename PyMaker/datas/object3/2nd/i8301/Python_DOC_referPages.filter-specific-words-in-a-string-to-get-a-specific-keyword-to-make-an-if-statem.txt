Natural Text
I am currently working on a project, my task here right now is I need to specify whether the device is 2G or not based on the Bands given in the Bands column. For example,So if the column "Bands" only contains the word "GSM" then it is 2G, else, N. I have tried using the re module but I am stuck at some point.What do I need for the resultThank you in advance, do comment if my question is not understandable. I already searched some solutions given in the site yet I am sure the question asked is not the same problematic/concept.
You show data separated into columns with tabs or spaces, but your code indicates that you are using a vertical bar () as delimiter. I'm not sure which is right, but that's your problem.Your condition, as I understand it, is to look at the various subfields in the second column, delimited with commas, and return one value (true) if each and every one of the subfields contains the text string 'GSM' anywhere in the subfield, but to return a different value (false) if at least one of the subfields DOES NOT contain that string. Right?Let us then presume you have your csv reader in , as shown in your example. The for-row-in loop is correct, because you want to do this computation separately for every row.Within that loop, you need access to the Bands column:In order to examine the subfields, let's use the basic  function, splitting the subfields by commas:Now, let's convert that list of strings into a list of boolean values, and use Python's built-in  function to evaluate the entire list. We will do this with a list comprehension:This if-statement will do roughly what it says: it will match if any one of the bands fails to contain 'GSM'. There are some other ways you could write this code. For example, you could make the negative test into a positive test by using the Python  function. This would reverse the "sense" of the if statement, and switch the arms:Also, you could use the  modifier on the list comprehension to filter the list down to a smaller list. Finally, of course, you can start merging the expressions into one another - replace  with the actual split expression, etc. 
One thing to notice that on every row, the bands are each separated by a comma.You can take advantage of this.The  function can give you a list of strings for that row, each containing the name of a single band.  Now the problem is much simpler: If any individual band is missing the substring 'GSM', then that row is disqualified: Return 'N'.If none of the bands in that row are disqualified, (ie all contain 'GSM in the name), then return 'Y' for the row.  You can use the  function to see if a string contains a given substring.For example  returns the value , because it does not.Notice that you do not even need to remove the device id - it can be part of the item that includes the first band.  Keeping it simple: all you want to know is if, on any given row, all blocks of text (segregated by commas) contain the substring 'GSM' ..or not.``````


Answer URL
https://docs.python.org/3/library/functions.html?highlight=any#any
https://docs.python.org/3/library/functions.html?highlight=all#all
