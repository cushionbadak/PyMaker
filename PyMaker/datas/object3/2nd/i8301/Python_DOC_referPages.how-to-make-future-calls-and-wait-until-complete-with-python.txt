Natural Text
I have the following code where I have a list of usernames and I try and check if the users are in a specific Windows Usergroup using .The problem is that I run that command for about 8 usergroups per username and it is slow. I would like to send off these calls using futures and even separate threads (if it makes it quicker).I just have to wait at the end before i do anything else. How do I go about doing it in Python?
(This answer currently ignores HTML parsing your code does ... you can queue that into a pool identically to how this approach queues the  calls)First, lets define a function that takes a  of  and returns the desired information.Now, we can run this in a thread pool using The  are a list of  tuples and can be processed as you desire.Note: This code is currently untested due to a difference in platforms
In python 3, a more simple and convenient solution is to use .The  module provides a high-level interface for asynchronously executing callables. Reference...Notice that  here means the max number of threads.See here where this example comes from.EDIT: If you need to do each check in seperate thread:Inspired by @donkopotamus,  could be used here to generate all targets.And if you don't need to handle the exceptions, it would be much more simple:
It seems like producer consumer problem. The main thread should generate the tasks 


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures
https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example
