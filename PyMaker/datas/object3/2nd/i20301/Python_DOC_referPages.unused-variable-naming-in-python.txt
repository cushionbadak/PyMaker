Natural Text
Possible Duplicate:How can I get around declaring an unused variable in a for loop? In Python what is the best practice for naming a variable that is not going to be used? This is an odd question sure, but for my specific case I have a tuple of (key, value) where I am only interested in the value. A basic demo of my use case:I've noticed in Eclipse that naming a variable _ or with an _ prefix (e.g. _k) will not show an unused variable warning and removing the _ prefix causes the warning to be raised, but this may just be an oddity/"feature" in Eclipse rather than Python best practice..
Not sure if this is a Eclipse thing or not, but I generally use  to denote values I don't care about (i.e., return values in tuples, or index values in -loops).Of course you can always resort to old stand-bys like naming variables  or .I'm not sure if PEP 8 mentions anything about this, might be worth peeking into.
This is a Python coding convention, yes.  Best practice is to use  where you don't care about the value being set, for example when unpacking values from a tuple. Sometimes, however, needing this is a sign you may be doing something else in a non-Pythonic way. as a prefix is used to indicate "private" methods and variables, like Phil Cooper said.  Use this to indicate that these methods are not part of any public contract other modules can or should rely on.Some references:What is the purpose of the single underscore "_" variable in Python?Underscores as function prefixesWhat is the meaning of a single- and a double-underscore before an object name?Why does python use two underscores for certain things?
Let's start with...I recommend to choose the approach that is not questionable. It usually means something that is self-explainable, simple and understandable. If you insist on expressing the not used, what about the name  or ? Should the  be more invisible, hidden or even the candidate for to be overlooked, if possible?For Perl users, the  means something else than unused. Even though you may not care about the Perl users, what would the  mean for you if you never met it before?
You pretty much got it with the :one leading underscore means, yes, this exists, and you can look at it, but another method or property is what you should use instead; consult the docs.two leading underscores means, danger!  Do not touch or you will seriously break the state and stability of things.  Please stay away; if you mess with it, it's all your own fault if something goes wrong. Note: Using  is more than just a naming convention as it causes name mangling. This renames the variable to . That makes the variable/method harder to use outside of the class. It's primarily done to avoid accidental overrides of methods in parent classes by inherited classes.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers
