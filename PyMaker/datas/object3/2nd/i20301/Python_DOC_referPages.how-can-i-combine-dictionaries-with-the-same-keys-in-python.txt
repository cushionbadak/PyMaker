Natural Text
Let's say I have a list of dictionaries like so:I would like to take these and construct a big dictionary like so:Is there any elegant "zip"-like way for me to do this? All the keys are always going to be identical. I can always iterate the keys on each and construct a new dictionary of lists but that seems very un-pythonlike.
(I renamed your  to  since dict is a built-in, and dicts makes more sense.)Or, with a dict comprehension:or, for Python <2.7:
If all the dicts have the same set of keys, this will work:If they may have different keys, you'll need to first built a set of keys by doing set unions on the keys of the various dicts:Then you'll need to protect against missing keys in some dicts:
You can merge dictionaries in the following way:
You can use . The benefit of this solution is it does not require keys to be consistent across dictionaries, and it still maintains the minimum O(n) time complexity.Result:
If you are happy to use a 3rd party library you can use Pandas. The  constructor accepts a list of dictionaries directly:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
