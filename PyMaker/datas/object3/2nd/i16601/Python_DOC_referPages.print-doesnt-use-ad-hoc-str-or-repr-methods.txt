Natural Text
This question already has an answer here:Overriding special methods on an instance                    4 answers                I'm having a problem in Python 3.4 and would appreciate any help and/or explanation:Basically I have a class with a function that should return an instance of another class, but with a modified string representation so that I can later print() that instance and see the Stuff added in that function.What I don't understand is that even though I seem to be able to change the str and repr methods of that instance, print() will still use the original representation.This is a boiled-down example that essentially shows what I tried:Can someone please explain this to me?Thanks for your time, guys!Edit: forgot the output, sorry:Edit: Thanks Martijn Pieters for the explanation!And I now get the output I want:
Special methods are always called on the type; for instances, that is the class. See the Special method lookup:For custom classes, implicit invocations of special methods are only guaranteed to work correctly if defined on an object’s type, not in the object’s instance dictionary.This means that you cannot add  or  methods to the instance and expect those to be used.
But in Python2.7 your original code works correctly. Hmm.


Answer URL
https://docs.python.org/3/reference/datamodel.html#special-lookup
