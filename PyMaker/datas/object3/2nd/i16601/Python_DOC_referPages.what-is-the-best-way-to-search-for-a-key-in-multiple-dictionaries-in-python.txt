Natural Text
I know we can search for a key in Python like this:I know we can extend this and search for the key in multiple dictionaries using elif statementor by doingBut is there a more succinct way to search for key in Python in two different dicts without using if-else or adding the list of keys explicitly ?
The answer to your question as written is:If you need to know which dictionary or dictionaries contain the key, you can use :
The correct way would be as Zero wrote:Fixing after reading comments below, thanks to @jwodder: But you can also create a tuple of the keys of both (or more) dictionaries using the  function.so you also can :
A little list comprehension is also possible here; if you're simply trying to ascertain if a key is in a container of dicts,  does exactly that; if you want to get the dict (or dicts) back and work with them, perhaps something like this would suffice:If the keys were present in either dict, both would be returned, as such:
Why don't you put your dicts in an iterable like a list and simple loop over then? You can express it as a function like so.It would be used like so.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.compress
