Natural Text
I'm trying to think of the best way to solve this issue.I basically want to grab some text, and compare it against a keyword. Of course, I could do:However, it has to be in that order. If the title text happened to be:That would not work.So, I have tried coming up with a way of splitting the the keyword with  and then checking if both items from the split keyword list are in the title variable, but have had no luck coming up with an efficient way.If anyone knows a good way to do so, I'd be greatly appreciative.
This will do the job:Assuming that you don't care about repetitions. That is, that you considerTo be a pair in which all the keyword is indeed inside the title.
So you need to find each word of the key phrase, in order, in the title.  Try this: search for each word in order; resume the search in the remainder of the title.Output:
I think you need  results in 
Short one-liner using built-in any() and str.split() functions:The output:
You can do something like this...if you want to customize the precision of match cases.output:if you change  to this:output will be But...with some modification of :output will be 
You don't want to compare lists (it's slow), you should compare sets. As a bonus,  is already defined :


Answer URL
https://docs.python.org/3/library/functions.html#any
https://docs.python.org/3/library/stdtypes.html?highlight=split#str.split
