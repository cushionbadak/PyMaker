Natural Text
I have some specific questions about whether to use Pandas or alternative tools.What is the reason to use Pandas rather than other tools or data structures?When memory is a concern, how heavy is the cost of Pandas and what are the cheaper alternatives?This is more of a qualitative question. What is the purpose of pandas? I find dictionaries and lists to fit my needs entirely. What's the big fuss with pandas?For example I can store this table in a nested dictionary using much less memory, if there are lots of rows with identical values:Why would I want to use pandas, when there is a much more memory efficient way of holding my nested data? I just don't get it. Thanks!I'm aware of the abilities of pandas to allow indexing by name, handle missing data, doing join, group by a value and so forth.This is more of a qualitative question. Perhaps it belongs on Meta Stack Exchange instead.
1) What is the purpose of pandas? What's the big fuss with pandas?Pandas in primarily known for its ability to load information into dataframes which allows code to reason about columns of data at a time.Here's the description from the Pandas docs:Pandas is a Python package providing fast, flexible, and expressive  data structures designed to make working with “relational” or  “labeled” data both easy and intuitive. It aims to be the fundamental  high-level building block for doing practical, real world data  analysis in Python. Additionally, it has the broader goal of becoming  the most powerful and flexible open source data analysis /  manipulation tool available in any language. It is already well on its  way toward this goal.2) Why would I want to use pandas, when there is a much more memory efficient way of holding my nested data?According to this SO answer, the memory overhead for Pandas isn't that bad.That said, if memory is a key constraint, you can do better than even python dicts and lists both of which keep references to boxed data (values stored in objects).  Instead, you can use denser data structures that have unboxed data.  One choice with be Python's array module or you can use numpy arrays.


Answer URL
https://docs.python.org/3/library/array.html#module-array
