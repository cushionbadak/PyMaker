Natural Text
My function is supposed to find whether or not the values of a number list add up to my target in any way shape or form.  My code is:The logic seems flawless but when I try to run the function I get the maximum recursion depth reached error.  I used a dictionary to speed up the process because with the given values it would take a while to complete it without a dictionary.  I cannot for the life of me figure out what the problem is. UPDATE: The code works for smaller values but not for a larger value like 1234567 above.  Isn't memoization supposed to get over the recursion limit hump?
Removing the memoization logic and adding  to the top of the function gives:This shows that the recursion is proceeding much too slowly for this to ever work.Even adding  does not alleviate the problem.Debugging code:
There's no problem in memoization itself. But you could use  instead if you are using Python 3.4+ (no need to pass memo yourself). should be . Otherwise the function always return False (0 == False); edited in the question after I commented. should be numberList is never reduced.Assuming  is sorted, you can return  immediately in case of .You can combine following lines into one to take a benefit of short-circuit (even though  is True,  part would be executed otherwise)


Answer URL
https://docs.python.org/3/library/sys.html#sys.setrecursionlimit
https://docs.python.org/3/library/functools.html#functools.lru_cache
