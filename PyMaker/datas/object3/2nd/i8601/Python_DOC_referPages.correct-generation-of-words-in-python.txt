Natural Text
I think the intentions of this code are clear. I want to have in X all possible input words, with each digit being an element in a list. The following code works for 4 digits, but it gets unsustainable for bigger words. How can I make it more scalable? Let's assume I want the words of n digits instead of four.
You can use  for that:This gives:And by modifying  to for instance  you get all possible 5-digit lists.In case you do not need lists - the elements are not supposed to be altered - tuples can be used, and in that case you can drop the  construction:This generates:Note that  itself is a generator: it generates the elements lazily. This can be useful if the number of resulting elements will be huge and you can process them one-at-a-time. In that case you thus better do not construct a list. You can for instance use:To print all tuples. Although the effect would be the same as with a , now the memory usage can be lower (it depends on the implementation of the garbage collector in the interpreter): since not all tuples have to be in memory at the same time. The next tuple the generator emit can possibly reuse the memory the previous tuple took since that place is now vacant (at least given you do not store the tuples in a list, etc.)


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
