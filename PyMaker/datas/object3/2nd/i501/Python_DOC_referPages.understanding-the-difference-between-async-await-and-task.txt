Natural Text
In the Python documentation it describes how to start and use .This section describes how to use a .In the  section, it states:Tasks are used to schedule coroutines concurrentlyI'm failing to understand, what is happening when I start a  without using ? Is the code running asynchronously but not concurrently? Does it mean when the code sees an  it goes and does something else? When I use a  is it like start two threads and calling ? I start two or more tasks and wait for the result, correct?
For simple cases, creating  manually is somewhat similar to threads – you can create them, event loop will eventually run them, and you should eventually get result/exception.But in most cases, your code is built around  – nothing low-level. This means that your code may do some I/O operation inside , so process is free to put your implicitly created task into queue, and resume execution later.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#coroutines
https://docs.python.org/3/library/asyncio-task.html#task-object
