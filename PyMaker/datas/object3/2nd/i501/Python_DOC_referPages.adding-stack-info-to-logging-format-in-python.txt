Natural Text
Is there a way to use variable data in the actual format part of the logger? I want my logs to contain the names of the functions on the stack. For example here is the following code:I would like the logging messages to look likeThe nearest I came to this is using a custom class like this:But the stack trace information is... semi-hard-coded(?) into the logging string. I am looking for an elegant way to obtain this outcome.Thanks in advance!EDIT:Thanks to @VinaySajip fot the nudge in the correct direction.Unfortunately the default 's  method just appends the output of  at the end of the string to be printed. No matter what you do, as long as you use the default  implementation that is what will happen. What I did was to extend the  class, reimplementing the  method. The contents of the format method are 70% copy and pasted from the  module but the part that appends the stack info is removed. Instead, the nicely formatted result of  (returned by the new ) is placed  in the  member of the  that will be formatted. This is done because to get the final message that will be printed, the dictionary of  is used as the second operand of . So when the format string is interpolated with the dictionary of ,  will contain the nicely formatted call stack so all one really has to do is use  in their format string.Essentially I have added support for  in the format string of the formatter.The code:
The easiest way is to have a custom  subclass which overrides the  method, which is documented here.Formats the specified stack information (a string as returned by , but with the last newline removed) as a string. This default implementation just returns the input value.
I can't comment, so I am using an answer :Here's a decorator I used to use, which logs the executed function, with its args


Answer URL
https://docs.python.org/3/library/logging.html?highlight=formatstack#logging.Formatter.formatStack
