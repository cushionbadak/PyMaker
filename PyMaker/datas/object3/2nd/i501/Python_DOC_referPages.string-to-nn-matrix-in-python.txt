Natural Text
I am an undergraduate student who loves programming. I encountered a problem today and I don't know how to solve this problem. I looked for "Python - string to matrix representation" (Python - string to matrix representation) for help, but I am still confused about this problem.The problem is in the following:Given a string of whitespace separated numbers, create an nxn matrix (a 2d list where with the same number of columns as rows)and return it. The string will contain a perfect square number of integers. The int() and split() functions may be useful. Example: Input: '1 2 3 4 5 6 7 8 9' Output: [[1,2,3],[4,5,6],[7,8,9]] Example 2: Input: '1' Output: [[1]]My answer:The test results are in the following:as well asas well asas well asI am still confused how to solve this problem. Thank you very much for your help! 
Assuming you don't want  and want to use a list of lists: splits by any whitespace,  is the side length of the result,  converts the numbers to integers (from strings),  groups the numbers in groups of ,  converts the tuples produced by  into lists.
Assuming you want to make this dynamic.
Given that you will always get perfect square number of ints:Note: in your case,  is better off without explicit  in order to work fine with multiple whitespaces in between the digits.
This is why you always got:  verifies if  is equals to the value returned by string_to_matrix. In your code you don't return anything so it is The other issue is how you splitted the string, the easier options is to split everything and convert to number, and then reshape to sqrt(number of elements). This assumes that input length can be splited to form a nxn matrix
Use split, create the 1D numpy array, then use :If you don't know the size of the array, but you know it's square (same width / height), then you can use  to get the inputs for :



Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
