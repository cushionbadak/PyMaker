Natural Text
I am developing a new library and  I am completely new to the concept of logging. I have added logging using Python's logging module for same. The logging I gave has a specific FileHandler set for debug level and StreamHandler set at Warning level. Python documentation about logging says libraries should have only Null Handlers. Here is the documentation link https://docs.python.org/3/howto/logging.html#library-configWill it be a problem if I still have an exclusive file and stream handlers in my library. I am not able to understand why one should create logs in libraries if they cannot have their own customized handlers. It would be very helpful if someone could clear my understanding gap about implementing logging in libraries.A secondary question: How will an application developer who uses my library be able to access/enable the logs that I created in the library if I set Null handler?
to your first question - [from the python docs] - "The application developer knows their target audience and what  handlers are most appropriate for their application: if you add  handlers ‘under the hood’, you might well interfere with their ability  to carry out unit tests and deliver logs which suit their  requirements." 1as a user of your library, I may want to show logs from your_pkg.foo.baz,but not your_pkg.foo module. adding handlers from within your library may force me to do that (depending on the log level that was set to the loggers and handlers).to your second question -adding a Nullhandler allows a user to choose his custom logging needs by configuring new handlers through the logging.get_logger("your_pkg.foo.baz").add_handler(...).to fully understand the logging mechanism (loggers, handlers, filters, and propagation)-you could look here - logging flow


Answer URL
https://docs.python.org/3/howto/logging.html#library-config
https://docs.python.org/3/howto/logging.html#library-config
