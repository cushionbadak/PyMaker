Natural Text
I am interested in using pybind11 to optimize some Python computation using C++. The casting documentation doesn't make much sense to me and was wondering if anyone knew how to cast boost datatypes, specifically cpp_int, to a Python datatype so I can return computations. A simple example of what I'm trying to do would be factorials:The above compiles but when I go to use it I getso something isn't working with py::cast I think... My laptop runs Windows 10 and I am using Anaconda Python 3.7and Stephan T. Lavavej's MinGW C++ 8.2.0I am also using Build Tools for Visual Studio 2017 for the vcruntime140.dll located in "C:\ProgramFiles(x86)\MicrosoftVisualStudio\2017\BuildTools\VC\Redist\MSVC\14.16.27012\onecore\x64\Microsoft.VC141.CRT" (which I copied and pasted into "C:\MinGW\lib"). I also changed all string "gcc" in "C:\Anaconda3\Lib\distutils\cygwinccompiler.py" to "g++" (I did not change the variable names with gcc in them).Keywords:"pybind11" ; "Boost" ; "C++ and Python" ; "boost::multiprecision::cpp_int"
I got this working:Probably not the fastest way since it converts  to a temporary base 16 string first and then convert this string to Python integer.


Answer URL
https://docs.python.org/3/c-api/long.html#c.PyLong_FromString
https://docs.python.org/3/c-api/number.html?highlight=pynumber_long#c.PyNumber_ToBase
