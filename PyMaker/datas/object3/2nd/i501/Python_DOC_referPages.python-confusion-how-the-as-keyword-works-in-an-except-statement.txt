Natural Text
I have been trying to understand in general how the "as" keyword in python works so far and have learnt 3 cases for itCase 1: Case 2: Case 3: I understand how the first 2 cases work, case 1 works assigning a package name to a different name, case 2 works using  and  methods within a class (say for ensuring resources close), where  returns the class  is being assigned to.However, case 3 seems different, I was looking through the docs which didn't seem to help and couldn't find much of an explanation anywhere. In this case  works differently to  and I have been trying to work out how this works behind the scenes, i.e. whatever methods may be called, or why it behaves differently
In the except statement to associate a name to the exception being passed,  keyword is used.Using  is the only way to assign the exception to a local in Python 3.x. But it is not required. In Python 2.6+, we had 2 options  and . since  is ambiguous in case of multicatch, which allows you to catch multiple exceptions in one except block.  is the preferred option.In Python 2.5 and earlier, we use the for association, since  isn't supported. 
The phrase  states that in the above  clause all exceptions of class  (or a subclass thereof) are to be caught.  The actually caught exception will be visible in the variable  then.This will print
Try running this, which should make it clear. is a Python exception class to be caught. e is an instance of that class, in this case the subclass .
Calling  means that you can access the attributes of the exception object. But it won't catch    and This will print:More ever If we rasie  errorThe output will be like thisHere  is used to access more functions(args,message etc) so you can understand error more efficiently. 


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-try-statement
