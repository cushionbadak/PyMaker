Natural Text
I'm trying to feed .wav files to a neural network in order to train it to detect what's being said. So I have around 10 000 .wav files and the transcription of the audio, but when I try to feed the CSV file to the neural network I get this error : I'm using Soundfile to get the .wav data without the header and putting it into a list. I've tried other libraries too but the result was the same.Then I read the file with the transcription and create the dataset that's going to be fed to the neural network.The dataset now looks like this : â€‹The arrays from the audio column don't have the same size, but I already tried padding them with zeros and the error message continues the same.This is how I padded it in case you're wondering : A weird thing I noticed is that when I save this CSV file and read it again the Audio column's float arrays are automatically converted into string arrays. The only way I found to keep it the way it should be is saving it as a pickle file.Since we're at it, feel free to suggest other methods to feed the .wav files to the neural network. I'm trying to use this method instead of spectrograms because I read here that it's not a good idea.SolutionI was looking into similar problems and found a simple and elegant solution. After the train-test split, when passing the audios' column to the neural network,  use  instead of just .About the CSV file converting the float array to string, it's because of the power notation. There's a letter in the middle of the numbers, so Pandas writes it as float, but reads it as string. As I said previously, saving the dataframe as a pickle file works, but it takes too long to read compared to saving the audios' column separately as a .npy file.
Looks like you already solved this, but here are a couple of other items that it looks like haven't been mentioned. First, wave is a Python utility that was included in my Py3.6 install. https://docs.python.org/3/library/wave.htmlThis code is (sorta) stolen from here:That should enable you to put your data into a DF pretty easily, which appears to be the main item you're asking about based on your thread title.Lastly, regarding your DF issues with dtypes, note that the DataFrame invocation has a dtype forcing option that I have used in situations like the one you find yourself in. https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html


Answer URL
https://docs.python.org/3/library/wave.html
