Natural Text
There is simple python multiprocessing code that works like a charm, when I run it in console:Result:Then I've created a simple Docker container with Dockerfile:And docker-compose.yml:Where  is:Now I run  with docker compose:Up to this moment everything is good and understandable. But when I'm trying to run  in the docker container it crashes without any message:Gist with the code can be found here: https://gist.github.com/ilalex/83649bf21ef50cb74a2df5db01686f18Can you explain why docker container is crashed and how to do it without crashing?Thank you in advance!
for a quick fix, do not use  start method, and/or do not use , both are unnecessary IMO. change to:or you could start container with  option.with  start method, Python will also start a semaphore tracker process to prevent semaphore leaking, you could see this process by pausing  in the middle, it looks like:this process is started by  but exited after , thus it will not be reaped by , but is supposed to be reaped by  by design.the problem is there is no  in this container(namespace), instead of , PID 1 is , therefore the dead semaphore tracker process is adopted by .it appears that  consider the dead child process is the command process() mistakenly, without checking the relationship, so  exit blindly, as PID 1 exit, kernel kills all other processes in the container, including .this behavior could be observed with :will output error message like:ref: Docker and the PID 1 zombie reaping problem (phusion.nl)
 doesn't look like an equivalent of .  will run new worker process, which will just print  and then it will exit =>  in the main process will exit immediately, when this worker process is done.Better equivalent of : worker process prints hello message in the infinite loop and main process will be waiting for this worker process exit in  - :Updated :Test:Check processes in the container:


Answer URL
https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods
