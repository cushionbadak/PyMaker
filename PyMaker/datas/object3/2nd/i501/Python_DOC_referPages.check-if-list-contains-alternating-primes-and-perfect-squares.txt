Natural Text
I am just getting started in Python Programming. I had a problem on checking if a given list contains alternating sequence of primes and perfect squares. The list can start with either a prime or a perfect square. I came up with a solution but it's not efficient as it generates unwanted lists. Is this possible with more efficient Python code?First I'm creating functions to generate a list of primes as well as perfect squares up to the max value of testing list. Functions  and :Then I am dividing the given list into lists of even index and odd index elements and checking all elements of them against the  and the :It works.Any suggestions will be really helpful.
You can use sets to check if all members of a list are in another list.
I came up with a solution but it's not efficient as it generates  unwanted lists.Assuming the unwanted lists are the two lists representing the even and odd elements, then we can fix that.  (Eliminating the primes and squares list is a whole 'nother problem.)  Below is my rework of your code -- we don't create addtional lists but rather with a couple of reusable ranges which are objects that produce integer sequences as needed, but not stored in memory.Your  design is efficient in that the arguments are generator expressions, not lists, which are computed as needed.  As soon as a flaw is found in the array, the whole thing stops and returns False--it doesn't need to process the rest:I admire @AndreySemakin's set-based solution (+1), and use sets above, but his solution generates the same lists you want to eliminate (just in the form of sets).
I came up with this solution:  


Answer URL
https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset
