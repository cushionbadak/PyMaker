Natural Text
I am pretty new to Python and am tackling OOP. I am a bit confused as to when to use calls to methods and classes. The sample code below outputs the average, however I am curious as to when you would use calling from the Class vs methods from a real-world perspective. I'm pretty sure this is just something that I may have yet to tackle, but it's just been a bit of a confusion as to when I would use one over the other.
In your example, there is no difference. Use the first way. The second way makes it appear as though you need to use "the back door" for some reason, for example if  but you wanted to specifically call the  method of the  class.For what's going on behind the scenes, the first way uses a bound method and the second way just uses a normal function.A bound method is just a function which is bound to an instance, via descriptor protocol*, and the instance ("self") is passed as the first positional argument implicitly:By using the function on the class and passing in the instance explicitly, you essentially do the same thing as an invocation of the descriptor does automatically.For a deeper understanding of what a method is, there's detailed documentation of this binding process in the docs here.* Just a fancy way of saying via the "." i.e. the dotted attribute access


Answer URL
https://docs.python.org/3/glossary.html#term-method
https://docs.python.org/3/glossary.html#term-function
https://docs.python.org/3/reference/datamodel.html#invoking-descriptors
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/library/functions.html?highlight=classmethod#classmethod
https://docs.python.org/3/library/functions.html?highlight=staticmethod#staticmethod
