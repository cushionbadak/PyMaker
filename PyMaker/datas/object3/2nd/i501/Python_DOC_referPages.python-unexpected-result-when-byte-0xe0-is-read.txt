Natural Text
The above piece of code yields unexpected results when I input arrow keys or page up/page down/delete etc.I can understand b'\xe0' being printed, but why is  being printed along with it?H is not printed when I do this:I've looked at the other question that explains how msvcrt.getch() works, but that still fails to explain why I get two characters in the first piece of code and only one character in the second piece of code.Instead of waiting for the next character to be entered, why does a assume the value b'H'?
Arrow keys (and function keys and others) need two separate calls to . When you press &uparrow, the first one returns  and the second one returns . Neither of these are UTF-8 or even ASCII. The first one is not a valid UTF-8 sequence, which is why your  call throws an exception. The second one is a byte value representing keycode 72, which coincidentally happens to be the same byte value that represent the letter  in UTF-8 or ASCII. From the msvcrt documentation (emphasis mine):Read a keypress and return the resulting character as a byte string.  Nothing is echoed to the console.  This call will block if a keypress is not already available, but will not wait for Enter to be pressed.  If the pressed key was a special function key, this will return  or ; the next call will return the keycode.  The Control-C keypress cannot be read with this function.You can see the bytes coming through using a program like this one:Note that there's no  in there since  doesn't return UTF-8 bytes anyway.(note: make sure you really want to use , since that's a pretty unusual choice, especially in 2019.)Related:Python How to introduce windows predefined constants into python?What is \xe0 in the msvcrt.getch() method?Python method for reading keypress?


Answer URL
https://docs.python.org/3/library/msvcrt.html#msvcrt.getch
