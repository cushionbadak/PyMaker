Natural Text
For my application scope, I need to concatenate two one-dimension array into one multi-dimension array, both implemented using (eventually nested) s in Python. The concatenations have to print all the possible combinations between the elements of the first array with the elements of the second array. The expected result is a multi-dimension array with the combinations of  with all the elements of  (cartesian product).
No need to import a package here.You can do this with simple list comprehensions, too: Also, I would propose to output a list of tuples instead of a list of lists:giving you: Using tuples would, in my opinion, more clearly convey to someone else your intention of pairing all the values of vectA with all the values of vectB.You can still do e.g.  to get  and  to get  as you would with a list of lists.Note though, that you can not overwrite the values of a tuple like you could with values of a list, since tuples are immutable.
use itertools.product:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
