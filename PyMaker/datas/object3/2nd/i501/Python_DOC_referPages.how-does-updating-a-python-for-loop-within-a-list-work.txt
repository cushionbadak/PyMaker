Natural Text
In Michael Nielsen's tutorial on neural networks he has the following code:I understand what tuples and lists are and I understand what the zip function is doing but I don't understand how the variables nb, dnb, nw, and dnw are updated on these 2 lines of code:Can anyone help explain the magic going on in these 2 lines?
These 2 lines are typical examples of Python list comprehensions.In essence, for your first list:this means:Take the 1st pair from ; name them  and add them ()make the result the 1st element of new list Go to step one for the 2nd pair etc appending the results to , until all pairs from  have been exhaustedAs a simple example, the list comprehension below:is equivalent with the following  loop:See here for more examples and a quick introduction.
The  function sticks the two lists together element by element, so that if you gave it: would return:(each element being a )You can unpack elements of s that are s (or s) using the a comma between each variable in the element :This would print:So in your case, it's adding the two lists  and  elementwise, so you get one list with each element being the sum of the corresponding elements in the zipped lists.It might look a bit strange because the  loop is all on one line, but this is called a "list comprehension". Simple list comprehensions read like English.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
