Natural Text
The Code Below Can Encode A String To Utf-8 :That Prints:But I can't Decode This String With This Code :The error is:Please Help Me ...EditFrom the answers switched to a byte string:Now the error is:
It looks like you're using Python 3.X.  You  Unicode strings ( or ).  You  byte strings .Note your terminal may not be able to display the Unicode string.  Mine Windows console doesn't:But it does do the decode.   represents a Unicode code point.My PythonWin IDE supports UTF-8 and can display the characters:You can also write the data to a file and display it in an editor that supports UTF-8, like Notepad.  since your original string is already UTF-8, just write it to a file directly as bytes.   opens the file in binary mode and the bytes are written as is:If you have a Unicode string, you can write it as UTF-8 with:P.S.  is a built-in type.  Don't use it for variable names.Python 2.x works differently.   is a byte string and  is a Unicode string, but you still  the Unicode string and  the byte string.
Use following code:
Python has a first class unicode type that you can use in place of the plain bytestringstr type. Itâ€™s easy, once you accept the need to explicitly convert between abytestring and a Unicode string:Python 2 had two global functions to coerce objects into strings: unicode() to coerce them into Unicode strings, and str() to coerce them into non-Unicode strings. Python 3 has only one string type, Unicode strings, so the str() function is all you need. (The unicode() function no longer exists.) read more about reading and writing unicode data


Answer URL
https://docs.python.org/3/howto/unicode.html#reading-and-writing-unicode-data
