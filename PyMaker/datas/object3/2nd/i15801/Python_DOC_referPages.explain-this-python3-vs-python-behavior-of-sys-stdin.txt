Natural Text
I have to write a code that somehow works for both python versions and I can't understand the behavior of the code:When I run the code with python2 it behaves like I expect:When I run the code with python3 it behaves strange. It first reads the inputand then prints the prompt:Can you explain this and suggest a fix?
You got your  and  backwards.  Here is the correct order:
The difference is that CPython 2  uses C stdio to implement standard streams such as ,  (used by ) while Python 3 reimplements IO on top of system API e.g., open, read, write on POSIX.To avoid thinking about how  is implemented, the same issue occurs if  is used directly:On Python 3  is not printed before the  call:In C,  is flushed before reading any input in the interactive case (it is undefined behavior if an output operation is followed by an input operation on the same update stream without  in between). This C program prints  before asking for input as expected:That is why the workaround: calling  before  suggested by @Dietrich Epp works.It is a deficiency in Python 3 implementation. stdout shall be flushed by default before reading from stdin if both point to the same place ( e.g., if both tty). You could report the issue at Python bug tracker.
In Python 3.3 the  keyword was added to the  function:Changed in version 3.3: Added the flush keyword argument.In versions before 3.3, the  function would always flush, even when using . Your exact behaviour also reproduced using Python 3.2:To get the same behaviour, flush in Python 3.3:or use  after  calls on Python 3.3 or up.


Answer URL
https://docs.python.org/3/library/functions.html#print
