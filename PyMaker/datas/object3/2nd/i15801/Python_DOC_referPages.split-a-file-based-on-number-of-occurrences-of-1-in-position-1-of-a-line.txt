Natural Text
I routinely use PowerShell to split larger text or csv files in to smaller files for quicker processing. However, I have a few files that come over that are an usual format. These are basically print files to a text file. Each record starts with a single line that starts with a 1 and there is nothing else on the line.What I need to be able to do is to split a file based on the number of statements. So, basically if I want to split the file in to chunks of 3000 statements, I would go down until I see the 3001 occurrence of 1 in position 1 and copy everything before that to the new file. I can run this from windows, linux or OS X so pretty much anything is open for the split.Any ideas would be greatly appreciated.
Maybe try recognizing it by the fact that there is a '1' plus a new line?Separates each record to a list assuming it has the following format:You can then output each element in the list to a separate file.
To avoid loading the file in memory, you could define a function that generates records incrementally and then use itertool's grouper recipe to write each 3000 records to a new file:where  yields one record at a time where a record is also an iterator over lines in the input file: is a generator that yield generators like  does.For performance reasons, you could read/write chunks of multiple lines at once.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
