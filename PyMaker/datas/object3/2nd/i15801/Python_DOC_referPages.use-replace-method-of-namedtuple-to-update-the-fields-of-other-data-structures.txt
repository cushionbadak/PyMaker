Natural Text
I am learning about namedtuple. I would like to find a way, using the  method, to update all the appearances of a  wherever they are. Say I have a list of nodes, and lists of elements (two-node beams, four-node quads) and boundaries ("one node" elements) defined by these nodes. I am playing around with doing this:Now, if I replace  with a new :None of the other items are updated:I understand the Python naming and object model and the why behind this:  has been set to the object , not the name . So when  is changed, the other namedtuples still contain the same object as before, while  gets a new object. What I would like to do is change this behavior so that when I change , the changes are "felt" in , , , etc. How can I do this? 
All instances of -produced classes are immutable.  creates a new instance, it doesn't even update the one instance you call this on.Because the instances are immutable you cannot do what you want with a . You'll have to provide such functionality in a subclass, effectively breaking the immutability. Or just provide your own  custom class that allows the attributes to be mutated directly:Like a , this class uses  to cut back on memory use. You can set the  and  attributes directly on instances, and any other references to the instance will see the change:


Answer URL
https://docs.python.org/3/reference/datamodel.html#slots
https://docs.python.org/3/library/string.html#formatstrings
