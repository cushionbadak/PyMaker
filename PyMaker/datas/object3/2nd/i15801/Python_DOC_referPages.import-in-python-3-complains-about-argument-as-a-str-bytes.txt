Natural Text
I've being updating a quaternions package for integration with numpy, so that it can be used in both python 2 and python 3.  Unfortunately, the basic import step fails miserably with 3.x, though it has never failed with python 2.7.  (I use python2.7 to compile the 2.7 version, and python3.x to compile the 3.x versions.  It's a really simple distutils thing.)  The error message doesn't even appear in google's results, and I just have no idea where to go from here.Here is the complete output from a simple attempt to import the package:As the error message says, there is a line in  sayingBut why should that be problematic?  There is a file  in the same directory as the  file, which seems to contain the relevant symbols.  Travis-CI shows that it works just fine in 2.7 (and the other tests pass), but fails in 3.2 and 3.4.  So it's not just something wrong with my python installation.  I tried to remove the  for the relative import, but python couldn't find the  from which to import (not surprising).  I tried changing it to , but I get the same error.I see that there have been changes to the import system in python 3, but if anything, I would have guessed that this would be more py3k-compliant than other ways of doing it.  What's going wrong?  How can I get this to work?Just to clarify, my hierarchy looks like this:and the only thing that comes before the problematic line is , which generally succeeds with no problem.
The python-list people got back to me right away with excellent suggestions.  Turns out I was importing something within  (using the c-api), but the argument I was giving to that function was wrong.  I was (basically) using code from a similar package:I fixed it by usingAnd as J. F. Sebastian points out in the comments, the reason that was going wrong for me was because that  was just a  for the wrong function when I was using python 3.
Since it is easy, I would first try an absolute import, though if my guesses below are correct, this will not work.From your post, I am guessing that your hierarchy looks likeand that quaterion is a module, rather than a function or class.  I am guessing this because I cannot imagine 'numpy_quaternion' becoming bytes, while the .so must return 'quaternion' as bytes for 2.7 to work, so maybe it is doing the same with 3.x.  My unix experience predates Python.  But my impression is that separate .so are needed for 2.x and 3.x.  Or if not, certain compile flags might be needed.  If I am correct, you need to add 'numpy_quaternion_3x.so to your package and switch the import on sys.version[0].If you do not get more response here, try python-list, easily accessed at news.gmane.com as newsgroup mirror gmane.comp.python.general.  The regular responders include some savvy linux users.


Answer URL
https://docs.python.org/3/howto/cporting.html
