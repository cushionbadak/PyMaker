Natural Text
I'm trying to build a truly non-blocking HTTPS server in Python. The following minimal code works just fine if everyone is playing nice:However, the problem is that this server blocks at least during the TLS handshake.Test with:And then (in another terminal):The wget process blocks, indicating that something is blocked in the server. Once I close the nc process, wget continues. This is obviously not practical at all.How do I get a truly non-blocking HTTPS server in Python, preferably without additional third-party software?I should mention that the very same code works as expected without TLS (i.e., without the  wrap_socket line).Steffen Ullrich pointed out how to do it: pass  to , then do the handshake yourself. In this case, subclass , override , and then do the handshake as shown in the Python docs (the socket is called ) followed by calling the super method.
You have to do a non-blocking SSL accept by calling  with  and later calling  yourself until it succeeds. See https://docs.python.org/3/library/ssl.html#notes-on-non-blocking-sockets.You might also simply use Tornado which is a web server written in python and which also does fully non-blocking SSL handling. Even if you don't want to use it yourself you might have a look at the source code to see how this is done (search for ).


Answer URL
https://docs.python.org/3/library/ssl.html#notes-on-non-blocking-sockets
