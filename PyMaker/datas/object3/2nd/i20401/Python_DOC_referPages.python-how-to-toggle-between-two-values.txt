Natural Text
I want to toggle between two values in Python, that is, between 0 and 1. For example, when I run a function the first time, it yields the number 0. Next time, it yields 1. Third time it's back to zero, and so on.Sorry if this doesn't make sense, but does anyone know a way to do this?
Use :Note that if you need a more complicated cycle than , this solution becomes MUCH more attractive than the other ones posted here...
You can accomplish that with a generator like this:
You may find it useful to create a function alias like so:then
you can use the mod () operator. then will toggle the value of count between 0 and 1 each time this statement is executed. The advantage of this approach is that you can cycle through a sequence of values (if needed) from  where  is the value you use with your  operator. And this technique does not depend on any Python specific features/libraries.e.g.,gives:
In python, True and False are integers (1 and 0 respectively).  You could use a boolean (True or False) and the not operator:Of course, if you want to iterate between other numbers than 0 and 1, this trick becomes a little more difficult.To pack this into an admittedly ugly function:

Using  works, and is a good visual way to toggle between two values.
That's the official tricky way of doing it ;)
Using the tuple subscript trick:
To toggle variable x between two arbitrary (integer) values,e.g. a and b, use:Example:Toggle between 3 and 5This works even with strings (sort of).
Using tuple subscripts is one good way to toggle between two values:If you wrapped a function around this, you would have a nice alternating switch.
Simple and general solution without using any built-in. Just keep the track of current element and print/return the other one then change the current element status.Input:3 835Output:38383
If a variable is previously defined and you want it to toggle between two values, you may use the a if b else c form:In addition, it works on Python 2.5+ and 3.xhttps://docs.python.org/3/reference/expressions.html#conditional-expressions


Answer URL
https://docs.python.org/3/reference/expressions.html#conditional-expressions
