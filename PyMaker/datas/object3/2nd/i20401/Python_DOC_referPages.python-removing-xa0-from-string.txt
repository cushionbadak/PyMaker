Natural Text
I am currently using Beautiful Soup to parse an HTML file and calling , but it seems like I'm being left with a lot of \xa0 Unicode representing spaces. Is there an efficient way to remove all of them in Python 2.7, and change them into spaces? I guess the more generalized question would be, is there a way to remove Unicode formatting?I tried using: , as suggested by another thread, but that changed the \xa0's to u's, so now I have "u"s everywhere instead. ):EDIT: The problem seems to be resolved by , but just doing  without  seems to cause it to spit out even weirder characters, \xc2 for instance. Can anyone explain this?
\xa0 is actually non-breaking space in Latin1 (ISO 8859-1), also chr(160). You should replace it with a space.When .encode('utf-8'), it will encode the unicode to utf-8, that means every unicode could be represented by 1 to 4 bytes. For this case, \xa0 is represented by 2 bytes \xc2\xa0. Read up on http://docs.python.org/howto/unicode.html. 
There's many useful things in Python's  library. One of them is the  function.Try:Replacing NFKD with any of the other methods listed in the link above if you don't get the results you're after.
Try using .strip() at the end of your line worked well for me
I ran into this same problem pulling some data from a sqlite3 database with python.  The above answers didn't work for me (not sure why), but this did:  However, my goal was deleting the \xa0s, rather than replacing them with spaces.I got this from this super-helpful unicode tutorial by Ned Batchelder.
try this:
I end up here while googling for the problem with not printable character. I use MySQL   and deal with polish language. For problematic strings I have to procced as follows:It is just fast workaround and you probablly should try something with right encoding setup.
Try this code
After trying several methods, to summarize it, this is how I did it. Following are two ways of avoiding/removing \xa0 characters from parsed HTML string.Assume we have our raw html as following:So lets try to clean this HTML string:The above code produces these characters \xa0 in the string. To remove them properly, we can use two ways. Method # 1 (Recommended):The first one is BeautifulSoup's get_text method with strip argument as TrueSo our code becomes:Method # 2:The other option is to use python's library unicodedataI have also detailed these methods on this blog which you may want to refer.
0xA0 (Unicode) is 0xC2A0 in UTF-8.  will just take your Unicode 0xA0 and replace with UTF-8's 0xC2A0. Hence the apparition of 0xC2s... Encoding is not replacing, as you've probably realized now.
In Beautiful Soup, you can pass  the strip parameter, which strips white space from the beginning and end of the text. This will remove  or any other white space if it occurs at the start or end of the string. Beautiful Soup replaced an empty string with  and this solved the problem for me.
Generic version with the regular expression (It will remove all the control characters):
It's the equivalent of a space character, so strip it


Answer URL
https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize
