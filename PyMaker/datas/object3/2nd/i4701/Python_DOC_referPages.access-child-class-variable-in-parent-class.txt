Natural Text
Is it correct to access variables from a child class in a parent class? Is this a good OOP approach? I don't need to create instances of Animal class, but if I will, the  method will raise , which is bothering me.
There's nothing inherently wrong with this approach. It really depends on the scope and significance of this class, and where its being used. Building a parent class to use implicitly defined attributes is quick, and in many cases perfectly OK. But, sometimes those implicit attributes can get out of hand, and you might want to ensure that anyone making new subclasses has to define those attributes.There are a couple approaches to this. Some of this may not work depending on what version of Python you are using. I believe the usage of ABC like this works in Python 3.4+.Python (and many OO languages) have the concept of an Abstract Base Class. This is a class that can never be instantiated, and it enforces that any subclasses must implement methods or properties defined as abtract in order to be instantiated. Here's how you could provide a  method, and still be 100% sure that anyone subclassing Animal is indeed making that sound.This shows the many different ways to do this. Using the  decorator allows you to set instance variables, or more complex logic, that affect it. Setting sound in the class is (somewhat) like setting a static member in a Java class. Since all cats meow, this probably makes sense in this case.
Yes, this is good OOP. You could inherit from the parent, and simply make methods in the parent class that you would call in an instance for the Cat or Dog class, so that you could add nothing to the Cat/Dog class: for example:But what you did is also correct. 


Answer URL
https://docs.python.org/3/library/abc.html
https://docs.python.org/3/library/abc.html
