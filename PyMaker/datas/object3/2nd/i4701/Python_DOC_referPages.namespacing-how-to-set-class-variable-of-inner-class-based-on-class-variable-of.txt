Natural Text
I'm trying to "simulate" namespacing in python. I'm using inner and outer class hirarchies to create my namespaces. For example you want to save paths of files (like resources) in one location. I tried something like this:Accessing elements would look like this:Unfortunatly this isn't working due to the following error:My QuestionIs it possible to set class variables of inner class based on class variables of outer class? If not, is there another way to access the elements as shown above without using multiple files?
Is it possible to set class variables of inner class based on class variables of outer class?Not without ressorting to a custom metaclass to process the inner classes, which will certainly not help readability nor maintainability (and will be - rightly - seen by any experienced python programmer as a total WTF).EDIT : well actually for your example snippet the metaclass solution is not that complicated, cf the end of this answerThe reason is that in Python almost everything happens at runtime.  is an executable statement, and the class object is only created and bound to it's name after the end of the whole class statement's body. If not, is there another way to access the elements as shown above without using multiple files?Quite simply (dumbed down example):EDIT : after a bit more thinking a metaclass-based solution for your use case would not be that complicated (but this will NOT be anything generic):
I think that you do not have clear the concept of class and instaces in OOP. If you want to store this kind of information  shoult not be a class, it should be an instance of a class.I've used  function to delegate to Python choosing the correct delimiter for each SO instead of hardcoding Windows delimiters as you have. The method allows to get items as if the variable was a dictionary directly.EDIT:You could take advantage of pathlib standard module and add the attribute access notation (using '.' to acces the subdirectories) if you don't like the div operator usage of pathlib.


Answer URL
https://docs.python.org/3/library/pathlib.html
