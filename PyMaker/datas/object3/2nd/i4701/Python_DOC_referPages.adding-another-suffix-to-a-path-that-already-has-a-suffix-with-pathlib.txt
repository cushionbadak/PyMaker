Natural Text
I was converting some old Python code to use  instead of  for most path-related operations, but I ended up with the following problem: I needed to add another extension to a path that already had an extension (not replace it). With , since we are merely manipulating strings, the solution was to add the extension with string operations:It doesn't work with  because it doesn't allow concatenation of arbitrary characters. The closest I could find was the following:It looks like a workaround because it still uses string addition in the end. And it has a new pitfall because I forgot at first to handle the case where there are already several extensions and you want to add a new one, leading to the following code to get back the old behaviour:Now it doesn't feel terse nor clean since it uses more and more string operations to achieve the old behaviour instead of pure path operations. The fact that  exists means that the library's developers considered the case where a file can have multiple extensions, yet I couldn't find a way to simply add a new extension to a path. Is there a more idiomatic way that I have missed to achieve the same behaviour?EDIT: actually  is enough to handle the case where there are already several file extensions, even though it wasn't immeditely obvious to me.
It doesn't seem like Path's like being modified in-place (you can't change  directory or change , etc.), but that doesn't mean you need to resort to anything too unsavory. The following works just fine, even if it's not quite as elegant as I'd like:where  is your original Path variable, and  is the string with your new suffix/extension (including the leading ".")
You can just convert your  to string then add new extension and convert back to :
The following code should do what you want it to in a very dynamic way.The fact that normal string operations can be used in this case is a good thing, as it adds a great deal of control over the file path desired without requiring a large assortment of new functions. 


Answer URL
https://docs.python.org/3/library/pathlib.html
