Natural Text
I'm learning about regex. If I want to find all the 5 letter words in a string, I could use:But I want to write a simple function whose argument includes the string and the length of the word being found. I tried this:But this returns an empty list. The  is not being recognized.How can I specify an argument with the number of repetitions (or in this case, the length of the word)?
Python does not magically fill the value of  into the string. For this you either need to use :or, if you are running Python >= 3.6, use the new f-strings (which can be combined with the  prefix denoting a raw string):In both cases you need the outer two  to create a literal  and the inner is a format placeholder.If you want to avoid having to escape the literal , you can use the older -formatting to achieve the same thing. For this  needs to always be an integer (which it is here):
It's simpler than you may realize. There is nothing special about a "regex string": it is a simple, basic, everyday text string. About the only thing remotely remarkable is that it is usually defined with the  prefix, because the backslash means something in (unprefixed) Python strings as well, and you don't want to double up these, and ... it is fed as-is into Python's internal regex module.So where the string comes from, doesn't really matter! Construct it any way you like, then feed the result into :Note the repeated use of , because it is not a regex peculiarity but a Python one, and you need to prefix all separate strings with it to prevent backslashes running rampant and messing up your carefully constructed expression.(The same goes for the input to this function. This will also work, unless you test the argument and reject non-numbers:... which I did not.)
This can be done very easily without generating a regex pattern. Just simply extract all words and then use list comprehension to gather all words of length .See code in use hereResult: 


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
