Natural Text
I am using the example script provide by  to build a simple password verifier. Below is my test script.Test Script:Issues:I often get an error messages, e.g.:where the last lines varies to e.g.:oror no error message but return FalseWhen I comment  to remove the random secret message generator and uncomment  to use a non-random secret message, the function  works.Question: How do I get the random secret message element to work?   What is causing it's failure?
Explanation for UnicodeDecodeError ExceptionReason 1I think I understand why Scrypt is issuing a . Quoting Python's UnicodeDecodeError :The UnicodeDecodeError normally happens when decoding an str string  from a certain coding. Since codings map only a limited number of str  strings to unicode characters, an illegal sequence of str characters  will cause the coding-specific decode() to fail.Also in Python's Unicode HOWTO section Python’s Unicode Support --> The String Type, it writesIn addition, one can create a string using the decode() method of  bytes. This method takes an encoding argument, such as UTF-8, and  optionally an errors argumentThe errors argument specifies the response when the input string can’t  be converted according to the encoding’s rules. Legal values for this  argument are 'strict' (raise a UnicodeDecodeError exception),  'replace' (use U+FFFD, REPLACEMENT CHARACTER), 'ignore' (just leave  the character out of the Unicode result), or 'backslashreplace'  (inserts a \xNN escape sequence).In short, whenever Python's  method fails to map  strings to unicode characters, and when it uses the  argument, the  method will return a  exception. I tried to find the  method in the .decrypt() method of . Initially, I could not locate it. For Python3, the  method  return statement was:return str(out_bytes, encoding)However, further checking Python's explanation on the str class, I found the explanation saying that:if object is a bytes (or bytearray) object, then str(bytes, encoding,  errors) is equivalent to bytes.decode(encoding, errors).This meant that without defining the  argument in , this str class defaulted to returning  and returned the  exception whenever it failed to map  strings to unicode characters.Reason 2In the "simple password verifier" example, the  argument of Scrypt.encrypt() was defined as  which returned a .  When this  was encrypted, and subsequently decrypted by , the returned decrypted value must also be a  . According to the doc_string of the  method, for Python3 this method will return a str instance if encoded with encoding. If , it will return a bytes instance. As  defaults to  in function ,  attempts to return a  resulted in the . Solution to the "simple password verifier" example script given in py-scrypt:The  function should contain the argument  . should contain the argument  .Revised Example Script:


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=str#str
