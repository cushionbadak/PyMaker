Natural Text
I would like to utilize user input to match and rearrange strings.In Perl a simple example would look like the following:The same works in principle also in Python:Result: 456123However, the expressions  and  are not very user-friendly if you have to type it several times in an entry field.Therefore, I am wondering if in Python there are similar compact expression like   in Perl?I can't get it work in Python with  and .Any ideas?Edit:Sorry, I try to explain after some comments below:I was trying  since it seems to work with  etc.but apparently for some reason  etc. is not accepted in results inAbout the suggestion to use re.sub()It should not be a simple substitution of a string but a rearrangement+addition of matches.If I modify the original regex I can use However, e.g. if I want to add '999' inbetween the matches (of course, neither  or  does it) then probably I am back using  and  etc. although I wanted to keep the user input as short and simple as possible. Maybe, I can use some kind of the suggested substitutions.
You don't need . In fact, you want to avoid  like the plague.You can achieve the same output with :The example about inserting  between the matches is easily solved by using the  syntax:As you can see, if all you need to do is move captured text around and insert new text, the regex module has you covered. Only use  if you really have to execute code.
"inspired" by the above comments, I think the following seems to be an answer to my question. (Assuming that you have only  to ). At least, this solution was not intuitive and obvious to me (as Python likes to be). More elegant constructs are welcome.


Answer URL
https://docs.python.org/3/library/re.html#re.match.expand
