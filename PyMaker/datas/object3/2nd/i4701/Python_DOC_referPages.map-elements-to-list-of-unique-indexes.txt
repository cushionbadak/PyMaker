Natural Text
Suppose I have a list of elements:and I want to convert this list to a list of indexes of unique elements.So  is assigned to index 0,  to index 1 and  to index 2.My desired result would be:Currently I'm doing this by creating a dictionary that assigns to each element it's unique  and then using a list comprehension to create the final list of indexes:My question is: Is there an easier and straightforward way of doing this?I am thinking about having a big list of categories so it needs to be efficient but preventing me to manually create the unique list, the dictionary and the list comprehension.
As suggested by @mikey, you can use , as below:Result:
This will do the trick:Complexity will be O(n).Basically what you do is storing in  indexes of first value occurance. If  don't have value , then we save current index .
You can do this by using Label encoder from scikit learn.It will assign labels to each unique values in a list. Example code : 
list.index() returns the index of first occurrence as required for your task.For more details check list.index()


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
