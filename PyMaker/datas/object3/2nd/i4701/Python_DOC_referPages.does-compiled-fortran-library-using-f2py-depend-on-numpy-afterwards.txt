Natural Text
I have a Fortran 95 code that I want to compile to a Python library using f2py. In a matter of fact I've already done it, and it works beautifully. Does the resulting .pyd (.so) depend on numpy after compilation? Could it be used without numpy installation and are they some other options to embed the needed parts inside the final library so it has no dependencies?I am considering this to be a library accompanying a commercial product and I want the end user to have as little as possible to install on his system, so suggesting to my future customers to install numpy does not suit me. I've searched extensively for an answer, but I cannot seem to find one.In case it is not possible, could you please refer me to a dependence free way to wrap Fortran code using Python.
I'm afraid there is no way of doing this without numpy, as f2py internally produces numpy dependencies. Does your code need to be FORTRAN? If it could be C/C++ there might be a chance to get around dependencies, check out chapter 7 of this book for more insights on that.
On the website fortran90.org, there are sections dedicated to the Fortran C interface. While it is of course possible to use NumPy, plain C interfacing using  is certainly possible. And it is part of the standard!See Interfacing with C and the following sections. The link refers to calling C from Fortran but is directly relevant nonetheless. The next section uses Cython for calling Fortran from Python "Ã  la C" but uses NumPy. The part using ctypes uses no NumPy.Note: you need a Fortran 2003 compiler. Fortran 95 code is of course legal Fortran 2003 so you can just add the wrapper/interface part to your code.


Answer URL
https://docs.python.org/3/library/stdtypes.html#memoryview
