Natural Text
I have an  that I need to cancel after some amount of time. Before cancelling, the task needs to do some cleanup. According to the docs, I should just be able to call task.cancel or  and intercept an  in the coroutine, but the following example is not working. I've tried intercepting other errors, and calling  instead, but neither have worked. Am I misunderstanding how cancelling a task works?
The documentation for  specifies that it will cancel the underlying task, and then raise  from the  call itself:Returns result of the Future or coroutine. When a timeout occurs, it  cancels the task and raises .And you are correct that task cancellation can indeed be intercepted:[] arranges for a  to be thrown into the wrapped  coroutine on the next cycle through the event loop. The coroutine then  has a chance to clean up or even deny the request using  //. Note that the docs specify that  is thrown into the coroutine, not .If you make that adjustment, things work the way you expect:Output:As you can see, now  gets printed before the  is raised by .


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for
https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.cancel
