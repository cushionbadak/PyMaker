Natural Text
I have the following dictionary (short version, real data is much larger):I want to divide it into smaller nested dictionaries, depending on a part of the key name.Expected output would be:Logic behind is:Partial code so far:What I'm trying to do is to create the nested dictionaries that I need and then I'll create the dictionary and add the nested one to it, but I'm not sure if it's a good way to do it.When I run the code above, the variable c_std_bem_sum becomes a tuple, with only two values that are changed at each iteration. How can I make it be a dictionary, so I can later create another dictionary, and use this one as the value for one of the keys?
One way to approach it would be to do something likewhich givesA few notes: (1) We're using nested dictionaries instead of creating separate named dictionaries, which aren't convenient.(2) We used setdefault, which is a handy way to say "give me the value in the dictionary, but if there isn't one, add this to the dictionary and return it instead.".  Saves an .(3) We can use  instead of hardcoding the width, which isn't very robust -- at least assuming that's the delimiter, anyway!(4) It's a bad idea to use , the name of a builtin type, as a variable name.
That's because you're setting your dictionary and overriding it with a tuple:Now for your example:Basically, this grabs the rest of the key (or 3 characters, as you have it, the [14:None] or [14:] would get the rest of the string) and then uses that as the new key for the dict.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
