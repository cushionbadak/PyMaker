Natural Text
I created a simple program for performing a Caeser cipher on a user inputted string.In order to allow the shift to go past the end of the list and back to the beginning, I simply duplicated all the list values for that list.Is there a more pythonic way of achieving this result so that it will shift back to the beginning and continue to shift if the shift goes past the end of the list range?
If you do want to do it this way, then you're best bet is to use modular arithmetic to calculate the index in :Some notes: you don't need to convert your alphabet to a list: strings are iterable too; a dictionary might be a better alternative data structure.
Here's the best pythonic way I could write. You don't even need a list because each character has an ASCII value which has a predefined range. Just play around with it. gives you the ascii value. 97 is value of 'a'. So  is same as searching for index of i in your list. Add the key to it to shift.  is opposite of  and it converts ascii value back to the character. So just one line of code within the method.



Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
