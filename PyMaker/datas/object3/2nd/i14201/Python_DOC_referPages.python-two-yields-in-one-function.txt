Natural Text
We find an interesting issue on  of Python. We wrote a simple program:The result is amazing:i=5, j=21 => yield i => a1=21 => send(66) => x = 66i=5, j=21 => yield j => a2=5 => send(77) => y = 7700print 7766print 21print 5i.e. after ,  gets the value of ; after ,  gets the value of .Does anyone know why  do like this? Why not a1=5, a2=21?
 takes the first element from the generator ():Then  is equal to  (which is 21). Since your second loop is still working, subsequent  is equal to  (which is still 5).Essentially, the problem is that you consume 3 values, instead of 2.Use  or  to start the generator:
 calls into the method, which returns from the first . Your  then resumes the method at  and yields  from there. The  line resumes the method directly afterwards and returns from .


Answer URL
https://docs.python.org/3/reference/expressions.html#generator.send
