Natural Text
For a code I am writing, I am running  tens of thousands of times.  I noticed in the relevant  source code, specifically on lines 430 and 431 in the source (in the  function), there are two  statements:I call  inside a loop.  I am wondering if the modules loaded by these  statements are kept once an iteration of the loop is completed or if the modules fall out of scope and need to be reloaded in every iteration of the loop.Note: the  statements are only called if the  statement on line 427 of the source code evaluates to true.   is what is passed to  by , so the  statements are indeed called.Additional note: I am not asking about importing modules multiple times (so much), but rather if a module imported in a loop is still accessible by the code after the loop completes (or after each iteration of the loop).More notes:this works, but if I instead define a function:thenWhat is up with that?
This behavior has nothing to do with a loop, it's all about this funciton.As doc sais, The basic import statement (no from clause) is executed in two steps:     find a module, loading and initializing it if necessary      define a name or names in the local namespace for the scope where the import statement occurs.And funcitons do have their own scope, that's why you can't see imported module outside of it.https://docs.python.org/3/reference/simple_stmts.html#the-import-statement


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-import-statement
