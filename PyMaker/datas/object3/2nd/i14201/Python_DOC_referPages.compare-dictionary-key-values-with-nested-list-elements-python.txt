Natural Text
Trying to match key, values in dictionaries with nested list elementsI am trying to get a list which has the values that match with list_A and dict i.e. as in the values of list a ( the second elements in the nested lists) should lie between the value list pair of the dict. I am trying to first match the keys of dict with list_A_no_reps and if there is a match, I am trying to find out if it lies between the values of each key, value pair. I have this so far:
I would group the sublists in a dict by the first element which is the letter then iterate over your original dict and check if each key is in the grouping dict and do your comparison.Or use viewkeys to get the common keys:Or just loop over listA:
You can try:Output:Modification in your code:The problem in your code was that you were checking with all other elements of  too. Therefore you would be getting the undesired value which might come within the range of some another key's range. So a if condition is required to check if a valid comparison with same key is occurring.For example, without if condition you would have checked  with . Hence you would have included it in  even though it does not satisfy the range specified for .
UpdateChange  to As your dictionary has two elements and indexing is zero based, so  would result in Also you might like to go for a better solution, by leaving out  and removing the  block, then using  to compare.
It would be quicker to look up a key in  for each set of values in  than iterate through the list for each key in .  This can be done in a single line with a list comprehension:yields


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
