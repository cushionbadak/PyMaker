Natural Text
My file is formatted into three columns of numbers:I would like to have Python use the first two columns as keys and use the third column as the values. The file is large, meaning that I can't format it by hand. So how do I have Python automatically convert my large file into a dictionary?Here is my code: The output prints the numbers diagonally all over the place. How do I format it properly?
Banana, you're close.You need a comma separating the arguments of .You want to assign the third member of , i.e. .You need to decide how to group the first two members of row into a hashable key. Making a tuple out of them, i.e.  works.Print the dictionary line by line.Try:
I'm not sure exactly how you want the keys to layout. Regardless, you should use the csv module, using the  as your delimiter.Prints out:    {'3,12345': '1.12345', '1,54321': '1.54321', '2,12345': '1.12345'}Alternatively, you have this:Prints out:
You should try -
First of all your slicing is wrong.You can get the first tow column with  and 3rd with .Also you don't need to create your rows in a separated data structure you can use unpacking operation and  function within a dict comprehension :result :Note that as  is a list and lists are unhashable objects you can not use it as your dictionary key so you can convert it to . And if you want to preserve the order you can use  :


Answer URL
https://docs.python.org/3/library/pprint.html
