Natural Text
I am studying  and I write a class  to do common classification. It need a  to determine using which Estimator:I want to get Estimator by name, but what xxx should be?Or is there a better way to do this?Build a dict to store the imported module?  but this way seems not so good..
In this case it is advised to simply use the class directly as an argument.You will never have to worry about it as a string: you can compare , and compare it to something else.Think of it like accepting an integer as argument, then converting it to a string to use it: does that make sense? You can just simply require a string.Proposed code:You can then do:As per the comment:You can then also initialise a dict at start like:It's cleaner to work with a  (the string/model does not exist, and you're aware since you did not define them), than to check , sounds pretty nasty!
There are two build-in functions may help you:  and , both of the two return a dict of the current symbol table.you code could be  or mv the estimator keys to  and use 
Built in function globals() does the trick: you can check that  returns .ADDENDUMSafe: nothing 'nasty' can happen by evaluating Efficient: overhead is negligible with respect to Simple:  is just the shortest answer to the question.If this is pythonic or not, I don't know, but the  builtin is there to be used, so why chose more complicated solutions?To be explicit, can be implemented asif the  return is preferred to a  exception if  was not imported.


Answer URL
https://docs.python.org/3/library/functions.html#globals
