Natural Text
I'm trying to think of the best way to write large amounts of formatted text in python to a text file. I'm creating a tool that generates PHP files automatically depending on user input.The only way my limited knowledge of python can come up with at the moment is write each line individually to the file like so:The skeleton of the document I print to the file like above and add in variables the user supplies via raw_input such as page title, meta data etcWhat would be a better way of doing this?I suppose what I would be looking for is something similar to pythons commenting systems like this:Then write this out to a file
what you call "python commenting system" is NOT a "comment system" - comments start with a "#" -, it's a syntax for multiline strings. The fact that it's also used for docstrings (which are not comments but documentation and become attributes of the documented object) doesn't make it less of a proper python string. IOW, you can use it for simple templating:but for anything more involved - conditionals, loops, etc - you'd better use a real templating system (jinja probably being a good choice).
You should consider looking at Python templating. This will allow you to enrich your preexisting data with variables (per your comment and update of the question).
We can write output data line by line:and it takes some time to execute:Or we can prepare the whole output in memory and then write it at once:The execution time is different:Simply said, operations in memory are usually faster than operations with files.
if you have all the lines stored in a list, you could iterate on the list:Or, more succinctly:


Answer URL
https://docs.python.org/3/tutorial/introduction.html#strings
