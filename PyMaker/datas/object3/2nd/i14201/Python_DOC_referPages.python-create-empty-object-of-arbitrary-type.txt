Natural Text
for types such as list I can readily create an empty list to make this construct work:obviously useful in constructs like this:Now I'm working with a user defined type, defined in a module that I cannot read or change.. I have to do this:This works, but is ugly and occurs so often it is pretty annoying.so.. is there a way to create an empty object such that the  operator would behave simply like a regular assignment regardless of the type on the r.h.s?Edit:I tried to keep the question generic deliberately, but for completeness the type in question is an Abaqus geometry sequence.
is there a way to create an empty object such that the  operator would behave simply like a regular assignment  regardless of the type on the r.h.s?Sure. Just write a class and define your  method to return the RHS unmodified.Result:
Assuming that your list has at least one element, you could just create an iterator and use  to get the first element and them sum the rest:You could also do this using the  function, with a second paramter specifying the initial value: . This explicitly does not work for strings, but you could also use  in a similar way, which will work with strings: . Or, you could even combine this with the  from @Kevin's answer, as . This way it also works with strings, and you can use the list directly and do not need to create an iterator.


Answer URL
https://docs.python.org/3/library/functions.html#sum
