Natural Text
I'm passing a function as a parameter to a class constructor. The constructor stores it in an instance variable, and other class methods want to call it.When I try to call the function in another method, for example:I get "{AttributeError}'' object has no attribute '__kg'."When I evaluate the function call in my IDE's Evaluate Expression window, I get the same thing. But when I evaluate the instance variable itself ("self.__kg"), I get:...so it appears that the attribute __kg is defined.What is going wrong?I can call the function by referencing the parameter -- no problem.I can also assign the parameter's value to a method variable and call the variable -- no problem.It's only the reference to the instance variable that doesn't work.
Whenever a variable has a double underscore in a class, Python will invoke name mangling (see the Python documentation on classes). Using double underscores is pretty much only to avoid name clashes with subclasses or to make a variable 'really private'. (See PEP8 for more style suggestions).If you want other inherited subclasses to use your private variable, you can either use one single underscore () or use the  decorator.Check out this really dumb example:
Don't use double underscore, which makes python do some magic and append classname to variable names (called name mangling). Just use single underscore instead of double.


Answer URL
https://docs.python.org/3/tutorial/classes.html#private-variables
