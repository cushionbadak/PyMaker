Natural Text
Is there any Python module that allows one to freely reinterpret raw bytes as different data types and perform various arithmetic operations on them? For example, take a look at this C snippet:Here, both  and  point to the same chunk of memory. I can use  to perform airthmetics and for string-based operations and individual byte access.I would like to do the same in Python - I know that I can use  and  whenerver I feel the need to convert between list of bytes and an integer, but maybe there's a module that makes such fiddling much easier. I'd like to have a datatype that would support arithmetics and at the same time, would allow me to mess with the individual bytes. This doesn't sound like a use-case that Python was designed for, but nevertheless, it's a quite common problem.I took a look into  codebase, since cryptography is one of the most common use cases for such functionality, but  implements most of its algorithms in plain C and the much smaller Python part uses two handcrafted methods ( and ) for conversion between the types.
You may be able to use , which is analogous to Unions in C.I don't have much experience in C, but as I understand Unions allow you to write to a memory location as one type and read it as another type, and vice versa, which seems to fit your use case.https://docs.python.org/3/library/ctypes.html#structures-and-unionsOtherwise, if your needs are simpler, you could just convert  /  objects from / to integers using the built-in  and  methods.


Answer URL
https://docs.python.org/3/library/ctypes.html#structures-and-unions
