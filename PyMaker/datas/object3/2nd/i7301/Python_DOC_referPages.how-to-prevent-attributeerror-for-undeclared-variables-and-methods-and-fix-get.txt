Natural Text
Running the above programs prints "getattribute" and "no" multiple times.  is called multiple times. 333 to be exact.  prints 333.What I want to achieve is to have a class that doesn't raise an error if a class variable or method is not declared in the class.Whats the possible reason for this?
 just tries to get the attribute and returns  if it can’t. Whether it can’t is determined in Python 3 by an attempt throwing an , and in Python 2 by an attempt throwing any error. (This includes s and is why it fails silently after 333 calls. Python 2 is not a sane language; upgrade to 3 if possible.)Instead, you can return the alternative value on an  yourself:This can potentially hide other s, but it’s difficult to avoid doing that just by the nature of Python.
hasattr is a shortcut to call getattr and see if it raises an exception (which means attribute does not exist) or not (which means it exists)cf : https://docs.python.org/3/library/functions.html#hasattrgetattr calls __getattr__ so you are doing a recursive callI think a possible workaround would be to use: instead of:
This is because running  calls  (aka ) - reference.So when doing  within  it calls , here comes the unwanted recursion.I would fix it with:
The problem comes from .Since  is not defined as a member of ,  results in a call to .Then, , which is tantamount to  calls itself , as stated in hte documentation.Hence an infinite recursion, resulting in a  in Python 3.Since getting  does not really make sense if you know that  does not have a  member, a first fix I would suggest is to define that member.Your code then outputsA more clever fix would be to check if the  argument passed to  is , or depending to your needs, different from  and .In this situation, you can force  to define the requested unfound member.Alternatively:


Answer URL
https://docs.python.org/3/library/functions.html#hasattr
https://docs.python.org/3/library/functions.html#hasattr
https://docs.python.org/3/library/functions.html#hasattr
