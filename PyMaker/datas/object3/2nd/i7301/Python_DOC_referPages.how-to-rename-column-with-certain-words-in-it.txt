Natural Text
Noob in python here. Forgive me if I'm asking stupid questions (which I hope I'm not). I have a dataframe 1 that look like this:and another dataframe 2 that look like this:Now I want to:Loop through all the dataframes (which i have achieved so)replace all the "(XX/hour)" to 'per hour'. So basically, regardless whether it's "lb/hour" or "km/hour" or "kg/hour", I want them to be changed to "per hour", so the two dataframes should look like the following:dataframe 1 desired output:dataframe 2 desired output:I've looked into many posts and tried using , but this method only changes column named 'a' to name 'b', and I don't know how to incorporate the Regex version into it. Any help is appreciated! 
This should work:Here  is a DataFrame, and  is the regular expression module.Update: Clarification on the regular expression used.I actually did a more general form than needed here. The simplest regex for the OP would actually beThe regex I used was to allow for a general denominator. For example, the simpler regexgivesBut the more general regexgivesThe change from  to  in the pattern captures an arbitrary word, rather than just recognizing . The change from  to  in the substitution puts that captured word (group 1 in the pattern), rather than just . (The  prefacing the string just means the  is interpreted literally, rather than as an escape.)


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/howto/regex.html#regex-howto
https://docs.python.org/3/howto/regex.html#grouping
https://docs.python.org/3/reference/lexical_analysis.html#literals
