Natural Text
Consider this example where the  of all instances of a class  will point to a global dict .Now let's test a few things:All works as expected.Now let's tweak class  a little by adding an attribute named .Let's run the same set of steps again:Based on the above information the first case worked as expected but the second one didn't and hence I would like to know what changed after the adding class level  attribute. And can we access the instance dictionary being used now in any way?
In the first case the  has access to the  descriptor provided by its type. This descriptor allows it to get the underlying instance dictionary and also set it to a new one using  and  respectively. And of course we can set a new dictionary from here as well:In the second case our class itself contains an attribute named , but still the  attribute points to . attribute for classes in this way is a special attribute.The attribute we had set can be accessed like this:A Python level we have now lost access to the instance dictionary but internally a class can find it using . As done in .Both  and  also access the underlying instance dictionary using .To access the instance dictionary being used we can actually implement  in Python using ctypes. This is pretty eloquently done by @user4815162342 here.Continuing the second case:


Answer URL
https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_dictoffset
https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers
