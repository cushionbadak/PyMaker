Natural Text
I tried to compute  but encountered an  (it's roughly 6.3e4125). From this question it seems like it's due to a too large float, the accepted answer says "(...) is slightly outside of the range of a double, so it causes an overflow".I know that Python can deal with arbitrarily large integers (long type), is there a way to deal with arbitrarily large floats in the same manner ?Edit : my original question was about using integers for calculating exp(n) but as Eric Duminil said, the simplest way to do that would be  which doesn't provide any useful result. I know realize this question might be similar to this one.
I don't think it's possible to approximate  with integers. If you use  instead of , your calculations will be completely useless.One possible solution would be to use . According to the documentation:There is essentially no upper precision limitYou can also specify the desired precision:With , you even get the integer closest to .
Here's snother way to calculate the result with Python:is too big.But  isn't. You cannot calculate it this way in Python, but  is , which is :This way, you can calculate that  is  in plain Python, without any library!
try  type. type has been remove from python since 3.0 version.


Answer URL
https://docs.python.org/3/library/stdtypes.html
