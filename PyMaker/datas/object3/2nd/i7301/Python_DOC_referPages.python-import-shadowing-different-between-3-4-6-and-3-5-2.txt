Natural Text
Python import shadowing seems to be different between version 3.4.6 and 3.5.2 :Question 1: Why is... those things ?Question 2: Is it there something in a changelog about that ? I can't find anything...
The documentation states thatWhen a module named  is imported, the interpreter first searches  for a built-in module with that name. If not found, it then searches  for a file named  in a list of directories given by the  variable .(emphasis mine) wasn't a built-in module module in Python 3.4, but that changed in Python 3.5:You can see the patch that introduced the change here (related to issue 5309). Considering that the changelog mentions the issue 5309, but doesn't say anything re. the  module, it's safe to say that the change was a side-effect and is an implementation detail of CPython.Since  isn't a built-in module in CPython 3.4, and the first directory in  is the current script directory,  attempts to import the  attribute from your  file, but fails and throws the .In CPython 3.5  is a built-in module. As per the quote above, running  successfully imports the built-in module, without searching for modules on .Both CPython versions will raise the same error if you shadow a non-builtin module from the standard library, such as :


Answer URL
https://docs.python.org/3/tutorial/modules.html#the-module-search-path
https://docs.python.org/3/whatsnew/3.5.html#distutils
https://docs.python.org/3/library/sys.html#sys.path
