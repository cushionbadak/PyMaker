Natural Text
The following code throws up a mysterious error that I cannot find the solution to. It works fine when I tested it in a bigger module, so cannot see why this doesn't work:CodeError MessageIt is worth noting that the code works fine when there are no additions to the file contents. On adding a student to the file, the SORT does not work.Original File contentsFile Contents on adding a test student:The resultant error occurs at this stage (when the new student has been added). The sort function otherwise works fine.Update and clarification:For teaching purposes, I need it to work both on repl.it AND IDLE>If someone could post a repl.it as an answer (With my code above, working), which also works when implemented in IDLE with a txt file, I will accept as an answer.
The reason of your issue here is that you're not appending to  properly.On Windows, the  module has a bug/limitation when running Windows. It adds extra blank lines every line (actually it adds an extra carriage return char) if you don't open the file properly. So to fix it:Python 3:Python 2:So  module is adding an extra  at the end of your file. And when reading it back again, it issues an empty row.It works fine in repl.it because they're using a python engine which runs on a Linux sandbox) , but the documentation still advises to open the files like I've shown.(the documentation of the  module is clear about this, even if it advises to do the same for read mode, and I never had any issue with a simple )Also see an old question of mine: portable way to write csv file in python 2 or python 3If there's a double carriage return char at the end of the file, you don't see it (use Notepad++ with "show all symbols" to see a double CRCR character) but  returns an empty row which fails when  uses your key function to compare it.Now, if you want to be robust to that (because other people could edit your database, for instance, using excel csv mode or other terrible stuff):I would filter out & sort & convert to list at the same time using  which removes "falsy" (i.e empty) rows:Of course if a row has only 1 or 2 items, that will also fail. In that case, drop  because we'd have to write a  and it's not worth, in favor of a generator comprehension:


Answer URL
https://docs.python.org/3/library/csv.html
