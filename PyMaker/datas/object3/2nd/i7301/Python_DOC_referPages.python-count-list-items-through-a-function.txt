Natural Text
This question already has an answer here:How can I count the occurrences of a list item?                    22 answers                In short, I am making a function that takes 2 arguments 'sequence' and 'item'. The 'sequence' can be anything - an integer, a string, or a list containing integers or strings. I am trying to make a function that counts the amount of times 'item' occurs in the 'sequence'. Please take into account, I am still a newbie at Python. A simple answer would be very much appreciated.This is what I have so farThe  part of the code is meant to be enabled if the  is something like a list. I was thinking I should loop through the list using  and do the same thing - but it's not working as it keeps returning  which follows the second 'else' statement. Any idea how I can do this? For clarification, the output in the example above should be  because '5' occurs once in the list.
EDIT: Changed  to return the number of occurrences instead of You are checking each item in sequence and evaluating, if it doesn't equal  it will return  right away, that is why you're getting False always.You need to have your  increment  and once the  is done then use  to check whether  or not. A simple example:If you learned list-comprehension already, you can use it as the following:

If we use your code as a basis, we get the following if we want it to work.You told it to loop over sequence, asking when num is equal to sequence, but one part of the list is not equal to the whole list. To fix this, we use an index. So we say, if item is equal to sequence[i], where is is an index, then we do found +=1. You also had the return statement in the for-loop, while you should get it outside of the for-loop, because it because breaks the loop. I hope this helps.
You can use a recursive function to repeat calls on the count function when the first argument is a list, or use a simple  when it is not. This can equally handle nested lists by walking through the nesting recursively:
I'd use  (or  in Python 3) to determine if the items are sequences (lists, tuples, etc). If you just want to know if the item is in the list, which is what your code seems to be doing in spite of the name :If you want to actually count the number of appearances of  in :There could be the possibility that a list within  contains in turn deeper sublists, and so on, in which case you may want a recursive algorithm. For finding if the element is contained you could go with:For actually counting:PD: Note that strings are considered sequences, and therefore  and  are both true. If you don't want  being considered an element of  (i.e. you want to consider strings atomically, like numbers), you'd have to tune the code a bit. You could replace  with , or with  (or, in Python 3, ).


Answer URL
https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence
