Natural Text
I'm trying to make a list of all possible 5 card poker hands to use in some computations (that may be slow but is preferably somewhat speedy). Now to get a list, I wrote the following code: But this runs out of memory before it's completed (over 11 gigs of RAM). I'm trying to use that list so I can exhaustively test against the set of all possible hands when I try to put 2 hands up against one another.Does anyone know how I could make this code better?
First, the function you are trying to create already exists: . Second, try to structure your code so that you can iterate over all possible hands without putting them all in memory simultaneously.Here is a short program that prints all possible hands, with duplicate hands removed, but never creates an in-memory list of all possible hands:If you actually need the entire list to be in memory, try:
Python actually comes with some batteries included stuff for making combinations. Here is the function That will do that for you.
You are producing ~52^5 = ~380 million hands, and trying to sort them. It is going to take a lot of memory. You need to fix the logic for asking sure each element in each hand is unique. What you currently have will only remove ones where they are all the same. You could either replace all the ors with ands, or you could just test if the set of the elements is equal to the elements themselves, which will eliminate hands with duplicates. That will cut the number of hands down to 52 choose 5 = ~2.6 million, which is much more manageable.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
