Natural Text
Can I run this swagger serverand this websocket server in two different threads, in python? Ultimately, when an  is posted to my swagger API, I want to forward this  to my websocket server and then send it through an existing matching connection to my websocket client. So i thought that if I ran those two in two threads, maybe I could share this  as a variable.
If you choose to run the Twisted reactor in a non-main thread, you'll have to disable its signal handling (because Python only allows signal handlers in the main thread).  This will disable some functionality but if you're not using that functionality this should be fine.Just start the reactor this way:This will let you run your Twisted code in a non-main thread (all in the same thread, so threadsafey issues should be minimized or eliminated).  That will, in turn, allow you to run your Swagger code in the main thread where it should work fine (because that's what you normally do).Alternatively, you could put the Swagger code in a non-main thread and Twisted in the main thread.  I don't know if there are steps you need to take to be able to run the Swagger code in a non-main thread.When it comes time to start passing data between the threads, you don't just want a variable that gets written by one and read by the other.  That would be a great step towards having non-thread-safe code.  Instead, use one or more of the Twisted APIs for messaging between threads.  For example,  is thread-safe (you're allowed to call it from any thread safely) and can be used to send a message from the Swagger thread to the Twisted reactor thread.  Something like:Now  will execute in the Twisted reactor thread "soon" and you can do whatever you want, confident you don't have thread-safety issues because it's just as if, from the perspective of , you're in a single-threaded application.


Answer URL
https://docs.python.org/3/library/ipc.html
