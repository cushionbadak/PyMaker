Natural Text
I watched a screencast from David Beazly in which he implemeneted type checking using multiple or more specifically diamond inheritence. I thought that his approach looked really cool but it also confused me and I simply can't figure out how it is working. Here is the code im talking about:And here it is in action:My Questions are:Why is the definition of a base class Contract with a method check needed to make this work?I have a basic understanding of what super does. I know it lets us avoid calling the base class explicitly and somehow deals with multiple inheritence. But what does it do in this example exactly?
Let's go through it line by line like a debugger.To easily find the method resolution order, use .If you had explicitly used the base class, after , the base class is , so  would never be called.You need to define  in  as when you call the last , if  didn't have the  method, it would have raised an , as  wouldn't have been able to find it.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.getmro
