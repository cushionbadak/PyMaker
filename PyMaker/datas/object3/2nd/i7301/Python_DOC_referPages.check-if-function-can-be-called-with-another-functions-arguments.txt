Natural Text
How can I check if a function can always be called with the same arguments as another function? For example,  can be called with all arguments provided to .The reason I want this is that I have a base function:and a list of callbacks:and a wrapper function that accepts anything:Now I want to check if all callbacks will accept the arguments provided to , assuming they're valid for .For performance reasons, I don't want to check the arguments every time  is called, but rather check each callback before adding it to the list of callbacks.For example, those calls are ok:But this one should fail because  has arguments in wrong order:
This took a bit of fun research, but i think i've covered the corner cases. A number of them arise to keep things compatible with python 2 while new syntax being added. Most problematic part is the fact that some named (keyword) parameters can be passed in as positional argument or be required based on order passed in. For more see comments.Below code will ensure that function b can be called using any possible combination of valid arguments to function a. (does not imply inverse).Uncomment/add try except block to get true/valse result and not an AssertionError.
Not sure what you are really looking for and I'm pretty sure your issue could be solved in a better way, but anyway: just check arguments from  and  and returns a new list with only same arguments in both  and .


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.signature
