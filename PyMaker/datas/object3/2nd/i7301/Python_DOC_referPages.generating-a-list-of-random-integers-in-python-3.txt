Natural Text
I am getting a IndexError: list assignment index out of range error when trying to run this program. My index appears to be fine (0 through 8) and I don't think .append is needed since the equal sign assign the random value each pass. What am I missing?
By initializing an list with it has exactly 0 elements. But withYou try to access the 1st, the 2nd, .. , nth element of the list. Your code does not insert elements to the list. To avoid this there are serveral approaches.Create a dict instead of a list. A dict actually creates nonexistent elements: Preinitialize the list with 8 elements:or But the most preferable variant should be to use append: 
Lists are not like arrays in other languages! is initialised as an empty list. There is nothing in it. Its length is zero. You need to add  to the empty list. This is done through 
This doesn't do what you're hoping it does. You can't assign a value to a position that doesn't currently exist in a list, and as that list is currently empty, that means you can't do this at all.what you want is:You don't need  because python handles this for you int the  loop.by the way, lotteries are generally picked without replacement, so don't you actually want to sample?https://docs.python.org/2/library/random.html#random.sampleeg:although it is also normal for lotteries to have far more than 10 options!
You should  the new values:or build the list up to the size you want:Also notice you dont neet to increment the index, you are already iterating through the range.
You are trying to access non-existing elements of the list.To build your list, you can either keep appending to it with :or, as it's common in Python, use a list comprehension:which is usually more efficient and succinct.
I thinks you try add element to array like
This works. Make an array with the numbers you want and select randomly one item. Then, delete that item and decrease the length with one (using pop). In this example the numbers 1 till 7


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
