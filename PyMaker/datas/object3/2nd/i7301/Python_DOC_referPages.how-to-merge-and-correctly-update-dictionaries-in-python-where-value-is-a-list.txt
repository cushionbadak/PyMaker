Natural Text
Let's say I have two dicts where the values are lists (or sets are also fine since the contents are unique). For example:My desired output would be this:but instead I get:Essentially I want to combine the contents when merging the two dicts (I don't want to override but rather retain both). Is there a simple way to do this? Note: In this this example I gave, there are only two dictionaries. Although I did not write the code yet, I would ultimately want to loop over several dictionaries and do this process of merging/updating in the loop, which might be helpful while suggesting an approach.
This can be expressed with a simple one-liner:This combines three techniques:The union of two sets combines the keys and eliminates duplicates.The dict.get() method supplies a default empty list for missing keys.The dictionary comprehension builds the new dictionary.Python's core toolkit often provides elegant solutions to basic elementary data manipulation problems.  I'm frequently amazed at how well the tools combine together.How this helps :-)
To avoid duplicates if you are merging multiple dicts of lists:
Here's a dict comprehension that will work if  doesn't contain keys that aren't in :Additionally, to make sure that any missing keys from  get added to the dict, you could add a  loop after that.
Don't know a straightfoward way, but this should work:
In case you want to retain both dictionary values do this
You could create your own dictionary class to get the desired behaviour. I'm not sure what is the best way, but here is one possibility:Output:Note that this is just a start that implements the desired behaviour. Depending on what you use it for, you might want to add more functionality. For example, only one of the ways of calling  is implemented.In order to prevent duplicate values in the resulting collections, you might want to use sets instead:Output:


Answer URL
https://docs.python.org/3/library/stdtypes.html#set.union
https://docs.python.org/3/library/stdtypes.html#dict.get
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
https://docs.python.org/3/library/stdtypes.html#dict.update
