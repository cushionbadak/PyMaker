Natural Text
I have two classes  and :As you can see, I have  implementing  and  implementing . I can create objects of these classes and add them, because the magic methods are defined.However, adding them produces this:How can I set it so that  method is called in preference to ?
There are two ways you can do this.Add an explicit check in  related to .Make  a subclass of .From docs:Note: If the right operand’s type is a subclass of the left operand’s  type and that subclass provides the reflected method for the  operation, this method will be called before the left operand’s  non-reflected method. This behavior allows subclasses to override  their ancestors’ operations.
Quote from the docs about the  methods :These functions are only called if the left operand does not support the corresponding operation and the operands are of different types. For instance, to evaluate the expression , where y is an instance of a class that has an  method,  is called if  returns .So, in your case, , the left operand, does have the  method, thus, it's called immediately. To avoid that, you can  from  if the other argument is of type .
As explain in the Python reference documentation in Datamodel section, that the order use by Python to resolve this case:check for  on the first operandand only if not implemented check for  on the second one.A possibility to resolve your problem (not really beautiful / pythonic) is to check in your  implementation if  implement the  method.For example with:With result:


Answer URL
https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types
https://docs.python.org/3/reference/datamodel.html#object.__radd__
https://docs.python.org/3/reference/datamodel.html#object.__radd__
