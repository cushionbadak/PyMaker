Natural Text
I have a problem to which the solution seems to be creating a class. However, all the methods in this class would be static, and I would only instantiate the class once, so I wonder if using a class is the right way to go.More specifically, I want to have a separate module to store some functions and some variables that are essentially the skeleton of the program. These functions and variables depend on some parameters that define my model (and I do not want to pass these parameters as arguments for other reasons that I may specify later if relevant). Ex.:On the other module I do a scan over some values of these parameters "m" and "k", and for each of these values I want to, say, find the minimum of V:Of course, this won't work, because my_model.V has no clue as to what m and k are. As I said, I thought about creating a class in the my_model file, defining the function V (and others!) inside that class, and instantiate the class in scan.py passing the parameters "m", "k" as arguments. But, as I said, this sounds to me as an overuse of the class feature. For instance, clearly the function V above would be static, and so would happen with ALL other definitions in this class. So is there any other, more proper way of achieving what I want, or am I just "over-reacting" and/or completely misunderstanding the use of classes in Python?
You can use :And use it like this:This is only really meant as an alternative to a class. The tastes differ here, some people suggest that you really should do it that way. Using a class and having s for the different model functions would be fine for me too.
I'm not sure I'm understanding your problem correctly, but I think what I would do is:1) Make m and k parameters of V2) The moment you want to minimize V regarding x, for a fixed m and k, create a partial function that has m and k already set, and minimize that:Alternatively, make a function that returns a version of V that uses the right m and k:But that's basically a reimplementation of functools.partial only for V.


Answer URL
