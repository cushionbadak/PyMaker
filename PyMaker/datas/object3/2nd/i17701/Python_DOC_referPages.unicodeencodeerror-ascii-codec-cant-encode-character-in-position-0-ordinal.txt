Natural Text
I'm working on a Python script that uses the scissor character (9986 - âœ‚) and I'm trying to port my code to Mac, but I'm running into this error.The scissor character shows up fine when run from IDLE (Python 3.2.5 - OS X 10.4.11 iBook G4 PPC) and the code works entirely fine on Ubuntu 13.10, but when I attempt to run this in the terminal I get this error/traceback:and the code that is giving me the problem: Doesn't this signal that the terminal doesn't have the capability to display that character? I know this is an old system, but it is currently the only system I have to use. Could the age of the OS is interfering with the program?I've read over these questions:UnicodeEncodeError: 'ascii' codec can't encode character u'\xef' in position 0: ordinal not in range(128) - Different character"UnicodeEncodeError: 'ascii' codec can't encode character" - Using 2.6, so don't know if it appliesUnicodeEncodeError: 'ascii' codec can't encode character? - Seems to be a plausible solution to my problem, , I don't get the error. However, it displays a character code, not the character I want, and  just gives me the same error. Not sure if I'm doing this right.UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-6: ordinal not in range(128) - Not sure if this applies, he's using a GUI, getting input, and all in Greek.What's causing this error? Is it the age of the system/OS, the version of Python, or some programming error?EDIT:This error crops up later with this duplicate issue (just thought I'd add it as it is within the same program and is the same error):EDIT: I went into the terminal character settings and it does in fact support that character (as you can see in this screenshot:when I insert it into terminal it prints out this:  and when I press Enter I get this: EDIT Ran commands as @J.F. Sebastian asked:::EDIT Tried the "hackerish" solution provided by @PauloBu:As you can see, this caused one (Yay!) scissor, but I am now getting a new error. Traceback/error:EDIT Added results of @PauloBu's fix:EDIT:And his fix for his fix:
When Python prints and output, it automatically encodes it to the target medium. If it is a file, UTF-8 will be used as default and everyone will be happy, but if it is a terminal, Python will figure out the encoding the terminal is using and will try to encode the output using that one.This means that if your terminal is using  as encoding, Python is trying to encode  char to ascii. Of course, ascii doesn't support it so you get Unicode decode error.This is why you always have to explicitly encode your output. Explicit is better than implicit remember? To fix your code you may do:This seems a bit hackerish. You can also set PYTHONIOENCODING=utf-8 before executing the script. I'am uncomfortable with both solutions. Probably your console doesn't support utf-8 and you see gibberish. But your program will be behaving correctly.What I strongly recommend if you definitely need to show correct output on your console is to set your console to use another encoding, one that support  character. (utf-8 perhaps). On Linux, that can be achieve by doing: . On Windows you change the console's code page with . Just figure out how to set utf8 in yours and IMHO that'll be the best solution.You can't mix  and  because they're basically the same. Regarding to your code, the hackerish way would be like this:I suggest you to take a read at the docs to see what's going on under the hood with  function and with : http://docs.python.org/3/library/sys.html#sys.stdinHope this helps!
 output suggests that you should change your  settings e.g., set .The first error might be due to you are trying to decode a string that is already Unicode. Python 2 tries to encode it using a default character encoding () before decoding it using (possibly) different character encoding. The error happens on the  step:It looks like you are running your script using Python 2 instead of Python 3. You would get:different error otherwise.Just drop the  call:The second issue is due to printing a Unicode string into a pipe:Set appropriate for your purpose  environment variable:the terminal is just displaying this: If  is a  object then leave the  calls. The fix is the same:
My locale is set to de_AT.UTF-8 but these lines in were missing:logout / login and your problem should be solvedTo verify if all locales are set correctly type  in your terminalThe output should be similar to this:
in the first line of your file .py you need to add this string, :# -- coding: utf-8 --and you can also try this:print ("|\t ",unichr(9986),"PySnipt'd",unichr(9986),"\t|")


Answer URL
