Natural Text
I simulate some data using python descriptor.  the output:It seems successfully call the method  and , but i don't know why there's no output message  or .I'm not sure whether python call the descriptor method or not.my question is when descriptor method would be called?I summary my origin guess:getWhen use  to get property and the prop is another object which is setting descriptorwhen calculate some expression should get value such as . If a is have descriptor and will call If a object simulate a function will call  to get function body first, and then call  to run the function.setWhen the object appear in the left side of assignment statement such as But I must be wrong, i need someone to tell me the right concept.
Your descriptors are not being called, and there is no way to write a descriptor or anything else to do what you seem to want.When you do , you have thrown away your  object and set the variable  to the ordinary number 2.  When you then add 7 to it, it equals 9, because it's just a regular number.  Your  class is not involved in any way.Descriptors allow you to hook into what happens when you do  or .  In these cases it is  that is the descriptor, not , and the descriptor only works when it is an attribute.  There is no way to change what happens when you do , where  is a bare name (i.e., no dots or ).  In relation to your guess:getWhen use obj.prop to get property and the prop is another object which is setting descriptorYes, basically.  When you do  and  is a descriptor, then its  is called.  Note that  is the descriptor, not .when calculate some expression should get value such as . If a is have descriptor and will call No.  You can override such behavior with the  magic method, or similar methods for other operatorsIf a object simulate a function will call  to get function body first, and then call  to run the function.I don't understand what this means, but I think no.  If the object defines , then  calls its  without involving any descriptor.setWhen the object appear in the left side of assignment statement such as No.  Only when the descriptor is accessed as an attribute on the left side, as in , where prop is a descriptor.The bottom line is that descriptors only work when they are attributes of classes.  Just creating a "bare" descriptor as you're trying to do (i.e., doing ) won't do anything.Also, as a side note, descriptors only work when set on new-style classes.  If you're using Python 2, this means that the class holding the descriptor has to inherit from .
 makes  an  but not  anymore.Descriptor needs to be an attribute of instance and inherited from .


Answer URL
