Natural Text
This question already has an answer here:Understanding slice notation                    31 answers                I am trying to understand slicing. How does this slice work?I have already read all the posts and cannot find an answer. As I understand it slice is supposed to be . But if I start at -3 after one step I am at 0.How exactly does this work? Which indexes are printed? The ones in the range?
First note that  is  .  is a slice containing all the elements in , (if they exist). does not exist (it raises an IndexError), but  is :That makes sense, since  is the last element, .  is thus the penultimate element.Finally,since this is every third element in . Since there is only one element in , every third element is the same as the first and only element.The exact rules governing slicing is given by Notes 3 and 5 of the docs section entitled "Common Sequence Operations".
Think of the indexes as dividers right after an element. e.g.Given list Positive indexes (indexes in |n|): Negative indexes (indexes in |n|), I'm gonna show the list in reverse so it's a bit more clear:  or in the original direction (but think of it starting from the end) So in your example:  your negative indexes are  but when you're doing a range, Python doesn't complain when you pass an out of scope starting index of . In fact you can pass in any arbitrary indexes when you do a range and Python won't complain. Try for example , but because in your case your range does contain , that's all you get.


Answer URL
