Natural Text
I'm writing an API in flask that returns json.  Each flask function is of the formIf I return a large amount of data, a call to this function takes around 1.7 seconds.  However, if I do this:...the function completes in around .05 seconds.  Can anyone tell me why  is so much slower?  Is there anything wrong with returning a raw Flask response instead?
My guess is: it has a lot to do with indentation and making a  json dump. Here's the method definition (I stripped the comments to save space, full code can be found here) : wraps  if the module is available, otherwise it uses .
 just wraps . However, depending upon the config of your Flask app and the Flask version that you're using, it may pass  and  to . (See the docs on pretty-printing at https://docs.python.org/3/library/json.html if you're unfamiliar with these arguments).Passing these arguments slows down  dramatically. Using the 181MB  file from https://github.com/zemirco/sf-city-lots-json as sample data, these pretty-printing arguments increase 's runtime from 7 seconds to 31 seconds on my MacBook Pro:As of Flask 1.0, this costly pretty-printing will happen if either:You've explicitly set  to  in your app's config (it's  by default), ORYou're running your app in debug mode(You can see these conditions in the Flask 1.0.2 code at https://github.com/pallets/flask/blob/1.0.2/flask/json/__init__.py#L309.)If you are using Flask >=1.0 and have the (probably unusual) need to disable the pretty-printing even in debug mode, you can always implement your own  by copying and pasting the built-in 's definition and deleting all the pretty-printing logic:If you're in a version Flask prior to 1.0, then pretty-printing instead happens if both:You haven't explicitly set  to  in you app's config (it's  by default), ANDThe current request is not an XHR requestIn those older versions, there is never any need to redefine  to eliminate the pretty-printing, since you can just do:(Alternatively, if you're using a pre-1.0 version of Flask and only want to disable the pretty-printing in production, then there's no need to change your code; instead, just upgrade to the latest version of Flask.)
It took me a while to figure out,  but Flask  sets the  argument on the encoder and it seems it defaults to . Adding:To the configuration gave me a factor 7 speed up for larger JSON structures.


Answer URL
https://docs.python.org/3/library/json.html
