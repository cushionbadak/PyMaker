Natural Text
I have successfully been parsing data files that I recieve with a simple python script I wrote.  The files I get are like this:file.txt, ~50 columns of data, x 1000s of rowsUnfortunatly, sometimes some of the lines contain UTF-16 symbols, and look like thisI have been able to implement the "latin-1" coding for commands in my script like:My problem lies in code such as:I am unable to get past the encoding errors for the last command.  I have tried enforcing the coding of:At the top of the document as well as before the last mentioned command (find and replace).  How can I get mixed encoded files to process for the above command?  I would like to preserve the UTF-16 (unicode) symbols as they appear in the new file.  Thanks in advance.EDIT: Thanks to Alexis I was able to determine that filinput would not work for setting another encoding method.  I used the below to resolve my issue.
You can tell  how to open your files. As the documentation says:You can control how files are opened by providing an opening hook via the openhook parameter to fileinput.input() or FileInput(). The hook must be a function that takes two arguments, filename and mode, and returns an accordingly opened file-like object. Two useful hooks are already provided by this module.So you'd do it like this:I use  as the encoding since this is your file's encoding, not . 8-bit encodings don't have error checking so Latin1 will read the bytes without noticing there's anything wrong, but you're likely to have problems down the line. If this gives you errors, your file is not in utf-16.
If your file has mixed encoding, you need to read it as binary and then decode different parts as necessary, or just process the whole thing as binary instead. The  solution in the question works by accident really.In your example that would be something like:This is the closest to what you ask for - as far as I understand you don't even care about that field with potentially different encoding - you just want to change some content and copy the rest of the file as is. Binary mode allows you to do that.


Answer URL
https://docs.python.org/3/library/fileinput.html
