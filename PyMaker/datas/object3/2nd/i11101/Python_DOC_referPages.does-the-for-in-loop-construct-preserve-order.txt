Natural Text
Does an ordinary for/in statement guarantee the list is iterated in order?That is, is the loop above guaranteed to print  every time?
A  loop's iteration order is controlled by whatever object it's iterating over. Iterating over an ordered collection like a  is guaranteed to iterate over elements in the list's order, but iterating over an unordered collection like a  makes almost no order guarantees.
For lists, yes, since they are ordered data structures in Python. 
When you iterate over a sequence (list, tuple, etc.), the order is guaranteed.Hashed structures (dict, set, etc.) have their own order -- but for a given structure, the order will be the same each time.  If you add or delete an element, the order may then be different.Consider the folloing code: I make a set of five elements, and then print it out with four identical for loops.  The order is the same.  Then I add two elements; this upsets the order.Output:Note how the original elements are no longer in the same order: "Dinner" now comes after "Apple".
If you want to test it yourself:And just for a control case:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
