Natural Text
I know that this question is asked many times on this website. But I found that they missed an important point: only file extension with one period was taken into consider like , but how do I deal with these filename with two period like .The basic code is:But obviously, this code do not work with the file like .How to deal with it? Thanks.
The role of a file extension is to tell the viewer (and sometimes the computer) which application to use to handle the file.Taking your worst-case example in your comments (), this is a PowerPoint file that has been tar-balled and then gzipped. So you need to use a gzip-handling program to open it. Using PowerPoint or a tarball-handling program wouldn't work. OK, a clever program that knew how to handle both  and  files could understand both operations and work with a  file - but note that it would do that even if the extension was simply .The fact that both  and  add their extensions to the original filename, rather than replace them (as  does) is a convenience. But the base name of the gzip file is still .
Python 3.4You can now use  from pathlib. It has many features, one of them is :If you want to get more than one suffix, use :
Here is a in build module in . More about .If you have to fine the extension of , you have to write a function like thisResultEditGenerally you can use this functionIt will work for all extensions.Working on all files.
One possible way is:Slice at "." => Result is a list = Join them together => Result is your extension as string = Update: Example:
Simplest One:





Answer URL
https://docs.python.org/3/library/pathlib.html
https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.suffix
