Natural Text
In the first line of the code, we assign the value of x = False.I want to understand what does the line 'if x:' means. When x has a value of False, doesn't it imply that the line 'if x:' would be executed as 'if False:'. And hence, the statement 'x was True!' should be printed.But instead,'I will be printed in any case where x is not true' is printed. I think I am having some problems understanding how Booleans work. Where am I going wrong?
Python does't understand English. It has no idea what the stuff in quotes after  actually means. So if execution gets to the line  it just blindly prints out that text. But execution won't get to that line. InFirst,  is evaluated.If it has a Boolean value of  then  will be called.But if has a Boolean value of , then  will be called.Your code has,, where  is , so only the code in the  part gets executed.The expression following  can be any expression, it doesn't have to be an actual Boolean  or . In Python, "null" objects of various kinds are considered to be False when they appear in a Boolean context: this includes the number zero, the empty string , the empty list , the empty tuple , the empty dictionary , and the empty set ; I think you can see the pattern. :) Non-null objects are considered to be True. This is a handy feature that makes code more succinct, and more readable, once you are used to it.         
else block will execute only if the if condition is false. So in this code on giving False here it will jumps to else block. 
The syntax of an if...else statement is :If the Boolean expression evaluates to True, then the if block will be executed, otherwise, the else block will be executed.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#if
