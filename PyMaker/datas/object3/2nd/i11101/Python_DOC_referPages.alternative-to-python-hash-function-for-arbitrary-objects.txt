Natural Text
In python2.7, I'm successfully using  to place objects into buckets stored persistently on disk. A mockup code looks like this:In python3,  uses a random or fixed salt, which makes it unusable/suboptimal for this [1]. Apparently, it's not possible to use a fixed salt for specific invocations. So, I need an alternative:Must be stable across interpreter invocationsMay require parameters supplied at execution time, e.g. setting a salt in the callMust support arbitrary objects (anything supported by /)I've already tried using hash functions from hashlib (slow!) and checksums from zlib (apparently not ideal for hashing, but meh) which work fine with strings/bytes. However, they work only on bytes-like objects, whereas  works with almost everything.[1] Using  to identify buckets is either:Not reliable across interpreter invocations, if salts are randomPrevents applications from using the random salting feature, if salts are fixedUnusable if two s were created with different salts
I've had success using a combination of  and . The most straightforward implementation is this:With Python 3.4.3, this is a lot slower than calling plain , which takes roughly 0.07 usec. For a regular object,  takes ~1.0 usec instead. 0.8 usec for  and 0.7 for .Overhead is roughly as follows:0.1 usec for the function call ( vs )0.2 usec to 0.5 usec for selecting the hash function via 0.75 usec for  or  vs : ~0.160 usec vs ~Â 0.75 usec (adler and crc are +/- 4 usec)0.15 usec for  of  objects ()1.5 usec for  of  objectsThe most optimization comes from ordering of the  statements. If one mostly expects plain objects, the following is the fastest I could come up with:Total time: ~0.7 usec for  and , abysmal for , 0.35 usec for objects, ints, etc. Using a  to map type to hash comparable, if one uses an explicit check on the  keys (aka types) separately (i.e. not  but ).Some additional notes: is not stable across interpreter starts for any object using the default  implementation, including It does not work properly for immutable containers (which define ) containing a salted type, e.g. 


Answer URL
https://docs.python.org/3/library/hashlib.html
https://docs.python.org/3/library/zlib.html#zlib.adler32
