Natural Text
I have a lot of .mat files which contain the information about the radial part of some different wavefunctions and some other information about an atom. Now I successfully extracted the wavefunction part and using numpy.savetxt() to save it into .txt file. But the size of the file increases so much:After I ran Ignore the L=11 and L=12 difference, the size of the wavefunctions are almost the same, but the file size increased by more than 6 times. I want to know the reason why and probably a way to decrease the size of the .txt files. Here is the code how I covert the files:and the format of the data file needed is :If you need more information, feel free to ask! Thanks in advance.
 is a binary format whereas  writes a plain text file. The binary representation of a double precision number (IEEE 754 double precision) takes 8 bytes. By default, numpy saves this as plain text in the format  resulting in 24 bytes.There are number of additional effects which affect the resulting file size. E.g. structural overhead of the file format, compression, the format you use for writting the plain text (number of decimal digits). However in your case, i suspect that the main effect is just the difference between a binary and a plain text representation of the numbers.If you want to decrease the file size, you should use a different output format. Possible options are:write a zipped text file:Save as  again. See scipy.io.savemat()Write a proprietary binary numpy format (). See numpy.save()Write a proprietary binary compressed numpy format  (). See numpy.savez_compressed()If you have very large amounts of structured data, consider usering the HDF5 file format.If you need to write your own binary format use struct.pack() and write the resulting bytes to a file.Which option to choose depends on your situation: Who will have to read the data afterwards? How important is the compression factor? Is your data just one single array or is the structure more complex?


Answer URL
https://docs.python.org/3/library/struct.html#struct.pack
