Natural Text
Is there a way to import only a specific, predefined list of classes from a Python module? For example, say that I had modules  and  in the same directory with the following code:_Running  causes, of course, the  line to raise a . I didn't really think that this would work (the import statement in  gives me an  type instead of a  type), but I can't figure out the right syntax. Is there an alternative to  that gives the desired behavior?
Supposing you really do need to do this (deal with list of types) and can't use tricks like  that only work once (one such special list per module), then:Use it like this:I'm finding it difficult to imagine why you'd need this, but that's not my problem ;-)Note the use of  means this doesn't work for symbols in general, only for classes, modules, functions and anything else I've forgotten (or at a pinch for objects of your own design that have a ). It also won't work for things you've aliased in the module, for example by writing  in the module and then using  in the list. If the list was  instead of , and you also passed the source module into , then you could avoid those restrictions.
You could import the names directly:Alternately, you could define  in :and then do a wildcard import in :For just two names though, it would be easier to use the first solution.
You can define  at the module level of :This will allow you to import it in the following way:Of course, this behaviour isn't always encouraged, and the alternative is preferred:


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-import-statement
