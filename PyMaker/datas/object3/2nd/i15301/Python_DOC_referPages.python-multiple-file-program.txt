Natural Text
For larger programs in order to be more organized i have been looking into dividing my code up into different .py files and having a main file that calls upon those files when needed. I have looked around and seen lots of remarks about creating a directory and a SystemPath for python. Are those reasonable options for a program that could be distributed between a few computers? As a test i tried to assemble a example this is my main script currentlythere are some questions i have generally about this method:1: Is there a way to import all from different file or do i need to   specify each individual class?                                                                        If i just had a function, is it possible to import it just as a function or can you only import via a class?3.Why is it when i call upon a class in general i have to make a variable for it as in the example below?Thank you for your time and thought towards my question.
Yes.You can import instance of  from other script to main script like this:2.If you have a function called  in grades.py, you can import it in this way:3.This variable stands for the instance of class student. You need this instance to invoke the function inside.
Generally, to divide the source code of a program, Python use module to do that, which corresponds to a *.py file. Then for your 3 questions:You can import a whole "module content" (function, class, global variables, ...) through for a function, if it is a function in a class(member method, class method or static method) you can not only import the function, you should import class to use the method; if it is a function under module, you can separately import the function through import update is a member function of the student class, so you should use it through an instance. if it is a class method or static method, you can use it through the class name you wrote.
1: Is there a way to import all from different file or do i need to  specify each individual class?You can use the "wildcard import", but you probably shouldn't. SeeShould wildcard import be avoided?If i just had a function, is it possible to import it just as a  function or can you only import via a class?Functions can be totally independent of classes in Python.3.Why is it when i call upon a class in general i have to make a variable for it as in the example below?You should read up on object-oriented programming. In the basic cases, you have to instantiate instances of a class in order to use that class's functionality. In your example, the class student describes what it means to be a student, and the statements = student()creates a student and names it "s".I think this should be clear after reading a bit about object-oriented programming.
First, you can use  to import everything like:hello.py:main.py:But it's not a good way, if you have two files, two functions have the same name, so use is better, it an example for function ,as same as class.Third before Second,  student is a class, so you have to use an instance object to use the function which with self parameter. If you want to use student.function, the function must be a static method like this:Second, you can import the function in a class file which is independent of the class.
Is there a way to import all from different file or do i need to specify each individual class?the answer is yes , as python  statement use  (A list of strings that specifies the search path for modules ) you need to add the patht of your modules in  , for example if you want to interact between different computers you can put your modules in  folder and add the path of folder to  : If i just had a function, is it possible to import it just as a function or can you only import via a class?you just need to use .Why is it when i call upon a class in general i have to make a variable for it as in the example below?for this question you just need to read the python  documentation :Class objects support two kinds of operations: attribute references and instantiation. 


Answer URL
https://docs.python.org/3/library/sys.html#sys.path
