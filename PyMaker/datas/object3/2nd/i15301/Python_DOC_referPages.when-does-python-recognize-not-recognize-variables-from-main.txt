Natural Text
When (if at all) do functions recognize variables that have been initialized in the  function?E.g.: When I write the following Python code:I get the following error: However, when I do something similar, but with a :The output is : What's the difference between the two cases?
 operator is considered as an assignment when used with simple variables. So, Python while parsing the function body will add  in , and due to this during runtime Python will never look for that variable in any other scope unless you had  or  declaration(Python 3 only) at the top of the function. Note that it doesn't matter if you used  before using it with (see the last example), the variable is now local everywhere in the function body. On the other hand,  is variable look-up followed by a (same thing for  as well; you can do  but not ; where  is a list) and as there are no assignment statements related to  after that Python considers it as a either a global variable() or a free variable() and fetches its value from there.


Answer URL
https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value
