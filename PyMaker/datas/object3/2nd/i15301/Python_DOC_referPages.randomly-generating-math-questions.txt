Natural Text
My task is to produce a code that greets the user and asks their name  storing their name as . Then generates 2 random numbers and an operation. The question is asked to the user. After that it checks if the users answer is correct or not also adding  to . If it is correct,  is added to . If it is incorrect, the user is told so with the correct answer. The program should end after 10 questions (hence the ). The user should be given their  and how many questions they got correct.My problem is when I run the code,it comes up with . I'm struggling to work out how else I could define .Here is what I've done so far:
You have a test  but don't use that name anywhere else in your code. You certainly never defined it. You probably wanted to test  (with an )  instead.There are other problems, however. The loop should continue while you have fewer than 11 questions asked, not more. You also call  twice, you should only call it once each loop. In your loop you use  but never defined that either and don't increment ; you probably meant to increment the latter:Now  is only called the once. Both your branches incremented , I moved that out of the tests, and now you no longer need to check if the test failed.Since you start counting at zero, you want to test for , not .Instead of a  loop, you could use a  loop using the  function:Now the  loop takes care of counting the number of questions asked, and you no longer need to increment a variable manually.Next, you need to move the  handling out of the  function. You don't need to ask the user for their name each time. Ask for the name once, before the loop, so that you can access the user's name after the 10 questions:You need to be careful about your names in the  function too; you define the names  and  but try to use them as  and  instead. That won't work, you need to use the same case everywhere to refer to those names. The Python style guide recommends you use all lowercase with underscores for local names, to distinguish them from class names (which use CamelCase, initial uppercase letters and no spaces between words).Next problem: you are using  with two arguments here:That won't work; a two-argument  call is meant for decoding bytes to a Unicode string.Rather than use string concatenation, just pass your values to  as separate arguments. The function will take care of converting things to strings and adds spaces between separate arguments for you:Now there will be a space between  and the  but that is not that big a problem. You can use the  method to create a string with placeholders where arguments to the method are filled in for you, again converting to strings automatically. This allows you to control spaces more directly:The three arguments are placed where each  appears, in order.
You have many discrepancies in variable names and indentation. Remember Python is case sensitive. And by the way, the condition in your while loop will cause your program not to ask any questions.So for example, you created a list of operations called  and then used the random module to select an operation from . Python will inevitably throw an error, as  is not actually defined. Instead, you should use  because that is the variable you actually declared, with a capital letter. Again, Python is case sensitive. Likewise, Python recognizes a difference between  and . It's one or the other, so choose a name and be consistent.  


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format
