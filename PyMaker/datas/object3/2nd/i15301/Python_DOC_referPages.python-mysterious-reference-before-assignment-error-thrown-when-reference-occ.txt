Natural Text
file1.py:Instantiating  results in "," but if I change init to:then I get no errors.
If  (or any other form of assignment, like ) appears anywhere in the body of a function, then  becomes a local for the entire function.  You can't have a variable be partly global and partly local.So you have a local named , and you're trying to assign .  The first thing Python needs to do is figure out the value of that  on the right-hand side...  but  is a local that hasn't been assigned to yet.  Hence the error.Just use a different variable name.  If you really really want to change the outer  (which smells fishy in a constructor!), you have to declare your intention with .Also, you don't need semicolons at the end of lines in Python.  And if this is Python 2, your class should inherit from  (as in ), else you'll get an "old-style" class which has different behavior and doesn't exist in later versions of Python.
You need to use a global statement to pull the module-level global a variable into your scope:You don't need the semicolons.Better is to use a default argument, something like this, to avoid changing things on the global level.:Another superior approach would be to use different names on the global and local level. I would rename the global variable, and keep the local variable the same. We tend to capitalize (all caps) global constants (and capitalize class names, and inherit from object), so that might look like this:


Answer URL
https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value
