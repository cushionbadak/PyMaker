Natural Text
I have the following script:a.pyand the following module:b.pyLaunching them with  I get:so I don't understand. Why in the script  is assigned to the builtins module instead in the module  is assigned to a dict?
Don't use ; use the  module instead.The  object is an implementation detail you should not rely on. From the  module documentation:As an implementation detail, most modules have the name  made available as part of their globals. The value of  is normally either this module or the value of this moduleâ€™s  attribute. Since this is an implementation detail, it may not be used by alternate implementations of Python.Note my emphasis there; you can either have a dictionary or the module object when you access .
Honestly? I can't imagine what they were thinking when they made  mean different things in a script and in a module. I was using  to access built-in  from a library that defines its own  as a public API and it worked for me until today.I do not know the exact difference. My  was working in a module for both Python 2.x and Python 3.x. Now with some upstream changes in the code the same construct fails exactly like in your case. I found your question using web search and I'm going to answer for others who might get into the same situations.You cannot use  due to the above problem and you cannot use  in Python 2.x, but I managed to fix that using the six python module.This works for me both in Python 2.x and in Python 3.x and it works in the exact same place where  fails. Hope that helps.


Answer URL
https://docs.python.org/3/library/builtins.html
