Natural Text
The Python audioop documentation states that most of the available functions require "sound fragments."The audioop module contains some useful operations on sound fragments. It operates on sound fragments consisting of signed integer samples 8, 16 or 32 bits wide, stored in Python strings.What exactly is a sound fragment and how can I turn an existing .wav file into one?Thanks.
You can do so by using the wave moduleThe  method opens the file and  returns (maximum) n frames of audio as a string of bytes, just what audioop wants.For example, let's say you need to use the  method from audioop. This is how you could do it:Outputs:Also, you may be interested in the  method from the wave module. It puts the reading position back to the beginning of the wav file.If you need to read through your wav file twice you can write this:Or alternatively you can cache the string:
You may want to look into the  module. You probably want to open a file in read mode and use  to get the sample you need for 
To answer what exactly a fragment is, it's a bytes object, which is just a string of bytes. I believe that for 8-bit audio files, there would be one byte for each frame for 8-bit audio, two bytes per frame for 16-bit audio, and four bytes for 32-bit audio.


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes
