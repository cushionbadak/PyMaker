Natural Text
I've never seen anything else work like this before. Is there anything else that does this?
Getattr Uses Descriptor LogicThe main difference is that the dictionary lookup does no extra processing while the attribute fetch incorporates extra logic (see my Descriptor How-To Guide for all the details).There Are Two Different Underlying Methods1) The call  uses the square brackets operator which dispatches to  which does a simple hash table lookup or raises KeyError if not found.2) The call  uses the dot operator which dispatches to  which does a simple lookup followed by a special case for descriptors.  If the lookup fails, an AttributeError is raised.How It WorksThe overall logic is documented here and here.In general, a descriptor is an object attribute with “binding  behavior”, one whose attribute access has been overridden by methods  in the descriptor protocol: __get__(), __set__(), and/or __delete__(). If  any of those methods are defined for an object, it is said to be a  descriptor.The default behavior for attribute access is to get, set, or delete  the attribute from an object’s dictionary. For instance, a.x has a  lookup chain starting with a.__dict__['x'], then  type(a).__dict__['x'], and continuing through the base classes of  type(a) excluding metaclasses.However, if the looked-up value is an object defining one of the  descriptor methods, then Python may override the default behavior and  invoke the descriptor method instead. Where this occurs in the  precedence chain depends on which descriptor methods were defined and  how they were calledHope you've found all of this to be helpful.  The kind of exploring you're doing is a great way to learn about Python :-)P.S.  You might also enjoy reading the original Whatsnew in Python 2.2 entry for descriptors or looking at PEP 252 where Guido van Rossum originally proposed the idea.
andreturn the same object in this case. You can quickly check it by doing:Both of them points to the same descriptor objecton the other hand:Basically, they aren't they are not the same object nand the same type:
So the answer is that  will automagically invoke an object's  method if it has one, whereas  and the objects  lookup do not. The following function proves that:However,  doesn't work currently because it's not detecting that the  default value is , but this is enough.


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/glossary.html#term-descriptor
https://docs.python.org/3/reference/datamodel.html?highlight=descriptor#implementing-descriptors
https://docs.python.org/3/reference/datamodel.html?highlight=descriptor#invoking-descriptors
https://docs.python.org/3/whatsnew/2.2.html#descriptors
https://docs.python.org/3/howto/descriptor.html
