Natural Text
This is an unusual situation - most Django users want Django's test runner to find all of their tests.I'm working on a python library with several test suites that are run with different configurations, so I don't want the discovery to find and run tests from the wrong configuration.  How do I disable discovery entirely and rely on the pre-1.6 behavior of only running the tests for apps explicitly declared in INSTALLED_APPS?My library structure:The problem is that this command, which should only run tests for the 'contrib' test suite, is also finding and running tests for 'core':
It's missing from the Django docs, but the command-line has an option, found via :Confusingly, specifying the module to test doesn't appear to prevent test discovery, but specifying a sub-directory does, like this:That appears to prevent the discovery of tests located outside of .
Hmm I'm unfortunately not aware of a settings parameter that might let you tell unittest to only run from individual apps (a-la "settings.TEST_DIRECTORIES=settings.INSTALLED_APPS") but if you're able to give your tests a unique naming convention, you could use the --pattern= option when running the test suite.For example, if you haveYou could only run a with  and then run b with Definitely not ideal, but might get the job done depending on how much flexibility you have with the test naming conventions in your own app.


Answer URL
https://docs.python.org/3/library/unittest.html#skipping-tests-and-expected-failures
