Natural Text
Currently, I am statically specifying a filepath for the source data for a script using the snippet below:The reason that I am statically assigning the location is that the script is failing to execute correctly when it is executed in a debugging environment such as Eclipse & Visual Studio Code. These debuggers assume that the script is being ran from their working directories.Since I'm unable to modify the local settings of every system that might be running this script, is there a recommended module to force the script to harvest either the active user (linux and windows) and/or the script's local directory pragmatically? 
The new-ish  module (available in Python >= 3.4) is great for working with path-like objects (both Windows and for other OSes). Use it. Don't bother with the outdated  module. And don't bother trying to use naked strings for representing path-like objects. It's Paths - Paths all the way downTo simplify: you can build up any path (directory and file path objects are treated exactly the same) as an object, which can be an absolute path object or a relative path object. Simple displaying of some useful paths- such as the current working directory and the user home- works like this: To navigate down the file tree, you can do things like this. Note that the first object, , is a  and the rest are just strings: To read a file located at a path, you can use its  method rather than the  function: But you can also just grab the text directly! ...and WRITE text directly!Check to see if it is a file or a directory (and exists) this way: Make a new, empty file without opening it like this (silently replaces any existing file): To make the file only if it doesn't exist, use :Make a new directory (under the current directory, ) like this: Get the file extension or filename of a path this way:Use  for the entire last part of the path (stem and extension if they are there):Rename a file using the  method (which returns the same path object but with a new filename):You can iterate through all the "stuff' in a directory like so using : 


Answer URL
https://docs.python.org/3/library/pathlib.html
