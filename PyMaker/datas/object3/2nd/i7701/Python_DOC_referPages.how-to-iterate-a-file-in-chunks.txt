Natural Text
I have a file (foo.txt) that is sorted like so (column 0 is grouped):How can I iterate the file in chunks of ?  I know that generators can do this but I'm not entirely sure how.  Essentially, I would like to do this:Expected output:
So, you actually want the functionality provided by . This will work if your first-column is sorted:If you want to clean up that output a bit, you can map  onto your group:If you wanted to implement this from scratch, an inflexible and naive generator could look something like this:Warning the above generator only works if each line has the first column in exactly the first position, and it is only 1 character long. This was not meant to be very useful, only to illustrate the idea. If you wanted to roll your own, you would have to be much more thorough 
this is a variant (the   here is just your  in the  statement):this iterates over the file and does not need to have the whole file in memory. therefore only the neighboring lines will be grouped.(you seem to be using python2:  is not a good variable name then - because it's a built-in)
This is what  is for, though I think you'll need to read the whole file into memory to do that.However I'm honestly not sure if  consumes all the data at once. If it's a lazy iterator you could pass  directly.If you can't or don't want to read the file into memory all at once, you'll have to do something special.In this case, you'll have to pass the key function to select the first space-separated column of each row: e.g. 
This is built upon the accepted answer, and will group by any specified column:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
