Natural Text
attrs is a useful package for reducing boilerplate. Example:PyCharm does not offer code completion for the generated  method, is there a plugin that can do this? Or some other work around?
Update Aug 2018 - As per Hynek's Answer, attrs support is in PyCharm 2018.2. I'm a month late to the party as I haven't been working in Python much lately...My original answer is as follows, although it only applies if you are on PyCharm 2018.1 or lower...The only workaround I'm aware of (as of PyCharm 2017.2.4) is to define a redundant  in the class declaration. PyCharm's code completion picks up this method ok, but at runtime the attrs-generated  will override it. For example (with type hints):PyCharm code completion screen shotI also tried using a stub file to remove the dummy  out of the class declaration, with a view to deleting the .pyi if this is ever supported, but it didn't work. Of course, this kind of defeats the purpose of using attrs in the first place (i.e. reducing class declaration boilerplate, aiding maintainability etc.)If you add, remove or amend an attr.ib(), you'll need to remember to manually update the  signature which is antithetical to attrs' philosophy.FYI, Jonas Obrist tweeted one of the Jetbrains Devs about attrs support earlier in the year regarding the 2017.3 release, so fingers crossed...EDITActually, there is a slightly more palatable workaround. Just pass  to  and define your  method as you normally would. You're still not leveraging the full magic of attrs, but hey... it's better than nothing.Take care to intialize your default values in your manual  rather than the attr.ib declaration against the class. As per the docs, the attr.ib's default value will only be initialised inside an attrs-generated .Aside from that, you still get your other dunder methods, validation, and all the other goodness as far as I can tell.
Good news: PyCharm 2018.2 has added support for attrs.
There have been some interesting developments lately (early '18) on this front:an attrs PR to add PEP 484 stubs, which are recognized by PyCharm (but does not add support for , and  special methods)a python typeshed PR to add those stubs to the official third-party collectiona mypy PR to add support for attrs special methodsa ticket for adding this feature to PyCharm (mentioned above) is getting a lot of votes (add yours!)PyCharm 2018.1 EAP2 added support for dataclasses, which is a new module coming in the python 3.7 standard library that is heavily inspired by Expect a number of these issues to be resolved in the next few months. Hopefully all of them!


Answer URL
https://docs.python.org/3/library/typing.html
