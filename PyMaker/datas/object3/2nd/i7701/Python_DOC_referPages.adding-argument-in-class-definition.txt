Natural Text
I ran across this design pattern in Python wondering if someone can explain as I've never seen it beforeNot sure what's happening here. Could this work if Parent has metaclass definition in which it changes the class constructor to allow for passing an argument through? Any help is appreciated and sorry for the vagueness
Extra named arguments in the class definition are passed into the class constructor methods - i.e., the metaclass :So, a custom metaclass might make use of that, even before Python 3.6. But n Python 3.6, the  addition makes it much simpler and therefore useful, to have such arguments - as no custom metaclass is needed. Note that the  method in a custom class hierarchy is responsible to ultimately call  - which do not take any named arguments. So, if you are creating a class hierarchy that makes use of , each such method should "consume" its specific arguments by removing them from  before calling  . The  and  methods from  itself (the default metaclass) simply ignore any named args.  
This works in Python 3.6 using  on the parent.Output:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__init_subclass__
https://docs.python.org/3/reference/datamodel.html#customizing-class-creation
