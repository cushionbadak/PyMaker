Natural Text
In Python in the  module there is the following function:re.sub(pattern, repl, string, count=0, flags=0) – Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl. If the pattern isn’t found, string is returned unchanged.I've found it can work like this:I was wondering, is there an easy way to use regular expressions in the replacement string, so that the replacement string contains part of the original regular expression/original string? Specifically, can I do something like this (which doesn't work)?I want that to print . Obviously, it does not. Rather, it prints . Is there an easy way to use parts of the matching regular expression in the replacement string?By the way, this is NOT a special case. Please do NOT assume that the number will always come at the end, the words will always come in the beginning, etc. I want to know a solution to all regexes in general. Thanks
Place  in a capture group  and then use  to refer to it:From the docs:Backreferences, such as , are replaced with the substring matched  by group  in the pattern.Note that you will also need to use a raw-string so that  is not treated as an escape sequence.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
