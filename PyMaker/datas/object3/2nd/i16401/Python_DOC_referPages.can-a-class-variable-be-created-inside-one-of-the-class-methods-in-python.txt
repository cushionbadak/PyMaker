Natural Text
Touching on the following question posted on SO, Python - why use "self" in a class?, I was wondering: If I created a variable inside a method of a given class without using the "self.", will it be a class variable? And if this is not the case, why not? So for instance if I have a class like so:Will x be a class variable?
Actually no. Because of x is not class variable - it is local variable of method .Class variable should be defined exactly in the class body:BTW: even if you had defined classvariable correct, you would anyway got output:because of in  you're assigning , so each time this function is run value of  is reset to  :)
Whenever you assign a variable in a Python function, it's created in the innermost local namespace by default. You aren't referring to a variable in a different namespace (like the  class) unless you explicitly declare it. So in your code, you're creating  in a local namespace, which is specific to that function - not even specific to that instance of , since you didn't declare it as . I believe that is why you get  instead of .
No, your assumption is wrong. It is a local variable.


Answer URL
https://docs.python.org/3/tutorial/
