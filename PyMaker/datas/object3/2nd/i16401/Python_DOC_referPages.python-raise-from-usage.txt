Natural Text
What's the difference between  and  in Python?which yieldsandwhich yields
The difference is that when you use , the  attribute is set and the message states that the exception was directly caused by. If you omit the  then no  is set, but the  attribute may be set as well, and the traceback then shows the context as during handling something else happened.Setting the  happens if you used  in an exception handler; if you used  anywhere else no  is set either.If a  is set, a  flag is also set on the exception; when  is set to , the  is ignored when printing a traceback.When raising from a exception handler where you don't want to show the context (don't want a during handling another exception happened message), then use  to set  to .In other words, Python sets a context on exceptions so you can introspect where an exception was raised, letting you see if another exception was replaced by it. You can also add a cause to an exception, making the traceback explicit about the other exception (use different wording), and the context is ignored (but can still be introspected when debugging). Using  lets you suppress the context being printed.See the  statement documenation:The  clause is used for exception chaining: if given, the second expression must be another exception class or instance, which will then be attached to the raised exception as the  attribute (which is writable). If the raised exception is not handled, both exceptions will be printed:A similar mechanism works implicitly if an exception is raised inside an exception handler: > the previous exception is then attached as the new exceptionâ€™s  attribute:Also see the Built-in Exceptions documentation for details on the context and cause information attached to exceptions.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#raise
https://docs.python.org/3/library/exceptions.html#built-in-exceptions
