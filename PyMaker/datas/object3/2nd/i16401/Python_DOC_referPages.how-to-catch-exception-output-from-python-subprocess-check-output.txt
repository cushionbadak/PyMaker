Natural Text
I'm trying to do a Bitcoin payment from within Python. In bash I would normally do this:so for example:if it is successfull I get a transaction id as output but if I try to transfer an amount larger than my bitcoin balance, I get the following output:In my Python program I now try to do the payment as follows:If there's enough balance it works fine, but if there's not enough balance  prints out this:It doesn't include the error which I get on the command line though. So my question is; how can I get the outputted  error () from within Python?All tips are welcome!
According to the  docs, the exception raised on error has an  attribute that you can use to access the error details:You should then be able to analyse this string and parse the error details with the  module:
I don't think the accepted solution handles the case where the error text is reported on stderr. From my testing the exception's output attribute did not contain the results from stderr and the docs warn against using stderr=PIPE in check_output().  Instead, I would suggest one small improvement to J.F Sebastian's solution by adding stderr support.  We are, after all, trying to handle errors and stderr is where they are often reported.  
Trying to "transfer an amount larger than my bitcoin balance" is not an unexpected error. You could use  directly instead of  to avoid raising an exception unnecessarily:
There are good answers here, but in these answers, there has not been an answer that comes up with the text from the stack-trace output, which is the default behavior of an exception.If you wish to use that formatted traceback information, you might wish to:As you might be able to tell, the above is useful in case you have a password in the check_call( args ) that you wish to prevent from displaying.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.check_output
