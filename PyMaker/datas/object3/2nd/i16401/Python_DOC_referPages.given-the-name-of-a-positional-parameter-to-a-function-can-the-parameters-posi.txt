Natural Text
I'm working on a toy Python typechecker, using the function annotation feature in Python 3 to define types for function parameters and return values, and I seem to have run into a problem in checking whether one function type is a subtype of another. Take these two functions:I want to have my code determine that the type of  is a subtype of the type of  (since the type of each of 's parameters is a subtype of the type of the parameter at the same index in 's parameter list, and the return type of  is a subtype of the return type of ). However, the  field is a dictionary:which means it doesn't provide me with the information about parameter ordering that I think I need. Is there a reliable way to determine that  is the first parameter to , just from inspecting runtime properties of ?
Yes, Python functions do carry that information.Easiest would be to use the  function to extract this information, or from Python 3.3 onwards, using the  objects.The  return value has a  attribute listing the arguments in order:Annotations are included too:Signature objects are richer still:where  uses an ordered dictionary, letting you compare parameters in the correct order.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.formatargspec
https://docs.python.org/3/library/inspect.html#inspect-signature-object
