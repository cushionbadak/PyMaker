Natural Text
So I have a condition I want to happen only when all items in a list evaluate to true. An example of this might be something like a list of functions which return a boolean (not actually my situation but easier to explain):I know I can definitely do this:But, I was wondering if this is poor form:Alternatively, I could try to select all false elements during list comprehension and check whether the list is occupied (this works because bool(arr) where arr is a list returns False if and only if arr is empty):I feel like the "min" is a lot cleaner than the last method, and while the first one is easiest to understand for novices it should be pretty clear what's going on. I could alternately make it clearer through aliasing:I'm sure I missed other ways to do this as well. I'm wondering what method would be most desirable.Thanks for the help!
Using  is not "bad", but it is unclear what you are trying to do and will do unnecessary work. You should use all instead.This will return  if all values are , and  otherwise.  It has the added benefit of quitting early if any value is , unlike  which must run through the entire sequence at least once.If you find that you need to evaluate if the are all , I recommend any (well, , specifically) which has a similar "quit as soon as possible" behavior.
You're probably looking for all built-in function:


Answer URL
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/functions.html#any
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/functions.html#built-in-functions
