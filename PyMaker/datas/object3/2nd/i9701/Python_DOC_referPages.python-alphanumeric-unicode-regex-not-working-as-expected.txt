Natural Text
Trying to write a python regex that will validate a string comprised ofAny unicode alphanumeric character (including combining characters)Any number of space charactersAny number of underscoresAny number of dashesAny number of periodsMy test strings:or as string literals produced with :These look identical but aren't, one is normalized and the other uses the combining characters for the inflections.Here's my first stab:If I remove the positional qualifiers and use  instead of  I get lists like this  or .I've even tried  although that should be unnecessary in python 3 right?In searching for an answer I've found this question and this one and this one and this one but they are all old, deal with python 2, and seem to suggest that the regex I wrote should work. The python 3.5 regex docs mention that  should match unicode but offer no actual examples involving non-ASCII text.How do I match the desired strings?
Your first sample, , matches just fine;  includes all Unicode word characters, including Latin characters with accents.You can normalise your strings to the combined form with , use the  form:Note that the  flag is not needed,  doesn't care about case.


Answer URL
https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize
