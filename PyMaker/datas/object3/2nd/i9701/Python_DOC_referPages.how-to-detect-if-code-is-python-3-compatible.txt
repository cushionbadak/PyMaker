Natural Text
I'm doing static code analysis using openstack/bandit. Do have a lot of repositories, some of those are in python 2 other in python 3. How can I detect if code is syntactically compatible with python 3 without running the code.
Here's one thing you might want to do. I think it's the easiest way you can know if code is compatible at least syntaxically.Have a python3 program load the python modules (without executing them). If the code is compatible, it will load the module, if it isn't... it will raise a syntax error.Use the  module.If the code can't be loaded it will raise a  error.Documentation of the Ast ModuleIf the abstract syntax tree can't be loaded, then you may have to check for python2 methods that don't exists in python3 or methods that changed their behaviour. For example the division in python3 and python2 works differently. In python2, the division divide in integers so the result of a division will be different if you don't use the same division scheme. In that case, you'll have to look if the module is importing  to have the same behaviour in python2 and python3.Here's an exhaustive list of things that you might want to handle:http://python-future.org/compatible_idioms.htmlLoading the ast of the module will give you right away things that absolutely can't work.. but knowing if code that can be parsed will work in python3 is subject to many false positive. It's hard even impossible to accurately detect if code will actually work 100% in python2 and 3 without actually running it and comparing the results.
Basic validation would be if the 2to3 tool prints any diffs (s. https://docs.python.org/3/library/2to3.html for basic usage)on a simple file like a.py:you'd get:
You can use Pycharm IDE for this. Just open the python files in the pycharm editor, it will show warnings if the code is not compatible to Python2 or Python3.Here is the screenshot where it shows print command syntax warning.
You can use the "compileall" module like so:Modify appropriately for the python version you want to use.Python3 (since 3.something) puts compiled modules into a  directory, with a arch-specific extension, so they won't conflict with Python2 or other Python3 versions.The given command will just show errors, and will recurse from the current directory. Use  to reveal ALL the OPTIONS.


Answer URL
https://docs.python.org/3/library/2to3.html
