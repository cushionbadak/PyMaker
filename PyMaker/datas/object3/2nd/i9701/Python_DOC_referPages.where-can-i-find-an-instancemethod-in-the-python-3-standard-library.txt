Natural Text
I'm trying to test for and fix a bug in pprint++ (edit: the correct link; original link left for posterity) which is coming up because the  type is not hashable:But I'm having trouble testing for this issue because I don't know where else I can find an  in the Python 3 standard library, and I don't want my tests to depend on Pandas.Specifically, it seems like the "normal" builtin types have "instance methods" that are implemented slightly differently:So: where can I find an  in the Python 3 standard library so I can write tests against it? Or is it a special type that doesn't appear there?(note: this only appears to affect Python 3, as the same method in Python 2 is an , which is hashable)
This type isn't used in anything that comes with Python, and there's no Python-level API to create objects of this type. However, you can do it with a direct C API call:The name  looks a lot like a bound method object, but it turns out it's something else entirely. It's a weird internal thing that, according to its documentation, is supposed to be the new way for C types to represent their methods, except that the standard C-level API for creating a type doesn't actually use it.According to conversations on the Python issue tracker, this feature was requested by the developers of Cython and Pyrex. It looks like  is implemented in Cython, and the Cython implementation actually uses this type, where the standard C API for creating types doesn't.Note that the situation is completely different on Python 2. On Python 2, this new type didn't exist, and  was the name of the type of method objects representing ordinary methods written in Python. In Python 3, the new type took that name, and the type of method objects for methods written in Python is now named .
Python provides it, but basically only as part of their test suite AFAICT (no included batteries use it otherwise). You can make one for testing using the  module:


Answer URL
https://docs.python.org/3/c-api/method.html#instance-method-objects
