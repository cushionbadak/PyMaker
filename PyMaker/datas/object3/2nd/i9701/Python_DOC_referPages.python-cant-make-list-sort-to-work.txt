Natural Text
Here lines has 4 int in every row. From what I understood from python wiki is that I need to pass a compare function as argument in the sort() function. But I get the following error,I tried with sorted() but couldn't make it work either.Python and anaconda versionPython 3.5.2 |Anaconda 4.2.0 (64-bit)| (default, Jul  5 2016,  11:41:13) [MSC v.1900 64 bit (AMD64)] on win32I'm running the code in jupyter notebook.My implementation I think is same as the following question but mine doesn't work.Custom Python list sortingAfter following Martijn's answer I modified my code to thisGives me the following error
You are making several mistakes. You didn't read the documentation close enough; the  function option is gone in Python 3. You also implemented your  function incorrectly, and last but not least, you don't need to use a  function at all, you can use a  function to extract the minimum of the two exact values in the lists you are sorting.You need to pay close attention to the section you appear to be reading, The Old Way Using the cmp Parameter:In Py3.0, the  parameter was removed entirely (as part of a larger effort to simplify and unify the language, eliminating the conflict between rich comparisons and the  methods). The error message is a little confusing here, but  takes no positional arguments. From the  documentation:The  indicates no positional arguments are accepted, and there is no  option.Going back to the Sorting Howto:When porting code from Python 2.x to 3.x, the situation can arise when you have the user supplying a comparison function and you need to convert that to a key function. The following wrapper makes that easy to do: [...]In Python 2.7, the  tool was added to the  module. and again from the  documentation:The  utility is available to convert a 2.x style  function to a key function.You also incorrectly implemented your  function; there is no need to iterate, and you have to return ,  or  to indicate relative order (so you would have to use  if there still was a built-in  function).However, you can sort your data without a (slow)  function. All you need to do is to extract the  of the two values of each list, in a sort key:
According to the documentation:sort() accepts two arguments that can only be passed by keyword (keyword-only arguments): key and reverse.The cmp parameter only exists in Python 2, it is generally considered as a deprecated usage.


Answer URL
https://docs.python.org/3/library/stdtypes.html#list.sort
https://docs.python.org/3/library/stdtypes.html#list.sort
https://docs.python.org/3/library/functools.html#functools.cmp_to_key
https://docs.python.org/3/library/stdtypes.html#list.sort
