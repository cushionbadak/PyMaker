Natural Text
for some weird reason my Python interpreter executes the file ./xml.py if an exception occurs. I have absolutely no idea why this happens - and I definitly do not want this to happen.I've set up a new directory with a single file, named xml.py, containing just the line 'print("Hello xml.py")'. After starting python3 I enter "a" at the interpreter's prompt. This should show me a simple NameError since a is of course not defined, but instead prints "Hello xml.py" (i.e. executes ./xml.py) and a bunch of other errors, and only then dumps the NameError to the screen:After deleting xml.py, everything's back to normal:Simple and short question: What the hell is happening here?
These bits are the clues:… is part of Ubuntu, and, for better or worse, seems to try to trap all Python exceptions (using ) and handle them. When doing that, it tries to import the  package (part of the Python standard library). Because you’ve aliased that package with a local file, it imports that file instead, doesn’t find the package it expects, and throws another exception.You could rename your  to something that doesn’t alias a package from the standard library, or put this line early in your program’s execution to disable ’s exception hook:
 is a program that ships with Ubuntu. The main purpose of this program is to detect program crashes and report them. Whenever an exception occurs, Apport tries to handle it using an exception hook. There's a bug report on this topic here: https://bugs.launchpad.net/ubuntu/+source/apport/+bug/109955 Now this is happening:  when you try to type in  in the console, this execption occurs: Apport had an exception hook set which is invoked on this exception. Apport goes ahead and tries to report it. During this process, it tries to import a package named  from the standard library. However you named your file  so it shadows the  package from the standard library. So the import fails: Please note,  is a package in the standard library (it has an  for example). However, you created a module ( file). So it can not import  from it. It works fine after you remove  because then there is no longer a module in the working directory that shadows the one in the standard directory. Disabling Apport: If the apport exception handling annoys you, you can disable it following this thread: https://askubuntu.com/questions/93457/how-do-i-enable-or-disable-apport - however, this would disable error reporting in general which I don't recommend. 


Answer URL
https://docs.python.org/3/library/sys.html#sys.excepthook
https://docs.python.org/3/library/xml.html
