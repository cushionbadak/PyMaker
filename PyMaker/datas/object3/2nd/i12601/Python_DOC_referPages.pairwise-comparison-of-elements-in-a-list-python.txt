Natural Text
Given a list below:I want to do a pairwise comparison of the second element in each sublist of the list, i.e. compare to see  from  is equal to  from  and so forth, if so, print the output as indicated in the code.Using for loop, I achieve the result:When doing pairwise comparisons of the elements of a loop using list index, I always get into the error of  because of the last element. I solve this problem by adding a condition I don't think this is the best way of doing this. I was wondering if there are more elaborate ways of doing pairwise comparisons of list elements in python?EDIT: I had not thought about the level of tolerance when comparing floats. I would consider two floats with  difference as being equal.
You can  the  with the same list excluding the first element, and do the comparison, like thisSince you are comparing floating point numbers, I would recommend using  function from Python 3.5, like thisAs you want to have 0.001 tolerance, you can do the comparison like this
I suggest that you use  for this to create a generator of item-neighbor pairs. Leaving the problem of comparing floating points aside, the code would look like this:Remember to specify a tolerance when comparing floats, do not compare them with == !You could define an  function for this, for example:Then in the code above, use  instead of the comparison with ==.


Answer URL
https://docs.python.org/3/library/math.html#math.isclose
