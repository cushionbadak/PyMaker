Natural Text
Basically I have a program where a name will be input, and three numbers calculated, and put into a list like this:Each time that the code has been run, it will write this list into a text file. After multiple runs of the program, the text file looks like this:What I need to do is read each line of the text file and find the highest number out of each line, and print them out with the name attached like so, highest to lowest:I figured that I would have to use something like 'for line in lines' , and 'if num1>num2 and num1>num3: line=[name,num1]However I realised that I couldn't take the variables back out of line. I have spent a long time researching and trying to find a way to do it, but I haven't been successful at all. Does anyone know how to do this, so python will print out the contents of the file arranged by highest number to lowest number, like so:
You can first get rid of first and last character ('[' and ']'), split line by comma, convert first, second and third element to integer, then search maximum value from this. Something like:
You can parse the file like user3599110 correctly suggests, and then you still have to sort your results. To do that, before printing anything, you store the various (name,maxNum) tuples in a list, and then perform a list sort based on maxNum. The code looks something like:
Don't hand-parse this. These are Python  literals, at least in your example, and Python can parse them correctly, safely, and easily with :No complex hand-rolled parsers, you let Python do all the heavy lifting (and it will run faster for it).  is similar to regular , but only parses code consisting purely of Python literals; it can't execute arbitrary code, removing the major security/stability risks of using .


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
