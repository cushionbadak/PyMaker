Natural Text
So I started with Strings & Lists (Basics mostly) and noticed this little thing:Works like a charm.When I try the same thing (different operation) on a LIST. Things go south: Output - NONEHowever:Gives the required output.Why is it so?
From Python Docs:sort(*, key=None, reverse=None) This method sorts the list in place,  using only < comparisons between items. Exceptions are not suppressed  - if any comparison operations fail, the entire sort operation will fail (and the list will likely be left in a partially modified state).sort() accepts two arguments that can only be passed by keyword  (keyword-only arguments):  ...  This method modifies the sequence in place for economy of space when  sorting a large sequence. To remind users that it operates by side  effect, it does not return the sorted sequence (use sorted() to  explicitly request a new sorted list instance).That means,  will sort the element of  in place without creating any new object or list only returning .Contrary to ,  (built-in method) instead returns a new sorted list of : Return a new sorted list from the  items in iterable.
 sorts a list in place but returns . The first snippet prints the return value of . The second prints the sorted list itself.
 is an in-place method. It modifies the list, rather than returning a new list. Its return value is , so  sets  to .From the docs:This method modifies the sequence in place for economy of space when sorting a large sequence. To remind users that it operates by side effect, it does not return the sorted sequence (use  to explicitly request a new sorted list instance).If you prefer that syntax (which is perfectly fine), use  instead of 


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=list.sort#list.sort
https://docs.python.org/3/library/functions.html?highlight=sorted#sorted
https://docs.python.org/3/library/stdtypes.html#list.sort
https://docs.python.org/3/library/functions.html#sorted
