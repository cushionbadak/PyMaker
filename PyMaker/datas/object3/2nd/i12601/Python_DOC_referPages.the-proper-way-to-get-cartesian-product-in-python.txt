Natural Text
I have two lists with the same length, say 3.I want to get Cartesian product of the two, but the element at the same position shouldn't be count i.e. :How shall I do that?
You can nearly directly jot down your 'refined' carthesian product:
So here's my way to do it use  and :From the document of :  Cartesian product of input iterables.Equivalent to nested for-loops in a generator expression. For example,  returns the same as .The nested loops cycle like an odometer with the rightmost element advancing on every iteration. This pattern creates a lexicographic ordering so that if the inputâ€™s iterables are sorted, the product tuples are emitted in sorted order.And  does Make an iterator that aggregates elements from each of the iterables. As the document says.So my code create a set and it has the elements which you don't want, then  produces the full list,  removes the elements which you don't want in that list.
Just get the product in the normal way, then filter it out:Result: is a generator there, so remember to instead create a comprehension with  if you plan on using it more than once.Note that this doesn't work if  and  contain repeated elements. To solve this,  it and discard the items with unwanted indices:Result:
Without any indexing on the lists nor any calculation based on the length of the lists, using plain enumerate
You can iterate  and iterate  for each value of . If index of both list differs, you can print out the combination of elements from both lists.
You can try the following approaches. Since the cartesian product is a set, I will provide my answer as a set of tuples:Using a set comprehensionI use  in order to have a tuple  at each iteration in which  is the index of each  of .Using itertools


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/itertools.html#itertools.product
