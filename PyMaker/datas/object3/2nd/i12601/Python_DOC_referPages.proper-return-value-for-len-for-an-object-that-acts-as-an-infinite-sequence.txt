Natural Text
I am writing a python class that acts as an immutable, infinite sequence.The class does not use a generator to access this infinite sequence, rather it generates a value for an arbitrary index in the sequence according to an algorithm within the  method.I am curious what the best way to handle the  method of such an object is. Ideally, I would just return  through . However, the  function that calls an object's  method behind the scenes requires a somewhat specific value.If  is set to return float("inf") or decimal.Decimal("Infinity"),  rejects it by raising a TypeError. It also rejects the value of "-1" which would imply that the sequence is infinite. Furthermore, when I tried using an infinity class that I happen to have written earlier that does in fact inherit from ,  for whatever reason returned 0.While it isn't really a major inconvenience to allow the value to just be "0", and while a class like this is very unusual, I am still curious to know, is there a good way to handle the length attribute of a class that is an infinite sequence?
 must return a valid integer.  Since you cannot, you should either not implement , if your sequences are always infinite, or raise a  if you can sometimes give a meaningful length.
I think the only reasonable solution is to not implement  at all, since in fact your object does not have a length.
Don't define  for this class because that's semantically impossible to answer for it.
As noted and in the documentation  must return an integer >= 0, hence the .Follow the example set by the infinite  and raise an appropriate  to signify no length: 


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__len__
