Natural Text
I would like to convert the following string:toIs it possible to do the conversion in one line?    
Is it possible to do the conversion in one line? YES, It is possible. But how?Algorithm for the approach Split the string into its constituent parts using . The output of this is Now we have got half the problem. Next we need to loop through the split string and then check if each of them is a string or an int. For this we use A list comprehension, which is for the looping part for finding if the element is an  or a . The list comprehension can be easily written as . But how do we add an  clause there? This is covered in One-line list comprehension: if-else variants. Now that we know which all elements are  and which are not, we can easily call the builtin  on it.Hence the final code will look like Now for a small demo,As we can see, the output is as expected. Note that this approach is not suitable if there are many types to be converted.
You cannot do it for negative numbers or lots of mixed types in one line but you could use a  function that would work for multiple types using :
Another way, is using  built-in method:If Python3, then:Since  in Python3 would give a generator, so you must convert it to 
It is possible to do arbitrarily many or complex conversions "in a single line" if you're allowed a helper function.  Python does not natively have a "convert this string to the type that it should represent" function, because what it "should" represent is vague and may change from application to application.
If you have all kinds of data types(more than str and int), I believe this does the job.This fails if there exists elements such as "b1"


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/stdtypes.html#str.isdigit
https://docs.python.org/3/library/functions.html#int
https://docs.python.org/3/library/ast.html#ast.literal_eval
