Natural Text
I'm writing a Sublime Text plugin that provides multiple Python shells accessible via UNIX sockets. Each shell should act as a standalone REPL running on its own thread. (It is undesirable for these shells to have their own processes; sharing a single process is an absolute requirement.)The builtin  function prints output to stdout if the code was compiled with  and is an expression that does not evaluate to None. I need to send this output over the socket instead.I know that this can be done by patching stdout. However, this would not work here because multiple consoles may be running in multiple threads (plus the built-in console).My ideas are as follows:Try to  the input with ,  it, and print the result (if not None). If it won't compile, try  instead of .For each console's thread, keep the output stream in thread-local storage. Patch  with an object that checks for these streams before calling "regular" stdout.Somehow provide a patched  to each console.These don't seem like great ideas. Is there a better one?
If you're dead set on having a single process, then depending on how willing you are to dive into obscure C-level features of the CPython implementation, you might try looking into subinterpreters. Those are, as far as I know, the highest level of isolation CPython provides in a single process, and they allow things like separate  objects for separate subinterpreters.


Answer URL
https://docs.python.org/3/c-api/init.html#sub-interpreter-support
