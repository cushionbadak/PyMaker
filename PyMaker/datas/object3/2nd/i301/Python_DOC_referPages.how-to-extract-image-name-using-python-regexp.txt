Natural Text
so i want to extract the images name from the path , to use them as labels further in a classification Task.this is the pasth:[PosixPath('/content/drive/My Drive/Logo/adidas10.jpg'),PosixPath('/content/drive/My Drive/Logo/adidas11.jpg'), PosixPath('/content/drive/My Drive/Logo/adidas13.jpg'),.  .  .] and it goes on for 600 images .so what i want to get is the brand name , like in this case adidas.here's the RegEx expression i used :but , what i get after checking the images label is this:any Suggestions ? , thanks. 
You make use of a character class which will one of the listed characters. So your pattern  will capture in a group matching one of , then match match any char except a newline due to the dot  and then match one of .For your example data, that will give you a capturing group for  and a match for  as well as a capturing group for , , and a match for If you want to get the brand name like adidas from your examples as you state in your question, you could use a capturing group.Regex demo | Python demoThat will match Match literally Capturing group (This will contain the brand name) Match not a  0+ times not a  using a negated character classes  Match not a  or a digit Close group Match 0+ times a digit Match .jpg
 (any of , whitespaces, literal , literal ) is capturing the  in  because it follows:: any single character;  in this case: any of , , ;  hereYou need:Now the only captured group will contain the image name. matches literal  matches one or more characters that are not  -- the file name matches  at the end ()
A great resource to try your regex out is Regex101.You try to group the file ending together using square braces  which creates a selection of either of the three characters ,  or . The dot is not escaped and thus - in regex syntax - is any character. Since you never add any multipliers (like  for 1 or more characters,  for 0 or more characters or  for an optional character), you only match a few letters in total.If you want to read a bit more about all regex operators, modifiers and similar concepts, I recommend reading the documentation of python's  module.You can either rewrite the regular expression to something like this (extract the first group in order to retrieve the filename) or use the fact that there is a path processing library in the  package:You can see this regex in action here.Since you seem to already have path objects available, you could however just extract the basename of the path, which in your case will be the filename: would now be  


Answer URL
https://docs.python.org/3/library/re.html
