Natural Text
I have some code where I am using a list of names, and a file (eventually multiple files) of results (team, name, place).  The end result I am looking for is to have each person's name (key) associated with a list of points (values). However, when I use the code below I end up with a result like 'Abe': [100, 80, 90], 'Bob': [100, 80, 90], 'Cam': [100, 80, 90] instead of 'Abe': [100], 'Bob': [80], 'Cam': [90]I can get the result I need by adding in before the second last line, but I believe this prevents me from eventually being able to append multiple scores to each key (since I'm re-initializing inside the loop). Any insight into my error would be appreciated.
The problem you encounter comes from the way you create :When using , the same value is used for all keys of the dict. Here, the same, one and only empty list is the common value for all your keys. So, whichever key you access it through, you always update the same list.When doing , you actually create a new, different empty list, that becomes the value for the key  only, so the problem disappears.You could create the dict differently, using a dict comprehension:or use a collections.defaultdictwhich will automatically initialize  to an empty list when needed.
By using  you're initializing every key of the dict with a reference to the same list, so changes made to the list are reflected across all keys. You can use a dict comprehension for initialization instead:Alternatively, you can initialize  as a normal dict  and use the  method to initialize its keys with lists:
IIUC, your dictionary is mapping  to . You can leverage a  to replace your  method:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
