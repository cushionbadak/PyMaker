Natural Text
This question already has an answer here:Write Python OrderedDict to CSV                    4 answers                I have 2 dictionaries:My goal is to write the keys of dict1 as the headers of a CSV, and the values of dict2 and any other dictionaries as the values corresponding to each header.I want the first column of the csv to be "b", so I created a new dict and added "b" first to retain order, then updated it with the remainder of dict1:So now, the two dicts that I care about are:Since I'm writing the keys of new_dict to be the headers of a CSV, the CSV will now be in order: b, a, c. How can I write/change dict2 so that order of values correspond with the respective headers?I tried:But I think this only updates the values and not the order of values.
The dictionaries in python are not ordered. This means that the order in which you input the key-values may not correspond to the order that is printed or evaluated.To keep the order use OrderedDict instead of the built-in dictionary!OrderedDict: dict subclass that remembers the order entries were addedSo just initialize the  with  instead of only . Also, the  module also offers the DictWriter which does almost the same but specifically designed for writting in files. So maybe it's interesting for your case! Take a look just in case!
Dictionaries in Python do not preserve any ordering of keys. I suggest that you use  from Ptyhon's  module. It takes a  parameter which specifies the order that the keys should be in as it writes the columns to the CSV output.


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictWriter
https://docs.python.org/3/library/csv.html#csv.DictWriter
