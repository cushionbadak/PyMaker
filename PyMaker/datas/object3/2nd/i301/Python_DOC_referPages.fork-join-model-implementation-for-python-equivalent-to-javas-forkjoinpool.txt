Natural Text
I am looking for an implementation of the fork-join model for Python. As Java's ForkJoinPool, it should allow to split (fork) the work of a task into several sub tasks recursively. Once the sub tasks are completed, the results are joined and returned. Ideally, it should support threads and processes similar to the ThreadPoolExecutor and ProcessPoolExecutor in concurrent.futures, but threads are more important for now. It must allow to limit the number of threads (I want to have one thread per core). I am aware that this will only be useful if the code releases the GIL.Example from Wikipedia to clarify fork-join model:Is there such a library in Python? I could not find one.
I figured that what you want is to collect the result, multiprocessing.starmap() might be the choice, here goes the example


Answer URL
https://docs.python.org/3/library/multiprocessing.html
