Natural Text
I'd like to have a process pool in a mostly async I/O application, because sometimes CPU bound tasks need to be done that shouldn't stall the main application. Furthermore I want to limit the number of processes.According to the documentation the right way is to use . The code below works but it doesn't terminate the processes after the work was done.How do you reuse processes in the process pool or terminate them to obey the upper limit?
The process pool will have strange behavior if you reuse it. So I suggest to create a new pool every time and wrap it in a  structure as demonstrated in the Example.If you insist to reuse the pool, the responsibility to manage its life time falls on your shoulder. After usage, you can kill all subprocesses in the pool by 


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor-example
https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor-example
