Natural Text
Say I have a string:And say I would to apply an  function which will return:I would like a solution which will allow for  number of excluded blocks and will apply the  function only to the characters outside of these blocks.It would be nice if there was a way to  match only strings outside of the , then only apply  to these.
I'm not sure if there's a way to do this with a single regex, but here's my thought process for this. I figure we want to split the string apart so that we can capitalize only the parts that aren't in the exclude blocks. The way to do that would be to make a regex to match the exclude block:We need to include the question mark in there so that it doesn't match greedily.Since we will want to keep the parts of the string that match our  instead of just throwing them out, we can use :If capturing parentheses are used in pattern, then the text of all groups in the pattern are also returned as part of the resulting list.which is why we need the parentheses in our .Next we want to split the string using that pattern:That gives us the separation we need.The next thing we want is  to  only the strings that don't match our exclude pattern. For that I figure we can map a lambda over our list that checks each entry against our exclude pattern, and only s the ones that don't match:The  is just so we can see what is in the resulting map object.After that we just join it all back together:If you'd rather not do it as a one-liner (it's a little gross), we can make it into a function:


Answer URL
https://docs.python.org/3/library/re.html#re.split
