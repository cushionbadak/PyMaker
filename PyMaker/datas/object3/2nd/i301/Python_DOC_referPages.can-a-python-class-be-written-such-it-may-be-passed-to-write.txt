Natural Text
I'd like to pass an instance of my class to write() and have it written to a file. The underlying data is simply a bytearray.I tried implementing  to no avail. I'm aware of the buffer protocol but I believe it can only be implemented via the C API (though I did see talk of delegation to an underlying object that implemented the protocol).
No, you can't, there are no special methods you can implement that'll make your Python class support the buffer protocol.Yes, the  and  methods document that they accept a -like object, but the buffer protocol needed to make something -like is a C-level protocol only. There is an open Python issue to add Python hooks but no progress has been made on this. The  special method is only called if you passed an object to the  callable;  does not do this.So, when writing to a file, only actual -like objects are accepted, everything else must be converted to such an object first. I'd stick with:which will call the  method, provided it is defined, or provide a method on your class that causes it to write itself to a file object:


Answer URL
https://docs.python.org/3/library/io.html#io.RawIOBase.write
https://docs.python.org/3/library/io.html#io.BufferedIOBase.write
https://docs.python.org/3/glossary.html#term-bytes-like-object
https://docs.python.org/3/c-api/buffer.html#bufferobjects
https://docs.python.org/3/reference/datamodel.html#object.__bytes__
