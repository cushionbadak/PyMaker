Natural Text
How do I merge the views of the items of two dicts in python?My use case is: I have two private dictionaries in a class. I want the API to treat them as one, and provide an  method as such. The only way I know of is to combine them then provide a view on the two, but for large dictionaries this seems expensive. I'm thinking of sth like Note: I don't care about key clashes.This is what I'd like to improve:
You can use :
Merging views of dictionaries means nothing because a view always reflects the content of the corresponding dictionary. So to have a different view, either you edit one of your dictionaries or you instantiate a new one (like you did), there is no way around it. See this.But maybe what you want is  to iterate across multiple iterables. This solution doesn't insatiate. Or as other have said . I would use  to iterate and  to make lookups.
You can use :A ChainMap groups multiple dicts or other mappings together to create a single, updateable view. If no maps are specified, a single empty dictionary is provided so that a new chain always has at least one mapping.Example:For your code example, I'd use:
you can use  two combine two or more views. as stated:Make an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable, until all of the iterables are exhausted.That way there is not copying of the data.


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
https://docs.python.org/3/library/collections.html#collections.ChainMap
