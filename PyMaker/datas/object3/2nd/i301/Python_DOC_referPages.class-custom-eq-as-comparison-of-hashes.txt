Natural Text
Consider a custom class:Is it a bad idea to make equality reliant upon the hash?  This seems like a much more elegant and readable mechanism than checking each pair of attributes in a piecemeal fashion for larger numbers of attributes alaor a more dynamic check using getattr and a list (is there a better way to compare large numbers of pairs of attributes?)Is the size of the hash returned by the builtin hash function not large enough to be reliable in relatively large sets of data?  
Yes, this is a bad idea. Hashes are not unique, objects with equal hashes are not guaranteed to actually be equal too:Hashes are not meant to be unique; they are a means to pick a slot in a limited-size hash table quickly, to facilitate O(1) dictionary look-ups, and collisions are allowed and expected.Yes, Python requires that equal objects should have equal hashes, but that doesn't mean the relationship can be reversed.I just compare tuples:If you are writing a lot of data classes, simple classes that all need equality testing and hashing, etc. use the  module (Python 3.7 or up, or use a backport):The above class now comes with a  and  method:


Answer URL
https://docs.python.org/3/library/dataclasses.html
