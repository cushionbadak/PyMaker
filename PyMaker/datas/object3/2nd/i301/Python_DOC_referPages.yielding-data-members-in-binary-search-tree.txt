Natural Text
I am trying to implement an iterator to my binary search tree. To achieve this, I am attempting to do an in-order traversal through the tree and yield each individual data member. This will allow me to iterate through each item of the tree.My function:When testing this function with an iteration such as I am receiving this error:
To implement a recursive generator you cannot just "call" yourself, you need to extract elements and yield them.Python has a special syntax for this:where  is iterable, and it can be seen as a shorthand forUsing this you can implement in-order traversal of a tree with something like:
The clue is iter() returned ....So you need to return an iterator. Your class is an iterator, so return selfYou should probably implement  as well to actually yield the value.So the solution might look likeYou use  here to delegate to the child nodes. See https://docs.python.org/3/whatsnew/3.3.html#pep-380-syntax-for-delegating-to-a-subgeneratorYou do in fact need three yield statements, because you need to traverse both the left and right children, as well as producing the value of the current node.
You generally want your iterator as a separate entity from your data structure, so you can have multiple iterators over your data, and so you can iterate over your data multiple times.  Below, I show how you can implement a simple DFS algorithm for a basic BST class.


Answer URL
https://docs.python.org/3/whatsnew/3.3.html#pep-380-syntax-for-delegating-to-a-subgenerator
