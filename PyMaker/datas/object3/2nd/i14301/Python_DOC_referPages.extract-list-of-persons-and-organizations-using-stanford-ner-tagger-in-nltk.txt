Natural Text
I am trying to extract list of persons and organizations using Stanford Named Entity Recognizer (NER) in Python NLTK.When I run:the output is:what I want is to extract from this list all persons and organizations in this form:I tried to loop through the list of tuples:But this code only prints every entity one per line:With real data there can be more than one organizations, persons in one sentence, how can I put the limits between different entities?
Thanks to the link discovered by @Vaulstein, it is clear that the trained Stanford tagger, as distributed (at least in 2012) does not chunk named entities. From the accepted answer:Many NER systems use more complex labels such as IOB labels, where codes like B-PERS indicates where a person entity starts. The CRFClassifier class and feature factories support such labels, but they're not used in the models we currently distribute (as of 2012)You have the following options:Collect runs of identically tagged words; e.g., all adjacent words tagged  should be taken together as one named entity. That's very easy, but of course it will sometimes combine different named entities. (E.g.  is about three cities, not one.)  Edit: This is what Alvas's code does in the accepted anwser. See below for a simpler implementation.Use . It doesn't use the Stanford recognizer but it does chunk entities. (It's a wrapper around an IOB named entity tagger). Figure out a way to do your own chunking on top of the results that the Stanford tagger returns.Train your own IOB named entity chunker (using the Stanford tools, or the NLTK's framework) for the domain you are interested in. If you have the time and resources to do this right, it will probably give you the best results.Edit: If all you want is to pull out runs of continuous named entities (option 1 above), you should use :If  is the list of  tuples in your question, this produces:Note again that if two named entities of the same type occur right next to each other, this approach will combine them. E.g.  is about three cities, not one. 
IOB/BIO means Inside, Outside, Beginning (IOB), or sometimes aka Beginning, Inside, Outside (BIO)The Stanford NE tagger returns IOB/BIO style tags, e.g.The  are tagged as PERSON and "Rami" is the Beginning or a NE chunk and "Eid" is the inside. And then you see that any non-NE will be tagged with "O".The idea to extract continuous NE chunk is very similar to Named Entity Recognition with Regular Expression: NLTK but because the Stanford NE chunker API doesn't return a nice tree to parse, you have to do this:[out]:But please note the limitation that if two NEs are continuous, then it might be wrong, nevertheless i still can't think of any example where two NEs are continuous without any "O" between them.As @alexis suggested, it's better to convert the stanford NE output into NLTK trees:[out]:Then:[out]:
Not exactly as per the topic author requirement to print what he wants, maybe this can be of any help,Output would be something like this
WARNING:Even if u get this model "all.3class.distsim.crf.ser.gz" please dont use it because 1st reason :For this model stanford nlp people have openly appologized for bad accuracy 2nd reason :It has bad accuracy becase it is case sensitive . SOLUTIONuse the model called "english.all.3class.caseless.distsim.crf.ser.gz"
Use pycorenlp wrapper from python and then use 'entitymentions' as a key to get the continuous chunk of person or organization in a single string.
Try using the "enumerate" method.When you apply NER to the list of words, once tuples are created of (word,type), enumerate this list using the enumerate(list). This would assign an index to every tuple in the list.So later, when you extract PERSON/ORGANISATION/LOCATION from the list they would have an index attached to it.Now on the basis of the consecutive index a single name can be filtered out.Hussein Obama II,  James Naismith,  Tony Hank,  Frank Mahan


Answer URL
https://docs.python.org/3/library/stdtypes.html#old-string-formatting
