Natural Text
Starting with Python 3.3, the hashing algorithm is non-deterministically salted to avoid a certain kind of attack. This is nice for webservers but it's a pain when trying to debug a program: Every time I run my script, dict contents are iterated in a different order.Some earlier versions of python had a  flag for enabling hash randomization, but now that it's the default behavior, the flag has not been replaced by its opposite.Randomization can be disabled by setting the environment variable :PYTHONHASHSEEDIf this variable is not set or set to random, a random value is used to seed the hashes of str, bytes and datetime objects.     If PYTHONHASHSEED is set to an integer value, it is used as a fixed seed for generating the hash() of the types covered by the hash randomization.The catch is that this variable must be set before launching the python process. I've tried to set it with , or in , but these seem to have no effect on the hashing method. This is not too surprising: I wouldn't expect python to check the environment before every single set or dictionary lookup! So, the question remains:Is there a way for a python program to disable its own hash randomization?
I suspect this isn't possible, unfortunately.  Looking at  the  class and its descendants were added in the commit that introduced this behavior.  They test the hashing behavior by modifying the environment and starting a new process with  explicitly set.  You could try to copy that pattern, perhaps.I also just noticed you said "Every time I run my script, dict contents are iterated in a different order." - I assume you're aware of , right?  That's the normal way to get reliable hash iteration.If you're willing to set the value in your shell environment, you could also just wrap your python call in a bash script, e.g.That avoids needing to manipulate your whole environment, as long as you're ok with a wrapper script.Or even just pass the value on the command line:


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
