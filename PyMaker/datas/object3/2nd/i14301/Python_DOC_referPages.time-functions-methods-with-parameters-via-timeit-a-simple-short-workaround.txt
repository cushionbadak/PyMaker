Natural Text
I guess we've all seen  failing with something like when trying use timeit with a custom function/method and passing parameters to it.E.g.Would fail with  as it is unable to locate without further setups/imports (which messes the statement up, in my opinion).So, the question that remains is: What is a small, minimalistic (perhaps even "pythonic") way to deal with the problem?How can we easily time a code snippet for measuring the execution time with all benefits of pythons ?
Put the code snippet in a string, and add an import statement to the setup (also a string):The script is always called .As of Python 2.6, both the statement and the setup parameters take a function with no parameters, so you can wrap the  call in a lambda or simple function. Take into account that this takes extra overhead to run; from the  class documentation:The stmt and setup parameters can also take objects that are callable without arguments. This will embed calls to them in a timer function that will then be executed by . Note that the timing overhead is a little larger in this case because of the extra function calls.Take this into account when comparing different approaches, don't mix the two styles.
One answer I found out (and in my mind a nice one) is to wrap the function you want to call into another parameterless function. Of course this would create a little overhead and mess up readability...that is why lambdas are a nice workaround for this little hack:The only change we mad is in line 7: instead of calling testing directly we wrap it with a lambda function. Now timeit do not has to worry about unknown parameters, because it gets a clean, wrapped anonymous function passed.Another benefit is this is working in both, python 2.7.X and python 3.X, without any changes :)


Answer URL
https://docs.python.org/3/library/timeit.html#timeit.Timer
