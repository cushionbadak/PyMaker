Natural Text
Having looked everywhere on Google and having no success at finding a solution to this problem, I continue getting the following error:The error occurs at the line:  in my Python file. The JSON file contains a section from the Reddit comments from :JSON ():*The JSON data is only a fraction of what I actually have, and I cannot change the format. eg. Python ():The JSON file already has double quotes on everything that needed double quotes.If there was some other error causing this one JSONLint.com claimed the JSON was free from them.I had been referencing my code from this tutorial, where the tutorial's code worked fine without any errors (this is according to the video attached, for using the code from the link above, I still get the error). Because the tutorial used Python 3.5, I downgraded my Python version and continued to get the same error.What's the cause of this error if the JSON is already using double quotes and valid by JSONLint?
A stream of JSON documents, one-per-line, is a format also known as JSONL. This is distinct from "JSON" as such, which only permits one document to a file.You can easily convert your file into this format by running .  is a command-line tool for processing JSON and JSONL documents; the  flag enables "compact" mode, which puts each one document on each line of output.Even easier, you can have that done in-line, having your Python code directly iterate over the output of :
Your JSON has newlines in it.But your code is reading one row at a time and expecting it to be a complete JSON text:That's not going to work.If your file is just a single JSON text, just read the whole thing:You may want to rename  to something more meaningful, like .If your file is a sequence of JSON texts, and you're generating the file yourself, the right thing to do is to change the way you generate it. A stream of arbitrary JSON texts is not really a valid format. But if you really want to build a format on top of that, you can—e.g., escape all the newlines so that you can parse it line by line. Or you can use a real format. Or you can just write out a big JSON array instead of a bunch of separate JSON texts.If you can't change the file, you need a strategy to parse it. All of these are almost right:Use the  module's  method to read the next JSON text and return the decoded value plus the offset to the next one.Balance brackets and braces and split every time the count goes to 0.Scan for newlines and then backtrack to check for open brackets and braces.Other than bad error handling, the only serious problem with any of these is that they can't possibly do the right thing for numbers as top-level texts. If your top-level texts are all objects, that's not a problem.So:Although if your file is gigantic, you almost certainly want to  it and pass a slice/memoryview to —or, if that doesn't work because you have Unicode text, you may have to buffer up chunks manually. Not exactly trivial, but then you are parsing a broken format, so this is easier than you should expect. :)


Answer URL
https://docs.python.org/3/library/json.html#json.JSONDecoder.raw_decode
