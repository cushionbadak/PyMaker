Natural Text
Given the following string: The goal is to swap out a character position range with other characters. For example, swap out characters 20-24 with . The result would look like:Testing: I get the error: The end goal is a reusable function such as: I realize that it's possible to pad out the unchanged range into a new string: However that will force more calculation and since this will be happening thousands of times against lines in a file. The different lines will be different length and will be different character positions to swap. Doing this seems like it would be a long workaround where I should just be able to insert direct into the character positions in-place. Appreciate any help, thanks!
strings are immutable (unchangeable).  But you can index and join items.'XXXXXXXXXXXXXXXXXXXXABCDEXXXXXXXXXXXXXX'Do be careful as the string length "ABCDE" and the number of items you omit between mystring[:20], mystring[24:] need to be the same length.
Strings are immutable in python! You'll have to split the string into three pieces and concatenate them together :) 
This is not strictly possible in python, but consider using bytearray a similar structure to a string in python, with a key difference being mutabilityThere are some key things you should know when using a bytearray, you can see some of them here
As much as you think you should be able to assign to individual characters of a string,  says you can't.


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytearray
https://docs.python.org/3/library/stdtypes.html#typesseq-mutable
