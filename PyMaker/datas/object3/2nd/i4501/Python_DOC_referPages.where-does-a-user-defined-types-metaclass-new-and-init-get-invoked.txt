Natural Text
I'm reading several articles to understand how class types are created in Python (1, 2, 3), and following along Python's source code (typeobject.c).My Question: When a new user-defined type is created, where does its metaclass'  and  get invoked? I'll explain:say we have a simple user-defined type:To create the type ,  is eventually invoked, with  as its first parameter. In this case,  is actually . Inside ,  is called, which in this case means a call to . Now, Inside , the new type is eventually allocated with:And when  finishes, it returns  to . Then,  calls  - which means a call to , which invokes , that doesn't really do anything.Somewhere, 's  and  should be called. Did I miss these calls along the way, or are they called outside ? 
 and  are the C-level counterparts of  and . The calls to  and  are the  and  calls.If you override  or  in a metaclass you define, the corresponding  or  slots in your metaclass will be set to C-level functions that search for and invoke your Python-level overrides.
As user2357112's answer explains,  is the type slot method, and the default version of it for Python-defined classes looks up and calls the  method.The idea of type slot methods isn't really explained all in a single place, but see Type Objects in the C API and New Types in the Extending and Embedding docs.You'll also want to read the specific entries on  in both of those chapters, because it's a particularly special function.If you want to see the source, most of the relevant stuff is in . Notice that the  wrapper is different from other Python method wrappers, and the name lookup doesn't call the generic special method lookup code, but the basics are still pretty similar.


Answer URL
https://docs.python.org/3/c-api/typeobj.html
https://docs.python.org/3/extending/newtypes.html
