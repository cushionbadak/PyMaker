Natural Text
I'm writing a class in Python and I'm writing a  function so my print statements can print string representations of instances of that class. Is there ever a reason to directly do something like this:It feels like since there are other neater ways to do this, it would be a bad idea (or at least, not proper style) to directly call . That said, I can't find a website specifically saying not to.
In general, dunder methods define how an object behaves in a particular context. They aren't intended to be used directly. (The major exception being when you are overriding a dunder method inherited from a parent class.)In the case of , there are three documented uses; it is used by the built-in functions , , and  so that (roughly speaking).The key here is that  allows code that isn't built-in to Python to work with these functions; the  method provides the common interface all three can use.
is the same asunless someone has the bad idea to hide  built-in by reassigning its name:in which case only the first approach would work. But in the general case, it's better to avoid calling those dunder methods directly.
If you want a custom string representation of your class, implement  in your class definition, and then you can call it using  which will call your method. Calling  will be the same, but isn't as clean I'd say.
It is the correct way of representing the object in print statements and logs, but I don't see why you'd ever do overPassing the object as a string to the function seems unnecessary, as it'd be easier to access it's attributes if you passed the object and said function can also call  itself.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__str__
