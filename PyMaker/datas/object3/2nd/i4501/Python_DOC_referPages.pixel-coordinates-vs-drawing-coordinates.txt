Natural Text
In the code snippet below, passing x and y values puts the dot in (y,x) coordinates while the drawing is done in (x,y). What is the correct way to set up the drawing buffer so it's placing pixels and drawing in the same coordinate system?
Note: with "axis" I refer to image coordinates, not to NumPy's array dimensions.The issue is with the interpretation of 's dimensions ("The N-dimensional array"), or the definition of a coordinate system in that context.For Pillow, it's clear:Coordinate SystemThe Python Imaging Library uses a Cartesian pixel coordinate system,  with (0,0) in the upper left corner. Note that the coordinates refer  to the implied pixel corners; the centre of a pixel addressed as (0,  0) actually lies at (0.5, 0.5).Coordinates are usually passed to the library as 2-tuples (x, y).  Rectangles are represented as 4-tuples, with the upper left corner  given first. For example, a rectangle covering all of an 800x600 pixel  image is written as (0, 0, 800, 600).That would look like this (image -> public domain):  Your code, modified to create a 2x2 pixel image:shows the issue (draw pixel at (0,1), green: Pillow, red: ndarray):X and Y indeed are swapped:Is it because of NumPy or Pillow?The  prints aswhich is easily reformatted to visually correspond to the image pixels which shows that Pillow interprets the array as one would expect.But why does NumPy's  seem to swap the axes?Let's take this apart a bit further Let's test this ( has Python run in interactive mode once the script is finished):which confirms the assumed indexes above.It becomes obvious how the first dimension of the  corresponds to the image lines or Y axis, the second to the image columns or X axis (and the third obviously to the RGB pixel values).So, to match the "coordinate systems", either ...... the axes need to be "swapped"... the data needs to be "swapped"... the axis interpretation needs to "swapped"Let's see:1. Simply swapping the index variables when writing to the :expectedly results in andOf course a wrapper function could do this.2. Transposing the array, as suggested by zch, does not work that easily on a 3-dimensional array, since this function affects all dimensions by default:results inand because of the Pillow  image mode specified, consequently an Exception is thrown:But there is an additional argument to , :...permute the axes according to the values given.We want to swap only  and , but not , so:There are other functions that operate similarly, e.g.3. Change the interpretation ?Can Pillow's  be brought to interpret the  with swapped axes? It does not have any other arguments than  for color (really, see the source code).Creates an image memory from an object exporting the array interface using the buffer protocol).  If obj is not contiguous, then the tobytes method is called and frombuffer() is used.The function figures out how to call  (source), which has a few more options for the "decoder".Array interface? Buffer protocol? That's both a little too low-level for now...TL;DRJust swap the index variables (either)!Further reading:- https://docs.scipy.org/doc/numpy-dev/user/quickstart.html


Answer URL
https://docs.python.org/3/c-api/buffer.html
