Natural Text
I am developing a program that will email me when new music from my artists on Spotify. It does this by getting the number of albums every artist has when the script is run and comparing the results to a previous day saved as a CSV file. This involves API calls to verify the artist is on Spotify (I was getting errors that certain albums were not on Spotify) and then getting the number of albums for that artist. These calls are very time consuming especially when I have close to a thousand individual artists. I was wondering how I would parallelize these API calls or any other suggestions to speed up the overall program. Linked below is the portion of code that has the API calls. Thank you for your time in advance. 
So basically you have 3 options here.Using ThreadingMultiprocessingAsync code ( if you are using python 3.5 or above )Threading will spawn multiple threads in your process making it run in parallel but the downside is that it introduces big overhead in memory usage and is not the most efficient way of parallelism because the context switching is happening on processor level. Example with threading_toolbelt: https://toolbelt.readthedocs.io/en/latest/threading.htmlMultiprocessing will spawn multiple processes of python introduction even more overhead in resources consumption as it has hold whole stack of python process in memory for each one. And communicating between processes is not the most trivial thing in the world.Async is definitely the best solution here if you are using python3.5 or above. You might think of it as somehow similar to threading but with context switching on event loop level and without memory overhead from coping python stack. You would need to use async request library in order to do that. (here is one: asyncio). And example usage: https://pawelmhm.github.io/asyncio/python/aiohttp/2016/04/22/asyncio-aiohttp.htmlSo in summary sorting from the best option to worst is:AsyncThreadingMultiprocessing


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example
