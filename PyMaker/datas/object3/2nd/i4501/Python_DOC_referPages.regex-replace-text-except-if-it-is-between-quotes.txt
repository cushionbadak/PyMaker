Natural Text
I am working on a transpiler and want to replace my language's tokens with those of Python. The substitution is done like so:Where  is a list of  ordered pairs and  is the text to be transpiled.However, I can't seem to find a way to exclude text between quotes from the substitution process. Please note that this is for a language, so it should work for escaped quotes and single quotes as well.
This may depend on how you define your patterns, but in general you can always surround your  with a lookahead and a lookbehind group to ensure that text between quotes is not matched:Which will yield:UPDATE: If you want to ignore whole quoted swaths of text, not just a quoted word, you'll have to do a bit more work. While you could do it by looking for repeated quotations the whole lookahead/lookbehind mechanism would get really messy and probably far from optimal - it's just easier to separate the quoted from non-quoted text and do replacements only in the former, something like:You can test it as:As an added bonus, this also allows you to define fully qualified regex patterns as your replacements:But if your replacements do not involve patterns and need just a simple substitution you can replace the  in the  helper function with the significantly faster native .Finally, you can get rid of regex completely if you don't need complex patterns:
Rather than just using regexes, you probably want to use Python's built in shlex module. It's designed for handling quoted strings like you find in a shell, including nested examples.


Answer URL
https://docs.python.org/3/library/re.html
