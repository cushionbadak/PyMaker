Natural Text
I am writing a piece of code that needs to split a hyphen delimited string into at most three tokens. If there are less than three tokens after splitting, it should append sufficient number of empty strings in order to make three tokens.For example,  should be split to , but  should be split to .Here is the code I wrote.Here is the output:My question is that the  function I have written seems to be too verbose for this little task. Is there a Pythonic way to write this, or is there some Python function or class meant especially to do this kind of task that makes the code more concise?
You could use a simple  loop:or extend the list with a calculated number of empty strings:or use concatenation so you can put it in the return statement:
It might be overkill, but you could use a few methods from .
Using :
This could work.

...yields
How about this?One more oneliner:BTW, I don't find anything un-pythonic with your solution. It is a bit verbose but the intent is very clear.One more:


Answer URL
