Natural Text
This question already has an answer here:Using global variables in a function                    18 answers                I am working on a currency converter for my computing GCSE at school and I have no idea what I am doing wrong here.My code is:When I convert it works correctly but when changing exchange rate i get the following error:I have searched around but no answer has been very helpfulif you could try and keep any explanations as simple as possible and provide an example of where Im going wrong and what i should be doing that would be greatly appreciated.
You can access global variables just fine from inside functions.  When you want to modify their values however, you need to first use  and declare them as being in the global scope:
More information in Python docs:When a name is used in a code block, it is resolved using the nearest  enclosing scope. The set of all such scopes visible to a code block is  called the blockâ€™s environment.If a name is bound in a block, it is a local variable of that block,  unless declared as nonlocal. If a name is bound at the module level,  it is a global variable. (The variables of the module code block are  local and global.) If a variable is used in a code block but not  defined there, it is a free variable.When a name is not found at all, a NameError exception is raised. If  the name refers to a local variable that has not been bound, a  UnboundLocalError exception is raised. UnboundLocalError is a subclass  of NameError.
This is a great example of where a class would be very helpful. By declaring PD as a class property, you can use the @property decorator to keep your code organized and not have to worry about global variables.The bonus with this method is that if your next assignment is to extend your currency converter, it'll be easy to add methods or inherit this class like so:


Answer URL
