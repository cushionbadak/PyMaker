Natural Text
Is there a built-in function in Python that would replace (or remove, whatever) the extension of a filename (if it has one) ?Example:In my example:  would become I don't know if it matters, but I need this for a SCons module I'm writing. (So perhaps there is some SCons specific function I can use ?)I'd like something clean. Doing a simple string replacement of all occurrences of  within the string is obviously not clean. (This would fail if my filename is )
Try os.path.splitext it should do what you want.
Expanding on AnaPana's answer, how to remove an extension using pathlib (Python >= 3.4):
As @jethro said,  is the neat way to do it. But in this case, it's pretty easy to split it yourself, since the extension must be the part of the filename coming after the final period:The  tells Python to perform the string splits starting from the right of the string, and the  says to perform at most one split (so that e.g.  -> ). Since  will always return a non-empty array, we may safely index  into it to get the filename minus the extension.
Another way to do is to use the  method. For example:
I prefer the following one-liner approach using str.rsplit():Example:
For Python >= 3.4:


Answer URL
https://docs.python.org/3/library/pathlib.html
