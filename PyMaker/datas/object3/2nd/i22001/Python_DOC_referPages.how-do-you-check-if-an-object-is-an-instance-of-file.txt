Natural Text
It used to be in Python (2.6) that one could ask:but in Python 3.0  was removed.What is the proper method for checking to see if a variable is a file now?  The What'sNew docs don't mention this...
substitute whatever methods you plan to use for . This is optimal if you expect that you will get passed a file like object more than 98% of the time. If you expect that you will be passed a non file like object more often than 2% of the time, then the correct thing to do is:This is exactly what you would do if you did have access to a  class to test against. (and FWIW, I too have  on 2.6) Note that this code works in 3.x as well.
In python3 you could refer to io instead of file and write
Typically, you don't need to check an object type, you could use duck-typing instead i.e., just call  directly and allow the possible exceptions to propagate -- it is either a bug in your code or a bug in the caller code e.g.,  raises  if you give it an object that has no  attribute.If you need to distinguish between several acceptable input types; you could use :If you want to support a case when  may have  attribute that is set to  then you could use  over  -- note: no parens, the call is not made -- e.g., .If you want to check certain guarantees e.g., that only one single system call is made ( for n > 0) or there are no short writes () or whether read/write methods accept text data () then you could use  function with ABCs defined in  module e.g., look at how  is implemented.
Works for me on python 2.6... Are you in a strange environment where builtins aren't imported by default, or where somebody has done , or something?


Answer URL
https://docs.python.org/3/library/io.html#module-io
https://docs.python.org/3/library/io.html#class-hierarchy
