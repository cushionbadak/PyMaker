Natural Text
In Ruby you can read from a file using . The shortest and clearest I know in Python isIs there any other way to do it that makes it even shorter (preferably one line) and more readable?Note: initially I phrased the question as "doing this in a single line of code". As pointed by S.Lott, shorter doesn't necessary mean more readable. So I rephrased my question just to make clear what I meant. I think the Ruby code is better and more readable not necessarily because it's one line versus two (though that matters as well), but also because it's a class method as opposed to an instance method, which poses no question about who closes the file, how to make sure it gets closed even if an exception is raised, etc. As pointed in the answers below, you can rely on the GC to close your file (thus making this a one-liner), but that makes the code worse even though it's shorter. Not only by being unportable, but by making it unclear.
If you're open to using libraries, try installing forked-path (with either easy_install or pip).Then you can do:This library is fairly new, but it's a fork of a library that's been floating around Python for years and has been used quite a bit. Since I found this library years ago, I very seldom use  or  any more.
***grins***
This is same as above but does not handle errors:

Use pathlib.Python 3.5 and above:For lower versions of Python use pathlib2:ThenWriting is just as easy:
This isn't Perl; you don't want to force-fit multiple lines worth of code onto a single line.  Write a function, then calling the function takes one line of code.
Slow, ugly, platform-specific... but one-liner ;-)
I call this The Neat Way:And do whatwver you want with the content "s"For BIG FILES I suggest go line by line: f.readlines() ....inside a WITH statement for example
This gives you generator so you must save somewhere the values though, or This does the saving to list explicit close is not then possible (at least with my knowledge of Python).


Answer URL
https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text
