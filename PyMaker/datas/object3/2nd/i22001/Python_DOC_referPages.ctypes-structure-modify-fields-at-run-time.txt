Natural Text
Is it possible to modify the  definition of the  after it's been imported?Something like:Not surprisingly this fails with:EDITSMy use case is that I have two version of .  Version 2 is the same with additional fields appended to the end of version one.  I was hoping to avoid having something like this.  I do not know which version of the struct is needed until run-time.
No, as you can see in the sources,  is a custom metaclass (see lines 327ff in the C code I just pointed to) and  (lines 4136ff) uses it (as exposed in 5532ff).  The  statement (specifically when the  from the custom metaclass gets called to make the new class which inherits from ) is when all C-accessible fields are actually defined (and it's nice of  to make other "smuggled in" fields inaccessible from Python as well to avoid accidents;-).What problem, exactly, are you trying to solve, that you couldn't solve by rebuilding  from scratch at the time you learn about the extra fields?  For example, if your issue is that there are instances of the "old"  already around, well, obviously, those instances don't have the new fields you've just learned about, so modifying the class, even if through some incredible contortion it was feasible, wouldn't be all that useful;-).
I know this is a very old question, but you can solve your problem easily by subclassing:  'two' will immediately follow 'one' in memory for objects of type A_STRUCT_V2If the subclasses fields name duplicates its parent class fields member, the parent's is not replaced, it still takes the same memory (though is inaccessible with a statement like child.two, and the second member is placed after it.


Answer URL
https://docs.python.org/3/library/ctypes.html#ctypes.Structure._fields_
