Natural Text
 does not work in Windows. at this post Pydoc is not working (Windows XP) the last answer by dave webb says to create a pydoc.bat file with this code in it:After I create pydoc.bat where should it be placed so the  command works in the command prompt?PS adding  to the Windows path in the system environment variables does not work. Even after logging out and back in it does not work. 
PS adding C:\python27\Lib\pydoc.py to the Windows path in the system environment variables does not work. Even after logging out and back in it does not work.The  environment variable is a list of directories to search for a given executable.  So you should be adding  to your  (not including the filename).As for the  file you've created, one place to put it would be the  directory which is usually added to your  by the python installation (since that folder contains miscellaneous scripts that you might like available at the command line).
Use  instead of  directly, no need to add to path variable.the -m tells python that pydoc is a pre-built module in python and NOT a script (.py file) sitting in the current working folder.See https://docs.python.org/3/using/cmdline.html for details
I have found in windows 10 powershell...Remember to access pydoc in windows, it's python -m pydoc.  If you want to access info on "file", add the word "file"after. Like this "python -m pydoc file" (*w/o the quotes). What you type after python -m pydoc, will tell it what info you want brought upand/or looking for.  i.e. python -m pydoc raw_input, python -m pydoc string, python -m pydoc file. Remmeber python -m pydoc must be in front of what you are looking for.
put it in any folder that is in your PATH. Example: Alternatively, you can put it anywhere, and then add the folder it is in to windows PATH
If you add .PY to your  environment variable, you don't need the batch script. Just add  to , and you're all set.
As an example for Raw_input, try: python -m pydoc raw_input
I have a simple PowerShell script sitting in my "\python27\" directory called 'pydoc.ps1'.  I can then call pydoc as intended...ie.c:> pydoc raw_inputcode for 'pydoc.psi':
If you do some of your work on IDLE (Python GUI) on Windows, you can use help() inside IDLE and it will produce the same message.example:


Answer URL
https://docs.python.org/3/using/cmdline.html
