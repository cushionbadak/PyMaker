Natural Text
I saw such a use of the modulo operator in a lambda function testing for primality. Can someone explain why the following statement will execute as long as i is greater than x if this isn't to my knowledge an actual boolean statement. It works with division as well if the numerator is greater than the denominator regardless if they are factors or not.NOTE: I have only tried this in Python and Java so if this works in another language I apologize as it is probably not a language specific question. 
Python treats non-zero values as True, so  is the same as . It's just a quick way to test if  is evenly divisible by .
For digit objects python assumes every non-zero value as  and zero as False, thus the condition  will be True until  is not divisible by  , else it would be .There is also such criteria for other objects like lists or strings, if you have a empty list or string python will evaluate it as False and for other cases it would be True.Actually it's Truth value testing :Any object can be tested for truth value, for use in an if or while condition or as operand of the Boolean operations below. The following values are considered false:NoneFalsezero of any numeric type, for example, 0, 0.0, 0j.any empty sequence, for example, '', (), [].any empty mapping, for example, {}.instances of user-defined classes, if the class defines a  or  method, when that method returns the integer zero or bool value False. All other values are considered true â€” so objects of many types are always true.
The statement is a condensed for form of:As long as the modulo is not zero, this  will execute. If a number is evenly divisible by , it will not perform the  block.


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth
