Natural Text
I wanted to learn how to use dictionary comprehension and decided to use one for the previously solved task. I need to assign multiple values to the same key. I was wondering if there's a better way to achieve what I'm trying to do than with the code I've written so far.For example I have this:The first two values should create a key and the remaining two should be added as a value of a key.With the given example I would like to return:Is there an easier way to do it than iterate through the entire data just to find the matching values?
Actually, your dict comprehension is not an efficient way to do this.  It contains not one but two for loops over the same data set, unnecessarily.It's more pythonic to just use a simple for loop here:
Your code is neat but the time complexity is O(n^2), which can be reduced to O(n).In my opinion, using a for loop can make codes more comprehensive
I don't know if it is the best answer but I would do something like that :Or more concisely using :
In this instance, I would use . For your example:This will produce a dict with the keys equal to  and the values consisting of  which should be sufficient for most uses. You can also post-process the grouped list, if need be.As noted in the comments below,  requires sorted data. As such, you will need to sort before grouping and will probably want to cast the iterator to a list:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
