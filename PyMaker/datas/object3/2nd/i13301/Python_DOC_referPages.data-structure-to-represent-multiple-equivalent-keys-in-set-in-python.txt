Natural Text
Currently, I want to find the correct data structure to meet the following requirement.There are multiple arrays with disordered element, for example,After processing those data, the result is,With sorted element in each array and filter the duplicate arrays.Here are my thoughts:Data structure ? - Failed. It seems there is only one array in the build-in Data structure ? - Failed. However, there is no duplicate element in the build-in . I want to know whether there is one data structure like  in C++ within Python?
Transform your list to tuple(thus can be a item of set), then back to list.
Output:
Try this:EDIT:Assuming that  is already sorted. Thanks to @PM2RING to remind me.If not, then add this line aboveThanks again to @PM2RING: one linerDemo
Some of the solutions currently here are destroying ordering.  I'm not sure if that's important to you or not, but here is a version which preserves original ordering:
No Python, doesn't have a built-in multiset; the closest equivalent in the standard modules is collections.Counter, which is a type of dictionary. A Counter may be suitable for your needs, but it's hard to tell without more context.Note that sets do not preserve order of addition. If you need to preserve the initial ordering of the lists, you can do what you want like this:outputIf the number of input lists is fairly small you don't need the set (and the list<->tuple conversions), just test membership in . However, that's not efficient for larger input lists since it performs a linear search on the list.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/array.html
