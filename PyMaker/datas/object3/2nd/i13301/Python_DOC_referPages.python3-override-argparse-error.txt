Natural Text
I'm creating a program as a assignment in my school, I'm all done with it except one thing. We have to make the program exit with different codes depending on how the execution went. In my program I'm processing options using "argparse" and when I use built-in functions like "version" I've managed to override the exit-code, but if I write a option that doesn't exist, then it won't work. It gives me the "unrecognized error"-message, and exits with code "0", I need it to exit with code 1. Is there anyway to do this? Been driving me nuts, have struggled with it for days now...Thanks in advance!/feeloor
Use sys.exit(returnCode) to exit with particular codes. Obviously on linux machines you need to no 8 bit right shift inorder to get the right return code. 
To achieve something like this, inherit from  and reimplement the  method (or perhaps the  method if you like).For example:
From the Python argparse documentationhttps://docs.python.org/3/library/argparse.html#exiting-methodsThey both get a , and pass it on.   adds  and passes it on to .  You can customize both in a subclassed Parser.There are also examples of error catching and redirection the unittest file, .  A problem with using a  wrapper is that the  information is written to , and not incorporated in the .The exit number is available in the , but not the message.One option is to redirect  at the same time as I do that  block.Here's an example of changing the  method and wrapping the call in a try block: lets me replace methods of existing objects.  I don't recommend this in production code, but it is convenient when trying ideas.  I capture the Error (my choice of ValueError is arbitrary), and save the message for later display or testing.Generally the type of error (e.g. TypeError, ValueError, etc) is part of the public API, but the text of error is not.  It can be refined from one Python release to the next without much notification.  So you test for message details at your own risk.
I solved the problem catching SystemExit and determining what error by simply testing and comparing. Thanks for all the help guys!


Answer URL
https://docs.python.org/3/library/argparse.html#exiting-methods
