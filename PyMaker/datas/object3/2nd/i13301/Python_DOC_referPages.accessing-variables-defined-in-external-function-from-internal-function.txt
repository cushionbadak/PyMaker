Natural Text
This question already has an answer here:Python overwriting variables in nested functions                    4 answers                Suppose I have the following function that returns a function:Now, this code doesn't work, because the internal function can't access . I know there are a few ways to get around this; I can make  global:It works, but this has all of the problems associated with making global objects within functionsI can pass mat as a default argument to the internal function;But when I try this out in my real-world example, I run into problems with mutable defaults. Are there other options for giving an internal function access to objects created in its parent function?
For Python 2.7, you can use  to indicate in-place mutation in the nested function. Example -I tested this in Python 3.4 (Sadly, I don't have a Python 2.7 with numpy to test it out , I tested in Python 2.7 with normal lists and it works for normal lists) . Demo -
You can try creating an alias.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-nonlocal_stmt
