Natural Text
I have two lists of integers A and B, same length. List A is an unordered list integers, while list B is an ordered (in ascending order) list of integers with duplicates.A and B are created such that pairwise no couples A[i],B[i] are identical.My goal is the create a dictionary with key values taken from A, with  values from B that pairwise match with A[i], i.e.,For very large datasets, this is taking an extremely long time. Is there another way to come up with the same dictionary in the end, possibly by exploiting the sorted structure of B?
You can use a defaultdict which should be simpler and faster:From the docs:When each key is encountered for the first time, it is not already in the mapping; so an entry is automatically created using the  function which returns an empty list. The  operation then attaches the value to the new list. When keys are encountered again, the look-up proceeds normally (returning the list for that key) and the  operation adds another value to the list. This technique is simpler and faster than an equivalent technique using .What you get:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/collections.html#defaultdict-examples
