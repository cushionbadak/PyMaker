Natural Text
I have an arbitrarily deep set of nested dictionary:and I'd like to basically apply a function to all the integers in the dictionaries, so like , I guess, but for nested dictionaries.So:  would be the sort of goal.I'm stuck as to the best way to perhaps store the layers of keys to then put the modified value back into its correct position.What would the best way/approach to do this be?
Visit all nested values recursively:In some cases it's desired to modify the original dict object (to avoid re-creating it):If you're using Python 3:replace  with replace  with replace  with 
Just to expand on vaultah's answer, if one of your elements can be a list, and you'd like to handle those too:
If you need it to work for both lists and dicts in arbitrary nesting:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.items
