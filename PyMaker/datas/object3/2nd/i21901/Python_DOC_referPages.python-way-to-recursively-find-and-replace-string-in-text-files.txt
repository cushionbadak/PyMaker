Natural Text
I want to recursively search through a directory with subdirectories of text files and replace every occurrence of {$replace} within the files with the contents of a multi line string. How can this be achieved with python?[EDIT]So far all I have is the recursive code using os.walk to get a list of files that are required to be changed.
Check out os.walk:The above solution has flaws, such as the fact that it opens literally every file it finds, or the fact that each file is read entirely into memory (which would be bad if you had a 1GB text file), but it should be a good starting point.You also may want to look into the re module if you want to do a more complex find/replace than looking for a specific string.
os.walk is great. However, it looks like you need to filer file types (which I would suggest if you are going to walk some directory). To do this, you should add .This allows you to do something like:
For those using Python 3.5+ you can now use a glob recursively with the use of  and the  flag.Here's an example replacing  with  for all  files:
To avoid recursing into  directories,  allows you to change the  list inplace. To simplify the text replacement in a file without requiring to read the whole file in memory, you could use  module. And to filter filenames using a file pattern, you could use  module as suggested by @David Sulpy:
Sulpy's answer is good but incomplete. The user would be likely to want to input the parameters through an entry widget, so we might have something more like this (also incomplete, but left as an exercise):
Here's my code (which I think is the same as the above but I'm including it just in case there's something subtly different about it):it runs without error. BUT, the file, in  is unchanged.I've put in print statements, like  but they don't print out either.
How about just using:
Multiple files string changeimport globfor allfiles in glob.glob('*.txt'):


Answer URL
https://docs.python.org/3/library/glob.html
https://docs.python.org/3/library/os.html#os.walk
https://docs.python.org/3/library/fileinput.html
https://docs.python.org/3/library/fnmatch.html#fnmatch.filter
