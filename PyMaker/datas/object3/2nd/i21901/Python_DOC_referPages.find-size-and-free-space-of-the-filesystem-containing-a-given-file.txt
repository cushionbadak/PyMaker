Natural Text
I'm using Python 2.6 on Linux. What is the fastest way:to determine which partition contains a given directory or file?For example, suppose that  is mounted on , and  is mounted on . From the string  I would like to recover the pair .and then, to get usage statistics of the given partition? For example, given  I would like to obtain the size of the partition and the free space available (either in bytes or approximately in megabytes).
If you just need the free space on a device, see the answer using  below.If you also need the device name and mount point associated with the file, you should call an external program to get this information.  will provide all the information you need -- when called as  it prints a line about the partition that contains the file.To give an example:Note that this is rather brittle, since it depends on the exact format of the  output, but I'm not aware of a more robust solution.  (There are a few solutions relying on the  filesystem below that are even less portable than this one.)
This doesn't give the name of the partition, but you can get the filesystem statistics directly using the  Unix system call. To call it from Python, use .The relevant fields in the result, according to POSIX:So to make sense of the values, multiply by :
Some sample pathnames on my computer:PSif on Python â‰¥3.3, there's  which returns a named tuple of  expressed in bytes.
This should make everything you asked:On my box the code above prints:
As of Python 3.3, there an easy and direct way to do this with the standard library:These numbers are in bytes.  See the documentation for more info.
The simplest way to find out it.
For the first point, you can try using  to get a canonical path, check it against  (I'd actually suggest calling , but I can't find a normal way to access it) to find the longest match. (to be sure, you should probably  both the file and the presumed mountpoint to verify that they are in fact on the same device)For the second point, use  to get block size and usage information.(Disclaimer: I have tested none of this, most of what I know came from the coreutils sources)
For the second part of your question, "get usage statistics of the given partition", psutil makes this easy with the disk_usage(path) function. Given a path,  returns a named tuple including total, used, and free space expressed in bytes, plus the percentage usage.Simple example from documentation:Psutil works with Python versions from 2.6 to 3.6 and on Linux, Windows, and OSX among other platforms.

Usually the  directory contains such information in Linux, it is a virtual filesystem. For example,  gives information about current mounted disks; and you can parse it directly. Utilities like ,  all make use of . I haven't used it, but this might help too, if you want a wrapper: http://bitbucket.org/chrismiles/psi/wiki/Home


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.disk_usage
