Natural Text
I'd like to convert a hex triplet to an RGB tuple and then convert a tuple to a hex triplet. 
You can use a look-up table with some slicing and shifts — all relatively fast operations — to create a couple of functions that will work unchanged in both Python 2 and 3:
and
Trying to be pythonic:and
I found a simple way:
with matplotlibmatplotlib uses RGB tuples with values between 0 and 1:both  and  are in a format acceptable by matplotlib.with webcolorshtml uses RGB tuples with values between 0 and 255.you can convert between them with the module webcolors, using the functions , 
A very simplistic approach to convert rgb to hexA simplistic approach to convert Hex to rgb Use a module which provides some these facility: webcolorsFunction doc:hex_to_rgb(hex_value)   Convert a hexadecimal color value to a 3-tuple of integers suitable for use in an rgb() triplet specifying that color.rgb_to_hex(rgb_triplet) :    Convert a 3-tuple of integers, suitable for use in an rgb() color triplet, to a normalized hexadecimal value for that color.

HEX to RGB tupleRGB tuple to HEXNo imports needed!What is this magic?!Since bytes objects are sequences of integers (akin to a tuple), for a  bytes object b, b[0] will be an integer, while b[0:1] will be a bytes  object of length 1...The representation of bytes objects uses the literal format (b'...')  since it is often more useful than e.g. bytes([46, 46, 46]). You can  always convert a bytes object into a list of integers using list(b).Source: https://docs.python.org/3/library/stdtypes.html#bytes-objects

Here you go. I use it to convert color to graphviz color format in  format with .USAGE:


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes-objects
