Natural Text
How do I get the actual filesize on disk in python? (the actual size it takes on the harddrive).

UNIX only:Usage:Edit 1 - also for Windows: https://code.activestate.com/recipes/577972-disk-usage/?in=user-4178764Edit 2 - this is also available in Python 3.3+: https://docs.python.org/3/library/shutil.html#shutil.disk_usage 
Use os.stat(filename).st_size to get the logical size of the file. Use os.statvfs(filename).f_bsize to get the filesystem block size. Then use integer division to compute the correct size on disk, as below:
I'm not certain if this is size on disk, or the logical size:If it's not the droid your looking for, you can round it up by dividing by cluster size (as float), then using ceil, then multiplying.
To get the disk usage for a given file/folder, you can do the following:The function recursively collects byte usage for files nested within a given path, and returns the cumulative use for the entire path.You could also add a  in there if you want the information for each file to print.
Here is the correct way to get a file's size on disk, on platforms where  is set:Other answers that indicate to multiply by  or  are simply incorrect.The Python documentation for  very clearly states:  Number of 512-byte blocks allocated for file. This may be smaller than /512 when the file has holes.Furthermore, the  man page says the same thing:


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.disk_usage
https://docs.python.org/3/library/os.html#os.stat_result.st_blocks
https://docs.python.org/3/library/os.html#os.statvfs
