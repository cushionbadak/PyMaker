Natural Text
Google won't let me search |= so I'm having trouble finding relevant documentation. Anybody know?
In Python, and many other programming languages,  is the bitwise-OR operation.   is to  as  is to , i.e. a combination of operation and asignment. is short for 
When used with sets it performs union operation.
This is just an OR operation between the current variable and the other one. Being  and , see the output graphically:For example:
 performs an inplace, bitwise OR operation and also performs union operation of Python sets.  For example, the union of two sets  and  share the following equivalent expressions:where the final value of  is equivalent either by:an assigned OR operationan inplace OR operationan inplace OR operation via special methodSee also section B.8 of Dive in Python 3 on special methods of Python operators.Here are some examples comparing OR () and the inplace OR () applied to sets:Here is an example of overloading the  method to iterate iterables in a  abstract base class.  See it also sub-classed and applied in Raymond Hettinger's OrderedSet recipe (see lines 3 and 10 respectively).  Here is a thread on Python-ideas on why to use  to update a set.
It performs a binary bitwise OR of the left-hand and right-hand sides of the assignment, then stores the result in the left-hand variable.http://docs.python.org/reference/expressions.html#binary-bitwise-operations
It's bitwise or.Let's say we have , picture 32 and 10 is binary.Now because | is or, do a bitwise or on the two numbersi.e 1  or 0 -->  1, 0 or 0 --> 0. Continue this down the chainNow change the binary into a decimal, 10 1010 = 42.For |=, think of the known examples, . It means  therefore if we have , it means .
In Python,|=(ior) works like union operation.like if x=5 and x|=5 then both the value will first convert in binary value then the union operation will perform and we get the answer 5.
To give a use-case (after spending time with the other answers):See also the caveats in this answer


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__ior__
