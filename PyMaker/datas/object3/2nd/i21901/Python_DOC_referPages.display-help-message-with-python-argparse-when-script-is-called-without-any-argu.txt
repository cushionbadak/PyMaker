Natural Text
This might be a simple one. Assume I have a program that uses argparse to process command line arguments/options. The following will print the 'help' message:or:But, if I run the script without any arguments whatsoever, it doesn't do anything. What I want it to do is to display the usage message when it is called with no arguments. How is that done?
This answer comes from Steven Bethard on Google groups. I'm reposting it here to make it easier for people without a Google account to access.You can override the default behavior of the  method:Note that the above solution will print the help message whenever the method is triggered. For example,  will print the help messagetoo if  isn't a valid option.If you want to print the help message only if no arguments are supplied on thecommand line, then perhaps this is still the easiest way:Note that  prints to stdout by default. As init_js suggests, use  to print to stderr.
Instead of writing a class, a try/except can be used insteadThe upside is that the workflow is clearer and you don't need a stub class. The downside is that the first 'usage' line is printed twice.This will need at least one mandatory argument. With no mandatory arguments, providing zero args on the commandline is valid.
With argparse you could do:
If you have arguments that must be specified for the script to run - use the required parameter for ArgumentParser as shown below:-parse_args() will report an error if the script is run without any arguments.
If you associate default functions for (sub)parsers, as is mentioned under , you can simply add it as the default action:Add the try-except if you raise exceptions due to missing positional arguments.
Throwing my version into the pile here:You may notice the  - I mainly do it like that because it saves an import line if that was the only reason for  in the file... 
The cleanest solution will be to manually pass default argument if none were given on the command line:Complete example:This will print complete help (not short usage) if called w/o arguments.
There are a pair of one-liners with  (a very common Python's idiom to refer the command line arguments, being  the script's name) that can do the job.The first one is self-explanatory, clean and pythonic:The second one is a little hackier. Combining the previously evaluated fact that an empty list is  with the  and  equivalences you get this:Maybe too many brackets, but pretty clear if a previous argument selection was made.
The  method also accept a  (returncode), and a  value (include a trailing newline yourself!).an opinionated example,:)Example calls:
Set your positional arguments with nargs, and check if positional args are empty.Reference Python nargs
Here is another way to do it, if you need something flexible where you want to display help if specific params are passed, none at all or more than 1 conflicting arg:Cheers!


Answer URL
https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_subparsers
