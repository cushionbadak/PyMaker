Natural Text
i'm a programming student and my teacher is starting with C to teach us the programming paradigms, he said it's ok if i deliver my homework in python(it's easier and faster for the homeworks). And i would like to have my code to be as close as posible as in plain C.Question isHow do i declare data types for variables in python like you do in C. ex:I know i can do this in pythonBut that seems a lot of work and it misses the point of python being easier/faster than C.So, whats the shorttest way to do this?P.S. i know you dont have to declare the data type in python most of the time, but still i would like to do it so my code looks as much possible like classmates'.
There is no way to declare variables in Python, since neither "declaration" nor "variables" in the C sense exist. This will bind the three names to the same object:
Python isn't necessarily easier/faster than C, though it's possible that it's simpler  ;)To clarify another statement you made, "you don't have to declare the data type" - it should be restated that you can't declare the data type.  When you assign a value to a variable, the type of the value becomes the type of the variable.  It's a subtle difference, but different nonetheless.
I'm surprised no one has pointed out that you actually can do this:In a lot of cases it is meaningless to type a variable, as it can be retyped at any time.  However in the above example it could be useful.  There are other type functions like this such as: , ,  and 
From python 3.6, you can declare types of variables and funtions, like this :or for a functionThis example from this post: How to Use Static Type Checking in Python 3.6 is more explicitYou can find all the information in oficial domentation for typing python: typing â€” Support for type hints
Everything in Python is an object, and that includes classes, class instances, code in functions, libraries of functions called modules, as well as data values like integers, floating-point numbers, strings, or containers like lists and dictionaries. It even includes namespaces which are dictionary-like (or mapping) containers which are used to keep track of the associations between identifier names (character string objects) and to the objects which currently exist. An object can even have multiple names if two or more identifiers become associated with the same object.Associating an identifier with an object is called "binding a name to the object". That's the closest thing to a variable declaration there is in Python. Names can be associated with different objects at different times, so it makes no sense to declare what type of data you're going to attach one to -- you just do it. Often it's done in one line or block of code which specifies both the name and a definition of the object's value causing it to be created, like  or a function starting with a .How this helps.
But strong types and variable definitions are actually there to make development easier. If you haven't thought these things through in advance you're not designing and developing code but merely hacking.Loose types simply shift the complexity from "design/hack" time to run time.


Answer URL
https://docs.python.org/3/library/typing.html
