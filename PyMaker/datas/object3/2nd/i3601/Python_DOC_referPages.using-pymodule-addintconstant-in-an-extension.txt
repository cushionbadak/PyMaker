Natural Text
I have seen Adding symbolic constants with hex values to Python extension module and I am trying to reproduce this effect:Setup Script:Everything builds as expected, however I cannot use  in my extension:Returns:I thought of returning  like so:But that returns:LINK : fatal error LNK1104: cannot open file 'build\lib.win32-3.6\WinUtils.cp36-win32.pyd'  error: command 'C:\Program Files (x86)\Microsoft Visual Studio\2017\WDExpress\VC\Tools\MSVC\14.14.26428\bin\HostX86\x86\link.exe' failed with exit status 1104How can I add the  value to my extension (so that I can run )?Edit:As mentioned in the answer below closing everything and trying again builds the extension successfully, however using  still crashes.
 is correct (assuming that  is a (C) ).That, combined with the linker error at the end (and with the fact that you're writing code then testing, and so on ...) tells me that the linker is not able to write the new .pyd file (that contains the latest changes - including  variable), because it's in use by a previously started python.exe process that imported your module.Close every running interpreter that imported your module (to "unlock" WinUtils.cp36-win32.pyd)Build (this time, the linker will be able to overwrite the file)Test (run your Python code)Note: you could check the function return value ([Python]: int PyModule_AddIntConstant(PyObject *module, const char *name, long value)).@EDIT0 (regarding the 2nd problem):As I pecified in my one of my comments, use  (as according to [Python]: PyObject* PyModule_New(const char *name), you're getting Undefined Behavior):


Answer URL
https://docs.python.org/3/c-api/module.html#c.PyModule_New
