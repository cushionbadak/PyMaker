Natural Text
I would like to pick  random elements from  that are not present in , if there are  such elements. If there are not, only those that are different should be returned or an empty set in the worst case.Example 1:input: , , example possible output:  (other possible outputs: , , , , )Example 2:input: , , single possible output:  since there are only 4 choices and number of elements to choose is 5
Create a set of unique values and return either  random elements from it, or if  is larger than the population return all elements:In action:
In two lines (we could make it one, but it's a little ugly), using sets and :Original solution (preserving duplicates in , as well as order, which doesn't really matter for random samples):If you don't care about preserving duplicates, then set difference is indeed the way to go. Checking the timing between the two implementations with the following:we get:set difference: list comprehension: list comprehension with set pre-defined: That's a factor of 1000 faster for sets! Not much of a difference between  and the list comprehension though if we have already built the set, but what difference is there appears to be significant (those standard deviations are tiny!).


Answer URL
https://docs.python.org/3/library/random.html#random.sample
