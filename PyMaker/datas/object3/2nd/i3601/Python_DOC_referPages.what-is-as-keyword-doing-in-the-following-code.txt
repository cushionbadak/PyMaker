Natural Text
I am learning 'Exceptions' in Python.Consider the following code :If I run the above code, iefancy_divide()    it prints out .But if I modify the code :It prints out 'division by zero' on calling the function .Why this difference?I thought that the 'as' keyword is just to rename objects.
It says that for scope following  there will be a variable called  that was created from .In your case the difference is that in example one you are printing out the class Exception, in example two you are printing an object of type Exception.I often see and use it when opening a file:In python documentation it has the following example:Notice that the Code doesn't do anything with the class .  Because they are in that block they know that it's a .   If they wanted to do something with the error object that was thrown then they would have to rewrite the code with :
On the last line of your first  function, you printed the  class itself, not an instance of the  class. On the third line of your updated code, where you used the  keyword, you were trying to catch an instance of the  class or its subclasses and assign it to the variable  if you got an error. Note: an instance is different from the actual class (well, I hope you already know this)You can see this when you compare the contents of  to :


Answer URL
https://docs.python.org/3/tutorial/errors.html#raising-exceptions
