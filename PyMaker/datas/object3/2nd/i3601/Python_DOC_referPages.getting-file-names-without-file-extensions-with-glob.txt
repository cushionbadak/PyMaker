Natural Text
I'm searching for .txt files onlybut I'd like  without the file extensionsIs there a regex pattern that I can use with  to exclude the file extensions from the output, or do I have to use a list comprehension on ?
There is no way to do that with , You need to take the list given and then create a new one to store the values without the extension: splits the file names into file names and extensions.  The  just returns the filenames.
Since you’re trying to split off a filename extension, not split an arbitrary string, it makes more sense to use  (or the  module). While it’s true that the it makes no practical difference on the only platforms that currently matter (Windows and *nix), it’s still conceptually clearer what you’re doing. (And if you later start using path-like objects instead of strings, it will continue to work unchanged, to boot.)So:Meanwhile, if this really offends you for some reason, what  does under the covers is just calling  to turn your glob expression into a regular expression and then applying that to all of the filenames. So, you can replace it by just replacing the regex yourself and using capture groups:This way, you’re not doing a listcomp on top of the one that’s already in ; you’re doing one instead of the one that’s already in . I’m not sure if that’s a useful win or not, but since you seem to be interested in eliminating a listcomp…
Use index slicing:
Another way using :You could do as a list-comprehension:
Use 


Answer URL
https://docs.python.org/3/library/os.path.html
https://docs.python.org/3/library/pathlib.html
https://docs.python.org/3/library/stdtypes.html#str.rsplit
