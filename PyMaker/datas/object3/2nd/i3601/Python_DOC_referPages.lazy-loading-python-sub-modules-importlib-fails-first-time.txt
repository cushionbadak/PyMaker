Natural Text
I'm experimenting with the idea of lazy-loading of symbols in a package's  by subclassing  and defining properties for each of the submodules. Accessing the symbol in the package namespace would trigger the import. I've got it working, but for some reason, my call to  fails on the first attempt and I don't understand why.I have a minimal example. Assume a package like this:this is the The  call always fails with an . However, the second call always succeeds. In other words, when I do  I always get , but it always prints .Note, the behavior is dependent on python version. The call to  works fine the first time on python2.7.
Here is the difference between python2 vs python3.In python3, the  call ultimately ends upherewhich is a call to . Since you didn't define a  foryour property, you get the .In python2, the  call ends upherewhich is a call to the builtin  which presumably operatesdirectly on the module .The only question is how in the world it ever works in python3. Iwould have thought it would always resulted in a .Your code works fine as long as you make a :It actually turns out that the  can do anything at all,including  since you are unconditionally making the call to.I would consider using the  above and changing the getter to:


Answer URL
https://docs.python.org/3/library/logging.html#logging.Logger.exception
