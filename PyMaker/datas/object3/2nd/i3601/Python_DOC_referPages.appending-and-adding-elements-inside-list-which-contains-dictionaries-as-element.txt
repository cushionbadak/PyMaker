Natural Text
There is a list which contains dictionaries as its elements. Each dictionary as multiple keys. I need to add values of other keys on the base of given key values. for example, There is a list A:I am trying to add the values of these elements on the base of 'key' value. I need the output like:I tried using itertools functions groupby and map. But NOT able to get the result exactly as expected. is there any easy way of doing this?
As much as I love , I don't think is a good idea here. Your elements alternate  and , but  expects the groups to be contiguous, which means it's only going to work if you first call , at which point you're throwing away all the simplicity and performance benefits of doing things iteratively.Meanwhile, without sorting, it'll be a lot easier to build up a dict, keyed off the key values, than a list that you have to keep searching for each key. For example:Now,  looks like this:And if you really need the list at the end, that's easy:Alternatively, if the dict structure turns out to be more useful than the list, just use that. (Use  instead of a , or do  at the end, if you don't want s on later lookups to turn into default values, of course.)
For a pure Python solution,  is likely the best option.If you are willing to use a 3rd party library, this is possible via Pandas:Then to produce your dictionary result:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
