Natural Text
How would you 1) insert 1's between any two adjacent 5's? and then 2) insert a value into the second list at the same index as the 1 that was inserted into the first list?For example, would becomeAnd,would become(Nval up above = the added value)I'm a beginner so help is greatly appreciated :O)
You'll want to look at pairs of consecutive values. To do that, let's pair the list with the last item cut off () with again the list, but with the first item cut off (). (The slice notation used here is being introduced in the official Python tutorial and explained in this answer.)(The  function turns a pair of sequences into a sequence of pairs and is introduced here in the tutorial and documented here.)Let's see which these pairs are :The feature used here is a list comprehension, a way of writing a (new) list by giving a rule to construct it from an existing iterable.What are the indices of these pairs? Let's number them with :This is another list comprehension, this time with a condition for the elements (a "predicate"). Note that  returns pairs of numbers and values (which are our original pairs), and that we use implicit unpacking to get them into the loop variables  and  respectively. takes the index after which the new value shall be inserted. Thus to find the positions where to insert into the original list (and into list2), we need to add  to the pair indices:(We insert in reverse order, so as to not move the pairs between which we have yet to insert.)
You can recover the insertion indices with a single list comprehension. You are looking for indices  such that .You then need to insert in decreasing order of indices.
You can use :Output:
Gives me as output:And to finish off:
One-line solution based on  and :


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
