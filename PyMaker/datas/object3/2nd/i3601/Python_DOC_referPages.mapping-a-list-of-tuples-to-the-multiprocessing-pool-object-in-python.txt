Natural Text
I am having problems with code in the following format and assume that the error is to do with how I am trying to access the elements in each tuple.The exact error is:1) So when map function maps the tuples to function; I assume that these elements should be called as if they are ordinary tuples? IE with one index?2) The element chunks that I am passing to the function run: is a list of tuples:chunks=[(0,100000),(100000,200000)....] as created by the generator chunker.Thank you.
The  method takes an iterable of argument. Each element of the iterable is passed to one instance of . Since your iterable is the tuple , this is going to run two tasks, calling  in one task, and  in another.What I think you want to do is to run one task for each  in , calling .So, first, you need an iterable that yields  once per chunk, e.g., .But this still isn't going to work, because it's going to call  with a single argument, the 2-tuple , not with two arguments. You can fix this by rewriting or wrapping  to take a single 2-tuple instead of two separate arguments, or you can just use  instead of , which does that wrapping for you.But this still isn't going to work. You're trying to pass an open file object between processes, and  can't do that. Since you're using the  method, you can sometimes get away with inheriting the file object from the parent rather than passing it, but the details are complicated, and you really need to read the Programming guidelines for  and understand how file descriptor inheritance works on Unix.Since you want each child to have its own independent copy of the file object so they can all  around in it, the easiest solution is to just pass the filename and have them  it themselves:Meanwhile, now that we're sure we're not relying on  behavior, it's probably a good idea to write the code to work with any start method. This means putting the top-level code into a  block. And, while we're at it, let's make sure we close the file once we're done with it:You may still have other errors in your code, but I think this exhausts the  ones.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.starmap
https://docs.python.org/3/library/multiprocessing.html#programming-guidelines
