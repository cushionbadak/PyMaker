Natural Text
I'm trying to work with the website of Central Bank of Brazil. My thing is getting the data from the notification section when is it related to the "swap" (central bank selling US$ in the local market to control the depreciation of the national money).I've been having a lot of trouble dealing with the API and encoding. This is the part of the site where we can find all the reports: http://www.bcb.gov.br/pre/normativos/busca/buscaNormativo.asp?tema=&startRow=0&refinadorTipo=&refinadorRevogado=&tipo=P&tipoDocumento=0&numero=&conteudo=&dataInicioBusca=13%2F6%2F2018&dataFimBusca=16%2F6%2F2018When I try to get the html from the main page I got this: Divulga as condi\u00e7\u00f5es de oferta p\u00fablica para a realiza\u00e7\u00e3o de opera\u00e7\u00f5es de swap but it should be:Divulga as condições de oferta pública para a realização de operações de swap.I've tried this fallowing code:#Does anyone understand what is going on?
The character  is U+00e7, and  is U+00F5, and so on. These are just two different representations of the same string. So, while I'm just taking a guess at your problem given incomplete information, I think it's an educated guess…If you  the string, you will see the human-readable version, with  and so on (unless your Python and console aren't configured to talk to each other properly—but if you're using Python 3.6 or later and a reasonable modern version of Linux, macOS, or Windows, this is unlikely to be a problem).But if you just evaluate the string at the interactive interpreter, you get the programmer-friendly representation, rather than the human-friendly one.For example:The latter is nice because you can copy and paste it into your source code as a string literal, and because it'll work even on a badly-configured terminal, but it's not so nice for reading.The technical difference is that  calls , while evaluating a string at the interactive interpreter without  calls .Meanwhile: most websites specify their encoding (in at least one of three different ways…), in which case  can automatically decode things correctly if you use  instead of :The only reason to do anything other than this is if the website is broken and confuses .If you just use , BeautifulSoup uses a library called  to heuristically try to guess the right encoding.If you use  and , you have to know the right encoding so you can pass it in. This is useful as a last resort, but shouldn't be the first thing you turn to.I suspect  and  don't actually do the same thing. They certainly shouldn't. More likely, the former gave you a different, incorrect encoding, but you just didn't notice it was different. Maybe something like this:That may not look much different if you don't know the 100000-character Unicode table by heart, in hex, but if you  it, you can see that it's quite different:


Answer URL
https://docs.python.org/3/library/functions.html#func-str
https://docs.python.org/3/library/functions.html#repr
