Natural Text
I have a set of data similar to this:I am looking for an efficient way to find the lowest value of  for each matching  in the list of dictionaries.For example, my desired result for this example would be:I have tried to apply the same approach as similar questions that merge dictionaries based on matching key values, i'm just having trouble merging based on values.
You can use  to construct a dictionary to list mapping.Then use a dictionary comprehension to calculate the minimum of each list.
Here's one way using  and . The idea is to sort by  and then drop duplicates by .If you don't have access to the  library, the logic is identical to the  recipe found in the  docs.
Using a simple iteration.Demo:Output:
You can use itertools.groupby():EDITThe sorted is necessary as @jpp suggested for this to work as it will otherwise produce duplicate keys if the data looks like this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
