Natural Text
I am trying to use keys and certificate generated using java  in python server and java client. I have created key & keystore, exported certificate, added certificate to truststore, converted keystore to standard pkcs format and then extracted key and certificate from pkcs to use in python server. (first three steps from here and last three steps from here). This question is somewhat follow up of this question and detailed steps for generating key and certificate can be found in that question.My SSL server looks like thisserver.pySSL Client looks like this:Client4Py.javaThe output on server's console after first running server and then the client is as follows:You can see on line 20, there is . Code starts working after removing all SSL stuffs When I comment call to , replace  with  and comment  and , the code starts working. It creates new process from  as desired and ends printing  on console. Here is the modified non SSL server:
I dont know whether I understood the exact reason, but I am stating it here.Looking at following stacktrace lines:it seems that  module's  method serializes the parameters passed to it for passing them to new process. And it further seems that  objects cannot be serialized. However, it seems that  objects can be serialized. This issue states the same and thats why the  based server works. However, I dont get why is this so ( is not serializable but  objects can be serialized). I mean is there any method that is implemented by  objects which are not implemented by . Also note that the error occurs at , that is in  class, but not in  class. I will like if someone confirms above reason (that is  objects are not serializable and  objects are serializable), explains exactly why  is this the case and provides solution for using  with  module.WorkaroundI ended up forking new process using . (Examples of  can be found here). Its supported on linux only. So, I installed python on cygwin and then used it.


Answer URL
https://docs.python.org/3/library/ssl.html#ssl-sockets
https://docs.python.org/3/library/socket.html#socket-objects
https://docs.python.org/3/library/os.html#os.fork
