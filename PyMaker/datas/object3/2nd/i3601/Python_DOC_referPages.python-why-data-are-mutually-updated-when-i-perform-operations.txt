Natural Text
I am new to Python. I wanted to try some simple function operations on dataframe but I encountered the following problem. My code is:Why did my 'PercChange' column change as well? I already created a new variable for the operations separately. How can I avoid not changing my 'PercChange' column? Thanks a lot.[Solved]So it is the problem of the data structure. In Python, '=' assignment doesn't copy value from one to another, but instead it name the same sequence with different name so changing one also changes the other. Thanks for the help.
When you assign a value to a variable in Python, it doesn't copy the value; the variable just becomes a new name for the same value. So,  and  are just different names for the exact same . The same way a change to "Star Wars V" affects "The Empire Strikes Back" or a change to "Former President George W. Bush" affects "President Bush 42", a change to  affects .And calling a function is just assignment again: the parameter inside the function becomes another name for the same value as the argument in the function call, so  is the same object as  and .If you want to make  into a name for a copy of the same data as , instead of a name for the same object, you have to ask for that copy explicitly.With Pandas, this is usually just the  method:But Pandas (and the NumPy library that underlies it) allows for all kinds of complicated things, so there are other complicated ways to copy things.More generally, Python has the  module, with  and  functions that can make shallow or deep copies of almost anything, not just Pandas Series.But you're also halfway to a different solution. Your  function does a  at the end, and your caller does . If  returned a different object,  would now be a name for that different object. But, because it instead just returns its parameter, after modifying it in-place, all that  is doing is re-asserting  as a name for the same value it's already a name for.So, another way to fix things is to do the copying inside :â€¦ or to build up a whole new array or Series and return that:


Answer URL
https://docs.python.org/3/library/copy.html
