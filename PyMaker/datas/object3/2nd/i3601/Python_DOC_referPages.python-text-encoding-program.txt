Natural Text
when inputting a text into the definition run_length_encoder the repititive letters should be compressed for example,when aaabbac is inputted the output should be  ['a','a',3,'b','b',2,'a','c']but for my code isn't compressing.for example when abbbbaa is inputed,the output is supposed to be this ['a', 'b', 'b', 4, 'a', 'a', 2] instead i am getting this ['a', 'b', 'b', 'b', 'b', 4, 'a', 'a', '2']
you could also do something like:
Itertools loves you and wants you to be happy:
Your logic needs fixing. Fixed edit to handle even and odd end cases.Tested on strings:string = "aaabbaadddaad" OUTPUT: ['a', 3, 'b', 2, 'a', 2, 'd', 3, 'a', 2, 'd', 1]string = "aaabbaaddd" OUTPUT: ['a', 3, 'b', 2, 'a', 2, 'd', 3]string = "aabccdd" OUTPUT: ['a', 2, 'b', 1, 'c', 2, 'd', 2]
A nice way to do this would be to use list comprehensions along with . This can basically be achieved in the shortest number of lines of code as follows:This results in:You could use a function as follows:Explanation: groups each character and the resultant grouper  is an iterable where we add  to all each iteration to retrieve the count of characters in the iterable. This returns tuples of  flattens the list of tuples and converts them into a list. So  becomes  which is the required output.
If you want it simple and clean, you can do as explained in this answer with little tweaking for list outputTest 


Answer URL
https://docs.python.org/3/library/itertools.html
