Natural Text
I wrote a Machine Learning script which I want to control from the command line. I already parsed all the options like for example --optimize 400, to perform 400 iterations over a RandomizedSearchCV grid. However, I'm struggeling with one thing: I want to choose my estimator, for example GradientBoostingRegressor() or Lasso(), from the command line. I tried two things:But when I try to open the program with:I get errors, because of the "()", and also without the (), because it gets interpreted as a string.Another thing I tried is: But now I dont know how to access the estimator and also it seems like  when I call the programm like this:the namespace "args" holds SVR=None and GBR=GradientBoostingRegressor(default_GBR_options), which is exactly the opposite to what I want.Ideally I could choose between -SVR and -GBR in the command line and the parser would pass it just like my other options and I could initialize an object like this: I hope anybody has some information on how to do that. Thank you very much!
Arguments are always just strings. You need to parse the string to get a function which you can call.(This replaces a previous answer that used the  parameter to map a string argument to a function. I misunderstood how  and  interact.)
Maybe you could separate input from functionality.First collect the input from the user, then according to the input run the functionality that the user requested.For example, if the user ran:you would do:
While @chepner's use of  is a nice use of , the approach can be difficult to get right and understand.As written it raises an error in the  method:It's testing that the  parameter is either an item in the , or that it's a valid function.  I'm not sure why it's raising this error.works better in .  But there's further level of difficulty -  is the , strings.  But  returns a class, producing an error like:To avoid those difficulties, I'd suggest separating the argument to class mapping. This should be easier to understand and to expand:samples: parameterYou could use  to choose between 2 classes, a  and a :but that can't be generalized to more.  `nargs='?' provides a 3 way choice - default, const, and user provided.  But there's still the problem of converting the commandline string to a class object.Subparsers, https://docs.python.org/3/library/argparse.html#sub-commands, shows how  can be used to set functions or classes.  But to use this you have to define a subparser for each choice.In general it's better to start with the simple  approach, accepting strings and string choices, and doing the mapping after.  Using more  features can come later. error error has something to do with how Python views the  method.  Even though it looks like a method, it's somehow seeing the  rather than the method:That could be viewed as a basic python bug, or a argparse bug, but a user defined function or lambda is an easy work around.


Answer URL
https://docs.python.org/3/library/argparse.html#sub-commands
