Natural Text
I've got a class that has replaced  to hide extra unneeded data. I've made the rest of my code backwards compatible by setting  to either  or  depending on the python version, and I can then call , but it doesn't seem to work well with my class.It'll be easier to explain with an example:If I do , then it correctly returns If I add  to the class, then it also works when doing However, no matter what I try, doing  defaults to the standard dict iterating, and returns I've tried a couple of trace functions but they don't go deep enough to figure out what's going on.
The  method reaches straight into the internal data structures of the  implementation. You passed in a subclass of  so those same data structures are there for it to access. You can't override this behaviour.  Not that  would ever use ; the latter produces keys only, not key-value pairs!You should instead define  differently; given a  boolean variable that is  for Python 2,  otherwise:Now  is translated to  or , as needed, and the correct method is always called.Next, to extend dictionary behaviour, instead of subclassing , I'd subclass  (*):This implements all the same methods that  provides, except for  and the  class method.You could instead inherit from , which adds those two remaining methods:Only an alternate  implementation is needed in that case.In either case, you still can't use  on these objects, because that method can only work with actual  objects.(*)  is the Python 2 location of that class, the official Python 3 location is  but there are aliases in place to support Python 2-compatible code.


Answer URL
https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes
https://docs.python.org/3/library/collections.html#collections.UserDict
