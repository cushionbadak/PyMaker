Natural Text
I have Python 2.7 and 3.3 installed on Windows, and Python 2.7 and 3.2mu installed on Linux.How would I write a Python script that is able to be used on both Windows and Linux, using version 2.X or 3.X?I'm looking for maybe a few lines of code that will check to see what the current operating system is, and use Python 3.X in whatever directory it's in for the rest of the script.I was thinking somewhere along the lines of:Does code like this exist, or will I have to make a different script for both operating systems?
On UNIX systems, Python commands should be named as prescribed in PEP-394, so using a shebang is the best solution:or As appropriate, at the top of your file.Under Windows, it's a little less well defined. Since version 3.3, a launcher should be included with Python, as described in PEP-397. This, however, doesn't help older versions.If you want to be sure under Windows, many people use py2exe, Cx_Freeze, or other similar tools to produce executables that include the interpreter. This may be a valid solution in some cases.A good idea is to add a check to your code (checking the version of the interpreter), and give a clear, easy-to-understand message that they are using the wrong version of Python, perhaps with a link on how to solve that issue. This won't magically solve anything, but it means that if all else fails, the user gets a chance to understand what is going wrong.
You can identify the OS in which the script is running using os module or sys module. Both shows different results, but similar:


Answer URL
