Natural Text
This question already has an answer here:Why is python ordering my dictionary like so? [duplicate]                    3 answers                In what order does python display dictionary keys? [duplicate]                    4 answers                I was wondering in what order does the dictionary in python store key : value pairs. I wrote the following in my python shell but I can't figure out what is the reason for the order it is storing the key : value pairs.I also tried the same thing with different values for the same keys. But the order remained the same. Adding one more key : value pair gives another result that just can't make out. Here it is :
The short answer is: in an implementation-defined order. You can't rely and shouldn't expect any particular order, and it can change after changing the dictionary in a supposedly-irrelevant manner.Although not directly, it's somehow explained in Dictionary view objects:Keys and values are iterated over in an arbitrary order which is non-random, varies across Python implementations, and depends on the dictionaryâ€™s history of insertions and deletions. If keys, values and items views are iterated over with no intervening modifications to the dictionary, the order of items will directly correspond.
Elements are stored based on the hash of their key.  The documentation states that a key must be a hashable type.
Dictionaries do not have a predictable order as their keys are stored by a hash.  If you need order, use a  or .
It's a hash table. The keys are partially ordered by their hash value , but the actual traversal order of the dictionary can depend on the order that elements were inserted, the number of elements in the dictionary, and possibly other factors. You should never count on it being anything in particular.


Answer URL
