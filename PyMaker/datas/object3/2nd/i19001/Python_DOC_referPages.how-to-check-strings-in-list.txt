Natural Text
I have a string:and a file in csv style that I have opened and converted to list:I want to check if the string exist in the first position in every list. But, if I do this:it will give me result  instead of just . I don't know why I can't use if  as it will produce no result. Have any idea what to do?EDIT:So actually my code looks like this:and it doesn't work!
Try running this through an interactive visualizer, like this one. When you can't do that for some reason, at least try experimenting in the normal interactive interpreter, or printing out intermediate results in your program.When  is "sky high", and  is , that means  is , so  is .That's why (if you fix it to use  instead of ) it will print both  and .Try this at the interactive interpreter (or the visualizer):Meanwhile, you say "I don't know why I can't use  as it will produce no result."But if you use  it won't produce no result; it will produce .Try this at the interactive interpreter (or in the online visualizer):So, you must have a bug in some other part of the code. Show us the version that you claim isn't working, and we can find the bug.Most likely, the problem with your real code is that  (or, actually, ) is not actually , but something with extra characters in it:Let's say  looked like this:This would make  be  (with a space), not .Or:Then  would be  (with extra quotes), not .You could show us an extract of that CSV file, or have your code print out each row and show us what it prints; otherwise, we're just guessing.You can try to fix things manually. For example, to handle both of the above cases, instead of this:… you'd do:If you don't understand list comprehensions, this line:… is a shortcut for:You already have the  to remove the trailing  and the  to split into two columns. But instead of just using the columns as-is, on each one, I call  to remove any extra whitespace at the edges (which turns out not to matter in your specific case, but it is a common problem in CSVs), and then call  on the result to remove any matched pairs of quotes, and use that for the column value.As you can see, that's tedious and complicated.And there are still plenty of common cases it won't handle.This is exactly why you usually want to use the  module instead of trying to parse CSV files yourself:Now,  will be .If your CSV files aren't quite "standard"-enough for CSV to handle out-of-the-box, you can give a dialect object, or just some format parameters, to the , and it's still usually easier than trying to build it from scratch yourself.
You are asking it if the string  is in the first string in each row, not if the string is in the row. This code should do what you want:This only outputs .
For your example, you would need to use . Then it should work with . checks if a string is in another string, and "sky high and high" contains "sky high", so that's correct.You could also use list comprehension for something as simple as this, if you like one-liners:


Answer URL
