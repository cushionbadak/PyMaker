Natural Text
This question already has an answer here:Is there a logical difference between 'not ==' and '!= (without is)                    3 answers                I wondered what'd be the difference between these two pieces of code:
The first uses the object’s  method, while the second uses the object’s  method and negates its result.While both methods should pair their result so  implies  this is actually not required or enforced.There are no implied relationships among the comparison operators. The truth of  does not imply that  is false. Accordingly, when defining , one should also define  so that the operators will behave as expected.In your case, where  is a string (I guess?) it does not make a real difference. The built-in types all ensure the inverse relationship between  and . So the only difference is really how understandable it is when looking at the code. And I personally prefer the more concise first version.


Answer URL
