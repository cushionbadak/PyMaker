Natural Text
Defining a parameterless exception :When raised, is there any difference between :andWhen trying, I could find none - Is it simply an overloaded syntax?
The short answer is that both  and  do the same thing.  This first form auto instantiates your exception.The relevant section from the docs says, "raise evaluates the first expression as the exception object. It must be either a subclass or an instance of BaseException. If it is a class, the exception instance will be obtained when needed by instantiating the class with no arguments."That said, even though the semantics are the same,  the first form is microscopically faster, and the second form is more flexible (because you can pass it arguments if needed).The usual style that most people use in Python (i.e. in the standard library, in popular applications, and in many books) is to use  when there are no arguments.  People only instantiate the exception directly when there some arguments need to be passed.  For example:  .
Go look at the raise keyword in the docs 6.9. The raise statementIt is creating an instance of myException
Yep, there is a difference between  and  is a class whereas  is a method. This is the reason the  and The sole purpose of  is to raise the exception, when we use , class will be called which in turn runs the constructor   when we use , the method  is directly called.Note: 


Answer URL
