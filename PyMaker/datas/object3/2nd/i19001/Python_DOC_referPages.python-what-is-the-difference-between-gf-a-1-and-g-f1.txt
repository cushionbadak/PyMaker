Natural Text

In Python2, declares  to be a new-style class (as opposed to a classic class).In Python3, all classes are new-style, so the  can be omitted there.Certain Python features, such as properties and super, only work with new-style classes. New-style classes also have certain attributes and methods, like , that classic classes lack.Classic classes are present only for backwards compatibility. All classes you define should be new-style classes.makes  a subclass of , whereasmakes  an instance of .Note that PEP8 Style Guide recommends that classes be named with CapWords, while instances be given lowercase names. (So  should be ...)Be sure to also be aware of the difference between class attributes and instance attributes. The definitiongives instances of  instance attributes. The assignments , etc. are executed only when the  method is called, which happens when an instance of  is created. For example, when you sayNotice that these instance attributes can be inspected in :They are not in . Keys in  are class attributes. They are shared by all instances of . Instance attributes are specific to each instance, and can differ between instances.Note that since  is an instance of ,  can access 's class attributes as well a its own instance attributes. For instance,That's the basics, though there is a lot more that could be said about Python attribute lookup rules. See Chaturvedi for a more complete description of these rules.Now when you sayyou are defining ,  and  to be class attributes of . Notice that these class attributes can be inspected in :
First,  is not a subclass of , it's an instance of .Try printing out the types:The exact details may be different in different Python versions, but the point is that  is a class, an object of type , while  is an instance, an object of type .Second,  sets class attributes named , , and . In any instance of type , these will be hidden by the instance variables of the same names. But you can access them directly off the class. (If you don't understand class attributes… you don't want them.)Again, trying to print things out may help:Finally, for your side question:is the word 'object' meaningful?Yes. It's the name of the base class for all new-style classes in Python 2.x. So, doing  makes your class a new-style class. (This isn't necessary in Python 3.x.)You should consider reading either the Classes section in the official tutorial, or a more novice-friendly tutorial. As millimoose says, all of this will be covered in any tutorial worth its bandwidth.


Answer URL
