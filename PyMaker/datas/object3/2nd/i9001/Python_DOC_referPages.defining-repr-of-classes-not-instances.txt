Natural Text
I have a bunch of classes which I'm using as singletons / enums / dict keys, e. g. like this:This works fine for me.  But I'm having a small issue with debug output I sometimes do.  Normally I use just  for this like in  in the  function.  I would love to have an output like:But when I do this with these classes they are given out as something like this:I tried to override the  method of my classes to achieve this, but when I do it only influences instances of my classes (which I never create).  I tried to use  and  but nothing worked.I assume that what I print is a  and therefore an instance of , so I would have to override the  method of the  class which is immutable, unfortunately.Is there any other trick I could use so that  would print what I want?Btw, according to the documentation, the  method should return something which the Python parser would turn into an equal object again; this is definitely not the case with an output like  but would definitely be the case with an output like .
You are correct that you'd have to override the  of the type of a class; you don't need to edit , you'd subclass  to create a new metaclass:then use that as your class metaclass; assuming you are using Python 3:or if you are using Python 2 still:Subclasses of  inherit the metaclass too:However, you could just have used instances:
Why not use an Enum with repr
The reason you're finding this difficult is that this is a strange use of classes, really. Have you considered just having one class, Side, and having left and right as instances?


Answer URL
https://docs.python.org/3/reference/datamodel.html#metaclasses
