Natural Text
I've just had the strangest error. I haven't had a chance to fully debug it, but I wanted to post this and see if anyone else has had a similar issue.ProblemThe following code is in a function that downloads a file. The  statement logic is intended to skip the download step if the final file exists.When run, the following prints out:BreakdownThe  variable is intended to allow the user to "force" the download to happen, regardless of existing data. As you can see in the output, it is .The path to the file is valid and the file exists, as seen in the output.Thus, the if statement is essentially , which should (and does, also in the output) evaluate to ; however, the  conditional () is executed.I have tried parentheses and some minimal debugging, but I cannot find any reason for this to happen. For example, the following works as expected in the python interpreter:EnvironmentThis issue occurs with Python 3.5 on ubuntu 16.04 within a docker container. 
As noted by @user2357112 in the comments it seems very likely that  is a string:That's probably why the second debug statement shows False (because it shows the string and not the boolean). You can test this by either(expected output ) or (expected output  - note the quotes signalling it's a string and not a boolean)Edit Explanation: According to 4.2. Boolean Operation the expression  is evaluated according to . Since according to 4.1. Truth Value Testinge only empty sequences are  (in the context of truth value testing) the sequence  is . Thus  evaluates to the string  (independent of the value of ). During printing  is not interpreted as a boolean value. However in the if-statement the string  is  tested for  ...
FWIW, a slight modification of the code, running on a Windows machine, Python 2.6.5:This takes the expected path ("skipping download") of  is  and the path exists. The call is:Making the first argument a string, as the comments imply, will take the mystery path ("Downloading").


Answer URL
https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
