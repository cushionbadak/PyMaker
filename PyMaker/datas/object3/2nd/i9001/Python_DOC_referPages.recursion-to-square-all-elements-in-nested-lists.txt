Natural Text
I failed to answer this question in my midterm. I am NOT asking you guys to do homework for me. Just want to know how to solve this problem. I only know how to solve this problem using list index, but this solution is not allowed here because the question has stated that I have to include "for x in nums" in the function. I know that int is immutable, so what can I do? Thanks for the hint of "isinstance", but I'm sorry that we have not learned it before so I cannot use it in exams.I had just learned how to solve similar problems using index. I think it can work like this:It doesn't work well. I think there is something wrong with 'else'. But how should I modify?Write a python function  that takes one parameter, a nested list of integers, and returns a new nested list of integers that is structurally identical to the given list, but in which all of the integers have been squared. Note that the function should no modify its parameter; it should build a new, separate list.Complete the function by writing anything you think is needed above, within or below the loop. Don't write code outside of the function. Assume that there are no global variables available to you. don't make changes to the code that has been provided.Example:  Given code:
The problem with your code is that you create a new list, thus just calling  won't change . You have to assign the result: .Or a bit shorter, directly appending the final values instead of first using the original values and then overwriting them later:Or really short, using the given code in a list comprehension:
This a very general solution to this problem:
You may create your recursive function as:Sample run:However, this function will only support  as the nested object. It will fail in case you pass tuple as nested structure. For example:In case you want your function to support all the iterables, you should be doing  check for . Hence your function should be like:Sample run:


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
https://docs.python.org/3/library/functions.html#isinstance
