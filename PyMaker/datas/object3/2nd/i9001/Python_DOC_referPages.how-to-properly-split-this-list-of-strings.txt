Natural Text
I have a list of strings such as this : How can I split this strings in the list such that it would be something likeI have tried using the  method already however that splits the 44 into 4 and 4, and am not sure what else to try.
You can use regex: matches a pattern that consists either of word characters (alphanumeric values in your case) or non word characters ( signs in your case).
That will work, using output:It just groups the chars if they're alphanumerical (or not), just join them back in a list comprehension.EDIT: the general case of a calculator with parenthesis has been asked as a follow-up question here. If  is as follows:then with the previous grouping we get:Which is not easy to parse in terms of tokens. So a change would be to  only if alphanum, and let as list if not, flattening in the end using :which yields:(note that the alternate regex answer can also be adapted like this:  (note the lack of  after )also  is slightly faster than , but I'll let you add it up to avoid altering visibility of that already complex expression.
Alternative solution using re.split function:The output:
You could only use  and  built-in functions within a list comprehension:But note that this is not an efficient approach for longer strings. In that case the best way to go is using regex.As another pythonic way you can also use  module:The tokenize module provides a lexical scanner for Python source code, implemented in Python. The scanner in this module returns comments as tokens as well, making it useful for implementing “pretty-printers,” including colorizers for on-screen displays.
If you want to stick with  (hence avoiding regex), you can provide it with an optional character to split on:So, you could whip something up by chaining the split commands.However, using regular expressions would probably be more readable:This is just saying to "split the string at any + or - character" (the backslashes are escape characters because both of those have special meaning in a regex.Lastly, in this particular case, I imagine the goal is something along the lines of "split at every non-alpha numeric character", in which case regex can still save the day:It is of course worth noting that there are a million other solutions, as discussed in some other SO discussions.Python: Split string with multiple delimitersSplit Strings with Multiple Delimiters?My answers here are targeted towards simple, readable code and not performance, in honor of Donald Knuth


Answer URL
https://docs.python.org/3/library/re.html#re.split
https://docs.python.org/3/library/tokenize.html
