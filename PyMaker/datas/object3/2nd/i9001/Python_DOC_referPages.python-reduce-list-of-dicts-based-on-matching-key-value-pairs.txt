Natural Text
I have a list of dicts which specify flows (source to hop to destionation with their respective volume).Now i want to split these flows into link (e.g. (source to hop with volume, hop to destination with volume) and merge all duplicate links together by summing up their volumes. Since I'm new to python I'm wondering what a good approach would be. My first approach would be to loop through all flows and nest a loop through all links inside and check if the links already exists. But if I have millions of flows, that might become quite ineffienct and slow I guess.My starting data looks like this:What my result should be:Thanks a lot for your help!
You can collect the links to two different dictionaries, one between source & hop and another one between hop & destination. Then you can easily create the result list separately from both of the dicts. Below  is used which is  like object with 0 as default value:Output:Above will run in O(n) time so it should work with millions of flows provided you have enough memory.
pseudo algorithm:create an empty result list/set/dictionary loop over de flows listsplit up each single flow into 2 links for each of these 2 links test if they are already in the result list (based on the 2 nodes). if not: add them. if yes: upgrade the volume of the one already in the list.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
