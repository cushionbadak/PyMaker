Natural Text
I have a Python-powered DSL which I execute through . This DSL includes a native function calls through CFFI.I'm getting stack overflow (SO, you made it ungooglable!) crash when calling a native function which is just 2 C calls deep, with only a handful of s allocated on a stack in each C function. Python application is a  GUI that calls the DSL  by timer () event, which might take a good portion of stack itself.There are NO recursive calls here.OS X 10.12.3, Python 3.6.0rc1 (v3.6.0rc1:29a273eee9a5, Dec  6 2016, 16:24:13), CFFI 1.9.1I'm aware of , but it requires a superuser privilege. I believe this is not needed, as it's not normal to only have a stack remaining for two function calls.Could CFFI or exec() be limiting the stack size for the callee?Function being called from DSL: invocation code:Apple report piece:(this thread really ends here, nothing else in Apple report)
Managed to connect with a debugger.The stack that has nothing after the current call is a sign that a stack was overwritten, normally via a pointer to a stack variable.


Answer URL
