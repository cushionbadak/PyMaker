Natural Text
I extended  in a simple way to directly access it's values with the  notation instead of :Now when I try to pickle it, it will call  to find , which is neither present nor necessary. The same will happen upon unpickling with :How do I have to modify the class  in order to be properly pickable?
The problem is not  but that your  method breaks the expected contract by raising  exceptions. You need to fix your  method to raise  exceptions instead:Now  is given the expected signal for a missing  customisation hook.From the  documentation:This method should return the (computed) attribute value or raise an  exception.(bold emphasis mine).If you insist on keeping the , then at the very least you need to skip names that start and end with double underscores and raise an  just for those:Note that you probably want to give your  subclass an empty  tuple; you don't need the extra  attribute mapping on your instances, since you are diverting attributes to key-value pairs instead. That saves you a nice chunk of memory per instance.Demo:That  tests for the  method on the instance rather than on the class as is the norm for special methods, is a discussion for another day.
First of all, I think you may need to distinguish between instance attribute and class attribute.In Python official document Chapter 11.1.4 about pickling, it says:instances of such classes whose dict or the result of calling getstate() is picklable (see section The pickle protocol for details).Therefore, the error message you're getting is when you try to pickle an instance of the class, but not the class itself - in fact, your class definition will just pickle fine.Now for pickling an object of your class, the problem is that you need to call the parent class's serialization implementation first to properly set things up. The correct code is:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
https://docs.python.org/3/reference/datamodel.html#slots
https://docs.python.org/3/reference/datamodel.html#special-method-lookup
