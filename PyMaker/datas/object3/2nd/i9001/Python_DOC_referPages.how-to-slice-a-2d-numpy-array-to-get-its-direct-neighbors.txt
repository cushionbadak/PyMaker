Natural Text
I want to loop through my 2D numpy array and check all its direct neighbors.If I make a numpy array like so:It will look something like this:The loop that I created to help me find the neighbors for each spot in the array looks like this:However, when I do this, I will not find any neighbors for the spot in the array with the values 0, 1, 2, 3, 4, 8, and 12. I understand why this is the case. for example, if I take the value of 8. it has the indices of [2,0]. the row-1 will result in -1, which is the same as index 3 in this example. the row+2 is 2. And slicing 2:3 will result in nothing because there is nothing between 2 and 3.Anyway, the result I'm looking for is something like this (for value 8):I know I can achieve this by piling some if-statements but I wonder if there is a more elegant way of dealing with this.Thanks for your time.(For those who are curious to know this):The neighbors for e.g. value 11 actually return like I want them to, without any errors. It returns this:EDIT:I should also mention I tried this:But this did not work.
You can simplify the way your loop is written and not assume as much about the contents of the array, making your code more flexible. Numpy has an  class that can be used to iterate over an array. You can also use it to get the multi-dimensional index of each element. Iteration can be further simplified using the  class, similar to Pythons builtin . If you do not need to get the elements back, just the index, you can use . Here is an example using :


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
