Natural Text
I was reading how to check if a python module has been imported and the instructions seems clear, check for the module in the . This works as I expected in Python 2, but not with Python 3 (3.5 and 3.6 tested). For example:Python 3.6Python 2.7I note that,  is described as a 'built-in' in the Python 3  (), and not in Python 2 so maybe that's why it's in  prior to being imported, but it's not listed as a built-in. Anyway, since  still needs importing in Python 3, I'd be grateful for an explanation.
They have been imported, just not by you. Exactly what parts of interpreter startup caused the module to be loaded are unimportant implementation details, but you can trace possible paths if you want. For example,  is imported by which is imported by :which is imported by :which is imported by :which is bootstrapped at interpreter startup because it's where most of the implementation of importing is.
It appears that in Python 3, the itertools extension is actually compiled into the main Python binary unlike Python 2. If you do aand then ait is clear. Doing the exact same steps in a Python 2.x console results in a .As per the docs,  comprises of 'modules that are compiled into this Python interpreter'.


Answer URL
https://docs.python.org/3/library/functions.html
https://docs.python.org/3/library/sys.html#sys.builtin_module_names
