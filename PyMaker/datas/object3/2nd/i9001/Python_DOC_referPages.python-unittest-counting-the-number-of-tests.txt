Natural Text
It's my first time playing around with Python's unittest for an assignment in school. I basically have a Circle Object, where I am using pyunit to make sure the data is stored properly. I noticed that Python only counts the number of methods as test cases as opposed to the number of assert statements. For instance I want to test that methods are working correctly, Python only counts the following as 2 tests, despite having 4 assert statements. It really caught me off guard, as with Java's JUnit it will count the number of assert statements instead. What's the "norm" in python? Should there only be one assert statement per method?
Python's  package allows you to structure your unit tests in separate methods like you are noticing. This is useful in cases where you want to tests things which are very closely related and don't require separate unit tests. tests start by subclassing , and then adding methods to this. So, you can add several layers separation between different unittests which are more less related. An example from the Python Docs demonstrates what is considered to be best practice for Python unit tests:There are a number of things you can observe here:The three methods of  are the separate unittests.  and  both contain two asserts, since they are very closely related. Adding separate tests for the two asserts present in  would be adding lots of bloat to the code, and it could lead to very weird problems. For example, if  would break in a weird way, the single unittest covering this single function would break. However, if the two tests for  and  were separate, one test might pass, and the other fail. So, testing the functionality of a single function is better kept in a single unittest with several asserts. The same applies to the  method; checking that  works and checking that it raises a  are closely related, and should therefore best be kept close together in code as well.So, to come back to your question: There can (and sometimes should) be more than one assert per method, since it leads to simpler and clearer code, and less confusion. To quote the "Zen of Python" (found by running  in a python shell): "Simple is better than complex". So, keep your unittests simple and structured by grouping similar asserts in a single method.
The answer to your question '''What's the "norm" in python? Should there only be one assert statement per method?''' is "No".  Some people might say 'yes' but CPython core developers, including me, routinely use multiple asserts in test methods.  Take a look at the  files in  (if your installation includes that directory).It is true that one method should test one unit or even one behavior of one unit.


Answer URL
https://docs.python.org/3/library/unittest.html
