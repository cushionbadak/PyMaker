Natural Text
Recently i'm reading a book, it mentioned the mro in multiple inheritance, and give sample code:output:I wanna know why this happen?
This happens because you're mixing direct constructor calls and calls via . Your class hierarchy should do either one or the other.More precisely, the MRO for the class  is . Thus, when you call  in A's constructor, that calls the constructor for , since  succeeds  in 's MRO. In other words, it is inside 's constructor that the first  is printed.As an aside, writing out  is superfluous in Python 3.  is enough; the arguments are deduced from the context.Further reading: documentationGuide to using The C3 method resolution order
I've converted your code to Python3 (by changing  to ) and added some more tracing statements:Here's the output:Looking at the output, you can see the call to the  method is happening, and printing 'C'. It then calls  directly (which is a mistake- use !).The  call prints its message, including the  attribute. You can see the sequence: C -> A -> B -> Object. This is important, because it means that calls to  from within  are going to refer to class . Also, calls to  from inside  would have invoked  automatically, if you let them.The next method, , is invoked by the  reference inside , as mentioned. It calls , presumably, which prints nothing. ;-)Both  and  return, we see the midpoint message , and then your direct call to  is made. It prints a message, but again a reference to  form  does nothing, because  is at the tail end of the MRO.The  mechanism can deal with all this MRO stuff for you. You shouldn't have to invoke . Instead, you can just let  handle it, inside , but doing this:


Answer URL
https://docs.python.org/3/library/functions.html#super
