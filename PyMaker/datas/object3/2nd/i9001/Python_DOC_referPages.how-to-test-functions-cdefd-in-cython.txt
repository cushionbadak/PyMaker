Natural Text
I have a .pyx file in which I define some functions, e.g.How could I unit test the behavior of such functions outside the pyx file? Since they are cdef'd, I am not able to simply import them...
To test -fuctionality you need to write your tests in Cython. One could try to use -functions, however not all signatures can be used in this case (for example signatures using pointers like ,  and so on).To access the cdef-functions you will need to "export" them via a pxd-file:Now the functionality can be cimported and tested in a Cython-tester:And nowWhere to go from there depends on your testing infrastructure. For example if you use -module, then you could use pyximport to cythonize/load the test-module inspect it and convert all test cases into -test cases or use  directly in your cython code (probably a better solution).Here is a proof of concept for :Now we only need to translate and to import it in pure python to be able to  it:And now:Btw, there is no need to cythonize pyx-modules explicitly -  does it for us automatically.A word of warning:  caches cythonized c-files in  (or similar on other OSes) and as long as  has not changed the extension isn't rebuild. This might be a problem when  changes and it leads to binary incompatibility (luckily python warns if this is the case).One has to ensure in the test-environment, that either the pyx-files are rebuild (it is timestamp-based) or that the cached-files are deleted (one could use a temporary directory, for example created with ,  via ).If you use a virtual environment and install you cython-package via  (or a similar workflow), you need to make sure that  files are also included into installation, i.e. your setup-file needs to be augmented with:


Answer URL
https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory
