Natural Text
I have a nested list: If the first two elements of the sub lists are same, then I want to add their corresponding 3rd, 4th and 5th elements, while retaining the first two elements. For the above case the result should be: Is there a way to do this? Thanks.
You can use a dictionary to categorize the sub-lists based on first two items then iterate over the items and calculate the sum :
Pandas one-linerHow about a pandas one-liner.Import and data:Pandas in action:Step-by-stepMake a dataframe:Group by the first two columns and sum the other columns:The groupby method groups by the columns  and . The result is a  object. You need to "do" something with it to visualize it. Here we sum the values in the groups. Maybe it becomes bit clearer looking at a nicely formatted table:This index is a MultiIndex:There are two levels with names  and .  The leftmost column is the first level with the labels  and  and the one next it is the second level with the labels , , and . The label  in the first level is used for the first two rows. All other labels are used only for one row.Flatten the multi-index:Convert into a list:
I would create a dictionary with first couples as a key and value would be a list or a tuple:
This is a relatively straight-forward application of .Here's how to do it with a nested list comprehension.outputNote that this assumes that the list  already has the sub-lists that commence with the same 2 elements adjacent. If that's not the case then it should be sorted, egbefore running the above code.Here's essentially the same algorithm split up for easier reading and analysis.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
