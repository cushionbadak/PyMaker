Natural Text
The new  module contains several objects with names like "SupportsInt" (-Float, -Bytes, etc.). The name, and the descriptions on the documentation page for the module, might be read to suggest that you can test whether an object is of a type that "supports ". But if you try to use , it gives a response that makes it clear that that isn't something you are meant to do:On the other hand, you can use :What is a "protocol" in this context? Why does it disallow the use of  in this way?
This is all of the reasoning given in , the PEP for the  module:Because typing.Callable does double-duty as a replacement for collections.abc.Callable , isinstance(x, typing.Callable) is implemented by deferring to `isinstance(x, collections.abc.Callable) . However, isinstance(x, typing.Callable[...]) is not supported.A protocol is also known as a . These are most of the python protocols (full list here):I have not found any clear reason for why  does not support . The reason that  works is that  uses the  protocol which is not allowed in , while  uses the  protocol which is allowed. I believe the reason is that the functionality was already coded in  and they did not want to recode it in the  module.
As the documentation says:  ( https://docs.python.org/3/library/typing.html?highlight=typing#typing.TypeVar )


Answer URL
https://docs.python.org/3/library/typing.html
https://docs.python.org/3/reference/datamodel.html#specialnames
https://docs.python.org/3/library/typing.html?highlight=typing#typing.TypeVar
