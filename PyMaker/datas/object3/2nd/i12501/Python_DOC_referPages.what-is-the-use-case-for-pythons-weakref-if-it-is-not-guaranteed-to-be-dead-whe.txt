Natural Text
One of the use cases python's docs propose for weak references is to keep references to large cached objects without increasing their reference count, thus not preventing them from being garbage collected when their time  comes.However, garbage collection is not guaranteed to happen immediately after an object's refcount reaches zero, and a weakref is only invalidated when the GC collects its target. So essentially one can be left holding a valid (not dead) weakref to an invalid object - PyPy's broken WeakSet is one example of such a scenario. So assuming an adversarialy-minded garbage collector, is there a scenario (apart from finalizers) where weak references provide deterministic and useful behavior to the user?
It’s really not about making an object get garbage collected as soon as the references are gone, and making the weak reference invalid in that case. It’s really just about allowing the object to be garbage collected when nothing else references it.A common use case is the observer pattern, where you add an observer (or listener) to an observable. This is often used for event systems. Let’s say you have a button with a click event; when you now register for that click event with a handler, then you need to make sure to unregister those handlers properly or you will run into memory leaks. The observable will keep a reference to its listeners so those object will never be garbage collected even if they are no longer used (aside from their job as handlers).Using weak references here prevents listener registrations from counting as references when determining whether to garbage collect an object. So you remove the need to explicitly unregister the event handler, making it easier to use. You can just register the handler with a weak reference, and delete the listener whenever you want.There are other legitimate use cases, Wikipedia has some, but in general, weak references are used to prevent objects from being kept in the memory when there are no other strong references. But that says nothing about when the object actually gets garbage collected.


Answer URL
https://docs.python.org/3/library/weakref.html
