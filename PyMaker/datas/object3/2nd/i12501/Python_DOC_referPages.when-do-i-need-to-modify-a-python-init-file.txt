Natural Text
Suppose that you create a Python package called , and it contains a module called , which has a function called  that prints out  to the console.Suppose that you also create a second Python package called  that has a module . The  and  are in the same directory, and the directory is on the Python path. Also, the  files are all blank. The structure is:I want to import  into  so that I can call .I use this command:and I expect to see in the console:Instead, the behavior I get is that  is imported but it does not have access to .The solution I came up with was to modify  so that it contained the following command:Now I get the expected behavior.Is it always necessary to make a custom  for a package if that package is going to be imported from an outside package?
Saying only runs  and makes everything it initializes available to be used as .  If you want  module to be available, you need to say .  This will load the module.  A common example of this distinction is probably  vs .  Just because you say , you won't have the contents of  package available.You don't have to break modules into packages, but it helps to avoid module-name collision.  It may also help to keep concepts clear in the mind of a user of these modules.


Answer URL
https://docs.python.org/3/tutorial/modules.html
