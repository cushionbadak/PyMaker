Natural Text
For some time now I have been trying to wrap my head around scripting for Cellebrite's Physical Analyzer, Python shell. The documentation for PA's shell is incomplete, and I believe that a comprehensive documentation of the API would make coding for it much easier. A few weeks ago, I realized that I the builtin  function would give me most of the info I needed, but it is limited by its tether to the shell, among other things. I recently completed a script which saves every help entry (as well as some additional information) to a txt file in a directory on my desktop. I want to turn these files into class stubs, I can use these to create clearer documentation and facilitate type-hinting in an IDE.Here's the problem:I don't know how to parse the help files. I can write a series of complicated regular expressions, but my program is already confusing enough.Does anyone know an easy way to translate help documentation into a stub?P.S.by stub I mean something like this:Help:Stub:    python's not really my language, so please excuse any syntax errors above.EDIT:I really want to drive home the fact that python is not my language and if you see this question and think "well, he must have tried that", I probably haven'tEDIT2:this is the script I have so far:https://drive.google.com/file/d/0B-5Y1OoryQYuczE4REpDR1FiRWc/view?usp=sharingforgive the horrible syntax. The whole thing is nested in  because unless it is indented the shell will break on the second line, and I needed to begin the block somehow. And the reason I am writing to the file in binary mode is that the thing keeps erroring if I try to do text. The rest is probably just on me. EDIT3:Help example: https://drive.google.com/file/d/0B-5Y1OoryQYuSjJrOGFLeVU3RWc/view?usp=sharingIf this is too broad, I don't understand what has not been sufficiently explained. I would appreciate any pointers as to where it is too vague.
You don't need to parse the help data to do what you want.Instead, you can introspect the class directly with the standard python library.For example, try this:You should be able to easily recreate the stubs without having to parse the help text.


Answer URL
https://docs.python.org/3/library/ast.html
https://docs.python.org/3/library/typing.html
https://docs.python.org/3/library/typing.html#typing.get_type_hints
