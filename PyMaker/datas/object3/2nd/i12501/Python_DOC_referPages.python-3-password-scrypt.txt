Natural Text
Hello i am looking for some assistance making my password script for python 3. I have a basic understanding of the program but python is a new language for me. I am trying to make an AI for the assisted moving suit my friend and I build consisting of old bike parts such as gears and chains, Dc motors, and lots and lots of metal bars... For the heavy duty things we are using an arduino but my friend is in charge of that part.. I have worked on the AI but before i go any further i was wondering if anyone could help me make a pass code scrip. I am actually using a raspberry pi because i know how to operate the GPIO (or general purpose input output. I have tried using things like:this is a bad example that i know wont work but can someone please give me some suggestions. I know how to use things like making a calculator or making  something act like it knows everything about just by adding a few numbers in the background but this one really stumped me. I appreciate anyone that helps me. Thank you 
Well, if the goal is just to verify a single password (no password DB), but you don't want to store that password in the script (where anyone who can read the file can see it), you can use hashing. First, decide on a password, then generate a salt and hash (passing the hash method generates an appropriate salt implicitly):We use  instead of actually initializing the variable directly in the terminal because as of 3.4, the Python interactive terminal saves history by default, and we don't want the password in the Python history. We'll accept the risk of shoulder surfing at generation time in exchange for knowing you didn't make a typo (at use time, we'll use  to foil shoulder surfers).Now in your verification code:This design means users who can see the source code can't see the password; as long as they can't overwrite the file, they can't change the password either.By using  instead of , you also avoid echoing the password as it is being typed, which minimizes the risk of shoulder surfers seeing the password.Note: This code requires Python 3.3 or higher; the  module is no good for secure password hashing before then since it uses , a known weak password hashing system.
The usual way is using a one-way Cryptographic hash function, for instance: sha-256.From wikipedia:A cryptographic hash function is a hash function which is considered  practically impossible to invert, that is, to recreate the input data  from its hash value alone.Python has a built-in library for that: hashlib.You have to store a previously hashed password inside your code:This code will output this:You will store this hashed string inside your script, then when the user "logs in" you do the same operation with the user password and compare:Then compare:There are some caveats, though...One way encryption functions are not perfect, there is a very very very small chance that two different string have the same hash, this chance is really small but it exists.Note:If you have a TypeError when using hashlib, you must encode your string to utf-8:And... you must not store the string you use to create the secure_hash in your script.


Answer URL
https://docs.python.org/3/library/getpass.html#getpass.getpass
https://docs.python.org/3/library/crypt.html
https://docs.python.org/3/library/hashlib.html
