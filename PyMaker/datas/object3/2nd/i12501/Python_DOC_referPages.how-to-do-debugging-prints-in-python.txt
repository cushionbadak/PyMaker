Natural Text
I have a function like this....I want the debug flag to control whether it outputs logging statements. For example:That code is very repetitive however.  What is the cleanest (DRYest?) way to handle such if-flag-then-log logic?
you can change the logging level to , and also  module can record the timestamp for you and it is configurable as well.Check the link python3 logging HowTo
You ought to use the logging module:Read more about it here: https://docs.python.org/2/library/logging.htmlTo disable logging just set the level (logging.DEBUG) to something else (like logging.INFO) .  Note that it's also quite easy to redirect the messages elsewhere (like a file) or send some messages (debug) some place, and other messages (warning) to others.
I would use the logging module for it. It's made for it.
I agree that using logging is the best solution for printing debugging information while running a python script. I wrote a DebugPrint module that helps facilitate using the logger more easily:If the DEBUGMODE variable is false, nothing will be printed.If it is true, the sample code above prints out:Now I'm going to test DebugPrint with a module that defines a class.When this script is run the output is as follows:Note that the module name, class name, function name and line number printed on the console is correct as well as the time the statement was printed.I hope that you will find this utility useful.


Answer URL
https://docs.python.org/3/howto/logging.html
