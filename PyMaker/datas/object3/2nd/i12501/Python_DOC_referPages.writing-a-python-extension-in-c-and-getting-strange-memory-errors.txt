Natural Text
I have a Python class I've written in C called , and it includes methods for multiplying by another Quat, returning a NumPy array () and for printing the representation.Sometimes when I call these methods, I get a . However, the segmentation fault never occurs when I'm running the program in GDB.Although I can't seem to trace the problem, I am seeing some weird cases of memory being overwritten (apparently). For example, here's my script and output:I've been doing a lot of searching, but I have no clue why it would be overwriting the caller with a string here.The function in question is:and my type looks likeI'm fairly certain I'm correctly including numpy, and creating both my module and my class:My repr method seems pretty typical, too, but I notice that this method also occasionally causes  to be overwritten.This is one I have some concern about. It's returning  â€” but why does the multiplication function, which also returns an object, not also cause Python to echo the repr for the object?Edit: After some investigation, it looks like the problem only happens when I call the in-place normalization routine. Do I need to increment or decrement some reference counter here?Here is the multiplication function:Does anyone have any suggestions on how I might debug this more effectively, or see what the problem could be?
You said that by  some values before returning them from your methods, the problem seems to disappear.Inspired by your discovery, I found the problem:You are ing arguments. You should not do that! Refcounts should be increased and decreased only when objects are stored somewhere.
Okay, I think I found a solution.The problem is in my in-place functions, which also return .For example,I had to add a  since  is both an argument and the return value.This appears to fix the problem.


Answer URL
https://docs.python.org/3/extending/extending.html?highlight=py_incref#reference-counting-in-python
