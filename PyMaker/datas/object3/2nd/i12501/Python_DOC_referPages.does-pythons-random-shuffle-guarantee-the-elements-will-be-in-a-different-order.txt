Natural Text
In python,  shuffles the element of a list in place.I was wondering if it's guaranteed that the elements will be in a different order after the shuffle or if it is truly random, in which case I would expect the elements to be in the same order as before the shuffle about on average 1 time out of  shuffles.
It is possible for the list to be in the same order afterwards.Note that if you shuffle a large list, not all permutations will be possible, due to the limited number of states in a pseudorandom number generator.
Here is an experiment which confirms that, as expected, roughly 1 out of n! of the times  fixes the elements. For each number, n, in the range 1 to 9, I compare the theoretical probability of getting the identity permutation, 1/n!, with the observed proportion obtained by running  1 million times:The result of one run:Obviously including  is pointless but it makes the output look nicer. If I went up to , more likely than not I wouldn't see any shuffles that left the elements fixed, unless I increased the number of trials.


Answer URL
https://docs.python.org/3/library/random.html#random.shuffle
