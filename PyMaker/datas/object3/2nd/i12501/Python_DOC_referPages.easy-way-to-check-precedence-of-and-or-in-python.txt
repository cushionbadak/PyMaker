Natural Text
I have a python list like this How to operate them and find the boolean value (True and False or False or True ...) efficiently ?I know and has more precedence than or. So I know about the way where we break the list about every or and take or of booleans computed from each list.I want to know is there a more easy way to do so ?
Not sure if this will be faster, but:result:
One way to do operator precedence is through the shunting-yard algorithm, which requires a stack:The other way to do operator precedence is a recursive precedence climbing algorithm:With the prints:
IIUC you could use , :
If I understand correctly this should be the simplest (less elegant) solution
@Iliyan 's answer is correct. Less hacky than me.I came up with a trick to do so.my_list = [True, "and", False, "or", False, "or", True]I created a file temp.pyEntered all values in list of my_list in order space separated in temp.pyExecuted temp.pyDeleted temp.pyKind of a hack ;)


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
