Natural Text
I want to find the bitrate of an mp3 on a website without downloading the file.Using Python3 & Mutagen Ported VersionCode ErrorSample InputAny other ways are also welcome :)Thank You 
First:I Dont want to download the files . I just need to check from the server . I also want to Find image's (jpg,png etc) information like size , pixels . Is it posssible ? No, it's not possible. The only way to get that information is by parsing the file data, and you can't parse the file data unless you download the file data.Of course if the server provides that information in some other way, like via a REST or RPC API, or a web page you can scrape, then you can download the information… but in that case, you're not parsing the file yourself, and you have no need for Mutagen. (And if you control the server, you can always add a web app that does the parsing on the server side and provides the information in any format you want.)If you're just worried about saving the file to disk: Whether from the stdlib or from third-party modules, most functions in Python that want a filename cannot take a network URL. That's different from some other languages, which take URLs everywhere and try to treat http and file URLs the same way whenever possible (by downloading the file chunk by chunk into memory).However, most functions that want a file object can take a  or similar object, and, if they can't, can usually take a . So, you don't need to download it to a file on disk:The problem is, I don't think Mutagen's "simple API" functions like  can take file objects, only filenames. So, you will have to either use a different library, use lower-level functions,* or download to a temporary file.But even that last one isn't so terrible:Or, if you don't care about Windows, you can simplify that to: creates and opens a temporary file. By default, it will be deleted as soon as you close it (which happens as soon as the  statement ends). The problem with using it that way is that on Windows,  may not be able to open the temporary file until you close it, which means you have to pass  to the constructor, and then explicitly  it later. Clumsy, but the best way I know of to write it in a way that's safe and robust for all platforms. (Again, if you don't care about Windows, just use the simpler second version.)If you don't understand the  statement, PEP 343 probably explains it best, but oversimplifying a bit, the idea is that runs all the indented code, then automatically closes the file (even if you  or raise an exception in the middle of the indented code).One of the few things you can get from an HTTP server is the size of a file. Servers usually send a  header for every response, and if you send a  request instead of a , you get just the headers, not all the data. So:* In fact, I'm not even sure "use lower-level functions" is an option; I can't remember for sure, but I think being able to use open file objects or strings in place of filenames was something that MusicBrainz had to add to their fork of Mutagen because there was no way to do it.
Download the MediaInfo executable and add it to your Env VarsEdit: Whoops ! Sorry didnt read the complete question. 


Answer URL
https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile
