Natural Text
I don't quite know how to word this question.  So here goes. I have this code which looks terrible.   only takes 5 cases.And I want to make it pythonic.  How do I do it?  I've read about enum and it looks like it might be my solution.  But I am open to any solution that is elegant to look at. I'm still using python2.7 Thanks.
Use a dict of key, values. Where key is the incoming state, and the value is the outgoing state. This is a highly Pythonic pattern and one you will likely reuse again and again. In many cases you will want to dispatch on the input state, where you should put functions as values in the dict.
Using a dict is a reasonable way to make this Pythonic—but so is using an enum.While the  module wasn't built-in to the stdlib until Python 3.4, you can install , a backport of that module that works on every version back to Python 2.4, or any of dozens of other enum packages if you like them better.With :(I assumed you wanted to do arithmetic on these things, given that you're using a variable named . If not, you probably want to use , not .)One advantage of this over dicts is the explicit , which makes things a lot easier to debug: you can see that you have a , not a  that may or may not be a recommendation.Another is that you don't need to convert back and forth between the names and the values, which can be a major source of errors—especially in Python 2.x, where  is not an error, it's just false;  is true if you're using , or an exception if you're using , it never silently does the wrong thing.Meanwhile, what if you have a string, like , and you want to get a  out of that? Unfortunately, that's one of the features that was intentionally left out of the stdlib  module to keep it simple.* (Read PEP 435 for a full discussion of all of the possible features that were left out and why.) So, if you try it, you'll get an error:But you could use one of the many other enum modules on PyPI. In particular, ** works exactly like the stdlib in all the examples shown above, but also has a few extra features. So, if you , then change the  to , all of the above will work, and so will this:* If you only wanted string values, and not also numbers, then this would by easy, but obviously that won't work in your case.**  was one of the major influences to the stdlib module.


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html
