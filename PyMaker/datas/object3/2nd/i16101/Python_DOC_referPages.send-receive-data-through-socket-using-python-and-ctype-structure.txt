Natural Text
I am trying to send and receive C structure data from a python client to server and vice-versa. Both clients and server work smoothly in connecting and exchanging data. Client sends a ctype structure to server and server sends it back again. The problem is that I don't know how to interpret the message received in the client and extract the data as it is in the structure format. My final Idea is to have a python server and C-client talking to each other and exchanging data in a predefined structure.Here are the codes I have for client and server in Python:Client CodeServer Code
First of all, you are currently dumping the received data. You are reassigning the variable 'datap' in every loop iteration.Do something like that instead:(Of course it's not the most efficient code, but you get the idea.)When you have your structure assembled in the 'datap' var, you load it into your ctype class using 'from_buffer' or 'from_buffer_copy' method.The latter is better in your case, since your buffer may go away when you rebind the 'datap' var.
What about providing an instance of ctypes.Structure directly with the call recv_into? Here is a modified version of your Server code, hoping I did not remove a functionality you wanted to keepSo, basically, the only thing I did was using a socket.recv_into call directly into an instance of your structure:https://docs.python.org/3/library/socket.html#socket.recv_intoThat gives me direct access to the structure attributes afterward.I guess the structure is small enough (28 octets) so that data fits in a single recv_into call. If you need multiple calls to recv_into to get your full structure built up, then... If you have python 3.7, you could make multiple calls to your structure with slicing memoryviews:Nothing guaranteed to be honest. With earlier versions of Python, you could have an exception when trying to cast 'B' on your memoryview. Recall that memoryview on a ctypes.Structure is 0-dim, and then it is almost impossible slicing it without the cast...


Answer URL
https://docs.python.org/3/library/socket.html#socket.recv_into
