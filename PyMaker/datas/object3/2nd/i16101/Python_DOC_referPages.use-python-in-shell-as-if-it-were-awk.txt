Natural Text
Say I want to  on stdout (i.e. one-liner coding).With  I could do it simply with:How to do this with python?
As ifLoop pointed out, what you're looking for here is .But, as yo've discovered,  often isn't as useful as the corresponding  (or  or  or  or even ) for one-liners.Python is explicitly designed to value readability over brevity and explicitness over implicitness (along with some correlated tradeoffs, like vocabulary over syntax, as little magic as possible, etc.). See the Zen of Python. There are intentional limits to what you can cram onto one line, and things like looping over stdin and/or command-line args have to be done explicitly with, e.g.,  and , or .That means that some very trivial scripts become less trivial to write in Python, but that's considered a good tradeoff for making even moderately non-trivial scripts easier to write, maintain, and understand.The core developers understand this means you can't rewrite a lot of one-liners in Python. And if you asked them, most of them will ask why that's a problem at all. If you know how to write something as a one-liner in a language like  or , then you should be writing it as a one-liner in  or . Those are perfectly good languages that are handy for all kinds of simple tasks, and there's no reason to avoid them just because Python is also a good language.If you can't figure your way through the syntax to write that one-linerâ€¦ well, it probably shouldn't be a one-liner. The only reason you want to try it in Python is that Python is generally easier to write and read, and the same reasons that's true are the same reasons Python won't let you write what you want without 3 lines. So just write the 3 lines. Python is great for that.So, what you often really want is not , but a heredoc, or just a separate script that you run like any other program, or  or  instead of .
you are looking for :
if you're in the shell, the next would basic integer mathetc...for floating point, yes, you should to use , or , or , or any other language what knows floating point math...also, read this: https://stackoverflow.com/a/450853/632407
Inspired by the answer by IfLoop I wondered about the handy  and  blocks in awk. I have found the pawk moduleLooks promising, but I have never tried this (yet)
Like SingleNegationElimination's answer recommend's, the  flag is the right tool for the job.Here are some examples using awk, ruby, and python:


Answer URL
https://docs.python.org/3/using/cmdline.html?highlight=command%20line#cmdoption-c
https://docs.python.org/3/using/cmdline.html?highlight=command%20line#cmdoption-c
