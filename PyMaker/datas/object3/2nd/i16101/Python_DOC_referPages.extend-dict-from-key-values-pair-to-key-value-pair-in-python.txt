Natural Text
I want to 'extend' my dictionary so that each key/value pair consists of one value, instead of a list. Tried iterating with myDict.keys() and myDict.values() and construct a new dict, didnt work out (i'm quite new to python3). This is what I want to achieve:
Based on comments above, here's how to invert the dict and allow multiple values for each key:You might use a  of  and  instead of  and  if order doesn't matter:
If you don't care about collisions being clobbered, here's a 1-line solution (plus import):To break apart what this is doing:Once you have that,then callReduce takes a function and applies itcumulatively to the items of sequence, from left to right, so as to reduce the sequence to a single value. combines dictionaries by way of argument unpacking.Which means that this takes the first dictionary from the list, and combines it with the next dictionary in the list, and so-on and so-forth until all the dictionaries in the list have been combined into one grand dictionary.All that being said, I'd probably do something like this instead:Alternate syntax using a dictionary comprehension:


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
