Natural Text
This question already has an answer here:How can I more easily suppress previous exceptions when I raise my own exception in response?                    2 answers                In my code I want to catch an exception when it occurs, print some information abut the exception to the screen, and then end the script once I have done so. I tried to use something equivalent to the following code, but I don't understand why I get the traceback I do.When executing:    Console reads:I thought that if I catch the , it would no longer be raised, and the only thing that would show is the  I do at the end, but both show in the console.Why do they both show, and how do I alter the code so only the second shows, or is there a better way to achieve what I want?
The console shows the context here; when an exception is raised from an exception handler, Python attaches the active exception as the  attribute and Python shows that context later on if the new exception is not being handled. If you don't want the context to be shown, you need to supply a cause instead; you can supply an empty cause with with :Quoting the  statement documentation:The  clause is used for exception chaining: if given, the second expression must be another exception class or instance, which will then be attached to the raised exception as the  attribute (which is writable). If the raised exception is not handled, both exceptions will be printed[...]A similar mechanism works implicitly if an exception is raised inside an exception handler: the previous exception is then attached as the new exceptionâ€™s  attribute[...]And from the Exceptions documentation:When raising (or re-raising) an exception in an  clause  is automatically set to the last exception caught; if the new exception is not handled the traceback that is eventually displayed will include the originating exception(s) and the final exception.When raising a new exception (rather than using a bare  to re-raise the exception currently being handled), the implicit exception context can be supplemented with an explicit cause by using  with :The expression following from must be an exception or . It will be set as  on the raised exception. Setting  also implicitly sets the  attribute to , so that using  effectively replaces the old exception with the new one for display purposes (e.g. converting  to ), while leaving the old exception available in  for introspection when debugging.The default traceback display code shows these chained exceptions in addition to the traceback for the exception itself. An explicitly chained exception in  is always shown when present. An implicitly chained exception in  is shown only if  is None and  is false.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement
https://docs.python.org/3/library/exceptions.html#built-in-exceptions
