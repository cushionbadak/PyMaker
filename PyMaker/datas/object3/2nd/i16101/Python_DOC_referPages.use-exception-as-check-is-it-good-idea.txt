Natural Text
I have code:But - I don't like, that user adds without checks.So - I think about remake it with next:So - is it normal, to use  as such check? KeyError can mean and other errors too.If no - what best way here to check user?For example - in  block - I made:P.S. CentOS, Python 2.6
The general rule I operate by is:Do you expect it to pass?If I expect an action will be successful most of the time, I use exceptions.If I expect an action to fail most of the time, I'll intercept it with an if statementIf there are things going on that could potentially break other actions because of a failure (or cause a system compromise), I always do the validation, verification, and sanity checking first.But a simple one sentence answer: Using exceptions is very Pythonic, and is not at all frowned upon.  It may actually help the code read better, and as you mention there could be other exception types, trap them separately:
Exceptions are not for checking.it should be used as last option if you are unable to deal with some run time issue. Most probably to catch any unexpected but foreseen issues while running. ex- db error, i/o device error. so we don't have any other option to deal with the abnormal situation except going in to a try catch.But in your case you have to go with something like if else to handle comparisons and do selections.Keep in mind, You have to maintain the code quality and performance in your coding.
The Python – unlike most of the rest of the world – people actually encourage this use of exceptions.They call it the EAFP principle, quoting American computer scientist and United States Navy rear admiral Grace Hopper who allegedly said, it's sometimes easier to ask forgiveness than to get permission.Exceptions are implemented efficiently in Python so there are used a lot.  For example, every  loop in Python exits by internally throwing a  exception.


Answer URL
https://docs.python.org/3/glossary.html#term-eafp
https://docs.python.org/3/library/exceptions.html#StopIteration
