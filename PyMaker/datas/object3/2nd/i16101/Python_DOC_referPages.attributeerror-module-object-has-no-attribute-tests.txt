Natural Text
I'm running this command:and it causes this error:AttributeError: 'module' object has no attribute 'tests'Below is my directory structure. I've also added app1 to my installed apps config.Directory structure:
I finally figured it out working on another problem. The problem was that my test couldn't find an import. It looks like you get the above error if your test fails to import. This makes sense because the test suite can't import a broken test. At least I think this is what is going on because I fixed the import within my test file and sure enough it started working.To validate your test case just try import the test case file in python console. Example:
Use:followed by to find the nature of the import error.
For my case, I need to create an empty __init__.py in my  folder
Steve Bradshaw's example above works for import errors (thanks Steve).Other type of errors (e.g. ValueError) may also cause to see what these errors are
I had the same error as Chris.  I had deleted an old model, then run tests.py, but another file (views.py) was still trying to import the deleted model.When I took out the now-obsolete import statement, problem solved.
Make sure that all modules that you are using in your script are not broken. By this I mean check spelling in your import statements. You can test yours modules by executing imports statements in djano's interactive console.
According to django document When you run your tests, the default behavior of the test utility is to find all the test cases (that is, subclasses of unittest.TestCase) in any file whose name begins with test, automatically build a test suite out of those test cases, and run that suite.so try this : 
Got the same error, but checked all the reasons list here, did not fix my problem. Finally figure it out that, the reason is that the name of one method that imported but not used yet is not correct. Though it is a stupid error, it happens.
I resolved the error "AttributeError: module 'utils' has no attribute 'name_of_my_function' " by fixing a circular import reference. My files manage.py and utils.py each had an import statement pointing at each other.
I had the same error. It turned out to be because I named my module common.py, yet there already was some other common.py module. All I had to do was to rename my module.


Answer URL
