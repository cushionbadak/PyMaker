Natural Text
I have been coding in Python since the last 2 weeks and pretty new to it.I have written a code to kind of emulate the way "find" command works in *NIX systems. My code works okay-ish for not so deep directories but if I start searching from the "root" directory, it takes too much time and processor heats up :D which on the other hand takes about 8 seconds using "find" cmd.Hey I know I am kinda noob in Python now but any hint at trying to improve the search efficiency will be greatly appreciated. Here's what I have written:Take a look at and please help me to solve this issue.
There is a built-in Directory-Browsing Framework called os.walk() but even os.walk() is slow, if you want to browse faster, you need access to the operating systems file-browser. https://pypi.python.org/pypi/scandirscandir is a solution.
What user1767754 said. You can't really improve the speed much using the methods you're calling. os.walk() is a bit more efficient, though. I've never used scandir (or pypi) so I can't comment.BTW, that's rather good looking code for a noob, Marty! But there are a couple of issues with it.It's not a good idea to initialise  and  like that because it makes them class variables; initialise them in . You should read  outside the class and pass it your class constructor. You do that by making it an arg of , as described in the link above. It's generally good policy to handle user input in the outermost parts of your code (when practical) rather than doing it in the inner parts of your code. I like to think of my user input routines as border guards that only let good input into the inner sanctum of my code. Users are unpredictable critters and there's no telling what mischief they'll get up to. :)


Answer URL
https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables
