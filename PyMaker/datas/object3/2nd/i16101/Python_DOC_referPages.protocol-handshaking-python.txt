Natural Text
For my A level computing project for year 13 im writing an email client, I need to Model how pythons SMTP protocol works and show protocol handshaking. What I want to know is that when I log into gmails mail server to send an email using smtp is there a way to print out what the line of code does. So I would want to show exactly what is going on when the line is executed. Cheers guys
Assuming that by "what the line of code does" you mean "what protocol messages get sent to and received from the server", :Set the debug output level. A true value for level results in debug messages for connection and for all messages sent to and received from the server.If by "what the line of code does" you want to know the Python code that's being executed, you can step into the function call in the debugger. Or just read the source. Like many modules in the stdlib,  is designed to be useful as sample code as well as a practical module, so at the top of the docs, there's a link to .Is there a way I can write that output to a tkinter window or file? If you look at the source linked above, you can see that it just uses  calls for its debug logging. So, this gives you a few options:Fork  and replace those  calls with something better.Monkeypatch  to give it a  function that shadows the global one. (This only works in Python 3.x; in 2.x,  isn't a function.)Open a text file, and just assign . (This only works for files, not tkinter. And it also catches all stderr, not just the logging from .)Create a file-like object that does whatever you want in its  method, and assign  to that. (This works for anything you want to do, including adding to a tkinter edit window, but of course it still catches all stderr.)Wrap the script from outsideâ€”e.g., with a wrapper script that uses  to call the real script and capture its  in a pipe.Which one is appropriate depends on your needs. For your assignment, assuming nothing is writing to  but 's debug output during the time you're doing  stuff, I think the file-like object idea might make sense. So:Obviously restoring stderr is unnecessary if you're just going to quit as soon as you're done, while if you want to do it repeatedly you'll probably want to wrap it in a , etc. Also, this  is pretty dumb (hence the name); it works fine for wrapping code that does nothing but  whole lines to , but for anything more complicated you might need to add your own line buffering, or make it an , etc. This is just an idea to get you started.
You can read the function's source code.http://www.opensource.apple.com/source/python/python-3/python/Lib/smtplib.py (search for sendmail)You can also read a bit about SMTP: http://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol#SMTP_transport_exampleAnd try to relate the two


Answer URL
https://docs.python.org/3/library/smtplib.html#smtplib.SMTP.set_debuglevel
