Natural Text
Is this a bug?  It demonstrates what happens when you use libtiff to extract an image from an open tiff file handle.  It works in python 2.x and does not work in python 3.2.3The output which I feel is in error is:expected 284, actual -504Uncommenting the fp1.tell() does some ... side effect ... which stabilizes the py3 handle, and I don't know why.  I'd also appreciate if someone can test other versions of python3.
 creates a duplicate file descriptor that refers to the same open file description. Therefore,  changes the seek position of the file underlying .Python's file objects cache the file position to avoid repeated system calls. The side effect of this is that changing the file position without using the file object methods will desynchronize the cached position and the real position, leading to nonsense like you've observed. Worse yet, because the files are internally buffered by Python, seeking outside the file methods could actually cause the returned file data to be incorrect, leading to corruption or other nasty stuff.The documentation in  notes that  can be used to reinitialize the cached value:
No, this is not a bug. The Python 3  library, which provides you with the file object from an  call, gives you a buffered file object. For binary files, you are given a (subclass of) .The Python 2 file object is far more primitive, although you can use the  library there too.By seeking at the OS level you are bypassing the buffer and are mucking up the internal state. Generally speaking, as the doctor said to the patient complaining that pinching his skin hurts: don't do that.If you have a pressing need to do this anyway, at the very least use the underlying raw file object (a subclass of the  class) via the  attribute:


Answer URL
https://docs.python.org/3/library/io.html
https://docs.python.org/3/library/io.html#io.BufferedIOBase
https://docs.python.org/3/library/io.html#io.RawIOBase
https://docs.python.org/3/library/io.html#io.BufferedIOBase.raw
