Natural Text
I need a bag/multiset-like data type in Python. I understand collections.Counter is often used for this purpose. But the comparison operators don't seem to work:This seems like a bug to me. I expected the less-than and greater-than operators to perform set-like subset and superset comparisons. But if that were the case then  would be false because  contains an extra . There also don't seem to be subset/superset methods on Counter objects. So I have two questions:What comparison logic is used for Counter objects?How can I compare Counter objects for subset, superset, proper-subset, and proper-superset?
On Python 2, the comparison falls back to the default sort order for dictionaries ( is a subclass of ).Mappings (dictionaries) compare equal if and only if their sorted  (key, value) lists compare equal. [5] Outcomes other than equality are  resolved consistently, but are not otherwise defined. [6]On Python 3, the comparison raises a :Mappings (dictionaries) compare equal if and only if they have the  same (key, value) pairs. Order comparisons ('<', '<=', '>=', '>')  raise .
This unanswered question is of interest:How can I compare Counter objects for subset, superset, proper-subset, and proper-superset?By defining the missing â€œrich comparison methods". You could also use free functions instead, which will make client code more explicit.


Answer URL
https://docs.python.org/3/reference/expressions.html#not-in
