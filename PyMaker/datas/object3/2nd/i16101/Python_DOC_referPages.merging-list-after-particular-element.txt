Natural Text
I wanted to merge 2 lists together (, ). But the catch is, after a certain element within the .The user enters after which element  should be merged with .For example;User Enters 1.Output:Now I was thinking of using a , but because of my limited knowledge in  I don't know how I can make the loop to stop after a certain amount of loops.
This is actually really easy with slice assignment, as explained in the tutorial section on Lists:
Here's a way you can do this without any mutating operations:To see it in practice:If you don't understand any piece, you can break it down:So, why would you want to do this without mutating operations? Lots of possible reasons:Code that doesn't mutate values is easier to reason about. It's exactly like a mathematical function; you don't have to think about the order in which things happen or the state at each step. And you can usually decompose it into simpler pieces, exactly as I did above, if you don't understand it.Often you don't actually want to mutate anything. In this case, we don't have to make a copy of  in advance, because we're not going to modify it.It can be more readable, or even more novice-friendly. In this case, you still have to understand slicing, but not slice assignment.It's often shorter. This is a one-liner instead of a two-liner.It's often more efficient. This avoids copying the entire list and then shifting most of the elements to the right.But something it's less readable, or more verbose, or less efficient. So, it's worth knowing both ways of doing things, so you can decide which is appropriate on a case by case basis.
DEMO:


Answer URL
https://docs.python.org/3/tutorial/introduction.html#lists
