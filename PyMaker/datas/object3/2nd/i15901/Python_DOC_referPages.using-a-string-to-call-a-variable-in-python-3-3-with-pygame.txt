Natural Text
I've been looking for an answer to a question I've been having, and to be honest this is the first time in the ten months that I couldn't find an answer. I've looked at multiple questions, Dictionaries do work, this conclusion was found in error(and I tried to use dictionaries(which most of the answers suggest), but they haven't worked.) The only other answers I could find was to use exec(), but they always seem to be accompanied by a comment saying they're dangerous, so I've steered clear of them.On to my question:This is an example of the code that I've been working on in Pygame:Where it is commented as "current way" is where my question is. Using this message of if/elif statements can take up a tun of lines if there are a lot of pictures for Pygame to display, and that would be doubled by the need to call screen.blit() every after every if/elif statement.This is an example of what I would like to do:What I am trying to do here is combine the varcar and varnumber variable so that I can combine them in the varcombined variable while only changing the varnumber variable. This will give strings that are the same as the variable names of the loaded images: car1 and car2. Then what I want to do is somehow call the variables car1 and car2 in 'screen.blit(varcombined,(0,0))' on line 31 by using the string as a substitute to the actual variable name. (Without actually having to dynamicly create a new variable)Is there a way this can be done, and if so, how can it be done?Even though the question may seem a bit specific, I think this can benefit a lot of people who may have a need/want to use a string to call a variable.If anyone doesn't understand what I'm asking, just say so, and I'll try to edit the question to clarify.EDITThank you to abarnert and Fernando Aires for their speedy answers. :)I'm not sure if I should make this an edit or another question, but I need to expand my question a little due to recent issues.I used abarnert's answer, and it worked like a charm.I would now like to ask, what I should do in the case that I added a 'truck1' and 'truck2' image, and now needed to not only interchange between 1 and 2 but also car and truck?If there's a way to do that of course.
So, what you want here is some way to get  or  depending on whether  is  or . And, ideally, to be able to expand this to  without writing a chain of 73  statements.While it's possible to do this by constructing the variable names and then looking them up in the appropriate global/local/object scope (e.g., ), this is a very bad idea, for lots of reasons.The right way to do this is to store the cars in a dictionary, keyed by the  values:Or, even better, load the cars directly into the dictionary with a loop, and don't even create the separate variables in the first place (which would get really tedious when you have 73 cars):Or, more simply:Now, to look up a car by its key, that's just . In particular, your code becomes:It's worth noting that in your existing code, the keys aren't really doing anything after load time. They're just contiguous integers, and you just start at the first one, count up one by one, and roll back to the first one whenever you reach the end. If that's true in your real code, you don't even really need a dictionary here, just a list; the only change you need to make is to start counting from 0 instead of from 1.And if the only thing you need  for is to pick a car, you can simplify this even further by getting rid of , too. You just want to iterate over , repeating forever.  makes that a one-liner. Instead of , you can do this:And then, instead of  you just use .
You could use a dictionary for that, as in:Or you could even replace your  with a  variable, for instance - and therefore changing your dictionary to .Hope that helps.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
