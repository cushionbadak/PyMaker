Natural Text
I want to establish publish subscribe communication between to machines.The two machines, that I have, are  and The steps I follow in each of the machines are as follows.In the initializer for  (IP address is 192.168.241.131)From ryu-secondary (IP address - 192.168.241.132)In the initializer These are the functions that I have.I am calling on :On , when I call after subscribing to all types of messages using However the message I am trying to send is of the following type.However on the other side ( I get the following error when I do this
 is a Python dict, but you are sending (and receiving) messages formatted as strings. Probably the easiest thing to do is to serialize  to JSON format, send it as a string, then load the received string back into a dict again. Then, and only then, will you be able to access the keys and values properly. Something like this should work (make sure you  somewhere above):You can find the full docs for the  module here (for Python 2) and here for Python 3.
ZeroMQ API backgroundZeroMQ   methods operate on strings. You pass to them a dictionary object they do not know how to process. Transform dictionary object to a JSON-format, as an example of a serialisation aimed to this very situation and your job is done.The answer = What is the reason for getting a TypeError?As writen, the ZeroMQ's  method could not do much about sending an object it does not understand and the .recv() part still reads whatever gets delivered on the ZeroMQ layer.Thus your  variable, correctly, receives a string as  instruction in the function  orders.The  simply serves any string, being it an empty one or any non-zero-length string as received from opposite side of the socket.Finally:The  will syntactically crash ( and must do so ), because the content of the variable , assigned & type-adjusted right before this, has no dictionary-alike access method to handle this type of syntax.Thus the  exception must be raised here.Q.E.D.JSON serialised representation of objects - Encoding & Decoding intro:


Answer URL
https://docs.python.org/3/library/json.html
