Natural Text
I'm trying to identify a good way to watch for the appearance of a file using Python's asyncio library. This is what I've come up with so far:I saved this as , and can run it withIn another shell session, I issueto end the loop.Is there a more elegant solution than using this infinite loop and ?
Well, there are nicer, platform-specific ways of being notified when a file is created. Gerrat linked to one for Windows in his comment, and  can be used for Linux. Those platform-specific approaches can probably be plugged into , but you'd end up writing a whole bunch of code to make it work in a platform independent way, which probably isn't worth the effort to just check for the appearance of a single file. If you need more sophisticated filesystem watching in addition to this, it is might be worth pursuing, though. It looks like  can be tweaked to add a subclass of its  class that plugins into the  event loop (there are already classes for  and ), for example.For your simple use-case, I think your infinite loop approach to polling is fine, but you could also just schedule callbacks with the event loop, if you wanted:I'm not sure this is much more elegant than the infinite loop, though.Edit:Just for fun, I wrote a solution using :
Butter https://pypi.python.org/pypi/butter has support for asyncio out of the box, BTW.
According to the documentation, you can now watch file descriptors. This should help you solve this with much less code.


Answer URL
https://docs.python.org/3/library/asyncio.html
https://docs.python.org/3/library/asyncio-task.html#task
