Natural Text
I'm trying to take a Unicode file stream, which contains odd characters, and wrap it with a stream reader that will convert it to Ascii, ignoring or replacing all characters that can't be encoded.My stream looks like: My attempt to alter the stream on the fly looks like this:The result on the  line is:  even though I explicitly constructed the StreamReader with I would like the resulting stream (when read) to come out like this:or alternatively,  (using  instead of )Why is the Exception happening anyway?I've seen plenty of problems/solutions for decoding strings, but my challenge is to change the stream as it's being read (using ), because the file is potentially too large to be loaded into memory all at once using 
You're mixing up the encode and decode sides.For decoding, you're doing fine. You open it as binary data,  the first 1K, then reopen in text mode using the detected encoding.But then you're trying to further decode that already-decoded data as ASCII, by using . That function returns a , which decodes data from a stream. That isn't going to work. You need to encode that data to ASCII.But it's not clear why you're using a  stream decoder or encoder in the first place, when all you want to do is encode a single chunk of text in one go so you can log it. Why not just call the  method?If you want something that you can use as a lazy iterable of lines, you could build something fully general, but it's a lot simpler to just do something like the  example in the  docs:Or, even more simply:
I'm a little late to the party with this, but here's an alternate solution, using :I guess you may want to use this if you need the flexibility to be able to call /// etc. on the stream that gets returned. If you just need to iterate over the stream, the generator expression abarnert provided is a bit more concise.


Answer URL
https://docs.python.org/3/library/codecs.html#codecs.getreader
https://docs.python.org/3/library/codecs.html#codecs.StreamReader
