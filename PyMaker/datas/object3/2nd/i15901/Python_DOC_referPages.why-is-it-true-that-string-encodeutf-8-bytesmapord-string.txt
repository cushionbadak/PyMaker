Natural Text
What encoding do we consider  is using? Why is it sometimes true that ?I ran into this problem when having client side javascript interact with a Django 1.5 (Python 3) application.Basically I'm uploading an mp3 file as a string (I couldn't find a solution for just uploading the file directly) using ajax and jDataView. I use jDataView to convert the file to a string. In my Django application when I save the file it changes sizes. However if instead of using  I use  the files saves fine. Why is that? Why is ?My client side code looks like this:and my view receives the data like so:I checked and  in both the JS code and Python code are the same thing. They have the same byte length and seem to have the same contents judging by the first and last few characters that fit on my screen.If I change my code to the file changes size and is no longer a valid mp3 file.
UTF-8 does not map Unicode codepoints straight to bytes. That's only true for ASCII codepoints, in the range U+0000 to U+007F. Beyond that range, UTF-8 uses 2 or more bytes per codepoint:You are thinking of the Latin-1 encoding instead, where the codepoints U+0000 to U+00FF do map directly to bytes:Instead of encoding to text, you could base64 encode your binary data before storing, or you can upgrade to Django 1.6 or later, to use a binary field type.


Answer URL
https://docs.python.org/3/library/codecs.html#codec-base-classes
