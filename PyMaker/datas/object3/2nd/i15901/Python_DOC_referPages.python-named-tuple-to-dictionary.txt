Natural Text
I have a named tuple class in python What I'd like to do is turn this into a dictionary. I'll admit python is not one of my stronger languages. The key is that I dont want it to be rigidly tied to the name or numbers of the fields I have. Is there a way to write it such that I could add more fields, or pass an entirely different named tuple in and get a dictionary.Edit: I cant not alter the original class definition as its in someone elses code. So I need to take an instance of a Town and convert it to a dictionary.
TL;DR: there's a method  provided for this.Here is a demonstration of the usage:This is a documented method of namedtuples, i.e. unlike the usual convention in python the leading underscore on the method name isn't there to discourage use.  Along with the other methods added to namedtuples, , , , , it has the underscore only to try and prevent conflicts with possible field names.Note:  For some 2.7.5 < python version < 3.5.0 code out in the wild, you might see this version:For a while the documentation had mentioned that  was obsolete (see here), and suggested to use the built-in method vars.  That advice is now outdated; in order to fix a bug related to subclassing, the  property which was present on namedtuples has again been removed by this commit.  
There's a built in method on  instances for this, .As discussed in the comments, on some versions  will also do it, but it's apparently highly dependent on build details, whereas  should be reliable. In some versions  was marked as deprecated, but comments indicate that this is no longer the case as of 3.4.
On Ubuntu 14.04 LTS versions of python2.7 and python3.4 the  property worked as expected. The  method also worked, but I'm inclined to use the standards-defined, uniform, property api instead of the localized non-uniform api.$ python2.7Seeing as dict is the semantic way to get a dictionary representing soemthing, (at least to the best of my knowledge).It would be nice to accumulate a table of major python versions and platforms and their support for , currently I only have one platform version and two python versions as posted above.
Case #1: one dimension tuple   Case #2: Two dimension tupleExample: DICT_ROLES[961] # will show 'Back-End Programmer'
Python 3. Allocate any field to the dictionary as the required index for the dictionary, I used 'name'. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.somenamedtuple._asdict
https://docs.python.org/3/library/functions.html#vars
https://docs.python.org/3/library/collections.html#collections.somenamedtuple._asdict
