Natural Text
What is the best way to remove an item from a dictionary by value, i.e. when the item's key is unknown?  Here's a simple approach:Are there better ways?  Is there anything wrong with mutating (deleting items) from the dictionary while iterating it?
Be aware that you're currently testing for object identity ( only returns  if both operands are represented by the same object in memory - this is not always the case with two object that compare equal with ). If you are doing this on purpose, then you could rewrite your code asBut this may not do what you want:So you probably want  instead of .
The  method allows you to remove items when you know the key. It returns the value at the key if it removes the item otherwise it returns what is passed as . See the docs.'Example:

A simple comparison between del and pop():result: So, del is faster than pop(). 
 returns a list, and it is that list you are iterating, so mutating the dict in the loop doesn't matter here. If you were using  instead, mutating the dict in the loop would be problematic, and likewise for  in Python 2.7.I can't think of a better way to remove items from a dict by value.
I'd build a list of keys that need removing, then remove them. It's simple, efficient and avoids any problem about simultaneously iterating over and mutating the dict.
c is the new dictionary, and a is your original dictionary, {'z','w'}are the keys you want to remove from aAlso check: https://www.safaribooksonline.com/library/view/python-cookbook-3rd/9781449357337/ch01.html

There is nothing wrong with deleting items from the dictionary while iterating, as you've proposed.  Be careful about multiple threads using the same dictionary at the same time, which may result in a KeyError or other problems.Of course, see the docs at http://docs.python.org/library/stdtypes.html#typesmapping
This is how I would do it.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.pop
