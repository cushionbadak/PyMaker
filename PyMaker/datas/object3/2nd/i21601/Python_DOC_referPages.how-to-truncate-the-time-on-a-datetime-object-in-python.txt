Natural Text
What is a classy way to way truncate a python datetime object? In this particular case, to the day. So basically setting hour, minute, seconds, and microseconds to 0.I would like the output to also be a datetime object, not a string.
I think this is what you're looking for...But if you really don't care about the time aspect of things, then you should really only be passing around  objects...
Use a  not a  if you dont care about the time.You can update a datetime like this:
Four years later: another way, avoiding I know the accepted answer from four years ago works, but this seems a tad lighter than using :NotesWhen you create a  object without passing time properties to the constructor, you get midnight.As others have noted, this assumes you want a datetime object for later use with timedeltas. You can, of course, substitute this for the first line: 
You cannot truncate a datetime object because it is immutable.However, here is one way to construct a new datetime with 0 hour, minute, second, and microsecond fields, without throwing away the original date or tzinfo:
To get a midnight corresponding to a given datetime object, you could use  method:The advantage compared to the  method is that -based solution will continue to work even if  module introduces the nanoseconds support. can be preserved if necessary but the utc offset may be different at midnight e.g., due to a DST transition and therefore a naive solution (setting  time attribute) may fail. See How do I get the UTC time of “midnight” for a given timezone?
You could use pandas for that (although it could be overhead for that task). You could use round, floor and ceil like for usual numbers and any pandas frequency from offset-aliases:
You can use datetime.strftime to extract the day, the month, the year...Example :Output (for today):If you just want to retrieve the day, you can use day attribute like :Ouput (for today):
There is a great library used to manipulate dates: Deloreanand if you want to get datetime value back:
There is a module datetime_truncate which handlers this for you. It just calls datetime.replace.
You can use just datetime.date.today() it's light and return exaclty what you want
6 years later... I found this post and I liked more the numpy aproach:cheers
If you are dealing with a Series of type DateTime there is a more efficient way to truncate them, specially when the Series object has a lot of rows. You can use the floor function For example, if you want to truncate it to hours: Generate a range of datesWe can check it comparing the running time between the replace and the floor functions.

What does truncate mean?You have full control over the formatting by using the strftime() method and using an appropriate format string.http://docs.python.org/library/datetime.html#strftime-strptime-behavior


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.combine
