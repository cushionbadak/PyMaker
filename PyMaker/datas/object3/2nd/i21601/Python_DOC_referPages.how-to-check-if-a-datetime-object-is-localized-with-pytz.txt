Natural Text
I want to store a datetime object with a localized UTC timezone. The method that stores the datetime object can be given a non-localized datetime (naive) object or an object that already has been localized. How do I determine if localization is needed?Code with missing if condition:
How do I determine if localization is needed?From  docs:a datetime object  is aware iff: is naive iff:Though if  is a datetime object representing time in UTC timezone then you could use in both cases:It works regardless  is timezone-aware or naive.Note: don't use  method with a timezone with a non-fixed utc offset (it is ok to use it with UTC timezone but otherwise you should use  method).
if you want to check if a datetime object 'd' is localized, check the d.tzinfo, if it is None, no localization.
Here's a more complete function to convert or coerce a timestamp obj to utc. If it reaches the exception this means the timestamp is not localized. Since it's good practice to always work in UTC within the code, this function is very useful at the entry level from persistence. The small addition from the 'try catch' in the answer by J.F. Sebastian is the additional catch condition, without which not all naive cases will be caught by the function. 
Here is a function wrapping up the top answer.


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.timezone
