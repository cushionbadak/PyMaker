Natural Text
Here is my set up - I would like to be able to run my unit tests by calling a command line option in prog.py, this way when I deploy my project I can deploy the ability to run the unit tests at any time.What do I need in prog.py, or the rest of my project for this to work?
Perhaps this is what you're looking for. Implement a  function in  and use the following code in  to load and run the tests: 
The Python  module contains its own test discovery function, which you can run from the command line:To run this command from within your module, you can use the  module:If your module has other command-line options you probably want to look into  for more advanced options.
You must make sure that you consistently follow some naming conventions (which you seem to be doing):All tests are named with the same prefix ( is the norm), followed by the name of the module you wish to test. => Tests reside in  directory.Then you can do something like this:prog.pyWhat we are doing, is:Checking the command arguments to see if  is present (since that's the only time you want to run the tests).If it is, then we create the  - following the naming conventions we have set.Then we pass that to the  function. discover(...) starts at the specified directory and finds all test modules (recursing into subdirectories ) that match the pattern provided.In our case, it will look inside the  directory for any module named . When it does, it loads it and creates a TestSuite with the TestCases that we want to run.Lastly, we manually test  to run the  obtained in the previous step.Normally,  will do all of this for us in the background, but since we are trying to run a specific test module, we have to tell exactly how and where to get it from.Also, note that you will have to do this for every file where you want to do this at.


Answer URL
https://docs.python.org/3/library/unittest.html#test-discovery
