Natural Text
Is there any way to use infix operators (like +,-,*,/) as higher order functions in python without creating "wrapper" functions?
You can use the operator module, which has the "wrapper" functions written for you already.Result:You can also define the wrapper using lambda functions, which saves you the trouble of a standalone :
Use operator module and a dictionary:Note that you can't use , , etc directly as they are not valid identifiers in python.
You can use the operator module this way:Output:The other solution is to use a  function, but "there should be one -- and preferably only one -- obvious way to do it", so I prefer to use the operator module
you can use anonymous function : 
No.  As others have already mentioned, there are function forms of all of the operators in the  module.  But, you can't use the operators themselves as that is a  and there is no way to dynamically change python's core syntax.  You can get close though using dictionaries and passing strings:
It is possible to give the operators , , , and  special behavior for a class using magic methods, you can read about this here: http://www.rafekettler.com/magicmethods.htmlThis isn't exactly what you were asking for because this still requires the creation of a method for each operator, but it does allow you to use the operators by symbol in your code.  Note that I don't think this is better than the other methods, it is just an illustration of how you can define behavior for operators:And examples:Of course this method can't be used for a more complex prefix equation like  because there is no way to define behavior for adjacent operators, which will always give a SyntaxError (except for a few special cases where  or  are interpreted as making the next element positive or negative).


Answer URL
