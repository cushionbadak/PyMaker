Natural Text
This question already has an answer here:Redirect stdout to a file in Python?                    11 answers                Just wanted to pick your brains on this.  I have several subprocesses running and I wanted to print the stderr and stdout to a file.  I've done this so far:Is this the best way to do this.  If I have more than one process, I guess its going to re-write the log files, so that could be a problem.  Appreciate some advice here. Thanks
I'm pretty sure that you can provide your own  instances as keywords to .Here's the portion of the  documents that matters:stdin, stdout and stderr specify the executed program’s standard input, standard output and standard error file handles, respectively. Valid values are , , an existing file descriptor (a positive integer), an existing file object, and .  indicates that a new pipe to the child should be created.  indicates that the special file  will be used. With the default settings of , no redirection will occur; the child’s file handles will be inherited from the parent. Additionally,  can be , which indicates that the  data from the applications should be captured into the same file handle as for .


Answer URL
