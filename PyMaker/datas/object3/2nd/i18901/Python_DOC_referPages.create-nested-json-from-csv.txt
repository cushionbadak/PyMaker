Natural Text
I already read Create nested JSON from flat csv, but it didn't help in my case.I have quite a big spreadsheet created with Google Docs consisting of 11 rows and 74 columns (some columns are not occupied).I created an example on Google Drive. When exported as a  it looks like this:Now I would like to have a  structure, which looks like this:And so on for the other lines.My theoretical approach would be to go through the  file per row (here starts the first problem: now every row is equal to one line, but sometimes several, thus I need to count the commas?). Each row is equal to a block of , including the , , , and  (the latter two are being generated depending on the row number).Then for each row a  block is generated with the same  as the one inserted in the  block. The  is an array of as many elements as pictures are given.Lastly each row has a  block, which, again, has the same  as the one given in , and one entry of  with the corresponding status.I'm entirely clueless how to create the nested and conditional JSON file.I just got to the point where I convert the  to valid , without any nesting and additional info, which are not directly given in the , like the , , , and so on.Any help is appreciated. If it is easier to program this in another script language (like ), I would gladly switch to those).Before someone thinks this is a homework or whatnot. It is not. I just want to automate an otherwise very tiresome copy&paste task.
The  module will handle the CSV reading nicely - including handling line breaks that are within quotes.The  object is an iterator - you can iterate through the rows in the CSV by using a  loop. Each row is a list, so you can get each field as , , etc. Be aware that this will load the first row (which just contains field names in your case).As we have field names given to us in the first row, we can use  so that fields in each row can be accessed as , , etc. This will also skip the first row for us:For the JSON export, use the  module.  will take Python data structures such as lists and dictionaries and return the appropriate JSON string:If you want to generate JSON output exactly as you posted, you'd do something like: will contain the JSON output that you want.However, I'd suggest you carefully consider the structure of the JSON output that you're after - at the moment, you're defining an outer dictionary that serves no purpose, and you're adding all your '' data directly under '' - you may want to reconsider this.


Answer URL
