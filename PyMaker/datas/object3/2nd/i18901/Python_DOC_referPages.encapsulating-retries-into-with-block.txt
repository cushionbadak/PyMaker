Natural Text
I'm looking to encapsulate logic for database transactions into a  block; wrapping the code in a transaction and handling various exceptions (locking issues). This is simple enough, however I'd like to also have the block encapsulate the retrying of the code block following certain exceptions. I can't see a way to package this up neatly into the context manager.Is it possible to repeat the code within a  statement?I'd like to use it as simply as this, which is really neat.I'm currently handling this with a decorator, but I'd prefer to offer the context manager (or in fact both), so I can choose to wrap a few lines of code in the  block instead of an inline function wrapped in a decorator, which is what I do at the moment:
Is it possible to repeat the code within a  statement?No.As pointed out earlier in that mailing list thread, you can reduce a bit of duplication by making the decorator call the passed function:
The way that occurs to me to do this is just to implement a standard database transaction context manager, but allow it to take a  argument in the constructor. Then I'd just wrap that up in your method implementations. Something like this:
As decorators are just functions themselves, you could do the following:For the details, you'd need to implement  as a factory method that returns an object with  set to call the original method and repeat it up to  number of times on failure;  and  would be defined as normal for database transaction context managers.You could alternatively set up  such that it itself executes the passed method up to  number of times, which would probably require about the same amount of work as implementing the context manager but would mean actual usage would be reduced to just  (which is, in fact, equivalent to the decorator example delnan provided).
While I agree it can't be done with a context manager... it can be done with two context managers!The result is a little awkward, and I am not sure whether I approve of my own code yet, but this is what it looks like as the client:There is an explicit  loop still, and not one, but two,  statements, which leaves a little too much opportunity for mistakes for my liking.Here's the code:Bonus: I know you don't want to separate your work off into separate functions wrapped with decorators... but if you were happy with that, the redo package from Mozilla offers the decorators to do that, so you don't have to roll your own. There is even a Context Manager that effective acts as temporary decorator for your function, but it still relies on your retrievable code to be factored out into a single function.


Answer URL
