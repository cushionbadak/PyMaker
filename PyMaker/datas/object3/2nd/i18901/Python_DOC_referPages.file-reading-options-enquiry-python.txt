Natural Text
I am a programming student for the semester. In class we have been learning about file opening, reading and writing. We have used  to achieve such tasks for file opening. I have been reading our associated text/s and I have noticed that there is a CSV reader option which I have been using.I wanted to know if there were anymore possible ways to open/read a file as I am trying to grow my knowledge base in python and its associated contents. EDIT:I was referring to CSV more specifically as that is the type of files we use at the moment. We have learnt about CSV Reader and a_reader and an example from one of our lectures is shown below. It may seem overly broad but I have no knowledge which is why I am asking is there more than just the 2 ways above. If there is can someone who knows provide the types so I can read up on and research on them. 
If you're asking about places to store things, the first interfaces you'll meet are files and sockets (pretend a network connection is like a file, see http://docs.python.org/2/library/socket.html).If you mean file formats (like csv), there are many! Probably you can think of many yourself, but besides csv there are html files, pictures (png, jpg, gif), archive formats (tar, zip), text files (.txt!), python files (.py). The list goes on.
There are many ways to read files in different ways.Just plain  will take a filename and open it as a sequence of lines. Or, you can just call  on it, and it will read the whole file at once into one giant string. will take a filename and a character set, and decode each line to Unicode automatically. Or, again, you can just call  on it, and it will read and decode the whole file at once into one giant Unicode string. will take a file or file-like object, and read it as a sequence of CSV rows. There's no direct equivalent of —but you can turn any sequence into a list by just calling  on it, so  will give you a list of rows (each of which is, itself, a list). will take a filename, or a file or file-like object, and read it as a ZIP archive. This doesn't go line by line, of course, but you can go archived file by archived file. Or you can do fancier things, like search for archived files by name.There are modules for reading JSON and XML documents, different ways of handling binary files, and so on. Some of them work differently—for example, you can search an XML document as a tree with one module, or go element by element with a different one.Python has a pretty extensive standard library, and you can find the documentation online. Every module that seems like it should be able to work on files, probably can.And, beyond what comes in the standard library, PyPI, the Python Package Index has thousands of additional modules. Looking for a way to read YAML documents? Search PyPI for  and you'll find it.Finally, Python makes it very easy to add things like this on your own. The skeleton of a function like  is as simple as this:You can replace that  with anything you want, and you've got a custom reader. For example, here's an uppercase_reader:In fact, you can even write the whole thing in one line:And the best thing is that, as long as your reader only yields one line at a time, your reader is itself a file-like object, so you can pass  to  and it works just fine.


Answer URL
