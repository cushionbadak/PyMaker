Natural Text
I want to apply a function that would generate the result of this in general cases:That is, instead of specifying , , etc., it would be done in general case like Do you have any ideas how I can do this?
What you really want is :This has the very large advantage of optimizing the contraction order to be the most efficient, rather than simply running through the list. If your matrices are square there is no difference; however, this can be very beneficial if they are not.
Like already mentioned by @wwii you can use  instead of recursion:Just replace the variables with the actual function and variables:
Put your things in a container and use functools.reduce
An alternative solution to the excellent ones proposed using  would be to use numpy's einsum.NOTE: this is not a better solution, just an alternative approach (and a fun one).For example, for 3 random arrays:The recursive dot product can be written as:Then a generic function can be written as:And then call it:NOTE2: It has the limitation that can only operate in 26 matrices (the number of letters in the above alphabet).Or if you have an array with the input matrices, change to:And


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
https://docs.python.org/3/library/functools.html#functools.reduce
