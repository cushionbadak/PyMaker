Natural Text
Here is the documented contents:I can't tell the difference between them, aren't they equivalent rules?
The cited grammar is not identical to the actual grammar (although one hopes that the two have identical effect); you can see the grammar actually used to generate the CPython parser in Chapter 10 of the reference manual. The two grammars do not differ solely in the names of non-terminals, so it is not entirely obvious which source code productions correspond to the quoted rules.Broadly speaking, the difference between the two productions quoted is semantic, not syntactic; both productions yield exactly the same set of valid sentences. The semantic difference is the handling of a single unstarred expression with no trailing comma; the first alternative of:It would also be possible to derive  from the second alternative, by matching zero repetitions of  and then a single , using the first alternative of . However, the apparently redundant alternation is specified because the two alternatives have different semantics:is a simple parenthesized expression, whereasis a one-element tuple. This distinction is only needed if the expression list is surrounded by parentheses; if it is surrounded by brackets or braces, there is no semantic distinction between the two cases:  is semantically identical to  and similarly with  and . This is reflected in the grammar; in the production which could produce either a parenthesized expression or a tuple,  is used:In the other literal syntaxes, we see , which does not include the redundant alternative:


Answer URL
https://docs.python.org/3/reference/expressions.html#expression-lists
https://docs.python.org/3/reference/grammar.html
