Natural Text
I'm using the  library in some of my code to wait for a condition to become true. As a part of the library,  returns  when the predicate is true; otherwise it throws and exception or waits forever depending on timeout values, etc.I'd like to patch this in my tests to always return  without getting into the wait cycle. Here's my attempt:What I find, though, is that it actually calls the library's code instead of short-circuiting the return.How can I force this method to simply return a value (or raise a side-effect) without actually calling the code?
Your  won't work, because  is not a mock object. You only added an arbitrary attribute to the existing  function, but that function won't use that attribute.To mock out the  function, just mock it directly:There is no need to mock the internals of the  library, all you want to happen in your code is that any use of the  callable immediately returns.Note that I picked the  module to patch the name  in, see Where to patch in the  documentation.Your actual location may differ, and if you used  everywhere, then you'd have to use . Otherwise, you generally would apply it the same module you used  in.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
