Natural Text
This is probably a silly question but I was wondering, when we have a container object such as a list or a tuple, and we index it:in the console we get:much in the same way we would get if we did:Is there a hidden function call being made when we index lists or tuples or the like? 
Your assumption is correct. Python has certain "magic methods" which are called from objects using the corresponding operator(s). The subscript operator() is one of them. The magic method is called . The documentation for  provides more information:Called to implement evaluation of . For sequence types, the accepted keys should be integers and slice objects. Note that the special interpretation of negative indexes (if the class wishes to emulate a sequence type) is up to the  method. If key is of an inappropriate type,  may be raised; if of a value outside the set of indexes for the sequence (after any special interpretation of negative values),  should be raised. For mapping types, if key is missing (not in the container),  should be raised. You can observe how  works by calling it manually:There are several other methods similar to ; and .  sets the given index in the list to a given value. The syntactic sugar for calling the method is . On the other hand,  deletes the value at the given index. It's syntactic sugar is . Both methods can be called manually and observed:ResourcesPython 3 documentation. Section 3.3 Special method names
Yes; pretty all operations on objects map to special methods. In this case it is the  method.


Answer URL
https://docs.python.org/3/reference/datamodel.html#special-method-names
https://docs.python.org/3/reference/datamodel.html#object.__getitem__
https://docs.python.org/3/reference/datamodel.html#object.__setitem__
https://docs.python.org/3/reference/datamodel.html#object.__delitem__
https://docs.python.org/3/
https://docs.python.org/3/reference/datamodel.html#special-method-names
https://docs.python.org/3/reference/datamodel.html#object.__getitem__
