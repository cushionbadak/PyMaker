Natural Text
The old-style class works, but the new-style class doesn't.  Why?Note:  I'm using 2.7 above.  None of this applies in Python 3, where  is documented as responding to  and old-style classes have gone the way of the Norwegian Blue.  
Old-style classes implement a different method to test if you can convert to a number, one that supports using  if  doesn't exist. (Python 2), uses  to convert the value to an integer, which is roughly, but not quite, like using . So we have to look at the  slot for both old and new-style classes here.Old-style classes implement the  slot as , which uses  (or rather, the C equivalent) to test for : swallows all exceptions, including the  your old-style class throws:Because  swallows the exception,  returns :and the next line in  then uses :New-style classes never also use  when you ask for ; they want  or bust. That's because they support slots directly;  directly calls  if available (bypassing  altogether).Note that when explicitly using  to convert, then the underlying C code will look for a  attribute explicitly (using it only if no  slot is available), but at least it won't use  for this. This means using  on your new-style class still works:In Python 3, all use of  treats it as a proper special method.


Answer URL
https://docs.python.org/3/reference/datamodel.html#special-lookup
