Natural Text
How do I convert a list in Python 3.5 such as: to an int of  (a whole int)?
If you have a list of s and you want to join them together, you can use  with  to convert them to strings,  them on the empty string and then cast back to s with .In code, this looks like this:and  now has the wanted value of .This, of course, is a limited approach that comes with some conditions. It requires the list in question to contain nothing else but positive s (as your sample) or strings representing s, else the steps of conversion to string might fail or the joining of (negative) numbers will be clunky. 
Here is a more mathematical way that does not have to convert back and forth to string. Note that it will only work if 0 <= i <= 9.The idea is to multiply each element in the list by its corresponding power of 10 and then to sum the result.
Using only math (no conversions to or from strings), you can use the  function ( in Python 3)This makes use of Horner's rule, which factors the polynomial representing the number to reduce the number of multiplications. For example,As a result, this is faster than computing powers of 10 or creating a string and converting the result to an integer.In fairness, string conversion is faster once the number of digits gets larger.
If you don't like map you can always use a list comprehension:


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functions.html#func-str
https://docs.python.org/3/library/functions.html#int
