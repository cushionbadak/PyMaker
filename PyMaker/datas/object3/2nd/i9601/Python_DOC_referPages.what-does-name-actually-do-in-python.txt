Natural Text
First of all I have to say, that I'm not new in Python. I know the use of  well enough. I just try to understand how the Python interpreter handles this. I wrote two scripts to test what's possible in Python. Note that that's actually really bad Python - I wouldn't make use of such things. I only want to learn about the possibilities.main.py:bad.py:There's no output by running  and I didn't really expect an output.what I want to know:does  in  automatically change the variable  in ? Or can two different -modules exist?is it possible to substitute an  statement just by manipulating ? If it is, how would you do that?when I change  to , The output is , then an Error occurs:could someone explain this behaviour?Are there any differences between python versions / operating systems? I tried this example in Python 2.7.6 on Linux2EDIT:Of course  doesn't work. -statements don't want any file-endings. I did this mistake because I also program in C. I changed the line to . The output looks like this now:
change your import statement to The  intention is to run this code if this program is run directly, as a main program. As you see you can overwrite the name value but the same effect would occur if you remove the if check in bad. in bad.py is independent from  in main.py. You can see that when you again call main.py from another program.the import function is completely different from the  attribute. So no.you got the error because main continues with the next import after bad was finished. And it cannot import py.Add some more print statements to follow the logic. You can also print  itself to see those values.
A few things are happening in your code :Firstly your import line Isn'i importing the file  bad.py. It's performing a search see here for the search logicto find a module called    Which its finding and the =n once  is imported it's looking inside that module for an object called   which its not finding and instead returning an Import Error.      (in the exit(). Version your quitting before the import of  is complete so it  doesn't get the chance to try and find Secondly name. Is defined for each module by the the interpreter and import logic, when the file is loaded name is set,  after that you can change it all you want (like in bad.py).  It's also scoped to module, changing  doesn't change 


Answer URL
https://docs.python.org/3/reference/import.html#searching
https://docs.python.org/3/library/__main__.html
