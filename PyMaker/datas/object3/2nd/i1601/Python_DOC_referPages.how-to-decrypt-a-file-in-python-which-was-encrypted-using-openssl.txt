Natural Text
This question already has an answer here:How to decrypt OpenSSL AES-encrypted files in Python?                    5 answers                I encrypted a file using  using the below commandHow can i decrypt the file using python Crypto package. I tried the below and it didn't work. I need a way to encrypt a file using openssl aes-256-cbc cipher and decrypt in python
The password is not the key. Openssl uses  to create an appropriate key (& IV, if necessary) from the password and the salt.As James K Polk mentions in a comment, you can use the -P (or -p) option to tell Openssl to print the key (in hex ), which you can then pass to Crypto.Cipher. Alternatively, you can implement  in Python, as shown below. This is a simplified version of  that uses no salt, and the default value of 1 for the  arg.As the  docs state, this is a rather weak password derivation function. As the hashlib docs mention, modern password derivation normally performs hundreds of thousands of hashes to make password hashing attacks very slow.We also need a function to remove the PKCS7 padding from the decrypted data bytes. The  function below simply assumes that the padding data is valid. In real software the  function must verify that the padded data is valid to prevent padding-based attacks. My  function also assumes the data has been encoded as UTF-8 bytes and decodes the unpadded data to text.outputThat code will not run on Python 3, so here's a Python 3 version.  output


Answer URL
https://docs.python.org/3/library/hashlib.html#key-derivation
