Natural Text
I have started learning python and now learning python for loop. I am using online source to learn python. But i am little but confused about for loop. The output of and are same then why to use range(len) method? Thanks in advance.
For such simple case,  is generally considered an anti-pattern. The are cases when it's useful to have the index around, though, such as when you need to assign back to the list:Even in that case,  are better avoided in favor of :Also, as already pointed out in a comment, avoid variable names that clash with built-ins, such as .
While the latter is definitiely the way to go as long as it fits your needs since its clear and pythonic, there are cases where you really need the index of the element. One example are sorting algorithms, like this BubbleSort here (src):Here the list indices of sequential elements are used to swap their positions in the list if their sort order is incorrect, while the position in the list is something the pure values of the elements in a  loop don't have any connection to anymore. Therefore in such cases you won't get around using the  over the list's  or similar, so that's not un-pythonic by defintion.Last but not least, a good combination if you need both the index and the value is Python's .Although one could use it in the above BubbleSort example, you'd start mixing  variables with  expressions, which is not a good idea for the readability of the code. So here, too, it depends very much on the situation if it makes sense to use the one construct or the other, there's no definite choice.
you should never use the first one, it's non-pythonic. Use the second one. If for whatever reason you need the index, use enumerate, e.g.
Like others, I can't think of many use cases for . The only one that really pops to mind is if you need to remove elements from  over the course of the  loop (in which case, as pointed out in the comments, you should go backwards), or you want to do a number of loops equal to  for some reason unconnected to operations on .But yes, generally don't use  if you are iterating over x.


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#enumerate
