Natural Text
I recently moved from Matlab to Python and want to transfer some Matlab code to Python. However an obstacle popped up.In Matlab you can define a class with its methods and create nd-arrays of instances. The nice thing is that you can apply the class methods to the array of instances as long as the method is written so it can deal with the arrays. Now in Python I found that this is not possible: when applying a class method to a list of instances it will not find the class method. Below an example of how I would write the code:This will give an error on the times5(classlist) line. Now this is a simple example explaining what I want to do (the final class will have multiple numpy arrays as variables).What is the best way to get this kind of functionality in Python? The reason I want to do this is because it allows batch operations and they make the class a lot more powerful. The only solution I can think of is to define a second class that has a list of instances of the first class as variables. The batch processing would need to be implemented in the second class then.thanks!
UPDATE:In your comment , I notice this sentence,For example a function that takes the data of the first class in the list and substracts the data of all following classe.This can be solved by reduce function.ORIGIN ANSWER:In fact, what you need is List Comprehensions.Please let me show you the code 


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
