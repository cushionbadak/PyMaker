Natural Text
I have a list of tuples namely:But now for example the element is the same as , which are marked fat in the list.So in the list I have 16 elements, where every element is double. Now, I want to delete the duplicates, that I have only the first eight elements left.So naively, I've tried withBut here, he says:So my question:How can I extend the list comprehension, that it works for a more dimensional list?
A mutable object (such as a list or a set) cannot be a member of a set. You can use a frozenset, which is immutable.Output:To convert back to the original structure of nested lists:Output:UPDATE:A solution that removes the duplicate items in-place from the input data.
Lists aren't hashable, tuples are hashable. You then need to take a  of these tuples. But inside these tuples, you want to disregard order. But a tuples of sets are not hashable, so instead you need to use tuples of  objects:You can then apply this via the   recipe, also available in 3rd party libraries as  or :Input data


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset
https://docs.python.org/3/library/itertools.html#itertools-recipes
