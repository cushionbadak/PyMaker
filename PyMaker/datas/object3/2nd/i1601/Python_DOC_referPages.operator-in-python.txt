Natural Text
I've been using Python a while and I bumped into this operator "^=" for the first time from this link.Of course, I did some googling, but I can't seem to find this operator. What does it do?
The  operator yields the bitwise XOR (exclusive OR) of its arguments, which must be integers.https://docs.python.org/3/reference/expressions.html#binary-bitwise-operationsAs with all the other  operators,  assigns the result back to the variable:  is eqivalent to .As a function it is  (or ), and may have different behaviour for non-integer types.
The special method that relates to  and is called behind the curtains is . The special method that relates to  is . They don't have to behave the same. is the Augmented Assignment variant of , performing inplace operations when possible, and falling back to  when  is not implemented.In principle, the return value of the method is completely up to the implementation of , but there are some common use cases.For two sets,  computes the symmetric difference of the sets  and  (all elements present in exactly one of the two sets) and mutates .Note that  has been mutated in place, thus  and  both point to the same  object  in memory. Thus  behaves differently from  in this case, which builds a new set as shown below.Note that  has built a new set to which the name  has been reassigned and  still refers to the original set .For builtin immutable types (like integers),  is indeed equivalent to . Since integers have no  method, Python falls back to using .In the case of integers  performs a bitwise-non-equal operation and the name  is reassigned to the result of that computation.Demo:Explanation:
It is XOR. https://docs.python.org/3/reference/expressions.html#binary-bitwise-operationsFor example:Output:Because in binary  is , then  is .XOR operation mean:
 equialent to  - is XOR operator


Answer URL
https://docs.python.org/3/reference/expressions.html#binary-bitwise-operations
https://docs.python.org/3/library/operator.html
https://docs.python.org/3/reference/datamodel.html#object.__ixor__
https://docs.python.org/3/reference/datamodel.html#object.__xor__
https://docs.python.org/3/reference/expressions.html#binary-bitwise-operations
https://docs.python.org/3/reference/expressions.html#binary-bitwise-operations
