Natural Text
I'm a complete amateur, and trying to work out how to write a function that takes a list of objects, and returns a list of the names of said objects (based on whether they pass if statement). This is the class I've written from help of tutorials:So from now I'm assuming I make a list of objects, say:  Though this list is just a brand new list, which was necessary sure but how would I link it to the class? From this point I want to find out which students have failed, and return them and also where I am confused:  Is all I can muster, sorry I've just gotten to classes and calling classes is quite confusing for me. The above code doesn't reference the class at all, and I really am confused on how to do so. I've no syntax errors or anything, I think my logic is fatally flawed.
You can use a list comprehension like this:
You want to take all the student from the students list. So use that in the for loop. Also, you correctly encapsulated the logic of pass/fail criteria in a method, so use that.Here is the code I think will do want you want:A more advanced way of doing it is by using list comprehension:It is more pythonic, but my be harder to understand for a beginner with a C or Java background.
Try this code. Using list comprehension to return results. It's a very powerful python tool.
Given a  class like you defined:You could instantiate a list of students with:It looks like you are also trying to define a function that will return a list of all the failed students; you could do something like this:
With this approach every time a student object is created it will tell create a field telling you that student has passed. When working with lists such as a list of student objects you need to add the student to your list. ExampleNow you can look through your student list by doing
I'm assuming that failed isn't a member function of the class Student. The below code should work for what you are trying to do.The ouput when you run the code is:tom


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
