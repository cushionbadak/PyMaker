Natural Text
I want to do array indexing. I would have expected the result to be [0,1,1,0], however I just get an error. How can I do this type of indexing? Up top, i actually meant to say [False,True,True,False] not [0,1,1,0] as I want the bools so i can do indexing
First of all you cannot use  for indexing here, so you're using the wrong term.If I understood this correctly you're simply trying to check whether items of  exist in ,  for that use , but as it returns boolean array we just need to convert it integer array.Coming to why  didn't work?Here the  operator will call the  method of the list object() and then for each object in list Python will use the method  to compare each item to .  first of all simply checks if the items to be compared are the same object, i.e same , if yes return 1 right away otherwise call  on them. Hence this will work:But this won't:Now Python will check whether the object returned by  is already a boolean type, i.e  or (This is done using  and ), if it is then return the result immediately otherwise call  to check whether the object can be considered a truthy object, this is done by calling  method of the object. For a NumPy array this will end up calling  on the returned object which is going to raise an error you're getting. Here NumPy expects you to call either  or  to check whether all items are  or at least one.Links to source code:
Try this list comprehension:Utilizing the fact that  and 


Answer URL
https://docs.python.org/3/c-api/object.html#c.PyObject_RichCompareBool
https://docs.python.org/3/c-api/object.html#c.PyObject_RichCompare
