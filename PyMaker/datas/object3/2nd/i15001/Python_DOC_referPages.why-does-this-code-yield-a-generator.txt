Natural Text
This question already has an answer here:What does the “yield” keyword do?                    43 answers                I wrote the following into the Python interpreter today:This was surprising to me. Shouldn't  return (or yield) one of the elements in my list, not a generator which yields them?A second function which uses "return" behaves as expected:Why is this so? Where in the documentation describes this behaviour?
Because your yield is nested in your for loop, all your values will be added to the generator expression. Generators are basically equivalent to iterators except, iterators retain the values unless deleted whereas generators generate the values once on the fly. The next method of the generator is implicitly called by the way when used in a for loop rather than a generator. In addition, you must remember that the return keyword returns one and only on value as does yield. The function returns one generator object with yield that is ready to generate all the supplied values. A standard return statement though returns a value and exits the function so that the other values aren't returned.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-yield-statement
https://docs.python.org/3/reference/expressions.html#yieldexpr
