Natural Text
I've been doing a course in Python, and got to the exercise where I have this codeCan anyone explain, why does sorting orders the list in that way?And why finding an item with max length returns wrong item? It is not the expected result at all.
You use the last character as sort criterion. Sorting is stable. Therefore, for this list: and  compare equal for the last letter and stay in the order they are in the original list.For the same reason  gives you . Both have the same length:and  is before  in the original list.The docs explain this well:The  method is guaranteed to be stable. A sort is stable if it guarantees not to change the relative order of elements that compare equal â€” this is helpful for sorting in multiple passes (for example, sort by department, then by salary grade).
Your code  sorts the words by the last character of each of the words and if there are multiple possibilities it maintains the order in the original list.If you need a regular alphabetical sort, then you need to use  and the result would beIf you sort words by  then the list contains .  finds the first value of the list of possible values and hence its result is  as it appears before 
Your Code is sorting according  to last index try this"bananas"and "cabbage" have same length. It search which one is first in list then print this first occurrence


Answer URL
https://docs.python.org/3/library/stdtypes.html#list.sort
