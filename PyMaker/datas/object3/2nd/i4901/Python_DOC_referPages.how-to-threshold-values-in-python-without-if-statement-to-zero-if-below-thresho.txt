Natural Text
I want to do an inline comparison without writing 'If statements' in Python.  If the value meets the threshold condition, it should be unchanged.  If it doesn't the value should be set to 0.In Python I don't seem to be allowed to apply a boolean operator to a list directly. In Matlab, it's convenient that 'True' gives a '1' and 'False' gives a zero in array operations. This is matlab-like, but won't work in python (maybe would with numpy?). Pseudocode example:Desired result: What is the best way to do this in python?
You need - OutputThis is known as a List ComprehensionAccording to your input and expected output, this is a "pythonic" way to do thisList comprehensions provide a concise way to create lists. Common  applications are to make new lists where each element is the result of  some operations applied to each member of another sequence or  iterable, or to create a subsequence of those elements that satisfy a  certain condition.You use case is kind of made for this :)
It may worth looking at  if you are working with numerical arrays.
The best answer I have found so far is to enumerate and loop through the array, using the python operator for the threshold or comparison logic.The key is to multiply the index element by the logical comparison.  e.g.Returns the value of 1.5 as expected, and returns 0 if a is negative.  Here's the example then with the full list:Hope that helps someone!


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
