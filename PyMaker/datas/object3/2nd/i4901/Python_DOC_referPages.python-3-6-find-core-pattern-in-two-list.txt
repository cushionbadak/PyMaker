Natural Text
I am searching for an efficient way to find core patterns in two different lists, I'll explain:List 1:List 2:The two lists could have more than 300 elements, the similar elements in each list is statisticaly very large each time (probably more than 60%)My goal, find the point where the "core" start in each list.A new list come every 5 minutes and will be compared to the previous one. What I am interested in is the part that is not the core. In other word I need to retrieve the start of the list up until the core (that was identified) of the previous list. Efficiency is the key, new list each 5 minutes, but hundreds parallels processing.Any algo or math way or solution will help :)I hope I was precise in my request
This will do it for your samples, did not try it with big lists.The intermediate powersets get gigantic, so might not be the right choice:Output:For a  the resulting set has 45150 elements. You can tune that by f.e. restrincting the powerskiptakeset's to a min lenght 25% of the input iterables length:which drops the amount of tuples in the set down to about 25k.


Answer URL
