Natural Text
I´m currently creating a program which will be able to create classes at runtime. What I want is to load a json file into the script and from there create classes and inherited classes. In this file the class names will come as strings, this is why I need a solution that takes a string "A" and converts it into class A(metaclass=Metaclass) .I have learned a bit of metaclasses and understand some of it, however, I failed to create classes due to the fact that I´m not able to declare the name of the class. I came to a clumsy solution by using globals(). However, I was wondering if there is a more pythonic solution.The output would be:Now I can create subclasses of Foo with creator(), however, I understand I'm having the wrong approach and my code is not able to produce directly subclasses of MetaFoo. So here are my three questions.How can I create classes from Metaclass using a string loaded externally? Not using metaclass type() like I did because if I were to use type() to create classes there would be no point to create a custom metaclass.I need to use metaclass not only because it lets you create new classes dinamically, but becuase it offers many functionalities like that I need in my program.I´m going to be dealing with big data, probably some millions of SQLite3 lines. Each line corresponds to a purchase and each class to a category, subcategory, etc. Performance wise, ¿Is having million of active objects, in this case, instances of the classes created by Metaclass, going to slow down the program or not being able to compute at all?I know how to keep track of new classes being created via metaclass, but ¿How do I keep track of instances of the classes, which magic method and how should I modify it?Thank you for your time.
Instead of using , call  directly.  Jeff Knupp mentions doing something similar with metaclasses and databases for his  library in a post here. You might want to look at his code and see if he's written anything more on that subject.


Answer URL
https://docs.python.org/3/library/sys.html#sys.getsizeof
