Natural Text
I was wondering if anyone could help to come up with an elegant solution how to split a time string received from router's API of format  into pieces.The problem is that string could be dynamical size. For example, it can be  or  or  or , .Is there any elegant way to have split the string and get a list like:
You could use a regular expression:The  function produces a list of all matches of a given pattern in the input string. Here the pattern looks for 1 or more digits, followed by one lower-case ASCII letter.You could make it more picky about what letters are allowed by using , but if your input is reasonably well-formed I'd not worry about that.Demo:You may want to further split out the digits and letters, however, to make it easier to then transform the information into an easier to work with format like a  object, perhaps into a dictionary:The added  groupings alter the  output to produce a tuple for each match, containing the separate group values (so , , etc.).This producesfor your input.
Martijn's answer is excellent as usual. I just thought I'd expand a touch on a way to use timedelta in this conversion:Admittedly, that last is a bit of a mess. Note that the year unit is a rough approximation (365 days). I used  to extract those units and permit them in the regular expression, parenthesis in the regular expression to produce value and unit as a pair, and  as a substitute for  because the latter didn't work on . In the end we have a single timedelta we can read normalized times from with e.g. .Possibly more usefully I added a way to detect if we've left something out using . Wrong data could be more harmful than detecting invalid conversions. 


Answer URL
https://docs.python.org/3/howto/regex.html#regex-howto
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/library/datetime.html#timedelta-objects
