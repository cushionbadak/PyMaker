Natural Text
 and  both test whether a value is truthy or falsy and they seem rather similar from the docs, it even says in the  docs that:This is equivalent to using the bool constructor.However,  is over twice as fast as  from a simple test (Python 3.6 timings shown, but 2.7 is similar):So what are the differences? Should I use  instead of ?This Q&A arose after extensive comments and discussion with ShadowRanger under this question.
Although  and  output the same result for the major uses cases their implementation is actually rather different.  is a class or type constructor while  is a narrow optimised regular function.In practical terms, there are also two differences: 1)  called with no arguments s  while  requires an argument. 2)  accepts an  key word argument, like , while  takes no keyword arguments. Both of these add overhead to  for the regular use cases.The key word implementation is odd since likely no-one needs it and the name  is hardly descriptive. Issue29695 covers this, and in fact the issue impacts not just  but other classes like  or . However, from Python 3.7 onwards these key word arguments will be removed, and speed should improve. Nonetheless, I tested the timings on the latest Python 3.8 branch, and  is faster than before but still over twice as slow as , presumably due to the more generic implementation of .So, if you have a task where speed is of high importance I would recommend using  over  if you require a function (for example to parse as a key to ). However, as khelwood points out,  can still be faster occasionally, such as , so it is probably best to time your use case to be certain of the best option.Of course, if you don't need a function and simply want to test if a value is truthy or falsy you should use the idiomatic  or  statements, which are fastest as khelwood and user2357112 commented.This Q&A arose after extensive comments and discussion with ShadowRanger under this question.


Answer URL
https://docs.python.org/3/library/functions.html#bool
https://docs.python.org/3/library/operator.html#operator.truth
