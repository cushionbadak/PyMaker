Natural Text
if I have:Will the file automatically close after getting the data? If not how can I close it since fdata is not a handle?Thank you
UseIts not only about auto-closing, but also about correct closing in case of exceptions.Doku: methods of file objectsIt is good practice to use the  keyword when dealing with file  objects. The advantage is that the file is properly closed after its  suite finishes, even if an exception is raised at some point. Using   is also much shorter than writing equivalent  blocks:   If you’re not using the  keyword, then you should call   to close the file and immediately free up any system resources used by  it.  If you don’t explicitly close a file, Python’s garbage collector  will eventually destroy the object and close the open file for you,  but the file may stay open for a while. Another risk is that different  Python implementations will do this clean-up at different times.
The file will be automatically closed during exit or garbage collection. But as best practices matter, the better approach would be to use a context manager such as below:Thank you.
If you use this:Then you don't have to close your file, it is done automatically. It's always good practice to have your files closed after you are done using them (reduces the risk of memory leaks, etc...)
Will the file automatically close after getting the data? In your example,  is actually a list, not a file object. The file object is what returned by .If you had a name bound to a file object or  were a file object, the answer would be it depends.If the file object, does not have any reference present i.e. it's reference count reaches 0, it will be garbage collected and hence will be destroyed in the process.If not how can I close it since fdata is not a handle?You can't as  is not a file object (like you mentioned) and you don't have any reference to the file object returned by  either.If you had a file object, you could explicitly call  on it:Better yet, as the  is a context manager, use the  construct to let it close automatically upon the block end:One added advantage is that the file will be closed in case of an exception too. If you are interested, check the  and  special methods of .


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects
