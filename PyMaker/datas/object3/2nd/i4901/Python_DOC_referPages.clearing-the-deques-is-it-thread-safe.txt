Natural Text
I've been reading about the thread-safety of CPython's  here and here.  I understand that  and  operations play nice with each other across threads, as do  and .My question is: does the same apply between  and ?  Or failing that, between  and ?   My situation is that I have a consumer thread, call it A, continually ing items from a  , and a producer thread B that s them on the right.  At some point I want thread B to be able to say "cancel all pending items".  If I do this with will it potentially lead to undefined behaviour due to clashes with thread A's  operations?   How about if I say:instead?
From the documentation of the api :Deques support thread-safe, memory efficient appends and pops from either side of the deque with approximately the same O(1) performance in either direction   (emphasis mine)Which means that you can pop on any side and still enjoy the benefits. As far as the  method goes, one can only be sure by looking at the implementation, but i would assume it's implemented just the same way you suggested.Edit:Also, if i remember correctly from the java implementation of blocking queues, which for all intended purposes should be fairly close to this one, calling  on a queue object does not guarantee that when you access it on the next code line, you will find it empty
If I recall, they should not interfere with what you are trying to do as they will place a mutex on the resource and perform any operation independently, and as long as you catch an exception from the resource if it is empty when attempting to pop you should be good to go. 


Answer URL
https://docs.python.org/3/library/collections.html#collections.deque
