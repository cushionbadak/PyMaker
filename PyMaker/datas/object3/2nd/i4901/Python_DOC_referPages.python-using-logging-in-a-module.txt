Natural Text
I have tried to find the best way to set up logging in a module, including here, but I still cannot seem to get logging working as I expected.My files are:The contents are:__init__.pybar.pyapp.pyRunning app.py in this format produces no logging output.But if I uncomment the line in bar.py:I get the logging outpt, but not formatting as app.py has defined.Can someone please help me understand what I'm missing?
Why should you get output?From the docs: NullHandlerThe NullHandler class, located in the core logging package, does not do any formatting or output. It is essentially a ‘no-op’ handler for use by library developers.The formatter is applied to the  if you want to set it as general default or the the instance (like you do for ). Now you just have to add it to the bar.logger.addHandler() (through a func f.e.) instead of creating a new variable in your other py file thats named the same as the member in bar.In essence: you have multiple loggers, if you print the names, you get something along:You only configure the Formatter of main, not the others.To debug what and if any handler/formatstrings are set:
The application should dictated the logging rather than the library, so if you want to enable the logging of foo/bar.py, you need to add a handler that is different from the NullHandler to it on app.py. The way to do it would be just to add the following line before you instantiate Bar:Then the logging from bar.py will be outputted using the same format you defined on app.py.For further reference please check the hitchhiker's guide to python section about logging


Answer URL
https://docs.python.org/3/library/logging.handlers.html#nullhandler
