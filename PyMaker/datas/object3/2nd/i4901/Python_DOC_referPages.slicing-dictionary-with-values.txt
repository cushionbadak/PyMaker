Natural Text
I have a dictionary like:I want to slice this dictionary such that if the values in the end are same, it should return only the first value encountered. so the return is:I'm using  to maintain sorting by the keys.Currently, I'm using a loop. Is there a pythonic way of doing this?UPDATE the dictionary values can also be dictionaries: output:
You can use  with a list-comprehension to achieve your resultThe above expression can also be written asYou can cast this to  by simply using This obviously don't maintain order of keys, so you can use 
If you want to get rid of for loop - you can do it this way:But it is not so pythonic and not so efficient.
Instead of using a ordered dictionary with the keys representing indexes, the more pythonic way is using a list. In this case, you will use indexes instead of keys and will be able to slice the list more effectively. 
Just in case, a solution with Don't know performances issues on biggest dataset or if it is more pythonic.Nevertheless, no loops.
You can check if two last values are same:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/collections.html#collections.OrderedDict
