Natural Text
It appears that  is the only "is" method with an underscore in its name among built-in types in Python. Examples that don't include an underscore: , , , , , , , , , , .Any clues as to why?By PEP 8, I would expect all these names to include an underscore. But practicality beats purity (PEP 20), so omitting the underscore in frequently used and short names makes sense. However, both naming conventions at once seems as a consequence of backward compatibility (with the  module as the canonical example).
A similar question has been asked on the Python bug tracker:Compare , , and  to , , and . In Python 3.6, of all the names in the standard library starting with , I count 69 names with the underscore and 91 without. It seems better to pick one way or the other and stick with it. I would recommend using the underscore, for legibility.And the answer (from R. David Murray, a Python core developer) there was:Yep, that would be nice.  But Python has evolved over time, and we must maintain backward compatibility.  The names are what they are.Given the numbers in the question it seems like  is not the only method with an underscore.


Answer URL
https://docs.python.org/3/library/stdtypes.html#float.is_integer
https://docs.python.org/3/library/stdtypes.html#str.isalnum
