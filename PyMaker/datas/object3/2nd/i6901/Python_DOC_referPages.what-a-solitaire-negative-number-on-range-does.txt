Natural Text
I was doing an exercise from John Zelle's book on Python, he asked to do the Fibonacci sequence using a loop function.After I didn't manage to get it done, I gave a look at his resolution, which was this:While I did understand part of what he did, the part that I missed was the  range.I gave a look here on Stackoverflow to see about this and people say that a negative number on the range goes back to the end of the list. But in this case, if the user prompts 1, the result will be .My guess was that the author did that so that the for loop didn't sum the first two values of the Fibonacci sequence, since they are both 1, and only after the user prompts 2 and forth, the loop actually starts adding up. Am I right on my guess?
If you enter 0 or 1 for this, the code does not enter the loop, and the result is the initial value of curr, that being 1.  For any higher value, the loop will iteratively compute the proper value.Your memory of negative values is a little bit off: a negative index will work from the opposite end of an iterable (e.g. list, tuple, string).  A range is not quite in that class; the result in this case is an empty range.CLARIFICATION after OP commentI see your confusion.  range returns an iterable of the given values.  However, it looks like you've confused the limits with the index.  Let's work with a general form:left* defaults to 0; **step defaults to 1Here are some examples:Note the second and third examples, where we use negative values for endpoints.  There's a distinction between a negative endpoint and a negative index.  The endpoint is used to build the list; if the endpoints aren't in the order implied by the step, then the resulting range is the empty list.  range(0, -1) is such an example.Once the list is built, such as with range(0, 20, 2), then a reference into that list with a negative index will count from the right end of the list.  Note the third example, making a list that goes "backward", 0 down to -8.  A negative index in this case also works from the right.  The negative right-end value, the negative step, and the negative index are three distinct usages.Does that clear up things?
So the for loop is not entered if n is 1 or 2 and curr (which is set to 1) is the result.


Answer URL
https://docs.python.org/3/
https://docs.python.org/3/library/functions.html#func-range
https://docs.python.org/3/library/stdtypes.html#typesseq-range
