Natural Text
Getting back into Python after a 2 year hiatus. Don't remember the best way to loop through a string from the beginning and stopping at a certain character, then returning the string. I know I need to create a new string, then start a loop to go through the existing string. But then I get stuck. I know I need to return the new string, but am not sure what the rest of my code should look like. Thanks in advance for your help. 
If you just want to get the substring from the beginning of the long string until a certain char, you can just do the following:

Use a string slice to grab the portion of the string you want. From your description it sounds like you want all characters up to the first occurrence of that character correct?Try this for example. Tweak the indices to get the portion of the string you want.The answers that include the use of .index() will not work well if the target character doesn't exist in the string without catching the exception.
You could create a list containing each char in the string and loop through the list. Then you can just loop through the list to meet your conditions
If the stop character is definitely in the string you can use  which will find the index of the first occurrence of the thing in brackets and slicing If you're not sure if the stop character is in the string you should use  which will not raise an error if it does not find the character:If you don't want to stop at the first character and want to get all words before the stop character you could use this list comprehension:result:
I think  works better than  (returns error if character not found) or  (returns -1 if character isn't found). Explanation:  returns a list of the words in the string, using sep as the delimiter string. By returning the first item, this works exactly as specified. 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
