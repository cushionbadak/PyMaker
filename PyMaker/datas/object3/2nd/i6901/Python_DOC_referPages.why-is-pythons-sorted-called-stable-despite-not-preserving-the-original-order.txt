Natural Text
SummarySorting in Python is guaranteed to be stable since Python 2.2, as documented here and here.Wikipedia explains what the property of being stable means for the behavior of the algorithm:A sorting algorithm is stable if whenever there are two records R and S with the same key, and R appears before S in the original list, then R will always appear before S in the sorted list.However, when sorting objects, such as tuples, sorting appears to be unstable.For example,However, to be considered stable, I thought the new sequence should've beenbecause, in the original sequence, the tuple  appears before tuple . The  function is relying on the 2-ary "keys" when the 1-ary "keys" are equal. (To clarify, the 1-ary key of some tuple  would be  and the 2-ary .)To produce the expected result, we have to do the following:I'm guessing there's a false assumption on my part, either about  or maybe on how tuple and/or list types are treated during comparison.QuestionsWhy is the  function said to be "stable" even though it alters the original sequence in this manner?Wouldn't setting the default behavior to that of the  version be more consistent with what "stable" means? Why is it not set this way?Is this behavior simply a side-effect of how tuples and/or lists are inherently compared (i.e. the false assumption)?Thanks.Please note that this is not about whether the default behavior is or isn't useful, common, or something else. It's about whether the default behavior is consistent with the definition of what it means to be stable (which, IMHO, does not appear to be the case) and the guarantee of stability mentioned in the docs.
Think about it -  comes before , does it not? Sorting a list by default does not automatically mean "just sort it based off the first element". Otherwise you could say that  comes before  in the alphabet. In other words, this has nothing to do with stability.The docs also have a nice explanation about how data structures such as s and s are sorted lexicographically:In particular, tuples and lists are compared lexicographically by comparing corresponding elements. This means that to compare equal, every element must compare equal and the two sequences must be of the same type and have the same length.
Stable sort keeps the order of those elements which are considered equal from the sorting point of view. Because tuples are compared element by element lexicographically,  precedes , so it should go first:
A tuple's key is made out of all of it's items.


Answer URL
https://docs.python.org/3/library/stdtypes.html#common-sequence-operations
https://docs.python.org/3/library/functions.html#sorted
