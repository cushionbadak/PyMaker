Natural Text
I have a simple class in python:Later on in my program, I create multiple instantiations of this class, i.e.:I need to test if all of the elements in  have the same value for simple.theType. How would I write a generic test for this, so that I can include new "types" in the future (i.e. , , , etc) and not have to re-write my test logic? I can think of a way to do this via a histogram, but I figured there's a "pythonic" way to do this.
Just compare each object with the first item's type, using the  function:There will be no IndexError if the list is empty, too. short-circuits, so if one object is not the same type as the other, the loop breaks immediately and returns False.
You could use an itertools recipe for this:  (copied verbatim):Then you could call it with a generator expression that accesses the  attribute:Given that it is actually put as recipe in the Python documentation seems like it's probably one of the best (or at least recommended) ways to solve this kind of problem.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
