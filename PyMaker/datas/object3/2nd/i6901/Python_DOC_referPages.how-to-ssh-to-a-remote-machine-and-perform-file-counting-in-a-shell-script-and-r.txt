Natural Text
I need to count the number of files in a directory in a remote machine. I need to ssh to that machine and perform directory counting operations (-lR | grep ^d | wc -l). This needs to be done in a shell script.I also need to call this shell script from a python program by passing a variable to be used in the shell script and return the result to the python program.Components involved:Python program calling the shell script (passing a variable)Performing ssh to remote machine and perform directory countingReturn the result to my original python program
You can use the subprocess.run function to execute an SSH command. , but it becomes tricky when it comes to passing in a password. So you have a few options.Option A:  Use an SSH key. . Or better yet, add the SSH key to your SSH config file so you can simply do . The downside is this method only works for your computer.Option B:  On Windows, install Putty, and pass in the password with the -pw switch.   On Linux/Mac, use sshpass.  The downside is that Windows users will have to install Putty, and it is less secure as you are passing a password instead of an SSH key.Option C:  Use the Python library Paramiko. See their documentation for info on how to do this, however, I have found that their library is not the most intuitive. Especially when it comes to passing and viewing data on stdin, stdout, and stderr. You're also introducing a third-party dependency. Paramiko can take either a password or an SSH key.Option D:Have your script handle creating and copying SSH keys to the server, if it hasn't been done already. The user will be prompted for their SSH password once, and then after that you would be able to use option A for all further communication. I've never done this before, but it could work. The downside is the time it would take to put this solution together.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.run
