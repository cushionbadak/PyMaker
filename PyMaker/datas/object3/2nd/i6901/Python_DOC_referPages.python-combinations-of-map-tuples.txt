Natural Text
I have a list of maps in Python looking like this:And I want to create all conbinations of key-value-pairs, i.e.:I neither know the size of the maps nor the size of the list, but the list will never have more than 4 elements. I can assume that the keys are unique but not that they are always 1,2,3,4 or 0,1,2,3 as depicted in the example above.What is the smartest/most efficient way to solve this?
Assuming that you "list of dict" is in this form  (as confirmed in comments), you can first use a list comprehension to get all the possible key-value pairs, and then just use  to get the combinations of those pairs.Using your "actual" example:
Look at the base case first. If there is only one map , solutions areIf I now add one more map a new solution can be generated by appending each tuple in the new map to the previous solutionsNow assume that I have already a procedure solving this problem for a set of given maps, by extending the solution with a newly added map, the problem of larger maps can be solved
Finally figured out an algorithm - here is the pseudo code:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
