Natural Text
Alright all you genius programmers and developers you... I could really use some help on this one, please.I'm currently taking the 'Python for Everybody Specialization', that's offered through Coursera (https://www.coursera.org/specializations/python), and I'm stuck on an assignment.I cannot figure out how to create a list that contains only the first instances of each word that's found in a string:Example string:Desired list:Thank you all for your time, consideration, and contributions!
You can build a list with words that have already been seen and filter non alphabetic characters:Output:
This can be accomplished in 2 steps, first remove punctuation and then add the words to a set which will remove duplicates.Python 3:Pyhton 2:
Since all instances of a word are identical, I'm going to take the question to mean that you want a unique list of words that appear in the string.  Probably the easiest way to do this is:The 're.findall' command will return any word, and converting to a set and back to a list will make the results unique.
Try it:
You can use the  module and cast result to a  in order to remove duplicates:Explanation: means character,  means word.So you use  in order to find all the words in .A  is a collection with unique elements, so you cast your result list from  into a set.Then you recast to a  () in order to get a list with unique words from your string.EDIT - If you want to preserve the order of the words, you can use  with a  in order to keep them ordered, because s are unordered collections.
If you need to preserve the order the words appear in:I use OrderedDict because there does not appear to be an ordered set in the Python standard library.Edit:To make the word list case insensitive one could make the dictionary keys lowercase: 
It should be sufficient to find all of the words, and then filter out the duplicates.


Answer URL
https://docs.python.org/3/library/re.html
