Natural Text
This is my first post, so I apologize if this has been answered previously. I have tried to look through the Python 3 documentation on string formatting and lists, and reviewed similar formatting questions here on SO. I want to take the string (data1), break it into a list (bigData), and print out a statement using the list items. Eventually, the idea would be to read in a csv file, break it up, and print out a response, but I've tried to simplify the process since there's an error."Hello, John Doe. Your current balance is $53.44." However, I'm not sure why the following code is throwing an IndexError, much less a tuple index.My guess is that bigData is heterogeneous, which implies a tuple. If I substitute a string value instead of 53.44 (so data1 and bigData are homogeneous), it throws the same error.However, if I convert the original to Python 2.x string formatting, it formats correctly without an error.Why is it converting my string to a tuple?How do I write this work in Python 3?Thank you.
Use the splat () to unpack your arguments (your  string wants three arguments but you only give it one, a list containter).Also, you may want:
The  method takes positional arguments, not a single list. You need to unpack your list  using the  operator:You're correct that  is a list, not a tuple,  returns a list.
The  method returns a list, by definition.I think you've misunderstood something you've read - heterogeneous vs. homogeneous refer to typical use cases of tuples vs. lists.  Having the types of all the elements match or not does not magically cause the container to change to the other type!
I can see how this is surprising, though what surprises me is that the traceback doesn't show that the exception occurs in the  call. Python's lists can be heterogenous just like tuples; this is because the common type they store is object references, which all things in Python are. The tuple is actually the argument list to the  method, in this case . It ran out of arguments when looking for things to format, since you had three  placeholders but only one argument (the list ). You can use  to unpack the list and use its contents as arguments. The  formatting doesn't encounter this error because it actually expects a tuple (or one item) in the right operand. A more idiomatic and legible approach might actually be to go to the  module already:This lets us assign meaningful names to the columns, including reordering them in the format string if needed. I've left out the float conversion, and by the way,  may be better for that use. 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
https://docs.python.org/3/tutorial/index.html
