Natural Text
I create a function which returns an value specified by an variable. LikeI need this function as an function object to create another objectthis works fine. But if i want to create several different distribution objects (with different functions f in the sense that y changes) LikeThen all distribution objects only return the last specified value y. I.e.Instead of the expectedThe problem clearly is, that the function f accesses the variable only when it is called and not one time initially. Is there a way around it?What I want at the end is:A function with one variable only (x, although this doesnt do anything in this case, it is needed in others), which returns the value of y of the moment, when the distribution is created. So in principle I want that at the initialisation of the distribution, the given function is deepcopyed, in the sense, that it is no longer influenced by any change of variables.Is this possible?
Don't use globals for this. There is no need to 'deepcopy' the function either; the  global is not part of the function state at all.Use a function factory that provides a scoped value instead, or use a  to provide a default argument to your function.Function factory:Now  is a scoped value for ,  returns a new  every time it is called, and  is stored as a cell variable for .Demo:Using :Here  produces a new callable that will call  whenever called, appending any extra arguments passed in.Demo:


Answer URL
