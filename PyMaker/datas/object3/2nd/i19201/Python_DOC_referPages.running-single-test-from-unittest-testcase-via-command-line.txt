Natural Text
In our team, we define most test cases like this:One "framework" class ourtcfw.py:and a lot of test cases like testMyCase.py:When I'm writing new test code and want to run it often, and save time, what I do is that I put "__" in front of all other tests.  But it's cumbersome, distracts me from the code I 'm writing and the commit noise this creates is plain annoying.So e.g. when making changes to , I want to be able to do this:and have  run only How can I achieve that?I tried to rewrite the  part, but since I'm new to Python, I'm feeling lost and keep bashing into everything else than the methods.
This works as you suggest - you just have to specify the class name as well:
If you organize your test cases, that is, follow the same organization like the actual code and also use relative imports for modules in the same packageYou can also use the following command format:
It can work well as you guessAnd there is another way to just test :
If you check out the help of the unittest module it tells you about several combinations that allow you to run test case classes from a module and test methods from a test case class.It does not require you to define a  as the default behaviour of your module.
Maybe, it will be helpful for somebody. In case you want to run only tests from specific class:It works for me in python 3.6
Inspired by @yarkee I combined it with some of the code I already got. You can also call this from another script, just by calling the function  without requiring to use the command line, or just call it from the command line with .Sadly this only works for  or superior:Runner code:Editing the code a little, you can pass an array with all unit tests you would like to call:And another file:Alternatively, you can use https://docs.python.org/3/library/unittest.html#load-tests-protocol and define the following method on your test module/file:If you want to limit the execution to one single test, you just need to set the test discovery pattern to the only file where you defined the  function.References:Problem with sys.argv[1] when unittest module is in a scriptIs there a way to loop through and execute all of the functions in a Python class?looping over all member variables of a class in pythonAlternatively to the last main program example, I came up with the following variation after reading the  method implementation:https://github.com/python/cpython/blob/master/Lib/unittest/main.py#L65
Here is another way


Answer URL
https://docs.python.org/3/library/unittest.html#load-tests-protocol
