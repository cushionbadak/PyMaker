Natural Text
I have this script, which I have no doubt is flawed:when I run it I get . BUT the file exists. For instance if I execute it by going:  it will work just fine, listing all the *.py files which contain the word "folder". BUT if I go as an example I get  (for example). But About.php exists. I don't understand what it's doing, or what I'm doing wrong.
If you look at any of the examples for , you'll see that they all do . You need to do that too.Why? Quoting from the docs: is a list of the names of the non-directory files in dirpath. Note that the names in the lists contain no path components. To get a full path (which begins with top) to a file or directory in dirpath, do .If you just use the filename as a path, it's going to look for a file of the same name in the current working directory. If there's no such file, you'll get a . If there is such a file, you'll open and read the wrong file. Only if you happen to be looking inside the current working directory will it work.There's also another major problem in your code:  walks a directory tree recursively, finding all files in the given  directory, or any subdirectory of , or any subdirectory ofâ€¦ and so on, yielding once for each directory. But you're not doing anything useful with that (except printing out the folders). Instead, you wait until it finishes, and then use the  from whichever directory it happened to reach last.If you just want to get a flat listing of the files directly in a directory, use , not . (Or maybe use  instead of explicitly listing everything then filtering with .)On the other hand, if you want to walk the tree, you have to move your second  loop inside the first one.You've also got a minor problem: You call  inside a , which leads to  being closed twice. This is guaranteed to be completely harmless (at least in 2.5+, including 3.x), but it's still a bad idea.Putting it together, here's a working version of your code:
You are using a relative filename. But your current directory does not contain the file. And you don't want to search there anyway. Use os.path.join(folder, filename) to make an absolute path. 


Answer URL
