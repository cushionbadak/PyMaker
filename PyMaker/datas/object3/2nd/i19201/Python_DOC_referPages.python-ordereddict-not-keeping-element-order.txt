Natural Text
This question already has an answer here:Converting dict to OrderedDict                    3 answers                I'm trying to create an OrderedDict object but no sooner do I create it, than the elements are all jumbled.This is what I do:The elements don't stay in the order I assigndocs.python.org doesn't have an example and I can't figure out why the order is getting jumbled. Any help is greatly appreciated. 
Your problem is that you are constructing a  to give the initial data to the  - this  doesn't store any order, so the order is lost before it gets to the .The solution is to build from an ordered data type - the easiest being a  of s:It's worth noting that this is why  uses the syntax it does for it's string representation - string representations should try to be valid Python code to reproduce the object where possible, and that's why the output uses a list of tuples instead of a dict.Edit: As of Python 3.6,  is ordered, so you can use keyword arguments instead, provided you are on an up-to-date Python version.As of 3.7, this is also true for s (it was for CPython in 3.6, but the language spec didn't specify it, so using  was still required for compatibility). This means if you can assume a 3.7+ environment, you can often drop  altogether, or construct one from a regular  if you need a specific feature (e.g: order to matter for equality).


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#pep-468-preserving-keyword-argument-order
https://docs.python.org/3/whatsnew/3.6.html#pep-468-preserving-keyword-argument-order
