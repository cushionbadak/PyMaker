Natural Text
Are there some edit-distance in python that take account of the accent.Where for exemple hold the following property
With the Levenshtein module:
Unicode allows decomposition of accented characters into the base character plus a combining accent character; e.g.  decomposes into  followed by a combining grave accent.You want to convert both strings using normalization form NFKD, which decomposes accented characters and converts compatibility characters to their canonical forms, then use an edit distance metric that ranks substitutions above insertions and deletions.
Here's a solution based on difflib and unicodedata with no dependencies whatsoever:Tests:


Answer URL
https://docs.python.org/3/library/difflib.html
https://docs.python.org/3/library/unicodedata.html
