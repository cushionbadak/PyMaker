Natural Text
I wanted to strip a string of punctuation marks and I ended up using It works fine and it does solve my problem. What I don't understand is the details within the parentheses and the whole pattern thing. What does  really mean? I looked it up in the Python standard library and it says:Return all non-overlapping matches of pattern in string, as a list of  strings. The string is scanned left-to-right, and matches are returned  in the order found. If one or more groups are present in the pattern,  return a list of groups; this will be a list of tuples if the pattern  has more than one group. Empty matches are included in the result  unless they touch the beginning of another match.I am not sure if I get this and the clarification sounds a little vague to me. Can anyone please tell me what a pattern in this context means and how exactly it is defined in the findall() method?
To break it down,  creates a character class.  You'll often see things like  which will match ,  or .  Conversely, you also might see  will will match anything that isn't ,  or .  Finally, you'll also see character ranges:  .  This introduces two ranges and it will match any of , , , , , .  In this case, your character class contains special tokens.   and .   matches anything letter-like.   actually depends on your locale, but it is usually the same thing as  matches anything in the ranges , ,  or .   is similar, but it matches anything that can be considered whitespace.The  means that you can repeat the previous match 1 or more times.  so  will match the entire string .  In your case, you're matching alphanumeric characters that are next to each other.the  is basically like "or".  match the stuff on the left, or match the stuff on the right if the left stuff doesn't match.
 means Alphanumeric characters plus "_". And  means Whitespace characters including " \t\r\n\v\f" and space character " ". So,  means a string which contains only words and "_".


Answer URL
