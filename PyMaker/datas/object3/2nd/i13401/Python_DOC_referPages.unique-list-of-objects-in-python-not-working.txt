Natural Text
I am trying to create a unique list of objects using Python and I am failing. It doesn't matter whether I use a list or a set, it does not seem to work. When I printed the list/set I noticed a couple of non-unique objects in the list. I realised that was the case because some of those objects had a 'space' at the start of the word. I looked around and thought using the ·lstrip(' ')· would help my cause, but sadly it doesn't.The weirdest thing is that the 'number of unique objects' is correct, but the list of unique objects created at the end is wrong. Can anyone please point to me where I'm going wrong?The column I'm interested in is 'Object' and the unique list should contain Owl, Cat, Fox, Cow, Goat, Dog, Ant, Buffalo, Lion and tiger. Sample data:My working code is attached below:What I'm getting at the end of this is duplicates including 2 foxes and missing a few unique entries as well. Of course this is just dummy data but I hope I am clear in explaining what's going on.UPDATE1:I have updated the script and it works okay however another issue has cropped up. I have updated the column with real data that I'm working with. The unique items that are NOT being added to the final list include:UPDATE2:I have reverted to the original 'wrong' script because it works okay now. There was something wrong with the csv file I was working off.Thanks
 is not an in-place method, it returns the stripped string. You need to assign it back to  -Assuming Python 2.7+ (or 3.1+) , a faster way would be to use  , and maybe  . Example -Please note, this would not preserve any order , since s are not ordered. If order is important, you can use a  to store the values that are already seen. Example -Also, I would like to advice that you should not use  as a variable name as that is the name of the built-in class (that is extended by all other classes) .Also, seems like there are some strings with whitespaces at the end, so it would be better to use  or  instead of  . Example of  with set comprehension -
edit your code something like this:strip will remove all spaces from right and left.and assign the object into new object as 
A set comprehension would serve you well. First off, let's get rid of that open file by using a context manager:Ok, lets go over what we did there. We opened the file using a context manager so the file will be closed automatically. Then we read in the csv using csv.reader and iterated past the first row.Here's where it gets tricky - we created a set by iterating over the lists in the csv, then iterating over the contents of those lists. A more verbose way:This accomplishes much the same thing, possibly in an easier to understand format. Also, note that I used -1 to slice to the last column in the csv.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.lstrip
