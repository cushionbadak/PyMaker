Natural Text
I have the formula: (short) (0xF800 | (N & 0x7ff)). With the help of C/CPP/C# I changed the sign of the eight-bit numbers (eg 1202 numbers to -846). In Python this trick is not working. How do I get the same result?
Integers in Python have an infinite length. To make a negative number you need to set the top bit, but there's no "top" with Python - you can't do this with bit manipulation. What you can do is convert a positive number to negative with subtraction.Since you already know the top bit is set, this simplifies:
maybe someone will need:From ctypes import c_shortC_short (0xF800 | (N & 0x7ff)). Value
If you want to work with C(++) types you will need to use the struct or ctypes modulesThis method uses struct to pack the integer into a byte string, then unpack it as a different type.This method uses ctypes which has an internal representation similar to what you'd have in C(++)


Answer URL
https://docs.python.org/3/library/struct.html
https://docs.python.org/3/library/ctypes.html
