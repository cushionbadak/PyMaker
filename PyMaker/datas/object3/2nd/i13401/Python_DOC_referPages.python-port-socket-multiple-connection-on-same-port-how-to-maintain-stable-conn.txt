Natural Text
Logic:Client <-----connection----->  Server Port Listening Script in Python ( e.g. TCP port 11112)Every Client Device (e.g. GPS device) connected to server port and establish successful connection.Once connected, we need to keep the connection active and stable for that particular device.In Parallel we need to accept connection from other devices in same port. We achieved this using Multi Threading concept in python. One thread will have a dedicated connection with one device. Once there is no data for certain time, Thread will be closed.This logic is working fine as of now for 20 parallel connected devices.We are expecting that we will be in connection with 1 million devices soon. What are the best solutions possible in python to handle this huge number of active connection between device and Server ?Note: We can set up multiple ports and make sure load shared between ports but the active connection limit ( Alternate for Threading)  must be our focus.
Your question is usually referred as the c10K problem. In general, threads or processes introduce too big overhead in order to handle such number of connections.The available solutions are too many to list, from switching to a more concurrent friendly language such as Go or Erlang to adopt specific Python frameworks focused on solving this issue.For Python you can take a look at the following libraries:https://twistedmatrix.com/trac/http://www.gevent.org/https://docs.python.org/3/library/asyncio.html


Answer URL
https://docs.python.org/3/library/asyncio.html
