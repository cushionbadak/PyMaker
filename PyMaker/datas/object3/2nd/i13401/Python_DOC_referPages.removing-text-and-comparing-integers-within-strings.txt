Natural Text
Due to my original post being filled with flamers assuming that I'm asking them to write my code for me and refusing to answer me at all, I'm reposting my question.I stress the fact that I am a total BEGINNER at Python, and that I am NOT here to ask people to write it for me, I'm simply trying to ascertain the METHOD and some GUIDANCE on how to approach the problem, because I'm having real difficulty approaching it, and everyone seems to think I'm asking them to give me all the code I need, and I'm not.So, on to my original question.My problem is as follows, I have made a mathematics quiz, that outputs the name and score to a text file. In this program, I plan to add some code at the beginning, which will run a list of options to compare and order the results from the text file. The program imports the entries into a list, and the format is as follows:['John : 6', 'Bob : 9', 'Billy : 2', 'Matthew : 7', 'Jimmy : 2', 'Amy: 9', 'Jenny : 10', 'Michael : 8']Python recognizes this list as 8 items, perfect. It has their name, and then their score. The problem is that the specification I'm working to requires me to be able to:Sort in alphabetical order with each student's highest score for the tests.Also, by the highest score, and finally by the average score. I've tried for many hours in order to find some code that can compare the integers within these strings to each other to find the highest score, and only print that one, but I've had no luck. I feel like I will also struggle with the other 2 tasks, and wish for some guidance.I thought about possibly using slices in order to take the integer into a separate value in order to compare them, but felt that this could make the code messy very quickly.
You could try to split the strings on the " : " and then convert the number to int with .The result can then be put in an dictionary:If you already have an item (), you could compare the old value and the new value.
convert your list to  tuples and then it will be easy to sortsorting
A list of key/value strings is not the appropriate data structure to address your problem, as it requires string manipulation to extract the values. You should probably parse your data into a Dictionary or list of tuples instead.using a dictionaryyou could then doDictionaries do not have an order in memory but you can get a sorted representation of them:If you want to store a dictionary in memory in an ordered way, you may consider using OrderedDict. You could also consider using a list of key/value pairs as your data structure:using a list of tuplesI have no idea what your specific requirements are and what average you want to sort by (there is only one value per student after all) but this should give you an idea.
This is probably not the most pythonic way to do this (I left comments in the code, I hope you understand, if not just ask):Output:Hope this is what you were trying to achieve, next time subdivide your problem and post chunks of code that you have tried I admit this problem is not linear, but you could have done parts of it.Hope this helps.BTW check some of the documentation that would have helped you:Data StructuresControl Flow ToolsI bet you could have built a solution of your own if you had read it. :)
I would suggest using a dictionary instead of your list.  Dictionaries work by pairing a key and a value.  For example:To convert your list, you could split the strings for key and value using  as the point to split.  For example:returns:Putting it all together, here's a sample of code pulling in your list and converting it to dictionary and then sorting by name:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
