Natural Text
I have an adafruit LCD screen and want the buttons to be able to navigate down and up lines to text from a text file.  I have spent all day trying to work out this problem.So far this I have this :I have all the bits to drive the LCD working but can only go down the file.
Python provides the  module which, while built-in to enable friendly tracebacks, works just fine with most text files. It splits the difference between reading all the lines into memory and reading the file live, and its design is basically ideal for the scenario you're considering (where you're moving between adjacent lines, aiding caching).
You could load the entire file into memory, as an array of lines, and use a pointer (an integer, initially 0). Each time a button is pressed, increment/decrement the pointer and display the corresponding line.If the file is too large to be loaded at once in memory, you could simply record the last N file pointer positions (using ). When the back button is pressed, reset the pointer to the desired position (using ) and read the line. When the forward button is pressed, read the line normally and record the pointer position.
If your text file isn't too big to fit in memory, the simplest way to do it would be to read the whole file into a list (I assume  is your open file reference):Now  will be the first line of your file,  the second line, etc. You can set a variable, let's call it , to 0 and then increase or decrease the value according to the button pressed, and each time send the correct line to the LCD with


Answer URL
https://docs.python.org/3/library/linecache.html
