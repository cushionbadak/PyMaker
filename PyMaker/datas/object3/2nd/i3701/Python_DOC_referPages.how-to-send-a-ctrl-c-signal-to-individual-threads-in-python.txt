Natural Text
I am trying to figure out how to properly send a CTRL-C signal on Windows using Python. Earlier I was messing around with youtube-dl and embedded it into a PyQt Qthread to do the processing and created a stop button to stop the thread but when trying to download a livestream I was unable to get FFMPEG to stop even after closing the application and I'd have to manually kill the process which breaks the video every time.I knew I'd have to send it a CTRL-C signal somehow and ended up using this.   I was actually able to get it to work but if you try to download more than one video and try to stop one of the threads with the above signal it would kill all the downloads.Is there any way to send the signal to just one thread without effecting the others?Here is an example of some regular Python code with 2 seperate threads where the CTRL-C signal is fired in thread_2 after 10 seconds which ends up killing thread_1.Does anyone have any suggestions or ideas? Thanks.
It is not possible to send signals to another thread, so you need to do something else.You could possibly raise an exception in another thread, using this hack (for which I won't copy the source here because it comes with an MIT license):http://tomerfiliba.com/recipes/Thread2/With that, you could send a KeyboardInterrupt exception to the other thread, which is what happens with Ctrl-C anyway.While it seems like this would do what you want, it would still break the video which is currently downloading.On the other hand, since you seem to only be interested in killing all threads when the main thread exits, that can be done in a much simpler way:Configure all threads as daemons, e.g.:These threads will exit when the main thread exits, without any additional intervention needed from you.
Is there any way to send the signal to just one thread without effecting the others?I am not a Python expert, but if I was trying to solve your problem, after reading about signal handling in Python3, I would start planning to use multiple processes instead of using multiple threads within a single process.


Answer URL
https://docs.python.org/3/library/threading.html#threading.Thread.daemon
