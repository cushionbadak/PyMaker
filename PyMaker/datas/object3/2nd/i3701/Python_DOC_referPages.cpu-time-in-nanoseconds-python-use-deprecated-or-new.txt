Natural Text
After reading this Python's time.clock() vs. time.time() accuracy? and time.process_time(), among others, I'm pretty confused. I need CPU time spend grinding out an algorithm. I want the time right before the call and right after it returns. seems like a great candidate, but I have no idea what units it returns on a Mac, can't seem to find a straight answer, and I need to convert to nanoseconds. I tried time.time() and the answer seemed wildly wrong. Thoughts on what I can do here?
For benchmarking python code, consider using the bundled  (also in Python 3) package. It has a few advantages over doing it yourself: repeating the test multiple times to allow for OS/System things outside your control, disables garbage collection to prevent skewing of results, and uses the most accurate timer available for the current system (including Python 3.3+'s ).You don't mention which Python version you're using, but if you are on 3.3+,  will give you the most precise timer available.


Answer URL
https://docs.python.org/3/library/time.html#time.process_time
https://docs.python.org/3/library/timeit.html
https://docs.python.org/3/library/time.html#time.perf_counter
https://docs.python.org/3/library/time.html#time.perf_counter
https://docs.python.org/3/library/time.html#time.process_time
