Natural Text
I have a project which has this hierarchyevery file inside  folder (except ) contains a class that has a same name as the file name except the first letter is capitalized. I want to call and instantiate every class inside  folder in . I can do it by writinginside . But, it turns out that I have to write for exampleto instantiate class inside  and it looks very ugly. Is there any way so that I only type at leastor even better,to instantiate those classes?Note: Every files inside  folder is dinamically changed. I might add or remove file in  folder.
I would suggest doing most of the work automatically. You can register your modules of interest in :You don't need to import anything at this point and I wouldn't recommend using  as it serves a different purpose altogether. The advantage of using a manually created list is that your package can contain other modules without any interference.Now  can do all the work dynamically:If you don't want to bother with manually registering your modules of interest, you can dynamically discover them using the utilities in . In This version,  can remain empty.  will get the module list like this:The remainder of the code is the same as for the manual version. This version will recurse into any sub-packages it finds. It will work fine as long as you don't do anything crazy with your  attributes.
This might work
you can import all modules inside a package at once using asterisks:


Answer URL
https://docs.python.org/3/library/pkgutil.html
