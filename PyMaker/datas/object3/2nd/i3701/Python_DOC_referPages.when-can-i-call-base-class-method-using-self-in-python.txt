Natural Text
What's the difference between using  and , when we inherit something from a parent class and why use one instead of another?The only thing that comes to my mind is that with static methods it becomes obviously impossible to call . As for everything else I can't come up with justification to use .Could someone present a dummy example when choosing one over another matters and explain why, or is it just convention thing?
selfself, which is mostly used as the first parameter of instance methods of classes, always represents the calling object/instance of the class.super()super() refers to object of parent class. It is useful in case of method overriding and this is in case of numerous programming languages including C++, Java etc. In Java, super() is used to call the constructor of parent class.Please have a look at the below little example.
 will call the parent classes implementation of , even if the child has defined their own.  You can read the documentation for  for a more in-depth explanation.For singular-inheritance classes like ,  is the same as the more explicit .  In cases of multiple inheritance,  will determine which  definition to use based on the Method Resolution Order, or MRO.A further motivating example: which method gets called if we subclass  and write another implementation of ?


Answer URL
https://docs.python.org/3/library/functions.html#super
