Natural Text
I am writing a class that supports easy-to-use API to add different settings to run a given program () and to benchmark all settings with multiprocessing (). From the documentation of multiprocessing.Process, it seems all cases using .  Is it safe to skip using it ?For example, the class method  starts and joins processes, and another python file  creates a class and simply call . Will it work as usual ?
As described in the multiprocessing guidelines under the heading "Safe importing of main module", some forms of multiprocessing need to import your main module and thus your program may run amok in a fork bomb if the  check is missing. In particular, this is the case on Windows where CPython cannot fork. So it is not safe to skip it. The test belongs at the top (global) level of your module, not inside some class. Its purpose is to stop the module from automatically running tasks (as opposed to defining classes, functions etc) when it is imported, as opposed to run directly. 
 is used to indicate which code to run when the module is loaded. Basically, it is loaded either when you run it as a script or when you import it as a library. In the first case, one usually writes it so that all of the written code executes so it is not necessary to include it. But when you are writing a library, there might by some code which you don't wont to run when other people import it, such as a short example or tests. So in the later case, you definitely want to include it.To answer you question from the comments above, I don't think it makes sense to include it in a class method, as it is top-level construct and so it loads always.


Answer URL
https://docs.python.org/3/library/os.html#os.fork
