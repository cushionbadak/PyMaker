Natural Text
I've been trying trying with no luck to create a endless chain of client instances.I'm developing an asyncio app, this app among many others things, like running a server with loop.create_server(),  needs every 10 seconds to connect to a list of servers, send some data and then disconnect.I keep getting 2 errors: "runtimeError: Event loop is running." or "asyncio > Task was destroyed but it is pending!"The code down below works.But when I call it from the main_loop things start to break.I've tried to giving the main_loop to send_to_peers , giving it to the Client(loop) class,I tried to stoop & close the loop, delete the task, use weird combination of ensure_future but nothing works.I googled as much as I could, I read it is not good to nest infinite loops but i didn't find any other way.My last hope is to use threading but even if I think it will work, it won't be an elegant solution, nor the right one.I'm used to work with Node so please excuse me if i made a silly mistake, I thought that after 2 weeks i could make it but here I am.I would really appreciate any help. I'm stuck. Thanks!PS:The Client() class is very basic:
I keep getting 2 errors: "runtimeError: Event loop is running." or "asyncio > Task was destroyed but it is pending!"As you discovered, asyncio event loops do not nest.To remove the nesting, you should define  as a coroutine using . Inside it  should be changed to . Once  is a coroutine, you can call it:from blocking code such as  using from async code such as  using .In case of , you can implement the timeout using :


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for
