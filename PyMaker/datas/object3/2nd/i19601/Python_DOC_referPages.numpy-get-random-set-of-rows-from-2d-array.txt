Natural Text
I have a very large 2D array which looks something like this:Using numpy, is there an easy way to get a new 2D array with e.g. 2 random rows from the initial array a (without replacement)?e.g.
Putting it together for a general case:For non replacement (numpy 1.7.0+):I do not believe there is a good way to generate random list without replacement before 1.7. Perhaps you can setup a small definition that ensures the two values are not the same.
This is an old post, but this is what works best for me:change the replace=False to True to get the same thing, but with replacement. 
Another option is to create a random mask if you just want to down-sample your data by a certain factor. Say I want to down-sample to 25% of my original data set, which is currently held in the array :Now you can call  and return ~25% of the rows, randomly sampled.
If you need the same rows but just a random sample then,Here x, has to be an 'int' defining the number of rows you want to randomly pick.
This is a similar answer to the one Hezi Rasheff provided, but simplified so newer python users understand what's going on (I noticed many new datascience students fetch random samples in the weirdest ways because they don't know what they are doing in python).You can get a number of random indices from your array by using:You can then use slicing with your numpy array to get the samples at those indices:This will get you the specified number of random samples from your data.
I see permutation has been suggested. In fact it can be made into one line:
If you want to generate multiple random subsets of rows, for example if your doing RANSAC.


Answer URL
https://docs.python.org/3/library/random.html#functions-for-sequences
