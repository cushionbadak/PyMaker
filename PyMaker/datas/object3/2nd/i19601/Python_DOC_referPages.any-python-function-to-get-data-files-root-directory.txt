Natural Text
This should be a very common question for developers who used "setup.py" to build installation packages and it should be asked before but I couldn't find the proper answer anywhere.In setup.pyResult of sudo python setup.py installFrom the observation using the result above, "/usr/local" is the "data_files" root directory. Other than hardcoding, are there any Python functions that can give me this "data_files" root directory?
By default, when installing a package as root, relative directory names in the  list are are resolved against either the value of  (for pure-python libraries) or  (for libraries with a compiled extension), so you can retrieve your files based on that. Qouting from the  documentation:If directory is a relative path, it is interpreted relative to the installation prefix (Pythonâ€™s  for pure-Python packages,  for packages that contain extension modules).So for your example, you'll find your files in .However, you would be better off using the  extension to  and use the  module Resource API to load data files. It comes with  for this very purpose. You do want your data files included in the package for that to work best. That means you would not use  but instead either set  or list file patterns with , see Including data files in the setuptools documentation.You can then load such resource files straight from the package into a string with  for example:


Answer URL
https://docs.python.org/3/distutils/setupscript.html#installing-additional-files
