Natural Text
I'm able to successfully retrieve the 5 sub-keys from my windows 7 machine registry hive "HKEY_LOCAL_MACHINE" with the code below.My question is, how do I then enumerate the keys under those? I want to end up listing all the keys in the SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\Unmanaged folder but I can't figure out how to step my way down there.In response to the first comment, I ran this code on my machine and while it didn't error out, it didn't produce results.A regedit or reg query shows 6 values in that folder but I can't get a python script to show me those six.
I don't have the same registry keys to search but the following code will list all the subkeys in HKEY_LOCAL_MACHINE\Software. I think if you change the value of the keyVal string to your directory it will work.The  bloc is this way because EnumKey will fail. I didn't do it as a for loop because I dont know how to get the correct length of aKey.  
Does something like this work?
This works, and prints out the list of all subkeys (fixed version of @Broseph's answer)
For iterating through keys of Windows registry, you would need  from  module. Given below is the definition for  :-def EnumKey(key, index):Enumerates subkeys of an open registry key.key is an already open key, or any one of the predefined HKEY_* constants.   index is an integer that identifies the index of the key to retrieve.Note that this method, takes index as an argument, and will provide you the key only for the given index. Therefore, in order to get all the keys, you need to increment the index by one and continue until you encounter .Refer to this post for a detailed understanding on the same. The Github link for the code can be found in the post.
Just want to add a perhaps more pythonic solution.You can now access the keys as expected For python versions < 3.4 that lack suppress(), I recommend adding it to your project:Note: If you have trouble reading some values you might be reading from the wrong registry view. Pass  or  to the  parameter). Using  as context manager was introduced in python 2.6.


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.suppress
