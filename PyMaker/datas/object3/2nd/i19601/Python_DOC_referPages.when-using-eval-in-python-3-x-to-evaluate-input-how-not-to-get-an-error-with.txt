Natural Text
I am learning Python 3.x. I want to write a function which evaluates inputted values and prints the result. If the string originally is inputted, the function should just print the string without evaluation.It works fine with integers and mathematical operations.But when a string gets inputted, like "", it gets an error: "".I understand why this error happens. Because "" is seen as a variable.But I don't understand how to check whether a string was originally inputted?How do I filler strings from the input before evaluating it? 
First: It's rarely a good idea to rely on  . You could simply catch the  (and  as well) and assume the input was a string:There may be other exceptions raised here, but next to avoid using  I also want to caution against using a blanket  or  handler, those are generally also not good ideas.A better technique would be to use  instead: only accept python literal values (so  or  or ) and will throw a  if it cannot parse that input.It does not suffer from the security problems that  suffers from, nor do you need to catch as many exceptions, only  needs to be handled.
If you are taking user input, presumable you know what you are asking for and what type it should be. You need to write a verifier. You can do this textually with regular expressions, or more basically with "casts", or conversion functions.For example, if you are looking for an integer number, use  to convert it, and check for errors.Tell the user to enter a number. The  function will raise ValueError if it can't parse it, and only that , so you can easily tell that you got something other than a number.You can do the same with . What you get from  is always a , so if that's what you want just use that. 
Okay, simply as an answer I'm going to put thisBut you really don't want to use eval, its evil, nasty, leads to bugs and security risks, and is hard to develop, debug and use properly


Answer URL
