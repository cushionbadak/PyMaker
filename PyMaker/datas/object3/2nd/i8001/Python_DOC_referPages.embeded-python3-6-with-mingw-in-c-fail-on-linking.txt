Natural Text
Try to embed python3.6 in C++ on Win10 64bit system.Python is installed by .The CMakeList.txt is showing belowAnd CMake found the Python package.Find a comment on github it's talking about the API problem.The errors below is what I'm facing.Not sure what to do to make the project run.Any help would be appreciated.EDIT: the result from 
I had the exactly same problem, just with Python 3.7 while trying to build the example from the Python manual.My system is a 64-bit Windows, the installed Python is a 64-bit 3.7 (from Anaconda3), and the compiler is a 32-bit MinGW 5.3.0 (from Qt 5.11).The simplest solution that worked for me is the following:Download Windows x86 embeddable zip file from this page.Put the content of that archive to a folder inside the project you're building.Do not install anything from that archive and do not put it on the system PATH.Add the above folder to the gcc library search path, using: Add the python library to the linker, using  ( replace  with whatever version you download)As noted here (this was a hard one to find!), add a definition, using  (It is also possible to write  just before -ing the Python header, though I would not recommend it)Provide the path to the Python headers, using . I used the one from Anaconda, e.g. . Any installed header will do, just make sure its from the same version (headers from an older version might also be used, but this may cause a rupture in the space-time continuum)Make sure that  is before any other include, as stated in the manual.As a side note, the MinGW linker (ld) is perfectly content, for many years now, if you just give it the "dll" file. No "lib", nor "a", is needed if you don't have one and only perform dynamic linking. This is why I just told the linker to use .It it actually smart enough to look for files like ,  & .Also note that the "embedable zip" is just the bare minimum needed for, well, embedding Python.And as a last comment, contrary to what is stated here, there is no problem whatsoever linking from GCC with a library compiled using MSVS (and vice versa), as long as the library uses the plain C interface, since that interface is pretty much the only thing that is compatible across different compilers for any given platform.This is pretty much the exact reason why Python is using the C interface (and nothing else, not even C++) for extending & embedding - to allow code written in any language, using any tool set, to interface with Python.
I had the same problem.probably the problem is because of using 32 bit MinGW and 64 bit Python. you should install 32 bit version of python Hope it will be useful to you :-)


Answer URL
https://docs.python.org/3/extending/embedding.html#very-high-level-embedding
