Natural Text
I need a little help creating an executable python OS command for Blender (Windows and Mac). I am setting up a stand-alone blender package for a client to use. I have a python script that imports some data and I want to create an executable python script that runs OS commands to run Blender, run the python script and define the data directories.This is a generic version of the Windows command I normally run to import the data, using the stand-alone version of Blender:From my research I have worked out that I need to:import os make the directories in the command relativecreate an executable python fileMy python experience is limited, but I believe it may be something like this:However I had a look at this post and was a little fuzzy as to the best way to do this:Calling an external command in PythonThen I could possibly use PyInstaller to create the python executable files. Which seems to be the simplest method suggested here:How to make a Python script standalone executable to run without ANY dependency?http://www.pyinstaller.org/Am I close to the correct result here? I am guessing my syntax is off. I need to make sure it works for both Windows and Mac.It should also be noted that the separate python script I run to import data into blender (which I have been using and updating for a couple of years), refers to OS arguments to get the desired path of data to import, so I need to make sure that I maintain that connection. Here is an example:Any advice or input would be greatly appreciated. Chris Lee
It looks like you have all the files and binaries you want to use included in one folder that you are sharing. If you place the initial script at the top of that directory you should be able to get it's location from  and calculate the location of the other files you want from that, which should allow the user to move your package folder anywhere they want.You can use  to add any system specific variations to the paths.
Using Sambler's solution I have modified it slightly to got the following solution:To clarify, within the Package directory the folder structure is as follows:Apart from removing the Linux and other suggested variations, I added an input directory. The BlenderScript.py that is called refers to the data.txt and the input.blend files and imports them into the CurrentVersion.blend file. I also moved the version data into a separate directory from the OS specific blender directories and inside the private_sys directory, so that the user doesn't have to see those files.The last hurdle was lines like this inside BlenderScript.py:The problem was that I was getting an error because the script would end up looking for: "\input_datadata.txt".I fixed this by changing it to:Which returns: "\input_data/data.txt". I am assuming this will have the same result in OSX.Thank you very much for your help. This is an area I am learning more in all the time, as the work I do for the client is far more complicated than 'past me' could have imagined. 'Future me' is going to be very pleased with himself when all this is done.


Answer URL
https://docs.python.org/3/library/platform.html#platform.system
https://docs.python.org/3/reference/lexical_analysis.html#literals
