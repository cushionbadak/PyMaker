Natural Text
I install the project dependencies with pip. Pip install all its dependencies to this locationLocation: /home/tara/taraproject/myvenv/lib/python2.7/site-packagesWhat I want to accomplish:I want to put all the dependencies with the project rather than making the users to set it up during the operations.Just trying to remove the installation burden to the operation team.What I tried ?I tried this inside my ProjectFolder,where my working project exist/home/tara/taraprject/ProjectFolderI  created a directory called dependencies and tried to  add all the dependencies module inside it.Than made an import as.I have also made the directory as modules by adding the init.py file.Looks like the import was working but the internal code of the modules had an error with such import.Why Trying So ?If I can do so the operation team can just get my project and run it easily without a need to download the dependencies and make necessary setup.Just want to make the operation part easierHow do I fix such problems or what is the way to do it ?
Based on the description provided I believe virtual environments could provide a solution to your question. From the introduction on virtual environments (see links below):Python applications will often use packages and modules that don’t  come as part of the standard library. Applications will sometimes need  a specific version of a library, because the application may require  that a particular bug has been fixed or the application may be written  using an obsolete version of the library’s interface.This means it may not be possible for one Python installation to meet the requirements of every application. If application A needs  version 1.0 of a particular module but application B needs version  2.0, then the requirements are in conflict and installing either version 1.0 or 2.0 will leave one application unable to run.The solution for this problem is to create a virtual environment, a self-contained directory tree that contains a Python installation  for a particular version of Python, plus a number of additional  packages.Different applications can then use different virtual environments. To resolve the earlier example of conflicting requirements, application A can have its own virtual environment with version 1.0 installed while application B has another virtual environment with version 2.0. If application B requires a library be upgraded to version 3.0, this will not affect application A’s environment.More information on virtual environments can be found at (quick internet search):https://docs.python.org/3/tutorial/venv.html (Python 3)http://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/ (Python 2)https://realpython.com/blog/python/python-virtual-environments-a-primer/Hope this helps.edit: following the comment. Virtual environments can become relocatable using the relocatable option. From the user guide (https://virtualenv.pypa.io/en/latest/userguide/#making-environments-relocatable):Normally environments are tied to a specific path. That means that you cannot  move an environment around or copy it to another computer. You can fix up an environment to make it relocatable See also: Python3 venv: Can env directory be renamed?Hope this gives a solution to your problem.


Answer URL
https://docs.python.org/3/tutorial/venv.html
