Natural Text
In JavaScript this is possible:However, neither Pythons  nor  supports that.Is there any "special" Python function/method/library, which can evaluate statements AND return the last value?
First, there are some problems with some assumptions you're making,  is a statement. It does not produce a value. So attempting to  that would be a syntax error ( expects an expression, not statement). Eval takes a single expression, evaluates it, and returns its value. It's ok in javascript since assignments are considered expressions which is not the case in python.In the same vein,  is a statement that takes a sequence of statements and executes it. It does not return a value as statements do not produce values. So it would be wrong to expect that it should.Once you have that figured out, you'll want to parse the code and separate out the last expression to be returned. Then execute the first part of the code (if any) then evaluate the last expression returning its result.With this, you could then evaluate your code, multiple statements and all.  Just make sure that the last one is an expression that has a definite value otherwise you may run into problems.
For python, you must first have the variable declared before calling  on it. See the docs for : https://docs.python.org/3/library/functions.html#evalYour best bet to evaluate a statement and return the last value would be to do something like: 
Why don't you wrap  then? Something like:If you use it without context you'll get only the return value:But if you forward it local context it will update it:
With influence from Jeffs answer, I build this:This is quite close to JavaScript behaviour and not too much hackery, so this helps me really alot to quickly evaluate expressions in my REPL GUI (e.g. select a bit of code, press Ctrl+Enter to execute the code and pretty print the return value).


Answer URL
https://docs.python.org/3/library/functions.html#eval
