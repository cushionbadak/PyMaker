Natural Text
When decorating a function, you can use a method , and you can use methods of attributes of attributes and so on . You may also pass extra arguments to the decorator .However, it appears that these conflict. When there is a function call in the chain, python appears to assume that it's the bit where you pass arguments to the decorator, and any chains after that are a SyntaxError.Is there anything I'm missing here? A reason for this behaviour or a way to work around it?This code was written for Python 3.4.Error:
The grammar for decorators is something like:Here  is(AKA ,  etc):From the grammar it's clear that the parenthesis can only be followed by a newline not another , hence it throws a syntax error.So, to fix this make sure the function call is always at the end, if there's a function call in-between you must assign it to a variable beforehand(taken from your code only):For the history related to the decorator syntax you can go through this doc: https://wiki.python.org/moin/PythonDecorators
You already have the workaround within your question. Just evaluate  before applying it as a decorator:Remember that the  syntax is just syntactic sugar, so the above is equivalent to:


Answer URL
https://docs.python.org/3/reference/grammar.html
