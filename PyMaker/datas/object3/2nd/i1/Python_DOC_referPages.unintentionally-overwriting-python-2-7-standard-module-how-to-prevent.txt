Natural Text
I wanted to add some stuff to Python's logging module, so I created a separate module under package name "my", which is inside the project's directory (which is the first entry in ). I also have another module of mine, which lives in that same space:Now I wanted to log stuff in  and added  to the file - but it seems Python loads  instead of the standard module. When reading the Python documentation (section 6.1.2. The Module Search Path), I thought I was safe:When a module named spam is imported, the interpreter first searches for a built-in module with that name. If not found, it then searches for a file named spam.py in a list of directories given by the variable sys.path.So a "standard module" is not a "built-in module"? I guess then, that I have to move the  modules out of the current directory - ? Other possibilities?
When it says "built-in module", that line of docs is referring to modules actually compiled directly into the Python executable. You can see which ones those are in .What you need to do is turn off implicit relative imports, which can be done on a per-file basis with the  future statement:


Answer URL
https://docs.python.org/3/library/sys.html#sys.builtin_module_names
