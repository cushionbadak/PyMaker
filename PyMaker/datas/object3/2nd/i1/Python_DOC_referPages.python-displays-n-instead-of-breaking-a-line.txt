Natural Text
I wrote a function to create the  part of a SQL query:When I call this function and  the result, I get is:All in one line. Instead of breaking the line, the  are displayed.Originally I had one , but then I inserted multiple, just to see if they would get displayed.The second problem was that there are parentheses around the entire thing, which I didn't want.I was puzzling over the two issues, and I figured the solution for the second one:I had a comma at the end of the function. The comma caused the function to return a tuple, instead of a single string.I removed the comma:and that fixed both problems. The output was now:I put the comma back, and the  were displayed. I removed the comma, and I have multiple lines again.I have removed extraneous , so now I get what I wanted:So, my code works correctly, but I'm totally confused about the  characters displayed in the old version of the code. Why was that happening?UPDATE:A couple answers to this question focused on why I was getting a tuple. That's not my question. Why are  displayed?
It seems that this is the behavior of tuples. When a tuple is printed, print calls  on each element. The same is also true for lists.I tried this:and the output is:So, the same behavior for both tuples and lists.When we have a string, calling  doesn't expand  characters, and puts quotes around it:outputs:This tuple behavior was mentioned in comments by running.t, interjay and Daniel Roseman, but not in answers, that's why I'm posting this answer.
Writing  is the same as : It returns a tuple containing one element. When you  this, it will show the outer parentheses for the tuple, and the string inside will be printed as its source code representation, i.e. with escape codes and inside quotes.However,  simply returns that value, which can then be printed normally.
It seems that's the behavior for tuples in Python.You can test this with a simpler case like so:Seems like Python helps you with debugging and escapes all the command sequences in strings when printing, so that strings appear the same way they were defined. It did confuse you though, funny case. :)
A tuple can be denoted with or without parenthesis, its the comma decides the type.In the above case, you added a trailing comma after the string and python interpreted it as a tuple.Check this link.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
