Natural Text
I have a dictionary which represents a set of products. I need to find all duplicate products within these products. If products have same , and  -> they are duplicates. I could easily group by ('product_type','color','size') if I did not have a problem: some values are missing. Now I have to find all possible groups of products that might be duplicates between themselves. This means that some elements can appear in multiple groups.Let me illustrate:for this data:I need this result - list of possibly duplicate products for each possible group (take only the biggest super groups):So for example, lets take "shirt" with this product does not have color or size so he can appear in a possible "duplicates group" together with shirt #2 (which has size "s" but does not have color) and shirt #4 (which has color "red" but does not have size). So these three shirts (1,2,4) are possibly duplicates with same color "red" and size "s".I tried to implement it by looping through all possible combinations of missing values but it feels wrong and complex.Is there a way to get the desired result?
You can create all possible keys that are not  and then check which item falls into what key - respecting the s:Output:Doku:itertools.product(*iterables)zip(*iterables)truth value testing


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
