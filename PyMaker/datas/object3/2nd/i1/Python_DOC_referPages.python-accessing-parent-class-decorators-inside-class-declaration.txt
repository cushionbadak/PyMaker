Natural Text
Let's say I have this class:And then I create a subclass which uses the parent class decorator:How do I remove the need for  before the decorator name? The below code doesn't work:I believe this is possible, because the  library does this.See their example:As you can see, you can type in  instead of .How do they accomplish this?
This is done with a metaclass that implements a  method. Excerpt from the docs:3.3.3.4. Preparing the class namespaceOnce the appropriate metaclass has been identified, then the class  namespace is prepared. If the metaclass has a  attribute,  it is called as   (where the additional keyword arguments, if any, come from the class  definition).To put it in simple terms: You make your  method return a dictionary that contains an entry for the decorator. Proof of concept:
I have looked inside the library you are talking about and the  class inherits a metaclass:Inside the  you can find the following:A metaclass is used to create the class object which then is used to instantiate objects. From what i can see in that method is that here  that metaclass dynamically attaches the  method to the class you are going to use.This means that what they are doing is not much different from:


Answer URL
https://docs.python.org/3/glossary.html#term-metaclass
https://docs.python.org/3/reference/datamodel.html#preparing-the-class-namespace
