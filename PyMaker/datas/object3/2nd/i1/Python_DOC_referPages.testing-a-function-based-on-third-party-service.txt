Natural Text
I'm trying to figure out how to create unit tests for a function, which behavior is based on a third party service.Suppose a function like this:What's best practice to write unit test for this function? I need to test both if and else branches, but this depends on the third party service.The first thing that come to my mind is to create a fake webserver and point to that one (changing url) but this way the codebase would include testing logic, like:Moreover, unit testing would trigger slack alerts, which doesn't have to happen.So there I shoulde change again the codebase like:Which I don't really like.Am I missing any design to solve this problem?
Check out Dependency Injection to test code that depends on third party services, without having to check whether you're running in test mode, like in your example. The basic idea is to have the slack alert service be an argument of your function, so for unit testing you can use a fake service that acts the way you want it to for each test. Your code would end up looking something like this:and in a test case, you could have your alert object be something as simple as:You could then test your function by passing on an instance of your TestAlert class, and check the logged output if you want to, by accessing the  attribute. This code would not access any third party services.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
