Natural Text
I have read and read again the Python documentation about multiprocessing module and Queues management but I cannot find anything related to this issue that turns me crazy and is blocking my project:I wrote a 'JsonLike' class which allows me to create an object such as :...without considering intermediate initialization (very useful)The following code just creates such an object, set and insert it in a array and tries to send that to a process (this is what I need but the sending of the object itself leads to the same error)Considering this piece of code :I get the following output (on the ):Any suggestions?
The problem is that you are messing with . If you add a print statement inside this method, you will see that running the following code leads to a crash too:This last statement will result in calling (repeatedly) , searching for an attribute named  (it will later try to find its friend ). Here's what the pickle documentations says about this dunder method:If the  method is absent, the instanceâ€™s  is pickled as usual.In your case the problem is that this method doesn't exist, but your code make it look like it does (by creating an attribute with the right name on the fly). Therefore the default behavior is not triggered, instead an empty attribute named  is called. The problem is that  is not a callable as it's an empty  object. This is why you may see errors like "JsonLike is not callable" pop-up here.One quick fix is to avoid touching attributes that look like  and even . To that matter you can add/modify these lines: Which will allow to make the previous code work (same goes for your code). But on the other hand, you won't be able to write things like  anymore, but that's probably a good thing anyway. I feel like you may end-up with similar bugs in other contexts and sadly, in some cases you will find libraries that won't use such predictable attributes names. That's one of the reasons why I wouldn't suggest to use such a mechanism IRL (even though I really like the idea and I would love to see how far this can go). 


Answer URL
https://docs.python.org/3/library/pickle.html#object.__getstate__
https://docs.python.org/3/library/pickle.html#object.__setstate__
https://docs.python.org/3/library/pickle.html#module-pickle
