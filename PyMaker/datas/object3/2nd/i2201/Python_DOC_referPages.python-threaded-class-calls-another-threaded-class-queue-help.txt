Natural Text
I am trying to control a 3-axis printer using an x-box controller. To get inputs from the x-box I have borrowed code from martinohanlon https://github.com/martinohanlon/XboxController/blob/master/XboxController.pyI have also created code that reads a text file line by line (G-code) to move the printer. I would like to be able to use the X-Box controller to select a G-code file and run it, then as the printer is running continue to listen for a cancel button just in case the print goes wrong. The controller is a threaded class, and my readGcode is a threaded class.The problem I'm having is that when I use the controller to start the readGcode class I cant communicate with the controller until that thread finished. My temporary solution is to use the controller to select a file then pass that files path to the readGcode class. In the readGcode class it keeps trying to open a file using a try block and fails until the filepath is acceptable. Then it changes a bool which makes it skip further reading until its done.  Code:V2_Readfile
You could use a syncronization primitive like threading.Event.To do so, you need to modify your  class like this:Another syncronization primitive worth exploring is . It could be useful if you want to process more than one filename.The pattern you describe in your question is called Busy Waiting, and should be avoided when possible.


Answer URL
https://docs.python.org/3/library/threading.html#event-objects
