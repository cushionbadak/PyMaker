Natural Text
I'm new to socket programming. I'm trying to send 4 files from one host to another. Here is the code:sender:Receiver:File transfer is working fine and there is no problem with it. Now I want to send a simple string like "finish" after sending all files, so that receiver will understand that the transfer is completed and it will do some other tasks based on this finish message (however, it still can receive messages at the same time).I tried to do this by adding another function called  to the sender code and a function called  to the receiver. Here are the changed codes:Sender:receiver:but after running these codes both sender and receiver freeze after the complete transfer of 4 files and nothing happens. What's wrong and how can I do this?
I suspect you're falling prey to buffering here:You perform a , then immediately try to . Except stream connections tend to buffer to avoid excessive packet overhead, so odds are, you don't actually send anything yet, the server doesn't see anything so it doesn't respond, and both sides are blocked waiting for data.The simplest solution here is to shut down the send side port for writing once you've sent the message, which forces out the last data and lets the receiver know you're done:On the receiver side you have a bigger problem: You close the connection before trying to receive at all:So move the  after the  call, and change  to use  to turn on , so buffering isn't occurring (otherwise the echo back may end up buffering indefinitely, though shutting down the sender for write does mean you're likely to detect the sender is done and exit the loop then close the connection, so it may work fine without , as long as the sender isn't expecting to receive data and respond further):


Answer URL
https://docs.python.org/3/library/socket.html#socket.socket.setsockopt
https://docs.python.org/3/library/socket.html#socket.socket.sendfile
