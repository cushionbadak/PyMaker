Natural Text
Can I make a list comprehension for the for loops? A new value should be added to the list only after the last for loop has checked the list. I do not want to remove the last for loop - even if the same result could be achieved without it.
List comprehensions are all about appending to the list in a for loop (creating the list at the start, returning that list as a result), but you need to convert your logic a little first.A list comprehension basically is a series of nested loops and  filters, and a single expression that determines the values to append:with a minimum of one loop, with zero or more  filters and additional loops. If you can convert your code to such a structure, you can make it a list comprehension.Your code isn't quite there yet, because you havebut that can easily be transformed to a simple  containment test:That's basically the same thing; if the character  is not in the substring, then the substring is passable and can be appended:So now you havewhich can be converted to a list comprehension; use the same loops and  tests, but move the part in  to the front; that's the part that produces each value in the output list:or on one line:and this indeed produces the same output as your loop:If you must use a  loop to test for the absence of , then you can still use one with a generator expression and the  or  functions. These essentially do the same thing your loop setting a boolean in a loop when you encounter evidence that a test doesn't hold for all elements in a sequence, except the loop is cut short that point (as if you used  in the  block:That's a slow  implementation using a loop, and the full list comprehension then becomes
Since you're using your  flag simply to test if  is in the current substring, you can use the following list comprehension with a condition that does so using the  operator:This and your code would both output:
Since you want to keep the inner-most loop, you can do something like this :


Answer URL
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/functions.html#any
