Natural Text
suppose we have two  programs.  and .When  program runs on terminal, it returns a variable (let's say a list called ) to the computer memory. And when we run  on terminal, it prints the  from the programs before.Suppose the result of the  is a list A = [83, 22]. So it will be like below on terminal:Any suggestions ? Any response will be appreciated.
As @blue_note suggests, it will not possible from kernal level. 1) You can store first script result into filesystem/database to retrieve later.2) You can write a program which will handle all these functionality in one python script if you run it together. 
I think you can store that data in a .json file. For that, you can use the json library:And, read it from show_results.py file:Here you have the documentation about Json Python library:https://docs.python.org/3/library/json.html
You can't do that. And there's no way around it, it's not in python's hands, the operating system decides. When you run , you create a process. The process has its own memory space, as long as it runs. When the program terminates, this memory is cleared. When you run the second script, the execution of the first script has never happened, as far as the OS is concerned.You could get around it with keeping the first process running and using some interprocess communication method. But it's difficult and has no real benefits. Just create as script that gets the results from the first script and passes them to the second script, if you just want one-off results. Or, store to a file or database, if you care about the result long-term.


Answer URL
https://docs.python.org/3/library/json.html
