Natural Text
For example, let's say I have a class for iterating the records inside a file:
 is expected to have no side effects. By violating this assumption, your code breaks all sorts of things. For example, the standard test for whether a thing is iterable:will reset your file. Similarly, the itertools  recipe:will produce an incorrect file position instead of advancing  records after . Skipping the first few records with  before a loop will also fail:
Anything that subverts the intended flow of a language construct is a danger sign, worse than just a "code smell".  This is not specific to Python; it applies to any language or system.However, remember the stricture about "the hobgoblin of little minds":Does your  improve the program flow?Is the resulting code easy to read and understand?If you've covered these for the people who will have to understand and maintain this -- including your future self -- then the  might well be good practice.  I'm skeptical, but I've seen such situations at work.Side note: Why do you need to  the iterator when you first construct it?


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
