Natural Text
In Python, any non-zero value is evaluated as True. So, for example, the following code prints .But, if I type  at the Python console I get  instead of . Why the different behavior?
In all your cases the  expression is producing . It is then either displayed directly by the console, passed to the  function, or passed to the  statement. The  does its own truthiness testing. just displays its argument: does the action if its argument if truthy; does the  if not:Here it evaluates the , and then acts on the result: returns the first falsy, or last if none
When using , Python will return the first truthy value.If the first value is falsy, it will return the second one, actually no matter if it's truthy or not:If you chain the statements, it will evaluate the first condition first, then the secondThis is also possible in languages like PHP and JavaScript.Source: https://docs.python.org/3/library/stdtypes.html#truth-value-testing
 returns the first value if the value is truthy, or the second value if the first value is falsy (source).This behavior is sometimes used idiomatically to initialize keyword argument of mutable type:This is not the unique way to initialize them, but you should be aware you should not use empty list or dict as default argument.


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
