Natural Text
I am working on python 3.6 64 bit.Here is my code:The output I got is Here are the days Mon Tue Wed Thu Fri Sat SunI didn't add "{}" in my string. Also I used a comma "," instead of a dot "."My understanding was that format() will replace {} in string with its arguments.Question : How did format() worked without {} and . operator
I think you're thinking what's happening is similar to:However, what's actually happening is that you're passing in multiple arguments to print(). If you look at the docs for print(), it takes a couple of parameters:The asterisk in front of objects indicates it can take multiple arguments. Right now you're passing in "Here are the days" as the first argument, and format(days) as the second, which results in:
The print function prints the arguments one right after the other, with a space in between. The  call, finding no replacements, is doing nothing and returning the original string.Here are some examples that may help:
Some of the confusion here may be the difference between the  function and the related  method.  The function invokes the object's (first argument)  method with a format specification (second argument).  If the second argument is None, then it's just like .  The  method of  walks the string on which it is invoked, looking for substitution brackets which may, or may not contain format specifications to be applied similar to the  function.  An example:Question : How did format() worked without {} and . operatorIt worked because without the '.' operator, you mistakenly invoked the  function which, with no second argument, simply return the string.  The  function doesn't use {} brackets.  It's the  method of str, invoked by the '.' operator, that uses {} brackets to make substitutions, some of which may require formatting.Perhaps it might have been less confusing if the str method had a different name like  as formatting is only part of what it does.


Answer URL
https://docs.python.org/3/library/functions.html#print
