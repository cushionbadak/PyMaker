Natural Text
I am using pythons mock.patch and would like to change the return value for each call.Here is the caveat:the function being patched has no inputs, so I can not change the return value based on the input.Here is my code for reference.My Test code: is just a platform independent (python 2 and 3) version of "input". So ultimately I am trying to mock out the users input. I have tried using a list for the return value, but that doesn't seam to work.You can see that if the return value is something invalid, I will just get an infinite loop here. So I need a way to eventually change the return value, so that my test actually finishes.(another possible way to answer this question could be to explain how I could mimic user input in a unit-test)Not a dup of this question mainly because I do not have the ability to vary the inputs.One of the comments of the Answer on this question is along the same lines, but no answer/comment has been provided.
You can assign an iterable to , and the mock will return the next value in the sequence each time it is called:Quoting the  documentation:If side_effect is an iterable then each call to the mock will return the next value from the iterable.As an aside, the test  will not work; you are asking if the expression  is true, or  is true (always the case, a non-empty string is always true), etc. The various expressions on either side of  operators are independent. See How do I test one variable against multiple values?You should also not use  to test against a string. The CPython interpreter may reuse string objects under certain circumstances, but this is not behaviour you should count on.As such, use:instead; this will use equality tests () to determine if  references a string with the same contents (value).The same applies to ; use  instead.


Answer URL
https://docs.python.org/3/glossary.html#term-iterable
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock
https://docs.python.org/3/library/unittest.mock.html#patch-object
