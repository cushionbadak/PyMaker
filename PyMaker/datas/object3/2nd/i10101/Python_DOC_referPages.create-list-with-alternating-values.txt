Natural Text
I'm looking to create a list whose values alternate based on a set of known patterns. Note that there may not be an equal number of items with each prefix. (2 foos, 3 bars, 3 spams). My current solution is nasty gaggle that .pop()'s from lists built from common prefixes and appends to a new list.Desired output:Current solution (doesn't handle lists of differing lengths):For context: Looking to use this as a sort of throttling mechanism when making requests to 4 different servers.
Since you're using Python 2.x this would work:The  built-in function will zip  together and pad with  if one of the lists is too short. Then you can simply flatten this list and exclude any  objects. For Python 3.x you could replace the map function with itertools.zip_longest:

I'd play with sorting:This would return the list lexicographical error in the words, and within word with the prefix.
You're looking for the itertools recipe roundrobin.


Answer URL
https://docs.python.org/3/library/itertools.html
