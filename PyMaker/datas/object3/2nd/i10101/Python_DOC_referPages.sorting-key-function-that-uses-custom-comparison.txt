Natural Text
This question already has an answer here:How to use a custom comparison function in Python 3?                    5 answers                Python 3 removes the  parameter to sorting functions: and  no longer accept the  argument providing a comparison function. Use the  argument instead.That's fine for orderings that can be determined just by inspecting a single item in the sequence (e.g. ). But what about custom orderings that must have two items for inspection to determine their ordering?That two-parameter  function can't be replaced with a one-parameter  function, can it?
Use the  helper.The Python 3 sorting functions take a ‘key’ parameter: specifies a function of one argument that is used to extract a  comparison key from each list element: . The default  value is  (compare the elements directly).The  helper is designed to help you transition tothat style:functools.cmp_to_key(func)Transform an old-style comparison function to a key function. […]  This function is primarily used as a transition tool for programs  being converted from Python 2 which supported the use of comparison  functions.This works in the latest Python 2 and Python 3.The trick is done by creating a key function that takes an item forcomparison, and returns a custom object, which knows how to compareitself as specified by your comparison function.See the Sorting HOWTO for this and other tricks.


Answer URL
https://docs.python.org/3/whatsnew/3.0.html#ordering-comparisons
https://docs.python.org/3/library/functools.html#functools.cmp_to_key
https://docs.python.org/3/library/functions.html#sorted
https://docs.python.org/3/library/functools.html#functools.cmp_to_key
https://docs.python.org/3/howto/sorting.html
