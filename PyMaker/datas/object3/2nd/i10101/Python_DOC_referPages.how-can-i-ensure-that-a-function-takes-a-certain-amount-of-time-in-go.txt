Natural Text
I am implementing EnScrypt for an SQRL client in Go. The function needs to run until it has used a minimum amount of CPU time. My Python code looks like this:Converting this to Go is pretty simple except for the  function.I can't use  /  because those measure wall-clock time (which is affected by everything else that may be running on the system). I need the CPU time actually used, ideally by the function, or at least by the thread or process it is running in.What is the Go equivalent of ?https://docs.python.org/3/library/time.html#time.process_time
You may use  to wire the calling goroutine to its current OS thread. This will ensure that no other goroutines will be scheduled to this thread, so your goroutine will run and not get interrupted or put on hold. No other goroutines will interfere when thread is locked.After this, you just need a loop until the given seconds have passed. You must call  to "release" the thread and make it available for other goroutines for execution, best done as a  statement.See this example:To make it wait for 2 seconds, it could look like this:This prints for example:Of course you can specify less than a second too, e.g. to wait for 100 ms:Output:You may use a different version of this function if that suits you better, one that takes the amount of time to "wait" as a value of :Using this:Output:Note: Note that the loops in the above functions will use CPU relentlessly as there is no sleep or blocking IO in them, they will just query the current system time and compare it to the deadline.What if the attacker increases system load by multiple concurrent attempts?The Go runtime limits the system threads that can simultaneously execute goroutines. This is controlled by , so this is already a limitation. It defaults to the number of available CPU cores, and you can change it anytime. This also poses a bottleneck though, as by using , if the number of locked threads equals to  at any given time, that would block execution of other goroutines until a thread is unlocked.See related questions:Number of threads used by Go runtimeWhy does it not create many threads when many goroutines are blocked in writing file in golang?


Answer URL
https://docs.python.org/3/library/time.html#time.process_time
