Natural Text
I'm trying to see whether an instance of an attribute already exists for my object. As you can see below, I want to do something if my  object has a certain attribute, via the  method. How can I check whether a certain attribute has already been declared? Usually you would check for existence with something like this, which returns :Here's my minimum reproducible example:Clearly the dog has aged, though.I apologize if the title doesn't reflect what I'm trying to convey below; I'm new to OOP.
Rather than test for the attribute, set a default value on the class; if an instance attribute is missing Python looks for a class attribute instead:(note that I had to invert your test, if  is true you want to go into the first branch, not the other way around).Or you can set a default value for the attribute in the :You can also test if an attribute is present with the  function:or by using the  function with a default value:However, testing dynamically for attributes should not be the first option you pick; having a class default is much cleaner.
It looks like you are looking for the  built-in function:In your case, you can modify as follows:
I would rewrite the  method to include  to avoid having to do inspection:Now, the rest of your class should work as written. However, if you want to see if an attribute has been defined on an object, you can write this:
To check if using  is perfectly fine, but in case you are looking for a quick fix for you code, you can do initialize the variable as false before hand:and also the fix your condition as i think it should be reversed:


Answer URL
https://docs.python.org/3/library/functions.html#hasattr
https://docs.python.org/3/library/functions.html#getattr
