Natural Text
I came across another difficult Project Euler problem Link to the problemMy first instinct was to try a simple brute force solution, which took too much time to run.So I thought of a nicer solution, but I have no idea, how to code it.I want to:Generate all the necessary triplets.Put together all the combinations.Calculate the sum.I did the step 1, my result looks something like this:Now here comes the tricky part for me. I tried putting them together with nested loops, but that was really messy. If you have any advice please tell me :)
Firstly, the brute force solution hardly takes any time to run.As @MooingRawr suggests, if you use  there are only ~ 0.9 x 9! permutations of 0123456789 that don't start with a zero.If you run this solution here, it runs within a few seconds, which should be fine for PE.However, the approach you suggest is indeed more efficient. Note, you had hardcoded seven loops, I simply used  to generate them, where  is a factor of d_i d_i+1 d_i+2.You worried about generating all the combinations, but this is trivial using recursion, where each iteration checks the last two digits and finds a valid next digit.You may want to run the solution here and perhaps print the values at intermediate steps to see what is going on.There is still a lot of opportunities for pruning the number of explored states. Your approach brought it down from 3265920 to about 3000. 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.permutations
