Natural Text
If I have a text file that has a bunch of random text before I get to the stuff I actually want, how do I move the file pointer there? Say for example my text file looks like this:(The hashtags are a part of the actual text file)How do I move the file pointer to the line of stuff I care about, and then how would I get python to tell me the number of the line, and start the reading of the file there?I've tried doing a loop to find the line that the last hashtag is in, and then reading from there, but I still need to get rid of the hashtag, and need the line number.
Try using the readlines function. This will return a list containing each line. You can use a  loop to parse through each line, searching for what you need, then obtain the number of the line via its index in the list. For instance:To get rid of the pound sign, just use the replace function. Eg. 
You can't seek to it directly without knowing the size of the junk data or scanning through the junk data. But it's not too hard to wrap the file in  to discard lines until you see the "good" data, after which it iterates through all remaining lines:If you actually need the file descriptor positioned appropriately, not just the lines, this variant should work:You can tweak this to get the actual line number if you really need it (rather than just needing the offset). It's a little less readable though, so explicit iteration via  may make more sense if you need to do it (left as exercise). The way to make Python work for you is:


Answer URL
https://docs.python.org/3/library/io.html#io.IOBase.readlines
https://docs.python.org/3/library/stdtypes.html?highlight=replace#str.replace
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
