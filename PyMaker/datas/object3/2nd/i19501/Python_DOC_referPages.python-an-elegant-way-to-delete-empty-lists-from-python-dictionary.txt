Natural Text
I have a dictionary as:I wish to eliminate the empty values as:I wrote a function (following an example found on the web)I have the following questions:1- I didn't find the mistake why it always returns following - 2- Is there a built-in function to eliminate/delete Null/None/empty values from Python dictionary without creating a copy of the original dictionary?
To fix your function, change  to . There is no function to delete values in place from a dictionary.What you are doing is deleting the variable , not changing the dictionary at all. This is why the original dictionary is always returned. Rewritten, your function might look like:This assumes you want to eliminate both empty list and  values, and actually removes any item with a "false" value.  
There's no builtin for this (AFAIK), but you can do it easily with a dict comprehension:If you're stuck with an older version of python (pre 2.7 without dict comprehensions), you can use the dict constructor:Note that this doesn't operate in place (as per your second question).  And dictionaries don't support slice assignment like lists do, so the best* you can really do to get this all done in place is:*of course the term "best" is completely subjective.
This filters all items which are not empty strings, empty dict/tuple/list.
You can use dict comprehension: -
Michael's answer is correct.Stepping back, you might be able to avoid creating those empty lists at all, by use of 
One more option is the following (without creating a new dict):


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict-views
