Natural Text
Goal:Extend abitrary classes with roles that are only valid in a certain context.This works:My Problem:EDIT2: I wrote 100 lines of code for usual python classes to make this work but for builtins I added 250 lines and there is no complete solution in sight.I can not create custom classes for builtin objects as I can with pure python classes as link:A or link:B.This is because the compiler puts them everywhere:I can not do the replacement in code objects with lists because they are built in the code.These are my questions because I can not estimate it:What are the places I have to look for builtin objects to replace them with wrappers so I can add roles to them?would an C-extension help me patch the attribute lookup so I can make roles for booleanswill I need to compile my own python to make this idea work?is there another solution?EDIT 1This is one of my Use-cases: .I want to make it easy to have small domains that do not interfer with the whole program = keep classes slim.For example I want to make numbers callable to create a lambda calculus.I want to have slim classes and for special use cases I want to extend them by roles so I can call custom functions on them.I the end something between Data-Context-Interaction and Context-Oriented Programming should come out.
Can you provide some more information on your use-case?  I think you want to look into metaclasses but not sure without more information on your specific needs.  And I think there's something wrong or too clever if you want to replace builtins.
I think you want to look into Abstract Base Classes:http://docs.python.org/3/library/abc.html


Answer URL
