Natural Text
I need to stripe the white spaces from a CSV file that I read 
There's also the embedded formatting parameter: skipinitialspace (the default is false)http://docs.python.org/2/library/csv.html#csv-fmt-params
In my case, I only cared about stripping the whitespace from the field names (aka column headers, aka dictionary keys), when using .Create a class based on , and override the  property to strip out the whitespace from each field name (aka column header, aka dictionary key).Do this by getting the regular list of fieldnames, and then iterating over it while creating a new list with the whitespace stripped from each field name, and setting the underlying  attribute to this new list.

You can do:
You can create a wrapper object around your file that strips away the spaces before the CSV reader sees them. This way, you can even use the csv file with cvs.DictReader.Then use it like this:I hardcoded  to be the delimiter. Generalising the code to any delimiter is left as an exercise to the reader.
Read a CSV (or Excel file) using Pandas and trim it using this custom function.You can now apply trim(CSV/Excel) to your code like so (as part of a loop, etc.)
The most memory-efficient method to format the cells after parsing is through generators. Something like:But it may be worth moving it to a function that you can use to keep munging and to avoid forthcoming iterations. For instance:Or it can be used to factorize a class:


Answer URL
https://docs.python.org/3/library/csv.html#csv.Dialect.skipinitialspace
