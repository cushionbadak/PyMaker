Natural Text
I am trying to code an addon in XBMC linux environment within Android.I can see Mac address inside XBMC. But I'd like to grab the mac address for the addon and I can't figure out how.I have already tried with code like above but gives me numbers only and different everytime when run in android.could someone give any suggestion please
You can use XBMC InfoLabels
If you look at the docs:Get the hardware address as a 48-bit positive integer. The first time this runs, it may launch a separate program, which could be quite slow. If all attempts to obtain the hardware address fail, we choose a random 48-bit number with its eighth bit set to 1 as recommended in RFC 4122.The first part explains why it's "numbers only". It's supposed to be a number. If you want that in some particular hex-string format, just format it—e.g., by calling .The last sentence explains why it's "different everytime". If you look at the source, on any non-Windows platform,  will try , then , then fall back to a random number. The former requires a function called  in either  or , which doesn't exist on Android. The latter runs the command  with a series of different flags and searches for specific strings, and falls back to  and . Again, none of this works on Android.There is no recommended way to get the MAC address on Android, mainly because they don't want you to get one. This blog post explains why, and this SO question (especially Seka Alekseyev's answer) adds more detail. Some apps try persisting the MAC address once they've gotten it, and never checking again, which gets around some of the problems, but not most of them.There is a Java API to get the MAC for each service where it makes sense—WiFi, 3G, Bluetooth, etc. It's up to you to decide which is "the" MAC, and you need the right permissions (e.g., ), and there may be no value or a garbage value, but you can get it with code like this:As far as I know, there's nothing in SL4A or any other Android Python distribution that exposes these functions directly, so you'll have to write your own wrapper.
You can get mac address on this easy way, assume "eth0" is your network device name:o = open('/sys/class/net/eth0/address', 'r')mac_address = o.read().strip() #on "ff:ff:ff:ff:ff:ff" form


Answer URL
