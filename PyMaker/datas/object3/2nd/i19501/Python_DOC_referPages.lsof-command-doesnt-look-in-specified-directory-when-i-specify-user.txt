Natural Text
So I was writing a python script and my goal was to use lsof to list all open files under a specific directory (my home folder) for the local user and only output the 'uniq' entries.My script looked like this:This kind of does what I want it to do, it does lsof for the current local user, but it fails to look specifically in the home directory that i specified.  Instead it does lsof on the root directory and lists all lsof for the entire file system for the user.  However, when I do the same command without the  it looks specifically in the home directory.  I've been looking into why this is exactly, and yes I have tried using  and  instead of just  to get this to work with no success, so I am kind of stumped.  Any advice would be great :)
From the man page:Normally list options that are specifically stated are ORed - i.e., specifying the -i option without an address and the -ufoo option produces a listing of all network files OR files belonging to processes owned by user ''foo''.There are some exceptions, but none of them apply in your case.So,  means "all files that are opened by me OR in my home directory.So how you do what you want?The -a option may be used to AND the selections. For example, specifying -a, -U, and -ufoo produces a listing of only UNIX socket files that belong to processes owned by user ''foo''.Throw a  in there:By the way, in general, you really don't want to use  in Python, which is why the documentation specifically says:The  module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function. See the Replacing Older Functions with the subprocess Module section in the  documentation for some helpful recipes.And really, why use  and  instead of sorting in Python? Or, alternatively, if all you want to do is get this shell pipeline run, and not process it in any way in Python, why use Python instead of bash in the first place?
lsof joins options together using OR by default, try adding the  flag to AND them together.


Answer URL
