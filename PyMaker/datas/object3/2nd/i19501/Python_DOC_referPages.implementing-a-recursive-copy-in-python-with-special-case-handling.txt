Natural Text
I'd like to implement a version of  in Python that handles certain directories in a special way. If you do , I'd like  and all of its files/subdirectories to be copied exactly into , except for certain filenames. What is the most portable way to do this in Python? Example: I have this directory structure: is a file and  is a directory containing a file . I'd like to copy  and all of its contents, but handling specially directories that have  files in them. In this case only  meets the criteria. I'd like to  to copy all of  but replace any special directories with a zipped version of themselves. In the above example that would mean copying  as is, but replacing  with  that might contain a processed version of .I tried to follow the suggestion below but I'm not sure how to deal with the copying:If I try it it correctly detects the special directories:how can I make make it insert  in the right corresponding place in ? I'd like  (the destination dir) to have exactly the same structure as  (the source dir) except with special handling of directories containing the  files.
It sounds like you want shutil.copytree utilizing the ignore parameter:If ignore is given, it must be a callable that will receive as its arguments the directory being visited by , and a list of its contents, as returned by . Since  is called recursively, the ignore callable will be called once for each directory that is copied. The callable must return a sequence of directory and file names relative to the current directory (i.e. a subset of the items in its second argument); these names will then be ignored in the copy process. 'ignore_patterns()' can be used to create such a callable that ignores names based on glob-style patterns.So something like this should work:Edit for expanded question and exampleHere's an example.  The simplified ignore function still creates an empty special directory, but it is easy to delete before doing the special zip copy.  I also nested the special function so  could be used more than once without relying on using a global variable.  Doing the zip is an exercise for the user:Output


Answer URL
