Natural Text
Say I have a namespace  that I obtain from calling , which parses the command line arguments.How can I import all variables from this namespace to my current namespace?e.g.I could certainly do:but if I have a large number of parameters I would need one such line for each parameter.Is there another way of importing variables from a namespace without having to go through them one by one?PS:  does not work.PS2: I am aware that this is a bad practice, but this can help in some corner cases, such us when prototyping code and tests very quickly.
Update your local namespace with the result of the  function:This is generally not that great an idea; leave those attributes in the namespace instead.You could create more problems than you solved with this approach, especially if you accidentally configure arguments with a  name that shadows a built-in or local you care about, such as  or  or something. Have fun hunting down that bug!Tim Peters already stated this in his Zen of Python:Namespaces are one honking great idea -- let's do more of those!
Probably the worst idea ever: since you can pass an arbitrary object to , pass the  module, so that all attributes can be looked up as local variables.This will even "work" for parameters whose destinations aren't valid Python identifiers:


Answer URL
