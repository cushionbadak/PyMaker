Natural Text
I've got a grid representing a tessellation, which is a set of instances of the  class (a class I made). I also have a  class, which is the class representing the boundary of the simulation I'm running (another class I've made). Any line of any pentagon can either have two  objects or a  and a  object as "parents" (an attribute which I've defined for the line class). The type of the object determines how I do certain computations.  So, in short, I need a way to tell which of two classes a particular variable is an instance of, where I've made both classes. When I call , I get:How am I supposed to determine this?
The idiomatic way to perform typechecking in Python is to use :Demo:Note that doing  would also work, but it will not factor in inheritance like  does.
In old-style classes you check the class of an instance using its  attribute, in new-style classes  will work fine(Read: NewClass Vs Classic Class). In old-style classes every instance of user-defined class was of type (Unifying types and classes in Python 2.2). In new-style classes ) and  now do the same thing:You can also use  to check if an object is an instance of a class:But checking this using  doesn't mean the class is the exact parent of the instance:
Try testing the  attribute of your object:


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
