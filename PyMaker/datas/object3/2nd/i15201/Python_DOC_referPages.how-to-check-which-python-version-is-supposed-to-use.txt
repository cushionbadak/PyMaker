Natural Text
Put the case that I have a bunch of python scripts all beginning either with  or with nothing (no shebang at all). Some of those scripts need python  (or any  version), some of them need python  and some of them can run on both (these check the python version themselves).I am on a system with two versions of python:  and . The general  programm is just a symlink.As this  symlink can change I want to edit the shebangs in the scripts to specify if this script should use  or . Is there any possibility/program/script to 'parse' a python script and determine if it should get run by  or ?
PEP 394 - The "python" Command on Unix-Like Systems:...  should be used in the shebang line only for scripts that are  source compatible with both Python 2 and 3.in preparation for an eventual change in the default version of  Python, Python 2 only scripts should either be updated to be source  compatible with Python 3 or else to use  in the shebang line.In general, the same script could be run by both Python 2 and 3. It means that (at least for some scripts) you have to read the source and decide for yourself what Python version should be used.Is there any possibility/program/script to 'parse' a python script and  determine if it should get run by python2 or python3?You could try to compile your scripts using  and  binaries, try:If only  binary can compile a script, you could add  into the shebang.Modernize, Futurize, Pylint packages could also help to find -only, -only scripts automatically. allows you to detect  or  markers such the presence of a  statement in a source (Python 2 marker) or the presence of  in a source (Python 3 marker) but it is probably too low level.
First, put  or  on the  line.  On *nix, when you try to 'execute' file directly, the OS should read the line and select the proper binary.  On Windows, omit 'usr/bin/env and use py.exe to run the file, which is now installed with the PSF CPython installer.  Example: tem.py containsAt command lineIf I change 2 to 3 in file, output changes to 3.4.2.


Answer URL
https://docs.python.org/3/howto/pyporting.html
https://docs.python.org/3/library/2to3.html
