Natural Text
I want to append a file to the tar file. For example, the files in  are . I have a new png file named , I want to append to  to  and cover the old file  in . My code:then, all the files in  disappeard but , if I change my code to this:the program is crashed, error log:What are my mistakes and what should I do?Update. From the documentation, it follows that  files cannot be open in  mode. If so, what is the best way to add or update files in an existing archive?
From  documentation:Note that  or  is not possible. If mode is not suitable to open a certain (compressed) file for reading,  is raised. Use mode 'r' to avoid this. If a compression method is not supported,  is raised.So I guess you should decompress it using  library, add the files using the  mode in , and then compress again using .
David Dale asks:Update. From the documentation, it follows that  files cannot be open in  mode. If so, what is the best way to add or update files in an existing archive?Short answer: decompress / unpack archivereplace / add file(s)repack / compress archiveI tried to do it in memory using 's and 's and file/stream interfaces but did not manage to get it running - the tarball has to be rewritten anyway, since replacing a file is apparently not possible. So it's better to just unpack the whole archive.Wikipedia on tar, gzip.The script, if run directly, also tries to generates the test images "a.png, b.png, c.png, new.png" (requiring Pillow) and the initial archive "test.tar.gz" if they don't exist. It then decompresses the archive into a temporary directory, overwrites "a.png" with the contents of "new.png", and packs all files, overwriting the original archive.Here are the individual files:  Of course the script's functions can also be run sequentially in interactive mode, in order to have a chance to look at the files. Assuming the script's filename is "t.py":Here we go (the essential part is in ):If you want to add files instead of replacing them, obviously just omit the line that replaces the temporary file, and copy the additional files into the temp directory. Make sure that  then also "sees" the new files to be added to the new archive.I've put this in a somewhat more useful function:And a few "tests" as example: also supports archives, but not adding files to one: https://docs.python.org/3/library/shutil.html#archiving-operationsNew in version 3.2.  Changed in version 3.5: Added support for the xztar format.  High-level utilities to create and read compressed and archived files are also provided. They rely on the zipfile and tarfile modules.Here's adding a file by extracting to memory using io.BytesIO, adding, and compressing:it printsOptimizations are welcome!


Answer URL
https://docs.python.org/3/library/gzip.html
https://docs.python.org/3/library/tarfile.html
https://docs.python.org/3/library/shutil.html#archiving-operations
https://docs.python.org/3/library/io.html#io.BytesIO
https://docs.python.org/3/library/shutil.html
