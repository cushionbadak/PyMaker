Natural Text
I have a function in a python script which should launch another python script multiple times, I am assuming this can be done like this(Script is just my imagination of how this would work.)but, I also need to pass over some defined variables into the other script, for example, if in the first script, then, I need x to have the same value in the second script without defining it there, I have NO idea how to do that. And then also killing them, I have read about some method using PIDs, but don't those change every time? Most of the methods I found on Google looked overly complex and what I want to do is really simple. Can anyone guide me in the right direction as to what to use and how I should go at accomplishing it? 
I have a function in a python script which should launch another python script multiple times, I am assuming this can be done like this(Script is just my imagination of how this would work.)**Here is the subprocess manual page which contains everything I will be talking about https://docs.python.org/2/library/subprocess.htmlOne of the way to call one script from other is using subprocess.Popensomething on the linesyou can use the return value from Open to make the call synchronous using the communicate method.This would block the calling script until the subprocess finishes.I also need to pass over some defined variables into the other script??There are multiple ways to do this. 1. Pass parameters to the called script and parse it using OptionPraser or  in the called script have something likein the callee script use subprocess asNote the addition of -x parameterYou can use args parsehttps://docs.python.org/2/library/argparse.html#module-argparsePass the subprocess a environment variable which can be used to configure the subprocess. This is fast but this only works one way, i.e. from parent process to child process.in called scriptin callee script set the environment variableUse sockets or pipes or some other IPC methodAnd then also killing them, I have read about some method using PIDs, but don't those change every time?again you can use subprocess to hold the process id and terminate itthis will give you the process idyou can then use .terminate to terminate the process if it is running to check if the process is running you can use the poll method from subprocess Popen. I would suggest you to check before you terminate the processpoll will return a None if the process is running
If you just need to pass some values to second script, and you need to run thatby means of subprocess module, then you may simply pass the variables as command line arguments:And recieve the -x=1 via sys.argv list inside second_script.py (using argparse module) On the other hand, If you need to exchange something between the two scripts dynamically (while both are running), You can use the pipe mechanism or even better, use the multiprocessing (wich requires some changes in your current code), it would make communication with and controlling it (terminating it) much cleaner.
You can pass variables to subprocesses via the command line, environment variables or passing data in on stdin. Command line is easy for simple strings that aren't too long and don't themselves have shell meta characters in them. The target script would pull them from .script.py: starts child processes but doesn't wait for them to complete. You could start all of the children, put their popen objects in a list and finish with them later.


Answer URL
https://docs.python.org/3/howto/argparse.html
