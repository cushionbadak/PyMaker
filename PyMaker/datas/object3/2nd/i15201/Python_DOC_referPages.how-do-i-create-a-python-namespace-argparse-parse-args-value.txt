Natural Text
To interactively test my python script, I would like to create a  object, similar to what would be returned by .The obvious way,may result in Python repl exiting (as above) on a silly error.So, what is the easiest way to create a Python namespace with a given set of attributes?E.g., I can create a  on the fly () but I cannot use it as a :
You can create a simple class:and it'll work the exact same way as the   class when it comes to attributes:Alternatively, just import the class; it is available from the  module:As of Python 3.3, there is also , which essentially does the same thing:The two types are distinct;  is primarily used for the  attribute and the return value of .Further comparisons:Both classes support equality testing; for two instances of the same class,  is true if they have the same attributes with the same values.Both classes have a helpful  to show what attributes they have. objects support containment testing;  is true if the namespace instance has an attribute namend .  does not. objects have an undocumented  method that returns a sorted list of  attributes for that instance. You can get the same for either class using .While  is implemented in C and  is implemented in Python, attribute access is no faster because both use the same  storage for the attributes. Equality testing and producing the representation are a little faster for  instances.
It is now recommended to use SimpleNamespace from the types module. It does the same thing as the accepted answer except for it will be faster and have a few more builtins such as equals and repr.
argparse documentation show various examples of what you're trying to do: 


Answer URL
https://docs.python.org/3/library/types.html#types.SimpleNamespace
https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.parse_args
