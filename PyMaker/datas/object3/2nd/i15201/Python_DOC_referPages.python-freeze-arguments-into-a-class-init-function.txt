Natural Text
Suppose I have a class that looks like this:In most instances I initialize my class like this:But I'll occasionally have a code path which sets the  keyword argument based on some logic, while holding the  positional argument at a constant value. This code would look something like:My question is: Can I avoid having to repeat myself for the  portion of my object instantiation? I would like to, for the duration of the code path, freeze the value of the positional  as , and simply pass the keyword argument  at instantiation time.Ideally the code would look something like this:Any ideas for what a clean implementation of  would look like? Is there a means to do this via Python standard library?
You're looking for !alternatively (as mgilson mentions in the comments) you can build your own anonymous constructor method
Instead of repeating , store the argument in a variable and apply that:You could create a  object or a  function but for this case that's overkill.


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
