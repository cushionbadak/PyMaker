Natural Text
I ran across the caret operator in python today and trying it out, I got the following output:It seems to be based on 8, so I'm guessing some sort of byte operation?  I can't seem to find much about this searching sites other than it behaves oddly for floats, does anybody have a link to what this operator does or can you explain it here?
It's a bitwise XOR (exclusive OR).It results to true if one (and only one) of the operands (evaluates to) true.To demonstrate:To explain one of your own examples:Think about it this way:
It invokes the  or  method of the object as needed, which for integer types does a bitwise exclusive-or.
It's a bit-by-bit exclusive-or.  Binary bitwise operators are documented in chapter 5 of the Python Language Reference.
Generally speaking, the symbol  is an infix version of the  or  methods. Whatever data types are placed to the right and left of the symbol must implement this function in a compatible way. For integers, it is the common  operation, but for example there is not a built-in definition of the function for type  with type :One neat thing about Python is that you can override this behavior in a class of your own. For example, in some languages the  symbol means exponentiation. You could do that this way, just as one example:Then something like this will work, and now, for instances of  only, the  symbol will mean exponentiation.
When you use the  operator, behind the curtains the method  is called. is equivalent to .Also,  is equivalent to  (where  is used as a fallback when  is implicitly called via using  but does not exist).In principle, what  does is completely up to its implementation. Common use cases in Python are:Symmetric Difference of sets (all elements present in exactly one of two sets)Demo:Bitwise Non-Equal for the bits of two integersDemo:Explanation:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__xor__
