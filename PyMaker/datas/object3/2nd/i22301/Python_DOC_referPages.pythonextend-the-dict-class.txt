Natural Text
I have to solve this exercise:Python's dictionaries do not preserve the order of inserted data nor store the data sorted by the key. Write an extension for the dict class whose instances will keep the data sorted by their key value. Note that the order must be preserved also when new elements are added.How do I extend ? Do I need to have access to the source code for the  type?
You can either subclass  or , since van already talked about UserDict, lets look at .Type  into an interpreter and you see a big list of methods. You will need to override all the methods that modify the dict as well as the methods that iterate over the dict.Methods that modify the dict include ,, etc.Methods that iterate the dict include ,,, etc.This should get you started
The implementation of dict will not help you with the task. What you want is a class that has the same interface as , but a different implementation. That will require to implement methods like , , etc. If you Google for "ordereddict", you will find a lot of examples.
Good news: the problem is not difficult at all.In order to poke around and see the entrails of a  you can use and , which has a very complete interactive documentation, but of course you also have access to the even more complete online documentation.Once you have a grasp of what  does behind the scenes, you should learn about inheritance in Python.If you get stuck visit this site to get some ideas, but don't copy/paste, your teacher will not see it kindly.
If you use python 2.7+, then see collections.OrderedDict.Otherwise, backport (copy the source) or see Recipe 576693: Ordered Dictionary for Py2.4 (Python) .  But if you really need to extend the , then start with UserDict, source for which you can find in  of your python distribution.


Answer URL
https://docs.python.org/3/library/collections.html?highlight=userdict#collections.UserDict
