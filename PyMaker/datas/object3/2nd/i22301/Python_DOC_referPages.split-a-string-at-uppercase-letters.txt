Natural Text
What is the pythonic way to split a string before the occurrences of a given set of characters?For example, I want to split at any occurrence of an uppercase letter (possibly except the first), and obtain.Edit: It should also split single occurrences, i.e. from  I'd like to obtain.
Unfortunately it's not possible to split on a zero-width match in Python. But you can use  instead:
Here is an alternative regex solution.  The problem can be reprased as "how do I insert a space before each uppercase letter, before doing the split":This has the advantage of preserving all non-whitespace characters, which most other solutions do not.
If you want  to split to  change the rexeg to 
A variation on @ChristopheD 's solution
or

Alternative solution (if you dislike explicit regexes):
Another without regex and the ability to keep contiguous uppercase if wanted
This is possible with the  tool.It should also split single occurrences, i.e. from  I'd like to obtain . is a third-party package with 60+ useful tools including implementations for all of the original itertools recipes, which obviates their manual implementation.
An alternative way without using regex or enumerate:I think it is clearer and simpler without chaining too many methods or using a long list comprehension that can be difficult to read.
An alternate way using  and Code:Output:
Sharing what came to mind when I read the post. Different from other posts.
Replace every uppercase letter 'L' in the given with an empty space plus that letter " L". We can do this using list comprehension or we can define a function to do it as follows.If you choose to go by a function, here is how.In the case of the given example:But most of the time that we are splitting a sentence at upper case letters, it is usually the case that we want to maintain abbreviations that are typically a continuous stream of uppercase letters. The code below would help.Thanks.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
