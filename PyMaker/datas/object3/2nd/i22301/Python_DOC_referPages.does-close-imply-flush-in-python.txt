Natural Text
In Python, and in general - does a  operation on a file object imply a  operation?
Yes. It uses the underlying  function which does that for you (source).
NB:  and  won't ensure that the data is actually secure on the disk. It just ensures that the OS has the data == that it isn't buffered inside the process.You can try sync or fsync to get the data written to the disk.
Yes, in Python 3 this is finally in the official documentation, but is was already the case in Python 2 (see Martin's answer).
filehandle.close does not necessarily flush. Surprisingly, filehandle.flush doesn't help either---it still can get stuck in the OS buffers when Python is running. Observe this session where I wrote to a file, closed it and Ctrl-Z to the shell command prompt and examined the file:Subsequently I can reopen the file, and that necessarily syncs the file (because, in this case, I open it in the append mode). As the others have said, the sync syscall (available from the os package) should flush all buffers to disk but it has possible system-wide performance implications (it syncs all files on the system).


Answer URL
https://docs.python.org/3/library/io.html#io.IOBase.close
