Natural Text
Python seems to have functions for copying files (e.g. ) and functions for copying directories (e.g. ) but I haven't found any function that handles both. Sure, it's trivial to check whether you want to copy a file or a directory, but it seems like a strange omission.Is there really no standard function that works like the unix  command, i.e. supports both directories and files and copies recursively? What would be the most elegant way to work around this problem in Python?
I suggest you first call , and if an exception is thrown, then retry with .
To add on Tzot's and gns answers, here's an alternative way of copying files and folders recursively. (Python 3.X)Should it be your first time and you have no idea how to copy files and folders recursively, I hope this helps.
Unix  doesn't 'support both directories and files':To make cp copy a directory, you have to manually tell cp that it's a directory, by using the '-r' flag.There is some disconnect here though -  when passed a filename as the source will happily copy just the single file; copytree won't.
 and  are copying files. copies a folder with all the files and all subfolders.  is using  to copy the files.So the analog to  you are saying is the  because  targets and copies a folder and its files/subfolders like . Without the   copies files like  and  do.
I think copy_tree is what you are looking for
The python shutil.copytree method its a mess. I've done one that works correctly:


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.copytree
https://docs.python.org/3/library/shutil.html#shutil.copy
