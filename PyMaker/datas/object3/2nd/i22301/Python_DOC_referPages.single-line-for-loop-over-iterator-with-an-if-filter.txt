Natural Text
Silly question:I have a simple for loop followed by a simple if statement:  and I was wondering if I can write this as a single line somehow.So, yes, I can do this:  but it reads so silly and redundant ().Is there a better way?
No, there is no shorter way. Usually, you will even break it into two lines :This is more flexible, easier to read and still don't consume much memory.
You could do
I'd use a negative guard on the loop. It's readable, and doesn't introduce an extra level of indentation.
Mabe this, but it's more or less the same verbose...
This is a design philosophy of python.  If it takes you too many words to put it on one line, it should be broken into a few lines to help the person who comes after you.  List and generator expressions are more for transforming iterables in-place -- making more readable forms of  and .
Here's an alternative to some of the other filter versions:This has the advantages of being pretty concise and also letting you use dot notation attr('first_class.is_full').You could also put something like that (or a version using a list comprehension) into a utility function like filter_by_attr. Then you could do:I still think e-satis is right to put it in a new variable no matter the method you use, though. It is just clearer that way, especially if the use doesn't exactly match the name of the attribute in question (or the the criteria is more complex).My only note on that would be that if you find yourself using this in several places, perhaps you should make airports a special collection with 'important_airports' being a @property which returns the filtered collection. Or some sort other abstraction to hide away the filtering (like a service call).
Using list comprehension (only if airports is a list of objects):


Answer URL
https://docs.python.org/3/reference/expressions.html#generator-expressions
