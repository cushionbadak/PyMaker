Natural Text
I'm trying to do some class inheritance in Python. I'd like each class and inherited class to have good docstrings. So I think for the inherited class, I'd like it to:inherit the base class docstringmaybe append relevant extra documentation to the docstringIs there any (possibly elegant or pythonic) way of doing this sort of docstring manipulation in a class inheritance situation? How about for multiple inheritance?
You're not the only one! There was a discussion on  about this a while ago, and a recipe was created. Check it out here.
You can concatenate the docstrings easily:However, that is useless. Most documentation generation tool (Sphinx and Epydoc included) will already pull parent docstring, including for methods. So you don't have to do anything.
Not particularly elegant, but simple and direct:Now:
A mixed stile that can preserve both the inherited docstring syntax and the preferred ordering can be:With the same output as Alex's one:Thin ice: playing with docstring can make your module unusable with , expect some:
I wrote custom_inherit to provide some simple, light weight tools for handling docstring inheritance. It also comes with some nice default styles for merging different types of docstrings (e.g. Numpy, Google, and reST formatted docstrings). You can also provide your own style very easily.Overlapping docstring sections will defer to the child's section, otherwise they are merged together with nice formatting.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.getdoc
