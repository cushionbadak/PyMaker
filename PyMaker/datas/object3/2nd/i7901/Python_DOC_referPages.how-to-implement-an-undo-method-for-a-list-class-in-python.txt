Natural Text
Im kinda new with python and I got a task to create a class "UndoList" (type list) with an undo()-method. This method should undo typical list-operations like, append, insert, remove...This undo()-method should only undo one operation (as u can see in the example). My teacher gave me the hint, to save the value of the list in the instance before every operation.This is my class:So now my question: how can i create an instance in my class to save my actual list before I do any operation? And is it possible to just retrun this instance in my undo-method?Thanks!
Here's some code that will get you started. Really though, it's best to avoid sub-classing Python's standard types because to do it properly you generally need to override every method, which can be rather tedious and error-prone.Note that the  method is called , not. :) And that the methods which mutate a list in-place return , not the list.outputWe use  so that we can call  with no args to get an empty UndoList.As 9000 mentions in the comments, you probably don't need  here. It consumes extra RAM by recursively copying every list item (except for immutable items), and it's slow. Using  does make  robust. OTOH, it also means that items restored from  are copies of the original items, and in some cases that is undesirable - if other objects refer to those items then the back-up process breaks that connection. If you want to experiment with this, simply change the code that backs up the list toand the  method becomesThe sane way to do this is to build a new class using Abstract Base Classes rather than sub-classing .
It's simple. but tedious: you add a  attribute to the list object.  This is a stack of previous variable states.  Every change operation needs to push its current state onto the object's  before the change.  The  operation simply pops the most recent one.You've already noted that you'll have to redefine all of the change operations (such as the  in your class).


Answer URL
https://docs.python.org/3/library/abc.html
