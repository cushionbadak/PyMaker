Natural Text
I want to type hint the following function: could be of any type, it's determined at runtime. obviously is not the answer here, because it's invalid syntax. But what is the right answer? I could not find any documentation on this, any help is appreciated.On a similar note, if I have a function  which returns an instance of , is there a way to type hint the return value appropriately?
I'd recommend using a combination of , to indicate that your  value could be any arbitrary type, and , in the following way:If you want the type of  to be even more dynamic, you could explicitly or implicitly give it a type of .Regarding your latter question, you'd do:Note that you need to be careful when instantiating your class -- I don't remember what Pycharm does here, but I do know that mypy currently does not check to make sure you're calling your  function correctly/with the right number of params. (This is because T could be anything, but there's no way to hint what the constructor ought to look like, so performing this check would end up being either impossibly or highly difficult.)
I think this would do the work:
What about typing.Type?https://docs.python.org/3/library/typing.html#typing.TypeThat seems to fit - since __class_ should always return a typeYes, this works (even Pycharm does not complain:To your second question: That should be an generic: https://docs.python.org/3/library/typing.html#user-defined-generic-types


Answer URL
https://docs.python.org/3/library/typing.html#typing.Type
https://docs.python.org/3/library/typing.html#user-defined-generic-types
