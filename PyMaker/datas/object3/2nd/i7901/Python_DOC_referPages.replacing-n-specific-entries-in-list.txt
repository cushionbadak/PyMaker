Natural Text
I have the following list of strings:This has been parsed from a very messy  file. Each set of "blank" entries corresponds to one zero, however I need to record these zeroes as 999s (I essentially need to replace every set of 4 consecutive  with a ). What would be the most Pythonic way to do this?
EDIT:Added  argument to account for different values (doesn't have to default to , only chosen to match the question description).
Another way of doing it is by converting the list to string using join(), then replace the spaces with 999 and then convert to list again using split()
Here a little function that does what you need.
Using  (aka:  in Python 3):Code:Results:
The most pythonic way I guess?Use groupby and repeat from itertools which produces a list of tuples like this.[(k, len(list(g))) for k,g in groupby(L)][('17', 1), (' 5', 1), ('6', 1), (' 0', 2), ('', 4),.. and so on]where the output is a tuple => (item, number_of_it's_consecutive_occurrence)Then again use List comprehensionNote: (x,y) => (item, number_of_it's_consecutive_occurrence)


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
