Natural Text
I have a collection of files. Each file has 1 second data. Furthermore, the files are not periodic, i.e. they are not daily files. For example, one file may contain a day and a half of data, whereas the next may contain 3 days and 2 hours; gaps may exist between files and within them. Another issue is that it is not practical to load all the files in memory at the same time.Here is a concrete example that shows the problem. The following dataframe has a day and half of 1 second data:The next dataframe starts where the previous one left off and it has two days of data:Lets create 10 minute iterators on each dataframe and chain them:The desired behaviour if we iterate over  is to see each group key (and its data) only once, but this is not the case.The contents of  are:In this example,  is the key of the last group of  and the first group of .How do I iterate by 10 minute groups over all the files without repeating groups at the edges of the files?
The solution has two parts: one is to handle all the files as a single dataset; the other is to account for the fact that a 10 minute group can be split between the end of one file and the start of the next.These are the required imports:Handle all the files as a single datasetThis function returns an iterator over the 10 minute groups of the given file:The above function is used to create an iterator of iterators with . Given a list of files a single iterator over all the 10 min groups of the collection of files can be created like so:Account for the fact that a group can be split between the end of one file and the start of the nextHowever, the above iterator is not aware of 10 minute groups that span two files. The following class addresses that problem:Note that the implementation is entirely dependent on the pandas  API. To use it, create an instance of the class with the above chained iterators:My implementation may not be perfect so any feedback is welcome. I've published a snippet with 3 tests.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
