Natural Text
I was attempting to use  I ended up only importing Since I knew there was an  I then imported the full module nameThis looks like a dynamic module that's only loaded if you directly import it.This got me wondeirng, how does one discover these dynamically loaded modules? Is there a programmatic way to discover them or do I just need to enumerate the source code?
By default, packages do not import modules (or sub-packages).So:does not import the module util.But the developper can choose to do it for you.For instance:To understand everything about modules and packages, there is an excellent tutorial.Note: you can also meet "namespace packages". See PEP 420 for details.EDITTo find sub-modules you can use :You get:See Basic Resource Access in the documentation. EDIT 2Another way to discover subpackages or submodules is to use pkgutil.walk_packages. It is probably the best solution.For instance:You get:


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages
https://docs.python.org/3/library/pkgutil.html
