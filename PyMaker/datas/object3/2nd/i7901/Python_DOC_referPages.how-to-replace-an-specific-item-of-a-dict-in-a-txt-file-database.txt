Natural Text
I want to use a .txt file to store API tokens for an application, but I got stuck trying to find a way to Replace the API key/token if it's found in the file. This is the code tried (Python 3.5):I also want to know if this is the best way to do it or the code could be optimized and how.Thank you, it has been done. Final code:With this approach we don't even need to write different saves just in case the user exists or doesn't exists because it deletes it if it's found, so it never exists when the code runs and it just need to save a "new" record every single time, except if the API key already belongs to another user.
There are many issues with given code, so let's start from the beginning:We don't need to create empty  object to fill it on the next lineswhen we can just create it filled likeAssignments are not allowed in  statements (more at docs)so this line will cause  (i guess this is a typo).Checks likeare redundant, we can just writeand have the same effect.We don't need to explicitly close file when use  statement, this is what context managers for: cleanup after exiting  statement block.Your  file after first iteration will have invalid  object, because you are simply writing new serialized  object at the end of the file, while you should modify  object (which seems to be a list of dictionaries) and write serialized new version of it, so we don't need  mode as well.Let's define utility function which saves new API key data likethen we can have something likeExampleI've created directory  with  file which contains single linebecause at the beginning we have no API keys.Let's assume our missed objects are defined likeso with above code it gives me at first script execution empty output, and on the second one:Further improvementsShould we  from -loop if one of conditions (API key or user has been already registered in database) is satisfied?Maybe it will be better to use already written database instead of reinventing the wheel? If you need  objects you should take a look at TinyDB.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-conditions
