Natural Text
I'm writing a decorator to validate some functions. I try to use built-ins as much as possible to do the heavy lifting, but I've been getting stuck on picking which exceptions I should catch when using them.For example:I'd like to know:What are the most-derived exceptions that  (and other built-ins) explicitly raise?Where can I find documentation that lists them? (they aren't onhttps://docs.python.org/)
All Python standard types follow the conventions of a few default exceptions. The behaviour is documented for the exceptions, not the types.For , the exceptions are  and . There are other exception that can be raised at this point, but those are not dependent on the input ( and ). indicates that the type of object passed in is not supported; the  documentation documents what types are accepted (mapping or iterable objects), everything else is cause to raise the exception. The accepted types must match certain expectations; if those are not met, a  is raised (correct type, but the value is wrong).
there is no list of exception that a specific python function can throw. This is due to python's duck typing. Since you could provide objects of any type as your function parameters, and since these functions could do whatever they want in their implementation, any exception could in principle be raised. Usually, the docs are clear on what exception they rise under specific conditions (e.g. IOError when a file is not found) but this is different from "a list of all exceptions that a function can throw".I would also advise against your strategy to redirect exceptions into a "BetterError" as you plan, since this hides the original reason and location where the error first occurred. If you really want to provide better error messages, do argument validation in beginning of your function and raise ValueErrors for situations that cannot be excluded but would raise any exception down the line:


Answer URL
https://docs.python.org/3/library/exceptions.html
https://docs.python.org/3/library/exceptions.html#TypeError
https://docs.python.org/3/library/exceptions.html#ValueError
https://docs.python.org/3/library/stdtypes.html#dict
