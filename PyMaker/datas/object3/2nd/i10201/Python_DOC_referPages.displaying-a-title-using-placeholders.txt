Natural Text
I am quite new to Python and I am now struggling with formatting my data nicely for printed output.I have one list that is used for two headings, and a matrix that should be the contents of the table. Like so:Note that the heading names are not necessarily the same lengths. The data entries are all integers, though.Now, I want to represent this in a table format, something like this:I have a hunch that there must be a data structure for this, but I cannot find it. I have tried using a dictionary and formatting the printing, I have tried for-loops with indentation and I have tried printing as strings.I am sure there must be a very simple way to do this, but I am probably missing it due to lack of experience.
Some ad-hoc code for Python 2.7:This relies on  and the Format Specification Mini-Language.
There are some light and useful python packages for this purpose:1. tabulate:  https://pypi.python.org/pypi/tabulatetabulate has many options to specify headers and table format.2. PrettyTable: https://pypi.python.org/pypi/PrettyTablePrettyTable has options to read data from csv, html, sql database. Also you are able to select subset of data, sort table and change table styles.3. texttable: https://pypi.python.org/pypi/texttablewith texttable you can control horisontal/verical align, border style and data types.Other options:terminaltables Easily draw tables in terminal/console applications from a list of lists of strings. Supports multi-line rows.asciitable Asciitable can read and write a wide range of ASCII table formats via built-in Extension Reader Classes.

Python actually makes this quite easy.Something likewill have the outputThe % within the string is essentially an escape character and the characters following it tell python what kind of format the data should have. The % outside and after the string is telling python that you intend to use the previous string as the format string and that the following data should be put into the format specified.In this case I used "%-12i" twice. To break down each part:From the docs: https://docs.python.org/2/library/stdtypes.html#string-formatting
Updating Sven Marnach's answer to work in Python 3.4:
When I do this, I like to have some control over the details of how the table is formatted. In particular, I want header cells to have a different format than body cells, and the table column widths to only be as wide as each one needs to be. Here's my solution:Here's the output:
I think this is what you are looking for.It's a simple module that just computes the maximum required width for the table entries and then just uses rjust and ljust to do a pretty print of the data.If you want your left heading right aligned just change this call:From line 53 with:
Pure Python 3Will print
I would try to loop through the list and use a CSV formatter to represent the data you want. You can specify tabs, commas, or any other char as the delimiter.Otherwise, just loop through the list and print "\t" after each elementhttp://docs.python.org/library/csv.html
A simple way to do this is to loop over all columns, measure their width, create a row_template for that max width, and then print the rows. It's not exactly what you are looking for, because in this case, you first have to put your headings inside the table, but I'm thinking it might be useful to someone else.You use it like this:
I found this just looking for a way to output simple columns. If you just need no-fuss columns, then you can use this:EDIT: I was trying to be as simple as possible, and thereby did some things manually instead of using the teams list. To generalize to the OP's actual question:Ouputs:But this no longer seems any more simple than the other answers, with perhaps the benefit that it doesn't require any more imports. But @campkeith's answer already met that and is more robust as it can handle a wider variety of label lengths.
The following function will create the requested table (with or without numpy) with Python 3 (maybe also Python 2). I have chosen to set the width of each column to match that of the longest team name. You could modify it if you wanted to use the length of the team name for each column, but will be more complicated. Note: For a direct equivalent in Python 2 you could replace the  with  from itertools.This will produce the following table:If you want to have vertical line separators, you can replace  with .References:lots about formatting https://pyformat.info/ (old and new formattingstyles) the official Python tutorial (quite good) -https://docs.python.org/3/tutorial/inputoutput.html#the-string-format-methodofficial Python information (can be difficult to read) -https://docs.python.org/3/library/string.html#string-formattingAnother resource -https://www.python-course.eu/python3_formatted_output.php


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#the-string-format-method
https://docs.python.org/3/library/string.html#string-formatting
