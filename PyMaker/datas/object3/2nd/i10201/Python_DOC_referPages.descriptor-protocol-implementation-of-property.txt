Natural Text
The Python descriptor How-To describes how one could implement the  in terms of descriptors. I do not understand the reason of the first if-block in the  method. Under what circumstances will  be ? What is supposed to happen then? Why do the  and  methods not check for that?Code is a bit lengthy, but it's probably better to give the full code rather than just a snippet. Questionable line is marked.
You can see what the effect is by making another version that leaves that test out.  I made a class Property that uses the code you posted, and another BadProperty that leaves out that  block.  Then I made this class:The similarities and differences can be seen in this example:The effect of the  block is to return the raw property object itself if it is accessed via the class.  Without this check, the getter is called even when accessing the descriptor via the class.The  and  methods do not need such a check, since the descriptor protocol is not invoke at all when setting/deleting attributes on a class (only on an instance).  This is not totally obvious from the documentation, but can be seen in the difference between the description of  vs. those of / in the docs, where  can get the attribute of "the owner class or an instance" but / only set/delete the attribute on an instance.
From the descriptor documentation:The details of invocation depend on whether  is an object or a class.Basically, instances call descriptors as , while classes call descriptors as . If  means the getter was called from the class, not an instance.This machinery is used for example to implement classmethods.The  and  do not check for  because they can never be called like this. Only  is invoked when called from the class. Doing  or  will directly overwrite or delete the property object, without invoking  or .


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__get__
