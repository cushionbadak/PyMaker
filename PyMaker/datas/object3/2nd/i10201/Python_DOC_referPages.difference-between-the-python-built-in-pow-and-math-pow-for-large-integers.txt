Natural Text
I find that for large integers, the math.pow does not successfully translate to its integer version. I got a buggy Karatsuba multiplication when implemented with math.pow. For instance:I went with 10 ** a_size with correct results for large integers.For floats, visit Difference between the built-in pow() and math.pow() for floats, in Python?Please explain why this discrepancy is seen for math.pow. It is observed only from 10 power of 23 and higher.
 always returns a floating-point number, so you are limited by the precision of  (almost always an IEEE 754 double precision number).  The built-in  on the other hand will use Python's arbitrary precision integer arithmetic when called with integer arguments.


Answer URL
https://docs.python.org/3/library/math.html#math.pow
