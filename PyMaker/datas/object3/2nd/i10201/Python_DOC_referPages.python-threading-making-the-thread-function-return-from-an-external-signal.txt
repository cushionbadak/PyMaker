Natural Text
Could anyone please point out whats wrong with this code. I am trying to return the thread through a variable flag, which I want to control in my main thread. test27.pytest28.py
The  class can be instantiated with the  argument. Then you just give it a function which should be raun in a new thread. It is a convenient way to start a simple thread, but for more control it is usualy easier to have a class inherited from , which has additional member variables, like the  for aborting.For example:Then, to start the thread, call  and then to stop it call :
Regular variables should not be tracked in threads. This is done to prevent race condition. You must use thread-safe constructs to communicate between threads. For a simple flag use . Also you cannot access local variable  via thread object. It is local, and is only visible from scope. You must either use a global variable, as in my example below or create an Object before calling your thread and use a member variable.main thread:P.S.: I just noticed that you attempted to use lock() in the thread, but failed to use it in the main thread. For a simple flag go with Event. For a lock() you need to lock both parts and mitigate a risk of a deadlock.  


Answer URL
https://docs.python.org/3/library/threading.html
