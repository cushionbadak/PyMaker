Natural Text
I am new to python and have been using python 3 for my learning. I am using python's unit test framework to test my code.Problem :-The function that I need to unit test takes inputs in the following manner:-I am using the following test case to mock the input :-The problem I am facing is that when the test case is run the variable triplets a,b,c and d,e,f have the same values - 1,2,3I have been trying to find a way to inject the second set of inputs to run my test but in vain.Any help regarding the above is greatly appreciated.Solution environment :- Python 3
The patch decorator will ensure the patched function always return that value, and if subsequent calls must be different, your mock object must have a way to simulate that.  This ends up being much more complicated.What you can do however is go one step lower and patch the underlying layer, which is the standard input/output layer.  One common strategy that other test frameworks have done is to deal with the  and  objects directly.  Consider this:ExecutionNaturally, this works at a lower level, and so the option to have an iterator that returns different values on subsequent calls may be more suitable.
You can't patch it twice like that.  You'll have to patch it once, with an object that returns different values on subsequent calls.  Here's an example:
You can't patch out your function twice like that. When you are looking to mock the same function, and have it return different values each time it is called, you should use side_effect. takes a list of values, where each value in the list is the return of every time that function is called in your code: 


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
