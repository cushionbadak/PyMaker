Natural Text
This question already has an answer here:Why does 1+++2 = 3?                    6 answers                I need the explanation of this syntax , does this mean that (+4) is the same as (4) ? I have tried many other operands and it completely works as if I disregarded the plus sign before the number .
Would you be confused by The only difference between that andis a different unary operator 
The  in  is the unary plus operator:The unary  (plus) operator yields its numeric argument unchanged.So yes, because  is a number (an ),  means just the same thing as , as the operator returns the number unchanged.The operator exists as a counterpart to the  unary minus operator:Custom classes could override it using the  method, making it possible to return custom results.
(In addition to the points pointed out by the other answers ...)The comparison operations in Python have lower precedence than the  unary operator ():Unlike C, all comparison operations in Python have the same priority,  which is lower than that of any arithmetic, shifting or bitwise  operation.This means that the unary plus operator applied to its operand will be evaluated prior to the comparison operator, and  will result in simply just  prior the unary comparison operation even starting.
Yes, they're effectively the same. The unary  operator in  is applied to the  and  is the result.
To check if your variables are the same type them into your interpreter with the == operator between them. If they are the same, this will return True.This may seem daft or obvious in this case, but when working with more complex variables it can be more useful.


Answer URL
https://docs.python.org/3/reference/expressions.html#unary-arithmetic-and-bitwise-operations
https://docs.python.org/3/reference/expressions.html#unary-arithmetic-and-bitwise-operations
https://docs.python.org/3/reference/datamodel.html#object.__pos__
https://docs.python.org/3/reference/expressions.html#comparisons
