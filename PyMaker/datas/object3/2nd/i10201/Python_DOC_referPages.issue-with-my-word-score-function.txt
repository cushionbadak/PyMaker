Natural Text
So here is my code:Basically for every letter that is shared between each string the score should increase by one. However there should not be repeats but my code repeats letters sometimes depending on the output. I have to use recursion for this and can't using anything like map or key because we haven't learned that yet in class. This lab assignment is really tricky and I tried debugging and all my classmates are stumped and its due on Tuesday. Heres some outputs that don't work and what they should be returning:     returns 4 but should return 3 because of the repeat there is one extra returns 9 but should return 8 again because of the repeatCorrect outputs: correctly returns 1 correctly returns 3
Assuming that you can't use ,  or  one way would be to iterate the characters in  one by one and use  to check if it can be found from . If character is found then add  to result and construct new  by combining the slices before and after the match index:Output:UpdateAssuming that  methods are not available either you can easily implement the search yourself assuming  and  are allowed:
You can try to "erase" the letters from the second word, when a "positive match" occurs. This way, your duplicate issues will disappear. 
You can convert the str in a list, then in a set for eliminate duplicates and check the intersection len.EDIT: you cant use intersection,but list and while you can use?


Answer URL
https://docs.python.org/3/library/functions.html#func-range
https://docs.python.org/3/library/functions.html#len
