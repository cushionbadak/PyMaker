Natural Text
This question already has an answer here:How do you split a list into evenly sized chunks?                    57 answers                I have a listand wish to make it how would I do this?moreover, I need to make the new list grouped to whatever "n" isin the above example, n is 2if n is 3, the result should be:[['r', 'o', 'c']['o','c','o']]
The  recipes have a general-purpose function that does exactly what you're looking for with any kind of iterator, called :However, this returns you an iterator. If you want a list, you have to ask for one explicitly:Also, note that this gives you a list of tuples, not a list of lists. Most likely this doesn't actually matter to you. But if it does, you'll have to convert them:If you install  off PyPI, you can just . Otherwise, you'll have to copy and paste from the recipes into your code.But either way, it's worth understanding how  works:First, it creates an iterator out of your iterable. (This is something that keeps track of its current position and returns values one by one as you call  on it, until you've reached the end.) Then it makes  references to that iterator. This is the tricky bitâ€”you don't want  separate iterators to the same list, you want  references to the same iterator, so if you grab the  value out of the first iterator, they all move forward. That's why it does the funny  bit. Then it just s the iterators together. So, the first pass through the  calls  on the first iterator, then the second, then the third; the second pass through the  again calls  on the first iterator, then the second, then the third; and so on.The reason it uses  instead of just  (or, in Python 2.x,  vs. ) is so  will give you  instead of just . If that's not what you want, it's trivial to just use the other function instead.For further explanation, see this blog post.
Something like this?You can change the  to the number you want.



Answer URL
