Natural Text
I need to start a python script with bash using nohup passing an arg that aids in defining a constant in a script I import.  There are lots of questions about passing args but I haven't found a successful way using nohup.  a simplified version of my bash script: the relevant part of my config script i'm importing: the script thats using it: Frankly, since I'm passing the args to script.py, I'm not confident that they'll be in scope for the import script.  That said, when I take a similar approach without using nohup, it works.  
In general, the argument vector for any program starts with the program itself, and then all of its arguments and options. Depending on the language, the program may be , , , or something else, but it's basically always argument #0.Each program whose job is to run another program—like , and like the Python interpreter itself—generally drops itself and all of its own options, and gives the target program the rest of the command line.So,  takes a  and zero or more . Inside that ,  will be  itself (in this case, ), and  and later will be the additional arguments ( and whatever  resolves to).Next, Python takes zero or more options, a script, and zero or more args to that script, and exposes the script and its args as . So, in your script,  will be , and  will be whatever  resolves to.And  works similarly to Python;  will be the first argument to the bash wrapper script ( will be the script itself), and so on. So,  in the inner Python script will end up getting the first argument passed to the bash wrapper script.Importing doesn't affect  at all. So, in both your  module and your top-level script, if you ,  will hold the  passed to the bash wrapper script.(On some platforms, in some circumstances  may not have the complete path, or may even be empty. But that isn't relevant here. What you care about is the eventual , and , , and  are all guaranteed to pass that through untouched.)


Answer URL
