Natural Text
I have a list something like the following:and so on.I want to sort the list by 'modified', in chronological (or reverse chronological) order What is the best way of doing this?
Your sort function needs to understand the dates first, else it will just sort by the letters of the weekday.The dateutil package is perfect for this task. It will automatically identify the date and doesn't require a format string like .
For the reverse, use the optional boolean  argument:See  for more information.
Use the "key" argument for python's sorted function.  If you really want chronological order, you'll also have to parse the date strings somehow.  I used datetime below (can't seem to get it to handle the time zone correctly):import datetime as dtlist = [{'modified': 'Thu, 08 Aug 2013 18:28:13 +0000', 'path': '/test4.txt'}, {'modified': 'Thu, 06 Aug 2013 18:28:17 +0000', 'path': '/test5.txt'}]list.sort(key=lambda d:dt.datetime.strptime(d['modified'], '%a, %d %b %Y %H:%M:%S +0000'))print listoutput:


Answer URL
