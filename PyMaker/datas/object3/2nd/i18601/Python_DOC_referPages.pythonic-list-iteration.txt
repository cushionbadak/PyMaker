Natural Text
I've got a list of Django Querysets that I'd like to combine into a single Query. The standard way of merging two Querysets is to perform the operation: , and I'd like to perform that operation on all elements of my list to form a single Queryset object.This is pretty straightforward to do using a for loop, eg:Given the wonders of python it feels as though there is probably an inbuilt function of some kind that will do this for you. However, I had a look through the  library and nothing jumped out as a way of simplifying this operation.So my question is, is there a more pythonic way of performing the above operation?
Yes, that function is called .  Use it with : takes the first to values of , passes those to the first argument, , effectively executing . It then takes that result, plus the next value in  and applies the first argument again, and so on until  is done.For  with 4 elements, that comes down to:or the equivalent of:but reduce works for any length of  > 0 (for a list of length 1 the first value is returned without applying the first argument).Note that your use of  is very unpythonic; don't ever do that. You could have written your loop with an initial  from  instead:


Answer URL
