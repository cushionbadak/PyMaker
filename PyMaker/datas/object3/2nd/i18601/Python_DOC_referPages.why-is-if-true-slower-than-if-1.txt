Natural Text
Why is  slower than  in Python? Shouldn't  be faster than ?I was trying to learn the  module. Starting with the basics, I tried these:I am confused by these things:According to the response from Mr. Sylvain Defresne in this question, everything is implicitly converted to a  first and then checked. So why is  slower than ?Why is  slower than  even though only the  values are different?Like Question 2, but why is  a little faster than ?NOTE: I ran  three times and took the average of the results, then posted the times here along with the code.This question does not relate to how to do micro benchmarking(which I did in this example but I also understand that it is too basic) but why checking a 'True' variable is slower than a constant.
 and  are not keywords in Python 2. They must resolve at runtime. This has been changed in Python 3Same test on Python 3:Time error is in 1%, which is acceptable.
Bytecode disassembly makes difference obvious.As Kabie mentioned,  and  are globals in Python 2. Lots of stuff is going on to access them.Python compiler was able to recognize  as a constantly "truthy" expression and optimize redundant condition away!Pretty much the same as , with one more .See . But  is a bit more costly than .


Answer URL
