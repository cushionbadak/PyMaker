Natural Text
I have an app X that can run on either of two computers, but on no more than one at once.  I have another app Y, written in Python, that given the two possible ip addresses needs to find out which computer is running app X (if any).  I've partially solved this by having a UDP service that listens on a port and responds with a 'Hello' whenever it receives some data.  The client can try and send data to the app X port on each address and if it gets a response, I know the application is running on that computer.My code so far looks like this:The problem with this function is that it's called periodically whenever I want to talk to the computer running app X.  It will always test ADDR_A first, and if it's not running app X then I have to wait for the socket to timeout before trying ADDR_B. Although it doesn't happen often app X could have switched computers whenever I come around trying again.  Is there a better way?  I'm wondering if it's possible to connect to both computers in parallel and return as soon as one responds? Or should I cache which ip address responded first last time the function was called?  How would I code these or other ideas?Thanks.EDIT: Here is my revised code using select:
You should look at select.select() which provides exactly the capability you are looking for to look at the two computers in parallel.


Answer URL
