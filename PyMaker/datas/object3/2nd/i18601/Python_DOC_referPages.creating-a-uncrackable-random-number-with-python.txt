Natural Text
It has been said that Python's random number generator relies on which means if i wanted to create a random number like thisand store it into the browser cookies for "authentication"it is possible some one can find this number based on "time".so the question is, how do i create a random number that can not be guessed by others that know a-lot about codes. ?
You can use  if it's available on your system:http://docs.python.org/2/library/random.html#random.SystemRandomClass that uses the  function for generating random numbers from sources provided by the operating system. Not available on all systems. Does not rely on software state and sequences are not reproducible. http://docs.python.org/2/library/os.html#os.urandomReturn a string of n random bytes suitable for cryptographic use.This function returns random bytes from an OS-specific randomness source. The returned data should be unpredictable enough for cryptographic applications, though its exact quality depends on the OS implementation. e.g.
The  module was added in Python 3.6. All functions in that module are tuned specifically for use in cryptography.The  module is used for generating cryptographically strong random numbers suitable for managing data such as passwords, account authentication, security tokens, and related secrets.In particularly,  should be used in preference to the default pseudo-random number generator in the  module, which is designed for modelling and simulation, not security or cryptography.The module now aliases  as  but adds some more functions - like the token creation functions. If you're generating a value to be stored in cookies, you should use , which[Returns] a random URL-safe text string, containing nbytes random bytes. The text is Base64 encoded, so on average each byte results in approximately 1.3 characters. If nbytes is  or not supplied, a reasonable default is used.Example:Please bear in mind that future Python versions can consider the reasonable default to be more bytes, so if you're storing this into a database column do not set too low a limit for it, or perhaps don't limit the token length at all.


Answer URL
https://docs.python.org/3/library/secrets.html
https://docs.python.org/3/library/secrets.html#generating-tokens
https://docs.python.org/3/library/secrets.html#secrets.token_urlsafe
