Natural Text
I have a very simple  class that I am trying to port to , but I'm stuck on the line:I have found this example, but I don't understand how  could return  (since the ASCII value is  for instance). Without understanding this line, it's difficult to port it.
 returns  for  because it is digit in number systems with bases beyond the decimal system (such as hexadecimal, all the way up to 35-base):From the  documenation:The letters A-Z in their uppercase ( through ), lowercase ( through ), and full width variant ( through  and  through ) forms have numeric values from 10 through 35. This is independent of the Unicode specification, which does not assign numeric values to these  values.There is no direct Python equivalent;  also interprets roman numerals, for example, you'd have to code such mappings yourself.
There is no single ready-made Python function that's equivalent, but I think two functions combined cover the whole range. For ASCII characters 0..9 and A..Z,  with a proper base argument (36) suffices. For getting the numeric value of a unicode code point, there's unicodedata.numeric, discounting the fact that it returns a float.


Answer URL
