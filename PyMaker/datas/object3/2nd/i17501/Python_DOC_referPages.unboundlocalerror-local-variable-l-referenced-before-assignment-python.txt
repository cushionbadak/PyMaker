Natural Text
This question already has an answer here:Don't understand why UnboundLocalError occurs [duplicate]                    8 answers                when trying to compile the code below I get this errorCan someone explain why ? Isn't a global variable assigned before anything else? My Python version is 2.7.3
The minimal code to reproduce your bug isThis is happening for a number of reasonsFirst - because in python we have mutable and immutable classes. Ints are immutable, that is when you write  you actually create another object (which is not true for certain ints due to optimisations CPython does). What actually happens is x = x + 1.Second - because python compiler checks every assignment made inside a scope and makes every variable assigned inside that scope local to it.So as you see when you try to increment  compiler has to access a variable that's local to that scope, but was never assigned a value before.If you're using python2 - you only have the option to declare variable . But this way you would be unable to get a variable from an in-between function like In python3 you have  keyword to address this situation.Also I would advise you to avoid using globals. Also there is a  class that might be useful to you.Further reading: python docs
Isn't a global variable assigned before anything else? Yes, but that's completely irrelevant. The compiler sees an assignment within the function and marks the name as being in the local scope. You need to use the  keyword at the beginning of the function to tell the compiler that the name should be in the global scope instead.
You are mixing tabs and spaces; don't do that.Run your script with  and fix all errors that finds.Then configure your editor to stick to only spaces for indentation; using 4 spaces per indent is the recommended style by the Python Style Guide.Next, you are trying to increment the global  here:without declaring it a global. Add  in that function. Assignment to a name inside a function marks such a name as a local, unless you specifically tell Python it is not.


Answer URL
