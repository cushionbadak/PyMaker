Natural Text
I have lists like this.How can I convert this list to a list like this:list2[0][1] and list2[1][1] are the average values from first list with spesific people (6.00 is coming from I should use iteration like this:or.. something like that? Because I'm importing list from SQLite and list is always changing.
Since you say you're importing the list from sqlite, you may be interested in using an existing data processing package rather than rolling your own function by function.  For example, in , you could load the data into a :Now using  would be significant overkill for the problem in isolation, but if you're pulling data from a database you're probably going to want to do multiple things with the data.
This works for any number of values you are summing (in your case two):Python 3Python 2Replace  with , add  around the , use  with a space, not parens, and change the  loop to(Python 3 is sure nice.)ExplanationThe  and  loop create a map from name to a list of the value. iterates over each name and list of lists. takes something like  and turns it into . We then sum these and divide by the number of original lists.We append  and this list of averages to get a list like .BTW, if this is coming from a database, have you considered doing the aggregation there?
Something like this:Now  contains:The Ordered of unique keys ever seen is preserved here as we used an  here.Now we can iterate over this dictionary and get the average of columns for each key.  with  allows us to get a transpose of a list very easily:Final list comprehension:You can remove the  call in Python3. And if order of the names 'Joe', 'Mike' doesn't matter in the output list, then you can simply use a normal dict with  or use .
Using :
An alternate solution .Its a bit complicated but a one liner without imports.


Answer URL
