Natural Text
I am using Python 3.6.0 on Windows 10 x64.I just found that in ,  parameter has an implicit maximum value, which is 32536799999, almost equals to .Is that the maximum value?The error message just says it's an invalid number.I googled and looked on Python documentation, but I didn't find anything about it. And I'm going to check this problem on Ubuntu in my lab.
The  documentation doesn't mention any limits, but the  documentation does: may raise , if the timestamp is out of the range of values supported by the platform C  or  functions, and  on  or  failure.[...]Naive  instances are assumed to represent local time and this method relies on the platform C  function to perform the conversion. Since  supports wider range of values than  on many platforms, this method may raise  for times far in the past or far in the future.Then we head over to the Windows documentation:, which uses the  structure, allows dates to be expressed up through 23:59:59, December 31, 3000, coordinated universal time (UTC), whereas  represents dates through 23:59:59 January 18, 2038, UTC. is an inline function which evaluates to , and  is equivalent to . If you need to force the compiler to interpret  as the old 32-bit , you can define . Doing this will cause  to evaluate to . This is not recommended because your application may fail after January 18, 2038, and it is not allowed on 64-bit platforms.All the time-related functions (including ) work the same way. So the max date you can reliably convert between timestamps on Windows 10 is 3000-12-31T23:59:59Z.Trying to get a platform-independent max timestamp is difficult.
I'm using in a Ubuntu 16.04 VM running on a Windows 10 machine.I broke apart your ctime call to its components, to investigate but I don't run into the same maximum.Either something was fixed from 3.6.0 to 3.6.1, or you have some interesting issue specific to your machine.I do see the following time related change in 3.6.1:https://www.python.org/dev/peps/pep-0495/I wonder if the time you happened to be using happened to fall into a fold or a gap?  Could you try adding a little over 1 hour on your system and see if it becomes valid again?
This must be to do with your installation of Python, in version , I never experience such an error:and even when I do with a gigantic number, it throws a different .


Answer URL
https://docs.python.org/3/library/datetime.html
