Natural Text
I am trying to get into working with 2 dimensional lists/tuples because I want to use them for an idea I have. I have always had trouble understanding the for instruction, it just doesn't make any sense to me, it doesn't feel intuitive. The problem is that I just don't understand the  instruction. I got this code that displays this simple tuple:This displays:I don't really get what this parts of the code mean  and  I know what  is for.Also I tried to change the [] to () because they are supposed to be part of a tuple but I get an error that says:TypeError occurred   Message='tuple' object is not callableIf I remove parts of the code the result is displayed with parenthesis, but this code somehow removes all the parentheses from the tuple:For example this one displays basically the same result but with the parentheses:What is going on here?EDIT: BELOW IN THE ANSWERS I WROTE THE CODE THAT HELPED ME UNDERSTAND EVERYTHING I WASN'T UNDERSTANDING AND EXPLAINED IT, THANKS FOR ALL YOUR ANSWERS WOULDN'T BEEN ABLE TO DO THAT WITHOUT YOUR INPUT.
The outer for loop iterates through each tuple in  index-wise:The inner (nested) for loop iterates through each tuple accsed by , also index-wise, and print's it's content all on one line:The reason this feels so awkward is because you're not using -loops the way they were designed to be used, i.e idiomatically. Python -loops are made to iterate over collections element-wise, not index-wise. There's no need to use  or  at all. Iterate directly over , and each tuple in :As you can see, the above is much cleaner to write and understand.
How to initialize 2d arrays and tuples:How to access 2d lists:You access 2d tuples the same way:Doing  is trying to call function 'mytuple', which obviously is a tuple and not a function, so there is an error.
First of all I will remove your confusion by clarify the different between tuple and List, how to access both of them:First List: also called sequence, Each element of a sequence is assigned a number - its position or index. The first index is zero, the second index is one, and so forthAnd for accessing it's elements you should use  with the index(position of the element you want to get)Second Tuple: a sequence of immutable Python objects. Tuples are sequences, just like lists. The differences between tuples and lists are, the tuples cannot be changed unlike lists and tuples use parentheses, whereas lists use square brackets.And for accessing it's values you also use  with the index(position of the element you want to get)And your code is valid for both list and tuple:
Based on all the information i got from you guys i wrote this:What was confusing me was that i didn't knew what were the values of "i" and "j" and then on top of that what the print was doing also was adding to this confusion, so i just printed the values of "i" and "j" and they were 3 and 2 and then after making sense of what the print was doing i got it.-First is doing 3 loops, and 3 is from the len of the tuple-After that it is doing 2 loops based on the len of the other 3 tuples which is  2-Finally it is printing each element like this m[i][j] which means it will start with the element 0,0 then 0,1, then 1,0, then 1,1 then 2,0, then 2,1This would be the "map" of the tuple:(0,0) (0,1)(1,0) (1,1)(2,0) (2,1)Each element has it's coordinates first element is 0,0 the second is 0,1 and so on.And for this to be printed like this and not in a single line you use:What i understood about this was that " " is just an space, no matter, but end"") is making so the code doesn't break the line thus prints each loop on a single line and ends each line it prints with an space so it doesn't print the result one after the other, the other print() just adds a break line to make it more "readable".All i got thanks to you guys because i was not seeing this before, why i got the error, why i wasn't understanding the for loops, why i could have done it in a simpler way.Everything is clear now guys, thank you all.


Answer URL
https://docs.python.org/3/tutorial/
