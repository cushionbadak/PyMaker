Natural Text
There are similar questions/answers on SO, but this refers to a specific error, and I have referred to the relevant SO topics to solve this, but with no luck.The code I have seeks to retrieve lines from a text file and read them into a dictionary. It works, but as you can see below, not completely.FileCodeDesired output:I wish the dictionary to hold keys: a,b,c,d and corresponding values as shown in the file, without the unwanted character. Simiarly, I need the values to be stored correctly in the dictionary as integers (so that they can be worked with later)For quick replication see: https://repl.it/KgQe/0 for the whole code and problemCurrent (erroneous) output:The Stackoverflow answer I have used in my current code is from: Python - file to dictionary? but it doesn't quite work for me...
Your code slightly modified - the key is to strip out all the chars that we don't care about ([Python]: str.rstrip([chars])):Output:
The efficient way to do this would be using python lists as suggested by @Tico.However, if for some reason you can't, you can try this.this will transform  to . Now you can apply your split function.
It's much easier if you transform your string_list in a real python list, so you don't need parsing. Use json loads:Hope it helps!
You can use  and a dict-comprehension to do that:Result:
Using only a very basic knowledge of Python:In other words, discard all of the punctuation, leaving only the blank between the two values needed for the dictionary. Split on that blank, then put the pieces from the split into the dictionary.Edit: In a similar vein, using a regex. The  looks for the various alternative characters given by its first argument and any that are found are replaced by its second argument, an empty string. The alternatives are delimited by the '|' character in a regex pattern. Some of the alternatives, such as the '[', must be escaped with an '\' because on their own they have special meanings within a regex expression.
You were almost there, missing two things:stripping the keysconverting the valuesThe following code does what you need (I think):Be careful however, since this code is very brittle. It won't process any variations on the input format you have provided correctly. To build on top of this, I'd recommend to at least use  for the int conversion and to think about the stripping characters again.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.rstrip
