Natural Text
Python allows to execute a  statement in the body of a class, as well as other common statements and function calls.The following two class definitions code thus are legal in Python:Function callOutput: statementOutput:However, it most of the time makes little sense to do something else than defining instance or class methods with a  statement, or class variables.Why are such statements and function calls allowed in the body of a class?
Why are such statements and function calls allowed in the body of a class?The body of a class statement is a series of Python statements, like the body of any other block statement. The purpose of a class body is to prepare the class's namespace, filling it with methods and class variables and properties and stuff. For that purpose, it's obviously useful to allow function definitions and assignment statements, but the purpose of allowing all other statement types is less clear.However, there's no compelling reason to disallow other statements. It just takes more work and makes the language less flexible with no clear benefit.With  loops, you can do something likeWith function calls, you can do something likeSo why not allow them?


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#class-definitions
