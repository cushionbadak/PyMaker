Natural Text
First I write a chatserverand then the clientThe client will first say something to the server, and the server in turn say something to the client. This works fine.But if I accidently typed an extra Enter or I didn't say something in turn, then the program will be blocked? Then I typed something in server and client and nothing happed, why?Thanks!!!
The logic in your server is essentially:While the logic in your client is:... I didn't say something in turn, then the program will be blockedThe client will only pass line 5 and start again with line 3 if it has received data from the server. But the server will only sent data if the user has entered data at the terminal. This means that the client will block in line 5 if the user does not enter data at the server.... if I accidently typed an extra Enter ... then the program will be blockedThe client and server use  to read a single line from the terminal. If you type an extra Enter this means an additional line. This line will be buffered internally until the next  which then immediately returns with this new line. Thus even if your client just received a message from the server in line 5 it will immediately pass line 3 and 4 again and wait again for data from the server in line 5. Even worse, the empty line returned by  in line 3 means that no data were actually sent in line 4. This means that no the server is waiting for data from the client and the client is waiting from the server, i.e. a deadlock.For a proper chat applications you need to handle receiving from the peer and input from the terminal independently from each other, i.e. not require that these happen always in a specific order like you currently do. A common way to this this is by using select. And there are many examples on the internet which show how to do this.


Answer URL
https://docs.python.org/3/library/select.html
