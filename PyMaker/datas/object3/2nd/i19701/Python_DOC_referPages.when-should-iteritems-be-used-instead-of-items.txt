Natural Text
Is it legitimate to use  instead of  in all places? Why was  removed from Python 3? Seems like a terrific and useful method. What's the reasoning behind it?Edit: To clarify, I want to know what is the correct idiom for iterating over a dictionary in a generator-like way (one item at a time, not all into memory) in a way that is compatible with both Python 2 and Python 3?
In Python 2.x -  returned a list of (key, value) pairs. In Python 3.x,  is now an  object, which behaves different - so it has to be iterated over, or materialised... So,  is required for what was  in Python 2.x.Python 2.7 also has a bit of a back-port for key handling, in that you have ,  and  methods, the most useful being  which behaves more like a  (which you'd expect from a ).Simple example:Will give you a list of the common keys, but again, in Python 3.x - just use  instead.Python 3.x has generally been made to be more "lazy" - i.e.  is now effectively ,  is , etc.
 was removed because  now does the thing  did in python 2.x and even improved it a bit by making it an .
The six library helps with writing code that is compatible with both python 2.5+ and python 3. It has an iteritems method that will work in both python 2 and 3. Example:
As the dictionary documentation for python 2 and python 3 would tell you, in python 2  returns a list, while  returns a iterator.In python 3,  returns a view, which is pretty much the same as an iterator.If you are using python 2, you may want to user  if you are dealing with large dictionaries and all you want to do is iterate over the items (not necessarily copy them to a list)
Just as @Wessie noted, ,  and  (which return an iterator in Python2.x) as well as ,  and  (which return view objects in Python2.x) were all removed in Python3.xAnd ,  and  used to return a copy of the dictionary's list in Python2.x now return view objects in Python3.x, but they are still not the same as iterator.If you want to return an iterator in Python3.x, use  :
You can not use  instead  in all places in Python. For example, the following code:will break if you use :The same is true for viewitems, which is available in Python 3.Also, since items returns a copy of the dictionaryâ€™s list of  pairs, it is less efficient, unless you want to create a copy anyway.In Python 2, it is best to use  for iteration. The  tool can replace it with  if you ever decide to upgrade to Python 3.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.items
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functions.html#zip
