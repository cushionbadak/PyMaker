Natural Text
I have a list which contains strings representing animal names. I need to sort the list. If I use , it will give the list output with uppercase strings first and then lowercase. But I need the below output.Input:Output:
The  method and the  function take a key argument:The function named in  is called for each value and the return value is used when sorting, without affecting the actual values:To sort  before , you'd have to include a little more info in the key, so that otherwise equal values are sorted in a given order:The more complex key generates  for , and  for ;  is sorted after  and so uppercased words are sorted before their lowercase equivalent.See the Python sorting HOWTO for more information.
New answer for Python 3, I'd like to add two points:Use  for case-insensitive comparisons.Use the method directly instead of inside of a lambda.That is:(which sorts in-place) and now:Or, to return a new list, use Why is this different from  or ? According to the documentation:Casefolding is similar to lowercasing but more aggressive because it is intended to remove all case distinctions in a string. For example, the German lowercase letter  is equivalent to . Since it is already lowercase,  would do nothing to ;  converts it to .
We can use the 'sorted' function according to Python Sorting HOW TO documentation.Output1: 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.casefold
