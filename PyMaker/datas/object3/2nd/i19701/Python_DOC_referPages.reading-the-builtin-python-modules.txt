Natural Text
Possible Duplicate:How do I find the location of Python module sources? I dont understand how to read the code in the builtin python modules. I know how to find out whats in a module for example,But when I try to look for example for the function  I cannot find a  to read what it actually does.
One word: inspect.The inspect module provides several useful functions to help get information about live objects such as modules, classes, methods, functions, tracebacks, frame objects, and code objects. For example, it can help you examine the contents of a class, retrieve the source code of a method, extract and format the argument list for a function, or get all the information you need to display a detailed traceback.It's in the standard library, and the docs have examples. So, you just , or do , etc.Note that some of the standard-library modules are written in C (or are even fake modules built into the interpreter), in which case  returns nothing, but  will at least tell you it's a //whatever, which you can use to look up the original C source in, say, a copy of the Python source code.You can also just type , and the  right at the top gives you the path (generally the same as  for Python modules, the same a  otherwise).And you can always go to the online source for the Python modules and C extension modules. Just change the "2.7" to "3.3", etc., in the URL to get different versions. (I believe if you remove the version entirely, you get the trunk code, currently corresponding to 3.4 pre-alpha, but don't quote me on that.)The  function isn't actually defined directly in ; it's effectively  imported. You can trace it down through a few steps yourself, but it's usually going to be  in  on most platforms. (Even Windowsâ€”recent versions use the same file to define the  module on non-Windows, and the  and  modules on Windows, and there's a bunch of  stuff in the code.)


Answer URL
