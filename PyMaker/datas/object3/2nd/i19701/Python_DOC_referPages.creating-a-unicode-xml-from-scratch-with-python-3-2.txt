Natural Text
So basically, I want to generate an XML with elements generated from data in a python dictionary, where what will come to be tags are the dictionary's keys, and the text the dictionary's values.  I have no need to give attributes to the items, and my desired output would look something like this:I have tried using the xml.etree.ElementTree package, by creating a tree, setting an Element "AllItems" as the root like so:In the last two lines, I have tried omitting the encoding in the open() statement, omitting and changing to 'UTF-8' the encoding in the write() method, and I either get an error that "') is type str is not serializableSo my problem - All I want to know is how should I be going about creating a UTF-8 XML from scratch with the format above, and is there a more robust solution using another package, that will properly allow me to handle UTF-8 characters?  I'm not married to ElementTree for a solution, but I would prefer not to have to create a schema. Thanks in advance for any advice/solutions!
In my opinion, the  is a good choice. If you need a bit more capable package in future, you can switch to the third party  module that uses the same interface.The answer to your problem can be found in the doc http://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.writeThe output is either a string (str) or binary (bytes). This is controlled by the encoding argument. If encoding is "unicode", the output is a string; otherwise, it’s binary. Note that this may conflict with the type of file if it’s an open file object; make sure you do not try to write a string to a binary stream and vice versa.Basically, you are doing it correctly. You  the file in a text mode, this way the file accepts the strings and you neet to use the  argument for the . Otherwise, you could open the file in binary mode (no encoding argument in the ) and use the  in the .A bit cleaned-up code that works on its own:It depends on the purpose. Of the two, I personally prefer the first solution. It clearly says that you write a text file (and the XML is a text file).But the simplest alternative where you do not need to tell the encoding is just to pass the file name to the  like this:It opens the file, writes the content using the given encoding (updated after the Sebastian's comment below), and closes the file. And you can read it easily and you can do no mistake here.
It shouldn't be necessary but you could add xml declaration explicitly if your tool doesn't understand the generated xml file:output.xml:


Answer URL
