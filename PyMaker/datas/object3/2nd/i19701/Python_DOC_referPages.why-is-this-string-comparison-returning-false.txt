Natural Text
Possible Duplicate:String comparison in Python: is vs. == I'm running it from the command line with the argument , so why does that code output:
From the Python documentation: The operators is and is not test for object identity: x is y is true if and only if x and y are the same object.This means it doesn't check if the values are the same, but rather checks if they are in the same memory location. For example:Note the different memory locations:But since  is equal to , the memory locations are the same:When you use the  statement:But if you use the equality operator:Edit: just to be confusing, there is an optimisation (in CPython anyway, I'm not sure if it exists in other implementations) which allows short strings to be compared with :Obviously, this is not something you want to rely on. Use the appropriate statement for the job -  if you want to compare identities, and  if you want to compare values.
You want: checks for object identity (think memory address).But in your case the the objects have the same "value", but are not the same objects.Note that  is weaker than .This means that if  returns True, then  will also return True, but the reverse is not always true.
Basically,  checks object's address (identity), not value,. For value comparison use  operator


Answer URL
