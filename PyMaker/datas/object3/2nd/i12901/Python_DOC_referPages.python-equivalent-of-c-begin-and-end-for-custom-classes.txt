Natural Text
Say you have a dictionary whose keys are integers. The values are also dictionaries whose keys are strings and whose values are numpy arrays.Something like:I've been using this custom data structure quite a lot in the code, and every time I need to iterate over each of the rows in the numpy arrays of this structure, I have to do:Is it possible to encapsulate this behavior in functions Ã  la C++ where you can actually implement custom  and ? Also, the iterator should also have information about the keys in their corresponding dictionaries. I envision something like:
Or, you could reconstitute your data structure into something that is more useful for your purposes:Creating a custom iterator: just needs to return an object that implements a  method, so you can combine those two classes like this:A more complex  method:
There are multiple ways to do this.  may be the simplest as it does the heavy lifting of building an interator class for you.
Look up the iterator protocol - this is more similar to Java's  or C#'s  than C++'s begin/end. You can define it more easily by defining the  method as a generator.The only thing is, you'd need to make your  have its own class with these methods rather than a plain dictionary, but I assume that's also true in C++.
As a more pythonic way you can use a nested list comprehension which performs at C language speed inside the interpreter:And if you want to get an iterator you can use a generator expression instead of list comprehension.


Answer URL
https://docs.python.org/3/library/stdtypes.html#iterator-types
