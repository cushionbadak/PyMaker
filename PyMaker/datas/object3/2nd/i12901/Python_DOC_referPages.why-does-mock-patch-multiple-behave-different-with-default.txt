Natural Text
If  is used as a method/function decorator it's behaviour is different if the patched object is  or not.Example:Is there a reason for this behaviour that I'm not seeing? I can't see a reason why it doesn't pass the new mock into the function in all cases.
The docs say (emphasis is mine):Use  as the value if you want  to create mocks  for you. In this case the created mocks are passed into a decorated  function by keyword, and a dictionary is returned when  patch.multiple() is used as a context manager.So, when you don't use  keyword what you use tho set your patched method isn't passed to the decorated function.Your 's decorator case can be rewrited as:Even when you use  attribute the argument isn't passed to decorated function because it supposed that you already know it and you don't need to get it as argument.General speaking:  can be replaced by a stack of simple  where the path is extend by argument name and use  to set the value:BecomeOr more simple by  positional argument:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.multiple
