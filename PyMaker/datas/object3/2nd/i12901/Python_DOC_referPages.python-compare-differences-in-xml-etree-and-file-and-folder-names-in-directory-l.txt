Natural Text
I'm using Python to compare my flickr photos to my local harddrive photo directories. In order to do this, I'm using OAuth in Python and getting an etree listing of each folder/album I have in flickr. The folder/album contents on flickr 'should' match my local copy directory. I'd like my script to tell me when there are items not in my photo listing on my local drive and flickr (and vice versa). The 'title' field of the flickr photos should be the same as the filename on Linux and directory names on Linux will/should match the album names on flickr. That is currently how I have it set up.I'm wondering what would be the best and most efficient way to compare these item lists in Python (etree node items vs  items)? I'd rather not get into using  in bash to sort any piped output to filenames unless necessary. I'd like to keep everything in Python if possible as I'm just learning it. I could use  and compare that to the  nodes returned to flickr, but what would be the best approach to do this comparison? Keep in mind that the lists may not be the same and may not be sorted when comparing items from flickr and Linux.I have the following snippet of code written to get results from flickr:An example of the output from the above code would be:The API for getPhotos is here: https://www.flickr.com/services/api/flickr.photosets.getPhotos.htm which shows some of the example xtree/XML output.Etree API: https://docs.python.org/2/library/xml.etree.elementtree.html
To check if the file from your flickr exist on your hd:To do it the other way around I'd use a simple , and append the ones that return false to a list, just like above.  Since you asked for efficiency: pop() any files that have been found in the first run from the list, making the second run shorter.Here's some docs on what I did up there: - python3 docs - Python3 Docs(Section 6.10.2) (And the difference between  and  here)
Birds eye view:Create a set (datatype !) of full path names from the XML.Create another set of full path names from your local file system.Use  operations to get the paths missing on either side.


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/reference/expressions.html
