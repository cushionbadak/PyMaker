Natural Text
I understand how to create an unsophisticated class  based on examples culled from the Web but I hit a wall when trying to access the members on it, to wit:Let's say this is my class:To create and object I use:and to create a new attribute for lemon I use:I would like to define a method inside (or outside) of the class that will be called   that will iterate though all the existing members of the class and print all of them with their attributes even if the attributes are variable (more than de ones initially defined). I think this is called "overloading"but I am not sure of the proper terminology.
And if you're not sure then you can use the below loop to find details of all members
The term you are looking for is type introspection.  Overloading is something entirely different, where you provide different implementations of a method.You can access all instance attributes with the  function; it returns a dictionary you can then iterate over to print your variables:
perhaps this is what you're looking for, though the printall method is not a part of the class, it is able to access the class when you pass an object to it and the following code should print the attribute name and value of the object lemon in Fruits class.


Answer URL
https://docs.python.org/3/library/functions.html#vars
