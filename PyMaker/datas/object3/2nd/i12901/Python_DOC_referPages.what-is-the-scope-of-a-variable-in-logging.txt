Natural Text
 simplifies the manipulation of logging records by providing a factory. I use a module of mine, imported in each piece of code, to homogenize the logging:All my scripts bootstrap logging via a This works fine.I now would like to keep track of the number of SMS sent. For this I would like to set a counter within , common to all scripts which . The problem is that such a variable will be local to each script.On the other hand,  is peculiar in the sense that when different scripts call  with the same , the handler is reused - which means that there is some persistence between scripts (even though each of them does an independent ). With this in mind, is there a way to use a variable which would be common to all logging, placed right after the  line, and which would be incremented no matter what script the logging request comes from?
An import such as adds a new reference to  in the local module namespace. For an immutable type such as an integer counter, the addition rebinds the value in the local namespace only - other modules see the value at the point where they imported.One solution is to keep the original namespace so that the rebinding happens in  itself.This is fragile. Its not very obvious that it only works because of the way the import was done.A better solution is to use a mutable type.  is interesting but doesn't let you view the current value of the counter. Here's a simple class that will do it. I've adding locking so that it works in a multithreaded environment also.Add to mylogger.pySome other module


Answer URL
https://docs.python.org/3/library/logging.html#logging.LogRecord.getMessage
