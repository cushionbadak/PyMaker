Natural Text
I'm trying to to sort through a file line by line, comparing the beginning with a string from a list, like so:While the code works just fine, I'm wondering if there's a neater way to check for this condition. I have looked at , but it seems to just give me the possibility to check if any of my lines start with a fixed tag (not eliminating the  loop needed to loop through my list. So, essentially I'm asking this:Is there a better, sleeker option than using a for loop to iterate over my  list to check if the current line starts with one of its elements?As Paradox pointed out in his answer:Using a dictionary to lookup if the string exists has O(1) complexity and actually makes the entire code look a lot cleaner, while being faster than looping through a list. Like so:
Instead of iterating over your tags list, you can put all your tags inside a HashMap and do a simple lookup like myMap.exists("word"). This would be much faster that iterating through your tags list and works in O(1) complexity. In python its actually a dictionary data structure. http://progzoo.net/wiki/Python:Hash_Maps
If you're determined to pull this down into a one-liner, you can use a generator:Of course, how readable this is is a different question.You've probably seen syntax like  before, but by swapping the  for , we instead generate each item only when it's asked for.
This has been asked before. Take a look at this post for more solutions. I would flag this post as a duplicate but I still do not have the reputation. https://stackoverflow.com/a/10477481/5016492You'll need to modify the regular expression so that it looks at the start of the line. Something like this should work for you '^tag' .  
How about a combination off any() and filter() like in this example:
In fact  will do the jobLooping each lineAny list start with any tagFilter tagged lines


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
