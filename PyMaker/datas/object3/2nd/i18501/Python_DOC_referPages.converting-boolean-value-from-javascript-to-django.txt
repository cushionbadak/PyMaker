Natural Text
I noticed that when Boolean data is sent from javascript to Django view, it is passed as "true"/"false" (lowercase) instead of "True"/"False"(uppercase). This causes an unexpected behavior in my application. For example:vote.jsviews.pywhen I save this vote and check my Django admin page, "isUpvote" is ALWAYS set to True whether true or false is passed from javascript. So what is the best way to convert javascript's "true/false" boolean value to Django's "True/False" value??? Thanks!!ADDED:::::Well, I added some 'print' lines to check whether I was doing something wrong in my view:The result:And then when I check my Django admin, it is saved as "True"!!!So I guess this means lowercaes "false" is saved as Django "True" value for some weird reason....
Try this.
probably it could be better to have 'isUpvote' value as string 'true' or 'false' and use json to distinguish its boolean value
I came accross the same issue (true/false by Javascript - True/False needed by Python), but have fixed it using a small function:It might be useful to someone.
I encounter the same problem and I solved the problem with more clear way.Problem:If I send below JSON to server, boolean fields come as test("true", "false") and I must be access to  as . Also I can't make form validation easly.Django request handler:SolutionI get rid of this problems by sending json data as string and converting data to back to json at server side. Django request handler:Now I can made form validation and code is more clean :)
Javascript way of converting to a Boolean is However in your above code you seem to be passing a string instead of the variable hereAre you sure you are doing it correctly ?
Since Django 1.5 dropped support for Python 2.5, django.utils.simplejson is no longer part of Django as you can use Python's built in json instead, which has the same API:
With Python's ternary operator:Also I should mention that if you are working with Django's forms and are trying to pass compatible Boolean value to the  or  class via Ajax, you need to use the precise values Django is expecting.Assuming  on your model:UnknownYes (True)No (False)So for example, the following would deliver Boolean data to Django's form properly:
I usually convert JavaScript Boolean value into number.In python:


Answer URL
https://docs.python.org/3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator
https://docs.python.org/3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator
