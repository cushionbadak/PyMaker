Natural Text
A Python HOMEWORK Assignment asks me to write a function “that takes as input a positive whole number, and prints out a multiplication, table showing all the whole number multiplications up to and including the input number.”(Also using the while loop)I know how to start, but don’t know what to do next. I just need some help with the algorithm. Please DO NOT WRITE THE CORRECT CODE, because I want to learn. Instead tell me the logic and reasoning. Here is my reasoning: The function should multiply all real numbers to the given value(n) times 1 less than n or (n-1)The function should multiply all real numbers to n(including n) times two less than n or (n-2)The function should multiply all real numbers to n(including n) times three less than n or (n-3) and so on... until we reach nWhen the function reaches n, the function should also multiply all real numbers to n(including n) times nThe function should then stop or in the while loop "break"Then the function has to print the resultsSo this is what I have so far:Edit: Here's what I have after all the wonderful answers from everyoneIt's still not completely done! For example:And NOT What am I doing wrong? 
I'm a little mad about the  loop requirement, because  loops are better suited for this in Python. But learning is learning!Let's think. Why do a ? That will never terminate without a break statement, which I think is kind of lame. How about another condition?What about variables? I think you might need two. One for each number you want to multiply. And make sure you add to them in the  loop.I'm happy to add to this answer if you need more help.Your logic is pretty good. But here's a summary of mine:stop the loop when the product of the 2 numbers is .In the mean time, print each number and their product. If the first number isn't n, increment it. Once that's n, start incrementing the second one. (This could be done with if statements, but nested loops would be better.) If they're both n, the  block will break because the condition will be met.As per your comment, here's a little piece of hint-y psuedocode:where should original assignment of i and j go? What is something, something else, and something fun?
This problem is better implemented using nested loops since you have two counters. First figure out the limits (start, end values) for the two counters. Initialize your counters to lower limits at the beginning of the function, and test the upper limits in the while loops.
The first step towards being able to produce a certain output is to recognize the pattern in that output.The number on the right of  should be trivial to determine, since we can calculate it by multiplying the other two numbers on each row; obtaining those is the core of the assignment. Think of the two operands of  as two counters, let's call them  and . We can see that  is counting from  to , but for each ,  is counting from  to  (resulting in a total of 9 rows; more generally there will be n2 rows). Therefore, you might try using nested loops, one to loop  (from  to ) and another to loop  (from  to ) for each . On each iteration of the nested loop, you can print the string containing ,  and  in the desired format.


Answer URL
