Natural Text
My first question is what is the more abstract question for the question: 'what is the operation that returns 6 for the expression  ? Please feel free to retitle my question appropriately.My second question is what is it that is going on in python that returns 6 for . There seems something elegant going on here, and I'd like to read up on this operation.
From the Python language reference:Note that neither  nor  restrict the value and type they return to False and True, but rather return the last evaluated argument.As such,  means it first evaluates , which evaluates to , and then it evaluates  which evaluates to . Therefore it'll return the last evaluated argument, which is  ().
According to the python docsx and y : if x is false, then x, else y
First you have to read this and then you have to read this. :)After that you will know that  is a boolean operator, that tries to convert it's first operand to boolean. So if you read the first thing you will see that  is converted to .The third thing you need to know is that the  operand will return it's first argument if it is converted to  and it's second argument if it evaluates to .So basicallyCan be translated to:And now you understand everything. :) is evaluated to  and then  operator returns the value of it's second argument which is .
Applying lazy evaluation, python return for  a if a evaluates to False and b if a evaluates to True.Hence 2 evaluates to True,  return  which equals 6.
Basically it's same as . How it works?  returns first element if it's considered False (, ,  ...) and return second otherwise
This is to do with how Python evaluates the expression . It returns  if  is , and  if  if .So, in case of , since  is evaluated to , it would return the value , which is .In case of  operation between multiple operands, it returns the 1st non- value, and if all the values are , it returns the last value.Similarly, for  operator, the expression say, , returns the 1st  value. And if all the values are , it returns the last value.


Answer URL
