Natural Text
Here is the question:Given two words with the same number of letters in each, work out how many letters need to be changed to get from the first word to the second. A more complex version of edit distance is commonly used in spelling auto-correct algorithms on phones and word processors to find candidate corrections.The two words should be read from the user with one word per line. For example:this is all I got: How do I do this?
You can try something like: creates a generator that returns tuples consisting of corresponding letters of  and . i.e.:We iterate over these tuples ( gets assigned to each first char and  to each second char) and check if . We add up all the instances for which this condition is satisfied to arrive at out answer.(See  and )
Using difflib:
A functional approach:
If the words are always going to be the same length you can use zip to loop through both lists at once:


Answer URL
