Natural Text
I have a method that sometimes returns a NoneType value. So how can I question a variable that is a NoneType? I need to use if method, for exampleI know that is the wrong way and I hope you understand what I meant.
So how can I question a variable that is a NoneType?Use  operator, like thisWhy this works?Since  is the sole singleton object of  in Python, we can use  operator to check if a variable has  in it or not.Quoting from  docs,The operators  and  test for object identity:  is true if and only if  and  are the same object.  yields the inverse truth value.Since there can be only one instance of ,  would be the preferred way to check .Hear it from the horse's mouthQuoting Python's Coding Style Guidelines - PEP-008 (jointly defined by Guido himself),Comparisons to singletons like  should always be done with  or , never the equality operators.

It can also be done with  as per Alex Hall's answer :  is also intuitive but there is the complication that it requires the line  which isn't needed for types like  and .
As pointed out by Aaron Hill's command:Since you can't subclass  and since  is a singleton,  should not be used to detect  - instead you should do as the accepted answer says, and use  or .Original Answer:The simplest way however, without the extra line in addition to cardamom's answer is probably: So how can I question a variable that is a NoneType? I need to use if methodUsing  does not require an  within the -statement: Additional informationYou can also check for multiple types in one  statement as mentioned in the documentation. Just write the types as a tuple. 
Python 2.7 :or==> True
I hope this example will be helpful for you)So, you can check type of the variable name
Not sure if this answers the question. But I know this took me a while to figure out. I was looping through a website and all of sudden the name of the authors weren't there anymore. So needed a check statement. Author can be any variable in this case, and  can be any type that you are checking for.


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
