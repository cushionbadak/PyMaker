Natural Text
I previously posted a question on Stack Overflow asking how to combine lists made of integer values, while also summing the values at the respective indexes (Summing lists of different lengths in Python beginning at a specified index using a function). I got a good answer from @pault, but now I am wondering if I can use  in a function to add an arbitrary amount of lists.For example, I can have 4 lists (or any amount): I would like to insert lists , , and , into specified indexes within . So I could say, insert list  at ,  at  and  at . The result would be .This is the code I am currently using (credit to @pault):The main points would be adding any number of lists into  at any index while keeping the length of  the same, so for example if I added list  at , the result would be . I think my biggest issue is associating a list with the index I want it to be inserted into, so for example having list  going into  and specifying list  to go into , etc. while keeping the length of list  the same, so maybe there has to be some pairing with ? Something like, ? I really do not know how to go about this. I am using Python 3.4.3. 
If I understand your question correctly, what you effectively need to do is make  into a list of lists.To make the least amount of changes to , iterate over each item of  and each index using , both of which should now be a lists of lists:And using your example lists above:You'll need to add more isinstance() checks for both listb and the list of indexes, to ensure that either both are lists or neither are lists and both of the same length, with shortest one determining the result of the .
I made this function, as requested. But I did not use  because I simply think It would make the code less clear in this use-case. Here, we have clear naming, and the code seems to do what you asked.


Answer URL
https://docs.python.org/3/library/functions.html#zip
