Natural Text
I was wondering that how the implementation mechanism work for tuple, list, or set data types. When I have checked the tuple data type with help() function, I can't see any inherited class from collection.abc module.When I was checking:Both of two lines for list are correct because I know that MutableSequence is also subclass of Sequence abstract class.I'm getting confused because as I mentioned above I couldn't see any inherited class from the collection.abc module within concrete tuple or list implementation. Long story short I try to find an explanation about implementation of abstract base classes for Python data types.
No,  and  do not inherit from any collections abstract base class. Instead, the collections classes customize instance and subclass checks, with the  and  hooks.These hooks are called whenever you use  or  with a class that implements them, and their result is returned:Specifically, the hooks are implemented by the  Abstract Base Class metaclass, which abstracts the process. Your Abstract Base Class only needs to implement the  class method; this is easier to implement, as the  and  special methods must be implemented on a metaclass.The  implementation also includes a registry to add types to an ABC, with the  method. The  and  classes are registered explicitly with the  type, for example:


Answer URL
https://docs.python.org/3/reference/datamodel.html#customizing-instance-and-subclass-checks
https://docs.python.org/3/library/abc.html#abc.ABCMeta
https://docs.python.org/3/library/abc.html#abc.ABCMeta.__subclasshook__
https://docs.python.org/3/library/abc.html#abc.ABCMeta.register
https://docs.python.org/3/library/abc.html#abc.ABCMeta.__subclasshook__
