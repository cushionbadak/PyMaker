Natural Text
OS: debian9.A simple multi-processes program named .Run  and get below output.Get processes info.Check processes tree view.What confused me is the three threads 6148,6149,6150.Does that mean every process contain one process ? Maybe my logical graph is better to express relationships between processes and threads here.1.bash(5615) is the (6145) 's father process.2.(6145)  contains two processes 6146 and 6147 created by .3.Process(6145) contain thread(6148),Process(6146) contain thread(6149),Process(6147) contain thread(6150).It does no matter which exact process id contain which thread id.Is my understanding right?    
You have:3 processes (1 parent process and 2 children to match your  argument)2 threads in each process (1 main thread, and 1 communication and management thread)The extra communication and management thread per process is an implementation detail of the  module; if you are sharing resources between processes more threads may be used. You can see hints that threads are used for these tasks in the documentation For example, under Pipes and Queues:Note: When an object is put on a queue, the object is pickled and a background thread later flushes the pickled data to an underlying pipe.[...]   Returns a process shared queue implemented using a pipe and a few locks/semaphores. When a process first puts an item on the queue a feeder thread is started which transfers objects from a buffer into the pipe.(italic emphasis mine)You don't need to worry about these threads; they are there to implement the multiprocessing functionality and make it all run smoothly.


Answer URL
https://docs.python.org/3/library/multiprocessing.html#pipes-and-queues
