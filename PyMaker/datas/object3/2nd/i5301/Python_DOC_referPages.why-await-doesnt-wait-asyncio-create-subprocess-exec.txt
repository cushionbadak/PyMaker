Natural Text
I'm writing a coroutine to execute shell command in python base on a tutorial. Here are basic:This code above work perfectly. It gives a result like that:When I try remove process.wait():The script doesn't work as expected:But there is no problem in a very similar example:So why await doesn't wait asyncio.create_subprocess_exec() ?The docs (https://docs.python.org/3/library/asyncio-task.html#coroutine) says:result = await future or result = yield from future – suspends the coroutine until the future is done, then returns the future’s result, or raises an exception, which will be propagated. (If the future is cancelled, it will raise a CancelledError exception.) Note that tasks are futures, and everything said about futures also applies to tasks.result = await coroutine or result = yield from coroutine – wait for another coroutine to produce a result (or raise an exception, which will be propagated). The coroutine expression must be a call to another coroutine.return expression – produce a result to the coroutine that is waiting for this one using await or yield from.raise exception – raise an exception in the coroutine that is waiting for this one using await or yield from.What is actually process's flow when coroutine suspending and waiting ?Here are source code of asyncio.create_subprocess_exec() and asyncio.sleep() are coroutine. Both of them are coroutines:
You waited for the process to start. You did not wait for it to finish.  waits for it to finish.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#coroutine
