Natural Text
I know that a quick way of setting an attribute to be private is to use  before an attribute (corrected later as this is actually for name mangling, not for restriction of access), or use @propertyBut, I found that for a python standard library module, for example, datetime, this was set a different way?To explain my question, please go to the source code of datetimeLet's take class  as an example:The class attributes was set outside of the class? why?and if I:I wonder where does this  coming from? I can not find in anywhere in the source code that this error message will be raised?Thanks!
The class attributes was set outside of the class? why? doesn't exist when the body of the  class is being executed. You have to execute all of the code in the  block before the class object is created and can be used on its own.I wonder where does this AttributeError coming from? I can not find in anywhere in the source code that this error message will be raised?The  module is written in pure Python but tries to use a faster module written in C if it can. The pure Python code works as you'd expect:The  class has  set to . You can only set the attributes of objects which include the  flag.
That is not the source code of the date-time module used by the CPython interpreter. The CPython source implements a lot of the standard library in C for performance reasons. They do provide Python-only implementations (which I believe are relied upon by PyPy in many instances, for example). The source code for  is actually here:https://github.com/python/cpython/blob/3.6/Modules/_datetimemodule.cAccess is restricted at the C-level.Note, double-underscore name-mangling does name-mangling, it doesn't restrict access.


Answer URL
https://docs.python.org/3/library/datetime.html#module-datetime
https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_flags
