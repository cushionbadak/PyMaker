Natural Text
Is it possible to run an async while loop independently of another one? Instead of the actual code I isolated the issue I am having in the following example codeIs there a way to have the print function run independently so  gets called each time?What it should do is  each second and every 3 seconds call Essentially self.printer is a separate task that does not need to be called very often, only every  seconds(in this case 3). In JavaScript the solution is to do something like soEDIT: Ideally self.printer would also be able to be canceled / stopped if a condition or stopping function is called
The  equivalent of JavaScript's  would be :
You'd want to register your  coroutine as a separate task; pass it to  rather than await on it directly:By passing the coroutine to , you put it on the list of events that the loop switches between as each awaits on further work to be completed.With that change, your test code outputs:Tasks are the asyncio equivalent of threads in a multithreading scenario.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.ensure_future
