Natural Text
suppose I had something like this:and I wanted to get every combination of files without repeating combinations that have already been done (once cat_dog is done do not do dog_cat again).  Is there a way I could do this?  My real list is in alphabetical order, if that makes any difference.
you can also do it as a generator:After the first loop, the contents of  is:
In reality what you're asking how to do is produce all combinations of two items taken in the list of names (as opposed to all the possible combination of them). That means you can use the built-in  generator function to easily (and efficiently) generate pairs of the names you want with no repeats:Pairs processed:
How about itertools.combinations?Usage example:First argument is an iterable, second is , length of subsequences returned.You can then concatenate the results with ease using map or a comprehension: in the lambda is a -sized tuple. Result of the above would be:

There's itertools that can perform combinations and permutations (you'd want the former). As far as I can tell, you can't really specify the output format, so you'd get "catdog" as output, but the doc page gives you an idea of how the combinations function works, so you can adapt it to build what you need.
An alternative for combination creation, with no module import. Similar to @Nate's answer, but marginally less complex, creating a copy with single items and reducing on the fly (rather than generating a list of pairs and reducing by list search):


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
