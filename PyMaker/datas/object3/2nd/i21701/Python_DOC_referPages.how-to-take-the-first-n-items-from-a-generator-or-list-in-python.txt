Natural Text
This question already has an answer here:How to get the n next values of a generator in a list (python)                    5 answers                With linq I wouldHow to do this with Python?
Slicing a listTo slice a list, there's a simple syntax: You can omit any parameter. These are all valid: , , Slicing a generatorYou can't slice a generator directly in Python.  will wrap an object in a new slicing generator using the syntax Remember, slicing a generator will exhaust it partially. If you want to keep the entire generator intact, perhaps turn it into a tuple or list first, like: 

In my taste, it's also very concise to combine 'zip()' with 'xrange(n)' (or 'range(n)' in Python3), which works nice on generators as well and seems to be more flexible for changes in general.
@Shaikovsky's answer is excellent (â€¦and heavily edited since I posted this answer), but I wanted to clarify a couple of points.This is the most simple approach, but throws  if the generator is prematurely exhausted.On the other hand, the following approaches return up to  items which is arguably preferable in most circumstances:List:Generator:
The answer for how to do this can be found hereNotice that the last call asks for the next 4 when only 2 are remaining.  The use of the  instead of  is what gets the comprehension to terminate on the  exception that is thrown by .
Do you mean the first N items, or the N largest items?If you want the first:This also works for the largest N items, assuming that your sequence is sorted in descending order. (Your LINQ example seems to assume this as well.)If you want the largest, and it isn't sorted, the most obvious solution is to sort it first:For a more performant solution, use a min-heap (thanks Thijs):
With  you will obtain another generator object so in most of the cases you will need another step the take the first N elements (). There are at least two simpler solutions (a little bit less efficient in terms of performance but very handy) to get the elements ready to use from a :Using list comprehension:Otherwise:Where  is the number of elements you want to take (e.g. N=5 for the first five elements).
This should work


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
