Natural Text
I am converting a csh script to a python script. The script calls a memory-intensive executable which requires a very large stack, so the csh script sets the stacksize to unlimited:When I try to reproduce this script in python, I execute them in a very naive manner, using , e.g.:But I do not know how to tell the OS to run these executables with unlimited stacksize. Is there a way to specify stacksize for calls within a python script? Is there some low-level system call that I should be using? And is there a module (similar to shutil) which controls this?
You can just use the (u)limit command of your shell, if you want:Or (probably better) use resource.setrlimit:
I have good experience with the following code. It doesn't require any special user permissions:It does however not seem to work with pypy.
You're looking for the Python setrlimit interface, .Note that standard users cannot raise their hard limits, only root (well, a process with the  capability (see capabilities(7)) processes can raise their limits; so you may need to use the PAM pam_limits(8)  file to raise the hard limits for the users in question.
You can alter the stack size of the current process via , but I don't know if that will be correctly inherited by subprocesses. That interface also requires a specific stack size - "unlimited" isn't an option.


Answer URL
https://docs.python.org/3/library/threading.html
