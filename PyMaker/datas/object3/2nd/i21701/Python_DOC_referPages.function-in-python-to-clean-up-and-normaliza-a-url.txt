Natural Text
I am using URL's as a key so I need them to be consistant and clean. I need a python function that will take a URL and clean it up so that I can do a get from the DB. For example, it will take the following:and output a clean consistant version:I looked through std libs and github and couldn't find anything like thisUpdateI couldn't find a Python library that implements everything discussed here and in the RFC:http://en.wikipedia.org/wiki/URL_normalizationSo I am writing one now. There is a lot more to this than I initially imagined.
Take a look at . I've had good success with it.note: This answer is from 2011 and is specific to Python2. In Python3 the  module has been named to .  The corresponding Python3 documentation for  can be found here:https://docs.python.org/3/library/urllib.parse.html
It's done in scrapy:http://nullege.com/codes/search/scrapy.utils.url.canonicalize_urlCanonicalize the given url by applying the following procedures:sort query arguments, first by key, then by valuepercent encode paths and query arguments. non-ASCII characters are   percent-encoded using UTF-8 (RFC-3986)normalize all spaces (in query arguments) '+' (plus symbol)normalize percent encodings case (%2f -> %2F)remove query arguments with blank values (unless keep_blank_values is True)remove fragments (unless keep_fragments is True)
Have you considered using regular xpressions? They will help you check for malformed URLs. I have used this in one of my applications"^[, .a-zA-Z0-9]*$"


Answer URL
https://docs.python.org/3/library/urllib.parse.html
