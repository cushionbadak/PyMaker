Natural Text
In the perl debugger, if you repeatedly list segments of code taking you away from the current line, you can return to the current line by entering the command  (dot).   I have not been able to find anything comparable using the python PDB module.  If I list myself away from the current line and want to view it again, it seems I have to either remember the line number that was currently executing (unlikely for me) or execute a statement (often undesirable).  Am I missing something?
Late but hopefully still helpful. Make the following alias: Then whenever you type , pdb will list from the current position. It works by going up the stack and then down the stack, which resets 'l' to show from the current position. (This won't work if you are at the top of the stack trace.)Tip: Permanent aliasTo make the alias permanent, add the line into your -file in the user home directory (). This works with both pdb and ipdb.
In Python 3.2 and higher, you can use  to reset the list location.Source: Python Bug tracker #4179
Well, I don't think there's a command similar to  in perl debugger, but you can always find the current line using the  /  command. That will show you both the current (contextual) frame as well as the most recent frame, which I believe is where the debugger was triggered.
This question is 7 years old now..If thereâ€™s anyone who are curious about this problem, just use the dot This now works.
Maybe you should try out  or , a wrapper for . gives you numbered lines, colorized syntax, tab completion and more.


Answer URL
https://docs.python.org/3/library/pdb.html#debugger-commands
