Natural Text
I have just started to learn python and would like help using string.replace(x,y).Specifically, replacing all to X's and x's depending whether the letter was originally capitalized or not.e.g.John S. Smith -> Xxxx X. XxxxxWhat I have created currently is below.However when I input text like "John Smith". I am returned with "xJxoxhxnx xSx.x xSxmxixtxhx".Thank you in advance!Edit: Although string.replace(x,y) may be longer to perform, I'd like to slowly build on my knowledge before finding faster and shorter ways to perform the same operation. I'd highly appreciate it if it was explained in terms of string.replace(x, y) instead of re.subEdit2: I have been notified that string.replace is the wrong tool to use. Thank you for your help! I will be reading into re.sub instead.
If you insist on using  even though it's the wrong tool for the job (because it can only replace one letter at a time and has to go through the whole string every time), here's a way:And a somewhat neat more efficient way:And a regex way:
Use re.sub to replace individual character of string or iterate through the string.
Not the correct usecase for string replace.There are 2 things that you can do:Loop through the string and perform the operationUse re.sub to replace using regex. (How to input a regex in string.replace?)
Plain way:One liner:

You can use the  module, and provide  with a callback function to achieve this.Has the output:As a matter of style, I've not condensed any of this into lambdas or one-liners, although you probably could.This will be significantly faster than just repeated concatenation.
** edit fixed code **Try this instead, it is a bit of a simple and easily breakable example but this is what you would need to achieve what you want:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.replace
