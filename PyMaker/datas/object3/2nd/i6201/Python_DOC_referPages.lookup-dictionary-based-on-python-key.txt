Natural Text
I have a list of dictionaries in the format:Is there a way I can look up a dictionary based on its key? For something I want to do something like (pseudocode):The reason why I am not doing  is because the list elements are not always in that order. Can someone help?Thanks in advance!
Collapse your dictionary.Now, just lookup in constant,  time.By keeping multiple disjoint s in the same list, you're defeating their purpose in the first place. If you have multiple possible values with the same keys, use a  of s.Supports multiple values with the same key without overwriting entries, as the previous one would've done.
The pseudocode you provided is impossible unless you subclass (or monkey patch)  (otherwise you'd get an error that list indices must be integers and not strings).However you could write a function such asIt will find and return the first dictionary that contains the given key, and can be easily modified to return a list of dictionaries if the keys are not unique.Butit looks like you are using dictionaries wrong. Why do you have a list of dictionaries, each having (apparently) unique keys, and not a single dictionary?
If you want just one match:Second one uses generator, so it just finds first match and then stops.
Using  , find all  in the  that contain that  :NOTE TO OP : as others have pointed out, its ofcourse quite redundant to have a list of dictionaries; unless you have dictionaries with duplicate keys.


Answer URL
https://docs.python.org/3/library/collections.html#collections.ChainMap
