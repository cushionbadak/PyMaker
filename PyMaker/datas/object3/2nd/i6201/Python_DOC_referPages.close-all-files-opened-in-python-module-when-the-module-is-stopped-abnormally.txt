Natural Text
In my module, one block is coded like this:When running the module, I may interrupt the module in  by  for program debugging or exceptions may be raised in , so the module is stopped abnormally. However, If I try to delete  in Windows Explorer at the time, the message says:I think if the module is stopped abnormally, the file is still opening, am I right? How can I close all those open file identifiers in  or by other ways?
Use a  statement to ensure all files are closed even if an exception occurs:No need to close the file - it will be closed automatically as soon as your program exits from the  block.
As a last resort, I believe a file can always be closed from the prompt in the Python shell window:-file_name.close()That's worked for me whenever a program has aborted execution due to an exception. But it would be very useful if there was a 'catch-all' close method that closed all open files.


Answer URL
