Natural Text
I am using pymysql client library to connect to the real database. I have a  function in module, where I connect to the database using pymysql and do only database insert operations.How to unit test this function in python without hitting the real database?My python version is 2.7.
You can use , like this:
You need a series of fake databases, called stubs, which return hardcoded values. During the test these stubs are used instead of the real database. I am not familiar with Python, but one way to do this in C++ is to make your object to receive the database as a constructor parameter. In production code you use a real database parameter, in the test the stub. This can be done because the constructor expects a pointer to a common base class. Even it is not written for Python I suggest to read the first chapters from Roy Osherove: The art of unit testing. The book clearly explains why these fake databases are stubs and not mocks.
You've just rediscovered one of the most compelling reasons why testing is important: it tells you when you're design is bad.To put it slightly differently, testability is a good first-order proxy for quality. Consider the following:If you work with multiple databases you could use polymorphism or depending on API similarity make the specific DB be a constructor parameter to your object.


Answer URL
