Natural Text
I have looked up online regarding python's floating point arithmetic limitation and seems like the easiest way to solve the problem is to use decimal module. For instance, I tried the below code and it gave me the perfect 0.8 answer.However, when I try to incorporate this method into an arithmetic that involves list, the method failed. This gives me an "InvalidOperation" error. Then I tried This compiles but gives me Decimal('0.7999999999999998223643160600') instead of 0.8So can anyone please tell me how to solve such a problem? (either use Decimal or any other methods).Thanks in advance!
Pass in a string argument to Decimal to get the expected behavior.  In your example, you're passing the floating point number  instead of the string This returns:
The reason  is specified with '4' in string form is because when an instance of the  class in Python is instantiated with a string it is required to "conform to the decimal numeric string syntax." A string like  doesn't represent a number, and a malformed string is expected to raise an  exception.Something like  isn't technically floating point but will get you an exact answer. Floating point is a bit more complicated than arithmetic as is commonly understood with decimal points, and won't be perfectly precise.It may help to take a look at the documentation for the  class here (https://docs.python.org/3.6/library/decimal.html), and this write-up about floating point operations here (https://docs.python.org/3/tutorial/floatingpoint.html).


Answer URL
https://docs.python.org/3/tutorial/floatingpoint.html
