Natural Text
I have the following text file:each key pair is how many times each string appears in a document [docID]:[stringFq]How could you calculate the number of key pairs in this text file? 
Your regex approach works fine.  Here is an iterative approach.  If you uncomment the print statements you will uncover some itermediate results.GivenCodeDetailsFirst we use a  statement, which an idiom for safely opening and closing files.  We then split the file into lines via .  We define a conditional function (or predicate) that we will use later.  The lambda expression is used for convenience and is equivalent to the following function:We initialize a  variable and start iterating each line.  Every line may have a trailing newline character , so we first  them away before feeding the line to .   is a special itertools iterator.  As it iterates a line, it will discard any leading characters that satisfy the predicate until it reaches the first character that fails the predicate.  In other words, all letters at the start will be dropped until the first non-letter is found (which happens to be a space).  We clean the new line again, stripping the leading space, and the remaining string is  into a list of .  Finally the length of each line of pairs is incrementally added to .  The final count is the sum of all lengths of . SummaryThe code above shows how to tackle basic file handling with simple, iterative steps:open the filesplit the file into lineswhile iterating each line, clean and process dataoutput a result



Answer URL
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
