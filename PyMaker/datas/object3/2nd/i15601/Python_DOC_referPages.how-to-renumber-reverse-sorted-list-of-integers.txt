Natural Text
I have a list of numbers like this:It is sorted in descending order and has many numbers.I want to represent it like, the greater the number in the list, I want to give it the smallest value and so on. Like 687 becomes 0, then 683 becomes 1, then 677 becomes 2 and so on.Is there a way to do this?EDIT:Actually, I want to represent the new_list as  such that highest element gets 0, then the next element is the difference of the two numbers in the original list + the previous number in the new_list, like we get 4 by doing  and so on. How to do that?
And we get Output as:
Create a  out of the list, replace the keys of the sorted result, and turn that back into a list:This doesn’t require the original list to be sorted, either. It makes for a compact function:On second thought, though, the straightforward way isn’t bad. It’s also a bit more efficient.That one works on any list. Since you have a sorted list, though, there’s a very nice O(n):To skip numbers as described, you could do this:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
