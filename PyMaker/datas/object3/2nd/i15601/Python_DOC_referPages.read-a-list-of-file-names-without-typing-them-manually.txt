Natural Text
I have a python code inside which the name of file is received with input commandfileName = input("please enter the file name")My purpose is to write a script to run this file. But I do not want to sit there and input each file name manually. Is it possible to give the fileName as a command line argument or so while running.Edit: More explanation: I am given python codes with the above line inside, which I should run on some sample input. I do not want to change the file or sample input only want to run the file on the input automatically. The reason is that there are many files to be checked and many sample inputs.
You have a few options, really.Redirect stdin to a fileOne you might not have considered is leaving your program the way it is, creating a text file with a list of file names, and then redirecting the standard input to the file. Let's name the file . The file would just be a list:Or on Windows:Then you would call your program like so:Here, the  character tells the operating system to use the contents of  instead of waiting for you to type. This does assume that your program loops and continues to prompt for multiple files.If it only accepts one file at a time, then you might consider...Using a scriptYou can write a script that calls your program a bunch of times separately, each time with a different file name. A bash script on Linux might look like this:Or a batch file on Windows:Here, we execute the command  to make the system "print" out some text, and then we use the  (pipe) to tell the system to use 's output as the other program's input (instead of printing the text to the screen).List file argumentAnother option is to create an argument to your program that accepts a single file path, and then use the contents of that file as a list of files to process. This requires modifying your program.A quick and dirty way of doing that in code:Then you'd call it like this:Look into , , or similar to make this cleaner.Argument listYou could just list all the files as part of the original command. Your code would look something like this:(Note that  is what's called a "slice". Look that up if you're unfamiliar with them.)Then you would call it like this:I don't especially like this option for your case because your question suggests you have a fairly large list of files. Typing the command would be tedious and error prone. You also wouldn't have the list saved anywhere if the computer crashed or something. But it'd be fine for just a few files.OtherThere are lots of ways to do things like this. These are just a few fairly simple options. The best one will depend on your exact usage.
Or something like that
You can use argparse. for exampletest.pyThen from command line:
If you want to take a filename, or 1 or more filenames, as command-line arguments, you can do this manually using :… or by using , as shown in Marcin's answer—a bit more work, but a lot more flexible.But if the only thing you're doing with these files is opening them and reading from them line by line, it may be simpler to use . For example:By default,  looks at  and opens each specified file one by one, or reads from stdin if no files are specified. So, when that's pretty much what you want to do, it can simplify your code quite a bit.


Answer URL
https://docs.python.org/3/library/argparse.html
https://docs.python.org/3/library/sys.html#sys.argv
https://docs.python.org/3/library/fileinput.html
https://docs.python.org/3/library/sys.html#sys.argv
https://docs.python.org/3/library/fileinput.html
https://docs.python.org/3/library/argparse.html
