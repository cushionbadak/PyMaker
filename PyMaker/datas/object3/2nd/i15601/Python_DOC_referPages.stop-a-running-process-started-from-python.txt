Natural Text
I have a ROS code  that basically starts once and keeps running until  is pressed.Now, I would like to automate this command from Python. I checked Calling an external command in Python but it only shows how to start the command.How would I start and stop running this process as and when I want?
How would I start and stop running this process as and when I want?Well, you already know how to start it, as you said in the previous sentence.How do you stop it? If you want to stop it exactly like a Ctrl-C,* you do that by calling  on it, using  on Windows, or  on Unix.** So:If you only care about Linux (or *nix in general), you can make this even simpler:  is guaranteed to do the same thing as . So:Since you asked in a comment "Could you please explain the various parameters to ": Well, there are a whole lot of them (see  Constructor and Frequently Used Arguments in the docs, but I'm only using one, the  parameter.Normally, you pass a list to , with the name of the program as the first element in the list, and each separate command-line argument as a separate element. But if you want to use the shell, you pass a string for , and add a  as another argument.* Note that "exactly like a Ctrl-C" may not actually be what you want on Windows, unless the program has a console and is a process group owner. This may mean you'll need to add  to the  call. Or it may not—e.g.., if you use .** In Python, you can usually ignore the platform differences between  and  and always use the latter, but  is one of the few places you can't. On Windows,  will call  instead of sending a Ctrl-C. If you don't actually care exactly how the process gets stopped, just that it gets stopped somehow, then of course you can use … but in that case, you might as well just call .


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.send_signal
https://docs.python.org/3/library/signal.html#signal.CTRL_C_EVENT
https://docs.python.org/3/library/subprocess.html#subprocess.Popen.terminate
https://docs.python.org/3/library/subprocess.html#popen-constructor
https://docs.python.org/3/library/subprocess.html#frequently-used-arguments
https://docs.python.org/3/library/subprocess.html#subprocess.CREATE_NEW_PROCESS_GROUP
