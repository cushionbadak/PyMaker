Natural Text
I'm in a slightly tricky situation with a list subclass.The list class I'm using has overridden  and  in order to return something slightly different from what's actually stored internally (this is because this requires processing time which was wanted to be only done when the item is first directly accessed)My issue comes up in the following use case. Let's say, for the use of this example, that the overridden methods turn the internal values into strings.So what I'm after here is how the values are pulled from  when  is run, so that I can ensure that  has had the relevant modifications made.Incidentally, I'm well aware that I could get this working if I overrode  and then did , but this is in a module that is used elsewhere, and I'd rather ensure that it works the right way in both directions.Thanks
To ensure if works in both directions you should define both override both  and  in your  class. Quoting from data model page(7th bullet point)*:Exception to the previous item: if the left operand is an instance of  a built-in type or a new-style class, and the right operand is an  instance of a proper subclass of that type or class and overrides the  base’s  method, the right operand’s  method is tried  before the left operand’s  method.So, your code will look like:*Note that the proper subclass thing mentioned in Python 2 docs is actually a documentation bug and they fixed it in Python 3:If the right operand’s type is a subclass of the left operand’s type  and that subclass provides the reflected method for the operation,  this method will be called before the left operand’s non-reflected  method. This behavior allows subclasses to override their ancestors’  operations.
You can simply pass the result of list addition as in the constructor of MyList, like:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__ror__
