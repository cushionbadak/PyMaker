Natural Text
If I want to convert the string in  to lowercase, I can use the method in  and the output will be .  In addition to this conversion, if I want to keep integers (which is  in this case) and , the methods in both  and  will work and the output will be .  My question is that I can't understand how the method in  works.
To start, writing code like this:was how people implemented a ternary conditional operator in Python before the:conditional expression was introduced in version 2.5 because of PEP 0308.  Using the old method is now deprecated in favor of the slightly more efficient and far more readable newer method.The old method works because of how  and  operate in Python.  Instead of returning boolean results like in most other languages, these operators return values.Doing  returns  if  evaluates to ; otherwise, it returns :Doing  returns  if  evaluates to ; otherwise, it returns :Also, in case you do not know,  evaluates to  while every other number evaluates to .Coming to your code, this:is actually interpreted by Python like:Now if  returns  ( is not a string): is returned by :and then  returns .  Thus, we avoided calling  on a non-string type.If however  returns  ( is a string): returns :and then  returns , which is fine because  is a string.Summed up, these two expressions:are functionally equivalent.  But please use the first!!  The other is terrible for readability.
Quoting the doc:The expression  first evaluates ; if  is false, its  value is returned; otherwise,  is evaluated and the resulting value  is returned.The expression  first evaluates ; if  is true, its value is  returned; otherwise,  is evaluated and the resulting value is  returned.Because of precedence rules,  is actually evaluated as  (multiplication is of higher precedence than addition).That basically means the following:if  is true, result of  will be takenotherwise  will be takenAs you see, it's the same thing that you have in  operation.


Answer URL
https://docs.python.org/3/reference/expressions.html#conditional-expressions
