Natural Text
I have two sets:And I would like to get two new sets with non common elements, first set containing elements from  and second from , like , or like:My problem is that I'm going to use this on large number of sha1 hashes and I'm worried about performance. What is proper way of doing this efficiently?Note:  and  are going to have around 95% of elements common, 1% will be in  and 4% in .
Methods I've mentioned in the question has following performance:So most effective way seems to be using  method.I'm posting this as a reference so other answers would add new methods, not compare the ones I've found.Python implemented functionJust out of curiosity I've tried implementing own python function to do this (that works on pre-sorted iterators):Compared to other methods, this one has quite low performance:So unless some other method is implemented somewhere (some library for working with sets) I think using two sets difference is the most efficient way of doing this.


Answer URL
https://docs.python.org/3/library/dis.html#dis.dis
