Natural Text
I have a multi-threaded SMTP server. Each thread takes care of one client. I need to set a timeout value of 10 seconds on each server thread to terminate dormant or misbehaving clients.I have used the , to find the start time and my checkpoint time and the difference gives the running time. But I believe it gives the system time and not the time this thread was running.Is there a Thread local timer API in Python ?  This prints 0 (initial stop) in a loop and does not come out of the while loop.
In the python documentation there is no mention of "thread timing". Either the clocks are process-wide or system-wide. In particular  measures process time while  returns the system time.In python3.3 the timings API was revised and improved but still, I can't see any timer that would return the process time taken by a single thread.Also note that even if possible it's not at all easy to write such a timer.Timers are OS specific, so you would have to write a different version of the module for every OS. If you want to profile a specific action, just launch it without threads.When threaded the timing either it runs as expected, or it is a lot slower because of the OS, in which case you can't do nothing about it(at least, if you don't want to write a patch that "fixes" the GIL or removes it safely).
The hello function's stop value is local, not the global one.Add the following:
Python has progressed in the 6 years since this question was asked, and in version 3.3 it's introduced a tool for exactly what was being asked for here:Python 3.7 additionally introduced an analogous .Detailed docs are exactly where you'd expect but the feature is pretty straightforward straight out of the box.
I am posting a sample code which can measure the running time of the thread, you can modify the code, so as to use with your function.On my system, it gave a time of 8.34 seconds.


Answer URL
https://docs.python.org/3/library/time.html
