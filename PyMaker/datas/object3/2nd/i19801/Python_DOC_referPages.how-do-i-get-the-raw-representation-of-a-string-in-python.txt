Natural Text
I am making a class that relies heavily on regular expressions.Let's say my class looks like this:And let's say I use it like this:If I do , I get , but I want . Take into account the extra backslash where that upon printing, it appears correctly. I suppose I could implement it to return , but that doesn't sit well with me. In the unlikely event that the Python Software Foundation someday changes the manner for specifying raw string literals, my code won't reflect that. That's hypothetical, though. My main concern is whether or not this always works. I can't think of an edge case off the top of my head, though. Is there a more formal way of doing this?EDIT: Nothing seems to appear in the Format Specification Mini-Language, the -style String Formatting guide, or the  module.
The problem with rawstring representation is, that you cannot represent everything in a portable (i.e. without using control characters) manner. For example, if you had a linebreak in your string, you had to literally break the string to the next line, because it cannot be represented as rawstring.That said, the actual way to get rawstring representation is what you already gave:The definition of rawstrings is that there are no rules applied except that they end at the quotation character they start with and that you can escape said quotation character using a backslash. Thus, for example, you cannot store the equivalent of a string like  in raw string representation ( yields SyntaxError and  yields ).If you really want to do this, you should use a wrapper like:Tests:


Answer URL
