Natural Text
Given:The result I want is:    trialdata[0]['offset'] # which will operate as a dictionary lookup when calledMy code:returns:-6 is the right value, but how do I code call_key_line so it acts as a dictionary look up?  Right now printing call_key_line just prints out a string.  I suspect that's because the 0 in call_key_line is a string, not an integer.  But if I try to change it with I get TypeError: 'str' object does not support item assignment  Is there any way to compose the dictionary lookup within the program (rather than hard coding)?  I have several keys and dicts and I want to loop through them and collect their values.
The answer is not to generate code as strings.Abstract the operations you want to perform and encapsulate them in functions.  For example, to get the "offset":Then you can call this with each of your dictionaries:Or if you want to do the same operation on each key:You may want to consider using classes instead of dictionaries so you can encapsulate the operations you will perform on each.
based on your pastbin comment:What are you doing with ?  It seems extraneous.  Is it possible one of , , or  is a string and not a dictionary?  It looks like they may be all strings?  Have you tried removing the quotes surrounding their definitions?Line 47 is also suspicious (may be copy-paste error):
Thanks again to all who commented.  The answer I found was the .get() method.  I was directed to it via a Reddit forum (https://www.reddit.com/r/learnpython/comments/3l2sgq/how_do_i_programatically_compose_a_dictionary_key/)I was going down the path that I needed to retrieve the value from the dict and then examine the result, and insert a replacement value if I didn't find that particular key. Using dict.get(key, default_value) accomplishes exactly what I was trying to do - insert a default value when a given key is not found.


Answer URL
https://docs.python.org/3/tutorial/classes.html
