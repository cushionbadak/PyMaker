Natural Text
I am asking this just to clarify if i am thinking right.Statically/Dynamically typed A language is statically typed if the type of a variable is known at compile time. This in practice means that you as the programmer must specify what type each variable is. Example: Java, C, C++.A language is dynamically typed if the type of a variable is interpreted at runtime. This means that you as a programmer can write a little quicker because you do not have to specify type everytime. Example: PerlStatic/Dynamic Binding-which the following link clearly explains the differenceStatic Binding and Dynamic BindingThe main thing that i want to ask starts from here.I know the difference between Static Scoping and Dynamic Scoping.However as i was going through stack overflow people said that C++ and Python are Statically Scoped.In c++ if i typeIt works(even in java).However its python equivalentGives an error.
The scope is static in Python as well as in C++. The difference between those languages is related to rules that define start and end of the scope of names.In C++ the variable  is considered as global before the local definition .In Python:What are the rules for local and global variables in Python?:If a variable is assigned a value anywhere within the function’s body,  it’s assumed to be a local unless explicitly declared as global.Naming and binding:When a name is used in a code block, it is resolved using the nearest  enclosing scope.So, since the variable  is assined inside  it is assumed to be a local variable starting from the beginning of the function .It is possible to treat  within entire function block as global using the  keyword:Actually it is possible to access the global variable  even if you want to have a local name  in the same function using  build-it function:


Answer URL
https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python
