Natural Text
I'm trying to make a bunch of requests (~1000) using Asyncio and the aiohttp library, but I am running into a problem that I can't find much info on.When I run this code with 10 urls, it runs just fine. When I run it with 100+ urls, it breaks and gives me  error.The stack trace can be found here.Any help or insight would be greatly appreciated as I've been banging my head over this for  a few hours now. Obviously this would suggest that an event loop has been closed that should still be open, but I don't see how that is possible.
You're right, loop.getaddrinfo uses a  to run  in a thread.You're using asyncio.wait_for with a timeout, which means  will raise a  after 4 seconds. Then the  coroutines return  and the loop stops. If a job finishes after that, it will try to schedule a callback in the event loop and raises an exception since it is already closed.
The bug is filed as https://github.com/python/asyncio/issues/258 Stay tuned.As quick workaround I suggest using custom executor, e.g.Before finishing your program please do


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.getaddrinfo
https://docs.python.org/3/library/asyncio-task.html?highlight=wait_for#asyncio.wait_for
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.run_in_executor
