Natural Text
I'm doing an unit test on a file and I'm having trouble to mock an attribute or function call () in my class B. I have two classes A and B and B inherit from A.and in another module:I want to mock  to not be called. I tried to used  but it didn't work. I also tried  but if I  in  while testing I get an logging object not a mock object.
Your attribute is set when creating an instance. Just patch  or even .If you patch the  call, you don't have to patch any other  calls either, as the resulting mock will take care of any attributes on it:With the mock in place, using  returns a new mock object (the  object), and any attempt to access  then returns the  object, which logs calls testable with the  method.Demo:
The real issue is that you want to patch just  logger and not logger. To do it you should useThe funny thing is that  return a global object a so this method work even if  object is created before the patch context:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.return_value
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_called_with
