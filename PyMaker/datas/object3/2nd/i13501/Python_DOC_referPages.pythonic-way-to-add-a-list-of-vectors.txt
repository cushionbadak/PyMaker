Natural Text
I am trying to create a method (sum) that takes a variable number of vectors and adds them in. For educational purposes, I have written my own  class, and the underlying data is stored in an instance variable named data.My code for the  sum works (for each of the vectors passed in, loop through each element in the data variable and add it to a result list), but it seems non-Pythonic, and wondering if there is a better way?
 may come very handy in your situation:And here you got what you wanted:What it does is simply zips up your lists together, by filling empty value with . e.g.  would be . Then just sums up all the values in each tuple element of the intermediate list.So here you go step by step:So if you run a list comprehension, summing up all sub-elements, you get your result.
Another thing that you could do (and that might be more "pythonic") would be to implement the  magic method, so you can use  and  directly on vectors.Here, I also implemented addition of  and , adding the number on each of the Vector's data elements, and the "reverse addition" , to make  work properly.Example:
Is this what you want?


Answer URL
https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types
