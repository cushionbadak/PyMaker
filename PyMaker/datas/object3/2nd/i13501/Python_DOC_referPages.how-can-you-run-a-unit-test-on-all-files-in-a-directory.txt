Natural Text
I am a TA for an intro CS class learning Python and I was wondering if there is a way to run one unit test file on multiple .py files in a folder.For example, if I make Homework1UnitTest.py and I want it to run on all .py files in the folder C:/Users/Lien/Desktop/StudentSubmissionsHW1, how would I do that? The StudentSubmissionsHW1 is populated with .py files like:jsmithhw1.pybjoneshw1.pysscotthw1.py and so on. Also, as I was learning about unit tests, I read about passing verbosity arguments to the unittest call. Is there something similar to this where I can see ALL of the tests that failed?For example, if I have something like:can I set up my results to show ALL the assertEqual() functions that failed instead of just the first one?Thanks!
Yes, the  feature was designed with just this use case:By default, it will only run on files that match the pattern , but if you want it to run on every .py file, you can do instead:As to your second question, the first assert that fails will stop the other tests within the function from even being run; if you need more granularity, you are better off creating a separate test function for each assert as described here Update: Re-reading your question, it sounds like you have a single unittest file, but want to run those unittests on multiple files.  How to do this would depend what running it on a file entails for your particular use case.  However, if you mean those files have some input that you want as additional "argument" to each of your test cases, one way would be to nest each of your tests in a forloop that loops through all the files in the directory.  Another thing I've done before is to setup a decorator that will automatically setup this forloop for you on all decorated methods, e.g. something like:And then you could use it like this:


Answer URL
https://docs.python.org/3/reference/import.html
