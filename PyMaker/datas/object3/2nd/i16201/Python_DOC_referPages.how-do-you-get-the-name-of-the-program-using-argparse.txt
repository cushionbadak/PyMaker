Natural Text
I am using  to parse command line arguments. While going through the documentation for  I could only see a provision to use a different program name. I want to be able to use the default program name without having to import . There is nothing in , as far as I can see, that will return the program name.And here's the output:Is there any other way of retrieving the program name without having to import the  module?
instances have aattribute which I think is what you want.I discovered this by reading the module's source code in â€”specifically looking at the  definition. Since the attribute's name doesn't start with an underscore character, I assume it's public.UpdateI see that, nowadays at least, that the  attribute of  instance is (or has been since this question was asked) documented in both Python 2's documentation and Python 3's documentation. So, yes, it's definitely public, and in both versions, if it is not supplied as a keyword argument when creating the , it defaults to  (where  and  are private  module attributes that correspond to their non-underscore-prefixed counterparts. Note that because of the use of , this will only be the script's filename, not the complete path to it that may (it's OS dependent) have been in .
Of course the correct way would be:But let's assume for a moment you have a good reason that prevents you to  but allows you to .martineau has done a wonderful job discovering , let's try it:As noted by hpaulj, this only has the filename and not the full path like  because the module  is using .But  must use , so it needs to be accessible in  namespace. Let's check it:Here it is! Let's try to use :You are using ! Of course, but I haven't imported it, only , that was the question!Of course this has a number of contraindications:You should not use variables prefixed by  or  of other namespaces, they are used internally.You should not rely on imports of other modules, they may change.You should not rely on undocumented api, they may change.tl;drThis was fun, but just stick to  until  releases an api to access .
 from inside  help textsThis is a common use case when you want to give an example of how to use the command within the help itself.main.pyThen:gives:One advantage over  is that the message stays unchanged no matter where you call it from:Documented at: https://docs.python.org/3/library/argparse.html#progNote that the program name, whether determined from  or from the  argument, is available to help messages using the  format specifier.Tested on Python 3.5.2.


Answer URL
https://docs.python.org/3/library/argparse.html#module-argparse
https://docs.python.org/3/library/argparse.html#argumentparser-objects
https://docs.python.org/3/library/argparse.html#prog
