Natural Text
I know that an AsyncIO WSGI plugin is still in the process of being created (http://uwsgi-docs.readthedocs.org/en/latest/asyncio.html). I was just thinking through the viability of using it in an existing web project. It seems like the number one problem is where to manage the event loop. Are WSGI requests all done on a single thread or are they their own threads? I suppose one way to use it is if a single request has multiple tasks that could be performed in a non blocking manner, that might be useful. For instance if a request needed to go out and retrieve more than one file from another place on the web. You could create an event loop within the request just to perform the collection non-blocking operations more efficiently.Is that about the only way to really utilize AsyncIO in an existing web project at the moment?
You can "transform" a blocking task into a non-blocking one like this for example:I suggest this:https://docs.python.org/3/library/asyncio-eventloop.html#executorI have a fonction that listens to a twitter feed , function "mention", and i run it in an executor,


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#executor
