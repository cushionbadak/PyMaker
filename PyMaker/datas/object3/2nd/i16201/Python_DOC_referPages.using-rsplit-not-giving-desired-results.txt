Natural Text
I want to manipulate a string using .rsplit() so that anything after the last comma in a string of data is split using commas. As an example:...should be changed to:In order to this I am using the code:Rather than producing data in the desired format, I am instead getting this:This only seems to be happening if all three digits after the last comma are zeros. Other examples that seem to have worked ok are:Can anyone explain why this is?Thanks
1) What do the values in the square brackets do?See Lists in the tutorial for a full explanation, but briefly:A simple value in the square brackets is an index. If you have a list , then  is ,  is , and so on.A pair of values separated by a colon is a slice: it gives you not a single value from the list, but a smaller list consisting of all of the values. So,  is .You can leave off the start or end of a slice, so  is .You can use negative numbers for both indices and slices, meaning to count from the end, so  is ,  is  and  is .So, when you do this:If you look up , you can see that  returns a list of 2 strings—everything up to the last comma, and everything after the last comma—unless there were no commas, in which case it returns a list of 1 string—the whole of .The  means that you want everything from the second element on. So, if there was a comma, you get a list of 1 string—everything after the last comma; if there was no comma, you get an empty list.Let's step through your edited code piece by piece.Notice that two of these steps do absolutely nothing, while one of them raises an exception, and I'm not sure what they were intended to do. And the final result (removing the part that raises an exception) doesn't demonstrate what you claimed you were trying to fix. So your question is completely unanswerable.At any rate, if you don't understand how your code breaks down into these steps, you shouldn't be writing dense code. Write things as exactly one simple expression per line, make sure you understand exactly what each one is doing (e.g., by printing out the results, as I did), and get all of them working. After that, you can try to make it more concise again.
I think what you are trying to do is something like this:The verbose variable names should help you identify what's going on on each line,Hope it helps!


Answer URL
https://docs.python.org/3/tutorial/introduction.html#lists
https://docs.python.org/3/library/stdtypes.html#str.rsplit
