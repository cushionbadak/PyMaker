Natural Text
I want to use Python's built-in min() and max() functions on a collection of my  objects. However, I want the  attribute to be the compared value. How can I specify this in the class definition?
You can use a key function:The  function produces a callable that returns the named attribute for each object passed to it. You could achieve the same with a  callable:Alternatively, you can add special methods to the class to define how they should be compared; the  method defines how two instances are equal, and methods like  and friends are used when comparing two instances to see how they order.  will then make use of these methods to find a 'largest' item, without a  function.With the  decorator you only have to implement two of those;  and one of the comparison methods:For  objects this should probably be thought out more; what happens if distance is not equal but x and y are, for example?
When using  and  without a special key function, the functions will use the order of the objects to determine its result. So you will have to implement an order for your  class, making e.g.  work.To do that, you will need to implement a number of special methods. That way you enable comparison between those objects. Since you likely want a proper order where  implies  etc., you can use  to implement a total order by just defining the equality and a single lower-than comparison:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__lt__
https://docs.python.org/3/library/functools.html#functools.total_ordering
