Natural Text
I'm trying to create a celery task for uploading and resizing an image before storing it to Amazon S3. But it doesn't work as expected. Without the task everything is working fine. This is the code so far:stacktraceviews.pytasks.py
It looks like you are attempting to pass the entire uploaded file as part of the Celery message. I imagine that is causing you some trouble. I would recommend seeing if you can save the file to the web server as part of the view, then have the message (the "delay" argument) contain the filename rather than entire file's data. The task can then read the file in from the hard drive, upload to s3, then delete it locally.
I know this is a very old question, but I was struggling with passing the file's contents to the celery task. I would keep getting errors trying to follow what others have done. So I wrote this up, hoping it may help others in the future.TL;DRSend the file contents to the celery task with base64 encodingDecode the data in the celery task and use  for the streamLong answerI was not interested in saving the image to disk and reading it again, so I wanted to pass the needed data to reconstruct the file in the background.Trying to follow what others suggest, I kept getting encoding errors.Some of the errors were:The  was thrown by the . Trying to decode the data to get rid of the  did not make much sense. As the data is binary in the first place, I tried to use a  instance, and that worked perfectly. The only thing I needed to do was to encode the file's stream with base64 and then I would be able to pass the content to the celery task.Code samplesimages.pyasync_tasksEditI also changed what content celery accepts and how it serializes data. To avoid having trouble passing the Bytes instance to the celery task, I had to add the following to my config:
Old question, but I have just had the same problem. Accepted answer did not work for me (I'm using Docker instances so Celery does not have access to producers filesystem. Also, its slow to first save file to local filesystem). My solution keeps the file in the RAM. It's therefore much faster. Only downside is if you need to handle large files (>1GB), then you need a server with a lot of RAM. The doc_file is of type  (see docs here)Sending the file to celery worker:Receiving the file:


Answer URL
