Natural Text
The python 3.3 documentation tells me that direct access to a property descriptor should be possible, although I'm skeptical of its syntax . But the example that I constructed below fails. Am I missing something?Here's the error I get in Python 2.7 (and also Python 3.2 after porting the snippet of code). The error message makes sense to me, but that doesn't seem to be how the documentation said it would work.
By accessing the descriptor on  you invoked  already. The value  is being returned.For any attribute access, Python will look to the type of the object (so  here) to see if there is a descriptor object there (an object with a  method, for example), and will then invoke that descriptor.That's how methods work; a function object is found, which has a  method, which is invoked and returns a method object bound to self.If you wanted to access the descriptor directly, you'd have to bypass this mechanism; access  in the  dictionary of :This behaviour is documented right above where you saw the  direct call:The default behavior for attribute access is to get, set, or delete the attribute from an objectâ€™s dictionary. For instance,  has a lookup chain starting with , then , and continuing through the base classes of  excluding metaclasses.The Direct Call scenario in the documentation only applies when you have a direct reference to the descriptor object (not invoked); the  expression is such a reference.Your code on the other hand, is an example of the Instance Binding scenario:Instance Binding  If binding to an object instance,  is transformed into the call: .


Answer URL
