Natural Text
I have a rather messy data set that has a lot of inconsistencies and errors due to manually input data.I'm working on the address column of this dataset in pandas. What I would like to do is break the address column into 3 separate entities:1) a column for the address2) a column for the street number3) a column for the apartment or unit numberThe data looks like the following:I have already removed the street numbers into their own column. For this I used "np.where" using an easy logical condition that if the string started with digits extract them into the new street column.I am now stuck on how to do this with apartment numbers.I am assuming that because of the inconsistencies, I have to do something like:Will I have to use regex to do this? If so, what is the way to go about that?Are there any alternatives to this line of thinking?
Since you have multiple conditions for your  column, you can use  here like the following:Output
Using , something like:[out]
If you want to use a regex, here's a way to do it that matches number, street, and apartment in separate named groups and then uses df.apply to populate new columns of the dataframe. Street name types are listed out brute force. Anything left over is the apartment number.
If you already have removed all street numbers the only numbers left should be apartment numbers. Therefore you can use a simple regex to extract all numbers that are left in this column:edit:With the above answer alone the numbers will remain in the addresses column, to remove we simply replace them with an empty string:


Answer URL
https://docs.python.org/3/library/re.html#regular-expression-syntax
