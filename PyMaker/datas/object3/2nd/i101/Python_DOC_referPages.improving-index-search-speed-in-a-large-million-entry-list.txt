Natural Text
I have a list which is a million items long of random, repeatable integers. I need to sort that list, and then find the index of the first iteration of every unique element in the list. When I do this, I am running into run time >5 minutes long. Can anyone give me any suggestions to speed up my code? An example of my process is shown below.
 is implicitly quadratic is  is linear. Use a dictionary to grab the indices in one pass over the sorted list:
Just store the first position for every unique element:And then replace  for Or just use:
You can use the  function from the standard library's bisect module to do this.  On a sorted list, a bisection search is faster than searching through the list as  does.On my machine, using bisect.bisect_left is faster than iterating over the list and accumulating indexes on the way:


Answer URL
https://docs.python.org/3/library/bisect.html
