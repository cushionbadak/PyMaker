Natural Text
Assume we have a dataset like:Now we want to transform this dataset to:This transform could be done by a dictionary but is there a way to do this more efficiently  Currently I do as below:And then save the output.
Use defaultdict for this:
The dictionary approach is probably fastest. I'll show what I did, and why I think it's fastest.We have to loop through each number for each letter it has at least once to get it out of the old dictionary, and put it in the new dictionary. And with this code, we do exactly that - we don't look at any data more than we have to. I am a bit confused though - you formatted your answer in terms of dictionaries, so I assumed the input and output have to be in dictionary form.Could you elaborate on the exact formatting you'd like? Additionally, because things are taking so long, it could be that file I/O is taking a really long time. That's what I've had happen - unless you switch languages, that's unavoidable.
I would go with a simpler way as following:This link may help to understand why the keys are turned into :why-must-dictionary-keys-be-immutable


Answer URL
https://docs.python.org/3/faq/design.html#why-must-dictionary-keys-be-immutable
