Natural Text
im working on a project where i have to use speech to text as an input to determine who to call, however using the speech to text can give some unexpected results so i wanted to have a little dynamic matching of the strings, i'm starting small and try to match 1 single name, my name is Nick Vaes, and i try to match my name to the spoken text, but i also want it to match when for example some text would be Nik or something, idealy i would like to have something that would match everything if only 1 letter is wrong so Nickickniknicnckwould all match my name, the current simple code i have is:for a 4 letter name its possible to put all possibilities in the filter, but for names with 12 letters it is a little bit of overkill since i'm pretty sure it can be done way more efficient.
What you basically need is fuzzy string matching, see:https://en.wikipedia.org/wiki/Approximate_string_matchinghttps://www.datacamp.com/community/tutorials/fuzzy-string-pythonBased on that you can check how similar is the input compared your dictionary:This code will produce the following output:You have to experiment with different ratios and check which will suit your requirements to miss only one letter
You need to use Levenshtein_distance A python implementation is nltk
From what I understand, you are not looking at any fuzzy matching. (Because you did not upvote other responses).If you are just trying to evaluate what you specified in your request, here is the code. I have put some additional conditions where I printed the appropriate message. Feel free to remove them. the output looks like thisLet me know if this served your purpose.


Answer URL
https://docs.python.org/3/library/difflib.html#module-difflib
