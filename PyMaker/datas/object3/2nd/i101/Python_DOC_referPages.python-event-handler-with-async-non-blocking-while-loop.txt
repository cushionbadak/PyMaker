Natural Text
Using Python 3.6.I'm trying to write an event handler that constantly listens for messages in the , and processes them (prints them in this case). But it must be asynchronous - I need to be able to run it in a terminal (IPython) and manually feed things to the  (at least initially, for testing).This code does not work - it blocks forever.How do I make this run forever but return control after each iteration of the  loop?Thanks.side note:To make the event loop work with IPython (version 7.2), I'm using this code from the  library, I'm using this library for the real-world problem in the example above.
You need to make your queue an , and add things to the queue in a thread-safe manner. For example:Your other thread must put stuff in the queue like this: will ensure correct locking, and also that the event loop is woken up when a new queue item is ready.
This is not an async queue.  You need to use asyncio.QueueAsync is an event loop.  You call the loop transferring control to it and it loops until your function is complete which never happens:You commented:I have another Thread that polls an external network resource for data (I/O intensive) and dumps the incoming messages into this thread. Write that code async - so you'd have:If you don't want to do that what you can do is step through the loop though you don't want to do this.  Then you simply call your async function and each time you call run_once it will check your (asyncio queue) and pass control to your listen for orders function if the queue has an item in it. 


Answer URL
https://docs.python.org/3/library/asyncio-queue.html
