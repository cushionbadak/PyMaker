Natural Text
So basically I have an app I'm making that has user data which I want to backup and load in the database. I'm storing the data in yml files. Now, a user has posts. Each post has a timestamp, text and tags. I want to use an ordereddictionary in order to retain order when I write the data in the YAML files. Currently, I'm doing something like this:As you can see, I'm using an array of orderectionaries and that I think is the reason my posts for each user are not ordered. How can I resolve this issue.I am returning this posts_arr object to be stored within another ordereddictionary.Also, I since the posts text is kind of nested and is a large block of text, I want to make sure that text is also stored in string literal block styles.
Basically, your issue is a misunderstanding on how ordered dictionaries work in python. The python documentation states that an OrderedDict is a:dict subclass that remembers the order entries were addedhttps://docs.python.org/3/library/collections.html#module-collectionsPersonally, I'd recommend a list of dictionaries created from a pre-sorted list of posts. In this case, it would look something like this if we were to keep the majority of your code as-is:You could use list comprehensions to build this list from the sorted one like chepner suggested, but I don't want to change too much.
Use an ordinary  (or  if you really need to) for each post, and use a list for the collection of all posts. Once you do that, it's a short jump to using a list comprehension to define the return value directly.


Answer URL
https://docs.python.org/3/library/collections.html#module-collections
