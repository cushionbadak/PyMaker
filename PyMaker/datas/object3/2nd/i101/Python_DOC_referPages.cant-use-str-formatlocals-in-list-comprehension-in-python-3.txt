Natural Text
The below works in Python 2 but not 3. Is there a way to access local variables in Python 3? Or an alternative solution to these cases?Error in Python 3: KeyError: 'local_var'Below is a simpler toy example of above (works in Python 2 but not 3)Error in Python 3: KeyError: 'local_var'
As explained by @user2357112 in a comment, list comprehensions have their own local scope (and thus  dict) in Python 3.Compare:WithIn the first case, the function  is called inside the list comprehension code while in the second the result of the function call is passed as an argument to the list comprehension.The  module confirms that:The  function was not called. You see the call in the code of the list comprehension:While             The  function is called before the list comprehension execution, the iter is built and passed to the list comprehension.Concerning your specific problem, you can force the evaluation of  outside of the list comprehension (note the : this is not a positional argument):If your version of Python is 3.6 or newer, you can use (f strings)[https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals]However, I think it's not a good idea to make a lookup in  for every iteration. You can build your  once and use it in the list comprehension: Or (>= 3.6):Then you have:


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals]
