Natural Text
Suppose I have the following python list:Suppose I want to copy values of this list into a new list as follows:If it is a digit between 0-9, copy that value into the new listElIf it is 'X', copy  into the new listElse raise an ExceptionCan I do it with a lambda function as shown below? If so, how?
Why not just write a function that does what you want and put it in the lambda? I don't see a reason to try to make a convoluted one-liner for something that should be more than one line.
To back up Brenden's (quite correct) answer...You can actually do some weird things with Python ternary expressions... but the result is just unbearable. Consider a partial solution:Not only is that horrid and would probably confuse most Pythonistas (not just the use of an unusual construction, but why would you use this construction?), I don't know quite what to do yet about actually raising the exception right there without redefining the way  works. ( only works when it is standing alone.)So now we have a confusing lambda that conditionally permits a member into the new map construction or includes a  object instead. Yuk.Much better to abstract this whole idea away behind a function that does, in a very simple way, exactly what you want -- and let the "beautiful code part" be the bit people will normally need to read in the future that goes something like:
To raise an exception you have to use 'try' and 'except' statement and Statements are not allowed in the lambda expression. In the Lambda expression, you can only have expressions so you can't raise the exception in the lambda function.
Use a conditional expression.Other exceptions that can be raised:In the conditional expression replace  with


Answer URL
https://docs.python.org/3/reference/expressions.html#conditional-expressions
