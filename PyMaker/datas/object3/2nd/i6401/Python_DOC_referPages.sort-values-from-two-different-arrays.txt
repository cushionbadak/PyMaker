Natural Text
I have found all the values and everything and I tried sort, but it sorts separately rather than together. I want to sort by years, and grades should just follow the values of years. However, when I do sort(years), it would only sort years, leaving grades as it is. when opening file,it would give me something like:and so forth. So I have calculated average and everything. Without sort, it would give me similar to this:So the sort will only work for years, but won't do that for grades. This problem has been bugging me for so long time now. I am not planning to use pandas. 
You want to add this line before the return statement:What does this do?The inner  tells python to put together each element of the iterables  and  as an array of tuples. is the  utility, except now that it's operating on the pair, it needs to know how to sort the pair.  So we pass it a lambda function that says "look at the first part."The outer  takes the results returned from the sorted, which is a list of tuples, and converts it back to two lists.  The * tells it to treat the list as a bunch of arguments, so you're passing in pairs to zip.  zip takes any number of tuple arguments, and splits them into its component parts.  In this case, it's taking the ten pairs and splitting it into 2 tuples of length 10 each.As long as your iterables are of the same length, this is a "basic" mechanism to sort them together.
Use  to join them as a  and then .Example :#print in your order :Note that for the year , there are two values of  and  and that it handles it giving more preference to the  and next .
I hope this example will be helpful, so:
The alternative solutions are taking the results and zipping them together. As you seem to have control of the reading of the file, I suggest to instead never split the years and grades apart.In my opinion this is easier than later combining the two lists with zip.Other improvementsYou can use a  to avoid the  block:


Answer URL
https://docs.python.org/3/library/functions.html#zip
