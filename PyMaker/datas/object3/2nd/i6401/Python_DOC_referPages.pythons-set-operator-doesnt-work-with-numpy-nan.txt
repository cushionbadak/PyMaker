Natural Text
I noticed a problem converting lists of NaN values to sets:This SHOULD return {nan} but instead returns {nan, nan}.  However, doing this:returns the expected {nan}.  The former are apparently class numpy.float64, while the latter are by default class float. Any idea why set() doesn't work with numpy.float64 NaN values? I'm using Pandas version 0.18 and Numpy version 1.10.4.
NaNs in a float64 array don't point to the same space in memory as np.NaN, (they, like every other number in the array, 8 bytes in the array). We can see this when we take the :It's kindof a python "gotcha" that this occurs, since it's an optimization (before checking set equality python checks if it's the same object: has the same  / location in memory):The reason it's a "gotcha" is because NaN, unlike most objects is not equal to itself:
Numpy is a red herring here -  is just a name for , which shows the same problem:As Andy says, this is about set equality trying  before  when checking for set membership.


Answer URL
https://docs.python.org/3/library/functions.html#id
