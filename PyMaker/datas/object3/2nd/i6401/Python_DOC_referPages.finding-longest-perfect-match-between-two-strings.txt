Natural Text
I am trying to write a script that will perform two functions, when provided with two strings:1.  Find the longest sequence of characters starting from  that is the same in both strings2.  Find the longest run of characters that exists in both stringsTo accomplish problem 1, I have the following:I'm having trouble with Problem 2. So far, I've considered an alignment between the two sequences using BioPython's pairwise2. However, in this case, I only want perfect matches (no gaps, no extensions), and I only want to see the longest sequence, not a consensus which is what I appear to get:Question: How can I find the longest run of characters that exists in both strings? 
Here's a shorter code for Problem 1:The naive approach for Problem 2 would be to simply generate a set of every substrings for each string, calculate their intersection and sort by length:If you want a more efficient approach, you should use a suffix tree.If you don't want to reinvent the wheel, you could simply use 
The longest common substring problem can be dealt with in several ways, some more efficent then others. One very efficient solution involves dynamic programming and its implementation in both python 2 and 3 can be found in wikibooks. A  naive solution, simpler and easier to understand, but less efficient, is this one:
As mentioned in Eric Duminil's answer, one way of approaching this is to use difflib.SequenceMatcher.find_longest_match:


Answer URL
https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher.find_longest_match
https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher.find_longest_match
