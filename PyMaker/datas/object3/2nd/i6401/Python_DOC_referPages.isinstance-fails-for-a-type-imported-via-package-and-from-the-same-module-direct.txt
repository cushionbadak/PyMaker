Natural Text
 has been added to the  variables.Types.py:foo.py:Finally, from main.py:The problem now is, that  is of type , while the isinstance call will check if it equals , which obviously returns false.How can I avoid this problem, without having to change anything in the library (lib)?
You should not both make  a package and add it to . This makes it possible to import its modules both as  and directly, setting yourself up for failure.As you can see,because of the way Python imports work.Python searches the import path and parses an appropriate entry that it finds.When you import , it imports the  directory as a package, then  as a submodule inside it, creating module objects  and  in .When you import , it imports  as a standalone module, creating a module object  in .So,  and  end up as two different module objects. Python doesn't check if they are the same file to keep things simple and to avoid second-guessing you.(This is actually listed in the Traps for the Unwary in Pythonâ€™s Import System article as the "double import trap".)If you remove  from , the import in  would need to become a relative import:or an absolute import:
When a module is imported thru two different path in the same process - like here with  in  and  in , it is really imported twice, yielding two distinct module objects, each with it's own distinct functions and class instances (you can check by yourself using ), effectively breaking  and  tests.The solution here would be to add  (not ) to your pythonpath (fwiw that's what should have been done anyway - pythonpath/sys.path should be a list of directories containing packages and modules, not the packages directories themselves) and use  everywhere, so you only have one single instance of the module. 


Answer URL
https://docs.python.org/3/reference/import.html
