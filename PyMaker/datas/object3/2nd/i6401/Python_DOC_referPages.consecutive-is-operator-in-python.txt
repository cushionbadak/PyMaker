Natural Text
This question already has an answer here:Chaining “is” operators                    4 answers                Can somebody explain this for me?Doesn't the 'is' operator take 2 operands, compare objects from the left, and return Boolean?
Because it is being interpreted as a chained comparison:Comparisons can be chained arbitrarily, e.g.,  is equivalent  to , except that y is evaluated only once (but in both  cases z is not evaluated at all when  is found to be false).Formally, if  are expressions and  are  comparison operators, then  is equivalent to  , except that each expression is  evaluated at most once.Thus, since  is a comparison operator, your first expression is equivalent to:
Compare with .Is the 2nd None the same as the 1st None? Yes. Is the 3rd same as the 2nd? Yes.OTOH,  is clearly False. The parentheses broke the chaining.Evaluating  is a common python idiom, and that doesn't make you worried about an intermediate result of . Evaluating  is less common, but for your singleton  the three objects are identical.


Answer URL
https://docs.python.org/3/reference/expressions.html#comparisons
