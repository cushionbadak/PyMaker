Natural Text
I created a script to process each item in a 3-column excel file exported as a .txt file into 3 lists (1 list for each column). There are 22 lines in the .txt file, including the header. With these 3 lists, I'm trying to create a nested dictionary where each column is a key, a key within a value, or a value within a value (ie: {Tag1:{Tag2:Tag3}...} for however many items there are in the lists. When I zip these lists into a nested dictionary, it truncates the list and zips only 19 items into the dictionary, not 22. Could someone troubleshoot my code and see what the dictionary is doing to my list? Here's the .txt file for reference:Here's my script:EDIT: here's a link to a downloadable version to the file: https://drive.google.com/file/d/0B2s43FKt5BZgQldULXVOR0RBeTg/view?usp=sharingEDIT 2: This should be the desired output:}EDIT 3: It turns out the dictionary truncates the value if there are duplicate values in the lists. Is there anyway to avoid this?
You can try this:Output:Edit: using a  for correct handling of duplicate values:
Dictionary can't have duplicate keys. What you can do is to define dictionary to hold a list of values. In your case change {Tag1:{Tag2:Tag3}} to be {Tag1:[{Tag2:Tag3}]}
What you want is called a “bag”. Try the collections.Counter class.


Answer URL
https://docs.python.org/3/library/collections.html#counter-objects
