Natural Text
I'm practicing questions from Cracking the coding interview to become better and just in case, be prepared. The first problem states: Find if a string has all unique characters or not? I wrote this and it works perfectly:Now, my question is, what if I have all unique characters like in:'I am J'which would be pretty rare, but lets say it occurs by mere chance, how can I create an exception for the spaces? I a way it doesn't count the space as a character, so the func returns True and not False?
Now no matter how space or how many special characters in your string , it will just count the words :output:without space words test case :with  space words test case:repeating letters :
Option 1The elegant approach, with Option 2Slightly more efficient, but less pretty.This solution will not iterate over the entire list if it was possible to detect a duplicate sooner.If your strings contain more than just whitespaces (tabs and newlines for instance), I'd recommend regex based substitution:
Create a list of characters you want to consider as non-characters and replace them in string. Then perform your function code.As an alternative, to check the uniqueness of characters, the better approach will be to compare the length of final string with the  value of that string as:Sample Run:As per the Python's :Return a new set object, optionally with elements taken from iterable.  set is a built-in class. See set and Set Types â€” set, frozenset for  documentation about this class.
And... a pool of answers is never complete unless there is also a regex solution:(I'll leave the whitespace handling as an exercise to the OP)
Simple solution


Answer URL
https://docs.python.org/3/library/functions.html#func-set
https://docs.python.org/3/library/functions.html#func-set
