Natural Text
I am willing to concatenate two file on line basis, so that every line of each file is merged consecutively in a third file.So I have the following code and the following text files:code:This works just fine as the output file looks likes:My question is why the last line (number 7) of the file1.txt is not being merged? 
The last line is omitted because  stops at the end of the shorter iterable.What you want is probablyor if you don't want to write out to file the empty lineAnd since the default value of  is , we can simplify it further toEditThe following changes were made after reading the comment and answer from @DYZ:Fixed multi-line "with open" syntax error. Unfortunately we cannotgroup multi-line "with" statements using parentheses.Added second option to check for sentinel value (which I alreadymentioned in my original answer).
With the function , your code could be written in a very compact way:No explicit reading or type conversion is needed.
As others mentioned, it's because you uses normal zip() , the last line of the longest list (file) got omitted.zip will form tuples only up to the length of shorter listInstead you can use either of the below extended zip which will pad up to longest list
The expression  returns a list of tuples only as long as the shorter of the provided iterables (in your case lists).So this behavior is expected per zip documentation.If you want to include the last line, try using itertools.ziplongest


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
