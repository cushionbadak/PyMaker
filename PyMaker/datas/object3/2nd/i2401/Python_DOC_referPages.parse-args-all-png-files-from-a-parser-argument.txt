Natural Text
I would like to get a  which returns something like  (to arbitrarily parse all files of .png format) after running the following ():And upon running the script via command line, and inputting then  returns  instead.. Am I using the right approach? I heard using  will be expanded into the .png files once inputted but it doesn't seem to be the case on my end.Edits: I'm using Anaconda Prompt on Windows 10 if it helps.
There are a couple of things that could be going on. One possibility is that  does not match any files, so does not get expanded. This would happen on a UNIX-like shell only (or PowerShell I suppose). The other possibility is that you are using  on Windows, which simply does not do wildcard expansion at all. Given that you are using Anaconda prompt on Windows, I would lean towards the latter possibility as the explanation.Since you are looking for a list of all the PNGs in a folder, you don't need to rely on the shell at all. There are lots of ways of doing the same thing in Python, with and without integrating in .Let's start by implementing the listing functionality. Given a directory, here are some ways to get a list of all the PNGs in it:Use  (recommended option). This can either recurse into subdirectories or not, depending on what you want:To recurse into subfolders, just add the  keyword-only option.Use . This is much more flexible (and therefore requires more work), but also lets you have recursive or non-recursive solutions:To enable recursion, just delete the line , which suppresses subdirectory search.A related method that is always non-recursive, is to use , which is Pythons rough equivalent to  or  commands:This version does not check if something is actually a file. It assumes you don't have folder names ending in .Let's say you've picked one of these methods and created a function that accepts a folder and returns a file list:Now that you know how to list files in a folder, you can easily plug this into  at any level. Here are a couple of examples:Just get all your directories from the argument and list them out afterwards:Once you've processed the arguments:Integrate directly into  with the  argument:Now you can use the argument directly, since it will be converted into a list directly:
Your approach is correct. However, your script will only receive the expanded list of files as parameters if your shell supports globbing and the pattern actually matches any files. Otherwise, it will be the pattern itself in most cases.The Anaconda Command Prompt uses  by default, which doesn't support wildcard expansion. You could use PowerShell instead, which does understand wildcards. Alternatively, you can do the expansion in your application as described in Mad Physicist's answer.


Answer URL
https://docs.python.org/3/library/argparse.html
https://docs.python.org/3/library/glob.html#glob.glob
https://docs.python.org/3/library/os.html'
https://docs.python.org/3/library/os.html#os.listdir
https://docs.python.org/3/library/argparse.html#type
