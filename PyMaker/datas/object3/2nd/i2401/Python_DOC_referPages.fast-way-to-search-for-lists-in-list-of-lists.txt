Natural Text
I have a list of sentences and a list of queries. The queries have distinct space-separated words, I have to find the sentences having all the queries and print the indexes of the sentences. Example: Output:The input structure is something like this:I have been using O(n^3) algorithm but that's very slow and giving me a TLE. Is there a faster way to do it, maybe regex but I haven't been able to figure out how to build the expression? The input size is limited to 10^4.My code :
Python supports the data structure called a set. You can post-process your sentences to produce a map of words to sets.That is, a map like:With that data structure, you can compute the set intersection of all the query words. This would give you a set that contains all the words in the query, with no concern about the order of the words.Once you filter the sentences down to that smaller group, doing whatever ordering search should be faster.
I formatted the output so you could trace the loop to see how each item is retrieved. You can use the elements of this to just print the  if you'd like but I wanted you to see how to get the things you are requesting.OutputThis will get that basic output:Output
You can store each subarray of strings in a . The  of the  in the  will be a list(of indices of course). Below is the pseudocode- Pseudocode:Time Complexity: O(n^2) where  is the maximum length of a sentence among all sentences. 


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
