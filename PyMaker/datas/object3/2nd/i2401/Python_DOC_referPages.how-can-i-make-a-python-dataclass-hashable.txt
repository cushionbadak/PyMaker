Natural Text
Say a I have a dataclass in python3. I want to be able to hash and order these objects. I only want them ordered/hashed on id. I see in the docs that I can just implement __hash__ and all that but I'd like to get datacalsses to do the work for me because they are intended to handle this.
From the docs:Here are the rules governing implicit creation of a  method:[...]If  and  are both true, by default  will  generate a  method for you. If  is true and   is false,  will be set to , marking it unhashable  (which it is, since it is mutable). If  is false,   will be left untouched meaning the  method of the  superclass will be used (if the superclass is object, this means it  will fall back to id-based hashing).Since you set  and left  at the default (), your dataclass is unhashable.You have 3 options:Set  (in addition to ), which will make your class immutable and hashable.Set , which will create a  method but leave your class mutable, thus risking problems if an instance of your class is modified while stored in a dict or set:Manually implement a  method.
TL;DRUse  in conjunction to  (which will make the instances immutable).Long AnswerFrom the docs: is used by built-in , and when objects are added to hashed collections such as dictionaries and sets. Having a   implies that instances of the class are immutable. Mutability is a  complicated property that depends on the programmerâ€™s intent, the  existence and behavior of , and the values of the eq and  frozen flags in the  decorator.By default,  will not implicitly add a  method  unless it is safe to do so. Neither will it add or change an existing  explicitly defined  method. Setting the class attribute   has a specific meaning to Python, as described in the documentation.If  is not explicit defined, or if it is set to None, then   may add an implicit  method. Although not  recommended, you can force  to create a  method  with . This might be the case if your class is  logically immutable but can nonetheless be mutated. This is a  specialized use case and should be considered carefully.Here are the rules governing implicit creation of a  method.  Note that you cannot both have an explicit  method in your  dataclass and set ; this will result in a .If eq and frozen are both true, by default  will generate a   method for you. If eq is true and frozen is false,  will be set to None, marking it unhashable (which it is, since it is mutable). If eq is false,  will be left  untouched meaning the  method of the superclass will be used  (if the superclass is object, this means it will fall back to id-based  hashing).


Answer URL
https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass
https://docs.python.org/3/library/dataclasses.html#module-level-decorators-classes-and-functions
