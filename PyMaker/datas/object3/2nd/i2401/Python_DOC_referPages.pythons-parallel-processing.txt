Natural Text
I am in the following setting: I have a method that takes an objective function f as input. As a subrouting  of that method i want to evaluate f on a small set of points. Since f has high complexity i considered doing that in parallel.All online examples hang up even for trivial functions like squaring on sets with 5 points. They are using the multiprocessing library - and i don't know what i am doing wrong. I am not sure how to encapsulate that  statement in my method. (since it is part of a module - i guess instead of  i should use the module name?)Code i have been using looks likeWhen executing this code in my spyder it takes a bloody long time to finish.So my main questions are: What am i doing wrong in this code? How can i encapsulate the __name__-statement, when this code is part of a bigger method?Is it even worth it parallelizing this? (one function evaluation can take multiple minutes and in serial this adds up to a total runtime of hours...)
According to documentation : close()terminate()terminate() will be called immediately.join()So you should add : You can call Pool without any argument and it will use cpu_count by defaultIf processes is None then the number returned by cpu_count() is usedAbout the if name == "main", read more informations here.So you need to think a bit about which code you want executed only in the main program. The most obvious example is that you want code that creates child processes to run only in the main program - so that should be protected by name == 'main'
You might want to look into the chunksize argument of the map function that you are using. On a large enough input list, a lot of your time is spent simply communicating the arguments to and from the separate parallel processes. One symptom of this problem is that when you use something like  htop all cores are firing but at < 100%.


Answer URL
https://docs.python.org/3/library/__main__.html
