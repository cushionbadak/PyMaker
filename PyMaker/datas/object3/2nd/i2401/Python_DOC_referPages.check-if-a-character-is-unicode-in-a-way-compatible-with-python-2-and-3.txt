Natural Text
EDIT: Clarifying the allowed character set based on commentsThe allowed characters from ASCII character set are , , , , , , . Any other character from ASCII set should not be allowed. Unicode characters apart from the disallowed ASCII set defined above are also allowed.End of EditI am processing some text data where the only allowed ASCII characters are , , , and ,,,. Apart from these Unicode characters are also allowed. I need to make sure that the incoming data contains only these set of characters.Checking for the allowed ASCII characters is easy:But I am wondering about how to allow unicode characters apart from the above. I guess in Python-2.7 I could add a check like so:But strings in Python-3 are Unicode by default and there is no separate  type, so this would not work there. Any cleaner way of doing this which works in both the versions of Python?
As I read the question, you want to allow any non-ASCII character, plus the whitelisted ASCII characters. Since making a set of all valid characters is impractical (it would have over a million entries), the simplest solution is to make a set of invalid characters and verify that your strings contain none of them:Once you have that,  becomes trivial:If you felt like it, you could even avoid defining the Python level function at all, saving a little call overhead (at the expense of not being able to define your own docstring) by just making an alias to the bound  method:You're not going to get any faster than that; /'s  method pushes all the work to the C layer (no bytecode processing overhead per character), short-circuits (as soon as an invalid character is seen, it returns immediately), and performs each lookup in ~ (so testing a string is  in the length of the string).If you aren't concerned with checking, but rather, want to strip out invalid characters, you'd want to use / to bulk delete the invalid characters, but given the API differs between the types (Py3  and Py2  use one form, Py3  and Py2  another), you'd have to go to some trouble to make it work on Py2 and Py3 on the same code base.


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset.isdisjoint
