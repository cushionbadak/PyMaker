Natural Text
I want to create a recursive algorithm that will generate all permutationsof a specified length of a list of integers with some length .Following is my idea: For every element in the list, I can remove it, then ask my recursive function to return to me all permutations of length , and then to each of those permutations I will add the removed number. Then repeat this process for all numbers in the list.The base cases are when the list is empty or contains only one element.In these cases I just return the list. That is, as long as k is less than or equal to the length of the list (ex. if  is , but , I can't produce any permutations of length ).This is what I've written:I keep getting How should I modify this?
There are two problems:First:  Here you are adding a list to an integer. Second:  Here you need an index to access the elements of the list. You are currently using the elements as an index and will therefore get an  because when ,  will be  but you do not have .Your code works when I do the following changes in your code. I am only showing the modified lines. I am not sure if the output is as expected. You can try it and let me know.
In python, when using'a' is not actually a number which can be used as an index, but is instead a pointer to an actual element in list 'b'. Put another way, if I had the following listThen on the first iteration 'a' would be equal to "Bob", and not 0.When you want to generate index numbers instead of pointers to elements, you can use:instead. Using this, your code should then work.e.g.


Answer URL
https://docs.python.org/3/library/itertools.html
