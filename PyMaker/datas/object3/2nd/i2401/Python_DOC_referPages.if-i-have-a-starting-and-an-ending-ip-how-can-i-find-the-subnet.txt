Natural Text
I need to block some IPs from some countries but I'm only given the starting IP and the ending IP like this:I'd like to calculate the subnet to have it like this:How can I determine the subnet given an IP address range in Python?
I haven't spent much time networking recently, but here's how I think you can do this most efficiently.First of all, it's important to recognize that not all IP ranges can be represented as a single subnet. Let's take a look at a common subnet likeThe  indicates that the first 24 bits of  give the network prefix, in this case  and the remaining bits are used for host addressing. You get a range from  to . can help us out here. Let's see if it agrees:So far so good. But what if you want to exclude the  or the , which is used for broadcast? There isn't a single subnet that represents that range:Subnets grow by powers of two and when our range doesn't slot into that framework cleanly we end up with things like this.The example you gave, incidentally, doesn't give a single subnet:Python has an  module. Let's see if its  function agrees with  (formatted for readability):So far so good. How about the second example?Looks like a match to me.
convert IP addresses to unsigned longxor both addressescount zero bits from start - that's your prefix length


Answer URL
https://docs.python.org/3/library/ipaddress.html#ipaddress.summarize_address_range
https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.subnets
