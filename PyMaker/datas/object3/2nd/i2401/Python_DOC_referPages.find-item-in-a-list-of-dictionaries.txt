Natural Text
I have this dataThe id's are unique, it's impossible that multiple dictonaries have the same id.For example I want to get the item with the id "ieow83janx".My current solution looks like this:Do you think that's the be solution or does anyone know an alternative solution?
Since the s are unique, you can store the items in a dictionary to achieve O(1) lookup.then you can doto retrieve it
If you are going to get this kind of operations more than once on this particular object, I would recommend to translate it into a dictionary with  as a key.In this case, this lookup operation will cost you some constant*  time instead of .
How about the  built-in function (docs):EDIT:It raises  if no match is found, which is a beautiful way to handle absence:
Without creating a new dictionary or without writing several lines of code, you can simply use the built-in  function to get the item lazily, not checking after it finds the match. should for just fine.
Would this not achieve your goal?   Using comprehension:
As any function returns true if iterable (List of dictionaries in your case) has value present.While using Generator Expression there will not be need of creating internal List. As there will not be duplicate values for the id in List of dictionaries, any will stop the iteration until the condition returns true. i.e the   generator expression with any will stop iterating on shortcircuiting. Using List comprehension will create a entire List in the memory where as GE creates the element on the fly which will be better if you are having large items as it uses less memory.


Answer URL
https://docs.python.org/3/library/functions.html#next
