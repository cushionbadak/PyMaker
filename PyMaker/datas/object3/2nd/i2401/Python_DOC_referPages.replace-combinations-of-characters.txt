Natural Text
I have a string . If any of  or  or  appear in the string then it I need to change them to all possible combinations of the three letters. If I pass the above string input to the program then the output should be like thisThe letters may be present anywhere in string. If just a single letter is present then it must be replaced by ,  and  in turn. For example the output for the string  should be as followsI can search for a given character with code like thisHow can I produce all possible strings if there could be any number of , , or  in any positions?
The collection of combinations that you want of your key letters , , and  is called theCartesian product.In Python, you can use to generate them.Firstly, we need to find the positions of all of the key letters in the input string. The easy way to do that uses the built-infunction. Once I know those positions, and how many key letters the string contains, we can generate each item of the Cartesian product, replace the key letters, and print the new string.In Python, strings are immutable (they can't be changed), so I convert the string to a list of characters, replace the characters in the key positions, and then build a new string from the list using themethod.The following code will work with both versions 2 and 3 of PythonPythonoutputWith a minor change, we can turn our function into a generator. That lets you loop over the output strings easily, or turn them into a list if you want.Pythonoutput
This can be done in Perl by using the  operator.  is intended for finding matching files, but if no generic wildcard characters (,  or ) are included in the pattern then it will simply return all possible matches, whether they exist as files or notThis Perl code uses a substitution to form a glob pattern by replacing all occurrences of , , or  with the multiple pattern . Submitting the result to  gives us the required outputoutput
A short solution:Start by splitting the string into tuples of characters that may appear at each positionThen this function will assemble the list of tuples back into a string:
Here is a recursive solution in Perl:Output:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/stdtypes.html#str.join
