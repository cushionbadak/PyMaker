Natural Text
This question already has an answer here:numpy: function for simultaneous max() and min()                    8 answers                My question arises from answers posted to How to find the missing numbers in an arbitrary list in python 3?.Most solutions suggest using something akin to This needs 2 iterations of  to fetch  and  as values from the list to build the range that entails all numbers between  and .It is easy to simplify this to just one pass of :that retrieves both in O(n) time and constant space. Is there some way to do this with built-ins / modules in python?Edit:Agreed: min() and max() are both O(n) as well - but used twice (which is constant and reduced to O(n) - yep) - but it is still slower to do it twice then once.Edit with some benchmarkings:  Functool reduce approach: Simple min / max usage:One pass try with if/elif to cut on comparisons:One pass try without if/elif (more comparisons needed):Which lead to:
You can use functools.reduce


Answer URL
https://docs.python.org/3/library/functools.html?highlight=reduce#functools.reduce
