Natural Text
I've written a small program that runs through a text looking for character combinations.It lists all character combinations and their number of occurrences in the txt file, and prints them to another txt file. There are two further things I would like to accomplish here, but I'm not sure where to look next. instead of (or in addition to) a list of x+y and their number of occurrences, I would like to create a 2d list of x and y with values as number of occurrences:I would like to return a list of words (defined by white space) in which the string is found, so if:the script would return 'brzeszcze', 'zabronić', 'żubr', etc. Ideally, I would like to store them in a list of variables (eg br_twoC, containing all words, then another list like twoC_combinations=(br_twoC, bl_twoC, gd_twoC, etc..), so I could further manipulate and print them as examples at the end of the text_file.I have experimented with the .find() function, but this returns a single index and I don't really know (a) how to return an index for more than one instance and (b) how to return everything around that index in both directions until white space. Maybe there's a better option than find.If someone could offer tips on where to look for example of these kinds of things, I would be grateful! 
I've managed to solve my issue number 1. Thanks @Johan van Breda; probably it's not what you had in mind, but here's what I came up with after searching the keywords you sent and thinking it over some more:I would be shocked if there wasn't a more elegant solution (comments welcome), but hey, it works.I'm still stuck on the number 2 question – how to isolate and list the words (defined by white space) in which my twoC is found? Any ideas? keywords?Thanks.
for number two, I would use regular expressionwhere s is the string you are searching. In the above expression, \w* matches 0 or more occurrences of Unicode word characters letters, followed by your twoC, followed again by /w*It returns a list containing all matching words.returns  


Answer URL
https://docs.python.org/3/library/re.html
