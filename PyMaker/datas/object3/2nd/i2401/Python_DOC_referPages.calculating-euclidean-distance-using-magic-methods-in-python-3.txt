Natural Text
I have a code that calculates Euclidean distance for me:However, now I want to calculate this distance using magic methods in python like  and . I've managed to implement  but I don't know how to implement for  and square root. This is my code so far:How can I implement the rest of the formula using magic methods. I'm really confused. Help would me appreciated.
As has been mentioned, it may not be a good idea to use a Point class to represent vectors. It's ok in simple programs, but it can get confusing in more complex code. The usual practice is to make points immutable. But anyway...To do this Euclidean distance operation we can "abuse" the new  magic method. This method is invoked by the  operator. Here's a short demo based on your code. Notice that I'm using  and  as the attributes, there's no good reason to mark them as private.output
It does not make sense for the difference of two points to be a point. It seems the object you are trying to implement is in fact a vector.Then the distance corresponds to the norm of a vector, implemented with .Example
Your second class works for me. I do not see any issues with it:And then:Call it vector or point or whatever, it seems to be doing what you want it to do.
Note that your definition of  is a bit nonstandard for vectors.But as it is, the distance of two points  and  could be written as . So we need your  method, your  method, and the only other addition is an  method which allows  to work:That's the shortest way based on your existing code anyway. You could experiment further by adding a scalar multiplication method and an addition method and then defining sub as . You can also make things a bit easier on yourself by implementing a  method.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__matmul__
