Natural Text
I’m working on an algorithm in Python that would take user input and tell them what new letters they would need to add to a string to make it into a different string, and I’ve been playing around a lot with the dictionaries created by the Counter method.I want to compare two different dictionaries that are counting letters from strings (like the objects returned from using the Counter tool from the collections module). We can call these dictionaries D1 and D2. I want there to be two resulting dictionaries (R1 and R2), the first being the shared letters between the two, and the second being the letters needed to make R1 into R2 (the letters that are in D2 but not in D1). For example: Result: 
If by shared letters you mean the Counter intersection, you can use the  operator and the amount of letters needed to convert  into  can be seen as the difference:OutputIf you want to keep negative counts, you can do it like this:OutputIn the above example  because the count of  is  in  and  in . Note: All the examples are in Python 3.5.
Those operations are already built-in to the Counter type:Several mathematical operations are provided for combining Counter objects to produce multisets (counters that have counts greater than zero). Addition and subtraction combine counters by adding or subtracting the counts of corresponding elements. Intersection and union return the minimum and maximum of corresponding counts.(Quoted from Python  docs.)So assuming  and  are Counters,  try
I was not able to understand the question, but from my understanding:Result


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
