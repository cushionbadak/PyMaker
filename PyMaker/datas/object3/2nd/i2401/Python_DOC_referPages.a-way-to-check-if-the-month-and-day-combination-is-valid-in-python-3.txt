Natural Text
Hello, I am currently taking a basic python class and we are currently learning if-else statements. I understand the concept if-else statements but there is one thing bothering me at the moment. I am required to create a prompt that allows the user to input a month from 1-12, days from 1-31, and the prompts will tell whether the input is valid/invalid by determining if the inputs are in those ranges. However, logically speaking some dates would not make sense. For example, you can't have 4/31 or 6/31 because those months only have 30 days in them. I am currently trying to write a code that will tell the user if the month/day combination are either valid/invalid but I have no idea how to. I would love to be taught how.Here is what I have so far:
That's not quite how  works. You probably want to use  with a set, like,etc. is a binary operator that returns its left argument if true, its right argument otherwise, so  is like saying .
use a list or dictionary
You can do some slicing:And:For month checking, in the other-hand, for days:Demo:Example outputs:Can do leap year, and other cool stuff:
I've done something like this before when i started python at school, it seems familiar.Anyway logically speaking that's not how you use or, sure in human language it makes sense but python is not "smart" enough to figure it out. I'll help you out with this you will need to use "in" or add the word "month" after every or.tip: to add comments to your code in the future to help us out, use "#" to tell us what each bits do, this is helpful with more complex programs.output:Please enter a month in numeric form from 1-12: 2Month has only 28 days maxPlease enter a day in numeric form from 1-31: 28Valid DayPlease enter a month in numeric form from 1-12: 4Valid Month with 30 daysPlease enter a day in numeric form from 1-31: 31That combination is not a valid day!Hope this helps!
The  function below will take a str like "07-28" and return a tuple . There are unittests to illustrate it's usage.


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.date
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
