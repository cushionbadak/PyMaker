Natural Text
I have a nested list of elements:I want to create two lists of elements: one which has repeated elements and another with unique elements. But I also wanted the repetition to be maintained Uniqueness or repetition is determined by the first element of every sub list. For example: , . If there are two sub lists where the first element is  I consider it as repetition. Can anyone suggest an easy way to do this?
You can use a  and comprehend the two lists based on the counts of the significant first elements:Update: split  by "key"
You can not using list of list to do the  , it will return the unhashable type: 'list'So We need convert to  of  
There are a variety of solutions you could use including list comprehensions and filters. You can also use sets and list to produce the unique set of elements and convert back into list as shown in the link provided by benvcThen after you get the list of unique elements, you can filter those elements from the original list to get the resulting list of duplicates (if any) See python tips on filter 
If you created a  that contains all of the  in  you can use the built in  method and  the appearances of each  in that  if the  then we append that entire  to our 
I go with the pure numpy solution (I added one more row to make it more general):Lets say that this is our data:The next step is to grab the unique rows:Now, we want to see which rows are not repeated more than once:(The answer for only once rows:)In order to get the repeated indices:The matrix of the only repeated values:


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
