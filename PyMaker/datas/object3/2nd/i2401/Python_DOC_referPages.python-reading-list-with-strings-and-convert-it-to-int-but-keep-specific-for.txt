Natural Text
I have a file full of strings which i read into a list. Now I'd like to find a specific line (for example the first line below) by looking for .../002/... and add to these 002 +5 to give me /007/, in order to find my next line containing /007/.The file looks like thiswith this i could identify for example the first line:The problem now is: how do I convert the string to integers but keeping the format 00X? Is this Ansatz correct?:EDIT according to suggested answers below:So apparently there's no way to directly read the numbers in the string and keep them as they are?adding 0s to the number with zfill and other suggested functions makes it more complicated as /00x/ should remain max 3 digits (as they represent days of year). So i was looking for an efficient way to keep the numbers from the string as they are and make them "math-able".
We can first define a function that adds a integer to a string and returns a string, padded with zeros to keep the same length:We can then use  with a replacement function. We use the regex  that matches a group of 3 digits, preceded and followed by , without including them in the match.The replacement function takes a match as parameter, and returns a string.You could hardcode it, like this:But it could be better to pass the value to add. Either use a lambda:Or a partial function. A complete solution could then be:If you only want to add the default value 1 to your number, you can simply write
Read about mini format language here:Output:
You can't get  to be , . They can only be , .You can do similar by using string.
Or you  and :Or:Or:Or:


Answer URL
https://docs.python.org/3/library/string.html#format-specification-mini-language
