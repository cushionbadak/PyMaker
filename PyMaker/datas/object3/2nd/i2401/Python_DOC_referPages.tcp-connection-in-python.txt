Natural Text
Ok guys, I can't understand this code:What does:do?I really read everything abount them, but I can't understand what dows they do, could you please explain me, them in simple words?Thanks for read, have a great day!
TL;DR = The type of socket address = The type of socketExplanationWhenever you provide  to your server you instruct it to listen to an IPv4 address, and to your client to connect to an IPv4 address. This will work. Same for IPv6. However mixing them up doesn't.That would be the same me waiting for you to talk to me on StackOverflow while you send me messages by email. We are not looking at the same spot, so we won't be able to communicate.Same for  (and the other values). The difference lies in the fact that this tells python's  how we are going to communicate.  will be TCP, while  will be UDP.Let's come back to our "real world" example and let's imagine we agreed on communicating by email. I could expect either one email from you (explaining me everything you have to tell) or several (with a part of what you have to say in each email). That's the same as TCP vs UDP.ReferencesWell, I guess you have read both:python's socket modulepython's socket How toPotentially:SO: What is Address Family?Wikipedia: IPv4Also, I guess:Difference Between Socket Types (and the references therein)Wikipedia: Network socket - TypesSuper long explanation but mostly testingSo. If after all that you don't understand. Let's try:And:So far, everything as in the how to.We launch our server:And then we launch our client:Everything works fine. That's good.Now, lets change our client:And relaunch our new client:Aie! Everything breaks!But what happens?  is an IPv4 address, hence the  module tells us it's not happy about what we are doing! Indeed, we said our connection will be using an IPv6 address but we are providing it with an IPv4 address.Okay... But if I use the same address but in IPv6, will it work? Let's try by changing our client (you could check out this SO answer for the equivalent of  for IPv6):and our server:We relaunch our server and our client:Success!The same procedure could be used to understand/test the  parameter (but I think my answer is already long enough).Hope this helped :).
 is the kind of socket you want. In this case, you are looking to stream bytes to and from the host you want to connect to, rather than just issue a one-time call. This means that the socket will listen for bytes until it receives an empty byte , at which point it will terminate the connection (because the stream is complete). I would imagine you aren't too worried about the type of socket, so low-level understanding here isn't paramount, nor could I give you a particularly satisfactory answer to that, either. is the AddressFamily, ipv4 or ipv6. This tells  what kind of address to expect. You will most likely use ipv4, so (host, port) tuple will work just fine.
AF_INET is well described in there. It is basically the method you are using for sending data over to the other socket. SOCK_STREAM basically describes that you are sending using TCP and essentially describes rules for the endpoint to which you are sending and recieving data (IP adress and port number). But since you seem confused over these terms I'd suggest just just think of them as specifications on how you are going to transmit data between your two socket endpoints.


Answer URL
https://docs.python.org/3/library/socket.html#socket.AF_INET
