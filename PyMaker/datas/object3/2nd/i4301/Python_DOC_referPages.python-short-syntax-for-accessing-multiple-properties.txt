Natural Text
I have a Python object with a lot of properties (say, twenty). I want to put about half of them in a tuple. I'll write:Problem is, I have to repeat the name of the source object numerous times. Is there a more terse syntax? I would love something similar to this:
You can use the  module to extract elements from an object or a dictionary. For an object use , for a  use . It returns a function, so you still have to invoke the function it returns passing the object from which you need to extract the values.The good thing about it returning a function is that you can store the function and invoke it multiple times on as many objects as you want.If you wished to keep the getter function then simply assign it to a variablee.g.
Yes, look a bit into list comprehension. It's very handy for stuff like this. You could also write a method for your class, which takes in a list of properties and returns them in a tuple, which would even be a nicer solution in my opinion.
You can override the  method of an object to implement this alternative behavior:Example:Note that this will prevent you from using tuples as keys.


Answer URL
https://docs.python.org/3/library/operator.html
https://docs.python.org/3/library/operator.html#operator.attrgetter
https://docs.python.org/3/library/operator.html#operator.itemgetter
