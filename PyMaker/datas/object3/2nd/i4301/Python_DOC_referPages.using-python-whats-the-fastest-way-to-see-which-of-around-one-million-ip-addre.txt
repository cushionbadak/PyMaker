Natural Text
I have a list of ~1,000,000 ip address strings. I want to get the set of these ip addresses that are in  three cidrs (each cidr is a string like this: "1.0.0.0/25"). What is the fastest way to do this?A) Convert the three cidrs into sets containing all ip addresses contained in the cidrs. For each ip address in my list, I check if the ip address is in the wanted ip address set.B) Convert each cidr into min & max ip address. Convert each ip address into a tuple of ints and check if ip > min and ip < max.
If you're on Python 3.3 or higher, a decent solution is to use the  module. Convert your CIDRs to network objects with  up front, then convert your addresses to address objects (with  if they might be IPv4 or IPv6, or just / directly if they are of known type (skips a layer of wrapping).You can test for membership relatively cheaply with the  operator, e.g. if you stored your networks in a sequence (e.g. /) you could do:There are more efficient solutions (particularly if you're talking about many networks, not just three), but this is straightforward, relatively memory efficient, and leaves you with a useful object (not just the raw address string) for further processing. 
If you have only 3 CIDRs, just write three ad-hoc functions like:


Answer URL
https://docs.python.org/3/library/ipaddress.html
