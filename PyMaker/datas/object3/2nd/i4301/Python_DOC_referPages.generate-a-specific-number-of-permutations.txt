Natural Text
I have browsed SO extensively and I have found many questions about generating all possible permutations, but none regarding generating a specific number of permutations.I developed, thanks to many SO questions, a decent permutation test routine. However I have to repeat it many times, and it is taking a too long time. my code:I took this SO answer and modify it for my specific test.I have to run it over a 3D array stored in an xarray. the dataset has (lon,lat,time) coordinates, I need to run it for each (lon,lat) position (along the time dimension)I run it using chain.iteratools:Ideally I want to run a permutation test with 20000 permutations. The two loops (within (lon,lat) and for 20000 shuffles) adds up.I am looking to speed up the permutation test code.Therefore I though about trying to generate a 2D array of shape (len(ys),20000) with essentially 20000 shuffled ys array, and then access them at ones and calculate the 20000 differences (diff in the code). (Or find a trade off between memory usage and the looping, so maybe do 5 loops for 4000 shuffles at the time).I could not figure out or find a way to do this. The permutations command from itertools generates all the possible permutations which in my case are too many to handle. I have looked at the random library but couldn't find something that fits my need. Any suggestion?
Take a look at  and  from the itertools:


Answer URL
https://docs.python.org/3/library/itertools.html
