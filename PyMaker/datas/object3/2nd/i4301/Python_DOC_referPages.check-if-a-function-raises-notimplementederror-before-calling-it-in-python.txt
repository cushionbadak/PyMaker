Natural Text
I have the following simplified scheme:and I am looking for what I should use instead of  in order to figure out if a subclass has already implemented  or not. Note: If there is a more pythonic/conventional way of structuring the code, I would also appreciate its mention. The reason I defined it this way is, some NetworkAnalyzer subclasses have _score_funct in their definition, and the ones that dont have it will have different initialization of variables although they will have the same structure
Use an abstract base class and you won't be able to instantiate the class unless it implements all of the abstract methods:
I'm not a metaclass/class specialist but here's a method that works in your simple case (not sure it works as-is in a complex/nested class namespace):To check if the method was overridden, you could try a  on the function name, then check the qualified name (class part is enough using string partitionning):if  is defined in ,  is , else it's .That works if the method is implemented at  class level. Else you could replace by:Of course if the method is overridden with some code which raises an , that won't work... This method doesn't inspect methods code (which is hazardous anyway)


Answer URL
https://docs.python.org/3/library/abc.html
