Natural Text
I adapted this code for using Google Cloud PubSub in Async Python: https://github.com/cloudfind/google-pubsub-asyncioI basically removed the publishing code and only use the subscription code.However, initially I did not include the  line. I figured that tasks were created as they were supposed to however they never actually run themselves. Only if I add said line the code properly executes and all created Tasks run. What causes this behaviour? 
PubSub is calling the  callback from a different thread. Since  is not thread-safe, it must only be called from the thread that runs the event loop (typically the main thread). To correct the issue, replace  with  and  will no longer be needed. As for why  appeared to fix the code, consider that  does two additional things compared to :It operates in a thread-safe fashion, so the event loop data structures are not corrupted when this is done concurrently.It ensures that the event loop wakes up at the soonest possible opportunity, so that it can process the new task.In your case  added the task to the loop's runnable queue (without any locking), but failed to ensure the wakeup, because that is not needed when running in the event loop thread. The  then served to force the loop to wake up in regular intervals, which is when it also checks and executes the runnable tasks.


Answer URL
https://docs.python.org/3/library/asyncio-dev.html#asyncio-multithreading
https://docs.python.org/3/library/asyncio-task.html#asyncio.run_coroutine_threadsafe
