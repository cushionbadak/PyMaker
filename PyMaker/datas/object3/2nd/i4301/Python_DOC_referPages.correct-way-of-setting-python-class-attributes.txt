Natural Text
So I am trying to learn how to properly set Class attributes of a Python class, and wondering about using class functions to do so.My beginners way has taught me to do:This is fine and simple, but this means that I already know the values of my attributes when I instantiate MyClass, since I am passing them to create my object, or if I don't pass them I would use my beginners way of  after creating MyClass object. In my search I read this, which lead me to read about properties, and made me realize that I should not use getter/setters in Python but rather utilize properties. Is this correct? However, I am wondering if it's Pythonic (or just even correct) to set some of the MyClass instance attributes (project, version, command) using a function. I want to do this because I want this class to do the work of finding these values from specific files by only passing 1 argument. This came to mind, but thought it might be wrong:Is it even a logical way of setting instance variables by calling a class function?Should I utilize properties in some ways instead?Should I make a function outside the MyClass that finds these values returns a MyClass instance instead?Is there a more proper Pythonic way?I basically want to create an object with all the extra information (version, command, etc..) by just instantiating it with 1 passed attribute.Thank you in advance!
There are many ways to solve this, but this is how I usually do it: is a decorator that makes a method able to be called directly in the class, instead of the instance. The method then will automatically get the class as first parameter.  is just a name that means class, like we use  for instances but we could use any name really. The main object constructor in  takes full parameters, but the the new  class method works as an alternative constructor, by creating an instance of the class and returning it.Note that this is not a definite answer, but just a suggestion of a pythonic way to solve it.
By using keyword variables in , you get flexibility of passing only one variable while instantiation.using decorators such as,  and @bar.setter enable you to access and modify the associated attributes. And I believe it is also a quite Pythonic way to do so.The following would be my approach.


Answer URL
https://docs.python.org/3/library/functions.html#property
