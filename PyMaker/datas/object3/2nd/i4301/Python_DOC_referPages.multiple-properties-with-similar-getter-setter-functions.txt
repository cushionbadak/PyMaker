Natural Text
What is the cleanest way to define a class with a large number of properties, each of which calls the same setter function with a different parameter?Below is what I'm trying to achieve.  Each of the three properties (red_LED etc) call the same TalkToHardware() function when they are set, but with a different address.  As you can see, this works, but the class definition is long and unwieldy.  It is also error prone.Output:I would like the class definition to look more like this:Is there a clean way to accomplish this, still being able to access each of the LEDs directly as shown in the main function of the first example?
You could create a function that simply defines and returns the needed  class instance and then use it to define the class, thus getting rid of all that repetitive code ✶.(In case it's not obvious, the  function in the code below corresponds to the one named  in your question.)✶ Similar to recipe "9.21 Avoiding Repetitive Property Methods" in the Python Cookbook, Third Edition by David Beazley & Brian Jones (2013).  I found a PDF of the entire book, the recipe's on page 382.
Perhaps you can do this:This is a catch-all function for all of your LED setter functions.I hope this was helpful!


Answer URL
https://docs.python.org/3/howto/descriptor.html
