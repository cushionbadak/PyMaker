Natural Text
 is usually considered evil and are discouraged to be used. But sometimes  gives a clearer and more readable organization of the code, for example:  I want to do some step by step computation, where the result of each step determines whether the following steps are needed, and if needed, which branch to go. The logic itself is a bit complicated, so there are couple of nested if statements. Assuming  was available in python, a neat way to achieve this would be:Without the help of , it is possible to get the same behavior by introducing boolean variables to store flags and add additional  tests to turn on or off codes. But this way makes the control flow much less readable. One workaround would be to abuse a one time  loop to simulate the  version of the above code, like below:My question is, is this the best approach to write a more readable code?
An easy way to break out of a calculation early is to use an exception:
Exceptions provide the same type of structured jumps without the implication of repeated execution:Which exception(s) you use are a matter of why your "gotos" break the regular control flow.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#defining-functions
