Natural Text
Hopefully, I ask this right. I have an original very large list of dictionary's. The keys in my new dictionary well change each time a new number is selected based on user input. These keys are from a value that is located in the same section of the old dictionary list (from the example dictionary below it would be 'id').I now need to sort through the very large original list of dictionary's using the values extracted based on previous user input. While removing any none values and adding up the total from the old dictionary list. 'word' through 'word4' can change based on previous user input (my new dictionary changes for example it may only be word4 or something completely different not listed in this small version) but are located in the same place within the old dictionary list.I feel as if my logic is very flawed here.The example output would be word : 120word2 : 150word3 : 60word4 : 11
Using  from itertools:note that  requires its input to be sorted:the key is the  item:using filter to remove  values, and  to sum:
Option 1: defaultdictYou can use  with a  loop.Result:Option 2: pandasIf you are open to using a 3rd party library,  accepts a list of dictionaries:Result:
I think I'm understanding you correctly: you have a list of dictionaries which you want to group by value on the  key summing the  key for each dictionary in the list that matches that  key.  Is that right?There are a few ways to approach this problem, some with more sophisticated tooling, but I'll give you a simple answer using just lists and dicts to start.Input:Code:Output:


Answer URL
https://docs.python.org/3/library/itertools.html
