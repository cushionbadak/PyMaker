Natural Text
I have generated an  with different DatatypesThe integers of the enums are specified for communication, so I would like to keep this enum as it is or least something similar that has the same associations.As visible in the comments the datatypes have different sizes I would like to get the size of a datatype in someway. I could write a function to map the the parametersbut is there a nice, cleaner and/or more pythonic way?
Looks like you want to have an extra  attribute on your  Enum (and maybe a  as well).  You can roll your own (if using the stdlib or the  backport, or take advantage of 's advanced features1.Rolling your own with  (py2/3) or the  (3.4+):Taking advantage of 's features (py2/3):And in use:1 Disclosure:  I am the author of the Python stdlib , the  backport, and the Advanced Enumeration ()  library.
A slightly cleaner way would be to move the function into the class.outputs:answers to specific questions from comment belowthe  decorator makes a method look and act like an attribute. without the decorator, in order to get the size you would call . With the decorator  returns the same thing. So  is unnecessary here, but I thought that since the that acted like a property of the object and not a method, it would be nice to make it work like on.  calls the method of the parent class.  so,  means get the  using  and use the  function from the parent class (this returns a string).  then, since it's a , that is, indeed, . 


Answer URL
https://docs.python.org/3/library/enum.html
