Natural Text
Is it possible to change the log level using fileConfig in python without restarting the application. If it cannot be achieved through fileConfig is there some other way to get the same result? Update: This was for an application running on a server, I wanted sys admins to be able to change a config file that would be picked during run time by application and change the log level dynamically. I was working with gevent at that time hence I've added my code as one of the answers which uses inotify to pick changes to config file.
 is a mechanism to configure the log level for you based on a file; you can dynamically change it at any time in your program.Call  on the logging object for which you want to change the log level. Usually you'd do that on the root:
In addition to the accepted answer: Depending on how you initialized the logger, you might also have to update the logger's handlers:
It is certainly possible to use  to change logging configuration on the fly, though for simple changes a programmatic approach as suggested in Martijn Pieters' answer might be appropriate. Logging even provides a socket server to listen for config changes using the  /  APIs, as documented here. To get logging to listen on a particular port, you useand to stop listening, callTo send data to the server, you can use e.g.Update: Due to backwards-compatibility constraints, the internal implementation of the  call means that you can't specify  in the  call, which makes this feature less useful in certain scenarios. You can use the same API to send a JSON file using the dictConfig schema, which will allow better control over the reconfiguration. This requires Python 2.7/3.2 or above (where  was added). Or, you can use the stdlib code to implement your own listener which works in the same way but which is tailored to your specific needs.
I finally settled with using inotify and gevent to check for the file write operation, and once I know the file has been changed then I go and set the level for each logger I have based on the config.The above code gets used like below,Once I have the new log file config I can wire in the right logging level for each logger from config. I just wanted to share the answer and it might help someone if they are trying to use it with gevent.
This might be what you are looking for:Note that  called without any arguments returns the root logger.
Depending on your app, you first need to find a way for reloading that file or resetting the log level based on your own config file during execution.Easiest way would be to use a timer. Either use threading to do that, or make your async framework to do that (if you use any; they usually implement it).Using threading.Timer:Output:Update: Please check the solution proposed by Martijn Pieters.


Answer URL
https://docs.python.org/3/library/logging.config.html#logging.config.listen
