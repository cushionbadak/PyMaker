Natural Text
Why python 2.7 doesn't include Z character (Zulu or zero offset) at the end of UTC datetime object's isoformat string unlike JavaScript?Whereas in javascript
Python  objects don't have time zone info by default, and without it, Python actually violates the ISO 8601 specification (if no time zone info is given, assumed to be local time). You can use the pytz package to get some default time zones, or directly subclass  yourself:Then you can manually add the time zone info to :Note that this DOES conform to the ISO 8601 format, which allows for either  or  as the suffix for UTC. Note that the latter actually conforms to the standard better, with how time zones are represented in general (UTC is a special case.)
Option: Python's  does not support the military timezone suffixes like 'Z' suffix for UTC. The following simple string replacement does the trick: is essentially the same as See: Datetime, Python Standard LibraryOption: Or you could use  to achieve the same effect:Note: This option works only when you know the date specified is in UTC. See: datetime.strftime()Additional: Human Readable TimezoneGoing further, you may be interested in displaying human readable timezone information,  with   timezone flag: 
Python datetimes are a little clunky. Use .Arrow has essentially the same api as datetime, but with timezones and some extra niceties that should be in the main library.A format compatible with Javascript can be achieved by:Javascript  will quietly drop microseconds from the timestamp.
The following javascript and python scripts give identical outputs. I think it's what you are looking for.JavaScriptPythonThe output they give is the utc (zelda) time formatted as an ISO string with a 3 millisecond significant digit and appended with a Z.
By combining all answers above I came with following function : 
There are a lot of good answers on the post, but I wanted the format to come out exactly as it does with JavaScript. This is what I'm using and it works well.
In Python >= 3.2 you can simply use this:
Or, to get it in one fell swoop:


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime
