Natural Text
The argparse package does a great job when dealing with command line arguments. I'm wondering however if there is any way to ask argparse to check for file extension (e.g ".txt"). The idea would be to derived one the class related to argparse.FileType. I would be interested in any suggestion. Keep in mind that I have more than 50 subcommands in my program all having there own CLI. Thus, I would be interest in deriving a class that could be imported in each of them more than adding some uggly tests in all my commands. Thanks a lot.
You could subclass the  class, and override the  method to do filename validation:You could also support a regex if you really want to, but using  is a more common and simpler test.This takes either a single string, or a tuple of strings specifying valid extensions:You need to handle this in the  method because the  instance is essentially treated like any other  argument; as a callable, and you can indicate that the specific argument isn't suitable by raising the  exception.
My solution is to create an closure that does the extension checking:Notes basically is a wrapper for It takes an expected extension to check and an opennerFor simplicity, the expected extension is in lower case, the filename will be converted to lower case prior to validation in this case is an  callable (most likely a function, but I don't care, as long as it is a callable). returns a callable, which is a function called . I name it this way, so that the error will come out as followed (note the word extension bellow, which is the name of the function):Within the  function, we check the file extension, if passed, we pass the file name to the .What I like about this solutionConciseRequire almost no knowledge of how  works since it just act as a wrapper around itWhat I don't like about itCaller has to know about closure to understand how it worksI have no control over the error message. That is why I have to name my inner function  to get a somewhat meaningful error message as seen above.Other possible solutionsCreate a custom action, see the documentation for argparseSubclass  as Martijn Pieters has doneEach of these solutions has its own strong points and weaknesses


Answer URL
https://docs.python.org/3/library/argparse.html#argparse.FileType
