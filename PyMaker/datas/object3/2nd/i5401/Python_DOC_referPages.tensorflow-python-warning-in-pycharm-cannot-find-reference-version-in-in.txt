Natural Text
I'm using thestatement within PyCharm, which is found in many of the TensorFlow GitHub examples, like so:This works great, I'm at TensorFlow 1.4.0 currently, if I run this script as above, the error message does not show, and if I change the  statement to, for example, 2.4.0 (which is not out yet of course) then the error shows as expected and the program exits.The problem I'm encountering is PyCharm shows the following warning on the if statement:Here is a screenshot:If I choose the PyCharm light bulb icon, I get these options:none of which are especially appealing.For the moment, I'm choosing the last option "Suppress for statement", which adds this line above the if statementMy concern here is I'm in the process of writing documentation that many other people will use, some of whom will be using PyCharm and some of whom will inevitably be using a different editor.For this reason, I can't alter any of the TensorFlow init.py files, because that would then create a custom install on my computer and anybody following my documentation would see different results on their screen if they are using PyCharm.  Further, I'm using pip to install packages so I'm not even sure if this is possible, but even if it is it's still not an acceptable choice.Similarly, I'd prefer not to include a comment line specific to PyCharm since that would cause confusion for those not using PyCharm.I'd really prefer to not disable this inspection entirely since I find PyCharm's warnings very helpful in many circumstances and therefore I'd rather not disable them.Upon Googling on this concern, I found this post.The suggested answers were to either edit an init.py file which I'd rather not do for the reasons mentioned above, or to change the import statement to be to the effect ofwhich does not seem to be applicable in my case since I'm importing TensorFlow entirely with the statementEven if modifying the import statement to prevent this warning is somehow possible I'd still rather not do this as this would cause confusion for non-PyCharm users and would make my examples different than all the other TensorFlow documentation and examples available.At the moment it seems this is the best I can do:Is there something I'm missing here?  Any suggestions as to a better way to do this?
 is generated dynamically, so the various  hacks are unlikley to work.  A simple hack to work around the warning is using getattr like:


Answer URL
https://docs.python.org/3/library/functions.html#getattr
