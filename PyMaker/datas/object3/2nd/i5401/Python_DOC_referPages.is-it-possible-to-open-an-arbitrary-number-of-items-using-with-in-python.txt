Natural Text
This question already has an answer here:Create a “with” block on several context managers? [duplicate]                    5 answers                I've got a situation where I have several items I'd like to open using a  block. In my case, these are external hardware devices which require some clean-up when closed -- but that doesn't really matter for the point at hand.Assuming a class something like:I would (given a fixed number of s), do something likeHowever, I've run across a situation where I have a flexible number of things I need to manage in this manner. That is, I have a situation similar to:However, the above doesn't quite do what I need -- which is to have  for all s in scope at one time.I've built a toy example which works through recursion:but I don't like the recursion or the abstraction of the actual function call. I'm interested in ideas for doing this in a more "pythonic" way.
Yes there is a more pythonic way to do that, using the standard library contextlib, which has a class ExitStack which does excatly what you want:This should do what you want.


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack
