Natural Text
Let's say I am having a list as:Here I want to remove every  which is preceded by every . So my resultant list should be like:I've found that in order to remove an element from a list by its value, we may use  as:But it gives me result with only removing first occurrence of  as:How can I achieve the desired result by removing all the occurrence of  which are preceded by all  in my list?
Try this:What it is doing is:1. merging the list into a string with 2. replacing all the occurrencies of 'no yes' with 'yes' by 3. splitting it back into a list with 
For removing all the occurrence of  which are present just before the  in your list, you may use list comprehension with  in Python 3.x (which is equivalent of  in Python 2.x) (having default  as ) to achieve this as :You might be interested in taking a look at the  document which says:Make an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with . Iteration continues until the longest iterable is exhausted. 
Iterate with the condition and append last item:
An interestingly roundabout way, using  with a :
Try this code ! I've also attached the screenshot of the output!The output: 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
