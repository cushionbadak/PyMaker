Natural Text
My goal is to make a dictionary that has keys that are correspond to each minute and the result of a calcuation of the last 3 values at each time.The calculation is to accumulate 1 if the series of the last 3 values at a moment does not continuously rise or fall.To simply put, if the last 3 values at a moment are like either ↘↗ or ↗↘, you add 1 to its key.For example, at 2018-01-22 01:01:56.264234, the last 3 values are 1, 2, 3 and they are increasing, you don't add 1. But at 2018-01-22 01:01:57.697656, the last 3 values are 2, 3, 2 and they are like ↗↘ and you add 1.The dataframe above will make a dictionary like:This is what I programmed to do this job and it works fine, but it takes too much time if the dataframe is big. I hope to know how I can improve this code and get better performances, for instance, using numpy arrays or better algorithms.FLOW CHART in cases i==0, i==2 and i==3
This might work. Iterating rows never seems ideal, but you might benefit from collections.
@jp_data_analysis Your solution looks very good. In addition, I suggest the following code for  which is simpler to understand:


Answer URL
https://docs.python.org/3/library/collections.html
