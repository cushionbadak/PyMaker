Natural Text
I am trying to create a Python distribution where I have to include both the source and the compiled binary. (Yes, I read arguments against/for adding , but my use case requires the  to be added). Running my steps in Windows, both the source and compiled binaries are added in the output file (I used both  and ).Say I have the following structure: contains source codes while  contains other files within its subdirectories.Steps done:Modules are compiled using Sources in  are removed. Sources in  are kept.Run I used  in setup.py to detect the modules. Modules in  are not detected while those in  are found.In the results  and  files in Windows, all the needed files are there. All is good.However, when the same procedure is done in Linux (Ubuntu to be specific), only the modules in  are added and some modules in  but not other files of different type and the module .  will give only the source while  and  will give the s only. I understand that  is for distributing source files while  is for binary files.My question is why is the behavior different in Windows and is it possible to produce the same output in Linux (source and  along with other files)?I am using Python 2.7.
To include files in sdist add them to MANIFEST.in:Including  into wheels works for me on Linux without any special configuration, I just doPS. If you're trying to hide sources from people â€” you're on the wrong track.  files can be decompiled. There is a disassembler in standard library and there are many decompilers and uncompilers out there.


Answer URL
https://docs.python.org/3/library/dis.html
