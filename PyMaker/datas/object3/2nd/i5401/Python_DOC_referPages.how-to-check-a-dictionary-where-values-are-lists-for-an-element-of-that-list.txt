Natural Text
If I have a dictionary where each value is a list, how can I check if there is a specific element in my list? For example:How can I check if  exists?
Check all valuesWe can use  and use it in a rather self-explaining one liner:Here we will chain the  of a list together in an iterable, and thus check membership of .Note that this runs in linear time with the total number of values in the lists. In case you have to perform the membership check a single time, we can not do much about it, but in case we have to check it multiple times, it is better to cache the values in a set (given the values are hashable).Check a specific keyIn case you want to check a specific key, we can just lookup the corresponding value and check membership:In case it is not certain if the key is present in , and we want to return  in that case, we can use  and use  (the empty tuple) as a fallback value:
You can use :This will stop the iteration and evaluate to  on the first find.  is the built-in short-cut for the following pattern:
It always strikes me as strange when someone wants to scan the values of a dictionary. It's highly unefficient if done many times.Instead, I'd build another dictionary, or a  for quick check:gives:now:is super fast and concise. Build as many sets & dictionaries as you need on your original data set to get a fast lookup.


Answer URL
https://docs.python.org/3/library/functions.html#any
