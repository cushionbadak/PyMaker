Natural Text
I have a Python class that I'd like to support rich ordering by one of its attributes. I could of course simply implement all the magic ordering methods like ,  etc. with that attribute as the key, but that seems a bit cumbersome and repetetive. Is there a way I can simply define that attribute as the ordering key once and have Python figure out the individual comparisons automatically?
If you're using Python3.2 or later, you can use functools.total_ordering.Given a class defining one or more rich comparison ordering methods,  this class decorator supplies the rest. This simplifies the effort  involved in specifying all of the possible rich comparison operations:The class must define one of __ lt__(), __ le__(), __ gt__(), or  __ ge__(). In addition, the class should supply an __ eq__() method.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__lt__
