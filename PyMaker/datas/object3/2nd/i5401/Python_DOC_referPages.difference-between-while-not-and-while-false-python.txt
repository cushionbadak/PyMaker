Natural Text
I am trying to distinguish between different ways of writing while loops.I am writing this specifically for a poker game where I distinguish between different hand types. When writing my  function, I start by saying . The only way I have found that continues the loop is if I say . For my  function I am able to set  and the  loop runs on  which continues the loop until  is not true any more. I have tried  but that didn't work. I want it to continue while  is  so when it has found a pair it will return as .I think the statement for  just looks cleaner and I am wondering if there is another way to incorporate that style into my pair function. 
Since your  loop did not work, you have found an important difference:  only tests true if  is set to  or  (the only two values that test as equal to ), while  tests for any truth value (inverting that value).You appear to have assigned some other value to  that is neither of those two values causing the behaviour to change (a truthy value to break out early, or a falsey value to keep the loop going longer than expected).It is that difference that is one of the reasons why the Python style guide recommends you always use  or  rather than use  or :Don't compare boolean values to  or  using .Yes:     No:      Worse:  Last but not least, for a  loop that simply tests against a single boolean flag ( or ), consider using  and  instead. So rather than do:do this instead:
Aside from actually having little or no difference at all,Using False in a == comparison allows usage of 0 and 1. Using not is inversion of current value. You can use in your program assuming that pair can only contain boolean values:If you however still want to use a variable that can contain both boolean and number, you can use:


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
