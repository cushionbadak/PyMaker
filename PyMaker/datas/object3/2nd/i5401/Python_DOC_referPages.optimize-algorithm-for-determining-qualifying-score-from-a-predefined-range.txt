Natural Text
Problem:You are given a list(1-D array) of scores(some numbers).You are given two more lists:lowerLimits : A list that contains lower limit value(s)upperLimits : A list that contains upper limit value(s)  Your task is to find out how many counts of scores fall within the inclusive range of each (lowerLimit[i], upperLimit[i]) pair.Example 1:Explanation:Three elements(3,5 and 6) in scores array, fall inside the inclusive range [2,6]Example 2:Explanation:All three elements(4,8 and 7) in scores array, fall inside the first inclusive range [2,8] and only one element (4) falls within the inclusive range of [4,4]. So the answer to be returned is the counts array [3,1].What algorithm have I attempted so far?Python 3 ImplementationProblem:I can only pass 3 out of 15 test cases with this brute-force algorithm. In fact, the code times out for about 7 test cases and returns incorrect result for the remaining failed test cases. Unfortunately, the server doesn't provide the list of failed test cases, so I can't accommodate logic for such cases. At present, I'm unable to think of any alternate strategy to tackle this problem. Could 
in short, dummy is not a boolean, and will probably evaluate to false when empty. I assume your script was only correct for empty arrays and arrays with 1 limit?
what are the other test cases? Hope this helps.
If anybody is interested, I found the solution. We are supposed to do binary search for correct indices, this would save time complexity. Here's the solution:https://raw.githubusercontent.com/reachsumit/digital-data-scientist-hiring-test-powered-by-hackerrank/master/Question%201/confirmed%20solution%20-%20Python/1.%20solution%20(jobOffers).py


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/reference/expressions.html#comparisons
