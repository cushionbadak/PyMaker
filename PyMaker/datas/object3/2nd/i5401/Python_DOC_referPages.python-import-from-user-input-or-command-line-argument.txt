Natural Text
I want one module to import data from another, but I don't want to hard code the name of the other module. I have attempted using , as in:but this gives me  under . I have also tried raw_input, as in:This results in . I checked that this is not due to the name being module. Other variable names have the same result.The name of the variable database will always be the same. I have successfully imported this variable by importing from the name of the module, but I would like this code to handle cases where the module name is different, as I can then use more than one, and the user is not obliged to use the same module name every time. Is there a way to do this? All the other questions I have seen do not address this specific issue, and I have not found any information in Python's help module either.
You can  to import a given module using a string:Import a module. The name argument specifies what module to import in absolute or relative terms (e.g. either pkg.mod or ..mod). If the name is specified in relative terms, then the package argument must be set to the name of the package which is to act as the anchor for resolving the package name (e.g. import_module('..mod', 'pkg.subpkg') will import pkg.mod). (emphasis mine) Also, as a side recommendation, if you plan on getting command line arguments from the user, use a dedicated command line argument parsing library instead of using bare . There are several good ones out there. In fact, Python has one in the standard library; argparse.


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.import_module
