Natural Text
when I read the code of redis-py (https://github.com/andymccurdy/redis-py/blob/master/redis/connection.py) , I learn how it implement connection pool,But a problem catches me , I can not understand the _checkpid() method forgive me that i can not copy all the code of connection pool. here is my thoughts, when it get connection from pool or release to pool, it will both check pid, i don't understand why. if it run in multiprocess, it does not need the lock and it will have many identical pool. and if it run in multi thread, it will  always get the same pid. any help is approciate.  
When a Unix process forks, it shares all sockets already opened in it with its children. So if you create a connection pool, then make a request, and then fork, you will have a problem: While pools themselves get copied between the new processes, the sockets in the pool do not get copied and are shared across processes. This can lead to a situation where one process writes to a redis client, and another waiting on the reply will get the wrong reply back.However, newly created sockets AFTER the fork, will not be shared between the parent and children. So by checking the pid, the pool checks if a fork has been made, and if so, resets all its sockets and creates new ones. This prevents very bad things from happening :)


Answer URL
https://docs.python.org/3/library/multiprocessing.html
