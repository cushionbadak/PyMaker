Natural Text
I’m trying to modify a piece of text to apply the following translation:That is, each  becomes a ; each  becomes a ; each  becomes a ; and so on.My script :Unfortunately it doesn’t work. For example if I write:i am noobThe return should be be:rznmllyBecause  gets replaced by ;  by ;  by ; etc.The result I get is:boonmai
Your approach has side effects, so does not do what you want.Take your first replace:Now consider the last replace:Hence ending up with only half the alphabet.You can simply replace all the s with  or slicing:If you are trying to translate as a means of a cypher then you can use  and , e.g.:Note:  is equivalent to The above is largely equivalent to:
Python has a string function called , which can be called by
Here is a functional way to accomplish the replacement:The problem with your code is that you are doing  so all the previously replaced characters get replaced back.
You can use python's slice to reverse a string:Edit: OK so the question is how to translate a string using a reversed alphabet. With this kind of problem the first that comes to my mind is building a dictionary to do the translating:


Answer URL
https://docs.python.org/3/library/operator.html#mapping-operators-to-functions
