Natural Text
I am trying to get a large file from the web, and stream it directly into the zipfile writer provided by the  module, something like:Apparently, this doesn't work because  accepts a  argument, not an I/O reader. However, since the file is rather large I don't want to load the whole file into RAM before compressing it.The simple solution is to use bash (never really tried, could be wrong):but it wouldn't be a very elegant, nor convenient, thing to put a single line of bash in a Python script.Another solution is to use  to download the file and then pass the path to , but that way I would still have to wait for the download to complete, and besides that also consume a lot more disk I/O resource.Is there a way, in Python, to directly pass the download stream to a zipfile writer, like the the bash pipeline above?
You can use  to efficiently copy data between file objects:This'll call  with a given chunksize on the source file object, then pass that chunk to the  method on the target file object.If you are using Python 3.5 or older (where you can't yet directly write to a  member), your only option is to stream to a temporary file first:Using a  like this only works on POSIX systems, on Windows, you can't open the same filename again, so you'd have to use a  generated name, open the file from there, and use  to clean up afterwards.


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.copyfileobj
https://docs.python.org/3/library/tempfile.html#tempfile.mkstemp
https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.open
