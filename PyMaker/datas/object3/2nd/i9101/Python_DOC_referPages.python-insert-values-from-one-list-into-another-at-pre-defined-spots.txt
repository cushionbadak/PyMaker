Natural Text
In Python (3.5), if I have a long list like this:and a shorter list equal in length to the number of '1's in the long_list, like this:How would I create a new list that "inserts" the values of my short_list into my long_list at each of the indices where there is a '1', and for consistency's sake, "replaces" the '0's in the long_list with some number (say 99).I could do this with an excruciating for loop, but it seems like there should be a way to do this more efficiently with a list comprehension, no?Desired output:
Turn  to an iterator and use list comprehension get value from there for each , else use fixed value:This obviously works only if  has the same amount or more elements as there are  on the . Above has O(n) time complexity where n is the amount of elements in . Note that this works the same for all kinds of iterables,  and  could have been generators and the end result would have been the same.
If you do not have a problem with changing , you can try the following using a list comprehension:Output:
Not that this is the best way, but it requires no new variables.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
