Natural Text
I'm trying to sort IP Addresses which I'm reading into a python script and printing out. The code that I've drafted up reads and prints the contents of a file (see example)My issue is how do I take that importing of IP Addresses and sort them correctly? At the command line I would normally pass the file through a simple sort command (sort -n -t . -k 1,1 -k 2,2 -k 3,3 -k 4,4 ). But how can I get python to sort the IPs it's reading from the file so the output is sorted correctly, taking into consideration the 0-255 numbering schema for each octet of an IP?Thanks,
If you do not want to use any external software and want a compact solution, you can always supply a lambda function as sort key.This assumes normal IPv4s in ip.txt separated by a line break.The resulting  ist a sorted list with the IPs. You can also output them to file like this:The output file could be the same as the input or a different file.
You can use the built-in ipaddress module:If you're using an older Python version (before 3.3), you may need my backport. Also note that this code employs the  statement for file I/O, as this handles errors correctly.With , the IP addresses are actually tested for validity. Also, the code can correctly handle IPv6 addresses (i.e. ) as well as esoteric representations such as , although you cannot mix IPv4 and IPv6 addresses.Alternatively, you can use a natural sort algorithm. This will not verify the addresses and may be incorrect, but works as long as you input is always IPv4 addresses in the form .
First off, depending on how you've stored the IP addresses, you would read them into a list. You can do this by slightly modifying the way you are reading in the IP addresses currentlyYou then want to remove the spacing characters (such as new line  from the end of the list items)Now that you have a list of IP addresses, you can use Pythons sort function


Answer URL
https://docs.python.org/3/library/ipaddress.html
