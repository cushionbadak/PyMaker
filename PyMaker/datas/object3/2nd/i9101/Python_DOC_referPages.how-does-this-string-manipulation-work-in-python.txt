Natural Text
In this part of code, a variable string for money is being converted into Decimal.What does the second line of this code actually mean?Why is the 'sub', the 'r', the apostrophes, the '^' etc. needed?
They delete all symbols from the string except numbers and dots, for example'$1,346.9 total' is converted to '1346.9'
In Python  means raw string, i.e. string where escape sequences are not valid. Compare for example:In the second case  interpreted as a notation for new line, while at the raw string it is just a slash and a letter . Find out more about raw strings for example here.The method  has been imported from module . At the top of your code you likely will find this line:In my opinion it is better to  and after access  as , this way it is unambiguous.The first argument of  is a regular expression. Regular expressions (regex) are a big topic, you can find excellent resources to understand them here or and here. What this particular regex does:defines a character class (between square brackets  and )tells that this character is not a digit ( means digit, same as ), and  means negation (not)then it tells that this character can be anything (dot  in regex means any characterThe so called regex engine will look for matches of this one character pattern, for example in  it will have 3 matches: ,  and . The second argument of  tells what to replace these matches with. Here you tell replace with nothing (empty string, i.e. nothing between 2 quote marks: ). The third argument of  provides the string you want to do this operation on. Then the result is passed to a method or class called , you can look this up in your code and find out what it does.Not part of the answer, but general advices how to handle better similar cases:If you want to understand a basic code like this, you can import its methods and try them one-by-one, or temporarily add  statements, reload the module and call the methods. For example let's say your module is called , and is in a directory with the same name or in a file , then you go to that directory, open a Python shell, and type:Then you can call any method from this module. Let's say you are wondering what is the variable , and what is its third element? Then add the line  or  above the lines in your post, and reload the module:Then you call the method where the code takes place, and you will see the content of the variable printed.Also if you see a method and you are wondering what it does, try to find out where does it come from, which module, and look up the documentation of the method. For example:And try to experiment directly with the methods directly in the shell, read the docs, try things and understand the error messages. Here is a guide what each types of errors mean.Finally, before asking a question here, always think: is there a chance that the answers will help someone else? Try to formulate the title and the question accordingly.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
