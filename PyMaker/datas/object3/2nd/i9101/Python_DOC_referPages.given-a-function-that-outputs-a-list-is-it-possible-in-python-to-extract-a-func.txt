Natural Text
For example, let's say I have a vector function mapping R2 to R2, for instance:I'd like something that allows me to do this:Note: I'm not asking how to iterate over the components of one out, which is trivial (for val in f(2,3):), but how to iterate over the functions computing each component in the output. Is this possible?
Well you could do some trick, although you will need to explicitly state the expected number of components, since there is no way to tell how many outputs a Python function will have (unless you do something like "probing" the function with test values, which is also a possibility but more complex):Then your loop could be:If you want to avoid repeating computations, you can use some kind of memoization. In Python 3 you can use :
You want a list of functions:To make this into s function accepting two arguments:If you want a list of functions, and not a function returning a list, then do that.
I don't think it's possible to do what you ask, since in this case there are not two different functions. It is one function with a list as output, taking the two arguments as input.You could make two different functions and concatenate this in one big function to get what you acces to two separate functions:
I found out sympy converts such functions into a list of sympy expressions, so I ended up doing the following:


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
