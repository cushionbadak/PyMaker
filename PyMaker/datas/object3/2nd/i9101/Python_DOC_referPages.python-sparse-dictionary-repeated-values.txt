Natural Text
I have a very, very large dictionary of dictionaries. Often the values are the same, and it seems there should be a way to reduce the size by having a reference to the dictionary value that is the same.Currently I do this with a two-pass method of "Does value have synonym" followed by look up value of synonym.But ideally it would be great to have a way to do this in a single go.I could have a value "mammal" that is used such that I said 'cat':mammal, but what I'd like to be able to do is 'dog':animals['cat']Because as a reference it should take up less memory which is the goal.I am contemplating a Class to handle this, but I can't be the first person to think that repeated values in a dictionary could be "squished" somehow, and would prefer to do it in the most pythonic way.
I think object and inheritance are the better way for doing what you want, except maybe for the concern of memory.For using reference instead of copying the values of each dictionary, you can use the ctypes module:Not sure if it is the "most pythonic way" btw. Imho class are the right way to do this.Another way can by with using the weakref module. I don't know a lot about this one, look this post and the different answers for others hints about using reference.


Answer URL
https://docs.python.org/3/library/weakref.html
