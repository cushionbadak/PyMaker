Natural Text
I'm writing a dynamic array implementation in Python (similar to the built-in list class), for which I need to observe the growth in capacity (which doubles each time the limit is reached). For that I have the following code, but the output is weird. It looks like the  never calls my class's . For the purpose of testing, I'm making the  return , but as per  it is non-zero.What's the catch?The code used to test the resizing:And the output:
Your  is getting called, it's just adding the garbage collector overhead to it which is why the result isn't zero.From the docs on : calls the objectâ€™s  method and adds an additional garbage collector overhead if the object is managed by the garbage collector.Returning  is one way in which you make it hard for your self to understand that it's called since you'll always get the same result back ( + overhead). Return a size based on the contents of the dynamic array to see it change.To further elaborate:Each object in CPython has some administrative information attached to it in a  struct that gets added:that is used by the garbage collector. Why this is added to the overall size is probably because it does represent additional memory required by the object. On the Python level, you don't need to worry about the collection of garbage and treat it all like magic, but, when asking for information on the size of an object you should not sacrifice correct results just to keep the illusion alive.


Answer URL
https://docs.python.org/3/library/sys.html#sys.getsizeof
