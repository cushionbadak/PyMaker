Natural Text
I want to define a function that accepts and arbitrary number of dictionaries but at least two and I want to iterate over all of them. Currently I'm just creating a list of the first two and append the optional ones:But I feel that's a bit unnecessarily complicated. I wondered if one alternative with checking the length of the  might be better because I don't need to create a new iterable:But still I don't feel like that's very convenient since I need to explain this somewhere because the function signature looks like it would accept an arbitrary number of dicts (even 0 or 1). So is there any way to have the signature of the first option without having to create a complete new iterable in the function?
The first approach seems fine to me, you can simplify it a tiny bit by using a tuple instead of a list for the first pair so you don't need an extra  call:And if you're just iterating, you don't need to make a temporary variable:
An option is to use :I don't think that this is any simpler, nor more efficient, than the first of your proposed solutions. And it requires an import. @tzaman's answer seems good.


Answer URL
https://docs.python.org/3/library/itertools.html?highlight=chain#itertools.chain
