Natural Text
This is my first day of learning python, with a decent amount of java background. This simple hangman program is working as intended, except for one frustrating problem. If your guess isn't the first letter in the word, you will automatically get a "strike", even if they letter was correct elsewhere in the word. I have pinpointed where and why the problem occurs, but I cannot seem to find a solution. If anyone has any tips they would be greatly appreciated.
you can check if a letter is in a word much easier with  ... I think you can refactor it just apply the following fixes ...get rid of  and replace with the rest is fine
I'd suggest making a bunch of changes. Let's take them in order of importance:It's not totally clear how you want to handle repeated letters. If the word is 'book' and I guess 'o', do I get one letter or two? Can I guess 'o' again?This will have an effect on how you store things. If you're doing "Wheel of Fortune"-type rules, where all the matching letters are revealed, you can just store the word as a string. But if you are going to require a separate guess for each letter, it will be better to have the actual word be modifiable, so you can mark them off. That means a list. (Array, in java)You're doing a bunch of repeated work. There are python idioms and operators for things like concatenating a bunch of letters:Also, iterating over a string or list checking to see if an item is contained:Also, iterating over a string or list to find the index of an element:There's also  for strings, which doesn't  exceptions. I'd recommend keeping score with an integer. You can create an array of possible hangman values and print the right one.There's this pesky bug:Take a hard look. The problem is indentation - you've got the second  statement inside the block of the . It should be afterwards, with some kind of "found/not-found" variable falling out. Otherwise, it checks the first letter and if not guessed goes right into the "grow the hangman" code.


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=str.find#str.find
