Natural Text
I'm practicing coding on codingbat.com since I'm a complete beginner in python, and here is one of the exercises:Given a string, return a new string made of every other char starting with the first, so "Hello" yields "Hlo".Here is my attempt at defining the function string_bits(str):Running the code gives an error. What's wrong with my code?
A different approach, with an explanation: If you need to handle a sentence, where spaces would be included, you can do this using slicing. On a string slicing works as: So, you want to jump only every second letter, so you do: The first two are empty, because you just want to step every second character.So, you can do this in one line, like this: What just happened above, is we take our string, use  to make it a list. The split by default will split on a space, so we will have: Then, what we will do from there, is using a comprehension, iterate through each item of the list, which will give us a word at a time, and from there we will perform the desired string manipulation per .The comprehension is: (documentation)Finally, we call  (doc), which will now change our list back to a string, to finally give us the output: Check out the slicing section from the docs: https://docs.python.org/3/tutorial/introduction.html
The problem is that the char += 2 returns a value greater than len(str) as len(str)-1 (the range) + 2 is longer than the string. You could do:A more succinct method would be:  You should avoid using 'str' as a variable name as it is a reserved word by Python. 
Ok, for me:You should not use str as a variable name as it is a python built-in function (replace str by my_str for example)For example, 'Hello' length is 5, so 0 <= index <= 4. Here you are trying to access index 3+2=5 (when char = 3) in your for loop.You can achieve what you want with the following code:
The error you are getting means that you are trying to get the nth letter of a string that has less than n characters.  
As another suggestion, strings are Sequence-types in Python, which means they have a lot of built-in functionalities for doing exactly what you're trying to do here. See Built-in Types - Python for more information, but know that sequence types support slicing - that is, selection of elements from the sequence.So, you could slice your string like this:Meaning "take my input_string from the start (:) to the end (:) and select every second (2) element"


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/tutorial/introduction.html
