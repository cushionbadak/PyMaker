Natural Text
So I'm creating a basic text-based RPG styled game.It utilises Rock-Paper-Scissors match-ups and level-based progression.Because this game is so grindy to get anywhere, and to aid in my black box testing I would like to create a save & load system. So I could save and quit the program and before it quit it would give me a code of all important details. And then when I returned to the program I could re-enter this code and return to where I was at.In my mind I imagine it to be similar to the system used in Lego games when creating characters, where there is a code accompanied with the character so that you can save the code and re-enter it to get the same character appearance back. However I'm relatively new to programming and am not sure if there's a better way to do this or how I would go about doing this.Here's my attempt at saving the code:And here's an example after I played through and got to this point:('Oliver', 'dark', 'Jim', 8, 3, 25, 14, 0, 5, 1, 1, 5, 10)I'm not sure how I would then load this though, I can imagine I should use something like:for the code that would normally play without a save-file, and that I'd need to change SaveLoaded to True if I loaded a save.But how would I get the program to identify and load in the code?Thanks in advance!
Considering you are looking to reclaim the state of your application, this sounds like a good job for pickle (or, similarly, dill).So, what this will do is dump your objects to a file, then when you reload this file, you will load these properties back in to memory. Now, with respect to what you are looking to do and based on the comment discussion. You can provide the user with some simple unique code like: which will point to your objects by setting up a dictionary. Now, another modification you can make to make it even easier to access your data is to name each of your values. I don't know what each of your properties mean, but here is a sample of what you can do: Take that data, and using pickle, dump this to your pickle file like this: When you are ready to load the data back, you simply use . Like this:Printing this data out: 
You can use the  module to first serialize the objects into a json string. Then, you can convert it into hexadecimal using the  module.  Encoding code: Decoding code: Demo:  EncodingDecoding
Basically you split string to parts with delimiter beeing comma. The you clean unnecesary characters (parentheses etc), convert it to crrect Data Type and assign to your variables, if you don't want to load, or your string is invalid (with invalid being too short) you set your values to your defaults.


Answer URL
https://docs.python.org/3/library/json.html
https://docs.python.org/3/library/binascii.html
