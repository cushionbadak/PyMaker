Natural Text
This question already has an answer here:Generate a large list of points with no duplicates                    4 answers                I'm trying to generate a list of  tuples of size  with the constraint that no two tuples are the same. Is there a shorter, Pythonic way to do this using a set comprehension or ? I currently have:
If the maximum values aren't too large to store the complete set of possibilities in memory (and it won't take forever to generate them),  and  can be used effectively here:If the  of the inputs gets too large though, you could easily exceed main memory; in that case, your approach of looping until you get sufficient unique results is probably the best approach.You could do samples of each  independently and then combine them together, but that would add uniqueness constraints to each axis, which I'm guessing you don't want.For this specific case (unique numbers following a predictable pattern), you could use a trick to make this memory friendly while still avoiding the issue of arbitrarily long loops. Instead of taking the  of two s, you'd generate a single  (or in Py2, ) that encodes both unique values from the  in a single value:This means you have no large intermediate data to store (because Py3 /Py2  are "virtual" sequences, with storage requirements unrelated to the range of values they represent, and  produces samples without needing to read all the values of the underlying sequence).
Your current code is probably good if the number of cities is much smaller than . If they're closer together though, it may waste a lot of time generating duplicate coordinates.An alternative approach would be to generate all possible coordinates and then sample from them:Generating the list of will always take , but it won't get worse if the number of cities increases.


Answer URL
https://docs.python.org/3/library/random.html#random.sample
https://docs.python.org/3/library/itertools.html#itertools.product
