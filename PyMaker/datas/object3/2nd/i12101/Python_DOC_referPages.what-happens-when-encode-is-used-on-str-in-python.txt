Natural Text
I got the point about unicode, encoding and decoding. But I don't understand why the encode function works on str type. I expected it to work only on unicode type.Therefore my question is : what is the behavior of encode when it's used on a str rather than unicode ?
In Python 2 there are two types of codecs available; those that convert between  and , and those that convert from  to . Examples of the latter are the  and  codecs.The  method exists to support the latter:But now that it exists, people are also using it for the  ->  codecs; encoding can only go from  to  (and decoding the other way). To support these, Python will implicitly decode your  value to  first, using the ASCII codec, before finally encoding.Incidentally, when using a  ->  codec on a  object, Python first implicitly encodes to  using the same ASCII codec.In Python 3, this has been solved by a) removing the  and  methods (remember that  is sorta the old  and  the new ), and b) by moving the  ->  encodings to the  module only, using the  and  functions. What codecs transform between the same type has also been clarified and updated, see the Python Specific Encodings section; note that the 'text' encodings noted there, where available in Python 2, encode to  instead.
Python realizes that it can't do an  on a  type, so it tries to  it first!  It uses the  codec, which will fail if you have any characters with a codepoint above 0x7f.This is why you sometimes see a  error raised when you were trying to do an .
In Python 3, encoding a bytestring simply does not work.Python 2 tries to be helpful when you call  on a  and first tries to decode the string with  (usually ascii) and afterwards encode it. That's why you get the the rather weird error message that decoding with ascii is not possible when you try to encode with utf-8.Ned explains it better than I, watch this from 16:20 onward.


Answer URL
https://docs.python.org/3/library/codecs.html#codecs.encode
https://docs.python.org/3/library/codecs.html#codecs.decode
https://docs.python.org/3/library/codecs.html#python-specific-encodings
