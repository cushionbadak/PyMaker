Natural Text
Let's say that I want to test this oh-so-complex function:One of the tests would be:However, this will create a local file called README which I clearly do not want.  Is there a way to mock/patch  so that no files are created?Clearly as a work around, I can make sure that the file is written to a temporary directory which I can either pass as an argument to  or create within  and return.Note that using the decorator , the following expectation is raised:I am passing a callback to  and not a function call.
So, considering that you do not care about what happens with your open, you can straight out mock it so it stops writing. To do this you can follow the similar approach you did with mocking your . So, with that in mind, you can set up your test code like this: As you can see, what we are doing here is that we are mocking with respect to where we are testing. So, with that in mind, we are mocking out  and  with respect to . Now within , nothing was changed: Running this test suite comes back successfully. 
Another approach involves using mock_open:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#mock-open
