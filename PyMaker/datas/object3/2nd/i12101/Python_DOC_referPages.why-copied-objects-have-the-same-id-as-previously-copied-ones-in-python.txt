Natural Text
I am trying to understand one observation.I have an application that loads various  classes which a user can later work with. These classes are located in several files.For example.I import, instantiate and copy these objects like this:Afterwards, a user works with each  object from  list. However, when I import and instantiate these objects twice (run the  loop again) I can see  is the same as previously imported and instantiated ones.This would not be a problem unless that each  has settings which should be unique for each instance and this is not currently happening. Whenever a user changes the settings in one  they are automatically changed in the copied one.Why is this happening and what am I doing wrong?
Using just  creates a shallow copy. You probably want to use deep copy when copying objects using .You can read in detail what's the difference here: https://docs.python.org/2/library/copy.htmlI don't know what  does inside so it's hard to tell what's going on when you run the same code twice when I can't try it by myself.
Regarding your note on running the  loop several times ad getting the same 's... It might not be the problem with , as it copies top-level object and 's for top-level mutable objects should differ, but 's for inner mutable objects will stay the same, unlike  where all mutable objects 's should differ. Probably it's the issue with the  itself...When you import a module in Python, it's imported only once. So when you issue the first import of the module 'some_module_a.py' it is imported, and then, when you issue a second import of the same module 'some_module_a.py' it's not imported again, but the reference to the already imported module is reused/returned.So if you need to re-import the same module more than once, import it for the first time and then use  to have it trully imported again.
 performs a shallow copy, meaning any objects will point to existing objects. If you want the objects inside it also to be cloned, you need to use . 


Answer URL
https://docs.python.org/3/library/copy.html
