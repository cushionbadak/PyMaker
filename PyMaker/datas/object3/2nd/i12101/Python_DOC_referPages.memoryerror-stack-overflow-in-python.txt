Natural Text
This is the code for MIPS Single cycle data path processor. It is implementing IDEA algorithm (ASM code). I have numerous function calls and the whole architecture runs this assembly IDEA code for 16 times. I am getting this Stack overflow error. Previously i was getting a Recursion depth error but it got solved using the set.recusionlimit() function. The code seems okay but i dont know why it is giving me a Stack overflow error. Assembly code runs fine in a different assembler.MemoryError: stack overflow
You are getting the stackoverflow because you set the recursion limit too high. You can't set it as high as you like Set the maximum depth of the Python  interpreter stack to limit. This limit prevents infinite recursion  from causing an overflow of the C stack and crashing Python.The highest possible limit is platform-dependent. A user may need to  set the limit higher when they have a program that requires deep  recursion and a platform that supports a higher limit. This should be  done with care, because a too-high limit can lead to a crash.If the new limit is too low at the current recursion depth, a  RecursionError exception is raised.Changed in version 3.5.1: A RecursionError exception is now raised if  the new limit is too low at the current recursion depth.Your real problem was that you are hitting the recursion limit. Why didn't you just post that traceback?You appear to be using function calls like goto. Python doesn't do tail call optimisation so this technique won't work.


Answer URL
https://docs.python.org/3/library/sys.html#sys.setrecursionlimit
