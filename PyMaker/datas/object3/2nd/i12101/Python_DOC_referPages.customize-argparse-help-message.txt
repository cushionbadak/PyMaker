Natural Text
I have written the following sample code to demonstrate my issue.This produces the following help message.I want to customize this help output such that it capitalizes all phrases and sentences, and puts period after sentences. In other words, I want the help message to be generated like this.Is this something that I can control using the argparse API. If so, how? Could you please provide a small example that shows how this can be done?
First of all: capitalising those phrases flies in the face of convention, and  isn't really tooled to help you change these strings easily. You have three different classes of strings here: boilerplate text from the help formatter, section titles, and help text per specific option. All these strings are localisable; you could just provide a 'capitalised' translation for all of these strings via the  module support. That said, you can reach in and replace all these strings if you are determined enough and read the source code a little. The  action includes a default  text, but you can supply your own by setting the  argument. The same applies to the  action; if you set the  argument to  you can add that action manually:Next, the  message is a group title; each parser has two default groups, one for positional arguments, the other for optional. You can reach these by the attributes  and , both of which have a  attribute:Be warned, by accessing names starting with an underscore you are venturing into the undocumented private API of the module, and your code may break in future updates.Finally, to change the  string, you'll have to subclass the help formatter; pass the subclass in as the  argument:Demo, putting these all together:
Martijn has give a couple of the fixes that came to mind - the providing the  parameter, and a custom Formatter class.One other partial fix is to modify the help string after the argument is created.   creates and returns an  object that contains the parameters and defaults.  You can save a link to this, and modify the .  You can also get a list of those actions, and act on that.  Let me illustrate, for a simple parser with the default help and one other argument, the action list is:I can view and modify the  attribute of any of these:producing this help:Using the  list uses a 'private' attribute, which some people consider unwise.  But in Python that public/private distinction is not tight, and can be broken with care.  Martijn is doing that by accessing the .Another way to change that group title is with custom argument groups


Answer URL
https://docs.python.org/3/library/gettext.html
https://docs.python.org/3/library/argparse.html#add-help
https://docs.python.org/3/library/argparse.html#formatter-class
https://docs.python.org/3/library/argparse.html#help
