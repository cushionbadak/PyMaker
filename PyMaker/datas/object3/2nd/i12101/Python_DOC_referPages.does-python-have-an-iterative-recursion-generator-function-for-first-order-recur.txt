Natural Text
Is there a built in function or standard library function roughly equivalent tooror even justin any version of Python? (The latter is as good as the other two when combined with .)A generator function like these would allow to compute certain recursively defined sequences iteratively, namely first-order recurrence relations.While these aren't too hard to implement when needed, I feel like something like them should be part of  or maybe , but if it is, I haven't been able to spot it in the documentation, yet.Usage examples:Should also work with non-number elements:
The missing link is that you need something to convert your recursive stepping function into a generator.  Once you have that, then you can use any of the itertools methods. is probably a reasonable thing to propose adding to .
In Python 3.3+, the new  can be used to this purpose in combination with the other itertoolsFor example: takes a sequence and a function with 2 arguments: The first is the accumulate value and the second is the next value in the sequence. In this case, we only need the first argument, which will be the first element of the sequence passed to  for the first call of the passed function and the return value of that function for subsequent calls.Thus, we only need the start of the passed sequence to be our initial value â€”  in this case. The content of the rest of the sequence is irrelevant, but we can use it's length to control how many elements we want (as in the first example) or to create an infinite generator (like the second example).
The functional package provides the pieces to simulate this.For example,( isn't really any different from .)


Answer URL
https://docs.python.org/3/library/functional.html
https://docs.python.org/3/library/itertools.html#itertools.accumulate
