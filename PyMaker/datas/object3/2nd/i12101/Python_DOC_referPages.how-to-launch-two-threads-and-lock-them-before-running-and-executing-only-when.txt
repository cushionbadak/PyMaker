Natural Text
I have this example code to explain my problem:What I'm having some issues is the following:I want to have two threads (thread1 and thread2) that are launched at the beginning of the program, but they should wait until the   reaches 5 or 10.When the   reaches 5 or 10, it should signal/trigger/unlock the threads, and both  should run just once and then wait until a new .I was expecting the code to have the following output (Each line is 1 second running):Instead I have a different behaviour, such as starting with:(etc)And after 5 seconds the A lot of times...Can someone help me explaining what is wrong and how can I improve this?
In __init__() of thread1 and thread2, start() is invoked before self.lock is assigned.t1 and t2 are created before the main thread acquires the lock. That makes these two threads start printing before the main thread locks them. It is the reason your code print the first several lines of "write done by x".After the counter reaches 5, the main thread releases the lock, but it never locks it again. That makes t1 and t2 keep running.It never quits unless you kill it...I suggest you to use Condition Object instead of Lock.Here is an example based on your code.


Answer URL
https://docs.python.org/3/library/threading.html#condition-objects
