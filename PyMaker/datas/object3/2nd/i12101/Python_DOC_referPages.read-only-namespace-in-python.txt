Natural Text
What does read-value mean in the context of names?Like in the above example x in not the namespace of . Do variables in namespaces have types such as read-only/ writeable etc?Quoting official docs: "To rebind variables found outside of the innermost  scope, the nonlocal statement can be used; if not declared nonlocal,  those variable are read-only (an attempt to write to such a variable  will simply create a new local variable in the innermost scope,  leaving the identically named outer variable unchanged)."Reference: https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces (5 th last paragraph)
No, variables don't have 'properties' like read-only or write. The namespace implementation may disallow direct manipulation, but that's something entirely different.The  and  statements let you override the scope of a variable; without these Python will make a name local if it is being bound to.  Binding actions include assignment,  loop,  and  statement targets, function arguments and imports. Changing the scope doesn't alter if a variable is read-only or not, it merely changes the scope that manages the variable.  means it'll be stored in a parent scope and made a closure.The term read-only used by the quote you found is very misleading; assignment clearly still alters the local variable. The presence of local doesn't make the same name in the parent scope not writable, it is simply not visible in the innermost scope. It's disappointing that this is from the official tutorials; I've reported a bug to see this corrected.


Answer URL
https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces
