Natural Text
Say I have list of tuples: Is there a way in Python to write something likewhere  means "I don’t care about this value"? So we are checking if there is a tuple with  at the first position and with whatever value on the second one.As far as I know there are special mechanisms in other languages, but I just don’t know the name of this particular problem. So is there similar behavior in Python?P.S.: I know that I can use list comprehensions here. I am just interested in this particular mechanism.
A placeholder object like you're asking for isn't supported natively, but you can make something like that yourself:The  method defines how two objects test for equality. (See https://docs.python.org/3/reference/datamodel.html for details.) Here,  will always test positive for equality with any object. (Unless that object also overrode  in a way to return False.)The  operator merely calls  for each element in your list. I.e.  does something like:This means that, if you say , Python will first compare  to the first element in . (Tuples, in turn, define  to return True if all its elements'  return True. I.e.  is equivalent to , or .)Hence,  will return True, while  will return False.Also, note that I renamed your list  instead of  to prevent name clashes with the Python built-in .
You can use the  function:This efficiently tests and exits early if  is found in the first position of a tuple.
Not all of my solution methods provided below will be necessarily efficient. My goal is to demonstrate every possible solution method I can think of - at the end of my answer I provide "benchmark" results to show why or why not you should use one certain method over another. I believe that is a good way of learning, and I will shamelessly encourage such learning in my answers.Subset + hash s, and anonymous functions and anonymous functionsMICROBENCHMARKSConditions1000 items100K repetition0-100 random rangePython 2.7.10, IPython 2.3.0ScriptResults (in seconds)Who's got the last laugh now? ... Martijn (at least I tried)MORAL OF THE STORY: Don't spend more than 10 minutes "proving" your inferior solution is faster and more efficient on a small test data, when another user's answer is the de-facto correct one
This can be done in Python using list comprehension.ex:Will give you:
Indexing is the simplest but if you wanted to use syntax similar to your example where you wanted to  assign the first value to a variable and ignore the rest you could use  python3's extended iterable unpacking.Or with the any logic:Or mimicking any without the function call:
number of element in tuple could be handled also.
It sounds like you actually want , not :The filter() method is great because you can provide a function directly to it. This lets you specify a certain key to filter on, etc. To simplify it further, use a lambda expression to make the entire thing into a one-liner.


Answer URL
https://docs.python.org/3/reference/datamodel.html
