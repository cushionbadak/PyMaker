Natural Text
I'm trying to a create dictionary from a nested list.  However, I'm running into an issue with appending values to my dictionary because they are strings. Is there a creative solution to this? Perhaps splitting up my strings into another list? I'm trying to return:

The value of each dictionary entry needs to be another collection.  A list or a set depending on expected behavior with duplicates.This is the closest to you current code.  An slightly improved version is:Given that  is already used by the language, and that  elements are not lists but tuples (triplets in your particular case).  For the same reason, you can also write:Finally, you can use a  (a dictionary that automatically initializes the value corresponding to a key when it is referenced for the first time).If you are going to use the dictionary later to check for the presence/absence of keys, your have to keep in mind that for a  all keys are always present (created when they are queried).  The best solution in this case is to copy the  to a regular one with:
This is a case for :Gives us:The  creates the list for the values if it doesn't exist, meaning we can do this really easily by just looping over the list and appending the values to the key. It acts exactly as a normal dictionary in every other way, but if you need a normal dict, you can just use  on it.


Answer URL
