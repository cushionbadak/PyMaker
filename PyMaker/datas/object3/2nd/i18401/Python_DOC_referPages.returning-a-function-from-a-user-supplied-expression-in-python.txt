Natural Text
So I'm working on writing a program that will need to take an expression as user input, and evaluate that expression as values change over in-program time.  There will be many of these expressions. There will be a "play" function to have time move forward, so I'd like to keep things fast(ish) which usually means "find something somebody else wrote", but I'm certainly not against writing my own stuff.I'm expecting things like this as inputI've looked into tokenizing, and building ast's and such, but I'm apparently missing that last step where I get a function that can be evaluated over and over as multiple inputs change.Any shove in the right general direction will be most helpful.  Thanks!
If you don't mind the input format being Python, there's an ast module that could do the parsing for you. The literal_eval helper safely executes the AST or source code string. This question has some stuff on manipulating scopes with functions, if it helps.
I've done something like this to apply arbitrary filtering rules against events to see if actions needed to be taken in response. The event and relevant context would be passed as arguments to a function compiled from an arbitrary expression wrapped in a lambda.Here is a mock wrapper to show how this might look within your larger program:prints:Of course, all the standard warning about using eval apply.


Answer URL
