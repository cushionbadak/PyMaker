Natural Text
I know there is this question, but not only they're not working, it's not exactly what I want. I'm developing a racing game and want to load all tracks from a folder dynamically (They're stored as .py instead of .json). I don't want to know the names of the tracks, since users can mod/add them at will. I just want to import their data. So, for example:Inside each track, I have data like this:I need to import each track module like this:And then access a given  like this:If I knew Python was going to be so harsh with its imports, I'd have used json instead .py.
Python does not automatically import submodules contained in a package.Hence  only loads .However you can put code inside the  file that imports all the modules it finds in that directory.For example putting something like this in the :Should make your submodules available as  when importing only .Or you could use :A cleaner approach would be to use import hooks or implement your own custom module importer. There are multiple ways to do this using  see also 
The problem of dynamically importing modules is faced usually when frameworks have a plug-in or add on system for the community to contribute. Each plug-in or add-on is a module containing classes and functions compliant with the framework's architecture and api.With that in mind, the solution for "joining the dots" between the framework code and arbitrarily many add-ons is through the  present in the python standard library. You seem to face the same structural problem.Here is a stackoverflow question that was answered with .And the documentation.
Just for the sake of the good wellfare of future pythoners, I'm posting how I've solved. A friend helped me through it. Coudln't make Bakuriu's solution work, because the modules came empty. Inside  I've put:And then, on the main file, I've loaded it as:And then:That actually solved it quite well. I was almost switching to JSON / giving up.


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.import_module
https://docs.python.org/3/library/sys.html?highlight=path_hooks#sys.path_hooks
https://docs.python.org/3/library/importlib.html
