Natural Text
In python3's ,  can't call the  method.  I've read other issues about circular references,but I can't find the situation in .  There is a circular reference in ,  will be called when   is called directly,but in  the  will never be called.Output:call foocall foodelwhy  is not called in ?
Forked  objects terminate after running their task using , which forcibly terminates the child process without the normal cleanup Python performs on exit. Cyclic garbage isn't cleaned (because the process is terminated without giving the cyclic GC a chance to run), it's just dropped on the floor, leaving the OS to clean up.This is intentional, since exiting normally (invoking all normal cleanup procedures) would risk stuff like unflushed buffers getting flushed in both parent and child (doubling output), and other weirdness involved when a forked process inherits all the state of the parent but isn't supposed to use it except when told to do so explicitly.
The question isn't actually why it isn't called in , but why it is called in the other example. And the answer to that is that it isn't called when you call . It's called at the end of the program. Since the program is finished, Python knows that anything else can be cleaned up even if it's still referenced, so it cleans up circular references.If you add a  statement at the end of the script, or call this from the REPL, you can see that  still isn't called at your second  call either, but only at the end of the script.Given that Python cleans up circular references when the script ends, ShadowRanger's answer explains why that doesn't happen when the multiprocessing function is finished.


Answer URL
https://docs.python.org/3/library/os.html#os._exit
https://docs.python.org/3/library/gc.html
