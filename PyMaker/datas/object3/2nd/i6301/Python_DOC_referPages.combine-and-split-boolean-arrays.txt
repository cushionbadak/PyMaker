Natural Text
I have a list of boolean arrays constructed using the numpy where function, e.g.:A few notes:the real arrays have something like 10 000 elementsthere are several "true" windows on each arraythe "true" windows might overlap from array to arrayall arrays have the same length LI need to:1) combine all arrays into one single array with length L that will contain all "True" values2) recover for each "True" window the inicial and final indexany ideas?Thanks!EDITThe expected result is:    R = [False,True, True, True, True, False, True, True, True, False]In terms of code:Output:the desired result:
I am not sure what you mean when you say "Combine all arrays into one single array with length L that will contain all "True" values".  However, the the second item, recovering the initial and final indices for all true windows was kinda fun:
Let us first simplify your example to a case where there is an overlap between two .so from what I gathered from the question, the expected  would be:as that is where the  window's start and finish is (  and ).To achieve this result, we need to first   in order to gt a   of the  . This is done with . Which gives:Now, we need to find the  where the  flips  (i.e.  or ). To do this with, we can compare the  of  without the   to the  of  without the  . Then use  on this  to get the  of  change. N.B. the above technique was originally from this answer` by @Kith.So to implement that, we can do the following:which gives us the  of  change:which is actually one off as it is where the  changes, so before the start of the first .We then need to chunk this  into . This is done with :which gives us a  of  of   indicating the start and finish of a :


Answer URL
https://docs.python.org/3/tutorial/index.html
