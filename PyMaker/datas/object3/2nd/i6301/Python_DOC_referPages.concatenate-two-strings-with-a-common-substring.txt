Natural Text
Say I have strings,The result should be something likeI was thinking different ways using  and string search.(Longest common substring problem)  But is there any simple way (or library) that does this in python?  To make things clear i'll add one more set of test strings!the result would be!,
This should do:OUTPUT :or, make it a function so that you can use it again without rewriting:OUTPUT :
This should do what you want:Examples:
Using  and :If you were to account for trailing special characters, you'd be wanting to employ some  based substitution.Although note that this would remove all special characters in the first string.A modification to the above function which will find the longest matching substring (instead of the shortest) involves traversing  in reverse.
Other answers were great guys but it did fail for this input.output:However there's this standard library  which proved to be effective in my case!output:
which words you want to replace are appearing in the second string so you can try something like :with the first test case:output:second test case:output:Explanation :first, we are splitting the second string so we can find which words we have to remove or replace :second step we will check each word of this splitter string with string1 , if any word is in that string than choose only first string word , leave that word in second string :This list comprehension is same as :last step combines both string and join the list:


Answer URL
https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher.find_longest_match
