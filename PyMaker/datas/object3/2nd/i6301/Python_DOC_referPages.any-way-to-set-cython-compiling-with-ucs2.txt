Natural Text
Hit problem when convert python code to shared object by Cython.setup file here:So everything works fine on my Ubuntu desktop util transferred to CentOS.Got error:undefined symbol: PyUnicodeUCS4_DecodeUTF8I googled and find there are many questions on this, but, almost all of them say the root cause is python with UCS2 or UCS4, and I understand this, didn't find one show the way to solve this.IMO, ways to solve:rebuild python to get the right version by "--enable-unicode=ucs4/ucs2"But I need to reinstall all packages Compile the code from another desktop whose python with the right UCSNow, I wanna if there is way to set Cython to compile with specified UCS mode.Any suggestions is great appreciated.Thanks.
First, to answer your actual question:I wanna if there is way to set Cython to compile with specified UCS mode.You can build a separate python installation from source and link Cython against its headers. To find the headers, you can use the  tool (or  for Python 3). It is usually located in the  directory where the  executable is:Copy the output to the :However, I do not recommend doing that as you won't win anything by doing that - you will still need to build and distribute two separate packages (one for UCS2, another for UCS4) which is messy to maintain.Instead, if you are building a wheel that should be installable on a wide range of Linux distros (what is most probably your actual goal), I would suggest to make your build compliable with PEP 513 ( packages).I suggest you to read it through as it was very helpful for me when I faced the problem of distributing Linux-compliant wheels.Now, one way to get a -compliant wheel is to build the wheel on your machine, then running  to check for platform-specific issues and trying to resolve them:This should generate a wheel file named  in a  directory. Check again that everything is fine now by running . If the wheel is now consistent with , you can distribute it and it should work on most Linux distros (at least those with glibc; distros with musl like Alpine won't work, you will need to build a separate wheel if you want to support it).What should you do if  can't repair your wheel? The best way is to pull a special docker container provided by PyPA for building -compliant wheels (this is what I'm using myself):A wheel built inside this container will work on most of the Linux distros (excluding some exotic ones like Alpine).


Answer URL
https://docs.python.org/3/using/unix.html#building-python
