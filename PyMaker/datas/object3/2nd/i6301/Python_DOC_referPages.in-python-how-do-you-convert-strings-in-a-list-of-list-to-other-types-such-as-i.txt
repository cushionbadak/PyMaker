Natural Text
When given a list of data, I'm being asked to convert strings within the list to a corresponding type, such as int if the string contains a whole number, or a float if it doesn't contain a whole number. But I'm running into this problem where it will convert the value but it doesn't change the original value in the list.For example, if given:It's supposed to look like this after the conversion:So far I've tried to write a for loop and convert the values that way but as I mentioned it doesn't change the original list:I'm not really sure how to fix the problem or if it's there's another way to go about it. Any help would be appreciated! Thank you :) 
You need to update the items at the initial indices using list subscription i.e. assigning to each index after casting the item. You can do this using  which supplies each item in the list with a corresponding index: tries to parse each string item as a Python literal, if that fails (with error), revert to the original item (see EAFP).If you have a large number of these strings, it would be faster (although with less cleaner code and maybe prone to errors) to write your own parser, however, it's probably better to let  do all the dirty work.
Here without any libraries. Just slice the things and some try-except tricks.  checks if the  is , if it's not, then that means it is . For  and , just checking if they are in the list. This can be done shorter, I just made it this way so you can see how it works.Output;
Try This ( No Library Needed ):


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/ast.html#ast.literal_eval
https://docs.python.org/3/glossary.html#term-eafp
