Natural Text
I have an  file containing thousands of lines of information. Every so often I find in the output file information of the following formÂ¨I now want to save the  to a variable for subsequent formatting. Another thing is that I am only interested in the last pattern in my file. I have a solution for doing this with  and , but that leads me to maving multiple files for carrying out one job. This job should be doable with python, but I have no idea where to start reading and to learn this.EDITI have been reading up on regular expressions, and believe it or not I have made some progress! I first read in the file line by line, then reverse the list, and then join all strings that make up that list. I now end up with just one big, multiline string. Next I use the  module to make my regex , which I think means the following: my first pattern is "Distance matrix", then a subpattern where zero or more of all characters are matched, but in a lazy way (stop after first match), and then my last pattern "Input orientation". Sample data file for testing:
Regex isn't necessary here. All you need is good ol' indexing. Python strings have  and  methods that take a substring, finds it in the text, and returns the index of the first character in the substring. Reading this doc should get you familiar with slicing strings. The program could look something like this:The last line of that code finds the first occurrence of  starting from the end of the file, since we used , and moving towards the front and marks that position as an integer. It then does the same with . It then uses those integers to return only the portion of the string that rests between them. in the case of your example file it would return:If you don't want the  header, you can simply add to the result of  until you get the desired result. That could look like , for instance.It is also important to note that  and  throw errors if the substring is not found. If that is not desired, you can use  and .


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.rindex
https://docs.python.org/3/tutorial/introduction.html#strings
