Natural Text
Suppose I compile some python files ( to  / ) containing code using modules like NumPy, SciPy, MatPlotLib. If I execute them on another configuration (i.e. the client), is it required that versions of modules are the same ? Or have I only to be in the range of compatible versions ?
 and  files are just cached bytecode. Python's import machinery is built entirely around strings, and this leaves code that executes an import decoupled from whatever library they import.So those files are no more tied to the version of the libraries they import than the source code itself. If the source code works with a wide range of versions of the library, so will the compiled bytecode.You can always take a look at what bytecode Python generates with the  module. A straight-up  statement becomes:The  opcode takes the name from the  structure that is attached to a code object (stored in the cache too):It doesn't matter here that the  module consists in large parts of dynamically-loaded libraries; if you replaced the name  with something else that would be imported instead. Modules are loaded at runtime, not at compile time after all.
Even as compiled bytecode, names in modules are still strings. As long as the interfaces of the modules are compatible the code will still work with different module versions.


Answer URL
https://docs.python.org/3/library/dis.html
https://docs.python.org/3/library/dis.html#opcode-IMPORT_NAME
