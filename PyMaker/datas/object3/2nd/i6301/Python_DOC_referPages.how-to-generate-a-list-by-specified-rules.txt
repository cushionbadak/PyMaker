Natural Text
How to efficiently generate a list by the specified rules?Rules:num 20 occurs with step 2 in the list num 40 occurs with step 4 in the list num 60 occurs with step 8 in the listnum 80 occurs with step 16 in the listThe end result of a list of length 15 should look like this:The "step" rules are always a power of something. In this example is power of 2.So, let's say we have it written as:How do we efficiently generate such a list?
Since you mentioned step rules are always powers, there is a rule to find where each element starts (appears the first time).As you see each new element appears first where . Knowing this, one could easily fill the empty list using indices and steps.Replace the power with your other cases, and the ,  for python 3 usage.If you store the values and the steps inside a list, you can do this process with two nested for loops, no matter how many rules are there.The complexity of this is , should be enough, however because I don't know the original problem, I cannot give more.


Answer URL
https://docs.python.org/3/tutorial/index.html
