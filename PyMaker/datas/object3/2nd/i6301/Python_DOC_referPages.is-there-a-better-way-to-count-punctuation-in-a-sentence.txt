Natural Text
I want to count 'end sentences' e.g. full stops, exclamation marks, and question marks. I have written a little loop to do this, but I was wondering if there is a better way. Not allowed to use built-in functions.
Assuming you want to count terminal punctuation in one sentence, we can produce a dictionary of (character, count) pairs by looping over the characters of each string and filtering the punctuations.DemoHere are three options presented top-down with intermediate- to beginner-level data structures:To extend further, for a list of separate , loop around one of the latter options.Note: to sum the total punctuations per sentence, total the , e.g. .Update: assuming you want to split a sentence by terminal punctutation, use regular expressions:Notice  has 5 terminals, but only 3 sentences.  Thus regex is a more reliable approach.ReferencesList comprehension


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#defaultdict-examples
https://docs.python.org/3/library/re.html#re.split
