Natural Text
I was working on a practice problem in a website and got stuck at a point.The question is:Position Digits SumThe program must accept two positive integers as the input and then  print the sum of their unit digits, tenth digits and so on.Input Format: The first line will contain A and B separated by a  space.Output Format: The first line will contain the sum of unit digits,  tenth digits and so on with the values separated by a space.Boundary Conditions: 1 <= A,B <= 9999999Example Input/Output 1: Input: 23 49Output: 12 6Example Input/Output 2: Input: 12456 687Output: 13 13 10 2 1Well I solved the problem but out of 6 test cases (which are hidden) 5 cases passed and 1 didn't.This is my code:I am a beginner, so I only used simple python code which made it to too long.I checked but didn't get what is wrong in it. Any help?
It could be done in very simplified way using  in Python 3.x ( equivalent of  in Python 2.7) as:Explanation: with step to step intermediate results in the above list comprehension expression:Type-casted  values to  in order to make them iterable. Reversed both the iterables so that they could be iterated in parallel with the correct power of 10 (required in next step).Then used them with  in order to iterate both the iterables in parallel. For example: Using , type-casted each string value in the above sub-list back to  as:Then, using , added values in the above list:
I didn't analyse your code in depth, but it contains invalid constructs like here:here you're changing  while iterating over it, for instance.Me, I would split, then compute the longest integer first, to zero-fill value, then interleave digits together (but starting by the end, hence the reverse operation) sum and convert back to string to pass to result:
import java.util.*;public class Hello{public static void main(String[] args) {//Your Code Here}}This is the correct code for Position Digits Sum


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
https://docs.python.org/3/library/itertools.html#itertools.izip_longest
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functions.html#sum
