Natural Text
I have encountered something mysterious, when using patch decorator from mock package integrated with pytest fixture.I have two modulesin func.py:in test_test.pyIt seems that patch decorate is not compatible with pytest fixture. Does anyone have a insight on that? Tnanks
I had the same problem and solution for me was to use mock library in 1.0.1 version (before I was using unittest.mock in 2.6.0 version). Now it works like a charm :)
When using pytest  with , test parameter order is crucial.If you place a fixture parameter before a mocked one:then the mock object will be in  and  will be search as a fixture:But, if you reverse the order, placing the fixture parameter at the end:then all will be fine.
As of Python3.3, the  module has been pulled into the  library. There is also a backport (for previous versions of Python) available as the standalone library .Combining these 2 libraries within the same test-suite yields the above-mentioned error:Within your test-suite's virtual environment, run , and make sure you aren't using the backported library alongside the core unittest library. When you re-run your tests after uninstalling, you would see s if this were the case.Replace all instances of this import with .
This doesn't address your question directly, but there is the pytest-mock plugin which allows you to write this instead:
Hopefully this answer on an old question will help someone.First off, the question doesn't include the error, so we don't really know what's up. But I'll try to provide something that helped me.If you want a test decorated with a patched object, then in order for it to work with pytest you could just do this:Or for multiple patches:pytest is looking for the names of the fixtures to look up in the test function/method. Providing the  argument gives us a good workaround the lookup phase. So, to include a fixture with patches, you could do this:This worked for me running python 3.6 and pytest 3.0.6.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#module-unittest.mock
