Natural Text
I get this pep8 warning whenever I use lambda expressions. Are lambda expressions not recommended? If not why?
The recommendation in PEP-8 you are running into is:Always use a def statement instead of an assignment statement that  binds a lambda expression directly to a name.Yes:No:The first form means that the name of the resulting  function object is specifically 'f' instead of the generic '<lambda>'.  This is more useful for tracebacks and string representations in  general. The use of the assignment statement eliminates the sole  benefit a lambda expression can offer over an explicit def statement  (i.e. that it can be embedded inside a larger expression)Assigning lambdas to names basically just duplicates the functionality of  - and in general, it's best to do something a single way to avoid confusion and increase clarity.The legitimate use case for lambda is where you want to use a function without assigning it, e.g:For simple operations, the  module provides some useful options in ,  and  which can often replace labmdas that are just accessing attribute(s), item(s) and calling methods. For example, the above could be done with  like so:
Here is the story, I had a simple lambda function which I was using twice. This is just for the representation, I have faced couple of different versions of this.Now, to keep things DRY, I start to reuse this common lambda. At this point my code quality checker complains about lambda being a named function so I convert it into a function. Now the checker complains that a function has to be bounded by one blank line before and after. Here we have now 6 lines of code instead of original 2 lines with no increase in readability and no increase in being pythonic. At this point the code checker complains about the function not having docstrings. In my opinion this rule better be avoided and broken when it makes sense, use your judgement. 
Lattyware is absolutely right: Basically PEP-8 wants you to avoid things likeand instead useHowever, as addressed in a recent bugreport (Aug 2014), statements such as the following are now compliant:Since my PEP-8 checker doesn't implement this correctly yet, I turned off E731 for the time being.
I also encountered a situation in which it was even impossible to use a def(ined) function.In this case, I really wanted to make a mapping which belonged to the class. Some objects in the mapping needed the same function. It would be illogical to put the a named function outside of the class. I have not found a way to refer to a method (staticmethod, classmethod or normal) from inside the class body. SomeClass does not exist yet when the code is run. So referring to it from the class isn't possible either. 


Answer URL
https://docs.python.org/3/library/operator.html#module-operator
https://docs.python.org/3/library/operator.html#operator.attrgetter
https://docs.python.org/3/library/operator.html#operator.itemgetter
https://docs.python.org/3/library/operator.html#operator.methodcaller
https://docs.python.org/3/library/functools.html#functools.partial
