Natural Text
Here's a line of code in Python:What does it mean?This program comes from a stack exchange post:https://cs.stackexchange.com/questions/1984/proving-the-intractability-of-this-nth-prime-recurrence/29054#29054It puzzles me because I am wondering why the programmer did not simply codeSorry, I am new to Python... if this may sound obvious to some people...
This is returned:The returned value is a tuple, with the first value being 2, and the second being the lambda function.
I assume that this question has been downvoted for vagueness. I generally understand "What does it mean?" in a programming context to mean "How do I parse this?" so I'll answer from that perspective.Strip  from the statementAll that a  in python really means is "whatever follows on this line is the result of the function". It's a statement, not a function call, so don't try to fit it into your parsing of the line. should really be read as a statement that the expression  is being returned.The question therefore becomes this: What is the expression ?(I've added a space for readability -- Python doesn't care about whitespace around commas, although you should, by convention, follow commas with spaces)Python Tuples don't need parenthesesPython's tuple type does not require parentheses. So  is the same as There are two expressions, therefore, bound in a tuple:  and .You can read  as  -- they are exactly the same.What is ?It's two.What is ?This is python's syntax for "lambdas" or "anonymous functions".Python practice really discourages the use of lambda bindings, and I'd generally advise you not to do so. Lambdas are really useful, but they're a bit broken in python and will run you into trouble.The basic syntax is the keyword, , a comma-separated list of arguments, , and a result expression.In this case, the comma-separated arguments are just , and the result expression is the constant .You could rewrite this lambda asShort answerSo, the tuple returned by this statement has a constant integer as its first element, and a function which takes one argument and returns  as its second element.If you want a deeper explanation of any of these components, you'll have to be more specific in your questions. "What does it mean?" is very vague, and hard to answer in any complete way.
Try it in the shell. It is pretty self explanatory:


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-return-statement
https://docs.python.org/3/reference/expressions.html#expression-lists
