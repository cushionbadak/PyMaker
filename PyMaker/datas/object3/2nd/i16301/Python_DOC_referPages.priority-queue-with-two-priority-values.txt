Natural Text
As it is good known, elements which are inserted to the priority queue have a value which determines its priority. For example if I have five elements  with priorities (let's call this priority values ):.But how can I write a priority queue where I can define two priority values, I mean:if two elements has the same value of , then value  decides which element should be taken first, like for example:then first element B will be taken from the queue first.
Starting from Python2.6, you can use Queue.PriorityQueue.Items inserted into the queue are sorted based on their  method, so just implement one for the class whose objects are to be inserted into the queue.Note that if your items consist of tuples of objects, you don't need to implement a container class for the tuple, as the built in tuple comparison implementation probably fits your needs, as stated above (pop the lower value item first). Though, you might need to implement the  method for the class whose objects reside in the tuple.EDIT:  As @Blckknght noted, if your priority queue is only going to be used by a single thread, the heapq module, available from Python2.3, is the preferred solution. If so, please refer to his answer.
The usual way to do this is to make your priority value a tuple of your two priorities. Python sorts tuples lexographically, so it first will compare the first tuple item of each priority, and only if they are equal will the next items be compared.The usual way to make a priority queue in Python is using the  module's functions to manipulate a list. Since the whole value is compared, we can simply put our two priorities along with a value into a single tuple:This prints .


Answer URL
https://docs.python.org/3/library/heapq.html
