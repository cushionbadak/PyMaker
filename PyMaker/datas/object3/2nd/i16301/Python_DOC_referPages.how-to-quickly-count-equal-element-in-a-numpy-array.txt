Natural Text
I have a python matrixI would like to compute for each couple of rows the number of time they have the same element. In this case I would get a 4x4 matrix proximity This is the code that I am currently using. I need a faster solutionEDIT: The accepted solution does not work in this example 
Warren Weckesser offered a very beautiful solution using broadcasting. However, even a straightforward approach using a loop can have comparable performance.  is slow in your initial solution because it does not take advantage of vectorization. However the following fixes it:You could also use a list comprehension to make the above code more concise. The difference is that  would loop through all the rows in a non-optimized manner, while  will take advantage of  speed. The solution from Warren Weckesser truly shows 's beauty. However, it includes the overhead of creating an intermediate 3-d array of size . So if you have large data, the simple loop might be more efficient.Here's an example. Below is code offered by Warren Weckesser, wrapped in a function. (I don't know what are the code copyright rules here, so I assume this reference is enough )Now let's evaluate the performance on an array of random integers of size 10000 x 100.I ran both examples in an  environment on the same machine. 
Here's one way, using broadcasting.  Be warned: the temporary array  has shape , so if  is 4000 and  is 1000,  will require 16GB of memory.Also note that this solution is inefficient:  is symmetric, and the diagonal is always equal to , but this solution computes the full array, so it does more than twice as much work as necessary. 


Answer URL
https://docs.python.org/3/library/itertools.html
