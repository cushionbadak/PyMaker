Natural Text
So right now I've hardcoded 4 if/elif/else statements.  There there a more dynamic way to do this?  For example if I wanted to do a 10 or eve a 40 way merge?
Just use :
Using your own code pattern, extend it to a list-based approach like this:Note that this will merge the entire files, rather than stopping as soon as one file runs out.
Thanks for the tips everyone, here's my solution:As a benchmark I tested this in a file with about 6.5 million lines (~700MB), paging it into 500,000 line files, then quick-sorting those in lexicographical order, and sort-merging (well just merging really) those with the code above, so about 128 files were merged, ( I had a 2 billion line file but accidentally deleted it, when deleting the pages files), and it sorted the file and found duplicates in 16 min: This was my first script of this nature, I'd be very happy if you could give me some feed back as if that page size was appropriate, and if the sort methods used were correct.  The page files were generated and sorted quickly, however the merging the most time.


Answer URL
https://docs.python.org/3/library/heapq.html#heapq.merge
