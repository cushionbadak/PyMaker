Natural Text
I want to perform a power operation combined with a modulo.  I have trouble performing this  function with real numbers.This works fine for integers: However, this returns an error with real numbers:I have tried also the  function but it doesn'twork either... how can I get this to work with real numbers ?
The python function  accepts 2 or 3 arguments. In your case,  does  power  and applies a modulo  to the result.  But the documentation is explicit:  If the second argument is negative, the third argument must be  omitted. If z is present, x and y must be of integer types, and y must  be non-negative.So:  Your first call works fine, because the arguments comply with the requirements.  Note that despite  being a huge number,  the result of the combined modulo operation can be calculated easily without overflow, by using properties on modular exponentiation of integers. Your second call fails with an error, because the first argument is not an integer. The workaround would be to decompose your operation into , because modulo is defined for real numbers.  Unfortunately,  is too big and causes an overflow error. This is because contrary to the python integers which are of unlimited range, real numbers are limited by the range of the C floating point encoding.  P.S.: I assumed that it's about python and not VB, because VB's  accepts only 2 arguments.  Edit: hint for a workaroundHere a little workaround that makes use of the fact that technically, a floating point number is not a mathematical real of unlimited precision, but a rational number.  We can then make use of the numerator and denominator and use integer operations to master the huge numbers: The result is 271.048181 to the 6th digit.  I let you as an exercise the writing of a function that performs this in a less artisanal way.   


Answer URL
https://docs.python.org/3/library/functions.html#pow
https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations
https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy
