Natural Text
As mentioned here https://stackoverflow.com/a/4150322/1526342. When logging to child logger, it will pass on the message to its parent, and its parent will pass the message to the root logger.Now considering the following example should have reported back to the root logger instead of printing the output to the child_logger's log file.I'm confused.
As shown in this logging flow chart, loggers pass log records both to own handlers and to parent logger objects. Try adding a handler to the parent logger, you'll see the log record is being processed there as well.
In this case, your 'child_logger' is your root logger. If you had initialized it like so: is a child of  as defined by:The name is potentially a period-separated hierarchical value, like foo.bar.baz (though it could also be just plain foo, for example). Loggers that are further down in the hierarchical list are children of loggers higher up in the list. For example, given a logger with a name of foo, loggers with names of foo.bar, foo.bar.baz, and foo.bam are all descendants of foo. The logger name hierarchy is analogous to the Python package hierarchy, and identical to it if you organise your loggers on a per-module basis using the recommended construction logging.getLogger(). That’s because in a module,  is the module’s name in the Python package namespace.If you do not want a child to propogate, you can set  = .Furthermore, if you would like only certain levels written to your child logger file (i.e. only debug) but you want higher level to still propagate, you could create a subclass of a handler, as in mine here:(Yes, I know there are some improvements that can be made, this is old code.)For example, executing  would print nothing to the debug_logger's specified file, however, if 's level was set to info, or debug, it would print it out in it's file. I use this for debug logging, whilst still retaining the ability to have the logger make error message calls and print those to the root log.


Answer URL
https://docs.python.org/3/howto/logging.html#logging-flow
