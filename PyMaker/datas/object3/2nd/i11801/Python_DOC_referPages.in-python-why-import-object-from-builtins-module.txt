Natural Text
In order to transition to python 3, I am trying to understand writing python 2 and python 3 compatible codes. The following code is from  and illustrates a way to construct an iterator that would be compatible with both versions of python.The code runs fine in python 2, but to my surprise, if i remove the import statement then i get an error . I often derive my custom classes from  but i have never imported it from builtins. Why does simply importing  change the behaviour of the code?
You are (indirectly) importing from the  module; it provides a custom  baseclass that adds forward-pointing special names.In Python 2, iterators must have a  method (as well as ); this method was renamed to  in Python 3. By not using the  version you are simply missing the  ->  alias provided in Python 2.See the source code for :Note that  will return standard built-in objects if you are running Python 3, the module only returns shims like these for Python 2.You could simply add that same alias yourself:


Answer URL
https://docs.python.org/3/library/stdtypes.html#typeiter
