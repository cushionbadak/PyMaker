Natural Text
("dezip" is obviously a bad name, but I'm not sure what the right one would be. Please excuse me if that means I've missed an authoritative answer by not knowing what to search for.)Let's say we have(common in django for choices etc.)Now we want a list of "keys" or list of the first elements: In python 3 I'm usingThe zip way doesn't seem very neat, particularly with the extra  required by python 3 making zip an iterator. The second comprehension approach is slightly more readable but wouldn't generalise as well, eg. return lists of the the second, third elements etc. in the same call.Is there a better way?(where "better" mainly means clean and readable but performance might also have some considerable)
Using , you can get the first item from the iterable:alternative using  with :BTW,  solution without  should work:
For the particular example, you can "abuse" a little bit the :And then you have a nice data model. This has some problems: keys cannot be repeated, and won't work with tuples with more than two elements. But for this case (which is quite typical!) works very nicely.Then you can simply get the keys by doing :or, explicit list, either:which are equivalent.
Getting a subset based on ids may be done by . Getting a subslice of zipped values may be done by creating explicit slice object and pass it to function.To demonstrate function usage:If you'll drop 'list of indices' requirement, you may drop if statement in function body.


Answer URL
https://docs.python.org/3/library/functions.html#next
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/operator.html#operator.itemgetter
