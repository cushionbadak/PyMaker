Natural Text
Currently, I'm hooking up sensors to an Arduino Mega and printing the readings through serial to a Beaglebone Black. I need the data to have timestamps in such a manner as seen in the Arduino's serial monitor. For instance: arduino serial monitor.For testing purposes, I'm simply telling the Arduino to continue printing the right column to the tx pin (but not the timestamp.) The beaglebone then receives that data through it's UART1 pins. What I've told the beaglebone to do is print a timestamp in milliseconds and then what it receives from the Arduino.What I get is this: Beaglebone's output file.Obviously, something is very wrong here. I'm getting values that should definitely not be anything other than 1, and the timestamps are not okay.The relevant parts of the code I wrote:I'm pretty sure the time.time() function isn't right to use. What I'm looking for is something that starts a timer of sorts and outputs the milliseconds that have elapsed since the start of the program and the receipt of data from the RX pin. My question is does that even exist in Python? All I've been able to find is time.time() or time.clock() but those don't seem to work. The Arduino-IDE has a function called millis() that does exactly that, but it doesn't seem Python has an equivalent in terms of functionality.
What I'm looking for is something that starts a timer of sorts and outputs the milliseconds that have elapsed since the start of the program If you have access to Python 3 then use: is not affected by system clock updates.


Answer URL
https://docs.python.org/3/library/time.html#time.monotonic
