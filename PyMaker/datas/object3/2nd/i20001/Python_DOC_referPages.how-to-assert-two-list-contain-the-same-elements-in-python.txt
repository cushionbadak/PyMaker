Natural Text
This question already has an answer here:How to efficiently compare two unordered lists (not sets) in Python?                    9 answers                When writing test cases, I often need to assert that two list contain the same elements without regard to their order.I have been doing this by converting the lists to sets.Is there any simpler way to do this?EDIT:As @MarkDickinson pointed out, I can just use TestCase.assertItemsEqual.Notes that  is new in Python2.7.If you are using an older version of Python, you can use unittest2 - a backport of new features of Python 2.7.
Slightly faster version of the implementation (If you know that most couples lists will have different lengths):Comparing: 
As of Python 3.2 (doc) has been replaced by (doc) which does exactly what you are looking for, as you can read from the python standard library documentation. The method is somewhat misleadingly named but it does exactly what you are looking for.a and b have the same elements in the same number, regardless of their orderHere a simple example which compares two lists having the same elements but in a different order.using  the test will succeedusing  the test will fail due to the order difference of the two listsHere a little example script.Side Note : Please make sure that the elements in the lists you are comparing are sortable.
GivenIn Python >= 3.0In Python >= 2.7, the above function was named:In Python < 2.7
Converting your lists to sets will tell you that they contain the same elements. But this method cannot confirm that they contain the same number of all elements. For example, your method will fail in this case:You are likely better off sorting the two lists and comparing them:Note that this does not alter the structure/contents of the two lists. Rather, the sorting creates two new lists
Needs ensure library but you can compare list by:ensure([1, 2]).contains_only([2, 1])This will not raise assert exception. Documentation of thin is really thin so i would recommend to look at ensure's codes on github 


Answer URL
