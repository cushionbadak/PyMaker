Natural Text
For this functionI want to, external to the function, read its arguments and any default values attached. So for this specific example, I want to know that  has no default value (i.e. that it is a required argument) and that  is the default value for .I'm aware of , which does give me information about arguments and default values, but I see no connection between the two:From this output how can I tell that  (in the  tuple) is the default value for ?Additionally, I'm aware of the "ask for forgiveness" model of approaching a problem, but unfortunately output from that error won't tell me the name of the missing argument:To give context (why I want to do this), I'm exposing functions in a module over a JSON API. If the caller omits certain function arguments, I want to return a specific error that names the specific function argument that was omitted. If a client omits an argument, but there's a default provided in the function signature, I want to use that default.
Python3.xIn a python3.x world, you should probably use a  object:Python2.x (old answer)The args/defaults can be combined as:Here  are the arguments with defaults values and obviously  are the corresponding default values.You could even pass the output of  to the  constructor and create a mapping suitable for keyword unpacking.looking at the docs, this solution will only work on python2.6 or newer since I assume that  returns a named tuple.  Earlier versions returned a regular tuple, but it would be very easy to modify accordingly.  Here's a version which works with older (and newer) versions:Come to think of it:would also work and may be more intuitive to some people.
You can use  module with its  function:Get the names and default values of a Python functionâ€™s arguments. A  of four things is returned: .  is a list of the argument names (it may contain nested lists).  and  are the names of the  and  arguments or .  is a tuple of default argument values or  if there are no default arguments; if this tuple has  elements, they correspond to the last  elements listed in .See mgilson's answer for exact code on how to retrieve argument names and their default values.
to take care of keyword-only args (and because defaults and kwonlydefaults can be ):
In python, all the arguments with default value come after the arguments without default value. So the mapping should start from the end till you exhaust the default value list. Hence the logic:gives the correctly mapped defaults.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.Signature
