Natural Text
Does Python have a builtin type for representing symbolic values, when strings cannot be used?A quick implementation of my own would look likeUsecaseSuch symbols are useful when a value – say a keyword argument or a list entry – needs to be initialized to a value that indicates that it hasn't been explicitly set.If the values have constraints on allowed types, commonly  or some string would be used, but if any value is allowed, some other unique object is needed. My common method is to use an  assigned to some private variable, but the symbol pattern is more convenient for debugging due to providing a meaningful printed representation.As an alternative, one could use e.g. a tuple  and compare against it with the  operator, but this wouldn't work e.g. for dictionary keys.While the pattern is simple enough to copy/paste into each shell-script I am writing, a builtin solution with established behavior would be preferable.Non-builtinsI know, that there are packages that provide a symbol type. An obvious one would be the symbol type of , and there is https://pypi.org/project/SymbolType/. However, adding dependencies to avoid a 5-line pattern seems a heavy overkill, hence my question about a builtin type.
You could use the enum library:https://docs.python.org/3/library/enum.html


Answer URL
https://docs.python.org/3/library/enum.html
