Natural Text
tricky name and unclear name...My issue is the following:This code is creating as many results lists as there is an input. Each input is actually associated to a list. Then the computation is performed 2 by 2 (on each subset) and the result is added to the corresponding list.It works well as long as there is no repetition in the inputs because the method  returns the first occurrence of the element. How could I implement this differently (and efficiently, performance is one of the main issue I have) in a way that manage duplicates?Dummy example:Output:Expected output:

If I understood this correctly, then you want to cycle between the repeated s every time they are returned as part of .One way to do this is to create a dictionary with the item as key and its indices stored in a list. Once we have this dict we can apply  to the list and then use  to cycle between an items's indices:Output:
in the docs you have a recipe for combinations that uses permutations[1]. you just modify it to return indices[1] https://docs.python.org/3/library/itertools.html#itertools.combinations


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.cycle
https://docs.python.org/3/library/itertools.html#itertools.combinations
