Natural Text
Easy question, is it possible to remove an object from memory and setting all remaining pointers to it to undefined?  
You cannot explicitly free memory in Python.If you want to call  without having other references to  preventing it from getting garbage collected, you may want to check out . 
In case you are looking to create some sort of 'cancelable' object that can be invalidated and cause all subsequent attempts to use it to get either a None value or an error, you can do that (after a fashion), but your code will have to be disciplined not to get a direct reference ever, but always refer to the object in a special way, for example:Now, this "works" on the condition that you never (EVER) do  and always pass around  as a whole.(If you know in advance the data type and it is always the same, e.g., , you can do a bit better and have the custom object respond to things like x["key"], x.update(some_dict), etc., i.e., look like a regular dict, but still able to call x.destroy() and make it fail further attempts to access. Advanced stuff, I won't write a whole article here on this, not even knowing that I made a correct guess as to what you really need).


Answer URL
https://docs.python.org/3/library/weakref.html
