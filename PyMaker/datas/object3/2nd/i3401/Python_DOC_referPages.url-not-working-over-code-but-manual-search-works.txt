Natural Text
I am trying to take a string input in my python code to be converted and implemented into a URL to search the string on the website. The website I am using is songbpm.com and what I want is to search a song and I receive the speed of the song. Finding the relevant information within the HTML is not the problem, I have already finished this and my url creation is working, which is here:The urls, which are returned are identical to the url when I manually enter the search input on the website, however, when I run this code, it always reads the html data for the no results redirect. Also, if I paste the computer-generated URL into the browser, it redirects to the no results page, however, after searching the same string by hand in the browser, the computer-generated url works as well (when retrying).What I have also observed is that after manually opening a certain URL, I can run the code with the same search query and it works - it seems as if searches are cached for a certain amount of time if a user, not a code opens it.How do I tackle this issue of the code, although generating the exact URL, not being able to open webpages similar to the user. 
The site has a few extra requirements to make a suitable request. Firstly it uses cookies, so a  is needed. This can be loaded by first requesting the homepage without making a search. This also then gives you the value for  which is needed when submitting the request form. Lastly, the POST request can be generated from your input search by using  to build  correctly:Which would give you the following results:Using  makes it easy to extract all the details.  is just a quick way to get certain items from a given list.
Okay,  I don't know what kind of magic is driving this website, but you can use a headless browser and instead of looking for the song in the url you can type the name of the song that you are looking for in the search-box, and it will work! sorry I didn't get your question rightHere is a 100% working code :) have fun 


Answer URL
https://docs.python.org/3/library/http.cookiejar.html?highlight=cookiejar#module-http.cookiejar
https://docs.python.org/3/library/urllib.parse.html?highlight=urlencode#urllib.parse.urlencode
