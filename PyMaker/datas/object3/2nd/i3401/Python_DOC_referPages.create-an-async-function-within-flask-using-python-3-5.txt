Natural Text
I am attempting to update a Slack App for my company that will query our API, perform a few calculations, and spit out a nice report. The problem is that the report takes about 7-10 seconds to run and Slack only allows a 3000ms timeout on a slash command.This isn't a huge problem though, because you can respond immediately with a message acknowledging the command and then when the report completes respond again.The rest of our Slack app is written with a Flask backend and hosted on an Ubuntu 16.04 server, so we run Python 3.5. The code I've found that demonstrates how to do what I want uses the Zappa library, which looks like it's for AWS's lamdba, uses a  decorator to force a function to be asynchronous. Unfortunately, it doesn't run on less than Python 3.6.Example code from the tutorial:My question: How can I make the  asynchronous in Python 3.5? It doesn't have to be a decorator, though it wouldn't hurt for future use. 
As I've understood from brief look at Zappa, a  decorator doesn't make a function async, but is just an interface to Zappa's executor. In pure Python, ThreadPoolExecutor and ProcessPoolExecutor seem very similar to it.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor
