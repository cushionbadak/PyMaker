Natural Text
Let us say i have a list:and i already have some code that will make the list be displayed like this:So is there a way for me to remove every 0 from each row and add it back in the end(even if there are different values in the list) so that the board now looks like:I want to do this using a loop and not individually having to write separate code for each row.Also can you do this without making the initial list toThe code for 1 row would be :
You can use :Output:
Sometimes there is nothing wrong with a simple loop:
Just for fun, here's a one-liner using some of Python's functional tools. The key ingredients are , , and , all of which come from the Functional Programming Modules section of Python's standard library documentation.Most of the work here is in turning the linear representation of the board into a nested list-of-lists representation, and then turning it back again. Here it is step-by-step.First, turning the flat representation into a nested one:I've added that extra outer  call just to show the contents of the  iterable. It's not necessary once all the steps are put together. Now sort each row with a suitable key to move the zeros to the right:Again, the outer list call is unnecessary, and we'll lose it when we put everything together. A key point here is that Python's  function provides a stable sort, so the nonzero elements stay in the same order with respect to each other. Finally, flatten back into a list:Putting this all together, and removing the unnecessary inner conversions to list, you get the one liner at the top of this post.


Answer URL
https://docs.python.org/3/library/functions.html#sorted
