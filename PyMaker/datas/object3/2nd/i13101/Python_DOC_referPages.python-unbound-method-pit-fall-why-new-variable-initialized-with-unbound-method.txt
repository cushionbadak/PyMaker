Natural Text
This question already has an answer here:id()s of bound and unbound method objects â€” sometimes the same for different objects, sometimes different for the same object                    2 answers                Please take a look at code, you will get whole message what I am trying to convey.OutPut: Here, why the variable a is not referring Foo.fun. As I know variable assignment is like increasing reference count. i.e, new variable will start pointing the object unlike in language c.            So, as we are assigning Foo.fun to var a, a and Foo.fun both should point same object in the memory. But results are unexpected. While this assignment works well with normal function. Here is the code id's of objects are different for unbound method assignment.OutPut:
In python 2,  is what's called an "unbound method." All methods, bound and unbound, are created dynamically every time you call  or  so a new method object is created on every call.In python 3 the idea of "unbound methods" is dropped and  simply returns a function. In this case, you'll get the behavior you expect. ( still returns a method object in python 3.)


Answer URL
https://docs.python.org/3/reference/expressions.html#id19
