Natural Text
I noticed by chance that a simple program generating a class from a large datafile ran a lot faster in Python 2.7 vs. 3.5. I read here that the use of "infinite precision" integers was to blame for slowdown in simple enumeration, but even when I tried a simple test instantiating this class I found that Python 3 was significantly slower:I thought perhaps it was something to do with the size of each class instance, but the Python 3 instance was smaller than 2 (56 vs. 64)I have tried many variations on this theme, including with 3.4 on a different machine, and still get the same results. Any ideas what's going on?
You are not measuring class instantiation time, you are measuring class instantiation, plus assignment, plus list creation, ...Here's a correct benchmark:As you can see, Python 3 is sightly faster.


Answer URL
https://docs.python.org/3/whatsnew/3.3.html#pep-412
