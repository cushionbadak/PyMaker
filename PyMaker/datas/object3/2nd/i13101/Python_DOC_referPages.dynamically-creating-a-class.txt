Natural Text
I have a function which returns me two lists, symbols and data where the corresponding values are with the same index. For example  gives the variable name and  gives the actual value ().I would like to use these two lists to dynamically create a class with static values of the following format:and so on so that I could later refer to the values like this:where  and  should be replaced with the wanted variable name, like  or How could this be achieved?Edit: added detail belowSo I have a main program lets say def main() which should read in a list.dat of this style:and separate the values to symbols and data lists.So I don't know how many values there are exactly in these lists. I want to create a class dynamically to be able to refer to the values in the main program and to give the class to sub functions as an argument like def sub1(NewClass, argument1, argument2) etc. At the moment I am using a manually created simple python list (list.py) of the following format:and then using from list import * in the main program and also in the sub functions, which causes a SyntaxWarning telling me that import * only allowed at module level. So what I actually want is a smart and consistent way of handling the parameters list and transferring it to another functions
You can create a class dynamically with . If I understand what you want to achieve here, your code will look like:
I suspect what you actually want, re-reading the description, is to use  as follows:Given a minimal example:The outcome would be:Using  allows you to easily create a dictionary from a list of keys and a list of associated values, which you can use as the  for your new class.However, it's not clear why you want this to be a class, specifically.


Answer URL
https://docs.python.org/3/library/functions.html#type
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#type
https://docs.python.org/3/library/enum.html
