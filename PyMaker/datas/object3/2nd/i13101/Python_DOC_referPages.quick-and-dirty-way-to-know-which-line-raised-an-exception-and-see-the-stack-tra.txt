Natural Text
Let's say I have a really basic program that will throw an exception for sure.  I've added a pdb.set_trace() to it and I want be able to look around when an error occurs.My problem is when I catch the exception, I am already at the except clause and I don't really know where the error actually happened.  Typically, I will look around a bit, but if I want to see the stack trace, I need to resume execution and wait till the program crashes.  Is there a better way?OK, let's start out at the exception.  I could put a message on assert, in this particular case, but that's beside the point.At this point, I have no idea which of the two lines errored out.Let's try where.  It returns the current location, not where the exception happened.Let's print line 16, just to be sure:In order to actually know where I am, I can let pdb (c)ontinue and check out the exit stacktrace.  But now I am out of pdb entirely.  Is there a simple way to get that info from the exception itself instead?  Before continue-ing?
How about:That should print a traceback for the exception that is currently being handled (the one that triggered the  control block).If typing the commands in , it will try to interpret the second one as a  command. Prevent this by adding a  in front of the command.For reference, the traceback module.


Answer URL
https://docs.python.org/3/library/traceback.html
