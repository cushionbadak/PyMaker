Natural Text
When I'm reading xrange reference, it says like this..Objects of type xrange are similar to buffers in that there is no specific syntax to create them, but they are created using the xrange() function. They donâ€™t support slicing, concatenation or repetition, and using in, not in, min() or max() on them is inefficient.However, as long as I have ever seen, all the xrange() that I have used is with in. Like ..So why it says this way is inefficient? So what is supposed to be the right way to use xrange?
Quoting Perfomance Tips: is a generator object, basically equivalent to the following  Python 2.3 code:Except that it is implemented in pure C.They say that  is inefficient on  objects because  tries to iterate over object if the  approach failed. From Membership test details:For classes which do not define  but do define  ,  is true if some value  with  is  produced while iterating over . does not implement  and in order to "find" element N in   operator has to perform N iterations sois logically equivalent toand it's not efficient. is inefficient because  is inefficient.Note that performance of  operator for containment tests doesn't affect the performance of the  loop. These are 2 different things.In fact, the  in the grammar rule for the  loop (shown below)is fixed and is not an operator.
No, what they've actually meant iswhich is a test for "contains". It is inefficient since it has to travel through all elements in the worst case.It is not about  loop which is correct and efficient. I suppose that the doc is a bit misleading.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__contains__
https://docs.python.org/3/reference/expressions.html#membership-test-details
https://docs.python.org/3/reference/compound_stmts.html#the-for-statement
