Natural Text
I am writing a wrapper to a C DLL from Python that I wrote as a singleton. Most of the functions in this library return a negative value in case of error. When an error occurs, I would like to get the error description though the  function.This works well but I would like my wrapper to be a bit less boilerplate. For each function I have to rewrite the same thing:Log the debug messageCheck the exit statusIs there a way to make this implementation better without using The final goal is to auto-generate this wrapper from the library codebase where I will be able to export the docstrings properly. 
You may want to look at the  module for some built-in functions that can help.In Python, functions are first-class objects and so can be passed around and acted on like other objects.  One step here would be to put the common code into a function.  Something likeThe  function can take care of "partially" calling a function at one time, then finish the arguments at a later time.  It might be a little tricky to combine bound methods with functools, but it might be nice and compact.A decorator may be useful here, especially if you need to to any other processing in Python before calling into your library.Note that I haven't tested any of this code, so it may contain typos or some oversights but should provide some ideas for ways to implement cross-cutting concerns in Python.


Answer URL
https://docs.python.org/3/library/functools.html#module-functools
https://docs.python.org/3/library/functools.html#functools.partial
