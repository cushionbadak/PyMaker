Natural Text
I am making a program that checks to see if any of the user's input is in the file.  If the user input is not currently in the file, then we will append that input into the used_passwords file and ask the user to type something else again.  else if they retype the input we just recently added(or any of the presets) then we want to tell them that they can't reuse a password.The problem I am having with this code is that whenever I type a letter that is from the word in the used_passwords file or if I type a part of the word in the file then the program tells me that I can't reuse a password.For example:  If I type in "abc", the program will tell me that I have already reused that password and I am assuming it is probably because the program reads the files character by character and reads the abc in abcdeF!23.Although, I don't want the program to tell me I can't reuse a or multiple characters from the file.  I want the program to tell me that I can't reuse a word from the programI am also wondering if we could put the inputs or presets into an array IN THE FILE.UPDATE: I have gotten the code to work using the with statement.rather than using an If and else statement, I had used a with statement.  Here what I am doing is checking for every single line to see if it has any text that matches my input string.  If there are none, then we'll make some_variable equal True.  If it doesn't, then we'll make it equal false. Afterwards, if it does equal True: we'll add it to the file.  If it doesn't we'll make the user input another password that does not match any of the ones insie of the file.
Working directly with text files is probably not the greatest solution;you should consider using some form of database instead (such as the sqlite3 library which, IIRC, comes preinstalled with Python3).Also, keep in mind that storing passwords as clear text is a security "no-no".At the very least, use one of the many available cryptographic hash functions, then store and compare the hashes, not the passwords.Here's a basic example that uses both sqlite3 and SHA-256, a common hashing function:Note the  constraint on , which ensures that an  exception is raised whenever a password is already present in  (this makes the verification implicit, and minimizes the SQL cumbersomeness).Usage example:You can verify that no clear-text password appears in the database:Of course you can expand on that and add more features, such as support for multiple users, password expiration, etc...
Considering that you are adding a \n after each password you enter in the file, you can try to append \n to the  variable and then search after that.
You're using .read(), which reads the entire file as one string.Use .readlines() instead and loop through every line to check if the string is in any of the file lines.


Answer URL
https://docs.python.org/3/library/sqlite3.html
