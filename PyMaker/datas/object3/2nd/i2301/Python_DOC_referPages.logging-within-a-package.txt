Natural Text
I'm developing a package that will be used by others to write processing scripts. For testing/debugging/not-going-insane purposes, I'd like to include some logging statements within my code, and especially using a  utility function that I developed for another project for formatting/file output control.Because I'm not writing a self-contained application, however, but a library that is meant to be called by other programs, I am confused where I should use my  utility in order to produce the desired logging results that I want. This made me wonder whether using a logging system within my package was a good idea to begin with.Where should I use my  utility, if anywhere?EDIT: Here's the function I mention above:
Where should I use my  utility, if anywhere?In library code, you should not configure logging anywhere.  It is up to the users of your library (application distributors) to configure logging handlers.As a library author, you don't know anything about the runtime context, you don't even know if there is a writable filesystem available at all in order to create logfiles. But to use , you don't need to care about the configuration - just  and create loggers, at the module level, and you can log events from library code. It is not for the library code to decide where those log events go - or if they go anywhere at all.  If you're providing an app and you want logging output, then configure logging as the first thing your application does when starting up - usually in Python this means a call to  or similar is made shortly after entering the  function (please make sure the logging configuration does not happen at  time).


Answer URL
https://docs.python.org/3/howto/logging.html#configuring-logging-for-a-library
