Natural Text
IÂ´m programig a interface with 3M document scanners.I try to call a function called Description:After a data item has been read from a document it may be obtained via this API.The buffer supplied in the aDataPtr parameter will be written to with the data, and aDataLen updated to be thelength of the data.The problem is how can create a  and how can get it the data.I try: always return a value but  return TIA
What you need to do is allocate a "buffer". The address of the buffer will be passed as the void* parameter, and the size of the buffer in bytes will be passed as the  parameter. Then the function will put its data in the buffer you gave it, and then you can read the data back out of the buffer.In C or C++ you would use  or something similar to create a buffer. When using , you can use ctypes.create_string_buffer to make a buffer of a certain length, and then pass the buffer and the length to the function. Then once the function fills it in, you can read the data out of the buffer you created, which works like a list of characters with  and . 
With , it is best to define the argument types and return value for better error checking, and declaring pointer types is especially important on 64-bit systems.On return you can access just the returned portion of the buffer by string slicing, e.g.:
There are several issues with your code: You need to allocate the buffer pointed to by .You need to pass the buffer length in . According to [1], if the buffer isn't big enough,  will reallocate it as needed.You should pass  directly, not .You are passing an extra argument to the method (the  argument) based on the method descriptor of  you provided.Try the following: Then you can read the content of the buffer as a regular character array. The actual length is returned back for you in .[1] 3M Page Reader Programmers' Guide: https://wenku.baidu.com/view/1a16b6d97f1922791688e80b.html


Answer URL
https://docs.python.org/3/library/ctypes.html?highlight=create_string_buffer#ctypes.create_string_buffer
