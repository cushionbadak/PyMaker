Natural Text
I have a list of text strings from which I need to build a tree and as I understand the proper data structure to achieve this is a dictionary.The size of each string is fix and the format of all elements is the same so no additional checks are necessary. Each record of the list is a date in the format DD/MM/YYYY and the year / years should be on the root of the tree (the keys, no duplicates here), per each year may be multiple months (no duplicate months within same year) as value and per each month multiple days(no duplicate days within same month).An example of the list of strings:data = ['04/02/2018', '05/02/2018', '06/02/2018', '01/03/2018',  '10/03/2018', '08/09/2017', '09/09/2017', '11/10/2017',          '11/12/2017', '14/06/2018', '15/06/2018', '24/07/2018', '26/07/2018', '30/08/2018', '31/08/2018', '01/09/2018']Beside a solution, if any could provide I would like also an explanation in order to understand.This is what I wrote so far which is clearly wrong as the result is a dictionary with only last 2 items.The desired output for that data looks like this:
There are various way to achieve this. You could use a  from the  module. But it can also be done use the plain  method.If key is in the dictionary, return its value. If not, insert key with a value of default and return default. default defaults to None.We loop over the data, splitting it into day, month, and year strings. Then we look in the base tree for the year key, and if it doesn't exist we create a new empty dict for it. Then we look in that year dict for a month key, creating a new list for it if it doesn't exist. Finally we append the day string to the month list.outputWe can combine the 3 steps of the main loop into one line, but it's a bit harder to read:
You don't need a tree. You can use a dict of dicts, having lists as innermost values. You can use a  as your main structureWhat a  does is thatfor the inner dict: you can  directly. If there is not a list, a new empty one is created.for the outer dict: similarly, you can refer to the key  assuming there is already a dict as its value. If there is not, a new one is created.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
