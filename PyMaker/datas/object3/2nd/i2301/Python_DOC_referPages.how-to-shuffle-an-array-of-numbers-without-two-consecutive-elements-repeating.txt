Natural Text
I'm currently trying to get an array of numbers like this one randomly shuffled:The only constrain is that no consecutive elements of the shuffle must be the same number. For that I'm currently using this code:Although this works for an array of this size, I don't know if it would work for much bigger arrays. And even so, it may take a lot of time.So, is there a better way of doing this?
May not be technically the best answer, hopefully it suffices for your requirements.
Here is a way to do it, for Python >= 3.6, using random.choices, which allows to choose from a population with weights.The idea is to generate the numbers one by one. Each time we generate a new number, we exclude the previous one by temporarily setting its weight to zero. Then, we decrement the weight of the chosen one. As @roganjosh duly noted, we have a problem at the end when we are left with more than one instance of the last value - and that can be really frequent, especially with a small number of values and a large number of repeats.The solution I used is to insert these value back into the list where they don't create a conflict, with the short  function.Some crude timing: it takes about 30 seconds to generate , so 720000 values.


Answer URL
https://docs.python.org/3/library/random.html#random.choices
