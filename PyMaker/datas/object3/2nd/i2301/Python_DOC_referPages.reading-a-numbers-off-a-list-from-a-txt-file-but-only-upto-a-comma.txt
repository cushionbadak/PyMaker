Natural Text
This is data from a lab experiment (around 717 lines of data). Rather than trying to excell it, I want to import and graph it on either python or matlab. I'm new here btw... and am a student!more numbers : see Screenshot of more data from my fileI just can't figure out how to read the line up until a comma. Specifically, I need the Load numbers for one of my arrays/list, so for example on the first line I only need 62.638 (which would be the first number on my first index on my list/array).How can I get an array/list of this, something that iterates/reads the list and ignores strings?Thanks!NOTE: I use Anaconda + Jupyter Notebooks for Python & Matlab (school provided software).EDIT: Okay, so I came home today and worked on it again. I hadn't dealt with CSV files before, but after some searching I was able to learn how to read my file, somewhat.Okay, here is where I am stuck. I want to make an arraw/list that has the 0th index value of each row. Sorry if I'm a freaking noob!Thanks again!
You can skip all lines till the first data row and then parse the data into a list for later use - 700+ lines can be easily processd in memory. Therefor you need to:read the file line by line remember the last non-empty line before number/comma/dot ( == header )see if the line is only number/comma/dot,  else increase a skip-counter (== data )seek to 0skip enough lines to get to header or dataread the rest into a data structure Create test file:Some helpers and the skipping/reading logic:        Usage of helpers / data conversion:Output (reformatted):Doku:re.matchcsv.readerMethod of file objekts (i.e.: seek())With this you now have "clean" data that you can use for further processing - including your headers. For visualization you can have a look at matplotlib
I would recommend reading your file with pythonleads to a list containing your data of the first columnThe MATLAB solution is less nice, since you have to know the number of data lines in your file (which you do not need to know in the python solution)leads to:For the sake of clarity: You can also use MATLABs  function to achieve what you want without knowing the number of lines, but still, the python code would be the better choice in my opinion.
Based on your format, you will need to do 3 steps. One, read all lines, two, determine which line to use, last, get the floats and assign them to a list.Assuming you file name is name.txt, try:The grid will then contain a series of lists containing your group of floats.Explanation for fun:In the "for" loop, i searched for the double quote to eliminate any string as all strings are concocted between quotes. The other one is for skipping empty lines.Based on your needs, you can use the list grid as you please. For example, to fetch the first line's first number, doas python's list counts from 0 to n-1 for n elements.
This is super simple in Matlab, just 2 lines:Where 6 and 0 should be replaced by the row and column offset you want. So in this case, the data starts at row 7 and you want all the columns, then just copy over the data in column 1 into another vector.As another note, try typing doc dlmread in matlab - it brings up the help page for dlmread. This is really useful when you're looking for matlab functions, as it has other suggestions for similar functions down the bottom.


Answer URL
https://docs.python.org/3/library/re.html#re.match
https://docs.python.org/3/library/csv.html#csv.reader
https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects
