Natural Text
I am trying to concatenate two tuples using the overloaded + operator in Python 3.6. I don't have an issue if I include the parenthesis like the first example, but if I leave off the parenthesis as in the second example, I get an error. The message I get is "bad operand type for unary +: 'tuple'". Can anyone explain what is happening?newtup = (3,) + (2,4)newtup = 3, + (2,4)
Unary operator  expects valid a operand (int, float etc) on the right side. In your code , you are providing a tuple  as an operand to  which is not a valid operand and so is the error.In your code: These are 2 separate tuples  and , so it works.Here its a single tuple with 2 elements  and  which fails due to above mentioned reason.
It's a precedence issue.  is parsed as a tuple with elements  and , not as adding  and . You need the parentheses.
It's trying to parse the second line asThen, it's seeing that you used the unary , as in , with a tuple. This isn't allowed, and thus you get an error. Commas are given very wide precedence (ie they consume as many characters as possible, closer to a + than a *). The reason behind this is that (, ) should never mix the two s. Everything else is more important and should be evaluated before a comma, and thus  is evaluated before the comma - because it's a .
As you're doing:It basically simplifies to two parts  and , the second is invalid so you can try new-unpacking in python 3:If on python2 just use second example.
Simple; On the first line you are creating a new tuple made of 2 tuples. On the second line you are adding an int to  a tuple. Check this out.


Answer URL
https://docs.python.org/3/reference/expressions.html#unary-arithmetic-and-bitwise-operations
