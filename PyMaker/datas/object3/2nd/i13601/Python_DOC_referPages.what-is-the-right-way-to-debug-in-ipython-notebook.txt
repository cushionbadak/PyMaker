Natural Text
As I know,  can do debug within one cell.However, I have function calls across multiple cells.For example,What I tried:     I tried to set  in the first line of cell-1. But it enter into debug mode immediately, even before executing cell-2.  I tried to add  in the line right before the code . But then the code runs forever, never stops.What is the right way to set a break point within the ipython notebook?
Use ipdb Install it via Usage: For executing line by line use n and for step into a function use s and to exit from debugging prompt use c.For complete list of available commands: https://appletree.or.kr/quick_reference_cards/Python/Python%20Debugger%20Cheatsheet.pdf
You can use  inside jupyter with:Edit: the functions above are deprecated since IPython 5.1. This is the new approach:Add  where you need a breakpoint. Type  for  commands when the input field appears.
Your return function is in line of def function(main function), you must give one tab to it.And Use instead ofto debug the whole cell not only line. Hope, maybe this will help you.
You can always add this in any cell:and the debugger will stop on that line.  For example:
Just type  in jupyter notebook, and then use this cheatsheet to debug. It's very convenient. --> continue,  --> step,  --> set break point at line 12 and so on.Some useful links:  Python Official Document on pdb, Python pdb debugger examples for better understanding how to use the debugger commands.Some useful screenshots:  
The  magic command is good to use as well. Just say  and subsequently the  debugger will run on all exceptions, no matter how deep in the call stack. Very handy.If you have a particular line that you want to debug, just raise an exception there (often you already are!) or use the  magic command that other folks have been suggesting.
In Python 3.7 you can use breakpoint() function. Just enter wherever you would like runtime to stop and from there you can use the same pdb commands (r, c, n, ...) or evaluate your variables.
After you get an error, in the next cell just run  and that's it.
I just discovered PixieDebugger. Even thought I have not yet had the time to test it, it really seems the most similar way to debug the way we're used in ipython with ipdbIt also has an "evaluate"  tab


Answer URL
https://docs.python.org/3/library/pdb.html
