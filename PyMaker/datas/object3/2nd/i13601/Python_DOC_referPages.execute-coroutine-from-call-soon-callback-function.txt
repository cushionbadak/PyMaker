Natural Text
I have following situation:Some internal class (which I have no control of) is executing my  function using call_soon.Within my  I would like to call another courotune, but end up with "frozen" callback.I will use modified Hello World with call_soon() to demonstrate this:When I run this, nothing is being printed and the program never ends.Ctrl+CWhat is actually going on and why?Any correct way to do this?
The example you mentioned demonstrate how to schedule a callback. If you use the  syntax, the function is actually a coroutine and it has to be decorated accordingly:Then you can schedule the coroutine as a task using ensure_future:Or equivalently, using run_until_complete:In two weeks, python 3.5 will officially be released and you'll be able to use the new / syntax:EDIT: It is a bit ugly, but nothing prevents you from creating a callback that schedules your coroutine:
You can use  to call a coroutine using the following syntax:


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.call_soon
https://docs.python.org/3/library/asyncio-eventloop.html#hello-world-with-call-soon
https://docs.python.org/3/library/asyncio-task.html
https://docs.python.org/3/library/asyncio-task.html#asyncio.ensure_future
https://docs.python.org/3/library/asyncio-eventloop.html?highlight=until_complete#asyncio.BaseEventLoop.run_until_complete
https://docs.python.org/3/library/asyncio-task.html#asyncio.async
