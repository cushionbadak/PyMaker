Natural Text
I have a script that writes to a log file. In Python 2, my quick solution to allow tailing/viewing of the log as it progressed was by assigning  to a file object with buffering set to 0:Once set, any print statements in the script's functions redirect to the log file very nicely.Running the 2to3-converted version under Python 3 gives the following error: . Changing the  above to  solves that, so the structure of the block isbut now the first print statement errors with . I tried explicitly casting the string to bytesbut that produces the same  as before.What is the easiest way to write unbuffered text to a file in Python 3?
According to Python 3.4.3 documentation at https://docs.python.org/3/library/io.html#raw-i-o and 3.5 documenmtation at https://docs.python.org/3.5/library/io.html#raw-i-o the way to get unbuffered IO is with Raw IO which can be enabled as in:That means "wb" should work for writing.Details on Raw IO are at https://docs.python.org/3/library/io.html#io.RawIOBase and https://docs.python.org/3.5/library/io.html#io.RawIOBase which appear to be the same.I did some testing and found buffering of Text IO to be severe and can amount to hundreds of lines and this happens even when writing to sys.stderr and redirecting the error output to a file, on Windows 7 at least. The I tried Raw IO and it worked great! - each line printed came through immediately and in plain text in tail -f output. This is what worked for me on Windows 7 with Python 3.4.3 and using tail bundled with GitHub tools:
If by unbuffered you mean having the outputs immediately flushed to disk, you can simply do this:As  is now a first-class function you can also specify which  to print to, such as:
The issue seems to be in the way you open the file -From Python 3.x documentation -open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)The third argument for  determines the buffering mode for the file,  means no buffering. I do not think you can make it work by just using  instead of  .You should remove that  third argument, and let  use default line buffering for text files. Example -


Answer URL
https://docs.python.org/3/library/io.html#raw-i-o
https://docs.python.org/3/library/io.html#io.RawIOBase
https://docs.python.org/3/library/functions.html#open
