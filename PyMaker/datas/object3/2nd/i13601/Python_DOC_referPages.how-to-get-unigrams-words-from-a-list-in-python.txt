Natural Text
Input is list1=['water vapor','evaporation','carbon dioxide','sunlight','green plants']Output should be
Aren't those strings containing a single word, e.g. "evaporation" & "sunlight" unigrams? It seems to me that you want to retain the unigrams, not remove them.You can do that using a list comprehension:This assumes that words are separated by a one or more spaces. This might be an oversimplification as to what constitutes a n-gram for n > 1 as different whitespace characters could delimit words e.g. tab, new line, various whitespace unicode code points, etc. You could use a regular expression :The pattern  says to match from the beginning of a string all non-whitespace characters until the end of the string.If you need to support unicode spaces you can specify the unicode flag when compiling the pattern:Now it will also filter out those strings that contain unicode whitespace, e.g. non-break space (U+00A0) and punctuation space (U+2008).
If you need to remove elements from a list based on a condition, you can use  or list comprehension.You get the idea about checking for non-unigram words: .Basically, if you want to construct a new list using a for loop, you can write something like:This can be simpler, thanks to Python syntax:Alternatively:Both will return the list of non-unigram words, as stated in the title of your question (even if your example returns unigram words...)


Answer URL
https://docs.python.org/3/library/functions.html#filter
