Natural Text
I have got a harmless list "mylist" of six items. Never empty, never any beastly items.I found that there are two ways to index a list for slicing purposes. For this question I shall call them upper index (from 0 to 5) and lower index (from -1 to -6). Here is a quick diagram (I had posted a photo with colors, which was replaced by another user):For easily slicing at the start of my list, I can use the upper index like this:For easily slicing near the end, I find the lower index helpful, like:By "easily" I mean for example the aspect of not concerning my code with the length of the list.I learnt that Python slicing is "always holding back" (also known as "up to but not including"). I am showing this in my diagram as the "arrow-heads" pointing from the end of a slice to the "next item" ahead ("ahead" in the sense/direction of the slicing).For my users I need to show the first so many items from my list. (Those are the results from a recursive search and evaluate and sort run.) Because normally this list is rather long, I do print it backwards (in the console), so that when the script ends, the best  results will still be visible on the screen. So my step is  in this context.I would like to use variables, to allow for different needs for different users (and different screen sizes). For debugging and for certain users I want to be able to print all results, i.e. the entire list backwards. I would like something in this syntax:My question is please, how do I write the first(topmost) slice in the diagram, by using variables and by using the upper list of indices? Or in other words, what is the numerical value of  (and ) in the diagram?Semi-solutions that I do not want to use:I have not managed to use  in any simple operations with my variables, it gives me errors like:And I have not managed to convert  to any integer or other number. Is there a way? Would probably be a sacrilege in Pythonland...If I cannot find the secret number of , then I might need to work with this:But this approach involves checking the length of .What I have done before asking you:I have written a testing-script and have tried guessing . I have searched and read up plenty on slicing and variables here on Stack Overflow (like  when use negative number to slice a string in Python, 0 is disabled?) and online (like https://docs.python.org/3/library/functions.html?highlight=slice#slice) and I searched through ebooks like Introducing Python and Learning Python.A plea:Please do not tell me that what I want is wrong. I can slice  although there is no item indexed  in my example list, same for . This is why I have this hunch that there might be numbers for  and for  too, which I could use in my variables.  You are welcome to tell me that it does not exist or cannot be done the way I would prefer. In the latter case, I am also asking you for alternatives, as close to my request as possible.Background for those who want more:This question is more about "figuring out slicing" than about making the printout possible. I do have workarounds, but would love to find out more.
If I understood your question correctly, you want y such thatwhere y must be an integer.The y you are looking for is  or a lower integer. If you need a constant, you could use  (as it is impossible to have lists larger than ).If we look at CPython's source code, we can see that  objects internally use the function . In order to do what you want,  must set step = -1, start = 2 and slicelength = 3.start = 2 and step = -1 are already set by your code. Are there values for y that can lead to slicelength = 3? Let's see...When step is negative, the line that calculates slicelength is this one:From here, we can see that in order to have slicelength = (stop - start + 1) / step + 1 = 3, we must have stop = -1. However, the case stop < 0 is treated specially:So, if we provide a negative stop, it gets increased by . If stop is still negative it is set to -1, which is the value we need.
The short answer is: No.You have to use  if you don't want to calculate the length of the list (although that's an  operation in Python):You could use a placeholder for "the whole thing", e.g. :You could also consider two steps, i.e. take the slice you want then reverse it:
Just make a default value and if the user changes the default (max) then change your variable.Change the display_num variable to the number of results you want to show.I think your options are None or the length of the list.... or just use a try catch


Answer URL
https://docs.python.org/3/library/functions.html?highlight=slice#slice
