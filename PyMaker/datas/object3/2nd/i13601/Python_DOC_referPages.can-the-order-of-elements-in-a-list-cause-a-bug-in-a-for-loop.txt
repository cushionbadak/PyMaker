Natural Text
I'm playing with a simple script to escape certain HTML characters, and am encountering a bug which seems to be caused by the order of elements in my list . I'm not modifying the lists during a loop, so I can't think of any Python/programming principles I'm overlooking here.returnsHowever when I switch the order of the elements in my  list to the bug disappears
Yes, in your first implementation, it can.Lets take the case of  and the list -When iterating through  , you first get  and replace it with  . This causes the string to become  . Then you keep on iterating, and at the end you find  , and you replace the  in the string with  , making the result the one you get right now.When you change the order of the lists, you get the correct result. But still this is just because you first took into consideration  and only after that you took other in consideration.You can use  instead to translate the string coorectly , according to a dictionary. Example -But if what you want to do is HTML escape the string, then you should use the standard library -  -Also, if you are using Python 3.2 + , you can use  instead, Example -
I will use the first time you call your escape_html function as an example:  Problem: When you s.replace(i,o) the first time: But now when you get to the the last replace(), the value of  was saved from before so:Why Does Order Matter?The reason this depends on order is because when the  comes first it'll be:Then your program goes on to work as expected.Solution:Because there will always be just one instance of the change you are trying to make in the list, just return once you have made that change.


Answer URL
https://docs.python.org/3/library/html.html#html.escape
