Natural Text
Try type this in your Python 3.3.2 IDLE, hopefully I'm not the only one wondering and im willing to understand why this is happening.How exactly the floats work and why is this happening? Thank you.
A  is an IEEE 754 double-precision floating point number, which means there's a maximum value it can hold (a bit over 10**308).*An  is an arbitrary-precision integer, which grows as many bytes as are needed to hold any value, so it can't overflow.This is described in the documentation under Numeric Types - , , .* Technically speaking, Python doesn't guarantee that it's an IEEE 754 double; it just says that it's usually a C , and a C  is usually an IEEE 754 double… To see the actual limits on your platform, try .
Your literal question was answered, but this is the answer you actually need ;-)Three-argument  is a very much more efficient way to do modular integer exponentiation.  Internally, intermediate results don't get much larger than 331**2, allowing for speedy computation of cases that otherwise wouldn't even fit in your computer's memory:
You can simplify this example like this:As you can see, it fails when you have a float as the exponent. To understand this, a look into the manual helps:Integers have unlimited precision. Floating point numbers are usually implemented using  in C […] (source)So essentially, you can do whatever you want with integers; but floats are restricted to the standard IEEE-754 limits.


Answer URL
