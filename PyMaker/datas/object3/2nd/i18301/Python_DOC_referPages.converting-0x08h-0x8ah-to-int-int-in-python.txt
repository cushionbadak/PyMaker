Natural Text
I've got string like  in Python, wanting to convert it to  (like unsigned ints). I could split and index it like  but is there a better way to convert it to a list of ints?Would it matter if I had ?edit (for plus points:).) what (sane) string-based hexadecimal notations have python support, and which not?
You really have to know what the pattern you're trying to parse is, before you write a parser.But it looks like your pattern is: optional , then hex digits, then optional . At least that's the most reasonable thing I can come up with that handles both  and . So:Then:Of course  you don't actually need to remove the  prefix, because Python accepts that as part of a hex string, so you could write it as:However, I think the intention is clearer if you're more explicit.From your edit:edit what (sane) string-based hexadecimal notations have python support, and which not?See the documentation for :Base-2, -8, and -16 literals can be optionally prefixed with 0b/0B, 0o/0O, or 0x/0X, as with integer literals in code.That's it. (If you read the rest of the paragraph, if you're guaranteed to have , you don't have to explicitly use base=16. But that doesn't help you here, so that one sentence is really all you need.) The docs on Numeric Types and Numeric literals detail exactly what "as with integer literals in code"; the only thing surprising there is that negative numbers aren't literals, complex numbers aren't literals (but pure imaginary numbers are), and non-ASCII digits can be used but the documentation doesn't explain how.
You can also use : 


Answer URL
