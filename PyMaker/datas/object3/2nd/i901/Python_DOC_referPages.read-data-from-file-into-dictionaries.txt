Natural Text
Lets say that i have a file containing information in each line and each line i want to convert in a dictionary. In the dictionary there will be one string, two integers and two lists. kinda like this:    Q1 =  { "string" : "name",             "integer1" : 1,             "integer2" : 2,             "list1" : [a,b,c,d],             "list2": []    }Now the file could be a txt file or not. Lets say its a txt file and every line would provide a dictionary. I am the one to write the file so I can have it in any format i want. I thought this format for each line of the file.txt:name,1,2,(a/b/c), ()so the first thing is the string, the second is integer1, then integer2, list1 and list2. Each element of the dictionary separated with a comma and the elements of the lists inside parenthesis and separated with a slash ("/"). Obviously if you think there is a better idea for how the file.txt should like please let me know :)the first list i want it to be dynamic. that means some lines may contain more characters inside the parenthesis () and the second list i want it to always be empty cause i am putting things there later in my code.Each line is a dictionary and each dictionary is an element in a list i want to create. So i want to have a list of dictionaries.I tried to open a file and play with the split function but the format of the txt file is more complicated than i thought and never got to read the file and save it into a list of dictionaries
inside file1.txthey1,5,6,(a1/a2/a3), ()hey2,7,8,(a2/a3/a4/a5), ()You can use below code it will generate a new dictionary for each line and at last all the dictionary inside the dict_main.Result
Check this... without using any package.
You can use  for this purpose.With the given example file you can use it like this:As you can see this evaluates every field as a string, so you would have to add parsing to integers and lists to this, but this should get you started.It also returns s, to, well, ensure the order of the fields. You can cast them to a normal dict with  if needed.To get a list of dicts, just do:Slightly unrelated:Don't shadow the built-in  by calling your lists s don't need their argument in parenthesis, a space after the  is sufficient.Read Python's official style-guide, PEP8.
You can also use regex and avoid using "/" character if you want, like this:The result being:


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictReader
https://docs.python.org/3/library/csv.html#csv.DictReader
