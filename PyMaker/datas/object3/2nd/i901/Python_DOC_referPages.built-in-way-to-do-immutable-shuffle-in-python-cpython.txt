Natural Text
This question already has an answer here:How to shuffle a copied list without shuffling the original list?                    1 answer                The  built-in shuffles in place, which is fine for many purposes. But suppose we would want to leave the original collection intact, and generate a random permutation based on the original sequence, is there a prefered way to do this in the standard library?When I look at CPython's random.py I see an intial comment that reads:Particularly, the last line is of interest. However, I struggle to see what method in this class achieves this.Naturally, this is not a hard problem to solve, even for a novice Python programmer. But it would be nice to have a standard way of doing it in the standard library, and I'm sure it must exist somewhere. Perhaps someplace other than ?
According to the docs of , you could use :To shuffle an immutable sequence and return a new shuffled list, use  instead of .The same thing was analized in this post
This seems like the obvious solution that shouldn't do more work than necessary:Since it's so simple to build from stdlib primitives, I'm not sure it would make sense to include this as a separate primitive.


Answer URL
https://docs.python.org/3/library/random.html#random.shuffle
https://docs.python.org/3/library/random.html#random.sample
