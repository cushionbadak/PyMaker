Natural Text
I'm trying to take a nested DataFrame and convert it to a nested Dictionary.Here is my original DataFrame with the following unique values:input: output:input: output: Given that there are multiple values in each of the 66130 unqiue values (ie. "Charles" would occur 3 times), I took the 66130 unique "reviewerName" and assign them all as the key in the new nested DataFrame, then assign the value using "title" and "reviewerRatings" as another layer of key:value in the same nested DataFrame.input: output:As a follow up to the first question, I tried to convert the nested DataFrame to a nested Dictionary.The new nested DataFrame column indexing above shows "reviewerRatings" in the 1st row (column 3) and "reviewerName" and "title" in the 2nd row (column 1 and 2), and when I run the  method below, output shows input: output:But for my desired output below, I'm looking to get my output as  which is exactly the way I had sorted in the nested DataFrame.Is there any way to manipulate the nested DataFrame or nested Dictionary so that when I run  method, it would show .Thanks!
There are a couple of approaches. You can use  with , or iterate rows with . Notably, the latter isn't necessarily less efficient. + Construct a series from each  object and convert it to a dictionary to give a series of dictionary values. Finally, convert this to a dictionary of dictionaries via another  call.Define a  of  objects and iterate your dataframe by row.The resulting  does not need to be converted back to a regular  as  is a subclass of .Performance benchmarkingBenchmarking is set-up and data dependent. You should test with your own data to see what works best.
Use  with lambda function for  per  and then output  convert by :


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
