Natural Text
I am newbie and started coding in pyhton in the last few months. I have a script that takes a proteome (800 Kb file of 2850 strings) and check each individual protein (protein_string) against a large dataset (8Gb file of 23 million strings saved in the code as dictionary of id:protein_string) and report Ids of all identical strings (up to 8500 ids can be reported for each string). The current script takes 4 hours to run. What could be done to speed up the process in general and how can I convert my script to multiprocessing or multithreading (not sure of the difference) for the part of the code doing the comparisons?
Preliminarily it seems to me that it might make more sense to, instead of storing your dict as , store it as . Since it sounds like there are many repeats of each sequence, this will save time in accessing all ID's of a specific sequence. You can do this when reading in your data by using a  with the default value as an empty list, and when you read an ID and sequence, you can add it to the dict with .Let me know if this helps and if I can help with anything else.
Following Sam Hollenbach's suggestion, I might make the following (4) changes to your code.Change #1: - change name of format variable to _format (to avoid clashing with the Python term 'format'And make the changes in your code where that is used.Change #2: Use the  as the key to the dictionary and append the  to the list (as the value)Change #3: There is no need to cast  to  - it already is a string.Change #4: These 3 lines will locate any matching record much faster than iterating through the dictionary as in your original code.I'm not sure how  should be handled.Also, can't say that I've found all the changes needed for a complete working program. If you have any questions after trying the suggested changes, let me know.


Answer URL
https://docs.python.org/3/library/profile.html
