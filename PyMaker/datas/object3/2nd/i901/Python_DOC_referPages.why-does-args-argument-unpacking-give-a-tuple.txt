Natural Text
In python, it is possible to define a function taking an arbitrary number of positional arguments like so:When called as , all positional arguments are put together into a tuple.This behavior is described in python 2 and 3 documentation, but I haven't found a PEP to it.PEP 3132, introducing extended iterable unpacking () states under "Acceptance" thatMake the starred target a tuple instead of a list. This would be consistent with a function's *args, but make further processing of the result harder.was discussed. If I write a wrapper, I may also want to further process arguments like so:This further processing is made harder by the fact  is a . Were wrappers just not used at the early stages this was introduced? If so, why wasn't this changed in python3 with other compatibility breaking changes (PEP3132 favours ease of processing over consistency (which seems at least similar to compatibility in a compatibility- breaking change).Why are a functions  (still) a  even though a  allows easier further processing?
I don't know if this was the thinking behind it, but that ease of processing (even though instantiate a  with the  data is not that hard) would come at possible confusing behavior.Could surprise people writing  code not realizing that  they deal with later on are not what the function was called with.I would also presume immutable types are easier to deal with internally and come with less overhead.
Why not? The thing about tuple is, that you can not change it after creation. This allows to increase speed of executing your script, and you do not really need a list for your function arguments, because you do not really need to modify the given arguments of a function.Would you need append or remove methods for your arguments? At most cases it would be no. Do you want your program run faster. That would be yes. And that's the way the most people would prefer to have things. The *args thing returns tuple because of that, and if you really need a list, you can transform it with one line of code!So in general:It speeds up your program execution. You do not it to change the arguments. It is not that hard to change it's type.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists
