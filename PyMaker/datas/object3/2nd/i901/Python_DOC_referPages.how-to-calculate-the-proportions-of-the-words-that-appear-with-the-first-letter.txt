Natural Text
By using Python, I would like to calculate the proportions of the words that appear with the first letter capitalized. For example, here is an example word list,and I would like to produce the result like below:Do you have any ideas on this? It seems easy but is hard to come up with good solutions. To be specific, it's easy to count the numbers of first-letter-capitalized words by using defaultdict.Thank you in advance!
Words sorted: Assuming, as in your example, your strings are sorted, you can use  with :Words not necessarily sorted:  + You can, in this case, sort before applying the above logic:This adds complexity to the algorithm if your list isn't sorted.Words not necessarily sorted: An alternative is to construct a dictionary with lists of Boolean values via, then use :
You could do something like this:which results in the desired:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/statistics.html#statistics.mean
https://docs.python.org/3/library/collections.html#collections.defaultdict
