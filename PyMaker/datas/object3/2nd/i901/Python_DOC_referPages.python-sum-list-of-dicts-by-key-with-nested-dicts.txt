Natural Text
I have a list of dicts and would like to design a function to output a new dict which contains the sum for each unique key across all the dicts in the list.For the list:So far so good, this can be done with a counter:Which correctly returns:The trouble comes when the dicts in my list start to contain nested dicts:Now the same function will give a TypeError because the counter can't add two Dicts. The desired result would be:Any ideas on how to do this in a reasonably efficient, Pythonic, generalizable way?Thanks!
I would do this by performing a recursive merge on a recursively defined  object.Using  to convert it back, we have:
You can use recursion. This solution finds all the dictionary keys in the input passed to , and then sums the values for each key if the values are integers. If the values are dictionaries, however,  is called again:Output:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
