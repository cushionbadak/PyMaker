Natural Text
Currently we are working on an application which is trying to calculate the travel time of a route from a to b, using the 2.db.transport.rest API. Unfortunatly we are receiving timestamps with a timezone offset from that API, such as . What we need is a timezone offset without the , so .The following example gives an error on Linux, using Python 3.6.7:This example code produces this exception:If we remove the  from the input string it works, no exception is thrown.The code also works when we run this on Windows, on Python 3.7.2.Could it be due to the different Python versions? How can we parse or convert this without error?
Yes, this is a version problem. You are relying on a new feature introduced in Python 3.7From the  documentation, 6th footnote:Changed in version 3.7: When the  directive is provided to the  method, the UTC offsets can have a colon as a separator between hours, minutes and seconds. For example,  will be parsed as an offset of one hour.If you can't upgrade to Python 3.7 everywhere, then you could just remove those colons with some preprocessing:The regex removes the colons from any  or  offset (appearing at the end of a string and preceded by  or ):Demo:If you were to upgrade to Python 3.7 everywhere, you could drop the  parsing altogether and simply use the dedicated  method; it can parse your input directly.


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
https://docs.python.org/3/library/datetime.html#datetime.time.fromisoformat
