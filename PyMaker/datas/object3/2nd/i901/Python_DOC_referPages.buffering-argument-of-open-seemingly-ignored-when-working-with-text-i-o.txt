Natural Text
The buffering argument of the built-in open() function seems to be ignored when working with text I/O:Text I/O:Binary I/O:Why? Is this intended behavior?
I've poked around the a bit. Indeed the documentation states:buffering is an optional integer used to set the buffering policy. Pass 0 to switch buffering off (only allowed in binary mode), 1 to select line buffering (only usable in text mode), and an integer > 1 to indicate the size in bytes of a fixed-size chunk buffer...Hence it would be reasonable to expect that specifying  would cause buffer of size  to be used (and see files flushed when using that buffer up). However in the text mode it seem to (and the documentation doesn't really clearly indicate that in this place) affect the underlining , but  whose  you end up calling does still "its own thing"... Starting with Python 3.7 you tell it not to and have it pass the writes immediately to the underlying object by calling  on the file you have opened.Actually all the code and checks for value of  are already in Python 3.6 (I've checked 3.6.8) (as a matter of fact , i.e. , are identical in both versions), but the  attribute is not exposed (yet).


Answer URL
https://docs.python.org/3/library/io.html?#io.TextIOWrapper.reconfigure
