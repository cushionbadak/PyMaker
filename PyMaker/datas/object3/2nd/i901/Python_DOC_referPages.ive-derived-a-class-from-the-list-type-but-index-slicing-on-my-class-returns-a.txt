Natural Text
This question already has an answer here:How to override the slice functionality of list in its derived class                    2 answers                I have a class called AudioBuffer that is derived from Python's list type.Before you ask, yes, I did pass the necessary parameters up the parent chain.Everything works like a charm. I can use all list functionality including indexing.The problem is: When I use index slicing on my objects, the returning object is a "list", instead of my AudioBuffer.Example:Now,  comes to mind. But that creates a new instance of AudioBuffer. And I don't want that. I want a reference to my original object, because I want to modify parts of it. Just like Python's native index slicing functionality.Thank you.
Youâ€™d need to override the  method:Also it is recommended when subclassing a sequence to subclass .
You need to implement  and there return your class.From the Python documentation:Called to implement evaluation of self[key]. For sequence types, the  accepted keys should be integers and slice objects. Note that the  special interpretation of negative indexes (if the class wishes to  emulate a sequence type) is up to the getitem() method. If key is  of an inappropriate type, TypeError may be raised; if of a value  outside the set of indexes for the sequence (after any special  interpretation of negative values), IndexError should be raised. For  mapping types, if key is missing (not in the container), KeyError  should be raised.When you call  this is syntactic sugar for . Therefore just override the  of your class to return an instance of your class instead.


Answer URL
https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableSequence
