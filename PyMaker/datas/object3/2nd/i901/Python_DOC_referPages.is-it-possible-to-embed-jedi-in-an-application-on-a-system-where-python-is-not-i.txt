Natural Text
I'm working on an (Windows and Mac) application that uses Python as an embedded scripting language.The application includes an internal text editor, implemented using Scintilla, and I'm using Jedi for autocompletion, which generally works great.However, when attempting autocompletion on a computer that does not have a separate installation of Python, Jedi raises an error::Could not get version information for 'python':  Digging into the code, I can see that the underlying code that is throwing the  is when Jedi attempts to run  using . Python is not installed on the computer, so this fails.I can also reproduce the same issue on a computer that does have Python installed by editing my  environment variable not to include the location of .Ideally, we don't want users of our application to have to install Python just to get autocompletion working.My questions:Is it possible to get Jedi not to spawn subprocesses, and instead run its code inside the same instance of Python within which it itself is running? I couldn't find anything about this in the documentation or the source code that deals with Environments, and extrapolating from the discussion here I suspect the answer might be no.Is it possible somehow to get Jedi to use the same  that our application is using for its functionality, instead of looking for a  file that does not exist?Is there any way we could make some kind of minimal Python installation within our existing app installation that uses the same DLLs/Python Lib etc? How could I go about doing this?Is there any other way to get Jedi autocompletion working in our app without requiring the user to install Python, or including a full Python installer as part of our build process?
Is it possible to get Jedi not to spawn subprocesses, and instead run its code inside the same instance of Python within which it itself is running? I couldn't find anything about this in the documentation or the source code that deals with Environments, and extrapolating from the discussion here I suspect the answer might be no.This is definitely possible. All the tools are there. There are discussions ongoing here: https://github.com/davidhalter/jedi-vim/issues/870.IMO a patch to Jedi is needed that uses an  in some cases like yours. It's definitely possible, it's just buggy at the moment.


Answer URL
https://docs.python.org/3/extending/embedding.html
