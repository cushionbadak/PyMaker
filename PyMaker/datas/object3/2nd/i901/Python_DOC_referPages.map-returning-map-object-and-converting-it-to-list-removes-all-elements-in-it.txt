Natural Text
This question already has an answer here:Python: calling 'list' on a map object twice                    1 answer                Just learned that the object returned from  doesn't hold up once it has been used in a  expression or it was converted into a list.What is causing  to get emptied at the end?
 outputs an iterator that applies a function () over some iterators (). As a result,  is an iterator. When calling  for the first time, the iterator  is called several times until it reaches to its end. Afterward,  is an iterator which does not have any item left to produce. That's why when you call  for the second time, it outputs an empty list.
The documentation for  specifies that it returns an "iterator", not an "iterable".  Python defines an iterator to loop exactly once with no repetition; once the end is reached then it will never return another item.The second execution of  attempts to build a list from an iterator that is already at the end, so it returns no items and an empty list is constructed.
Whenever you are calling  you are using the iterator in it and then clearing the variable  if you want to store  as a  use    a = [1, 2, 3]    b = list(map(lambda x: x, a))    print(b)[1, 2, 3]          print(*b)      1 2 3      Hope this helped.EDIT: Fixed My Mistake.


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/stdtypes.html#iterator.__next__
