Natural Text
I am not able to comprehend why the self.details is printing the same line even after changing the object attribute self.name and self.author.
Because  is created from the original values. After the concatenation occurs, it's entirely independent of the other values. If you want a dynamically constructed string using the current values of /, use a  to compute  dynamically on access (without storing it as an attribute at all):
 is created and set once when doing  but it isn't linked to it. The  operation just does a concatenation of strings.Exactly, with your first example, Python reads  so it does  and so It is just an attribute with a string as its value. This string will stay immutable until you change it explicitly.If you want this behaviour, you may look into getter and setter, and make a setter for  and  automatically updating 


Answer URL
https://docs.python.org/3/library/functions.html#property
