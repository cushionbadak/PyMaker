Natural Text
I would have to get some help concerning a part of my code. I have some python list, example:I would like, for each list, know if there is a single value that is different compare to every other values if and only if all of these other values are the same. For example, in the list1, it would identify "5" as a different value, in list2 it would identify nothing as there are more than 2 different values and in list3 it would identify "9"What i already did is :The problem is that i get "One value identified" as much time as "1" is present in my list ...But what i would like to have is an output like that :The most represented value equal to len(list1)-1 (Here "1")The value that is present only once (Here "5")The position in the list where the "5" 
You could use something like that:which for the examples you provided, yields:To explain the code I would use the first example list you provided .(1) converting to  removes all the duplicate values from your list thus leaving you with  (in no specific order). If the length of this set is anything other than  your list does not fulfill your requirements so  is returned(2) Assuming the  does have a length of , what we need to check next is that at least one of the values it contains appear only once in the original . That is what this  does.
You can use the built-in  from High-performance container datatypes :TestsIn: is_single_diff(list1)Out: TrueIn: is_single_diff(list2) Out: FalseIn: is_single_diff(list3)Out: True
Use numpy unique, it will give you all the information you need. 
You can first check for the most common value. After that, go through the list to see if there is a different value, and keep track of it.If you later find another value that isn't the same as the most common one, the list does not have a single difference.


Answer URL
https://docs.python.org/3/library/collections.html
