Natural Text
I am trying to use ctypes and load the same compiled Fortran library twice, such that I have two independent instances of it, such that any module variables that the library contains are not stored in the same memory locations. The general solution described (for example, here: https://mail.python.org/pipermail/python-list/2010-May/575368.html) is to provide the full path to the library instead of just its name. However, I am not able to get this to work like this. Here is a minimal working example that demonstrates the problem:test.f90:test.py:The Fortran library is compiled using the command:When I run  I get  as output, while I want to get . Does anyone know how to make this work?
ctypes ([Python 3]: ctypes - A foreign function library for Python) loads libraries (on Nix) using dlopen. According to [man7]: DLOPEN(3):If the same shared object is loaded again with dlopen(), the same object handle is returned.  The dynamic linker maintains reference counts for object handles, so a dynamically loaded shared object is not deallocated until dlclose() has been called on it as many times as dlopen() has succeeded on it.I've prepared a small example.dll.c:code.py:Output:As seen from the output (also pay attention to the _handle attribute), trying to load the same .dll (via its  path) more than once (same behavior on Win):If located in the same path (even if it's differently specified), doesn't actually load it again, it just increases its refcountIf either its name or location differs, it is loaded againIn short, to answer your question: simply copy it under a different name and load that.


Answer URL
https://docs.python.org/3/library/ctypes.html#module-ctypes
