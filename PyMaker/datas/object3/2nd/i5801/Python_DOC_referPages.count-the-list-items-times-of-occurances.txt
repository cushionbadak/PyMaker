Natural Text
Let's assume I have the following listnames = ['tan','2','alp','3','tan','4','alp','3','tan','1']the odd indexed elements are some values and even indexed elements are their number of occurrences (so alp happened 3+3 = 6 times for example)I am trying to make code to do that.enter code herethe output i get for ct is [9, 7, 4, 3, 1]however it should be [7, 6]--- 7 for tan and 6 for alpif i uncommented del(nn[j])--- i  will be equal to le and code will stopbut i should delete the element and the number of occurrences it happened any time after first time (after adding it in ct for sure) so the counting process doesn't get repeatedany idea how to do that?
That's relatively easy - build a lookup map from your odd elements and then sum the matching even values. You can use  to make your life easier:If you really need only the values and need to keep the order, you can add an additional step:If you're after the occurrences / total occurrences per element calculation, you can just apply the sum-total over the whole lookup map:
We can use a dictionary to keep track of the counts more easily than a list. Below I use a  which is a dict subclass from the standard library that supports default values.
You could use un object to store the occurences of each name This would output :


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
