Natural Text
The issue can be solved in many ways but this question is about polymorphism. Is it possible to polymorph Counter() class so when there is no such key in Counter() instance string formatting would return 0? Basically is needed to make the last line of the code to work.Output:Desirable output:
This isn't a case for changing the .  unpacking converts your  to a regular dict, which does not have a default value of 0 for missing keys. (At least, it converts your  now; there was a bug on earlier versions, so if you try the  code on an earlier Python version and it seems to work, that's why.)Instead of , use , which will use your  directly:
when there is no such key in  instance string formatting would return 0?but that's not the issue here. The issue is that  will only unpack the existing elements. What you can do is initialize the counter with zero counts for all  and then unpack:now the unpacking will pick these elements up, even if they have a  count. After the loop executes, :will return your wanted result:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format_map
