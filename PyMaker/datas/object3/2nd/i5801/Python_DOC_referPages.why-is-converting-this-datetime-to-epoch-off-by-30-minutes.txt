Natural Text
I have the following string representing a UTC timestamp: I would like to convert it into Posix timestamp (IE: seconds since the epoch)Using this online converter (https://www.epochconverter.com/) I know the answer is But when I do the following code, the result is off by 1800 seconds -- 30 minutes:Anyone know what I'm missing here??
You created a new timestamp and put it in the Europe/London timezone. That is not the same thing as UTC. The Europe/London timezone from the PyTZ database includes historical offsets, and those affect how  interprets the timezone.Just use the  method on the  object you already parsed from the string:Your original  datetime object is timezone agnostic, so the  object already assumes no timezone conversion has to take place.If you must apply the  timezone first for whatever reason, then at least use the  method to get the right offset applied:See How to make an unaware datetime timezone aware in pythonFor Python 2 and Python 3.0, 3.1 or 3.2, where  is not available, subtract the epoch date:Add in the  timezone when dealing with timezone-aware  instances:Combined into a function:


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp
