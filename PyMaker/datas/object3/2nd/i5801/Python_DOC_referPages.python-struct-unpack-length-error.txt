Natural Text
I've a bytes object with length 41. I tried to unpack it with:But I got a error that:struct.error: unpack requires a bytes object of length 44I think the length of  should be  after check the python document. Why am I wrong?
You just encountered padding since you've got bytes data first, and then integer (which has stronger alignment constraints)From the documentation:Padding is only automatically added between successive structure members. No padding is added at the beginning or the end of the encoded struct.So you have to specify an endianness to disable padding:Edited for completeness, after reading Galen's excellent answer: just specifying  is better if you don't want to force endianness.
See the parts of the documentation regarding alignment:By default, C types are represented in the machine’s native format and byte order, and properly aligned by skipping pad bytes if necessary (according to the rules used by the C compiler).Native size and alignment are determined using the C compiler’s sizeof expression. This is always combined with native byte order.Note the difference between '@' and '=': both use native byte order, but the size and alignment of the latter is standardized.To illustrate this:
You may want to read the first note in the struct documentation again.Default is C-aligned data boundaries, so some padding bytes are responsible for the difference. So adding the appropriate byte order should fix the problem.


Answer URL
https://docs.python.org/3/library/struct.html
https://docs.python.org/3/library/struct.html#byte-order-size-and-alignment
https://docs.python.org/3/library/struct.html#module-struct
