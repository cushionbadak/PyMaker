Natural Text
I have a vocabulary of phrases and I want to replace words of another file by these words. For example, I have the following vocabulary:United States,New Yorkand I want to replace the following file:"I work for New York but I don't even live at the United States"To this:"I work for New_York but I don't even live at the United_States"Currently I'm doing at this way:But it's way too slow! I thought that threads would do the job but I was wrong...Is there another efficient way of doing this?
All of the phrases could be replaced using a single  call which could be pre-compiled to further speed things up a bit:This first creates a regular expression to search on as follows based on a dictionary of phrases:The  function then uses the  dictionary to look up the required phrase replacement. It takes two parameters, the replacement and the original text. The replacement can either be a fixed string, or in this case a function is used. The function takes a single argument being the matched object, and returns the replacement text. A  function is used to do this, it simply looks up the match object in  dictionary.Instead of doing a dictionary lookup, it could just use a  here but the pre-calculated replacement text should be faster. The  is added to only make replacements which are on word boundaries, so for example  would be skipped. Adding  to the  could be used to make the search case insensitive if needed.
Try to change the  loop to replace only phrases that exist in the text:Try it with and without the threading.


Answer URL
https://docs.python.org/3/library/re.html
