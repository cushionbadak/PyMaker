Natural Text
I want to create code that initialize variable only when I really need it. But initializing in the regular way:Make too much noise in the code.I tried to create fast solution but I feel there is better option. This is my solution that is fast but can't get parameters and use defaultdict for this.More questions:is there fast python container that holds only one variable?is there a way to return value without calling the function with parenthesis?EDIT:Please consider performance. I know i can create a class that can have this behavior, but it slower then the simple solution and also the default dict solution.trying some of the solutions:define:and run:got:naive:got:I'm not sure what was cacheddefaultdict solution:got:Tnx!
If we're talking about instance variables, then yes - you can write your own wrapper and have it behave the way you want:You can test it as:Which will print:Unfortunately, you cannot use the same trick for globally declared variables  as  gets called only when accessed as instance vars.
If I understand you correctly then some of the functionality you are interested in is provided by :The decorated factory may also take parameters:
A simple container (but which needs the parentheses nevertheless) can be done e.g. like this:
Well you could simply access  or  and typebut I have never been in a situation where that would be useful, so you should probably evaluate why you want to do what you want to do.
Ok, I think i found a nice and fast solution using generators:another fast solution is:but I thing the generator is more clear.


Answer URL
https://docs.python.org/3/howto/descriptor.html#descriptor-example
