Natural Text
I am relativly new to python and I was wondering if you could create an instance of a class without defining the init explicity. Could I call it something else?First example - with the init method:Second example - without the init method:In the first example the code works but in the second example I get:TypeError: object() takes no parametersSo based on this I assume that one has to explicitly call the init method. BUT I have seen code where the init method has not been used, how come?
Every class has an  method. If it doesn't explicitly define one, then it will inherit one from its parent class. In your 2nd example, the class inherits  and a bunch of other methods (and other non-method attributes) from the base  class. We can see that via the  function:output gets called automatically after the instance is constructed (via the  method), so we might as well use it if we need to initialize our instance. But we can call your  explicitly:outputIf you give you class an initializer that isn't named  then it won't get called automatically. How should Python know that that method is an initializer? Although it's customary to make  the first method in the class definition, that's by no means mandatory, and some people like to put  last.You said: "I have seen code where the init method has not been used, how come?" Well, some classes simply don't need their instances to be initialized: their instance attributes are set via various other methods, or by direct assignment in code outside the class definition, eg . Or they inherit a perfectly usable  from a parent class. 
 is nothing else then a method to initially prepare the state of your object. In other languages they have similar concepts as  and it's not necessarily needed. 


Answer URL
https://docs.python.org/3/library/functions.html#classmethod
