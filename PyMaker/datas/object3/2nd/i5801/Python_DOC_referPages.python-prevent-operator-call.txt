Natural Text
I've a class  similar to . It overloads a bunch of arithmetic operators like ,  etc. Since people will most likely use it in conjunction with numpy I'm afraid that from time to time  operators will be called instead of . Worst thing is that they actually work and produce some unwanted result.Is there a way to prevent that? So interpreter will either raise an error or will always prefer  operator overloads.
In NumPy 1.13, there's the new  API. This API is provisional, and backward compatibility is not yet guaranteed. delegates to NumPy ufuncs for its operators, and NumPy ufuncs will delegate to  to implement ufunc behavior, if they find it. The rules for this skip , so if you implement your own , it will always take priority when using your instances with NumPy arrays.If you want to disable all ufuncs on your objects, you can set  on your class:Alternatively, if you want to implement it, the signature iswhere for the case you're interested in, is the ufunc object (for example,  for ), is , is the tuple , and is empty.For more advanced cases, , , and  may be different, so  if you don't want to deal with those cases.As an example, if you want to overload  with NumPy arrays, you could writeYou will also still need to implement .


Answer URL
https://docs.python.org/3/library/constants.html#NotImplemented
