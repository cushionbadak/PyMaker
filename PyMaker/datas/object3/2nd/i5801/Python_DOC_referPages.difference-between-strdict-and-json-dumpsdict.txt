Natural Text
What is the difference between the output of  and ? If I print them, they look the same. Their attributes (as per ) also seem to be identical (see below). Yet I know there must be a difference. Could you please explain it to me?
 (as well as ) produces a Python representation of your dictionary. This representation is helpful for debugging and nothing more. For the built-in types such as dictionaries and strings, you'll be given a representation that is valid Python syntax. Python syntax and JSON syntax may look similar, but are not the same thing.Python uses single and double quotes for string literals. JSON only allows double quotes.Python Unicode strings use , ,  and  escape sequences to encode Unicode codepoints; the latter form is used for non-BMP codepoints. JSON uses a smaller range of  escapes as well as the  form, and encodes UTF-16 surrogate pairs for non-BMP codepoints (so two  sequences per codepoint).Python uses  objects, JSON uses  to as a special "doesn't exist" sentinel value.Python uses  and  as boolean values, JSON uses  and .Python dictionary keys can be any hashable type, JSON only supports strings.So  will not produce valid JSON output, most of the time; only if all your keys and values are BMP strings with at least one single quote in the value could you end up with a document that can also be parsed as valid JSON.In terms of your specific example, note that  produces a document with single quotes;  can't load this document as that's not valid JSON:Never use  as a serialisation. Although the  function can load a reasonable number of Python built-in types from a string representation, it is a lot slower than using JSON for the same job, or a more sophisticated data persistence format if JSON doesn't fit your needs.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
https://docs.python.org/3/library/persistence.html
