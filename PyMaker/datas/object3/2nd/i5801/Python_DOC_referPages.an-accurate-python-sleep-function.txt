Natural Text
I've tried time.sleep(), but its accuracy is total garbage. Consider this loop, for instance:Watch the numbers it prints. If it's anything like my computer, it's not even remotely regular. Is this function supposed to be accurate? Have I found a bug somewhere in my system?If this function is not supposed to be accurate, what function would be more accurate?
If you're just looking at the output, buffering might make it appear slightly jittery. You could try to explicitly flush the output, but then you're also at the mercy of whatever is displaying the output. I might even hazard a guess that you're using Jupyter Notebook in your browser, which will also have a bunch of buffering/latency as it updates.Another issue is that if you expect to be running every 1/3 of a second, is that you will suffer from accumulated errors. It will take a little time to run the loop, print a value (printing will take orders of magnitude more time than the other parts), then start to sleep again. A way to bypass this would be that after you finish doing whatever you want to do (I assume something more interesting than count), compute the time until the next 1/3rd of a second and sleep for that amount of time. Something like:For me it gives something like:So it bounces around a bit (I'm also running this in Jupyter, which may contribute), but won't stack up error as it runs.The real question though is what are you trying to do?
The  statement in Python takes time to run.  If I need a Python program to sleep for a more exact amount of time, I use  with a  loop instead of .  Here is my code:Also, if you don't mind putting all of your code in funtions you can use a decorator function:I would reccomend the first method because it can be very inefficient to put all your code in functions.Note: This will not work if the code you are executing taes longer that the time you are trying to wait.  It should work in your case because  shouldn't take longer than 0.334 seconds.
OK, this time I have really figured this out. It wasn't IO buffering, nor was it the time it takes to call print() or some spooky OS-specific scheduling voodoo. It was my terminal all along. (...m. night shyamalan twist...) Specifically, , though after trying about seven other terminals, I found  has the exact same problem. They're both VTE-based, but there are other VTE-based emulators that don't have the problem, like  and . Anyway, I changed terminals, and the problem is fixed.I bet those of you who weren't using either of the two problematic terminals were wondering what the hell I was talking about.


Answer URL
https://docs.python.org/3/library/time.html#time.sleep
