Natural Text
I've written a basic client/server interface using Python socket (quoted only relevant part of code, for full script: (SERVER: https://github.com/mydomo/ble-presence/blob/master/server.py)(CLIENT: https://github.com/mydomo/ble-presence/blob/master/clients/DOMOTICZ/ble-presence/plugin.py)The issue is when the script run from some hours and the result list is getting bigger sometimes the reply is exactly as it should be, other times it's cutted, not complete... it's random, like if the socket closed for no reason earlier or the reply is not fully read.Can you please help me?SERVER: CLIENT:
Method  does not guaranty receiving the full message in the first call so you have to try getting the full message by calling recv() multiple times.If recv() does return an empty string, connection is closed in the client side.Using this while loop you can get full stream from client into :
TCP is a streaming protocol, meaning it has no concept of what constitutes a complete message.  You have to implement your own message protocol layer on top of TCP to make sure you send and receive complete messages.  You are responsible for buffering data received until you have a complete message, and you have to define what a complete message is. Some options:Send fixed length messages.Send a fixed number of bytes representing the length of the message, then the message.Separate messages with a sentinel byte.Then, call  and accumulate the results until you have a complete message in the buffer.


Answer URL
https://docs.python.org/3/library/socket.html#socket.socket.recv
