Natural Text
I have see this in python tutorial:The __init__.py files are required to make Python treat the directories as containing packages;I make the directory hierarchy in pycharm like this, where the subdir1 doesn't contain __init__.py and subdir2 contains a __init__.py file. First, I add Directory into system.pyth. I write a hello function in hello1.py and hello2.py respectively.Then I call hello func in test files like this:They all succeed. It seems that the __init__.py does not necessary for import modules from different directories, right?So, I want to know in what situation a __init__.py is required. Thanks for your answering! 
Python 3.3+ has implicit namespace packages that allow you to create packages without . In Python 2,  is the old method and still works.Allowing implicit namespace packages means that the requirement to provide an __init__.py file can be dropped completely, and affected portions can be installed into a common directory or split across multiple directories as distributions see fit.Note: init.py files were used to mark directories on your disk as Python packages. Useful links:Implicit Namespace Packages
All the code in the Python interpreter will be lost when we exit the interpreter. But when writing large programs file is broken into multiple different files for ease of use, debugging and readability. In Python modules are used to achieve such goals. Modules are nothing but files with Python definitions and statements. The module name, to import, has the same name of the Python file without the .py extension.So if you want the files under some directory to be a module and you want it to be a exportable module into some other piece of code then that category need to have the init.py More details
For making Python treat the Directory as a .Python Doc


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages
