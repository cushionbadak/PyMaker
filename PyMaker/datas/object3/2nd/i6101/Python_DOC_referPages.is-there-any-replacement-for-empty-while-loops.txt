Natural Text
I'm using empty while loops a lot, for example:I have a thread running in the background that will change a value called "a" in 5 seconds. however, I'm using a different function at the same time, and I want to let the second function know that the value has changed, so what I always did was:It's important to mention, that example could not use wait and set to an  event, because there is no indication to when you need to run set, and how much threads are running in the background, and even what numbers will have a thread waiting for them to change.And also you can't use join because changing 'a' is not a sign to print, only the condition is the sign.Async and select can't help me as well because of the last reason.Is there any way to create something, that will stop the program fromrunning until the condition will become true? you can provide your solution with any programming language you want, but mainly I'm using python 3.EDIT: please remember that I need it to work with every condition. And my code example- is only an example, so if something works there, it doesn't necessarily will work with a different condition.Thank you very much in advance :)Idea:
You need to use  or  system calls if you're waiting for some system operation to finish. In case you're waiting for a certain IO event, then you can use  (provided your Python version > 3.3), otherwise you could consider .If you're doing some CPU bound operations you need to consider multiple processes or threads, only then you can do any such monitoring effectively. Having a while loop running infinitely without any interruption is a disaster waiting to happen.
If your thread only changes 's value once, at the end of its life, then you can use  to wait for the thread to terminate.If the thread might change 's value at any point in its lifetime, then you can use one of the  module's more generalized control flow objects to coordinate execution. For instance, the  object.One drawback to this  approach is that the thread target has to explicitly call  whenever it changes the value of , which can be irritating if you change  several times in your code. You could automate this away using a property:Now  doesn't have to do anything special after setting 's value.
What you are describing is a spin lock, and might be fine, depending on your use case.The alternative approach is to have the code you are waiting on call you back when it reaches a certain condition. This would require an async framework such as https://docs.python.org/3/library/asyncio-task.htmlThere are some nice simple examples in those docs so I won't insult your intelligence by pasting them here.


Answer URL
https://docs.python.org/3/library/asyncio.html
https://docs.python.org/3/library/asyncio-task.html
