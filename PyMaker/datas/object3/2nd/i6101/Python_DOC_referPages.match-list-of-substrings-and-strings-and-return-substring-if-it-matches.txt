Natural Text
I've seen may questions on this topic but most are the opposite of mine. I have a list of strings (column of a data frame) and a list of sub strings. I want to compare each string to the list of sub strings If it contains a sub string then return that sub-string else print 'no match'.my current output looks like this though:I suspect my code is just returning the first thing in the series, how do I change that to the correct thing in the series? Here is the Function:
The pandaic way to solve this would be to not use loops at all. You could do this pretty simply with :
How about this:The problem with your code was that you were checking for matches with  but returning the first item of the iteration first ().EDIT kudos @Coldspeed
I think you are over complicating things with a nested loop then the  test inside. Would this work better:
Unless there is code missing that accounts for it, it would appear that your code returns the result for the very first comparison, and actually does not look at any of the other items in the  list. If you would rather stick with nested loops, I would suggest modifying your code like so:This assumes that  is a list of strings containing the column information (dogfood, mousehouse, etc) and that  is a list of strings containing the substrings you wish to search for.  is a list of strings returned by  that contains the search results for each item in .For each value in  we examine, we append the  string to subMatch, basically assuming we did not find a match. Then we iterate through , checking to see if the substring  is contained within . If there is a match, then  replaces the most recent  we appended with the matching substring, then we break to move onto the next item in  since we don't need to search for any more values. Note that  can be replaced with other methods, such as doing  followed by , though at that point I think it is more personal preference. Once all elements in  have been checked,  is returned, at which point you can then process it however you like.


Answer URL
https://docs.python.org/3/library/functions.html#next
