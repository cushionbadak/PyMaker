Natural Text
In Python 2.7  interpolates pattern  as name of the section.In Python 3.6 (as well as 3.3)  fails at the same interpolation with  exception.When has the behaviour of the interpolation changed? What is the rationale of the decision (as it is harming backward-compatibility)?In contrast to how to interpolate the section-name with configparser I am not asking how can I get that interpolation in Python 3.x.
In python 3.2 the old ConfigParser class (which implemented  interpolation) was removed and replaced by what had previously been the SafeConfigParser class.  From the What's New file:The configparser module was modified to improve usability and predictability of the default parser and its supported INI syntax. The old ConfigParser class was removed in favor of SafeConfigParser which has in turn been renamed to ConfigParser.The detailed motivation seems to be described in this bug report:I want to sum up all strange things about the behaviour of ,  a special key present in every section of a parser instance.There is a special  key in every section.Except for the DEFAULTSECT. key is set for every section read from a file.and not when adding by .if  does exist, it's not visible in but it is visible here: and can be obtained by and can be changed by and can be removed by even if the value is changed by , it won't be written back to a file with All this looks like a feature that was not particularly complete and  well defined when it was first created. Or possibly, it became rotten  with time and now nobody is using it anyway. That way or the other, I  couldn't come up with a valid use case for  with the current  implementation. It doesn't serve any internal purpose and the only  way you can actually get it is to   which returns 'section' anyway. About as useless as it gets. Of  course, one can go and take the internal parser._sections data  structure of the parser but that's evil.I want simply remove all mentions of a special  key in  configparser.py. Backwards compatibility is not a concern here because  in this case we have a concept that is so broken that you can't  actually use it.


Answer URL
https://docs.python.org/3/whatsnew/3.2.html#configparser
