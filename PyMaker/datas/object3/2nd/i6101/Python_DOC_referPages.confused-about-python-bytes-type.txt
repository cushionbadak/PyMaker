Natural Text
I'm reading a binary file (Python 3) and am trying to convert chunks with the help of the struct module.When I use : it gives me the expected But I can't use that syntax on even though:gives the same type:What am I mixing up? I think this used to work for me in Python 2.x.
 is two bytes: 0x6b 0x0a.  is four bytes: 0x36 0x62 0x30 0x61.
Inside bytes literals you may use 2 methods for specifying individual bytes:a direct ASCII character, e. g. , oran escape sequence (starting with ), e.g. Of course, you may combine both methods in one bytes literal, e. g. So your  and  a both the valid bytes literals - but unfortunately different:the 1stÂ  one consists of  bytes (represented as escape sequences  and ) the 2nd one consists of  bytes (represented as ASCII characters , , , and ).
inside a  is the standard string literal's escape sequence (allowed in bytes literals, too) for the hexadecimal representation of a single byte, whileinside that bytes literal are two ASCII characters representing two bytes.From Python documentation:Only ASCII characters are permitted in bytes literals (regardless of the declared source code encoding). Any binary  values over 127 must be entered into bytes literals using the appropriate escape sequence.While bytes literals and representations are based on ASCII text, bytes objects actually behave like immutable sequences  of integers, with each value in the sequence restricted such that 0 <= x < 256.


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes-objects
https://docs.python.org/3/library/stdtypes.html#bytes-objects
