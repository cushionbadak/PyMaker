Natural Text
This question already has an answer here:What are the risks of running 'sudo pip'?                    4 answers                Is it acceptable and safe to run pip install under sudo?                    6 answers                How to install python modules without root access?                    7 answers                Why i can't do some things without sudo using Python and pip?                    2 answers                Going around I read a lot about how  is a very bad habit/solution. Some reasons people gave were:It could run malicious code.It will break permission structs.Sudo is used to install a package "system wide".It is Satan!1!!oneAn alternative I found is running  with  (e.g. ). I saw that python in Debian works a little different (I have Stretch), mostly because of path used ( is standard in Debian if omitted, btw). In conclusion, I found a lot of inconsistent things.Taking for granted that using  and  together are wrong, can someone explain me why, and most of all, when is it wrong? Major issues I encountered were all about permissions, so my guess is that  "just" ruin ownership.Are there any other solutions besides using  or virtualenv?
Unless you want or have to install a binary, service or dependency globally, you would not want to use .  As you surmise correctly, it installs your dependency globally, and this may cause inconsistencies while developing.The more conventional thing to do nowadays is to use a virtualenv with which to install your dependencies.  This way, anything you do with installation is local to that specific virtualenv instance of Python.


Answer URL
https://docs.python.org/3/tutorial/venv.html
