Natural Text
I'm writing some automation software using , , .Most of the the logic is ok to be executed by the single browser instance, but for some part i have to launch 10-20 instances to have a decent execution speed.Once it comes to the part which is executed by , browser interactions start throwing this error:browser setup:relevant code: instantiates a webdriver and execute a few page interactions. I suppose the interactions themselves are not relevant because everything works without .However, in short:While runs in , the error above appears at this point  or at this is working:these options are not working: ()UPDATE:I found a temporal solution (which does not invalidate this initial question) - to instantiate a  outside of  class. Don't know why it works but the initial does not. I suppose the cause in some language specifics?Thanks for answers, however it doesn't seem like the problem is with the   limit - as you see in one of the options i tried to submit a single instance and it is still didn't work.current workaround:
This error message......seems to be an issue in 's connection pooling which raised these WARNING while executing the  method in connectionpool.py.ThreadPoolExecutorThreadPoolExecutor is an Executor subclass that uses a pool of threads to execute calls asynchronously. Deadlocks can occur when the callable associated with a Future waits on the results of another Future.An Executor subclass that uses a pool of at most max_workers threads to execute calls asynchronously.initializer is an optional callable that is called at the start of each worker thread; initargs is a tuple of arguments passed to the initializer. Should initializer raise an exception, all currently pending jobs will raise a BrokenThreadPool, as well as any attempt to submit more jobs to the pool.From version 3.5 onwards: If max_workers is None or not given, it will default to the number of processors on the machine, multiplied by 5, assuming that ThreadPoolExecutor is often used to overlap I/O instead of CPU work and the number of workers should be higher than the number of workers for ProcessPoolExecutor.From version 3.6 onwards: The thread_name_prefix argument was added to allow users to control the threading.Thread names for worker threads created by the pool for easier debugging.From version 3.7: Added the initializer and initargs arguments.As per your question as you are trying to launch 10-20 instances the default connection pool size of 10 seems not to be enough in your case which is hardcoded in adapters.py. Moreover, @EdLeafe in the discussion Getting error: Connection pool is full, discarding connection mentions:It looks like within the requests code, None objects are normal. If  gets None from the pool, it simply creates a new connection. It seems odd, though, that it should start with all those None objects, and that _put_conn() isn't smart enough to replace None with the connection.However the merge Add pool size parameter to client constructor have fixed this issue. SolutionIncreasing the default connection pool size of 10 which was earlier hardcoded in adapters.py and now configurable will solve your issue.UpdateAs per your comment update ...submit a single instance and the outcome is the same.... as per @meferguson84 within the discussion Getting error: Connection pool is full, discarding connection:I stepped into the code to the point where it mounts the adapter just to play with the pool size and see if it made a difference. What I found was that the queue is full of NoneType objects with the actual upload connection being the last item in the list. The list is 10 items long (which makes sense). What doesn't make sense is that the unfinished_tasks parameter for the pool is 11. How can this be when the queue itself is only 11 items? Also, is it normal for the queue to be full of NoneType objects with the connection we are using being the last item on the list?That sounds like a possible cause in your usecase as well. It may sound redundant but you may still perform a couple of ad-hoc steps as follows:Clean your Project Workspace through your IDE and Rebuild your project with required dependencies only.(WindowsOS only) Use CCleaner tool to wipe off all the OS chores before and after the execution of your Test Suite.(LinuxOS only) Free Up and Release the Unused/Cached Memory in Ubuntu/Linux Mint before and after the execution of your Test Suite.
please see your errorThe error come because you are doing multiple connection too fast, it can be server down or server block your request. 


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor
