Natural Text
I am trying to learn Python and while creating my own class, I came across this problem. I want to call an inner function inside my function. The problem is how can I build this type of structure in Python 3?Basicly I want to be able to do this "GetAttributes().GetName()" which will return self.name or "GetAttributes().GetAge()" which will return self.Edit: For duplicate of another question. I am trying to call multiple functions not one.
@ShivamKotwalia's answer is what you're looking for, but since it seems you are trying to understand why your implementation didn't work, I'll expand a little bit.Currently your implementation is creating nested functions in the local scope.  In another word, once the code is outside of the function the objects inside the local scope cease to exist unless ed to the outer scope.  Take for instance a modification of your code:This allows you to reference back to  and  now because they have been passed back to the outer scope.  Assuming you have a  object that has the attribute  and :Notice how  has the two inner functions passed in, and that they are .  Whereas  is under the  scope: .You can then get the two functions by the index of :Notice again how you still require  to be passed in, because both functions were defined as requiring the argument .  You could opt to remove the arguments...:But then you're still faced with a few problems:You first have to assign an object for the function to access the inner functions.  The  function return nothing but its inner functions.  The access to the local functions are not meaningfully structured.There's no guarantee that the object you pass in will always have  and  attributes.That's why the OOP approach (e.g. ) and  exist:This address all the issues above as you now have:You just need to create an instance of the   instead of messy function handling. is not necessary any more.  Easy and meaningful access to get .  The objects using these  are guaranteed to have  and  attributes."But what about the  method?" you ask? Why, Python does have a built-in  function that will serve your need!Having said all that, there does exist  where you can do something like this:But you very quickly run into limitations and problems managing all the objects and functions you might pass within the scopes.  Try it and you will see.  Thus, why would you opt to go through this trouble when ,  and  already do everything that you need with the benefits of safeguards in place?
I think your solution is simple, apply OOP in Python, and rather than making GetAttributes as function make it as a class. OutputI am not very much sure that how are you filling the data, but this is seems to be very pythonic way tto do this :) Happy Pythoning!
I think this might be a little helpful, Try this:and you can use it like  or  and so on.also, note that in the comments our friends are saying method names are better to be lower case in Python.it is one of Python naming conventions.


Answer URL
https://docs.python.org/3/reference/executionmodel.html
https://docs.python.org/3/library/functions.html?highlight=getattr#getattr
https://docs.python.org/3/howto/functional.html?highlight=functions
