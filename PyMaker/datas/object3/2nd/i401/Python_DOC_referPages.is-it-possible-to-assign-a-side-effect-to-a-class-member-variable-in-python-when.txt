Natural Text
Is it possible to patch over a class instance variable and force it to return a different value each time that it's referenced? specifically, I'm interested in doing this with the side_effect parameterI know that when patching over a method it is possible to assign a side_effect to a mock method. If you set the side_effect to be a list it will iterate through the list returning a different value each time it is called. I would like to do the same thing with a class instance variable but cannot get it to work and I cannot see any documentation to suggest whether this is or is not possibleExampleOutputDesired OutputTo be clear - I'm aware that I can wrap member_variable in a get_member_variable method(). That is not my question. I just want to know if you can patch a member variable with a side_effect. 
 can be either a function, an iterable or an exception (https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect). I think that's the reason why it's not working.Another way to test this would be:Here's the docs: https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch
