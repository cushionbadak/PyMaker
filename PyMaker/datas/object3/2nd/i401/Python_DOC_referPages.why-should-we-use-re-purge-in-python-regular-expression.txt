Natural Text
What is significance of clearing cache while working with  in Python.Does it help in performance or memory management? What happens if we ignore it. Where should  called?
Most code will not need to worry about purging the  module cache. It brings very little memory benefit, and can actually hurt performance if you purged it.The cache is used to store compiled regular expression objects when you use the top-level  functions directly rather than use .  For example, if you used  in a loop, then the  module would compile  only once and store it in the cache, avoiding having to re-compile the pattern each time.How many such objects are cached and how the cache is managed is an implementation detail, really, but regular expression objects are light-weight objects, taking up at most a few hundred bytes, and Python won't store more than a few hundred of these (Python 3.7 stores up to 512).The cache is also automatically managed, so purging is not normally needed at all. Use it if you specifically need to account for regular expression compilation time in a repeated time trial test involving  functions, or are testing the caching functionality itself. The only locations in the Python standard library that call  are in tests (specifically in the  unittests for the  module and the reference leak test in the regression test suite).If your code is creating a lot of regular expression objects that you intent to keep using, it is better to use  and keep your own references to those compiled expression objects. See the  documentation:The sequenceis equivalent tobut using  and saving the resulting regular expression object for reuse is more efficient when the expression will be used several times in a single program.Note: The compiled versions of the most recent patterns passed to  and the module-level matching functions are cached, so programs that use only a few regular expressions at a time neednâ€™t worry about compiling regular expressions. 


Answer URL
https://docs.python.org/3/library/re.html#regular-expression-objects
https://docs.python.org/3/library/re.html#re.compile
