Natural Text
Is there a Boolean function to test whether an integer is an index value contained in a  object? Without unpacking , ,  parameters? Throws an error as slices are not iterable. The predicate should work for arbitrary  , ,  parameters. The logic is straightforward but hoping there's a built in or package.
The logic is not as straightforward as you think, since it doesn't make sense to do this for a  stop or start (depending on the sign of ), since you need to specify a length.Essentially, what you are asking for is containment in a  object, which holds the same information as a slice, but is a valid sequence, and supports fast containment checking.  has an  method to help with the transformation, if you provide the length of the sequence you are interested in slicing:
If you can select an appropriately sized range, you can apply the slice to it and determine if the index will be in the range.for positive/None boundaries, this is merely a matter of having a big enough range to contain the index itself:In order to support negative boundaries (in particular a negative start), you'll need to ensure that index offset from start is a multiple of the step and that the size is small enough to include the index.  This is under the assumption that there exists a range size that will contain the index.  Otherwise you'll have to supply a range size yourself:This will provide the following results:


Answer URL
https://docs.python.org/3/library/functions.html#func-range
https://docs.python.org/3/library/functions.html#slice
