Natural Text
I got the following code from github about MRO and C3, and I don't quite understand the the last three lines, and what the difference among super().foo(), super(B,self).foo() and super(C,self).foo() in python3.x, code as follows:the expected and actual results is as follow:
First of all, the form  in Python 3 is really the same thing as , where the Python compiler provides enough information for  to determine what the correct class to use is. So in ,  can be read as .To understand what is going on, you need to look at the  attribute:This attribute is a tuple of classes that are considered when looking for base classes during method resolution.It is this tuple that shows you what the C3 Method Resolution Order is for any given class hierarchy. For your class , that order is:The  object bases everything off from that ordered sequence of classes. The callresults in the following series of steps:The  object retrieves the  tuple. locates the index for the  class in that tuple.Accessing the  attribute on the  object triggers a search for a class that has a  attribute on the MRO, starting at the next index after the  index.If the attribute found this way is a descriptor object binds the attribute found this way to . Functions are descriptors, binding produces a bound method, and this is how Python passes in the  reference when you call a method.Expressed as simplified Python code that ignores edge cases and other uses for ,  that would look like:Combining those two pieces of information, you can see what happens when you call : is executed, resulting in foo in E is executed, effectively the same thing as .The MRO is searched, starting at the next index past , so at  (no  attribute), moving on to  (no  attribute), then  (attribute found).  is returned, bound to . is called, resulting in foo fo C is executed.The MRO is searched, starting at the next index past , so at  (attribute found).  is returned, bound to . is called, resulting in foo fo C is executed.The MRO is searched, starting at the next index past , so at  (attribute found).  is returned, bound to . is called, resulting in foo of A


Answer URL
https://docs.python.org/3/library/stdtypes.html#class.__mro__
https://docs.python.org/3/howto/descriptor.html
