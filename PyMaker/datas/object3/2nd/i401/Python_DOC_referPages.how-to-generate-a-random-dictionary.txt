Natural Text
I need to create a dictionary with key and random values given a scope, i.e.oror...and so onAs you can see, the dictionary has the pattern below:the key is generated from the input number of the function, if I input 5, I have 5 keys, if I input 3, I have 3 keysthe value has only 2 different values ( and ), but  can only appear 1 time randomly in any key. The remaining values will be .Code:
Just default all the values to  first, and then randomly pick one key to change to :
You can simply try this:
similar to @Idlehands, but parametrized for n and actually returns the dict
I think the fastest way would be to use the built-in  classmethod to create a dictionary full of  entries and then randomly change one of them.
Your question is not terribly clear to me, but I think this is what you are trying to do:Your list either has to be 5 values long (or more) or your for loop has to iterate only twice.
You could do it with a  comprehension and :
There are already a few options, but this is what I came up with:It's not the cleanest or most beautiful, but I think it makes sense and is easily readable!Running it once gave me:{'key 3': ['value1'], 'key 4': ['value1'], 'key 2': ['value1'], 'key 1': ['value2'], 'key 0': ['value1']}

You could also increase another wrinkle of randomness as shown below:
You can pick a number first, and then use a dict comprehension to generate the desired dict with values based on whether the index is equal to the picked number or not:
Just for fun:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.fromkeys
