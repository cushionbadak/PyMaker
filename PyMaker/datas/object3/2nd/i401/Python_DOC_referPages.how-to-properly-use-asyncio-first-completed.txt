Natural Text
The problem is that I keep getting  error even when I use  inside .My code:Expected behaviour: should kill all remaining tasks when first result is returned "under the hood". But in fact there still remain uncompleted tasks after first result returned. And after I close the loop in  and access result inside  those remaing tasks raise .Console output:
The  coroutine returns when at least one of the tasks has completed. Other tasks can still be active. It is not the job of  to cancel those tasks for you. The use-case of  is to let you monitor tasks and act on their results as they complete; you usually would call it repeatedly until all your tasks are finished.From the  documentation:Run awaitable objects in the aws set concurrently and block until the condition specified by return_when.[...]return_when indicates when this function should return. It must be one of the following constants:  The function will return when any future finishes or is cancelled.[...]Unlike ,  does not cancel the futures when a timeout occurs.The documentation explicitly states that it will not cancel futures, even when you set a timeout (if you do set a timeout, then the first done set is simply empty, the tasks are all still active and listed in the second pending set).If you need the unfinished tasks to be cancelled, do so explicitly:Demo with some extra printing and randomised tasks:


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.wait
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
