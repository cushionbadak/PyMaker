Natural Text
This is the code:I want to create a code that checks if there is an odd digit in a number and increments or decrements the number until there are no odd digits in the number.
I'm not really clear on what output you're expecting, so assuming that you want no odd digits in a number(4567 -> 4468)You simply can do that by:You don't really need an Even function if you're having if-else in main program already.As of your code, if you're using the Even function, you need to return a the value  or .You're getting the  as you're calling same function(looping it) without any stopping condition. This statement in your function is creating the issue and after a limit, python stops executing and gives you the error. If you can elaborate the use of  and moves, I'd be able to add them in program.
Even without an unconditional call to  as the last step, your code was heading for "maximum recursion depth exceeded" regardless.The problem is you're incrementing or decrementing the number based on it's digits.  Consider a number like  with one high order odd digit.  You'd need to increment or decrement it nearly 1000 times over 1000 recursive calls.  But the default stack depth is only 1000 frames, so you're already sunk.But it gets worse.  Consider a simple number like , your decrementing and incrementing logic will change it to 9, then back to 10, then 9, then 10, and so on.You're better off incrementing and decrementing individual digits, as @DeepMehta does, rather than the entire number.To properly control the recursive call to , use your  and/or  counters to determine if any changes were made during this call.  If no changes, return the number.  If there were changes, recurse to finish the job.And as far as the  function, you can simply do:


Answer URL
https://docs.python.org/3/library/exceptions.html#RecursionError
