Natural Text
I recently had to construct a module that required a tensor to be included. While back propagation worked perfectly using , it did not show up when printing the net object. Why isn't this  included in contrast to other modules like ? (Shouldn't it behave just like ?)Output:
When you call , the  method is called.  gives the “official” string representation of an object. In PyTorch's  (base class of your  model), the  is implemented like this:Note that the above method returns  which contains call to only  and , thus it prints only modules by default. PyTorch also provides  method which you can implement yourself for extra representation of the module.To print customized extra information, you should reimplement this method in your own modules. Both single-line and multi-line strings are acceptable.
According to  docs:Parameters are :class: subclasses, that have a      very special property when used with :class: s - when they're      assigned as Module attributes they are automatically added to the list of      its parameters, and will appear e.g. in :meth: iterator.So you can find it in . Let's look at the following example:Code:Output:As you can see, there is no  or 'parameter' object (because  is subclass of ), only s.Now let's try to get our net parameters:Code:Output:Ok, so the first one is your . Next two is weights and bias of . Let's verify it:Code:Output:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__repr__
