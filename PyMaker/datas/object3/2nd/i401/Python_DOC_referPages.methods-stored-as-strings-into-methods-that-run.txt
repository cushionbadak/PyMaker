Natural Text
This question already has an answer here:Is there a way to store a function in a list or dictionary so that when the index (or key) is called it fires off the stored function?                    2 answers                I had a dictionary like this:But as I don't want all my functions to run when I declare the dictionary, I stored them as strings:What I wanted to do was to call just one function based on the key that is associated with it:If I print wanted_variable now it will return "function_1()", and I want it to be what function_1() returns...Can anyone help me please?
Since functions are first class objects, you can pass around references to them without calling them, and call them later:Alternatively,Which ends up doing the same thing but without having to loop though the dictionary items.For more complicated scenarios, when you want to capture an uncalled function but also the parameters to that function, there's also For example:
You can store functions without doing a call:And after itBy the way, there is more efficient way of getting :
You need to define dictionary with just function names:If you wrap paranthesis after function name, you call it immediately.Call the required function matching as:
You could just store the functions without calling them:Then:
You can store functions without the () so they won't execute, then you could do:
 is a more simpler and actual answer to this question of yours.


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
