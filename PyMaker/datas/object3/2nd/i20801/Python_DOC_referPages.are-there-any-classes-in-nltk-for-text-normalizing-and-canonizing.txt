Natural Text
The prevalent amount of NLTK documentation and examples is devoted to lemmatization and stemming but is very sparse on such matters of normalization as:converting all letters to lower or upper caseremoving punctuationconverting numbers into wordsremoving accent marks and other diacriticsexpanding abbreviationsremoving stopwords or "too common" wordstext canonicalization (tumor = tumour, it's = it is)Please point me where in NLTK to dig. Any NLTK equivalents (JAVA or any other) for aforementioned purposes are welcome. Thanks.UPD. I have written a python library of text normalization for the text-to-speech purposes https://github.com/soshial/text-normalization. It might suit you as well.
Also in NLTK spec a lot of (sub-)tasks are solved using purely python methods.a) converting all letters to lower or upper caseb) removing punctuationc) converting numbers into wordsHere, it would be not that wasy to write a fewliner, but there are a lot of already existing solutions, if you google it. Code snippets, libraries etcd) removing accent marks and other diacriticslook up point b), just create the list with diacritics as punctse) expanding abbreviationsCreate a dictionary with abbreviations:f) removing stopwords or "too common" wordsCreate a list with stopwords:g) text canonicalization (tumor = tumour, it's = it is)for tumor-> tumour use regex.Last, but not least, please note that all of the examples above usually need calibration on the real textes, I wrote them as the direction to go.
I suggest using stopwords.words() for stopword removal. Supports following languages: Danish, Dutch, English, French, German, Italian, Norwegian, Portuguese, Russian, Spanish, Swedish.
I might be a little bit late, but this may be helpful. Here are the stop words for some languages (English, French, German, Finish, Hungarian, Turkish, Russian, Czech, Greek, Arabic, Chinese, Japanese, Korean, Catalan, Polish, Hebrew, Norwegian, Swedish, Italian, Portuguese and Spanish):https://pypi.python.org/pypi/many-stop-words


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.casefold
