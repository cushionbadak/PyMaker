Natural Text
I have a concern about multiprocessing.Manager() in python, here is the example,and the output is,Till now, it worked as my expected, then I modified the code like this,now, the output is,It confused me why the list was not changed as my expected? anybody can help me to figure out what happened? Thanks in advance!
Manager proxy objects are unable to propagate changes made to (unmanaged) mutable objects inside a container. So in other words, if you have a  object, any changes to the managed list itself are propagated to all the other processes. But if you have a normal Python list inside that list, any changes to the inner list are not propagated, because the manager has no way of detecting the change. In order to propagate the changes, you have to use  objects for the nested lists too (requires Python 3.6 or newer), or you need to modify the  object directly (see the note on  in Python 3.5 or older).For example, consider the following code and its output:Output:As you can see, when a new value is assigned directly to the managed container, it changes; when it is assigned to a mutable container within the managed container, it doesn't change; but if the mutable container is then reassigned to the managed container, it changes again. Using a nested managed container also works, detecting changes directly without having to assign back to the parent container.
 is a NamespaceProxy instance. These objects have special , , and  methods that allow values to be shared across processes.In order to take advantage of this mechanism when changing a value, you must trigger .causes  to be called to retrieve , but it does not cause  to be called.To fix this, you must use .


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#multiprocessing
