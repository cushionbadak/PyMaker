Natural Text
How to convert a string in the format  to timestamp?

To convert the string into a date object:The way to convert the date object into POSIX timestamp depends on timezone. From Converting  to UTC timestamp in Python:date object represents midnight in UTCdate object represents midnight in local timeThe timestamps are different unless midnight in UTC and in local time is the same time instance.
I use , which is 62x faster than datetime's strptime.You can learn more here.

The answer depends also on your input date timezone. If your date is a local date, then you can use mktime() like katrielalex said - only I don't see why he used datetime instead of this shorter version:But observe that my result is different than his, as I am probably in a different TZ (and the result is timezone-free UNIX timestamp)Now if the input date is already in UTC, than I believe the right solution is:
Simply use :Result:To use UTC instead of the local timezone use :
First you must the strptime class to convert the string to a struct_time format. Then just use mktime from there to get your float.
I would suggest dateutil:
A lot of these answers don't bother to consider that the date is naive to begin withTo be correct, you need to make the naive date a timezone aware datetime firstAlso:Be careful, using  for  in a  DOESN'T WORK for many timezones. See datetime with pytz timezone. Different offset depending on how tzinfo is sethttps://en.wikipedia.org/wiki/Local_mean_time
just use datetime.timestamp(your datetime instanse), datetime instance contains the timezone infomation, so the timestamp will be a standard utc timestamp. if you transform the datetime to timetuple, it will lose it's timezone, so the result will be error.if you want to provide an interface, you should write like this: int(datetime.timestamp(time_instance)) * 1000
Seems to be quite efficient:1.61 µs ± 120 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)


Answer URL
https://docs.python.org/3/whatsnew/3.3.html
https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp
