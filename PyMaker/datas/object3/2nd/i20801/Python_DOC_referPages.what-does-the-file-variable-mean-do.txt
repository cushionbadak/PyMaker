Natural Text
I usually just hardwire these with the actual path.  But there is a reason for these statements that determine path at runtime, and I would really like to understant the os.path module so I can start using it.
When a module is loaded in Python,  is set to its name. You can then use that with other functions to find the directory that the file is located in.Taking your examples one at a time:You can see the various values returned from these here:and make sure you run it from different locations (such as ,  and so forth) to see what difference that makes.
I just want to address some confusion first.   is not a wildcard it is an attribute.  Double underscore attributes and methods are considered to be "special" by convention and serve a special purpose.http://docs.python.org/reference/datamodel.html shows many of the special methods and attributes, if not all of them.In this case  is an attribute of a module (a module object).  In Python a  file is a module.  So  will have an attribute of  which means different things under difference circumstances.Taken from the docs: is the pathname of the file from which the module was loaded, if it was loaded from a file. The  attribute is not present  for C modules that are statically linked into the interpreter; for  extension modules loaded dynamically from a shared library, it is the  pathname of the shared library file.In your case the module is accessing it's own  attribute in the global namespace.To see this in action try:And run:
Per the documentation: is the pathname of the file from which the module was  loaded, if it was loaded from a file. The  attribute is not  present for C modules that are statically linked into the interpreter;  for extension modules loaded dynamically from a shared library, it is  the pathname of the shared library file.and also: is to be the “path” to the file unless the module is built-in (and thus listed in ) in which case the attribute is not set.
Using  combined with various  modules lets all paths be relative the current module's directory location.  This allows your modules/projects to be portable to other machines.In your project you do:and then try to deploy it to your server with a deployments directory like  then your code won't be able to find the paths correctly.


Answer URL
https://docs.python.org/3/reference/datamodel.html
