Natural Text
I want to skip the first 17 lines while reading a text file.Let's say the file looks like:I just want the good stuff. What I'm doing is a lot more complicated, but this is the part I'm having trouble with.
Use a slice, like below:If the file is too big to load in memory:
Use , starting at index 17. It will automatically skip the 17 first lines.
Full demo:Advantages: This is easily extensible to cases where your prefix lines are more complicated than "0" (but not interdependent).
This solution helped me to skip the number of lines specified by the  variable.You get the index (int) and the line (string) if you want to keep track of those too.In your case, you substitute linetostart with 18, or assign 18 to linetostart variable.
Here is a method to get lines between two line numbers in a file:Output:Just call it with one parameter to get from line n -> EOF
If it's a table. 
If you don't want to read the whole file into memory at once, you can use a few tricks:With  you can advance to the next line:Of course, this is slighly ugly, so itertools has a better way of doing this:
Here are the timeit results for the top 2 answers. Note that "file.txt" is a text file containing 100,000+ lines of random string with a file size of 1MB+.Using itertools:Using two for loops:clearly the itertools method is more efficient when dealing with large files.
You can use a List-Comprehension to make it a one-liner:More about list comprehension in PEP 202 and in the Python documentation.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
