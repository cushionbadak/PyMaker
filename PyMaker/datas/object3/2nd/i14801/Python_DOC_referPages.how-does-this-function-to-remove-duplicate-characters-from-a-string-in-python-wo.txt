Natural Text
I was looking up how to create a function that removes duplicate characters from a string in python and found this on stack overflow: It works, but how? I've searched what OrderedDict and fromkeys mean but I can't find anything that explains how it works in this context.
I will give it a shot:OrderedDict are dictionaries that store keys in order they are added. Normal dictionaries don't. If you look at doc of , you find:OD.fromkeys(S[, v]) -> New ordered dictionary with keys from S.So the  class method, creates an  using items in the input iterable S (in my example characters from a string) as keys. In a dictionary, keys are unique, so duplicate items in  are ignored.For example:This results in an OrderedDict:Then  takes an iterable and joins its elements using a space in this case. It uses only keys, as iterating through a dictionary is done by its keys. For example:Results in: Subsequently, call to join:will print out:Using setSometimes, people use a set for this:But unlike sets in C++, sets in python do not guarantee order. So using a set will give you unique values easily, but they might be in a different order then they are in the original list or string (as in the above example). Hope this helps a bit.
By list comprehension


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
