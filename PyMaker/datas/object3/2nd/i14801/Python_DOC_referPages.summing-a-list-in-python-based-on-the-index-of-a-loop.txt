Natural Text
I have a list with numbers in it and I would like to sum different parts (in successive order) of that list and store those values in a new list. Example:Of course the list I have is much longer so I would assume I need a for loop, but I am unsure how to proceed.
This is called a cumulative sum and there is a function in  for the job:
You can use a simple list comprehension, with slicing and  function, like thisNote: As paxdiablo and DSM noted, this method will be highly inefficient, as it has to find the sum of all the numbers which were seen before, again and again (for example, when you find sum of first 4 elements, you would be computing sum of first three elements as well, and implicitly sum of 2 elements as well). So, this is not suitable for larger lists.The best way to solve this is by accumulating the results in a temporary variable and store it in the list like thisActually, if you are going to iterate over the sums and if the actual list is very big, then you can better make it as a generator function, like thisand then iterate it to get the values one by one, like thisYou can also get the entire list, with  function, like thisFYI, Python 3.2+ has a function called , which can be used like thisOr you can pass your own function which adds two numbers to , like this

Why not take your list and turn it into an array and then sum. The code would look something like this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
