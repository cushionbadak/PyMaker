Natural Text
In a third-party script, it's meant to spit out Json for me to decode but instead prepends a timestamp:All of this is in one big integer. I've tried to split this based on the space/whitespace contained before the first curly bracket but can simply not do it. I'd really appreciate some pointers - I'm aware my questions here are very basic, and apparently I'm going to be blocked soon unless I improve, so please don't shoot me for asking another simple one!Updated 31/3/2015 for @Alex.I realise it may seem impossible but assure you that it returns a datatype of int. You may not believe it, but you'll have to, and check the guy's code here. This is what I've used to call the script:If you find that too unbelievable then look at the code of fetch_neurio yourself. If you're struggling to help a cretin like me, then no worries. I just came here to ask for help.Thanks
No idea what you mean by "one big " in the text and subject since pretty clearly the data is a string, not an integer.  I'm going to answer on the assumption that your repeated use of  is just a weird repeated typo and you meant "string" instead.Given(removing the  to make the JSON part syntactically valid),...yep, it is as simple as this!-)"Splitting on " means to split on sequences of 1+ whitespace characters (in case that blank-looking thing might be a tab or whatever, we don't care:-).  The second optional argument, here , to the split method, means to do just one split (on the very first sequence of whitespace) -- thus producing two pieces that we assign correspondingly to two variables.There are of course other possibilities, for example using regular expressions, if the anomalies in  are worse than you have communicated so far (i.e, more than just a pre-pended, whitespace separated timestamp), but based on what you have communicated, this simplistic approach should suffice.
pass  the second argument to split as 1.
What you see on the screen (a line that starts with ) is the output from the shell command that you've started using  function. It is printed directly to stdout.  returns the exit code from the command (an integer); it does not return the output.To capture the output from a subprocess, you could use: . Or (better) import the module and call the appropriate functions, to get the result without unnecessary external process and printing/parsing:


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.check_output
