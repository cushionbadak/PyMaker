Natural Text
I was using Python 2.7 in my project and since I have seen that Python 3.5 is already coming soon, I decided to upgrade my Python interpreter.I am using  encoding. Since string objects are somehow different in new Python versions, I am getting the following error:I have already found out that I have to encode my string before passing it to this function (), but isn't there a way to encode the string automatically to unicode or something? 
In Python 3,  means "unicode text" -- whether you express it as  or  makes no difference (the latter is tolerated only to facilitate porting/coexistence with Python 2).To indicate a binary string of bytes, you'd use  instead.As https://docs.python.org/3/library/base64.html puts it,This module provides functions for encoding binary data(my emphasis) -- nothing to do with text (i.e unicode) data.  As a logical consequence, all functions in the module expect or return byte strings.Not sure why you can't be using byte strings (as opposed to text strings) directly in your program, but if that's a problem, simplest is to wrap the needed functions from the  module into your own function that provide whatever encoding (text -> bytes) or decoding (bytes -> text) you require.  For example:then use this  throughout the rest of your code, rather than  directly -- etc, etc for the decoding part.
I'm sure you will be glad you made the change.  You can make life easier (if you need to) by using the ftfy package:   http://blog.luminoso.com/2012/08/24/fixing-unicode-mistakes-and-more-the-ftfy-package/ ...or you can take a look at the chardet library:-from chardet.universaldetector import UniversalDetectorThis 'guesses' the encoding of a file, if you are unsure.


Answer URL
https://docs.python.org/3/library/base64.html
