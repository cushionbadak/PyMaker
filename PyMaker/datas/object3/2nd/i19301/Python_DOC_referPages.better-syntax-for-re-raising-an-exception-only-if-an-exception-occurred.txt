Natural Text
I find myself doing this when I want to catch an exception, always run some specific code, then re-raise the original exception:I am using the flag because calling  without a previous exception raises a . Is there a more Pythonic way to do with without the flag?
Raise the exception in the except handler:The  suite is always going to be executed wether or not you re-raised the exception.From the documentation:If  is present, it specifies a ‘cleanup’ handler. The  clause is executed, including any  and  clauses. If an exception occurs in any of the clauses and is not handled, the exception is temporarily saved. The  clause is executed. If there is a saved exception it is re-raised at the end of the  clause.Note that if the  suite uses a  or  statement, the saved exception is discarded:If the  clause executes a return or break statement, the saved exception is discarded:but if you issue a ,  or  in the  suite, the  suite is executed still:When a ,  or  statement is executed in the  suite of a ... statement, the  clause is also executed ‘on the way out.’Note that before Python 2.5, you could not even combine  and  suites in the same  statement; see PEP 341: Unified try/except/finally. Instead, you were expected to nest  statements:
 will always execute, no matter what happens in the  or  block, or whether the  block is even present.Both of these will work: 


Answer URL
