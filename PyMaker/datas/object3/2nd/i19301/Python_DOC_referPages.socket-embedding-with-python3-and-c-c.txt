Natural Text
I have a process run on python3,it have to create a module to call c library,but in c lib it have to call socket connected from python3,and result for python3[python3]--->[c]--->[c socket]--->[python socket]----->[c function]----->[python3]how to convert python type socket to c type socket ?help me an example,thanks !
A C socket is just a file descriptor, referred to by number.A Python socket is an object that wraps up a file descriptor. You can get the file descriptor number out of it with the  method.For example:(I'm assuming you're on POSIX here; on Windows, things are a bit more complicated, because you usually use  and friends, which deal in opaque  handles instead of simple integers.)Going the other way is a bit trickier.If you've created a socket in C, and want to use it in Python, you need the family, type, and proto values as well as the fd numberâ€”but if you have them,  is the answer. However, if you create a socket in Python, send its file descriptor to C, and get it back, you don't want to create a new socket object; you want to find the old one. You might consider creating a  mapping fd numbers to  objects for that case.Finally, be careful not to confuse one piece of your code by doing odd things with another. If you've read half of the next protocol message into a buffer in C, Python is going to want that half-message. If you've set the socket to nonblocking mode in Python, it's still going to be non-blocking in C. And so on.


Answer URL
