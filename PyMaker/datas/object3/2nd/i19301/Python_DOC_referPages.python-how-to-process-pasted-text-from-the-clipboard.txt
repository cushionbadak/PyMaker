Natural Text
I'm processing a string like this:This works fine.  I get the string variable 'scrpt' sorted nicely into the the variables 'Frame', 'Xco', and 'Yco'Now if I do this:I see things neatly laid out in tabbed columns like this:But if I have the same string pasted from the clipboard and try to process it it doesn't work.In this case, if I print it like this:I see:Then when I go to process it the csv module won't sort it out.What am I doing wrong?It looks like I'm using the same data in both cases but something is different.
My guess is that your clipboard has literal backslash and  characters, not tab characters. For example, if you just copy from the first line of your source, that's exactly what you'll get.In other words, it's as if you did this:â€¦ or, equivalently:If that's the problem, the fix is pretty easy:Or, in 3.x (where you can't call  on a ):The  codec is described in the list of Standard Encodings in the  module. It's defined as:Produce a string that is suitable as Unicode literal in Python source codeIn other words, if you  with this codec, it will replace each non-printing Unicode character with an escape sequence that you can type into your source code. If you've got a tab character, it'll replace that with a backslash character and a .You want to do the exact reverse of that: you've got a string you copied out of source code, with source-code-style escape sequences, and you want to interpret it the same way the Python interpreter does. So, you just  with the same codec. If you've got a backslash followed by a , it'll replace them with a tab character.It's worth playing with this in the interactive interpreter (remember to keep the  and  representations straight while doing so!) until you get it.


Answer URL
