Natural Text
I have an application which has to run a number of simulation runs. I want to setup a logging mechanisme where all logrecords are logged in a general.log, and all logs for a simulation run go to run00001.log, .... For this I have defined a class Run. in the  a new filehandle is added for the runlog. The problem is that the logfiles for the runs never get released, so after a number of runs the available handles are exhausted and the run crashes.I've set up some routines to test this as followsmain routineThe class Run is defined in module Model as followsThen I use the program process explorer to follow the filehandlers. And I see the runlogs appear, but never disappear.Is there a way I can force this?
You need to call  on the filehandler.When your  class completes, call:
You can also shutdown the logging completely. In that case, file handles are being released:It will close opened handles of all configured logging handlers.I needed it to be able to delete a log file after a unit test is finished and I was able to delete it right after the call to the  method.


Answer URL
https://docs.python.org/3/library/logging.html#logging.shutdown
