Natural Text
I am writing a python script which calculates various quantities based on two parameters, the long radius and short radius of a spheroid. It occurred to me that I could write a spheroid class to do this. However, I'm new to object oriented design and wonder if you more experienced chaps can help me. An instance is instantiated with parameters a and b for the long radius and short radius respectively, so I've designed the class as follows: One of the quantities I want to calculate is the volume. The volume of a spheroid is 4*pi/3 * a * b * b.My question is, do I define a method or an attribute for this in my class? e.g. I could define a method:or I could just use an attribute:I could also just include it in the init method:Which is better to use and why? In general, when would I use a method and when would I use an attribute? I wouldn't normally care but I have a whole load of these to implement and I'd like to have an idea about OO design for future reference. ThanksEDIT:After implementing properties as per Martijn's suggestion, I ended up with something like this:I instantiated an instance s = Spheroid() but whenever I try something like s.volume or s.epsilon I get an AttributeError:AttributeError: 'Spheroid' object has no attribute 'volume'What am I doing wrong here?Also, in my init method I used self.alpha = self.longax/self.shortax instead of a/b, does this make any difference? Is one way preferable?
You have a 3rd option: make it both an attribute and a method, by using a property:You access  like an attribute:In order for the  descriptor to work correctly, in Python 2 you need to make sure your class inherits from ; in Python 3 the baseclass can be safely omitted.In this case, the calculation of the volume is cheap enough, but a property lets you postpone having to calculate the volume until you actually need it.The above example creates a read-only property; only a getter is defined:You could easily cache the result of the property calculation:so that you only have to calculate it once per  instance.What you use depends on many factors; how easy does your API need to be to use, how often will the volume be calculated, how many Spheroid instances will be created, etc. If you create a million of these in a loop but only ever need the volume for a handfull of them, it makes sense to use a property instead of setting the volume in the .If, however, your class could adjust itself based on the volume; say, by adjusting one of the radii automatically, then a  makes more sense still:Now you have a spheroid which naturally adjusts it's short attribute as you adjust the volume:Note: technically, anything you access on an object with  notation is an attribute; methods included. For the purpose of this answer, I used your  as any value that is not called (doesn't use  after the name).
will you always use this data?if not, you could use a property and then lazily compute it...
I would implement volume as a method because of the following:it can be computed from other attributes, so it saves space to compute it (unless this is very complicated computation and than you can consider caching it)it is not a natural "feature" of the object, for example for circle the radius is an attribute but not the area (this is not really format definition)Something like volume is kind of abstract method, if you want to have family of objects and compute the volume for each of them in polymorphic way.


Answer URL
