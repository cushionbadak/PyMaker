Natural Text
I'm using Python 3.1.4 that is embedded as a scripting environment in an application(x64).So far I have encountered a lot of limitations with the embedded python. I don't know if it is normal or if the programmers of the application have blocked some functionalities. For example the following code isn't working: return the path to the application. I've tried this as wel:Without success.Is there a workaround possible ? It is very unlikely that I would have the leverage to make the developers of the application change something in their code. ThanksEDITI got it to work by adding the following:I needed this line as well:Otherwise an other instance of the application open instead of running the code.The only problem I have left is that I can't use the methods that control the application itself (like: create_project(), add_report(),..). My primary goal was to be able to call multiple methods without the need to wait for the first one to finish completion. But I think this is just not possible. 
By default,  is not available in embedded code:Embedding PythonThe basic initialization function is Py_Initialize(). This initializes  the table of loaded modules, and creates the fundamental modules  builtins, __main__, and sys. It also initializes the module search  path (sys.path).Py_Initialize() does not set the “script argument list” (sys.argv). If  this variable is needed by Python code that will be executed later, it  must be set explicitly with a call to PySys_SetArgvEx(argc, argv,  updatepath) after the call to Py_Initialize()On Windows,  must spawn new processes from scratch. It uses a command line switch  to distinguish child processes, and also transmits the original  from parent to child.Assigning  before creating subprocesses, like you discovered, would seem to be a good workaround.A second relevant piece of documentation is that of :Sets the path of the Python  interpreter to use when starting a child process. (By default   is used). Embedders will probably need to do some thing  like before  they can create child processes. (Windows only)


Answer URL
