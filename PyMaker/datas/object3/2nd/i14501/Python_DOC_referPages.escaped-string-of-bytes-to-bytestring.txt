Natural Text
I'm new to Python and I need to read bytestring from a command line argument. I'm using Python 3.4.At the moment, I'm using argparse to parse the arguments, with this configuration for the data: When I call my program with -d argument (e.g. ), it interprets the value of -d as a string, escaping slashes and treating the 'b' as part of the string, like this: Is there a way to unescape the output from argparse and convert it to bytes?
You'd normally have the shell formulate the exact bytes, but since you cannot pass in NUL bytes as arguments asking users to pass in escape sequences is a reasonable work-around.However, the shell is not going to interpret Python byte string literal notation.In this case, I'd ask the user to enter hexadecimal values instead:and use the  function to produce your  value from that (removing any whitespace first):This does require that you set your default argument value to a compatible value:The alternative would be to use the  function to interpret the Python byte string literal syntax:and your default'd be:but take into account that this function accepts any Python literal, so you could end up with any other object type, including numbers, strings and containers.


Answer URL
https://docs.python.org/3/library/binascii.html#binascii.unhexlify
https://docs.python.org/3/library/ast.html#ast.literal_eval
