Natural Text
In a Django project, I would like to write a test for a function that is used in a multiprocessing context (Processing.create_all_files). If I were using a single thread, I would do 'mock' in order to check the parameters used for calling a given function (FileCreator.create in my case).However, once the function FileCreator.create is called by a multiprocessing.Pool, mock does not work anymore with it.How should I do my test for create_all_files? Thanks.:
Your issue have nothing to do with multithreading but it is more related on Where to patch.In your test you use  to create your file object so I guess you have something like  in .What you should do in these case is  the  reference in  by:
After adding multithreading you risk your 'patch' to go out of scope, in other words, when executing  on a different thread chances are the  statement has ended.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
