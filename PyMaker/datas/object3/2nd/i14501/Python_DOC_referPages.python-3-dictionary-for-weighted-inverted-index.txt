Natural Text
First, this is homework, so I would just like suggestions, please. I am writing a program that generates a weighted inverted index. The weighted inverted index is a dictionary with a word as a key; the value is a list of lists, with each item in the list containing the document number, and the number of times that word appears in the document.For example,I am practicing with two small files.file1.txt:file2.txt:Here is my program code:What I am trying to do is generate something like this:What I am getting is this:It records all occurrences of each word in all documents, but it records repeats separately. I cannot figure this out. Any help would be appreciated! Thank you in advance. :)
There are two main problems in your code.Problem 1Here, you take all the values of the dictionary, irrespective of the current word, and incrementing the count, but you should be incrementing the count in the lists corresponding to the current word. So, you should change it toProblem 2apart from incrementing the count for all the words, you are adding a new value to the  always. But you should be adding it, only if the  is not already there in the . So, you can use an  with the  loop, like thisAfter making these two changes, I got the following outputThere are few suggestions to improve your code.Instead of using lists to store the document number and the count, you can actually use a dictionary. That would make your life easier.Instead of counting manually, you can use .Instead of using multiple replaces, you can use a simple regular expression, like thisIf I were to clean the , I would do it like thisIn the  loop, you can use the improvements suggested by Brad Budlong, like this
My preferred implementation of the for loops doesn't iterate using a len and range functions.  Since these are all mutable lists, you don't need to know the index, you just need to have each of the lists and then can be modified without the index.  I replaced the for loop with the following and get the same output as thefourtheye.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
