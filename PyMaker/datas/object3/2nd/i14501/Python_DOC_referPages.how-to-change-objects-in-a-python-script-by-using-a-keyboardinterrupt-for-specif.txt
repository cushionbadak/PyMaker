Natural Text
After looking at the KeyboardInterrupt to exit out of a multithreaded script I was wondering if it's possible to use the up and down keys on a keyboard to increase/decrease the number of threads being used? This would hopefully happen the same manner as KeyboardInterrupt so that it could happen at anytime. Is something like this possible or is there another method that would be better suited for this?
A  is a special thing. On Unix, Python basically lets the terminal turn the ^C into a  signal, and it installs a signal handler for  that raises an exception. On Windows, it's a little more complicated, but the same basic idea. Ordinary keypresses won't interrupt your code.But you can just dedicate a thread to listening to the keyboard. Your main thread doesn't seem to be doing anything useful; if it is, kick that work off to a background thread. Then your main thread can just sit around waiting for keyboard input.Butâ€¦ how do you wait for keyboard input? That's the tricky part. Normally, on most platforms, input is line-buffered. And the arrow keys already have a special meaning, like cycling through the history of past entries.You can do this at the low level by using Console I/O on Windows,  on Unix), and learning the whole messy business about character codes so you can actually identify the arrow keys. But you'll probably find it a lot easier to use a higher-level wrapper. There are all kinds of choices, ranging from things like  and  up to PyGame or Qt; search around PyPI.


Answer URL
https://docs.python.org/3/library/msvcrt.html#console-i-o
https://docs.python.org/3/library/termios.html
