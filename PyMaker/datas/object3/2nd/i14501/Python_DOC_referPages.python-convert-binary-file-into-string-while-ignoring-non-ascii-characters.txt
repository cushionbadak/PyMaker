Natural Text
I have a binary file and I want to extract all ascii characters while ignoring non-ascii ones. Currently I have:However I'm encountering an error when writing to file . How would I get Python to ignore non-ascii?
Use the built-in ASCII codec and tell it to ignore any errors, like:You can test & play around with this in the Python interpreter:Just trying to convert to a string throws an exception....as does just trying to encode that unicode string to ASCII:...but telling the codec to ignore the characters it can't handle works okay:
Basically, the ASCII table takes value in range [0, 27) and associates them to (writable or not) characters. So, to ignore non-ASCII characters, you just have to ignore characters whose code isn't comprise in [0, 27), aka inferior or equal to 127.In python, there is a function, called , which accordingly to the docstringReturn the integer ordinal of a one-character string.In other words, it gives you the code of a character. Now, you must ignore all characters that, passed to , return a value greater than 128. This can be done by:Now, if you just want to conserve printable characters, you must notice that all of them - in the ASCII table at least - are between 32 (space) and 126 (tilde), so you must simply do:


Answer URL
https://docs.python.org/3/library/functions.html#open
