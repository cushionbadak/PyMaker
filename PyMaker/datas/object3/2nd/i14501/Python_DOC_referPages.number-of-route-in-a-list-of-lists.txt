Natural Text
Is there a way I could calculate the number of routes in a list of lists? The rule is to pick an element in each sub-list to form a list, and the value in the new list is ascending. (The length of the list or sub-list is not fixed)e.q.a list is There are three ways to fulfill the requirement:
You could use some sort of recursion based on the starting element. For efficiency, add memoization, which can be done in Python quite easily (see esp.  as pointed out by @abarnert in the comments below).Say you have a function like so:where  is the starting element of the route. That is, each element in the route taken from  must be at least larger than .Then there are two points:It's not so hard to code  recursively. Because for any element in  which you use (which is simple to find - just check if it is not smaller than ), you just need to call  with  and  replaced by the element you just used. You need to return the sum of the return values.Once you have , it's easy to wrap it in some toplevel  - simply:a. If   is empty, the answer is 0).b. If it is not, choose the smallest element in , subtract from it 1, and call  with  and the subtraction result.Here's how it looks altogether:


Answer URL
https://docs.python.org/3/library/functools.html
