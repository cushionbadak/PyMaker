Natural Text
I am trying to isolate the first words in a series of sentences using Python/ NLTK.created an unimportant series of sentences (the_text) and while I am able to divide that into tokenized sentences, I cannot successfully separate just the first words of each sentence into a list (first_words). [['Here', 'is', 'some', 'text', '.'], ['There', 'is', 'a', 'a', 'person', 'on', 'the', 'lawn', '.'], ['I', 'am', 'confused', '.'], ['There', 'is', 'more', '.'], ['Here', 'is', 'some', 'more', '.'], ['I', 'do', "n't", 'know', 'anything', '.'], ['I', 'should', 'add', 'more', '.'], ['Look', ',', 'here', 'is', 'more', 'text', '.'], ['How', 'great', 'is', 'that', '?']]Thanks for the help!
There are three problems with your code, and you have to fix all three to make it work:First, you're erasing  each time through the loop: move the  outside the loop.Second, you're mixing up function calling syntax (parentheses) with indexing syntax (brackets): you want .Third,  iterates over the elements of , not the indices. So you just want . (Or, alternatively, , but there's no reason to do that.)So, putting it together:If you know anything about comprehensions, you may recognize that this pattern (start with an empty list, iterate over something, appending some expression to the list) is exactly what a list comprehension does:If you don't, then either now is a good time to learn about comprehensions, or don't worry about this part. :)
You can use a loop to  to a  you've initialized previously:or a comprehension (replace those square brackets with parentheses to create a generator instead):or if you don't need to save it for later use, you can directly print the items:
Here's an example of how to access items in lists and list of lists:For you problem: In one-liner with list comprehensions:
Another alternative, although it's pretty much similar to abarnert's suggestion:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
