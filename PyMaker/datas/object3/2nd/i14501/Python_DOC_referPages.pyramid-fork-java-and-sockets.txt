Natural Text
A complicated situation:A Pyramid app needs to start/restart some Java processes (e.g. Jetty) sometimes (e.g. on receiving new WAR files for Jetty, etc, etc).That Jetty process is expected to continue working after Pyramid process () quits or between Pyramid restarts.Jetty process is started via  + shell script. Naturally, being a child process, it inherits file descriptors, including sockets.Now if Pyramid needs to restart while Jetty is still running, it can't do so as child Jetty process still has the socket bound to Pyramid's main address/port.Solution so far: For restarting Java/Jetty, do a in a child process close every file descriptor > 3 and < . do  in a child process after starting/restarting Jetty.Neat, right? No.It's complicated and kludgy. Is there a simpler way of avoiding this "child process inheriting sockets" problem?Plus I have services (like , etc) running and that requires elaborate shutdowns of all the running services (in a child process of course) or else they raise exceptions on .
Is there a simpler way of avoiding this "child process inheriting sockets" problem?Yes, just pass  to the  constructor or wrapper function. This closes all fds except 0, 1, and 2.*If you need to keep some different set alive instead of 0, 1, and 2, use  instead of . But hopefully you don't need that.*** I'm assuming you don't care about Windows portabilityâ€”after all, you're already using . If I'm wrong,  won't work on non-POSIX systems with redirected stdio handles, so if you need both, you'll need a more complex solution.** If you do:  requires 3.2+, or a backport of the 3.2+  module. I'm pretty sure you don't have 3.2+, because if you did,  would already be the default behavior on POSIX systems, and you wouldn't have this problem in the first place. One common reason to need it for web services is when you don't have permissions to bind port 80, so you inherit a socket from a suid program, and need to pass that socket to your own child.
IMHO, you should de-couple the process control from your web application process.  Use a process control system like supervisord to start/stop/restart long-running applications; this can be done over XML-RPC.Not a bad plus that Pyramid creator Chris McDonough is the primary author of Supervisor too.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen
