Natural Text
Trying to see if I can recursively generate an iterator of file paths. Essentially for a list of base paths and an ordered list of subdirs, I want to generate all child paths as a combination of the two inputs.i.e then the output should be My python code looks something like this. I'm calling appendpaths() recursively.My output is missing a few permutations:You can see that I'm missing /a/1, /a/2, /b/1 and /b/2. I'm guessing it's because somewhere in my code I've already exhausted the generators that iterate through those permutations? 
You're complicating this a bit too much - if you just want a consecutive list product a simple recursion to merge together previously joined paths (or the base), moving one level deeper in each recursion all you need:And to test it:
GivenA helper itertools recipe:CodeApplicationsJoin paths as strings or  objects.DetailsSteps are all s, which accept iterables and create unique combinations (or Cartesian products) in a manner analogous to a date picker dialog application. See examples below. is simply a wrapper of the  itertools recipe.  It allows a icate, which is used to filter resuts that start with slashes like those from . sorts a flattened set of subsequences generated for each product.  You can optionally join each element as desired.  See Code - Applications.ExamplesHere are the Cartesian products:Without a predicate, undesired subsequences are permitted:Thus, we filter unwanted elements with the predicate, .


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/library/itertools.html#itertools-recipes
