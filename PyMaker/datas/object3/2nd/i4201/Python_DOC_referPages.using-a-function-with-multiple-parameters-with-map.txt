Natural Text
I'm trying to map a function that takes 2 arguments to a list:This gives me a .What is the correct way to map my lambda onto this input?
Python cannot unpack lambda parameters automatically.  returns a , so  has to take that tuple as sole argumentYou need:Considering now the ugliness of  +  + manual unpacking, I'd advise the alternate generator comprehension instead:(I removed the  call since your input is already lowercase)
 will pass each value from  as a single parameter to the callback, i.e. the  will be called with a tuple as argument. It would be pretty surprising behaviour if  would unpack arguments which look unpackable, since then its behaviour would depend on the values it iterates over.To expand iterable arguments, use  instead, which "applies a  (star)" when passing arguments:
Python can't unpack  parameters automatically.But you can get round this by passing an extra  argument to :As per the docs:map(function, iterable, ...)Return an iterator that applies function  to every item of iterable, yielding the results. If additional  iterable arguments are passed, function must take that many arguments  and is applied to the items from all iterables in parallel. With  multiple iterables, the iterator stops when the shortest iterable is  exhausted. For cases where the function inputs are already arranged  into argument tuples, see itertools.starmap().


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.starmap
https://docs.python.org/3/library/functions.html#map
