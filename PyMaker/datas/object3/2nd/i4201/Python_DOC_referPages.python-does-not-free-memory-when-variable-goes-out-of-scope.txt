Natural Text
When I initialize a Numpy array inside a function, Python does not free the memory after the function returns as shown in the code example below. Is there any way I can free this memory? Using gc.collect() did not work and the same problem also occurs in Python2 and Python3.Code output:Memory usage: 20560 (kb)Memory usage: 801832 (kb)
Python is actually freeing the memory as soon as the function is done. The problem here is that the value you're printing out, , tells you the peak or max memory usage. To get the current memory usage, you might try the  package (). It's a cross platform utility for giving you info like the current memory usage.Try this modified snippet:On my machine, here's the output:By the time we get to the first memory check, it's down to 26 MB, but it's already been as high as 714 MB at some point while starting up or importing libraries.At the start of the function it's the same, but by the end of our function, we've hit a new high with help from numpy. At this point the current usage is the new max, so both values match.After we leave the function, our current usage drops back down to roughly where it was before we entered the function.
Python can choose not to release garbage collected memory to the OS. It may keep the already allocated memory for future use. It does not mean there is a memory leak.


Answer URL
https://docs.python.org/3/library/resource.html#resource-usage
