Natural Text
I tried many times but could not do it.Here is an example:Desired output:
This is one way with :Note the list conversion is not required, but improves performance.
You can levarege list comprehensions, join and zip:output:https://docs.python.org/3/library/functions.html#ziphttps://docs.python.org/3/library/stdtypes.html#str.joinExplanation:zip pairs up the characters by position, the rest makes the list of pairs back into a string.Zip only works for the shorter length string - you can switch to itertools.zip_longest (see JimDennis answer) or append the longer lists part (like I did here)itertools.zip_longest(*iterables, fillvalue=None) 
To break that down a bit:  the builtin zip() function zips only to the shorter of the two sequences; so we use izip_longest() from the itertools standard library moduleizip_longest() pads the generated sequences with None by default; so we add the fillvalue='' optional (keyword) argumentthe resulting substrings are all just joined together to form your results.
I think this solution is a little cleaner and takes advantage of the  keyword argument for .
This one is basic but useful
Another way of doing it is the following:Output:


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
