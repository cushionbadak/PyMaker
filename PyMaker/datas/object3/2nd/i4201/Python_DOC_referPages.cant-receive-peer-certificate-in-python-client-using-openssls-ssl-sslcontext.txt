Natural Text
I am a Windows user. I use  and I import this version of OpenSSL .I need to write a script for a python TLS client that I can customize in terms of the supported TLS versions and ciphersuites and other configurations. The client should be able to make connections with self-signed certificates. Therefore, I believe I should use:  to create my context and not . However, with the following script, I can never get the peer's certificate. Please, provide clear answers with code as otherwise I tried many solutions and looked at previous posts with no hope. The problem is that I do not receive the peer's certificate when I use  but when I use  it is received correctly. However, I need to be able to receive self-signed certificates (i.e. unverified certificates) that's why I have to use .Thanks for the solution posted. But I need to parse the certificate even if it is not verified (self-signed). I trust this certificate and I need its info. I looked at several posts including this one. I did these steps:I took the  content of my server's certificate.I navigated to: I opened  which is placed in the directory (step 2)I added my server's cert .pem content which starts with:  and ends with I get this error:
After a number of attempts, some failed, some partial successful, I found a way that should work (didn't test it with self signed certificates, though). Also, I wiped out everything from the previous attempts.There are 2 necessary steps:Get the server certificate using [Python 3]: (ssl.get_server_certificate(addr, ssl_version=PROTOCOL_TLS, ca_certs=None), which returns it as a PEM encoded string (e.g.: ours - pretty printed):Decode the certificate using (!!!undocumented!!!)  (present in Python 3


Answer URL
https://docs.python.org/3/library/ssl.html#ssl.get_server_certificate
