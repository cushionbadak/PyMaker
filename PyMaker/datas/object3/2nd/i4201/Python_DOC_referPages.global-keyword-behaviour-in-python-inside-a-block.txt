Natural Text
Case 1Expected Output: Actual Output: This output is the very expected, and that is how  keyword behaves. Case 2Expected Output: Actual Output: If my understanding of  is correct, how the  keyword for  in if block affected the local keyword  in the else block. I believe those are two different blocks. Is there an explanation for this behaviour.
The  statement is a declaration which holds for the entire current code block.  does not introduce a new code block.A block is a piece of Python program text that is executed as a unit. The following are blocks: a module, a function body, and a class definition. is a directive to the parser. is being evaluated at runtime, but  is picked up by the parser. The parser doesn't care about and cannot evaluate  statements.Excerpts from https://docs.python.org/3/reference/simple_stmts.html#the-global-statement and https://docs.python.org/3/reference/executionmodel.html.In other words, any  statement anywhere within a function definition always applies throughout the entire function.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-global-statement
https://docs.python.org/3/reference/executionmodel.html
