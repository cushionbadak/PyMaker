Natural Text
Trying to simulate 20 dice throws randomly, the code needs to enclose with parenthesis a value that is the same, the parenthesis appear, but I am missing something on my formula, any advise can greatly help, eg:
This adds the parenthesis as part of the list:Examples:
Here is a solution using regex.  This creates a string out of the dice rolls, then finds repeating digits and uses  to add parenthesis.A couple sample runs:Regex explanation:
There are a number of issues with your code, so it was just quicker to rewrite the whole thing. As you can see I keep track of whether I'm inside a parenthesis by using a variable. I look to the next number to guess if I should add a closing parenthesis. The last case is handled by a try-except.You could also handle each number by looking forward and backward but that'd require you to add some extra condition for the try-except part so this was just 
There are various ways to do this, but this is the most similar to what you were doing already. Basically just iterate over the index of your list of rolls. Each number we examine it to see if it is the same as the one before, if yes, then we increment the count and move on. If not then we add however many of that number were in the count to the output. If there was one, we write it out by itself, if more, in parenthesis.Output:
The logical error is that you're confusing "the index where the run starts" with "the length of the (last) run".You need a variable like .Look at the code:Read it back to yourself 'if the index of the next output is equal to the length of the last run, output open bracket before it'.So if the length of the last run is 3 the longest run starts at index 3? Surely not...I'm not a Python coder, so you'll need to fix it yourself...


Answer URL
https://docs.python.org/3/library/re.html#re.sub
