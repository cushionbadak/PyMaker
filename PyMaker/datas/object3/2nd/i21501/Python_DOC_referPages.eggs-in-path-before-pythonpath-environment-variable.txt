Natural Text
If I have packages installed from easy_install, the eggs are prepended to  before the items in the  variable.For example, if I have an egg package called foo installed as well as a package called foo in the current directory, and then do this:This will use the egg version of  instead of the local directory. Inspecting  shows that eggs are placed before items from . This seems broken. Is there any way to override this behavior?
Unfortunately this is done with a hard-coded template deep inside .  You could create a patched setuptools with an edited template, but I've found no clean way to extend easy_install from the outside.Each time easy_install runs it will regenerate the file . Here is a quick script which you can run after easy_install, to remove the header and footer from . You could create a wrapper shell script to run this immediately after :Example:For more clarification, here is the format of :The two  lines are the culprit causing the eggs to appear at the start of the path. My script just removes those -munging lines.
Consider using the  command-line option to suppress  processing:https://docs.python.org/3/library/site.html#site.mainYou can also use  with  to delay  processing until runtime, say to capture the original sys.path for appending:Start from explicit empty Append to sys.path explicitly with extendImport site and call Append new paths to old path and then install it in sys.pathPrint with ":" for  is desirable for later runs only using  may or may not be desirable while setting  (depending on if you need sys.path expanded before extending)
I have done something like the following to prepend to the system path when running a top-level python executable file:Often, the  for me involves use of the  attribute to do relative look up for a path that includes the top-level module for my project.  This is not recommended for use in producing, eggs, though I don't seem to mind the consequences.  There may be another alternative to .


Answer URL
https://docs.python.org/3/library/site.html#site.main
