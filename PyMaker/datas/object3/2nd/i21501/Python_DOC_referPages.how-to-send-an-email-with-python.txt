Natural Text
This code works and sends me an email just fine:  However if I try to wrap it in a function like this:and call it I get the following errors:  Can anyone help me understand why?  
I recommend that you use the standard packages  and  together to send email. Please look at the following example (reproduced from the Python documentation). Notice that if you follow this approach, the "simple" task is indeed simple, and the more complex tasks (like attaching binary objects or sending plain/HTML multipart messages) are accomplished very rapidly.For sending email to multiple destinations, you can also follow the example in the Python documentation:As you can see, the header  in the  object must be a string consisting of email addresses separated by commas. On the other hand, the second argument to the  function must be a list of strings (each string is an email address).So, if you have three email addresses: , , and , you can do as follows (obvious sections omitted):the  part makes a single string out of the list, separated by commas.From your questions I gather that you have not gone through the Python tutorial - it is a MUST if you want to get anywhere in Python - the documentation is mostly excellent for the standard library.
Well, you want to have an answer that is up-to-date and modern.Here is my answer:When I need to mail in python, I use the mailgun API wich get's a lot of the headaches with sending mails sorted out. They have a wonderfull app/api that allows you to send 10,000 emails per month for free.Sending an email would be like this:You can also track events and lots more, see the quickstart guide.I hope you find this useful!
I'd like to help you with sending emails by advising the yagmail package (I'm the maintainer, sorry for the advertising, but I feel it can really help!). The whole code for you would be:Note that I provide defaults for all arguments, for example if you want to send to yourself, you can omit , if you don't want a subject, you can omit it also.Furthermore, the goal is also to make it really easy to attach html code or images (and other files).Where you put contents you can do something like:Wow, how easy it is to send attachments! This would take like 20 lines without yagmail ;)Also, if you set it up once, you'll never have to enter the password again (and have it safely stored). In your case you can do something like:which is much more concise!I'd invite you to have a look at the github or install it directly with .
There is indentation problem. The code below will work:
Try this:It works for smtp.gmail.com
While indenting your code in the function (which is ok), you did also indent the lines of the raw message string. But leading white space implies folding (concatenation) of the header lines, as described in sections 2.2.3 and 3.2.3 of RFC 2822 - Internet Message Format:Each header field is logically a single line of characters comprising  the field name, the colon, and the field body.  For convenience  however, and to deal with the 998/78 character limitations per line,  the field body portion of a header field can be split into a multiple  line representation; this is called "folding".In the function form of your  call, all lines are starting with white space and so are "unfolded" (concatenated) and you are trying to sendOther than our mind suggests,  will not understand the  and  headers any longer, because these names are only recognized at the beginning of a line. Instead  will assume a very long sender email address: This won't work and so comes your Exception.The solution is simple: Just preserve the  string as it was before.  This can be done by a function (as Zeeshan suggested) or right away in the source code:Now the unfolding does not occur and you sendwhich is what works and what was done by your old code.Note that I was also preserving the empty line between headers and body to accommodate section 3.5 of the RFC (which is required) and put the include outside the function according to the Python style guide PEP-0008 (which is optional).
It's probably putting tabs into your message. Print out message before you pass it to sendMail.
Here is an example on Python , much simpler than :call this function:below may only for Chinese user:If you use 126/163, 网易邮箱, you need to set"客户端授权密码", like below:ref: https://stackoverflow.com/a/41470149/2803344https://docs.python.org/3/library/email.examples.html#email-examples
Make sure you have granted permission for both Sender and Receiver to send email and receive email from Unknown sources(External Sources) in Email Account.
As far your code is concerned, there doesn't seem to be anything fundamentally wrong with it except that, it is unclear how you're actually calling that function. All I can think of is that when your server is not responding then you will get this SMTPServerDisconnected error. If you lookup the getreply() function in smtplib (excerpt below), you will get an idea.check an example at https://github.com/rreddy80/sendEmails/blob/master/sendEmailAttachments.py that also uses a function call to send an email, if that's what you're trying to do (DRY approach).
Thought I'd put in my two bits here since I have just figured out how this works. It appears that you don't have the port specified on your SERVER connection settings, this effected me a little bit when I was trying to connect to my SMTP server that isn't using the default port: 25. According to the smtplib.SMTP docs, your ehlo or helo request/response should automatically be taken care of, so you shouldn't have to worry about this (but might be something to confirm if all else fails).Another thing to ask yourself is have you allowed SMTP connections on your SMTP server itself? For some sites like GMAIL and ZOHO you have to actually go in and activate the IMAP connections within the email account. Your mail server might not allow SMTP connections that don't come from 'localhost' perhaps? Something to look into. The final thing is you might want to try and initiate the connection on TLS. Most servers now require this type of authentication.You'll see I've jammed two TO fields into my email. The msg['TO'] and msg['FROM'] msg dictionary items allows the correct information to show up in the headers of the email itself, which one sees on the receiving end of the email in the To/From fields (you might even be able to add a Reply To field in here. The TO and FROM fields themselves are what the server requires. I know I've heard of some email servers rejecting emails if they don't have the proper email headers in place. This is the code I've used, in a function, that works for me to email the content of a *.txt file using my local computer and a remote SMTP server (ZOHO as shown): 


Answer URL
https://docs.python.org/3/library/email.html
https://docs.python.org/3/library/smtplib.html
https://docs.python.org/3/library/email.examples.html
https://docs.python.org/3/library/email.examples.html
https://docs.python.org/3/tutorial/index.html
https://docs.python.org/3/library/email.examples.html#email-examples
