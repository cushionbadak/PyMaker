Natural Text
In the following code, I create a base abstract class . I want all the classes that inherit from  to provide the  property, so I made this property an .Then I created a subclass of , called , which is meant to supply some functionality, but still remain abstract. There is no  property in , but nevertheless python instatinates an object of that class without an error. How does one create abstract properties?
Since Python 3.3 a bug was fixed meaning the  decorator is now correctly identified as abstract when applied to an abstract method.From python docs:
Until Python 3.3, you cannot nest  and .Use  to create abstract properties (docs).The code now raises the correct exception:


Answer URL
https://docs.python.org/3/whatsnew/3.3.html#abc
https://docs.python.org/3/library/abc.html#abc.abstractproperty
https://docs.python.org/3/whatsnew/3.3.html#abc
