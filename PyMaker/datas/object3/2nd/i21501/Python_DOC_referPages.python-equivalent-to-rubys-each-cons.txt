Natural Text
Is there a Pythonic equivalent to Ruby's ?In Ruby you can do this:
For such things,  is the module you should be looking at:Then:For an even more general solution, consider this:This allows arbitrary lengths of subsequences and arbitrary overlapping. Usage:
I don't think there is one, I looked through the built-in module , which is where I would expect it to be. You can simply create one though:
My solution for lists (Python2):Edit: With Python 3  is no longer, so you use plain :
A quick one-liner:
Python can surely do this. If you don't want to do it so eagerly, use itertool's islice and izip. Also, its important to remember that normal slices will create a copy so if memory usage is important you should also consider the itertool equivalents.
UPDATE: Nevermind my answer below, just use  -- it will do the right thing.For a truly lazy implementation that preserves the behavior of Ruby's  when the sequence/generator has insufficient length:Examples:Note that the tuple unpacking used on the arguments for izip is applied to a tuple of size  resulting of  (that is, the "window size"), and not the sequence we want to iterate.
Same as elias's code, but works for python 2 and 3:


Answer URL
https://docs.python.org/3/library/functions.html#zip
