Natural Text
I am working on a series of unit tests in Python, some of which depend on the value of a configuration variable. These variables are stored in a global Python config file and are used in other modules. I would like to write unit tests for different values of the configuration variables but have not yet found a way to do this.I do not have the possibility to rewrite the signatures of the methods I'm testing.This is what I would like to achieve:Thanks.Edit: Made the example code more explicite.
Use  as in @Flimm's answer, if that's available to you.Original AnswerDon't do this:But this:And then you can inject  into the imported , without changing the system under test like so:I did something similar in my answer to How can I simulate input to stdin for pyunit? .
You probably want to mock those global variables instead. The advantage of this is that the globals get reset once you're done. Python ships with a mocking module that lets you do this. be used as a decorator:You can also use it as a context manager:
You code imports  into the local scope and then immediately overwrites the name with a different object.  That won't change the value in the  module.  Tryinstead.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch
