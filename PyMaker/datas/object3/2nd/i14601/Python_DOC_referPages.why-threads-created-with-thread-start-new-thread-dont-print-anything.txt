Natural Text
I found this simple code at https://code.google.com/p/pyloadtools/wiki/CodeTutorialMultiThreadingBut when I run this, it works on IDLE, but not on eclipse which uses PyDev.  Any idea how to fix it?Note:  I think the main program terminates before the threads run. The threads dont get enough time to run I guess. How do I fix it? May be should I use join?
Quoting the  section of  documentation,When the main thread exits, it is system defined whether the other threads survive. On most systems, they are killed without executing  clauses or executing object destructors.When the main thread exits, it does not do any of its usual cleanup (except that  clauses are honored), and the standard I/O files are not flushed.There are two possibilities here.The main thread starts three threads but it exits before the threads finish the execution. So, the standard I/O files are not flushed, as they are buffered, by default.Or, the main thread dies, and as per the first bullet point quoted, all the child threads are killed in action.Either way, you need to make sure the main thread doesn't die before the children complete.But when you run from IDLE, the main thread still exists, so, the I/O buffers are flushed when the threads actually complete. That is why it works in IDLE but not in eclipse.To make sure that the main thread exits only after all the threads complete, you can make it wait for the child threads with1. You can use , like this2. Alternatively, you can use the  objects, like thisNow you will see that the program always prints the  message.Note: As the documentation says,  is a . So, better use higher level module like , where you can simply wait for the all the threads to exit with  method.
From https://docs.python.org/3/library/_thread.html#module-_threadThe  module provides an easier to use and higher-level threading API built on top of this module.The module is optional.So please use , not the optional  module.


Answer URL
https://docs.python.org/3/library/sys.html#sys.stdin
https://docs.python.org/3/library/_thread.html#_thread.allocate_lock
https://docs.python.org/3/library/threading.html#module-threading
https://docs.python.org/3/library/threading.html#threading.Thread.join
https://docs.python.org/3/library/_thread.html#module-_thread
https://docs.python.org/3/library/threading.html
