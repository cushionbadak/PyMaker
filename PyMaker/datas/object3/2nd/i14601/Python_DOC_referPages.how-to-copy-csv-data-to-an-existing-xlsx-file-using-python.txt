Natural Text
I am using Python 3.4 and I am writing a short script. I have an executable that take the output of a software and outputs a bunch of csv files with the requested data. I have created an Excel (xlsx) file as a template. It has a chart  tailored to specific requirements. I want to take a certain range of that data in each of those csv files and then input them into the existing excel template I have already created and save it with a unique file name. Essentially iterate this process.Each csv file will have a unique name. My goal is to help automate creating graphs. Sometimes this can end up being 100s of graphs. I have searched a lot on how to do this with little help.  Again I would initiate the script and it would run through each csv file (whether there is 5 or 500) and then copy the data (a certain range which is always in the same cells) then paste it into the template xlsx file I have created and save it with a similar name to the csv except it will have .xlsx as the extension. I do not know if this is the best approach or if I should create a csv template instead that it will copy to.Any help is much appreciated, thank you.
1st approachIf your end goal is to generate graphs from data available in csv then you can use csvReader to read data and matplotlib to plot graphs.Simple example:References:http://matplotlib.org/users/pyplot_tutorial.html2nd approachYou can use xlrd,xlwt and xlutils to perform operation on excel filesRead data using csvReader, copy your existing template using xlutils, edit that and again save backReference: http://www.python-excel.org/
You can get all files by using the glob module:Your read_csv() function should accept a CSV file and create an array of arrays (matrix) with the data. It's common to use the csv module (which in Python 3 doesn't require the unicodecsv 'add-on').If the data is just numbers and you don't have to worry about quoted fields, then it's much faster to just read the rows. So your read_csv() function would look like this:Then your  function would accept 'data' and write to your template.


Answer URL
https://docs.python.org/3/library/glob.html
https://docs.python.org/3/library/csv.html
