Natural Text
I was doing some work with python iterable parameters.I was making a function something like this :This function should take any iterable: It should produce every value in the iterable, but does not produce the same value twice in a row: if the current value is the same as the last one yielded, it skips yielding the current value. Example : It produces the values 'a', 'b', 'c', 'a', and 'd'.What can be best simple way to do it ? I am having a hide(iterable) definition too.This function is called to ensure that code works on general iterable parameters (not just a string, tuple, list, etc.). For example, although we can call  we cannot call , so the function once_in_a_row should not call  on their parameters
Something like this:Or if you want it to take a variable number of arguments:See https://wiki.python.org/moin/Generators or Understanding Generators in Python
If by "simplest" you mean "most novice-friendly" or "least abstract", just keep track of the last value and skip it:But if by "simplest" you mean "fewest things to keep track of", there's an even simpler way: use  to group the values into runs, then just print one value for each run. In fact, this is useful enough that it's included in the  recipes as :Personally, I would have written this with a generator expression rather than two  calls:… but the  docs are somewhat geared toward people who are thinking in Haskell or ML terms…Also, let me add a quick plus for Erik Rose's , which gives you all of the recipes from the  docs as code you can just import and run (after you , of course):
Use 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
