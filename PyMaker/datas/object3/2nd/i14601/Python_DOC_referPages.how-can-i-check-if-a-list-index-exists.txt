Natural Text
Seems as thoughDoesn't work.
You just have to check if the index you want is in the range of  and the length of the list, like thisit is actually internally evaluated asSo, that condition checks if the index is within the range [0, length of list).Note: Python supports negative indexing. Quoting Python documentation,If  or  is negative, the index is relative to the end of the string:  or  is substituted. But note that -0 is still 0.It means that whenever you use negative indexing, the value will be added to the length of the list and the result will be used. So,  would be giving you the element .So, if you want to allow negative indexes, then you can simply check if the index doesn't exceed the length of the list, like thisAnother way to do this is, excepting , like thisWhen you are trying to access an element at an invalid index, an  is raised. So, this method works.Note: The method you mentioned in the question has a problem.Lets say  is a valid index for , and if it returns a Falsy value. Then  will negate it so the  condition would be evaluated to be Truthy. So, it will return , even though an element actually present in the list.
In the EAFP style of Python:
In the case of integer-indexed lists, I'd simply doFor dicts, you can of course do


Answer URL
https://docs.python.org/3/library/stdtypes.html#common-sequence-operations
