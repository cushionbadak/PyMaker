Natural Text
I have a string format let's say  where A = alphanumeric and N = Integer so the template is "AAAAAA-NNNN" now the user sometimes will ommit the dash, and sometimes the "NNNN" is only three digits in which case I need it to pad a 0. The first digit of "NNNN" has to be 0, thus if it is a number is is the last digit of the "AAAAAA" as opposed to the first digit of "NNNN". So in essence if I have the following inputs I want the following results:Sample Inputs:Desired Outputs:I know how to check for this using regular expressions but essentially I want to do the opposite.  I was wondering if there is a easy way to do this other than doing a nested conditional checking for all these variations.  I am using python and pandas but either will suffice.  The regex pattern would be:or in abbreviated form:
It would be possible through two  functions.Explanation: would be processed at first. It just places a hyphen after the 6th character from the beginning only if the following character is not a hyphen. By taking the above command's output as input, this would add a digit  after to the hyphen and the characters following must be exactly 3.
An alternative solution, it uses str.join:We are matching the regex  against the input strings and joining the captured groups with the string . This is very simple and fast.Let me know if you need a more in-depth explanation of the regex itself.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
