Natural Text
To clarify the reason for this question:It is confusing to use two modules with the same name. What do they represent that makes them distinct?What task(s) can one solve that the other can't and vice-versa?
The  documentation covers the differences:class This class is almost compatible with .Differences: and  do not take a timeout argument and raise an exception when the future isn’t done yet.Callbacks registered with  are always called via the event loop’s .This class is not compatible with the  and  functions in the  package.This class is not thread safe.Basically, if you're using  or , or want to use a  directly for thread-based or process-based concurrency, use . If you're using , use .
From the docs:[ provides a] Future class that mimics the one in the concurrent.futures module, but adapted for use with the event loop; 


Answer URL
https://docs.python.org/3/library/asyncio-task.html#future
https://docs.python.org/3/library/asyncio.html#module-asyncio
