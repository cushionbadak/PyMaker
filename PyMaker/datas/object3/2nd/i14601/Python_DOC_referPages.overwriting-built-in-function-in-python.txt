Natural Text
What could possibly go wrong if I unintentionally overwrite/mask build-in function in Python?Can I experience anything worse than the obvious pitfall of accessing a local function instead of a built-in function?For example:Even in some official modules: argparse.add_argument(..., type, ...)
You do not overwrite builtin  here, you just create a  local, which will be preferred if subsequent code of  will contain calls to :To shadow  in entire module, do that in global namespace:For more information on how names are resolved in Python, check documentation: 4.1. Naming and binding
In this particular situation, there probably isn't much that can/will go wrong.  You're just shadowing  with a local variable in your method, so you're probably not going to do much damage.  In general though, you could see something like this:This might confuse you or (even worse) it might confuse the person who has to go in and support your code later.  It would be even worse if you did it globally, like:Overall, it's bad practice.  Don't do it.


Answer URL
https://docs.python.org/3/library/argparse.html#type
