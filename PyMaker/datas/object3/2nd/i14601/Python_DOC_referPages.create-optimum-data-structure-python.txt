Natural Text
I am cross referencing two data sources which share 6 common fields. The idea is the the marketing costs in file 1 are split out over the sales transactions in file 2. I've written a way to build a data structure from the first file so that the second one can access it quickly, but it seems un-pythonic to me. I'm interested to get some input and opinions on whether anyone thinks it could be written in a better way.
Every one of those 4-line / blocks can be replaced by a 1-liner using :If key is in the dictionary, return its value. If not, insert key with a value of default and return default. default defaults to .So this:… is equivalent to:Except that you can use it in a larger expression, which means in theory you can turn the whole thing into one giant expression if you want to, although I'm not sure I'd do that.You can simplify things even further by using a recursive . A  is basically just a  that handles missing keys by set-defaulting automatically, and a recursive one does so with another  instead of a plain . (You do still need one  or just plain key assignment at the end to handle the default of  instead of yet another dict…)Like this:However, be aware that this means you'll never get a  anywhere else in your code either. If that's not acceptable, then stick with . (Although if you're basically building the dict up, then using it, you can "freeze" it into a normal  just by recursively copying it…)


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
https://docs.python.org/3/library/collections.html#collections.defaultdict
