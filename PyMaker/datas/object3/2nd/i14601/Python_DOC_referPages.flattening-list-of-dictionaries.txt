Natural Text
I have a list of dictionaries, which may or may not have similar keys, and I want to flatten the list into a single dictionary, with a list type for values.An example of this as follows:This should become the following:As you can see, anything that is a string value in the initial data should be added as a value within a list. Anything that is held in list type in the initial dictionary should be added it its key, but to create a flattened list.Clearly a simple solution is to  through it all and append values, but am looking for a simpler solution.
Use a :The reasoning is: in the end you want all values to be s. The difference is that values that originally where lists should be joined together (and  does that) while other values should be inserted in a new list (as in ).Also, there is no built-in method nor class in the  module that does this automatically, so I believe the above is probably "optimal" as far as code dimension, readability and efficiency are considered.
In additional previous answer (sorry, I haven't enough reputation to write a comment) you need to check if value in  otherwise you will have repeat values:twice 


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
