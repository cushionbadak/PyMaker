Natural Text
When I call a executable in python using  in Ubuntu, it can't find the .so file (libmsc.so) needed for mydemo. I used , but it still can't find libmsc.so.The libmsc.so is in the current directory. and shouldn't be global.
When you do , you run new instance of shell, alter  there than immediately exit from it. Also, pwd mean nothing in the context of Python.Try to set env variables like this:Or maybe it is better to use subprocess module?
If I remember correctly, executing  via  will only set that shell variable within the scope, thus it's not available in the following  scopes. You should set the  in the shell, before executing the Python script.Btw. also avoid setting relative paths…
The problem is that  only exports its variables to children of the current shell. As in the shell that you created by calling , which then immediately exits.If you want the simplest fix to make this work, you can do both the  and the target program inside a single shell:There are some other problems with this. For example, ing and assigning a variable in the same command is a -ism that may not be available in all shells. With  you can specify a specific shell, but with  you just get whatever the OS considers the default shell—on Linux, the manpage says this means .Really, the best way to solve this is to just not use a shell in the first place, and set the environment variables the way you want. That's exactly why the  docs say: "The  module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function." For example:Or, if you want to be really safe (unlike your shell code):I've written this out more explicitly and verbosely than you'd normally write it, to make the steps obvious: don't include a trailing  before an empty path, and use  in case someone does something tricky with the current working directory.


Answer URL
https://docs.python.org/3/library/subprocess.html#module-subprocess
https://docs.python.org/3/library/os.html#os.system
https://docs.python.org/3/library/os.html#os.system
