Natural Text
I have a simple code in python 3 using schedule and socket:The problem is, script hung up on the sock.rcvfrom() instruction, and wait until data come.How force python to run this job independently? Better idea is to run this in threads?
You can use threads here, and it'll work fine, but it will require a few changes. First, the scheduler on your background thread is going to try to kick off a new  every second, no matter how long the last one took. Second, since both threads are apparently trying to call the same  function, you're probably going to need a  or something else to synchronize them.Rewriting the whole program around an asynchronous event loop is almost certainly overkill here.Just changing the socket to be nonblocking and doing a hybrid is probably the simplest change, e.g., by using :Now, every time you call , if there's data available, you'll handle it immediately; if not, it'll wait up to 0.8 seconds, and then raise an exception, which means you have no data to process, so go back and wait for the next loop. (There's nothing magical about that 0.8; I just figured something a little less than 1 second would be a good idea, so there's time left to do all the other work before the next schedule time hits.)Under the covers, this works by setting the OS-level socket to non-blocking mode and doing some implementation-specific thing to wait with a timeout. You could do the same yourself by using  and using the  or  module to wait up to 0.8 seconds for the socket to be ready, but it's easier to just let Python take care of that for you.


Answer URL
https://docs.python.org/3/library/socket.html#socket.socket.setblocking
