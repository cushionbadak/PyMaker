Natural Text
I have tried every answer on the (Django script to access model objects without using manage.py shell) stack question, and I always get error "no module name 'project_name'".My project name is called snapbackend.I have an  setup. I know I can write django command, but that is somewhat overkill to run one function.I am using django 2.0, and I wanted to write a script to delete old models.
This is because your module isn't installed, and it is not being run from the directory which it is inside of.If you are using setuptools (a  file), then the proper way to solve this is to symlink your project into your site packages with . This will make your module available throughout your project.If you aren't using setuptools then this is a bit trickier. If you are able to choose your current working directory when running the script, you can solve this problem by executing  before running your script.In cases where you can't mess with the current working directory, you should se the  environment variable to the root of your project. This environment variable is used to add additional paths for Python to find modules within.It's important that you don't use  or  for security reasons. Specifically, you don't want to accidentally introdduce any executables into your system which you are unaware of.Hope this helps!
This is an issue with you  which seems simple but is often more tricky to figure out. Python cannot find your django root so you need to tell python where it can find that module (not sure why it doesn't just work) but you can do this when running the script:Or the fly with:In your case:The directory would depend on the relative path to your django root


Answer URL
https://docs.python.org/3/using/cmdline.html?highlight=pythonpath#envvar-PYTHONPATH
