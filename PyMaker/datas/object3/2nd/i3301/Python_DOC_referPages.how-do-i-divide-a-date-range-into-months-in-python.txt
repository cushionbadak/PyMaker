Natural Text
I have the following date range:I want to achieve the following:Essentially, I want to divide a given date range into months. I can't think of a way to accomplish this in Python.I have considered the solution here, however, this splits the date range based on a specified interval. I want to be able to split a date range dynamically. Hence, given a date range from 15 February 2018 to 23 April 2018, I want to be able to get the individual months in the range, like so:15 February 2018 to 28 February 201801 March 2018 to 31 March 201801 April 2018 to 23 April 2018
In a loop; starting at the first day continually add one day till you get to the end date; whenever the month changes save the dates.Result:You could probably figure out a way to get a range of months between the start and end dates; create a datetime object for the first day of each of those months store them and the days just prior to them.  Dates spanning a change of year might be problematic though.
To work with convenient date objects, always use the standard module . This wraps your string formatted dates, and allows easier calculations as well as tailored output formatting.Unfortunately, it seems to miss one important piece of information: the last day of each month, given a year (which is necessary for Februari). There is an additional module  which returns the last day for a month, but since this is all you need of it and there is a simple  based function that does the same thing, I chose the latter.With that, you can set any  date and append it to your list, together with its last day of that month, then set  to the next month's 1st and continue until you pass .A caveat/finetuning: I realized it would not work if both  and  fall inside the same month. That needs an interim check, so I changed my initial  to  and moved the check for crossing the end date into a separate line.Also, to cross a year needs a separate test again, because else the statement  will fail on December.results in(slightly formatted for readability only)
Using python calendar and accounting for change of the yearAnd to get a list in the question, we could do something like -


Answer URL
https://docs.python.org/3/library/datetime.html
