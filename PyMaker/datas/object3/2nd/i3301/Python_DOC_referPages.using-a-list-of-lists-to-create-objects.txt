Natural Text
I want to keep a list of temperature probes that will be taking temperature readings periodically. I want to store the arguments needed to create each instance of the temperature probe object in a list of lists. I then want to create each instance from this list of lists and name each object using index 0 of each nested list.For example, I want the instances Probe1, Probe2, and Probe3 created with their corresponding arguments. I then want to take a temperature reading from each probe in the list. I want to be able to add unlimited probes without having to change the code down the line.The issue I'm running into is when I try and do anything with Probe1, Probe2, or Probe3 python tells me they don't exist. I'm new to programming and I'm sure I'm missing something obvious.
I'm not sure what you want exactly but here are two likely usecases based on your question:You want a simple list of probe objects, generated from a list of initialization arguments:The most straightforward way to do this is with the iterable unpacking operator () in combination with list comprehension:Now you can call  on each object in the list, like so:Or do it in a loop:You want to be able to find probe objects by name:Consider using a dictionary (also known as a map).Now you can access the probe objects by name like so:And if you needed to loop through  and find objects by name, you can (although i'm not sure why you would need to do that):
Code corrections:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/stdtypes.html?highlight=map#mapping-types-dict
