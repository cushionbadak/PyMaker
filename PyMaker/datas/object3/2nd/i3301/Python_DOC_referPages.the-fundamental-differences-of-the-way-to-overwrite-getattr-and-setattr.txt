Natural Text
My hope is to make attributes case-insensitive. But overwriting  and  are somewhat different, as indicated by the following toy example:I am confused by two points.I assume  is a syntactic sugar for , but they behave differently.Why does  need to call , while  doesn't?
I assume  is a syntactic sugar for , but they behave differently.That's because the assumption is incorrect.  goes through the entire attribute lookup process, of which  is only a part. Attribute lookup first invokes a different hook, namely the  method, which by default performs the familiar search through the instance dict and class hierarchy.  will be called only if the attribute hasn't been found by . From the  documentation:Called when the default attribute access fails with an  (either  raises an  because name is not an instance attribute or an attribute in the class tree for ; or  of a name property raises ).In other words,  is an extra hook to access attributes that don't exist, and would otherwise raise .Also, functions like  or  are not syntactic sugar for a dunder method. They almost always do more work, with the dunder method a hook for that process to call. Sometimes there are multiple hooks involved, such as here, or when creating an instance of a class by calling the class. Sometimes the connection is fairly direct, such as in , but even in the simple cases there are additional checks being made that the hook itself is not responsible for.Why does  need to call , while  doesn't? is an optional hook. There is no default implementation, which is why  doesn't work.  is not optional, so  provides you with a default implementation.Note that by using  you created an infinite loop!  will call  and then , at which point you use  which calls  and then , etc.In this case, you should override  instead:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattribute__
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
https://docs.python.org/3/reference/datamodel.html#customizing-attribute-access
