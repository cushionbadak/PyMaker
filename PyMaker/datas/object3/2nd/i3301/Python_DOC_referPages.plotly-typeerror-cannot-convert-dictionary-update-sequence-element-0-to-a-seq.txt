Natural Text
I have a problem with the project I'm currently working on, so I'm leaving a question.The current contents are drawn in table format by sensor. But a few days ago, when I was working on something, I didn't know how to fix it, so I asked for help.After executing the following code, the following error occurred.In this case, the code that I draw the graph using plolty does not have a problem when receiving data from stream, but when I draw table plot. How can I graph here?I'm really curious. Please let me know.
This exception means that you're trying to construct a dict from an iterable, and that iterable's first element is not a sequence. As the docs explain, you can construct a dict two ways:From a mapping, orFrom an iterable of key-value pairsSo, if you try to construct it from, say, a set of numbers:… it's trying to use the first element as a key-value pair—that is, a sequence of 2 values—but there's no way to interpret the number  as a key-value pair, so it raises a .Meanwhile, I know absolutely nothing about Plotly streaming but what's on this page, but this code is clearly wrong:I can't imagine why you'd want to stream a set.Plus, the examples all have either a dict, or a string that's a JSON-encoding of a dict.So, obviously, that API is expecting you to pass it either a dict or something you can feed to the dict constructor. But you're passing it a set. So, it feeds that set to the dict constructor, and gets this exception.Since I have no idea what you're actually trying to do here, I have no idea what dict you should be sending here. But you definitely should be passing a dict.Also, even if you fix this, based on the  call, it looks like you're using Plotly Cloud. But, as the same page says:Streaming is no longer supported in Plotly Cloud.So, if you're trying to use streaming with Plotly Cloud, then, even if you fix your code to make sense, it's probably still going to fail, just with an error from Plotly rather than a  about passing nonsense.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict
