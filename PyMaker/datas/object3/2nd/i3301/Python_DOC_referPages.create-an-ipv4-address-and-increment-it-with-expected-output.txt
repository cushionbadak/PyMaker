Natural Text
How can i create an IPv4 address 0.0.0.0 and increment it so it gives me the output from 0-255 as 0.0.0.255 then 0.0.255.255,0.255.255.255,255.255.255.255?
Avoid using custom functions and go with the  package. Just create a  object for network  and you should be able to get the nth address by referring it as  or you can create an iterator as You should be able to get it by doing More examples
you can use  lib. stands for big integer (4 bytes),  stands for big endian (bytes position).Then you format the bytes in the right order. Increase or decrease  for having different ip addresses
Range from 0 to 16777216 (which is 2 ** 24, as your title requesting for , or 4294967296 which is 2 ** 32 as your question body requesting for ), then bitwise AND , , ,  to extract the corresponding bits, and shift them right to print with format.
The  module in the standard library lets you do arithmetic on IP addresses in the obvious way, and conversion to and from integers, and to and from dotted-quad strings.I'm not sure what you're trying to do, but whatever it is, it's easy.For example, here's an iterator over all 4 billion IPv4 addresses:Or, if you prefer:Or, if you want to iterate the first 256, then do three special addresses after that:If you want to do other things, read the docs for . Notice that you can construct an address from:A string in decimal-dot notation…An integer…An integer packed into a  object of length 4 (most significant octet first).So, let's say you want to make one out the octets 0, 127, 255, 255. How could you do that? First, you create a bytes with those values:… and then you create an address with those bytes:If you want to, you can wrap that up in a function:So, if you wanted the 256 addresses of the form , and the 256 of the form , and , and , that's trivial:And if you want to print them out in the default (decimal-dot) notation, just  them:


Answer URL
https://docs.python.org/3/library/ipaddress.html
