Natural Text
I have a dictionary like below which for example, for the first item means 5 is the customer of 2. and in the last item, as you can see, 2 is the customer of 4 and  4 is also the customer of item 3.I am trying to extract all chains of customer of these items. The output will be like this:I really confused how can I extracts these chains. Any suggestion for the flowchart or the steps I should follow. 
First, here's a solution that works if all the lists contain exactly one item.outputThe general solution is a little harder. We can create all the chains using a recursive generator. The code below works, but it's not very efficient, since it makes the same sub-chains multiple times.The basic strategy is similar to the previous version, but we need to loop over all the keys in each list, and make a new chain for each one. To fully understand how this code works you need to be familiar with recursion and with Python generators. You may also find this page helpful: Understanding Generators in Python; there are also various Python generators tutorials available online.If we run that code with  it produces the same output as the previous version. Here's the output when run with .The  syntax is a Python 3 feature. To run this code on Python 2, changetoPrior to Python 3.6  does not retain the insertion order of keys, so  can loop over the keys of  in any order. The output lists will still be correct, though. You may wish to replace that loop withto get the chains in order.


Answer URL
https://docs.python.org/3/tutorial/classes.html#generators
