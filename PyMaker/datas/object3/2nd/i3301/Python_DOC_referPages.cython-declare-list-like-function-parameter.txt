Natural Text
I'm trying to create a simple cython module and have the following problem. I would like to create a function like:When the function is being executed, a1 and a2 params are python lists. Therefore I get the error:TypeError: a bytes-like object is required, not 'list'I just need to make such calculations and nothing more. But how shall I define input params  and  if I need to maximize speed up using C?Probably it's necessary to convert lists to arrays manually?P.S. would appreciate also if you can also explain to me whether it's necessary  to declare  explicitly to perform multiplication (in terms of performance) or it is equally to 
Cython answerOne way you can do this (if you're open to using numpy):This will require a  dtype for your array. If you wanted a , you can redefine  as .One unsolicited piece of advice...  is a bad name for a variable, since it looks like a digit. Consider renaming it , or something of the like.Pure python with NumpyFinally, it looks like you're trying to compute the dot product between two vectors where elements in one array are positive. You could use Numpy here pretty efficiently to get the same result.Note, I added the  slice since you didn't check for length equality in your Cython function, but used 's length. So I assumed the lengths may differ. 
 and  can be any object that supports the buffer protocol and has a  type. The most common examples would be either a numpy array or the standard library  module. They will not accept Python lists because a Python list is not a single homogeneous C type packed efficiently into memory, but instead a collection of Python objects.To create a suitable object from a Python list you can do either:(You may want to consider using / instead of  for extra precision, but that's your choice)If you don't want to create array objects like this then Cython will not help you much since there is not much speed up possible with plain lists.The  syntax suggested in the other answer an outdated version of the memoryview syntax you're already using. There are no advantages (and a few small disadvantages) to using it.is fine - Cython knows the types of  and  so there is no need to create temporary intermediate variables. You can get a html highlighted file with  to inspect that will help indicate where the non-accelerated parts are.


Answer URL
https://docs.python.org/3/c-api/buffer.html
https://docs.python.org/3/library/array.html
