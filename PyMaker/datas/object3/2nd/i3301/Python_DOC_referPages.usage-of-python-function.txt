Natural Text
I'm a new learner of python/programming. Here is a question on top of head about the use of function in python. If I had a list called myList. (a) If I were to sort it, I would use (b) If I were to sort it temporarily, I would use Note the difference between the use of two functions, one is to apply the function to , the other one is use  as a parameter to the function. My question is, each time when I use a function. How do I know if the function should be used as an "action" to be applied to an object (in (a)), or should an object passed to the function as a parameter,(in (b)). I have been confused with this for quite long time. appreciate any explanations.Thanks.  
Only  is a function -  is a method of the  type.Functions such as  are applicable to more than a specific type. For example, you can get a sorted , , or even a temporary generator. Only the output is concrete (you always get a new ) but not the input.Methods such as  are applicable only to the type that holds them. For example, there is a  method but not a  method. Even for types whose methods have the same name, switching them is not sensible - for example,  cannot be used to copy a .An easy way to distinguish the two is that functions live in regular namespaces, such as modules. On the other hand, methods only live inside classes and their instances.Conventionally, Python usually uses functions for immutable actions and methods for mutating actions. For example,  provides a new sorted list leaving the old one untouched;  sorts the existing list, providing no new one.
There are two big differences between list.sort and sorted(list)The list.sort() sorts the list in-place, which means it modifies thelist. The sorted function does not modify original list but returnsa sorted listThe list.sort() only applies to list (it is a method), but sorted built-in function can take any iterable object.Please go through this useful documentation. 
 is an in-place function whereas  will return a sorted list, but will not alter your variable in place.  The following demonstrates the difference:If you want to maintain the original order of your list use , otherwise you can use .


Answer URL
https://docs.python.org/3/library/functions.html#sorted
https://docs.python.org/3/library/stdtypes.html#list.sort
https://docs.python.org/3/howto/sorting.html
