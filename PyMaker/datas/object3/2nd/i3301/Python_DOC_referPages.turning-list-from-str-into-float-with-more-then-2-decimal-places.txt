Natural Text
I'm trying to turn a list with strings into a list with floats.The strings are all numbers with more then 2 decimal places (most of them have 6 decimal places).The problem is that Python is only keeping two of the decimal places of the string (it's actually rounding). But I need all of the decimal places.My code is as following:The content of timestamps_list_2 looks like this:timestamps_list_3:
You can use decimal class from python like -but this will give you numbers with decimal class but it will retain the 0 if it's the last digit in a number.Else use float and it will remove the 0 if it's the last digit in a number like - Let me know if it helps. P.S. - You can do basic mathematical operations on decimal class.    
64-bit floats can handle precision for up to around 16 decimal places.* So, as demonstrated in your question, you should not face any issues if your strings include at most 6 digits after the period.For greater accuracy (default 28 decimal places, but user-definable), you should use the  module, but first make sure this is necessary. Computations will become expensive relative to .* See IEEE 754 double-precision binary floating-point format: binary64:The 53-bit significand precision gives from 15 to 17 significant  decimal digits precision (2−53 ≈ 1.11 × 10−16).


Answer URL
https://docs.python.org/3/library/decimal.html
