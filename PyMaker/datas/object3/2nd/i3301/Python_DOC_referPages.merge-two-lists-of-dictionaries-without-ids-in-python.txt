Natural Text
I have two lists of dicts like this :  has two elements that  does not have and  has one element that  does not have.I need a  with all the elements merged : Whats the best way to do that in Python ? thanks!
You can use  to hash each dictionaries  to a dictionary, then simply take the assigned values:Or using  applied to a set comprehension:Or even using just a list comprehension:Which will give an unordered result:Note: If order is needed, you can use a  instead here:Which gives this ordered result:
In Python there is the builtin  collection that is perfect for this. The problem is that sets need  elements so you must convert the dict to a set of tuples:
You can create a set out of these values, instead of the dictionaries it would require to be converted into a hashable object like tuple:and then can be converted back to dictionaries and list format again:Something like above should work.


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/collections.html#collections.OrderedDict
