Natural Text
I've laid out my stuff in a DDD sort of way. There are Repositories to hold my objects, Services to add external functionality, etc.  However what's not clear is what's the best way to share these between controllers? In C#, I'd have a dependency injection framework, and a single instance for the server. Python, being duck typed, doesn't seem to have a need for much DI. However there's still the question of how to get shared objects, that will persist between requests.So far I've been hanging them off my app object, but seems there should be a more elegant and standard way to do so.I'm specifically asking about sharing objects that add behavior to the app and could be called upon in different places in the app, not about sharing or changing data between requests.
The common way seems to beinitialise your objects in a single modulehave all other modules import the same object from that moduleeg define and in In general imports are cached, so all the modules should import the same instance of the object. Regardless, since you're doing DDD, those objects should probably be stateless anyway.You should never do this for shared data that will change, as global data is not thread safe in web applications. If you want to share data between requests, use a database or other external data store.


Answer URL
https://docs.python.org/3/reference/import.html#the-module-cache
