Natural Text
I have a GUI, using tkinter, that has multiple groups of checkbuttons. Each group of checkbuttons is comprised of a list of checkbuttons that corresponds with a list of tk.IntVar() for each checkbutton. That is, for checkbutton group "Alpha",  is one example of a checkbutton and  is its corresponding tk.IntVar().Each individual group of checkbuttons has its own (Un)Check-All checkbutton that selects/deselects all of that group's checkbuttons at once. Each of these (Un)Check-All checkbuttons has its own individual function (called by its checkbutton command).My desire is to have a single function (that can be called via a checkbutton command), or at least a simplified lambda, that can be used to check/uncheck ALL checkbuttons in a given group.Generically, I would have a function that takes a list (of tk.IntVar()s) as an argument and just turns on/off each element of that list. But I cannot specify an argument in a checkbutton command, and so each one has its own function... Which results in redundant code. I haven't been able to nail down a structure that allows me to just use a single function, or at least a self-contained lambda in  the command.So for a simplified example, let's say I have two groups of checkbuttons: Alpha and Bravo. I have list of tk.Checkbutton()s in , and a corresponding list of tk.IntVar()s in . The same for  and . The Alpha group has a (Un)Check-All checkbutton as follows:with the corresponding function:And I have a similar function for Bravo... and Charlie... and Delta... etc. So needlessly redundant. Any suggestions as to combining into a single function or lambda within the command?Thanks!
As I understand it, the problem is that you have to write a bunch of functions like this:… and so on.What you want is a function that takes the list of vars and the all-var as parameters:And now, you can use  to create all of the individual partial functions:However, you can reduce the duplication even further by writing a function that does all the stuff for building a group together in one place. It's hard to show that without more of your code to use, but it would look something like this:Or, alternatively, maybe just a function to group a bunch of cbs together:And maybe you don't even want to store , , etc. as separate variables. Maybe it makes more sense to have a list of groups, or a dict mapping names to groups, or some kind of object with attributes, or… whatever.


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
