Natural Text
I'm trying to use strftime() to microsecond precision, which seems possible using %f (as stated here). However when I try the following code:...I get the hour, the minutes and the seconds, but %f prints as %f, with no sign of the microseconds. I'm running Python 2.6.5 on Ubuntu, so it should be fine and %f should be supported (it's supported for 2.6 and above, as far as I know.)
You can use datetime's strftime function to get this. The problem is that time's strftime accepts a timetuple that does not carry microsecond information.Should do the trick!
You are looking at the wrong documentation. The  module has different documentation. You can use the  module  like this:
This should do the workIt will print  like this e.g 
You can also get microsecond precision from the  module using its  function.( returns the time in seconds since epoch. Its fractional part is the time in microseconds, which is what you want.)
With python  module you can't get microseconds with .For those who still want to go with  module only, here is a workaround:You should get something like 2017-01-16 16:42:34.625 EET (yes, I use miliseconds as it's fairly enough).To brake the code into details, paste below code into python console:For clarification purposes, I also paste my python 2.7.12 result here:Hope it helps.
When the "%f" for micro seconds isn't working please use the following method
If you want an integer, try this code:Output:


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
https://docs.python.org/3/library/time.html#time.strftime
