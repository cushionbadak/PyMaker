Natural Text
according to answer to this question, yield break in C# is equivalent to return in python. in normal case, 'return' indeed stop a generator. But if your function does nothing but return, you will get a None not an empty iterator, which is returned by yield break in C#you will get a TypeError: 'NoneType' object is not iterable.but if I add an never run yield before return, this function return what I expect.if works but seems wired. Who has better idea?thanks,

A good way to handle this is raising StopIteration which is what is raised when your iterator has nothing left to yield and  is called. This will also gracefully break out of a for loop with nothing inside the loop executed.For example, given a tuple  I want to get overlapping pairs . I could do it like so:Now  safely handles lists with 1 number or less.

The funny part is that both functions have the same bytecode. Probably there's a flag that sets to  when bytecode compiler finds the  keyword.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-return-statement
