Natural Text
For a one dimensional list, the index of an item is found as follows:What is the equivalent for a 2 or n dimensional list?Edit: I have added an example to clarify:If I have a 3 dimensional list as followsNow lets say I want to identify a certain value in this list. If I know the index of the 1st and 2nd dimesion but don't know the zero-th index for the value I want, how do I go about finding the zero-th index?Would it be something like:With the output being an integer:    0
I don't know of an automatic way to do it, but ifand you want to find the location of 3, you can do:The output is:
For two dimensional list; you can iterate over rows and using .index function for looking for item:
A multidimensional list is simply a list with more lists inside of it.So its indices would be lists themselves.
For multidimensional arrays:There should be a better way to avoid the try/except block, but I could not find one: In Python, how do I determine if an object is iterable?
For n-dimensional recursive search, you can try something like this:And the result is:Probably there are better ways to do it, but that is the one I figured out without getting any library.EDIT:Actually, it was not perfect and one library must be added. It's copy. Now it's ok.
You can use the following sample method too:Or with all occurrences(sure code could be optimized - modified to work with generators and so on - but here is just a sample):
If you want to find the list that has an item, the simplest way to do it is:Or if you know there are more than one matches for the item, then you can do:None of this will raise any errors  but they'll only work if there is no subarray. Go here for information about the functionality of filter.



Answer URL
https://docs.python.org/3/library/functions.html#filter
