Natural Text
I would like to write a custom list class in Python (let's call it ) where I can eventually call:How would I go about doing that? Is there some class I have to extend, or are there any functions I must override in order to do so?
Python Language Reference, §3.4.6, "Emulating container types"
Your can subclass  if your collection basically behaves like a list:However, if your main wish is that your collection supports the iterator protocol, you just have to provide an  method:This allows you to iterate over any instance of .
I like to subclass , as recommended by Alex Martelli.  This works well for me, particularly when I need to add custom methods on top of the list I'm building.
You could extend the  class:Example usage:Expected output:
In Python 3 we have beautiful :Class that simulates a list. The instance’s contents are kept in a  regular list, which is accessible via the data attribute of UserList  instances. The instance’s contents are initially set to a copy of  list, defaulting to the empty list . list can be any iterable, for  example a real Python list or a UserList object.In addition to supporting the methods and operations of mutable  sequences, UserList instances provide the following attribute:   A real list object used to store the contents of the UserList class.https://docs.python.org/3/library/collections.html#userlist-objects


Answer URL
https://docs.python.org/3/library/collections.html#userlist-objects
