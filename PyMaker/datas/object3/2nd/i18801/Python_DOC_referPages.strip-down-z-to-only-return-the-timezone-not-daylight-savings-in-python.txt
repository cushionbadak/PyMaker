Natural Text
I have some code as shown below, but the timezone %Z is returning: 01:04:48 GMT Daylight TimeI need it return: 01:04:48 GMTAnyone have any idea how I can fix/do this?
Lazy way:
The problem is that  isn't documented to give you any specific format at all; it just gives you:Time zone name (no characters if no time zone exists).With CPython 2.7 or 3.3 on POSIX platforms, it will usually give you something in the format / for the major US timezones, but it may give you something in the format / (or  or ) for the major EU timezones, but that isn't guaranteed anywhere at all, and what you get elsewhere is hard to predict.So, if you only care about your specific platform, and only about the major US and EU timezones, and you know that it's giving you  (rather than, say, , which you presumably don't want to truncate to ), you can do something like this:If you look at the source, you can see that  ultimately just calls your platform's . On POSIX platforms, the standard defines %Z as:Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [tm_isdst]Although it isn't stated very clearly on that page, ultimately, what you get is the value of the extern variable [0] or [1] depending on isdst, and Python exposes , so you can do something like this:And now, '%Z' is guaranteed to return . Or you can leave Daylight/Summer Time support in, but just give both the same name:Or, ideally, you can feed in the right DST rules for the active timezone, just replacing the name.
You can force it to GMT using the gmtime:However, it's now 00:13 GMT (rather than 1:13 DST).
GMT does not adjust for daylight savings time. You can hear it from the horse's mouth on this web site. "%Z" just means:Time zone name (no characters if no time zone exists).So you can just strip off the string.


Answer URL
