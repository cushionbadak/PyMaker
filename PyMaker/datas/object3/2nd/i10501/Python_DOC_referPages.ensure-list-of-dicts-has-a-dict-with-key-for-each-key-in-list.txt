Natural Text
Context:I'm using an Ajax call to return some complex JSON from a python module. I have to use a list of keys and confirm that a list of single-item dicts contains a dict with each key.Example:How do I know that mydictlist is missing the "those" key? Once I know that, I can append {'those':4} to mylist. Simply checking for "those" won't work since the list is dynamic. The data structure cannot change.Thanks.
Simple code is to convert your search list to a set, then use differencing to determine what you're missing:which gets you  of .Since the named  methods can take multiple arguments (and they need not be s themselves), you can just unpack all the s as arguments to  to subtract all of them from your  of desired keys at once.If you do need to handle duplicates (to make sure you see each of the  in  at least that many time in 's keys, so  might contain a value twice which must occur twice in the s), you can use  and  to get remaining counts:
The most straightforward way is to iterate over both the containers and check:However, if you have a lot of keys and/or dictionaries, this is not going to be efficient: it iterates over  once for each element in , which is O(n*m). Instead, consider a set operation:
The pandas package is a great way to handle list of dicts problems. It takes all the keys and makes them column headers, values with similar keys populate the same column.Check this out:


Answer URL
https://docs.python.org/3/reference/expressions.html#membership-test-operations
