Natural Text
if I am given a text data which contains a list of numbers without specifying which number refers to which variable, unlike the excel format, how does one load these number as data using Python?Sorry for the amateur question, but I am just introduced to python.
Hi Anthony,Parsing your file depends on the format it is using. Assuming your file is a sequence of numbers separated by a new line, here's how I would proceed:First of all, you have to open your file. To do so, you could use the standard  function. takes as a first argument the path of the file you want to work with, and a second argument being the mode, which could be  to read,  to overwrite, and  to append text to the file as well as the binary variants (default is ). Not talking about 's other parameters.The cool thing is,  is also what we call in Python a context manager. Behind this jargon lies a really simple concept which is doing action before and after a given code.The  keyword allows you to use a context manager:If you didn't notice, you don't have to close your file using context managers, because  is taking care of that.That's why it is recommended rather than the previous method: You can't forget to close your file, thus it's less likely to have an OS error if you open the file twice (e.g. if you want to modify and save a serialized object).
In general, you have to filter the data yourself and figure out where each value is, and what variable it should apply to. But there are LOTS of standard formats that python can read directly, and do a lot for you.  For instance, if your text data was in the JSON format, it would be as simple as import json, variable = json.load(open('file data.json','r'))But if it's not in any known format, that python can read, then you are forced to either convert it into a known format, or do it yourself.  There are packages that help you "parse" text to make it easier to handle someone has created a whole list of them: https://github.com/webmaven/python-parsing-toolsThis is why everyone is asking you what format the data is in.  If it's in a known format, you are probably good to go, but if it's some special custom format, then you need a special parser that you will have to write yourself, or alternatively somehow convert that data into a different format.



Answer URL
https://docs.python.org/3/library/functions.html?highlight=open#open
