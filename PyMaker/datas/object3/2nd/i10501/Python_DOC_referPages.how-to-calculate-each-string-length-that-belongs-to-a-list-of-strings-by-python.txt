Natural Text
Suppose I have a file with  DNA sequences, each one in a line. I need to turn them into a list and then calculate each sequence's length and then total length of all of them together. I am not sure how to do that before they are into a list. How can I do math calculations from the list? Ex. the total length of all sequences together? Standard deviation from their different lengths etc.
Look into the  module.You'll find all kinds of measures of averages and spreads.You'll get the length of any sequence using .In your case, you'll want to map the sequences to their lengths:edit: Because it was asked in the comments: Here's how to cluster the instances into different files depending on their lengths:
Try this to output the individual length and calculate the total length:
The map and reduce functions can be useful to work on collections.
This will do what you require. To do additional calculations you may want to save your results from the text file into a list or set so you won't need to read from a file again.
Just a couple of remarks. Use  to handle files so you don't have to worry about closing them after you are done reading\writing, flushing, etc. Also, since you are looping through the file once, why not create the list too? You don't need to go through it again.I have included some post-processing info to give you an idea of how to go about it.If you have any questions just ask.
You have already seen how to get the list of sequences and a list of the lengths using append.Note that you can also use a for loop to read each line and append to the two lists rather than read every line into lists and then loop through lists. It is a matter of which you would prefer.You can use the statistics library (as of Python 3.4) for the statistics on the list of lengths.statistics — Mathematical statistics functionsmean()    Arithmetic mean (“average”) of data.    median()    Median (middle  value) of data.    median_low()   Low median of data.  median_high() High median of data.    median_grouped()    Median, or 50th  percentile, of grouped data.    mode()    Mode (most common value) of  discrete data.    pstdev()    Population standard deviation of data.  pvariance()   Population variance of data.    stdev() Sample standard  deviation of data.    variance()  Sample variance of data.You can also use the answers at Standard deviation of a listNote that there is an answer that actually shows the code that was added to Python 3.4 for the statistics module. If you have an older version, you can use that code or get the statistics module code for your own system.


Answer URL
https://docs.python.org/3/library/statistics.html
https://docs.python.org/3/library/statistics.html
