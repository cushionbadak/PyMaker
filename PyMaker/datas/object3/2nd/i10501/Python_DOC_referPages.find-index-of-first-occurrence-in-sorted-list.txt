Natural Text
I have a sorted list that looks like this:I also have a count variable:*note: sometimes count can be an integar greater that the max value in the list. For example What I want to do is to find the first occurrence of the count in the list and print the index. If the value is greater than the max value in the list, then assign a string. Here is what I have tried:I thought the break would end the for loop, but I'm only getting results from the last if statement. Am I doing something incorrectly?
Your logic is wrong, you have a so called sorted list of strings which unless you compared as integer would not be sorted correctly, you should use integers from the get-go and bisect_left to find index:If the value falls between two as per your requirement, you will get the first index of the higher value, if you get an exact match you will get that index:
As there are some over-complicated solutions here it's worth posting how straightforwardly this can be done:But, use .
You could use a function (using EAFP principle) to find the first occurrence that is equal to or greater than the count:
As your list is already sorted, so the maximum value will be the last element of your list i.e  . secondly there is an error in your for loop.  This gives you each element in the list . To get index do a for loop on range  Here i is the element in the list. You should break after writing to the file. Below is the fixed code:
First of all:Will never execute that last function. It will onmy peint  and . Because  immediately leaves the loop; it does not wait for the current iteration to finish.In my opinion, the code would be nicer if you used a function  and  instead of .Last but not least: the data structures here are pretty expensive. You may want to use integers instead of strings, and numpy arrays. You could then use the very fast  function.
Using :The test:and:Explanation drops the list until the first occurrence, when  returns . By subrtracting the (number of) items after that from the length of the original list, we have the index."an iterator that drops elements from the iterable as long as the predicate is true; afterwards, returns every element." 


Answer URL
https://docs.python.org/3/glossary.html#term-eafp
