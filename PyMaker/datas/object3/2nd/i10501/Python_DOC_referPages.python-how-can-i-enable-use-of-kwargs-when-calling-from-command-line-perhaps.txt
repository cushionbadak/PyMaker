Natural Text
suppose I have the module myscript.py; This module is production code, and is called often as . I want to extend it to take keyword arguments. I know that I can take these arguments using the script below, but unfortunately one would have to call it using .I know that I can use the  module, but I'm not sure how to do it. 
If you want to pass in keyword arguments as you would in the main function, , you can do it like so:Some examples:However, this assumes that the key and value do not have any whitespace between them,  will not work.If you are looking for  kinds of keyword arguments, you should use .
@Moon beat me to it with a similar solution, but I'd suggest doing the parsing beforehand and passing in actual :
First, you won't be passing an arbitrary Python expression as an argument. It's brittle and unsafe.To set up the argument parser, you define the arguments you want, then parse them to produce a  object that contains the information specified by the command line call.In your  block, you'll parse the arguments, then pass a dictionary produced from the  to .Then you'll call your script with a line likeorThere's a lot more you can do with , but this is a simple example for getting the value it produces into .
With a bit of introspection, it's possible to set up  from a function's signature, thus mapping command-line parameters directly to function arguments:The result:


Answer URL
https://docs.python.org/3/library/argparse.html
