Natural Text
At the moment I have a little  project that calls another python file. I'm fully aware that this way is kinda awful, and so, I want to swap it for a function call while maintaining the prints getting yelded to the website. I've tryed to replace the file call with the function directly but it just prints it to the console.I really appreciate any help you can provide.
Assuming that all the printing you want to grab is done within the same module, You can monkey-patch the  function of the other module. In the example below, I use a context manager to revert the original print function after the grabbing is done.This is , the module with the misbehaving function.This is , the module using The  context manager redirects print calls of  to the file-like object . In the function ,  is used to store the print output of  in the  object . The rest should be self-explanatory.If you don't know exactly whether print is called in other modules in the call tree of the function in question, you can modify  as follows:
A simple way would be to temporarily change  to a file-like object, call the function, then restore . The output will be available in the file-like object.Here is a working Flask app that demonstrates the method:Here a  object is used to collect the standard output produced by the function, and then the lines are yielded from that object. The  ensures that the original  is restored afterwards. There is some additional complexity around the  statement because  returns control to the calling code for which stdout must be restored in case the caller also wants to print to stdout.It's assumed that the function in  is the "main" function, and that invocation of it is guarded by a  test, something like this:


Answer URL
https://docs.python.org/3/library/io.html?highlight=pipe#io.StringIO
