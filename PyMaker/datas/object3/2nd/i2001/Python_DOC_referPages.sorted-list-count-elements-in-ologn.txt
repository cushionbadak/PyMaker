Natural Text
Suppose that I have a sorted list/arrayI need to count the number of a distinct number in that list/array in O(logN) repetitionsI know already that I need to use some kind of binary algorithm but I can't do it in O(logN) repetitions in the worst case scenarioIs there any idea?
Use the  module.Output:Thus, the algorithm works for any value you pass it. If the value passed is not in the list, 0 is returned.The  module works by using binary search to find an appropriate place for insertion of the given element.  gives a leftmost index and  gives an index to the right of any existing values.By subtracting the two, we get the number of values of  already present in the list.Because the bisect module use binary search, this method is O(log N).
You can divide and conquer and subtract counts where the last item in the first half is equal to the first item in the second half:so that:returns:  (since we have 7 distinct numbers: , , , , , , )


Answer URL
https://docs.python.org/3/library/bisect.html
