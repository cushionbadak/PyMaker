Natural Text
I have a large sum of .txt files that I want to concatenate together but they are missing dates in the files themselves.However, the date is the filename which I want to extract somehow and use as a label on my Pandas DataFrames - for example . This would make up for the lack of the actual date in the file itself.Is there any way to bring in all files locally, one at a time, and spit out the filenames as labels which breaks each part of the total DataFrame by date?My pseudo code is:ThenWhere each file is a .txt when taken in are nested lists (parsed through these functions above by city).The input looks something like:The output I want to achieve is:Basically I want to split each df by the FileName at the beginning of each intake.
I would probably use the standard csv module in Python, https://docs.python.org/3/library/csv.html. But if you prefer to use pandas, below is a code snippet you can modify:The example I used above reads every file in a folder, checks if it is a valid file and stores it in list. Once we have the list of files, we just loop it and store it in _df where it appends to df with the file name. Your final df will contain all the data rows and file names.


Answer URL
https://docs.python.org/3/library/csv.html
