Natural Text
4 jobs scheduled on 3 machines, using nested lists [machine#, job#]I want to count how often machine 3 is used.I tried using  but I didn't get any output and I guess it would check all elements anyways.
To use count you need to create list of machines (by extracting each machine from the pair list) and the count the occurrences of , for instance something like this:The above approach is inefficient because it creates a list and the applies count on it. A more efficient approach is to use a generator expression as @schwobaseggl suggested, one alternative to the proposed generator is the following:Finally both approaches work fine if you intend to count only the occurrences of single machine, if you want the occurrences of several machines for example  and , I suggest you use Counter:OutputUpdateBesides the above approaches you could use a simple  loop and a counter variable:Note The  notation is known as unpacking. When you write  Python expects that each element of the  list is a pair of elements. For example,  assigns the value  to  and the value  to . Using  simply means ignore the second value.Furtherhttp://treyhunner.com/2018/03/tuple-unpacking-improves-python-code-readability/
You could use a list comprehension to extract the jobs on machine #3, and then just check its length:
 counts how many of the elements in  are equal to . You can easily see that none of them are. After all, the elements are lists.However, you can use  with an appropriate generator expression:This is more space efficient than building a  and calling  on it. The summation makes use of the fact that  is a subtype of .


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/functions.html#sum
