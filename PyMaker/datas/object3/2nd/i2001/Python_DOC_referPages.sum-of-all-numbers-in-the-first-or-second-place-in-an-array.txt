Natural Text
I have a 2d list, for example:   and I want to find the sum of all the numbers at the n'th place of every element.For example if I want the answer for 0, I would calculate:  or  Output: 16Is there a more elegant way to do this? Or one that uses only one line of code?I mean as fictional code for example:  
Since you are looking for a functional solution, consider :For performance and simpler syntax, you can use a 3rd party library such as NumPy:
As a generalization if you want multiple indices (e.g. 0 and 1) you could use reduce combined with and element-wise sum something like this:OutputThe idea is that the function  sums two list element-wise, for example:and with reduce apply  to a list of lists, finally filter the result for the intended indices (places) only.
The above can be even written as function taking list and the index as input and returns the sum of the common index.What we do in the above is first we get all the same indexes to individual lists using  and then chooses which index one has to be summed and passes the same to  function.


Answer URL
https://docs.python.org/3/library/operator.html#operator.itemgetter
https://docs.python.org/3/library/functools.html#functools.reduce
