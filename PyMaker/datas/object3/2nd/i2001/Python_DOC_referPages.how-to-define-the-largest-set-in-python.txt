Natural Text
Consider following code:I am curious, if there is no ‘key’ parameter, the max() function will return a confusing result, it is not the one contains more items, neither the one whose first item is bigger (10<111), neither the first argument (if it doesn’t know how to compare the input arguments, maybe it will return the first argument which is b?)By the explanation of  function, it should return “the largest argument” if the input is two or more argument. So how to define the ‘largest’ among several sets?
Sets override , ,  and  to make subset and superset comparisons and should not be seen as orderable. Because of this, there is no 'max' or 'min' set.From the set type documentation:Test whether every element in the set is in other.Test whether the set is a proper subset of other, that is, . Test whether every element in other is in the set.Test whether the set is a proper superset of other, that is, .and further downA set is less than another set if and only if the first set is a proper subset of the second set (is a subset, but is not equal). A set is greater than another set if and only if the first set is a proper superset of the second set (is a superset, but is not equal).and finallySince sets only define partial ordering (subset relationships), the output of the  method is undefined for lists of sets. and  use the same definitions of ordering to determine the largest or smallest item from a series of inputs, and because sets define ordering in terms of subset relationships, the output of  and  is undefined too.


Answer URL
https://docs.python.org/3/library/stdtypes.html#set
