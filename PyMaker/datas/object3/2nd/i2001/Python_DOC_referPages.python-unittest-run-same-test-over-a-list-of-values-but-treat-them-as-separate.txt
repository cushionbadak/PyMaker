Natural Text
I'm writing a test to validate that my program is able to solve the problem at hand for different levels of complexity. The expected outcome is always the same (solution is complete), so a single test definition works for all problems.How do I run the same test for a list of values read from a file, but tell unittest to treat each of these problems as a separate test so I can pinpoint all failing/passing cases? (Preferably no external libraries)To avoid explicitly having , my initial thought was to have a for loop run through each item of the list, and run the assertions one at a time:The problem with this approach is that the first failure stops the rest from running, so its more difficult to get a complete picture of what is wrong.
Use the subTest() context manager to distinguish tests inside a single test body. (Python 3.4+)Result from PyCharm:You can see individual results for each case and see all failed cases at once. Notice that its still treated as a single logical test ("Ran 1 test"), which makes sense since its testing the same functionality. Each case is treated as a sub test.Other things to consider:If using an older version of Python or you want to use another library, you can look at ddt to add test data via decorator .


Answer URL
https://docs.python.org/3/library/unittest.html#distinguishing-test-iterations-using-subtests
