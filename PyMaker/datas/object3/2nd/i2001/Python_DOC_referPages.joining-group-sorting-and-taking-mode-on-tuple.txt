Natural Text
I have the following problem with the constraint that I do not have access to  or anything but the standard libraries. Dictionary with ID-type1 : label.List of 3-tuples with ID-type1, ID-type2, Val. Each ID has thousands of unique values.If the dictionary were a dataframe with name A (3 columns), and the list a dataframe with name B (2 columns). I would like to do the following pseudo logic.Attach label to the list of tuples.Then select the mode(label) for each ID-type2 among rows corresponding to the top m values in the column  or in other words, group by ID-type-2, then keep only the top  (integer) rows based on  column, then select the mode/most common value of the  column.In other words, the desired output is a list of tuple with (ID-type2, Label)edit: I think the first step can be done with something like this? But the second step is the challenging part
I think you can do this with  and the  module. Consider the following sample data that you posted in your question:You can create the "join" with a simple list comprehension:Now, you can create your groups with . Here I'm storing the grouped results in another dictionary:For the sample data above, the groups look like this:And now you can get your mode with a simple list slice of each group up to  values:


Answer URL
https://docs.python.org/3/library/statistics.html#statistics.mode
