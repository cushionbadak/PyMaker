Natural Text
I came to Python from Mathematica. Are there prefix, postfix, and infix operators without parentheses like in Mathematica in Python?e.g. In MathematicaI find I'm constantly using print to test functions and having to wrap the entire thing with parentheses seems cumbersome and cleanup is slow. Is there a way to have  in Python3?
Python does not have any postfix operators, though you could sort of mimic them using the magic r-dunder methods and infix operators if you try really hard.For example,You might still require parentheses to get the precedence right though.Python does have an operator precedence table in the documentation. Thus, operations with higher precedence will apply first and do not require explicit parenthesis, e.g.  is the same as  in Python.You could even generalize this to arbitrary 1-argument functions,If you're used to Mathematica, I would recommend using Jupyter notebooks for your Python experiments, as the paradigm of cells will be familiar to you.Jupyter's Python kernel, IPython, does have  magics that extend the native Python syntax somewhat. IPython includes an %autocall option to invoke functions without the parentheses. This can cause ambiguity in some cases and so is disabled by default.You can also start a line with  for a similar effect (it only works in IPython--see also  and  for auto call with auto quotes).As in the IPython repl, the value of the last statement in a Jupyter cell will be displayed as output automatically--you don't have to call  on it. And for some data types, like Pandas data frames, it's better if you don't. It is also possible to configure it to display the output of multiple statements from the same cell.The first cell you should try executing in Jupyter isJust a question mark. This will bring up the online help explaining IPython's features.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__radd__
https://docs.python.org/3/reference/expressions.html#operator-precedence
