Natural Text
I used import  and  but I realized I still have  after conducting . I also get , which I don't know why I would get it after doing ). As far as I understand,  removes the peripheral spaces, so if I have spaces between a string it would not matter:I would like to get rid of , the final output I'd like is .I would like to refrain from using regex, but if that's the only solution I will consider it .. for now I'm more interested in solving this without resorting to regex.
You can remove punctuation by retaining only alphanumeric characters and spaces:This outputs:
I used the following:
building on the accepted answer to this question:or the same as a one-liner (except for the import): scans the string  as a list of characters, grouping them () by the value () of the lambda expression. The  filters out the groups not matching the lambda. The groups are iterators that have to be converted to a list of characters and then joined to get back the words.The meaning of  is essentially “is alphanumeric”. Depending on your use case, you might prefer . In both cases, for this input:the output is(For experts: this reminds us of the problem that not in all languages words are separated by non-word characters - e.g.)


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.isalnum
https://docs.python.org/3/library/stdtypes.html#str.isalpha
https://docs.python.org/3/library/string.html?highlight=punctuation#string.punctuation
