Natural Text
From Numpy documentation:Could somebody explain me the last line of code? How does  equal these numbers? For example ? What part have I skipped over?
There is inbuilt function in numpy to find cuberoot.Check this out:Your output will be :
In Python,  returns a complex number,This happens because the way computer store numbers,  is an irrational number which at some point gets approximated and therefore there is a loss in precisionHere the values in the ndarray  are of  type.The code  returns a result of type  since the second argument is a floating point. is a complex number and cannot be stored as as  therefore To avoid the  you can change the  of the  to  and do the calculationsYou can take the absolute values of these numbers using 
How does  equal these numbers?This is not just a NumPy or Python-specific feature. It's from math. (In your example, it's numpy handling the math instead of Python, by overriding  but it works with pure-Python numbers as well.)x ** y (or "x raised to y"), 'y' can be:x ** 2 : "x squared"x ** 3 : "x cubed"x ** 5 : "x raised to 5" or "5th power of x"It can also be a fraction:x ** (1/2) : "square root of x"x ** (1/3) : "cube root of x"x ** (1/5) : "5th root of x"Here's a source which explains it better:the Sqrt process actually undoes what the raising to the power of 2 had done; in other words, in some sense this is the "opposite" process of squaring. Recall from our algebraic rules for powers that a number to a power can be raised to a power again and all we do is multiply the powers; then note that the square root process can be written as raising to the power of ½:Sqrt(2²) = (2²)½ = 2² × ½ = 2^1 = 2And for a more mathematical proof: Why Is an Exponent of 1/2 the Same as a Square Root?


Answer URL
https://docs.python.org/3/library/operator.html#operator.__pow__
