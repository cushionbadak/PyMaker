Natural Text
The following code tries to create-then-import two modules:On Windows, both imports work under Python 2 (2.7), but not under Python 3 (3.5 and 3.6):Adding  before each  call makes it work.Why is that?Note: This is a simpler version of an issue I'm trying to figure out.
I think I know what is going on. The new Python 3 import machinery caches the filenames it finds in directories. It will reload the cache when the , the modification time, of the directory changes.See the  method implementation, which contains:Here  is just a  call, but localised to avoid imports. The  method executes the  call.On some Windows filesystems, the resolution of  is notoriously low, up to 2 seconds. For your case, the resolution is apparently still low enough for the cache to not be updated by the time you try to load the second module. Although the NTFS filesystem can record times in 100ns increments, in practice the limiting factor there appears to be the Windows system clock, which I understand is usually limited to a resolution of 15ms. So if you write  within 15ms of writing , then Python won't notice.Python does give you the means to clear this cache; use the  method; this will reset the  attribute on the  instance back to , forcing a new  call.As the function's documentation states:This function should be called if any modules are created/installed while your program is running to guarantee all finders will notice the new moduleâ€™s existence.


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.invalidate_caches
