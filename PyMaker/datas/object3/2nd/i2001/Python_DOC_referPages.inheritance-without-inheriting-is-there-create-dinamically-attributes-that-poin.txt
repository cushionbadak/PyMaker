Natural Text
I'm struggling to solve with this problem. I'd like to have the name variable to be like a pointer to the value of self.model.name. If the value of _class.model.name is changed the _class.name should change accordingly. Can't find a way to basically map dynamically the Class attributes with any Model attributes without inheriting. Thanks! 
Use a  to create a single dynamically computed attributes:This causes all instances of  to run the  method whenever the attribute  is looked up. This allows the value to be dynamically computed on each lookup.If you want to dynamically fetch many or all attributes from somewhere else, consider using :The  is only triggered for attributes that are not on the class/instance. This makes it rather straightforward to use with manually defined attributes. Note that you can use arbitrary code to restrict what is fetched - e.g. raise  if  is not in some whitelist.
Along with MisterMiyagi's answer - but in case you want to still want to keep the concerns separated (even though it really doesn't seem like you do)


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
