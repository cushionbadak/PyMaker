Natural Text
I have this assignment due for my computer science class:In this assignment you will ask the user to input an English word, translate that word into ”Pig Latin” and then print both words.These are the rules:If a word starts with a vowel (a, A, e, E, i, I, o, O, u, U) then the translation is formed by adding a "way" to the end of the word. e.g. "at" becomes "atway", "egg" becomes "eggway"If a word contains no vowels (a, A, e, E, i, I, o, O, u, U) then the translation is formed by a adding a "way" to the end of word. e.g. "my" becomes "myway", "by" becomes "byway"If a word starts with a consonant and contains a vowel, the translation is formed by moving the consonant(s) up to the first vowel to the end of the word and adding an "ay". e.g. "bat" becomes "atbay", "that" becomes "atthay", "three" becomes "eethray"Words that start with an initial capital letter should be translated to words with an initial capital letter. e.g. "Houston" becomed "Oustonhay", "Iceland" becomes "Icelandway", "Marry" becomes "Arrymay"This is the programming I have so far. I am stuck on the 3rd and 4th rule:I know this is right because we did this part in class but when I came home I was completely lost and unsure what I need to do! Please help!
The third rule requires you to find the index of the first vowel and then flip the characters around. There are several ways to find the index of a first vowel but I reckon this is the one you'll understand the best:Now you can use this function to find the vowel index and then slice the word so it matches your third rule, e.g.:You can even use this function instead of your other functions as it will return  if there are no vowels in the word or the index if there is some so by simple checking the return of this function you can check all three conditions. This gives you a way to optimize your code a bit as the rules are exclusive so you can rewrite your  function as:And you can easily test it with:Which will produce:As for the fourth rule, all you need is to check if the first letter was uppercase in the third condition (as the first two keep the letters unshuffled) and turn it into a titlecase (check ) if it was. So, to complete the  function, you can do something like:And to test it:Yielding:
As this is a kind of homework assignment, I am not writnig code (a commendable practice on SO).Rule 3 should consist in finding which character is the first vowel, and then moving the slice of word from beginning up to that character to the end of the word (technically you would replace the string with two slices, as strings are immutable in python) and then append the "ay"Rule 4: if upper case of the first letter of word (before any modifications) is the same as that letter, then save that info into some variable and based on that change (or not) the first letter of output 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.title
