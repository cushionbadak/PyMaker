Natural Text
I know that you can cast  into a  to allow item indexing. But I do not know why this operation is not allowed directly. Is it because  objects are generators? If so, when I'm seeingis Python evaluating my generator when  is called?
 do not support indexing because these objects are intended to be set-like, and sets do not support indexing.They do quack like sets in other ways:If any value is not hashable, you lose the ability to treat the dict items views with set operations.It is not sensible to give indexing support to  views, because the dict does not have an ordering until Python 3.7+, so accessing "the 0th" item would not be well-defined. Even in Python 3.7, where there is a sensible ordering to use for indexing (i.e. the insertion order), it is non-trivial to implement this with O(1) complexity, so it's not supported. The "unwritten rule" is that indexing should be constant-time operation (as it is for list, tuple, dict, str - see here).


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict-views
