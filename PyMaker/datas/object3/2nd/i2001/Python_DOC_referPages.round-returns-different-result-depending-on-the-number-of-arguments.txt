Natural Text
While using the  function I noticed that I get two different results depending on whether I don't explicitly choose the number of decimal places to include or choosing the number to be 0.It prints the following:What is the difference?
The round function returns an integer if the second argument is not specified, else the return value has the same type as that of the first argument:So if the arguments passed are an integer and a zero, the return value will be an integer type:For the sake of completeness:Negative numbers are used for rounding before the decimal place
When you specify the number of decimals, even if that number is 0, you are calling the version of the method that returns a float. So it is normal that you get that result. 
The round() function in Python takes two parameters:number - number to be roundednumber of digits (optional) - the number of digits up to which the given number is to be rounded.Whenever you use the second parameter, Python automatically converts the data type of the return value to float. If you don't use the second optional parameter then the data type remains an integer.Therefore, it is 4.0 when the parameter is passed and 4 when it isn't.


Answer URL
https://docs.python.org/3/library/functions.html#round
