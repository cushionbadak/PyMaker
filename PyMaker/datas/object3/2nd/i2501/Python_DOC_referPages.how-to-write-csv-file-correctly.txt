Natural Text
For giving the model and its data stored in db, I want to write it into an csv file. Yet, the first row of my resulted csv file was not in correct order.models.pySo, the data store in db is like below:Here my script to write an these data into csv file:Yet, the final csv file is fine except the first row like below:The location where data was truncated is marked by .What is wrong? How can I fix that? Thanks.
I was able to reproduce this locally with a mocked data source.Looks like you actually have to close the file to make sure it's flushed.You are doing this in 2 places; note that  returns the function, but  actually invokes it. One can reproduce the problem deterministically usingWithout calling  explicitly, you are leaving it up to the GC to decide when  files should be closed, which can lead to bugs like this. See http://blog.lerner.co.il/dont-use-python-close-files-answer-depends/Related note: consider opening the file once, and passing  into  to be used, instead of opening the file inside . Furthermore, consider using the  syntax:That  way, you are guaranteed to be using one output stream in a serialized fashion, and  closes the file as soon as it exits.
Try the inbuilt CSV module instead.Here is an example.Importing the inbuilt CSV module. You can refer the documentation for tweaking it.A sample input similar to your data. Let's consider the first tuple as the header.Here we are creating a custom dialect with the name as "test".  We are specifying the delimiter as one space.Now let's open a file and write the data to it. Opening the file in with clause will automatically take care of closing it. Here we are creating a csv.writer object, testwriter, with dialect as our custom test_dialect.  testwriter.writerow() will write an entire row from the tuple with space as delimiter.The test.csv file will be as follows,


Answer URL
https://docs.python.org/3/library/csv.html
