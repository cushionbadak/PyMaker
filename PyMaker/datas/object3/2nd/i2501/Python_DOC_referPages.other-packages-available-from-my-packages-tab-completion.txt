Natural Text
When I import a Python 3 package I created, the tab-completion for the package includes some packages that are imported by my package from other packages like .The package has this basic structure:My  containsThe problem is that  looks like thisThus, when I , I get tab-completion options like , which is not really a valid anything. For all  I want  to be a function or class defined by me, not imported from another package.What is the best way around this? Should I add  to ? I know I could  inside of every single function, but that seems like overkill for anything more than a trivial example like this one.Is it just a problem with Jupyter's tab-completion?
Set  in your  to define what should be exposed when you  from your module:The only solution is for the package author to provide an explicit index of the package. The  statement uses the following convention: if a packageâ€™s  code defines a list named , it is taken to be the list of module names that should be imported when  is encountered. It is up to the package author to keep this list up-to-date when a new version of the package is released.For example:Alternatively, you can  since names starting with  won't be imported by default.


Answer URL
https://docs.python.org/3/tutorial/modules.html#importing-from-a-package
https://docs.python.org/3/reference/simple_stmts.html#import
https://docs.python.org/3/tutorial/modules.html#more-on-modules
