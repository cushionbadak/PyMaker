Natural Text
I am using Python 3.6 and the  backport package from ericvsmith.It seems that calling  is ~10x slower than calling :Is this expected behavior? In what cases should I have to use  instead of ? Edit: Using  does not make a big difference:
In most cases where you would have used  without , you should probably keep using , maybe with a  call.  does a lot of extra work that you may not actually want. Here's what it does.First, from the docs:Each dataclass is converted to a dict of its fields, as name: value pairs. dataclasses, dicts, lists, and tuples are recursed into. For example:So if you want recursive dataclass dictification, use . If you don't want it, then all the overhead that goes into providing it is wasted. Particularly, if you use , then changing the implementation of contained objects to use  will change the result of  on outer objects.Aside from that,  builds a new dict, while  simply accesses the object's attribute dict directly. The return value of  will not be affected by reassignment of the original object's fields. Also,  uses , so if you add attributes to a dataclass instance that don't correspond to declared fields,  won't include them.Finally, the docs don't mention it at all, but  will call  on everything that isn't a dataclass object, dict, list, or tuple:(Dataclass objects, dicts, lists, and tuples go through the recursive logic, which also builds a copy, just with recursive dictification applied.) is really expensive on its own, and the lack of any  handling means that  is likely to create multiple copies of shared objects in nontrivial object graphs. Watch out for that:


Answer URL
https://docs.python.org/3/library/dataclasses.html#dataclasses.asdict
