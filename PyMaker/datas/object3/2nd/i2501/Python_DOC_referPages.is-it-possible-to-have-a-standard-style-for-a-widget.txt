Natural Text
I want all of the buttons in my gui to have the same style. Right now I manually write in the attributes I want but it takes up so much space. Also, if I wanted to  change the style I would have to go to every single button. Is it possible to have a style i define once and then reference it when making all buttons? Something like the following:I know its possible to do something like this: but that still doesn't help me much. 
There are at least four ways I can think of to do this: using the option database, passing dictionaries of options, using ttk, and creating custom classes.Using the option databaseThere are several ways to accomplish what you want. The original support for this is based on the X11 windowing system option database. Every widget has a class, and every class can have it's options set.You do this through the  method of the root window (as well as ), specifying a pattern, and the default value.Example:Note: you must do this after creating the root window but before creating any widgets you want to be affected by this.How to use the option database can be a bit complex, though it does make it possible to compute entire themes if you're willing to take the time to do it. One of the best -- though oldest -- descriptions comes straight from one of the core developers of tcl/tk here: http://www.cs.man.ac.uk/~fellowsd/tcl/option-tutorial.html. This requires a little bit of mental gymnastics to translate the tcl/tk code to python/tkinter, but the python docs describe how to do that (see Mapping basic tk into tkinterUsing dictionaries.You can indeed pass in a dictionary of options, with a couple of small caveats. This dictionary must be the first argument after the parent, and it must be before any other keyword arguments.Example:I don't if this is documented anywhere, but you can see that it's supported by looking at the actual tkinter code.Using the ttk widgets"ttk" stands for "themed tk". The whole idea was to re-implement tk with the ability to apply themes. ttk has most of the same widgets as tkinter, plus a few that it doesn't have (for example, the treeview widget).Example:Unfortunately, there's almost no good documentation on how to configure the themes. It's a bit confusing and non-standard, but the results can be quite polished if you're willing to put in the effort.The best resource for learning how to create themes is in the Styles and Themes section of tkdocs.comCreating custom classesFinally, a fourth option is to create custom classes. Your classes can inherit from the built-in classes and force options to be set if not provided.Example:
Yes, it's even easier than you imagine. Just use dictionary unpacking: Another popular option is to make a subclass with the style you want, and perhaps other features such as tooltips or style dependant on values or anything else. 


Answer URL
https://docs.python.org/3/library/tkinter.html#mapping-basic-tk-into-tkinter
