Natural Text
I am working on a decorator library that is modifying keyword arguments of a function, and the library is doing what I want it to do, but it's very inconvenient that while debugging, whenever the user function is called, the debugger has to pass through the decorator library code.I implemented the decorator as a class (see https://github.com/mapa17/configfy/blob/master/configfy/decorator.py)and the user function is wrapped by the following library code:So is it possible to somehow skip this library code when debugging?
There's nothing magical with decorators. The  syntax is only syntactic sugar, so when you write:technically what really happens is:IOW, no, there is no way to "make a decorator transparent to the debugger", since a "decorator" is just a plain ordinary callable that (usually but not necessarily) returns another plain ordinary callable - in fact there's just no such thing as a "decorator", a callable is a decorator if you use it as such, and that's all. 
As @bruno-desthuilliers mentioned, the decorator is a wrapper around the user function, and there is no way to somehow remove it.What can be done is, to make the debugger skip the decorator module code, using the skip option seeAs i am interested in using pudb for debugging, i created a pull request, enabling a similar feature for pdb seefor pdbfor pudb (if the pull request is accepted)


Answer URL
https://docs.python.org/3/library/pdb.html#pdb.Pdb
