Natural Text
When use id() to get identity of global variable in different subprocess returns the same value, but when i modify the global variable in subprocess but not work in main process? If id() returns the actual memory address of variable, but why i can't modify the value in subprocess? (I am using Python3.6[CPython] in MacOS)RESULT:
You appear to have a fundamental misunderstanding. Within the same process, if  returns the same value for two different objects then that means they have the same object identity (and modifications to one will be visible to the other). is only unique within one process. If you have multiple processes in use, you can (and likely will!) have  return the same value for different objects, which may be of the same type, or may even have the same values (e.g. if you used  to create the subprocess), but do not have the same identity: changes to one will not be reflected in the other.More generally, this is true in all modern operating systems: each process has its own independent "view" of memory (called "virtual memory"), and can use any address it likes (subject to various OS-level restrictions, e.g.  or ). Every process in the system can have an object at address 4347140936, and they can all be different objects from each other. Many operating systems depend on this behavior -- for example, a shared library might always be loaded into memory at the same place, and functions that call into it might depend on that being the case.That said, if you are using various shared memory or object remoting mechanisms, you can have modifications to an object in one process reflected to an object in another process. But in that case, you actually have two objects, just two "interconnected" objects -- and that means that  will return different values, even though the objects are "the same" at a conceptual level.
If you try to assign a value to the same variable name, its memory address is changed. 


Answer URL
https://docs.python.org/3/library/functions.html#id
https://docs.python.org/3/reference/simple_stmts.html#assignment
