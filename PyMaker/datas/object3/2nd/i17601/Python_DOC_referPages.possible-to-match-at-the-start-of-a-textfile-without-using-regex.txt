Natural Text
Howdy: somewhat of a python/programming newbie. I am trying to find each time a certain word starts a new sentence and replace it, which in this case is good old "Bob", replaced with "John". I am using a dictionary and the  method to do the replacing - replacing the dictionary key with the associated value. Here is my code:You will see in the dictionary that I have 4 ways of finding "Bob" at the beginning of a sentence, but I am not sure how to find "Bob" at the very beginning of at text file, without using regex's . I would prefer to avoid using regex to keep this script more simple. Is this possible?EDIT: Contents of "start_words.txt" before running script:Content after running script:EDIT: Explanation for not wanting regex: I would prefer to stick with the dictionary because it is going to grow each week with new words and phrases added. In this instance it is just "Bob". the dictionary will probably grow into the hundreds. I am not hell bent on not using regex, but as a relative newbie, I was trying to find out if there was another way that I don't now about.EDIT: The 3rd comment below by @tripleee is a great suggestion and works for what I want to do. Thanks a bunch. Apologies, not my intention to cause some down votes for myself and within the answer. All help as been appreciated.
You can use regular expression (with the dictionary). This does not require iterating dictionary entries.Explanation about regular expressions used.: Match any character that is not ,  nor . Used to extract sentences.: Match any non-spaces character. used to extract the first word (possibly name):See  module documentation and Regular Expression HOWTO.
You have to adjust either data you are working with or the algorithm to account for this special case.For example you may decorate the beginning of your data with some value and add corresponding replacement to your dictionary.Also you may what to explore context manager protocol to create more elegant code for data decoration.Alternative approach is to change your search and replace algorithm to make it account for the special case.
Question to your question: why don't you want to use regex?Here's my attempt to do it without regex:As @falsetru noted:Possibly the ugliest way to resolve the  removing the  is to:I should stop appending my answer, otherwise I'll be just condoning the OP to use nonsensical solution to which regex resolves easily.


Answer URL
