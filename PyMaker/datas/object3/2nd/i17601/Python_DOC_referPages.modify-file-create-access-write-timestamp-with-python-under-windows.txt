Natural Text
I tried to find an easy way to modifiy a file timestamp under windows using python, but there was not much clear information on the web. After searching a while I got a solution. To shorten the search for others, the code follows here. It might be done easier and more beautiful, but it works. The only thing I didn't solve is the summer time - winter time issue, i.e. if a time in summer is given, the result differs by one hour. Maybe someone can add a correction?
Using , you can change the atime, mtime (no ctime).
There are two places where you might want to correct for winter/summer difference of one hour. In both cases, we make use of the  field, which  conveniently calculates to tell us whether Daylight Savings Time (DST) was in effect for a particular timestamp.Input CorrectionIf you are setting a winter timestamp during summer, or vice versa, it will become off by an hour when its matching season comes around unless you compensate before calling :Output CorrectionTo make Python reports match Windows Explorer, we apply the correction before calling :Both CorrectionsBeware, if you apply both, your Python output will again seem to mismatch your input. This may be desirable (see below), but if it bothers you:Choose only Input Correction if you prefer timestamps that look right at their native time of year.Choose only Output Correction if you're used to seeing them jump an hour twice a year as DST takes effect and then goes away.Why is DST so inconsistent?Python and Windows have chosen different methods to convert timestamps between UTC and the local time zone:Python uses the DST code that was in effect at the timestamp. This way, the time stamp has a consistent representation year-round.Windows uses the DST code in effect right now. This way, all time stamps shown have the same implicit code.This is evident if you use '%Z' to include the time zone in the converted string (PST vs. PDT, for example) but since most apps (including Windows Explorer) do not, an apparent one-hour inconsistency can manifest.ExampleWhen printed with explicit time codes, it becomes clear that the stamps in each column really do all represent the same instant in time:It would be nice if we could ask strftime to honor the tm_isdst field, to match Windows Explorer and most other apps that display file timestamps, but at least there's a simple workaround to do the calculation ourselves.Sources:http://bytes.com/topic/python/answers/655606-python-2-5-1-broken-os-stat-modulehttp://search.cpan.org/~shay/Win32-UTCFileTime-1.58/lib/Win32/UTCFileTime.pmIf the cpan link breaks again with a new revision, find it this way:https://www.google.com/search?q=UTCFileTime.pm


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp
