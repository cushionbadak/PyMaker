Natural Text
I wanted to make a self-replicating program that will make a new Python file, write code to it and run it. Here's how I want the code to be:
The  module gives you ways to run any program.Your script isn't a program, it's a script, which needs to be executed by an interpreter program. In this case, you probably want it executed by the exact same interpreter program that you're currently running, which is available as .When you run , it treats its first argument as the script to be run (which becomes  in that script), and any additional arguments as arguments to that script (which become ).Command-line arguments have to be strings, so you will have to serialize any arguments you want to pass to strings, then deserialize them on the other end. For an integer, this is trivial, but for more complex types it may not be.So, it will be something like this:Obviously if you don't want to capture its stdout, or want to capture its stderr as well, or want to treat non-zero retcodes as something other than an exception, or want to run it in the background instead of waiting for it, etc., the exact  function call will be different. But if you read those docs, there are nice examples of anything you might want to do.And then, the script you generate will do something like this:
Although comparatively less effecient and cleaner than subprocess, you can use os.system, this will replicate the shell for executing the tasks, :Or if its in another directory, you can navigate by,


Answer URL
