Natural Text
Suppose I want to read a sequence of inputs, where each input is a tuple is of the form . Additionally, there can be arbitrary amount of whitespace around the commas. An easy way to do this in C/C++ is to use  with format string . What is the equivalent function in python? Suppose we knew that each input is on a separate line, then you could easily parse this in python using  and . But the newline requirement complicates things. Furthermore, we could even have weird inputs such asWhere  is the first input and  is the second. And scanf would still be able to handle this. How does one do it in python? I also don't want to take the entire input at once and parse it, since I know that there will be other inputs that don't fit this format later on, and I don't want to do the parsing manually.
You should be able to first strip the whitespace, then split on commas, then handle the resulting strings and integers however you want. The regular expression  matches any nonzero amount of whitespace characters:You'd just have to put those last three lines inside a loop if you need to handle multiple s,i,s tuples in a row.EDIT: I realize now you want to interpret any whitespace as a comma. I'm not sure how wise that is, but a hacky way to do it is to replace all the commas with whitespace, split on whitespace, and call it a day
For delimited format it's pretty easy with the csv module.You can plugin any kind of file-like inputs to it.And you handle stripping white spaces and type casting downstream. Here's a sample to get you going:


Answer URL
https://docs.python.org/3/library/fileinput.html
