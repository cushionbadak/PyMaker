Natural Text
First of all a disclaimer:I don't want to use a code like this, I am aware it is a bad practice. As well I am not interested in tips on how to improve it, to make it right. What interests me is a theory.How come code like this works in python 3.6:I am reassigning the value of ls while iterating through it. Is the value of  in the first iteration stored in memory during the first execution of ?
Reassigning the variable you're looping over has no effect because the variable isn't re-evaluated for every iteration. In fact, the loop internally loops over an iterator, not over your  object.Basically if you have a loop like this:Python rewrites it to something like this:The crucial aspect of this is that the loop has its own reference to  stored in , so naturally reassigning  has no effect on the loop.All of this is explained in the compound statement documentation:The expression list is evaluated once; it should yield an iterable  object. An iterator is created for the result of the .  The suite is then executed once for each item provided by the  iterator, in the order returned by the iterator.


Answer URL
https://docs.python.org/3/library/stdtypes.html#iterator-types
https://docs.python.org/3/reference/compound_stmts.html#the-for-statement
