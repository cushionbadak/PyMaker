Natural Text
I know how to get a caller method name (from here: How to get the caller's method name in the called method?)What I'd like to get is the class name this method belongs to (assuming that it is in the class). So if:should return:What should I do in ?I tried (using info on ) do something like:but it doesn't workUPDATE:I cannot pass class name to a called function (otherwise that would be easy, but thanks to all who suggested this solution!)
You can get the calling frame object with  and get the object that  is bound to through its  attribute:The disadvantage of this is that it relies on the first parameter to be named "self". There are a few cases where we use different names, for example when writing a metaclass:And if you have a function with a  variable, it can produce unexpected results:We can solve both of these problems, but it takes a lot of work. We can inspect the name of the "self" parameter through the calling code object's  attribute. And in order to check whether the calling function is really a method defined in a class, we can loop through the 's MRO and try to find the method that called us. The end result is this monstrosity:This should handle pretty much everything you throw at it correctly:
You could use :Prints:


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.currentframe
