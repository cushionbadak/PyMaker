Natural Text
The loop starts with two variables, let's call them X and Y, both at 0. The user is prompted to enter a number to add to X, then a number to add to Y. The loop repeats itself, letting the user continue to add to both variables, until the user wants it to stop -- I guess they could enter 'add' as one of the inputs?I also need it to ask for the input again if the user inputs anything other than a digit, but only if it's also not 'add'. If it's 'add', the loop ends, and both totals are displayed. If the input is a float or int, the loop proceeds. Otherwise, it prompts the input again. And this is for each of the two inputs.I can do either of these things separately, but I'm having trouble incorporating both requirements into the same loop structure.So far, my code basically looks like this:My first issue is that the user is supposed to be entering digits, while the code is also checking for a string. How would I resolve that? My second issue is that I'm not sure how to reprompt each input if the input is not either a digit or 'add'.
Welcome to SO!You've generally got the right idea, here's how you might translate that into code.Note that in Python we can convert a string  into a float by calling the type  as . The same applies to  for integers. The documentation contains useful recipes and usage examples and is typically where I start when I'm unsure what I need.Since you mentioned that you're new to Python, I'll mention that more than other languages, strong idioms exist in Python. The Zen of Python is a sort of introduction to this idea. It's frequently useful to ask 'is this Pythonic?' when you first begin, as there are probably established ways to do whatever you're doing which will be clearer, less error-prone, and may run faster.This slide deck is a good look at some Pythonisms, it's tailored to Python 2.x so some syntax is different, but the ideas are just as relevant in 3.x.A more Pythonic, (though possibly less understandable way to new Python users) of fulfilling your original request is to use any unexpected value or escape character to quit the adding process.Now users of your program can type any non-float value to exit, or even use the key interrupts (ctrl + Z or ctrl + C for example). I ran it in PowerShell to give you some usage examples:With exit, a common idiom:Your original case, with add:With ctrl + Z:With ctrl + C:
You can apply an "endless" loop, and break it with a string input,e.g "add" or any other, or pressing Enter:
I know you asked to output the results after the loop but I decided to do it before Python breaks the loop. This is the code:Hope it helps :)


Answer URL
https://docs.python.org/3/
