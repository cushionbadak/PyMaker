Natural Text
I'm sorry if a similar problem has been asked, I could not find it.I need to check whether  contains all the characters from  including the non-unique ones.Example 1:Example 2 (returns  because now  has enough s):I tried  method but it only works if the characters of the strings are unique. So I have this:I want it to be  because  has three s and  only two.
What you're doing is interpreting the strings as multisets and checking if one is a subset of the other. Python's multiset representation is :Unfortunately,  doesn't implement a  method, so we have to write our own. Here are two ways to do it:
Using Counter as a solution seems best to me. First count all characters in string_a, then go through string_b char by char and substract from the counter or fail if counter=0. This allows us to get a solution in O(n), reading each string once.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
