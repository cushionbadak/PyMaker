Natural Text
I am a new learner with python and right now my code stimulates rolling one dice 1,000 times, however I just need some improvement to make it stimulate rolling two dice 1,000 times.Here is what I have so far which is working perfectly just need some improvement:Any suggestions on how to get two dice rolling and get the similar output as what my code is doing right now which is this:
In that case the outcome are numbers between  and . For simplicity it is better however to probably maintain the first index.The  list thus needs to be increased to store  items, and as  we should call  twice (not times two), and add these together:It is also more elegant to write  here, instead of , since here we avoid writing  twice. Furthermore in Python one typically enumerates over the collection directly, not over the indices. One can use  to generate an iterable of 2-tuples  with  the index, and  the element of the collection that is related to that index.
This is a solution for two indistinguishable dice, meaning that throwing a 1 and a 3 is treated identical to a 3 and a 1. In this approach we use a  instead of a , because for two (or more!) indistinguishable dice the list would have "holes" (combinations like 3, 1 that can never occur because we treat them like 1, 3). is now both dice, sorted so that 3, 1 is treated as 1, 3, and converted from a list into a tuple (basically an immutable list) so we can use it as key for a dictionary (). Then we just increase the count for that particular combination of dice.Unlike the list, the dictionary is not sorted, but we do want a nice output sorted by what the dice showed, so we sort by the keys = dice:This gives you:
You could use , and this solution allows you to specify any number of dice:Yields:
If you are allowed to use other python modules then  you can leverage collections.Counter to do your counting. By switching from  to random.choices you can throw both dices at once:Output:Doku:collections.Counterits a dictionary - you feed it an iterable and int counts how often each element of the iterable occurs:random.choicesliteral string interpolation (f-strings)generatorsIf instead you wanted the single dice results, you can modify the code to not sum dices but instead deliver the tuples when generating the random numbers. I sorted them, so that (5,4,5) is the same throw as (4,5,5):Output (shortened):


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/random.html#random.choices
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/random.html#random.choices
https://docs.python.org/3/glossary.html#term-generator
