Natural Text
Is it possible to somehow override or overload the standard implementation of ints/numbers in python so that it acts like a 32-bit int.Or is it possible to somehow define a variable that can't change type? Doing something like: ?I want to do this because it's annoying to write  on every bit operation and assignment. Especially since Python does not use 32 bits bitwise operands.I know I'm basically trying to change the nature of the language. So maybe I'm asking what you would do if you had to do 32-bit stuff in python.
Some options:Use Cython. You can declare a native 32-bit int type there, and you even get the advantage that pure numerical code gets compiled to (very) fast C code.Use a  array of a single element: . Provided you only ever use in-place operations (, , etc.), this will work like a 32-bit int type. Do be aware that if you ever use a regular binary operator (e.g. ), you might be subjected to type promotion or conversion, and the result will no longer be .Use . This comes built-in to Python, but supports no mathematical operations so you have to wrap and unwrap yourself (e.g. ).Use a library like  (shameless plug), which provides fixed-integer classes that remain fixed size through operations rather than decaying to .  was specifically designed with fixed-width bitwise math in mind. In this case you would use .Some less desirable options:: Throws errors if your input is out of range. You can work around this with , but that's really unwieldy.: Throws errors if you try to store a value out of range. Harder to work around than .Manual bitmashing. With an unsigned 32-bit int, this is just a matter of adding  a lot, which is not too bad. But, Python doesn't have any built-in way to wrap a value to a signed 32-bit int, so you'll have to write your own  conversion function and wrap all your operations with it:Demonstrations of your options:CythonSave as  and compile with .NumPyctypesfixedint


Answer URL
https://docs.python.org/3/library/array.html#module-array
https://docs.python.org/3/library/struct.html#module-struct
