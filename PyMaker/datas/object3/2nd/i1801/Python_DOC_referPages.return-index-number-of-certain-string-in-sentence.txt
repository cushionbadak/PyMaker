Natural Text
I'm looking for a method to find a certain string in a sentence and return the index number of the first letter of that string. While that seemed easy ofcourse, I stumbled upon a problem I can't seem to find the solution. The difficulty in the task is trying to find the index number of the original sentence. So the task is to find the string in the sentence, for the first example this is no problem as the country starts before the first whitespace, however for the second this is not the case.So I first wrote this simple code:which correctly returns 4 for the first, but 29 for the second (while I need 34), as it does not count the number of non-alpa characters. looking for the original sentence obv gives me a -1 because of the whitespaces in between. I thought about trying to count the number of non-alpha characters in between, but couldn't quite figure out how to do that.Then I tried some overcomplicated loopings, which seemed to work fine, but I'm sure there must be a more pythonic solution to this, then this complicated construction.Basically, this is a for loop, which creates a list when the letter in the sentence equals the first letter in search, and then looks for the second letter in search and so forth until there is a complete match and the length of the list is equal to the length of the search aka there is a complete match. if there's not a full match, i reset the counter to 0 and clear the list again.Although this works, I'm looking for an easier solution, for example a way to tell the find function to look in the original sentence, but when it reaches a non-alpha characters, it ignores it or keeps searching until a alpa character screws it up.Apologies for any possible mistakes with the indenting, first time i'm pasting code here. 
You can use the following regular expression for searching. These regex can be created by using a for loop.Check it out on the following link: https://regexr.com/42eq1I dont think there would be a better option :|[\ ]* -- This searches for 0 or more spaces.
Thanks for the responses guys. I believe you meant something like this?I'm still trying to learn the reg expressions. If i'm not mistaken, if I want to also ignore comma's for example, I should modify the [\ ]* with my own expression right. edit: is there a possibility to also format your code if you just comment? Didn't find it immediately, so had to answer my own question instead
This is easily solved with the regex library.Read the regex pattern operators section and flags section of the  regex library docs.Once you have this, do . Save the  output to a variable - if it matched you will get a match object.With the matched object you will be able to find the start and end by  asking for  or  on the variable you  saved the match object as.EDIT: I have realised that much of what I have said is wrong, and solving with regex in the normal way is not quite so easy if the word boundary/ies are unknown. @user2849789's answer is better, and does support regex, but in case anybody was looking for another solution which doesn't require regex:


Answer URL
https://docs.python.org/3/library/re.html
