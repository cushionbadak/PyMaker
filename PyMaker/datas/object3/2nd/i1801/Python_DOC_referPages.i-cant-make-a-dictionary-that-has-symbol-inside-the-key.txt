Natural Text
I wanted to make a dictionary that looks like this:Because there is '#' symbol, the rest greys out.I know I can fix this problem by doing this:I was wondering if there was something that could fix my problem such as: 
Like in other programming language Python has some ways of reusing the same code in different position of the program. One of them is function concept (called procedure in same languages) that we can classify by type of arguments/parameters in:Positional Function ParametersIn this category a value for the parameter is assigned by position. So if we have the following function definitionand we call it like this  the parameter bridge2 will take for value 1001 meters because it was in the second position.Named/Keyword Python Functional ParametersIn this case we are explicitly telling to python which variable we want to assign a value and not let's implicitly determine by position.So now for the previous function we can do . This way of using named parameters is useful in different situations, especially for default values of parameters when not indicated.The important part of keyword parameters is the fact the the keyword need to be a valid variable identifier in Python to be used like so, otherwise python will think it's something else, like a number and so one. In your case you try using # that have the specializing of line comment and can't be combined to create an identifier.So I can say that there is no way of using the hashtag unless you modify Python syntax so it's a valid character for variable's name. However there are some ways to create "C#" key:Use the string directly like key in the dictionary Create an iterable object and pass it when calling dict()The simplest way to make an iterable for this is to use the function zip() that take two lists and combine them one element of the first list with the one in the same position of the second list.
Passing keywords to the  built-in function is problematic here, because the  in your key is being misinterpreted as the beginning of a comment.Instead, use the literal syntax:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict
