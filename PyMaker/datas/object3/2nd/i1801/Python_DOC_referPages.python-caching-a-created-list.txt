Natural Text
I have to write a function which gets three arguments. lower, higher an cache.Lower and higher gives a range where a new list is created with. This part is this code: If "range" is called twice with the same arguments, both times the same list should be returned. The second time the list is not generated again, but reused.How can i do that?Edited the orinal function
Assuming that  is a dictionary, you can make a  from the other parameters and see whether that tuple is in the dict. If it is, return the value from the dict, otherwise calculate the value and store it in the dict before returning it. You might also provide a default value for  so the function can also be used without it.Example:That's a lot of boiler plate code, though, cluttering the function. In practice, this can be done much easier with a function decorator. If you can not use , you can implement your own memoization decorator in just a few lines of code:Then use it on your function, without the no longer needed  parameter:
Assuming that your arguments are hashable, you can do this with  (Python 3.2+):Smaller points:A dictionary is used to cache results, hence why both positional and keyword arguments must be hashable.Try to avoid naming objects with names that shadow (mask) existing built-in names, such as  and .Use  to clear the cache.Example:


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
