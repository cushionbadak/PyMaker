Natural Text
I have a list  with numbers from , and a function that uses this list to create a new list with random values from 1-10. I want to call this function 100 times and count the number of times the same value occurs on the same position in the nested list. I've created the function  to achieve this. My code returns the correct answer, but I'm thinking there has to be a simpler way to write it: from collections import Counter    import randomThis prints a result that looks like this, which is kind of the thing I want, except that I'm going to sort it. However, it seems unnecessary to write pretty much the same thing 10 times in a row, but list slicing won't work with counter. Does anyone have any suggestions as to how I can simplify this code? 
You could transpose your created list to columns using  zip() and count those.Small example for what zip() does:Output:Your code using zip() and a generator:Output:Remarks:Our random numbers will not match even if you use the same . Using n times  changes the internal random Mersenne_Twister-state different from using  - if you switched to  you will get identical outputs: Output now:


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#zip
