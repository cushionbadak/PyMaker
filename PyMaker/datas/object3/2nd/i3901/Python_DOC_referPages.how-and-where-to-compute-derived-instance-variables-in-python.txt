Natural Text
I have a class with a str instance variable. From this instance variable, I calculate a second instance variable, which is basically just the string broken up into certain 'atoms'. The second instance variable is completely determined by the first. I've made it an instance variable because I think that it is best regarded as a 'property' of the class. I'm a bit unsure about how to treat derived instance variables. In particular:1) I think that they should be get-only properties. However, since the computation of the derived instance variable is quite intensive, I want it to be done when the class is initiated, not when the variable is called.2) If I make a function purely for calculating the instance variable, is there a way to mark this? 3) Also, should I pass the first instance variable as a parameter, or just read it in the method from self? (in general I'm still a bit unsure of when to pass instance variables as parameters to methods.)4) Is there a better way to do this that I haven't mentioned?ThanksEDIT: Here's a simplified example of what I mean:
You forgot  in a couple of places. But here's how to make  and  get-only properties. We use a couple of "private" attributes that are created during , and use @property to create the actual getters.outputIf you like, you could also mark  as private, but there's probably no need. And nothing stops an insistent user from accessing such things anyway, as the linked docs explain.As for your 3rd question, methods should normally access the attributes they need via . In some cases you can use the same method on different attributes, and then it makes sense to pass the attribute as a parameter, but if that's not the case it just looks weird. ;)


Answer URL
https://docs.python.org/3/tutorial/classes.html#tut-private
https://docs.python.org/3/library/functions.html#property
