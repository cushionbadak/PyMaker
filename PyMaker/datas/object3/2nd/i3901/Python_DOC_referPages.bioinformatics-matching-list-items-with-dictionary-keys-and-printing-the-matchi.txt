Natural Text
Homework assistanceI need to write a function which has the ability to take in a string containing DNA codons from a user e.g.separate the string into groups of 3, then match each group with the dictionary items. but the program must only print out the keys, not the values.input: separation:output: This is what I have so far
You can achieve the goal easier with list comprehensions and a generator to split input string by to chunks.Try something like this:Output:If you want to see separated list, type :updateIf you don't want to use generator, replace it with this ordinary function:
The main issue with your code is that  won't work. The strings just get concatinated together (). You need to turn those strings into lists: . You can then use nested loops to iterate over the dictionary and the lists:Finally, the print statement at the end will always print  because your function doesn't return anything to print. Ideally your function should return the desired output rather than printing it as a side effect:Of course, you're not getting much benefit from using a dictionary if you have to loop over all the values for every codon. It would be a lot more efficient to make the codons the keys and the amino acids the values. That way you could just use:
First, you have to change you  to have values as a list or a tuple. Currently, the strings of triples will just get concatenated into a single string.Now you can use @heathobrien's nested loops, however those are quite inefficient. I think you should change the dictionary, so that it maps from codon to amino acid. You can do it with:This produces a dictionary .After that, the rest is pretty straight forward. You just need to split the sequence and find appropriate mapping. Reusing your code:The comma after the first  makes sure that the next character gets printed out on the same line. The empty  will end the line. However, I'd suggest you aggregate the output into a variable and print it all at once.Alternatively:
Here's a way to do it using the  recipe for a generator function named .


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
