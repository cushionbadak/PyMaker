Natural Text
I working with  and . I have made code that iterate procedure over an hour. But sometimes, it takes less than hour to finish work. I want to quit  the iteration before  get to . Because I have to save  file, I can't just shut the program down.If it was video streaming, I would use this:But I have encountered errors while modifying this to my code. Is there nice way to do this?
There are lots of possible approaches, some are cleaner and some are dirtier :-)In no particular order, here are some. I will probably add code for them as I find spare time to explain them properly.Method 1 - Use a sentinel fileAn easy (and "hacky") way to do this is to check inside the loop for the existence of a file called . Then in the shell/Terminal, just do:and the program will exit. If you happen to use , you can just type:Remember to delete the file called  at the beginning and end of your program.I am no Python programmer but this works:Method 2 - Use a second threadAnother way to do it is to start a second thread that does a blocking read from the terminal, and when the user enters something, it sets a flag which the main thread checks on each iteration through its loop the same as it checks .This demonstrates:This may not work best with OpenCV because the  function somehow uses spare time (given as the milliseconds parameter) in the  function to update the screen. You will see this if you call  without any following  - nothing will appear on the screen.So, if you are using  you must use  and that will interfere with reading the keyboard in the second thread. If that's the case, use one of the other methods.Method 3 - Write results incrementallyA third way to do it is to open your results file for append inside the loop and add each new result as it comes available rather than waiting till the end.I don't know enough about your algorithm to know if this is a possibility for you. I'm still no Python programmer, but this works:Method 4 - Use a signalA fourth way to do it is to set up a signal handler and when it receives the signal it sets a flag which the main loop checks on every iteration. Then in the terminal you use:See documentation on signals.Here is some working code:Sample OutputDiscussionYMMV, but my feeling is that Method 3 is the cleanest, and that Method 1 is the biggest hack. Method 2 is probably closest to what you asked for and I did Method 4 (and all the others, in fact) so I could learn something.If any real Python programmers have any comments, I'd be happy to learn.


Answer URL
