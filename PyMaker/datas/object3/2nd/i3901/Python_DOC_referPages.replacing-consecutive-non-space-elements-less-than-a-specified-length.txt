Natural Text
I have a python string with the blank spaces in between. I need the output to have the non zero islands below a certain length to be replaced by blank spaces.Say for example I need to replace strings smaller than 4 characters long, then my output should look like:with the position of other characters being the same.
Use a regular expression, using the  module:The  is your maximum number of consecutive characters.Breaking this down: will find matches in  using , then uses the  pattern or function to produce replacements, and a new string is returned.The pattern  uses. word boundaries; these match between word and non-word characters or at the start or end; here between a space and a letter. By putting these at either end of  means we only want matches that have spaces or the start or end of the string on each side. matches 'word' characters, which are letters and digits and underscores. states a pattern must be repeated between n and m times; you can leave one or the other out for none or as many as you like.  means between 1 and 3 times a character that matches .The replacement is a function, that is passed a match object for each matching substring. Here, it returns a number of spaces matching the input string length.See the Regular Expression HOWTO for more info.If you want to keep the length variable, use formatting to add the number into the pattern:Demo:
Here is another variation using ,
Here's an anti-regex solution using .This works if, as in your example, your groups consist of identical characters. If this is not guaranteed, you should use a regex method.


Answer URL
https://docs.python.org/3/library/re.html
https://docs.python.org/3/library/re.html#re.sub
https://docs.python.org/3/library/re.html#match-objects
https://docs.python.org/3/howto/regex.html#regex-howto
