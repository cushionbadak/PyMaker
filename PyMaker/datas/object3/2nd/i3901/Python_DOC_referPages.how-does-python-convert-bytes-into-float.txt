Natural Text
I have the following code snippet:Which prints  with no error (on Linux with utf-8 encoding). I'm very surprised that it doesn't give an error since Python is not supposed to know what encoding is used for the bytes object.Any insight?
When passed a  object,  treats the contents of the object as ASCII bytes. That's sufficient here, as the conversion from string to float only accepts ASCII digits and letters, plus  and  anyway (the only non-ASCII codepoints that would be permitted are whitespace codepoints), and this is analogous to the way  treats  input.Under the hood, the implementation does this:because the input is not a string,  is called on the object (for  objects the code jumps straight to ). checks for a  method, but if that's not available, it calls  accepts not only  objects, but any object implementing the buffer protocol. The  name is a Python 2 holdover, the Python 3  type is called  in the C implementation. objects implement the buffer protocol, and the  macro is used to access the internal C buffer holding the bytes.A combination of two internal functions named  and  is then used to parse ASCII bytes into a floating point value.For actual  strings, the CPython implementation actually converts any non-ASCII string into a sequence of ASCII bytes by only looking at ASCII codepoints in the input value, and converting any non-ASCII whitespace character to ascii 0x20 spaces, to then use the same  /  combo.I see this as a bug in the documentation and have filed issue with the Python project to have it updated.


Answer URL
https://docs.python.org/3/c-api/number.html#c.PyNumber_Float
https://docs.python.org/3/c-api/float.html#c.PyFloat_FromString
https://docs.python.org/3/c-api/buffer.html#bufferobjects
https://docs.python.org/3/c-api/bytes.html#c.PyBytes_AS_STRING
https://docs.python.org/3/howto/unicode.html#encodings
https://docs.python.org/3/library/functions.html#float
