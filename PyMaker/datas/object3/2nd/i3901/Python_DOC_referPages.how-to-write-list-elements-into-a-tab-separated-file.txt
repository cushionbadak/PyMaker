Natural Text
I have searched the web but I haven't found the answer for my problem:I have a a dictionary with lists as elements and every list has a different length. For example like that:My main problem is, that I want to write the list elements in to a file which should be tab-separated and if the list is finished it should write the new list in a new line.I found a solution like that:But it doesn't only separate the words with tabs but also the characters.
I think you're doing a list comprehension over the list inside of the dictionary. An alternative solution would be \I'm just looping over the values of the dictionaries, which are lists in this case and joining them using a tab and writing a newline at the end of each list. I haven't tested it but theoretically I think it should work. 
If  is one of your dictionary values, then you are applying  to the individual words. You'd want to join the whole list:or, if you were to loop over the values of the dictionary:The above uses the  method correctly; passing in an iterable of strings to write. If you were to pass in a single string, then you are only causing Python extra work as it loops over all the individual characters of that string to write those separately, after which the underlying buffer has to assemble those back into bigger strings again.However, there is no need to re-invent the character-separated-values writing wheel here. Use the  module, setting the delimiter to :The above writes all lists in the  dictionary to a file. The  object doesn't mind if your lists are of differing lengths.
You need to turn each  value in the dictionary into a string of tab-separated values that also have a  newline character at the end of each one of them:
Instead of jumping on an answering your question I'm going to give you a hint on how to tackle your actual problem.There is another way to store data like that (dictionaries of non-tabular form) and it is by saving it in the JSON-string format.And then the code to load it would be:


Answer URL
https://docs.python.org/3/library/io.html#io.IOBase.writelines
https://docs.python.org/3/library/csv.html
