Natural Text
I have a dictionary that looks like this:I want to remove the '%' and replace it with a whitespace instead. I've tried iterating over the list like so:But it didn't work. I've also experimented with other loops, but nothing seems to work for me.I would like to end up with a dictionary that looks like this:
Use a dictionary comprehension to build a new dictionary, so you can replace the keys in one go:The comprehension consists of:an expression to generate a key, the part before the an expression to generate a value, the part after  but before the a  loop; you'll get as many  pairs as the  loop iterates (unless you add more  loops or  filters).Your own solution didn't work, because  creates a new string object and returns that. The old string is never changed, because strings are immutable; they can't be altered in-place. If you wanted to do the work in a loop, you'd have to:store the result of the  operation.remove the old key (storing the value that it referenced temporarily)add the new key to the dictionary, making it point to the value for the old key.However, looping over a dictionary while mutating it (deleting and adding keys is mutating), is not safe and thus not supported. You'd have to loop over a copy of the keys; create one with :Re-generating the dictionary with a dictionary comprehension is just easier, at this point.Note that in both approaches, you can end up with fewer keys if replacing  with  leads to collisions! Which value remains after processing depends on which now-duplicate key was processed last.
You can't change dictionary keys in place. You have to create a new dictionary, at least temporarily.This:  doesn't do what you think it does. It doesn't change , it returns a new value.I had to fix your data, like this:Then:
The code below will store the replaced key in a variable and you can add it to the dictionary, while removing the old key and value from the dictionary. The following code should give you the output that you are looking for: And here is your output:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
