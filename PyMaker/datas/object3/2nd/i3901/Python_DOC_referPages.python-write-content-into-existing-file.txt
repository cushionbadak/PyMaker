Natural Text
So my aim is to delete all the \n from the end of every file in a directory, then append the file. Struggling to do the appending part of it.So this does practically what I want, however its adds everything underneath the content, rather than replacing it. Could I get help for this please :)?
An easier way is to memory map the file using . This allows you to manipulate the file as both a  or a file. Changes made to map are reflected in the underlying file.You can use a regular expression to determine the beginning of a trailing run of new line or carriage returns, and then overwrite the file directly.You might actually want to replace the whitespace at the end of the file, e.g. a line might contain spaces. If so change the regex pattern to .The above code should run on Unix. You might need to tinker with the call to  if you are using a different platform.For larger files, i.e. those that are larger than the page size used by , you might be able to make this more efficient by scanning from the end of the map for new lineish characters to determine the position in the file from which to overwrite.
Look for os.walk() and 'r+' mode .
As people have pointed out you need to first open the file and read the data. Then open the file in write mode and write it back.The following code should do the trick and is reading the whole file and thereby remove some complexity of loops as well


Answer URL
https://docs.python.org/3/library/mmap.html#module-mmap
