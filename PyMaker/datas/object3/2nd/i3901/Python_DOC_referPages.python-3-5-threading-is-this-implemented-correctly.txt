Natural Text
I am trying to investigate threading by looking for primes in lists of random values.  I expected to find that using threading made this faster but the times for threaded and un-threaded are the same. Is this because I have implemented this incorrectly?  How can I demonstrate the benefits of threading using an example like this?
Threads in Python are only useful for IO-bound operations due to the Global Interpreter Lock (GIL) which essentially forces Python operations to occur in lockstep, never actually concurrently.(However, threads that do IO, e.g. talk to a remote server or access files, can and usually are faster than no threads.)See How to use threading in Python? for solutions such as using the  module instead.
Threads aren't run concurrently... The concept of threading is that a particular thread is able to share cpu clock cycle with a number of other threads which can appear to mimic concurrent behaviour but they don't run parallel


Answer URL
https://docs.python.org/3/library/multiprocessing.html
