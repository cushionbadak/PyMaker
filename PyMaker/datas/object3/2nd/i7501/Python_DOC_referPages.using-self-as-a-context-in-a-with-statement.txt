Natural Text
I often see code that uses  to manage a context. For exampleWhat's going on here? What does using  as a context allow?
Code that uses  suggests that whatever class you're using provides  and  methods.  These methods create context.  They can be convenient for setup / teardown in testing, etc.
What's going on here? What does using self as a context allow?As long as the class has implemented the necessary "hooks" that a context manager should, Python allows it to be used like a normal context manager. Here is an excerpt from the docs which helps clear things up here:Pythonâ€™s with statement supports the concept of a runtime context defined by a context manager. This is implemented using a pair of methods that allow user-defined classes to define a runtime context that is entered before the statement body is executed and exited when the statement ends:  Enter the runtime context and return either this object or another object related to the runtime context. The value returned by this method is bound to the identifier in the as clause of with statements using this context manager.  [...]  Exit the runtime context and return a Boolean flag indicating if any exception that occurred should be suppressed. If an exception occurred while executing the body of the with statement, the arguments contain the exception type, value and traceback information. Otherwise, all three arguments are None.  [...]As stated above, when you implement the necessary  and  magic methods for your class, Python allows you to treat it as a context manager.
If  is a context manager (i.e. has  and  methods) this will simply invoke that functionality, the same as it would if the instance were used in a  block outside the class.
There's nothing special happening here.  behaves the same way in a  block that anything else would. It calls  when you enter the scope and  when you leave the scope through any means. I can't imagine what using  here would accomplish, but if you can come up with some examples of where you've seen that, we might be able to provide a better answer.


Answer URL
https://docs.python.org/3/library/stdtypes.html#context-manager-types
https://docs.python.org/3/reference/compound_stmts.html#with
