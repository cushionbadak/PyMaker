Natural Text
I have bunch of lists containing strings, I wanna remove some string dates such as  '2017-09-11', '2017-09-17', '2015-09-11' from these dictionaries. How can I do it?
Using list comprehension, you will get a new list without date string:To replace the , assign back the list comprehension:or using slice (to replace items in-place):
To remove from list, you can use the remove statement like so:This will delete the first occurrence of that element ('b'). To delete all elements, you can use list comprehension.This assumes the only strings of length 10 are the date strings.Hope it helps!EDITI answered a little late, and everyone had better answers, but I also stumbled accross this function on another SO question that might be useful:Then you have a function you can run with to make sure that the strings you are excluding are only dates (in any format)EX:
Iterating the list (as others pointed out) is not the best option while calling . So you can do the following:Iterate a copy using list(original_list):Make a filtered list through list comprehension:There could be a more pythonic way of doing this (maybe with ?)Really need some more information to provide a solution honestly:Are they all the same format?Are they all strings?Whats the scope of the problem?
The question is not completely specified, but I think it might suffice to explain how to manipulate a dictionary like a list, even though you specified a list in your question.Once you have the newkeys list, you can truncate elements from it any way you'd like. 

You can try regular expressions approach also:You can add more patterns of date if you want with this approach.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
