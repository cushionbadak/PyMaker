Natural Text
I'm just beginning to get my feet wet with lambda functions and this one is really making me crazy. I know that my difficulty here depends solely on my weak comprehension of lambda functions in general, so please, every input is well accepted.Given a string with space separated numbers (e.g. "128 555 3217 256") the function returns a new string, sorted by the sum of all digits in every number, and, in case of two equal values (like 3215 and 256, both have 13), the order is given alphabetically. What I really don't get is that apparently lambda is working here solely with variables created only for the function, x and c... So, where it gets the string??I know I'm just very confused...
Consider the following:This example is very basic (and for the sake of the example, needlessly uses  and a lambda). passes each element in  to the function it gets for the  argument and expects to get back a value that will tell it how to sort the list (basically, the  function tells  how the elements compare to each other).In the above example the  function receives an element, refers to it as a local variable  and simply returns it as it is.In your example, it sums the digits (in your example  is a group of digits).
The lambda is being passed to  as the argument . Check out the documentation for the  function. key specifies a function of one argument that is used to extract a comparison key from each list element: key=str.lower. The default value is None (compare the elements directly).In simple terms, , is a function that is effectively used as the comparator for the sort.  sorts the list based on it's output, instead of figuring out the order the elements should be in on its own.The lambda you pass to  takes  as it's only argument.  then passes each element of the list it is sorting to that lambda, so any reference to  in the lambda corresponds to the element.In your case, the element that is being passed to the lambda is a string, representing the number who's digits you want to get the sum of. The lambda then iterates through them, converts them to integers, and returns their sum.Once that is done,  uses those sums to sort the strings in ascending order.
The signature for  is .key specifies a function of one argument that is used to extract a comparison key from each list element: key=str.lower. The default value is None (compare the elements directly).So, for the default value of ,  will just sort by comparing the values directly. (i.e.  is sorted by comparing , etc.) Now if you specify a function  for , that accepts one parameter and returns a value,  will instead use the value returned by  in the comparison (i.e.  is sorted by comparing  etc.)In your case: creates a  by splitting the string, and sorts it with , so it will pass each space separated substring  to the lambda in , which will return the comparison value by summing its digits .Note that this doesn't need a lambda function, it just needs a function with the right signature - that is, takes one parameter and returns one that can be compared. So we could define:and pass  instead.
lambda works as a equation and use to reduce the number of line of code in the program. Here     int(c) for c in x x is the total string and c is string contains value seperated by space as you use split(' ').


Answer URL
https://docs.python.org/3/library/functions.html#sorted
