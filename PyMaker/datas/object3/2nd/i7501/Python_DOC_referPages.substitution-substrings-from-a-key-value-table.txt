Natural Text
Given a multi-char to single char string translation table:And the input string:The desired function would be something like:I've tried:But we see that there is a key for 'aa' which causes the replacement to take place first before 'aaf'. Ideally, the longer keys should be replaced first. How should the replacement be such that it's possible to substitute substrings from a key-value table starting from the longest key onwards?Is there some sort of regex methods instead of iterating through all key-value pairs in the mapping?
Here is a possible regex solution:This sorts the dictionary keys by length, then creates a regex pattern of the form , and finally substitutes all occurrences of this pattern with the corresponding dict value.
Sort  keys by length descending:


Answer URL
https://docs.python.org/3/library/re.html#re.match.group
