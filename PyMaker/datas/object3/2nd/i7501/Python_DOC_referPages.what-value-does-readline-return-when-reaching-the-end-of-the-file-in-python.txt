Natural Text
One can use the classic loopto read through a file line-by-line in Python.But what value does 'line' have when the loop exits?  The Python 3 docs only read:readline(size=-1)Read and return one line from the stream. If size is specified, at  most size bytes will be read.The line terminator is always b'\n' for binary files; for text files,  the newline argument to open() can be used to select the line  terminator(s) recognized.Edit:In my version of Python (3.6.1), if you open a file in binary mode,  giveswhich is exactly the same as the docs quoted above. But, as noted by Steve Barnes, if you open the file in text mode, you get a useful comment. (Oops! Copy-paste error on my part)
From the tutorial: https://docs.python.org/3.6/tutorial/inputoutput.html#methods-of-file-objects reads a single line from the file; a newline character  () is left at the end of the string, and is only omitted on the  last line of the file if the file doesnâ€™t end in a newline. This makes  the return value unambiguous; if  returns an empty  string, the end of the file has been reached, while a blank line is  represented by , a string containing only a single newline.
In a python console opening a file, f, and then calling help on its readline method tells you exactly:Each readline operates on the remainder of the file from the current point onward so will eventually hit an EOF.Note that if you open the file in binary mode, with  rather than , then rather than a  object you will get a  object - then the help message is different:And when this method reaches the EOF it will return an empty byte array,  rather than an empty string.Note that all the above was tested with python 3.6 on Win10.
Running the code snippet from the question in a (Python 3) console shows that it returns an empty string, or an empty Bytes object if opening the file in binary mode.Is this documented somewhere? Perhaps it is sort of a broad python standard?


Answer URL
https://docs.python.org/3/library/io.html#io.IOBase.readline
