Natural Text
Sorry for the noob question - just trying to understand the flow of how python works.Does anyone know what the difference between env/bin/python and env/lib/python3.6 is? It will be really helpful to know. (Note the different paths - bin and lib)Thanks :)EDIT: I only have one version of python installed in the environment. The one thing to notice here is that env/bin/python has a symbolic link to env/bin/python3.6 (which is a binary file, obviously). But there is a directory in env/lib/python3.6 in which there are directories like site-packages where the installed packages are stored. So my questions is... when is the binary file in /env/bin used and when is the directory accessed? When I say 'python' in the shell, it goes to the bin but when I say 'import django' in the interpreter, it goes to python3.6 in lib and gets the package. Am i on the right track?
/bin/python is the binary, the program that interprets python code; lib/pythonX.Y is the library that the program uses. The library is a collection of modules and packages written in C/C++ and Python.lib/pythonX.Y/site-packages is a directory for 3rd-party modules; distutils/setuptools/pip install packages there.Everything else in lib/pythonX.Y outside of site-packages is the standard library â€” modules that are always installed with python. The pages at https://docs.python.org/3/ document the standard library but not 3rd-party modules.
X and Y represents the version of python you are using.
Your machine can store multiple versions of python simultaneously, and which one is used depends on the PATH of your current terminal, or if you have a virtual environment set up and activated. You can tell which python interpreter is being used by typing the command If you have both python 2.7 and python 3 installed, you might also be able to choose one by using the full name in terminalYou can find some additional resources in the official Python wiki that might help you learn about which version to use and why.


Answer URL
https://docs.python.org/3/
