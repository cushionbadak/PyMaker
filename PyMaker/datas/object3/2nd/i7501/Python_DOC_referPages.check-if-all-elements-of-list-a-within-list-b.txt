Natural Text
I have done my research, however all these techniques return true, i need them to return false.The lists I'm comparing have duplicate numbers
You can use  inside of the  function:For every element in , this will check if there is at least as many ocurences in .If any element of  appears fewer times in , then the  function will return .The conversion of  into a  prevents the number of iterations from increasing when  consists in a large number of the same value.Test:
I'm still uncertain what you're really asking. Let's go with:And the question being if you can make A by choosing without replacement out of B. That is, not only should the items in A be a subset of those in B, there must be at least as many of each in B as there are in A. One way to test this is using collections.Counter:Output: Since collections are true if they contain anything, we can negate it for the  value you asked for. This difference can also be used to show exactly which items A had that couldn't be taken out of B, in this case 1 count of the item 2. 
How about this:Or according to what @ChrisRand said in the comments:
Just look for an implementation of a multiset. It should pass (most of) your test cases. 
Mathematically answers by python functions are correct. It seems you also want to check the the number of elements. So, a user defined function will look likeHope this function works as you want


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.Counter.subtract
