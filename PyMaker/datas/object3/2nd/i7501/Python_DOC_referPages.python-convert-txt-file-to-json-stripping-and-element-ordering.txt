Natural Text
I have a txt file that contains data split by spaces such as: and I would like to convert it into JSON data to something like:where I have to append a 'dataset':'lightning' key/val pair, combine and strip the date and time, and combine the lat/lng into a dict before doing any json conversion.But right now I still get the date and time elements without being stripped of the "-" and ":" characters like:What I coded so far:But I'm not sure how to strip the "-", ".", and ":" as well as place the "dataset":"lightning" element in the front. 
This should work
You should do:date = parts[0].replace('-', '')    time = parts[1].replace(':' '')To get the  up front in JSON, the only option you have is sort the keys:You should also consider doing instead of the .
Python dictionaries are unordered, so you can't specify the  element to be first. For that I would use an OrderedDict instead or sort the json as others have mentioned.In order to format the time correctly, I'd use a  object as such:Using a datetime object is helpful because it plays nicely with pandas and numpy if you continue to work on the data beyond spitting out the json. It also supports mathematical operations and time zone localization if you need it to.


Answer URL
https://docs.python.org/3/library/collections.html#ordereddict-objects
