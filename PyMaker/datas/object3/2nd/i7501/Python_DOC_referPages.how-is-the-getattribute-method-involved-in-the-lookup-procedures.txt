Natural Text
Python in a Nutshell describes:the lookup procedure when getting an attribute from a class, e.g.  (see the first part in Why are the lookup procedures for getting an attribute from a class and from an instance different?)the lookup procedure when getting an attribute from an instance, e.g. How is the  method involved in the above lookup procedures?Is the  method called somewhere in the lookup procedures?Or, are the lookup procedures started by calling , which then does all the work in the two links?Thanks.
TLDR: Attribute lookup starts with calling  and it does all the work mentioned in the links. Based on the type of the object either  or  is called.Any attribute lookup results in  bytecode internally. then calls . now looks for either  or (deprecated) slot on the object's type. Now if an object has its own implementation of  then that is used else it falls back to  either  or  based on the type.  slot in case of  points to  and for  it points to . and  basically do all the work of checking for descriptors, dictionary, slots etc(based on the type) and try to return a value. If they fail to find it even after everything then  is raised and if the object's type defined  then it will be invoked.


Answer URL
https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattro
https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattr
