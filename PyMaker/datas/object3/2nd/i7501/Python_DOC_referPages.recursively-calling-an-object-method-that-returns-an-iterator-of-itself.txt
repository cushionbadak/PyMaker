Natural Text
I'm currently writing a project that requires third party code that uses a method that returns an iterator of itself, an example of how this would look in my code:Currently this simply clutters my code, and becomes hard to read after 3 levels. Ideally I'd get it to do something like this:Is there a built in way to do this in Python?
Starting from python3.3, you can use the  syntax to yield an entire generator expression. So, you can modify your function a bit, to take a couple of parameters:The  expression will yield the entire generator expression of the recursive call.Call your function like this:Note that this returns you a generator of .Based on your particular requirement, here's a more generic version using  that works with arbitrary attributes.And now, call your function as: 
The  example above is good, but I seriously doubt the level/depth param is needed.  A simpler / more generic solution that works for any tree:Returns:Note this will return the current node's  before any of its children's.  (IE it expresses itself on the way down the walk.)  If you'd prefer it to express itself on the way back up the walk, swap the  and the  statements.  (DFS vs BFS)  But likely doesn't matter in your case (where I suspect a node has either a  or children, never both).
If using Python 2.7 you need to keep your own stack of iterables and do the looping:This a specialized case of a more general recursive ichain from iterable function:And some test objects:And testing it:Personnaly I'd be inclined to change the  to  to access the leaf objects themselves and explicitly access the thing. i.e.


Answer URL
https://docs.python.org/3/whatsnew/3.3.html#pep-380-syntax-for-delegating-to-a-subgenerator
https://docs.python.org/3/library/functions.html#getattr
