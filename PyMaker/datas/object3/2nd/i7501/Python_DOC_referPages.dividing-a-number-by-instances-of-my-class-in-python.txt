Natural Text
I have a class called , and I need to implement a  class. How can I implement dividing s or s by an instance of  to get an instance of  ?I already know about , ,  and other Python special methods, and I already use them in my code to divide instances of classes by numbers or instances of other classes, but I cannot find a way to divide a number by an instance of my class.Is it possible to implement dividing a number by an instance of a class in Python ?
The  method is what you're looking for.When  is executed, if  does not implement a  method where  can be of class , then  is executed, and its result is returned.Usage:
Yes. You just have to make sure that  returns a  instance when it receives a float or integer.Usage:Implementation: The python docs contains a full example on implementing the arithmetic operations for your custom classes.The proper way to handle incompatible types is to return the special value . NotImplementedSpecial value which should be returned by the binary  special methods (e.g. , , , , etc.)  to indicate that the operation is not implemented with respect to the  other typeSuppose you try to use a unsupported complex number, returning  will eventually cause a  with a correct error message. (at least in python 3)
you need to implement  and.from the documentationThese methods are called to implement the binary arithmetic operations  (+, -, *, @, /, //, %, divmod(), pow(), **, <<, >>, &, ^, |) with  reflected (swapped) operands. These functions are only called if the  left operand does not support the corresponding operation [3] and the  operands are of different types. [4] For instance, to evaluate the  expression x - y, where y is an instance of a class that has an   method,  is called if  returns NotImplemented.


Answer URL
https://docs.python.org/3/library/numbers.html#implementing-the-arithmetic-operations
https://docs.python.org/3/library/constants.html#NotImplemented
https://docs.python.org/3/reference/datamodel.html#object.__radd__
