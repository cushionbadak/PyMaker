Natural Text
My Python app needs to receive an array of 16-bit integer tuples from a C++ application.The data consists of an array of 32-bit unsigned integers, where each integer represents an IQ complex number. I and Q are each signed 16-bit numbers.The array size is constant (6000).The apps run on similar architectures so I donâ€™t need to worry about endianness.Please suggest a Python code snippet to read the data from a socket into a list of IQ tuples.  (I know how to create and connect a socket).Best regardsDavid
Python has several options to process binary data; in this case, you start out by reading from a socket, producing an immutable bytes buffer ( in Python 3,  in Python 2). This can be parsed as 16-bit words using either  or :From there, you still have only a one-dimensional structure, where odd and even items are your I and Q values. If using numpy, you could use ndarray.fromstring or ndarray.frombuffer to create a similar array, then reshape it. We could also convert items individually, which is a bit slower:numpy is also capable of reading from file, so with a file-like socket you might be able to use .
You can use struct library in python is you have incoming data as hexadecimal bytes.Or if they are simple hexadecimal numbers then conversion is direct.It would be really helpful if you can tell the data type you receive from C++ and the required format in python.


Answer URL
https://docs.python.org/3/library/struct.html#struct.unpack
https://docs.python.org/3/library/array.html#module-array
