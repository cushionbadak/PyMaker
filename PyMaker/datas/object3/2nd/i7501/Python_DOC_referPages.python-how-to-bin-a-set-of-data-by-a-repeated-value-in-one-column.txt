Natural Text
Say, I have a numpy array like this:The original array is much bigger, so my question is if there's a way to bin or group rows based on the value on column 1?for example:
Since you tagged this as pandas, you might want to do it using 's  functionality. You'd create a  from your original arrayand group by the first column; then you can iterate over the resulting  object to get the groups of the frame which have all the same result in the first column.Of course, in this snippet  includes the first column. You can strip it out using indexing:and if you would like to convert the sub-frames back into Numpy arrays, use  instead. (If you want them as lists of lists, as indicated in your question, it shouldn't be hard to write a function to make that conversion, but it'll probably be more efficient to keep it in Pandas or at least Numpy if you can.)An alternative is to use the OG  from  which lets you avoid Pandas (if you have some reason for doing so) and use a plain old iterative approach.This, again, includes the key in the resulting rows, but you can trim it out using indexingYou can make the code a tad cleaner by using the  function from the more-itertools module (which is not included in the standard Python library):Disclosure: I contributed the  function to more-itertools
We are talking about large dataset, so we might need the performance, as also we have the input data as a NumPy array. Listed in this post are two NumPy approaches.Approach #1Here's one approach using  to get the row indices separating groups and then using a loop comprehension to get the dictionary output -This assumes the first column to be sorted as stated in the question title - . If that's not the case, we need to use  to sort the rows of  and then proceed.Sample input, output -Approach #2Here's another getting rid of  for further performance boost -Runtime testApproaches -Timings -
You can group your data with the  and a loop.Output:
I think you want like thisAfter Editoutput


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
