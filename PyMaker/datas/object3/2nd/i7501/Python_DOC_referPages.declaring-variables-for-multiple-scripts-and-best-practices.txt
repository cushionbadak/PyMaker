Natural Text
What is the best way to put  variables in python for multiple scripts?I have the following scripts:: This script to declare  common variables for , , and . Also takes input from the user in interactive way and from the defined input file.: This script has all three scripts configurations inputs like ip-adress, ports details. etc.: I have written this script with class and it take inputs from  and .: I have written this script with class and it take inputs from  and .: I have written this script with class and it take inputs from  and .: This script loads class objects for the , , and  and calls the functions defined in them.Running script:I need some suggestions from you.Am I am doing it in right way?Will my scripts be easy for future maintenance?Since I am putting variable  in . It will firstappending some value in  and then  is going to access it.My doubt is  is importing  in this case it does notoverwrite with empty list value? I have tested it, and it  works fine.But I still want to take your suggestions for best practices.
Yes, I think what you're doing is basically OK. I would rename a couple of the scripts to better indicate their roles: I would rename  and make it , and make what you called  something like . However, for the sake of discussion, I'll use the script names you have in your question.You don't have to worry about what's in your  reinitializing  variable every time it's . That's because the results of ing  modules are "cached" in  and the top-level code in them only executes the first time they're ed. If another script s one of them again, the results of the first time saved in cached version is used. You can think of loaded modules as "singleton" instances of a  class (which in fact they are, see ).If there's a dependency in your  that the modules , , and  are imported in a certain order, then I would  them all in your  module, so other scripts don't have to worry about it (the ordering). That way other scripts can just  whichever ones they want to use.The above is not to say your design couldn't be improved. It looks like you're basically using global variables, which have long been considered a "bad thing" for a number of reasons (see Global Variables Are Bad). To avoid that, the direct use of  would need to be replaced with an instance of some new custom  with it's lifetime and access to it handled indirectly via methods defined in the class after explicitly creating an instance of it. This instance would then need to be passed as argument to any function or method that needed use or otherwise do something with or to the instance.
This doesn't look easy to maintain, since the values appended to the list only happen upon calling the import in main. Import them in the wrong order, or forget to import one of them, and you will get unexpected results.In general, it is fine to share variables between scripts, but the various modules should not edit the values of the shared variables, rather, each module should be solely responsible for the values of its variables.


Answer URL
https://docs.python.org/3/library/types.html#types.ModuleType
