Natural Text
I have command line arguments in a string and I need to split it to feed to .I see that the documentation uses  plentifully. However in complex cases, this does not work, such asIs there a functionality to do that in python?(A similar question for java was asked here).
This is what  was created for.
If you're parsing a windows-style command line, then  doesn't work correctly - calling  functions on the result will not have the same behavior as passing the string directly to the shell.In that case, the most reliable way to split a string like the command-line arguments to python is... to pass command line arguments to python:One example of how these differ:
You could use the  helper function from the  package:For example:The  package is starting to dominate for command-arguments parsing, but I don't think it supports parsing arguments from string (only from ). The helper function above is used only for  completion.Edit: I can nothing but recommend to use the  as suggested in the answer by @ShadowRanger. The only reason I'm not deleting this answer is because it provides a little bit faster splitting then the full-blown pure-python tokenizer used in  (around 3.5x faster for the example above, 5.9us vs 20.5us). However, this shouldn't be a reason to prefer it over .


Answer URL
https://docs.python.org/3/library/argparse.html
https://docs.python.org/3/library/shlex.html#shlex.split
https://docs.python.org/3/library/shlex.html#shlex.split
