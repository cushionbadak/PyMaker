Natural Text
What would be the most pythonic way of achieving the transformation from the following input:to the desired output: where I have grouped in lists the tuples which have the same first element.Feeling that Python has a strong potential (I'm new with it) in writing complicated things on one line, I have decided to use comprehensive lists. My initial try is something like: giving me a nice list of all my "pseudo" duplicates : which I further process to obtain my result.My question is: is there a way to achieve this result in one line using comprehensive lists instead of two (ugly) steps?
Use  from  and list comprehension. This will give you a simple one liner:  
Using a 1-liner list comprehension:  
Use . My solution is not one-liner, but more readable.
Here is one solution:will print
There is nothing wrong with the following:Don't forget, you have to mantain a balance between readability and cleverness.Later edit: I actually gathered the other solutions from other answers and measured time execution (200000 uniformly distributed tuples with 'a'-'z' first element), see below:So yes, more clever one-line solutions, but slower and harder to read are not really the "most pythonic".


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
