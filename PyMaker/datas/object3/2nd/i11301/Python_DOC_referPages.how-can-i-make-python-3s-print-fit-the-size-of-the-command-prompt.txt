Natural Text
Python 3 can easily handle printing a lot of text:The problem is that this text is printed like this:This is of course not very good for readability of the text. Going through all of the text by hand to insert white lines makes for quite a hassle. I have seen this question, but I'm wondering if there's an option to do this automatically.
As mentioned in the comments,  and  can be used to align output to a given width. Given that, the only trick is determining the width to use. You could just use 78 or 80 and assume the window is that large, but that means bad wrapping if the terminal is smaller, and wasted space if it's larger.To check the actual width for use with /, if you're on Python 3.3 or higher, you can use :If you can't use 3.3+, you can use the  module to determine the size in a somewhat more complicated way:Using one of these functions, you can then define:This automatically performs line breaking between words based on the terminal size, preserves existing "hard" newlines and spaces, and (partially) matches the behavior of  by allowing multiple arguments with an optional separator. It needs to completely realize the output string before printing (the original  can print one-by-one, reducing memory usage a bit for huge outputs), but that's a side-effect of performing appropriate global wrapping.If you need more complete line breaking handling (so two prints can occur without newlines, yet the second one accounts for the length of the first), you'll need a more stateful printer (to remember used characters on a line) or invent something a tad more complex with full  functionality. I'll leave that as an exercise.
The hard part will be to get the size of the console (Windows world) or terminal (Unix), because I know no portable way to get it. It involves (as shown in the Gist proposed by @MaximeB):the use of  from windows API for Windows (via the use of  on Linux or other Unixesnot speaking of possible corner cases... But the Gist could be enough for your requirements if you only use Windows.Once you have found the width, of if you can accept a static width of 72 or 80 or any other value, the texwrap module can do the trick:gives:
You might have a look at this Gist.Then using the returned values to split the string in subsequent  calls accordingly.IDLE shell: Width can be retrieved with sys.stdout.shell.width and that will raise an AttributeError on any other environment (in which case you would use the gist)


Answer URL
https://docs.python.org/3/library/pprint.html
https://docs.python.org/3/library/textwrap.html
https://docs.python.org/3/library/shutil.html#shutil.get_terminal_size
https://docs.python.org/3/library/curses.html
https://docs.python.org/3/library/pprint.html
https://docs.python.org/3/library/textwrap.html
