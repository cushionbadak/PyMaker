Natural Text
Most of the info I found was not in python>pandas>dataframe hence the question.I want to transform an integer between 1 and 12 into an abbrieviated month name.I have a df which looks like:I want the df to look like this:
You can do this efficiently with combining  and 
One way of doing that is with the  method in the dataframe but, to do that, you need a map to convert the months. You could either do that with a function / dictionary or with Python's own datetime.With the datetime it would be something like:In a simillar way, you could build your own map for custom names. It would look like this:Obviously, you don't need to define this functions explicitly and could use a  directly in the apply method.
You can do this easily with a column apply.
Use  and  function for this:
Since the abbreviated month names is the first three letters of their full names, we could first convert the  column to  and then use  to get the full month name and finally use  method to get the first three letters, all using pandas and only in one line of code:
Having tested all of these on a large dataset, I have found the following to be fastest:
The  module is useful, but  is array-like: it cannot be used directly in a vectorised fashion. For an efficient mapping, you can construct a dictionary and then use :Performance benchmarking shows a ~130x performance differential:
Reference:http://strftime.org/


Answer URL
https://docs.python.org/3/library/calendar.html
https://docs.python.org/3/library/calendar.html#calendar.month_abbr
