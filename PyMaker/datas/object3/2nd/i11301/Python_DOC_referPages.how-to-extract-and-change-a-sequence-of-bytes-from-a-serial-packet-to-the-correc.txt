Natural Text
This is the serial packet I am processing using pyserial. The two bytes in bold actually correspond to a real world measurement which corresponds to (decimal) or (hex). How do I extract those bytes in python and get the correct int value which is 721?
Processing to and from such byte strings is quickly and easily done with the  library functions /  and /:While it is normally best practice to unpack/unpack the entire packet you can use the _from & _to versions to selectively manipulate packets.In your case:More info
Your hex-encoded string is of odd length, so I don't know where the padding's missing from, see belowFor more information on what the format strings in  and  can be, see the documentation. In short,  stands for little-endian,  for unsigned char (assumed 8-bit width),  for short (assumed 16-bit width).
Since the actual format strings are somewhat strange at first sight, I have given you a solution based on the above answer: The command unhexlify will convert the 4 byte ascii representation back to a two byte binary representation of your integer.the '<' takes care of your reversed byte order in your integer (Formatting details)The 'i' means that we are facing a two byte integerHope that helps.


Answer URL
https://docs.python.org/3/library/struct.html?highlight=pack#struct-format-strings
https://docs.python.org/3/library/struct.html
