Natural Text
I have a dictionaryI have a list of items say . I want to find the average of the values of this list from the dictionary. Of course I can iterate through my list, finding and summing the values, but is there a way in which I can get this without the for loop?
You have to have a loop. You can hide the loop however.You could use a  object to do this for you, for example:To be absolutely explicit: the  now loops over your list of keys and produces a tuple with the corresponding values.Another 'hidden' loop is the  function; use either  or  as the function to map to, and  again does all the looping for you:The difference between  and  here is what excepetion you get when a key is missing; the first will lead to a  as you end up trying to sum  and a number, the other will give you a .Otherwise, just use a loop in a generator expression:Demo:
If you are using python3 you could use statistics.mean:Or just using sum:That presumes all the items in lst are in the dict, if not you would get an error adding a float and a NoneType.
If your dict is called  and your list is called , there's a very short solution:Note that this doesn't support an empty  list, as this will result in a .  This is fine, because the average of an empty sequence is not really meaningful.While this solution shows that computing the average is possible without an explicit for loop, it has the problem that summing a big list of floats and dividing it by a big number can result in numerical precision loss.  Fixing that is non-trivial and requires a much longer solution.  Fortunately Python 3.4 (or newer) ships the statistics module for this, so you should use  (as was already proposed by another answer).  For example:Depending on your concrete problem, other functions in this function might be more appropriate.  You will find more information in the documentation of the statistics module.


Answer URL
https://docs.python.org/3/library/statistics.html#statistics.mean
https://docs.python.org/3/library/statistics.html#averages-and-measures-of-central-location
