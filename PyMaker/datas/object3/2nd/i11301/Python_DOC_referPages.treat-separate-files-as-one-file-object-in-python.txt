Natural Text
I have a splitted file (lets say name.a0, name.a1, name.a2, ...)Is there a way to have one readable file-like object, that will be a concatenation of those, without using a temporary file and without loading them all to the memory?
The fileinput module in the python standard library is used for exactly this purpose.
You can always create a proxy object that treats a series of files as one. You need to implement just enough of the file object interface to satisfy your program's needs.For example, if all you do is iterate over the lines in all these files, the following object would suffice for Python 2:This lets you read through a series of files as if it was one, reading lines as you go (so never everything into memory):Note that in Python 3 (or when using he  library in Python 2) you'll need to implement one of the appropriate base classes for the file mode (raw, buffered or text).


Answer URL
https://docs.python.org/3/library/fileinput.html
https://docs.python.org/3/library/io.html#class-hierarchy
