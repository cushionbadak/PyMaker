Natural Text
This question already has an answer here:What is the purpose of self?                    19 answers                In the following example  is not used in the  function, but we used it in the  function calling . Why is that? Why did we use  instead of  ? I thought we only use  for variables in the  function.
The  object is a class variable, not an instance variable. This means it is shared across all instances of that class. You can access it with  or . If you reassign an instance's version of it with something like , that instance will have a new instance variable of that name that masks its access to the class variable with the  reference (i.e., you won't be able to do  to get the class variable), but other instances - and the class - will still be able to (i.e.,  will still work, and  will still point to that class variable). The following example demonstrates this.
, , and  are just attributes of the class . is an attribute being a list, and  is another attribute, being a method.Also from the [def documentation](https://docs.python.org/3/reference/compound_stmts.html#grammar-token-funcdef):A function definition is an executable statement. Its execution binds the function name in the current local namespace to a function object (a wrapper around the executable code for the function).so  and  and all other methods are really the same: names in a namespaces.See also https://docs.python.org/3/tutorial/classes.html#class-objects


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#grammar-token-funcdef
https://docs.python.org/3/tutorial/classes.html#class-objects
