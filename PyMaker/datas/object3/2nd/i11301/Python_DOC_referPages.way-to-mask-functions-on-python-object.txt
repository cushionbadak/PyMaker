Natural Text
I have a class that inherit from OrderedDict, but I don't know if this is the right way to accomplish what I need.  I would like the class to have the duel method of the javascript '.' notation like  and I would also like the users to be able to access the class properties like  but I was to hide all the key() and get() functions.  The inheritance model is providing good functionality, but it cluttering up the object with additional methods that are not really needed.Is it possible to get the dictionary behavior without all the other functions coming along?  For this discussion, let's assume my class is this:Is there another way to approach this dilemma? Thanks
If all you want is  to work the same way as  without any other functionality of dictionaries, then don't inherit from  or , instead just forward key/indice operations (,  and ) to attribute operations:As an added bonus, because these special methods don't check the instance variables for the method name it doesn't break if you use the same names:The only time it will break is when trying to use  since that is where the instance variables are actually stored:In addition you can still use the normal dictionary methods by using :


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getitem__
https://docs.python.org/3/library/functions.html#getattr
