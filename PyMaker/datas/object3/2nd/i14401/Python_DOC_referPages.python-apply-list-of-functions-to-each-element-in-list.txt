Natural Text
Say I have list with elements  and list with functions .So I need to apply each function from  to each element from  sequentially.I can do this by several calls .Another way:I'm just wondering if there is a more pythonic way to do it.Without separate function? By single expression?
You could use the  function in a list comprehension here:Demo:This applies each function in turn to each element, as if you nested the calls; for  that translates to .In Python 3,  was moved to the  module; for forwards compatibility, you can import it from that module from Python 2.6 onwards:Note that for the  function, it doesn't matter if there is extra whitespace around the digits;  works without stripping of the newline.
You are describing the basic use of a list comprehension:Note you don't need the call to  to convert to integer here, some whitespace is handled fine. If your real use-case is more complex and you  wish to compose arbitrarily many functions in the comprehension, however, I found the idea from here quite pythonic:  


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
