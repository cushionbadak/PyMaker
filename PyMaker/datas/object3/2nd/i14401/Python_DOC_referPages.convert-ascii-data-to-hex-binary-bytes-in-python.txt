Natural Text
The protocol for a device I'm working with sends a UDP packet to a server (My Python program, using twisted for networking) in a comma separated ASCII format. In order to acknowledge that my application received the packet correctly, I have to take a couple of values from the header of that packet, convert them to binary and send them back. I have everything setup, though I can't seem to figure out the binary part. I've been going through a lot of stuff and I'm still confused. The documentation says "binary" though it looks more like hexadecimal because it says the ACK packet has to start with "0xFE 0x02". The format of the acknowledgement requires me to send "0xFE 0x02" + an 8 unsigned integer (IMEI number, 15 digits) + 2 byte unsigned integer (Sequence ID)How would I go about converting the ASCII text values that I have into "binary"?
First:The documentation says "binary" though it looks more like hexadecimal because it says the ACK packet has to start with "0xFE 0x02".Well, it's impossible print actual binary data in a human-readable form, so documentation will usually either give a sequence of hexadecimal bytes. They could use a  literal like  or something instead, but that's still effectively hexadecimal to the human reader, right?So, if they say "binary", they probably mean "binary", and the hex is just how they're showing you what binary bytes you need.So, you need to convert the ASCII representation of a number into an actual number, which you do with the  function. Then you need to  that into 8 bytes, which you do with the  module.You didn't mention whether you needed big-endian or little-endian. Since this sounds like a network protocol, and it sounds like it wasn't designed by Microsoft, I would guess big-endian, but you should actually know, not guess.So:(You didn't say where you're supposed to get the sequence number from, but wherever it comes from, you'll  it the same way, just using  instead of .)If you actually did need a hex string rather than binary, you'd need to know exactly what format. The  function gives you "bare hex", two characters per byte, no  or other header or footer. If you want something different, well, it depends on what exactly you want; no format is really that hard. But, again, I'm pretty sure you don't need a hex string here.One last thing: Since you didn't specify your Python version, I wrote this in a way that's compatible with both 2.6+ and 3.0+; if you need to use 2.5 or earlier, just drop the  prefix on the literal in the  line.


Answer URL
https://docs.python.org/3/library/functions.html#int
https://docs.python.org/3/library/struct.html
https://docs.python.org/3/library/binascii.html#binascii.b2a_hex
