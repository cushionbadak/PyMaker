Natural Text
I'm trying to write a code that finds the letters in a string containing special characters, numbers and letters. The following code returns nothing:Output: &&)&gokjhohgouigougyy^&*^x=> NoneCan someone tell me what is the issue and how can I do it without using the , e.g. using loops like: The above code works:
You need to call  as  this is because isalpha is a function or method.Note that your split will give you words not letters - which may not be what you are expecting:One of the things to get used to in python is the difference between a property and a method - a property is something that you can read a method performs some action -  lists both so for a string  you have:Where:is a property and:is a method and needs to be called by the addition of parenthesis () to actually perform their function.  It is worth also distinguishing between methods that return a value and those that operate in place.Returns a value as does  but  is an in-place operation, e.g.:
Splitting a string returns a list of substrings. For example: "abc def ghi".split(" ") returns ["abc", "def", "ghi"].You needn't split the string for what you're trying. Just loop over the string itself.
You don't need to split it up and you should call  as  instead because they are different things. This should print all the letters in what i assume is the format you want.
From your code it looks more like you want to remove unwanted characters from the string, rather than find those to retain.So, if you want to print the result:Output:But usually you would want to assign the filtered string to a variable, like this which combines a generator comprehension with the  string function:Output:gokjhohgouigougyyx
If you want a list use a list comprehension:If you want to remove punctuation, digits and spaces from the string you can use str.translate:The  is just the  of each character we want to replace with the value we want to replace it with which in this case is an empty string. 
If you would like to get clever you could also look at using a filter object:This can be shortened to:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
