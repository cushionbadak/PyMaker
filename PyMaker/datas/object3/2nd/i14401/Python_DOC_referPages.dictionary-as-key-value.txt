Natural Text
I have been searching for my answer, probably just not using the right verbiage, and only come up with using lists as dictionary key values.I need to take 20 csv files and anonomyze identifying student, teacher, school and district information for research purposes on testing data.  The csv files range anywhere from 20K to 50K rows and 11 to 20 columns, not all have identical information.One file may have:And another may have:And yet another may have:I am putting the varying data into dictionaries for each type of file/dataset, maybe this isn't the best, but I am getting stuck when trying to use a dictionary as a key value for when a student may have taken multiple tests i.e. Language, Reading, Math etc.For instance:Any guidance on which libraries or a brief direction to a method would be greatly appreciated. I understand enough Python that I do not need a full hand holding, but helping me get across the street would be great. :DCLARIFICATIONI have a better chance of winning the lottery than this project does of being used more than once, so the simpler the method the better. If it would be a repeating project I would most likely dump the data into db tables and work from there.
A dictionary cannot be a key, but a dictionary can be a value for some key in another dictionary (a dict-of-dicts). However, instantiating dictionaries of varying length for every tuple is probably going to make your data analysis very difficult. Consider using  to read the tuples into a DataFrame with  values where appropriate. API: https://docs.python.org/2/library/stdtypes.html#mapping-types-dict Data handling package: http://pandas.pydata.org/
You cannot use a dictionary as a key to a dictionary.  Keys must be hashable (i.e., immutable), and dictionaries are not, therefore cannot be used as keys.You can store a dictionary in another dictionary just the same as any other value.  You can, for example doassuming you have defined  and  elsewhere.
If I interpret you correctly, in the end you want a  with students (i.e. ) as key and different student related data as value? This is probably not exactly what you want, but I think it will point you in the right direction (adapted from this answer):In the end that should give you a dict  with s as keys and a list of test results as values. Each test result is a . This assumes that every file has a  column!.
If you can know the order of a file ahead of time, it's not hard to make a dictionary for it with help from .File :In a Python file in the same directory as :
Be more explicit please. Your solution depend on the design.in district you have schools and in each school you have teachers or student.first you order your datas by district and schoolfor each distric:for each school:    #"name_schooln"and for each student...you define his elementsyou can also define one dictionary for all the student but you have to design a uniq id for each student in this case for example:


Answer URL
https://docs.python.org/3/library/csv.html
