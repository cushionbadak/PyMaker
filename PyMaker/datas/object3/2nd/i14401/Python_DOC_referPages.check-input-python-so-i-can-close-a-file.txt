Natural Text
How do I get it to check user input so it can close the files?
Ok first point :This line: opens file 'ClassA1.txt' for appending, assign the  object to the name  (which eventually shadows the builtin type  but that's not relevant here)Then the second line:opens file 'ClassB1.txt' for appending, assign the  object to the name , sus replacing the binding to the previously opened file "ClassA1.txt". Since there's no other name referencing this previously opened file, it's lost. In the best case, the underlying file pointer will be closed when the object gets garbage-collected (CPython) but this is NOT garanteed by thye language's specification and another implementation might not free the file pointer correctly.In all cases you can not access 'ClassA1.txt' anymore at this point.Now the third line:does the same thing - reassigning the name  to a new file object etc.At this point, you have to possibly opened, possibly not, and in both case unreachable (and possibly already garbage collected) file objects and the name  points to the third one - which means any write operation on  will write to file "ClassC1.txt".If you want to keep all three files opened, you have to keep references to them, either by binding each to a distinct name, ie:or by storing them in a list:so you can now acces them by index, ie , , or in a dict:so you can now acces them by key, ie , , BUT : why would you open three files, ask the user which file he wants to write to, close the two other files, write to the selected fileclose itwhen you could more simply:ask the user which file he wants to write to, open itwrite to itclose itSince your files are named after the class name, you can easily build the filename from the class name:or even more safely (this will ensure the file WILL be closed whatever happens):Note that in this case you don't have to call  A couple other points:=> 'cls' or 'class_', not 'Class' - by convention, capitalized names are for class (in the OO meaning) names.=> Python is not PHP:  just worksI don't know what you expect this line to do, but it sure looks you don't know either... One thing is sure : a string won't be equal to an integer. Never...Have you read the documentation at all ? It's here (well, for a starter at least) : https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-filesYou want  here. The parens are NOT optional - if you want to call the method at least. 
You're doing a long winded way, you could just open the file after the user gives their answer.I just set it up so the input determines the filename it tries to open, and if that file exists it opens it and appends their name.
When you execute these file variable contains "ClassC1.txt", you are re-assigning the object again and again. so after whatever check if you execute this:last file will be closed. Instead I would recommend you first take the input of what file is to be opened and then open that file.
results:and writes the content of your list to I think it's better to have all the information in one file, but obviously you can have a file for every class if you want.If you want class for every file, consider using:


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
