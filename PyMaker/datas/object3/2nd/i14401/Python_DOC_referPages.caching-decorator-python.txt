Natural Text
I was watching one of Raymond Hettinger's awesome videos and I got a bit confused on the decorator example:I'm not particularly an expert on decorators but doesn't the return of the call to newfunc(*args) upon finding the item is cached cause a recursive loop that never finishes?  I think it is suppose to return saved[args] (the function eventually return's result, which is the same thing, but I don't think it ever gets there if an item is  found in cache.)
Yes, that's a mistake.If you're not sure, let's test it:The first one prints out , the second one aborts:But if we change it as you suggest, it prints  again. (And, if you time it, it runs faster than the non-cached version; if you profile it, it makes only 10 calls to the real function; etc.)All exactly as you expected.So, what have we learned? That even Raymond Hettinger is not above occasional typos in untested code, but his code is clean enough that it's easy to find and fix the problem even without running it. :)You could send him an email, add a comment on the YouTube page, or report an issue on the PyVideo page.
You could also use @functools.lru_cache(maxsize=128, typed=False)Â¶This would look like:


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
