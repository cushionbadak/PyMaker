Natural Text
I'm experimenting for the first time with recursion and am running into problems when scanning large directories. The following code takes a list of glob patterns (e.g., ['/opt/data/large_dir_1*', '/opt/data'large_dir_2']), expands the glob patterns, passing the resulting lists of files/directories to threads, along the way totalling the number of directories found, number of files found, and the total byte size of the files found. The subdirectories are large (several of them have hundreds of thousands of directories, millions of files), but I'm suprised that some of the threads I've spawned are throwing "MemoryError" exceptions.My guess is that the problems are occurring because the 'dirList' and 'fileList' variables are taking up too much memory. My backup plan is to have the recursive function simply write the data to log files rather than return it, but I'm trying to avoid the use of 'global' variables as much as possible. Does anyone have any thoughts on a better way to proceed? Am I doing something stupid here? Thanks for any help you can provide.
This sounds like a perfect use case for , which lets you recursively walk a file system using a simple  loop. The official documentation at https://docs.python.org/3/library/os.html#os.walk contains an example that's quite like your use case.If you want to do multi-threaded processing, you can start worker threads that consume items from a  that you can fill from this  loop.


Answer URL
https://docs.python.org/3/library/os.html#os.walk
