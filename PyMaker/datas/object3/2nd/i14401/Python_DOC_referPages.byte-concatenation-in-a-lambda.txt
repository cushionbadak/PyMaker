Natural Text
Let's say I have the following chain:Then I create an iterator for this chain:What I want to do is to have the first 4 bytes of bchain, but by using the iterator and exhaust it. And to do that in a lambda expression.I have tried to do:But I get this errorIt seems like next(iterator) gives the int represented by the next byte in the chain, and not the byte itself. The lambda, in this case, should outputThanks
As the docs for  explains:While bytes literals and representations are based on ASCII text, bytes objects actually behave like immutable sequences of integers.In other words, if , then  or  is , not .If you want to construct a  object from an iterable of small integers, don't use , just call the constructor:Of course a much simpler way to do what you wanted is to just slice the :Or, if you want to work on any iterable of small integers, not just a , use :As J.F. Sebastian points out, this is the reason PEP 467 includes . Assuming it's added to Python 3.5, you could use --or, if  is just "some -like iterable", --instead of , and then you wouldn't have this problem in the first place.


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes
https://docs.python.org/3/library/itertools.html#itertools.islice
