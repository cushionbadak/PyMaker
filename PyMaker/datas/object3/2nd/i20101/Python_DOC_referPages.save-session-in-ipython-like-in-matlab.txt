Natural Text
It would be useful to save the session variables which could be loaded easily into memory at a later stage.
Then we can restore the session with:For more on "Session logging and restoring" see the docs.Note that this merely stores the commands run by IPython. It does not save thestate of the IPython session.  Restoring the session requires re-execution ofthe commands.If you set the PYTHONSTARTUP environment variable to point at a file called, say, :then put the following in /path/to/startup.py:then IPython will call %logstart automatically whenever you start an interactive session.
Looking for something similar I came across save_ipython_variables: lets you ... save your global IPython  variables to  disk easily, and load them back into the global  namespace when you need them again, even in a whole new IPython  session.I haven't had much chance to use it yet, but looks promising.
I haven't tried this yet, but starting from AE Drew's answer, I found a possible alternative. Looks like IPython has a built in magic command that does this called %store:%store magic for lightweight persistence. Stores variables, aliases and macros in IPythonâ€™s database. To automatically restore stored variables at startup, add this to your ipython_config.py file:
There is also a magic command, , that can be used to write all the commands/statements given by user.Syntax : .Also , where star_line is the starting line number and end_line is ending line number. Useful in case of selective save. can be used to execute the commands in the saved file
Not my solution, but this seems to be the closest solution, if you are using ipython: https://stackoverflow.com/a/28552465/4752883


Answer URL
https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP
