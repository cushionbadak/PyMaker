Natural Text
I have a xml file in which elements are present in some random order. I have to compare these files but due to the change in order of elements, it requires manual effort. I am looking for some way to sort these files. Can someone please give me some pointers/approach to this problem. I tried reading the documentation of lxml (ElementTree and Element classes), but there doesn't seems to be a method by which I can sort the children elements based on xml text.I can sort the elements based on Name, but within an attribute element, how can the legal element childs can be sorted?Input :-Expected Output :
If you want to sort the children by the text, just find the legal nodes and sort the children using child.text as the key:The to sort each node:That will reorder the children:Giving you:Or a more efficient approach, use operator.attrgetter in place of the lambda:
Consider XSLT, the special purpose language designed specifically to manipulate and transform XML files. Python's lxml can run XSLT 1.0 scripts. Specifically, XSLT maintains the  method which can be run inside templates:


Answer URL
https://docs.python.org/3/library/operator.html#operator.attrgetter
