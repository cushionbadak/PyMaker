Natural Text
When working with Python 3 dictionaries, I keep having to do something like this:I seem to remember there being a native way to do this, but was looking through the documentation and couldn't find it. Do you know what this is?
This is the use case for , here simply using the  callable for the default factory. A  is configured to create items whenever a missing key is searched. You provide it with a callable (here ) which it uses to produce a default value whenever the lookup with  is passed a key that does not exist. This callable is stored in an instance attribute called .  If you don't provide a , you'll get a  as per usual for missing keys. Then suppose you wanted a different default value, perhaps 1 instead of 0. You would simply have to pass a callable that provides your desired starting value, in this case very trivially This could obviously also be any regular named function. It's worth noting however that if in your case you are attempting to just use a dictionary to store the count of particular values, a  is more suitable for the job. 
Take note that you can always remove the clutter from the  stamemt by using it in an expression:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/collections.html#collections.Counter
