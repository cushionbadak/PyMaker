Natural Text
I'm looking to query an object's attribute dynamically. I will not know which attribute, or column in this case, that I'll be using at the time of execution.I have a SQLAlchemy Base class  that describes a few attributes, plus additional special prices that differ from the list price.I then have a  class, below, that has access to additional resources and methods that help with reporting and updating columns in the  table. This class stores information about a unique special price list for all  objects.I later begin iterating over each  and  instance.At this point my  object has a new special price, or multiple new special prices, that I plan on updating in the database. I could simply add my object to the database session and commit, but I need to get the old price(s) and keep them linked to their respective price lists before I do commit. The old prices are used in a report that later gets emailed to me. What I am doing now is belowI feel like I'm drastically over complicating this by using __getattribute__(). It works, but this doesn't seem pythonic. Does anyone know a better way to get the value of an unknown column before you update? Database updates only occur once or twice every ~500 products, so storing each special price in an external variable  while they're being processed isn't exactly efficient.
To dynamically access attributes, you should use the  builtin.If the instance is stale, you should use , which means that the next time you access the attributes they will be retrieved from the database.


Answer URL
https://docs.python.org/3/library/functions.html#getattr
