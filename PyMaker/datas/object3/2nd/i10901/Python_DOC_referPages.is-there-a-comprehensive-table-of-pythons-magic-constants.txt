Natural Text
Where are , , etc. defined, and what are they officially called?  and  are "magic methods", so right now I'm just referring to them as "magic constants" but I don't even know if that's right.Google search really isn't turning up anything and even Python's own documentation doesn't seem to have a comprehensive list of them after scanning through the layers of pages.
Short answer: no. For the longer answer, which got badly out of hand, keep reading...There is no comprehensive table of those  (also not their official title!), as far as I'm aware. There are a couple of sources:The only real "magic constant" is : it's a  to attempt to assign to this name. It's covered in the list of constants and mentioned in the context of the  statement.Another module-level name with specific use by a statement is , which is documented alongside the  statement.There are two special modules, documented in the library reference, which have their own pages: is the top-level environment in which a script is executed. is for accessing language features that aren't yet mandatory (e.g.  to replace the  statement in Python 2).Most of the rest (, , etc.) are added to modules by the import system, so are listed in the import documentation.There are also many related to objects. The basic methods for implementing built-in behaviour (like  and , as you mention) are listed in the data model documentation. But plenty of other, more specific names exist; for example, there are several related specifically to exceptions, like  and , in the exceptions documentation.Note that there is nothing particularly "magic" about most of these, they are just regular attributes and can be assigned to as you see fit. However, they are considered reserved for internal Python machinery, so you shouldn't add your own; per the language reference on "reserved classes of identifiers":Any use of  names, in any context, that does not follow explicitly documented use, is subject to breakage without warning.That said, there are a couple in common use that I don't think are actually specified anywhere in the official docs, like  and ; see e.g. What is the common header format of Python files? and What is the origin of __author__? A few have semi-official status via PEP-8, but that's about it.A few others have trodden this path, by the looks of it:Finding a list of all double-underscore variables?I need __closure__Built-in magic variable names/attributes


Answer URL
https://docs.python.org/3/library/constants.html#__debug__
https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement
https://docs.python.org/3/reference/simple_stmts.html#the-import-statement
https://docs.python.org/3/library/index.html
https://docs.python.org/3/library/__main__.html
https://docs.python.org/3/library/__future__.html#module-__future__
https://docs.python.org/3/reference/import.html#import-related-module-attributes
https://docs.python.org/3/reference/datamodel.html
https://docs.python.org/3/library/exceptions.html
https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers
https://docs.python.org/3/reference/import.html#import-related-module-attributes
https://docs.python.org/3/library/__main__.html
https://docs.python.org/3/reference/datamodel.html
https://docs.python.org/3/library/types.html#types.ModuleType
