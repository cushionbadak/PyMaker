Natural Text
According to the Python 2.7.12 documentation: (apply ) and  (apply ) can be used to convert  the value before it is formatted.Interestingly, the converted value is the output of , rather than .So what does "convert the value" mean here? Making it less human-readable?
In order to format something in a string, a string representation of that something must first be created.  "convert the value" is basically talking about how the string representation is to be constructed.  In python, there are two fairly natural choices to get a string representation of something ...  and .   is generally a little more human friendly,  is generally more precise.  Perhaps the official documentation is the best place to go looking for the difference:Called by the  built-in function to compute the “official” string representation of an object. If at all possible, this should look like a valid Python expression that could be used to recreate an object with the same value (given an appropriate environment). If this is not possible, a string of the form  should be returned. The return value must be a string object. If a class defines  but not , then  is also used when an “informal” string representation of instances of that class is required.This is typically used for debugging, so it is important that the representation is information-rich and unambiguous.Called by str(object) and the built-in functions format() and print() to compute the “informal” or nicely printable string representation of an object. The return value must be a string object.This method differs from  in that there is no expectation that  return a valid Python expression: a more convenient or concise representation can be used.The default implementation defined by the built-in type object calls .In ,  chooses to use  to format the object whereas  chooses  to format the value.The difference can easily be seen with strings (as  for a string will include outer quotes).:What the difference between these two methods really depends critically on the objects being formatted.  For many objects (e.g. those that don't override the  method), there will be no difference in the formatted output.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__repr__
