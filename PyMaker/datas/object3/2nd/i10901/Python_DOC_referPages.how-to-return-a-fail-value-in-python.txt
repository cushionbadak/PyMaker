Natural Text
I'm looking to find a good convention on returning fail from a function if the function fails. I typically like to return None or False but in my case, the function's purpose is to read an IO, which could be bool (True/False), int or float.So in this case I can't return a False. I've tried to use None but I don't know if this is the best case cause if I don't check the return as I call the function the None output might be recognized as a False output.I was thinking having a definition files that has string tokens, but that seems in efficient to have to parse the string.Are there built-in objects available? Whats the convention?
You should raise an exception if the function fails. It is not good practice to have to check if your return value is invalid per the EAFP principle of Python.Easier to ask for forgiveness than permission. This common Python coding style assumes the existence of valid keys or attributes and catches exceptions if the assumption proves false. This clean and fast style is characterized by the presence of many try and except statements. The technique contrasts with the LBYL style common to many other languages such as C.


Answer URL
https://docs.python.org/3/glossary.html#term-eafp
