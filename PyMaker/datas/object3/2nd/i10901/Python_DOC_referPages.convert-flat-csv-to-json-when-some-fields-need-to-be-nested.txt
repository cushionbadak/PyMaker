Natural Text
I have a flat csv file with 50 columns (let's call them FirstName, LastName, Address, etc.), that's tab-delimited with quotes around all fields.I need to convert this to a JSON file, but what's tricky is that some of the CSV columns need to be converted into nested fields, where the nested fields also contains, apart from the column's row value, certain generic fields and values (this is for an API that has required fields). I know in advance which of the columns need to become nested fields.So, for simplicity's sake, let's say this is the structure of the first row for the first 3 columns in the CSV file:This is the desired JSON output:In the full CSV with 50 columns, I also have a few more columns that I need to parse a nested fields, with these extra generic values.How can I go about doing this?
Use a  and manipulate the row by adding the  and removing the .Output (after lint):
to continue @FullName answer, maybe you can have a function that creats the new key:then you just have to creat the pre_filled_dict ie :and in the for loop :I'm not sure this is needed, I don't know how many of those value you have.
You can create a dictionary defining the columns that have nested dicts and use those to populate that column's value. Keeping your customization to a single consolidated location makes it easier to read/maintain and easier to port to other csv formats.Now you populate the  differently based on what's in Given your data with an added  column to show multiple nested columns,  is now


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictReader
https://docs.python.org/3/library/json.html
