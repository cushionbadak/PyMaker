Natural Text
I am learning Python, and I am a little confused about the data types of Python. I am reading this line again and again.:'Everything is an object in Python'This includes integer, floats, string, sets, lists, etc. and when we write like this:  , so we are actually creating an object of  class (or not)?  So, when we write an integer like , does it mean it's an object of  class? But when we read in books it says that to convert a string into integer we need to use the  method? But what I am thinking is that  is a class that also accepts the string object in constructor and then we get integer object, right?So, is  a method or class in Python? 
Yes  is a class (and it's also called a type; see Python : terminology 'class' VS 'type'), and doing  returns an instance of an  object. However, (in standard Python aka CPython) for small integers (in the range -5 to 256, inclusive) the  constructor doesn't actually build a new integer object. For efficiency reasons the interpreter has a cache of small integers and the constructor simply returns a reference to the existing  object. This topic is discussed in the answers to “is” operator behaves unexpectedly with integers.Your book that calls  "the  method" is being a tiny bit sloppy, IMHO. Pedantically speaking,  itself is a class, which is a callable object, and when you call a class that call gets automatically converted into a call to the class's constructor method (that is, its  method). But informally it's common to refer to  as a function call or method call.I almost forgot about the question in your first paragraph. When we write the interpreter creates the 3  objects and puts them inside a fresh  instance. (To be more precise, it puts references to the  objects into the list).Using the standard  module you can disassemble the bytecode for this operation:outputSo even though we're "just" creating a literal list it's still a fully-fledged  instance object. Unlike some OOP languages, Python doesn't have any "primitive" datatypes that aren't objects, so literal integers and literal strings are also objects. Thus a literal string comes equipped with all the standard string methods. Eg,outputshows us that the literal string  has the standard  method. 
As you can read in the python documentation.class int(x, base=10) Return an integer object constructed from a  number or string x, or return 0 if no arguments are given. If x is a  number, it can be a plain integer, a long integer, or a floating point  number. If x is floating point, the conversion truncates towards zero.  If the argument is outside the integer range, the function returns a  long object instead.So it's a class constructor that constructs an int object, depending on the given input x.


Answer URL
https://docs.python.org/3/library/dis.html
