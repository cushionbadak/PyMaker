Natural Text
I'm working with a large set of data in a spreadsheet using the openpyxl library.I need to find certain temperature values and then look at other cells based on that temperature.the problem is that my temperature fluctuates a bit in its measurements but I don't really care about this.For example, if I want to look at the data when it's 25 degrees out, what I really want is the data ranging from about 24 - 26 degrees. And I need to do this for a number of temperatures.I know how to do this in a rather messy iterative fashion like this:but this just feels messy to me, is there any cleaner way to do it? Something like checking if temp is within a certain error of num?
What you have now is clear; Python allows you to chain the comparisons like this:Another alternative is to check the absolute between the two:(If  is an integer, you need to use  instead of  for the expression to be different from simply .)
If you just want to adapt what you have a little:
How about a built in solution? You could just use the  function located in  (which is available as of ):The  signalling the absolute tolerance (i.e difference) in order for two number to be considered close and  to return .
You can test for a value being in a range like this:Note that this doesn't work if your incoming data is floats.You can of course generate this range using some function that you give a center and a maximum distance from it:
For things like this I wrote a generic range comparison function which you could easily extend for use here. Although it might be overkill for this situation it makes a lot of sense if you have lots of similar checks with different values.Use it like this:You combine this with your own function for more flexibility.
For those who want to use a built-in function in Python 2.x, there is also numpy.isclose()From the documentation:For finite values, isclose uses the following equation to test whether  two floating point values are equivalent.


Answer URL
https://docs.python.org/3/library/math.html#math.isclose
https://docs.python.org/3/library/math.html
