Natural Text
Having such codeHow can accomplish same on fewer lines?
Short code is not better code. Short code is not faster code. Short code is not maintainable code. Now, that said, it is good to make your individual components concise and simple.Here's what I would do:This gives me:While this code has actually added a few lines in length, it has become much more clear what the program is doing, as we've applied Abstraction and made each component of the code do only one thing well.Even though we've added two functions, the most-visible part of the code has gone from this:To this:And just by reading these two lines, we know that  is converted from a string to a list of s, and that we then split those numbers into odd and even, and assign the result to .To explain a a couple of things that may not be familiar to all: calls a function for every item in a  (or  or other iterable), and returns a new list with the result of the function being called on each item. In this case, we use it to call  on each item in the list. calls a function for every item in a  (or  or other iterable), which returns  or  for each item (well, truthy or falsey), and returns a list of items that evaluated to  when the function is called.Lambda Expressions () are like "mini-functions" that take arguments and can be created in-place.
A functional aproach:
You can accomplish the same results with , like so:
Output:
If you just want to try it out:But if you want to use it in production: Readable code is more important than 'short' code 
You can do it as a one-liner, but I wouldn't recommend it. Your code is perfectly fine.


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions
