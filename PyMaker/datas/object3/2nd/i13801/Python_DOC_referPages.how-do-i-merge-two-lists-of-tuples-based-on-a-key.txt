Natural Text
I have two lists of tuples that I need to merge. This would be comparable to a JOIN in database terms. The order of the tuples in each list may change. The order of the items in the tuple will not change. The count of items in A should equal the count in B but there may be a difference.Here are my two lists of tuples. There will be 10,000+ of these tuples in each list so performance is a concern. The first element in each tuple is the key common to each list.The desired output is:Here's the code that I threw together for testing the concept. It works but as you can see, performance is an issue. The performance of this code when running with real data (10K items in each list) is unacceptable as it would take ,potentially, hours to complete.Here's the code:How can I merge / join the two lists and achieve better performance?
Inner join two lists of tuples on the first (unique in each list) column using  suggested by @CoryKramer in the comments:Example:This solution has  time complexity (your solution (in the question) is  that is much worse for ).It doesn't matter for a small  such as  in the question but in Python 3.5+ you could use  with  parameter to avoid allocating new list i.e., for   constant memory solution:Here's a dict-based solution. It is  linear in time and space algorithm:Here's -based solution mentioned by @Padraic Cunningham
Have you used pandas before? This seems to give your desired output: `A' and 'B' are pandas dataframes which have some of the SQL like functionality built into them, such as merge. If you haven't used pandas, let me know if you need further explanation. See Database-style DataFrame joining/merging.
You can group by the first element using an OrderedDict, appending each tuple then only keep and join the tuples where the value list has a length > 1:Output:If order does not matter a  will be faster, either way this will be significantly faster than your own approach.Or storing  objects using a flag to find matched keys:Output:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
