Natural Text
I'm currently learning Python and began a project to create a baseball sim for the 2000-2005 MLB showdown card game. The programs contains events of the baseball game as print statements in the middle of separate pieces of code ("Jeff hits a single", "Bobby hits a fly ball for an out", etc). I often will take out the print statements if I want to run a lot of games at once. My goal, for feasibility reasons, is to tell Python to not print certain statements (say, in a specific span of lines) even though the code says print " ". Is this possible?example:THEN: print simulation results
Can you create a global variable which you can check to decide how much you want to print ? By doing that you can control the amount of logging as you require.
Yes, you could put all the print statements into an  structure eg..Then it is just a matter of setting  to  if you want to print or  if you dont.
You could use Replace All to replace  with .When you're ready to print again, you could do the opposite: Replace  with .
A hack, sure, but why not override the print function for a while?output:see also Is it possible to mock Python's built in print function?Finally, the suggestion to use the logging module is spot-on.  Though that module can be tricky to use well.
You can use the logging module for this:https://docs.python.org/3/library/logging.htmlhttps://docs.python.org/3/howto/logging.html#logging-basic-tutorialThe logging module has several different levels.Level   ---------  Numeric valueCRITICAL    ---50ERROR    -----  40WARNING --30INFO    ---------20DEBUG   -----10NOTSET  -----0You assign messages a level. For instance,  is an INFO level message which prints . If the level of the logger is less than or equal to the level of the message, the message will be printed.So if you want to turn a bunch of print statements off, you would just make the statements all the same level, and then turn the logger to a higher level. 
Python's  outputs to . You can put your own buffer for STDOUT.


Answer URL
https://docs.python.org/3/library/logging.html
https://docs.python.org/3/howto/logging.html#logging-basic-tutorial
