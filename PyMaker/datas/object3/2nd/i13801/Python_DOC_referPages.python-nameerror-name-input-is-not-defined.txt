Natural Text
I am trying to construct a program on Python. This is a piece of the program where the problem is. When I run it in Python it runs through the line 'task_name = input("What is the task") but when I put it through Python visualizer it gave me this error: NameError: name 'input' is not defined. This piece of program below is just the start of my program, after it has run this piece I need it to run through the rest of my program but instead it stops and repeats just this piece. Im sorry if I haven't explained this very well, just ask if you don't understand. Please answer, I need to finish this program by tomorrow!I have used python visualizer http://www.pythontutor.com/visualize.html#mode=display and I am using Python 3.2.1.1
The while loop currently will run forever because the case is always true, newTask == "y".  In order to exit the loop newTask needs to be set to something other than "y" causing the case to become false, newTask = "n".On the other hand it appears that your program doesn't need to be within a newTask while loop at all, because you are storing data a single number and string.  So you could rewrite your program like this: 
The error you are getting is because Python Visualiser doesn't have a mechanism to allow the user to input data.You'll need to Download and install Python in order to use it interactively as you would like to.AdditionalThe first while:is producing an infinite loop, because it does not set  anywhere within the loop.  may be where you intended to use .Alternatively I'm not sure the loop right for what it looks like the purpose of the loop is - the code below may be more appropriate:Another alternative is that you have failed to indent the large portion of the code after your  line which is causing the infinite loop rather than looping over and over your code. In this case you will need to incorporate the loop above into your  loop.
I'm not going to rewrite your whole program, but I'll give you a few pointers that should help out.On a side note, why did you try to vandalize your post? Once answers have been posted, it cannot be deleted (except in certain circumstances by members of the community, and even then it's still visible to high-rep users). Everything posted here is licensed under CC-BY-SA 3.0 with attribution required, as listed at the bottom of every page. Basically, as soon as you post something, it's the same as editing a Wikipedia article - it's there forever, even if someone edits it. Basically, getting it deleted entirely requires the internet equivalent of an act of a god (the Stack Exchange sys admins).At any rate, if you haven't already, download Python 3.4.3 (the current version of Python 3) and install it on your computer. If for some reason you can't do that (public/shared workstation, etc.), then use a free cloud site like PythonAnywhere - all an account requires is an email address. If you're working on your own computer, I'd also highly recommend installing a programming editor like Sublime Text 3. It includes lots of cool features like syntax highlighting, automatic bracket matching, etc.**If you want to trick it out a bit, install Package Control, then install the following plugins: Anaconda, Python Improved, and the Neon Color Scheme. I wrote the last 2 to aid in Python programming. They're not required, but are very helpful for me. YMMV. Just a note - maybe save all this stuff until after your assignment is done. It's very easy to get distracted with shiny new stuff :)OK, on to the program itself. Load it up in Sublime or PythonAnywhere, both of which have line numbers (a very important feature if you're programming). I'll be using the line numbers of the program as currently shown in your question. First thing: watch your indentation. Sublime has a great feature where you can have vertical lines showing where your indented blocks should be (if you install , they're dark gray and unobtrusive, while still visible). They should be turned on by default. Remember that indentation is extremely important in Python, and variable indentation can cause errors. Each indented block should be 4 spaces deep, no more and no less, and it is very highly recommended that you not use tabs. Lines 6, 7, 9, and 10 are over-indented (9 spaces for 6, 7, and 9 instead of 4, and 5 spaces for 10 instead of 4 as compared to the line above it). In Sublime, you can highlight some text, then change its indentation using Ctrl[ to move it left, or Ctrl] to move it right (use âŒ˜ instead of Ctrl on OS X). There are more indentation issues in the second  loop as well.Line 2 starts a  loop that goes until Line 11. The thing to remember about  loops is, you have to have some way of changing the loop's test condition within the loop itself. The test condition here is . Unless  is changed to some value other than  inside the loop, it will continue forever. A  statement or an unhandled  or  will also kill a  loop. Since  is only changed at the very bottom of the next  loop, you may want to indent that entire second loop so that it is contained within the first one. I don't know what the ultimate purpose of your program is, so you'll have to figure that one out on your own.The second  loop starts with the following:Assuming you fix the issues with the first loop, this will do nothing, and may lock up your program. Start up Python on the command line (or open a new Python 3.4 console in PythonAnywhere) and run the following:You'll getas the output. The  function's signature is meaning that if 1 argument is passed,  produces a sequence from 0 to the integer before  (it's very important to remember that). If 2 arguments are passed, the sequence goes from the 1st () to the number before the 2nd (), in increments of 1 or  if it is present.  can be smaller than , producing a decreasing series of numbers instead of increasing, if  is also a negative number:Your call to  produces nothing, so nothing below Line 13 will run. It will just loop back to Line 12, which will still evaluate to  because  hasn't been changed, so this loop will run forever as well.Hopefully this will give you enough to get started. Think about each block of code, and the condition(s) you set for executing it. Make sure that the conditions being tested get altered at some point, otherwise you'll end up with either infinite loops, or code blocks not being executed at all. Make heavy use of the interactive console to test code snippets to make sure they do what you think they should do before putting everything together.Good luck!


Answer URL
https://docs.python.org/3/library/stdtypes.html#typesseq-range
