Natural Text
I'm trying to write a code which will check, if a sum of some combination of elements of a given list is equal to the largest element in this list. I wrote such a code:I get the "false" string (which is an obvious mistake). Could somebody please point out, what's wrong with the above presented code?
You are making several mistakes:You are confusing values with indices. The  loop gives you the values from the list, not indices into the list. Only because your values are integers does your loop not immediately break.In other words,  is not set to , , , but to ,  and .You immediately return  from the function when you found a combination that doesn't sum to the maximum. The first sum is  (value  then translates to  which produces ), but you don't then let the loop continue.To fix these mistakes, use a loop over the results of the  function and only return  when you tried all combinations:Your 'different combinations' are still pretty primitive. You could try and produce all possible combinations of 3 numbers with  and increasing lengths:Now the order in which your elements are arranged no longer matters;  will return true because  produces 6.Demo:
This performs the sum over elements only once:Examples:
You are always returning in the first loop itself, if the value is equal (which it wont be unless the first element is the largest element , you return  ) , otherwise you return , instead do not return  immediately, only return  when you do not find any cases.And you are using the values as indices, instead you want to enumerate over  and use the index as indicesExample -Example/Demo -
Keeping in mind that addition is associative and commutative...We see that we do not need to find all the possible combinations. We can just find all the permutations of size (n-1) and add up elements until we find one that matches the .


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
