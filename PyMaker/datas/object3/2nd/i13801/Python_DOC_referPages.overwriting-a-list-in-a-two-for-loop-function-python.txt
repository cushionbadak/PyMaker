Natural Text
So let's consider that I have the following array:Now, I construct the following function:Then, when I call my function on my arr1, the initial array is modified (mylist).This is really strange behaviour, because I'm doing a copy of mylist and onlymodifying the copied array List. Anyone can explain to me what is happening? 
Don't know why people downvoted this questions, as is quite valid.Now, consider this:As you can see, the  creates a copy of the list, but this copy is not a "deep" copy and if the list contains mutable objects (lists, dictionaries, or objects) the copy will just copy the reference to those objects instead of the content on them. For example:That is because the reference to the first element list got copied to the new list, not it's content or a full copy of the list, it still is the same list.As already mentioned, use :https://docs.python.org/3/library/copy.html#copy.deepcopyYou can read there:The difference between shallow and deep copying is only relevant for compound objects (objects that contain other objects, like lists or class instances):A shallow copy constructs a new compound object and then (to the extent possible) inserts references into it to the objects found in the original.A deep copy constructs a new compound object and then, recursively, inserts copies into it of the objects found in the original.Another option for your special case is to use a list comprehension like this:This will also copy the list that are elements.


Answer URL
https://docs.python.org/3/library/copy.html#copy.deepcopy
