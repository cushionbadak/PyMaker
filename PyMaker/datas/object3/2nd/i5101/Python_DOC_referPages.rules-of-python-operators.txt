Natural Text
Like most programming languages, Python has operators whose function is simple at first glance, but actually much more complicated when you think about how they interact with the type system. Even a purely numeric operator like  has to deal with various combinations of integers and floating point numbers, as well as booleans (some operators treat these as 0 and 1), and  also has to deal with strings, and does it allow sequences? Bitwise, equality and comparison each have their own rules.Is it documented anywhere exactly what the rules are? I don't mean tutorials or suggestive heuristics, but an explicit, exact list of all the rules? What you'd need if you were implementing a dialect of Python 3? https://docs.python.org/3/reference/expressions.html doesn't say, and the source code is not optimized for this use case.
Thanks to astronavt on #Python, the answer is:https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex


Answer URL
https://docs.python.org/3/reference/expressions.html
https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex
https://docs.python.org/3/reference/datamodel.html
https://docs.python.org/3/library/numbers.html?highlight=numbers#module-numbers
