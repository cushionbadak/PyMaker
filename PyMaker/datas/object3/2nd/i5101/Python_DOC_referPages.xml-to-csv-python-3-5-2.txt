Natural Text
I am trying to convert the following XML to CSV. The catch is every single entry might not have a value so it returns a . For example, in the XML shown below not every "entry" will have a "rule". If this happens I would like the CSV file to contain either nothing or a generic value such as "EMPTY". I would like the CSV file to look something like this:By using the list comprehension shown below I was able to avoid the  error. However, it appears that formatting the data in the CSV is where I need some assistance.
You are not handling your entry subelements; you are merely turning each entry to text and removing the XML tag markup. You need to produce a list or dictionary with each subelement entry teased out separately.If you produce a dictionary of the nested elements, then the  class could handle filling in empty columns for you, without additional coding:Here, the  argument tells the writer how to handle missing values in each row.  is passed in as the field names, so the writer knows what keys to expect in each row dictionary. simply turns each nested element in an entry into a key-value pair in a dictionary, with the  function doing the work of turning element contents into text. TheFor your demo XML data, this produces:This doesn't actually contain any empty elements, but when I add some, you can see that  is used to fill those in:As a final note: consider installing the  library, and use the  parser in BeautifulSoup:This ensures that your XML is parsed correctly at all times (the HTML parser is fault-tolerant in ways that XML should not be, and is case-insensitive, which could cause issues with mixed-case XML data).


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictWriter
