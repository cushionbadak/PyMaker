Natural Text
I have a dictionary which looks like:need it to look like:What I am doing right now:which generates:any idea how I could avoid eliminating those who do not meet the condition?
You're almost there. Try:(as mentioned by jp_data_analysis, avoid naming variables after builtins like )
This is one way.Note: do not name variables after classes, e.g. use  instead of .
You can use dictionary comprehension:Also, it is best practice not to assign variables to names shadowing common builtins, such as , as you are then overriding the function in the current namespace.
Your code is almost correct. Your problem is that you're filtering out any lists bigger than . What you need to do instead is simply place them in the new dictionary unchanged. This can be done using the ternary operator. It has the form .Also, if you want a more general way to pad every list in your dictionary to be of equal length, you can use  and .Here is your code with the above modifications:
A generalized way:
You were very close, just use :Like others have said, don't use reassign reserved names like , it's a one way street down to debugging hell.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.update
