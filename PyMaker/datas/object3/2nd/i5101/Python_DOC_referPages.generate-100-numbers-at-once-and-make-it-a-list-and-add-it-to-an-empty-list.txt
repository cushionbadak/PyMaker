Natural Text
I need to generate 100 numbers from 1-500 and append it to an empty list, but I don't know how to fix my code. There is a <'none'> at the end when I print it. And when I used a len function to count a, it only says 1, so it didn't really added the 100 numbers. 
On python-3.6, you can use , and extend  by this function's return value:Although, if you're starting off with an empty list and adding nothing before this step, it would make more sense to just initialise  as Without doing any empty-list initialisation before.If you're on older versions of python, use  in a loop.Or, Alternatively, From the docs, I believe the upper bound is inclusive (hence, ). 
This returns a single random number, so the plural name “nums” is misleading here.The  function prints something, in this case the generated number, but itself has no return value. So  will be .This could theoretically append the generated number to the list. However, as we established,  is , so this will append  to the list. Furthermore, this line is outside of the loop, so this will only run once, and would only add a single of your 100 numbers.You should do something like this instead:You can also use a list comprehension here, to make it simpler:This will have the same result.You could also use  which on its own is already capable of generating a list of random numbers with a specified size. So this would work just as well:
I believe this is what you are looking for.  does not return anything, you cannot add  onto a list. In fact, it's not clear why you need 2 variables for this.An alternative solution which avoids loops uses the  library:If performance is an issue; e.g. for many, large random lists; here is benchmarking versus a valid list-based solution using :
randint() function generate only one random number. You can generate the random in a for loop 100 times & simulatenosuly append in the list so when outside the for loop ,the list 'a' have the 100 random numbers & this can be verified through length len() function .Also I am attach the screenshot of the output.
Your code was correct just a little mistake that is you don't have indented the , So that become out side the scope of  loop. Try this code :) .


Answer URL
https://docs.python.org/3/library/random.html#random.choices
https://docs.python.org/3/library/random.html#random.randint
https://docs.python.org/3/library/random.html#random.choices
