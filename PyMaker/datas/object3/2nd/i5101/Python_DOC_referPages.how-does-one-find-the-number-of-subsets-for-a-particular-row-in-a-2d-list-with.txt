Natural Text
Please excuse the title, it is hard to express the problem correctly without showing an example.  I have a very large 2D array with rows of varying sizes, for example:I need to return a dictionary, it has to look something like this:The  tuple is found to have a value of 3, since it occurs twice as itself and once as a subset (less than or equal) to the tuple .Normally I would use something like this:Which, for big2Darray, would give:My question is this, can Collections' Counter function be used so that it gives the counts for the subsets as well, like explained above?  If not, is there any comparably efficient method to return my desired dictionary output for subsets?  Thanks so much!Edit 1:  Just for further clarity! I do not want to return all subsets, such as {('a','g'): 1, ('a','r'):3}, and so on.  I only want to return the counts for the unique rows in the 2D array. So in this case the counts for: ('a','g','r'), ('a','r'), ('p','q'). Edit 2: The row ["a","r"] should be treated as equivalent to ["r", "a"], and so should the tuples ('a','r') and ('r','a')
You can use  with  here.Demo:Output:In the above code, in order to make sure  and  are equivalent, you can sort them beforehand, and add them as tuples to . The other more efficient way would be to use , as shown in the other answer. 
Here is one solution. It uses  instead of . The dictionary keys are . If you need ordered tuple dictionary keys, see @RoadRunner's solution.


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset
