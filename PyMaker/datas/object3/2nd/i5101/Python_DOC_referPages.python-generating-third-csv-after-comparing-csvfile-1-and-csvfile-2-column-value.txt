Natural Text
I have two csv files that contain:  CSVFile1:CSVFile2:I want to make a new CSV file that takes the difference of column values. The result should be what changed between CSVFile 1 and CSVFile 2 and I want to see this difference in a new csv.I have tried:
Based on what I think your code is trying to do (output all the lines in filetwo that aren't in fileone), you could use the array.count() command.file.readlines() returns an array and so both fileone and filetwo can be used like normal arrays. If the line isn't in fileone, the count of the line will be 0, for example:Will output:So, in your program, you could replace:With:EDIT:File handling in python is accomplished through the open() function, which takes the file and the mode to open with ( for writing (which will overwrite the file completely) or  for reading). So for example:Would open the file, which can then be written to using . The file can then be closed when finished with using . All this put together gives us:
This is another answer following a reclarification of the problem. Solving this problem (finding the difference in value between the two files) is rather complicated and needs to broken down into several steps:The opening of the both files and reading them into python variablesConvert the raw CSV file into a python array of floatsFind the difference between them and put the results into a new arrayConvert this results array into a raw CSV file and save it to a fileStep 1:Opening a file in python is done using the  function, which takes both the files location and a mode ( for reading or  for writing, along with others). After the file has been opened, we can the use the  function to get all the lines in the file, returning them as an array, with each item being a line. Using this:If, for example, we have the files :And :Then, at the end of this segment,  equals  and  equals Step 2:Step 2 is split into two phases - the obtaining of the final data and then the converting of the text string to a number (a float in this case). In stage one, I utilise the  function to seperate the entire row of data into the individual data points. For example:Would output:Notice however, that the numbers are still strings, which is why we require the second stage, where I iterate over each seperate data point and convert it to a float (therefore, when you create your data file, you should remove any column headers to stop an error happening). I placed all this into a two seperate functions (one for getting the data, one for converting it to a float) which I then called on both the datasets.After both segments are called,  is  and  is  if we continue to use the same files from above.Step 3:In step 3, we find the numerical difference between the two arrays. First, I create an array that will hold the differences between the datasets. Then, the amount of rows in the dataset as well as the amount of columns is determined using the  function (it goes without saying that to compare the two datasets, they both have to have the same number of rows and columns).Then, I go through each row in both datasets, creating a new temporary row that will then be appended to the difference array. Before that, each column is gone through and the number in the second file is taken away from the number in the first file to find the change between them. This is also converted to a string in the same line - this is important for later.After this, the  array is .Step 4:Finally, the difference needs to be converted to a raw csv file and saved to disk. To do this, I use the  function, which joins the items in an array using a certain string. This only works on strings though, which is why we had to make the conversion before. For example:Outputs:I create an  string to hold the output file and then I go through each row and join the data points together with a  and then add a newline character  to the end. Then I write to a file - this is as easy as reading to a file, I simple use the  function again, using the  mode (warning - this will delete any file that already existed there). Then a simple call to the  function and the program is done. Like this:The contents of the  file is:Conclusion:If you have any questions or want any clarifications, feel free to leave a comment.


Answer URL
https://docs.python.org/3/library/functions.html#open
https://docs.python.org/3/library/io.html#io.IOBase.readlines
https://docs.python.org/3/library/stdtypes.html#bytearray.split
https://docs.python.org/3/library/functions.html#len
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/library/functions.html#open
