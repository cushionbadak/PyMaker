Natural Text
If I have a list  of tuples in python:How do I obtain a list containing common elements between 2 or more such tuples?Assume that both the tuples in  and the the elements in tuples are already numerically sorted.For this example, the intended output should be:Below is my working so far:And this is the corresponding output:From above, only  gave the intended output, but I'm not sure what happened to  and .You may use this alternative input to test your code, and it should give the exact same output:
Explanation:Given your input, you first need to flat your list.In case of method #1 your  will be  object in in case of method #2 it will be  object. Both will behave same for iteration.Now you can count the elements in your flat_list. If they are greater than 1 they are duplicates.or you can use more pythonic list comprehension.
You need to flatten your list of tuples. You can do this using Or you can also use  to do the same like, However this doesn't require iterable unpackingAfter this step you can use  to count occurance of each element in flat list and filter once which occurs more than one.Then finally filter 

Here's an answer that solves it by only passing through once instead of twice and builds result as it goes (not sure if its faster or slower in practice for super large )And without 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
https://docs.python.org/3/library/collections.html#collections.Counter
