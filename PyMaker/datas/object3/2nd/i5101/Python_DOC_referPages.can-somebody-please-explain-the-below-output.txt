Natural Text
The output is:If variable 'b' which holds the function 'adder' remembers the scope of variable (x=3), shouldn't the output be '4' no matter how many times you call it.
Links below should provide more info:Python closuresPython nonlocal statementWhat this boils down to in the end in your example:You instantiate two separate function objects in variables  and You invoke  once, it increases the value onceYou invoke  three times which increases the value three timesSince the value that gets increased in the closure is defined in the method that increases it as , the value is stored after each change that is done to it in the parent function, in the  variable.
The line  is modifying the  variable . So, the next time the  is called, the value of  has been incremented.However, also note that each  function object (the function returned by ) "owns" a separate copy of . Which explains why the first calls to  and  output .


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-nonlocal_stmt
