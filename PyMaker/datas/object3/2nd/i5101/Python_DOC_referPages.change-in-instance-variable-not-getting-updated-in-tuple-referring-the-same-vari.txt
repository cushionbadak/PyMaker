Natural Text
For this code when I change  to  using  and then call  it does not return the updated value of . How do I fix this kind of problem generally (this is a basic example)? 
You did not change the . You are assigning to  only when initialization of  occurs, that is, when you call .Also Python doesn't keep references like pointers in c so changing one would not change the other. To prove this run this code:The id are the memory location of the object, and you can see it first starts out the same, but then when you change  the memory location in the  doesn't changeYou have to update  in your . If you want a dynamically changing co without manually updating it, write a method to retrieve co.Option 1:Option 2: You can add to method 2 with a decorator  to not make it a function call but at this point, I have no idea what your requirements are.
You should define  as property of class via using  decorator. For example:Sample Run:Here, on calling  will return the dynamic value of  each time is called.Issue with your code: In your code, when you initialized  in your , a new tuple  was created holding the value of  (which was not holding the reference to these variable). Hence, when you updated , it was not updated in your tuple object.
You have to call function with the name it is definedSecond you can use global keyword alsoFor example


Answer URL
https://docs.python.org/3/library/functions.html#property
