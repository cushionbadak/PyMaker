Natural Text
It's entirely possible that this question is a duplicate, but I don't know what this concept is called so I don't even know how to search for it.I'm new to Python and trying to understand this function from a Caffe example:I figured the parameters , , etc in the  function definition are default initial values, but then what do , , etc in the  call mean? Is it kind of like a name/value pair?If nothing else, can someone please tell me what this is called?
Those are keyword arguments.  is the name of the parameter when the function was declared, and  is the value that's being passed in. Reasons to use keyword arguments:You can give them in any order, instead of only the order in the function definitionWhen you look back on the code later, if the parameters have good names, you can immediately tell the purpose of the passed variables instead of needing to check the function definition or documentation to see what the data means.
You have a call expression using keyword arguments. Each  pair assigns a value to a specific parameter the function accepts.Keyword arguments can be used in any order. If the named parameter in the function signature has a default value, the value in the call overrides that default. If you omit a specific argument, the default value is used.
In Python, arguments can be provided by position, or by keyword.For example, say you have the following function:You can call it as , so in the callee scope,  would be .  and  will be assigned their default values -  and , respectively - so you don't have to provide them explicitly.You can also call this function using keyword arguments (that's the term you were searching for). The exact same call with  as a named argument would be .Of course, we would rather just use  since it's more concise, unless there are specific reasons to use named arguments. An example of such reason is if we wish to provide a non-default argument for , while leaving the default argument for  unchanged: .


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#keyword-arguments
