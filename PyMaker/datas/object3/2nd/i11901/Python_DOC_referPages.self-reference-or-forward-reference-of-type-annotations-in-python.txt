Natural Text
This question already has an answer here:Type hints: solve circular dependency                    1 answer                I'm trying to figure out how self-reference of types work with python3's type annotations - the docs don't specify anything regarding this.As an example:This code generates the error:This is using Python 3.5.1
PEP 0484 - Type Hints - The problem of forward declarations addresses the issue:The problem with type hints is that annotations (per PEP 3107 , and  similar to default values) are evaluated at the time a function is  defined, and thus any names used in an annotation must be already  defined when the function is being defined. A common scenario is a  class definition whose methods need to reference the class itself in  their annotations. (More general, it can also occur with mutually  recursive classes.) This is natural for container types, for example:...As written this will not work, because of the peculiarity in Python  that class names become defined once the entire body of the class has  been executed. Our solution, which isn't particularly elegant, but  gets the job done, is to allow using string literals in annotations.  Most of the time you won't have to use this though -- most uses of  type hints are expected to reference builtin types or types defined in  other modules.


Answer URL
https://docs.python.org/3/library/typing.html
