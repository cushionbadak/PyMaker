Natural Text
The following table shows varying abstract base classes that are used all over python. However, I am a bit confused exactly (in this context) what is the difference between the  column and the  column. Is one optionally implemented and the other not? I've been mulling it over and every one of my "theories" doesn't seem to be right.reference 
Anything in the Abstract Methods column, you have to implement yourself. The ABC provides default implementations of the methods in the Mixin Methods column, implemented in terms of the methods you have to write.
The abstract methods are those you have to define when you inherit from this ABC.The Mixin column lists the methods you can use afterwards, you get them for free by inheriting not from  but from this ABC. If you define , you can automatically use  afterwards for example.Another benefit of inheriting from these classes is that anyone can see afterwards, what your class was meant to be, because it is  and any instance is . But this is written in the tutorial after the table you have posted.


Answer URL
https://docs.python.org/3/library/collections.abc.html
