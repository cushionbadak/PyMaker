Natural Text
I am working on a caching system. The idea is it can detect if the function that created the cache object has changed since its initial creation, therefore invalidating the cache file.I stumbled across python's  attribute, that is the compiled function's byte code representation. I can't find much additional documentation on the matter, and was wondering what its behaviour is across different executions of a single program.I assume that because python is an interpreted language, the byte code will be platform independent. I also assume that its byte code generation is deterministic for a given input. Am I right in thinking so?
The function.__code__ attribute returns an object encapsulating the virtual machine bytecode.Another way to access the information is to compile explicitly a file.Here is a file :Then, you can type in the python prompt:A simple and funny way to access the bytecode, in a very legible way, is to run it in a terminal (here,  is the disassembler):Which outputs:This bytecode is not platform dependent. The VM is.About eventual changes in bytecode, I have taken this file, and disassembled it twice:Then a simple diff shows that:The changes are mainly regarding imports, where the address of the loaded modules are not the same across the compilation.


Answer URL
https://docs.python.org/3/library/inspect.html
