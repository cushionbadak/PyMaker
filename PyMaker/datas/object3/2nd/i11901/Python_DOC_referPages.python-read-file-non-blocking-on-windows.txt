Natural Text
I have a programm on windows (Win7) that writes to a txt file every x seconds.Now I have a python script that reads this txt File every x seconds.When the python script reads the File and at the same time the other Program wants to write to that file - The writing program crashes (and displays permission error). Since I cant modify the way the Program writes to the txt file, I have to try to open the txt File without blocking the writing program.Does someone know what I could do in this situation (reading without blocking)I would be very happy for every tip on this topic!The code for the Program that tries to read the File goes something like this:I have to open the File with "codecs" because its in unicode.
After a long time, I managed to create a function that does it for you in ctypes. Keep in mind this will only work if the process didn't acquire "Exclusive" access. If it did, you're out of luck and will need to use a shadow copy service like shown here or implemented here.Anyway, here you go:The function opens the file while sharing the read and write handle allowing multiple access. It then converts the handle to a normal python file object.Make sure to close the file when you finish.
Recently I had to do I/O reads on stdin,stdout in python with cross-platform compatibility.For linux:for linux we can use select module. It is wrapper implementation of posix  function. It allows you to pass multiple file descriptors, wait for them to get ready. Once they get ready you will be notified and  action can be performed. Here is little code that will get you an ideahere nodejs is a docker environment with nodejs image  For windowsThis code example has both read and write operations with stdin,stdout involved.Now this code wouldn't work with windows OS because on windows select implelentation does not allow stdin, stdout to be passed as arguments.Docs says:File objects on Windows are not acceptable, but sockets are. On Windows, the underlying select() function is provided by the WinSock library, and does not handle file descriptors that donâ€™t originate from WinSock.  First I must mention that there are lot of libraries for non-blocking I/O read on windows like (python 3), (for python 2.7) ,  and then there is 's  that alert you if your socket is ready to  data. But none of them allowed me to read write on  giving errros like etc.There are some other libraries like  that I haven't tried.  Now, To implement a functionality like in above mentioned code on windows platform I used . here is my code:So the best option for me turned out to be threads. This article would be nice read if you want to know more.


Answer URL
https://docs.python.org/3/library/select.html
