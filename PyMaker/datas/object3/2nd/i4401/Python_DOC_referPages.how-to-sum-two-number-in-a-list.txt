Natural Text
what is the solution of this by  python 3 ? ****Given an array of integers, return indices of the two numbers such that they add up to a specific target.You may assume that each input would have exactly one solution, and you may not use the same element twice.``
use  which combines the elements of your list into non-repeated couples, and check if the sum matches. If it does, print the positions of the terms:
This question has 2 parts:Retrieving the 2 items in a list which equate to the target Retrieving their index valuedef get_index_for_target(nums, target):
For each entry in the list, check whether there's any other numbers in the list after that number that add up to the target. Since a+b = target is equivalent to b = target - a, you can just take each element, look at all the numbers after that element, and check whether they are target - element. If so, return the indices.
This function iterates through all the numbers in the list and finds the sum with other numbers. If the sum is equal to the target, it returns the indices
The main problem with solutions testing all possible couples (with imbricated loops or ) is that that are O(n^2), as you basically test all possible combinations of two elements among n (there are n*(n-1)/2 such combinations) until you find a valid one.When n is large, you will need a more efficient algorithm. One possibility is to first sort the list (this is O(n * log(n))), finding the solution can then be done directly in O(n), which gives you a solution in O(n * log(n)).We sort the list first, then add the first (smallest) and last (greatest) values. If the sum is too large, we can remove the largest value. If it's too small, we remove the smallest one, until we reach the exact sum.We can use a collection.deque to efficiently remove values at any end of the list.In order to retrieve the indices, we keep them besides the values in tuples.
We can use to pointers, at the beginning and at the end of the list to check each index by the sum of the two numbers, looping once.Note: In a edge case, a guard of check before the loop, in case: target is a negative value, list is empty, target is null.


Answer URL
https://docs.python.org/3/library/collections.html#deque-objects
