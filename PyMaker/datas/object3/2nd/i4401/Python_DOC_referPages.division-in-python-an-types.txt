Natural Text
I have a code which part of it looks like this,The problem arises when I use "/"  to get "A", Since I am using "/", I always get an extra decimal point. For example 5/5=1.0 or 4/2=2.0 etc, which python interprets it as a float (I am using 3.6.5). Hence whatever the result is my code stuck at line2.When I use // the same thing happens. I get 5/2=2 which its float actually but it appears as an integer. Since my code depends on the type of this division how I can solve this problem?A=(-1//2+(int(math.sqrt(1+8*t)))//2) its a actually the formula for finding the roots of the quadratic equation (where in the equation a=1 and b=1 and c=-2t for ax^2+bx+c) I need only the integer roots with positive values
What you're trying to do won't work. For two integers  and ,  is always a , even if it happens to be integral, and  is always an , even if it has to truncate (throw away) a fractional part. So testing  doesn't test for anything except which of the two you used.There is a method  that you can use, and that works fine for integers divided by 2â€”but it doesn't work once you're using . Explaining floating-point rounding issues is a big enough job that it takes up a whole paper that's so important that it's been included by reference in multiple language specifications, but the short version is that  could very easily give you a number that's a tiny big bigger or smaller than an integer, so  will give you the wrong answer.What you probably want to do is something like this:The  function will round a float to the nearest integer. The  function will then check whether the resulting integer is "close enough" to the original float. You should read the docs on  to understand exactly what it does, but in this case, I think the default values will be fine, unless you're dealing with huge integers.


Answer URL
https://docs.python.org/3/library/stdtypes.html#float.is_integer
https://docs.python.org/3/library/functions.html#round
https://docs.python.org/3/library/math.html#math.isclose
https://docs.python.org/3/library/stdtypes.html#float.is_integer
https://docs.python.org/3/library/math.html#math.isclose
https://docs.python.org/3/library/functions.html#round
