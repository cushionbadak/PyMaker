Natural Text
I search the fastest way to draw many couple of two values from a list so those two values are always different in the couple. The naive method I coded is very slow, so I'm pretty sure that they are more efficient way to do that.
My suggestion is to use  to cache all combinations in a list before drawing pairs from it with :By testing your solution with IPython, it takes an average of 489 ms:My suggestion is more than 25x faster:Note that for ,  is different than :If in your case  and  are the same information, then use :Just one more thing: the major problem with your solution is the  operation, which is quite costly. Instead of creating an empty array and modifying it with the selected couples, simply creating a new array from a list comprehension can greatly speed up the solution:Look how faster it is:
This should be fast enough for most applications, see timings below:Timings compared with  solution:
You could use method combinations from itertools.The difference with Matheus Portela's answer is that combinations are emitted in lexicographic sort order, so ['A','B'] will yield ['AB'], wherease perumation would yield ['AB', 'BA']


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.permutations
https://docs.python.org/3/library/itertools.html#itertools.combinations
