Natural Text
This question already has an answer here:Comma separated inputs instead of space separated inputs for Argsparse                    2 answers                I want to use argparse's {choices} parameter, but allow the user to input any number of items from choices. For example if choices is [1,2,3], I would like the following to be valid:etc.However it seems like choices doesn't accept a comma-separated input when using nargs="+". Is there any way around this? I still want to enforce that the passed in options are within the set of choices that I defined, to error-check for weird inputs.
This one-line code gives you all possible subsets of your choices.
I agree - You would think that the API would allow someone to do that by now right?Well anyways, the workaround I've always used was the following:AKA: Take in a string and process it yourself.
Here is my approach to achieve this  :
some runsThe shell, together with the interpreter, splits the input on spaces, and provides a list of strings in .  That's what  handles.With , the  action accepts a list of strings (to the end or next flag).  Each string is passed through the  function, and the result compared to the  (if provided). In this case,  is , so the choices can be integers as well.  Without the ,  would have to be .If I change the argument to:it will accept some strings with commas:I didn't include the '1,2,3' choice, so it rejected that.  Note also that I dropped the  , since  will fail.So if you need to accept '1,2,3', do your own split and choices test after parsing (or possibly as a custom  class).


Answer URL
https://docs.python.org/3/library/argparse.html#nargs
