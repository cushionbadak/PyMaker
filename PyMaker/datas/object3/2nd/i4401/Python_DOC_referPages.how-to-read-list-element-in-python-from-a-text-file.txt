Natural Text
My text file is like below.I want to read every second element from the list mean all the text tweets into array.I wrote but when I see the output, It just takes 2nd character of every line. 
When you read a text file in Python, the lines are just strings. They aren't automatically converted so some other data structure.In your case, it looks like each line in your file contains a JSON list. In that case, you can parse the line first using . This converts the string to a Python  which you can then take the second element of:
Rather than guessing what format the data is in, you should find out.If you're generating it yourself, and don't know how to parse back in what you're creating, change your code to generate something that can be easily parsed with the same library used to generate it, like JsonLines or CSV.If you're ingesting it from some API, read the documentation for that API and parse it the way it's documented.If someone handed you the file and told you to parse it, ask that someone what format it's in.Occasionally, you do have to deal with some crufty old file in some format that was never documented and nobody remembers what it was. In that case, you do have to reverse engineer it. But what you want to do then is guess at likely possibilities, and try to parse it with as much validation and error handling as possible, to verify that you guessed right.In this case, the format looks a lot like either JSON lines or ndjson. Both are slightly different ways of encoding multiple objects with one JSON text per line, with specific restrictions on those texts and the way they're encoded and the whitespace between them.So, while a quick&dirty parser like this will probably work:You probably want to use a library like :The fact that the quick&dirty parser works on JSON lines is, of course, part of the point of that formatâ€”but if you don't actually know whether you have JSON lines or not, you're better off making sure.
Since your input looks like Python expressions, I'd use  to parse them.Here is an example:Output:
May be you should consider to use json.loads method :There is more pythonic way in @Erik Cederstrand 's comment.


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
