Natural Text
I have a dictionary whose values are a list:Now I am accessing them like this: But It makes so confusing as I don't know what is at index 0 in my list for a particular key.For this I have another list which helps me what is at index i. So know this makes easy to access the values of my dictionary. Like I want to use:  instead of Is this achievable in Python. Because I tried reference from Map two list in to dictionary But how do I map a dictionary values to a list
Yes, it is possible. Just restructure your dictionary into a nested dictionary:Result:Extendible version with :
This is a clear use case for classes.Instead of having lists that represent companies like , python gives you the possibility to model that as a class:This gives you a much nicer interface than a list, because you can access the attributes by name rather than by index:If you're lazy and don't want to define the  class manually, you can use  to reduce the amount of code you have to write:You can also convert your dict of lists to a dict of  instances easily:
If your "attributes" are always exactly , you should consider using namedtuples or the new  of Python 3.7.Here is an example using namedtuples:results in 
You should use named tuples.Your code could look like this:
If you don't want to change the dictionary, you can use another dictionary to map the indices to the corresponding values.


Answer URL
https://docs.python.org/3/tutorial/classes.html
https://docs.python.org/3/library/collections.html#collections.namedtuple
