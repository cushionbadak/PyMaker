Natural Text
Trying to match links that contain certain texts. I'm doingBut that throws a TypeError: argument of type 'NoneType' is not iterable.The correct way of doing it is apparantlyWhy is the additional  necessary here?
There's a simple reason: One of the  tags in your HTML has no  property.Here's a minimal example that reproduces the exception:Now if we add a  property, the exception disappears:What's happening is that BeautifulSoup is trying to access the  tag's  property, and that returns  when the property doesn't exist:This is why it's necessary to allow  values in your lambda. Since  is a falsy value, the code  prevents the right side of the  statement from being executed when  is , as you can see here:This is called short-circuiting.That said,  checks the truthiness of , and  is not the only value that's considered falsy. So it would be more correct to compare  to  like so:
The additional  avoids the problem that you had, i.e . Try calling the lambda function with  as the argument:The first  in  tests whether  is "truthy". If it is the rest of the expression is evaluated. If it is not "truthy", e.g. it is None, then the second part of the  expression is short circuited and not executed. This avoids attempting to perform the  operation, thereby avoiding the problem.
The problem is that an  tag may have no  part and in this case you get a  (that cannot be used with the  operator).


Answer URL
https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not
