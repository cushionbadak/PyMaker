Natural Text
I have a string that looks like this:Can anyone tell me what is the proper way in python to get a dictionary out of it where the dictionary should beI'm asking this because right now the only code I can think of is a pretty dirty one with a lot of list, splits and replaces and I'm quite sure that this is very wrong way to do it :D.Thanks a lot in advance.
You can use  with a dictionary comprehension:
As eval is generally regarded as unsafe and python dictionaries are "usually" JSON compatible, as long as all values are also JSON compatible.I would recommend:for dealing with trailing commas:docs for JsonComment: https://pypi.python.org/pypi/jsoncommentref: Can json.loads ignore trailing commas?
As others have pointed out, the issue is the non-standard trailing comma at the end of the list elements of the json string. You can use  in the example.However, if you need to write your own json parser to deal with json that the Python library parser does not handle, you can use PyParsing to do so. An example JSON parser, written in PyParsing, can easily be adapted to handle json with optional trailing commas:And the result is the same as ast parsing it:The advantage of 'rolling your own' in this case is to have control of what non-standard elements you have and how you want to handle them. (Thanks to Paul McGuire for the PyParsing module and the json parser...)
You could do this:    


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
