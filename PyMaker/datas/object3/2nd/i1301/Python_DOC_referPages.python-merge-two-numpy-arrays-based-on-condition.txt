Natural Text
How can I merge the following two arrays, by looking up a value from array A in array B?Array A: and Array B:The goal here is to create Array C, by looking up the IPv4Address from Array B in Array A and comparing them, and getting the corresponding array's second value and storing it:Array C: The ip addresses are of this type: https://docs.python.org/3/library/ipaddress.html#ipaddress.ip_networkHow can I achieve this?edit:Please note that the merging is conditioned on the IPs matching, so the resulting array C will have the same number of arrays as the Array B, but it will have one more value. The suggested duplicate links are not answering the same question.
This should do what you asked for (at least the output is exactly what you wanted), I made some minor assumptions to deal with your #dummydata, but that should not matter too much.Code:Output:Note:This solution has  complexity, which isn't necessary, there are many out-of-the box () and custom (e.g. using ) ways to merge with lower complexity.
There appears no reason you can't use Pandas. If your IP addresses align perfectly, you can  and then use  to return a NumPy array:If you wish to ignore the network component and include only the  when merging, i.e. use  instead of , then you can create helper series before merging:
There are issues with your data and complications that prevent you from using  or  as the question you linked suggested.The main issue with your data, as pointed out by others, is that networks like  are not valid networks, since they have host bits set that are masked out by the . The  means that the final  bits are your hosts bits and the constructor for  requires that these are set to 0, for example  is valid.The main complication is that you have networks in one array, but addresses in the other. Methods like  and  use comparison (i.e. ) to decide what records go together. Some of the other proposed answers 'solve' this by replacing your networks with addresses, but that doesn't appear to be your problem.Also, note that a single network address may fall into multiple different networks. For example,  falls within both  and . So, I assume you'd expect both matches to show up in your results.To join addresses from one array to networks that the address actually falls within, you'll have to iterate over the array yourself and construct a new one. The type of comparison that works is  (this is ).A working code example bringing this together:


Answer URL
https://docs.python.org/3/library/ipaddress.html#ipaddress.ip_network
https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.network_address
