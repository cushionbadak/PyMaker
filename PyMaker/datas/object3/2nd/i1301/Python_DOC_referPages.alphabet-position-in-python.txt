Natural Text
Newbie here...Trying to write a function that takes a string and replaces all the characters with their respective dictionary values.Here is what I have:But when I run:I get:meaning it only changes the last character in the string. Any ideas? Any input is greatly appreciated.
Following your logic you need to create a  string and then iteratively replace its letters. With your code, you are only replacing one letter at a time, then start from scratch with your original string:And as suggested by Kevin, you can optimize a bit using . (adding his comment here since he deleted it: ) Note that this might be beneficial only for large inputs though...
As your question is generally asking about "Alphabet position in python", I thought I could complement the already accepted answer with a different approach. You can take advantage of Python's string lib, char to int conversion and list comprehension to do the following:
Your approach is not very efficient. You are recreating the string for every character.There are 5  characters in your string. This means replace is called 5 times, even though it only actually needs to do anything the first time.There is another approach that might be more efficient. We cant use  unfortunately, as it's remit is one to one replacements.We just iterate the input and produce a new string character by character.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
