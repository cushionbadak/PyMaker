Natural Text
I'm trying to write a context manager to handle a  rate limit exception.  Essentially, I want it to listen for the error, and when it occurs, dynamically pull the reset time (all done through the  API), and wait for that amount of time.  At which point I'd like it to resume the program, and do this as many times as necessary to complete the job.Here is what I have so far:Currently, it will correctly catch the error and wait, but then it just exits the program (which makes sense) instead of circling back around to continue.  I know that I could put a check in the code to see what the remaining limit was, and wait if it reached 0, but I wanted to practice context managers. It would be used in the following way:
Although the context manager uses  (like in a generator), it generates only once. See contextlib's documentation.As a result, in case the exception is caught in your context manager, the execution resumes after  and exits.You may want to invert the order of the context manager and of your main iteration. See my example below.Context manager:Test case 1:Outputs:Test case 2:Outputs:


Answer URL
https://docs.python.org/3/library/contextlib.html
