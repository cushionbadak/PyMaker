Natural Text
We get PDF files delivered to us daily and we need to get the images out. For example, what I want to do is to get the image back out of this PDF file I have, with python. Most pdf files we get are multipage and we want to export each embedded image to separate files. Most have jpeg files in them, but his one does not.Object 5 is embedded as a zlib compressed stream. I am pretty sure it is zlib compressed because it is marked as FlateDecode and the start of the stream is \x78\x9c which is typical for zlib. You can see (part of) the hex dump hereThe question is, how do I 'deflate' it and save the resulting file.Thank you for sharing your wisdom.
I searched everywhere and tried many things but couldn't get to work. I managed to decompress the data like this:640 is zlib header() position and 69307 is the position of something like footer of pdf spec.  is there. Detail is in the spec and some helpful Q&A can be found here. But omitting the end position is allowed in this case because  seems to ignore following non-compressed data. You can validate this by:So far so good. But when I write  to a PNG file, it cannot be read by any image viewer. Actually decompressed data looks so quite empty here and there. I attached some PNG header, but no luck. Hey, it's too much...As I said earlier (strangely my comment was removed by someone), you'd better use some other existing tools. If Acrobat is not your option, what about pdftopng (part of Xpdf)?  gave me a valid PNG file flawlessly. Obviously command-line tools can be executed in Python, as you may know.


Answer URL
https://docs.python.org/3/library/zlib.html#zlib.decompress
