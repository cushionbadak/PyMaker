Natural Text
As indicated in the documentation, the default value is returned if the iterator is exhausted. However, in the following program, the g(x) function is not exhausted, and I hope that the error from f(x) would not be processed in the next function. What I expect: What I encountered is that the program was running successfully. Can I use an alternating approach to achieve the goal? Or can it be fixed in Python? Edit: The program mentioned above may be modified like this in order to prevent ambiguation. 
 with a default parameter catches the  no matter the source.The behavior you're seeing is expected, and maybe better understood using this code:Moving to your code - even though the inner use is of  without a default argument, the  it raised is caught in the outer  with the default argument.If you have a meaningful exception to raise, you should raise a meaningful exception and not  which indicates the iteration ended (and not erroneously) - which is what  relies on.
 is an iterator that always yields , which yields Nothing, and raises a  (in )You can check that  does throw an exception when called itself. As will But, you've added the default , so that  will run, but simply return back  since the iterator is exhausted. If you remove the , then you see 


Answer URL
https://docs.python.org/3/library/functions.html#next
