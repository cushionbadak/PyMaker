Natural Text
I have the following code:File:Output from worker_dict:And I want to sort data by worker name and after that by salary. So my idea was to create a separate list with salaries and worker names to sort. But I have problems with filling it, maybe there is a more elegant way to solve my problem?
Output:
output: Grouper is defined and explained in itertools. I've grouped your dictionary by records pertaining to each worker, returned it as a reordered list of lists. As lists, I sort them by the name and salary. This is solution is modular: it distinctly groups, re-orders and sorts.  
I recommend to store the workers in a different format, for example .csv, then you could use  and put it into a list of dictionaries (this would also allow you to use jobs, names, etc. with more words like "tomb raider"). Note that you have to convert the year of birth and salary to ints or floats to sort them correctly, otherwise they would get sorted lexicographically as in a real world dictionary (book) because they are strings, e.g.:To sort the list of dicts you can use  as the key argument of , instead of a lambda function, and just pass the desired key to itemgetter. The  variable is useless, because it's just the  of the list. The .csv file:The .py file:You still need some error handling, if a int conversion fails, or just let the program crash.


Answer URL
https://docs.python.org/3/library/csv.html
