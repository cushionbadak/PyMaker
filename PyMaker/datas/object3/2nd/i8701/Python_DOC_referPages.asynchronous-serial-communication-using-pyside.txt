Natural Text
i am working with pyside and trying to do asynchronous serial communication with it but the QtSerialPort is not yet available,i have used pyserial and moved the serial communication to another thread using but i have to check if there there is a message regularly, so i used a  to handle that every 200 ms,but this solution is over kill, if i can have Qt send a  signal every time there is data available, the question is precisely is : is there is a ready module that help with without breaking my whole code depenedency on pyside?if there isn't, what is your tips for quickly implementing one? thanks in advance.
just avoid using qtserialport, and you're right to use pyserial. A good way to go would be to use  as you thought yourself, but run it as another process (using  module), and using s to pass around input/output from the serial port.In the pyside code, you can register a function that acts like an infinite loop, checking for data input in the queue, and do stuff (basically, fire serial incoming event) when data is coming in. You can even use python-async! üòÅThat way, you keep your code compact within a single codebase, but loosely coupled in terms of features, without extra bloat having a simple queue as IPC.Because threading in python can be tricky, because of the global interpreter lock, and even more as you've got the Qt threading model (and eventloop) working alongside python's.As a rule of thumb: don't mix bananas and tomatoes.
i found a workaround which is using PyQt5 serial port module and building a standalone module that handle serial communication and communicating with my main application using Inter Process Communication (IPC) or a local network socket, that will do it for now, and i have no problem open sourcing this serial communication module, and my main application is intact.


Answer URL
https://docs.python.org/3/library/asyncio.html
