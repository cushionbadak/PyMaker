Natural Text
I'd like to find the differences between two dictionaries that have multiple values for a key. All the examples that I find, the dictionaries have a key which contains only one value. Say you have keys that have multiple values as in the following example:I want to return only the differences in the two dictionaries including both the key and the values. Either the difference in pizza_1 or pizza_2, it does not matter which dictionary. Example of what I'm looking for below:I'm not sure exactly how it will output, but wanted to give an example of what I am sort of looking for. Thanks in advance for taking your time to help!-Jeff
Loop over the union of keys, treat the values as sets and print the set difference:I'm using the  dictionary view here to provide the union of dictionary keys. The  test filters out empty results.If you wanted this as a dictionary, you can produce one with a generator expression plus a dict comprehension to avoid producing the sets more than once:Demo:
I propose a dictionary with set-values as your output-datastructure. The result will hold an empty set for a key where there's no difference (see size).
What I did was loop through keys and use list comprehensions to get the difference (specifically what's in  that's not in  as your example output shows).


Answer URL
https://docs.python.org/3/library/stdtypes.html#set
https://docs.python.org/3/library/stdtypes.html#set.difference
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
https://docs.python.org/3/library/stdtypes.html#dict.get
