Natural Text
I try to create a representation function for a class and I want it to be python-2.x and python-3.x compatible. However I noticed that normal strings when passed to  as  will segfault. The only viable workaround that I found was to convert it to a unicode object myself with  and then pass the result to the :The point is that I want the representation to be without the  (or ) that would be added if I use  or . I only recently found the issue and I'm using  all over the place so the question I have is: Can this be simplified while keeping it Python 2.x and 3.x compatible?
I don't think a very simplified way of doing what you want exists. The best I can see is to eliminate the  statement by just using your  case and  thus always calling :If you look at the implementation of  you'll see the first thing it does is  and in that case it returns an ed version of the original object. Therefore the extra work done is pretty small (for the case where  is already unicode) and it should be slightly more efficient for the case where  isn't unicode since you avoid a branch.


Answer URL
https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromFormat
https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromObject
