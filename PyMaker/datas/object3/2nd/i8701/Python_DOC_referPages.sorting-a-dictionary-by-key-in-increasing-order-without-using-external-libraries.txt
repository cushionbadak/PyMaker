Natural Text
I am trying to produce a dictionary that is the copy of another dictionary but with its keys sorted in increasing order. So far I have the following:Console output:The function seems to work fine for the first two keys (2 and 3) but then it breaks down when the last key is reached (89) and the function just spits out its input. Why does the function work for the first two items but not for the last one? I don't think there is an aliasing problem here and I can't think of a clear reason for why this doesn't work.I have researched this topic but none of the answers seem to reflect what I am looking for. I am planning to make this function work without the use of external libraries.Any suggestions?
 would be a more "Pythonic" way, BUT dictionaries have no order to them. You could look at  in .Edited according to comments
In python, dictionaries are not implemented with binary search trees. Actually if you check in the official documentation the explain:It is best to think of a dictionary as an unordered set of key: value pairs, with the requirement that the keys are unique (within one dictionary).Do not expect to see the elements on the dictionary sorted.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
