Natural Text
Trying to fix a friends code where the loop doesn't continue until a for loop is satisfied.  I feel it is something wrong with the readbuffer.  Basically, we want the while loop to loop continuously, but if the for loop is satisfied run that.  Is someone could help me understand what is happening in the readbuffer and temp, I'd be greatly thankful.Here's the snippet: 
Base on my understanding to your question, you want to execute the for loop while continues to receive packets. I'm not sure what you did in  and , if there are I/O operations (read/write files, DB I/O, send/recv ...) in them you can use  feature in python to write asynchronous programs. (See: https://docs.python.org/3/library/asyncio-task.html)I assume, however, you are just extracting a single element from , which involves no I/O operations. In that case,  won't help. If  and  really take too much CPU time, you can put the for loop in a new thread, making string operations non-blocking. (See: https://docs.python.org/3/library/threading.html)UpdateOf course this is not a typical way to solve this issue, it's just easier to understand for beginners, and for simple assignments.One better way is to use something like Future, making send/recv asynchronous, and pass a callback to it so that it can pass the received data to your callback. If you want to move heavy CPU workload to another thread create an endless loop(routine), just create a  in callback or somewhere else, depending on your architecture design.I implemented a lightweight distributed computing framework for my network programming course. And I wrote my own future class for the project if anyone is interested.


Answer URL
https://docs.python.org/3/library/asyncio-task.html
https://docs.python.org/3/library/threading.html
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future
https://docs.python.org/3/library/socket.html#socket.socket.makefile
