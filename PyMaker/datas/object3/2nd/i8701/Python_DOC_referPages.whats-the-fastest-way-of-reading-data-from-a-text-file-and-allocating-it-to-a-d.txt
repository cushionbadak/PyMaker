Natural Text
I want to create a multi-index  by reading a textfile. Is it faster to create the multi-index and then allocate data to it from the text file using , or concatenate rows to the  and set the index of the  at the end? Or, is it faster to use a list or  to store the data as it's read from the file, and then create a  from them? Is there a more pythonic or faster option?Example text file:Output DataFrame:Update Jan 18: This is linked to How to parse complex text files using Python? I also wrote a blog article explaining how to parse complex files to beginners.
Element by element lookups in pandas is an expensive operation, so is aligning by index. I would read everything into arrays, create a DataFrame of values, and then set the hierarchical index directly. Usually much faster if you can avoid append or lookups.Here is a sample result assuming you have a dataset 2-D array with everything lumped in:
Parsing the text file will be the bulk of your processing overhead.If speed is the main concern I'd suggest using pickle or shelve to store the DataFrame object in a binary file ready for use.If you need to use the text file for any reason, a separate module could be written for translating between formats.


Answer URL
https://docs.python.org/3/library/timeit.html
