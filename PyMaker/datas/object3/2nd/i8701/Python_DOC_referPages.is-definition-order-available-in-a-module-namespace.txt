Natural Text
It's documented that the definition order in classes is preserved (see also PEP 520):If the metaclass has no  attribute, then the class namespace is initialised as an empty ordered mapping.Is the definition order also preserved in module objects?  I've experimented with the module above (also swapping the ordering), and it did seem to be reliable:Presumably, the module namespace also uses a compact dict underneath, or perhaps it follows from the fact that the  is a  that it must also respect definition order, like any other class.  However, I'm not sure if this is a feature guaranteed by Python, or just a CPython implementation detail.  Are the names in modules required to respect definition ordering?
Built-in classes, like the  class, don't go through the normal mechanism user-defined classes do* and, as such, don't make use of .  does not apply for them so the guarantees it extends cannot be applied here.The ordering of the module namespace is currently preserved due to the dictionary being insertion ordered so, like the dictionary itself, is considered an implementation detail. * User defined classes first go through  (the function the  bytecode loads when you  a class statement) in . This is the only place where  is invoked (which returns a  from  if a custom meta with a  isn't defined).


Answer URL
https://docs.python.org/3/reference/datamodel.html#preparing-the-class-namespace
