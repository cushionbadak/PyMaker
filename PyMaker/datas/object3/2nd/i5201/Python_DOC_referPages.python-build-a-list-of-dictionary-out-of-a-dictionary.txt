Natural Text
[EDIT: The requirements changed, the structure of the input is now different!]Please see the changes below.So I have to create a new list, containing dictionaries, out of a dictionary that contains lists.To clarify, I have the following dictionary as input:The number of items on each parameters, and values will always correspond. If there are 100 parameters, there will be 100 values, and 1 time stamp for each pair of parameter, valueThat said, out of that input, I need to output n dictionaries that look like this:So that if I get 100 items in the (first example) parameters, values lists, I will then have a list of 100 dictionaries with corresponding values.To clarify, there will be n parameters in a list, and x sets of time_stamp: n_valuesThis is what I have so far:
Python has a great function called zip that is perfect for this.EDIT: After re-reading your question you are already using zip! When iterating through the zipped values you just need to build up a  of each  and use the final output however you need.Output:
Assuming your data in the form:You can use a list-comprehension to create your list of dictionaries like so:Which does produce the required result.
So your loop body looks broadly ok, it's a nice use of . The main issue is that each time round the loop, you're creating a new  dict, and updating  with it. It sounds like what you actually want to do is build up a list of those new_dicts, and then after the loop completes, add that list to your request data.So the structure would be more like:
I believe this will do what you want:Though I think you might be better of using namedtuple for each element that  generates.Using  :




Answer URL
https://docs.python.org/3/library/collections.html#collections.namedtuple
