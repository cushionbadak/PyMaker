Natural Text
I noticed by accident that Python's primitive math operators support commas in both numeric arguments. A tuple is returned. What is it doing and why is this syntax supported?Here are a few examples:
In , the operation performed actually is:Hence you get the  as output.In Python, tuples are actually a collection of values separated by commas, the surrounding parentheses are to avoid ambiguity.
You are actually using a tuple (which is why the output is surrounded by the parenthesis.) The math is only happening on one element of the tuple.https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
This is especially visible in interactive mode.  Python semantics turn a comma-separated sequence into a tuple.  This underlies the "tuple unpacking" you know from function returns, such asIf you writea, b, c = 1, 2, 3You get the corresponding assignments just as if you'd put  on the RHS.  Similarly,Gets you an  value of the entire tuple, .Note that you need an all-or-none approach: one variable on the LHS, or exactly the correct quantity for the tuple length.
You are just defining a tuple, it's not that math operators supports commas. What python is doing there, is assuming you are doing a tuple (because of the commas), so it evaluate each value between the comas, and then store it to the tuple. Not a thing about primitive math operator, it's just how python interprets commas.You could do , and that would give you the tuple .An easy and simplist way of giving an answer is: If python finds a comma in your code, it assumes you put it there for separating data. Then, if he finds , you are giving two data, a number one, and an expresion 1+1. Python evaluates the expresion and says "Oh, its 2". Then, he returns you the  tuple.Im not an expert at python compiler, so don't rely 100% on my answer, but I'm quite sure that's the reason.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
