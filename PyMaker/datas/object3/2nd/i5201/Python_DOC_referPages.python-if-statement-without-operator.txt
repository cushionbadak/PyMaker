Natural Text
Can someone explain to me how this function works? I don't get how the for loop keeps going while there is  after the if statement, which is also unclear to me.I don't understand what is happening in line 3 of this code.
In short: the  fires when  is dividable by .Background:If you write something with:The  keyword also evaluates the truthiness, and in case the truthiness is  of the expression, then  is  and vice versa.Python checks the truthiness of the . The truthiness is a boolean value that is associated with objects. and  have as truthiness respectively  and , and  has truthiness  (so we can check  usually to do an implicit  check).Collections like s, s, s, s, etc. usually have truthiness  if and only if these collections contain at least one element. So empty collections have truthiness . What these collections contain is of no importance for the truthiness of the collection itself.Then there are also numerical types. Usually a number has truthiness  if and only if it is equal to zero, so negative and strictly positive numbers have truthiness .Generic objects have by default truthiness , but you can override the  magic function to return a different truthiness, or if you override  (and not ), it will check if  is greater than zero.So if  and  are integers, then we calculate , this thus performs a modulo check, and  is zero if and only if  is dividable by .Now the  operator will thus evaluate the truthiness. In case  is dividable by , then  is , otherwise  is .So the  is fired if  is dividable by . The prime test thus checks if  is dividable by all numbers between  and , and if not, it returns , from the moment one is dividable, it returns .We can however speed up the calculations by iterating up to the square root of , and make hops of two:
What follows after , will be casted to type , i.e. even though you put an integer in, python will have to cast it to , because  can only branch on the boolean values  or .Now python evaluates all numbers except 0 to  in the  function. So basically  is the same thing as .Example : code inside the loop will be executed for even values of .
In line 3, you divide  by integers between ,now lets look at ,here if x divides n completely then  returns  which is interpreted as .Now  of  is  therefore condition evaluates to True and your  function returns .So,any number  which has a factor between  and  or more precisely between  is Not a Prime Number,So your function returned false else your function will evaluate to .


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth
