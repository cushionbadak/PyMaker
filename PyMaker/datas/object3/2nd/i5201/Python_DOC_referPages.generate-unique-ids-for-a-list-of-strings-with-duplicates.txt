Natural Text
I want to generate IDs for strings that are being read from a text file. If the strings are duplicates, I want the first instance of the string to have an ID containing 6 characters. For the duplicates of that string, I want the ID to be the same as the original one, but with an additional two characters. I'm having trouble with the logic. Here's what I've done so far:How should I approach this? Edit: here's the contents of :And the output:
If the strings are duplicates, I want the first instance of the string to have an ID containing 6 characters. For the duplicates of that string, I want the ID to be the same as the original one, but with an additional two characters.Try using a .GivenCodeOutputThe resulting dictionary has keys (of length 6) for every first occurrence of a unique line. For every successive replicate line, two additional characters are sliced for the key.   You can implement the keys however you wish.  In this case, we used  to correlate the key to each unique line.  We then sliced the desired sequence from the key.  See also a post on making positive hash values from . To inspect your results, create the appropriate lookup dictionaries from the .Output
Your question is little confusing, I don't get what is criteria to generate id , here i am showing you just logic not exact solution, You can take help from logicoutput:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
