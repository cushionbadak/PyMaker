Natural Text
Maybe I just do not understand how Threading works entirely in Python, but to my understanding, the following code should be able to perform both loops simultaneously.but instead, the program just hangs on the  loop from the thread.Does anyone know whats going on?
CPython has something called  (Global-Interpreter-Lock) which prevents 2 threads from executing simultenaously.See: https://wiki.python.org/moin/GlobalInterpreterLockIn CPython, the global interpreter lock, or GIL, is a mutex that protects access to Python objects, preventing multiple threads from executing Python bytecodes at once. This lock is necessary mainly because CPython's memory management is not thread-safe. (However, since the GIL exists, other features have grown to depend on the guarantees that it enforces.)Threads in Python are better suited for IO-bound tasks, where one thread blocks on input and allows other threads to execute.What you try to do (in a very awkward way) is CPU bound and will only execute one thread at a time. There is switching amongst the threads at a determined amount of OpCodes. Buy your threads won't execute simultaneously.If you want simultaneous execution, you should be looking at the  moduleSee: https://docs.python.org/3/library/multiprocessing.htmlNote: In your threading code, you are executing the same code both from the main thread and the 2nd thread. Both are printing the same string, so it would difficult for you to recognize if the interpreter is switching amongst threads


Answer URL
https://docs.python.org/3/library/multiprocessing.html
