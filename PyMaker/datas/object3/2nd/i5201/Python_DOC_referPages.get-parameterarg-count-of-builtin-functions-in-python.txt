Natural Text
I wrote my own c-module for Python and for a custom table in a documentation I need the number of parameters of the builtin-functions during runtime.There are functions in Python 2 like inspect.getargspec or functions in Python 3 like inspect.signature which support normal Python functions, but leave builtin-functions unsupported.There are two other community solutions so far:Parsing the doc-stringsParsing the original *.c fileSee answer for third approachIn some cases the docstrings are outdated and/or it's hard to extract the argument count since the docstring can be any plain string. Parsing the original *.c file is a good approach as well, but you might not have access to it.
In the following this is the working solution I came up with for Python 2 and 3.What does it do?During runtime a list of 99 None objects gets passed to the corresponding function. One of the first checks in the internal parsing function  checks if the amount of parameters matches the amount of passed parameters - if not it will fail. That means we will call the function but we can also be sure it doesn't get really executed.Technical background:Why is it so hard to get the count of parameters of built-in functions? The problem is that the parameter list is evaluated during runtime, not compile time. A very simple example of a built-in function in C looks like this:Copy and Paste Solution:Output:


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.signature
