Natural Text
I'm looping over a function in my script which returns list of lists, for example in the first iteration I'm getting the following list of lists:What I want to get is a list with distinct items, and summary of numbers for each subscriptions, i.e for standard list = 1+1 =2  for premium list 1+1=2I have tried this approach, but it's not removing the duplicates and it doesn't look clean. How can I achieve it with list comprehentions?
What you need is  from . And here is how you can use it:which for the example input you provided1 prints:1The input had to be corrected; it contained typos.
Using a list comprehension to all you need probably won't make it very readable.A cleaner way to do it would be:If you really want a list in the format of your question:It would be even nicer with a collections.Counter:
Here a way to do this with a dictionairy:output:NOTE: the input  is likely to contain two typo's in the OP's original question, this is why the output is showing like this. The typo's are likely in the last element ""First Typo is likely to be "nterprise" and should be "Enterprise"Second Typo is likely the missing space after the comma You should either write code to 'catch' typo's on the input, or fix the input


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/collections.html#collections.Counter
