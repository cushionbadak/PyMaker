Natural Text
I'm building real time multiple videostream monitoring using ffmpeg and subrocess. I currently have the following code, inspired by "Async and await with subprocesses" post.The problem is that after a certain period of time the output stops printing and the processes go into zombie mode. I guess that this problem is related to the overload of PIPE or deadlock. Help needed.Related: Non-blocking read from multiple subprocesses (Python)
It turned out that the problem is probably not related to code optimization through multithreading, asyncio, etc.The reason may be server limitations, such as maximum number of open files / file descriptors (FD), firewall, other config files.If you stumbled upon a similar problem:Install htopHtop is an interactive real time process monitoring application for Linux/Unix like systems and also a handy alternative to  command, which is default process monitoring tool that comes with pre-installed on all Linux operating systems.This may be useful for clarifying the reasons.Test single ffmpeg commandAs jfs said, I need Minimal, Complete, and Verifiable example . So we start with a very minimal: test one process.In my case it turned out that any multicast will hang in 2:10 - 2:20  minutes. Process alive but in zombie mode. This is very strange,  because a couple of days ago everything worked perfectly.Test another soft (VLC's multicat)The latest official version of Multicat is numbered 2.2, and is available here.Get it and don't forget, that biTStream needs to be installed at build-time.Check the stream using the command to record video from the stream:In my case, the same thing happened on the 2nd minute. The command does not stop executing, but the file ceased to be recorded.Check Maximum number of open files / file descriptors more infoUse the following command command to display maximum number of open file descriptors:To see the hard and soft values, issue the command as follows:At some point in the execution of one of my python scripts, I saw a similar error, but the increase in this parameter did not help me.SummarySo the problem is not related to the parallel execution of my scripts. Verification on another virtual machine was successful. I contacted the person who set up this virtual machine and explained to him that something broke during the last couple of days, suggested that the problem is in the firewall. He said that he did not touch anything. But after this call everything began to work perfectly. (I'm almost sure that he broke it) :DGL everyone!


Answer URL
https://docs.python.org/3/library/subprocess.html
