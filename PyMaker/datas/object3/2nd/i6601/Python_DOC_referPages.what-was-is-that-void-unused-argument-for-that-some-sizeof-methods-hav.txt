Natural Text
Several C types in the CPython source have a  method so they can present approximately accurate sizes (in bytes) for instances with . These methods are declared  but some do have a  argument, for example :Some have it (e.g. 1, 2), while others don't (for example: 1, 2). It doesn't seem to make sense to have an argument when you declare it a method without arguments.Given the name "unused" it seems like it probably had some meaning once but I can't figure out for what. I've tried using "git blame" and reading through some of the related issues but couldn't find anything with respect to this "unused" argument. I also thought it may be related to the "default" argument for  but that's not passed through to the method - and what would be the point for the method to know what default was given...I'm interested it: What was the purpose of the argument (and when it became obsolete why wasn't it removed).
There's no specific type of function that only takes a single parameter. s always take two as its documentation states:Type of the functions used to implement most Python callables in C. Functions of this type take two  parameters and return one such value.The  case doesn't mean that the function will only have a single parameter, rather, it means that the second parameter will always be : The first parameter is typically named self and will hold a reference to the module or object instance. In all cases the second parameter will be .you can also see this directly in  where the call is made:There's a number of discussions covering this, see here, hereand here for some of these.As for the versions that only have a single argument, as Martijn points out, these use argument clinic to hide that.
Based on the comments of Martijn Pieters I was able to find out why the methods have a second argument. Those listed without it had a wrapper function inside the argument clinic files (so it was just "hidden"). And it's not only relevant for , but to all  methods.The  documentation is:Methods without parameters donâ€™t need to check whether arguments are given if they are listed with the  flag. They need to be of type . The first parameter is typically named self and will hold a reference to the module or object instance. In all cases the second parameter will be NULL.However s have two arguments:Type of the functions used to implement most Python callables in C. Functions of this type take two PyObject* parameters and return one such value. If the return value is NULL, an exception shall have been set. If not NULL, the return value is interpreted as the return value of the function as exposed in Python. The function must return a new reference.(Emphasis mine)The corresponding  can be found in :So all methods declared inside a  require (at least) two arguments, even if they don't use the second one. That's why it's called "unused", it had never any meaning for the method itself.


Answer URL
https://docs.python.org/3/c-api/structures.html#c.PyCFunction
https://docs.python.org/3/c-api/structures.html#METH_NOARGS
