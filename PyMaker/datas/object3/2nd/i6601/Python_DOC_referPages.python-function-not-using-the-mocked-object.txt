Natural Text
Coming from a PHP background I have encountered the following issue in writing Python unit tests:I have function foo that uses a Client object in order to get a response from some other API:For this I have created the following unit test in another python file.I don't understand why foo isn't using the mocked [1,2,3] list and instead tries to connect to the actual API path in order to pull the real data.What am I missing?
You are doing 3 things wrong:You are patching the wrong location. You need to patch the  global, because that's how you imported that name.The code-under-test is not calling , it uses a different method, so the call path is different.You are calling the code-under-test outside the patch lifetime. Call your code in the  block.Let's cover this in detail:When you use , you bind a new reference  in the  module globals to that object. You want to replace that reference, not . After all, the code-under-test accesses  as a global in it's own module. See the Where to patch section of the  documentation.You are not calling  in the code. You are using a class method () on it. You also then use the return value as a context manager, so what is assigned to  is the return value of the  method on the context manager:You need to mock that chain of methods:You need to call the code under test within the  block, because only during that block will the code be patched. The  statement uses the  result as a context manager. When the block is entered, the patch is actually applied to the module, and when the block exits, the patch is removed again.Last, but not least, when trying to debug such situations, you can print out the  attribute; this should tell you what was actually called on the object. No calls made? Then you didn't patch the right location yet, forgot to start the patch, or called the code-under-test when the patch was no longer in place.However, if your patch did correctly apply, then  will look something like:
You need to patch the  object in the file where it is going to be used, and not in its source file. By the time, your test code is ran, the Client object would already have been imported into the file where you are hitting the API.Moreover, since you're patching a context manager you need to provide a stub.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.mock_calls
