Natural Text
I have a small problem with a chat program I am trying to build:There are 2 clients and a server, a client sends out a message and the server receives it, and broadcasts it to everyone (usually both clients, but there can be more). The problem is, that when A client sends data to the other client (through the server), the receiving client has to send something himself in order to see the message.This is my server.py:And client.py:Thanks for your help :)(And please forgive me for the mess :/)
You have two issues. is a blocking call. /  are also a blocking call.Meaning the client will "hang" on both of these calls ( being an exception if there is data in the pipe, then it won't block).To get around this, as in your example. Either you can use  as you've done in your server to have a class/instance that is souly responsible for retrieving data from the socket and one to read user input. Or on Linux you can use  or  to poll the socket if data is in the pipe and only then, call . And for the input you're still better off using  on  or use threading.But  will always be a blocking call in Python (and many other languages) if there is no data available to read. And so will  / .To use epoll, here's a short example:Or if you want to use threading:And a little further down your code:Note that this isn't proper thread handling. But it's a minimal example that will show you the general gist of how to go about the problem.as a last tipe, fcntl is also a good option.Further programming for the future tipsuse  instead of use  instead of And overall, try to use Python3 instead of Python2. Python2 should really only be used if you have a old environment filled with legacy stuff (read: debian, old developed applications etc).


Answer URL
https://docs.python.org/3/howto/curses.html
https://docs.python.org/3/faq/gui.html
