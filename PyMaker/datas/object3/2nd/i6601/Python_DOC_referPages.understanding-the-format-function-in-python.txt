Natural Text
Our team prefers to use format instead of str.format in every case, and while trying to learn how to use format() in Python I  encountered something which I have no idea of why it happened, and this is the problem:3.30  What will be displayed by the following code? (note ? represents a blank space)Then answer is 4 somehow. I thought the default alignment was on the LEFT for every format but is LEFT alignment and that someow is right alignment?So this is the problem.
From the docs of :A call to  is translated to  . internally calls each type's  function. It just so happens that justification for strings is left by default, while for integers is right. You'll see  shows you the same thing, because it calls  under the hood:
When using format For string you add spaces after are from the right and for numbers from the left, it make sense as numbers spacing from right side may confuse with fractions.10s means that if the string is less than 10 digits it will add spaces 4d means that the integer value will be 4 digitscheck the following code and see how the indentation works:


Answer URL
https://docs.python.org/3/library/functions.html#format
https://docs.python.org/3/library/string.html#formatspec
