Natural Text
I'm using Python 3, and I found that I can't use  within  of metaclass.Why in the code below does  raise a  exception? Why does it works well if I remove the  method from the metaclass?
You should not pass in  to ;  takes care of binding for you and so  is already passed in automatically.You may have gotten confused by the  call in ; that's because  is the exception here, see the  documentation:Called to create a new instance of class  is a static method (special-cased so you need not declare it as such) that takes the class of which an instance was requested as its first argument.Removing  from the  expression works:By passing in , you are effectively executing , telling  to convert  to values in the new list; that required  to be an iterable.When you remove the  method on your metaclass, the default  method is used when you call , which just receives the normal arguments (none in your example) and returns a new instance.
I can see where this will be confusing because you have to pass  to  but you mustn't pass it to .That's because  is a normal method but  is special. It's behaving like a :Called to create a new instance of class .  is a static method (special-cased so you need not declare it as such) [...]As staticmethod it needs all arguments while you don't need to pass the first argument to normal methods (it's already bound).So just change it to:inside .
Accessing a method of the super class using  will already bind the method to the current instance. So the  argument for methods will already be set automatically, just like when you call .So when you then pass the current instance (in this case, the  type) to the method, you are actually passing it a second time.So this will end up making a call .When this is then interpreted by your  method, the arguments will then be matched to the following definition:So the first  is properly matched, but the second  is interpreted to be the variable parameter list . And hereâ€™s where your exception comes from:  is being passed where an iterable is expected, but , the class , is not iterable.So the fix here is simply to remove that additional :  will already include it automatically due to method binding.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__new__
