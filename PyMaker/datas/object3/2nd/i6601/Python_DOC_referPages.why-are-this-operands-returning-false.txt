Natural Text
I have a counter-intuitive issue while writing my script in Python. As you can see foo()==False returns True as i!=0 does, so intuitively I would expect True & True to return True, however when I run foo()==False & i!=0 I receive False and when I run (foo()==False) & i!=0 I get True as was initially expected. What is going on here? 
It's simple pythons order of operations. Inthe bitwise and  has a higher precedence than the . Thus, you're really evaluatingIf you replace your bitwise and  with a logical and , your answer comes out as expected Read more about it here
 has higher precedence than  and  in python so use  to make sure that no operand precedence conflict occurs.
The reason is that there is operator precedence in python, refer to the doc:Comparisons() has lower precedence than Bitwise AND(): ==>   ==> 
 is the Bitwise operator, you can use it to see if a number is even or odd. Since  returns  which is considered 0 and 0 is not considered an odd number, theBitwise operator  will return  because is not an odd number.
As per python documentation 6.16. Operator precedence & has higher precedence than == or !=therefore when you run foo()==False & i!=0 is evaluated as followswhich is false.https://docs.python.org/3/reference/expressions.html#summary I initially tried to include a table but dont know how to do that in stackoverflow. sorry.


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
https://docs.python.org/3/reference/expressions.html#summary
