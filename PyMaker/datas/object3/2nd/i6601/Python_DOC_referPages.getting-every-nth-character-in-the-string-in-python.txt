Natural Text
I have the following function but it doesn't give me the intended result:
 finds the first match for your letter. If you have a letter that appears more than once, that'll give you the wrong index. For any given character, you only test if their first occurrence in the string is at a n'th position.To demonstrate, take a look at the string  with the character indices (I used  to mark the space):For the letter ,  will return , so it'll only be included in the output if  is  or . It doesn't matter that  also appears at index 3 or 9, because you only ever test . The same applies for  (positions 4 and 7), only  is tested for either.You could use the  function to give you a running index:Now  is correct for every letter, repeated or not.However, it'll be much easier to use slicing:This takes every n'th letter too:
If somebody asked me to give every nth character in a string, I wouldn't include the first character. I would rather do something like below:This would yield these results:123456789012345678901234567890123456789024680246802468024680369258147036900000
Hope this will help.!
Using Python's  syntax:Python's  syntax is much like the  function. It accepts a ,  and  value:where you can leave any of the parameters blank and they will default to , the length of the string and  respectively.This means you can do:]to get a string's every  characterter.So you can write the  as:Hope this does what you want!
The problem with the code is everytime the index of same repeated letter will give same result.For example 'Hello World!'.index('o') will be always 4 so it will not give intended result.The best way is to  the for loop. so you will get appropriate index.You should also remember array starts with 0 not 1.


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
