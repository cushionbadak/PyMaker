Natural Text
Evening!My goal is to get something similar to what is shown above using nested loops. I understand that nested loops are just another loop within another. I know that I must use a range for the top row and side column. However, I’m not sure how to whip up the math equation to output the factors of each number. This is what I have and I’m seriously struggling. 
The equation is a simple product, , and note, the  iterates over a numerical range already, you don't need :I use f-strings, a nice new feature available in Python 3.6See the docs for the format-specification that I used, , which right justifies your string by 3 spaces. Also, this is a great reference:https://pyformat.info/Unfortunately, there are three seperate ways of doing string formatting in Python. Quite frankly, f-strings are rapidly becoming my preferred way, and I think it's great if you don't abuse them, since they can take any expression
I would suggest doing this in two steps (it's just more clear). First, generate the 2D matrix, and then print it. To generate the matrix, you can use a nested list comprehension:This is equivalent to the double  loop, but it's easier since you don't have to initialize the matrix . These are used everywhere in Python, so get used to them quickly! It's fairly easy to understand. For example,This is what the inner loop is doing, but then it multiplies those values by the  value for each row for the outer row.Then to print, simply loop over the rows in the matrix and  the row together. If you're using Python 3.6+, you can use  (*literal string interpolation) for printing:If you're on an older version of Python, then use string formatting:In both cases,  means to use a string of fixed width at 4 aligned right, where  means right-align, and  is the fixed width. These both result in:But to do it in a single step, not storing the matrix , you can simply do:Note that  here joins strings together. So in the inner loop, it's joining together all the numbers  with their fixed-width right-aligned representation for each column inside a row, and then it's joining together those rows with a new line separator for each row.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#nested-list-comprehensions
