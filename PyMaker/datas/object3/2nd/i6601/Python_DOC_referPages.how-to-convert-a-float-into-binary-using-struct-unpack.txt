Natural Text
I'm trying to convert a float into binary. I'm using the module struct. For instance, with the value of 3.5, when I execute this line :I get this :I suppose the two x00 x00 represent hexadecimal values for each bytes used but what about the b and '@` ?
There's no problem - the  literal is already binary bytes type (an old tradition, since 2.x).
The format string  means   IEEE 754 binary32  (4 bytes, like a C float) big-endian byte order, standard sizeThat's documented here.  The characters  and  are just part of your numeric data (3.5) when represented as ASCII.  It's probably more helpful to look at these 4 bytes represented as binary:So concatenated as a 32-bit float, that's has a binary representation like this:To convert the binary representation back to float by hand, read about single-precision floating-point format here, and split it up into components instead of bytes.  This is sign bit, exponent (8 bit unsigned int, offset-encoded), and fraction (23 bits):The exponent here is just 1, because that representation offset by 127:The fractional part is like 1.112, i.e.With a positive sign bit (-1)0 = 1, and an exponent 1, that's the number 3.5 (and it happens to be one of the numbers which can be represented exactly as a float).  


Answer URL
https://docs.python.org/3/library/struct.html#byte-order-size-and-alignment
https://docs.python.org/3/library/functions.html#bin
