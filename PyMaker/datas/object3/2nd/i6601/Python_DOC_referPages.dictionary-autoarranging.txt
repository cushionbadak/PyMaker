Natural Text
This question already has an answer here:How do I sort a dictionary by value?                    42 answers                I am trying to remove duplicate items from a sorted linked list, eg. -> . Can someone walk through the code and tell me what will be the final value of  is for the linked list ->->. It should be  but answer comes out to be ...why?
 object doesn't remember the order of elements which are added to the dictionary. If you want to preserve the ordering of the elements you can use OrderedDict.
O(N) option using 
Try the following:This preserves the order of items in .
Here's an approach in  time (in Python 3), regardless of whether the list is sorted.The statement  is .The expression  is .The statement  is , and so is .The expression  is .So, calculating the time complexity of the  statement:Add that to the time complexity of the list comprehension, and you have , which is . Drop the constant, and you have .
This answer assumes that all you want to do is to create another list, only keeping the values that occur once.One way of doing it would be to use groupby from  and then filter based on the length of each group.EDIT Reading your question again, it seems this solution might not work, unless the linked list type you're using conforms to the iterator protocol. At any rate, it certainly won't produce a list as output, although you could replace the list comprehension with a generator expression and build a linked list from that.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
