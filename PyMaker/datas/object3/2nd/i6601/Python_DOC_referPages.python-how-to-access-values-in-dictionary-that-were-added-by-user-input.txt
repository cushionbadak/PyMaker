Natural Text
Say I have an empty dictionary that a user adds an arbitrary number of items into.  After the user adds items to the dictionary, I want to then loop through that dictionary and be able to pull values out of it.  What is the best way to access the items in the dictionary since I don't know the name of the key?For example say I have the following:At this point I have a  dictionary, but I don't have a way to know what the KEYs or VALUEs are......  Now say there is some large string of thousands of characters in random order called .  It looks like "axdfebzsdcdslapplefjdkslazpair....."  Notice how the string is random, but periodically there are names of items like "apple" and "pair".What I want to do is loop my  dictionary and find the next index position within my  where the item in my  appears.For example - let's say the user adds 3 items to the shopping cart.  The items are "donkey", "apple", "pair".What I want to do is read through the  in order, and return the dictionary value that appears next in the string.  I.E. in this case, "apple" is the next item in the random string, so it should be returned so I can lookup the value of "apple" in the dictionary and get the location of the item.I have working code to do everything that is necessary EXCEPT for knowing how to pull the Keys out of the dictionary.  I've copied a line below that essentially shows what I'm trying to accomplish.  The problem is I don't know what DICT_KEY is, because it was added by the user......... Not to confuse things, but I'm considering making an empty list that mirrors the dictionary values.  In other words, when the user adds the item "apple" to the dictionary, I could add it to the dictionary and to the list.  That way I can lookup the item in the dictionary by using it's index position in the list.  seems like a bad way to handle this though, so happy to get any advice you can offer...As you can see, I'm new at this!
This one found two , one  and one  in the string at indices ///.ExplanationFollow up on the commands used earlierCreate a new dictionary with the  I have and assign a constant value.  That allows us to make a dictionary with each key having same value .  being the dictionary you already made.Now let's see how we set the values to indices of these words in the big string.re.finditer returns as many matches in  for .For each match  thus found, m.start() returns the start index of the match.Now this gives a list of indices where apple is appearing in the string.Finally if we combine the above two we get a dictionary with our original keys. And values as a list of indices where they appear in the string.UPDATE2After new req. in commentsIf you do not want to go twice over then..UPDATE3UPDATEDIf indices are more important for you then do the below


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
