Natural Text
I'm trying to rotate a 3*3 matrix clockwise 90 degrees in python.I've identified that element at [ i ][ j ] goes to [ j ][ new_i ].Here new_i depends upon the previous i, so i made a function for it called circular subtraction. if i is 0 then new_i is 2if i is 1 then new_i is 1if i is 2 then new_i is 0after execution, it gave me unexpected results.I've printed everything that is happening in each iteration.I am unable to figure out how some elements are getting replaced with different ones.the input matrix was The expected result was:Result is:
You can use the numpy rot90 function for this: np.rot90k - indicates number of rotationsaxes - indicates the direction of rotation OutputThe issue in your codeThe code is missing indents (but assuming they are correct)the line :assigns a new reference to the matrix variable.In python the default isn't copy by value. You can use deep copy function : copy.deepcopy(x[, memo])OROtherwise, each change you make to new_matrix is being done in the original matrix as well. (since new_matrix is just a reference to matrix)
You could do something like this:OutputThe  gets the column of the matrix, once you have the columns you need to reverse them using , then use a list comprehension to put all together:The above list comprehension is equivalent to the following less pythonic for loop:FurtherDocumentation on zip, reversed and list.The notation  is known as tuple unpacking, more here.
 could come handy as well:Output
A general method to rotate the , irrespective of shape.


Answer URL
https://docs.python.org/3/library/copy.html#copy.deepcopy
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#reversed
https://docs.python.org/3/library/stdtypes.html#list
