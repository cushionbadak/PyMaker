Natural Text
At the moment i am writing a syslog client that will send messages to a remote syslog server. So far this is working pretty ok but i am running into the following problem.When the syslog server goes down for some reason i need to catch this so the program will stop sending syslog messages and we can investigate the problem.Unfortunately, the program continues running and doesn't see that the TCP socket is closed and raise an exception.I only receive a traceback in my terminal:Relevant code:How can i make sure that the program stops and i can do the appropriate exception handling?Thanks!
The default behavior of the SysLogHandler class (and all the ones who are using TCP) is to retry a connection, this is explained in the docs of the  method:Tries to create a socket; on failure, uses an exponential back-off  algorithm. On initial failure, the handler will drop the message it  was trying to send. When subsequent messages are handled by the same  instance, it will not try connecting until some time has passed. The  default parameters are such that the initial delay is one second, and  if after that delay the connection still canâ€™t be made, the handler  will double the delay each time up to a maximum of 30 seconds.This behaviour is controlled by the following handler attributes:As it doesn't seem to have an option for the behavior of "not retrying" which you seem to want, so if you really want that you can create your own handler by subclassing it and overriding the createSocket() method with something like:You can dig a bit more by looking at the source code of  in CPython Github repo (beware, this is from master branch and might not be the exact version of Python you're using)
I switched to another solution and stopped using the SyslogHandler class.I now use the following class were i wrote my own syslog sender through a socket.This is working quite well and runs into an exception when the syslog server goes down unexpectedly. The only problem now i discovered while debugging is the following:When i shut down the syslog server it throws not immediatly an exception when i try to send a message.Please see example below:1.) the syslog server is started, i send the first message "test1" from the for loop, successfull.2.) i shutdown the syslog server, now i send the second message "test2" from the for loop. Nothing happens, no exception!3.) i send the third message "test3", now an exception is thrown.How is this possible?


Answer URL
https://docs.python.org/3/library/logging.handlers.html#sysloghandler
https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler.createSocket
