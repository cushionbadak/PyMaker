Natural Text
If negative list indexing is starting from the end the list and let's say we have:and  and  returns same values while  returns an empty list and  returns What is the logic behind not allowing  to return the list?
 tries to slice from 3 from behind towards 0 - that is the same as  .. that slices nothing because the first value > second value. can be read as  - so  which returns the slice.You would need  for that to work - but thats mind boggling slicing which I try to avoid. (  -->  ) because it also reverses the slice "orientation" to backwards instead of forwards slices from 3 from behind till the end.
The full notation of slice in Python is the following:That being said it provides useful defaults for the values, as per the documentation:Slice indices have useful defaults; an omitted first index defaults to  zero, an omitted second index defaults to the size of the string being  sliced.So when you do something like:under the hood this is done:Note that in both cases step defaults to . In most languages when you want to access the last element of a list for example you do something like:Python negative indexing is a sort of syntactic sugar on that notation so :Then when you do:this is done:So, instead of  you should use  as the last index:OutputNote that  returns the empty list because , i.e. the first index is greater than the second and step is .FurtherUnderstanding Python's slice notation
Well  in front works, but at last... won't work, same with this:because python is thinking zero at the end...So that's virtually equivalent to:since of course there is nothing before first element, if there was, that thing wouldn't be first element, it would be second.
Negative indexes operate from the end of the list.Say if you want to get the last 3 items, you could do:But instead you can typeWhich in words would state get me the slice of the list starting from the third item at the end of the listSo you have to be aware of what your asking for.


Answer URL
https://docs.python.org/3/tutorial/introduction.html
