Natural Text
I was bored while watching youtube and I started to program just basic randomisation of characters. And then I thought of three letter words that have 36 different characters to choose from. This code lets me make 46656 or 36^3 three letter words, because that is how many characters I am using. The weird thing about this is that when it writes to a file I get things like: 〰ⰰ〰ⰱ〰ⰱ〰ⰲ〰ⰳ〰ⰳ〰ⰶ〰ⰶ〰ⰷ〰ⰸ〰ⱡ〰Ɫ〰Ᵽ〰Ᵽ〰Ɽ〰ⱦ〰ⱨ. Why? What is this? Is it Unicode?Python 3.5 BTW
Is it Unicode?Yes. But you may be surprised to learn that your , , etc. are also Unicode.You get these weird characters because you open or view your output file as a two-byte Unicode encoded text.Some of those codes you see fall above the range , where that first code is the comma and the second one is one of your letters. For example, ⰶ is this: http://www.fileformat.info/info/unicode/char/2c36/index.htm. Other weird characters are also formed by combining two random characters in one double-wide Unicode value.Inspecting the resulting file with a hex editor shows you indeed got the expected 3-letter combinations, separated by a comma:For some reason your text file viewer thinks this should be 2-byte Unicode text. If you fix that, you'll see your code worked as you intended.
You interprete a unicode file wrongly. You also can simplify your code a bit:You can print the file without mishap in your console like so:Output:I fixed the file writing to be more locally - not far to the top and also used  to make it more robust.See: with open(..) as ..:


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
