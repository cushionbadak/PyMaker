Natural Text
I am working on a project where I have to build SVM classifiers to predict MeSH term assignments based off of the words in an article's title and abstract. We were given gzip files of 1000 PMIDs identifying each article. Below is an example file:I am trying to figure out how to create a dictionary that will have:Is there an easy way to do this? So far I know the below code gets close but it is not perfect for it.
Let's strip down the example to something simpler:You can use regular expressions to match a pattern. Regular expressions are a deep and powerful tool:The pattern  is matching the start of a line  followed by  then multiple characters , then the end of the line . The brackets  mean the result matching inside the brackets will be put in a group. We need to check there was a match:We can query the match:So, we can see there is one group (because we only defined one group in our pattern), and it has matched the PMID: .We can get at the value by requesting the value of match group 1. Match group 0 is the whole string that matched: .The pattern for matching across multiple lines with for  and  is a lot more difficult. I'm not an expert, maybe someone else will chip in with something better. I would just do a text replacement first, so all the text is on one line. e.g:Then we can match  and  in a similar manner:To match  we want to find all matches.  will just find the first match.  will return multiple matches:Putting all this together:This gives (using  to make it look nicer):


Answer URL
https://docs.python.org/3/howto/regex.html
https://docs.python.org/3/library/pprint.html
https://docs.python.org/3/library/re.html#re.split
