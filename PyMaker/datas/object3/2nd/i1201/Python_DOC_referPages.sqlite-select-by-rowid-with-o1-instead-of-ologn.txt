Natural Text
I was wondering if it's possible to create an SQLite database where I can  rows by  with O(1).I started using sqlite database in one of my projects and discovered that ing rows from bigger databased takes longer than ing rows from smaller databases. I started searching online and stumbled upon  this article. Apparently, when ing by , instead of going straight to the , SQLite performs a binary search to get to the requested . This is a very logical solution, because we can delete rows from the database and in this case, going straight to the  won't work.But in my case - I have an "immutable" database, after creating the database I'm not changing it; Thus, all the  are present and in the correct order.So I was wandering if it's possible to either create a special database or use a specific query command which tells SQLite to select by accessing the  without any binary search.If there are other alternatives to SQLite that can perform better for my case please inform me about them (though, for in my project I can't load the db into memory and the access to different db's simultaneously should be instantaneous)Thanks.
If you do not need the full power of SQLite, you could a simple hashing algorithm with the  module. It uses hashing and could perform better than an ISAM index. But you will lose ordering (among other features like SQL...)
I ended up using mmap. Because I had millions of lines of the same length I just saved those lines to a binary file with mmap. Then to access k line I simply asked mmap to read from  point. I used the snippet code from the answer here to test the solution quickly, though I believe it can be optimized further than this simple code.


Answer URL
https://docs.python.org/3/library/mmap.html
