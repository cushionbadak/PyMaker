Natural Text
I have three lists as:and when I write:this is my output:And I expect this:Could you please tell me how can I get my expected result?
The function  can accept more than two iterables. So you can use  instead of . However, you still need to group the items since simply wrapping  will not work as it can't handle nested dictionaries needed for the 3-tuples.  To group the items correctly, I would use a :The above works because  initializes a dictionary for non-existent keys. It handles the dictionary creation for keys for you. Additionally, If you wrap the end result with :Note:  is just a subclass of , so you can treat it the same as a normal dictionary. 
For the sake of completeness, you can use , avoiding the import at the cost of a tiny overhead of creating and returning an empty dictionary at each iteration.Another solution (not recommended) is using :
Here's a one-liner using , but aside from being a single expression, it doesn't really provide any benefit over the default-dict solution provided by RoadRunner.This is only as short as it is because it takes advantage of the fact that  is already sorted. If it isn't, you'll need to sort the output of  using the same key function before passing it to .Breaking down how it works... creates the key-value pairs for the outer dict: effectively pairs each key ( or ) with its tuples:Each  is an iterable containing all the key/value pairs with the same key.  extracts just the key/value pairs from the s, leaving behind the key, which we can already get from the first element of the tuples returned by .


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/stdtypes.html#dict.setdefault
https://docs.python.org/3/library/itertools.html#itertools.groupby
