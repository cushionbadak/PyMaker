Natural Text
Unlike in other languages like C#, there is no way to import an empty string from Python standard library. However, there is a built-in function , which defaults to an empty string when no argument was supplied.What would be the pros and cons of using --compared to  or --to denote an empty string? I guess the overhead would be negligible, and it is as readable as  or . For one thing, it is visually clear that the variable is a  even in Notepad. One obvious disadvantage is that you have to type the keyboard a few more times than  although not as many as . Can you think of any other merits or demerits?
It has exactly the same effect, and  (or ) should be used (similar  for , and  for ,  for ).And Python will indeed have an internal global cache for small constants (short strings, including the empty string, and small numbers). Check that by  or , it will very likely always return the same. (This is implementation specific, but CPython will behave this way.)
Use .First, Python itself is not the fastest language in universe, and Python developers are not supposed to make such kind of optimization, like creating global variables for empty constants or optimizing variable initialization with constants. Your code will be considered as not maintainable, because others would not understand your purpose.Second, any static code analyzer will always understand the type of your variable from a constant. But when function is called, analyzer has to find the declaration and get the return value type. I dont speak about  - as a builtin, it's return type is well known to analyzers. But in general approach is not good, because in Python programmers not always explicitly define the return value type of functions. 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str
