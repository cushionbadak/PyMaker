Natural Text
I'm just getting into multithreading. Here is a code I found somewhere in a tutorial and Im trying to wrap mind around it:I understand that calling "start()" several times per thread object leads to an RuntimeError.But this code creates multiple threads by creating multiple instances of class "Thread" with the same instance name "t" and same thread name "t_thread" and then calling "start()" on it.How can Python discern between these different instances and threads with the same name? Why doesn't it lead to an RuntimeError when calling "start()" on the already running instance?Thank you!
a thread's  doesn't "do" anything, it just might be useful for callersâ€¦  from the docs:A string used for identification purposes only. It has no semantics. Multiple threads may be given the same name. The initial name is set by the constructor.all values/objects in Python have their own identity, you can get to this with the  function:should give you something unique for each .  Python's docs say:CPython implementation detail:  This is the address of the object in memory.


Answer URL
https://docs.python.org/3/library/threading.html#threading.Thread.name
https://docs.python.org/3/library/functions.html#id
