Natural Text
I'm coming from a java background and new to python. In Java, if a class initializes its own property like (this is bad for unit testing):I'd refactor it so I can provide a mocked dependency and test the class without creating a real instance of Logger:But python is a very different language and there may be a way to mock that property without refactoring:is there a way to mock Logger in above python class without a refactor?
Yes, there is. You can just reassign the logger member variable to be whatever you want. Note that there is no concept of private and public in Python, so you can do this.In particular, you could assign it to be a  or  object, which are special objects that you can do some introspection on (like making sure  was called/used in some particular fashion), as well as a clean way to do "faking" (you don't have to implement s interface to use them)You can read more about mocking in Python here.HTH.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
