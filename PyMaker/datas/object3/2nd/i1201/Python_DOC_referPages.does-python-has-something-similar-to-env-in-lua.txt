Natural Text
In Lua script, when i have to wirte too many lines like:I can use  to simpify the code:Namely, I can avoid typing  repeatedly, is there a way in python to do like this? I searched on net buf found nothing.I need to use python script as a configuration file, and the latter format seems better.
Why not? Newlines need no  here, since they are inside a pair of braces.Of course, this builds a dictionary, but do you really need an object of a specific class in a configuration?
You can easily do it using SimpleNamespace (Python3 only)
You really asked two questions in one.For the second about storing configuration, you canwrite your vars in say, a 'config.py' module. Then  and manipulate using  qualified names. You can also  for direct use but that's not recommended and you loose write capability in the original config module. They are copied into current namespace, not linked.simply use a dictionary to hold your settings like Walter said. They are the obvious builtin type for that.make your own Configuration class, instantiate and manipulate attributes through  qualifier.use a shelf, a persistant dict with the shelve module.Because shelves use pickle and this is a binary format used mostly in Python (I think)to store objects, you may prefer to use some more human oriented open format like suggested by DeepSpace and Cartucho (see configparser for and so on).Much like with the class case, use a namedtuple or a SimpleNamespace (didn't know this one) like Wouda and luminousmen said.Probably there are even more choices but I think the list looks enough for most tastes.Now for the first question, that I think is a very good one, I am almost sure that the answer is no, you can't do that in Python. From here I found this which is the reasoning for  use obligation. Safety, explicitness, and performance it looks. I suppose if it were to be allowed, you could use it too for , and maybe that's why you can't.I sometimes miss that feature too.


Answer URL
https://docs.python.org/3/library/types.html#types.SimpleNamespace
https://docs.python.org/3/library/shelve.html
https://docs.python.org/3/library/configparser.html
https://docs.python.org/3/library/types.html#types.SimpleNamespace
https://docs.python.org/3/library/collections.html#collections.namedtuple
