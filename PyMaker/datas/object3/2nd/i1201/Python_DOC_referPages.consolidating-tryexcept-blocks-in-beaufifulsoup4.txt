Natural Text
This is possibly a much broader question than my use case presents.I am using Beautifulsoup to extract data from html documents.For those unfamilar with Beautifulsoup, it's essentially parsing an html string and using class methods to search and isolate certain data, given explicit instruction.Step One:Step Two:Step one parses the document, step two provides instruction on which data to extract and, in the above case using the , also some formatting.I commonly have a list of such actions where data may or may not be present, and either condition is acceptable. For example, on a series of profile pages, some users may or may not have , , or  entered. If that data is there I want it but, if not, a  value is fine.I typically approach these cases as such:As one might imagine, my files quickly become large and difficult to navigate.What's the most DRY way to approach this?NOTE: In my use case, every  block would address a single exception class,  which is representative of data missing from the html.NOTE: I'm looking for something that wouldn't restrict the type of extraction method. For example, this is one I'd like to use as well:UPDATE 12/30/2018I still feel that the accepted answer is the most correct approach. I also feel that it's a bit abstract compared to other approaches. I wanted to include an alternative approach here. First, let me say that one of the core issues this question is trying to address is further accessing data with Beautifulsoup when their might not be data. For example, the  method raises an  on elements that are of  class. This is an alternative approach where such further specification is needed to extract data from a list of elements that may, or may not, include  elements:This is nothing revolutionary but does seem to provide a very fluid way of consolidating some parts of code.
Or, you could just use  built-in function in an LBYL manner:
Extract a method:This is the EAFP approach.LBYL people would do it this way:
A more specific to your situation way of handling it could be to loop over the list of class values:


Answer URL
https://docs.python.org/3/library/functions.html#getattr
https://docs.python.org/3/glossary.html#term-lbyl
https://docs.python.org/3/glossary.html#term-eafp
https://docs.python.org/3/glossary.html#term-lbyl
