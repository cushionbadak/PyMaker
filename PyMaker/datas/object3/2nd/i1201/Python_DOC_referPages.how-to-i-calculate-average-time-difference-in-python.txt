Natural Text
I have multiple times as a string:I want to calculate the average time difference between all these times. The above example would be: (375s+723s+457s)/3 = 518.3 seconds = 8 minutes 38.33 seconds (If my hand math is correct.)I have all the datestrings in an array. I assume it's easy to convert it to a timestamp, loop over it to calculate the differences and then the average?I just began to learn python and this is the first program that I want to do for myself.
You have a bunch of problems. I'm not going to give you solutions to all of these. Just hints to get you started.I assume you know...... how to convert a time string to a  object,... how to calculate the difference between two, i.e., a , ... how to compute a mean value ( supports both addition and division by  or ).So the only complicated step in this task will be, how to calculate the differences between adjacent items in a list. I'm going to show you this.When you have a list of items, you can slice and zip to produce an iterator to iterate the pairs of adjacent elements in the list.For example, try this (untested code):Then build a list to contain the differences, e.g., using a list comprehension:Now calculate your mean value and you're done.For reference:https://docs.python.org/3/library/datetime.html#datetime-objectshttps://docs.python.org/3/library/datetime.html#timedelta-objectsUnderstanding Python's slice notationIterate a list as pair (current, next) in Pythonhttps://docs.python.org/3/tutorial/datastructures.html#list-comprehensionsAverage timedelta in list
result is 518.3333333333334 seconds.


Answer URL
https://docs.python.org/3/library/datetime.html#datetime-objects
https://docs.python.org/3/library/datetime.html#timedelta-objects
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/itertools.html#itertools.combinations
