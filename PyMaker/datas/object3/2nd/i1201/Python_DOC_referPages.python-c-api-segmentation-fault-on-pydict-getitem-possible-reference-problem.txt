Natural Text
I have a reference in C to a Python list of dictionaries. I am writing a function to calculate the dot product between two members of the list:This results in a segmentation fault. Using gdb to debug, it appears that the segmentation fault is being caused by PyDict_GetItem(b, key). This makes me suspect there's something wrong with my reference counts.After reading the documentation on Reference Counts, it seems that all of the references in the above code are borrowed, so I assumed there was no need to use Py_INCREF or Py_DECREF...but I could easily be wrong.  Is there a place in the above code that I need to use Py_INCREF or Py_DECREF?Edit: I should note that I have already done checks to make sure a and b are not null, and also checks to ensure i and j do not exceed the size of the list. I removed these checks from the code in my question to keep it simpler. â€“
Check your return values. Both  and  can be  if  and  respectively exceed the length of the  referenced by .  assumes the  passed is not a  pointer, dereferencing it without confirming that assumption, which would cause an immediate segfault.You main problem is determining how to report an error. A C++ exception would work for C++, but Python won't understand it unless you catch it and convert it to a Python level exception. In any event, until you figure that out, returns  to indicate failure:


Answer URL
https://docs.python.org/3/extending/extending.html#ownership-rules
