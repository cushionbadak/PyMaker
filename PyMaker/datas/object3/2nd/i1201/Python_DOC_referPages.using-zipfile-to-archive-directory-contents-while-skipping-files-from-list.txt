Natural Text
I'm using  to create an archive of all files in a directory (recursively, while preserving directory structure including empty folders) and want the process to skip the filenames specified in a list.This is the basic function that os.walks through a directory and adds all the containing files and directories to an archive.We can see the code should also have the ability to handle single files but it is mainly the part concerning directories that we are interested in.Now let's say we have a list of filenames that we want to exclude from being added to the zip archive.What is the best and cleanest way to achieve this?  I tried using  which was somewhat successful but causes it to exclude empty folders for some reason (empty folders should be included). I'm not sure why this happens.It would also be interesting to see if anyone has a clever idea for adding the ability to skip specific file extensions, perhaps something like  but I'm not entirely sure of how to incorporate it together with the existing skiplist.I would also appreciate any other general comments regarding the function and if it indeed works as expected without surprises, as well as any suggestions for optimizations or improvements.
You can simply check if the file is not in :This will ensure that files in  won't be added to the archive. Another optimization is to make  a set, just in case it gets very large, and you want constant time O(1) lookup instead of linear O(N) lookup from using a list. You can research this more at TimeComplexity, which shows the time complexities of various Python operations on data structures. As for extensions, you can use  to extract the extension and use the same logic as above:If you want to combine the above features, then you can handle the logic for files and directories separately:Note: The above code snippets won't work by themselves, and you will need to weave in your current code to use these ideas.  


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.splitext
