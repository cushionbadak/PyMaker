Natural Text
At a high level: I am looking to use Python (because that's the language I am most comfortable using) to create a GUI for data entry to manage warehouse inventory. Does anyone have experience with creating something like this? Is Python a good choice for this tool’s creation?More details: I have data containing information about products in a warehouse (i.e., sku, quantity, etc.). At the end of Q4, warehouse workers are going through each item in the warehouse and counting how many are on-hand in the warehouse to see if the human count matches the count on file. If there are any mismatches between the count that’s on file and the human count that item is moved to the second round of counting. If the second human count does not match either the count on file or the first count it is flagged for a final review.I've written a program that does what I want it to do, however, I was just informed that the employees performing the second human count will be doing so while the first count is still going on. This throws a wrinkle in my current program and, essentially, what I need to create is a GUI which allows the user (i.e., data entry employee) to grab data from a database, make changes to that data (i.e., populate the human count 1 and human count 2 columns), and for the program to instantly identify matches/mismatches. It will basically act as a google sheet with built-in formulas.I've included some code below of version 1 of the project if it helps clarify some of my logic.I wrote this to an excel file and saved it as test_file.xlsxHere is the main_test.py file:
Python offers a lot of possibilities for programming GUIs. Some of the most commonly used python packages for native GUIs (i.e. GUIs that are displayed within a Windows/Linux/macOS window) are , , ,  and . Then there are also python packages for web based GUIs (i.e. GUIs that are displayed within a web browser), with the most commonly used one probably being . Even implementing a GUI inside an Excel workbook is a possibility with the  package.Each package has their own strengths and limitations, and choosing the one that is the best match for your application is not trivial (if you'd ask five different people, you could very well receive five different answers).I would advise to first try to get a cursory understanding of the aforementioned packages by reading the introductions/tutorials in the documentation pages. Then (if needed) come back here again to ask more targeted questions.


Answer URL
https://docs.python.org/3/library/tkinter.html
