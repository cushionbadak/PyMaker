Natural Text
Ok. I'm looking for the smartest and more compact way to do this functionwhich should generate all the combinations for the values a,b,c like this:and so on...But I want this to be flexible, so I can change the range or iterable, and also the length of the generated arrays. Range is an easy thing:This is ok for 3-length arrays, but I'm thinking now of making 4-length arrays or 7-length arrays and generate all combinations for them in the same range.It has to exist an easy way, maybe with concatenating arrays or nesting comprehension lists in some way, but my solutions seem to bee too much complex.Sorry for such a long post. 
You can use  which is just a convenience function for nested iterations. It also has a -argument if you want to repeat the same  multiple times:To get the  of  you could use :However  is an iterator so it's really efficient if you just iterate over it instead of casting it to a . At least if that's possible in your program. For example:
You can use :Drop , to return a generator for memory efficiency.
itertools has everything you need. combinations_with_replacement will generate combinations of given length with repeating elements from given iterable. Note that returned value will be iterator.
A pure python implementation : is :
What you are looking for is the cartesian product of the ranges. Luckily this already exists in itertools


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
https://docs.python.org/3/library/itertools.html#itertools.product
