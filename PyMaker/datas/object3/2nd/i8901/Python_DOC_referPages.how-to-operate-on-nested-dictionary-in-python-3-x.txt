Natural Text
I am stuck with this question, can you solve the challenge? Here we go!We represent scores of players across a sequence of matches in a two level dictionary as follows:Each match is identified by a string, as is each player.  The scores are all integers.  The names associated with the matches are not fixed (here they are 'match1','match2','match3'), nor are the names of the players.  A player need not have a score recorded in all matches.Define a Python function  that reads a dictionary d of this form and identifies the player with the highest total score.  Your function should return a pair (playername,topscore) where playername is a string, the name of the player with the highest score, and topscore is an integer, the total score of playername.The input will be such that there are never any ties for highest total score.For instance:
with  it's really easy:First convert it to a DataFrame, then sum over the columns, and find the max :)
You can easily use a running counter to count the scores first:Here  will increment the counters for the players mentioned.  specifies we want the first most common element. This will return a list and we pick the first tuple.
I would suggest using Willem Van Onsem answer, but if you don't want to import then here is an alternative.

Some code golfing with :


Answer URL
https://docs.python.org/3/library/collections.html?highlight=most_common#collections.Counter.update
https://docs.python.org/3/library/collections.html?highlight=most_common#collections.Counter.most_common
https://docs.python.org/3/library/functools.html#functools.reduce
