Natural Text
I have a django mixin class with several methods coded like in following simple example:Mixin class declaration don't provide any of A,B,C,D arguments. These will be specified in view class.  I want to test method1 behavior and check how many method2 calls occured and what arguments were passed in every call. I'll be grateful for any idea how could I handle this problem.  Thanks in advance!    
You can do this fairly simply with the  library. You can patch your view under test to replace  with a mock, and then use the  attribute or the various  methods.
This can be done using a decorator. A simplistic example:For example:However decorators are shared between instances so you will get the total count of all calls to that method on any instance.
Just mock method2 in your test and then use mock specific asserts like assert_called_with.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_called
https://docs.python.org/3/library/unittest.mock.html
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_called_with
