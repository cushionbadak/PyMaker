Natural Text
I am trying to make a text based object oriented card game. Two players draw a card each from a deck of cards, and the player with the strongest card wins. I have four classes for this game: Card, Deck, Player, Game. My question is: How can i compare each players card to each other and determine the strongest one. All other suggestions about the code are welcome. Best regards HWG.Here is my code:CardDeckPlayerGame
Here is a sketch of an approach. You can easily combine this with your own approach, the biggest change being for the  class. Here, I've used  to make a  class, but your current class can simply wrap a  value:Now, in action:Tuple sorting is lexicographic! Nice!Note, I've used the  decorator, which is simply a shortcut, and indeed, I think it might be better to simply do the whole class by hand. Here's a recipe.EDITSo, to elaborate, here is how I would implement your  and  classes. Notice how much more readable your code becomes when you use the  and . Now, in action:Also, notice that  should try to represent the object, if you want a pretty message, use . See this question
You could implement operators for your Card class etc ...than you can use a number of standard library functions like max() to determine the higher value card or deck and could even use sort() to simply sort a 'hand' for example a list [Card, Card, ...].
An enumeration (https://docs.python.org/3.5/library/enum.html) would be appropriate. For rich comparisons (and ordering) you should also consider implementing some or all of the , , , , ,  methods (from https://docs.python.org/3/reference/datamodel.html) on the  class.
I would recommend you store the value of each card as an int, so you can compare them, and not to use strings such as "King" or "Ace". You can do this and change repr() to print a human readable version using those strings.The Card class could look like this:Notice how the value of the card is stored as an int all the time.In the Game class you could have a function that compares two cards, I'm not sure how you want to do this but it could look something like this:


Answer URL
https://docs.python.org/3/library/enum.html#orderedenum
https://docs.python.org/3/reference/datamodel.html
