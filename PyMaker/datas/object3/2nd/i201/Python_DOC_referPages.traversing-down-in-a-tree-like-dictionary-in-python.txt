Natural Text
I have a dictionary something like this:I want a function using which I can get values.example,  and it should give me the output. Couldn't found any solution. I am able to traverse 1 or two level, but not more. Either the code will break or it will not stop.My Current solution which is not working is:
Assuming there's going to be only one matching key in any of your given data structure, you can use a function that recursively traverses the dictionary looking for the key and returning its value if found, and if not found it will raise an exception, so that the calling frame can catch it and move on to the next candidate key:so that  returns (assuming your dict is stored as variable ):On the other hand, if there can be multiple matches in the given data, you can make the function yield the value of a matching key instead so that the function becomes a generator that generates sub-lists of 0 to many matching keys:so that  returns:
You need to handle both dictionaries and lists to traverse your structure entirely. You currently only handle  dictionaries, but the dictionary with the  key in it is an element of a list object, so you can't find it with your method.While you can use recursion to make use of the function call stack to track the different levels of your structure, I'd do it iteratively and use a list or  (faster for this job) to do track the objects still to process. That's more efficient and won't run into recursion depth errors for larger structures.For example, walking all the elements with a generator function, then yielding each element visited, could be:The above uses a queue to process elements breath first; to use it as a stack, just replace  with .You can then use the above walker to find your elements:For your dictionary, the above returns the first dictionary that contains the looked-for key:If you are only ever interested in the value for the given key, just return that, of course:


Answer URL
https://docs.python.org/3/library/collections.html#collections.deque
