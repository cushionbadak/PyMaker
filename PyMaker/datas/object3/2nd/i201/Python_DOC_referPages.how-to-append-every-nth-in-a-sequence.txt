Natural Text
If I have a list:and I want to make a new list like:I am trying to do this in a for loop so that I'm appending to a new list in sequence:The problem with my code is that it will append all values of  or  first in one go, rather than letting each th version of i have a chance.
You could stride though the sequence with desired offsets, the use  to flatten back into a 1D list.You could also do something similar using  by reshaping the array, transposing, then flattening again
Lets say you want the interval to be n=3More pythonic where  just traverses the list starting from ith index in steps of 3.
An interesting feature of  is it's ability to group an input into groups of fixed length without explicit slicing. The  recipe lets you convert to groups of fixed length, which you can then unpack for another round of ing such that you pair up the first elements of each group:You can achieve the same result with:multi- just pushes all the work to built-ins (no Python level looping at all). Plus the latter is two whole characters longer, and seems too similar to CoryKramer's answer. :-) That said, the latter is superior if your input is not of even length;  stops iterating when the shortest iterable is exhausted, while  has to use filler values. Actual slicing and flattening avoids that issue.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
https://docs.python.org/3/howto/sorting.html
