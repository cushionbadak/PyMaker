Natural Text
Using Python, I would like to do the following... build a tuple of sets. However, I only want to add a set to the tuple if the set does not already exist in the tuple. Each set is a pair. I am using sets because the order of the pairs do not matter. I am using a tuple because I have over 1.5 lines of data to process and a tuple is faster to search than a list. I believe I still will need to do some list comprehension, but that is one of my questions. My first question is my code is broken, how might I fix it? My second question is, how might I improve the efficiency of the code?I have simplified this example to give just the basics. Each new set will be received from the data source and processed through.That is good. The set was not in the tuple.Not good. The set already existed in the tuple. It should not have been added.Thank you so much for your help.
The condition you should be checking is far easier than you think:Your code should work with this.Anyway, appending to a  is slow; if you are looking for performance, your approach is definitely not the best. An improvement is to use a , which has very fast append operations, but like , membership tests are also slow. In fact, contrary to your belief,  and  are practically equally slow when it comes to searching.The solution is to use a  of :Demo of speeds:
You should just use a set of sets, well frozenset to be exact since set is not a hashable type:


Answer URL
https://docs.python.org/3/library/stdtypes.html#frozenset
