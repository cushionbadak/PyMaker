Natural Text
While creating a program that backs up my files, I found that os.path.basename() was not working consistently. For example:returns returns I want that second basename function to return 'studies' but it returns an empty string. I ran  to see how it's splitting the string and it turns out it's considering the entire path to be the directory, i.e. .I can't figure out how to get around it.. The weirdest thing is I ran the same line earlier and it worked, but it won't anymore! Does it have something to do with the very first part being a shared folder on the network drive?
that looks like a Windows UNC specificityUNC paths can be seen as equivalent of unix path, only with double backslashes at the start.A workaround would be to use classical :Fun fact: with 3 paths it works properly:Now why this? let's check the source code of  on windows:okay now now Just reading the documentation makes us understand what's going on.A Windows sharepoint has to contain 2 path parts:So  is seen as the drive, and the path is empty. Doesn't happen when there are 3 parts in the path.Note that it's not a bug, since it's not possible to use  like a normal directory, create dirs below, etc...Note that the official documentation for  doesn't mention that (because  calls  behind the scenes) but it states:Return the base name of pathname path. This is the second element of the pair returned by passing path to the function split(). Note that the result of this function is different from the Unix basename programThat last emphasised part at least is true! (and the documentation for  doesn't mention that issue or even talks about windows)


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.basename
https://docs.python.org/3/library/os.path.html#os.path.split
https://docs.python.org/3/library/pathlib.html
