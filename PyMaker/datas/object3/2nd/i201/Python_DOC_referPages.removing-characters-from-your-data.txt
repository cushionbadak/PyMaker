Natural Text
This question already has an answer here:Extract float/double value                    4 answers                I have a number of strings similar to  and I would like to extract just the floating point number. I say floating and not decimal as it's sometimes whole. Can RegEx do this or is there a better way?
If your float is always expressed in decimal notation something likemay suffice.A more robust version would be:If you want to validate user input, you could alternatively also check for a float by stepping to it directly:
You may like to try something like this which covers all the bases, including not relying on whitespace after the number:For easy copy-pasting:
Python docs has an answer that covers +/-, and exponent notationThis regular expression does not support international formats where a comma is used as the separator character between the whole and fractional part (3,14159).In that case, replace all  with  in the above float regex.
as described above, works really well!One suggestion though:will also return negative int values (like -3 in the end of this string)
You can use the following regex to get integer and floating values from a string:ThanksRex
I think that you'll find interesting stuff in the following answer of mine that I did for a previous similar question:https://stackoverflow.com/q/5929469/551449In this answer, I proposed a  pattern that allows a regex to catch any kind of number and since I have nothing else to add to it, I think it is fairly complete
Another approach that may be more readable is simple type conversion. I've added a replacement function to cover instances where people may enter European decimals:This has disadvantages too however. If someone types in "1,000", this will be converted to 1. Also, it assumes that people will be inputting with whitespace between words. This is not the case with other languages, such as Chinese.


Answer URL
https://docs.python.org/3/library/re.html#simulating-scanf
