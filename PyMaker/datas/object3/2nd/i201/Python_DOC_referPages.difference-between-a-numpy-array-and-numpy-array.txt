Natural Text
Me again... :)I tried finding an answer to this question but again I was not fortunate enough. So here it is.What is the difference between calling a numpy array (let's say "iris") and the whole group of data in this array (by using iris[:] for instance). IÂ´m asking this because of the error that I get when I run the first example (below), while the second example works fine.Here is the code:At this first part I load the library and import the dataset from the internet.If I run this code I get an error:Now if I run this code it works fine:Best regards,
The difference is that when you do  you try to replace the reference of the  property in  which is protected (see pandas implementation of ) and when you do  you access the data of the  and replace it with new values. In the second assignment statement you do not overwrite the reference to the numpy object. The  is a  object that is passed to the  method of the numpy array.EDIT:The exact implementation (there are multiple, here is the  implementation) of such property is:thus you try to overwrite a property that is constructed with a decorator  followed by a getter function, and cannot be replaced since it is only provided with a getter and not a setter. See Python's docs on builtins - property()
callsThis is running ' code, because  is callsThis is running 's code, because  is 


Answer URL
https://docs.python.org/3/library/functions.html#property
