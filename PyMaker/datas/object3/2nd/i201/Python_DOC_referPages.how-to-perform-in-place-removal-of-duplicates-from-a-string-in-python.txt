Natural Text
I am trying to implement an inplace algorithm to remove duplicates from a string in Python.In the above code, I am trying to replace the duplicate character with whitespace. But I get  at . Am I missing out on something or is it not the right way?My expected output is: 
You can do all of this with just a set and a comprehension. No need to complicate things. "Simple is better than complex."~ See PEP20EditWhile the above is more simple than your answer, it is the most performant way of removing duplicates from a collection the more simple solution would be to use:
It is impossible to modify strings in-place in Python, the same way that it's impossible to modify numbers in-place in Python.
As already pointed  is immutable, so in-place requirement make no sense.If you want to get desired output I would do it following way:Here I used  function to get numerated () letters and fact that  method of , returns lowest possible index of element therefore  for given string is , not , not  and not .
Here is a simplified version of  from .You can then use this generator with  to get the expected output.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
