Natural Text
I am trying to load a pickled dictionary but keep getting attribute error such as this Below is the code to read and write pickle object. I am dumping pickled object on a linux workstation with python 2.7.12. The data is transferred to Mac with python 3.6.4, where readTrueData() is executed resulting in the above error. UPDATEWorking on the suggestions mentioned in the comments, I changed my code as belowa.)b.) In both the case I got the following error
Your first problem is caused by a mismatch between the argument type and the chosen  method;  expects  objects,  expects the file object itself. Passing the file object to  is what caused your error.Your other problem is due to the cross-version compatibility issue with  and  types; Python 2 pickles s with no specified encoding, but Python 3 must unpickle them with a known encoding (or , to get raw  rather than ). For  and  types, you're required to pass :Optional keyword arguments are fix_imports, encoding and errors, which are used to control compatibility support for pickle stream generated by Python 2. If fix_imports is true, pickle will try to map the old Python 2 names to the new names used in Python 3. The encoding and errors tell pickle how to decode 8-bit string instances pickled by Python 2; these default to ‘ASCII’ and ‘strict’, respectively. The encoding can be ‘bytes’ to read these 8-bit string instances as bytes objects. Using encoding='latin1' is required for unpickling NumPy arrays and instances of datetime, date and time pickled by Python 2.In any event, the fix is to change:to:For correctness and performance reasons, I'd also recommend changing  to  on the Python 2 machine, so the stream is generated with a more modern pickle protocol, one which can efficiently pickle  arrays among other things. Protocol 0, the Python 2 default, can't use the top bit of each byte (it's ASCII compatible), which means raw binary data bloats dramatically in protocol 0, requiring a ton of bit twiddling, where protocol 2 can dump it raw. Protocol 2 is also the only Py2 protocol that efficiently pickles new style classes, and the only one that can properly pickle certain types of instances (stuff using / and the like) at all.I'd also recommend the script begin with:as on Python 2,  is implemented in pure Python, and is both slow and unable to use some of the more efficient pickle codes. On Python 3,  is gone, but  is automatically accelerated. Between that and using protocol 2, pickling on the Python 2 machine should run much faster, and produce much smaller pickles.
 is what you're looking for, but you should really be using the  context:This would ensure your file is closed properly, especially because your code doesn't have a  in the function.
You need to be using  to read if using  in that manner.Source: https://docs.python.org/3/library/pickle.html


Answer URL
https://docs.python.org/3/library/pickle.html#pickle.load
https://docs.python.org/3/reference/compound_stmts.html#with
https://docs.python.org/3/library/pickle.html
