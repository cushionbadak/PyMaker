Natural Text
When I try to or/and two sets using  and  operator, I got some weird result.As expected, tmp will be {2,3}, but I don't know why  also changed it value to {2,3}. However, if I do:Then,  will be unchanged! Can anyone explain for me what happens underneath  operator?
 () for  is implemented differently with  (). is implemented using  which update the set in-place.Relevant CPython code ():
It's called . return set s keeping only elements also found in t.  As you see in this picture;You are re-building first set with intersection.
Copy the set by value instead of by refrerence(As  is an instance of )


Answer URL
https://docs.python.org/3/library/stdtypes.html#set.intersection_update
