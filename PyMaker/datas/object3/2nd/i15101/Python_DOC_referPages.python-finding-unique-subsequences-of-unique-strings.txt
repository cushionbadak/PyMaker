Natural Text
Edit: To the people that downvoted: I was perfectly clear that I did not want code and that I had already tried it myself. All I was looking for was an explanation of what mathematical process yielded the sample results.First question. I have done a lot of research and finally resorted to asking, so if I missed the answer somewhere I apologize. I have a problem I am really struggling with:Write a Python 3 script that takes three command line arguments: 1. The name of a text file that contains n strings separated  by white spaces. 2. A positive integer k. 3. The name of a  text file that the script will create in order to store all possible  subsequences of k unique strings out of the n strings from the input  file, one subsequence per line. For example, assume the  command line is gen.py input.txt 3 output.txt and the file input.txt  contains the following line: Python Java C++ Java Java Python  Then the program should create the file output.txt containing  the following lines (in any order): Python Java C++ Python  C++ Java Java C++ Python C++ Java Python The  combinations should be generated with your implementation of a  generator function (i.e. using the keyword yield).From my understanding, based on the sample output this doesn't quite follow the definition of a subsequence; nor are they quite permutations, so I'm at a loss for how to go about this. I know how to do the file IO and command line argument portions, I just can't get the right subsequences. I don't need a direct answer as I am supposed to solve this, but if someone could give me some helpful insight it would be much appreciated.
If you're allowed to use itertools:However from your instructor's comment:The combinations should be generated with your implementation of a generator function (i.e. using the keyword yield).It doesn't look like that's actually going to work. could be re-implemented with something approximating the following (from the docs):


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
