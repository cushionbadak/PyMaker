Natural Text
Write a program that asks the user to enter some numbers (positives,  negatives and zeros). Your program should NOT ask the user to enter a  fixed number of numbers. Also it should NOT ask for the number of  numbers the user wants to enter. But rather it should ask the user to  enter a few numbers and end with -9999 (a sentinel value). The user  can enter the numbers in any order. Your program should NOT ask the  user to enter the positive and the negative numbers separately.Your program then should create a list with the numbers entered (make  sure NOT to include the sentinel value (-9999) in this list) and  output the list and a dictionary with the following Key-Value pairs  (using the input list and the above functions):I know this is a question that has been on the board 3 times, and I've tried copying other examples, but I still get an error stating I'm missing 1 required positional argument.  I've tried changing several things with no resolution.  I thought my average functions were working, but at this point I'm not even sure of that.  This is also my first time posting anything here, so I'm sorry for poor formatting.  Below is my code:
your functions   and  all take 1 argument, values. You're calling them without any arguments. allNumAvg()try changing to this
Apart for not passing the values and trying to call a dict you are calculating the average before the lists have been filled completely, in your code calculate the average outside the loop when you are finished appending:In  you already have a list of values and you then make another list of the exact same values, just use values itself:You can use also use  list comprehensions:I also changed your function names using underscores which is in line with the pep-8 style guideIdeally when taking user input it is best to use a try/except to catch bad input from the user:If a user enters no positive or negative numbers then you will also get a  so you would also need to handle that case by either using try/except again or returning a default values if the list is empty, we can use  a default value as we will have already validated the input to make sure is a number:Which can all be done in a single function updating the dict at the end and returning it:Because you are using  we can also let the statistics module handle the averaging:As per your comment if you want a the dict and the list returned you can return both and unpack:


Answer URL
https://docs.python.org/3/library/statistics.html
