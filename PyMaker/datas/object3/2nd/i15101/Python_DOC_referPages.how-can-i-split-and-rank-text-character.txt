Natural Text
It may be easy to do but as a beginner it seems to me trivial.I have text like this or file containing this text:How can use Python to split the text like this:Then need to calculate frequency of three seq (for example how many 'fdh') and rank all most frequented seq.I saw the answers here: What is the most "pythonic" way to iterate over a list in chunks?But I do not know which one is good for me. Also I need to open a file that contain the text and write to another file. Please provide me an expert opinion.EDIT:

Use regular expressions to split the string into chunks of 3, then use a dictionary comprehension to generate a dict which counts occurrences of each chunk.EDIT: to do the chunking without regex, and to capture the different ways of partitioning the string into chunks of 3, use a list comprehension:It's inelegant, but to handle the  and  cases, you can simply concatenate these to the end of :Then apply the dictionary comprehension as before:Result:


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
