Natural Text
Now I'm taking part in node.js project and i like "node way" of dependecy management. I'll provide some examples for those who haven't worked with  - installs  as production dependency - install  as development dependecy.All deps are stored in  file, which is indexed by version control system. When i clone repo, i just type  in terminal and it installs everything.As far as i know,  is able to do it, but:On production server I can type  and all my build tools, testing frameworks, etc. are not installed. Just production deps.So, the question is:How do you split production and development dependecies with pip(or other tool)?
I would create two virtualenvs (venv for Python 3) with a separate  file for each, like  and , but that looks a bit strange to me.  Personally, I usually use git's branches to separate production/development code.  Most of the development goes in the  branch, there's a single  (which can change over time, for sure). When everything's alright and/or the development cycle has ended, I just merge it with the  branch.  Haven't had a need to test different versions of dependencies simultaneously.
There is a nice solution, it is quite new tool, called pipenv. Seems an analog of npm for python.


Answer URL
https://docs.python.org/3/library/venv.html
