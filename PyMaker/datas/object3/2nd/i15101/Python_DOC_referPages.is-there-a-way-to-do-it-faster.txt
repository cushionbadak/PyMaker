Natural Text
ladder have around 15000 elements, this code snippet performed in 5-8sec, is there any way to do it faster? I try do it without checking for duplicate and without creating accs list and time was down to 2-3sec, but I don't need duplicate in csv file.I work in python 2.7.9

You canâ€™t do much about the loop, since you need to go through every element in  after all. However, you can improve this membership test:Since  is a list, this will essentially loop through all items of  and check if the name is in there. And you loop for every element in , so this can easily become very inefficient.Instead, use a set instead of a list for  as this will give you a constant membership lookup. So you reduce your algorithm from a quadratic complexity to a linear complexity. For that, just use  and change your code to use  instead of .Another issue is that you are doing string concatenation. Every time you do  you are throwing away that string object and create a new one. This can become inefficient for a high number of operations too. Instead, use a list here to collect all the elements you want to write, and then join them:Alternatively, since you are writing to a file anyway, you could just call  multiple times with each string part.Finally, you could also look into the  module if you are interested in writing out CSV data.


Answer URL
https://docs.python.org/3/library/csv.html
