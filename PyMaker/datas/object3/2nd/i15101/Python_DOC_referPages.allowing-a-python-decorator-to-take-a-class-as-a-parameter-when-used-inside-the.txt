Natural Text
I'm having some difficulty with Python decorators, and I think it has to do with the fact I am passing a class as a parameter to a function decorator, when the function being decorated is a method of the class being passed.I have no clearer explanation of the problem than that, so hopefully some code will help:I don't think the definition of  is important, but I'll leave it here just in case:I get the following error:I think my comment explains what I think is happening: The class hasn't been defined yet (because, I'm in the process of defining it) and therefore I can't pass it.Is there a neat workaround that isn't:I am aware I'm type checking more than is deemed necessary, but I would like to know how to solve this sort of problem anyway.Edit: I'm also aware that  isn't actually valid Python. But, It's the outline of the code I intend to implement.
The short answer is No, you can't refer to your class like that before you've finished defining it.Type-checking is a subject under active discussion among the Python development team at the moment, and to the extent that there's a consensus, it's that function annotations are the way forward: PEP 484 describes the direction Guido wants to take in implementing it.The workaround for forward references proposed in that PEP is to just use a string instead:When a type hint contains names that have not been defined yet, that definition may be expressed as a string, to be resolved later. For example, instead of writing:one might write:


Answer URL
https://docs.python.org/3/tutorial/controlflow.html#function-annotations
