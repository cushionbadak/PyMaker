Natural Text
I've know base 2 machines cannot represent certain base 10 values accurately such as 1/10. I've seen examples using Python itself. On my machine:Why is it accurately represented here?
From Python 2.7 and 3.1 onward, Python displays floating point numbers using the shortest representation that, when evaluated, results in the same floating point number. From the documentation:Python now uses David Gay’s algorithm for finding the shortest floating point representation that doesn’t change its value. This should help mitigate some of the confusion surrounding binary floating point numbers.The significance is easily seen with a number like  which does not have an exact equivalent in binary floating point. Since there is no exact equivalent, an expression like  evaluates to the nearest representable value which is  in hex or  in decimal. That nearest value was and still is used in subsequent floating point calculations.What is new is how the number gets displayed. Formerly, Python used a simple approach. The value of  was computed as  which evaluated to . The advantage of using 17 digits was that it relied on IEEE-754 guarantees to assure that  would round-trip exactly to its original value. The disadvantage is that many people found the output to be confusing (mistaking intrinsic limitations of binary floating point representation as being a problem with Python itself).The new algorithm for  is smarter and returns . Effectively, it searches all equivalent string representations (ones that get stored with the same underlying float value) and returns the shortest representation.The new algorithm tends to emit cleaner representations when possible, but it does not change the underlying values. So, it is still the case that  even though the representations may suggest otherwise.The new algorithm depends on certain features in the underlying floating point implementation. If the required features are not found, the old algorithm will continue to be used. Also, the text pickle protocols assure cross-platform portability by using the old algorithm.


Answer URL
https://docs.python.org/3/whatsnew/3.1.html#other-language-changes
