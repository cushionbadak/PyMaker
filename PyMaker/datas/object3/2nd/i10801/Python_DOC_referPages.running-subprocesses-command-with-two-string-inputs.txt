Natural Text
I'm trying to validate a certificate with a CA bundle file. The original Bash command takes two file arguments like this;I'm trying to figure out how to run the above command in python subprocess whilst having ca-ssl.ca and cert-ssl.crt as variable strings (as opposed to files). If I ran the command with variables (instead of files) in bash then this would work;However, I'm struggling to figure out how to do the above with Python, preferably without needing to use . I have tried the following but doesn't work and instead prints 'help' commands for openssl;Any guidance/clues on what I need to look further into would be appreciated. 
Bash process substitution  in the end is supplying a file path as an argument to  . You will need to make a helper function to create this functionality since Python doesn't have any operators that allow you to inline pipe data into a file and present its path:Where  is a context manager which creates a named temporary file with your desired text, closes it, hands the path to you, and then removes it after the  scope ends.Anything accessing this temporary file(like the subprocess) needs to work inside the context manager.By the way, the   is redundant since  waits for termination.
If you want to use process substitution, you will have to use . This is unavoidable. The  process substitution syntax is bash syntax; you simply must call bash into service to parse and execute such code.Additionally, you have to ensure that  is invoked, as opposed to . On some systems  may refer to an old Bourne shell (as opposed to the Bourne-again shell ) in which case process substitution will definitely not work. On some systems  will invoke , but process substitution will still not work, because when invoked under the name  the  shell enters something called POSIX mode. Here are some excerpts from the  man page:...INVOCATION... When invoked as sh, bash enters posix mode after the startup files are read. .......SEE ALSO...http://tiswww.case.edu/~chet/bash/POSIX -- a description of posix mode...From the above web link:Process substitution is not available.  seems to be the default shell in python, whether you're using  or . So you'll have to specify the argument , or  if you want to specify the full path.This is working for me:Here's how you can actually embed the string values from variables:


Answer URL
https://docs.python.org/3/library/tempfile.html
