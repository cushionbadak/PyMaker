Natural Text
I want to manipulate this list so that the dicts contain all the attributes for a particular ID. The ID itself must form part of the resulting dict. An example output is shown below:Then I did following:Then it gives:But I don't understand why 'id' is showing in the second position while 'age' showing first?I tried other ways but the result is the same. Any one can help to figure it out?
To keep the order, you should use an ordered dictionary. Using your sample:Printing the ordered list...name_1 age_1 name_3 age_3name_2 age_2
Try using an OrderedDict:This is more likely to preserve the order you want.  I am still new to Python, so this may not be super Pythonic, but I think it will work.output -Docs:https://docs.python.org/3/library/collections.html#collections.OrderedDictExamples:https://pymotw.com/2/collections/ordereddict.htmlGetting the constructors right:Right way to initialize an OrderedDict using its constructor such that it retains order of initial data?


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
https://docs.python.org/3/library/collections.html#collections.OrderedDict
