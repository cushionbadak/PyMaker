Natural Text
I have been scouring the internet looking for the answer to this. Please not my python coding skills are not all that great. I am trying to create a command line script that will take the input from the command line like this:the last part is what I am wanting to pass on as a variable to socket.gethostbyaddr("") module. this is the code that I have so far. can someone help me figure out how to put that variable into the (" "). I think the "" is creating problems with using a simple variable name as it is trying to treat it as a string of text as appose to a variable name.here is the code I have in my script:any help would be welcome. I have been racking my brain over this...thanks 
The command line arguments are available as the list , whose first element is the path to the program. There are a number of libraries you can use (argparse, optparse, etc.) to analyse the command line, but for your simple application you could do something like this:Running this program with the command linegives the output
os.getenv('remoteserver') does not use the variable remoteserver as an argument. Instead it uses a string 'remoteserver'.Also, are you trying to take input as a command line argument? Or are you trying to take it as user input? Your problem description and implementation differ here. The easiest way would be to run your script usingand then in your code includeto get the input you want for remoteserver.
you can use sys.argv for would be but for being friendly to the user have a look at the argparse Tutorial
In Python 2,  reads text and evaluates it as a Python expression in the current context.  This is almost never what you want; you want  instead.  However, in Python 3,  does what  did in version 2, and  is not available.So, if you need your code to work in both Python 2 and 3, you should do something like this after your imports block:This has no effect in Python 3, but in v2 it replaces the stock  with , and  with a function that always throws an exception (so you notice if you accidentally use ).If you find yourself needing to smooth over lots of differences between v2 and v3, the python-future library will probably make your life easier.


Answer URL
https://docs.python.org/3/library/sys.html#sys.argv
https://docs.python.org/3/howto/argparse.html
