Natural Text
According to the docs,Typical implementations create a new instance of the class by invoking  the superclass’s  method using  with appropriate arguments and then modifying  the newly-created instance as necessary before returning it.   ...If  does not return an instance of cls, then the new  instance’s  method will not be invoked.The simplest implementation of :How exactly does  return an object of type ?That statement calls  where  is .So how would class  know how to create the type ?
 first searches the MRO (method resolution order) of the  object (skipping past  in that sequence), until it finds an object with a  attribute.In your case, that is :but if you subclassed  and mixed in another class into the MRO with a  method then it could be another method. is implemented in C, see the  function; it contains a hook for abstract base classes to make sure you are not trying to instantiate an abstract class, then delegates to the  slot, which usually will be set to , which adds a new  struct to the heap. It is that struct that represents the instance to the interpreter.
Few things, first of all you need to write explicit inheritance from  like this:You should read about old classes and new classes on python(only on python 2, in python 3 it does not matter)For your question, I think you missed the point or syntax of  functions. Again, small change to your code:In this way you reference to the parent-class by using  and calling a method from this parent-class new(of course you can use any other method)editAfter reading your comments, I'll just add that  doesn't have to take any arguments in Python 3 so maybe it's more trivial for you.  Highly recommended to read more about the  here


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__new__
https://docs.python.org/3/reference/datamodel.html#object.__new__
