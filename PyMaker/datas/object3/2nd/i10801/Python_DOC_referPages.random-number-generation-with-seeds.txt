Natural Text
So in games where you can create "random" worlds there is an option for seeds. The thing i don't understand is: how can you get the same outcome if you fill in the same seed? I would say you have to store every outcome but thats very hard to achieve. I've read something about PRNG(Pseudo random number generator). Every outcome is determined in a PRNG. But i have no idea how to achieve this in python
How does a RNG end up generating the same sequence given the same seed?Let's take a trivial RNG implementation:This implementation contains many flaws, but it should be enough to demonstrate the concept. It uses the  as the predecessor of the first random number in the sequence.If we run this:The output will be:And with a different seed...we get a different sequence:But the same seed will give the same sequence every run.
Just use :This program will always return that value as the first generated random number, because the seed is always the same.
It's quite easy actually, firstly you have to import random library and then you juste have to set the seed manually using your game's seed value :
A PRNG does not create "random" number but always produces the same numbers when the same seed is used. Thus if you do something in dependence on these numbers you will always do the same when you enter the same seed.In python the  module will take a seed, see the documentation. If you provide no seed the current system time is chosen and thus it seems random and is often random enough.An example may help you how this relates to level creation.This will generate a random level - besides that it is not random but dependent on the seed. If you choose a different seed, you will get a different level. But if you choose the same seed, you will get the same level.Ofcourse this is only a one dimensional level, but it is the same for two or three dimensional level.


Answer URL
https://docs.python.org/3/library/random.html#random.seed
https://docs.python.org/3/library/random.html#random.seed
