Natural Text
I implemented the  method on a class for the first time the other day, and the behavior wasn't what I expected. I suspect there's some subtlety to the  operator that I don't understand and I was hoping someone could enlighten me.It appears to me that the  operator doesn't simply wrap an object's  method, but it also attempts to coerce the output of  to boolean. For example, consider the classThe  operator and a direct call to the  method return very different output:Again, it looks like  is calling  but then coercing the result to . I can't find this behavior documented anywhere except for the fact that the  documentation says  should only ever return  or .I'm happy following the convention, but can someone tell me the precise relationship between  and ?EpilogueI decided to choose @eli-korvigo answer, but everyone should look at @ashwini-chaudhary comment about the bug, below.
Use the source, Luke!Let's trace down the  operator implementationAs you can see, the  operator becomes the  virtual machine instruction. You can find that in ceval.cTake a look at one of the switches in Here we have the  callThat always returns an  (a boolean). P.S.Thanks to Martijn Pieters for providing the way to find the implementation of the  operator.
In Python reference for  it's written that  should return  or .If the return value is not boolean it's converted to boolean. Here is proof:Now write in shell:And  of nonempty list returns .Edit:It's only documentation for , if you really want to see precise relation you should consider looking into source code although I'm not sure where exactly, but it's already answered. In documentation for comparison it's written:However, these methods can return any value, so if the comparison operator is used in a Boolean context (e.g., in the condition of an  statement), Python will call bool() on the value to determine if the result is true or false.So you can guess that it's similar with .


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__contains__
https://docs.python.org/3/reference/datamodel.html#object.__lt__
https://docs.python.org/3/library/functions.html#bool
