Natural Text
I'm using python 3 for an application. For that utility, I need to pass command line arguments as following, Both the parameter  and  are present in a property file too. If the value is specified in command line, it should override what is present on property file.I'm basically a java guy and in java, the properties passed in the form  will be set as system property. Then these properties can be read from code as .But when I try the same in python 3, it didn't work. After referring python docs, it seems to me like the sys._xoptions are suitable for my requirement. Then read the properties using, I'm using Cpython. The aim of the thread is to ensure that, the way I'm proceeding is right or not. Or is there any other better ways in python to implement the same.Python veterans, please guide !
For argument parsing, I use the  module (docs) to define which are valid named and/or positional arguments. There are third-party modules as well such as click and docopt. You should use what you feel most comfortable with and whether or not you can use third-party modules. The click documentation contains a (possibly biased) comparison between it, argparse and docopt.I've never used , nor did I know of its existence. Seems a bit strange that a function starting with an underscore (normally used to indicate a "private" function) is mentioned in the docs. Perhaps someone else can shed some light on this.For the parsing of a property file, I use the  module (docs). Of course, you could opt for a JSON or YAML config file if you'd prefer that.That said, you'll have to come up with the necessary code to overrule properties when specified as arguments (though that shouldn't be too difficult).
From the docs on -X argsReserved for various implementation-specific options. CPython currently defines the following possible values:That means you probably shouldn't be hijacking these for your own purposes. As Kristof mentioned, argparse is a pretty reasonable choice. Since you want both a file and command line arguments, here's a quick example using a  file-based config:There are other possible alternatives for the file-based config, like the configparser module.


Answer URL
https://docs.python.org/3/library/configparser.html
