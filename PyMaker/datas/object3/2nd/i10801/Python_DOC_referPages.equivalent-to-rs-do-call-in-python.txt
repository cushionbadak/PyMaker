Natural Text
Is there an equivalent to R's  in python?
There is no built-in for this, but it is easy enough to construct an equivalent.You can look up any object from the built-ins namespace using the  (Python 2) or  (Python 3) modules then apply arbitrary arguments to that with  and  syntax:Generally speaking, we don't do this in Python. If you must translate strings into function objects, it is generally preferred to build a custom dictionary:then look up functions from that dictionary instead:This lets you strictly control what names are available to dynamic code, preventing a user from making a nuisance of themselves by calling built-ins for their destructive or disruptive effects.
 is pretty much the equivalent of the splat operator in Python:Note that I’ve had to define my own  function since Python’s  already expects a  as an argument, so your original code would just beR has another peculiarity:  internally performs a function lookup of its first argument. This means that it finds the function even if it’s a character string rather than an actual function. The Python equivalent above doesn’t do this — see Martijn’s answer for a solution to this. Two things about this though:It’s not specific to  in R. In fact, the function lookup is probably internally performed by .It’s a case of “too much magic” and I would strongly discourage writing such code in R, let alone more strongly-typed languages: it subverts the type system and that generally leads to bugs. Case in point, the R documentation of  is pretty vague on what action is performed when  is a character string. For instance, given its description it would be reasonable to expect that  should work. Alas, it doesn’t.


Answer URL
https://docs.python.org/3/library/builtins.html
