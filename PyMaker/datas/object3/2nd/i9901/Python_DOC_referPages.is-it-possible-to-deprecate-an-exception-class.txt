Natural Text
Situation: I have some custom Exception classes in my library, which is used by users in their code. For some reason, I want to rename one of the exceptions and deprecate the old one.Keeping the old exception as an alias is not difficult:But eventually I would like to remove the old error name for my library, and therefore I want users who use this custom exception in downstream code to be notified with a DeprecationWarning that this error will be removed.But I want to raise the DeprecationWarning in the following usecase (say that my library containing the custom exceptions is called ):So I want to raise the warning when the user tries to catch the error, not only when the user would raise the error.Is it possible to do this in some way? (as the user is not calling a function here in which I can raise a deprecation warning)
You can apply the hack/trick from this answer, converting your module into a class and intercepting the  operation:mypackage/__init__.py:test.py:Output:
It's certainly possible to raise an exception within an exception, but if the user isn't expecting it, it could cause issues.  Assuming that was just a misstep in your post, and you don't have a  exception you want to raise, you can do the following:


Answer URL
https://docs.python.org/3/reference/datamodel.html#customizing-instance-and-subclass-checks
