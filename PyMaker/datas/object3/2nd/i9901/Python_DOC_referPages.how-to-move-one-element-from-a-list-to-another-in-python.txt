Natural Text
So, I input a list of numbers and go through the list and check if the first value in that list is less than the second value if so add it to , carry on until the value is greater than the next value.So, if I input i should get but its not working
I assume that you never want to add the last item in  to  because there isn't an item after it to compare it with.Your code doesn't work properly because  iterates over the items in , not their indices. But even if it did iterate over the  indices your code could crash with an  because it could attempt to compare the last item in the list with the item after it, which doesn't existHere are several ways to do this.output simply iterates over the indices of .  uses  to iterate in parallel over  and . This puts the current & next items into  and . uses  to get the current item in  and the index of the next item in . uses  to iterate over the tuples yielded by  until we get a pair of items that don't satisfy the test. It performs the whole operation in a list comprehension, which is slightly more efficient that using  in a traditional  loop. Here are versions that also add the last item in the list if we get that far. The simple way to do this is to create a new temporary list that has a last item guaranteed to be greater than the "real" last item. outputOf course, this strategy will fail if you pass an empty list. The simple way around that is to put this at the top of the function:Eg,We can rewrite  like this to keep it a one-liner:
You don't need the indexes, you can zip your list like this:This also has the benefit of fixing the bug when the list is sorted.
If you do , you iterate through elements in , not their indexes.To iterate through indexes, you have to do .


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
