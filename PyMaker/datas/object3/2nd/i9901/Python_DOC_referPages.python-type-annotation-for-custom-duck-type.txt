Natural Text
Python's  module defines a number of duck types, e.g.,  to represent any type that implements the  special method.Is it possible to define custom duck types in a way such that I can use them as valid type annotations?For example, I would like to be able to annotate that an argument should be a duck-type equivalent of a , i.e., any object that implements  and  methods. Ideally, I could annotate such an argument as  or , rather than .
You can define an abstract base class (ABC) to specify the interface:This is basically how the protocols (like ) are implemented, albeit without directly using .By giving the ABC a  method, you can use it in  and  tests, which is more than good enough for tools like :


Answer URL
https://docs.python.org/3/library/abc.html
https://docs.python.org/3/library/abc.html#abc.ABCMeta.__subclasshook__
