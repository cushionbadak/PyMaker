Natural Text
According to the documentation of If  is  or not given, it will default to the number of processors on the machine.If I don't set it a value like thisis it bad for performance in case that my value is very low (2) ?Will python already allocate all the CPU processes for None value vs allocate only 2 for value with a number?
To begin with, you seem to be quoting the wrong part of the documentation in your link, namely the one for processes, not threads. The one for  states:Changed in version 3.5: If  is  or not given, it will default to the number of processors on the machine, multiplied by 5, assuming that ThreadPoolExecutor is often used to overlap I/O instead of CPU work and the number of workers should be higher than the number of workers for ProcessPoolExecutor.Since you're using threads, not processes, the assumption is that your application is IO bound, not CPU bound, and that you're using this for concurrency, not parallelism. The more threads you use, the higher concurrency you'll achieve (up to a point), but the less CPU cycles you'll get (as there will be context switches). You have to instrument your application under typical workloads to see what works best for you. There is no universally optimal solution for this.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
https://docs.python.org/3/library/concurrent.futures.html
