Natural Text
I'm using the below module to log events in my modules. I call it as follows:module 1module2:and here the file /tools/debug_logger.pyEverything works fine and I get log files for the respective levels, but when the RotatingFileHandler is called I sometimes get an error. It is as if various instances want to do the rotation at the same time, even though I'm quite sure this shouldn't happen as I make sure there's only 1 handler with   as recommended here: Duplicate log output when using Python logging module.Any suggestion what could be causing this file access violation during the rotation would be appreciated.I believe the permission error occur because when the rotation occurs other modules are still writing to the file. What would be the best way to do logging from multiple modules when I write to a file and use this RotatingFileHandler? Is there any best practice?
I believe you are getting your logging setup wrong. The recommended way to setup logging is to not define any handlers nor logging levels into the modules, but define all the configuration in the main file.For example in :In  you put exactly the same code:Note that  is the module name, so it will be something like  or . Using dotted names automatically creates hierarchies of loggers, so that's why it's customary to just use the  of the module to get the logger.There is no need for  and  to contain anything else related to logging. They should not decide where the logging output goes or its level, because this is something that who launches the application should control. Hence it is best handled in the main executable.Now in your main executable you define your handlers:And finally you just add the handlers to the root logger and set the root logger's level to the lowest level among the handlers:This works due to the hierarchical nature of loggers. When  is called, if the logger has no handlers it will pass the log record to its parent logger, which will continue to do so up until the root logger, which finally uses its handlers to handle the log record.It is necessary to also set the root logger level because it defaults to , while other loggers default to  (which causes the delegation mentioned before).Alternatively you add the same handlers to both module loggers explicitly:There is no harm in adding the same handler object to multiple loggers. This makes sure that the handlers do not try to concurrently rotate the file.


Answer URL
https://docs.python.org/3/library/logging.html#logging.Logger.setLevel
