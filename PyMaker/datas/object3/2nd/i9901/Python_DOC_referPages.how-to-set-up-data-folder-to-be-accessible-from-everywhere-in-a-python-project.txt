Natural Text
In a python project, how do I setup a project-wide "data" folder, accessible from every module? I don't have a single entry point in my program, so I cannot do something like global (dataFolderPath). I would like for every module to know where the data folder is (without hardcoding the path in every module!), so it can load and write the data it needs. I'm using python 3.5 on a mac. Thanks!
This is not python specific, but if you want to share a config globally among your programs you could set up a environment variable like MYPROJECT_DATA_PATH and all your scripts check this variable before loading the data. Or you could write a config file which all your programs know the location. Or both, a environment variable with the path of the config file, where you can fine-tune it for your needs.
You should rather make a module that acts as a data provider. Only this module should be interested in where your data is. Your current approach is wrong. Whenever you decide to change the location or format of your data you will have to change every module that uses this data.//Edit:After creating  a module there you can get it's location with:Now you have a absolute path to some project subdir. From here you can point to any other dir in your project using relative path.
To get data installed relative to your Python module, you could use  or setuptools' . This works even if your module is packaged as a zip archive.To find out an appropriate place to put user data, you could use  module for portability:To avoid duplicating the logic of where to put data in a way that is optimal for your specific application, you could create an object that will be responsible for it. You could import it directly (in simple cases) e.g.,  or build it during an initialization and set it as an attribute of your application object  or as a global function  if there is none.  To get data path, ask the  object:  where  may return values derived from  config files (e.g., ), environment variables (), command-line options with/without the help of // modules.It is not the only way to get the config info but it should be a good start that works in many cases.


Answer URL
https://docs.python.org/3/library/pkgutil.html#pkgutil.get_data
