Natural Text
There is an answered question about  and  combined together: Using property() on classmethodsI still don't understand the cause of the problem, please help.My understanding of  was that it simply replaces  with . With this in mind I wrote several classmethods during the past few years and now I see I was wrong all that time.So what is the difference between  and  from the code below? with  works, but  with  does not.
what is the difference between @classmethod and @cm from the code below?decorator is calling during class creation time before an instance is  created.In your case, since @cm returns , which is relied on , it should be used as a instance method.On the other hand, @classmethod is able to use before an instance is created.For a combination of classmethod and property, it could be done by return an customized object. Reference[Edit]Q. What does the classmethod() call do with the method it decorates to achieve that? The implementation can be done by using descriptorQ. Why is the result not callable?Because the implementation of  does not define  function. Once using , it will return ClassMethodDescriptor which is not callable.
The difference is that classmethod is not callable, and cm method is callable. This means that when the property(class) makes a call to the inputed func(which it is supposed to do), it works as you'll except for cm, but will not work for classmethod since classmethod does not have a call implemented.  
class method does not know anything about instance and does not require it. instance method knows about it's instance and it's class.Also as you can see you don't need an instance to call classmethod.


Answer URL
https://docs.python.org/3/howto/descriptor.html#static-methods-and-class-methods
