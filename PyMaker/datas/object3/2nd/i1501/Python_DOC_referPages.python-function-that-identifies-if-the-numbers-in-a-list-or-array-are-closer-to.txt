Natural Text
I have a  array of numbers. Below is an example:I want to know if each of the numbers is closer to 0 or 1. Is there a function in Python that could do it or do I have to do it manually?
 is a ufunc that will round the elements of an array to the nearest integer.What if the numbers don't have to be between 0 and 1?In that case, I'd use .
A straightforward way:Or you can use np:Note that  can be changed to , however you choose to treat it.
Here is one simple way to do this:(Change  to  if you want integers.)
You could use numpy.where:OutputNote that this will return 1 for numbers above 1 (for instance 2).
You could use  to measure distances between your number and  and  and check which on is shorter.Output:
Here's a simple generalization for any arbitrary numbers  and , instead of just  and :This'll return two lists, one with the indices of the numbers closer to , and one with the indices of the numbers closer to .Testing it out:This outputs:
Alternatively, you can use a ternary operator.
From the Python built-in function docs :Return the floating point value number rounded to ndigits digits after the decimal point. If ndigits is omitted, it defaults to zero. The result is a floating point number. Values are rounded to the closest multiple of 10 to the power minus ndigits; if two multiples are equally close, rounding is done away from 0 (so, for example,  is  and  is ).For numpy arrays in particular, you can use the  function.

You can use :    


Answer URL
https://docs.python.org/3/library/functions.html#abs
