Natural Text
Let's say I have a class which implements an  function, is it preferred to use  or calling  directly? Are there any real differences besides having to type 5 characters less with the magic function?In contrast: For  and  I can see an advantage for having a default value with the magic function. 
The difference is mostly just convenience. It's less typing and less symbols to read, and so faster to read. However, the various builtin functions (eg. ,  et al.) usually do a little type checking to catch errors early. If you wrote a customer  method and it returned , then invoking  wouldn't catch that, but  throws a type error. eg. also implements the iterator protocol for objects that have no , but do implement the sequence protocol. That is, they have a  method which implements a sequence starting at index 0 and raises an IndexError for indexes not in bounds. This is an older feature of python and not really something new code should be using. eg.When should you use ? This might not be so relevant to , but if you need access to the implementation of method that the parent class uses then it is best to invoke such methods in the style  (using Python 3 style super usage). eg.


Answer URL
https://docs.python.org/3/library/functions.html#iter
