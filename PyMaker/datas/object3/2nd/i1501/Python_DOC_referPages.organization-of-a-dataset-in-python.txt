Natural Text
I have a .csv dataset of a large collection of idioms. Each line contains three elements (seperated by commas) that I would like to seperate:1) The Index Number (0,1,2,3...)2) The idiom itself3) If the idiom is positive/negative/neutralHere's a small example of what the .csv file looks like:As you can see, sometimes the idiom will contain quotation marks, while other times it wont. However, I don't think that will be difficult to sort.I think the best way to organize this in Python would be through a dictionary, like so:So how can I split each line into three different strings (based on the comma), and then use the first string as the key number, and the last two as the corresponding list items within the dict?What I initially had in mind was to try to split the commas with this code:But all it does is remove everything up to the first comma in a line, and I don't think doing a bunch of iterations through it would be efficient.I'd like to get some advice on what the best method to organize data like this would be?
Python has an entire module specifically dedicated to working with  files. In this case, you can use it to make a list of lists out of your file. Let's call your file  for now:and you can now sort the data or organize it however you like. 


Answer URL
https://docs.python.org/3/library/csv.html
