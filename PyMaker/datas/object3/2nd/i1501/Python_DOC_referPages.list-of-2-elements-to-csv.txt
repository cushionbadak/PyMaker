Natural Text
I have been facing an issue parsing an horrible txt file, I have manage to extract to a list the information I need:I would like to have the element 0 as headers and 1 has rows, for example:Here is my code so far:I am very new at python, so sometimes I ran out of ideas on how to make things work.
Looking at your input file, I see that it contains what appears to be output from the openstack  command, mixed with other stuff. There are basically two types of lines: valid ones, and invalid ones (duh).The valid ones have this structure:and the invalid ones have anything else. So we could define that every valid line can be split at the  into exactly four parts, of whichthe first and the last part must be empty, and the other parts must be filled.Python can do this (it's called unpacking assignment):which will succeed when the right-hand side has exactly four parts, otherwise it will fail with a . When we now make sure that  and  are empty, and  and  are not empty - we have a valid line.Furthermore we can say, if  equals  and  equals , we have hit a header row and what follows must describe a "new record".This function does exactly that:It spits out a new dict for each record it finds and disregards all lines that do not pass the sanity check. Effectively this function generates a stream of dicts.Now we can use the  module to write this stream of dicts to a CSV file:The CSV module has a  which is designed to accept dicts as input and write them—according to the given key names—to a CSV row. With  it does not matter if the current record has more fields than requiredWith  list it becomes extremely easy to extract a different set of fields.Configure the writer to suit your needs (docs).This:is a convenient shorthand for
You can take a step by step approach to build a 2D array by keeping track of your headers and each entry in the text file. output:if you need to write the new 2D array to a file so its not as "horrible" :)
Looks like a job for pandas:


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictWriter
