Natural Text
I have a long string with me like thisI want to split it to K substrings, where each substring must be at least of length  1 ie non-empty. I want all such possible combinations.The output I am expecting must be like following if  is 3I wanted to do this with list comprehension but I am stuck. Is it possible to implement.? Are there any other faster alternatives.?
Using , you can get separation index pairs:using that index pair to get string slices -> (, , ) -> (, , )... -> (, , )
You could find all slices of your list so that none of sliced parts will be empty without any extended libraries like so:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
