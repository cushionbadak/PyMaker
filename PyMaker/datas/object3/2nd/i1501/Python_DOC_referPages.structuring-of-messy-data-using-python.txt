Natural Text
I have a set of data which is not tab or comma delimited. When open in Notepad, it looks very structured as shown below but when open with Excel, It is not structured properlyIs there any ways that I can use pandas to process such data for some analysis?
I would suggest you use a script to first convert your data into a suitable CSV format that could then be loaded without problem using Pandas. Most of the data appears to be in a fixed width format, as such the column locations could be hard coded, and  applied to remove any whitespace. The time and date can be extracted from the timestamp line and added to the start of each entry within it. is used to read the file in blocks, this also has the effect of skipping the unwanted line between segments. It works by reading the file a line at a time and passing each line to a  function (this is provided inline using a  function to save space). If the result of the function changes, the groupby function returns a list of lines which have the same return. In this case it is testing if the line does not start with the  characters. So you get one return where  is  holding a list of lines starting with the timestamp. Then a list of lines (in this case just one) with the lines starting . This makes it easier to then process a whole segment without having to worry about where it finishes. The first entry is the timestamp followed by all the entries.A list comprehension is used to extract each individual value from the line and create a  of values. The  recipe is used to read the fixed column locations from  to get a sliding  and  column positions. These are used as a string slice to extract the characters for each column. The string then has  applied to remove any surrounding spaces.For the data you have given, this would give you To get a better understanding of how the script actually works, I would recommend you add create a small test file (with two segments) and then also add some print statements.
Your second row seems to be the actual header. But then still, it doesn't look right, as MEdwin pointed out. Normally, you could try:But this will not work correctly, because the CSV isn't structured consistently. 
EDIT: This is the closest I can get with regex. Unfortunately any blank fields (e.g. column  rows 4&5), will not be processed correctly and the data will be skewed. Please note I’m on an iPhone so you will need to replace any and all double quotes (“).The regex expression  will match any characters that are NOT:digits 0-9capitalised lettersquestion markshyphensFor one or more combinations...This removes the weird special characters and deals with the multi white space delimiters. You will end up with an extra blank column at the start. You can deal with that with some more regex, but I’ll leave that up to you for some homework (hungover).The column  will be split into two. With two stages of delimiting (not using pandas to start) you can probably handle that. With pandas, that would look like:


Answer URL
https://docs.python.org/3/library/itertools.html?highlight=groupby#itertools.groupby
