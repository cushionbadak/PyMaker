Natural Text
I do not understand what this source code does on line 3,  I tried to understand by testing out in python console with dummy variables and in the same syntax format like  it gives error; if tested with  I always return the second string , so I'm confused why use 'and' in the line. The syntax p/o also confuses me.Argument  parsed is file path (string), argument f parsed is ; where path in this syntax line is file path. Could I get any help in understanding line 3?
 is a one-element array, whose sole element is the result of  and ;  will evaluate to the first operand if falsy, and second operand otherwise. Since the first operand is not falsy, you get .The line in the code is not a simple array, it is a comprehension - basically a short way to write a loop that constructs an array. The general syntax of a comprehension iswhere  will loop over all elements of the iterable , check if  is true, and if it is, add  to the result. In your case, the condition () isFor each element  of  (presumably an iterable of filenames), if this criterion is true, the result list will gain an element which consists of the concatenation of the path  with the filename  ( being a natural, if surprising at first sight, concatenation operator for paths.)The problem is compounded by bad naming exhibited in the snippet. Consider this rewrite:Now this reads almost like English, and is very clear about what it's doing (the only dodgy bit being , and almost anyone could guess what that might be just by analogy to UNIX paths).
It's a list comprehension.Is a syntactic shorthand for


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/pathlib.html
