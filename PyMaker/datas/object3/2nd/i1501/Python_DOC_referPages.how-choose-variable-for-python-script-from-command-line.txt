Natural Text
I need to run python test script for different environments (different urls). And I need to define which variable use from command line. In future this parameter will be used in Jenkins job.script.py:In command line I need to writeIn a result in method test_LoginValidation  in  driver.get(url) will be used url which I defined in command line.
You can use  to do this:This is one way to do it. You are creating some arg parameters , ,  and by default  is set to true. You can also have no default (just set ).So next time you can run:You might want to handle the case where more than one flag is passed.You can also do it this way:Example:You can read more about  here.
I can recommend  package for creating CLI. It's really simple, well documented, has a lot of options and in my opinion much easier to use than argparse.A dummy example:And what it looks like when run:It automatically generates nicely formatted help pages:You can get the library directly from PyPI:If you want to create CLI just to parametrize unit test you may consider using  which allows one to define multiple sets of arguments and fixtures at the test function or class.An example:
What you're looking for is argparse. That should allow you to do exactly what you're looking for, for example:This sets up the url as a required argument to be passed to the function, and sets its type to str (this is the default behavior, but being explicit is good).You can then extract the arguments using:From here you can proceed as you normally would. If you wish to make the argument optional but with a default value, that is also possible using argparse.Using the environment variables works but is much harder to debug, especially if you expect this script to be run by another piece of software argparse is much more reliable.
It's almost certainly easier to do this in Jenkins than it is to do it in Python. Additionally it seems to make sense that your devops pipeline controls the location of dev, staging, and release URIs (at least as much as it is sensible to do that).then have the python script look at  (which is the first argument passed to it) and use that URL directly.


Answer URL
https://docs.python.org/3/howto/argparse.html
https://docs.python.org/3/howto/argparse.html
