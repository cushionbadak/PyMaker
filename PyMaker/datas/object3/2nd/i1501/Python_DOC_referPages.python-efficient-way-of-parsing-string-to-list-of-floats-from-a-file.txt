Natural Text
This document has a word and tens of thousands of floats per line, I want to transform it to a dictionary with the word as key and a vector with all the floats. That is how I am doing, but due to the size of the file (about 20k lines each one with about 10k values) the process is taking a bit too long. I could not find a more efficient way of doing the parsing. Just some alternative ways that were not guaranteed to decrease run time.
In your solution you preform slow  for every word, twice. Consider following modification:One advanced concept I used here is "unpacking":Python allows to unpack iterable values into multilple variables:The  is a shortcut for "take the leftovers, put them in the  and assign the list to the name":
Just don't call  more than once.Here's a simple generator of such file:The former version takes some time.The version with only one  call is instant.
You could also use the csv module, which should be more efficient that what you are doing. It would be something like:


Answer URL
https://docs.python.org/3/library/csv.html
