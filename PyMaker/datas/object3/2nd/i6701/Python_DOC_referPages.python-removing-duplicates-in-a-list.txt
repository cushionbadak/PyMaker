Natural Text
I want to remove duplicated in a python list in a way that allows me to alter another corresponding list in the same way. In the below example  is the list I want to de-duplicate. Each element in  that shares the same index as original corresponds to each other:So I want to remove duplicates in  such that whatever element I delete from original I delete the corresponding element (of the same index) in . Results I want:I can get _original using  however I cannot get the corresponding 
You can use a set to keep track of duplicates and  to iterate over indexes/values of the original list:
maybe less elegant, less easy to follow the list revesal, index slicing  the inner list comp walks the input list  backwards, asking if there is a prior matching element, if so record the index of this duplicatethen the outer list comp uses  to modify org, ky as a side effect  nested list comprehension 'dups', a 'one liner' (with line breaks):of course you don't actually have to assign the list comp result to anything to get the side effect of modifying the lists
You can manually get all the indices of duplicates like this:and then remove those indices from your  list, in reverse because deleting a key changes the indices of further items:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
