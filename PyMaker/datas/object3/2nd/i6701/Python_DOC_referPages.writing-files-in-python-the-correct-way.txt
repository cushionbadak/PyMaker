Natural Text
I have a function that writes the content of list into a text file. For every element in the list, it writes the element into the text file, each having it's own new line.i tend to notice a mistake where an empty newline is generated at the final line of a text file and I'm wondering if I am writing the file correctly?Let's say my list contains [1,2,3,4] and writing it to the text file would give meI have no idea how to check if the write function is generating an extra line in the end due to the '\n' so I'll appreciate if anyone could give me some feedback.
Instead of writing to the buffer so many times, do a , and write the result once:
Update:@John Coleman has pointed out a misunderstanding. It seems that the last line should not have any new line character. This can be corrected by using  to provide a line count, checking whether it's the last line when printing, and varying the line end character accordingly:This is not as elegant as using .join(data)` but it is memory efficient for large lists.Alternative to  is:Original answer:Why not simply use  and specify the output file?Or more succinctly:The former is preferred if you have a large list because the latter needs to unpack the list to pass its contents as arguments to .Both options will automatically take care of the new line characters for you.Opening the file in a  statement will also take care of closing the file for you.You could also use  to join the items in the list. Again, this is feasible for smallish lists. Also, your example shows a list of integers -  does not require that its arguments first be converted to strings, as does .
TryIn your example  you are just you are comparing an int the length of the list -1 instead of the last item in the list.Although this is still not perfect as you could run into issues if you have repeating items in the list such as  in this case it would be best to use a  or a  statement.
If you want to write to a file from list of strings, you can use the following snippet:
You shouldn't use  here,  shouldn't be used for a list name because the word "list" is a reserved word for python. It's a keyword. You can do  to obtain something like And about the solution to your problem, I recommend you use the  method in case you forget to close your file. That way, you won't have to close your file. Just exiting the indent will do the work. Here is how I have solved your problem:  I hope I was helpful.
I'd use a loop:


Answer URL
https://docs.python.org/3/library/functions.html#print
