Natural Text
Why does this not work (values are not swapped):But this works (values are swapped):
The reason why the first example is not working is because you are calling  multiple times, and after each time, the values in the list are changing, so the indices found in the code are not representative of the actual locations of the elements. The second example works because you have stored the first indices in two variables, and use both in the swap.Overview of first example:First part:  stores Second part:  stores Third part:  still stores This is when it gets interesting. The forth part of the example, , finds the index of , however,  was assigned  from the third segment of the code. Therefore,  is , not . Consequently,  still stores .
ExplanationIt all comes down to understand properly how the evaluation order works here, in particular the case .If we step through the statement  we'd get something like this:The other snippet is trivial:Oneliner alternativesSomething like these ones should do:Aditional notesIf you really want to know more about how these functions are really interpreted, a very good way to do so is by using the module dis, for example:
Because  will get handled as First the right handed side will get evaluated, so you get:which will have the same effect as the following lines:


Answer URL
https://docs.python.org/3/reference/expressions.html#evaluation-order
