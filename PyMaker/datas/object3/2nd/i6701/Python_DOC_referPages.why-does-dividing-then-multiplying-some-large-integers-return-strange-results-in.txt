Natural Text
I'm helping a friend on a homework assignment which requires a user to input an arbitrary number of seconds and display a string which represents that amount of time in terms of weeks, days, hours, minutes, and seconds.I have a  class that inherits from  and disallows the creation of negative units of time. I then have a  class composed of  that displays the string.Specifically, it's this phenomenon that is confusing me:How is ? It ends up causing errors when I try to represent that number of seconds in string format with my  class.
The problem is the fact that you divide in , this will turn the integer to a floating point value. Floats have limited precision so you may lose some significant digits right there. However because you subclass  you just store integers (not floats) and the decimal part is simply discarded (see for example what  returns) which will make problems even if the integer value isn't that big - and what is eventually multiplied in  is just the integral part of the division.Let's go through this step-by-step:To make this work correctly you could, for example, subclass or simply use . There this conversion works correctly:
Your division is "true division" that returns a .   is arbitrary-precision (in Python 3, which you're using), but  isn't, and it can't preserve that many digits (and rounds to a different ).


Answer URL
https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations
