Natural Text
I just started learning programming today and ran into an issue. What a way to encourage myself :)But since it's so basic, maybe someone can explain me quickly what happened hereI have a simple if statement, given to me on a courseAnd that returned True twice, which of course it not correct.To double check it I didAnd that returned correct result of In this case, why it happens that " if [number_911 % divisible_by_11 == 0] " returns true even though, in the same program we can check that and that is not correct.Does it have to do with int/float ? If so how can I force that number to be treated as a float ?
You should not be using  brackets; that creates a list objectBecause you have a list with at least one element, that's always going to be true in a boolean context; see the truth value testing documentation.This matters when the  operation produced a  result, like in your  test: returns the same result as what  tests for. Remove those square brackets altogether:andand you can just assign the result directly, since  is already going to give you a boolean:If you do need to group expressions, you need to use  round parentheses:but they are redundant here.
Don't put the expression in a list. A non-empty list is always truthy even if its contents are all falsy. Remove the square brackets:
This is because your if statement inadvertently constructs a 1 element list:A non-empty list is considered  for boolean purposes, e.g.will print "True". You can correct your code by simply removing the  and  to avoid creating a list.As an aside it is not necessary, or desirable, to initialise your result variables. It's also possible to use no  statement at all. This is equivalent:Finally, there is little use in binding literal values to variables with names that simply reiterate the value, such as . Just use the number directly.It makes sense to use constants for things such as  (acceleration due to gravity), , ,  (chess board dimensions).


Answer URL
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
