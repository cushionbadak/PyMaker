Natural Text
I want to convert a dictionary to a JSON string with boolean  values translated to the number  and boolean  values translated to the number . I'm using a  subclass, but it seems to ignore booleans ...I want this to be the result:However, this is what I get:I know I can programatically modify the data before passing it to , but is there any way I can obtain my desired result via a  subclass?
The  method of  subclasses is called only when the encoder encounters an object it doesn't otherwise know how to serialize.Unfortunately, the official documentation doesn't make this very clear. It's mentioned, but in the "keyword arguments" section for the class constructor, rather than in the documentation for the method:If specified, default should be a function that gets called for objects that can’t otherwise be serialized. It should return a JSON encodable version of the object or raise a . If not specified,  is raised.This behaviour can easily be verified: isn't designed to easily allow overriding the serialization of objects it already knows how to serialize (which is a good thing: the whole point of standards like JSON is that they're, well, standard) … so if you really want to encode booleans as though they were integers, the easiest way to do so is probably to preprocess data as suggested in your question.


Answer URL
https://docs.python.org/3/library/json.html#json.JSONEncoder
