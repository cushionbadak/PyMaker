Natural Text
I'm using PyCharm and Python 3 and I have the next python folder layout:I created packages, as you can see. The file with the main method is RemoteControlTest.py which worked perfectly with these imports:Previous to create the init.py files for the packages, I tried to use relative imports instead of the former ones, for example but it gave me an error (going to call this Case A):so fiddling around I found out that this worked for the same line:and the program was executed succesfully again, but if I use the "Refactor" option from the IDE (PyCharm) and rename "Command" to "command" , writing this line:it suddenly shows the error (Case B):Which is the problem in each case (A and B)? I can't understand why it would work in between each cases when importing from command.simpleremote. Why not one level further or closer? Why is it working with capital 'C' and not 'c'? Is this case-sensitive?I've looked at official Python docs, (and webs for PEP302, PEP328 and PEP420) but it's too complex for me in a single night. Can anyone make understand this in a simpler way (or tell me a resource I can read about this explained simpler)?Thanks in advance
I guess that you run  directly.Case APython's importer can't go to parent if the module was run directly as script instead of acquiring it going through the package structure.The Python designers presumably didn't want to let submodules be called directly as scripts so there are no really good solutions for that. Mainly you canrun the script with  when  is either current directory or in  oruse a testing framework which does the calling for you.A more detailed discussion of possible solutions can be found at Relative imports in Python 3.Case BA consequence of the direct start is that "" is in the module search path. "" seems also to be added to the path but after "".Before case B on  the import mechanism didn't find matching "" in "" and continued looking in "" where the  package was found -> success.In case B it finds in "" which isn't a package -> error.


Answer URL
https://docs.python.org/3/tutorial/modules.html#the-module-search-path
