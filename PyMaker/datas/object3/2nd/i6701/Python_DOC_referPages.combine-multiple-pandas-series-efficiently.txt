Natural Text
I understand that I can use  to merge two series:Output:What if I need to merge 3 or more series?I understand that using the following code: yields:Can I merge multiple series efficiently without using  multiple times?Thanks
Based on your edit, I believe you need a concatenation along the first axis, followed by a  along the same axis. Example A (different indices)Example B (overlapping indices)
Presuming that you were using the behavior of  to prioritize the values of the series in order as  is meant for, you could succinctly make multiple calls to it with a lambda expression. Of course if the indices are unique as in your current example, you can simply use  instead. Demo
You would use combine_first if you want one series's values prioritized over the other. Its usually used to fill the missing values in the first series. I am not sure whats the expected output in your example but looks like you can use concatYou get
Agree with what @codespeed has pointed out in his answer.I think it will depend on user needs. If series index are confirmed with no overlapping, concat will be a better option. (as original question posted, there is no index overlapping, then concat will be a better option)If there is index overlapping, you might need to consider how to handle overlapping, which value to be overwritten. (as example provided by codespeed, if index are matching to different values, need to be careful about combine_first)i.e. (note series3 is same as series1, series2 is same as series4)


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
