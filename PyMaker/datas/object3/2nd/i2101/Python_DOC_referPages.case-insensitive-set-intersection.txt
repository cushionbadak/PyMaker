Natural Text
What would be the best way to do the following case-insensitive intersection:Normally I'd do a list comprehension to convert both to all lowercased:but it's a bit ugly. Is there a better way to do this?
Using the set comprehension syntax is slightly less ugly:The algorithm is the same, and there is not any more efficient way available because the hash values of strings are case sensitive.Using  instead of  will behave more correctly for international data, and is available since Python 3.3+.
There are some problems with definitions here, for example in the case that a string appears twice in the same set with two different cases, or in two different sets (which one do we keep?).With that being said, if you don't care, and you want to perform this sort of intersections a lot of times, you can create a case invariant string object:And then I'd just maintain both the sets so that they contain these objects instead of plain strings. It would require less conversions on each creation of new sets and each intersection operation.


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.casefold
