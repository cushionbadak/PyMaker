Natural Text
This question already has an answer here:Python: get key with the least value from a dictionary BUT multiple minimum values                    9 answers                I have a dictionary such as:There's an order on the values, basically the lexicographic one, such that .I'm interested in retrieving the keys whose values are minimal according to this order. In this case the desired result is:I can do this by (1) getting the values of the dict, (2) converting it to a list L, (3) sorting L with:then (4) getting the minimal element m of the sorted L, and finally (5) retrieving the keys whose values are m.I can think of other variations of this procedure, but they all involve going through the dictionary and comparing things, and they're all perhaps too convoluted. My question is if there's some simpler, more elegant (and more efficient) way of doing this. Should I be using a different data structure instead of a dictionary in the first place?
The simplest way is to use the  function to find the minimum value, then select the keys corresponding to that minimum using a list comprehension:This solution has the  time complexity.You could also use , although this would require sorting the dictionary by values (and thus runs in  time):


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
