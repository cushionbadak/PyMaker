Natural Text
I'm trying to make an AI. The AI knows to say 'Hello' to 'hi' and to stop the program on 'bye', and if you say something it doesn't know it will ask you to define it. For example, if you say 'Hello' it will ask what that means. You type 'hi' and from then on when you say 'Hello' it will say 'Hello' back. I store everything in a list called knowledge. It works like this:I am trying to add an edit function, where you type  and it will ask for you to input a string, to change the definition of . However, I'm stuck. First, of course, I need to test if it already has a definition for . But I can't do that. I need to be able to do it regardless of the definition. In other languages, there is . However  doesn't seem to work. Here's what I have, but it doesn't work:Can someone help?
As noted by tehhowch in the comments, a dictionary would be more appropriate as these are "key: value" pairs.Using a dictionary...Storing  as a list of lists fails because each item in  is itself a list.  Therefore, searching those lists for a string type (your term) fails.  Instead, you could pull the terms out as a separate list and then check that one list for the term you're looking for.
As others have mentioned, Python would typically use a dict for this kind of associative array. You approach is analogous to a Lisp data structure called an Association List. These are less efficient than the hashtable structures used by dicts, but they still have some useful properties.For example, if you look up a key by scanning through the pairs and getting the first one, this means that you can insert another pair with the same key at the front and it will shadow the old value. You don't have to remove it. This makes insertions fast (at least with Lisp-style linked lists). You can also "undo" this operation by deleting the new one, and the old one will then be found by the scanner.Your check  could be made to work asThis uses a generator expression to convert your  pairs into  pairs on the fly.
You can use dictionary to store definitions rather than list of lists and python's  function will help you check if  belongs to specific class or not. see below example:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
