Natural Text
Using plain f-strings with a NoneType object works:However, when using a format specifier, it breaks---as does str.format():Unexpectedly, (for me, at least) the old C-style string formatting works:What is going on here? I don't understand why  doesn't evaluate to . Why should a format specifier break it?Is this a bug in python? If it is a bug, how would I fix it?
 doesn't support format specifiers. It's up to each object type to determine how it wants to handle format specifiers, and the default is to reject them:The  method of  itself raises a TypeError if passed any non-empty string. inherits this default.You seem to be expecting  to handle format specifiers the same way strings do, where . It kind of sounds like you expect all types to handle format specifiers the way strings do, or you expect the string behavior to be the default. The way strings handle format specifiers is specific to strings; other types have their own handling.You might be thinking, hey, why doesn't  fail too? First, the  requests that the argument be converted to a string by  before any further processing. Second, all conversion specifier handling in printf-style string formatting is performed by ; it never delegates to the arguments to figure out what a conversion specifier means.
 is not a string, so  makes no sense.  You can convert it to a string with .  , , and  call , , and  respectively on an object.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__format__
