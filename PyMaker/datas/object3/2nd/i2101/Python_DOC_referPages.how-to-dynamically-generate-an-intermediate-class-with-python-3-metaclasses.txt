Natural Text
See full gist hereConsider the case where we have a simple metaclass that generates the  method for a classNow this is all good and well to useBut we have problems when subclassing, because if you want to subclass the  method what of course happens is the subclassed method just gets overwritten.This will obviously give the The only way I can think to solve this is to create an intermediate class in the  method of the metaclass and make this the base for the class we are creating. But I can't get this to work, I tried something like thisBut this gives me recursion error
The infinite recursion is caused by the fact that the  constructor can return an instance of your metaclass.In this line here:If any of the base classes in  is an instance of , then the subclass will also be an instance of . That is why  can be created with no problems, but  causes infinite recursion.The fix is simple: Create the intermediate class without an  attribute. That way  will be , and the endless recursion is avoided.


Answer URL
https://docs.python.org/3/library/functions.html#type
