Natural Text
I've got a 2D array comprised of boolean values (True,False).  I'd like to consolidate the array to a 1D based on a logical function of the contents.  e.g. Input:Output (logical AND):How would this be done without a loop ?
I'm assuming you want to apply logical ANDs to the rows. You can apply .For a solution without , you can use  and .edit: actually,  is a bit redundant in this particular case.does the job just as well. 
You can use Python's built-in  method with a list-comprehension:If that's still too loopy for you, combine it with :Note that  doesn't return a list in Python 3. If you want a list as your result, you can call  instead.
You can do this without NumPy too. Here is one solution using list comprehension. Explanation: It will loop over sub-lists and even if one of the items in each sub-list is , it outputs  else .Alternative (less verbose) as suggested by Jean below:
You can do this with numpy with the  function:Here thus the i-th element is  if all elements of the i-th row are , and  otherwise. Note that the list should be rectangular (all sublists should contain the same number of booleans).In "pure" Python, you can use the  function as well, like:This approach will work as well if the "matrix" is not rectangular. Note that for an empty sublist, this will return , since all elements in an empty sublist are .
You can also do this with  and :The benefit here is that you can change the  function to something else (say, an OR or something more adventurous).


Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
