Natural Text
I'm given a task to convert a Perl script to Python.I'm really new to Perl and understanding it where I came across a command line option which is . There is good documentation provided for these parameters in Perl. But there is no much documentation for the same in python (Didn't find much info in Python official  site).My question is are those command line options  same for both Perl and Python?Do they achieve same task in both?
Questions I asked in a comment: Have you thought about if that bit of shell you were asking about is really necessary for what you're doing? Or are you just trying to blindly translate without understanding what things are doing? I'm pretty sure the answers are no and yes respectively. That's not a good place to be when you're trying to translate code from one language to another; you should understand what is going on in the original and make your new version do the same thing in whatever way is most appropriate for the new language, and not get trapped into some blind-leading-the-blind cargo cult code where you have no idea what's going on or how to fix it when it invariably doesn't work.It doesn't help that based on your other question your source program that you're trying to translate is rather confusing if you've never seen one like it before.You have a shell script that, as the only thing it does, is run perl with a program whose source is directly embedded in the shell script. The reason to do this is to have the real script run under different perl installs on the same computer depending on the environment (Personally I'd put the perl code in its own separate file instead of trying to be clever with having it directly in the shell script; perlbrew documentation examples take that approach). Is that something you need to be concerned about with the python version? I'm guessing probably not (and if it is, look into pythonic ways to do it, not obscure perlish ways). Which means the answer to another questionAre you sure you even need equivalents [to -S and -x]? is no, I don't think you do. I think you should just keep it to pure python, making the things those options do irrelevant.
The following snippet is used to support ancient systems that predate the existence of :Now, it appears that you are dealing with a bastardized and modified version, but it makes no more sense to use that. If the caller wants to use a specific , they should use  instead of relying on  to use .So, you should be using the following for the Perl script:orSo, you should be using the following for the Python script:or


Answer URL
https://docs.python.org/3/using/cmdline.html
