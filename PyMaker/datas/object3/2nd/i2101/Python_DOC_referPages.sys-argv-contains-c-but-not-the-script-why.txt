Natural Text
I'm just curious about the  behavior I find strange and inconsistent.I expected  to only contain the script arguments (not the arguments that are parsed by the  executable).In practice, I see that  contains the  argument intended for . What surprises me then is that the next argument - the script body - is missing. I expect either 2 arguments or 4, but not 3.What's the logic behind this?Update:Ok. I got it. This only happens with the  argument and not other arguments:I still find it confusing and with that in the inline script case the  would contain the script text or  or P.S. Here is the script that initially confused me:I was surprised to see the first -c in the output. Turns out you should not just pass  to .
Something has to be there (so programs that expect user-provided arguments to start at  still work correctly), and  is as sensible a choice as any.The logic is that there's only one special argv element, and that's the first one --  -- used to identify how the script was invoked. Sometimes that's a name it was invoked under; in this case,  tells you it was invoked by passing .All the other elements are expected to be arguments to the script itself. If the script text were there as an argument to that script itself, you couldn't use the same command-line parsing tools for scripts passed as text as you do for every other case.As a point of comparison, look at , which tends to cause a fair bit of confusion (it's conventional to pass  in the  position, but then people who see it are always asking "what's that placeholder for?"; it adds very little value). Python's approach of always using  in the placeholder position and passing further arguments in position 1 and onwards makes sense.


Answer URL
https://docs.python.org/3/using/cmdline.html
