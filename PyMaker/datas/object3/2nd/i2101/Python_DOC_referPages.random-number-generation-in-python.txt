Natural Text
Is this a valid way to generate  random bytes that are cryptographically random?I know  is the same as , and I know that  is definitely a cryptographically secure way of generating random numbers. However, the  part throws me off a bit. Since  doesn't support unicode, I'm assuming that this function is discarding some characters that would otherwise be produced by . I'm not sure what to think of  either, since that is the size of a byte.
random.randint(a, b)Return a random integer N such that a <= N <= b. Alias for  randrange(a, b+1).So it is inclusive you could get something bigger than a byte.
Use the  module!From the docs:The  module is used for generating cryptographically strong random numbers suitable for managing data such as passwords, account authentication, security tokens, and related secrets.In particularly, s should be used in preference to the default pseudo-random number generator in the  module, which is designed for modelling and simulation, not security or cryptography.


Answer URL
https://docs.python.org/3/library/secrets.html?#module-secrets
