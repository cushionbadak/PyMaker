Natural Text
I'm using a TimedRotatingFileHandler from logging to log to a new file each night. According to the logging docs: The system will save old log files by appending extensions to the  filename.And it is when this happens that I get a Permission Error:--- Logging error ---PermissionError: [WinError 32] The process cannot access the file  because it is being used by another process:  'C:\Users\lh\PythonIntegration\Connect\Logs\WS_API_integration_client'  -> 'C:\Users\lh\PythonIntegration\Connect\Logs\WS_API_integration_client.2018-10-08_13-00'I'm guessing that this has to do with the fact that I have a loop where I run asynchronous processes. But even when I tested it with only one logging event I get the permission error. Which means it's trying to change the extension of the same file it's writing to - hence the permission error. How do I tell logger to close the file so that it can add the extension to the filename?This is my client.py
I don't think it has anything to do with . You've started multiple processes to handle your workload. Under Windows, a file can't be renamed when it is opened by another process. In general, and even under POSIX, writing to the same file from multiple processes isn't guaranteed to work as expected because the processes have no mechanism to serialise access to the file. So the answer is to have a separate worker process that writes to the file, with others communicating events to it via socket or  Queue. See the logging cookbook for more information.


Answer URL
https://docs.python.org/3/howto/logging-cookbook.html#logging-to-a-single-file-from-multiple-processes
