Natural Text
I am trying to find the occurrences of each number for sides going 1 up to the number of sides on a dice roll. I would like the program to find the number of occurrences for each number that is in . Example: if there were a 6 sided dice then it would be 1 up to 6 and the list would roll the dice x amount of times and I would like to find how many times the dice rolled a 1 so on and so forth. I am new to python and trying to learn it! Any help would be appreciated!
Fastest way (I know of) is using  from collections (see bottom for dict-only replacement):) is a specialized dictionary that counts the occurences in the iterable you give it.  uses the given iterable (a range(1,7) == 1,2,3,4,5,6 and draws  things from it, returning them as list.  generates a immutable sequence and makes  perform even better then when using a list.As more complete program including inputting facecount and throw-numbers with validation:Output:You are using python 2.x way of formatting string output, read about  and its format examples.Take a look at the very good answers for validating input from user: Asking the user for input until they give a valid responseReplacement for  if you aren't allowed to use it:
You could trim this down a bit using a . For stuff like dice I think a good option is to use  and just draw from a list that you populate with the sides of the dice.  So to start, we can gather  and  from the user using . Next we can use the  to generate our list that we pull from, you could use  method in place of this, but for using  we can make a list in .  Next we can initiate a dictionary using  and make a dictionary that has all the sides as keys with a value of .  Now looks like this .From here now we can use a  loop to populate our dictionary adding  to whatever side is rolled.  Another for loop will let us print out our dictionary. Bonus. I threw in a  function that takes the items in our  and sorts them by their  and returns the largest  of . We can then print a most rolled statement.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/random.html#random.choices
https://docs.python.org/3/library/functions.html#func-range
https://docs.python.org/3/library/stdtypes.html#str.format
https://docs.python.org/3/library/string.html#format-examples
