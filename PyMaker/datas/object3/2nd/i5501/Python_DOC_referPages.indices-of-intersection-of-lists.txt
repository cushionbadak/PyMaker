Natural Text
Given two lists of equal length:How do I try getting an output like this:Here the intersection of two lists are obtained and the common elements' indices are arranged in the list:Trying intersection with sets is not an option since the set removes the repeating elements.
Basic-Intermediate: As a generator:Basic-Intermediate: As a list comprehension:These solutions involve two loops.Intermediate-Advanced: For fun, a dictionary is another data structure you might consider:Note the index of list  is the key in the dictionary.  All indices in list  that share the same value are appended. A  was used since it is helpful in building dictionaries with list values.  See more on the third-party tool , which simply yields all indices that satisfy the lambda condition - an item in list  is also found in .
This solution builds a dictionary that tracks the indices that values appear at in the input lists.  So if the value  appears at indices 0 and 2 of the first list and index 3 of the second, the value for  in the dictionary would be It then uses  to build all the combinations of those indices. This looks more complicated than the other answers here, but because it is  and not  it is significantly faster, especially for large inputs. Two length 1000 lists of random numbers 0-1000 complete 100 tests in ~.4 seconds using the above algorithm and 6-13 seconds using some of the others here   


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
