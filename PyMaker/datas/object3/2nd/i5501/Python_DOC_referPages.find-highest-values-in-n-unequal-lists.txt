Natural Text
I have list with  multiple lists.How can I efficiently compare them and generate a list which always contains the highest value at the current position?I don't know how I can do this since the boundaries for each list are different.The output for the above example should be a list with these values:
The most idiomatic approach would be transposing the 2D list and calling  on each row in the transposed list. But in your case, you're dealing with ragged lists, so  cannot be directly applied here (it zips upto the shortest list only).Instead, use  ( for python 2), and then apply  using  - Or, using @Peter DeGlopper's suggestion, with a list comprehension - Here, I use a  parameter to fill missing values with negative infinity. The intermediate result looks something like this - Now, applying  becomes straightforward - just do it over each row and you're done.
zip_longest is your friend in this case.
Adding a  solution 
You don't need any external module , Just use some logic and you go :output:
You can use  ( in Python3):Python2:Output:Python3:


Answer URL
https://docs.python.org/3/library/sys.html#sys.builtin_module_names
