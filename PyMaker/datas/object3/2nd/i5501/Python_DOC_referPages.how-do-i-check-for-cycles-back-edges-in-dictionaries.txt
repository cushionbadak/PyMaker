Natural Text
How can I detect whether a dictionary contains a  aka  that might end up in an infinite loop or cause a  exception.So apparently python is smart enough to figure out  and marks them by printing them as . Is there a way to access this information, so it can be skipped, without checking all the elements against each other for their id's?
The  implementation calls , a C API analogue of , which records the fact that the current thread is computing the dict's . If  is entered again for that dict without an intervening , Python knows that it's in a recursive  call, and it uses  instead of going through the usual logic.You can apply a similar technique in your own code. In whatever recursive traversal you want to write, record what objects the current thread is currently processing, and use that information to detect when you hit a cycle. Depending on what you're trying to do and the structure of your input, there may be other useful techniques.


Answer URL
https://docs.python.org/3/c-api/exceptions.html#c.Py_ReprEnter
https://docs.python.org/3/library/reprlib.html#reprlib.recursive_repr
