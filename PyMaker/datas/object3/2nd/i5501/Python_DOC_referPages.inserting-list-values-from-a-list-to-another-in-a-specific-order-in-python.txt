Natural Text
I was trying to insert list values from one list to another, but in a specific order, where dates[0] entered text[1], dates[1] entered text[3] and so on.I tried this method:This was the result, which was incorrect:I was trying to get back a list that reads like:Is there a way to insert dates[i] into text[2*j+1] in the way I wanted? Should I even use a  loop, or is there another way without listing everything in dates as well?
A simpler way to achieve this is using  in Python 3.x (or  in Python 2.x) as:The issue with your code is that you have nested  loops, and that's why for each index of , all values of  are getting added.
For your specific example of wanting to fit the dates in every other element you can use :You may need to use  and/or handle unequal lengths between the list or you'll see results like the above where  was left off the end. The second line is ugly list comprehension magic to flatten a list of lists.
The double for loop is the problem here; just using a single for loop, as inshould do the trick.However, if you are planning on the second list ending up as a string, it might be simpler to use , as inwhich will give you
Maybe it is not the most elegant version, but this works for example:zip_longest from the standard itertools module zips 2 lists of uneven length together and fills the missing values with "fillvalue". If you just discard that fillvalue, you are good to go.
A simple solution which is pretty easy to understandEssentially,  is used to just append to a list in a specific position.
You can use:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
