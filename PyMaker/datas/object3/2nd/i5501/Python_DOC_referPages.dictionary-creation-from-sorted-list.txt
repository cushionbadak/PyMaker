Natural Text
This question is about nested dictionary comprehension and I have referred the link1 and link2 before asking this.I have a list whose first element is None and the remaining of it is a list of sorted positive numbers.My requirement is to build a dictionary as:  The values of the dictionary are a two element list, first element is the sum of indexes of the occurrences of key, second is the number of occurrences.For example for element 12,sum of indexes = 3+4+5 = 12 and number of occurrences is 3.The following code does it.  My requirement is to prepare the key_dict dictionary using dictionary comprehension.My attempt:  But this is giving some erroneous result as  How should I write the dictionary comprehension in this case?
If you are going to use sorting, then look at  and the  function to add indices:You can put this all into a single expression if you so desire:Demo:or as one long expression:Your dictionary approach, on the other hand, does not require the input to be sorted, so can be run in O(N) time (sorting takes O(NlogN) time).
You can try this:Output:
Ok I have found a way to achieve my behavior, not sure why, but the trick is that dictionary updates need to happen outside the comprehension.Output: 
You can try something like this:output:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/functools.html#enumerate
