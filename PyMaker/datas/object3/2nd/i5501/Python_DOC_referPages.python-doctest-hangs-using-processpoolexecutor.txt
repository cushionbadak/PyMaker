Natural Text
This code runs fine under regular CPython 3.5:But if you run it as , it hangs.  Changing  to  makes it not hang, as does using  instead of .Why does it hang when run under doctest?
So I think the issue is because of your  statement. When you have belowIt enforces the thread to be executed and closed then an there itself. When you run this as main process it works and gives time for thread to execute the job. But when you  it as a module then it doesn't give the background thread a chance and the  on the pool waits for the work to be executed and hence a So the workaround that you can use is belowThis will prevent the  and will let you run  as well as  the module if you want
The problem is that importing a module acquires a lock (which lock depends on your python version), see the docs for . Locks are shared over multiprocessing so your deadlock occurs because your main process, while it is importing your module, loads and waits for a subprocess which attempts to import your module, but can't acquire the lock to import it because it is currently being imported by your main process.In step form:Main process acquires lock to import Main process starts importing  (it has to import  because that is where your  function is defined, which is why it didn't deadlock for ).Main process starts and blocks on subprocess.Subprocess tries to acquire lock to import => Deadlock.
doctest imports your module in order to process it.  Try adding this to prevent execution on import:
This should actually be a comment, but it's too long to be one.Your code fails if it's imported as a module too, with the same error as doctest. I get  (I named the file as ). Your lack of  violates the programming guidelines for multiprocessing:https://docs.python.org/3.6/library/multiprocessing.html#the-spawn-and-forkserver-start-methodsI guess that the child processes will also try to import the module, which then tries to start another child process (because the pool unconditionally executes). But I'm not 100% sure about this.I'm also not sure why the error you get is .The issue here seems to be that you want the module to auto start a process on import. I'm not sure if this is possible.


Answer URL
https://docs.python.org/3/library/imp.html#imp.lock_held
