Natural Text
Using python 3.6I have read the docs.When implementing  Must all attributes of an object be in the objects __hash__ function?So would this example be ok? is modified while being a key in a dictionaryBut  isn't used by it's  implementation. Is this perfectly okay? Or can this go horribly wrong? 
Answering the literal question, it's okay to leave out attributes not considered by . In fact, you can leave out all the attributes and just , though it'll kill your dict efficiency, so don't do that.Answering the implied question, it's okay to mutate an object while it's a dict key, as long as you don't mutate it in ways that affect  or . For example, the default  implementation doesn't consider any attributes of the object it's hashing at all - it's based on object identity. With the default  and , an object is only equal to itself, and you can mutate such an object all you want while it's a dict key without breaking dicts.
No. As the documentation states:Called by built-in function  and for operations on members of hashed collections including , , and .  should return an integer. The only required property is that objects which compare equal have the same hash value; it is advised to mix together the hash values of the components of the object that also play a part in comparison of objects by packing them into a tuple and hashing the tuple.In your example, both  and  only use . This satisfies the only requirement.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__hash__
https://docs.python.org/3/reference/datamodel.html#object.__hash__
