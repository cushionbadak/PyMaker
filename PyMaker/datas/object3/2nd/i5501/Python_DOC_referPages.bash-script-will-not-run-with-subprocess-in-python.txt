Natural Text
For some reason, no matter how many variations I've tried, I can't seem to execute a bash script I've written. The command words 100% fine in Terminal, but when I try calling it with a subprocess, it returns nothing.The bash executable file looks like this:Where have I gone wrong?
You should call  directly:
Like you even mentioned in a comment, you get  when you properly capture the error from the shell (and take out the erroneous ; or correspondingly refactor the command line to be suitable for this usage, i.e. pass a string instead of a list).Just to spell this out, you are attempting to run the command  with some options; but of course, it's not a valid command; so this fails.The actual script you seem to want to run will declare a function and then exit, which results in the function's definition being lost again, because the subprocess which ran the shell in which this function declaration was executed has now terminated and released all its resources back to the system.Perhaps you should take more than just a few steps back and explain what you actually want to accomplish; but really, that should be a new, separate question.Assuming you are actually trying to run , and guessing some other things, too, perhaps you actually wantIf your  is correct, you should not need to specify  explicitly (and if your  is wrong, correct it in the code before, instead of hardcoding a directory for the executable you want to call).
Since you are using , the command must be a string:On Unix with shell=True, the shell defaults to /bin/sh. If args is a  string, the string specifies the command to execute through the shell.  This means that the string must be formatted exactly as it would be  when typed at the shell prompt. This includes, for example, quoting or  backslash escaping filenames with spaces in them. If args is a  sequence, the first item specifies the command string, and any  additional items will be treated as additional arguments to the shell  itself. (docs)
 is a directory. You can't run a directory as if it were a command.Anyhow, there's no point to having  anywhere in your command at all. Leave out the , and explicitly call :
When  is used in , if the command arguments is a sequence, then the first element of the sequence needs to be the command, and the rest are treated as argument(s) to the shell itself.So, this should do:Otherwise, you can make the command a string.Example:


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.call
