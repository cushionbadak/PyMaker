Natural Text
For example, if I did this:And then set test as, and then call test(), I want it to appear as this:and notIs this possible?-darth
The sequence  (so a backslash and a letter ) is an escape sequence. Python string literals support such sequences. Many programming languages support such sequences in string literals too, and so do JSON strings. But that doesn't make such sequences universal. just takes the input the user gave, and returns that input. Nothing more, nothing less, there are no special meanings attached to this, and this is by design. So if you want to give meaning to a series of characters that is different from their normal meaning, then you have to code this yourself.You could just use ; if all you want is  to be a newline, then that's the easiest:Because you have to define string literals to tell  what to do, you now do have support for escape sequences, and have to tell Python to not make a newline character, but a literal  followed by a  character, to replace that sequence with an actual newline character.If you want to support all escape sequences that Python string literals support, then can use the  codec, via the  function:This then interprets all possible escape sequences that the Python string literal syntax supports, including , , , , etc.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
https://docs.python.org/3/library/codecs.html#text-encodings
https://docs.python.org/3/library/codecs.html#codecs.decode
