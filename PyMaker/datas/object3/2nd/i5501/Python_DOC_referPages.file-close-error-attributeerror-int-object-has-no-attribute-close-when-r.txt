Natural Text
Going through Zed Shaw's book Exercise 17 [about copying one file to another] where he reduces his these two lines of code into one as :there's also a piece of code where he writes So I was reducing this into one line same as above :This seems to work fine but when I close the  there's an error as:I am unable to grasp what is going on and how  is working here?
The two are not equivalent. If you write , you have implicitly written:Now as we can see in the documentation of : writes the contents of string to the file, returning the number of characters written.So it returns an integer. So in your second sample  is not a file handler, but an integer. Further in the code, you somewhere aim to close the  file handler with . But since  is no longer a file handler, it thus makes no sense to call close on this.Nevertheless, by using a context, you do no longer need to perform a  yourself, so more elegantly is probably:The reduction in the book itself is allowed (well at least semantically, it is better to use context manager), since the author probably never closes the file handle explicitly.
Following is usually better approach, both for reading & writing: There is no need to close f with this code. With code  "val" will be return value of  function, not  function. 
The  method returns the number of characters written in your file which is an integer not a file object and therefore doesn't have a  method.Also, calling the I/O methods directly on  is recommended only if you don't want to have any further interaction with the file. Besides, the most proper way to deal with file objects is to use a  statement that closes the file automatically at the end of the block and there's no need to call the  manually.
The  function reads the file and then returns the file content, so when you assign  to  it's assigning the returned file content.  The difference is that the  function returns the number of characters written, therefore your  is now an  object.Read more about it here: https://docs.python.org/3.6/tutorial/inputoutput.htmlTherefore, you cannot combine the  function into one line and expect to have a referenced file object to close after, and that's disastrous.The preferred way is to use the  block.  Refer to @Willem's answer for more details.
The author "Zed" has already clarified when you will read the page 64 from that book. Please read below:When I try to make this script shorter, I get an error when I close the files at the end.   You probably did something like this, indata = open(from_file).read(), which means you donâ€™t need to then do in_file.close() when you reach the end of the script. It should already be closed by Python once that one line runs.


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects
