Natural Text
According to the docs, it should be as simple as:But I cannot seem to find any examples on how this can be achieved.I am using the pyupdater to download updates from bitbucket and launch the newest version of exe.  I am using this library to create a script that connects to bitbucket fine, but then it later redirects to Amazon with  (this is bitbucket auth) meaning I get .  Amazon does not support basic auth. This should be easily solvable, but I cannot find much on this issue.The solutions presented here, require Recreating each redirected request manually.  This would become an ever-growing list and get tedious very quickly, if I had to do this for new file I uploaded.  It also does not continue the rest of the script, but rather downloads to the same directory.As this is how Pyupdater handles the downloads this is where the issue would likely be solved.Line 366 of downloader.py:Any ideas on how to fix this so it no longer creates this error.Full Error (ctrl f -> 400):For those that want to replicate the error for themselves Iâ€™ve written the steps I have taken exactly.
Edit-1:You need use below code for your  without any changes to original answerYou need to use monkey patching for this. Below patch should do the jobA sample test worked for me with the above patchYou need to execute the code before import pyupdater
I just checked and I believe it is a problem with  (I don't know what it is, never used).It seems to assume that all the response's body will be compressed in GZIP. There is no flag I can find that would prevent this assumption. The actual content is actually not compressed at all.Here is some relevant code from pyupdater:Here is a sample of data I receive:I believe you should open a ticket on https://github.com/JMSwag/PyUpdater and see if they can help you further.
Requests is a pretty fantastic library, don't waste time with anything else, unless there is a really good reason:Also, it's probably worth noting that the credentials here aren't shouldn't be used anymore. Basic Auth can be decoded pretty simply. 


Answer URL
https://docs.python.org/3/library/urllib.request.html
