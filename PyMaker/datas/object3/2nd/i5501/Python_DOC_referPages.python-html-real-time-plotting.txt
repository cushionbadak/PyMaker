Natural Text
I am trying to incorporate some real time data visualizations in a web app I'm working on I am currently using matplotlib and plotly. The issue with matplot is that it is not web based and the issue with plotly is that it has very limited options for real time plotting with its streaming feature.The following is an example of the type of plots that I am trying to create. The ones shown are just static, but since I have live data I would like to create the same type of charts that update in real timeThe data is stored and updated in an SQL server so I essentially just need to have a script that fetches the most recent value from the SQL DB and then adds it to the figure every second or so. Whats the best (HTML compatible) solution to go about this?Have you find a way to slove this problem? because I have met the same issue. I have realized the dynamic graph plotting which can be refreshed real-time and continuously using matplotlib. Now, I want to draw the dynamic graph on webpages, do you have any suggestions or example which you have completed?  
Some of the comments contain suggestions worth looking at, this Stack Overflow question may also be of use (though its not HTTP), and indeed you yourself mention plotly, which has this real time plotting feature.However you mention that you've already got the graphs you want with matplotlib.  I did too, so wrote some very simple code to serve any number of graphs via HTTP, which requests any parameters to the plot too, one of which is a refresh period.  As you can tell by the code, it is deliberately minimal for temporary diagnostics and monitoring (of machine learning progress in my case).Usage:Use python 3.6+ (I use f-strings a lot) & paste code into a fileAdd your plots as methods under the PlotRequestHandler class (method name must start with 'plot_')Install any dependencies (plac + any other libs needed for plotting e.g. I use pandas, matplotlib)Run file via double click (no parameters) or command line (with/without parameters)Navigate pages via web browserCode:


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#new-features
