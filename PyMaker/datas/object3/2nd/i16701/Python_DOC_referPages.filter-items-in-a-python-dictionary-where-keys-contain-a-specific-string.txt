Natural Text
I'm a C coder developing something in python. I know how to do the following in C (and hence in C-like logic applied to python), but I'm wondering what the 'Python' way of doing it is.I have a dictionary d, and I'd like to operate on a subset of the items, only those who's key (string) contains a specific substring.i.e. the C logic would be:I'm imagining the python version would be something likeI've found a lot of posts on here regarding filtering dictionaries, but couldn't find one which involved exactly this.My dictionary is not nested and i'm using python 2.7
How about a dict comprehension:One you see it, it should be self-explanatory, as it reads like English pretty well.This syntax requires Python 2.7 or greater.In Python 3, there is only , not  so you would use:
Go for whatever is most readable and easily maintainable. Just because you can write it out in a single line doesn't mean that you should. Your existing solution is close to what I would use other than I would user iteritems to skip the value lookup, and I hate nested ifs if I can avoid them:However if you realllly want something to let you iterate through a filtered dict then I would not do the two step process of building the filtered dict and then iterating through it, but instead use a generator, because what is more pythonic (and awesome) than a generator?First we create our generator, and good design dictates that we make it abstract enough to be reusable:And then we can use the generator to solve your problem nice and cleanly with simple, understandable code:    In short: generators are awesome.

Jonathon gave you an approach using dict comprehensions in his answer. Here is an approach that deals with your do something part.If you want to do something with the values of the dictionary, you don't need a dictionary comprehension at all:I'm using ) since you tagged your question with python-2.7Now the result will be in a list with  applied to each key/value pair of the dictionary, that has  in its key.If you just want to deal with the values and ignore the keys, just change the list comprehension: can be any callable, so a lambda would work as well:The inner list is actually not required, as you can pass a generator expression to map as well:
You can use the built-in filter function to filter dictionaries, lists, etc. based on specific conditions.The advantage is that you can use it for different data structures.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.items
