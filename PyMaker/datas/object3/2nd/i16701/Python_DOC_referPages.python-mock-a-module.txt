Natural Text
Is it possible to mock a module in python using ? I have a module named , while running tests I want to mock it by another module . how can I do that ? Thanks.config.py:test_config.py:All other modules read config variables from the  module. While running tests I want them to read config variables from  module instead.
If you're always accessing the variables in config.py like this:You can replace the  module imported by whatever module you're actually trying to test. So, if you're testing a module called , and it imports and uses , you can say:But this isn't actually replacing the module globally, it's only replacing it within the  module's namespace. So you would need to patch it everywhere it's imported. It also wouldn't work if  does this instead of :You can also mess with  to do this:But generally it's not a good idea to mess with , and I don't think this case is any different. I would favor all of the other suggestions made over it.
foo.py:test.py:As you can see, the patch works even for code executed during .
If your application ("app.py" say) looks likeAnd gives the output:You can use  to patch the individual config variables:This results in:Though I'm not sure if this is possible at the module level.
Consider this following setupconfiguration.py:now everywhere else in your code you can use:And when you want to mock your coniguration file just set the environment variable "TEST". Extra credit:If you have lots of configuration variables that are shared between your testing and non-testing code, then you can derive TestConfig from Config and simply overwrite the variables that need changing:


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.dict
