Natural Text
I have a bunch of 64-bit floating-point-format strings, and I have to convert them into floating-point numbers. I know what the format looks like, but I’m wondering whether there’s a built-in function can fulfill this job directly, as in:I know how to convert these bit patterns to numbers manually, but it needs a lot of bit shifting. Is there a better way?I modified 'C06FCA5E35000000' to '\xC0\x6F\xCA\x5E\x35\x00\x00\x00', and stored it to myString.Why did it happened?I didn't use binascii.a2b_hex or binascii.b2a_hex, beacuse it converts 'A' to '41' or '41' to 'A'. Both are not what I want. Right?Now I know why it happened, but I still don't know how to solve the situation.
You can use .  is a big-endian double; see  for more!If your string is really , you can convert it first into bytes using .


Answer URL
https://docs.python.org/3/library/binascii.html#binascii.a2b_hex
