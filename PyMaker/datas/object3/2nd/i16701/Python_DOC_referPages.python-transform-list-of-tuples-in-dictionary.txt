Natural Text
Wondering if there is a more idiomatic (pythonic) way of doing this. I have a list of tuples returned by a cursor object, and I'm trying to regroup the data in a dictionary. The data I get is formatted as such:Notice that departments repeat. Each line with the same department represents a different kind of data. I need to regroup that data in a dictionary that contains a key (department name) and the value would be a list of all the tuples that have that department as its first member. So something like this:Here is my code. It's working at the moment but I'm not sure if it's the most efficient/pythonic way of doing things.Thanks!
I would use a :
You could use a nested list comprehension:
If all the tuples have 4 elements, you could just unpack the tuples:
You can use the dictionary "setdefault" method ( which can be replaced in many cases by using the defaultdict - but not always - I like the setdefault as its more general and quite powerful )Use cases for the 'setdefault' dict methodAlso, mathsaey's answer is wrong as the values of his dictionary are list of lists rather than list of values. I don't have enough reputation to comment (new account), so adding this observation here.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
