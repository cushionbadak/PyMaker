Natural Text
I'm trying to plot a piecewise fit to my data, but I need to do it with an arbitrary number of line segments.  Sometimes there are three segments; sometimes there are two.  I'm storing the coefficients of the fit in actable and the bounds on the segments in btable.Here are example values of my bounds:Here are example values of my coefficients:Here's what my code looks like:The problem is that lambda sets itself to the last instance of the list, so it uses the coefficients for the last segment for all the segments.  I don't know how to do a piecewise function without using lambda.  Currently, I'm cheating by doing this:But this makes me feel icky on the inside.  I know there must be a better solution.  Can someone help?
This issue is common enough that Python's official documentation has an article Why do lambdas defined in a loop with different values all return the same result? with a suggested solution: create a local variable to be initialized by the loop variable, to capture the changing values of the latter within the function. That is, in the definition of  it suffices to replace by By the way, one can use one-sided inequalities to specify ranges for numpy.piecewise: the last of the conditions that evaluate to True will trigger the corresponding function. (This is a somewhat counterintuitive priority; using the first true condition would be more natural, like SymPy does). If the breakpoints are arranged in increasing order, then one should use "x>=" inequalities:Here each coefficient will be used for the interval that begins with the corresponding breakpoint; e.g., coefficient c=0 is used in the range , coefficient c=2 in the range , and so on.


Answer URL
https://docs.python.org/3/faq/programming.html#why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result
