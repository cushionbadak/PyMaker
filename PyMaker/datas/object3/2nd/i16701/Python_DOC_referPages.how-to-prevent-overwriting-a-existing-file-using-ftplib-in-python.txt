Natural Text
I made a python program which stores the user entered data in a sqlite database. I want to upload it to ftp server. I tried using ftplib in python. Here, database file name is same for all the users who uses the program.Here, my problem isIf user1 upload the file to ftp server, and next user2 uploads it. The file is overwritten. How can I stop this?Fairly: How can I stop overwriting a existing file and rename the current(file going to be uploaded) file in ftpserver. So, that I will have those 2 files?
Use ftplib.mlsd() to list the directory before uploading.  If the given file is already there, then don't upload it.Be careful with this -- if two people are uploading at the same time, it's still possible for user A to upload and overwrite user B.
Your question lacks details (among the rest: what version of Python you are using, what OS are you on, and most crucially what the naming scheme for the copied files should be).I'll assume that each client program uses a SQLite file named "userdata.db" and that you want to make sure that on the FTP server each copy is identified by the user name.So User:Pamar will have userdata.db.pamar on ftp server, while User:Lucy will end up with userdata.db.lucy(I hope you have some way to be sure that no two users have the same name, btw).The easiest solution I can think of is:Use shutil to make a temporary (local) copy of the db with the desidered name, transfer it by FTP, then delete it.I.e, in the case of User Pamar you'll have:Step 1: Copy /userhome/pamar/userdata.db -> /userhome/pamar/userdata.db.pamar Step 2: FTP transfer /userhome/pamar/userdata.db.pamar -> FTPServer Step 3: Delete /userhome/pamar/userdata.db.pamarIt's not very elegant, and you will use some extra space on the (local) filesystem until the copy is completed, and this may be a problem if the userdata.db is particularly large (but then you would probably not use sqlite in the first place).


Answer URL
https://docs.python.org/3/library/ftplib.html#ftplib.FTP.mlsd
