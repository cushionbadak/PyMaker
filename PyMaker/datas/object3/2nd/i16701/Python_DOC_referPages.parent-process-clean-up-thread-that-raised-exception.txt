Natural Text
I have some code that contains two objects something to this effect: My problem is this.  If  is spawned and running properly, the  will give something like this  .  If it raises an exception, it'll print something like this  My  object need to know that its stopped, clean up it's own  variable, then restart another  in its place.  Obviously this is over simplified but hopefully you get my point.  Calling  on the child doesn't work either because  has many other things to do and since  is blocking that causes a problem.  EDIT: What ended up solving my problem was moving my reference to the child thread outside the scope of my parent object.  When the reference was in the global scope, I didn't have a problem unsetting it when I needed to restart the child. 
The following code maintains a 'pool' of threads (aka children).  Every second, dead threads are removed, and new ones added to maintain 3 threads at all times.For a larger projects consider going to the concurrent.futures module, specifically the  function.  I also recommend 3rd party library  (flexible, fast, Python2 only) and internal module  (has Pool, is included in all Pythons).sourceoutput


Answer URL
https://docs.python.org/3/library/concurrent.futures.html
