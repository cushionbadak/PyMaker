Natural Text
I'm making an application that uses Python's  library to communicate data across an LAN. The code that is responsible for this has its own executable file. But when it's called a command windows is shown on the desktop.How can I  run this code without having a shell popping up ?Details:The program only handles the networking; there is no reason for the shell popping up (I never use , etc. in the code). Is there a way to stop the shell from being displayed which I am unaware of? The networking program needs to remain separate from the rest of the program so that, if necessary, the user can call it themselves.The program was converted from python to an windows executable through the cx_Freeze, in case that matters)
Youâ€™ll need to put in your target directory for DISTFOLDER and your entry point script for entrypoint. The console-less part is as simple the  tag.or:They do pretty much the same thing.
The answer submitted by @Kyllopardium may be exactly what you need. There's no reason to create a console application if you never intend to use the console interface. That said, given that the networking program also needs to run as a standalone application, you may need to build a separate executable for a console interface. If you prefer to have a single console program, you can instead use the subprocess module to hide the console window when launched from the main application. Configure an instance of  to hide the application window and pass this to the  constructor. You can also pass this parameter to the subprocess convenience functions, , , and . For example:Note that the program is run directly instead of via the cmd.exe shell. So the window that gets hidden is the program's own console window, not a "cmd shell" window. This window is hosted in a separate process (e.g. conhost.exe in Windows 7+). Multiple applications can share the same console, such as when a parent process (e.g. python.exe) starts a child process and waits for it to exit. If the parent process doesn't have a console (e.g. pythonw.exe), then Windows creates a new console for the child.


Answer URL
https://docs.python.org/3/library/subprocess.html#windows-popen-helpers
https://docs.python.org/3/library/subprocess.html#popen-constructor
https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module
