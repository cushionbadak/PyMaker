Natural Text
First post, also first attempt to code something beyond 99 bottles... I am working on code which accepts an argument from the cli such as a text file. Expected usage would be:$:myfile.py input.txtI've got that piece going smoothly however if an argument is not supplied, the cli returns an error and i'd like to provide some error response such as a help list or just a simple "Nope - give me a file"Right now here is the first few lines: If i supply the expected argument, everything is fine, but if no argument is supplied, I get this:Lets say I just want the variable "Empty" to print if the condition isn't met... what would i do to fix that. edit: after trying one of the suggestion below with argparse I am getting better results but I notice argparse throwing in a character I am not expecting. The code is now:when I run this I expect to see -h and -f as options but I see an extra F in the description. Can you tell me how to get rid of this extra F. I have tried a few things but it either appears, or I get errors when I run it.
use  for parsing cli input arguments:example code for your case:running from terminal without argument we get:running with arguments:creating custom parser may take time and is not that straight forward.  has lots of features and is embedded inside the stdlib so prefer to use it.Another ExampleI usually create  function so testing it or invoking it outside of  is easier:and you can call it like this:Updateuse the  optional argument for changing the display name of the variable on the help. I encourage you to read the doc of  for more examples and use caseslike this:output of :note: do not forget the  argument so you'll get an error message from .
You need to check for the correctitude of sys.argv before you do something with it, if you do after that is to late obviously.Like this for example
 is great, but you can also keep it simple


Answer URL
https://docs.python.org/3/library/argparse.html
https://docs.python.org/3/library/argparse.html
