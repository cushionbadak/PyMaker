Natural Text
Is there a way to remove a duplicate tuple based on the index in the tuple. Say I have Can I randomly keep one tuple where each duplicate has the same value at index 2? So, there are 3 tuples that have value 1.0 at index 2, two tuples that have value 2.0 at index 2, one that has value 3 at index 2, and so on. So, (0, 4, 1.0) might randomly be selected from the value 1.0 at index 2 and (1, 3, 2.0) might randomly be selected from the value 2.0 at index 2. Say, (1, 2, 3.0) was randomly selected from the value 3.0 at index 2.Then, my list would look like I have never come across a function that does this or at least efficiently. 
You could use  to group the tuples based on value at index 2. Then for each group you can use  to pick a tuple:In above  returns iterable  tuples where key is value returned by second parameter given to  and group is iterable of elements within a group:Since we don't need the key we can discard it and convert group to sequence that  expects:Note that above expects that tuples with same value at index 2 are next to each other in the input. If that's not the case you can sort the original list accordingly before passing it to .Update In case you just want three first values of the result you can use generator expression instead of list comprehension and pull values out from there with :
I would not do this in one operation, though I am sure it's possible.I would first make one list for each value at index :Then pick one tuple in each of the groups:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/random.html#random.choice
https://docs.python.org/3/library/itertools.html#itertools.islice
