Natural Text
Using , what is the difference between "Meta Path Finder" (found by traversing over sys.meta_path) and Path Entry Finder" (found by traversing over sys.path_hooks)?The first type is called upon begin of an import, but when is the second type used? Do both return a spec object? I want to implement a customized import, where a module can be imported from sources other than *.py or *.pyc, e.g. from a stream. How can this be done?
sys.path_hooks returns a finder factory.Path hooks are called as part of sys.path (or  ) processingas we read in PEP 302 relevant part which you should read to do what you want.Coming to speak of, we use a custom hook in my code but I would not recommend you to copy it verbatim (I am really not sure about the hocus pocus we do with init files)However the process is a bit like in there - the  method returns self or None depending on what you want to accept as a module and the  method proceeds to load that by compiling the code and assigning it an entry into . By replacing those parts you can pretty much load whatever you want.Related:Package-specific import hooks in PythonPython sys.path_hooks Examples 
When a module is to be imported, the interpreter first walks through the list of objects in , calling the  or (deprecated since 3.4)  method on each. The interface is documented in the  importlib.abc.MetaPathFinder abstract base class. These are queried before any other importers (including frozen and built-in) are checked and so can override any other import processing.If all the above returned , the interpreter then walks through the list of paths in . For each path, if finder is not already  cached for that path in  it walks through the list of callables in , calling each one with the path to see if it will produce a finder; it caches the first one it finds in .Once it's got the finder it queries that via the  or deprecated  method to see if it can find that module. If so, it can continue on to import it, otherwise it starts the step above with the next path on .This was initially described in PEP 302, but be warned that that's now a bit out of date; the importlib documentation appears to be the current spec.The above description is from my personal notes.


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.abc.MetaPathFinder
https://docs.python.org/3/glossary.html#term-finder
https://docs.python.org/3/library/importlib.html
