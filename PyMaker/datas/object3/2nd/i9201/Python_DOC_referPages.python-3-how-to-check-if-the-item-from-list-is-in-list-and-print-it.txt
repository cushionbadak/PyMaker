Natural Text
I have a list of lists, which contains coordinatesand I need to find pair of lists with the same point[i][1] and then print both of them. This coordinates are given just for instance. In the code they're given randomly.How to do this?
You can use itertools.combinations to create a series of pairs between each two items, and filter out only those with the same second item:
There's no easy and efficient way to do what you want with your current data structure.You can either use an inefficient method (), or convert your data to another format where you can use a more efficient algorithm.Mureinik's answer is a good way to do an  search, so I'll offer a solution that uses a dictionary to make the checking fast:This is a generator, which will  pairs of points with matching  values. It should use  space and  time (for  input points and  pairs of matches).
Not sure I understand the question correctly, but here is my approach.I use python 3.5.2, by the way.If your intent is to capture all lists with [1] or y-coordinate (depending on how you look at it) with a value of 820, then the code could be:
Here is code that will work for you:second_list stores the y-coordinates of your list. Then, the program sorts the list of y-coordinates in ascending order and appends them to the_new_list. Finally, we loop over the_new_list and see if any numbers after each other are equal, and if so, append them to the list repeated. Then, we loop over the_list and see if any points are in repeated. If so, we print the entire thing. I hope that helps.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
