Natural Text
The JSON equivalent of a Python dict is a JSON object. However its keys must be strings, that's a well-known limitation.I need to support also boolean and numeric keys. I could make a simple Python value <--> JSON string one-to-one translation:But I'd like to ask if there is some existing recommendation or some kind of standard for this. Simply anything that it is worth to be compatible with.
JSON isn't able to do that and I don't know of any widely-used extensions of JSON that allow you to do this. You'd have to write the serializer and deserializer yourself, which probably wouldn't be that difficult if you subclass  and .If you're able to switch protocols, there are JSON-ish protocols that support non-string keys. MessagePack is one:
This would achieve what you want:You'd then have to de-serialize this, and it would only work for basic types.
Since you cannot issue standard JSON, why don't you just use  to serialize and  (standard package) to deserialize?


Answer URL
https://docs.python.org/3/library/json.html#json.JSONEncoder
https://docs.python.org/3/library/json.html#json.JSONDecoder
https://docs.python.org/3/library/ast.html
