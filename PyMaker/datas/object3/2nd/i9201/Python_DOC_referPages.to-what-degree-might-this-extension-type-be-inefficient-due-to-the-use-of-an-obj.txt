Natural Text
I was told the following extension type may not be very efficient due to the need for a Python object type-declaration for the use of . Can someone explain why this is, and whether  could still be worth using (as opposed to )? 
I may have overstated the efficiency part in my other answer. What I meant was: don't expect huge speedups (more than 1.5-2x) when you have to use Python objects. You can use them and it won't be slower (except for very rare cases) than using them in python code. However the great power with Cython is that you can utilize native c types and homogeneous data structures like c-arrays (which can be much faster than python lists or even dictionaries) or if you go c++ then also ,  and such.One point to remember when dealing with Python objects is that all python objects are pointers to some structs, so each one adds one layer of indirection - that's even true for Python s. However the Cython  is a C-integer without that indirection. That's one of the main reasons why -loops in Cython are much faster. (However they are limit to the range of 64bits not unlimited precision like in Python, that's the trade-off).Another point is that operating on python objects means that you need to go through pythons lookups, pythons operations, etc. However for built-in objects cython can use the Python C API to gain additional speed by avoiding the python based lookups ( is not among them, I guess), for example with declared dicts the following code compiles differently:You probably could guess which one is faster, the one that adresses the dict directly ( is probably a sophisticated wrapper for  and ) or the one that just adresses a python object with  (going through the python lookups). This won't be a huge speedup neither but it's noticable.In the end I would say that normal (and declared) s would definetly be faster than  (except that's some C or C++ class) in Cython code.


Answer URL
https://docs.python.org/3/c-api/dict.html#c.PyDict_GetItem
https://docs.python.org/3/c-api/dict.html#c.PyDict_GetItemString
