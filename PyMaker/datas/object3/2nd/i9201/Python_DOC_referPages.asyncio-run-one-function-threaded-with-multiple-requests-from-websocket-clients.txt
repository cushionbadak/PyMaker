Natural Text
I have a websocket server (python 3.x) taking requests where each is a url variable. It runs just fine except it only executes each request in serial, after one another. While the function is running it also blocks the client(s) trying to connect. Non-blocking is what i want!Asyncronous multiprocessed threading of both websocket and subprocess function.The ability to set the number of cores to use. This is not obligatory though.Here's what i've got:ANSWER (illustration and  in accepted answer)So, I didn't get very far with this frustration. I reverted back to my original code and as it turns out, you need to sleep the function with . Now it runs perfectly fine, I tested with multiple clients at the same time and it handles it asynchronously.Update: as suggested by @udi, if you want a slow external process, the way to go is asyncio.subprocess and not subprocess. Reading from pipe with a blocking call stalls the other threads, which is what asyncio.subprocess takes care of.
 is blocking.Try:With this test client:Now compare the result when  is replaced with !If you need to run a slow external process via asyncio, try :An example external program:with this server:


Answer URL
https://docs.python.org/3/library/asyncio-subprocess.html
