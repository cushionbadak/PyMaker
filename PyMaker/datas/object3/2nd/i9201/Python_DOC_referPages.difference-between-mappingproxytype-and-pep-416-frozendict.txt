Natural Text
While  was rejected, a related class  was added to public API in python 3.3.I understand  is just a wrapper around the underlying , but despite that isn't it functionally equivalent to ?In other words, what's the substantive difference between the original PEP 416  and this:Of course  is not hashable as is, but just as the PEP suggested for , it can be made hashable after ensuring that all its values are hashable (MappingProxyType cannot be subclassed, so it would be require composition and forwarding of methods).
TL;DR is a read only proxy for mapping (e.g. dict) objects. is an immutable dictAnswerThe proxy pattern is (quoting wikipedia):A proxy, in its most general form, is a class functioning as an  interface to something else.The  is just a simple proxy (i.e. interface) to access the real object (the real map, which on our example is dict).the suggested  object is just as set is to frozenset. a read only  (immutable) object which can only be changed upon creation.So why do we need ? example use case is where you want to pass a dictionary to another function but without it able to change your dictionary, it act as a read only proxy, (quoting python docs):Read-only proxy of a mapping. It provides a dynamic view on the  mappingâ€™s entries, which means that when the mapping changes, the view  reflects these changes.lets see some example usage of the Update:because the PEP did not make it into python, we cannot know for sure what the implementation that would be.by looking at the PEP we see that:would raise an exception as  is not hashable value, but on your implementation it will create the object. of-course, you can add a validation for the value as noted on the PEP.I assume part of the PEP was memory optimization and implementation of this kind of frozendict could have benefit from the performance of dict comparison using the  implementation.


Answer URL
https://docs.python.org/3/c-api/dict.html#c.PyDictProxy_New
