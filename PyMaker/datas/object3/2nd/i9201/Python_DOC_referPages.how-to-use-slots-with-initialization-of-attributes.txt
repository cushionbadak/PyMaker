Natural Text
I read through the main answers on usage of slots and it has given me an idea of how and where to use  . Now, I am porting a code from Python 2 to Python 3 which is similar to as following:But this is giving error Python 3 while working fine on Python 2:. I change the code to and it works fine. My query is, is it even the correct change ?As i got from original code, I guess it is saying that don't use  for saving memory or faster access or whatever reason but at the same time is also trying to specify the type of attribute  as set(). Can the change above be the right way to say it or it can have some side effects.Further Experiments: I experimented further with following variants (on Python 3): and it gave following output. We can see that only C object shows correct footprint i.e. no  and only  . Isn't it what ideally we would want ? Any explanation on  would also be helpful.Also on Python 2, both B and C object show same footprint. Based on that should C be the right way to put it as it is compiling on both Python 2 and 3 as well.
But this is giving error Python 3 while working fine on Python 2:. While you didn't get an error in Python2 at class creation/compile time like in Py3k, if you try to actually set the value of , you get :Also, see the fourth note in the slots documentation: are implemented at the class level by creating descriptors (Implementing Descriptors) for each variable name. As a result, class attributes cannot be used to set default values for instance variables defined by ; otherwise, the class attribute would overwrite the descriptor assignment.Wrt your modification:I change the code to The modified class B has a  inside , not  so it's just a local variable in init, and not accessible anywhere else in the class. Change that to:To correctly initialise , do this:Wrt further experimentation:In class D,  is a variable only inside . It's not the (special) class variable ; or even the instance variable . So it has .Class A has none, so also has .Class C has  correctly.


Answer URL
https://docs.python.org/3/reference/datamodel.html#notes-on-using-slots
