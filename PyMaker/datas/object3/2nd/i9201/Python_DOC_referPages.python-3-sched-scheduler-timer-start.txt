Natural Text
Here's what we want to be able to do:Schedule many calls, each for a precise number of milliseconds after we start a timer T.Set something else up to run in another thread S.Start thread S and start the timer T.How can we do this?Here's the API reference. We actually expected the "time units" in  to be with respect to the call to , but apparently it's with respect to that call to . With enough events, that introduces a time difference between jobs scheduled at i=0 in our scheduling loop and i=10**6, let alone the time difference that setting up the thread S introduces.Thanks!
You could always implement your own scheduler with . Here's a simple example of a scheduler where the delay is relative to :Output:Note that the tasks are not run exactly when requested. This is because of limitations of  and possibly the time it takes to execute previous task.
I just wanted to share the solution we actually used. I graphed a scatter plot of x=scheduled-time and y=actual-time for executions using two methods:using something similar to niemmi's answer, using using a dedicated thread to poll without sleeping:The second method had a slope closer to 1.0 with an average abs error of about 1Î¼s (though some expected bias). We sacrificed a thread completely and used the second method.I still find the  package pretty counter-intuitive.


Answer URL
https://docs.python.org/3/library/sched.html
https://docs.python.org/3/library/sched.html#sched.scheduler.run
