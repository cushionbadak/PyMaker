Natural Text
Using the github webhooks, I would like to be able to pull any changes to a remote development server. At the moment, when in the appropriate directory,  gets any changes that need to be made. However, I can't figure out how to call that function from within Python. I have tried the following:But this results in the following errorTraceback (most recent call last):   File "", line 1, in     File "/usr/lib/python2.7/subprocess.py", line 679, in  init      errread, errwrite)   File "/usr/lib/python2.7/subprocess.py", line 1249, in _execute_child      raise child_exception OSError: [Errno 2] No such file or directoryIs there a way that I can call this bash command from within Python?
Have you considered using GitPython? It's designed to handle all this nonsense for you.https://github.com/gitpython-developers/GitPython
 expects a list of the program name and arguments. You're passing it a single string, which is (with the default ) equivalent to:That means that subprocess tries to find a program named literally , and fails to do so: In Python 3.3, your code raises the exception . Instead, pass in a list, like this:By the way, in Python 2.7+, you  can simplify this code with the  convenience function:Also, to use git functionality, it's by no way necessary (albeit simple and portable) to call the git binary. Consider using git-python or Dulwich.
This is a sample recipe, I've been using in one of my projects. Agreed that there are multiple ways to do this though. :)The problem with your code was, you were not passing an array for  and hence was trying to run a single binary called . Instead it needs to execute the binary  with the first argument being  and so on.
The accepted answer using GitPython is little better than just using  directly.The problem with this approach is that if you want to parse the output, you end up looking at the result of a "porcelain" command, which is a bad ideaUsing GitPython in this way is like getting a shiny new toolbox, and then using it for the pile of screws that hold it together instead of the tools inside. Here's how the API was designed to be used:If you want to check if something changed, you can use
Try:


Answer URL
