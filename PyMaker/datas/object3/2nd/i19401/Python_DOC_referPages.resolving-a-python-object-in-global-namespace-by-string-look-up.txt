Natural Text
Let's say you want the object at the end of strings of object names: an example string would be , and the list of strings all take the form .In every case, you know that there is an active instance of the X1object, whatever its specific name. With the example string, the code has already called an instance of . You can load  with , and generically load  with .What you want is the object (usually a value) at then end of the string. So with the example string, you want the value of . Is there an easy way to convert the string so that it fetches its end object?Below is the code I created to handle this problem, but it seems like a brute force approach that fetches each attribute in turn until it finds the last one.
You can use :Here we simply look up  as a global, then loop over the rest of the names to do a  for each one on the result so far.Demo:
There is a Python library called zope.dottedname which does exactly what you want:https://pypi.python.org/pypi/zope.dottednameIt resolves arbitrary strings to corresponding objects in Python namespace, including attributes of objects.
You should use importlib


Answer URL
