Natural Text
I'm quite new to Python and I need to make declare my own data structure, I'm a bit confused on how to do this though. I currently have:This isn't working, however, when I try to define an instance of the class with:Every value just ends up as a (0.0, 0.0) (which is the value for velocity and force).Could someone explain where I'm going wrong, all I need from the data structure is to be able to pull the data out of it, nothing else. (edit: actually, sorry, I will have to change them a bit later on)Thanks
First off, you should understand that  is syntactic sugar. It's nice to have, but if you don't need it, don't use it.  and  are basically if you want to be able to access items from your object using bracket notation like:if you don't need to this, don't worry about it. Now, onto everything else. It looks like you've got the main characteristics you want your object to carry around in your  definition, which is fine. Now you need to actually bind those values onto your object using :That's really it. You can now access these values using dot notation, like so:One of the nice things we get out of this is that if we ask python what  is, it will tell you that it is an instance of the  type, like so:In theory, when you work with objects like this you want there to be a "layer of abstraction" between the user and the data such that they don't access or manipulate the data directly. To do this, you create functions (like you tried to do with ) to mediate interactions between the user and the data through class methods. This is nice, but often not necessary. In your simpler case, to update the values of these attributes, you can just do it directly the same way we accessed them, with dot notation:You might have figured this out already, but there's nothing magical about the  function, or even the  definition (where you would/should generally be defining most of your class's attributes and methods). Certain kinds of objects are pretty permissive about allowing you to add attributes whenever/wherever you want. This can be convenient, but it's generally very hacky and not good practice. I'm not suggesting that you do this, just showing you that it's possible.Weird right? If this makes your skin crawl... well, maybe it should. But it is possible, and who am I to say what you can and can't do. So that's a taste of how classes work.
If you want to pretend your class has properties, you can use the  decorator:
Seems like  is what you're after:
you can just put this class definition ahead before you use it. If you want to declare it, check this site: http://www.diveintopython.net/getting_to_know_python/declaring_functions.htmlBy the way, your question is similar to this post: Is it possible to forward-declare a function in Python?  and also this post: Is it possible to use functions before declaring their body in python?
If you just need to store some attribute values (similar to a C-language ), you can just do:


Answer URL
