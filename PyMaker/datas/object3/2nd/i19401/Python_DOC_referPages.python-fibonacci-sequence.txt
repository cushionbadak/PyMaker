Natural Text
I'm just trying to improve my programming skill by making some basic functions.I want to fill a list with fibonacci values, but I think my code gives the sum of all the numbers put together and prints that instead..Where have I gone wrong?
Well, you print the final value.Also some more comments on your code:You don’t need to initialize  there, the for loop does that for you. Also, you can simplify the whole block by just doing this:And given that you don’t actually need that to be a list, you don’t need to construct that at all but you can just run  later.Then you are redefinining your  function inside the loop over and over again. You should define it outside of it and just reuse it.Also, when you know you want to create a list of multiple fibonacci numbers, it helps to just store all the numbers you calculate in between. That way you don’t have to do the same things over and over again. You can also use a generator function to make that all easier:Instead of iterating over a range and calling  on the generator manually, you then can also just use the -recipe from itertools to do it just like this:On generatorsStill not too sure what the generator does however.A generator is a Python function which generates a sequence of return values. The values are generated lazily, that means when you request it. You create a generator by simply using  instead of . A  will “return” a value and pause the generator. The next time you request a value, the generator will continue where it left off.Using a generator allows you to create an endless sequence. As you see in the definition of  above, there is a endless while-loop which has a  inside. As the generator stops, it won’t hang up despite that loop.Here is a quick self-explanationary example:The  function is the built-in function that requests the next value from the iterable. An iterable is anything you can iterate (e.g. ); and any generator is also an iterable.
Sorry I'm being an idiot.  I was printing 'a' which is the last iterated calculation of fibonacci..I should have been printing my list instead.Damn...
The problem is on the last line. A distraction, I'm sure: you should be printing the list, not .Some other tips:1: This whole block is just recreating the list returned by :Assigning  is also moot. Instead, try:In python 3, call , since  doesn't create a full-fledged list.2: redefining the  function on every pass of the loop won't create problems, but is surely not necessary. Move the definition outside :)
In the spirit of improving programming skills: you could use a generator and itertools.islice() to get the list of the first  fibonacci numbers:Output
Thought I would share some pyLove:output is:or:output is:
I condensed it and took on board the fact that 'range' or at least list(range()) creates its own list:It seems to work, printing every fibonacci value up to the 20th iteration.  How is it that I can call 'fib(n)' outside of the def without doing some weirdness such as:That was the style I was used to before.  In any case, does the program look good now?
nth term in fibonacci series is:whereandUsing the above identity in, the series can be generated using list comprehension:
Since each fibonacci number is generated from all prior ones, it doesn't make sense to calculate each one from scratch.  It is better to use the list you are collecting Fibonacci numbers in to calculate each subsequent one:If you really want to be spiffy, you can create a generator  function that calculates a Fibonacci value, and use that to build your list:In a generator function, the 'yield' keyword returns each value of the list.  The line where  uses something called a "list comprehension` to build a list using a generator.  You could also use your generator in a for loop:
I just used the formula and plugged in values:
The two last values in the list gets added up every time the loop runs.A new position in the list is created with the every new fibonacci value while iterating to the length of input.
Why not use a list comprehension? Here is how I would solve the problem. I would define a function to calculate the n th ter om of the fibonacci sequence as follows.Then I would use list comprehension to get the sequence that I want.


Answer URL
