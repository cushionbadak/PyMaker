Natural Text
I am currently struggling with an assignment. The solution would input a txt file and run through counting the number of palindromes and their frequency. I need to use Map reduce to create to do so For example: the string "bab bab bab cab cac dad" would output:Here is what I have so farCurrently prints Here is my attempt so far at the reduce sectionwith the p function I want to create a set of all palindromes found. Then run a count of the palindromes on the list and make a dict out of thisAm I on the right track?
Split your string into a list before you map it.  map() is for lists, sets, and dicts, not strings.Avoid using map-filter-reduce unless your assignment dictates it; GVR says so.  The proper solution uses Python's list comprehension syntax.  In fact, you can do it with a pretty nasty one-liner:Breaking it down...Catch this in a dictionary object to print it later: Define the return objects:   We use key:value syntax to associate the palindrome, x, with its number of occurrences.  count() is like a built-in reduce function for lists.Iterate through our list with a for loop, assigning the current value to 'x': We only want to return palindromes, so we add a comparison operator to filter out bad values:  Hurray! By the way, I'm only doing your homework because I never did mine.The slower, less flexible, less portable, less awesome equivalent uses nested for loops:
I think it would be much easier for you if your  and  input was an actual list of words. To achieve that,  the string before passing it to . Then  a word either to itself (if your mapper encounters a palindrome) or . You can then  the results to discard  values, sort it and pass it to .  would then reduce it to a  mapping words to their total count.I will not provide you with a working solution not to take away from the learning factor.
For your reduce function, you should start off with an empty dict and update/populate your counts. Reduce functions require 2 parameters, so one can be your dict, and the other, your palindrome. You can feed in an initial value in reduce like so:Take a look at dict's get for how to set default values, which should help you simplify your reduce function a lot.
It would be very simple if we decompose the problem into small challenges. In our case this could be:Filter out all the palindromes from the list of words.Get unique words to find the count.Map all the unique words to their appropriate count.Code:Here is the short explanation:NOTE: map in python can accept any sequence, not just list, set or dict. Strings in python are also sequence, hence not satisfied with Cody Hess's statement: map cannot accept strings. To demonstrate here is the very simple demo:
For map/reduce, using  object is pretty straight forward.https://docs.python.org/3/library/collections.html


Answer URL
https://docs.python.org/3/library/collections.html
