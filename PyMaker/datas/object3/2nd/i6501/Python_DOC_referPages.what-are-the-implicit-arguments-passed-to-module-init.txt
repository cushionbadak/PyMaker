Natural Text
Given the following:ParentModule.pyChildModule.pyIf, in , I mistakenly import the parent module and not the parent class, i.e.:instead of the correctI will get the following error:So just what are these 3 implicit arguments passed to ?  What are the 2 arguments  is expecting?How does one take advantage of this functionality?
First, the error message is a bit misleading, because it's ignoring the implicit  argument. It should probably say , accounting for .If you take a look at the  output for the module type:you'll see the following:So the module type's  is supposed to take up to 3 arguments:  (not listed),  (the module name), and optionally  (the docstring).That's not what you're passing it. When you mistakenly doPython assumes that  is a class with a weird metaclass and uses  to find what should be the metaclass. It finds the module type, and calls it with 3 arguments: the name (), the bases (), and the dict of the new class you're trying to create:This results in a call to the module type's  with 4 arguments (inserting  at the front), and the module type's  doesn't like that, so it throws an error.For more reading on the details of class creation, see the Python data model documentation on metaclasses.
When you import module, the code will load  file in module. if you want to utilize init, for example preload modules, you could add code into 


Answer URL
https://docs.python.org/3/reference/datamodel.html#metaclasses
