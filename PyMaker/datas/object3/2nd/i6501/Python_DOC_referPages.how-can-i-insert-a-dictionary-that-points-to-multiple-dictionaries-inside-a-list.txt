Natural Text
can anyone please help me with the following code:Where arg is:The output Im looking for is:When I run the above dict comprehension, I get Why does the second dict that  points to gets repeated at the  spot as well? How can I stop this from happening and have both the nested dicts with their independent values. The keys are the same in both the nested dicts, but the values must differ.
You are over-complicating matters. Just use the  function, it produces your key-value pairs out of the box: takes an iterable of key-value pairs:The dictionaries in  are not copied; if that's an issue, you can use a  over :or use a single dictionary comprehension:Your code created a double loop; you are essentially doing this:so for every dictionary in  you create another loop and repeatedly create a dictionary for . The last such dictionary for  will win, and as the last dictionary in  is assigned to both  and  it replaces any other dictionary in  (which where each also assigned to all integer keys before).You didn't need to use  either, just  would have sufficed. I'm also not sure why you put the final result into a list.
If I have interpreted this correctly you want a dictionary of dictionaries. This will do that:Where  is your predefined dictionary.EDIT: What user Martijn Pieters put above is a neat way of doing this!
Your code is quite complex. How about:
Small problem with the output you want. You want a  while your The output Im looking for is:[0: {"key1": "val1", "key2": "val2"}, 1: {"key1": "val3", "key2":  "val4"}]is a . So, the valid output should be :{0: {'key1': 'val1', 'key2': 'val2'}, 1: {'key1': 'val3', 'key2':  'val4'}}Obtain this with :#driver values Edit: Martijn Pieters provides shorter method using . Check it out too.


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
