Natural Text
In Python, I can add an attribute to a class  which I have previously defined. However, I cannot add an attribute to  - the resulting error message explains that this is because  is a built-in type:Similarly, it is possible to add an attribute to an instance of , but not to an instance of . In this case, however, the error message is much more vague:Why can't I add members to instances of ? Is it, again, because  is a built-in type?More generally, which objects in Python can have attributes added dynamically?
When setting arbitrary properties on an object, this effectively mutates the object’s . The  is a dictionary that stores all members of the object. So in order to add members to an object, there are two conditions:The object needs to have a .The object’s  needs to be mutable.There are multiple reasons why one of these conditions may not be true. The following categories of types will usually do not allow object modifications:Built-in native types are implemented in native code and have a fixed set of members, baked into their native object definition. Examples include , , , , … probably most (but not all) built-in typesNative types from external libraries, for example numpy stuff.Any Python class that is using . Slots is an explicit way to turn of the  and replace it by a fixed set of members instead. So obviously, this will prevent later additions to the object (per design).What are good ways to detect whether you can modify an object? Well, check conditions from above. Whether the object has a :And whether the  is a real dictionary:
In short, it depends on  magic method.Python attributes are retrieved via  and . In case you have a class without them, the defaults apply. (Slots are a little different.)For built-in/extension types ( in CPython), you can't add any other attributes by default, but you can, however, override it by providing another function. (Impossible with pure Python.)


Answer URL
https://docs.python.org/3/library/stdtypes.html
https://docs.python.org/3/reference/datamodel.html#slots
