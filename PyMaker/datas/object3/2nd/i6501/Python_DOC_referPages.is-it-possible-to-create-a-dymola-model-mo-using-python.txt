Natural Text
I know it's possible to do parameter studies by using python dymola interface. However this assume that there's already an existing model. What I'm specificly interested into is to write modelica equations in python. But I didn't find any documents about this. Does anyone has some feedbac? Thanks!!
The documentation for the Dymola Python interface is on your local computer, for Windows users it is here (just copy the URL to your webbrowser):Scanning it quickly I could not see any function to e.g. create a model from a string. I thought I had seen such a function in the OpenModelica scripting documentation, but I cannot find it anymore.But you can of course always write that string to a .mo file and then simulate that file.Maybe using a templating engine like Mako or Jinja2 is an interesting option for you here? You would have to write a template of a model that just replaces few variables. Or use the f-strings introduced with Python 3.6 to do the same.Building on top of that, you could also write your own object-oriented Python classes for a model with parameters, attributes, methods, constructor and so on. And an abstraction layer so that the model can be simulated in Dymola, OpenModelica, SimulationX or as FMU.Or maybe one of the Modelica-related packages on PyPI can do what you need?
As matth has pointed out, the cleanest way would probably be to use a template engine.But to get started, simple python string formatting will also do it.However, the problem is more or less complex, depending if you want to update parts of existing models or just create new models from scratch.Creating new modelsHere is an example how a simple Modelica model can be created from your parameters, variables and equations if they are already available in Python:If needed, constants could be handled the same way as parameters.Updating existing modelsIf parts of an existing model should be updated it gets more complex, since you have to parse the Modelica code and make sure that you correctly identify the parameters, variable, equations, etc.If you only want to do that with certain models which were designed to have e.g. updated equations it gets simpler. You could mark the start and the end of the equation sections to easily identify them and insert the new equations. So you would e.g. have a model like this:and then use regular expressions to replace the content between the tags.    You also have to read and write the model somehow, so there are some hints below.Reading the model in PythonYou can either read the content of the .mo file or use the python interface and get the code of a loaded Modelica class from Dymola withwhere fullName is the full path to the Modelica class in Dymolas package browser.Writing modelsDymola does not offer anything to update parts of a model, but there is a command which creates new classes or overwrites the entire class text if the class already exists: is the path to the parent class, which is usually a package (or an empty string if the class shall be on top level) and the new class text will be . As for reading, you can also operate on file basis and just create a .mo file and load that in Dymola.Note for non-python developersThe functions  and  are also available for the java interface and inside Dymola in the  library.


Answer URL
https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498
