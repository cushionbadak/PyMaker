Natural Text
I have a class for making an anonymous class:It works great for setting properties dynamically, however I cannot set instance methods this way because they don't have access to .  e.g. , but I can't seem to shove a  in there...Anybody know how to make this happen?
This is not creating new "classes" just instances of . Just as you can set instance attributes, you can set callable attributes that know to which instance they are bound.So, assuming any callable passed as an argument will take  as the first argument, you can change your code to:This is needed because a callable being set in the instance bypass the mechanism Python uses to bind a method to an instance auto-adding the "self" argument to all calls. So we use  to do the same. (It could be done with lambdas, but we'd need two levels of lambda's so that the "attr" variable would keep itself bound to the correct method, and not point to the last element assigned in the  loop)Also, if you want to actually create classes  and not instances with attributes bound, you could just make a call to , passing the same arguments you get as  on your code:This will make any function passed in  behave as a "real" method.
You could do it like the following. You may have to modify the  loop to check what kind of value is being assigned and handle data- and/or property-types of attributes differently. I didn't try it with anything else since there weren't any example in your question.


Answer URL
https://docs.python.org/3/reference/datamodel.html#implementing-descriptors
