Natural Text
I have a code looping on a generator. I have to break that loop after the second iteration if it reaches it. To do so I use , which raises a  when it calls the  method.Would there be a more elegant way which would avoid such an error?I have seen answers to these two questions : How to take the first N... How to get the n next... but this is not the same issue. In my case, the  uses a . Hence, at each iteration it processes a query. I want to stop it querying once at least 400 statuses have been reached, which can happen after the second or the third iteration (a query generally return 200 rows, but it can also be less). Slicing the generator is not an option here. Avoiding to process all the queries (16 total, for approximately 16*200=3200 statuses) is exactly what I want to avoid by Breaking the code after 400 statuses are returned.Edit: For a better understanding, here is the code for my generator:
Your generator ignores the  exception that  raises. By catching , you effectively made closing impossible, so your generator will instead yield another value (as the code continues after the exception handler back to the top of the loop until  is reached again). This is why you see your exception:If the generator yields a value, a  is raised.You really should not catch  in your code. Catch specific exceptions or, at best, :That way you don't catch  (a subclass of ),  or .If you feel your code must catch  and  at this point, at least add a  before your  handler.


Answer URL
https://docs.python.org/3/reference/expressions.html#generator.close
