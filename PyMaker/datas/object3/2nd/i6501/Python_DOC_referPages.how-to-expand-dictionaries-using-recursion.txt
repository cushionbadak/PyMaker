Natural Text
To simplify a complex configuration everything is stored in a dictionary.Some parts of the configuration are repeated multiple times and it is error-prone to copy and paste them, even because they are subject to frequent changes.To avoid this repetition, inside the dictionary there are some keys (beginning with '_') that groups common parameters together: i.e.Somewhere else this group of settings can be called by:The tricks is done by the  key: every time it is found, it will be replaced by its definition. It appears only as a dictionary key and is not managed if it is a list element.The whole config can be a mix of dictionaries and lists, with dictionaries in dictionaries or any other combination and any depth. This is a short example of initial configuration:and this is the final I would like to obtain (with the keys beginning with _ removed because they are useless):I am in trouble with this recursive substitution because, according to the order in which the  is processed the result changes and some  are left around in .This is the code I am using now. Recursion is not my bread and I cannot fix it to manage a whole decoding of the initial_config.
You need to first process your  mappings. These form a graph, you could use a queue to ensure they are expanded fully:The recursion is all handled by using single dispatch, which makes each per-type handler a lot simpler.


Answer URL
https://docs.python.org/3/library/functools.html#functools.singledispatch
