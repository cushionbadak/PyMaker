Natural Text
I'm having some trouble trying to implement a new  proxy object. The documentation is a bit scares, so I'm not sure how to go about this correctly.I want to add a  to the list of types that are available from the  instance. You cannot use the  method on the stock  so I've made my own stub Manager from the I then created my subclass of  to house the  (I did initially try having anther stub which would subclass both  and  but that didn't seem to work. Here's what I currently have:The end goal is to have a shared dictionary which safely shares keyed Locks across processes and threads. Here's an example of how I image it would be initialised:However, I've hit a few problems:A subclass of BaseManager seems to be only initalizable via a context manager i.e. . Which I would use  in this case - as the  allows. Not the end of the world but more curious why this is the case and if it's a sign I'm doing something incorrectly.Subclassing  also menas you loose the default registered values from . In this case I need to re-register a ProxyLock for my manager (which I'm also unsure of the expected way to do this). Is it safe to just subclass  directly.Finally, my  doesn't seem to allow my to cleanly override its . And I'm weary of not calling the  when subclassing. The problem is that BaseProxy also accepts positional arguments. I guess the way round this is to make the  argument a keyed argument only, but that changes the expected interface to  and makes me assume I'm doing something incorrectly here again. The other types like  seem to be able to accept positional arguments.Thanks for any help.
After viewing the source code, a little modification of it works for me to get a defaultdict type proxy without issue (based on how the built in DictProxy is created). Personally I find it handy that by using the tools already provided, don't even need to worry about how to subclass it yourself.However, I don't think that will allow you to create the default locks scenario you are looking for. Multiprocessing locks are designed to be inherited only, and in general Locks cannot be pickled, which is a requirement for data types being transferred through the proxies. Example: Will raise a runtime error:


Answer URL
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.managers.BaseProxy
