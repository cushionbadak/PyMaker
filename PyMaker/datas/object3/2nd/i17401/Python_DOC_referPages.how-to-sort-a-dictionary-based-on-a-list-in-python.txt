Natural Text
I have a dictionary I have a list.I want to sort dictionary a using its keys based on the list. Is it possible to do that?i.e.:The output doesn't have to be another dictionary, I don't mind converting the dictionary to tuples and then sort those.
The naive way, sorting the list of (key, value) tuples, using the  function and a custom sort key (called for each  pair produced by ):The faster way, creating an index map first:This is faster because the dictionary lookup in  takes O(1) constant time, while the  call has to scan through the list each time, so taking O(N) linear time. Since that scan is called for each key-value pair in the dictionary, the naive sorting option takes O(N^2) quadratic time, while using a map keeps the sort efficient (O(N log N), linearithmic time).Both assume that  contains all keys found in . However, if that's the case, then you may as well invert the lookup and just retrieve the keys in order:which takes O(N) linear time, and allows for extra keys in  that don't exist in .To be explicit: O(N) > O(N log N) > O(N^2), see this cheat sheet for reference.Demo:
You could just retrieve the values in order of the keys provided by the list and make a new list out of the key-value pairs.Example:


Answer URL
https://docs.python.org/3/library/functions.html#sorted
