Natural Text
I'm a novice at both python and networking. What address and port should I enter into ? Also, am I using variables correctly in ?
I won't answer the vague question about "how do I know what IP and port to pass to this program", for the reasons explained in the comments.But for the specific question about your code:Also, am I using variables correctly in s.connect?Almost, but not quite.You get the values like this:Assuming this is Python 3.x,  returns a string. But  (for an IPv4 connection) requires a number for a port, not a string. So, you have to convert it somewhere.You could do that immediately on input:… or you could do it in the  call:If that assumption is wrong and you're using Python 2.x, then  will try to evaluate the input string, which means you'll get a number for the … but then you're not reading  right, unless you want to force the user to put quotes around the IP address. In general, you almost never want to use ; call  instead—and if you do that, you get a string, and everything is exactly the same as I described for Python 3.x above.Finally, a few side notes:Instead of explicitly creating an IPv4 socket and calling  on it, it's usually better to call . That way, if you later switch to an IPv6-compatible network, your program will still work fine (as long as users give you an IPv6 address, or a DNS address that resolves to one).The  method on sockets already does what you appear to be trying to do manually with your  function. While it can sometimes be useful to loop around  like that explicitly (for example, if you're trying to debug an error, it means you can tell exactly where things went wrong), in general it's simpler to just use .Also, within that loop, you're using a constant , which you haven't defined anywhere, which obviously isn't going to work. And, even if you did define it somewhere, what would you want to happen if  weren't the same as ? For example, if  is , and  is  (as in your example), it will send 2 bytes and then keep trying to send 0 bytes over and over again. Or, if  is  but  is , it'll misleadingly send 2 bytes instead of 1. Most likely, you wanted to use  there, not .


Answer URL
