Natural Text
I'm trying to divide a very big text file into two parts and dump the two parts into two different mysql table. I do this in python, inspect the text line by line and categorize each line by a category code.Now after I divide the text, how do I pipe them into two separate fifo files so I can pipe these fifo to mysql client tools? 
I think you're looking to create pipes for two separate, and apparently simultaneous, MySQL imports, from the same Python script?While it's not impossible to do this via shell redirection, it's going to be painful. Your Python script has to somehow pass the file descriptors of its pipes to the shell, so your shell script can redirect those file descriptors to the MySQL commands.A much easier solution is to do it in Python, with the  module.I don't know the tool and syntax you hope to use for doing the bulk load; all you've told us is that you want to give it a "pipe". So, I'll just assume that it's the  command mentioned in hbristow's answer, and that it handles stdin via the usual Unix convention of giving it  as a filename; since this is just for demonstrating the actual interesting part, it doesn't matter very much anyway.So:We've created two separate child processes, each with its own separate  pipe, and we can write to them the same way we can to any other files.You may need to  and  if the  tool expects you to close/EOF the input file before actually waiting on it to exit.If you're using Python 2.4-2.7, you should install and use the  backport. If you can't do that for some reason (or if you're using Python 3.0-3.1 and can't upgrade for some reason), you can't use a  statement here; instead, you need to explicitly  the pipes and  the processes.
I assume what you're wanting to do is call the MYSQL commandwithout actually creating the INFILE. You could try using the  command-line client, and providing that it is happy to accept a pipe, do something like:where your Python script splits the text file by the code input on the command-line and outputs the result as a string, which is piped to mysqlimport.


Answer URL
