Natural Text
I have a large string of a novel that I downloaded from Project Gutenberg. I am trying to save it to my computer, but I'm getting a UnicodeEncodeError and I don't know how to fix or ignore it.This gives me the following error:First, I tried to remove the BOM at the beginning of the file:but I get the same error, just with a different position number:If I look in that area I can't find the offending characters, so I don't know what to remove:just prints out:which doesn't look like it would be a problem.So then I tried to skip the bad lines with a try statement:but this skips the entire text, giving me a file of 0 size.How can I fix this?EDIT:A couple people have noted that '\ufeff' is utf16. I tried switching to utf16:But I can't even download the data before I get this error:SECOND EDIT:I also tried decoding with utf-8-sig as suggested in u'\ufeff' in Python string because that includes BOM, but then I'm back to this error when I try to save it:
Decoding and re-encoding a file just to save it to disk is pointless. Just write out the bytes you have downloaded, and you will have the file on disk:This is the only reliable way to write to disk exactly what you downloaded.Sooner or later you'll want to read in the file and work with it, so let's consider your error. You didn't provide a full stack trace (always a bad idea), but your error is during encoding, not decoding. The decoding step succeeded. The error must be arising on the line , which is where the text gets encoded for saving. But to what encoding is it being converted? Nobody knows, because you opened  without specifying an encoding! The encoding you're getting depends on your location, OS, and probably the tides and weather forecast. In short: Specify the encoding.
U + feff is for UTF-16. Try that instead.
 offers error handling as a built-in feature:The default for errors is , meaning that encoding errors raise a . Other possible values are ,  and any other name registered via , see section .Probably the safest option iswhich will escape encoding errors with a backslash, so you have a record of what failed to decode.Conveniently, your Moby Dick text contains no backslashes, so it will be quite easy to check what characters are failing to decode.What is strange about this text is the website says it is in , but  is the BOM for . Decoding in , it looks like your just having trouble with the very last character  (which is a utf-8 line ending), which can probably safely be dropped with


Answer URL
https://docs.python.org/3/library/stdtypes.html#bytes.decode
https://docs.python.org/3/tutorial/inputoutput.html
