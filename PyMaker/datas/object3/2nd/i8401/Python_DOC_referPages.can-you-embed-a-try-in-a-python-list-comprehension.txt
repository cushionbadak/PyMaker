Natural Text
Is there anyway to do the equivalent of this? Since dictionaries throw KeyErrors I want to catch the error if the element in the list does not have a "some_key" property. I know I could create a defaultdict by importing collections and sidestepping the exception, but I want to know if this is possible with out of the box dictionaries.
No, you can't. You can put only  loops, 's and 's.What you can do, though, is use , which never throws a KeyError:The second argument is the default value in case the key does not exist. If you don't specify a default, the default default is None.
No, you can not do this directly in a list comprehension.  You must factor the try/except logic out into a separate function, and then call the function.  There is an easy alternative for the use case shown in your question, though, using :
As other answers mentioned you can not use an try-except inside a list comprehension. But as a tricky approach you can use  and override the  attribute in order to catch the exceptions. Here is an example:Demo:


Answer URL
https://docs.python.org/3/library/stdtypes.html#dict.get
