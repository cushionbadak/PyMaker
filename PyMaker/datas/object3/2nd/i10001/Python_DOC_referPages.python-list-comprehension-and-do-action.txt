Natural Text
Is it possible to do an action with the item in a list comprehension?Example:For example if I want to remove the '3' how would I go about it? Logic says that it's something like:I can't seem to make Python perform an action with that 'i' with any syntax that I tried. Can someone please elaborate?EDIT: Sorry, the explanation might not be clear enough. I know how to iterate and create the new list. I want to create "list_filtered" and remove that value from "list" if it fits the "IF" statement.Practically I need the following:I hope the above makes it more clear. Also, please note that my question is if this can be done in the list comprehension specifically. I know how to do it with additional code. :)EDIT2: Apparently what I wanted to do isn't possible and also isn't advisable (which is the reason it isn't possible). It seemed like a logical thing that I just didn't know how to do. Thanks guys :)
Your miss understand the purpose of list comprehension. List comprehension should be used to create a list, not to use its side effects. Further more, as Leijot has already mentioned, you should never modify a container while iterating over it.If you want to filter out certain elements in a list using list comprehension, use an if statement:Alternatively, you can use the builtin function :Edit: Based on your most recent edit, what your asking is absolutely possible. Just use two different list comprehensions:
If you're just trying to remove  you could do:This will remove all values that are not equal to .Alternatively if you wanted to do something like increment all the items in the list you would do:Using a function on every item of the list would look like: You can do ternary statements:and a whole lot more...Here is more documentation on list comprehensions.Given your new updates, I would try something like:Then  would be  and  would be  as your specified. 
Maybe you want to provide a different example of what you're trying to do since you shouldn't remove elements from a list while you're iterating over it. Since list comprehensions create another list anyway, you could accomplish the same thing as your example by building a list that omits certain elements. If your goal is to create a list that excludes the value 3, to slightly modify your example: remains unaltered, but  now contains .


Answer URL
https://docs.python.org/3/library/functions.html#filter
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
