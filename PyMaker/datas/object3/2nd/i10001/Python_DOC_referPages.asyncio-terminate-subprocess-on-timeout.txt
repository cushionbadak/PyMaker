Natural Text
I have a script which must execute some shell commands. However if command takes too long to complete it must be forcibly killed. Consider the following code snippet:This code produce the following output:So it seems that it's working as expected, jobs are stopped if they take too long to finish. But if I check the log I can confirm that however time consuming tasks continued running and were not actually stopped / killed / aborted:I would expect there should be just one line in the log, as other processes must have been aborted before they had a chance to finish:Is there a way to achieve what I want?I'm not even sure if I need  here, perhaps  could be used too. Either way task is the same - terminate tasks, which are taking too much time to finish.
You could use Process.terminate:Or:EDITWhy I didn't see asyncio.CancelledError raised in my code?When  (or anything else) cancels a task, it throws a  in the corresponding coroutine. This allows the coroutine to perform some clean up if necessary (using a context manager or a  clause for instance). This error does not need to be logged since it is the normal behavior of a canceled task. But try to await a task after cancelling it and a  will be raised.


Answer URL
https://docs.python.org/3/library/asyncio-subprocess.html#asyncio.asyncio.subprocess.Process.terminate
