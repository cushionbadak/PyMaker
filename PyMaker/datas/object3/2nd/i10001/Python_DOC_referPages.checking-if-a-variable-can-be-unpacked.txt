Natural Text
Say I have a variable , which is of an unknown data type. I also have some random function . Now I want to do something along the following lines:If  is a type that can be unpacked using **, such as a dictionary, call . Else, if  is a type that can be unpacked using *, such as a tuple, call . Else, just call .Is there an easy way to check whether a type can be unpacked via either ** or *? What I am currently doing is checking the type of x and executing something like:But the problem is that I don't know the complete list of data types that can actually be unpacked and I'm also not sure if user defined data types can have a method that allows them to be unpacked.
You could use :Its kind of crude, and doesn't distinguish why the exception occurred (which might be mitigated by checking the type of exception), but eliminates the need to try and enumerate which types can be called which way.    
Let's check the errors we receive when doing it badly:Great: so we need a sequence type for  and a mappping type for . The rest is fairly straightforward: the Python 3 docs state:There are three basic sequence types: lists, tuples, and range objects. Additional sequence types tailored for processing of binary data and text strings are described in dedicated sections.The fail-safe way to check if a var is a sequence type is:(see Python: check if an object is a sequence for more info)The mapping type, according to the docs, is a :There is currently only one standard mapping type, the dictionary.You can check this in the same way, using , which will even take care of derived classes:So you could do as follows:


Answer URL
https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range
https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
