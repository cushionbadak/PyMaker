Natural Text
If you are given a list of documents, with strings in the documents, how do you go about and search from the documents and return the list of documents that contains the string that you were searching for? How would I go about implementing a program in Python or C for this problem statement? I've considered grep, but I'm not sure how implementing that inside of a native Python/C application would work.Thought process at the moment is simply to parse through documents in a loop, then parse through all strings, etc., but it seems a little inefficient.Any help appreciated.
The simple solution is just as you stated: loop through the files and search through each one.Naive approachIf you wanted to be a little better, you could immediately bail out of the file as soon as you found a match.Slightly betterAt this point you could attempt to distribute the problem across multiple threads. You will probably be IO bound and may even see worse performance because multiple threads are trying to read different parts of the disk at the same timeThreaded approachBut if you are concerned about performance, you should either use grep or copy how it works. It saves time by reading the files as raw binary (rather than break it up line by line) and makes use of a string searching algorithm called the Boyer–Moore algorithm. Refer to this other SO about how grep runs fast.Probably What You Want™ approach


Answer URL
https://docs.python.org/3/library/subprocess.html
https://docs.python.org/3/library/io.html#io.TextIOBase.read
