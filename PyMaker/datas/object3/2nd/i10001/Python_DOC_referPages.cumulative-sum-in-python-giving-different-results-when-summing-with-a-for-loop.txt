Natural Text
Ok let's try this again.  I have 1 set of data.  I want to make 2 copies, and then sort the copies in descending order based on different columns.  Then I want to get the cumulative sum of the respective columns.  When I run the following code I get different results for the two instances I call on print (setA[x][2]).This produces:but I expected it to produceinstead.
 creates a shallow copy of the sequence being sorted. This means that your nested lists are not copied, they are merely referenced:So the last element in  is exactly the same object as  and . Making changes to any one of those references is reflected in the others:This is why the  object (from which you produced your sorted  and  lists) is also changed after running your code:You need to create a proper copy of the nested lists; you could use the  function to create a recursive copy of the list objects, or you could use a generator expression when sorting:This shallowly copies the nested lists; this is fine because those nested lists only contain immutable objects themselves.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.accumulate
