Natural Text
I am having trouble mocking a function that accepts **kwargs.  The scenario is I have ClassA (which in my specific case is something I didnt write) and it has a function with **kwargs. ClassB which has an instance of ClassA, and calls the **kwargs function.  I want to test ClassB by mocking the call to Class A's function.Here is what I have tried so far, and in both of my attempts I ended up with a TypeError.  Is there any way to do this? Should I rethink another aspect of this?Stack trace: 
I'm not sure why you are calling another function. But if you must have an instance attribute  function, then just pass on the  dictionary with :You don't need to call that lambda at all if all you need is for  to exist:then just pass in the mocked return value, whatever you need to be passed back to  for the test, and afterwards you can check that the right value was passed in too:You may want to use the  library to build a mock object to pass in (available in Python 3, and a backport for Python 2 can be installed). It'll let you create a mocked  and then use the API to test if the mock was used in the expected manner:Demo with  as the mocking layer:


Answer URL
https://docs.python.org/3/library/unittest.mock.html
