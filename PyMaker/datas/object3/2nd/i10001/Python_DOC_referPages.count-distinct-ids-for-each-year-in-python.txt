Natural Text
Suppose we have file like (first column refers to ID number and the second column to year):Task is to count how many IDs are there for each year. For example in our case the output file should be:What is the most appropriate programming structure to count these frequencies? My initial attempt is pasted below. (Current code prints only the number of distinct IDs.)
This is how i would do it:What's happening is that a dict is created to store the data. The choice for the dict comes from the fact that associations are present and have to be preserved (years to whatever the first column is). This is what dicts are for..Then we loop through the file and keep adding dict keys (years) in the dictionary if they do not exist using the convenient  method. Their values are initialised as empty lists in which the numbers of the first column get appended.When everything is collected, we go through the dict once more and replace all values (lists) with the lenght of the corresponding set. Note that passing a list to the  will remove the duplicates present in the list. Finally the  returns the length of the container.The last thing we want is to write the results to a file which is trivial work. Just open something with the write flag  and iterate over the dict. Note that by default, the  method does not add a newline character so you have to do that yourself with . Cheers.Having said all that, the code above can probably be substituted by something like two lines if one uses  instead. I will let you look into that yourself though.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
