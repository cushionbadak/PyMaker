Natural Text
I want to return a boolean depending if the address given is a correct IPv4 address or not. I am having an issue with the all() built in in python. I have looked up the documentation on it and it seems straight forward. That being said I can't get it to work for my expression. If you could explain how it works layman's terms and how I could correct my code, that would be great.
As said in the documentation of , it checks if every element in a list evaluates to  (basically  is ) or it is empty.Now you have a list of integers in  and so it'll check if every element of that list evaluates to  if you just call it like you do and any number other than 0 will evaluate to , but an IP like  is actually valid.So what you need is actually a list which contains  if the corresponding number is between 0 and 255 (inclusive):If you call then  it returns if every item in  is between 0 and 255. Usually it'll be combined into something like .Now there is still one issue in your implementation because  doesn't actually contain the first number of the IP address, so you might include it. Or do you actually want the first number to be lower or equal to the other three numbers?Also your check  doesn't make sense as  only returns  or  so comparing it with an integer doesn't really make sense.Note that  will also return  to IP addresses like  so might need to adjust the range I used.
If you are using Python3, there is a built-in  module that you can use.As for what is wrong with your code, I don't believe that the all() function does what you think it does. all() expects an iterable of Booleans, and returns  if every one of those Booleans is .To get that to work how you expected, you probably want something like
Don't reinvent the wheel (unless you're happy to maintain the wheel).  You can use a regex to validate ipv4 addresses.  The following pattern is taken from Django:If you are working already in the context of a Django project, you may prefer to just import their validator and use it directly:
As others have said, there are better ways to do this. And your algorithm doesn't actually validate IPv4 addresses. But here's a repaired version of your code.outputI've moved the  stuff into the  block because there's no need to do it if the if / elif parts return False. uses a simple generator expression to check that all items in  are >= the head item.


Answer URL
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/ipaddress.html
