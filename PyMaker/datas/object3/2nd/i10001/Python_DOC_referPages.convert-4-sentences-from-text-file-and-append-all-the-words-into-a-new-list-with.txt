Natural Text
I have been working on program to read 4 sentences from .txt file and append all the words into a new empty list.My code is as follow:And i got the following results:[['But', 'breaks', 'light', 'soft', 'through', 'what', 'window',  'yonder']] [['But', 'breaks', 'light', 'soft', 'through', 'what',  'window', 'yonder'], ['It', 'Juliet', 'and', 'east', 'is', 'is',  'sun', 'the', 'the']] [['But', 'breaks', 'light', 'soft', 'through',  'what', 'window', 'yonder'], ['It', 'Juliet', 'and', 'east', 'is',  'is', 'sun', 'the', 'the'], ['Arise', 'and', 'envious', 'fair',  'kill', 'moon', 'sun', 'the']] [['But', 'breaks', 'light', 'soft',  'through', 'what', 'window', 'yonder'], ['It', 'Juliet', 'and',  'east', 'is', 'is', 'sun', 'the', 'the'], ['Arise', 'and', 'envious',  'fair', 'kill', 'moon', 'sun', 'the'], ['Who', 'already', 'and',  'grief', 'is', 'pale', 'sick', 'with']]What could i do to obtain the following:['Arise', 'But', 'It', 'Juliet', 'Who', 'already', 'and', 'breaks',  'east', 'envious', 'fair', 'grief', 'is', 'kill', 'light', 'moon',  'pale', 'sick', 'soft', 'sun', 'the', 'through', 'what', 'window',  'with', 'yonder']The sentences are:But soft what light through yonder window breaksIt is the east and Juliet is the sunArise fair sun and kill the envious moonWho is already sick and pale with grief
You are splitting each line into a list of words correctly using , but you are not iterating through the new list named  that you just created. You are instead comparing the list  as an object to the contents of , and then appending  as an object to . This causes  to be a list of lists, as you've shown in the results you've been receiving. In order to achieve the array of words you're looking for, you'll have to iteratw through  and add each word individually as long as it is not in :edit: Found another question/answer regarding the same problem - Probably for the same class assignment.
You want to use a set that will uniquely list elements :This will give you what you want. You can use on strings, lists etc. sets in python 3.5
The easiest way is to use a set, and to append each word.
A set can be used to remove duplicates, and the split method will split on any kind of whitespace - including line-endings. So this task can be reduced to a quite simple one-liner:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#sets
