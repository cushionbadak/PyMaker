Natural Text
I wrote the following code:I would like to know if there is any nicer/simpler/shorter way to write the code above? If yes, please do not use difficult functions (etc.) because I am still a beginner and will not understand it.
I believe you are trying to append items from  to the nested list values in  until all value  are used, cycling over  from the start if there are fewer nested lists than initial values to append.Use  to pair up nested lists with  items:The  function here ensures that all values from  are used;  stops at the shortest list, which will always be  here.Demo with an initial list of 10 values (integers  through to ) and a nested list with 4 empty sublists:Not using cycling would require you to keep a counter and append to . The counter can be generated with the  function:
You can use:...instead of:Also, list_.pop(0) is slow.  Maybe you are looking for a http://docs.python.org/3/library/collections.html#collections.deque ?  It'll allow you to rapidly remove things from either end, but you won't be able to conveniently access (EG) the middle anymore.


Answer URL
