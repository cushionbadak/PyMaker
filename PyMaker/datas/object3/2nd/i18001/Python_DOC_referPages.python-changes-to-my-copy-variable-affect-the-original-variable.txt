Natural Text
This question already has an answer here:How to clone or copy a list?                    20 answers                I've got a list that I create a copy of in order to do some manipulations while still keeping the original list. However, when I set  equal to , they become the same thing, and if I change ,  changes too. For example:returnsI don't know too much about what is actually going on but it looks like  is actually  passing itself to  so that they are actually the same thing.Is there a way to make an independent copy of org_list without doing something clumsy like:I say this because I have the same problem with other types of variables, for example a pandas dataframe.
That is because in python setting a variable actually sets a reference to the variable. Almost every person learning python encounters this at some point. The solution is simply to copy the list:
This is just copying the referenceyou should useor 
When you writeyou create the list object, and give it the name "org_list".Then when you doyou just mean, "the name copy_list refers to the same object as org_list does".If your list only contains immutable types, then you can create a copy byBut note that this is only valid if the list objects are immutable, because it creates a SHALLOW copy, i.e. the list is copied, but every element on the list is not duplicated.If you have i.e. a list of lists and want EVERYTHING to be duplicated, you need to perform a DEEP copy:
Variable names in python are references to the original. To actually make a copy, you need to be explicit:


Answer URL
https://docs.python.org/3/library/copy.html
