Natural Text
If I write:I get:Why is it coercing them into ints? It does the same thing in reverse.Output is:Can this be disabled? Is it a bug?
It's because those values are considered equal:and have the same hash values:Therefore, from the dictionary's point of view,  and  are indistinguishable as are  and .There is no way to "disable" this -- you shouldn't be using non-homogenous keys in a dict to begin with.A potential workaround in this specific case would be to reserve special int values for  and  other than  and , respectively (presuming you need  and  as independent keys). For instance, you could have  represent  and  represent .
Just offering some background on arshajii's answer.The two boolean values,  and , have a strange relation with integers.On one hand, they have different string representations, and have separate identities:On the other hand, they behave as integers under comparisons and arithmetic:The reason for this behavior is compatibility. A long time ago, the  type didn't exist. "Boolean" operators copied C behavior, reusing  and  for "false" and "true".Eventually Guido realized this didn't make much sense, and added the constants we know and love.But there was a problem. Even then, there was already a lot of code that treated boolean values like integers. If boolean operations started using the "correct" type, all this code would break.So Guido made a compromise. Booleans have their own type, , and display differently to integers. But in arithmetic operations and comparisons, most notably  and , they are treated as one and the same. So old code would continue to work, while new code can still take advantage of the new  type.Maybe that'll change in Python 4. But for now,  is a subclass of , and we'll have to live with that.(On a related note, that's one of the reasons why  and  are in Title Case, rather than lower case like other Python keywords.)
 is a subclass of  whose representation is "False" or "True", but whose value is 0 or 1.


Answer URL
https://docs.python.org/3/reference/expressions.html#booleans
