Natural Text
I just stumbled over what seems to be a flaw in the python syntax-- or else I'm missing something.See this:But this is a syntax error:If you have an  clause, you have to write:But this is a syntax error:What am I missing? Why is this so inconsistent?
You are mixing syntax here. There are two different concepts at play here:List comprehension syntax. Here  acts as a filter; include a value in the iteration or not. There is no , as that is the 'don't include' case already.A conditional expression. This must always return a value, either the outcome of the 'true' or the 'false' expression.
The difference between the two is that the trailing  in the first one is part of the list comprehension syntax, while the  is the conditional operator, not any part of the list comprehension syntax - as it is an expression which is permitted in that part of a list comprehension.The syntax for the conditional operator is as follows:This returns the value of the expression that is evaluated, which is why it seems to "work" for your case, though it evaluates all of the time and returns always - which is the key difference between the two.Meanwhile, for the list comprehension, it tests whether or not the condition applies, and does not add that in the new list created if the condition does not evaluate to true according to the Truth Value Testing procedure, not  nor anything else.Compare the following (taking an example from PEP202): would be while  would bewhich isn't the same at all, as no matter what the result of it is, it will still add it in if there is no  part of the list comprehension.
What am I missing?The following is a ternary operation (aka "conditional expression" in python parlance)This evaluates like it reads: if  is , give me , else give me y.Do not confuse this with comprehension syntax:A conditional expression can go into the (expression) part.  It doesn't have anything to do with the optional  part.


Answer URL
