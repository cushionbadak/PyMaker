Natural Text
Assume you have two parent classes with the same interface in some module parents.pyand you want to use a child class, which can operate on both classes, such asIs it possible to create such an child object choosing the right parent as variable? something likeThe best approach would be having separate modules (.py files) for each of the parents (not as shown in my example).Any other approach to the issue is welcome, as long as it keeps the two parent classes separate (divorce is often good for the kids).
Define mother and father as child attributes, keep the two as references to the mother and father object instances (has-a relationship)Where you keep the Mother and Father classes is irrelevant. You might keep them in the same file or make a  module and thendefining your child in the current script.Edit:As per your comments you would need to inherit the  class from some  class, from which you also inherit both  and  classes.That would inherit the methods and attributes but would also state that a  is also a , which he isn't. But they are all Persons, so you can create a  class with common attributes and methods, extend it with a Mother and Father class both inheriting from Person, and then alter the child class  to receive a list of parents. You mantain a container-like has-a relationship, but now a child can have many parents. Maybe add a method  to append new parents to that list in . If creating methods in  just to delegate (call) the corresponding methods in the parents becomes labourious, then you might consider changing the  class to inherit from Person class too, getting all the common Parents machinery. You'll need to adapt a bit the code in those scenarios, but I think you get it.
I found a very similar question: Pass a parent class as an argument?The solution is to define a function that wraps the class. In this case would be something likeand to create instances
You could pass a string to  then use getattr to create a parent object.Then you would use it like this


Answer URL
https://docs.python.org/3/library/functions.html#getattr
