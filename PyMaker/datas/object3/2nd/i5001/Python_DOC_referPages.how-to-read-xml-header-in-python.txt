Natural Text
How can I read the header of an XML document in Python 3?Ideally, I would use the defusedxml module as the documentation states that it's safer, but at this point (after hours of trying to figure this out), I'd settle for any parser.For example, I have a document (this is actually from an exercise) that looks like this:I'm wondering how to access everything before the root node.This seems like such a general question that I thought I would easily find an answer online, but I guess I was wrong. The closest thing I found was this question on Stack Overflow, which didn't really help (I looked into xml.sax, but couldn't find anything relevant).
I tried  which is vulnerable to billion laughs and quadratic blowup attacks according to link you provided. Here is my code:Output:You can use  from . I downloaded that package and just replaced import with  and code worked with same output.
With the lxml library, you can access document properties via a  object.Output:
Try this code !I am assuming the temporary xml in variable 's' .I am declare a class of MyParser having a function of XmlDecl to print the XML header & the purpose of second function is to parse the XML header .so first create the parser by using the ParserCreate() function defined in xml.parsers .Now create the object of MyParser class 'parser' & call the parse function with the object reference.


Answer URL
https://docs.python.org/3/library/xml.html
https://docs.python.org/3/library/xml.sax.html
https://docs.python.org/3/library/xml.html
