Natural Text
I have two Python lists: components and signature. I want to check whether all the types listed in signature match at least one of the elements in the component list.Here, the signature matches the component list, because there is both a string and a float in components:Here, signature does not match components, because there is no list type.How can I express this condition in Python 3?
You may use combination of  and  with nested generator expression to achieve this. Here I am using  to check for each  in your  list matches with the object in  list. Using this, your custom function will be as:Sample Run:Explanation: Above nested generator expression is comprised of two parts. First part is:Here, I am iterating  list to get each element  present in it.  will return  only when all the  logic will return . Else it will return .Second is the  generator expression as:Here, for each element  in  list, I am checking whether the type of  is  from the external generator comprehension. If any of the type matches,  will return . If none of  matches the condition,  will return . 
Another approach is to calculate the difference between the set of types used in components and those you have in signature.I believe there are two main advantages with this solution:More efficient if your components list was long with many duplicate types, as you reduce the number of comparisonsHow precise do you want to be in matching the class? Should subclasses pass the test? For example,  is : is this behavior desirable to you?   Using the function provided by the (very good) answer of @Moinuddin, you have the following: while my answer would check  versus ['int', 'float', 'str'] finding no match.


Answer URL
https://docs.python.org/3/library/functions.html#all
https://docs.python.org/3/library/functions.html#any
https://docs.python.org/3/library/functions.html#isinstance
