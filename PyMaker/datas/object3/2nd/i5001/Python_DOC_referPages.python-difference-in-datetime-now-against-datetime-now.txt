Natural Text
I have got into an issue or might quite possibly feature in turn! Not sure, wondering!! In python's datetime library, to get difference in time, as in below snippet.I would like to understand why  is producing output as -1 days, 86399 seconds whereas assigning current time to some variable and computing difference gives desired output 0 days, 4 seconds.The results seems to be bit confusing, it would be helpful if someone could decode whats going behindNote: I'm using Python 2.7
As per the documentation of timedelta object If the normalized value of days lies outside the indicated range,  OverflowError is raised.Note that normalization of negative values may be surprising at first.  For example:This is valid for python 2.7 and 3 both.Why this is happening is simple:To get the proper time difference:This Answer gives more information on how to use time delta safely (handle negative values) Link
You are encountering a "corner case" situation.Every  produces a  object ([Python]: https://docs.python.org/3/library/datetime.html#datetime-objects), which is the current date & time at the moment the call was madeYou have 2 such calls (even if they are on the same line). Since the CPU speeds are very high nowadays, every such call takes a very small amount of time (much less than microseconds, I presume)But, when the 1st call is at the very end of a (microsecond?) period, and the 2nd one is at the beginning of the next one, you'd get this behavior:Explanation:Let  to be the result of the 1st call made to Let's say that the 2nd  call happens one microsecond later (I am reproducing the behavior using the  object, as the times involved here are waaay too small for me to be able to to run the line at the exact time when this behavior is encountered). That is placed into When subtracting them you get the negative value (in my case is ), since  happened earlier than  (check [Python]:  timedelta Objects for more details)


Answer URL
https://docs.python.org/3/library/datetime.html#timedelta-objects
https://docs.python.org/3/library/datetime.html#datetime.datetime
https://docs.python.org/3/library/datetime.html#timedelta-objects
