Natural Text
I'm trying to speed up my BFS algorithm, that solves rush hour games. I feed the algorithm a parent board, and I'm wondering whether the implementation of my BFS algorithm or the building blocks used in my code that I call from the algorithm should change. This is the BFS algorithm at the moment:The start grid, for example, looks like this:Is there something I'm doing inherently wrong here?
Do your , , and/or  modify the  passed into them? If not, I highly doubt many of those deep copies you're doing are necessary. You'll want to carefully check to make sure yourself, but I think the following lines dont need all those deep copies:I think you can also move  to before the while loop, so that you can immediately discard moves that do nothing.Checking whether you've seen a board before using also seems inefficient. What kind of object is  anyway? I'd recommend using a  (not a list!). That may not work correctly if your boards are represented as s though (which also seems kind of overcomplicated at first glance here without seeing how your other functions are implemented). A simple custom class to contain your data, with correctly implemented  and  functions (required for set) would probably be better. Then you can efficiently check if something is truly new using:


Answer URL
https://docs.python.org/3/library/stdtypes.html#set
