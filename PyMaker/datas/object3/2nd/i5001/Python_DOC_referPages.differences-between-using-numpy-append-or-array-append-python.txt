Natural Text
I have this basic example to understand the numpy append method. The output gives me 2 arrays but are in different format (or what I understand of different format). What is the exact different of both arrays and why is the output different?
Your second method is pure python and doesn't use any numpy, so the type starts as list () and stays that way, because  also returns a list. It contains integers because that's what you get out of  and nothing in your code changes them.The first method uses numpy's  method that returns an ndarray, which uses floats by default. This also explains why your returned array contains floats.
The first coderesults in  being an  of s. While the second coderesults in  being a  of s. is a numpy type (main difference: faster, all items have the same type), while  is python-internal (main difference: works without , can hold any mixed types).
The first gives you an  and is the result of  methods, the second produces a  and is a result of  methods. Numpy arrays and Python lists are not the same thing.Numpy arrays are essentially object-oriented wrappers around fix-sized, typed, true multidimensional arrays.  array methods are optimized for vectorized numerical calculations, and along with , provide powerful scientific computing and linear algebra capabilities.Python  objects are heterogeneous, resizable, array-lists. They are optimized for constant-time . Indeed, both of these for-loops will scale very differently.  requires creating an entirely new array each iteration. Python  have amoratized constant time append. Thus, you will see quadratic growth in runtime as the size of your  scales, whereas with the list, you will see linear scaling. 


Answer URL
https://docs.python.org/3/library/functions.html#float
https://docs.python.org/3/library/stdtypes.html#list
https://docs.python.org/3/library/functions.html#int
