Natural Text
Here is the following test code:This yields:What I really want is:The above code works like a charm when there is only one-one mapping from the list and keys in dictionary.What modification can I make to ensure that the values are preserved after the exchange in keys takes place?
As others have pointed out, your dictionary is attempting to store multiple keys of the same value, which will only add the final stored key's value. Instead, you can use a list of tuples:Output:
This wont work because  is not a valid .Per the docs:It is best to think of a dictionary as an unordered set of key: value pairs, with the requirement that the keys are unique (within one dictionary). A pair of braces creates an empty dictionary: . Placing a comma-separated list of key:value pairs within the braces adds initial key:value pairs to the dictionary; this is also the way dictionaries are written on output.How do you expect Python to know which  you are referring to?
By definition, dictionaries do not allow you to store duplicate keys, so you have to follow a different approach. One is to trick your dictionary into seeing your keys not as , but instances of a class, sharing the same name. The following is an example with your sample case:Output:Credits go here for the initial idea.  


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
