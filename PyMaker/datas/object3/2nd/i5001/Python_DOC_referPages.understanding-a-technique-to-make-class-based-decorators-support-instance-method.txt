Natural Text
This question already has an answer here:How can I decorate an instance method with a decorator class?                    3 answers                I recently came across a technique in the Python decorator library's  decorator which allows it to support instance methods:The  method is, as explained in the doc string, where the 'magic happens' to make the decorator support instance methods. Here are some tests showing that it works:What I'm trying to understand is: how does this technique work exactly? It seems to be quite generally applicable to class-based decorators, and I applied it in my answer to Is it possible to numpy.vectorize an instance method?. So far I've investigated this by commenting out the  method and dropping into the debugger after the  clause. It seems that the  is such that it raises a  whenever you try to call it with a number as input:As I understand from https://docs.python.org/3/reference/datamodel.html#object.get, defining your own  method somehow overrides what happens when you (in this case) call , but I'm struggling to relate the abstract documentation to this example. Can anyone explain this step by step?
As far as I can tell, When you use a descriptor to decorate an instance method(actually, an attribute), it defines the behavior of how to ,  and  this attribute. There is a ref.So in your example, 's  defines how to get attribute . In , it pass  to  which  is the instance. And the key to support instance method is to fill in argument .So the process is:Assume there is an instance  of . When you access to 's attribute , as it has been decorated by . The value of attribute  is returned by .  accept two arguments, one is the calling instance(here is ) and another is its type.  fill instance into  in order to fill in  argument inside original method .To understand descriptor well, there is an example:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__get__
