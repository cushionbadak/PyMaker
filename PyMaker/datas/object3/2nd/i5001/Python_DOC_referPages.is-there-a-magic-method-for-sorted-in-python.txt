Natural Text
I understand that there are magic methods in python that can be overwritten by classes to control the way certain built in functions treat the members of these classes. For example, the behavior of  and  can be overwritten via magic methods  and :There are also  and ,  etc methods to control how these objects can be compared and how a list of them should be ordered by . My question is not about customizing the ordering of objects in a list but about sorting the object itself. Suppose the set weren't empty and I want to use  to sort it:Is there a magic method I can implement to have  flip the elements if they aren't in order? I'm picturing the following behavior:
You should definitely read the official documentation of how to emulate container types. Basically a class supposed to work as a container (list, dict etc.) needs to implement methods to set or get members ,  and iterate over items  and to get the number of items - method . This is the minimum. But you can also add the ability to delete items and other operations.The behaviour of  built-in function is to iterate over elements of your container and compare them using methods you mentioned  which should be defined for items and not the container as you know already. Then a new  instance is created with items sorted and this new instance is returned. You can pass it to the constructor of your custom container then or you can wriap  with a custom function which will return the desired class instance.
As some have said in the comments, sets are unordered but I don't think your question is really about sets.Python uses the data model methods you mentioned, ge, le, and cmp to determine how a class behaves when sorted() is called on it. You can see how I try to call it here, but Python objects and asks me to implement <. Hope this helps. Aslo, as other people said, it's a good idea to subclass something in collections.abc. I'd read Item 28 in effective python that talks about this to get a good idea.
 and  are functions who take an object as parameter and return an integer (resp. string). The object can personalize the way the len is calculated, or the string is generated, via the  and  magic methods.Similarly,  is a function that takes a list (or any iterable) of objects and returns a list of the sorted objects. The objects can personalize the way they get compared through the  magic method.Some confusion arises when we think of `sorted(my_list) as a function that "sorts the list", rather than "sorts the elements of the list".You don't want to sort your objects (i.e. make an ordered list of objects), but only sort some data in their internal representation. So you need an instance method on your object that will update that internal representation. You can name it as you wish,  if you'd like, but you will have to call it on your one object, and it will not be involved in comparing objects.


Answer URL
https://docs.python.org/3/reference/datamodel.html#emulating-container-types
https://docs.python.org/3/library/functions.html#sorted
