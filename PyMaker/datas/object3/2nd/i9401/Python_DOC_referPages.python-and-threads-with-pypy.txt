Natural Text
I have a kivy application in python which uses some threads.As python is not able to run these threads on different Cores due to the Global Interpreter Lock, I would have liked to try to use PyPy for it and see if I can make the threads run faster of different cores since PyPy is different and offers stackless (what ever that is? :).Does somebody has some information to share on how to make a simple python program, which launches some threads by the module , running with the pypy interpreter such that it uses this stackless featuer?
Pypy won't resolve Python problems of running a single-thread each time, since it also makes use of the GIL - http://doc.pypy.org/en/latest/faq.html#does-pypy-have-a-gil-whyBesides that, Kivy is a complex project embedding Python itself - although I don't know it very well, I doubt it is possible to switch the Python used in it for Pypy.Depending on what you are doing, you may want to use the   module instead of   -  it is a drop-in replacement that will make transparent inter-process calls to Python functions, and can therefore take advantage of multiple-cores.https://docs.python.org/3/library/multiprocessing.htmlThis is standard in cPython and can likely be used from within Kivy, if (and only if)  all code in the subprocess just take care of number-crunching, and so on, and all user interaction and display updates are made on the main process.


Answer URL
https://docs.python.org/3/library/multiprocessing.html
