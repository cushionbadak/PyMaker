Natural Text
I would like to run a series of commands (which take a long time). But I do not want to wait for the completion of each command. How can I go about this in Python?I looked at and Don't think that is what I need.CodeI would like to callWithout having to wait.
Use python's multiprocessing module.Complete Documentaion is over here: https://docs.python.org/2/library/multiprocessing.htmlEDIT:You can also use the Threading module of python if you are using jpython/cpython distribution as you can overcome the GIL (Global Interpreter Lock) in these distributions.https://docs.python.org/2/library/threading.html
The most straightforward way is to use Python's own multiprocessing:This module was introduced back exactly to ease the burden on controlling external process execution of functions accessible in the same code-base Of course, that could already be done by using os.fork, subprocess. Multiprocessing emulates as far as possible,  Python's own  moudle interface. The one immediate advantage of using multiprocessing over threading is that this enables the various worker processes to make use of different CPU cores, actually working in parallel - while threading, effectively, due to language design limitations is actually limited to a single execution worker at once, thus making use of a single core even when several are available.Now, note that there are still peculiarities - specially if you are, for example, calling these from inside a web-request.  Check this question an answers form a few days ago:Stop a background process in flask without creating zombie processes
This example maybe is suitable for you:You just use decorator  for your functions.There is only one problem: when main program is over, it waits for end of child processes.


Answer URL
https://docs.python.org/3/library/multiprocessing.html
https://docs.python.org/3/library/asyncio-subprocess.html
