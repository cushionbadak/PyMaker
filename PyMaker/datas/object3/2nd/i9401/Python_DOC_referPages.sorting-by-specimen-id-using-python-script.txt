Natural Text
I have a python script to merge data files with the same format, remove duplicate headers only, adds two new blank lines between every every three lines, except first instance is the first four lines to include headers.Example input file text (infile 1):Example input file text (infile 2):I would now like to modify the script so that it will sort the output by , while keeping the two blank lines in between every three lines (i.e., there should be two blank lines after each unique ). Any suggestions on sorting the rows? I see a lot on sorting multidimensional data or python lists, but not much on 2D tables. Also, I've encountered some odd behavior in that if I export my data from Excel in tab-delimited txt files, this script will only result in output that contains the contents of the first infile, but not the others. Yet, if I copy and paste the example data from this website into a txt file and use these as infiles, I have no problems. Does anyone know why I'm experiencing this issue?
I changed your test data to already be in a list by line.  This is roughly equivalent to what would be returned by readlines():This program removes the need to count lines, by reading in all of the data before writing any data back out:
I would probably recommend using pandas for working with tabular data in general, since you could easily just read in the data using , then call , and then iterate over the output to print out the newlines.Assuming these input files are tab-delimited files, here's how you would read them in and sort them, with :At this point, you want to dump them out. Without your requirement that they have a blank line every 3 lines, you would just do  and you'd be good ( to make it tab-delimited,  because  will add a numeric index when you read it in and you don't want that to be written out, since it is meaningless), but instead we read it into a list of lines so we can iterate over them and write extra lines as necessary:If you don't want to use  for this, you can try the  module:Once you have , you can use the same code I used above to write it to the output file.


Answer URL
https://docs.python.org/3/library/csv.html
