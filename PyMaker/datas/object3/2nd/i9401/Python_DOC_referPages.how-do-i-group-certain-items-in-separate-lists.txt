Natural Text
I have a Python code that generates a genotype for an offspring, based on two genotypes from the biological parents that you input. Here's the code that works as it should: http://freetexthost.com/tutjzff4aiYou input two genotypes (e.g. "EE aa" and "ee AA" and it outputs "Ee Aa". You can also input additional genes, that isn't relevant however because that part works as it should. It currently has two required gene types (extension and agouti). I need it to have a third type. I need to have a third type that is "cream". The reason I need this is because currently the "Cr" and "prl" (which are currently in the order list) requires to be input separately (nCr nprl) when they should actually be input as Crprl. The Cr and prl gene sit on the same locus so when the parent has both Cr and prl (Crprl) it needs to always pass one of them. If you input them separately as nCr nprl, there's a chance the offspring receives neither, or both, because the code reads them as two different loci.the list should look like thiscream = ["Cr","prl"]possible inputs should be nCr, CrCr, nprl, prlprl, and CrprlThis is what I have so far and it does not work. http://freetexthost.com/6160o0mk3e
I recommend look at itertools module.It's really the thing you need. Use it like this:There's a very good method set for different combinatorial operations. How to iterate combinations and easily check conditions:How to make a list of merged values and ignore impossible one ('nn')? This so-called 'list comprehension' iterates over all combinations, checks any particular combination is valid (). Then valid combinations are joined as strings with  and a list of such strings is returned.Definetely worth looking at Itertools Recipes.


Answer URL
https://docs.python.org/3/library/itertools.html
