Natural Text
This function is meant to take a generic dictionary (that might, recursively, contain other dictionaries and lists) and put all its contents on a single, linear list.It did its job, but I wonder:a) did I forget any important data types? (eg. I forgot sets)b) what would be a more pythonic way to write it? (esp. could I write a list comprehension?)
You can avoid list-creation/concatenation in your function by using .This is a generator, so if you really need a list, you can do:Also note  is better than directly comparing types.
You can always get rid of these simple types of recursion using your own stack / queue.First, use the proper tests suggested in the comments, must importantly the  thing.Then:There's probably some tweaks to make it more efficient, such as realizing that dictionary keys can't be dicts or lists. But, they could be tuples, and those are iterable, so... better to stick with a general check.
May I recommend the following solution? The  and  functions test your idea and show a better was to implement it respectively. If you do not mind working with the concept of iterable objects and generators, the  function and  generator may be a better demonstration on how to approach the problem. Please adjust your code for what is most desirable and performs better.


Answer URL
https://docs.python.org/3/library/collections.abc.html
