Natural Text
Here is a console demonstration:So it seems pprint is using the same technology as printing strings does.Admittedly the white space character between a & b in the initial value bound to x is, indeed U+200a.  But when using UTF-8 input and output encodings, why would any characters be converted to \u notation for output?Question 2, of course, is how can one learn what is the whole set of characters are converted in that manner?Question 3, of course, is how can one suppress that behavior?
 prints the representation of the object you pass it. From the docsThe pprint module provides a capability to “pretty-print” arbitrary  Python data structures in a form which can be used as input to the  interpreter.And "a form which can be used as input to the interpreter" means you get the object's representation, i.e., what its  method returns.If you want strings to be printed using their  method instead of their  then don't use .Here's a Python 3 code snippet that looks for chars that get represented using a  escape code:outputNote that codepoints > 0xffff get represented using a  escape code, when necessary.output
I finally found the documentation that explains it.From Python Unicode documentation:int Py_UNICODE_ISPRINTABLE(Py_UNICODE ch)It partly answers the first question (the fact, not the reason why), and leads to the exact answer for Question 2.Unicode space separator charactersI suppose the desire to be visually unambiguous is the reason for the fact... all those separator characters look "the same" (white space). That might be important if you are examining a paper log, but if examining it online, copy/pasting to a hex display tool, or to This wonderfully helpful Unicode decoder is certainly sufficient, without interrupting the flow of the text when the details of which separator was used is not important (which, in my opinion, is most of the non-paper time).Question 3 can apparently be done in one of two ways: Creating a subclass of str with a different repr (disrupts existing code) or creating a subclass of pprint with a format function that avoids calling repr for str, but just includes the value directly.


Answer URL
https://docs.python.org/3/library/pprint.html
https://docs.python.org/3/library/unicodedata.html
