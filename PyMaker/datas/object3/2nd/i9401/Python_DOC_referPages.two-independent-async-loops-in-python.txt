Natural Text
What would be a good approach to execute two asynchronous loops running in parallel in Python, using ?I've thought about something like the code below, but can't wrap my head around how to use // in this particular case.Expected output:
this works fine:note: you wanted to await fast non-io bound operations ( and  that are not even coroutines); what you can do is  (which is a coroutine and yield control back to the caller): itself is blocking and does not play nicely with .
List objects do not have awaitable operations, nor do they need to as there is no I/O or other delay you could handle asynchronously.You also want to use , not ; the latter blocks.The following works just fine; I added in a timestamp in the  to show this off better:Note that we use  on the  call; that provides a point where your coroutine (cooperative routine) yields control to another routine.This produces:


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.sleep
