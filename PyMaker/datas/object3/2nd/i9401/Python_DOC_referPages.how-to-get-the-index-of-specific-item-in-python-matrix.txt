Natural Text
I am newbie to Python programming language. And I am looking for How to get the indexes (line and column ) of specific element in matrix.In other I way I want to do the same as this source code using lists.Best Regards
Here's a simple function which returns the coordinates as a tuple (or  if no index is found). Note that this is for 2D matrices, and returns the first instance of the element in the matrix.(Edit: see hiro protagonist's answer for an alternative Pythonic version)Or, if you want to find all indexes rather than just the first:You can use it like so:
a (in my opinion) more pythonic version of the FlipTack's altorithm:in python it is often more natural to iterate over elements of lists instead of just the indices; if indices are needed as well,  helps. this is also more efficient.note: just as  (without a second argument) this will only find the first occurrence.
Since you say that you're a beginner, pardon me if you already know some of the below. Just in case I'll describe the basic logic you can use to write your own function or understand the other answers posted here better:To access an element in a specific row of a list, for example, if you wanted to get the first element and save it in a variable:myvar now stores 1. Why index 0? Think of the index as an indicator of "how far away from the beginning of the list an element is." In other words, the first element is a distance of 0 from the start.What if you have a multi-dimensional list like so?Now you think in terms of row and column (and of course you could have n-dimensional lists and keep going).How to retrieve the 5? That is a distance of 1 row from the start of the list of rows and 2 columns away from the start of the sub-list.Then:retrieves the 5.FlipTack's and hiro protagonist's functions wrap this logic in the nice compact procedures, which search the entire 2-dimensional list, comparing elements until the desired one is found, then returning a tuple of the indices or continuing to search for duplicate elements. Note that if your lists are guaranteed to sorted you can then use a binary search algorithm across rows and columns and get the answer faster, but no need to worry about that for now.Hopefully this helps.
You can also add a tag to your function to search the occurrences of your input matrix/list.For example: If you input is 1D vector:Output:For 2D vector:Output:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
