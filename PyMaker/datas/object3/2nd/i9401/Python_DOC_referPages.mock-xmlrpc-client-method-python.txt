Natural Text
I am in the process of learning unit testing, however I am struggling to understand how to mock functions for unit testing.  I have reviewed many how-to's and examples but the concept is not transferring enough for me to use it on my code.  I am hoping getting this to work on a actual code example I have will help.In this case I am trying to mock isTokenValid.Here is example code of what I want to mock.in my unit test file I have How would I mock the code listed in 'function'?   Token can be any number as a string and valid would be a int(1)
First of all, you can and should mock ; your library imports  as a new name, but it is still the same module object so both  in your library and  lead to the same object.Next, look at how the object is used, and look for calls, the  syntax. Your library uses the server proxy like this:So there is a chain here, where the mock is called, and the return value is then used to find another attribute that is also called. When mocking, you need to look for that same chain; use the  attribute for this. By default a new mock instance is returned when you call a mock, but you can also set test values.So to test your code, you'd want to influence what  returns, and test if your code works correctly. You may also want to assert that the correct URL is passed to the  instance.Create separate tests for different outcomes. Perhaps the token is valid in one case, not valid in another, and you'd want to test both cases:
There are many mock attributes to use, and you can change your patch decorator usage a little as follows:You can adjust the code above to satisfy your requirements.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.return_value
