Natural Text
I am trying to write regular expression for this line:That It could group floats with sign in a single group (-5.0,-4.0...)I have tried: But apparently It does not ignore non-capture group inside capture group.Any suggestion how this could be solved?
Your capture group has the following elements: matches a literal  matches any number of whitespace characters matches any number of digits matches a literal So right now, that matches a plus sign followed by space followed by digits followed by a decimal point. But it sounds like you want to match several sign-space-digits-decimalpoint-digits sequences in a row, as long as they have the same sign. I'd do that like this:Start with the expression to match a single such sequence:This matches plus or minus, then space, then digits, decimal point, digits.You'll want to save the sign to make sure that the rest of the pattern only matches sequences with the same sign. So make a capturing group.Now let's repeat the pattern (with some intervening space) to match another group, except that we want to make sure the sign is the same so we use a backreference.The  matches whatever was matched by capturing group number 1. In this case, that's the sign,  or . This pattern will match two consecutive sequences that have the same sign.Now change the second part of the pattern to match zero or more additional sequences.Finally, you can allow for spaces before and after the match. This can be solved with judicious use of the  function, or , rather than . You can then use  with no arguments to get the sequence that was matched, which is what you want.
According to your requirement:That It could group floats with sign in a single group (-5.0,-4.0...)The solution using  function:The output:
Here's something you can try:Although, you will always have a trailing comma, so you'd have to remove it.Here is a demo


Answer URL
https://docs.python.org/3/library/re.html#re.regex.search
https://docs.python.org/3/library/re.html#re.regex.findall
https://docs.python.org/3/library/re.html#re.regex.match
https://docs.python.org/3/library/re.html#re.match.group
