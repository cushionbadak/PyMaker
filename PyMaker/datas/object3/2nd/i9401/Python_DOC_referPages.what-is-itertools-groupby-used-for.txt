Natural Text
While reading the python documentation I came across the function. It was not very straightforward so I decided to look up some info here on stackoverflow. I found something from How do I use Python's itertools.groupby()?.There seems to be little info about it here and in the documentation so I decided I to post my observations for comments.Thanks
To start with, you may read the documentation here.I will place what I consider to be the most important point first. I hope the reason will become clear after the examples.ALWAYS SORT ITEMS WITH THE SAME KEY TO BE USED FOR GROUPING SO AS TO AVOID UNEXPECTED RESULTStakes a list of iterables and groups them based on a specified key. The key specifies what action to apply to each individual iterable, the result of which is then used as the heading for each grouping the items; items which end up having same 'key' value will end up in the same group.The return value is an iterable similar to a dictionary in that it is of the form .Example 1results inExample 2results inNow for the sorted versionresults inExample 3results inNow for the sorted version. I changed the tuples to lists here. Same results either way.results in
As always the documentation of the function should be the first place to check. However  is certainly one of the trickiest  because it has some possible pitfalls:It only groups the items if their -result is the same for successive items:One could use  before - if one wants to do an overall .It yields two items, and the second one is an iterator (so one needs to iterate over the second item!). I explicitly needed to cast these to a  in the previous example.The second yielded element is discarded if one advances the -iterator:Even if  isn't empty!As already mentioned one can use  to do an overall  operation but that's extremely inefficient (and throws away the memory-efficiency if you want to use groupby on generators). There are better alternatives available if you can't guarantee that the input is  (which also don't require the  sorting time overhead):probably more.However it's great to check local properties. There are two recipes in the -recipes section:and:


Answer URL
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/library/collections.html#collections.defaultdict
