Natural Text
I am interested in obtaining a general way to obtain a list of arguments and keyword arguments taken by a callable Python object. This is straight-forward for functions with the  function, for example:However, this fails in cases such as these:Note, that there are ways to obtain the arguments for the partial function and for the callable object, i.e:but I would like a more general way of obtaining these results, if at all possible.
All these can be handled by using the  helper function which, as stated in its docs:Accepts a wide range of python callables, from plain functions and classes to  objects.What  does is it takes your callable and constructs a  object from it:with the arguments now lying in the  mapping attribute for the  instance:    With a  object, you'd get the corresponding representation:As for built-in functions such as , this isn't always possible, some of these functions don't expose the appropriate metadata to construct a signature, from :Some functions may not be introspectable in certain implementations of Python. For example, in CPython, built-in functions defined in  provide no metadata about their arguments. Adding support for them is out of scope for this PEP.So, while  isn't the type to expose information about itself, others are, e.g :you'll unfortunately require a  for these, there's nothing else that can be done.The cases that the  helper handles are enumerated in the implementation section of  which introduced it.In general,  has been deprecated for a while now in Python 3, the suggested approach (if you're using Python 3, that is) is to use  the representation offered via  objects. If on Python , I'm pretty sure you can't do it directly with , you should use  as Anttis' answer suggests. 
 also handles partials correctly. It was previously deprecated but was undeprecated since it was deemed that it is quite useful for single-source Python 2/3 polyglot code.Another option is  which is a bit more complicated.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.signature
https://docs.python.org/3/library/inspect.html#inspect.getfullargspec
https://docs.python.org/3/library/inspect.html#inspect.signature
