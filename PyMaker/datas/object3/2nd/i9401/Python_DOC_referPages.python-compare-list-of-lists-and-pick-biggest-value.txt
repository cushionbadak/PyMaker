Natural Text
I have a list of lists:I would like to compare each "sub-list" with the others "sub-lists", match those that have the same value for index  and just keep the ones that have the biggest index , so that the result is something like this:I've been trying various for-loops and conditional statements, but I've got stuck. Could someone give me a hand with this and put me on the right track?
Use 
Natural answer is using , grouped by first element of the sublist, and simply apply  to each group. Since first grouped elements are the same,  naturally maxes according to second element: the integer.result:Note: if the list is not sorted according to first element values,  needs to be used instead of 
Make a dictionary to hold all the max values:
You could replace the  expressions in @Patrick Haugh's solution by  like this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
https://docs.python.org/3/library/operator.html#operator.itemgetter
