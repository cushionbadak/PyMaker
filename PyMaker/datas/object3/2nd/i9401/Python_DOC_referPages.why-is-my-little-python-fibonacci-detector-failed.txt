Natural Text
for some reason I have to determine if a big number is a fibonacci number, so I copy some code from internet and modified it a little, it seems not operate well when it's big input. here is code:when I input , it output true as planed, but when I input which I know is the 343rd fibonacci number from another java program I made. it output false surprisingly. So is it because the number is too large so it makes mistakes? but I think python should be able to handle enormous big number because it is based on the memory you have? is the problem in my program or is it because it's too big input? Thx!
As already pointed out, the problem arise solely from , which is a floating point operation, meaning not exactly precise (unlike integer operations). The precision of floats in python is about 16, meaning that precision float operations on a number with more than 16 digits always goes bad.Instead of using floats ( converts your integer to float implicitly), you can use the  type from the  module, included in the standard library. This is a floating point type with variable, controllable precision. To fix your program, simply replace your  function with this:Here the precision is set equal to the number of digits of the input number, which is given by the length of the  representation of the input number.
You have a loss of precision. For  (approximately), . Try using  and  from module  - they are designed to work with very large integer numbers.
I checked it with Fibonacci numbers produced from mupad in Matlab(use numlib::fibonacci(n)) . It's because of precision. Python can't detect more than 52 precision, so for numbers larger than 2^52, precision will be lost. You can checked it with 76th fibonacci number and 77th fibonacci number to see the probelm.76th fibonacci number: 341645462290670777th fibonacci number: 5527939700884757
It is related to the fact that python loose precision after 52 digits (in total before and after the dot). You have to use  imported from module  this is the only way you can handle big numbers.


Answer URL
https://docs.python.org/3/library/pdb.html
