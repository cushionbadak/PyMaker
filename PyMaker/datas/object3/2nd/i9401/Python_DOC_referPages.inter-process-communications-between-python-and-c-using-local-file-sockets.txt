Natural Text
I have a c++ program which creates a local socket bound to "/tmp/.mysocket" and waits to receive data from that socket.  The way it is set up, raw binary data would be sent to the socket and loaded into the following C++ structure:The C++ program listens for input using recvfrom:The server is just using the standard AF_UNIX and SOCK_DGRAM to create the socket.My questions is relating to python: How do I send data to the local socket bound to /tmp/.mysocket using python?  I am not using AF_INET or opening a specific port for this.I can use python's socket library to describe the socket, but I can't find any resource that discusses binding a socket to a file in python and sending data to that socket.  The documentation for the socket library only discusses using AF_INET and SOCK_DGRAM for local sockets bound to a port number at 127.0.0.1, but I'm not doing that.How do I get python to send data to a socket bound to a file?  Is there an example python program that does just that (maybe a client/server pair that demonstrates this functionality)?  As long as I can get python to send data to a local file socket, I can figure out the rest.
The Python  library is a fairly thin wrapper around the socket interface you're familiar with from C++.  See socket documentation.It's going to look something like this:
You just change  to  and then  and/or  methods accept path to a file (instead of  pair). Other then that everything else works pretty much the same.


Answer URL
https://docs.python.org/3/library/socket.html
