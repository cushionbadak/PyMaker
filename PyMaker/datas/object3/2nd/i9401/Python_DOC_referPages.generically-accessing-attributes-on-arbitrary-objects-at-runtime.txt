Natural Text
Let's say we have an arbitrary object of an unknown type and we want to access an equally arbitrary attribute associated with this object, queried as a string name. I am looking for a best-practice approach for obtaining this value.In pseudo-code/Python, the current strategy I am considering is along these lines:A couple items to consider:What happens if the attribute does not exist on the object? I am okay raising an exception.The attribute may be deeply nested.I figure this is the kind of problem that must be solved by programming languages and DSL interpreters, but I don't know of a standard/commonly accepted best practice.The idea of passing custom stored DSL/code to  at runtime along with the object has been broached, but I want to avoid this particular solution for now and prefer a Pythonic one.
 seems to answer at least the first half of your question and this point: What happens if the attribute does not exist on the object? I am okay raising an exception.I'd argue that this is a best practice since it's part of the standard library.Regarding your second point:The attribute may be deeply nested.A solution would be to use  (which will list all the attributes of an object) and loop over those for non-dict objects, but i'm less confident about the 'best-practice' aspect of this solution.


Answer URL
https://docs.python.org/3/library/functions.html#dir
