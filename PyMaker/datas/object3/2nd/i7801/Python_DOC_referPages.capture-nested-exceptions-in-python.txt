Natural Text
I have set of Python scripts which are calling functions in a nested way. For each of these functions I have a try, except statement to capture every exception and print them. I would like to send an e-mail alert containing the complete sequence of exceptions encountered during the execution. Example:The code above would behave as follow in case of error in  which is the most nested function: encounters an exception it will print it and returnthe error message to  will fail because  contains an error message and not a valid value will trigger and exception and send its own error message in the e-mail alertIn addition to the error message from , I would like the e-mail alert to contain the error message from . Note that I would like to avoid passing  variable to  function in the except statement of  because in real life my program has a lot of nested functions and it would mean passing the result variable of every single function into the except statement.How would you achieve this? Is there a way to access the complete sequence of errors triggered by the whole program?Thanks
you don't need to return exceptions obtained with : we can just re-raise itso your example may look likeFurther improvementsFor printing full error traceback we can use  module likeAnd it is just  the tip of the iceberg,  is awesome and you definitely should use it.Further readingLogging HOWTO,SMTPHandler for sending errors on email via SMTP
You can, also, create a  that can take a descriptive error message and return it.Here is, a trivial example that you can modify and implement it into your code untill it fills your needs:Output:


Answer URL
https://docs.python.org/3/library/logging.html#module-logging
https://docs.python.org/3/howto/logging.html#logging-basic-tutorial
https://docs.python.org/3/library/logging.handlers.html#smtphandler
https://docs.python.org/3/tutorial/errors.html#user-defined-exceptions
