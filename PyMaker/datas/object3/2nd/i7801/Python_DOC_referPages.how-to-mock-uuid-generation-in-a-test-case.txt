Natural Text
I have a test case in which in the setUp, I create an object for which I want to mock the function  in the module . My problem now is that when I run write two test cases, the second time the object is created, it gets other uuids as the first time. Therefore, the result is dependent on the number of test cases in my test class and the order they are run in, something I don't want.Is this the best way to mock a uuid generator?How do I reset or recreate the iterator at every call of setUp (or tearDown)?
The answer was easier than I thought: just don't use iterators! Instead, set the list of uuids as  of the mock.EDITI found an even nicer way to write this as a context manager, which allows for prefixing uuids based on the context.Explanation: I am mocking the function  using . In it, I define a side effect as a list. If your side effect is a list, it can be seen as a list of return values of that function on subsequent calls, so the first time the function  is called, it returns the first element of that list, the second time the second element, etc. If in the with-context I am generating 10 objects A, the UUIDs will be  up to .


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect
