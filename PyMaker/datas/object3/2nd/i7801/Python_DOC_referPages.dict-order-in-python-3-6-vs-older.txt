Natural Text
I have this bit of code that I need printed out in this exact order (Visitor Team, Visitor Rating, Home Team, Home Rating, Expected Winner, Margin) when I run it through .I've been learning and using Python 3.6 and, unbeknownst to me, dicts in 3.6 are ordered now so this actually prints out as I intended it to.  It was just dumb luck I guess that Python 3.6 gave me exactly what I needed!But I went to install Python 3.5 on another computer and this doesn't print out like I want.  I've been reading about ordereddicts but I'm not sure how exactly to use it.  Do I need to declare final_dict as empty first and then iterate into it the key order I need?  
Dictionaries in Python 3.6 are ordered, but that feature is considered an implementation detail that you shouldn't rely upon (except in a few specific cases like ). If you do require a specific order, you should use  instead. You can construct one using a list of  tuples that are in the desired order:An  works just like a normal  in most respects, other than having a different  and a few additional methods. You can read more about it in the docs.In Python 3.6+ you'd also be able to use keyword arguments to the constructor if your key strings were valid identifiers (e.g. ). Unlike the ordering of normal s, the order of keywords is guaranteed to be preserved (not an implementation detail). That's not backwards compatible though (and can't work for your non-identifier keys anyway).But it's probably worth considering that if you need a very specific order for your data, a dictionary may not be the best type to use to store it in. I see the  function you're using comes from a library, and according to the docs, it accepts many different formats of data. I'd probably just pass it a list of column data, and give it the headers separately:(Note, I've not actually tested that code, since I don't have the  library on my system. But it should at least be close to working.)


Answer URL
https://docs.python.org/3/library/collections.html#collections.OrderedDict
