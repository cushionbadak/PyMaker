Natural Text
I am trying to understand the code provided on the Python.org tutorial in section 3.2The code above results in the sequence as follows:My questions are as follows:Why do the numbers appear vertically and not horizontally like a print statement generally does?  I know you can force the numbers to appear horizontally but want to understand why that is not the default.Most importantly, how is the python logic working?  I understand its the fibonacci sequence but you're only asking the code to print "b".  It should just print a+b over and over again, should it not (resulting in 1 being printed over and over again)?  I don't understand how the logic within python progresses the sequence.Any help is much appreciated.  Thank you.
The python print statement by default generates a newline after each print. This causes each printed item to appear on its own line. If you print a literal newline, you get two blank lines:Most importantly, how is the python logic working? I understand its  the fibonacci sequence but you're only asking the code to print "b".  It should just print a+b over and over again, should it not (resulting  in 1 being printed over and over again)?This line: evaluates the expressions  and . If b=1 and a=0, then this results in the tuple . That tuple is then split into its two components and assigned respectively to the variables  and . So at the end of the first iteration, a and b each get the value 1. This is ultimately equivalent to the successive operationsbut notice that here we have to create a temp variable to hold the original value of b. This is because the one-liner evaluates both of the expressions on its right-hand side before it assigns to the variables named on the left-hand side. 
First of all your code would be quite simple if you used parentheses. The code a,b is a tupel:Let's interpret the code line per line:Now the next iteration:And the next:And so on....You will get112358But each number in a separate line because print function add '\n'. So the output is "vertical".


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences
