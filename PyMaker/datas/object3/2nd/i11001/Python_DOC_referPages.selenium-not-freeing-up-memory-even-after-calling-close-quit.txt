Natural Text
So I've been working on scraper that goes on 10k+pages and scrapes data from it.Issue is that over time memory consumption raises drastically. So to overcome this instead of closing driver instance only at the end of scrape scraper is updated so it closes instance after every page is loaded and data extracted.But ram memory still get's populated for some reason.I tried using PhantomJS but it doesn't load data properly for some reason.I also tried with initial version of scraper to limit cache in Firefox to a 100mb, that didn't work also.Note: I run tests with both chromedriver and firefox instance, and unfortunately I can't use libraries such as requests, mechanize, etc... instead of selenium.Any help is appreciated since I've been trying to figure this out for a week now. Thanks.
Are you trying to say that your drivers are what's filling up your memory? How are you closing them? If you're extracting your data, do you still have references to some collection that's storing them in memory?   You mentioned that you were already running out of memory when you closed the driver instance at the end of scraping, which makes it seem like you're keeping extra references.
The only way to force the Python interpreter to release memory to the OS is to terminate the process. Therefore, use  to spawn the selenium Firefox instance; the memory will be freed when the spawned process is terminated:See also Why doesn't Python release the memory when I delete a large object?
I have experienced similar issue and destroying that driver my self (i.e setting driver to None) prevent those memory leaks for me
I was having the same problem until putting the  statements inside a try/except/finally statement, and making sure  was in the finally statement, this way, it always execute. Like:From the docs:The finally clause of such a statement can be used to specify cleanup  code which does not handle the exception, but is executed whether an  exception occurred or not in the preceding code.


Answer URL
https://docs.python.org/3/reference/executionmodel.html?highlight=finally
