Natural Text
I'm currently looking for an algorithm to be able to go through a list such as the following one: I want, in this example, to be able to select the first "1" as there's a duplicate next to it, and keep going through the list until finding the next number having a duplicate next to it, and then select the last number of this one (ie. "5" in this example).Eventually, make the difference between these 2 numbers (ie. 5-1)I have this code at the moment:I'd like to add a further condition to my question. Suppose you have the following list: lst=[1,1,1,1,2,3,4,5,5,5,3,3,3,3,2,2,2,4,3] In this case, I'll get the following differences according to your code = lst = [4,-2,-1] and then stops. However, I'd like "4-2" to be added to the list afterwards because "4" is followed by a number less than "4" (thus, going to the opposite direction - up - of what "2" followed "4" were following). I hope this is clear enough. Many thanks
You can use  to find groups of repeating numbers, then find the difference between the first two of those:Or use  if you want the difference between the first and the last repeated number.In the more general case, if you want the difference between all pairs of consecutive repeated numbers, you could combine that with :I think now I got what you want: You want the difference between any consecutive "plateaus" in the list, where a plateau is either a repeated value, or a local minimum or maximum. This is a bit more complicated and will take several steps:
You can use  with a starting index of . Duplicates are detected if the current value is equal to the value at the previous index:The list  is a list of all duplicates.  is the last item and  is the first.More trials:
Solution:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
