Natural Text
In my test code, why the  results for tuple and None are different? It seems that a, b point to the same object , but c, d point to different objects, though their values are the same (both equal to ). I know that  keyword checks for the object lying behind rather than just compares value like . And here I use tuple because I think tuple is immutable so that at least it's not a matter of whether the object is mutable or immutable.But why variables a, b don't create and point to two different  objects as c, d do to tuple?
 is a singleton object: only one instance of it can ever exist. So objects referencing  will always have the same identity, and two or more of such objects will always pass the identity  (object equality) test:Same applies to  and 
 object is a singleton in python. Hence the result. Whereas for  and , it creates separate tuples.From your example:
The 'is' operator compares the objects behind the variables as you figured out.The None Object in Python is a singleton (https://docs.python.org/2/c-api/none.html) and therefore a singleton restricts the instantiation of a class to one object (https://en.wikipedia.org/wiki/Singleton_pattern).


Answer URL
https://docs.python.org/3/library/stdtypes.html#comparisons
