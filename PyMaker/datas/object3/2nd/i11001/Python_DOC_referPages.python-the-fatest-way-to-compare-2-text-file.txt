Natural Text
I have 2 file: File A contains 200 000 lines; File B contains 4 000 000 lines. So, I want to compare these files and print the lines which aren't in File B.For example:File A:File B:The output:And the below is my code:This code works but it takes a very long time to complete. So, how to speed up the code process ? Any help will be extremely appreciated ! :)
Create a set just of the hashes of lines in file B - and compare the lines in A with those in this set - Such a set will take about about one hundred megabytes of memory, therefore should fit in memory in a notebook or workstation:The main speed up here is that unlike searching for a line linearly inside fileB, it is read only once - and each line is made available in a set, which has constant look-up time. Therefore you come down from ~200,000 X 4,000,000 comparisons (O(m X n)) to just ~200.000 Comparisons (O(m X 1)). That not to mention not needing to move data rom the filsystem into the program memory 200.000 times around.By keeping only the  of lines in B you avoid having to keep all the text information of fileB in memory - just 24 bytes for each hash (in a 64bit system) - insteadof the textual information itself (which depends on each's lines lenght) + its hash.
A faster way would be to open the file once and use a set:Maybe a better way would be something like this:
You could use the  operation to get all the lines that do not match in these files.Edit: The reverse operation, to print contents of the file B which are not in A is now just 


Answer URL
https://docs.python.org/3/library/filecmp.html
