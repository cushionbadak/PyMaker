Natural Text
I have a string .When I pass this to  as:I get the following result:However I expect the result to be:The difference is in .How can I get the expected result without modifying the string as I am reading the string from a file?
The problem is that your input isn't zero-padded, so the problem would be even worse if we were at, say, 11 microseconds. Let's fix the problem at it's source, and clean up the input first:Now it will be zero-padded to 6 digits as Python prefers.Here's an example of this working:You really need to clean up the input before the call to , because that's what  expects (6 digits).
From the documentation on :When used with the  method, the  directive accepts from  one to six digits and zero pads on the right.If your string always contains a 5-digits microseconds number, you could truncate the resulting number after parsing the string:A "proper" solution would be to zero-pad the number of microseconds though. Since you already have an example for python2, here's one using python3's extended unpacking:


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
