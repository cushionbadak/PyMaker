Natural Text
I have a 30 character string. I need to place dots in between each character of the string one at a time and store it an arrayBasically, if the string was the array will have these values:It can't have two dots next to each other, e.g v..s.uidhfsdfiuheu093ruuweorufdsi
A list with all the possible combinations will be very huge and inneficient. Indeed, for a word of length N, there is 2N - 1 dots positions possibilities.You can anyway use a generator: iteration will still be slow, but you do not risk to encounter memory issues.I would suggest you to use  to generate all combinations of dots and then inserting them to the word:
There are  possible combinations of dots for your 30 character string (29 possible spaces to place dots in). If we assume each output string is 30 bytes long (an underestimate, since the strings could be up to twice as long, depending on how many dots you insert), this means that stored in the most efficient way possible, you would still need 32,212,254,690 bytes of storage to contain it. That means you need an absolute minimum of 32 GB of RAM to run such a program. Almost certain many times that in practice, since all of the strings will be longer than 30 characters, and for performance reasons, python won’t store the strings in the most memory-compact manner anyway.What you’re asking is impossible.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
