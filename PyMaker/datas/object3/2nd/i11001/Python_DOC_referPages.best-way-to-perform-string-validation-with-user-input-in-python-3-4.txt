Natural Text
I have got a string as is:----> 2 parts: first char of each part is a capital letter.----> 3 parts: first char of 1st and 2nd part is a capital letter.The line I get is always valid because I check it with a regex already,I now would like to know what is the best way to ask the user for a character, then check if the input is the same as the City's first character (no matter what part of the city), if it is, print the City name to the output.I am doing this for now but I'm learning Python for 2 days now and I'm kind of struggling right now.I hope the description of my problem is straight forward because it's getting messy in my mind :)Could you please help me find the best way to perform such things in real time and for a lot of strings ?expected behaviour of programm if City is 'Pont de Marsan'Here's some more explanation:I have a list of City, some can be 'Paris', some can be 'Mont de Marsan' or even 'Pont Neuf'. I now have to ask the user for a single character, if he enters P, I have to print 'Paris' and 'Pont Neuf', if he enters 'd' I have to print 'Mont de Marsan'. It's the same behaviour as the GPS system in cars.
"(...) if the input is the same as the City's first character (no matter what part of the city)"You can split the city name by space using the string method  to get a  of its parts: defaults to splitting by space but can split one string by any other string, e.g.You can then go through each part of the city name and check what it starts with using the  method or string indexing if you only want a specific number of letters; e.g.  to match only the first letter "P".You didn't mention it but I assume you also want case-insensitive matching so that both "p" and "P" will match "Paris", "Pont Neuf" and "pont neuf". To do this, you could simply convert your city names and the user input to the same case using  or  but since you're using Python 3.x, you might as well take advantage of the  method that's made for this purpose. From the docs:Casefolding is similar to lowercasing but more aggressive because it  is intended to remove all case distinctions in a string. For example,  the German lowercase letter  is equivalent to . Since it is  already lowercase,  would do nothing to ;   converts it to .In the snippet below, you're converting the user input to a boolean (it starts out as a string). There's nothing technically wrong in it - Python won't complain - but is it really what you want?Maybe you wanted to break the while loop using a boolean? In that case, you could do the following:The code above also eliminates the need to repeat  throughout the code. An edited version of your code. I might have changed it a bit too much but just use what you can:I saved the code in a script called . Testing it...
My strategy is to create a dictionary of sets of city names, with the initial letter of each word in a city name as the key. It doesn't take long to create this dictionary, but it makes finding the matching cities very fast.My input loop ignores empty strings and leading or trailing blank spaces, and it prints "Nothing matches" if it can't find a match because I find it very annoying when a program closes just because I gave it bad input.Test run


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.casefold
