Natural Text
Let's have this  in a Python3 package:The code looks quite simple and does what is expected: it imports from modules mod1, mod2 and mod3 all symbols that these modules have put into their  list and then a summary of all three  lists is created.I tried to run the very same code in a module, i.e. not in the . It imported the three modules, but ,  and  were undefined variables.(BTW, if you run pylint on the original , you will get this error too.)The same statement  creates a  object when executed in the , but does not create it elsewhere. Why? is a special file, but till now, I thought only its name was special.
According to the documentation, this is expected behaviour:When a submodule is loaded using any mechanism (e.g.  APIs, the  or  statements, or built-in ) a binding is placed in the parent moduleâ€™s namespace to the submodule object. For example, if package  has a submodule , after importing ,  will have an attribute  which is bound to the submodule. In other words, when you do a  within a module, you will magically get a  attribute bound to the module. Naturally, you can access module's own attributes within  as if they were defined as variables there. When you are in another module you cannot do it. In this sense  is special indeed.


Answer URL
https://docs.python.org/3/reference/import.html#submodules
