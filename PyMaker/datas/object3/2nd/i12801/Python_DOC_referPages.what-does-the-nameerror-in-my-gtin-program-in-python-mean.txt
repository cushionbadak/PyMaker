Natural Text
Please note I am a beginner.The program below is about calculating a GTIN number. Basically, the part that doesn't work is the validating part. The program is supposed to validate the code as well as explaining it to the user at the same time; however, the computer doesn't seem to recognise the variables that I have used for some reason.The validating option is only available (only works) if you have literally just calculated a GTIN number and the menu has re-appeared once it asks if you want to re-run the program. I hope you can understand my question! Many thanks! Below is my code:The 'Name Error' message is:
From https://docs.python.org/2/reference/executionmodel.html :A scope defines the visibility of a name within a block. If a local variable is defined in a block, its scope includes that block.In your code, the value of  is assigned within the scope of the  function.  That means it is not visible outside that scope - it is a local variable of that function.  So, when you try to access it from a different function, , the name  is not recognized.The best way to design this is probably to make  and  methods of the same class, and create and work with an instance of that class. Then, if you want to share variables between methods of a class instance, the you can assign them as attributes of  - i.e. use  where you currently have just .A quicker and dirtier solution for sharing variables between functions is to putat the beginning of  (and any other function that wants to change their values). This will mean that the assignments occurring in  will take effect at the global scope (i.e. at the level of the whole file) and hence  will be able to access them.In its current form, your particular program will also work (and will be able to share variables between code blocks without you having to think about it) if you do everything in the same scope. That means get rid of the  statements entirely, and move the code block for  underneath , and the code block for  underneath .
you should change the signature of your  functionSlowly stepping through the function:The new function signature accepts a string that's the whole GTIN (e.g. ) and returns  if the GTIN is valid, and  if it is not. I used Javadoc comments here just because it's more familiar to a broader range of programmers, but current style should probably be: This grabs all the even-ordered numbers and all the odd-ordered numbers (slicing off the last character) and stores them in those respective variables. Read more in the docs in the section that reads This is just summing up the numbers. Should be self-descriptive. In fact  is how I'd write this for someone who wasn't just starting out!This replaces your fancy "round up to the nearest multiple of ten and subtract the original total" formula.  is the modulo function, which gives you the remainder of division rather than the quotient (, but ). It's a great way to bound a number, and modulo 10 is special because it essentially gives you the "ones" place in a positive number. Since we have the "ones" place, we can subtract that from 10 to get our checkdigit.Now we just return whether or not that checkdigit matches the last digit of our GTIN. Hooray!
You need to pass  as the function can only see variables defined within it. This means you need to return  from . You will need to do this for all the variables within a function that are defined within it.Since you have many such variables, it would be simpler to store them all in a lists called , , and , where  would be the integer you have currently defined as digit_1 and  would be the integer currently defined in . You should create another list for , and . To achieve this without changing your entire code I suggest the following.The last lines of your  should be:Then when you call  ensure to store the returned variables. When you define validation ensure you can pass ,  , and . I included how your function should index the list for the first 3 digits, but this will be similar for all the values. Remember  is stored in  I would strongly suggest moving  to the first line of your code. Modules are only imported once and remain for the entire session, so you do not need to import the module every time the function runs.EDIT: I previously forgot to pass totals, final_totals.


Answer URL
https://docs.python.org/3/library/stdtypes.html#common-sequence-operations
