Natural Text
I have a socket server running on an Arduino board and am trying to control it via a Python script. Using the basic example socket documentation, I have this:My script works fine when I comment out the lines to receive the response of the server. However, if I attempt to read the response, my server and python script hangs.On the server side, here is a snippet of what the code looks like: The library I am utilising for the server is the Arduino WiFi library.The function PhraseTCPCommand, takes the command and triggers external events with the GPIO pins of the board. This action is performed fine by the Python script when the recv() is commented out. The response string sent from the server is terminated with a newline and carriage return. Could that be causing issues? Additionally, I am able to connect and receive responses from the server with no issues using either telnet, netcat or PuTTY, which leads me to believe it's something to do with the way my Python script attempts to read the response from the server. 
The response string sent from the server is terminated with a newline  and carriage return. Could that be causing issues?No, what is causing the issue is possibly that the command  is not terminated with a newline and the function  expects one. Change to:
The issue here could be that your message has not been fully sent, and reflects a common misunderstanding of socket programming.  Low level calls such as  do not promise to send the full message. Instead the caller must check the number of bytes actually sent (from the return value) and continue to iteratively call the function until the full message is sent.In general, a bare  call without such iteration is a mistake.Python does provides a higher level function socket.sendall however that will perform this job for you.


Answer URL
https://docs.python.org/3/library/socket.html#socket.socket.sendall
