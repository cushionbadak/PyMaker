Natural Text
The story is as follows. The user inputs a number. Python converts the string into an int, and uses an algorithm to make a binary number. For example:What I need is that the function  is able to take the binary number list (), and add s to the start. If there are already  elements in the list, then it does not need to add a .I couldn't find the code that lets me add the elements to the start, so I just implemented a reverse feature to circumvent it. When i print the content of this function I get...Which is evidently not the intended result. I need the output. (a full  element list composed of 's, 's)Like This:
The reason that it returns  is simply because your  statement is lacking an expression:Therefore  simply means: "We're done, stop executing this function, nothing should be returned".and furthermore not all code paths will do a return statement anyway. Finally your  seems to add only a single zero, which can be inefficient.A better solution is probably:Here the expression  means that you repeat  n times in a list. So  will result in . Now the number of times we need to add this is . The  is in fact not even necessary, so you can rewrite it as:It means thus that the number of elements we have to short to generate an eight item list are constructed as a list of zero. And we add (append) with  the original list to it.As @Later42 shows in his answer, you can make it more efficient, by doing a  check first, and in case it is equivalent to eight, return the list itself:Demo using Python's interactive shell:
This might work? I have not tested it myself, but I think it should be fine.
Other solutions fit the bill I guess, but why not just use:Note that  in the format string denotes that the argument  is to be converted to a zero-padded 8-length binary string.


Answer URL
https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range
