Natural Text
This question already has an answer here:Removing duplicates in lists                    44 answers                For example, if I had:How could I remove the duplicate "bananas" so that:Also, if I had:How could I remove the duplicate "apples" from both lists so that:
The set-based solutions don't retain the order of the items. The following will keep the items in order and delete all but the first occurrence of each, using an auxilary set to keep track of which items have already been seen.If you want to reuse the same list object, you can do that this way:
Use built-in functions setIn second case, use list comprehension
The key to doing this is using Python's set. In Python, a set is a data structure in which every item is unique.If you call set(list), with a list as a parameter, you will get a set that contains all of the elements in list, with the duplicates removedYou can then convert this back into a list by calling list(). So, in your first example, you can write There are a couple of other methods in set that are useful. Intersection - Calling set1.intersection(set2) returns a set with all of the objects that are in both set1 and set2. Difference - Calling set1.difference(set2) returns a set with all of the elements in set1 that are not in set2.So, in your second example, you can write
You can just use :
You can use a set object to record the duplicate elements. Like this:


Answer URL
https://docs.python.org/3/library/functions.html#func-set
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
