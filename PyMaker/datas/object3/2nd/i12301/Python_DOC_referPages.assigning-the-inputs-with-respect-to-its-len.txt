Natural Text
I wanted to assign the inputs, to the related fields with respect to their s. The problem is that the fields also have conditions.1st to 10th fields, allow < 25 characters. 11th to 20th fields allow <100 characters. What I want is, the below code to take the , check the , and if the  is < 25 characters, assign that to 1st field, then move onto the next input; but also start with the 2nd field when checking its . When the entered input is between 25 and 100 characters long, it should be assigned to the 11th - 20th fields. Just like above, it should start with the 12th field once the 11th is filled. Please note that I want the script to check the < 25 condition first. And if the < 25 fields are filled, it can assign the inputs to the < 100 inputs. The code below, is not complete, and far from being true, that's all I could have done :)This is the continuation of this question, so please consider that  you're talking to a newly started here :)  Python list order
For each "bucket" of indices, you could create an iterator. Then, use  to chain those iterators together. Once one bucket is depleted, it will automatically use the next bucket, and since the underlying iterators are shared, no index is used twice. For the buckets, you can just use  (or  for Python 2.x), and if the last bucket is open-ended, use .Example (using just random numbers, no files and user input and strings with different lengths):Afterwards, the  list ends up as (broken down by "buckets"):Note how some buckets are not 100% full, because not enough numbers for that bucket were rolled, and some numbers end up in a higher bucket than their value would suggest, because they were rolled when their proper bucket was already full.Update: There are two problems in your updated code:Either loop over , or better, loop  directlyYou are mixing up the positions where to put the item  and where it came from Try changing your loop to this:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/itertools.html#itertools.count
