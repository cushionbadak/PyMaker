Natural Text
I have two lists  and  of numbers, and I want to iterate over them with the same instructions. Like this:But that feels redundant. I know I can write , but it has a price of running-time.Is there a way do that without loose time?
This can be done with :Which will print:As per the documentation,  does the following:Make an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable, until all of the iterables are exhausted.If you have your lists in a list,  is available:Which yields the same result.If you don't want to import a module for this, writing a function for it is pretty straight-forward:This requires Python 3, for Python 2, just  them back using a loop:In addition to the previous, Python  with its extended unpacking generalizations, also allows unpacking in the list literal:though this is slightly faster than  it still constructs a list which is then tossed; only go for it as a final solution.
 works, but if you feel that it's overkill to import a module just to call a single function once, you can replicate its behavior inline:Creating the (list1, list2) tuple is O(1) with respect to list length, so it should perform favorably in comparison to concatenating the lists together.
How about this:Only 3 lines


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
