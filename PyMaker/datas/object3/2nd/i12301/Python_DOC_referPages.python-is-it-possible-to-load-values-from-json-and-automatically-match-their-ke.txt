Natural Text
I'm new to python and have heard it has some interesting metaprogramming features which I know nothing about. I'm not sure this exists, but is it possible to load a json file and search for keys that match variables in the existing script, and if there is a match, assign them? Additionally, if I do make these assignments, is it possible to detect that the loading script (a config script in this case) contains variable names that the json file does not have? In this case I would add these new variable names to the json file and save values, to be loaded on next run. for example, I'd like to do something where somewhere in the following code, a list of variables attached to the executing script would be put into a list, and that list could then be used to match keys in a json file, and also to assign the variables new values in the executing script. output after running load config:is this sort of thing possible? Thanks in advance 
Well there is this module, that can be used to import a json file as if it was a python module:https://github.com/kragniz/json-sempaiBut even the author refers to it as an "abomination".As others have pointed out you could use  to get the current local variables and compare that with the JSON data.  Although the docs state that you shouldn't modify  it's often possible to get away with it.  Though in your case  won't work if you change it inside a function.You seem to be talking about global/module level variables though.  So you could use the  function and that can be written to.Note however it's potentially pretty dangerous - particularly if you can't trust what's in the config file...


Answer URL
https://docs.python.org/3/library/functions.html#locals
