Natural Text
Imagin I have three lists like:So:But what in list s: must be 
You can use a nested list comprehension / generator expression with regular expressions.First, use  with  to get the (optional) number, the character, and the (optional) rest for each string.For your second example, this gives . Now, in the outer generator, you can use  to provide a "default-value" in case the number is  (or use a ternary expression if you prefer: ):This gives . Finally, join to get .
This variant is a little bit more imperative and simple to follow:


Answer URL
https://docs.python.org/3/reference/expressions.html#boolean-operations
