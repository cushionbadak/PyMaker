Natural Text
Suppose that in Python I have 3 lists:  of variable lengths. For example : I would like to get every unique combination of TWO elements of the 3 lists above, i. e.  and NOT unique combinations of the 3 lists (such as ).I have looked at the solution here using  that is perfectly fine for 2 lists ; however, this solution does not work anymore when including a th list because the unique combinations are of length .Here is what I have tried:Note: Above is just an example and the solution should work for  lists of variable length and with possibly the same value being in different lists... Any idea of how I could do would be greatly appreciated! :)EDIT: as asked by @SirParselot, the elements have to come from different lists
You want the Cartesian product of each pair of lists in , so first you need  to generate the pairs of lists, and then  to create the desired output tuples.outputHere's a new version that handles repeated elements. It does not return a tuple if the two items in the tuple equal each other, and it also eliminates duplicated tuples in the output by feeding the output from  into a set. This is reasonably efficient since  is a generator, so duplicates are eliminated as they are found.output
I guess what you should do is use your working solution for two lists to do it with  lists. Basically, you could transform your input into a list of lists, and do:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
https://docs.python.org/3/library/itertools.html#itertools.product
