Natural Text
I am trying to use "requests" package and retrieve info from Github, like the Requests doc page explains:And this:I have to say I don't understand the second code block. filename - in what form do I provide the path to the file if created? where will it be saved if not?'wb' - what is this variable? (shouldn't second parameter be 'mode'?)following two lines probably iterate over data retrieved with request and write to the filePython docs explanation also not helping much.EDIT: What I am trying to do:use Requests to connect to an API (Github and later Facebook GraphAPI)retrieve data into a variablewrite this into a file (later, as I get more familiar with Python, into my local MySQL database)
FilenameWhen using  the path is relative to your current directory. So if you said  it would create a new file named  in whatever folder your python script is in. You can also specify an absolute path, for example  in linux. If a file by the name  already exists, the contents will be completely overwritten.ModeThe  option is indeed the mode. The  means write and the  means bytes. You use  when you want to write (rather than read) froma file, and you use  for binary files (rather than text files). It is actually a little odd to use  in this case, as the content you are writing is a text file. Specifying  would work just as well here. Read more on the modes in the docs for open.The LoopThis part is using the  method from , which is intended for use with large files that you may not want in memory all at once. This is unnecessary in this case, since the page in question is only 89 KB. See the requests library docs for more info.ConclusionThe example you are looking at is meant to handle the most general case, in which the remote file might be binary and too big to be in memory. However, we can make your code more readable and easy to understand if you are only accessing small webpages containing text:
 is a string of the path you want to save it at. It accepts either local or absolute path, so you can just have  stands for  & , learn more hereThe for loop goes over the entire returned content (in chunks incase it is too large for proper memory handling), and then writes them until there are no more. Useful for large files, but for a single webpage you could just do: 


Answer URL
https://docs.python.org/3/library/functions.html?highlight=open#open
