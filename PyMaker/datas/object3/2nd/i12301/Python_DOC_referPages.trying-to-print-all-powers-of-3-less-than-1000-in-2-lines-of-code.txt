Natural Text
For an assignment in my CS class I have to print all powers of 3 (1, 3, 9, 27, etc.) less than 1000 using no more than 2 lines of code. I know I could just usebecause I know that 3^6 is the last power that gives a result under 1000 but I was wondering if there was a way to conditionally check that 3^x is under 1000 before printing still using only 2 lines of code at most. I may just be overthinking it but I want to make sure for my own information.
Usually in python we prefer however many lines can give the most readable code.  So, it's a strange requirement to limit the lines of code like that.  At a guess, your instructor may have been looking for some mathematical insight on how a bound for iteration could be precomputed:
If you are allowed to use semicolons:
You could have found that 6 is the lowest allowed exponent using logs. Here's a one-line solution:
 is the correct way to express what you're asking, but it depends on a module which necessarily adds a line.Expressed in a more sane 3-liner format...Let's explain what's going on here, starting from the innermost.  Each step builds on the previous. is a generator that produces the numbers  forever.  It's how you express . is a generator that produces the numbers  forever. is a generator that produces the numbers  forever while  is true.After that it's just a matter of printing the generated numbers.The itertools module is a pretty important part of Python, I suggest learning it in general as it solves a lot of problems like this.

Probably, if you can work out how to use a ternary operator.  This answer may help, but my best-guess (I don't work in Python) would be along the lines of...
one liner with a list comprehensionaddressing kevin's comment and trying to stick to two lines of codei don't like the else statement


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.takewhile
