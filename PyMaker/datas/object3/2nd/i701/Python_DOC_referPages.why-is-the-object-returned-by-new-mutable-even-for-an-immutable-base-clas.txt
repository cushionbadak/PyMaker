Natural Text
I defined a new  subclass as follows:When I instantiate a  object, as follows, the  object indeed has an attribute . For example ...... this returns .So for some reason, the line  works, assigning the second argument value to the class attribute . But this doesn't make sense to me, since objects of the base type, , are immutable! Why does this work?
Actually, the object returned by  is a .  That's why you pass along the  when you call .When defining a new class, you'll get a namespace on instances by default (docs, ctrl+f for "custom class types"), unless you opt-out of that by declaring . You can also set new attributes on instances, for the same reason.As a developer, the responsibility lies with you to ensure that classes modeling immutable types are correctly behaving like an immutable type should.


Answer URL
https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy
https://docs.python.org/3/reference/datamodel.html#slots
