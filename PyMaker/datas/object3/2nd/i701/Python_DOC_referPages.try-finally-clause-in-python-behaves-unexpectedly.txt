Natural Text
There may be a lapse in my understanding of how try/except/finally work in Python, but I would expect the following to work as described in comments.I would expect that the file above (foo.py) should print  when run as  and would print  if run as .The  functionality works as expected, however, the  behaviour does not work; if I run , I get an IndexError:As a result, I have two questions:Is this a bug or is it an expected behavior in a try-finally block?Should I just never use try-finally without an  clause?
This is expected behaviour.  alone doesn't catch exceptions. Only the  clause of a  does. only guarantees that the statements under  are always executed, whatever happens in the  section, whether the block succeeds or is exited because of a , ,  or an exception. So  is great for cleaning up resources; you get to run code no matter what happens in the block (but note that the  statement and context managers let you encapsulate cleanup behaviour too). If you want to see examples, then the Python standard library has hundreds.If you need to handle an  exception in a  block, then you must use an  clause. You can still use a  clause as well, it'll be called after the  suite has run.And if you ever get to work with much older Python code, you'll see that in code that must run with Python 2.4 or older  and  are never used together. That's because only as of Python 2.5 have the two forms been unified.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html#the-with-statement
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
