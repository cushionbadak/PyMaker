Natural Text
In many beginner Python tutorials on OOP, methods dependent only on  are often included.For example, a YouTube video includes this example:What would influence the decision to include something like this in a method, rather than as an attribute?For example:
Imagine the following:This results in:which means the full name is not updated when the first or last name is changed.If we instead use a property:We get:As you can see, the full name will now update whenever the first or last name updates and they will not get out of sync.
Having  as a method makes  "property" dynamic. If you change first and/or last name and call  it will return the expected fullname.In the code you posted, not clear what is the logic of composing . If it is strictly "first.last@company.com" then it makes sense to make a method for it as well. From the other side, however, email is normally something user-provided, changing names doesn't necessarily mean email change.Now, why I put "property" in quotes above: Python (and many other languages) has a notion of properties. So fullname is actually a property that is dynamically composed from first and last.


Answer URL
https://docs.python.org/3/howto/descriptor.html#properties
