Natural Text
I have a simple class () that has an ID and 3 coordinates (X,Y,Z). Its ID must be an integer and its coordinates floats, therefore I have used the following class definition.I'm new to OO programming, but it seems "heavy" for such a simple class. Is there any way to compact that and make it less repetitive? For instance if I had 10 coordinates this would be a bit heavy.Anyway it works I'm just wondering if there's a better way to do that.
In Python, if you want to provide read and write access to attributes, you simply make them "public".Like so:Now you can use your class like this:This is perfectly fine, because you can still decide later on to adjust the behavior of the read and write operations (using the @property decorator), without braking the interface of your class.You might also want to look into dataclasses (introducted in Python 3.7):A final note: class attributes are lowercase by convention. Only constants should be written with full uppercase letters.
What you want is a custom descriptor, not  itself.Python 3.6 added support for a  method which is called automatically when the descriptor is instantiated, receiving the name the descriptor is assigned to as an argument.(I'm certain this can be improved.  could take an initial value for each instance of the descriptor, instead of requiring  to initialize each.)


Answer URL
https://docs.python.org/3/library/dataclasses.html
