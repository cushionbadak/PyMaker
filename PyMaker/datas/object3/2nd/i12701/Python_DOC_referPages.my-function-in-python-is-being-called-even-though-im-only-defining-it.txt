Natural Text
I have a function called attack:And I am making a few actual attacks for bosses and the player here:Even though I am only saving these versions as variables, they are still being called:Is this something that python always does, or am I doing something wrong, because I don't want these to be called (sorry if I didn't use the correct terminology, I am kind of new)
You are calling the functions here:You are storing the return value there, not the function.If you wanted to store some predefined arguments, either use another function to wrap the call, use a lambda (which is basically a simplified form of creating a function), or use  to predefine some arguments and store a new callable for those.Using a lambda would look like this:This assumes that you still want to specify the player and the boss later on when calling these functions. You'd call , for example.Using  is not as suitable here, because you are swapping the  and  arguments around; you'd just define a  variable and pass in the  and the  arguments in the right order:Calling either  or  would add on any extra arguments, so  calls the function with those two arguments added on to the ones you already defined.All of this makes the assumption you want to be able to manage multiple players and bosses. If your  and  variables are globals (perhaps there is only ever one player and one boss to fight), then you'd just pass those in when defining the  or the  and you don't pass in extra arguments. For example:and to have the player kick the boss, you'd just call .The difference between a  object and a  is that you can introspect the  object; you can easily see what arguments  you defined to be always pass in:A  object can not be used as a method on a class, a function object can. Use a  object if you need to use this feature on a class.
This is what  is for.Return a new partial object which when called will behave like func called with the positional arguments args and keyword arguments keywords. If more arguments are supplied to the call, they are appended to args. If additional keyword arguments are supplied, they extend and override keywords.https://docs.python.org/2/library/functools.html#functools.partialSample usage:
Wrapp your funtion into a lambda:or use partial:
Classes would seem a better fit, and provide more flexibility in the future


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
https://docs.python.org/3/library/functools.html#functools.partialmethod
https://docs.python.org/3/library/functools.html#functools.partial
