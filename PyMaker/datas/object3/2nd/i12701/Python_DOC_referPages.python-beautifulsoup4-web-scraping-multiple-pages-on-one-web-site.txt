Natural Text
I need a specific answer on how to actually iterate and parse through multiple pages on a website , where the URL is known but just to an extent.I have looked through many tutorials but none tells me actually how to get to the next page - maybe I need to use a regular expression.I would like to know if anyone can just give me some advice or start on where to look for this:As such I will give you an example - let us use the Python Website for instance - we know them all very well: https://docs.python.org/3/tutorial/On this page you will see that there is the "next" button that continues the page to : https://docs.python.org/3/tutorial/appetite.htmlFrom there on if you click the "next" button only the last /*.html changes.What I would like to have advice on is how to actually go through all the last /*.html iterations and catch those html pages.
Since the  values are all relative to the current URL, you cannot simply check if  attribute starts with . Note that these links have the  and  classes, let's use that:Here is an example working code that extracts the  values for the page:Note that we have to use  to get the absolute URLs so that we can follow them.
alecxe's answer is good and was essentially going to be the second half to this answer, but it duplicates pages. For example, the urls  and  are actually the same page, the second is just an anchor on the page.If you want to do this like you initially stated - find the value of the "next" link's href and then navigate there - you can do something like this:Use regex to find the s with "next" in them, and then use their parents to get the actual href. Use  to join together the base_url and the href together to get the absolute url of the next page.
Here's my version of the function that recursively searches for pages of Python tutorial. It's shorter and I think even more clear.The program can be broken down into following parts:Obtaining html code of the page with urllib (it's worth learning urllib, if you're working with BeautifulSoup!)Parsing the page with BSFinding a link that encloses the word 'next'  (see more details in BS's docs)Doing something with the page if you need (I'm just printing a name of the link)Doing all previous steps, but for the next page until no next pages leftThe code tested in Python 3. Happy hacking and learning!
You need to follow them one by one. Or you can grab the links from an index. For example the page: https://docs.python.org/3/tutorial/ contains all the links you will go through if you follow the  button. So you can grab them all from this one place. You have to decide how you can do this best. That usually needs analyzing the link structures and giving it some thoughts. 


Answer URL
https://docs.python.org/3/tutorial/
https://docs.python.org/3/tutorial/appetite.html
https://docs.python.org/3/library/urllib.request.html
https://docs.python.org/3/tutorial/
