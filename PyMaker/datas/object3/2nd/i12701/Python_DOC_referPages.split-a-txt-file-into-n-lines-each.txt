Natural Text
I would like to split a very large .txt file in to equal parts files each part containing N lines. and save it to a folder But this creates a files with data in the  files.I would like to preserve the same structure and style maintained in the original  file.And this code does not terminate automatically when it reaches end of file as well. If possible I would the code to stop writing to files and quit if there is no data left to write.
You can use  with , taking n lines at a time using enumerate to give your files unique names.    will write each list of lines to a new file:Your code loops forever as you don't include any break condition, using  with an empty list will mean the loop ends when the iterator has been exhausted. Also if you wanted to pass an islice object to be written you would just call  on it  i.e , .  
The problem is tat  returns an iterator and you are writing it's  in your file which is the representation of functions in python (showing the identity of object):As a more pythinic way for slicing an iterator to equal parts, you can use following  function, which has been suggested by python wiki as :You can pass your file object as an iterator to function and then loop over the result and writ them to your file:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
