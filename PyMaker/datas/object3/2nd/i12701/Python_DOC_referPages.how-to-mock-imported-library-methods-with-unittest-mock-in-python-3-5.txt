Natural Text
Is it possible to mock methods of imported modules with unittest.mock in Python 3.5? I expected that the the os.listdir method returns the specified side_effect "a" on the first call, but inside of my_function the unpatched os.listdir is called.
 have two main duties:Define  objects: object designed to follow your screenplay and record every access to your mocked objectpatching references and recover the original stateIn your example you need both functionalities: Patching  reference used in production code by a mock where you can have a complete control off it will respond. There are a lot of ways to use , some details to take care on how use it and cavelets to know.In your case you need to test  behaviour and you need to patch both  and . Moreover what you need is control the  (take a look to the pointed documentation for  and  differences).I rewrote your example a little bit to make it more complete and clear:I used the decorator syntax because I consider it the cleaner way to do it; moreover to avoid introduction of too much details I didn't use autospecingthat I consider a very best practice.Last note: mocking is a powerful tool but use it and not abuse of it, patch just you need to patch and nothing more.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
https://docs.python.org/3/library/unittest.mock.html#the-patchers
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
https://docs.python.org/3/library/unittest.mock.html#autospeccing
https://docs.python.org/3/library/unittest.mock.html#the-patchers
