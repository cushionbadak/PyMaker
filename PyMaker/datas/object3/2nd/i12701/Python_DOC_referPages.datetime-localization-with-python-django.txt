Natural Text
I am trying to parse an RSS feed. Entries in the feed have date elements like:Using feedparser, I try to do:But the problem is that I seem to be getting the wrong time stored in the database. In this particular case, the datetime is stored as:... when I would expect 14:00 - the correct UTC time.I assume the problem is in our django settings, where we have:Because when I switch to:... the datatime is stored as correct UTC time:Is there any way to keep the django settings as they are, but to parse and store this datetime correctly, without the django timezone setting affecting it?EDIT:Maybe it's more clear like this...
feedparser's  is always a utc time tuple whatever the input time string is. To get timezone-aware  object:where  is a tzinfo object such as , , or just your custom tzinfo (for older python versions).You shouldn't pass utc time to  that expects a local time. Same error: Have a correct datetime with correct timezone.Make sure  so that django uses aware datetime objects everywhere. Given a timezone-aware datetime object, django should save it to db correctly whatever your  or  are. 
Have you tried using  instead of ?As a secondary solution, you can get the unparsed data (I believe it's available as ?) and just use python-dateutil to parse the string, then convert it to  timezone like this.
UseFeedparser can parse a large range of date formats, you can find them here.As you can see in , the built-in function from Feedparser  does the following:Parses a variety of date formats into a 9-tuple in GMTThis means that in  you have a  object in GMT timezone.When you convert it to a  object usingthe problem is that  assumes that the passed tuple is in local time, which is not, it's GMT/UTC! Other than that you don't properly localize the  object at the end of the conversion.You need to replace that conversion with the following, remembering that Feedparser returns a GMT , and localize that with the timezone you like (UTC for the sake of simplicity).You use , which gives the number of seconds between epoch and the date passed as a parameter, assuming that the passed object is in UTC/GMT (we know from Feedparser it is)You use  to obtain a naive  object (which we know represents a datetime in UTC, but Python does not at this moment)With  you properly localize in UTC the  object.Example:As long as you are consistent, it doesn't matter if you use  or . If you use  you need to tell Python that the  object you created has the local timezone. Supposing you are in Europe/Berlin, this is also fine:Were  also in local timezone,  must be used in place of .As an alternative you can parse yourself the data string you get from Feedparser You can check that the following returns :The Django  setting doesn't actually matter, because it's used only for visualization purposes or to automatically convert naive datetimes.When USE_TZ is True, this is the default time zone that Django will use to display datetimes in templates and to interpret datetimes entered in forms.What is important is to always use properly localized datetimes, no matter which time zone is used. As long as they are not in naive format, they will be properly handled by Django.


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.timezone.utc
