Natural Text
I'm writing a python program which passes arguments to a shell script.Here's my python code:And my "copyImage.sh":I can run the script on terminal without problems. But when executing the python code, the terminal returned .If I change the syntax to Then the terminal returned .I've followed this: Python: executing shell script with arguments(variable), but argument is not read in shell script but it didn't help.
The  module is expecting a list of arguments, not a space-separated string.  The way you tried caused python to look for a program called  and call it with no arguments, whereas you wanted to look for a program called  and call it with one argument.    I also want to mention, since your script simply calls copy in a shell, you should probably cut out the middleman and just use python's  directly.  It's a more appropriate tool than running a subprocess for this task.  
The safe and robust way is:Your first attempt failed because string literals need quotes in Python. The second one failed because Popen doesn't run a shell by default (the question you link sets  to do this, but it's fragile and bad).
Using os.system call is the way to go as:os.system does find your shell script in the environmentyou can append as many arguments as you need to the destination shell scriptExample:
While you got 2 answers that show how to use  with an iterable for the arguments and I would recommend going one of those ways, for completeness you can use a string containing the full command if you specify , but then you're responsible for all the quoting and everything like that for arguments.Note that in addition to adding  I pass the argument through  to let it handle escaping any special characters to make it a bit safer if the filename came from a user input, otherwise it could include a  and another command to run, for example.  Input like  would otherwise cause bad things to happen when executed.If you don't specify  the subrpocess module will actually be looking for an executable named  with the space and both words as the name of the executable to run.Two further notes, for python 2 instead of  use .  Also, the shell script above does not quote its arguments, so will not work with names with spaces or other special characters.  It should be modified to quote its variables (which is always a good idea):With a slightly different script:we can see this work as follows:which produces the following output on 


Answer URL
https://docs.python.org/3/library/shlex.html#shlex.quote
