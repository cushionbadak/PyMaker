Natural Text
The following code I wrote in JavaScript, but I'm trying to convert it into something Python can understand, specifically the for loop. I tried reading up on how the for loop syntax in Python reads, but I just can't seem to wrap my head around it, since it's very different to its equivalent in many popular web dev languages. Can someone explain to how it's written and how it work, preferably in simple terms. Thank you!! Edit: Thinking about it closely the For Loop is evidently useless. I got a bit confused since the user input is going to be compared to a list of values, but considering that the user will always enter one value to be compared, there's no need to loop. Thanks to everyone who commented and sorry for my brain freeze! 
Sigh. For the sake of completeness, and because other posters seem committed to answering this question incorrectly, the way to write a for loop that iterates over all the characters in  is to simply do:That's all. You should not ever use : that's horribly un-Pythonic. If you do for whatever reason need an index, then use :Anyway, as is mentioned everywhere else, there is no need for a loop of any kind in this code.
The  loop in  is structured in the following way:here is an example of printing out numbers:And will outputAbbreviated to save typing.For ings ( is the type ascribed to regular strings) this can be done via a :And will outputNow to discuss a few of the comparable commands to the javascript commands you used.  To handle user input python has a few options.  The best for simple string input is , and is used in the following way:This will print out , the user can then enter any text they like and hit the enter key and it will be stored in  now for your use.If you want to replace a character in a string, python's  type has a method called , which works in the following way:will outputthe method  will return the string with all character strings matching the first argument replaced with the second argument in the same way the javascript function works.  The method only returns the new string though, it does not automatically change the value of the variable, so if you desire to keep it save it into a variable (saving it into itself is a valid option as seen in my example).To make a string lowercase you can use 's the built in command .  In a similar way to replace, the updated string is returned and not saved into the variable and should be stored somewhere again if further use is required.and will outputPutting this all together we can convert your javascript loop into python in the following way:This is a direct translation of your code.  In python you can iterate directly over characters in a string and that is usually preferred:will outputIt might be helpful to know that in your case you do not actually need the for loop in either the javascript or the python case:AndThis is because both the javascript and python methods apply to the whole string already and you do not need to make changes character by character.  Indeed you do not use the index reference to which you are looping over anyway!  You just end up making the same change to the string as many times as the string is long.Hopefully this gives you a better picture of  loops and a brief look at python!  Happy python-ing!
In javascript your code could simply be:the equivalent in python is:
There is a type of objects in python called iterators. For such objects you can tell python interpreter to yield you it's elements one by one. And for iterator objects you can call "for" loop.this code means that you get the list called "sequence" and ell the interpreter "give me the first element of list and and assign it's value to the variable i, add 10 to i and print it (this code will print "11"), then give me the second element, assign it's value to i, add 10 and print(phis will print "12") and iterate it untill the end of the list"So the output of this programm will be 
As others have mentioned, this is pointless as you can just as well remove the for loop. To convert your code directly:However you can get the exact same result in both JavaScript and Python like this as the loop does nothing:I assume this question is to help you understand for loops in Python in future it would be best to use an example that does something, the main difference in the languages that might need some understanding here is the range() function which replaces what's in bold here:var i = 0; i < name.length; i++So I would recommend looking into the function to understand whats happening https://docs.python.org/2/library/functions.html#rangeEDIT:As a caveat in Python we generally do not use range to iterate. If I were to loop over a string like this a much easier and cleaner way would be:


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=str#str
https://docs.python.org/3/library/stdtypes.html?highlight=str#str
https://docs.python.org/3/library/stdtypes.html?highlight=str#sequence-types-list-tuple-range
