Natural Text
I am trying to get a sorted dictionary. But the order of the items between  and  doesn't seem to change.
An  preserves the order elements were inserted:So an  does not order the elements for you, it preserves  the order you give it.If you want to "sort" a dictionary, you probably want
Ordered dictionaries are just like regular dictionaries but they remember the order that items were inserted. When iterating over an ordered dictionary, the items are returned in the order their keys were first added.So it only sorts by order of adding into the dictYou can build an OrderedDict order by key as follow,or simply as @ShadowRanger mentioned in commentIf you want to order by value,More information in 8.3.5.1. OrderedDict Examples and Recipes
Adding on to the answer by Brian,  is really great. Here's why:You can use it as simple  object because it supports equality testing with other  objects like collections.counter. preserves the insertion order as explained by Brian. In addition to that it has a method popitem which returns (key,value) pairs in LIFO order. So, you can also use it as a mapped 'stack'.You not only get the full features of a  but also, some cool tricks.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/library/collections.html#collections.OrderedDict.popitem
