Natural Text
I want to debug a warning that occurs well into the code's execution.A simple breakpoint won't do, because the line that results in the warning executes millions of times without warning before the first warning occurs.Also, the line where this is happening is in library code (more precisely, in ), so my preference is not to modify the code at all.I just want to stop the program's execution right when it emits the warning, and inspect the stack at this point, either with  or with .Is there a way to configure either debugger to automatically enter single-step mode upon the issuing of a warning?
You can write a script :You can then use it to debug your script like that. Pass in your script name as the first argument if you want to run pdb on any warning:Pass in warning type as the second argument if you only want pdb to run when some particular type of warning is raised:Line number as the third argument:You can also rewrite the code using  instead of  to make warnings filtering even more flexible.
Instead of treating the warning as error,  link can be used to access warning list and switch execution into PDB session if the scope of code which throws warning can be identified.However I recommand to start your program with PDB, set a breakpoint to break the execution when detecting warning number change of warning list after the problematic code snippet. You will be benefited if your debugging code snippet is in a loop. example:run script with  and set a breakpoint in line , then execution can be suspended when detecting warning number change.
https://pypi.python.org/pypi/rpdb/i found  very handy to debug such problem, when you have no control of starting the program. what you need is temporarily modify  to add when the warning is triggered, the debugger will be there waiting for connection. you then connect to the debugger and inspect the stack.


Answer URL
https://docs.python.org/3/library/warnings.html#available-context-managers
