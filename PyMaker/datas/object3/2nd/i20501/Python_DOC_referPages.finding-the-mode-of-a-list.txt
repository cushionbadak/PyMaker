Natural Text
Given a list of items, recall that the mode of the list is the item that occurs most often.I would like to know how to create a function that can find the mode of a list but that displays a message if the list does not have a mode (e.g., all the items in the list only appear once). I want to make this function without importing any functions. I'm trying to make my own function from scratch.
You can use the  function and a key. Have a look at python max function using 'key' and lambda expression.
You can use the  supplied in the  package which has a -esque functionNote: Counter is new in python 2.7 and is not available in earlier versions.
Python 3.4 includes the method , so it is straightforward:You can have any type of elements in the list, not just numeric:
Taking a leaf from some statistics software, namely SciPy and MATLAB, these just return the smallest most common value, so if two values occur equally often, the smallest of these are returned. Hopefully an example will help:Is there any reason why you can 't follow this convention?
There are many simple ways to find the mode of a list in Python such as:Or, you could find the max by its countThe problem with those two methods are that they don't work with multiple modes. The first returns an error, while the second returns the first mode. In order to find the modes of a set, you could use this function:
Extending the Community answer that will not work when the list is empty, here is working code for mode:
In case you are interested in either the smallest, largest or all modes:
I wrote up this handy function to find the mode.  
Short, but somehow ugly:Using a dictionary, slightly less ugly:
A little longer, but can have multiple modes and can get string with most counts or mix of datatypes. 
Why not justThis doesn't have a few error checks that it should have, but it will find the mode without importing any functions and will print a message if all values appear only once.  It will also detect multiple items sharing the same maximum count, although it wasn't clear if you wanted that.  
This function returns the mode or modes of a function no matter how many, as well as the frequency of the mode or modes in the dataset. If there is no mode (ie. all items occur only once), the function returns an error string. This is similar to A_nagpal's function above but is, in my humble opinion, more complete, and I think it's easier to understand for any Python novices (such as yours truly) reading this question to understand.
For a number to be a , it must occur more number of times than at least one other number in the list, and it must not be the only number in the list. So, I refactored @mathwizurd's answer (to use the  method) as follows: These tests pass successfully: 


Here is a simple function that gets the first mode that occurs in a list. It makes a dictionary with the list elements as keys and number of occurrences and then reads the dict values to get the mode.
This will return all modes:
If you want a clear approach, useful for classroom and only using lists and dictionaries by comprehension, you can do:



Answer URL
https://docs.python.org/3/tutorial/errors.html
