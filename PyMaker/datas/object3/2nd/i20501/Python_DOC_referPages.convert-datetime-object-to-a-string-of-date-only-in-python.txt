Natural Text
I see a lot on converting a date string to an  object in Python, but I want to go the other way.I've got and I would like to convert it to string like .
You can use strftime to help you format your date.E.g.,will yield:More information about formatting see here
 and  objects (and  as well) support a mini-language to specify output, and there are two ways to access it:direct method call: ; andnew format method: So your example could look like:orFor completeness' sake: you can also directly access the attributes of the object, but then you only get the numbers:The time taken to learn the mini-language is worth it.For reference, here are the codes used in the mini-language:  Weekday as locale’s abbreviated name.     Weekday as locale’s full name.    Weekday as a decimal number, where 0 is Sunday and 6 is Saturday.  Day of the month as a zero-padded decimal number.  Month as locale’s abbreviated name.  Month as locale’s full name.  Month as a zero-padded decimal number.  01, ..., 12        Year without century as a zero-padded decimal number.   00, ..., 99        Year with century as a decimal number.  1970, 1988, 2001, 2013     Hour (24-hour clock) as a zero-padded decimal number.   00, ..., 23        Hour (12-hour clock) as a zero-padded decimal number.   01, ..., 12        Locale’s equivalent of either AM or PM.  Minute as a zero-padded decimal number.     00, ..., 59        Second as a zero-padded decimal number.     00, ..., 59  Microsecond as a decimal number, zero-padded on the left.   000000, ..., 999999  UTC offset in the form +HHMM or -HHMM  (empty if naive), +0000, -0400, +1030  Time zone name      (empty if naive), UTC, EST, CST        Day of the year as a zero-padded decimal number.    001, ..., 366      Week number of the year (Sunday is the first) as a zero padded decimal number.  Week number of the year (Monday is first) as a decimal number.  Locale’s appropriate date and time representation.    Locale’s appropriate date representation.     Locale’s appropriate time representation.     A literal '%' character.
Another option:
You could use simple string formatting methods:
 can be used as well:Output:
It is possible to convert a datetime object into a string by working directly with the components of the datetime object.Output --> 5/23/2017
You can convert datetime to string.
String concatenation, , can be used to build the string.


Answer URL
https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
