Natural Text
Consider a simple function likewhich is run through Cython and compiled into an extension module.  Suppose now I'd like to make this function a method on a class.  For example:Now this will not work, as the calling convention at the C level will be broken. For example:But in Python 2, we can convert the function to an unbound method by doing:How can I accomplish this same thing in Python 3?One simple way is to use a slim wrapper:Is there a more efficient way to do it?
First thing is getting the names correctly:So proper names are functions and bound methods. Now you can look for how to Bind an Unbound Method and you will probably end up reading about descriptors:In general, a descriptor is an object attribute with "binding  behavior", one whose attribute access has been overridden by methods  in the descriptor protocol. Those methods are , , and  . If any of those methods are defined for an object, it is said to be a descriptor.You can easily transform function to method by just using different invocation of And it works like a charm:You can easily add these newly bounded methods to objects:Or create your own descriptor that will will convert function to bound method:And you also can see that this is nicely consistent with function/bound method principles:Class dictionaries store methods as functions. In a class definition, methods are written using def and lambda, the usual tools for creating functions. The only difference from regular functions is that the first argument is reserved for the object instance. By Python convention, the instance reference is called self but may be called this or any other variable name.To support method calls, functions include the  method for binding methods during attribute access. This means that all functions are non-data descriptors which return bound or unbound methods depending whether they are invoked from an object or a class.And functions becomes bound method during instance initialization:
Import the extension like this:In your class you write:This seems more readable and might be more efficient.


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/howto/descriptor.html#functions-and-methods
https://docs.python.org/3/library/functools.html#functools.partialmethod
