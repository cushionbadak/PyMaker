Natural Text
I am wondering if there is a way to determine (given a variable containing a lambda) the number of parameters the lambda it contains.  The reason being, I wish to call a function conditionally dependent on the number of parameters.What I'm looking forSo I can do something like
I'm skipping the part about how to count the arguments, because I don't know how you want to consider varargs and keywords.  But this should get you started.It sounds like inspect.getargspec is deprecated as of Python 3 (thanks to @JeffHeaton).  The recommend solution uses inspect.signature. The  member of the result contains a variety of structures depending on the arrangement of parameters to the function in question, but I'm matching my function from the Python 2 example above.
Lambdas are functions like any other.  The argument count is stored in .
From the documentation on callable types, the  attribute of functions contains a code object, and from the inspect module documentation on code objects there is a  member that contains the number of arguments (not including  or  args).So the best way to get this information from a lambda function (or any function) is to use :


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.getargspec
https://docs.python.org/3/library/inspect.html#inspect.signature
