Natural Text
I was wondering how to convert a decimal into a fraction in its lowest form in Python.For example:
You have two options:Use :(as of Python 3.6, you can do the same with a  object.)Use the  type:The latter has a very helpful  conversion:Because floating point values can be imprecise, you can end up with 'weird' fractions; limit the denominator to 'simplify' the fraction somewhat, with :If you are using Python 2.6 still, then  doesn't yet support passing in a  directly, but you can combine the two techniques above into:Or you can just use the  class method:which essentially does the same thing, e.g. take the integer ratio tuple and pass that in as two separate arguments.And a small demo with your sample values:Both the  module and the  method are new in Python 2.6.

To expand upon Martijn Pieters excellent answer with an additional option due to the imprecision inherent with more complex floats. For example:The mathematical result desired was  which can be achieved by casting to a string and then manipulating it. Edited ResponseI found a much simpler way to resolve the accuracy issue.Casting as to a string also allows for accurate Decimal instancesOriginal ResponseNow let's test it:I will note that this kind of fraction precision is not optimized and will usually not be needed, but for completeness it is here. This function doesn't simplify the fraction, but you can do additional processing to reduce it: 
If you'd like to print a proper fraction, this little recipe should do:This will print as follows:


Answer URL
https://docs.python.org/3/library/decimal.html#decimal.Decimal.as_integer_ratio
