Natural Text
I'm often faced with the situation that depending on some command line argument, input might either come from a file or standard input. The same goes for output. I really like how context managers in python 3 work, and therefore try to make all my  calls part of some  statement. But in this case, I'm having trouble.is already clumsy, and with both input and output I'd have to cater for four combinations. I would like something easier, e.g.Is there something like this DummyManager in the python standard libraries? Something which implements the context manager protocol, but only to return a fixed value from its  method? I guess the most likely location for such a class would be contextlib, and since I didn't find anything like this there, perhaps there is no such thing. Are there other elegant solutions you can suggest?
In your case, you could use  module:If  then it uses . If  parameter then it redirects  to the input file. You could pass several filenames. If there are no filenames it uses filenames given at the command-line or stdin.Or you could leave the file as is:It should be fine for most programs where stdout may be used to write the result.To avoid closing , you could use  to enable the context managers conditionally:
It's trivial to create one with the  decorator:That's it; this creates a context manager that does nothing but hand you  back, and the  handler does exactly nothing.I'd use it like this:
You don't need a dummy manager in your case.  , being file-like, can be used as a context manager.One thing to note is that when ing the block, sys.stdin gets d (while you ordinarily don't need/want to close it yourself), but that shouldn't be a problem. 
Various  wrappers and replacements now exist which support this nicely.  I like :This will handle  if  is  and otherwise fall back to the regular  with a  hidden in the context manager's  part.


Answer URL
https://docs.python.org/3/library/contextlib.html
https://docs.python.org/3/library/fileinput.html
https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
