Natural Text
In MongoDb the automatically assigned id (ObjectId) for new documents is unique and contains within itself the timestamp of its creation. Without using any library (other than built-in libs of Python), how can I create this type of concise unique ids that also somehow holds its timestamp of creation?
If you have a multithreaded or multi-machine scenario, all bets are off and you should not rely on any "extra level of unique assurance" if using timestamp only. Read more from this excellent answer from deceze. Similar to above answers, another option is to concatenate timestamp and uuid: contains 56 characters which may or may not be an issue for you. However, it holds timestamp of creation and is sortable all of which could be advantageous in a database allowing you to query s between two timestamps, say.
Using an epoch timestamp with a sufficient amount of precision might just be enough for you. Combine this with a simple user id and you'll have yourself a unique ID with a timestamp embedded into it:    will now have a value similar to . You can take this value and split it by the  character - now you have the original epoch of creation time (1526466157).
You can use datetime to create current timestamp:Now you can concatenate that with anything you want.If you want to add microseconds to make sure it is unique just add  to the end:
You can use a UUID, built in to the standard library. Specifically you can use a  just for a little extra security because it doesn't encode the computer's network address.


Answer URL
https://docs.python.org/3/library/datetime.html
