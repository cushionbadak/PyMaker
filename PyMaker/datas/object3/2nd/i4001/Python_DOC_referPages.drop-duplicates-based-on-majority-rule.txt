Natural Text
I have a table that looks like this:Using  as the key, I'd like to remove duplicates such that that dataframe becomes: is duplicated three times, the value  occurs the most so it is recorded. there is no majority for  so it is considered ambiguous and removed completely.  remains as it has no duplicate. 
 + This is a two step solution using : + custom funcAlternatively, define a custom function that computes the mode and call it with . The filtration logic is subsumed into the function.
How about using  and :Output:Using rank with method='average' as a voter to get "majority" from the results of value_count.
You can use , which raises  if no unique mode exists.Performance benchmarkingAlthough all 3 methods are suitable for your task, they have slightly difference performance.Benchmarking results:Benchmarking code:


Answer URL
https://docs.python.org/3/library/statistics.html?highlight=statistics#statistics.mode
