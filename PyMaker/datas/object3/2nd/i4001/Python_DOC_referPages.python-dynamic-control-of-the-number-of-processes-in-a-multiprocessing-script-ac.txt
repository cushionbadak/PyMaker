Natural Text
I've got an unusual question for python. I'm using the  library to map a function . I would like to control dynamically the number of active processes because the function is actually pumping sometimes a LOT of RAM. The idea would be to check at every iteration (i.e. before any call of the function ) if the  is inferior to a threshold and if the amount of RAM is above a threshold. If the conditions are matched, then a new process can start and compute the function.An additional condition would be the maximum number of processes: the number of cores on the PC.Thanks for the help :)Edit: Details on the reasons.Some of the combinations of parameters will have a high RAM consumption (up to 80 Gb on 1 process). I know more or less which ones will use a lot of RAM, and when the program encounters them, I would like to wait for the other process to end, start in single process this high RAM consumption combination, and then resume the computation with more processes on the rest of the combination to map.Edit on my try based on the answer below:It doesn't work, but it doesn't raise an error. It just completes the program.This is still a simplified example of my code, but the idea is here. It runs in less than 0.2 s, which means he actually never called the function .N.B:  is not the actual variable name.
To achieve so you need to give up on the use of  to gain more control on the execution flow of your tasks.This code implements the algorithm you described at the end of your question. I'd recommend using  library as it expose a more neat set of APIs.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future
