Natural Text
This question already has an answer here:Using Python logging in multiple modules                    8 answers                I'm trying to use Python's  module, and have questions on the best way to use it. I define several classes, want to write logs and be able to set the level of all of them at the same time. I tried :to use the same logger everywhere. But my classes are used by a framework, I don't have a single entrypoint where I could define a main logger. If so, how should I create it and add handlers ?to use one logger per file. Should I create it as a class attribute, and adding handlers only the first time the class is instantiated ? Or put it with the imports before the class definition ? This tutorial told me not to, but I don't really get why.Thanks for any hints. I've found lots of docs on the basic way to use a logger, but not much on how to use it in classes.EDIT: I don't think it's a duplicate of the link below. The accepted answer explains how to load the config in a main program, and then use it in all the modules. But what if I don't have a main program ? Where do I define it ?
If you create logger objects in separate files, but with the same name. They will share all the attributes. In fact, they are the same logger. The  module also allow the creation of logger objects in a hierarchical order. For example, a logger with name spam.mod2 is a sub logger of spam in which it takes on all of spam's attributes, but can also be customized. To put it into concrete example. I am going to create a simple project which has 2 modules:  and . A common module  is used to create a single logger. Finally, I have a  module, which drives the whole system.The  module will create a new logger object and name it spam. The code can be simple as listed, or as complex as you want.Next,  being lazy, just reuse that logger object: creates its own logger object, but still need to import  so that the spam logger is created.  creates a sub logger by naming it spam.mod2:Finally,  will put all of them together:Output:


Answer URL
https://docs.python.org/3/howto/logging.html#configuring-logging-for-a-library
