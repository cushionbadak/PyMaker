Natural Text
Im trying to filter the following list:To get every second number in the list within list, resulting in the following:I tried the following which does not work:The following also doesn't work:In the last line of code i have shown, if I change map to max, it does find the largest value of all the second floats in the lists. So i assume that i am close to a solution?
You can use a list comprehension.or:You can also use  with . To print it, iterate over the iterable object returned by . You can use  for instance.
You are not closer to a solution trying to pass a  to .  only takes a function and an iterable (or multiple iterables). Key functions are for ordering-related functions (, , etc.)But you were actually pretty close to a solution in the start:The first problem is that you want the second item (item 1), but you're passing 0 instead of 1 to . That obviously won't work.The second problem is that  is a  object—a lazily iterable. It does in fact have the information you want:… but not as a list. If you want a list, you have to call  on it:Finally, you wanted a list of single-element lists, not a list of elements. In other words, you want the equivalent of  or , not just . You can do that with , but it's a pretty ugly, because you can't use slice syntax like  directly, you have to manually construct the slice object:You could write this a lot more nicely by using a  function:But at this point, it's worth taking a step back:  does the same thing as a generator expression, but  takes a function, while a genexpr takes an expression. We already know exactly what expression we want here; the hard part was turning it into a function:Plus, you don't need that extra step to turn it into a list with a genexpr; just swap the parentheses with brackets and you've got a list comprehension:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/operator.html#operator.itemgetter
https://docs.python.org/3/library/stdtypes.html#typeiter
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functions.html#func-list
https://docs.python.org/3/library/functions.html#map
