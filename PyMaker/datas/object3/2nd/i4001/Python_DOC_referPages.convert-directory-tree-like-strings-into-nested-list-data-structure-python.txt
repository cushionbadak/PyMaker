Natural Text
I have a list of 'directory-tree-like' strings. I want to convert it into a nested list (or another kind of data structure), to emphasize the dependencies.for example, the input:hierarchy_listneed to be converted to:where the '->' symbolize 'contains' (in a form of array attribute or equivalent). dir1 contains list of dir1.1 , 1.2 , 1.3dir1.1 contains list of dir1.1.1 , dir1.1.2and so on...Does someone have an idea how to do it in Python (algorithm and implementation)?
With a bit of recursion and a  that can be done like:Code:Test Code:Results:
For each path, you can just  it on the '/', then loop through them adding to an existing key or creating the key as needed and then assigning that to the current parent to be considered next. For example:The result  will look like:


Answer URL
https://docs.python.org/3/library/stdtypes.html#mapping-types-dict
