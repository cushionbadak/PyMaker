Natural Text
While I learn Keras, I always see a syntax like . I looked at the source code and found  is a class, so it does make no sense to me how the syntax like  works.Here is an example and use case of it: 
In Keras, it's a bit more convoluted than vanilla Python. Let's break down what happens when you call : creates a new object of that class by calling the class  method. This creates the object with 'relu' as parameter.All objects in Python can be callable by implementing  allowing you to call it like a function.  now calls that function with  as parameter.But wait,  doesn't directly implement it, in fact it is the base class  gets called which does some checks like shape matching etc.Then  actually calls  which then invokes the  method which applies the activation to the tensor and returns the result.Hope that clarifies that line of code, a similar process happens when creating other layers and calling them with the functional API.
In python, classes may have the  method, meaning that class instances are callable. So, it's totally ok to call . The first step creates an instance of , and the second calls that instance with some parameters.It's exactly the same as doing:With this, you can also reuse the same layers with different input tensors:This doesn't make a big difference with a standard activation layer, but it starts getting very interesting with certain trained layers.Example: you want to use a standard trained VGG16 model to process two images and then join the images:
Are you expecting the  keyword? Python does not use that keyword, instead uses "function notation":Class instantiation uses function notation. Just pretend that the class  object is a parameterless function that returns a new instance of the  class. For example (assuming the above class):


Answer URL
https://docs.python.org/3/tutorial/classes.html
