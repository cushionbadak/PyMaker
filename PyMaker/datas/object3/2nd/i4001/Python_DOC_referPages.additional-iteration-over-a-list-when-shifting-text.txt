Natural Text
I've encountered a small problem with a simple shift deciphering.The idea is for every character of my input string to be replaced with a different character from the alphabet that's been shifted by a given key (K).The problem occurs when  < 0 and the replacing key is taken from the back of the list. Then the loop is being iterated twice.If the key is  and I input  instead of getting , I'm getting  as the first iteration gives  but then  is also iterated and becomes .
Your mistake is looping over all the letters in :The  loop tests all the letters of the alphabet, in order, and  is matched. You set  to  ( is  and  is .The loop then continues to test all the other letters of the alphabet against , so eventually it gets to , sees that the letter matches and sets  to .The loop continues to test the remaining letters of the alphabet against , and reaches the end without further matches.At the very least you need to break out of the loop when you have shifted a letter.But rather than loop, you could use the  method (directly on the  string) to find a matching index for the letter; it'll be set to  if the letter is not found at all:Aside from that, there are some other improvements you could make:You can loop over and index into strings directly, there is no need to turn  into a list here. When you do need to to turn a string into a list of individual characters, you should use . So  would suffice. is already a list of strings, there is no need to convert each to a string again.Rather than put all the letters from  into a list, then adding the whole  list to  to , you could just directly append each letter you processed to ; that also removes the need to alter .Python variable names do not need to be limited to single characters. Use more descriptive names so that it is easier to understand what your code does when you return to it later.Taken together, that'd lead to:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.find
