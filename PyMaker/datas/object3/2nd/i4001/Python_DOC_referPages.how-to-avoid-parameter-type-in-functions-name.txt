Natural Text
I have a function  that takes a parameter Stuff can be something in a database and I'd like to create a function that takes a , get the  from the db, execute .Here's my attempt to solve it:1/ Create a second function with suffix 2/ Modify the first functionI don't like both ways.What's the most pythonic way to do it ?
Assuming  is the main component of your application, your first way. Each function should have a different purpose. The moment you combine multiple purposes into a single function, you can easily get lost in long streams of code.If, however, some other function can also provide stuff, then go with the second.The only thing I would add is make sure you add docstrings (PEP-257) to each function to explain in words the role of the function. If necessary, you can also add comments to your code.
I'm not a big fan of type overloading in Python, but this is one of the cases where I might go for it if there's really a need:With type annotations it would look like this:
It basically depends on how you've defined all these functions. If you're importing  from another module the second approach is more Pythonic, because from an OOP perspective you create functions for doing one particular purpose and in this case when you've already defined the  you don't need to call it within another function.If  it's not defined in another module, then it depends on whether you are using classes or not. If you're using a class and you want to use all these modules together you can use a method for either accessing or connecting to the data base and use that method within other methods like .Example:Or if the functionality of  depends on the existence of  you can have a global  and simply check for its validation :Or another neat design pattern for such situations might be using a dispatcher function (or method in class) that delegates the execution to different functions based on the state of .


Answer URL
https://docs.python.org/3/library/typing.html
