Natural Text
I am trying to create a list comprehension, that improves upon one I already have.I have a list of numbers representing the lengths of a month. I want to expand this array into an array with a length of the full year, and every value in that array representing which week that day (index) falls into. Currently I am doing this with two list comprehensions. I wanted to know how I could add something to the new list 7 times without making it an array of length 7. I'm trying to get rid of the added step of flattening my inner list comprehension in weeks_expanded. Thanks for the help. 
You are basically generating a sequence of every 7th number for the  sequence, up to the year-total number of days, so this works too: list is just a sequence of repeated integers, starting at 1, each repeated 7 times, up to and including , so you could just do this:This uses a nested loop in the list comprehension, that just iterates 7 times. You could also use the  iterator to flatten this to a single loop:This uses a tuple of 7  references to add the repetition, the loop then ignores those values.Neither version needs  to exist.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
