Natural Text
This question already has an answer here:What is the right way to override the copy/deepcopy operations on an object in Python?                    7 answers                I have object which has it's own content (i.e. list of something) and a reference to another object, with which it is linked. How can I exclude the reference to the other object from being deep-copied?
Your class can implement a  method to control how it is copied. From the  module documentation:In order for a class to define its own copy implementation, it can define special methods  and . The former is called to implement the shallow copy operation; no additional arguments are passed. The latter is called to implement the deep copy operation; it is passed one argument, the memo dictionary. If the  implementation needs to make a deep copy of a component, it should call the  function with the component as first argument and the memo dictionary as second argument.Simply return a new instance of your class, with the reference you don't want to be deep-copied just taken across as-is. Use the  function to copy other objects:Demo:


Answer URL
https://docs.python.org/3/library/copy.html
