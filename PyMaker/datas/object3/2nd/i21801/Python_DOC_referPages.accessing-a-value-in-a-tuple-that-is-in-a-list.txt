Natural Text
How do I return the 2nd value from each tuple inside this list?Desired output:
With a list comprehension.
Ignacio's answer is what you want. However, as someone also learning Python, let me try to dissect it for you... As mentioned, it is a list comprehension (covered in DiveIntoPython3, for example). Here are a few points:Notice the 's around the line of code. These are what define a list. This tells you that this code returns a list, so it's of the  type. Hence, this technique is called a "list comprehension."L is your original list. So you should define  prior to executing the above code. is a variable that only exists in the comprehension - try to access  outside of the comprehension, or type  after executing the above line and it will tell you , whereas  returns . points to the second item in each of the tuples whereas  would point to each of the first items.So this line of code literally reads "return the second item in a tuple for all tuples in list L."It's tough to tell how much you attempted the problem prior to asking the question, but perhaps you just weren't familiar with comprehensions? I would spend some time reading through Chapter 3 of DiveIntoPython, or any resource on comprehensions. Good luck.
A list comprehension is absolutely the way to do this. Another way that should be faster is  and .In response to the comment that the OP couldn't find an answer on google, I'll point out a super naive way to do it.This uses:Declaring a variable to reference an empty list.A for loop.Calling the  method on a list.If somebody is trying to learn a language and can't put together these basic pieces for themselves, then they need to view it as an exercise and do it themselves even if it takes twenty hours.One needs to learn how to think about what one wants and compare that to the available tools. Every element in my second answer should be covered in a basic tutorial. You cannot learn to program without reading one.
You can also use sequence unpacking with :This also creates a tuple  from the discarded first elements. Extracting only the second is possible, but more verbose:
OR you can use :Or :


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
