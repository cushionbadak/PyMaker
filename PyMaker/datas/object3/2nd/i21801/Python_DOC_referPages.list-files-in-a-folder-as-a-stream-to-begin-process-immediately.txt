Natural Text
I get a folder with 1 million files in it.I would like to begin process immediately, when listing files in this folder, in Python or other script langage.The usual functions (os.listdir in python...) are blocking and my program has to wait the end of the list, which can take a long time.What's the best way to list huge folders ?
If convenient, change your directory structure; but if not, you can use ctypes to call  and .Here is a copy of that code; all I did was indent it properly, add the  block, and fix a bug. You might have to debug it. Particularly the struct layout.Note that this code is not portable. You would need to use different functions on Windows, and I think the structs vary from Unix to Unix.
This feels dirty but should do the trick:Usage: 
For people coming in off Google, PEP 471 added a proper solution to the Python 3.5 standard library and it got backported to Python 2.6+ and 3.2+ as the  module on PIP.Source: https://stackoverflow.com/a/34922054/435253Python 3.5+: has been updated to use this infrastructure for better performance. returns an iterator over  objects.Python 2.6/2.7 and 3.2/3.3/3.4: is a more performant version of  returns an iterator over  objects.The  iterators wrap / on POSIX platforms and / on Windows.The point of returning  objects is to allow metadata to be cached to minimize the number of system calls made. (eg.  never makes a system call on Windows because the  and  functions throw in  information for free)Source: https://docs.python.org/3/library/os.html#os.scandir
Here is your answer on how to traverse a large directory file by file on Windows!I searched like a maniac for a Windows DLL that will allow me to do what is done on Linux, but no luck.So, I concluded that the only way is to create my own DLL that will expose those static functions to me, but then I remembered pywintypes.And, YEEY! this is already done there. And, even more, an iterator function is already implemented! Cool!A Windows DLL with FindFirstFile(), FindNextFile() and FindClose() may be still somewhere there but I didn't find it. So, I used pywintypes.EDIT: They were hiding in plain sight in kernel32.dll. Please see ssokolow's answer, and my comment to it.Sorry for dependency. But I think that you can extract win32file.pyd from ...\site-packages\win32 folder and eventual dependencies and distribute it independent of win32types with your program if you have to.I found this question when searching on how to do this, and some others as well.Here:How to copy first 100 files from a directory of thousands of files using python?I posted a full code with Linux version of listdir() from here (by Jason Orendorff) and with my Windows version that I present here.So anyone wanting a more or less cross-platform version, go there or combine two answers yourself.EDIT: Or better still, use scandir module or os.scandir() (in Python 3.5) and following versions. It better handles errors and some other stuff as well.


Answer URL
https://docs.python.org/3/library/os.html#os.scandir
