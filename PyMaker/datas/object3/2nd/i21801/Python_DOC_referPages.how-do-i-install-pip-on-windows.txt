Natural Text
 is a replacement for . But should I install  using  on Windows?  Is there a better way?
Python 2.7.9+ and 3.4+Good news! Python 3.4 (released March 2014) and Python 2.7.9 (released December 2014) ship with Pip. This is the best feature of any Python release. It makes the community's wealth of libraries accessible to everyone. Newbies are no longer excluded from using community libraries by the prohibitive difficulty of setup. In shipping with a package manager, Python joins Ruby, Node.js, Haskell, Perl, Go—almost every other contemporary language with a majority open-source community. Thank you Python.Of course, that doesn't mean Python packaging is problem solved. The experience remains frustrating. I discuss this in Stack Overflow question Does Python have a package/module management system?.And, alas for everyone using Python 2.7.8 or earlier (a sizable portion of the community). There's no plan to ship Pip to you. Manual instructions follow.Python 2 ≤ 2.7.8 and Python 3 ≤ 3.3Flying in the face of its 'batteries included' motto, Python ships without a package manager. To make matters worse, Pip was—until recently—ironically difficult to install.Official instructionsPer https://pip.pypa.io/en/stable/installing/#do-i-need-to-install-pip:Download , being careful to save it as a  file rather than . Then, run it from the command prompt:You possibly need an administrator command prompt to do this. Follow Start a Command Prompt as an Administrator (Microsoft TechNet).This installs the pip package, which (in Windows) contains ...\Scripts\pip.exe that path must be in PATH environment variable to use pip from the command line (see the second part of 'Alternative Instructions' for adding it to your PATH,Alternative instructionsThe official documentation tells users to install Pip and each of its dependencies from source. That's tedious for the experienced and prohibitively difficult for newbies.For our sake, Christoph Gohlke prepares Windows installers () for popular Python packages. He builds installers for all Python versions, both 32 and 64 bit. You need to:Install setuptoolsInstall pipFor me, this installed Pip at . Find  on your computer, then add its folder (for example, ) to your path (Start / Edit environment variables). Now you should be able to run  from the command line. Try installing a package:There you go (hopefully)! Solutions for common problems are given below:Proxy problemsIf you work in an office, you might be behind an HTTP proxy. If so, set the environment variables  and . Most Python applications (and other free software) respect these. Example syntax:If you're really unlucky, your proxy might be a Microsoft NTLM proxy. Free software can't cope. The only solution is to install a free software friendly proxy that forwards to the nasty proxy. http://cntlm.sourceforge.net/Unable to find vcvarsall.batPython modules can be partly written in C or C++. Pip tries to compile from source. If you don't have a C/C++ compiler installed and configured, you'll see this cryptic error message.Error: Unable to find vcvarsall.batYou can fix that by installing a C++ compiler such as MinGW or Visual C++. Microsoft actually ships one specifically for use with Python. Or try Microsoft Visual C++ Compiler for Python 2.7.Often though it's easier to check Christoph's site for your package.
-- Outdated -- use distribute, not setuptools as described here. ---- Outdated #2 -- use setuptools as distribute is deprecated.As you mentioned pip doesn't include an independent installer, but you can install it with its predecessor easy_install.So:Download the last pip version from here: http://pypi.python.org/pypi/pip#downloadsUncompress itDownload the last easy installer for Windows: (download the .exe at the bottom of http://pypi.python.org/pypi/setuptools ). Install it.copy the uncompressed pip folder content into  folder (don't copy the whole folder into it, just the content), because python command doesn't work outside  folder and then run:  Add your python  to the pathYou are done. Now you can use  to easily install packages as in Linux :)
2014 UPDATE:1) If you have installed Python 3.4 or later, pip is included with Python and should already be working on your system.2) If you are running a version below Python 3.4 or if pip was not installed with Python 3.4 for some reason, then you'd probably use pip's official installation script . The pip installer now grabs setuptools for you, and works regardless of architecture (32-bit or 64-bit).The installation instructions are detailed here and involve:To install or upgrade pip, securely download get-pip.py.Then run the following (which may require administrator access):To upgrade an existing setuptools (or distribute), run I'll leave the two sets of old instructions below for posterity.OLD Answers:For Windows editions of the 64 bit variety - 64-bit Windows + Python used to require a separate installation method due to ez_setup, but I've tested the new distribute method on 64-bit Windows running 32-bit Python and 64-bit Python, and you can now use the same method for all versions of Windows/Python 2.7X:OLD Method 2 using distribute:Download distribute - I threw mine in  (feel free to create a  directory if it doesn't exist.Open up a command prompt (on Windows you should check out conemu2 if you don't use PowerShell) and change () to the directory you've downloaded  to.Run distribute_setup:  (This will not work if your python installation directory is not added to your path - go here for help)Change the current directory to the  directory for your Python installation () or add that directory, as well as the Python base installation directory to your %PATH% environment variable.Install pip using the newly installed setuptools: The last step will not work unless you're either in the directory  is located in (C:\Python27\Scripts would be the default for Python 2.7), or you have that directory added to your path.OLD Method 1 using ez_setup:from the setuptools page --Download ez_setup.py and run it; it will download the appropriate .egg file and install it for you. (Currently, the provided .exe installer does not support 64-bit versions of Python for Windows, due to a distutils installer compatibility issue.After this, you may continue with:Add  to the Windows path (replace the  in  with the actual version number you have installed)Open a new (!) DOS prompt. From there run 
2016+ Update: These answers are outdated or otherwise wordy and difficult.If you've got Python 3.4+ or 2.7.9+, it will be installed by default on Windows.  Otherwise, in short:Download the pip installer: https://bootstrap.pypa.io/get-pip.pyIf paranoid, inspect file to confirm it isn't malicious(must b64 decode).Open a console in the download folder as Admin and run.  Alternatively, right-click its icon in Explorer and choose the "run as Admin...".The new binaries  (and the deprecated ) will be found in the  folder (or similar), which is likely not in your  variable.  I recommend adding it.
Python 3.4, which  was released in March 2014, comes with  included:http://docs.python.org/3.4/whatsnew/3.4.htmlSo since the release of Python 3.4, the up-to-date way to install pip on Windows is to just install Python.When sticking to all defaults during installation, pip will be installed to.
When I have to use Windows, I use ActivePython, which automatically adds everything to your PATH and includes a package manager called PyPM which provides binary package management making it faster and simpler to install packages. and  aren't exactly the same thing, so there are some things you can get through  but not  and vice versa.My recommendation is that you get ActivePython Community Edition and don't worry about the huge hassle of getting everything set up for Python on Windows. Then, you can just use .In case you want to use  you have to check the  option in the ActiveState installer. After installation you only need to logoff and log on again, and  will be available on the commandline, because it is contained in the ActiveState installer  option and the paths have been set by the installer for you already.  will also be available, but you do not have to use it.
The up-to-date way is to use Windows' package manager Chocolatey.Once this is installed, all you have to do is open a command prompt and run the following the three commands below, which will install Python 2.7, easy_install and pip. It will automatically detect whether you're on x64 or x86 Windows.All of the other Python packages on the Chocolatey Gallery can be found here.
Update March 2015Python 2.7.9 and later (on the Python 2 series), and Python 3.4 and later include pip by default, so you may have pip already.If you don't, run this one line command on your prompt (which may require administrator access):It will install pip. If Setuptools is not already installed,  will install it for you too.As mentioned in comments, the above command will download code from the Pip source code repository at GitHub, and dynamically run it at your environment. So be noticed that this is a shortcut of the steps download, inspect and run, all with a single command using Python itself. If you trust Pip, proceed without doubt.Be sure that your Windows environment variable PATH includes Python's folders (for Python 2.7.x default install:  and , for Python 3.3x:  and , and so on).
InstallersI've built Windows installers for both distribute and pip here (the goal being to use  without having to either bootstrap with  or save and run Python scripts):distribute-0.6.27.win32.exepip-1.1.win32.exeOn Windows, simply download and install first , then  from the above links. The  link above does contain stub  installers, and these are currently 32-bit only. I haven't tested the effect on 64-bit Windows.Building on WindowsThe process to redo this for new versions is not difficult, and I've included it here for reference.Building In order to get the stub  files, you need to have a Visual C++ compiler (it is apparently compilable with MinGW as well)Building 
The following works for Python 2.7. Save this script and launch it:  https://raw.github.com/pypa/pip/master/contrib/get-pip.py  Pip is installed, then add the path to your environment : FinallyAlso you need Microsoft Visual C++ 2008 Express to get the good compiler and avoid these kind of messages when installing packages:If you have a 64-bit version of Windows 7, you may read 64-bit Python installation issues on 64-bit Windows 7 to successfully install the Python executable package (issue with registry entries).
To install pip globally on Python 2.x, easy_install appears to be the best solution as Adrián states.However the installation instructions for pip recommend using virtualenv since every virtualenv has pip installed in it automatically.  This does not require root access or modify your system Python installation.Installing virtualenv still requires easy_install though.2018 update: Python 3.3+ now includes the venv module for easily creating virtual environments like so:See documentation for different platform methods of activating the environment after creation, but typically one of:
To use pip, it is not mandatory that you need to install pip in the system directly. You can use it through . What you can do is follow these steps:Download virtualenv tar.gz file from https://pypi.python.org/pypi/virtualenvUnzip it with 7zip or some other toolWe normally need to install Python packages for one particular project. So, now create a project folder, let’s say myproject.Copy the virtualenv.py file from the decompressed folder of , and paste inside the myproject folderNow create a virtual environment, let’s say myvirtualenv as follows, inside the myproject folder:It will show you:Now your virtual environment, myvirtualenv, is created inside your project folder. You might notice, pip is now installed inside you virtual environment. All you need to do is activate the virtual environment with the following command.You will see the following at the command prompt:Now you can start using pip, but make sure you have activated the virtualenv looking at the left of your prompt.This is one of the easiest way to install pip i.e. inside virtual environment, but you need to have virtualenv.py file with you.For more ways to install pip/virtualenv/virtualenvwrapper, you can refer to thegauraw.tumblr.com.
I just wanted to add one more solution for those having issues installing setuptools from Windows 64-bit. The issue is discussed in this bug on python.org and is still unresolved as of the date of this comment. A simple workaround is mentioned and it works flawlessly. One registry change did the trick for me.Link: http://bugs.python.org/issue6792#Solution that worked for me...:Add this registry setting for 2.6+ versions of Python:This is most likely the registry setting you will already have for Python 2.6+:Clearly, you will need to replace the 2.6 version with whatever version of Python you are running.
Updated at 2016 :  should already be included in , but if for whatever reason it is not there, you can use the following one-liner.Download https://bootstrap.pypa.io/get-pip.py and run it with Administrator permission  (If you are on Linux, use )PS:This should already be satisfied in most cases but, if necessary, be sure that your environment variable PATH includes Python's folders (for example,  on Windows default install: , for : , etc)I encounter same problem and then found such perhaps easiest way (one liner!) mentioned on official website here: http://www.pip-installer.org/en/latest/installing.htmlCan't believe there are so many lengthy (perhaps outdated?) answers out there. Feeling thankful to them but, please up-vote this short answer to help more new comers!
The best way I found so far, is just two lines of code:It was tested on Windows 8 with PowerShell, Cmd, and Git Bash (MinGW).And you probably want to add the path to your environment. It's somewhere like .
For latest Python Download - I have python 3.6 on windows. You don't have to wonder everything you need is there , take  a breath i will show you how to do it.make sure where you install python for me its was in the following directoryNow , lets add python and pip into environment variable path settings  if you are on windows, so that typing pip or python anywhere call  python aor pip from where they are installed.So, PIP is found under the folder in above screen "SCRIPTS"Lets add Python and PIP in environment variable path. Almost Done , Let test with CMD to install goole package using pip.BYE BYE! 
Here how to install pip with easy way.copy and paste these content in a file as get-pip.pycopy and paste get-pip.py into python folder.Double click to get-pip.py file.it will install pip to your computer.Now you have to add  path to your enviroment variable.Because it includes  file.Now you are ready to use pip. Open  and type as 
PythonXY comes with  included, among others.
I use the cross-platform Anaconda package manager from continuum.io on Windows and it is reliable.  It has virtual environment management and a fully featured shell with common utilities (e.g. conda, pip). also comes with binaries for libraries with non-Python dependencies, e.g. , , etc.  This proves useful particularly on Windows as it can be  hard to correctly compile C dependencies.
I had some issues installing in different ways when I followed instructions here. I think it's very tricky to install in every Windows environment in the same way. In my case I need Python 2.6, 2.7 and 3.3 in the same machine for different purposes so that's why I think there're more problems.But the following instructions worked perfectly for me, so might be depending on your environment you should try this one:http://docs.python-guide.org/en/latest/starting/install/win/Also, due to the different environments I found incredible useful to use Virtual Environments, I had websites that use different libraries and it's much better to encapsulate them into a single folder, check out the instructions, briefly if PIP is installed you just install VirtualEnv:Into the folder you have all your files runAnd seconds later you have a virtual environment with everything in venv folder, to activate it run venv/Scripts/activate.bat (deactivate the environment is easy, use deactivate.bat). Every library you install will end up in venv\Lib\site-packages and it's easy to move your whole environment somewhere.The only downside I found is some code editors can't recognize this kind of environments, and you will see warnings in your code because imported libraries are not found. Of course there're tricky ways to do it but it would be nice editors keep in mind Virtual Environments are very normal nowadays.Hope it helps.
Download script: https://raw.github.com/pypa/pip/master/contrib/get-pip.pySave it on drive somewhere like C:\pip-script\get-pip.pyNavigate to that path from command prompt and run " python get-pip.py "Guide link: http://www.pip-installer.org/en/latest/installing.html#install-pipNote: Make sure scripts path like this (C:\Python27\Scripts) is added int %PATH% environment variable as well.
It's very simple:(Make sure your Python and Python script directory (for example,  and ) are in the PATH.)
Working as of Feb 04 2014 :):If you have tried installing pip through the Windows installer file from http://www.lfd.uci.edu/~gohlke/pythonlibs/#pip as suggested by @Colonel Panic, you might have installed the pip package manager successfully, but you might be unable to install any packages with pip. You might also have got the same SSL error as I got when I tried to install Beautiful Soup 4 if you look in the pip.log file:The problem is an issue with an old version of OpenSSL being incompatible with pip 1.3.1 and above versions. The easy workaround for now, is to install pip 1.2.1, which does not require SSL:Installing Pip on Windows:Download pip 1.2.1 from https://pypi.python.org/packages/source/p/pip/pip-1.2.1.tar.gzExtract the pip-1.2.1.tar.gz fileChange directory to the extracted folder: Run Now make sure  is in PATH because pip is installed in the  directory unlike  where Python packages are normally installedNow try to install any package using pip.For example, to install the  package using pip, run this from cmd:Whola!  will be successfully installed and you will get a success message.
pip is already installed if you're using Python 2 >=2.7.9 or Python 3 >=3.4 binaries downloaded from python.org, but you'll need to upgrade pip.On Windows upgrade can be done easily Go to Python command line and run below Python commandpython -m pip install -U pipInstalling with get-pip.pyDownload get-pip.py in the same folder or any other folder of your choice. I am assuming you will download it in the same folder from you have python.exe file and run this command Pip's installation guide is pretty clean and simple.Using this you should be able to get started with Pip in under two minutes.
Just download setuptools-15.2.zip (md5), from here https://pypi.python.org/pypi/setuptools#windows-simplified , and run ez_setup.py.
Alternatively, you can get pip-Win which is an all-in-one installer for pip and  on Windows and its GUI.Switch from one Python interpreter (i.e. version) to another (including py and pypy)See all installed packages, and whether they are up-to-dateInstall or upgrade a package, or upgrade pip itselfCreate and delete virtual environments, and switch between themRun the IDLE or another Python script, with the selected interpreter
if you even have other problems with pip version you can try this 
Have you tried ?it's probably the easiest to install pip on any system.
I think the question makes it seem like the answer is simpler than it really is. Running of pip will sometimes require native compilation of a module (64-bit Numpy is a common example of that). In order for pip's compilation to succeed, you need Python which was compiled with the same version of MSVC as the one pip is using. Standard Python distributions are compiled with MSVC 2008. You can install an Express version of VC2008, but it is not maintained. Your best bet is to get an express version of a later MSVC and compile Python. Then PIP and Python will be using the same MSVC version.
How to install pip:Download and install ActivePythonOpen a command prompt (CMD)Type 


Answer URL
https://docs.python.org/3/whatsnew/3.4.html
https://docs.python.org/3/library/venv.html
