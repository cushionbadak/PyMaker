Natural Text
I have a string of raw HTTP and I would like to represent the fields in an object. Is there any way to parse the individual headers from an HTTP string?
There are excellent tools in the Standard Library both for parsing RFC 821 headers, and also for parsing entire HTTP requests. Here is an example request string (note that Python treats it as one big string, even though we are breaking it across several lines for readability) that we can feed to my examples:As @TryPyPy points out, you can use  to parse the headers — though we should add that the resulting  object acts like a dictionary of headers once you are done creating it:But this, of course, ignores the request line, or makes you parse it yourself. It turns out that there is a much better solution.The Standard Library will parse HTTP for you if you use its . Though its documentation is a bit obscure — a problem with the whole suite of HTTP and URL tools in the Standard Library — all you have to do to make it parse a string is (a) wrap your string in a , (b) read the  so that it stands ready to be parsed, and (c) capture any error codes that occur during parsing instead of letting it try to write them back to the client (since we do not have one!).So here is our specialization of the Standard Library class:Again, I wish the Standard Library folks had realized that HTTP parsing should be broken out in a way that did not require us to write nine lines of code to properly call it, but what can you do? Here is how you would use this simple class:If there is an error during parsing, the  will not be :I prefer using the Standard Library like this because I suspect that they have already encountered and resolved any edge cases that might bite me if I try re-implementing an Internet specification myself with regular expressions.
 has been deprecated since Python 2.3 and totally removed from Python 3 (link).Here is how you should do in Python 3:
This seems to work fine if you strip the  line:A way to parse your example and add information from the first line to the object would be:
Using python3.7, , , and with curl flag explanation here:Output:notes:https://urllib3.readthedocs.io/en/latest/reference/#urllib3.response.HTTPResponseparse_headers()


Answer URL
https://docs.python.org/3/library/stdtypes.html#typesmapping
