Natural Text
What is the difference between  and ?
If you check out the subprocess section of the Python docs, you'll notice there is an example of how to replace  with :...does the same thing as...The "improved" code looks more complicated, but it's better because once you know , you don't need anything else.  replaces several other tools ( is just one of those) that were scattered throughout three other Python modules.If it helps, think of  as a very flexible .
 is strict super-set of .
Subprocess is based on popen2, and as such has a number of advantages - there's a full list in the PEP here, but some are:using pipe in the shellbetter newline supportbetter handling of exceptions
os.system is equivalent to Unix system command, while subprocess was a helper module created to provide many of the facilities provided by the Popen commands with an easier and controllable interface. Those were designed similar to the Unix Popen command.where asIf you are thinking, which one to use, then use subprocess definitely because you you have all facilities for execution, plus additional control over the process.
When running python (cpython) on windows the  os.system will execute under the curtains _wsystem while if you're using a non-windows os, it'll use system.On contrary, Popen should use CreateProcess on windows and _posixsubprocess.fork_exec in posix-based operating-systems.That said, an important piece of advice comes from os.system docs, which says:The subprocess module provides more powerful facilities for spawning  new processes and retrieving their results; using that module is  preferable to using this function. See the Replacing Older Functions  with the subprocess Module section in the subprocess documentation for  some helpful recipes.


Answer URL
https://docs.python.org/3/library/os.html#os.system
https://docs.python.org/3/library/os.html#os.system
