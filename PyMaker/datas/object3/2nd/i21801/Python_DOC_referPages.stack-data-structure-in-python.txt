Natural Text
I have 2 issues with the code below:push(o) throws an exception TypeError: can only assign an iterable.Should I throw an exception if pop() is invoked on an empty stack ? 
No need to jump through these loops, See 5.1.1 Using Lists as Stacks If you insist on having methods  and  you can do:
You are right to use composition instead of inheritance, because inheritance brings methods in that you don't want to expose.This way your interface works pretty much like  (same behavior on  for example), except that you've locked it to ensure nobody messes with the internals.
I won't talk about the list structure as that's already been covered in this question. Instead I'll mention my preferred method for dealing with stacks:I always use the  module. It supports FIFO and LIFO data structures and is thread safe.See the docs for more info. It doesn't implement a  function, it instead raises a  or  exception if a push or pop can't be done.
Stack follows LIFO mechanism.You can create a list and do a normal  to append the element to list and do  to retrieve the element out of the list which you just inserted.
Here is an example for stack class
Create a stackTo create a new stack we can simply use for example:"s" is the name of new stackisEmptyBy using  we can check our stack is empty or notfor example:we have two stacks name s1=(0,1,4,5,6) and s2=()if we use   it will return if we use   it will return pushBy using push operation we can add items to top of the stackwe can add "6" to the stack name "s" usingpopwe can use pop operation to remove and return the top item of a stackif there is a stack name "s" with n amount items (n>0) we can remove it's top most item by usingsizeThis operation will return how many items are in the stackif there is a stack name "s"   s=(1,2,3,4,5,3)will return "6"peekThis operation returns the top item without removing it"we can print items of the stack using  "



Answer URL
https://docs.python.org/3/tutorial/datastructures.html#using-lists-as-stacks
