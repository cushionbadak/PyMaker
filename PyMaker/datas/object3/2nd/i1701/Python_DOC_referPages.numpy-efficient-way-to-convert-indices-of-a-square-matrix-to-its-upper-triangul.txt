Natural Text
Question: given a tuple of index, return its order in upper triangular indices. Here is an example:Suppose we have a square matrix A of shape (3, 3).A has 6 upper triangular indices, namely, (0, 0), (0, 1), (0, 2), (1, 1), (1, 2), (2, 2).Now I know an element at index (1, 2), which is a index belongs to the upper triangular part of A. I would like to return 4 (which means it is the 5th element in all upper triangular indices.)Any ideas on how to do that in general?Best,Zhihao 
One can write down the explicit formula:Demo:
For an n×n matrix, the (i, j)-th item of the upper triangle is the i×(2×n-i+1)/2+j-i-th element of the matrix.We can also do the math in reverse and obtain the (i, j) element for the k-th element with:i = ⌊(-√((2n+1)2-8k)+2n+1)/2⌋ and j = k+i-i×(2×n-i+1)/2So for example:For example:Given the numbers are not huge (well if these are huge, calculations are no longer done in constant time), we can thus calculate the k-th coordinate in O(1), for example:which is equivalent to obtaining it through enumeration:Here converting indices to a coordinate can also have, for large numbers, some rounding errors due to floating point imprecision.
IIUC, you can get the indexes using  combinations with replacement To retrieve the index, just use  method 
You could use np.triu_indices and a dictionary:Output
Similar to @DanielMesejo, you can use  with either  or :Explanation: gives you the indices of your upper triangle in order:So all you have to do is find where it matches  (which you can do with the  operator and )
Constructing upper indices would be costly. We can directly get the corresponding index like so -Sample run -


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
https://docs.python.org/3/tutorial/datastructures.html#dictionaries
