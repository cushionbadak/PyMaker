Natural Text
I am trying to make a code that compares the second element of each tuple and extract the tuples that contain duplicates of the second element.For example, if I haveI just cannot figure out how to designate the second element in my for iterationLack of pythonic grammar is frustrating. How should I approach this problem?
There is a chance for more duplicates, So  is a better option.
You can collect your tuples in a , then report the lists that have more than one duplicate:Or keep the duplicates in a dictionary for easy lookups:
Working in numpy arrays would be efficient instead of list/tuples.Based on the unique function output, we can generate the duplicates list    Output:
Here is another approach, using numpy:Output:With np.unique(foo[:,1]) we get the unique elements of the second element in a tuple, and then we append it to a list if the count is greater than 1 or duplicate is present, which returns 2 lists as we have 2 occurrences (0 and 2).If you have a specific number say (2) then we can avoid the loop.E.g.Output:


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
https://docs.python.org/3/library/functions.html#func-list
