Natural Text
I have some trouble understanding time conversions in python.I have two identical  objectsWhen I feed it to the  function on one machine  it returns On a second machine I get a different answerThe machines have different timezones, though:The documentation on the time module says: Use the following functions to convert between time representations:  struct_time in local time seconds since the epoch mktime()As I understand my local time is "America/Los_Angeles" so seconds since epoch should be exactly the same and not be depending on the system configuration. What am I misunderstanding? How do I have to calculate the timestamp correctly then? 
 interprets the  based on the local machine's timezone.  Notice how your  object doesn't contain any timezone info, so the timestamp created will always vary based on timezone set on the local machine.  Thus it's entirely understandable why the same  returns different value on those two machines.  You can use  instead, while both are essentially the same...Naive  instances are assumed to represent local time and this method relies on the platform C  function to perform the conversion.... But since you're creating the  directly from the non-naive  object, it still retains the timezone info and can shift the time accordingly:For aware  instances, the return value is computed as:Observe:The last  processed  as a local time since the timezone info was not passed.  You can notice it's offset by 18000 ( for EST, my time zone).
As you said : "The machines have different timezones, though:" and doc said: "in local time".Your "local time" is not the same on both machine : one is Europe/europe (probably GMT, so UTC+0), the other one is CEST (UTC +1).see https://www.timeanddate.com/time/zones/euCentral European Time (CET) is 1 hour ahead of Coordinated Universal Time (UTC).   This time zone is in use during standard time in: Europe, Africa. I think you want to convert your datetime into "UTC+0 datetime"


Answer URL
https://docs.python.org/3/library/time.html#time.mktime
https://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.datetime.timestamp
https://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.dhttps://docs.python.org/3/library/datetime.html?highlight=datetime#datetime.datetime.timestampatetime.timestamp
