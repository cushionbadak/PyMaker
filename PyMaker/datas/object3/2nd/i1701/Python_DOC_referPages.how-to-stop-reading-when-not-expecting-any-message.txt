Natural Text
in the below code we asynchronously wait to receive data. But how to stop waiting for read when not expecting anymore data. The reason I'm asking this is because I want to implement a class which keeps listening to arriving messages in a separate thread using asyncio.run_coroutine_threadsafe and want to terminate listening once my test gets over (in order to release socket connection).
To stop waiting, cancel the task that runs the coroutine. For example:If you are using , note that it returns a  object, which itself has a  method. Cancellation of the future returned by  will be noticed by asyncio and result in the cancellation of the task in the event loop thread.
streamreader doesn't comes with any timeout https://github.com/python/asyncio/issues/96so once you start reading you cannot stop.For me I sent a closing message and handled in my client that on encountering closing message it should not go for further read.That's how i stopped reading.Once reader.read is called it keeps waiting for a message (Even after calling writer.close) and keeps the socket engaged until object is destroyed.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.cancel
https://docs.python.org/3/library/asyncio-task.html#asyncio.Task
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future.cancel
