Natural Text
This question already has an answer here:Regex matching 5-digit substrings not enclosed with digits                    2 answers                I have the following string:And I'd like to capture the strings with between 1-3 digits, so the result should be:What I have now captures those, but also captures the "first 3" digits in strings that contain more than 3 digits. This is the current regex I have:What would be the correct way to make sure that another digit doesn't immediate proceed it?
Add word boundaries:OutputFrom the documentation :Matches the empty string, but only at the beginning or end of a word.  A word is defined as a sequence of word characters. Note that  formally, \b is defined as the boundary between a \w and a \W  character (or vice versa), or between \w and the beginning/end of the  string. This means that r'\bfoo\b' matches 'foo', 'foo.', '(foo)',  'bar foo baz' but not 'foobar' or 'foo3'.By default Unicode alphanumerics are the ones used in Unicode  patterns, but this can be changed by using the ASCII flag. Word  boundaries are determined by the current locale if the LOCALE flag is  used. Inside a character range, \b represents the backspace character,  for compatibility with Pythonâ€™s string literals.
If there are only digits separated by whitespace in your string, using  is overkill. You can simply  the string and check the length of the substrings.


Answer URL
https://docs.python.org/3/library/re.html
