Natural Text
I have 2 different lists:The lengths of  and  will always be the same. They're in fact logical mappings - each item in  corresponds to a value in .I wanted to identify distinct elements in . I did that using  and  as follows:Here, the output will be:which is nothing but the first occurrence of every distinct element.Now, how do I build a list  so that I get the output as the value in  that corresponds to the first occurrence's value i.e., ?
My idea is to use an  to build a mapping of (key, value) pairs corresponding to the elements of  and  and then extract the  from that dict as a list.Note for Python 3.7+ users: regular dicts are guaranteed to remember their key insertion order, so you can omit importing the .
You can also do this:
Python 3.6+Dictionaries are ordered in Python 3.6+, as an implementation detail in 3.6 and confirmed in 3.7+. So in this case you can use  with an iterable which ignores duplicates. To ignore duplicates, you can use the   recipe, also available via 3rd party  or :Python 2.7You can use  instead of  for Python 2.7, where dictionaries are not ordered:
The question doesn't say if you need to preserve the order. If not, list of unique values of  would be:And the corresponding values of :(where  always returns the first occurrence)The resulting lists will keep your logical mapping, in the random order:EDIT:Another approach (no dictionaries, no  in a loop, order preserved, 2.7 friendly):


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
