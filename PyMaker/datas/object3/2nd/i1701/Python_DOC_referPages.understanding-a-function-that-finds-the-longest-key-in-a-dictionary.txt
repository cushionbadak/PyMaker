Natural Text
The  method in the following  class finds the longest key value inside the dictionary.The code is working, but I am having a very hard time undertanding the logic behind the if not or statement. I originally usedinstead ofbut it produces the error: . Why is this? Thank you very much for enlightening me on this.
Why you need  check is because first time the loop is run,  is  and you can't do . So you do  check and only if  this is , the second condition  is checked. This additional check can be avoided in this case by initialising  to  instead of  and comparing  with  (not ).Something like this:Note: Your code prints only the last key which might not be the longest key every time. In , you need to update longest key along with  value as shown.
First, you declare the variable  and assign it to   doesn't have . So it lead to this statement:It checks whether  has been updated or not
This is because you are checking the length of  which is set to . Hence the error.Example,The reason you don't get the error is because  is executed while the second condition  is not even executed because first is matched already. On top of that, the reason it works is the value of  changes on second iteration.
When you are doing:You are making sure that the object longest have 'no value' or 'empty value'. In Python we don't need to declare variables first, so there are no really empty variables in Python. Setting a variable to None is then not the same thing as setting it to a default empty value; None is a value too, albeit one that is often used to signal emptyness. So how can you count the length of an object if its empty? That's the logic being used here, longest doesn't have any value at all so it throws an error:And when you are using:You are making sure that the object longest doesn't have the value None. 
It's to prevent an error from occurring during the first iteration of the  loop.The  part of the logical expression is evaluated first and if it's  then the remainder of the expression—the  portion—won't be evaluated and the value of the whole expression will also be . This is needed because initially  got set to , and writing the logical expression that way prevents the  part of the second half from being evaluated and a  occurring because  has no length yet.


Answer URL
https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not
