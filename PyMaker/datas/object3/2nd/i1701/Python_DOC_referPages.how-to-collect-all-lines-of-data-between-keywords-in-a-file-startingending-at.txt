Natural Text
I am trying to collect specific information from very large log files but cannot figure out how to get the behavior I need. For reference, an example log is sort of like this:What I need is to find 'keyword 1', grab the whole line keyword 1 is on (back to timestamp) and all subsequent lines until (and including) the whole line that 'keyword 2' is on (through the last bit of data). So far I have tried a few things. I cannot get decent results with re methods (findall, match, search etc.); I cannot figure out how to grab the data before the match (even with a look behind) but more importantly, I cannot figure out how to have the capture stop at a phrase and not just a single character.I also tried something like this:No matter what I tried, this returned an empty listFinally,I tried something like this:This last one took everything from keyword 1 to the EOF which includes almost 100,000 lines of garbage data.
You can use regex if you specify  and use lazy anythings .*? to match start and end:Output:You might need to  from it ...You can view it here: https://regex101.com/r/HWIALZ/1 - it also holds the explanation of the patter. The short of it:I included the () for clarity - you do not evaluate groups, you you remove them.
The following is fast for any size of file. It extracts from a 250M log file of nearly 2 million lines in 3 seconds. The extracted portion was at the end of the file.I would not recommend using , regexes or other in-memory techniques if there is a chance your files won't fit in available memory.Test text file :Code:
None of the other responses worked but I was able to figure it out using regex. 


Answer URL
https://docs.python.org/3/library/re.html#re.DOTALL
