Natural Text
I'm trying to rotate a matrix counter clockwise by 90 degrees. For example, if: then the result should be So far, I found: This gives me This is close, but the rows would need to be reverses. Does anyone know a simple way to rotate this matrix counter clockwise by 90 degrees?
You could do the following:OutputWith  you create an iterable of the columns, and with the expression  you convert that iterable into a list and reverse it.
What you here basically do is map a matrix A to a matrix B such that:Bi j=Aj iIn case you rotate elements, that means that if you rotate an n√óm-matrix, then that means that:Bi j=Aj n-iSo we can calculate this as:which is thus the transpose, but than "reversed". Using indices is however typically not how you do such processing in Python, since now it works only for items that are subscriptable, so I advice you to look for a more elegant solution.But that being said, numpy offers a  function to rotate matrices:
Other option is to use scipy.ndimage.rotateRotate an array.The array is rotated in the plane defined by the two axes given by the  axes parameter using spline interpolation of the requested order.Same result you can get by using the  function to transpose rows and columns of a 5.1.4. Nested List then reverse the nested list with  + put in a np.matrix :


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
