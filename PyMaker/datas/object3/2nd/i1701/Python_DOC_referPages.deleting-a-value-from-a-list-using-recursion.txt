Natural Text
I have defined a recursive function  that takes in two parameters:lst : of type to_delete : a value that needs to be removed from the listHowever, I have used the function , one that we haven't learned yet. So I am wondering whether there is a simpler way to output the same solution without the use of the function This is my code: Output:
7 is missing, because you return  even when you just eted : You should use  here.The alternative is not to  the 0th element and just return .Instead of doing this recursively, you can also just use a list comprehension:.
Using RecursionEven with recursion, you don't need to use :As you can see, you are repeating yourself a bit ( is used twice), so you can shorten this to:I don't know about its performance though.No RecursionIf you don't need to use recursion, you can use list comprehensions for much less code:In case you don't know list comprehensions well, this is logically equivalent to the following:EDIT: I missed it, but the reason you don't see  in the output is, that  already removes the first value from the list and so, you are missing the "new" first value of the list.
You seem to be interested in recursion. Recursion is a functional heritage and so I will give you a glimpse of a functional perspective on the problem. Below,  is a specialization of , which is a specialization of , a simple recursive form -Functional style is not the idiomatic style of Python. Those wishing to explore functional style in Python are not completely ignored however. You can find  and  (among many other useful functions) tucked away in Python's functools module.The definitions of  and  here are my own. If you use , you'll want to read up on specific behaviors more closely.
It would be much simpler to recreate your list without the unwanted items:Correcting your code (but leaving recursion out of it) would look like this:which has the same result.Finally, the recursive option which I highly discourage for this application is the following:


Answer URL
https://docs.python.org/3/library/functools.html
