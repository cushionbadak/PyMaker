Natural Text
I have a list containing 3 elements, for example '1', '2', '3' and I wanna write a function which returns element which is not an function argument. For example:You can see what I'm trying to accomplish. I know that I can get it by using if statements but is there any simpler way of doing it?
Here is a general response:Though you may want to do something to handle the case that you pass in 3 arguments or 1 argument. Depends on your usecase.Note also that you could change your  set to have more characters, and this function would still work.As ShadowRanger points out in the comments, it probably makes more sense to do set subtraction than bit-wise xor. Something like this:This is still subject to the same problem if passing in the wrong number of arguments, which you could check using something like this:
You can use two lists, an iteration and the  not in function:
You may use  and  to test if the variable is present in the arguments list ( here):This returns the very first element in  that is not also present in , returns  if all are present.
I guess that this could be what you are asking for:Then:If you are planning to return a single element (first of the list?) instead of a list, return[..][0]
I would do two things first if set of  are same I will pull them outside the function so it does not get executed each time. Second use set operation symmetric difference to find all the elements which are present in only one list of two lists or difference to find the difference of one set from another. In the end you have to convert the set into a tuple in order to get the first element as set do not support indexesOr better In Python3 you can use set literal as pointed out by @ShadowRanger


Answer URL
https://docs.python.org/3/whatsnew/2.7.html#python-3-1-features
https://docs.python.org/3/whatsnew/3.0.html#new-syntax
