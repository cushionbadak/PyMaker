Natural Text
I'm using python 3 and trying to multiply functions within a for loop. I wrote a simple example code to demonstrate my problem. What I want this code to do was to start with the funciton x^2, then multiply it by x^2 in first loop, to get x^4. Then multiply x^4 again with x^2 to get x^6 e.t.c.But the code comes out with a Recursion error. I have no idea how this is causing a recursion though? Any help will be much appreciated. 
The assignment in your loop is equivalent to:Which is a recursive function without a stop condition. Your initial definition of  is shadowed, due to python's binding rules:The following constructs bind names: formal parameters to functions,  import statements, class and function definitions (these bind the  class or function name in the defining block)You can trace it and verify such behaviour using  :You can instead bind your function as an argument of the lambda:Which will produce the following trace:
I never found a solution to this, but did find a workaround. Rather than trying to multiply it straight away, I wrote a function to do the multiplication. This seems to works so I'll just use this instead.
An alternate syntax: rather than pass a second argument to the , you can use a nested  where the outer one is evaulated to return the inner one:Just seems more generic solution (language-wise) than a defaulted argument.


Answer URL
https://docs.python.org/3/reference/executionmodel.html#naming-and-binding
