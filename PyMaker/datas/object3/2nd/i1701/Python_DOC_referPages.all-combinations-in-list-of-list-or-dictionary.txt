Natural Text
Using Python:I have a dictionary where the 'key' represents the value of a coin. And the 'value' represents the number of that coin.Such as:oror(I am not sure which is best to use - it could also just be represented as a list of 8 integers, eg. [0,0,0,0,0,1,4,3] or a list of lists eg [[],[],[],[],[],[1],[1,1,1,1],[1,1,1]])I want to create a dictionary which shows all possible combinations of different coins where the 'key' would be the total value of the coins and the 'value' would be a list of 8 integers representing the number of each coin.EDIT: I realised what I want to do is impossible with dictionaries as you cant have multiple assignments to a single key name: How would one use the function itertools.combinations(iterable, r) to return a list of tuples ? 
I think the easiest way to solve this is by using .To use this, you first need to convert your  of coin counts into a  of coins:Then, one can use  to get every possible combination for every possible combination size, sum it up, and save if to an output .Since you want to store every possible combination of coins for each value, you could turn each item in the  to a  of . The  would only store unique coin counts: Finally, because adding up floating points can cause weird results (like ), when printing you can round the value of the sums to the nearest cent (and use the module  to make the formatting nicer):Which would print out a  of  for each coin value sum. Each  contains  of pairs of (coin value, number of coins), ie for 3 cents, one can either have 3 * 1c coins (), or a 1c + 2c ():


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
https://docs.python.org/3/library/itertools.html#itertools.combinations
https://docs.python.org/3/library/collections.html#collections.Counter
