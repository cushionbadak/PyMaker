Natural Text
I have a tiny web-server written in Python 3 using http.server which calls the function  in method  like this:Now in this  function I have several conditional statements and  and  blocks roughly like this:The code above is simplified, but in principle I return an empty string if an exception happens and thus my web server returns nothing to client if an exception happens.Is there a more manageable way to handle this? Specifically, I'm looking to:Avoid catching each error via a separate  section, while still supporting an error message dependent on error type.Avoid writing multiple  /  statements, often nested, within my function.Note: This is a copy of this now deleted question. The solution from that post is included below, but other answers are welcome.
I'm not sure if having nested  blocks is absolutely necessary in your logic, but I'd try a single  block with a custom  class. Something like this: 
How about ? To alleviate your concern about custom error messages, you can feed a dictionary mapping error classes to messages of your choice.Since different operations require different errors to be handled, you can use multiple  statements, feeding different errors as arguments each time.Here's a contrived example:
How about to define a function that has a dictionary contained the whole errors and responses. in this case you can catch an exception one time and send it to a handler   UPDATE :   


Answer URL
https://docs.python.org/3/library/http.server.html
https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
