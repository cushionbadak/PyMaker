Natural Text
I have noticed some strange behaviour with list extension return values. I have read this thread Why does += behave unexpectedly on lists?but it still does not make sense. This is what I did: I understand that  does not return the extended object, but . Not helpful, but I get it. Now  behaves differently, which is weird, since I read that this basically calls extend for a list. But the third one baffles me. I thought  was shorthand for , so why do I get a  here? Especially since  returns the modified list, which would make sense to pass on as a return value. But it seems I can't use  (or  for that matter, e.g. with integers) in function calls. Is that by design? 
 is a function call, that is, an expression. is an assignment, that is, a statement.Argument values (the ones you have supplied to  in this case) are not allowed to be statements, only expressions, simple as that.
 is used to implement , but the two are not identical.  is still a statement, while  is an expression.


Answer URL
https://docs.python.org/3/reference/index.html
