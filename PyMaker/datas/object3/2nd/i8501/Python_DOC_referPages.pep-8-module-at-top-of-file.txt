Natural Text
Desiring to improve my Python style, I ran a PEP-8 style checker on one of my script and it complained about something I don't know how to fix.  The prologue of the script is something like:and the style checker complain on the  line, stating that it should be a top of file.  But I obviously can't move it before setting the path where it will be found.  Is there a good way to achieve this (mandating an environment variable or a shell wrapper are not what I find better than my current code) while respecting PEP-8 recommendations at the same time?
If you want to avoid path manipulation, you may be able to do so by using the under-known  feature. should begin with the directory containing the main program either by name or by reference as ''.  I assume that the file importing  is not part of , so that the '' entry is not useful for importing . should end with the  directory for the executing binary.  That is the normal place for added packages.  If you do not want to move  into , you can extend the latter 'vitually' by putting a  file in it.  It should contain one line: the path to the directory containing .  Call it . Then  and any other package in  can be imported as if they were in .One advantage of .pth files is that you can put identical copies in multiple site-packages directories.  For instance, I have multiple projects in .  I have multiple versions of Python installed.  So I have put  containing that one line in the site-packages for each.
The best strategy would be to put the  related code in separate file and import it in working code file.So, I will split above code in two files. One named  and other named Now  will contain below linesand  will containbecause we are importing  before , it will execute the path related code before and your package will be available in path.
You can use  module (python 3.5) or  for python 2.7 to load  programatically. Both have the same purpose:mechanisms used to implement the import statementThis question might help you more:How to import a module given the full path?https://docs.python.org/3/library/importlib.html#exampleshttps://docs.python.org/2/library/imp.html


Answer URL
https://docs.python.org/3/library/importlib.html#examples
