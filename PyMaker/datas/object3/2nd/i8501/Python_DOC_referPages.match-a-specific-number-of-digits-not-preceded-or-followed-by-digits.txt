Natural Text
I have a string:I want to find all  consecutive chunks of digits where . Using regular expression only:say for example  and     using Gives this output:Desired output:I know there are alternate solutions like:which gives the desired output, but I want to know what's wrong with the first approach? It seems  goes in sequence and skips the previous part when matched, so what can be done?
Note: The result you show in your question is not what I'm getting:It's still missing some of the matches you want, but not the same ones.The problem is that even though non-capturing groups like  and  don't capture what they match, they still consume it.This means that the match which yields  has actually consumed:, with  – not captured (but still consumed) with  – captured with  – not captured (but still consumed)… so that  is no longer available to be matched before .You can get the result you want with lookbehind and lookahead syntax:Here,  is a negative lookbehind, checking that the match is not preceded by a digit, and  is a negative lookahead, checking that the match is not followed by a digit. Crucially, these constructions do not consume any of the string.The various lookahead and lookbehind constructions are described in the Regular Expression Syntax section of Python's  documentation.
lookaround regex,\d{2,3} means 2 or 3 digits, (?=[a-z]) means letter after digits. 
You could even generalize it with a function:


Answer URL
https://docs.python.org/3/library/re.html#regular-expression-syntax
