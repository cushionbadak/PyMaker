Natural Text
I have read other posts in Stack Overflow that answer this question, but I am interested in a specific subset of methods.Suppose you have a class  with  higher than 1, as well as classes , , ...,  such that, for each  between 1 and , class  inherits from class .My question is: for any  higher than 1, how can I obtain the list of methods that belong to  but not to ?  
You can find all names defined on the class itself in the  attribute of a class; you can use the  function to list those more succinctly:You may need to vary the test for functions; I'm assuming here you only want plain function objects (which are bound into methods when looked up on the instance), but you may need to test for class or static methods or other callables too, depending on your use-case.This will include names that have been re-defined; so these exist on the parent too but  provides a new implementation that masks that of a parent.If you must find all names that uniquely belong to  and no parent provides, you'll have to filter on names that exist on the bases:


Answer URL
https://docs.python.org/3/library/stdtypes.html#object.__dict__
https://docs.python.org/3/library/functions.html#vars
