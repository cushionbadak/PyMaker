Natural Text
I have read through many questions touching live stdout print including the answer from J.F. Sebastian's Python 3 solutionto read the stdout.However, while his solution works in this scenario:It does not work as I expect with the application I actually want to use:For the ping scenario, every line is printed as if I ran it manually. With iperf it stops after two lines of output and flushes everything when the application is done. If I execute them after each other in a script I get this output:EVERYTHING AFTER THIS LINE IS SHOWN AFTER IPERF IS DONEAs can be seen in the Interval column there is about one line per second being printed if I run the same command manually. I am new to python so any mistake is possible. I have tried a few other ways of caching the stdout but they also freeze the output like this. Can this be solved somehow? BRAndreasEDIT: I thought about the problem being iperf not flushing but since it is clearly writing a new line every second there must be a way to catch it before a flush. When running longer tests I noticed that the stdout buffer is eventually maxed and will flush many lines and continue until it's full again.
Try the  command-line flag to iperf3.  This causes iperf3 to flush its output after each line of output.


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen
