Natural Text
Before explaining my requirement, let me explain what I don't want:Expected Output:That is : take all unique letters/characters from that sentence.Then find "in how many words that character is present" , so count that no of occurence and store in dictionary.For example character 'l' is present 3 times in that sentence, but  present in 2 WORDS(in hello it is repeated but I want it to be counted as 1).Please suggest. If i missed something to make my problem more understandable, please highlight.Here is what I tried:
First, split the string into individual words and create the output dictionary. I recommend using the  c.ass, which is just a  subclass designed to count occurrences:Now loop through all of the words and create a  from each word. Since  can't have duplicate values, it's guaranteed to have exactly one copy of each characters:And finally, loop through the now unique characters of the word, incrementing the counter's value for that character:Also, you can shorten this quite a lot, even down to a one-liner:To get the count of a particular character, just access it through :
You can do  splits your sentence into words (it splits by ). Then the for-loop checks if the character  is in that particular word, yielding  or  if it is or is not. The  function counts all the s
You can do it, too, within  from  module and  like this way:Outut: 


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
https://docs.python.org/3/tutorial/datastructures.html#sets
