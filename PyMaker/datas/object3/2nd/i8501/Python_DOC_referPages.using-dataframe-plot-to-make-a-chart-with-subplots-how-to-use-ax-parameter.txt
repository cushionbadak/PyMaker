Natural Text
I can not wrap my head around axes parameter, what it contains and how to use it for making subplots.Would really appreciate if someone could explain what is going on in the following exampleHere is the data (UCI Bike sharing dataset):Here is the output of the code snippet (a pairwise comparison of features and the end results):To be more specific, here are the parts that I do understand (at least I think I do)plt.subplots returns a tuple containing a figure and axes object(s) (link)enumerate() returns a tuple containing index of a feature and its name(link)df.plot uses column names to put data on subplots within  figHere is what I do not understandWhat does axes object contain? Again, based on documentation and this answer I do realize that axes contains "Axis, Tick, Line2D, Text, Polygon, etc." but what do we address using axes[x,y] ? why in this example author decided to use [idx / 4, idx % 4] as values?
Concerning the last question about the array indexing as : The idea is to loop over all subplots and all dataframe columns at the same time. The problem is that the axes array is two-dimensional while the column array is one-dimensional. One therefore needs to decide over which of those to loop and map the loop index/indizes to the other dimension. An intuitive way would be to use two loopsHere,  maps the two dimension of the numpy array to the single dimension of the columns list.In the example from the question, the loop is over the columns, which means we have to somehow map the one-dimensional index to two dimensions. This is what  does.. or should do. It will only work in python 2. To make it more comprehensible and version save, one should actually use . The  makes it clear that an integer division is used. So for the first 4 idx values (0,1,2,3),  is 0, for the next set of 4 values it's 1 and so on.  calculates the index modulo 4. So (0,1,2,3) are mapped to (0,1,2,3), and then (4,5,6,7) are mapped to (0,1,2,3) again, etc.An alternative solution using a single loop would be to flatten the axes array:or maybe most pythonic
The  object in your code is a 2D Numpy array of matplotlib  objects. Since the call to  asked for 3 rows and 4 columns, the array will be 3 by 4. Indexing into the array like  gives you the  object that corresponds to row  and column , and you can pass that object as the  keyword argument to a plotting method to make the plot show up on that axis. E.g. if you wanted to plot something in the second row and second column, you would call .The code uses  as a way of converting the indices (numbers from 0 to 11) into locations in the 3-by-4 grid. Try evaluating that expression yourself with  set to each value from 0 to 11 in turn, and you'll see how it works out.


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
