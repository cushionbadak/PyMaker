Natural Text
Is there any difference between using the reversed union or intersection operators on sets in Python?for instance,  corresponds to  corresponds to If these are supposed to return the same thing, why have the reversed operator in the first place? Am I missing something?
 and  follow the number protocol and they don't define the reversed operations explicitly but they get these "for free" because they implement the normal methods (like ).However reversed operations are particularly useful when dealing with subclasses because if the right operand is a subclass of the left operand the reversed operation is attempted first. But in case of plain s and s this doesn't make any difference because they don't inherit from each other. These reversed operations are also used if the first operand returns  in it's . But again this isn't really useful for  and  because they only allow operations with other -alikes and at least  and  don't return  when the other operand is another . Also  doesn't correspond to , except when  is a subclass of . Otherwise  will be attempted before .So I doubt there are use-cases for the reversed union and intersection but it should explain "why these methods exist".
 is only called if if the left operand does not support the corresponding operation and the operands are of different types.I would imagine that  would just call  under the covers.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__rand__
