Natural Text
I want to input text to python and process it in parallel. For that purpose I use . The problem is that sometime, not always, I have to input text multiple times before anything is processed.This is a minimal version of my code to reproduce the problem:What happens is that I have to input text multiple times before I get a result, no matter how long I wait after I have inputted something the first time. (As stated above, that does not happen every time.)If I create the pool before the while loop or if I add  after creating the pool, it seems to work every time. Note: I do not want to create the pool before I get an input.Has someone an explanation for this behavior?I'm running Windows 10 with Python 3.4.2EDIT: Same behavior with Python 3.5.1EDIT:An even simpler example with Pool and also ProcessPoolExecutor. I think the problem is the call to  right after appyling/submitting, which only seems to be a problem the first time appyling/submitting something.
Your code works when I tried it on my Mac.In Python 3, it might help to explicitly declare how many processors will be in your pool (ie the number of simultaneous processes).try using 
I could not reproduce it on Windows 7 but there are few long shots worth to mention for your issue. your AV might be interfering with the newly spawned processes, try  temporarily disabling it and see if the issue is still present.Win 10 might have different IO caching algorithm, try inputting larger strings. If it works, it means that the OS tries to be smart and sends data when a certain amount has piled up.As Windows has no fork() primitive, you might see the delay caused by the spawn  starting method.Python 3 added a new pool of workers called ProcessPoolExecutor, I'd recommend you to use this no matter the issue you suffer from.


Answer URL
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor
