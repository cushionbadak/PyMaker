Natural Text
I am trying to open a textfile called state_meet.txt file; the info is formatted asgymnastics_school,participant_name,all-around_points_earnedsee example:and create functions to get info such as:The total count of gymnasts that participated in the state meet.The first place score.The last place score.The score differential between the first and last place.The average score for all gymnasts.The median score. (The median is the grade at the mid-point of a sorted list. If there is an even number of elements in the list, the median is the average of the 2 middle elements.)The average of all scores above the median (not including the median).The average of all scores below the median (not including the median).The output should look as suchSummary of Data:Number of gymnasts: 103First place score: 143.94Here's the code I have so far:this is what i have so far but my text is reading it as W.,55.301 instead of 55.301 and giving me errors
You should use  to replace .Use  to get the third item of list .list  seems no use.It seems that no matter how many lines are there in ,  always gets the last line data.I guess the things you want to do:Let me explain more:First, I define a namedtuple type called "Data" with the the item names(gymnastics_school...). Then I can use  to create a namedtuple . We can easily fetch the item values by using  to get attributes.Next, when we iterate the lines in file object, use string method  to remove blanks and new lines. It makes the line more clean. Then  can help us splitting the line with specified delimiter .Here, we do a conversion with function  because third item in the split list  is a float(but it is string in the file). Finally, use namedtuple  to create data then append to list .Next, builtin function  and  can help us find the max/min item. But each thing in data is a namedtuple, we should use a lambda function to fetch the points then use them as keys to pick the max/min one.Also, function  let us compute the summation without a loop. Here, we have to extract the points to get their summation so we pass a generator  to .I get the median value by sorting  then get the middle one. When the number of data is odd, we just pick the center number. But if it is even, we should pick the middle "two" and compute their mean.Hope my answer can help you!
You have a comma-separated values (csv) file. Use the  module. reads the lines of your csv file and automatically converts each one to a dictionary, keyed by whatever you like. This is perhaps easier to read than the  suggestion in dokelung's answer, though  is equally valid. The key here is that we can keep the entire record around instead of throwing away everything but the score.
split() by default splits on whitespace, did you mean     values = line.split(',')to split on commas?https://docs.python.org/2/library/stdtypes.html#str.split


Answer URL
https://docs.python.org/3/library/csv.html#csv.DictReader
