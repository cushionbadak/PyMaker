Natural Text
I have seen a lot of solutions, but I am not seeing one that works I am trying to grep every file in a directory in Python for a specific string, count the number of lines that the grep returns, and record this in python. Here's what I have tried most recently:I am getting this error:Ultimately I want to execute this query from within Python:...And get that line count back as a # I can use for other logic. What's the best way to do this?To be clear, my ultimate goal is to count how many times a particular string is mentioned by any/all files in a directory for a list of a bunch of strings. I am looking for strings inside files, not just file names. I suspect grep is a much faster solution to do this than Python, but it's inside a larger Python routine, hence the proposed hybrid solution. 
If you accept another solution, here it is. Counting files can be performed easily with glob:In which "filename" has the patter you want. Then, you can use nfiles for your logic. 
Alternatively to my other answer, you may want to try and do it entirely in python this way:
Probably because of this, from the docs:"If args is a string, the interpretation is platform-dependent [...]. On POSIX, if args is a string, the string is interpreted as the name or path of the program to execute."The error you see says that your string is interpreted as a file name, so it fits this description. Try instead to pass args as a list: 
The following shell command will output the count that you want:The  command will print the contents of all the files in the directory, and the  option to  tells it to print the count of matches instead of the matching lines.You can run this command with . You need to use the  option so it processes this as a shell command, not the name of a program to run. And to get the output of the command, you need to specify  and use  to read from it.See Store output of subprocess.Popen call in a string


Answer URL
https://docs.python.org/3/library/subprocess.html#subprocess.Popen
https://docs.python.org/3/library/subprocess.html#security-considerations
