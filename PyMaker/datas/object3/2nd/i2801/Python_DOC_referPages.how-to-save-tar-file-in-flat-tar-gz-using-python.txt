Natural Text
I have a tar file with the following structure:and I want to save the file as tar.gz, so it will look like:I tried to use  in  module, but I only managed to create tar.gz file with another hierarchy.I managed to find only two solutions, which doesn't seems optimal:"un-tar" the file, and then put them in a new "tar.gz" filecalling the following Unix command from the Python script Is there a batter way of doing it in Python?
A  file is just a  file that's been ped. As you must know given that you wrote this Unix command:If you want to do the same thing from within Python, just use the  library:In fact, this is directly equivalent to one of the Examples of Usage in the docs.Is this optimal?We're avoiding the untarring and tarring part. Which is pretty minimal work ( is a dead-simple formatâ€¦), but not zero.We obviously have to read every byte of the tarball, and you have to write every byte of the gzipped tarball, but we want to avoid reading the whole file at once (which might use up all your RAM) or reading so little at a time that you can't keep the disk moving.  takes care of that for you.So, it's pretty much exactly the same work that the  tool does. But we're not creating a child process, and we're not relying on a tool that might not be there (e.g., on Windows, or iOS, or in some really weird scenario where you created a chroot that has python but not gzip).


Answer URL
https://docs.python.org/3/library/gzip.html
https://docs.python.org/3/library/gzip.html#examples-of-usage
