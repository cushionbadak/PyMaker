Natural Text
For the data file formated like this:I can use  and it will get everything correct except for the very first header, .Is there a way to specify a regex string for  to use to parse out the header names? I know a way to solve the issue is to just use regex to create a list of names for the  function to use, but I figured there might/should be a way to directly express that in the import itself.Edit: Here's what it returns as headers: 
So it doesn't appear to be actually possible to do this inside the  function. Below is posted the actual solution I ended up using to fix the problem:Code explanation::Arguments,  is a file object that contains the header.  is the line number (starting at 1) that the header names exist.  is the pattern that will be fed into . Highly recommended that you prepend a  to the regex pattern.  is a list of miscellaneous strings that you want to be removed from the headerlist.The regex pattern I used:First up we have the pipe () symbol. This was done to separate both the "normal" split method (which is the ) and the other stuff that needs to be rid of (namely the parenthesis). Starting with the first group: . We have the  since we want to match those characters in order. The  is what we want to match as the stuff to split around. The  basically says to not capture the contents of the group. This is important/useful as otherwise  will keep any groups as a separate item. See  in documentation.The second group is simply the other characters. Without them, the first and last items would be  and . Note that this causes  to be treated as a separate entry to the list. This is why we use the  argument to fix that up after the fact.


Answer URL
https://docs.python.org/3/library/re.html#re.split
