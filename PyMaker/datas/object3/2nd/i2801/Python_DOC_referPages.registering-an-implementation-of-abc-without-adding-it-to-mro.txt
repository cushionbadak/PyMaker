Natural Text
I am trying to understand the usefulness of the method register of abc.ABCMeta.To my understanding, after reading https://docs.python.org/3/library/abc.html:the following code:will create the class MyFoo which implements the Complex abstract class.After registering the MyFoo with Real, the isinstance and issubclass will return as if MyFoo was derived from Real.What I don't understand is why the Real, doesn't get added to the mro.I am asking since the following code will not behave as I would have expected:Shouldn't I have as a given that when isinstance returns true, then the underlying object should have all the characteristics of the class that it's checked against?Note, if it's not obvious, i quite new to the language so please bear with me.
Using  to examine properties of an objectThe idea of Abstract Base Classes (or ABC) is to provide a way to override behaviour of  for types which one cannot control.For example, you may want to use  to check whether an object supports addition (i.e. it is allowed to do  for  and  which satisfy the check).For that, you could implement a base class and some subclasses:Then, you could check  before attempting to sum any two objects.For example:Using  to extend  for existing classesThe problem with this approach is that it does not work for types which already exist and support addition, but are not inherited from your base class:This is where ABC kicks in. One can inherit the base ("interface") class from  and then register any existing class with it.And now it looks like  is inherited from :But of course,  does not really inherit from ! And there is really no check that it supports everything that you would expect from . It is your (programmer's) job to make sure it does before writing .An error:You can easily do this, and it won't work well, of course:It will now seem that  supports addition, but it does not:It does not work because it was wrong to register  as a  in the first place.I hope this make things at least a bit clearer.


Answer URL
https://docs.python.org/3/library/abc.html
https://docs.python.org/3/library/abc.html
