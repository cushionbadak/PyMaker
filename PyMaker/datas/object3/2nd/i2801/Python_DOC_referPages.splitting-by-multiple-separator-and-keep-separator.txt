Natural Text
I have the following string inputs:And want the following outputs:Eg after each delimiter A, B or S split and keep the delimiter.I can do with  from  (putting parenthesis on the delimiter pattern returns also the delimiter used):And can play around to have the wanted solution but I wonder if there is a pure regex solution?
A solution that will work in all Python versions will be the one based on PyPi  module with  and  flag:Output:Details - a positive lookbehind that matches a location that is immediately preceded with  ,  or  - and that is not immediately followed with the end of string (so, all locations at the end of the string are failed).The  is used just in case there may be special regex chars in the delimiter list, like , ,  or .In Python 3.7,  also can split with zero-length matches, so, the following will work, too:Else, you may use workarounds, likeSee the regex demo.Details -  matches newlines, too - one char should appear immediately to the right of the current location - any 0+ chars other than ,  and  - 1 or 0 (=optional) ,  or  char.
Use  instead, and match digits followed by either , , or :Output:If the input might have other alphabetical characters as well, then use a negated character set instead:Output:
You could use lookarounds:Se a demo on regex101.com.
Use :


Answer URL
https://docs.python.org/3/library/re.html#re.split
