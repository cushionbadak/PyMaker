Natural Text
This question already has an answer here:Understanding repr( ) function in Python                    5 answers                In Python interpreter, return without “ ' ”                    2 answers                EDIT: SOLUTION!!!As it turns out, all I needed to do for this to work was  and Python treated  as if it were the same as . I don't recommend using  all of the time, but in this case it was the best solution for me that I could figure out so far.ORIGINAL PROBLEM:I have a string ():(Note the backslashes--there are 2)When I print it , I get:Which 1 backslash-- EXACTLY what I want to pass to . Because when I run  (running  with two backslashes), I get an error. But when I run: ( with 1 backslash)I get exactly what I want:So, my question is:How can I capture the 'output' of  and pass it to , exactly as it is printed? I know that I can pass the output of  to a file, and then bring in those lines, but I feel like that's extremely inefficient. Thank you!!EDIT:Please note that  is NOT the  of the string--because then there would be backslashes in front of the first and last quotes. Hence, using solutions involving  or  have not worked. I quite literally need to somehow 'grab' the output of . Thank you again!
If you prefix the string with 'r', it will indicate to Python that it's a "raw string" and will pass the string exactly as you specify it:This will pass the string 'y', 'o', 'u', 'r', ' ', '\', 'q', 'u', 'e', 'r', 'y' -- with the one backslash exactly as you specfiy it.From the Python docs:  https://docs.python.org/3/reference/lexical_analysis.htmlBoth string and bytes literals may optionally be prefixed with a  letter 'r' or 'R'; such strings are called raw strings and treat  backslashes as literal characters.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html
