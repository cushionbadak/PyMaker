Natural Text
I'm using the asynchronous functionality of Python. After learn how to use it.I updated my code to work with data analysis. It works fine in python3.5. However, when I updated from Python3.5 to Python3.6, there is Runtime Error. My usage is very simple. First, create an asynchronous usage in a file, named 'runner.py',like this:Then, import it from another file, named "main.py"When I run main.py then Runtime Error occurrs. The error says that this event loop is already running.By the way, these code and running are finished in jupyter notebook How can I avoid things like this?I've tried to add code like  before I run it, however, it can't work.I know that only one loop can exit simultaneously, however, I didn't run the loop in runner.py. How can I solve this?thx.
I think you are running on windows platform.loop = asyncio.get_event_loop() will create a _WindowsSelectorEventLoop object.the running default is True. so you should remove "loop.run_until_complete(some_task())"<_WindowsSelectorEventLoop running=True closed=False debug=False>If you run on linux platform, you will get a _UnixSelectorEventLoop object.<_UnixSelectorEventLoop running=False closed=False debug=False>That will be ok.
Thanks gays above who offer ur answer. And I figure it out.There is nothing to do with my code, but to do with the notebook.If u are using the notebook, run the code below, you will find out that the current loop is running.For further proving, if you then run the code below, your notebook will shutdownThen the notebook shell would automatically restart, and what was in your current notebook in the memory is gone.If u do this in the python shell, nothing would happen.Therefor, what needed to do is not to use  and the task will automatically run through the current loop.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#task
https://docs.python.org/3/library/asyncio-eventloop.html#tasks
