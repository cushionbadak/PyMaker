Natural Text
I'm looking for a way to merge multiple dicts with each other, which contain nested dicts too. The number of nested dicts is not static but dynamic.At the end the Final dict should contain all the dicts of dicts and the sum of their values:I tried the following code which allows nested dicts to a max of 3 nested dicts. Unfortunately the code doesn't do what I expected. Thereby it doesn't look very clean, I feel like this could be done with a recursive function, however I can't find a way to do it.
Make two functions like below:Calling the above code as follows produces the desired output:
The issue is that you need to determine what to do with a dictionary key based on the type of the value. The basic idea is:Input is a pair of dictionaries, output is the sum dictionaryStep along both input dictionariesIf a value is a dictionary, recurseIf a value is a number, add it to the other numberThis is fairly easy to implement with a comprehension:The copy ensures that any keys in  that are not also in  are simply copied over.You can now sum as follows:More generally, you can use  to do this for an indefinite number of dictionaries:


Answer URL
https://docs.python.org/3/library/functools.html
