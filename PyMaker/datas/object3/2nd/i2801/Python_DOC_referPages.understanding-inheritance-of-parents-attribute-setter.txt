Natural Text
I'd like to raise a  when trying to set an attribute in a child class. Here's the code for the parent class:I see that I can define a  which overwrites' 's attribute setter directly by doing any of the following:Is there a difference between any of the above?
There is no difference between those two solutions.In fact, the ,  and  decorators have been carefully designed with this exact use case in mind. From the docs:A property object has , , and  methods usable as  decorators that create a copy of the property with the corresponding  accessor function set to the decorated function.(Emphasis mine.)So no, using  won't affect the behavior of the  class.Overall, it's better to use the  solution because it reduces code duplication - copy-pasting the parent class's getter into the child class is nothing but a potential source of bugs.Related questions:Use of property's getter in pythonPython overriding getter without setterOverriding properties in python


Answer URL
https://docs.python.org/3/library/functions.html#property
