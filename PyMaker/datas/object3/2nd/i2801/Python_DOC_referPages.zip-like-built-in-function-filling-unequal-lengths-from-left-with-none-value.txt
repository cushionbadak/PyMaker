Natural Text
Is there a built-in function that works like zip(), but fills the results so that the length of the resulting list is the length of the longest input and fills the list from the left with e.g. ?There is already an answer using zip_longest from  module and the corresponding question is very similar to this. But with  it seems that you can only fill missing data from the right.Here might be a use case for that, assuming we have names stored only like this (it's just an example):There is no other permutation like (, ) and so on.How can I get results like this using built-in functions?
Use  but reverse lists.Example:On your use cases:
Simply use  and read the arguments in the reverse direction:Since the zip* functions need to be able to work on general iterables, they don't support filling "from the left", because you'd need to exhaust the iterable first.    Here we can just flip things ourselves.
The generic "magic zip" generator function with a variable number of args (which only uses lazy-evaluation functions and no python loops):testing (of course in the case of a dict build, only 2 params are needed):result:



Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
