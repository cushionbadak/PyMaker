Natural Text
I'm a beginner Python coder and I'm attempting to create a function that allows a user to purchase/buy 3 different ingredients ('apples','beets', and 'carrots') which are each $1. The function I've defined will take 2 arguments (the ingredient name and how many they want to purchase). The maximum amount of money that the user has is $20.I'm having trouble on how to actually begin the code since first I have to make sure that the amount they are purchasing is not over their total amount of money ($20). Also, I'm not sure how to put the purchased amount of money into the inventory that is a dictionary. I thought I could use append but I think that's only for lists not dictionaries.Then however many they buy of apples, beets, or carrots will be reflected on their total and will substract.For example, if they bought 3 apples:buyingredient('apple',3)Then the inventory will say they have 3 apples and a total of $17 left.iinventory={'apple':3,'beets':0,'carrots':0}total=17Not sure where to go from here for the code now....
Try keeping track of the amount you've spent as new ingredients are purchased, then you can avoid that loop:Let's try it out (bear with me, I'm going to take a bit of a tangent):Gah!This fails because  is defined outside the function. For that reason, it's generally considered bad practice to have functions update variables that "live" outside them - it's preferred to return something instead. (Yes, updating  will work, but it's still considered bad style.)In this case, you're creating something but then modifying it an unknown number of times - a perfect opportunity to take classes for a spin. Let's create a  that keeps track of your budget and the items you add:Create an instance, specifying your budget:Add 5 apples:And now 100 beets:Anyway, that's probably more answer than you were looking for, but I wanted to tighten up your function while making the point that it should either return a value or update the state of an object passed in (in this case, ) without leaving you hanging. Hope this helps.(Btw, if you're wondering what  is, take a look at the docs, they're quite good. There's an example that shows the use of  with the  operator not too far down: https://docs.python.org/3/library/collections.html#collections.defaultdict)


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
