Natural Text
I am trying to write a piece of code that will recursively iterate through the subdirectories of a specific directory and stop only when reaching files with a '.nii' extension, appending these files to a list called images - a form of a breadth first search. Whenever I run this code, however, I keep receiving [Errno 20] Not a directory: '/Volumes/ARLO/ADNI/.DS_Store'*/Volumes/ARLO/ADNI is the folder I wish to traverse through*I am doing this in Mac using the Spyder IDE from Anaconda because it is the only way I can use the numpy and nibabel libraries, which will become important later*I have already checked that this folder directly contains only other folders and not filesWith every iteration, I wish to traverse further into the nested folders by appending the folder name to the growing path, and part 3 of the code works, i.e. I know that a single iteration works. Why does  keep adding the '.DS_Store' part to my directories in the  function? How can I correct my code so that the breadth first traversal can work? This folder contains hundreds of MRI images, I cannot do it without automation. Thank you. 
The  files are not being created by the  module, but by the Finder (or, I think, sometimes Spotlight). They're where macOS stores things like the view options and icon layout for each directory on your system.And they've probably always been there. The reason you didn't see them when you looked is that files that start with a  are "hidden by convention" on Unix, including macOS. Finder won't show them unless you ask it to show hidden files;  won't show them unless you pass the  flag; etc.So, that's your core problem:I have already checked that this folder directly contains only other folders and not filesâ€¦ is wrong. The folder does contain at least one regular file; .So, what can you do about that?You could add special handling for . But a better solution is probably to just check each file to see if it's a file or directory, by calling  on it.Or, even better, use  instead of , which gives you entries with more information than just the name, so you don't need to make extra calls like .Or, best of all, just throw out this code and use  to recursively visit every file in every directory underneath your top-level directory.


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.isdir
https://docs.python.org/3/library/os.html#os.scandir
https://docs.python.org/3/library/os.html#os.walk
