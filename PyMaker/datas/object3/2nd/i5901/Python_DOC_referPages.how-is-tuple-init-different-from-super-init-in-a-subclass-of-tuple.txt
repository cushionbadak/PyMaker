Natural Text
Please see the following code:The output is:The docs say  that  will:Return a proxy object that delegates method calls to a parent or sibling class of typeIIUC here  is the same as . Now the docs further say thatThe search order is same as that used by  except that the type itself is skipped. The  attribute of the type lists the method resolution search order used by both  and .Ohkay but then:So the  line should first look within  to find  and tuple's  can certainly take one parameter (other than  of course) and is what is being called by the explicit  line. So why doesn't the  call work identical to that? Why is it trying to invoke  and failing?IIUC one should only need to explicitly specify the superclass when one is worried that the inheritance hierarchy can change in a "dynamic execution environment" (phrase from the docs) and wants the method of a particular superclass to be called. But this error effectively makes it mandatory for the superclass to be specified. Why?NOTE: This is different from another similarly titled question.
If you call  it returns  because  has no custom  method and only inherits it from . The first argument for  is  and what  does is nothing. So when you pass in  it's interpreted as  and doesn't throw an Exception. However it probably doesn't do what you think it does because  is responsible for setting up a new tuple instance.If you use  it also resolves to  but it already binds the current "self" as first argument. So when you pass  to this function it's interpreted as additional argument which doesn't exist for  and therefore throws that Error.


Answer URL
https://docs.python.org/3/library/functions.html#super
