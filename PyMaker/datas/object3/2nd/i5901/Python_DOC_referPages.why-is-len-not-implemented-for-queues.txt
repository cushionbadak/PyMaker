Natural Text
The built-in function  (https://docs.python.org/3/library/functions.html#len) returns "the length (the number of items) of an object", but this is not implemented for  (https://docs.python.org/3/library/queue.html).Instead,  has a  method which returns the approximate size of a queue, when it clearly has a length; you can specify the maximum length of a  in the constructor. The similar  does work with .What are the reasons for not using the common  for ? Or: What would be the problems if  were instead named  to enable the  function?
 isn't implemented for  because it would be an "attractive nuisance":  something that only an expert should even consider using, but a "friendly name" would encourage non-experts to use it.Unlike most sequence types (like  and ), a  is specifically intended to be used in multi-threaded contexts (and similarly for the  module's queue type).  While the number of items in a  certainly has a definite value at any particular time, it's impossible for user code to find out what that value is:  between the time a call to  returns and your code can look at the returned value, any number of other threads (or processes, in the  case) may have made any number of changes to the queue's contents.So the only true thing that can be said about the value returned by  is that the  had that many values in it at some time in the past.  By the time you can use the returned value, it may have arbitrarily more (or fewer) values in it.Of course that's not so if you're only running one thread - but then there's no need to pay for the implementation complexity of a  (use a  or a  instead).


Answer URL
https://docs.python.org/3/library/functions.html#len
https://docs.python.org/3/library/queue.html
