Natural Text
I've been stuck on this for a while and I keep running into problems, I'm trying to create a function that returns true if at least one pair of adjacent elements in a list are equal.Test cases:[1, 2, 3] -> False[1, 2, 2, 3] -> True[2, 6, 3, 6] -> False['a', 'b', 'c', 'd', 'd'] -> TrueThe problems I run into are assertion errors and I believe it's because of my loop. Once I find a pair that is equal the returned value won't stay the same because my loops will evaluate the next values in the list. So I just need to find at least one pair, I don't know how I would do that though.
You can  the list with itself offest by  and use  to short-cut the find-one pattern:
I made few changes. It should work now.or, shorter one using ,
There are two problems here:the indices can run into overflow here;you immediately return  from the moment there are two consecutive elements that are not equal, you should return  after the  loop.The index problem here is that  ranges from  to (excluding) . So that means  ranges from  (which is the last element of the list) to  and  from  to  (including). But the list is not that long, so you get an index out of the list bounds, which is an error.A more Pythonic approach however is to use a  over the list , and the "tail" of the list (the list omitting the first element). So .We can iterate over every pair  of  and . In case , then we have such element and return .In case we fail to find such pair, we eventually return `False.So a correct implementation is:Python however has a builtin , that will return  from the moment the iterable we give it contains at least one ; and  if no element has truthiness .So we can convert the above code to something using the  builtin:
I'm kinda new to python but anyways hoped this is easy enough


Answer URL
https://docs.python.org/3/library/functions.html#any
