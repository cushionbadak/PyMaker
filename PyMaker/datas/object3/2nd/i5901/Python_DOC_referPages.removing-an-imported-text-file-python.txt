Natural Text
I'm trying to remove a couple of lines from a text file that I imported from my Kindle. The text looks like:The complete file is longer, this is just a piece of document. The aim with my code is to remove all lines where "loc. " is written so that just the extracts remain. My target can be also seen as removing the line which is just before the blank line.My code so far look like this:The last  finds exactly the position (indices) where each "loc. " is located in file. Nevertheless, after this stage I do not know how to go back in the line so that the code catches where the line starts, and it can be completely remove. What could I do next? Do you recommend me another way to remove this line?Thanks in advance!
I think that the question might be a bit misleading!Anyway, if you simply want to remove those lines, you need to check whether they contain the "loc." substring. Probably the easiest way is to use the in operator.Instead of getting whole file from read() function, read the file line by line (using the readlines() function for example). You can then check if it contains your key and omit it if it does.Since the result is now list of strings, you might want to merge it: str.join().Here I used another list to store desired lines, you can also use "more pythonic" filter() or list comprehension (example in similar question I mentioned below).By the way, I thought it might be a duplicate - Here's question about the opposite (that is wanting lines which contain the key).


Answer URL
https://docs.python.org/3/reference/expressions.html#membership-test-details
https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects
