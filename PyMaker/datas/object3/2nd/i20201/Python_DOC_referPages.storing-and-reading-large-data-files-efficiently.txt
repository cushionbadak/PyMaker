Natural Text
I am working on a project where I have large input files which come from numerical solutions of pdes. The format of the data is as follows.For each value of y, we have several values of x, and the function value evaluated at each point. The size of the data I'm dealing with is about  in steps of  in each dimension, so the raw data file is pretty big (about  entries). Reading it into memory is also pretty time-taking because the tools I'm working on have to read multiple raw data files of this type at the same time.I'm using Python.Is there any way to store and read data like this efficiently in Python? The idea is to include a tool that massages these raw data files into something that can be read more efficiently. I'm currently working on interpolating the data and storing some coefficients (essentially replacing memory by computing time), but I'm sure there must be an easier way that helps both memory and time.Thanks SOCommunity!PS: I saw related questions in Java. I'm working entirely on Python here.
If you're using numpy (and you probably should be), / and  should be able to handle this pretty easily.For example:is quite quick, and the resulting file is less than 5mb.
Is there any way to store and read data like this efficiently in Python?If you don't need to keep it in memory all the time, I would suggest migrating the data to an Sqlite database. This would also allow you making SQL queries on the data.


Answer URL
https://docs.python.org/3/library/sqlite3.html
