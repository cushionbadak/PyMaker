Natural Text
In Python, it is tedious to write:Can I do something like this in Python?
Python 3.6+ does have variable interpolation - prepend an  to your string:For versions of Python below this (Python 2 - 3.5) you can use  to pass in variables:
Python 3.6 will have has literal string interpolation using f-strings:
Python 3.6 has introduced f-strings:Old answer:Since version 3.2 Python has  which together with  or  allows you to do fast:
I have learned the following technique from Python Essential Reference:This is quite useful when we want to refer to many variables in the formatting string:We don't have to repeat all variables in the argument list again: compare it to the explicit keyword argument-based approaches (such as  and ).We don't have to check one by one if the order of variables in the argument list is consistent with their order in the formatting string: compare it to the positional argument-based approaches (such as ,  and ).
String formatting
I prefer this approach because you don't have to repeat yourself by referencing the variable twice:
There is a big difference between this in Ruby:And these in Python:In the Ruby example,  is evaluatedIn the Python example,  is just a key to the dictionaryIn the case that you are just using variables the behave more or less the same, but in general, converting Ruby to Python isn't quite so simple
Yes, absolutely. Python, in my opinion, has great support for string formatting, replacements and operators.This might be helpful:http://docs.python.org/library/stdtypes.html#string-formatting-operations
Almost every other answer didn't work for me. Probably it's because I'm on Python3.5. The only thing which worked is:


Answer URL
