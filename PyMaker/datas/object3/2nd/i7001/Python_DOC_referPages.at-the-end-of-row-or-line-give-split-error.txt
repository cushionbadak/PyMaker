Natural Text
I don't have access the the code as it's typed by user. the '\' at the end of \ok\ give me the wrong result. How can i split() correctly ?
The problem is, as was mentioned in the comments, that  in a string literal followed by a newline will escape that newline, so in fact the value of  is alreadyYou can refer to this for some more info on string literals in Python.with no newline between  and . The problem actually doesn't lie with your code at all, but with your sample input. You say you don't have access to the 'code' as the user will modify it - I can only assume you don't mean the user modifies the program to give input. My suggestion for how to take input is to have the user supply a separate file. This way, the string will be interpreted as a stream of characters and that alone, and Python won't try to do any escaping. For simplicity, I have hardcoded the filename, but it would probably also be a good idea eventually to make this flexible (take input from stdin, let the user supply the filename, etc..).The file  contains:The code:As expected, the code ouputsPresumably you want to do some more with the lines, as this just replicated the input.


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
