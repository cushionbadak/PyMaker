Natural Text
I'm playing around with Julia and I'm using Sympy to which I think uses PyCall to call Python.When I run the script below, I get a long error.  It's too long to post all of it here, but here is the start of it:And as you may be able to see, towards the end it repeats: see line 93 on the end, then line 140, then line 93...Here is my code:This routine calculates the length of a continued fraction for the square root of some number.  For the number 6451 it gives the error.So my question is can this be resolved please?
I'm glad the recursionlimit solution was found. This hadn't been seen before. This comment is about how to streamline your SymPy code, as you seem to be confused about that. Basically, you just need to make your initial value symbolic, and then Julia's methods should (in most all cases) take care of the rest. Here is a slight rewrite:using PyCall@pyimport syssys.setrecursionlimit(10000)"""Get the length of the continued fraction for square root of for the number i.E.g. âˆš7=[2;(1,1,1,4)]"""function oddPeriodSquareRoots(n)end
Thanks very much for everyone's input.  I managed to solve this by putting these lines at the top of the file (in addition to the "Using Sympy" line which I had the whole time):This sets the recursion limit in Python.  Not sure why it has to be so large for this to work.I did also remove some of my type conversions etc.  I thought this might help with the error and/or speed.  But it didn't really.Also, removing the line where I declare the variables to by symbols doesn't stop the code from working.  Same in Python.  So not sure what the point of it is.But in Julia, either way I have to have that Sym() wrapper around these 2 lines:By inspecting these types, with the use of typeof, I can see they are symbolic, not floats. Without them, everything turns into floats and so I'm not doing it symbolically.


Answer URL
https://docs.python.org/3/library/sys.html#sys.setrecursionlimit
