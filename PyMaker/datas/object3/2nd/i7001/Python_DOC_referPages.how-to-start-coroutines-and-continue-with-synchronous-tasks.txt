Natural Text
I am trying to understand  and port my undestanding of . I will take the example of two threads running indefinitely and a non-threaded loop (all of them outputting to the console).The  version is I now tried to port this to  based on the documentation.Problem 1: I do not understand how to add the non-threaded task as all examples I saw show an ongoing loop at the end of the program which governs the  threads.I then wanted to have at least the two first threads ( and ) running in parallel (and, worst case, add the third  as a thread as well, abandonning the idea of mixed thread and non-threded operations):Problem 2: The output is a sequence of , suggering that the  coroutine is not called at all. Isn't  supposed to start  and come back to the execution (and then start )?
 stops execution at a point, you do , and you have an infinite loop in , so it's logical  doesn't get called. Think about it as if you insert  in .Consider this example:To achieve what you want you need to create a future which would manage multiple coroutines.  is for that.


Answer URL
https://docs.python.org/3/library/asyncio-task.html#tasks-and-coroutines
