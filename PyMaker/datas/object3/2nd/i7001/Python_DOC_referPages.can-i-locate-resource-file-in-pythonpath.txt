Natural Text
I would like to keep a resource file (which is really anything shared among scripts but not Python itself) in my  so that it can be used by modules that are in that path, which are in turn invoked by different end scripts/apps. Is there a way I can easily reference a resource (Resource.res) file that is located under the PYTHONPATH hierarchy along with actual Python modules that are shared, without supplying the full path to the file? There is equivalent way of getting a resource file from Java's classpath, which is where I'm getting the idea.The contents of the resource file should be irrelevant but just for illustration's sake, it could be anything non-pythonic, such as random data, config, etc.
It's trivial to write a function that does this:This version returns  if the file can't be found on the path. You could also raise an exception.
This is very similar to @kindall's answer, but uses the  environment variable instead of  to determine the directory search list:
You can read arbitrary files from a package using https://docs.python.org/3/library/pkgutil.html#pkgutil.get_dataFor instance, to load a GIF icon from your package:You can vary the package argument to load things from different places.If you're okay of installing a recent  you could use their version of it,  which provides a few more possibilitieshttp://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-accessThese work regardless on how the package is installed (separate files on the filesystem, or as a zip/egg/whatever.


Answer URL
https://docs.python.org/3/library/pkgutil.html#pkgutil.get_data
