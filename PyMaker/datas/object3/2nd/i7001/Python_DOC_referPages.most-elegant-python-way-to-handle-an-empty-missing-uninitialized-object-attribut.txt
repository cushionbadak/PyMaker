Natural Text
form might be None, and admirer_or_model might not exist in form.What is the most elegant way to handle this situation ?
You can use , passing a sentinel value as default:The above will do until Python implements safe navigation.
There's a multitude of possible choices. Which is the most convenient generally depends on how much your code flow is supposed to change if the error occurs.If the flow is obliterated completely - i.e. the function just breaksdon't do anything and it will raise an  in both cases:If the flow changes drastically - i.e. there's some short error handling code that exits the function afterwardsHandle the  - especially if both cases are to be handled the same:check as in the next suggestion, but without an  clause:If the flow changes, but the function still works - i.e. you provide an alternative code block to the "normal" one that then proceeds furthercheck  or  (if a valid  can evaluate to ) and , with  clause containing the alternative block:Handle the error but don't quit - especially if the handling is common for both errors:If the flow doesn't change at all, i.e. you just provide a default valueuse a ternary/other default-providing construct - e.g.  and :Also note that some of these constructs place the error handling block before the  block with  and some - after it. If the  block is large, this can make a difference in readability: an error handling block is best placed close to the line that triggers the error.


Answer URL
https://docs.python.org/3/library/functions.html#getattr
