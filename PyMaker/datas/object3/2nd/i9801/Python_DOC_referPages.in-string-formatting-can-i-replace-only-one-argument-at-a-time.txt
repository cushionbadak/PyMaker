Natural Text
Is there any way I can only replace only the first argument only in string formatting? Like in this:I want the output to be:The second  arg I will replace later.I know I can create a string like: and later combine it with remaining string and create new string, but can I do it in one go?
If you know when you set up the format string that you'll only be replacing a subset of the values, and you want some other set to remain, you can escape the ones you're not going to fill right away by doubling the brackets:
The only way you can replace it in the same line is if you replace  with another bracket. I.e:but that doesn't make much sense because you could've just done:immediately. You could keep the result of:So  has a bracket inside it waiting to get replaced and call  on it later on if you need to. 
You would have to write your own format function that only makes a single replacement. For example, to give you something to start with (note that this is somewhat vulnerable to bad format strings):Used like this:
The correct way to achieve this would probably be to subclass string.Formatter class and use its instance instead of the string method:The following  methods would have to be overwritten: should return some special object instead of raising . should save  argument into this object (or proceed normally if the object is not our special object). should just save  argument into this object and do no conversion (or proceed normally...). should reconstruct field format string from the special object using its  and  attributes and  argument of this method (or proceed normally...).So, for example:should result in , where  is ,  is ,  is  and all these three values were re-combined back into , so that it can be used in the next formatting pass.Additional note: the special object should return itself upon access of any attribute (with ) or item (with ).


Answer URL
https://docs.python.org/3/library/string.html#string.Formatter
