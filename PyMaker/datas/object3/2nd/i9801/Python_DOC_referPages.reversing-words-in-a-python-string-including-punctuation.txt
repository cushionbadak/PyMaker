Natural Text
I wrote a program to reverse the words in a given sentence here:As my input for Sentence I used "to be or not to be that is the question." This returns the following:It's almost exactly what I want, but is there a way that the period could remain at the end of the sentence, so the return would be:Thank you in advance!
It's possible to pass a function as the  argument to , so we can use that to match words and reverse them:The pattern  matches a word boundary, followed by an arbitrary number of non-whitespace characters, followed by a word boundary.The function (a lambda, for brevity) takes  (the complete text of the match) for each match, and reverses it the usual way using slicing.Examples:As you can see, this preserves the position of punctuation immediately before or after words, while maintaining it in the "correct" position inside each reversed word.
Your specifications are still unclear, but if you want only the letters to be reversed within a word, maybe you could try something likewhich gives me
Here comes some ugliness that takes care of this in one line:Where we reverse fully if the last character in a word is not in the punctuation string and if it is we reverse the string up until the punctuation and then add the punctuation to it. prints out:Slimming it down as much as I can because I'm ashamed of it:
Change your method to this:
Output:And this will work for any punctuation in your sentence:


Answer URL
https://docs.python.org/3/library/re.html#re.sub
https://docs.python.org/3/library/re.html#re.match.group
