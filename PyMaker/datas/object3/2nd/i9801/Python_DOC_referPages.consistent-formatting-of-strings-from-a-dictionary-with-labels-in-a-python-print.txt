Natural Text
This question already has an answer here:Python: Format output string, right alignment                    6 answers                Printing Lists as Tabular Data                    12 answers                I have a dictionary that looks something like this:All of the values in this dictionary are subject to change. The numbers can vary widely from single digits to numbers several digits long. I would like to format this information and consistently present it like this:So far, I've been trying to do this by doing this:This produces output that looks like this:While this works well enough if the numbers don't change, if "days_range" is set to a value like "78.91 - 79.91" it will jump further to the right. For example:I also can't say I'm very content with using "\t" to separate the columns, as I am concerned that if the values in the first column are too long this can cause the right column to get pushed further right than desired.Is there an easy and elegant way to do this? I would prefer a solution that does not depend on nonstandard libraries and is relatively straightforward. I'd also like to know an easy way to prepend values with dollar signs without having to modify the values in the dictionary.
You can change it to align to the left and it worked for me (I used  but the way you're doing it with format should also work):As to your second question about prepending the dollar signs, everything except the "Day's Range" should be easy. For "Day's Range" I can't think of an easier way than adding one to the front and splitting the string down  and adding one to the second half.
In Python 3 and newer version, you may do it via  as:which prints:Here,  means that you want the content to be left align from the cursor position you mentioned where as  means right aligned.Here is the result of data you are printing when printed simultaneously:All the coulmns are left aligned.Note: Above sysntax for string formatting is only available from Python 3 and newer. In older versions you have to do it with  as:which prints:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.format
