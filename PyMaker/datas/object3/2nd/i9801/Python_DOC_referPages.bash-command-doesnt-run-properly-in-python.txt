Natural Text
I have the following files in a directoryUsing  filters so that the output isHowever, in a python script, I usedand the output contains both filesWhat am I doing wrong in the python code that causes the script to not filter the ls output correctly?
To expand on IanAuld's comment, I would like to offer you two solutions that solve your problem without relying on calling a subprocess. Using subprocesses is kind of clunky and for finding files, python offers several powerful and more pythonic options.I created a folder named files containing two files with the names you described and a python script in the parent folder:Now there are several options to do this:I would prefer the glob solution for finding files, because it is quite flexible and easy to use. As the name suggests, glob allows you to use glob patterns as you know them from the command line.
Your command isn't  it's .  There's no shell involved to expand your filename pattern , so  gets that as a literal argument, as if you'd entered (in a shell)You have at least these options:Invoke a shell to expand the pattern:Equivalently:This is risky if  isn't guaranteed to be shell-clean.Expand the glob, and pass the results to :You're still using , which is not intended to give parseable output.  Don't do any more than simply passing the output to a user (e.g. in a log file).Expand the glob, and process the results in python:You should do this if you want to examine the file entries in any way.


Answer URL
https://docs.python.org/3/library/glob.html
