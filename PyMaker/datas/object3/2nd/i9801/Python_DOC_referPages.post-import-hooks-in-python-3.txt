Natural Text
I would like to have some callback run whenever a particular module is imported. For example (using a fake  function that does not really exist):This feature was designed in PEP 369: Post import hooks but was withdrawn with the reason:This PEP has been withdrawn by its author, as much of the detailed design is no longer valid following the migration to importlib in Python 3.3.But importlib has no clear solution. How does one use  to implement a post-import hook?
The  module provides an implementation of this.https://pypi.python.org/pypi/wraptWatch this video about , including this feature:https://www.youtube.com/watch?v=u7oj-ghfhUkDon't think the documentation for  mentions it yet.Some of the blogs posts at end of:http://blog.dscpl.com.au/p/decorators-and-monkey-patching.htmltalk about it though.There is a companion module for  called  which allows you to do monkey patching using this mechanism without needing to change the application code itself to trigger it.https://pypi.python.org/pypi/autowrapt
I would be shocked to find out that this is the best way to do this ... However, since early python2.x versions, monkey patching  has been supported.  We can take advantage of that here:This answer makes a super simple registry for registering callbacks.  The decorator just registers the function and then returns it.  It doesn't do any fancy checking (for whether the module is already loaded, for example), but could easily be extended to do that.Obviously the downside is if some other module decides to monkey patch , then you're out of luck -- Either this module or the other one is likely to end up broken.I've tested this and it seems to work on both python2.x and python3.x.
Does this work?


Answer URL
https://docs.python.org/3/library/importlib.html
