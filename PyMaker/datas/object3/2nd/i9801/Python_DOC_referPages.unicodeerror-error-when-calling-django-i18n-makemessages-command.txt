Natural Text
I'm working with Django's internationalisation features to generate translation strings for a webapp. A problem is arising where I try and call , and the existing language  file contains a special character (such as , , etc). Where one of these exists, makemessages tries to load the existing  file and to decode it. When it does this, I get an error:I've tried to dig back through the traceback here, but I'm at a loss as to what's happening. It seems as though Django tries to decode the existing  file as , but then when re-encoding it, it's using an  codec. Any insights as to what's wrong would be massively appreciated.Edit:OS: Ubuntu 15.10 and OS X 10.11.6Python: 2.7.10 and 2.7.11Django: 1.8.14Six: 1.10.0I've tried reinstalling Django/Six as suggested, but the error is still there.Ubuntu's :Content-type of the problematic translation file:
Note this is a different exception location from this similar question mentioned in the comments.It seems to me the only way this can happen is if there's been a modification to your django install or there's a bug in the python 2.7 version.Your stack is: (on django 1.8, which is what I think you're using, can you confirm?) and  which creates  (after removing comments/docstrings and reindenting for clarity, see popen_wrapper and gettext_popen_wrapper on github for the unadulterated code):So  should be a plain  object (i.e. a bunch of bytes needing decoding) by the time we call . However, if that were the case then why is the exception in encoding? We would only need to encode if the object already was a unicode object, i.e. if it was of type . And sure enough, if we add the linebefore Then now the  method first attempts to  the unicode , using the default encoding of ascii, which causes the exception you've seen. I also got the same error by setting  to , which caused the  line to happen as well (which produces a unicode as well), but that shouldn't be  because you're on python 2 not 3.So I think either:You've got a bad install of  or , or it's been edited. Try reinstalling them.You've hit a bug in  and for some reason it's returning a  not a  (I believe in python 3 that is possible if  are turned on. You may get mileage by reinstalling python or upgrading to a later version.My main point though is that I don't think it's an environment issue. It would be interesting to know for any follow-ups:what platform you're onwhat python 2.7 you're usingwhat django you're using.
At the following line, somehow,  is not byte  but its  and you are getting exception during implicit encoding of that .That's because of the fact that  should be performed on byte  and when we try calling  on , in python 2.7, there will be an implicit call to  with that  before the , and this call to  will be using default  which is  in python. So, start investigation with what's causing stdout to be .Thanks.


Answer URL
https://docs.python.org/3/library/subprocess.html#frequently-used-arguments
