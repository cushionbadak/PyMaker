Natural Text
This question already has an answer here:Longest increasing unique subsequence                    1 answer                I have a sequence of values [1,2,3,4,1,5,1,6,7], and I have to find the longest subsequence of increasing length. However, the function needs to stop counting once it reaches a number lower than the previous one. The answer in this sequence in that case is [1,2,3,4]. As it has 4 values before being reset. How would I write the Python code for this?Note: Finding the "longest increasing subsequence" seems to be a common challenge and so searching online I find a lot of solutions that would count for the entire length of the sequence, and return a subsequence of increasing values, ignoring any decrease, so in this case it would return [1,2,3,4,5,6,7]. That is not what I'm looking for. It needs to count each subsequence, and reset the count upon reaching a number lower than the previous one. It then needs to compare all the subsequences counted, and return the longest one.Thanks in advance.
Consider a function that generates all possible ascending subsequences, you would start with an empty list, add items until one element was less (or equal to?) the the previous at which point you save () the subsequence and restart with a new subsequence.  One implementation using a generator could be this:two notes about the handling of empty sequences:To finish a generator a  needs to beraised so we could just let the one from  propegate out - however when  is ineffect it would cause a  so to be future compatible weneed to catch it and explicitly .As I've written it passing an empty list to would generate no values, which may notbe the desired behaviour.  Feel free to uncomment the  togenerate an empty list when passed an empty list.Then you can just get the longest by calling  on the result with 
A somewhat sloppy algorithm, but I believe it does what you want. Usually i would not have simply shown you code, but I suspect that is what you wanted, and I hope you can learn from it, and create your own from what you learn.a slightly better looking way because I didn't like that:
You need to do the following:Create a function  that given a list, returns the index of the last item which is not strictly increasing from the start of the list.For example, given the following lists: , it should return , , , respectively for each listCreate a variable  and set the value to Repeatedly do the following until your list is emptyCall your function  on your list, and let's call the return value if  is greater than set  to At this point if you wish to store this sequence, you can use the list-slice notation to get that portion of your list which contains the sequence.delete that portion of your list from the listFinally, print  and if you were storing the parts of your list containing the longest sequence, then print the last one you got


Answer URL
https://docs.python.org/3/library/functions.html#max
