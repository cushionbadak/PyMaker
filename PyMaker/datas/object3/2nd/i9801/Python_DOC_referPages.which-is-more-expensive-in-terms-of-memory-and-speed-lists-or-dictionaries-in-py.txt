Natural Text
I am testing memoization code on my computer. I have arrays of range 100000. With the following code.Using memoization technique, the following code would be,From my understanding of code, the memoization though memory optimized starts running at low speeds. Do I understand memoization correctly as avoiding recalculation by storing calculated values? If that is correct, why do larger calculations slow down in spite of that fact that the calculated values are readily available?Which is the best way to optimize memory and speed using memoization?
You don't need to call  - you can simply use . I believe that should be faster, since it uses hashing.  returns a list, for which lookups are slower.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
