Natural Text
How do I sum the values of list to the power of their indices in ?Example:The idea is to create a unique index for any possible combination of non-negative numbers in the list. This way, I can use the list to compute an index of something.Edit: while the question has been answered, I just realized that the method does not create a unique index for any combination of non-negative integers in the list. To do so, assuming  is the number of possible integers, and based in the accepted answer,The idea is that each number will increase the index by an amount exponentially proportional to its position in the list. Assuming  (from  to ), the above example becomesWhere the indices would range from  to .
Use  to get the index and supply that to :Specifying the  argument to  as  assures indices will start from  (as you want) and not from  (the default which you get with a plain ):In a functional spirit, you could also utilize  with  from itertools passing in  as the function to be mapped:These pretty much execute in approximately the same time; the generator expression to  though offers a slight advantage of flexibility.
You can do this with numpy, which is often faster than iterating through lists:


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/functions.html#sum
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/itertools.html#itertools.count
https://docs.python.org/3/library/itertools.html
https://docs.python.org/3/library/functions.html#pow
