Natural Text
So for exampleShould return:How can I write code so there is order instead of those three pairs just being in random order?I need to sort the list of tuples by count from biggest to smallest unless there are ties, then I need to sort the times alphabetically.
This works:The counter's items will give you tuples of .  Normally you'd use  to get the items in order of their counts, but as far as I can tell, it only sorts by count and disregards any key (name) information in the sorting.Since we have to re-sort again anyway, we might as well use  on the items instead.  Since tuples sort lexicographically, and you want to sort primarily by the count, the key function should return a tuple of the format .  However, since you want this to be decreasing by count, but increasing by name, the only thing we can do is return a tuple of the format .  This way, larger count will result in a lower value so it will sort before values with lower counts.
You can sort your result using  function using the  argument to define how to sort the items:As you want to sort the result in descending order on the count value and then the name in ascending order, so the key  will do the trick.The  will be:
There are two ways to do this. In the first method, a sorted list is returned. In the second method, the list is sorted in-place.


Answer URL
https://docs.python.org/3/library/functions.html#sorted
