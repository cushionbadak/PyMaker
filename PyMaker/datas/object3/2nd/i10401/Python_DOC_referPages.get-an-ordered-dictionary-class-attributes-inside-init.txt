Natural Text
I have the following class:If I instantiate a new object of this class I can obtain a dictionary like this:What if I want  to be ordered in the same way the attributes of  were instantiated in its ?Doing some research I found this, but in my case I would just obtain . Is there a way to point to the attributes inside the ?For completeness sake I should mention that I am using Python 3.4.
You can't do that, because the  attribute called after that the instance has been created (by ) so if you even override the  and use a  method using a metaclass, you can just get an ordered sequence (dict or etc.) of other methods and attributes which are not defined within  method.Also based on this mail:It's just not possible to have something different than a dict as a type's . It's a deliberate limitation and required optimization.But this doesn't mean that you can't get a list of ordered attributes of your class. Since every attribute sets by  method you can simply preserve your attributes in an ordered dict by overriding the  method:Output:Also regarding the setting the attributes, based on documentation:If  wants to assign to an instance attribute, it should call the base class method with the same name, for example, .


Answer URL
https://docs.python.org/3/reference/datamodel.html#creating-the-class-object
https://docs.python.org/3/reference/datamodel.html#object.__setattr__
