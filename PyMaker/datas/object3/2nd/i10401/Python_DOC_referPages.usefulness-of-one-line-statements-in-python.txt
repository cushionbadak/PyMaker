Natural Text
Is using one line loops, even nested loops always a good practice in Python? I see a lot of people just  love "one-liners", but to me they're hard to read sometimes, especially if we're talking about nested loops.Moreover most of nested loops I've seen so far exceed the recommended 79 characters per line.So I'd like to know if "one-liners" offer anything extra apart being compact? Do they use less memory maybe?
Yes, they may be easily faster, since more code may be run in C (in explicit loop all of immediate steps has to be available to interpreter, in one-liner list comprehension it does not have to). There is also overhead of  method call, method look-up etc. In list comprehension all of that is avoided:Results (Python 3):
Depends on the one-liner, some can be much more efficient and very readable.Take the case of list comprehension. Lets say you want to take all numbers from 1 to 10 and output a list of their product multiplied by 2.Input: Output: You can do it in a for loop like so:Or you can just use list comprehension:You'll see the list comprehension is MUCH faster, and also quite readable.The same can be said for dict comprehension, set comprehension and generator expressions. Also the use of  and  are highly encouraged as long as it's understandable.
For discussion... they all do the same.'a'  a list comprehension... the smoking one-liner...'b'  same thing, but you can provide annotation within a list comprehension... it is still technically a one-liner'c'  the conventional approach.If speed is a concern, I am less worried about the speed unless, I perform the same task day in day out and it takes a really long time to perform.  Comparing speed when you are talking micro or nanoseconds may be of academic interest, but it will not impact the vast majority of users.I always vote for clarity of expression over compactness of code.EDITThe example given of producing the product of a range of numbers, is a good indicator, that the oneliner need not be the issue, but the method used to obtain the result.  I will illustrate with determining the product using only 10 values... try it with 100 if you like.  I will do it in full format, but could reduce everything to a oneliner if need (import excluded).or as a one-linerand of course there are built-in functions to do this without the full expression I have shown.The point being made, speed isn't everything.  Clarity of code AND choosing the right tools to do the job should be considered first.
Yes. This is good practice. Usually experienced programmers use anonymous functions (see, lambda: http://www.secnetix.de/olli/Python/lambda_functions.hawk) in one-line loops and it gives better performance. 


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
