Natural Text
I just learned that I can check if a substring is inside a string using:substring in stringIt looks to me that a string is just a special kind of tuple where its elements are chars. So I wonder if there's a straightforward way to search a slice of a tuple inside a tuple. The elements in the tuple can be of any type.tupleslice in tupleNow my related second question:I gather that I get False because (12, 23) is not an element of tu. But then, why substring in string works?. Is there syntactic sugar hidden behind scenes?.
A string is not just a special kind of tuple. They have many similar properties, in particular, both are iterators, but they are distinct types and each defines the behavior of the  operator differently. See the docs on this here: https://docs.python.org/3/reference/expressions.html#inTo solve your problem of finding whether one tuple is a sub-sequence of another tuple, writing an algorithm like in your answer would be the way to go. Try something like this:
 is not a type of . Infact both belongs to different class. How  statement will be evaluated is based on the  magic function defined within there respective class.Read How do you set up the contains method in python, may be you will find it useful. To know about magic functions in Python, read: A Guide to Python's Magic Methods
This is how I accomplished to do my first request, however, it's not straightforward nor pythonic. I had to iterate the Java way. I wasn't able to make it using "for" loops.
Try just playing around with tuples and splices. In this case its pretty easy because your splice is essentially indexing. Splicing is returning a list of tuples, but you need to index further to compare  by values and not containers. Spliced strings return values, strings and the  operator can compare to values, but splicing tuples returns tuples, which are containers. 
Just adding to Cameron Lee's answer so that it accepts  containing a single integer.


Answer URL
https://docs.python.org/3/reference/expressions.html#in
