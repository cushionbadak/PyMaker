Natural Text
I encounter a surprising behaviour of the side_effect parameter in patch.object where the function replacing the original does not receive This give:If I change the  function to  I get the following output:Is there a way to replace a function from an object and still receive self?
 is only supplied for bound methods (because functions are descriptors). A  object is not such a method, and the  function is not bound, so  is indeed not going to be passed in.If you must have access the instance in a  object, you'll have to patch the function on the class with an actual function:Now  is replaced by the  function on the  class, so it'll be bound:The alternative is to set , at which point  will use a real function to mock out :Also see the Mocking Unbound Methods section in the mock getting started section.


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/library/unittest.mock-examples.html#mocking-unbound-methods
