Natural Text
So this just blew my mind. I am working on a python code where I create a list, append it to a master list and clear the first list to add some more elements to it. When I clear the first list, even the master list gets cleared. I worked on a lot of list appends and clears but never observed this.I know this happens with appending dictionaries but I did not know how to deal with lists. Can some one please elaborate?I am using Python2.7
Passing a  to a method like  is just passing a reference to the same  referred to by , so that's what gets appended to . They're still the same , just referenced from two different places.If you want to cut the tie between them, either:Insert a copy of , not  itself, e.g. , orReplace  with a fresh  after ing instead of clearing in place, changing  to Note: It's a little unclear, but if you want the contents of  to be added to  (so  should become  not  with the values in the nested ), you'd want to call , not , and in that case, no shallow copies are needed; the values from  at that time would be individually ed, and no further tie would exist between  and  (since the values are immutable s; if they were mutable, say, nested s, s, etc., you'd need to copy them to completely sever the tie, e.g. with  for complex nested structure).
So basically here is what the code is doing:Before deleteAfter deletingIn short, both lists names are pointing to the same list object.code visualization source


Answer URL
https://docs.python.org/3/library/copy.html#copy.deepcopy
