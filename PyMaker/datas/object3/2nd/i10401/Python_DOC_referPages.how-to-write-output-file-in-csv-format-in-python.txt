Natural Text
I tried to write output file as a CSV file but getting either an error or not the expected result. I am using Python 3.5.2 and 2.7 also.Getting error in Python 3.5:and In Python 2.7, I am getting all column result in one column. Expected Result:An output file same format as the input file.Code:If I am using , I get one row extra in the output file. If I am using above code, getting one row and column extra.
Others have answered that you should open the output file in text mode when using Python 3, i.e.But you also need to parse the incoming CSV data. As it is your code reads each line of the input CSV file as a single string. Then, without splitting that line into its constituent fields, it passes the string to the CSV writer. As a result, the  will treat the string as a sequence and output each character , including any terminating new line character, as a separate field. For example, if your input CSV file contains:Your output file would be written like this:You should change the  loop to this:Now the input CSV file will be parsed into fields and  will contain a list of strings - one for each field. For the previous example,  would be:And when that list is passed to the  the output to the file will be:Putting all of that together you get this code:
On Python 3,  requires that you open the file in text mode, not binary mode. Drop the  from your file mode. You should really use  too:Better still, use the file object as a context manager to ensure it is closed automatically:I've also stripped the lines from  (just to remove the newline) and put the line in a list;  wants a sequence with columns, not a single string.Quoting the  documentation:If csvfile is a file object, it should be opened with  [1]. [...] All other non-string data are stringified with  before being written.[1] If  is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use  linendings on write an extra  will be added. It should always be safe to specify , since the csv module does its own (universal) newline handling.
open file without b modeb mode open your file as binaryyou can open file as w
You are opening the input file in normal read mode but the output file is opened in binary mode, correct wayAs shown above if you replace "wb" with "w" it will work.


Answer URL
https://docs.python.org/3/library/csv.html#csv.writer
https://docs.python.org/3/glossary.html#term-universal-newlines
