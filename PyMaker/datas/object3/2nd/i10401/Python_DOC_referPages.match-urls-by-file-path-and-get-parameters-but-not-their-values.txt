Natural Text
How can I check if any of my list of URLs match the given ? I need URLs to match only if all GET parameter names (not their values) and the path are the same. For example, I have this list:This example is  because  matches . But how to match it in the most efficient way? I don't know what  will looks like.
You ideally want to use python's urlparse library.Parse your url like so:Then you create a datastructure which looks something like this:And then all your pages to it like so:This stores all your pages in the form:  in a set.To look up if you've already visited the page, with those exact parameters, simply create the  structure again and look it up in the set.Look up and addition to a set is an  operation, that is, it is as fast as you can get.
Python's standard library comes with a package for parsing urls: .  Don't try to write your own regexes for this... especially if you haven't considered all the weird things that are legal parts of a URL.I suggest something like below.   is the question you want answered.  It calls  to break the URl into the file path and a set of query parameters.   calls  to build the set of parameter names.One assumption this code makes is that your URLs are already UTF-8 strings with correctly percent-encoded query strings.  If not, you might need to use  or  before feeding them to .
I think split is your friend )First compare  with Then if true - split your vars with . I think there exists more optimal way, i'm only a newbee, but this way will works.
I think that  (if you are using Python 3) will help you, or  for Python 2.This function will break the URL up into its various components. Then you can compare all components, or a subset of them as you require. Example (Python 3)The last example shows that the order of parameters in the query string affects the comparison. You can account for that by using :You can use the  attribute of the  to compare "pages".As I said, I think that will help you, however, I don't fully understand exactly what you are trying to do.


Answer URL
https://docs.python.org/3/library/urllib.parse.html
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_from_bytes
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse
https://docs.python.org/3/library/urllib.parse.html
https://docs.python.org/3/library/
https://docs.python.org/3/library/functions.html
