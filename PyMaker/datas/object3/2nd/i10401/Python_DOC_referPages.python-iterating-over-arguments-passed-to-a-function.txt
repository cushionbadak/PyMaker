Natural Text
Suppose I have the following example:I wish to reduce the n-number of attribute assignment lines in  to one assignment line set using a  cycle through the arguments. Is there a good way to cycle through said arguments for this purpose?I wish to retain the defined parameter names so as to limit the number of parameters passed to the function as well as the order in which they are passed. I also understand that functions can be handled like objects; so is it possible to obtain a list of the defined parameters as an attribute of the function and iterate through that?
Use  and you can get all the arguments (and any other local variables):Might be possible to do it more efficiently, and you could inline argdict if you prefer less lines to readability or find it more readable that way.
So you don't have to actually name the arguments explicitly use:
The  attribute only assigns one attribute at a time, if you want to assign multiple attribute, you can use  in your function header and for limiting the number of arguments you can simply check the length of  within your function. and call the  for each each of the arguments one by one. One good reason for this recipe is that basically assigning attribute to an object without considering anything is not a correct and desirable job, due to a lot of reasons. Thus you have to assign each attribute one at a time by considering all the required conditions.You can also do this manually by updating the instance dictionary but you should handle the exceptions too. By using  it will take care of the exception automatically:


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__setattr__
https://docs.python.org/3/reference/datamodel.html#objects-values-and-types
