Natural Text
If I have a function , how can I remove the first  items in a Python list that match that condition?One solution is to iterate over each item, mark it for deletion (e.g., by setting it to ), and then filter the list with a comprehension. This requires iterating over the list twice and mutates the data.  Is there a more idiomatic or efficient way to do this?
One way using  and :Then , gives you:
Write a generator that takes the iterable, a condition, and an amount to drop.  Iterate over the data and yield items that don't meet the condition.  If the condition is met, increment a counter and don't yield the value.  Always yield items once the counter reaches the amount you want to drop.This does not require an extra copy of the list, only iterates over the list once, and only calls the condition once for each item.  Unless you actually want to see the whole list, leave off the  call on the result and iterate over the returned generator directly.
The accepted answer was a little too magical for my liking.  Here's one where the flow is hopefully a bit clearer to follow:It's similar to logic in davidism answer, but instead of checking the drop count is exceeded on every step, we just short-circuit the rest of the loop.Note: If you don't have  available, just replace it with another for loop over the remaining items in .  
If mutation is required:
Straightforward Python:This can easily be turned into a generator if desired:
Using list comprehensions:This will also stop checking the condition after n elements are found thanks to boolean short-circuiting.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.filterfalse
https://docs.python.org/3/library/itertools.html#itertools.count
https://docs.python.org/3/whatsnew/3.3.html
