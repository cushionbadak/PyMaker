Natural Text
I have a pattern that matches for multiple key/value pairs, and the key/value strings can be delimited by any characters, then the groups of key/value can also be delimited, just not by the same character.I figured out how to allow dynamic delimiters, and restrict the same delimiter from being used twice. EG:You can view the regex101.com example here. And it works great, the problem comes when using either of the two named groups in a positive look-behind.Lets say the string isThe "key/value delimiter" (named group: ) is the , then the "group delimiter" (named group: ) is the What im trying to do is dynamically match the  and , then in a look-around statement, look for , or .If I hard-code the delimiters (in the look-around), you can see it works. But if I try to reference the named-group  within the look-around statement, you can see it throws errors. I get the error:Subpattern references are not allowed within a lookbehind assertionWhich is whats kickin my buttAnybody have a way to make this work?Thanks!
Summing up what has already been said: the point is that the length of the pattern is unknown when you put backreferences into a lookbehind that must be fixed-width at design time. The newer PyPi  module has no limitations regarding the lookbehind length, so, the current workaround is to use this module with your regex:


Answer URL
https://docs.python.org/3/library/re.html#regular-expression-syntax
https://docs.python.org/3/library/re.html#regular-expression-syntax
