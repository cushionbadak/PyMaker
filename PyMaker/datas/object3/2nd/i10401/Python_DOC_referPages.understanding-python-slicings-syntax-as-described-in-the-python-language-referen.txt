Natural Text
The following is the slicings syntax that I copied from The Python Language Reference:Per my understanding, this syntax equates to  which again equates to something like  and . But, I can't test this in IPython and I did not find any questions about multiple slicings. Is my interpretation about multiple slicing in python correct? What am I doing incorrectly?
A  should contain as many "dimensions" as the object being indexed. The multi-dimensional capability is not used by any Python library object that I am aware of, but you can test it easily with :There are a number of such features in the Python language that are not used directly in the main library. The  magic method ( operator) is another example.
That's valid syntax, so you didn't get a SyntaxError. It's just not a meaningful or supported operation on Python lists. Similarly,  isn't a SyntaxError,  isn't a SyntaxError, and  isn't a SyntaxError.You can't just expect all syntactically valid expressions to be meaningful.
Note that the grammar is structured this way to allow two things:A family of  literals:There are a few other patterns possible (, , etc), but eachis a variation on one of the above.Slice literals may only be used inside , not in any arbitrary expression.Otherwise, the comma-separate list is treated like any other tuple. When you write an expression like , then  receives a tuple  as its argument. What  does with that argument is entirely up to 's implementation of . For instance, lists and strings only accept  and  values as arguments, and dicts only accept hashable values.
This isn't a syntax issue hence no , this syntax is totally supported. 's just don't know what to do with your slices. Take for example a dummy class that does nothing but define  that receives the contents of subscriptions :It just prints its . We can supply slices, as permitted by the grammar, but, it's up to the implementing object to decide if these are an operation that's supported and act on them (like s do) or not (and raise a ):Heck:By reading further on in the reference for slicings you should see that:The semantics for a slicing are as follows. The primary is indexed (using the same  method as normal subscription) with a key that is constructed from the slice list, as follows. If the slice list contains at least one comma, the key is a tuple containing the conversion of the slice items; otherwise, the conversion of the lone slice item is the key. (emphasis mine)


Answer URL
https://docs.python.org/3/reference/expressions.html#slicings
https://docs.python.org/3/reference/expressions.html#slicings
