Natural Text
I want to convert all the even letters using one function and all the odd numbers  using another function. So, each letter represents 0-25 correspsonding with a-z, so a,c,e,g,i,k,m,o,q,s,u,w,y are even characters.However, only my even letters are converting correctly. 
This are my two cents on that. What @mgilson is proposing also works of course but not in the way you specified (in the comments). Try to debug your code in your head after writing it.. Go through the for loop and perform 1-2 iterations to see whether the variables take the values you intended them to.  is never reassigned a value. It is always 0. And, yes  would make it change but not in the way you want it to..Also, i would not use  because  and not  therefore odd instead of even.
You never change  in your loop -- So it starts at  and stays at  which means that each  will be treated as "even".Based on your update, you actually want to check if the character is odd or even based on it's "index" in the english alphabet.  Having some sort of mapping of characters to numbers is helpful here.  You could build it yourself:OR we can use the builtin  noticing that  produces an odd result,  is even, etc.
Your basic approach is to re-encrypt a letter each time you see it. With only 26 possible characters to encrypt, it is probably worth pre-encrypting them, then just performing a lookup for each character in the plain text. While doing that, you don't need to compute the position of each character, because you know you are alternating between even and odd the entire time.You can also use  to simplify the alternation for you.
Since your notion of even letter is based on the position of a character in the alphabet, you could use , like this:Note that  and  are both odd, so that would make  go in the  part. If you want the opposite, then just negate the condition:


Answer URL
https://docs.python.org/3/library/functions.html?highlight=ord#ord
