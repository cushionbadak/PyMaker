Natural Text
I have two lists, which contains list elements, e.g:The structure of the sub-list elements is just an example. It can also happen that all the sub-list elements contains strings  or a mixture of string and numbers . However, the sub-list structure is always the same (in both lists).How can I get the intersection of lists elements which are identical in both lists?
If my understanding is correct, you can get the intersection by checking and selecting  of the elements in the smallest list which are equal to ones in the larger one.With a comprehension, this would look like this:This uses,  and  with a key assigned to  to always select from the smaller list and check against the larger one.This yields:This comprehension can be trimmed down if you pre-assign the min-max lists or, of course, if you are always certain which list is larger than the other:
A simple solution, which would be independent of the structure of your data.You can generate signature hashes (using json or pformat) for your data, and find common hashes in both list1 and list2.Demo : http://ideone.com/5i9cs8 If your dictionaries have data which does not support json serialization e.g. datetime, pformat will work well, or you can use cPickle,  will also work for simple cases. You can make the choice based on your dataset and efficiency required.


Answer URL
https://docs.python.org/3/library/functions.html#any
https://docs.python.org/3/library/functions.html#min
https://docs.python.org/3/library/functions.html#max
https://docs.python.org/3/library/functions.html#len
