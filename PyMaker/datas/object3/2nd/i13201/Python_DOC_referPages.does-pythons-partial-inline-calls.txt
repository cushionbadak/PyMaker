Natural Text
So would this :and this :be equivalent ? If not why ?
Here's my experiment with cProfile to see if I can confirm @yuvi's measurements above.CODE: OUTFirstly it looks like these measurements on my machine tally with @yuvi's numbers: is about 540 nanoseconds is about 350 nanosecondsSo I agree  looks faster by about 200 ns.It looks like if you're trying to compare  and  it's not a fair test -  has one less call since it doesn't call , whereas  does.To illustrate why,  could be rewritten as:... so  is just a  that contains a single  whereas  is a partial that contains both  and  calls.Therefore they are not equivalent and  is slower as a result.WHY?The question is "why  is not inlined - what prohibits the language from inlining it?"Firstly, this Python itself does not prohibit this kind of inlining - it's the different Python implementations that makes the decisions, in the case of my tests above it's cpython 3.Secondly, 's job is not to inline functions, it just...“freezes” some portion of a function’s arguments and/or keywords resulting in a new object with a simplified signature (doc)Instead if you're looking at something that will do inlining in Python, then I'd check out something like Numba's jit or run some experiments with PyPy (please post back here if you find some interesting improvements).If you're not able to find anything that'll do the inlining you're looking for, then maybe it's a good case for a new Python module!


Answer URL
https://docs.python.org/3/library/functools.html#functools.partial
