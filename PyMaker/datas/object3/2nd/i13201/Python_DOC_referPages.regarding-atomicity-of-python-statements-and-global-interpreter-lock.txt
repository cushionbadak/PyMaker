Natural Text
I read somewhere that indexing a list e.g. l[3] is an atomic operation. Is the atomicity achieved because of global interpreter lock.
Yes, indexing should be atomic, as long as you do it on a native list, and not one where someone could have redirected ; however, that's an implementation detail, and you can't rely on it.No, it's not solely because of the GIL, but because switching between threads is only allowed between single interpreter instructions, and indexing is such a single instruction, but only in CPython. Takeaway: Do not rely on atomicity in a high level scripting language such as python; if you need barriers, then use semaphores or explicitly atomic data types.


Answer URL
https://docs.python.org/3/faq/library.html#what-kinds-of-global-value-mutation-are-thread-safe
