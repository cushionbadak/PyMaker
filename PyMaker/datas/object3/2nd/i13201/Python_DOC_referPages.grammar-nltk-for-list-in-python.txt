Natural Text
I have to create a grammar  for a  in . I have this grammar for a text: Now, how can I do the same for a ? I need to test legal and illegal  with a basic grammar. I didn't find any intel about a  and lists and I don't really understand how can I do that...
Notice that the following code line already creates a list (of strings).You have also created a recursive descent parser for your grammar using the following line.  Note that you only need to do this once.Now, if you want to test a different list of tokens, simply do something like this:
You have a parser that can be applied to lists of tokens. You have a collection of test materials in different formats. Quoting from your comment: "empty list, list with one token, list with several tokens, list with numbers, tuple, and dictionnary." The parser can handle "sequences" of strings, which in your case means a list or tuple whose elements are strings (and each string is a word). The parser cannot handle anything else; if your code has to deal with other types, write python code to check their type before the parser sees them. You'll be interested in the built-in functions  (preferred) and . E.g.,


Answer URL
https://docs.python.org/3/library/functions.html#isinstance
https://docs.python.org/3/library/functions.html#type
