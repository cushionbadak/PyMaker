Natural Text
I've got an extension module that needs to support Python 2 and Python 3.  When it loads, I want to do something like  so that if anyone tries to do this:it will fail, but if they do this:it will succeed.  I've tried a number of things, including  of the from future statement.  like this:and I've also tried calling  like this:where  is a  representing the list Neither of these works.  Is it possible to make this work?
PyRun_SimpleString doesn't have anywhere to specify compiler flags, but there's a whole host of related functions with more options available. For example,  does what  does, but with a  argument to specify compiler flags.  statements executed with  can modify the , and the change will be seen by other calls using the same .You can initialize  with future statements, or with the C-level flag definitions. Most of the possible flags aren't listed in the C-api documentation (since the C-api documentation kind of sucks), but you can find them in the  module or in several parts of the Python source code.For example, you could run a string under the effects of  withIf you want to save the effects of user-executed future statements, you'd save the PyCompilerFlags struct somewhere and use the same one for all calls.With that said, I don't think automatically applying  is the right thing to do. It'll surprise people expecting the default behavior of whatever interpreter they're on. Also,  might be useful for letting the user input multi-line Python statements.


Answer URL
https://docs.python.org/3/c-api/veryhigh.html
