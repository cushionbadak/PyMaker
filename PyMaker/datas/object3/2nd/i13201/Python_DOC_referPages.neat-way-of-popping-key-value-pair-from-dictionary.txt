Natural Text
 is a great little function that, when used on dictionaries (given a known key) removes the item with that key from the dictionary and also returns the corresponding value. But what if I want the key as well?Obviously, in simple cases I could probably just do something like this:But if, say, I wanted to pop the key-value pair with the lowest value, following the above idea I would have to do this...... which is hideous as I have to do the operation twice (obviously I could store the output from  in a variable, but I'm still not completely happy with that). So my question is: Is there an elegant way to do this? Am I missing an obvious trick here?
You can define yourself dictionary object using python ABCs which provides the infrastructure for defining abstract base classes. And then overload the  attribute of python dictionary objects based on your need:Demo:Note : As @chepner suggested in comment as a better choice you can override , which already returns a key/value pair.
A heap supports the pop-min operation you describe. You'll need to create a heap from your dictionary first, though.
here is a simpler implementationSo here we create a custom  that pops the item you want and gives out the key-value pair


Answer URL
https://docs.python.org/3/library/abc.html
https://docs.python.org/3/glossary.html#term-abstract-base-class
