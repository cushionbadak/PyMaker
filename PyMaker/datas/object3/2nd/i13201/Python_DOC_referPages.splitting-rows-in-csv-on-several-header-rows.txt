Natural Text
I am very new to python, so please be gentle. I have a .csv file, reported to me in this format, so I cannot do much about it:I am using the csv package in python, so i have:Which, as I understand it, creates the dictionary 'theReader'. How do I subset this dictionary, into several dictionaries, splitting them by the header rows in the original csv file? Is there a simple, elegant, non-loop way to create a list of dictionaries (or even a dictionary of dictionaries, with account IDs as keys)?  Does that make sense?Oh. Please note the header rows are not equivalent, but the header rows will always begin with 'ClientAccountID'.Thanks to @ codie, I am now using the following to split the csv into several dicts, based on using the '\t' delimiter. However, I now get the entire header row as a key, and each other row as a value. How do I further split this up?Thanks to @Benjamin Hodgson below, I have the following:If I print the first item in stringios, I get what I would expect. It looks like a single csv. However, if I print the first item in data, using below, i get something odd:It returns:So it appears it is splitting every character, instead of using the comma delimiter.
If I've understood your question correctly, you have a single CSV file which contains multiple tables. Tables are delimited by header rows which always begin with the string .So the job is to read the CSV file into a list of lists-of-dictionaries. Each entry in the list corresponds to one of the tables in your CSV file.Here's how I'd do it:Break up the single CSV file with multiple tables into multiple files each with a single table. (These files could be in-memory.) Do this by looking for lines which start with .Read each of these files into a list of dictionaries using a .Here's some code to read the file into a list of s. (A  is an in-memory file. It works by wrapping a string up into a file-like interface).If we encounter a line starting with , we put the current  into the list and start writing to a new one. When you've finished, remember to add the last one to the list too.Don't forget (as I did, in an earlier version of this answer) to rewind the  after you've written to it using . Now it's straightforward to loop over the s to get a table of dictionaries.For each file-like object in the list , create a  and read it into a list.It's not too hard to modify this approach if your data is too big to fit into memory. Use generators instead of lists and do the processing line-by-line.
If your data was not comma or tab delimited you could use , you can combine it with  to delimit the headers and rows:Output:If it is tab delimited just change one line:


Answer URL
https://docs.python.org/3/library/io.html#io.StringIO
