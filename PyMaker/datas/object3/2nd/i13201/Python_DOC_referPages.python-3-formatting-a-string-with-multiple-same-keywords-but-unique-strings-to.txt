Natural Text
I'm wondering how to use a list to format multiple of the same keyword in Python 3.4. The way I have it set up is a user can pass in a string that has multiple keywords for names that the program will generate in their place, and the result should be a sentence with the keywords replaced with names.I have already created a method to generate the names based on how many the program sees in the strings the user passes in, but cannot replace them at once because of the nature of the string. Since the string has multiple of the same keyword (for example {name}), I need to be able to replace each one of them with a unique string. Is that possible in Python 3.4?The string the user passes in could beand after the program has generated the names it should beCheers.EDIT: To add, I didn't find anything about using lists or having multiple keywords but unique replacements, so if I have to do it another way than replace it's OK too.
You can use  with the optional  parameter and limit it to only replace one name each time:
You can use the  parameter:
If you have pre-generated a list of items for each replacement based on how many times they occur, you can use  to programmatically pick the next item from the list.  This will have much better performance than , esp. if you have a large dictionary of keywords and and a large text.For example:Output:It seems like you'd want a different variable for different names, however.  Then you can just use  with a dictionary:import reOutput:
If I understand you right, this should work:  Probably the cleanest way to do it
In case the phrase is always well spaced as in the example, you can dowhich produces


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.replace
https://docs.python.org/3/library/re.html#re.sub
