Natural Text
How to match anything except two or more consecutive spaces in a regex? I have a test string like I would like to capture  from string. Basically, this means that we start with any number of spaces, followed by a combination of letters and spaces, but never more than one consecutive space, and then again by any number of spaces. Attempt (in python). This doesn't work because the square brackets need a list, I think. 
You can use this lookahead based regex:RegEx Demo
It would be easier to just use:The function  removes the whitespace from the start and end of a string.
When you want to match everything except X, it's often simpler to split by X instead. In other words: Instead of inverting the regex, invert the operation.In your case, just  by two or more spaces, i.e., and keep what remains.This will yield two additional empty matches at the very beginning and the end of the string, but you can easily get rid of them, e.g. using , or a list comprehension:In my opinion, this is much simpler and more concise than a complex regex using lots of lookaheads and stuff to actually match the part that's not two or more spaces.
I would go withregex101You can use  on the left side of that page to give you this generated version:Your match would then contain only  without any of the other strings containing more than a single space between the words.If you don't know whether your characters will always be  word characters, but can contain anything other than whitespace, you can change  to  so it will match things likeas those contain only a single space between them.
I think this looks fairly clean but it does rely on double spaces existing either side of the text. I prefer anubhava's solution.


Answer URL
https://docs.python.org/3/library/re.html#re.split
