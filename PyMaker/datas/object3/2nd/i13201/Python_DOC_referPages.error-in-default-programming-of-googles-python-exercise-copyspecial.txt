Natural Text
I get an  error when using the  option in Google's Python Exercise . How can I resolve this issue? What confuses me the most is that the part of code causing it is what was written by the instructor (from Google/Standford). I can only assume some syntactic error has spilled into other lines of code or that built in function syntax has changed since Python 2.7. This exercise code was written in 2.7.The file works when no option is used, as so: Printing list of special filesC:.\gpe\copyspecial\xyz__hello__.txtC:.\gpe\copyspecial\zz__something__.jpgdoneThis is the error:The code:All the aforementioned code is straight from google.com. My code comes before main() is defined and after where it says I have spent hours trying to resolve this. I've learned a lot, but not the solution.I've tried changing indentations.I've tried doing  nest under the '' '', but the program keeps running down into the '' part, which leads me to believe it's syntactical. But I can't find a misplaced  or . I also checked indentations.I've tried adding an '' check, but it doesn't work, because as I later learned, although an empty list , Python does not interpret it as an actual '' value.The list goes onI really appreciate the opportunity to have my question heard by the community at stackoverflow, and even more so as a first time poster.
As far as I can see your third try should work if you do it right:This actually checks the list . If it is empty (), it is considered False and the second test  does not get evaluated.Your problem is that  itself is an empty list which does evaluate to  (see https://docs.python.org/2/library/stdtypes.html#truth-value-testing), hence you cannot access  and checking for it results in the same .However, you would still get an  if you only pass one of the parameters without the argument because you access  without testing.EDIT (Why doesn't the code run as is?): I don't think any python versions >=2.4 would interpret this differently but I have no proof. This argument passing is very basic. Checking for malformed user input is always quite "annoying" because you have to handle every possible input which results in a lot of code. If you want to go into more detail of argument passing I recommend the  module (2.7, 3.5). My feeling is that to avoid having a large part of the exercise file that has nothing to do with the exercise they just left it that simple. If you don't supply at least one file path as a parameter you will get an error message in the next step anyway:So the code does run as is. You just have to supply the right parameters.


Answer URL
https://docs.python.org/3/library/argparse.html
