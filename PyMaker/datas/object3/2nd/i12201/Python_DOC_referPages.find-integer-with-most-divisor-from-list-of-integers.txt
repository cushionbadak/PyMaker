Natural Text
I am trying to write a function to  find integer with most divisor from a list, but i am getting the wrong output. This is how my function looks. It returns the count of the last entry in mylist. I know I have to compare the value counts from each entry and returns the integer with the most count but don't know how to do it. 
This should work:
Instead of actually finding all the proper factors, we can much more efficiently calculate the number possible by doing a prime factorization.For example,and the number of proper factors isTo do a prime factorization, we need to start by generating primes:which can be tested likegivingNow that we have primes, we can count the occurrences of each prime factor like so:which we can test likewhich you should recognize from above, . Now we canwhich tests likeand finally,QED.
short answer: use  with a key function like your's  as show by @rofls.Long answer: in each iteration you need to compare yours previous value with the current value in your list, if the current value have a bigger count of divisor change  otherwise don't, the problem in your code is that you don't do this check. You can do something like this and this is more or less the same that the  with key-function solution does. Of course this can be improved a little more to avoid repeat calculations like this
This is a generator expression alternative. Note I use  to create 2 instances of the generator. The first is to calculate the max, the second to feed .The below example also demonstrates how you can use a list comprehension to return all integers with the maximum number of divisors.


Answer URL
https://docs.python.org/3/library/functions.html#max
