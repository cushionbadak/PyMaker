Natural Text
I have a list of tuples that is created with the  function.  is bringing together four lists: , , , and , each of which is just a list of 0s and 1s. Let's say those four lists look like this:Now, I'm ing them together to get a list of boolean values indicating if any of them are . The problem I'm having now, is getting a second list of tuples for which the names of the variables is returned if it had a 1 during the iteration. I imagine it would look something like this:I just can't figure out how I'd go about this. My desired output would look like this:I'm somewhat new to Python, so I apologize if the solution is easy. 
Store tuples in a dictionary for a cleaner solution:The solution:It can also be written using :Solutions above do not preserve the order of tuples, e.g. they can return something likeIf you need the order to be preserved, use  as shown below:EDIT: The solution that doesn't involve dictionaries:Consider using dictionaries if the  call no longer fits on one line.
Using  basically transposes the matrix (your list of lists of equal length make up the matrix).  You then enumerate through these to find the location  of where the flag is true and index the appropriate variable.To see the transpose:
You can just use the filtering aspect of the comprehension syntax to get your vaiable English name only if the respective flag is True:That said, there is something fishy about your approach - you'd probbly be (far) better of with an object oriented approach there, instead of trying to manually coordinate independent sequences of variables for each of your subjects.
Of course you could just do the following without using list comprehensions:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.compress
https://docs.python.org/3/library/collections.html#collections.OrderedDict
