Natural Text
I've made this list; each item is a string that contains commas (in some cases) and colon (always):I would like to create a new list from the one above as follows:But I'd like to know if/ how it's possible to do so in a line or two of efficient code employing primarily Python's higher order functions. I've been attempting it:...produces this:...but I'm struggling with appending the piece of each string after the colon back onto each item.
Assuming you really need it as a list of strings vs. a dictionary, which looks like a better data structure.By simplify using comprehensions you can do this:Now just  up the lists:Or just flatten the list:
I would create a dict using, ,  and :Output:Or using the dict constructor:If you really want a list of strings, we can do something similar using  and joining the substrings:Output:
This may work:
List comprehensions are preferred in Python (check eg this), due to better legibility (at least for some;).The code demonstrates two types of list comprehension nesting, the first is basically chaining the operations, the other produces one list from two nested loops.If you make your data more consistent by adding one space after the , you can get rid of two  calls;)


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.repeat
https://docs.python.org/3/library/itertools.html#itertools.chain
