Natural Text
I've created a linked list in Python, and it is singly linked.  This works perfectly fine, but I want to implement it so it's doubly linked, but I'm having trouble figuring out how to do it.I know I need to add  to the node class, and I think I need to add something to the  constructor and  function, but I'm not sure where to start.I don't actually need to use this functionality in a program, I'm just trying to learn about how linked lists are implemented at a lower level.
It's not so much a coding problem as a conceptual problem. You need to figure out how you want your code to behave. Implementing the desired behavior is not (in this case) at all difficult.Say we want these behaviors:When you have written out the desired behavior like this, you'll also have got some test code ready.Now let's start by modifying the  class (you should use CamelCase for class names):We add  since that's obviously needed. But we also improve on your original version by having  and  as parameters, so you can have these values set when a node is created. And  is always nice to have, for debugging if not for anything else.Now for the list itself. The key is, (a) instead of one , you need two handles on the list, which I've been calling  and , and (b) when adding nodes, the very first node is a special case where we have to make changes to both  and . Let's test this
For a doubly linked list, you should have, each node should have a reference to the previous node.  This means that you will need to modify your add and remove methods to also assign this reference.


Answer URL
https://docs.python.org/3/library/collections.html#collections.deque
