Natural Text
I have one file text spiltted by line, and two lists with items exctracted from the file text. the task is to create a dict of the items in the two list which occur in the same line in the file text. this is the codeMy problem is the over time for the iteration. Can someone suggest another way with less time for iteration. Thanks
multiprocessing can give you a NUMBER_OF_CORES times speed upPart of an example code... 
Currently, you are checking all the items in  again and again for each value of , but whether those are in  is independent of whether the current value from  is in . By simply rearranging the loops a bit and reusing the matches for  for each match from  this should get a lot faster.If textlist1list2` j items, then your algorithm would have complexity of O(nkj), while this one should have only O(n(k+j)).Another optimization might be to split the line and turn it into a set of words, but depending on your data this might or might not work.Or, since you extracted the items in  and  from , you could just use the same function(s) you used for extracting the words from the file and apply it to just the current line, without using  and  at all.If the file has very many, short lines, then this is probably faster than checking all the words in  and  just to find the very few that appeared in that particular line.


Answer URL
https://docs.python.org/3/library/multiprocessing.html
