Natural Text
Reading how  works, I came across this recipe on how to create an Ordered Counter:For example:Is someone able to explain how this magically works?This also appears in the Python documentation.
OrderedCounter is given as an example in the OrderedDict documentation, and works without needing to override any methods: When a class method is called, Python has to find the correct method to execute. There is a defined order in which it searches the class hierarchy called the "method resolution order" or mro.  The mro is stored in the attribute :When an instance of an OrderedDict is calling , it searches the classes in order: , ,  (where it is found).  So an statement like  ends up calling  .In contrast,  is not overridden by any of the subclasses in the mro, so  is handled by .A more interesting call sequence occurs for a statement like  First,  gets called.  The code for  uses self[elem], which gets turned into a call to .  And the code for that calls .If the base classes are reversed, it no longer works.  Because the mro is different and the wrong methods get called.More info on mro can be found in the Python 2.3 documentation.


Answer URL
https://docs.python.org/3/library/collections.html#ordereddict-examples-and-recipes
