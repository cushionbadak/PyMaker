Natural Text
Write a function which accepts an input string and returns a string  where the case of the characters are changed, i.e. all the uppercase  characters are changed to lower case and all the lower case characters  are changed to upper case. The non-alphabetic characters should not be  changed. Do NOT use the string methods upper(), lower(), or swap().This is my code:This code works as expected but there are two major problems with this. Firstly the output which it returns to the Main is a list, I want it as a string. Second, how to check whether the string contains special cases and by pass it if there is a special character. Special characters are scattered all over the ASCII table.Any help would be appreciated.
The string method  can help you to unite a list and return a string. But without that knowledge, you could have done this string concatenation.(For that you need to initialize  with , not )Join usage:To your second question. You could check if an input is from the alphabet with the  method. Which returns a boolean value.And a suggestion about the solution, You could import the uppercase and lowercase alphabets from the  module. After that, iterating over the term and swapping letters using the alphabet strings is very easy. Your solution is fine for understanding how ascii table works. But with the way I mentioned, you can avoid facing problems about special cases. It is a poor method for cryptology though. 
Concerning the first problem. I've found it may be possible to use:orGood luck!
So this function will return None if there are any special characters in string and you simply add if conditon to check if result is None then you just skip this word
You are close:
In python3, one option is to use str.translate. First, use string methods - string.ascii_uppercase and string.ascii_lowercase to build strings with entire character sets 'A..Z' and 'a..z'. Use str.maketranslate to make a translation table, one for upper case letters to lower case and another for lower case to upper case letters. Finally, loop through the required string, and use str.translate to build the converted string.Output:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
https://docs.python.org/3/library/stdtypes.html#str.maketrans
https://docs.python.org/3/library/stdtypes.html#str.translate
