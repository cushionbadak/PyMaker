Natural Text
I have following list In above example which if statement will work faster ?
There is (from the result) no difference if  is . But the first one is a bit faster:than the second one:You should use the first one with  in almost all cases. Only if you want to distinguish between ,  and an empty  (or something similar) you might need something else.
The first statement would work faster as it doesn't need to execute a function whereas in the second statement something needs to be executed before it will run which in this case .
Internally,will be getting the size of the list object and will check if it is a non-zero value.In this case,you are doing it explicitly.Moreover, PEP-0008 suggests the first form,For sequences, (strings, lists, tuples), use the fact that empty sequences are false.
Expanding on the answer by @thefourtheye, here's a demo/proof that  is called when you check the truth-value of a list:And here's a quick timing:So the implicit check is slightly faster (probably because there's no overhead from the global  function) and as already mentioned suggested by PEP-0008.
If you look at the  for each method you'll see that the second has to perform almost twice as many steps as the first one.Both of them need to do , , , , and . But the second method needs to additionally do , , , and . Therefore, the first method will be faster.In reality, however, the difference in time between the two methods will be so minuscule that unless these if statements run millions of times in your code it will not noticeably impact the performance of your program. This sounds like an example of premature optimization to me.


Answer URL
https://docs.python.org/3/library/timeit.html
