Natural Text
I'm using Parmiko to invoke an ssh shell and I would like to direct all of the input/output to a Text widget.  I found this solution:The problem is I'm not familiar with classes enough to make this work (no matter how simple it may be) and time is unfortunately not on my side.  That being said, what is the easiest way to do this without a class definition?  Could that class be converted to a general function and call it to do the redirect?Thanks for any help.Edit: Upon further experimenting, I alteredtoThis now works as print statements now appear in the text box.  Now my issue is when I call interactive.interactive_shell(chan), the program crashes with Any ideas with this?Edit2: I shall keep digging.  Now have found this. I've added a no-op for flush and consequently get:I feel like this will be a gopher hole.  Any ideas from now?Edit 3: I will chase this to the end.  Needed a (self) parameter added like def flush(self).  I'm not sure where this is going anymore so back to a simple solution of routing a Paramiko interactive shell to Text box with input and output would be great.
Python is a language for manipulating class instances with methods. Some of this is hidden.  For instance,  and  are disguides as .  However, you cannot get far beyond the basics without understanding classes, instances, and instance methods.  And sending print output to a tk text widget is, as you discovered, beyond the basics.As you also discovered, the exact requirements of a sys.stdout replacement depend on the code that uses it.  In the absence of paramiko giving you a detailed spec for what it actually requires of sys.stdout, you can either program a complete replacement or program a partial replacement as you get exceptions.For example, IDLE has the following code, currently in idlelib.PyShell.The shell.write method has a  call.  There is no flush call because the IDLE code that writes to stdout knows that write inserts text immediately and that no flush is needed.  Other unused and unneeded attributes and methods are also missing.The specifications for 3.x i/o streams are in the io module doc.  You should look at classes IOBase and TextIOBase (and possibly TextIOWrapper).  For instance, the IOBase  entry says "Flush the write buffers of the stream if applicable. This does nothing for read-only and non-blocking streams."  Text widget insertion is non-blocking, and no return is needed, so  should be sufficient.


Answer URL
https://docs.python.org/3/library/io.html#module-io
