Natural Text
Is there a "clean" way to take the type of the keys of a dictionary in python3?For example, I want to decide if one of this dictionaries has keys of type :There is several ways to achieve this, for example, using some as:But this is quite annoying because  is not indexable, so you need to convert to a it into a list just to extract the value of a key.So has python3 something as ? If not, is there a better (cleaner) way to ask if the key of a dictionary is of type ?
If i understood your question right, the cleanest way i know to get types of all keys in a dict is :or if you want to have all the unique types you can use:like that you'll know if there is a single or multiple types. (Thanks @Duncan)this returns lists with types of keys found in respective dicts:o/p:However, if you're asking about the type of  it's:Hope this was somehow helpful.
 returns  type objects which is iterable but you can not index it like listsAlso just repeating what you saidAlso Check this out
If you want to find out if your dictionary has only string keys you could simply use:The  creates a set that contains the different types of your dictionary keys:And  is a literal that creates a set containing the type . The equality check works for sets and gives  if the sets contain exactly the same items and  otherwise.


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
