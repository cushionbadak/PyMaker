Natural Text
For example, if these are my two lists:Then what I'm trying to do is to figure out a way to get:Sorry for the probably basic question. These are numpy arrays if that makes a difference.
If you want a numpy array as a result, you can build it using :Reference: What is the equivalent of "zip()" in Python's numpy?
One approach is using list comprehension and :
I don't use numpy, but maybe by using :It returns a list of tuples though.
Just use :If you want the result as list just call  afterwards:
Is a simple way to create a new 2D list with element pairs. Using the zip() function as others have pointed out is also viable.
I'm pretty sure there is an easier or more pythonic way than this.This outputs a list of lists, instead of just doing  that outputs a list of tuples. This combines list comprehension and zipAlso avoids the tuple unpacking of not sure whats more efficient though Make an iterator that aggregates elements from each of the iterables.https://docs.python.org/3/library/functions.html#zip
There are multiple ways to do this.If you just need to access the elements and not modify them, you can use the  function:If you actually need a list of lists, then you can use a list comprehension:And finally, if you need a numpy array as a result, use the Transpose function:
This will give you what you want.
with no libraries, you could use:


Answer URL
https://docs.python.org/3/library/functions.html#zip
