Natural Text
I was trying to run a code that I wrotethe code reads lines on txt fileso my text file looks like (i've 20 lines)['39', '40', '39', '38', '35', '38', '39', '39', '42', '37', '40', '41', '37', '39', '39', '40', '38', '40', '39', '40']['39', '40', '39', '38', '36', '39', '40', '39', '42', '38', '40',  '41', '38', '39', '39', '40', '38', '40', '39', '41']['39', '40', '40', '38', '36', '39', '40', '39', '43', '38', '40',  '41', '38', '39', '39', '40', '38', '40', '39', '41']i wrote this script to have a new file that looks like this39 40 39 38 35 38 39 39 42 37 40 41 37 39 39 40 38 40 39 4039 40 39 38 36 39 40 39 42 38 40 41 38 39 39 40 38 40 39 4139 40 40 38 36 39 40 39 43 38 40 41 38 39 39 40 38 40 39 41the script that i wrote is this one the error that I get is this oneValueError: invalid literal for int() with base 10: '['
The problem is that when you read in  from your file, you will have a line As you can see, the first item in your string is . So, you don't actually have the numbers structured as you are expecting. Instead, since you seem to already have a list structure represented as a string, consider using literal_eval from :Now you actually have a list of strings. Now you can proceed modifying that to your ints. As a simple process, you can then do something like this: Note, when it comes to using  in Python 3 you get a map object, which returns an iterator. So, if you need the list, this is why  is called when printing. You can read about it here: https://docs.python.org/3/library/functions.html#mapArea of ImprovementBased on the contents of the file you are reading, it would be best to not structure the data like this. Instead, what should be done is not setting the data as a list representation in to the file, but just the contents of the list. This avoids having to perform the above solution, and instead, a simple:would suffice. 
You are not evaluating the line as a list: every line is just a string that happens to start with a . So you are iterating over the characters of the line.If the file is like you describe it however, you can easily evaluate the line with :We here used  as a way to obtain the first 20 lines. If you want to process all the lines, you can simply use:
You're reading a line, so you can simply replace the chars you don't want.
Although in this case the  solutions presented by idjaw and Willem Van Onsem seem as an obvious best fit, let me present another solution:Instead of chaining multiple  operations, you can use  to get rid of multiple characters in one pass, by providing the third argument to :If there is a third argument, it must be a string, whose characters will be mapped to  in the result.Afterwards, we can either use a simple list comprehension to convert the separate numbers from  to :Or make use of :Both will result in a new  of :


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/stdtypes.html#str.replace
https://docs.python.org/3/library/stdtypes.html#str.translate
https://docs.python.org/3/library/stdtypes.html#str.maketrans
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#map
