Natural Text
This question already has an answer here:Python Assignment Operator Precedence - (a, b) = a[b] = {}, 5                    1 answer                Very basic question but I think I am missing some background that I would like to understand.Let's say we have expressions:I know that first version is a messy code, but I wish to understand. Always I thought that result of this code is the same. I was wrong. Type of first "a" is a string, type of second "a" is a list. The question is why in the first case the type of the most right value is propagated to the left? 
Unlike in C,  is not an operator, and the statementis not parsed as . It does not take the result of the  assignment and assign it to .The syntax of an assignment statement in Python isand, as stated in the documentation,An assignment statement evaluates the expression list (remember that this can be a single expression or a comma-separated list, the latter yielding a tuple) and assigns the single resulting object to each of the target lists, from left to right. is assigned to both  and , starting with .


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
