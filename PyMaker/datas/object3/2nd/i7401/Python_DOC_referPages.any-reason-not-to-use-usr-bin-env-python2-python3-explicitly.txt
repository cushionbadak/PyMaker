Natural Text
I often see this at the top of  files:With the unknown state of the OS defaults, I wonder why it's not:If most OSs provide this versioned symlink, wouldn't that be better?I found PEP 394 while looking around, which states that for the time being, developers should assume . It also states that one can assume that the versioned equivalents,  and , exist. So what's the harm in not leaving it to chance and providing that extra character?If one doesn't have  installed because the OS ships by default with  (like Arch linux), I'd much prefer this issue when running a script or program:Alternatively, this error is much worse, particularly for a new user ( exists, it's just the wrong version):That said, I find the latter far more common. At least now I know some typical compatibility errors well enough to think to myself "Oh, right. It's the  symlink."Two questions ask how to specify/verify the desired version:This 2010 question suggests treating  as meaning  and  as required to explicitly call out .This 2013 question: maybe implies that  shouldn't be used because not all distros ship with it?Is there an obvious reason I (or  programmers) shouldn't use a versioned  call if most OSs provide it? To use just  is seeming to cater to a minority who don't have the versioned command while causing confusion to the vast majority who do.Maybe the answer is to use versioned commands (I'm getting that from PEP 394) but enough time hasn't elapsed to see them appear. To date I've never seen a versioned  call... then again, if it works I never look. If it breaks, it's always a version-less  line so my mental counts are probably skewed!Some github stats on searches; I was curious on usage:: ~210k python file code hits: ~460k: ~6 millionThis could mean that most code is old enough that if the recommendations of the questions above was the prevailing wisdom, folks just haven't updated their files?I looked at these popular OSs and found them all to use versioned commands:ubuntu: python-minimal and python3-minimalarch: python and python2fedora: python2 and python3debian: same names/state as ubuntuvarious sources suggest that OS X uses versioned commandswindows: I think there's evidence that windows has versioned commands available
When you write the script, you may induce various dependencies on a particular version of Python. Use a dict comprehension? You need at least Python 2.7. Using the  keyword? You need at least Python 3.5.When you use , you aren't saying anything about which version of Python is required to execute your script; you are just saying "Use whatever version of Python is found in your path first." Fundamentally, the developer is the wrong person to specify the shebang.Instead, the user should be setting the shebang to the path of the correct version of Python on their system.The  package strikes a good compromise here. You, the developer, just put  in your script. When you install the script via , the installer replaces  with whatever path is correct on the target machine.


Answer URL
https://docs.python.org/3/using/windows.html#customizing-default-python-versions
