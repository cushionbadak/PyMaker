Natural Text
I have date wise stock csv files like below.They have stock data in this format:How can i convert them to stock specific csv files which can be loaded as pandas datafframe. I could do it in .net, but just wanted to know if there is any straightforward way available in python/pandas.Edit: Adding expected outputCreate individual stock files based on stock name:For each stock pull in stock data from all files and add to that stock csv:For example stock ABB, read stock data from each date wise csv, and add that info to a new line in csv ABB.csv. Date value can be picked from file name or file modified date property also.
I think you need  for select all files, create list of   in  and then use  for one big  from all s:If necessary filenames in output :
adding to @jezrael solution. as user wants each stock specific csv file.
My approach would be to set up a sqlite database with a single table.  Just three columns, market_date, symbol, and csv_string (maybe a col for line# in the file if you want relative positions preserved).  Read all the files and load the data into the table line by line.  Create an index on the table on the symbol column.  Then create a cursor for .  Use itertools.groupby to let you know when you have looped over all of a symbol so you can close the last file and open the next.Of course if you have little enough data that it can all fit into memory you just insert tuples into a list, sort the list and use groupby to loop over it to make your files.


Answer URL
https://docs.python.org/3/library/itertools.html?highlight=groupby#itertools.groupby
