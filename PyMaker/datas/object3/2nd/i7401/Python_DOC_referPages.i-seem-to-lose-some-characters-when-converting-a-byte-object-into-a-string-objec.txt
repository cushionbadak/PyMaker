Natural Text
I am currently working on a python program that will filter out some keywords in the "text" tag of a JSON file. The conversion for my system is the following: .gz --> open with gzip in mode rb --> transform the b'' into a str --> json.load(str)With the filter function taking into argument a JSON fileAfter running through this code multiple times I realised that actually the reason for it not working is that some commas seem to disappear. Does anybody know if it is possible that in the process some information is lost?Result of what I get using the previous method (invalid JSON) [same result if I use decode]What I should be getting (valid JSON):
You are decoding your bytes wrong:That converts the object to a representation, that is useful for debugging but not for handling the data:Note the  prefix, the  suffix, and the escape sequences!Decode bytes objects:I'm assuming that since this is JSON data, it is using the UTF-8 encoding (the JSON standard states that that is the default, the only other permitted options being UTF-16 and UTF-32).Better yet, use a  object to handle the decoding for you.Next, you appear to have reversed your condition and data.  takes a condition first, data sequence second.Corrected code:I adjusted your slicing operation, assuming you previously sliced off the  character introduced by the  call.


Answer URL
https://docs.python.org/3/library/io.html#io.TextIOWrapper
