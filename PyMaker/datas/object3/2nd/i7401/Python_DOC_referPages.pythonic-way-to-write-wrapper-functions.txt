Natural Text
Let's say I have a function  that gets a few parametersI want to write a wrapper function that gets all of 's parameters and passes them on, e.g.But this is ugly, since I have to repeat the variables and the default values.What's the idiomatic way to do this in python?A few options I thought about:passing to  a dictionary called  and calling  but then is error prone since I don't knowif all the arguments are therewriting another wrapper for foo that checks if the params with default values are  and if so doesn't pass themPutting the default values as constants so I won't repeat them
You can use  and  syntax to pass an unknown amount of arguments and/or keyword arguments:One downside to using  and  is that you'll lose the orginal function signature of the decorated function. eg:The solution is to use . It basically copies of the data from the decorated function to the wrapper function:A you can see below, if you now do  the original signature for  will be displayed:
I think you are looking for functools's partial  function:


Answer URL
https://docs.python.org/3/library/functools.html#functools.wraps
https://docs.python.org/3/library/functools.html#functools.partial
