Natural Text
I'm trying to embed Python in a C++ multithreaded program.What I do is calling two statistical functions from the Python C API to perform the  and the  on some data that I collect. So I'm just embedding Python in my code, I'm not extending it or using my own Python functions.I recently found out that in order to run a multithreaded program that uses the Python C API you need to handle properly the Global Interpreter Lock (GIL) and when ever you use a Python C API function you need to acquire the GIL and then release it when you're done using the API functions.The thing that I still don't understand is how to properly release the GIL from the main thread in order to let the others execute the Python code.I tried this (option 1):But it gives me a  when calling .So I tried this (option 2):and this (option 3):With both these last two options the code runs but ends with this error:EDIT:The code that is executed by the spawned threads is this:The functions where I use the Python C API are only exec_1 and exec_2, while exec has just the job to call the repeatedly on new random data. This is the simplest code I could think of that mimics the behavior of my real code. I've also left out every type of error checking when using the Python APIs for a better readability.Without any other choice I'll run my code like option 2 or option 3 and forget about the error, but I would really like to understand what's going on. Can you help me?P.S. I'm running Python 3.6.1 under a macOS 10.12.5 system using Xcode 8.3.3. If you need more details let me know.
option1: I think is giving you a segmentation fault because you called PyEval_SaveThread() (which releases the gil, returns a saved thread state, and sets the current thread state to NULL). Py_Finalize will try to free all memory associated with the interpreter, and I guess this included the main thread state. So you can either capture this state with: Or you can immediately call PyEval_ReleaseLock() after calling PyEval_InitThreads() since it looks like the main code segment does not use any embedded python. I had a similar problem and that seemed to fix it.NOTE: Other threads will still need to aquire/release the GIL wherever necessary


Answer URL
https://docs.python.org/3/c-api/init.html#thread-state-and-the-global-interpreter-lock
