Natural Text
This question already has an answer here:Python Lambda in a loop                    3 answers                I am trying to generate several functions with different parameter i (see below) using a for loop, but it seems that all these functions are using the last item of i's. Could anyone tell me how to handle this?This is a simplified example. I actually need to generate more than 200 functions with different parameters.Then it turns out that the two functions do the same thing:Output: 2Output: 2But I expect the first function to give a result of 1 rather than 2.Thank you very much in advance.
you have to break the dynamic binding to , for instance by wrapping 2 lambdas together:that way, the value of  is captured, and functions hold a copy of Aside: I wouldn't use  to create the list for performance reasons when appending to  ( => )
The reason you're getting the same result for all the functions is because  is not local to the lambdas, but is defined in the outer scope, and it is accessed when the lambda is called - not when it is defined. At the end of the loop, the value of  is 1 and thus, it uses 1 for every call to the lambda functions.Jean-Francois Fabre gave one good solution but I personally prefer this:


Answer URL
https://docs.python.org/3/faq/programming.html#why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result
