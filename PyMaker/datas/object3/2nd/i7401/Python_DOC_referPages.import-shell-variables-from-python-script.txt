Natural Text
I have a set of constants in a shell script that exists solely for other projects to pull in via sourcing, i.e.:orI now need to make these values accessible to  scripts. I figured the easiest way to write-once-use-everywhere would be to:Convert the shell script to a python script, so that  can import it directly.Have the python script either generate a shell script with the appropriate variables, or possibly have the shell script execute/source the python script to import the necessary variables.What is the best way for a shell script to "import" variables (i.e. key/value pairs) from a python script? Should the python script simply have a function that dumps the key/value pairs as strings, or is there a more sophisticated way to keep a shell script and python script full of constants in-sync?Also, in the future, simply GNU Makefile projects may need these variables too. Can both shell scripts and Makefiles "import" variables from an external script/program?
Questions:  ... both shell scripts and Makefiles "import" variables from an external script/program?Use the smallest common Possibility, a Configuration File with  Pairs.This could be used from both Python Script and .  Note: Use own Namespace  not to overwrite used Environment Vars.  Usage :Usage :Start Script::You can edit the  Script and add  to it, so that the Environment Vars are always set for all Python Scripts.  Second, you can add  to your  no additional Import are required, but needs restart your Shell if   changes.


Answer URL
https://docs.python.org/3/library/configparser.html
