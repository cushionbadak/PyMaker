Natural Text
Before moving my code to SQLAlchemy, I have a MySQL query that looks for a value in multiple columns (ex - ) which works fine when submitting the query manually to the database.The use case above is relatively simple, but in the future I may want to run a similar query on more than two columns so just want to get ahead of this problem now.Currently I have converted my query to the below (which works), but I am trying to find a similar syntax to the one above.When I try the below, I get a syntax error so not sure if it is an issue with the  keyword I am trying to use.Any help is greatly appreciated - thanks!
In order to operate on a Python value as an SQL literal in SQL Expression Language it must be wrapped with . The resulting construct can then be used to produce the desired  clause:This is equivalent to producing a bunch of equality checks combined with , as is noted in the comments. The sole argument to  should be a suitable sequence, such as a list, in this case.Note that  here is a method of the SQLAlchemy construct, not the Python operator , which cannot be overloaded to produce custom constructs due to how it treats the return value of : it implicitly converts to a :


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__contains__
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
