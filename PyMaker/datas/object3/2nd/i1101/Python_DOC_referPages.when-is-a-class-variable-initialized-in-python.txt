Natural Text
Consider the following Python 3 code:When will  be called? At the moment the module is imported? Or at the moment the class is first used in some way?
At the moment the module is imported:then
The code inside a class runs when the  statement is encountered - ie. during the import itself.This is because, unlike in Java or C# class definitions, Python  statements are actually executable code.The result is neatly in order of execution:
It is done at the time of import. These are called static variables and are defined at the class level. These variables are created 1 per class and NOT 1 per object. They are part of loading the class which happens at the time of import. Following is an example:classA.pymain.pyPrinting before Static Variable CreationPrinting Class Variable Value :  1{'module': 'classA',              'class_var': 1,              'init': function classA.A.init(self),              'dict': attribute 'dict' of 'A' objects,              'weakref': attribute 'weakref' of 'A' objects,              'doc': None}


Answer URL
https://docs.python.org/3/tutorial/classes.html
