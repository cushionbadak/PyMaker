Natural Text
I have a function which returns something but has a side effect at the same time. Should I test only value which this function returns or I need to test result of a side effect too?
Short answer, test both.Long answer:You should always remember that testing is verifying that for a given input you expect a specific output.With that in mind, if your fucntion modifies state (side effect) then you need to verify that the state is modified as expected. If it also returns a value then you need to verify that the returned value corresponds on whats expected.Testing is a great way to ensure your code is robust as long as you understand the zen behind it. I must test for what I expect, and design test for the unexpected. However, test alone does not make good code, if you have a method that does more than two things it might be that is not properly designed. usually methods that affect state should not return a value, and vicecersa. Its not set in stone but if you follow that convention is easier to decouple your systems. There are coding principles that will prevent future headaches, one of them is the Single Responsibility Principle. Which in this case your function is clearly violating. I recommend you take a look at the  programming principles it will be worth it, trust me. Unit testing will come naturally once you adopt them.
I would recommend testing both, as both the sideeffect and the return value are part of the functions behaviour and part of the interface interacting with your code.To achieve this you can use a mocking library like the builtin unittest.mock, that way you can mock the call to user.make_admin() and the complete SlackUser object.I suggest reading the documentation of MagicMock and patch to simplify the testing.Happy testing!


Answer URL
https://docs.python.org/3/library/unittest.mock-examples.html
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.MagicMock
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch
