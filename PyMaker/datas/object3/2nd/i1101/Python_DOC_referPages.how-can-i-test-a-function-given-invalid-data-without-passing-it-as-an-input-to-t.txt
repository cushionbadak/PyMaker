Natural Text
I'm new to the whole test case scene and I've chosen to use pytest and pytest-asyncio to write my test cases. I was able to figure out how to write test cases for basic functionality. e.g. asserting that when I call the function it returns the data expected.I would now like to write test cases that are designed to fail but I've gotten myself confused on how to do that without changing the functions to take the invalid data as an argument. TL;DR How would I write a test case to test get_access_token() in the following code with an invalid WOW_CLIENT_ID and WOW_CLIENT_SECRET? (I expect the test to fail because of using invalid credentials)wow_api.py (this contains the function I want to test: get_access_token())test_wow_api.py (contains the test case)
This is an example of why you want to avoid testing collaborators. If you ask "what happens when  is invalid?" this implies a test of the behavior of , because that's what checking the id. Instead, think about how the  can fail when you use it like this, trigger this behavior in your tests using dependency injection and mocking, and check that you're handling it however you need to.So instead of constructing the client session in the function, you can pass it as a parameter:And then you create an object in your test that throws whatever exception  throws with invalid parameters. You can create your fake object like this:and use it in a test like this gives you an easy way to configure this behavior without having to create the object. E.g.(Advanced mocking features can probably get you there without modifying your code, but I usually find it simplest to just pass in the collaborators as shown above.)


Answer URL
https://docs.python.org/3/library/unittest.mock.html
