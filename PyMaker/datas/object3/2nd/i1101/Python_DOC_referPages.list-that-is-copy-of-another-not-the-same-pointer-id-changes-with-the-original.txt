Natural Text
This question already has an answer here:Copying nested lists in Python                    2 answers                I'm aware that simply assigning one list to another preexisting list gives it the same address e.g.gives the outputand to prevent this, it has to be written as such..., , etc.However, this doesn't seem to work in my case...I'd like  to be simply a copy of , but when I change  in the conditional statements, I notice that  changes along with it. I've checked their id's, but they're both different as expected. Any thoughts?
You're using a nested  of s, but  only makes a shallow copy of the top level , so you have a new  containing the same s as the first.The simplest solution here is to just switch to a full deep copy:then replace:with:No matter how deeply nested your s (and how mutable their contents), this will ensure all mutable elements are fully dissociated from the original .


Answer URL
https://docs.python.org/3/library/copy.html#copy.deepcopy
