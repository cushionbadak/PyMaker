Natural Text
If I've got a Python , how can I reliably get the precise decimal string (ie, not scientific notation) representation of the number without trailing zeros?For example, if I have:I would like:However:The  class doesn't have any  method, or even any  (cf: https://docs.python.org/3/library/decimal.html#decimal.Context.to_eng_string)The  formatter either defaults to rounding to 6 decimal places -  - or requires a precise number of decimal places.The  formatter appears to work -  - however I'm reluctant to trust that, as this actually runs counter to the documentation, which says " â€¦ Displays the number as a fixed-point number. The default precision is 6" and  sometimes return scientific notation: So, is there any way to get a decimal string from a Python ? Or do I need to roll my own using ?
Short answer:Long answer:As @BrandonRhodes pointed out PEP 3101 (which is the string format PEP) states:The syntax for format specifiers is open-ended, since a class can  override the standard format specifiers. In such cases, the  str.format() method merely passes all of the characters between the  first colon and the matching brace to the relevant underlying  formatting method.And thus, the  method is what python's string format will utilize to generate the  representation of the  value.  Basically  overrides the formatting to be "smart" but will default to whatever values the format string sets (ie  will truncate the decimal to 4 places).Here's why you can trust it (snippet from ):Long story short, the  method will calculate the necessary padding to represent the number before and after the decimal based upon exponentiation provided from  (in your example, 14 significant digits).


Answer URL
https://docs.python.org/3/library/decimal.html#decimal.Context.to_eng_string
https://docs.python.org/3/library/string.html#index-9
