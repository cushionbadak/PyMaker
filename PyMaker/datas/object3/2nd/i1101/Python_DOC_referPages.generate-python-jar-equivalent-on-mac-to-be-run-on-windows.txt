Natural Text
I'm new to Python. If I want to package a Java program I could use Maven to define the dependencies and build a Jar including all the libraries needed on Mac, which can also be run using windows cmd console, with nothing but only java installed on that windows machine i.e. I wonder how I could achieve the same with a Python program that used some 3rd party libraries. I searched some options like wheels but still confused about what their roles are. Could you help to give me more guidance on this? I'm using PyCharm as IDE. Many thanks. 
For the closest equivalent of a .jar, you want a Python ZIP Application. This will only require a suitable version of Python installed on the user machine. https://docs.python.org/3/library/zipapp.html#creating-standalone-applications-with-zipappBasically you can use pip (Python's package manager) to install the dependencies you list into the directory that you'll zip up.Where  is the name of your source directory containing your program and  is the name of your entry point (in ). This will create a single .pyz file, which is Python's equivalent of a .jar.You can then run it on a Windows machine withWhere  is either your python launcher or whatever appropriate python executable you have installed.If you have a  you could have pip install dependencies from that before you zip it.(If you don't you can try generating one from the output of , but that's everything you have installed, which might be too much.)Of course, this all assumes your dependencies are pure Python. If you've got some package that has a compiled binary for macOS, that's not going to work on Windows. In fact, C extensions generally won't be executable from inside a zip archive, even if you compile them on Windows.If you do need binaries like that, I'd recommend trying a third-party tool like pex.


Answer URL
https://docs.python.org/3/library/zipapp.html#creating-standalone-applications-with-zipapp
