Natural Text
I have a matrix as shown below;And here's my code block:If a column full of A's, I want to move that column to the most right side, but my code moves all A's to right. This is my output:I want a output something like that:
You can use  to transpose the matrix, sort all that are pure  to its end and reverse-transpose with  again:Output:The transposed data looks like this:The sort/sorting works because it is only  if the whole row consists of  () all others are .Sorting is stable so it does not change the relative orders between rows that evaluate . 
Here's a way using :You could use  to locate columns where  values are , and swap them with the last:
First of all, let's define utility function for transposing list of lists likethen let's define sorting key by the rule: if list elements are equal to 'A', then it goes last, else keep it in its original positionAfter that our solution will bewhich gives usor as @PatrickArtner pointed out,  uses Timsort, which is stable algorithm, so we don't need to handle case with leaving non-all-"A"-columns in their original places and define:after that we can simply write


Answer URL
https://docs.python.org/3/library/functions.html#zip
https://docs.python.org/3/library/functions.html#sorted
