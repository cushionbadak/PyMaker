Natural Text
Let's say I have two lists:I want to create a dictionary that pulls the unique values from lista as the key (which it will do automatically since dictionaries can only have unique keys) and the values from list b as the dictionary value, corresponding to lista by their order. So to create the dictionary I would do:If I print this, I get:However, what I would like to do, is for every "key" from lista that is duplicate, I'd like to concatenate the values from listb to be the "value" in the dictionary as a list. So the goal would be:This is a dumbed down version of what I am trying to do but I think it applies - I am reading a csv file and trying to make the "last name" column the key, and every other row the value (as a list). So far I've created a list for last names and the list for the other rows, but I need to concatenate the values for duplicate names.
There's no need to explicitly initialize the values with empty lists, use :Note that it's not necessary to cast to  as I did, as  is a subclass of . I just did it so the output would match your requirements exactly.Result:
How about this?


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
