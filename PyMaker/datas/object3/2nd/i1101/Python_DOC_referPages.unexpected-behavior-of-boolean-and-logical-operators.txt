Natural Text
This question already has an answer here:Chaining “is” operators                    4 answers                Why does `False is False is False` evaluate to `True`?                    5 answers                Result:I know it is not normal to use two "="s and "is"s in the if sentence. But I would like to know how the Python interpreter intereprets the  statement.Is the expression  interpreted simultaneously, or short-circuit way?
What you've happened across is called operator chaining. From the documentation on Comparisons:Comparisons can be chained arbitrarily, e.g.,  is  equivalent to , except that  is evaluated only once  (but in both cases  is not evaluated at all when  is found to be  false).Emphasis mine.So, this would mean  is interpreted as , and nothing more.More generally,  is evaluated the same as  and so on. The expression is parsed according to python's grammar rules. In particular;
This question has many answers already, but consider the function split into bytecode:This suggests that all s are being checked to see if they match, in a linear fashion. If one fails, it should break/return.To confirm, consider:
It will be interpreted as:


Answer URL
https://docs.python.org/3/reference/expressions.html#comparisons
https://docs.python.org/3/reference/grammar.html
