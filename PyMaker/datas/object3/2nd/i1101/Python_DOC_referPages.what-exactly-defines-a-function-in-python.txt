Natural Text
 holds attributes which describe the object. But it shows blank dictionary for function object. I checked Python: Explain __dict__ attribute  here but found no specific answer,though thefourtheye give this answer.For a class, the variables inside it define the class but for a function, it is not. Then, what exactly defines function?  
A function is defined by its code object: .If you inspect that (e.g. by ), you will see a variety of variables that describe the parameters of the function, whether it has any constants, what its name is, where it is defined... and finally, what its compiled bytecode is, in . You can see a human-readable version of this by using the  module:You can see the variable names like this:You can read more about the code object in the docs for  module. However, most of this is academic - the vast majority of Python programmers will never need to access the code object, or even to know about it.
 returns the attributes of a function - you function has no attributes. Functions are first class citicens, you can add attributes to them as well: Output:See Amadan's answer for how to get other informations about the function.Aside from that:generally you should not use  methods - there are high chances you are drifting into xy-Problem-Land if you think you need to, there is probably a better way to achieve what you want to solveall variable that are only declared inside the function are not leaving it's scope - so there is not much need to "get them from the outside" - you can read more about scoping rules here: Short Description of the Scoping Rules? - the short of it is: what's declared inside the function, stays's in the function. The only way to get it, would be ing it from the function or declaring it  (you should avoid polluting your global state).


Answer URL
https://docs.python.org/3/library/inspect.html
