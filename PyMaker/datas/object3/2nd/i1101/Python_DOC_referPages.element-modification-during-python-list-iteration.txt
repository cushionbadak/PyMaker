Natural Text
This question already has an answer here:Change value of currently iterated element in list                    2 answers                Scope of python variable in for loop                    10 answers                Could anyone, please, explain what exactly happens in the following code to the "element" during iteration?Output is [2, 3, 4]    instead of [3, 3, 3]Did I understand it correctly that when using "for element in l" syntax, we can only reference but not modify each element of an array of what does happen here? P.S. I've seen the question named "why shouldn't you iterate like 'for element in array' ", but I couldn't find that one, so I asked it in this way. Seems like I found one of the disadvantages of iterating in this way. Please, redirect me to the mentioned question if possible.
ExplanationIn the above example any changes to variable element in the loop is not possible. Code To get your expected output try this:
When the iteration start element variable already has the current value in the array. when you assign 3 to it it will contain it until the next iteration when it will again take the current value of the array and so on. To get [3, 3, 3] you need to do it as the following:
That's because  is a local variable in the scope of the  loop.Run this snippet. I hope it can be self-explanatory (I used  instead of ), also I used  to get the index:Quick explanation and  are local variables which receive the value of the element and the index of the  at each iteration.Inside the loop you can change the value of  but it doesn't affect the the . To change the value inside the  it is required to access it by index ().


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
