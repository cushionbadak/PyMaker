Natural Text
I am trying to use python3 unicode_escape to escape \n in my string, but the challenge is there are non-ascii characters present in the whole string, and if I use utf8 to encode and then decode the bytes using unicode_escape then the special character gets garbled. Is there any way to have the \n escaped with a new line without garbling the special character?
As user wowcha observes, the  codec assumes a  encoding, but your string contains a character that is not encodable as .Encoding the string as  gets around the encoding problem, but results in mojibake when decoding from The solution is to use the backslashreplace error handler when encoding.  This will convert the problem character to an escape sequence that can be encoded as  and does not get mangled when decoded from .
Try removing the second escape backslash and decode using utf8:
I believe the problem you are having is that  was deprecated in Python 3.3 and it seems to be assuming your code is 'latin-1' due to that being the original codec used within the  function...Looking at the python documentation for codecs we see that  which tells us that  assumes that your text is ISO Latin-1.So if we run your code with latin1 encoding we get this error:And the unicode character error is  which when converted is  the simplest way to put it is the character cannot be used within a Latin-1 string hence why you get a different character.I also think it's right to point out that within your string you have  and not just  the extra backslash means this symbol is not carriage return but instead it is ignored the backward slash indicates to ignore the . Perhaps try not using the ... 


Answer URL
https://docs.python.org/3/library/codecs.html#error-handlers
https://docs.python.org/3/library/codecs.html
