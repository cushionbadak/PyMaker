Natural Text
How can I modify this list so that all  appear at the beginning, the  at the end, and the values in between are sorted alphabetically?So I would like to have:
You can use  with the following :Explanation To get a better idea of how this is working, the following list comprehension aims to replicate what is being returned from the  function defined in the  argument prior to making comparisons:This will then be the  to be used to sort the items in the list, as mentioned in the documentation:The value of the key parameter should be a function that takes a single argument and returns a key to use for sorting purposes. So taking into account that  and , when this list of tuples is sorted the result will be the following:
One idea is to use a priority dictionary with a custom function. This is naturally extendable should you wish to include additional criteria.
Use the  parameter in sorted:Output
Just define an appropriate key function:Note, every character is mapped to an integer >= 0, so we can just rely on , and since  will always be less than anything returned by , we can use that for p, and for q, we can use infinity, so it will be alway greater than something returned by .
You can find all  and  elements, filter the original list, and then sort:Output:
You could also store you front, middle and ends in a , then just add all three lists at the end:
Solution to this question is:First find all p and q elements in list.Filter the original list. Then, finally sort the list.


Answer URL
https://docs.python.org/3/howto/sorting.html
https://docs.python.org/3/howto/sorting.html
https://docs.python.org/3/library/functions.html#sorted
https://docs.python.org/3/library/collections.html#collections.defaultdict
