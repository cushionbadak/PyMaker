Natural Text
I'm a complete novice at Python so please excuse me for asking something stupid. From a textfile a dictionary is made to be used as a pass/block filter.The textfile contains addresses and either a block or allow like "002029568,allow" or "0011*,allow" (without the quotes).The search-input is a string with a complete code like "001180000".How can I evaluate if the search-item is in the dictionary and make it match the "0011*,allow" line?Thank you very much for your efford!The filter-dictionary is made with:Check if the code (ccode) is in the dictionary:The filters-file is like:002029568,allow000923993,allow0011*, allow
If you can use , you don't have to worry about the wildcard but let  do the hard work for you:Which prints:The function will return a list of rulings. Their order is the same order as they appear in your config lines. So you could easily just pick the last or first ruling whichever is the one you're interested in.Or break the loop prematurely if you can assume that no two rulings will interfere.Examples: is matched by  only, so the only ruling which applies is . is matched by  at first, so you'll get  as before. However, it is also matched by , so a  will get added to the rulings, too.
If the wildcard entries in the file have a fixed length (for example, you only need to support lines like  and not  or  or any other arbitrary number of digits followed by ) you can use a nested dictionary, where the outer keys are the known parts of the wildcarded entries.Then when you parse the file and get to the line  you do not need to do any matching. All you have to do is check if  is present. Crude example:If you do need to support arbitrary lengths of wildcarded entries, you will have to resort to a loop iterating over the dictionary (and therefore beating the point of using a dictionary to begin with):


Answer URL
https://docs.python.org/3/library/re.html#re.match
