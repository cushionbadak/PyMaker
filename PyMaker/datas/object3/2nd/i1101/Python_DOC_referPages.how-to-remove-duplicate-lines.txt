Natural Text
I am trying to create a simple program that removes duplicate lines from a file. However, I am stuck. My goal is to ultimately remove all except 1 duplicate line, different from the suggested duplicate. So, I still have that data. I would also like to make it so, it takes in the same filename and outputs the same filename. When I tried to make the filenames both the same, it just outputs an empty file.input.txtExpected output
The line  truncates your file no matter what else you do. The reads that follow will find an empty file. My recommendation for doing this safely is to use a temporary file:Open a temp file for writingProcess the input to the new outputClose both filesMove the temp file to the input file nameThis is much more robust than opening the file twice for reading and writing. If anything goes wrong, you will have the original and whatever work you did so far stashed away. Your current approach can mess up your file if anything goes wrong in the process.Here is a sample using , and a  block to make sure everything is closed properly, even in case of error:The  at the end will work correctly even if the input and output names are the same, since  is guaranteed to be something different from both.Note also that I'm stripping the newline from each line in the set, since the last line might not have one.Alt SolutionIf your don't care about the order of the lines, you can simplify the process somewhat by doing everything directly in memory:You can compare this againstThe second version does exactly the same thing, but loads and writes all at once.
The problem is that you're trying to write to the same file that you're reading from. You have at least two options:Option 1Use different filenames (e.g. input.txt and output.txt). This is, at some level, easiest.Option 2Read all data in from your input file, close that file, then open the file for writing.Option 3Open the file for both reading and writing using  mode. You need to be careful in this case to read the data you're going to process before writing. If you do everything in a single loop, the loop iterator may lose track.
Output:
I believe this is the easiest way to do what you want:
Try the below code, using list comprehension with  and  and :
Just my two cents, in case you happen to be able to use Python3. It uses:A reusable  object which has a handy  method.An  as data structure to satisfy the constraints of uniqueness and order at once.A generator expression instead of  to save on memory.


Answer URL
https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile
