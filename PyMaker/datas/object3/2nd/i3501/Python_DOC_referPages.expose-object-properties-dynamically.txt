Natural Text
What I would like is to define some way of calling any attribute on Qux and have it return . In other words, to have  work without explicitly defining:I don't want to lose access to any properties defined on  itself as well, but rather to expose properties defined on  if they are not also on .
Define a : gets called whenever someone tries to look up an attribute of the object, but fails through normal means.It has an evil twin called , which always gets called and must be used with extreme caution.
You do that by defining , not with a property. For any attribute that cannot be found with the standard protocol, Python will call the  method of a class.Moreover, to store the , you have to assign it to , otherwise it is thrown at the end of .Finally, inheriting from  seems unecessary in that case.ExampleInheritanceAlthough, it seems you half-tried to implement this with inheritance. If your intent was to extend  behaviour with , then inheritance would be the way to go.Example


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
