Natural Text
I have a package for python 3.5 and 3.6 that has optional dependencies for which I want tests (pytest) that run on either version. I made a reduced example below consisting of two files, a simple  where the optional package "requests" (just an example) is imported and a flag is set to indicate the availability of requests.The  file content:The  file content:The  test works on Python 3.6.5:But not on Python 3.5.4:I have two questions:Why do I see this difference? Relevant packages seem to be of the same version on both 3.5 and 3.6.Is there a better way to do what I want? The code I have now is stitched together from examples found online. I have tried to patch the import mechanism in an attempt to avoid "reload", but I have not managed.
I would mock the  function (the one invoked behind the  statement). Example:The fixture  is responsible for replacing the  function with one that will raise on  attempt, doing fine on the rest of imports (we can't raise on any import or  itself will break).  is just to ensure that  will be reimported in each test.
If a test tests optional functionality, it should be skipped rather than passed if that functionality is missing. is the function used in the Python autotest suite to skip a test or a test file if a module is missing:Then, when running:


Answer URL
https://docs.python.org/3/library/functions.html#__import__
