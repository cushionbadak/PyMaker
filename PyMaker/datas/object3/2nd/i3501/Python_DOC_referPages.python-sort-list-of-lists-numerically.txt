Natural Text
I have a list of , coordinates that I need to sort based on the  coordinate, then  coordinate when  is the same and eliminate duplicates of the same coordinates. For example, if the list is:I would need to rearrange it to:(with one duplicate of  removed)
That is the normal sort order for a list of lists, anyway.  De-dupe it with a dict.
As we are sorting anyway we can dedupe with :A few timings:
What you want seems to be easily done with 's  function:If you are really worried that the array is not sorted by columns, then run  in addition to the above:Timings (non-random sample):Timings (more random sample):When sample data are more random, the results are different:
We can do this quite fast using  and some maskingPerformance
Here's one way using  and :Note  is also available via the standard library as the   recipe. Tuple conversion is necessary as the algorithm uses hashing via  to check uniqueness.Performance using  appears slightly better than  here, but as always you should test with your data.I suspect this is because  is lazy, and so you have less memory overhead since  isn't making a copy of the input data.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
