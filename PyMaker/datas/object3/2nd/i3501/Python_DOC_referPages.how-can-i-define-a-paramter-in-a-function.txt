Natural Text
I'm trying to make the function dice randomly roll from 1-6. But when I try to add the different numbers from the function, it says that one and two are undefined. I'm not sure to how solve this, and I'm pretty new at coding.
You probably want  and  to represent the values returned by the dice roll:I changed the variable names and function names to what I think is a better representation of what they are and do.
When you write , that doesn't look at the current value of  and then create a new variable named whatever that value is; it just reassigns the variable .And, even if it did create a new variable, it would be a local variable, unusable outside the function.What you really want to do here is not take a parameter at all:As a side note, you really don't need that  there. The numbers are already ints, and all you're doing with them is adding them and comparing to a string. You don't want the user to have to guess  (or, worse, ), you want them to guess , right? So just use .Meanwhile, you do need to convert the user's input to a number.  just returns a string. and the string  is not equal to the number  (whether it's an  or a ). So:If you actually did want to create a new global variable inside the function, that's possible. But it's almost always a very bad idea. To create a new global variable dynamically, you have to use the  function to get the global namespace as a dict, then work on that dict. Like this:But, again, this is almost always a very bad idea. Creating global variables from within a function is already a fishy thing to do. And good reasons for creating variables by name dynamically are even rarer. After all, you're not going to access the variable as , but as , so you almost certainly want to create the variable not as , but as . As in the example at the top of this answer.
 should result in an error, since you have no variables called . What you do have is .If you assign the results into variables  that would solve that. However, your  function does not return a value, so that needs fixing too.One last thing,  will never be  since  is a  while  is a . Fix by casting  to a float


Answer URL
https://docs.python.org/3/library/functions.html#globals
