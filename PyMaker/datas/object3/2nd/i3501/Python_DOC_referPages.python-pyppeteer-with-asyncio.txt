Natural Text
I was doing some tests and I wonder if the script below is running asynchronously?31 (sites) x 1.34 = 41.54s - so it's a few seconds less but in theory it should take only as long as the longest request?Perhaps opening a browser is not async here and I should use executor for this?
According to pyppeteer source code, it is using subprocess without pipes to manage Chromium processes, and websockets to communicate, therefore it is async.You have 31 sites, then you'll have 31+1 processes. So unless you have a CPU with 32 cores (there might also be threads, system processes, locks, hyper-threading and all different factors infecting the result, so this is just an imprecise example), it won't be fully executed in parallel. Therefore, the bottleneck I think is CPU opening browsers, rendering web pages and dumping into images. Using executor won't help.However, it is still async. That means, your Python process is not blocked, you can still run other code or wait for network results concurrently. It is only that when the CPU is fully loaded by other processes, it becomes harder for the Python process to "steal" CPU time.


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#executor
