Natural Text
I have following problem. I need to differentiate DNS packets sent by my application from standard DNS queries from other apps for further filtering by iptables. These requests have origin IP equal to IP of public interface to my idea was to bind socket to loopback and then fire request. Unfortunately I get  exception. Look on these examples:Why it is so? I though it's just matter of enabling net.ipv4.ip_forward but that's not the case. Any help appreciated.
More details on Python sockets (which are just wrappers over the native implementation): [Python]: socket - Low-level networking interface.It's a matter of scope (or visibility domain, if you will). There are 2 (simplified):Local (current machine):0 or more public interfaces (physical or virtual)0 or more loopback interfaces (127.0.0.1 .. 127.0.0.254)Global (network):0 or more public interfaces (from each host connected to the network), each of them uniquely identifiableThe loopback address has only meaning in the local scope. Your 4 cases:public -> public: OK - over the networkloopback -> loopback: OK - localpublic -> loopback: OK - localloopback -> public: FAILED - loopback address is not accessible over the networkWhen the 1st  call is made (also happens in case of  for s), the socket is automatically bound on all local addresses (0.0.0.0) (although this might be socket implementation specific) and an ephemeral port (also, as a note: once a socket is bound, it can't be unbound or rebound). This pair (which is encapsulated in the packets) will be used by the peer socket to figure out who sent them. Think that if 127.0.0.1 would be there, it would be very confusing for the peer socket to tell the difference between "you" (the socket who actually sent the packets) and their own loopback address. Maybe the "Invalid argument" error is a bit misleading. On Win, it's a bit more clearer (although some might argue on this):References (Google would yield tons of others):[AskUbuntu]: What is the loopback device and how do I use it?[SuperUser]: What's a loopback-address? I.e. 127.0.0.1[SE.Security]: binding to loopback interface secure enough[tldp]: The Loopback Interface


Answer URL
https://docs.python.org/3/library/socket.html#module-socket
