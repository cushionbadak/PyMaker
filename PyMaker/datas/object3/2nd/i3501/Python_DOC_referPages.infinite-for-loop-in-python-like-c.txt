Natural Text
In  we can write an infinite for loop like . Is here any syntax like this  to write an infinite for loop in Python?Note : I know that if I write  then it may run infinity. I am searching a simple syntax like  or any other tricks to write  in Python.
Python's  statement is a "for-each" loop (sort of like range-for in C++11 and later), not a C-style "for-computation" loop.But notice that in C,  does the same thing as . And Python's  loop is basically the same as C's with a few extra bells and whistles. And, in fact, the idiomatic way to loop forever is:1If you really do want to write a  loop that goes forever, you need an iterable of infinite length. You can grab one out of the standard library:2â€¦ or write one yourself:But again, this isn't really that similar to , because it's a for-each loop.1.  used to be a common alternative. It's faster in older versions of Python, although not in current ones, and occasionally that mattered.2. Of course the point of  isn't just going on forever, it's counting up numbers forever. For example, if  didn't exist, you could write it as .
Yes, it is possible.With a  loop:With a  loop (just for kicks):The  returns  indefinitely. In either case, it's up to you to implement your loop logic in such a way that you terminate eventually. And lastly, if you want to implement an execute-until-___ loop, you should stick to , because that's the idiomatic way of doing it.
I found the answer from here and hereUsing itertools.count:In Python2 xrange() is limited to sys.maxint, which may be enough for most practical purposes:In Python3, range() can go much higher, though not to infinity:So it's probably best to use It is also possible to achieve this by mutating the list you're iterating on, for example:
Yes, here you are:The infinite iterator part was taken from this answer. If you really think about it though, a while loop looks way better.
You can use:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.count
