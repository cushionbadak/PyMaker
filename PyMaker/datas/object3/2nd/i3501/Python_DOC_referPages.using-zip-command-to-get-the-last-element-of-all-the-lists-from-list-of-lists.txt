Natural Text
I have a list of lists:and I want the last and first elements of each list into a separate list. I used the zip command:for all first elements and gave me:but when I use I got instead of what am I doing wrong?
You were close - just use the reversed list iterators:Or, more directly, a list comprehension:
 zips up iterables of the same length. If you give it iterables of different lengths, it stops at the end of the first one.So, since your shortest list is length 2, you get the first elements, then the second elements… and that's it, so  returns the second elements.You could use , but that won't really help, because it handles iterables of different lengths by filling in extra  values at the end, not by… inserting extra values in the middle or something that would stretch them all out to the same length.The easiest thing to do is to take the first and last of each first, before zipping:Then you can transpose that with :Or just not  anything, since you're not getting any real benefit out of transposing things anyway, just making things more complicated:Alternatively, you could zip the forward and backward lists:And then get the first elements out of each of those:I think this is the closest to what you were trying to do, but it seems like the most complicated way to do it.


Answer URL
https://docs.python.org/3/library/functions.html#zip
