Natural Text
With a string you can replace substrings of length greater than 1. For example,  yields . I would like to do this with a list. For example, something like this:should yieldNote that this question is not a duplicate because they do not need to match patterns but only specific items of the list.
a solution that works, replaces the sub-list in-place by using slice assignment:now  is:more complex input (to test end condition & multiple replacements)yields once replaced:how it works:loop to slice the list to replace into to the exact size of the sub-list (use while because list changes if replaced intoif there's a match, use slice assignment to replace the slice by the replacement & increase counter to avoid overlapping replacementsI'm not too happy about the constant list slicing, but it's needed here to perform equality with the other list, and creating an inner loop would be more cumbersome and not necessarily faster.If you don't want to work in-place, you could create a copy at start,work on the copy and return it:
If you use ast.literal_eval then you can use the same string :As pointed out in comments, you can also use json to do a similar thing:
with recursion, maybe it is not a good solution but it worksOutput
The following solution is a bit far-fetched, but it goes from the following assumption:The method  is fast, very fast. Why not convert the list to something that can use it.First we need to write a helper that will allow to get a hash for mutable elements in the list.We can now write translation dictionaries for conversion to a string representation in O(n) and use . Example


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
https://docs.python.org/3/library/json.html
