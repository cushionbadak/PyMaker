Natural Text
So I currently have a nested list. I need to figure out how to manipulate it to create lists of possible combinations of the nested lists. These combinations cannot have lists that share numbers. Here is an example of what the result should be:Note: 1. This code is going to be linked to a constantly updated csv file, so the org_network list will have varying amounts of elements within it (which also means that there will be numerous resulting networks.I have been working on this for about four hours and have yet to figure it out. Any help would be very appreciated. I have primarily been trying to use for loops and any() functions to no avail. Thanks for any help.
You can use  with set intersection:
Here is an approach that will be efficient if the number of unique elements is small relative to the number of sets.Steps:For each unique element, store indices of all sets in which the element does not occur.For each set  in the network, find all other sets that contain every element of  using data from the first step.Iterate over pairs, discarding duplicates based on ID order.Edit: If combinations of size greater than two are required, it is possible to modify the above approach. Here is an extension that uses depth-first search to traverse all pairwise disjoint combinations.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
