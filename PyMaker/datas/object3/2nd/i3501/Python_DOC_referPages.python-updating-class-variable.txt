Natural Text
I have simplified the problem like this.program.pyclassA.pyclassB.pyIn program.py, I created a classB instance myClass, and initialized with 7. If then, from classB.py, a classA instance Aclass will be created, and also be initialized with 7, so when I call print__(), it shows that Aclass is also initialized with 7.The problem here is when I updated myClass.bbb to 8, I also expected Aclass.aaa to be 8, but it didn't.I might solve this by making another function like update_varA(), but could you please explain why this happens, and a better solution to this?
You are right about the update function. In your case it would be (in classB.py)Another way would be to set the value directly in your main routine (program.py)would to the trick.If you want to dive in a little deeper, you could also override the  function. Basically, when you do something likepython does this under the hood:myClass is acutually an instance of the class here btw, so the name is a little misleading. Nevertheless, you can override the setattr():but this is quite advanced. You can read about it here


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__setattr__
