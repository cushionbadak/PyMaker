Natural Text
Am a beginner.Sorry if my question is childish . Do cachetools in python work for susbsequent runs? So during the first run the third call is faster but the next time i run the file i want the first call to be faster and take result from the cache. Can cachetools do this?
 cannot do this out of the box. But it's very easy to add.You can pass any mutable mapping you want to the memoizing decorators. You're using a plain old dict, and dicts are trivial to pickle. And even if you use one of the fancy cache implementations provided by the library, they're all easy to pickle as well.1So:Of course you can add:A  or context manager or  to make sure you save your files at shutdown even if you hit an exception or ^C.A timer that saves them every so often.A hook on the cache object to save on every update, or every Nth update. (Just override the  methodâ€”or see Extending cache classes for other things you can do, if you use one of the fancier classes instead of a dict.)Or you can even use an on-disk key-value database as a cache.The simplest such database is . It's limited to / for both keys and values. (You can use  if you want non-string values; if you want non-string keys, you probably want a different solution.) So, that doesn't quite work for our example. But for a similar example, it's almost magic:The only tricky bit was that I had to override the  function. (The default key function handles , so for argument  you end up with something like , which is obviously not a string.)1. As you can see from the source, there are bug fixes to make sure all of the classes are picklable in all supported Python versions, so this is clearly intentional.


Answer URL
https://docs.python.org/3/library/dbm.html
https://docs.python.org/3/library/shelve.html
