Natural Text
I'm reading a book on Python3 (Introducing Python by Bill Lubanovic), and came across something I wasn't sure is a Python preference, or just a "simplification" due to being a book and trying to describe something else.It's on how to write to a file using chunks instead of in one shot.I was about to ask why it has  instead of , but decided to try it for myself, and saw that  doesn't actually do anything in my Python console.Is that just a bug in the console, or does Python really require you to move the condition inside the while loop like that? With all of the changes to make it as minimal as possible, this seems very verbose.(I'm coming from a background in Java, C#, and JavaScript where the condition as the definition for the loop is standard.)EDITThanks to xnx's comment, I realized that I had my logic incorrect in what I would have the condition be.This brings me back to a clearer question that I originally wanted to focus on:Does Python prefer to do  and have the condition use a  inside the loop, or was that just an oversight on the author's part as he tried to explain a different concept?
I was about to ask why it has while True instead of while (offset <= size), but decided to try it for myself, This is actually how I would have written it.  It should be logically equivelent.and saw that while (offset > size) doesn't actually do anything in my Python console.You needed to use , not .  The current logic stops as soon as the  is greater than , so reverse the condition if you want to put it in the while statement.does Python really require you to move the condition inside the while loop like that? No, Python allows you write write the condition in the while loop directly.  Both options are fine, and it really is more a matter of personal preference in how you write your logic.  I prefer the simpler form, as you were suggesting, over the original author's version.This should work fine:For details, see the documentation for , which specifically states that any expression can be used before the .Edit:Does Python prefer to do while True and have the condition use a break inside the loop, or was that just an oversight on the author's part as he tried to explain a different concept?Python does not prefer . Either version is fine, and it's completely a matter of preference for the coder.  I personally prefer keeping the expression in the while statement, as I find the code more clear, concise, and maintainable using .
It is legal Python code to put the conditional in the loop. Personally I think:is clearer than:I prefer the first form because there's one less branch to follow but the logic is not any more complex. All other things being equal, lower levels of indentation are easier to read.If there were multiple different conditions that would break out of the loop then it might be preferable to go for the  syntax.As for the observed behavior with the incorrect loop logic, consider this snippet:The while loop will never be entered as  starts off false.
is exactly equivalent to They both run until offset > size. It is simply a different way of phrasing it -- both are acceptable, and I'm not aware of any performance differences. They would only run differently if you had the break condition at the bottom of the  loop (i.e. after )edit: According to the Python wiki, in Python 2.* "it slows things down a lot" to put the condition inside the  loop: "this is due to first testing the True condition for the while, then again testing" the break condition. I don't know what measure they use for "a lot", but it seems miniscule enough. 
When reading from a file, you usually doIt seems to me like the author is more used to doing reading than writing, and in this case the reading idiom of using  has leaked through to the writing code.As most of the folks answering the question can attest to, using simply  is probably more Pythonic and simpler, though even simpler might be just to dosince the underlying I/O library can handle the chunked writes for you.
Does Python prefer to do while True and have the condition use a break  inside the loop, or was that just an oversight on the author's part as  he tried to explain a different concept?No it doesn't, this is a quirk or error of the author's own.There are situations where typical Python style (and Guido van Rossum) actively advise using , but this isn't one of them. That said, they don't disadvise it either. I imagine there are cases where a test would be easier to read and understand as "say when to break" than as "say when to keep going". Even though they're just logical negations of each other, one or other might make express things a little more simply:vs.I still sort of prefer the first, but YMMV. Even better introduce functions that correspond to the English idiom:  and The "necessary" use is when you want to execute the break test at the end or middle of the loop (that is to say, when you want to execute part or all of the loop unconditionally the first time through). Where other languages have a greater variety of more complex loop constructs, and other examples play games with a variable to decide whether to break or not, Guido says "just use ". Here's an example from the FAQ, for a loop that starts with an assignment:C code:Python code:The FAQ remarks (and this relates to typical Python style):An interesting phenomenon is that most experienced Python programmers  recognize the  idiom and don’t seem to be missing the  assignment in expression construct much; it’s only newcomers who  express a strong desire to add this to the language.It also points out that for this particular example, you can in fact avoid the whole problem anyway with .
In my opinion, while True is better than other ways, in big programs; which has long codes. Because you cant see actually that a variable may change because of some functions or etc. while True means start if its true which means start this loop whatever happens except closed the program. So that maybe writer of the book want you used to use while True, is a little less risky than others.It's better used to while True and define the variable which is may stop this loop.


Answer URL
https://docs.python.org/3/reference/compound_stmts.html?highlight=while
