Natural Text
System: python 3.4.2 on linux.I'm woring on a django application (irrelevant), and I encountered a problem that it throwswhen print is called (!). After quite a bit of digging, I discovered I should checkbut it was as expected, utf8. I noticed also that  throws the same exception when used with a unicode string. So I checkedWhen I used   the issue disappeared. I understand now why  had problems with that. But I have absolutely no clue why  statement is affected by the filesystem setting. Is there a third setting I'm missing? Or does it just assume  environment is to be trusted for everything?Also... I don't get the reasoning here.  does not tell what encoding is supported by the filenames. It has nothing to do with that. It's set separately for the current environment, not for the filesystem. Why is python using this setting for filesystem filenames? It makes applications very fragile, as all the file operations just break when run in an environment where  is not set or set to  (not uncommon, especially when a web-app is run as root or a new user created specifically for the daemon).Test code (no actual unicode input needed to avoid terminal encoding pitfalls):Question:is there a good and accepted way of making the application robust to the  setting?is there any real-world reason to guess the filesystem capabilities from environment instead of the filesystem driver?why is  affected?
 is used to determine your locale; if you don't set specific  variables the  variable is used as the default.The filesystem encoding is determined by the  variable, but if you haven't set that variable specifically, the  environment variable is used instead.Printing uses , a textfile configured with the codec your terminal uses. Your terminal settings is also locale specific; your  variable should really reflect what locale your terminal is set to. If that is UTF-8, you need to make sure your  variable reflects that.  uses  (like all text streams opened without an explicit encoding set) and on POSIX systems that'll use  too.


Answer URL
https://docs.python.org/3/library/locale.html#locale.getpreferredencoding
