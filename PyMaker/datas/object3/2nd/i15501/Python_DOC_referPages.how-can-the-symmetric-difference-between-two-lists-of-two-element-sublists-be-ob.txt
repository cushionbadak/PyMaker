Natural Text
I have two lists each of which contain two-element lists.I want to get the 'symmetric difference' of the two lists, based on the 'key' first elements of the sublists.This 'symmetric difference' would be the following:So, the 'Adolf' entries have been removed because they exist in both lists, while the others, including the 'Rudolf' entry, have been included because they exist not in both lists.Another example would be the following:I feel that this must be achievable through some clever list comprehensions, but I'm not quite sure how to approach it.
You can make a  of names (the first element) from each list, then use  which will get the symmetric difference of the sets of names. Then use a list comprehension to iterate over each of the lists and check if the name is in the unique set, then add the results of those two list comprehensions.First exampleSecond example


Answer URL
https://docs.python.org/3/library/stdtypes.html?highlight=set#set.symmetric_difference
