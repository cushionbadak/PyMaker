Natural Text
This came up in a nitpick discussion about the prefered style for iterating over dictionary keys if you need to apply some test to the value. I was comparing the performance of  against .Looks like dictionary lookups are more expensive in Python 3.4:Are lookups more expensive in Python 3.4 compared to 2.7 and can you explain why?
It's not that lookups are more expensive1 in Python 3.4 than 2.7, but that  is cheaper. That's because  is a rather different beast in the two versions of the language:In Python 2,  constructs and returns a list, whereas in Python 3 it returns a dictionary view, and it turns out that iterating over this dynamic view into the dictionary is faster than constructing a list and then iterating over that.Although  doesn't return a dictionary view in 2.7, it is possible to get one with , with similar performance benefits. Repeating your test, this time with  included, I get:As regards the discussion that prompted your investigation, I'd say that the  or  approach is more explicit, and therefore more pythonic, but that's really more an aesthetic choice than anything else.1 Except inasmuch as Python 3.x is, as a general rule, slower than 2.x, but that's the price of progress ...


Answer URL
https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
