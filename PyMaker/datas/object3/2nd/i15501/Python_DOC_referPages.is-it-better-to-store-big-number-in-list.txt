Natural Text
Is it memory efficient to store big number in list? Why does the following happens?Why size of A and B are not equal?Why size of C and D are equal?
 returns the shallow size, i.e. the size of the list object itself but not of the objects it contains.From the documentation:Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.If you'd like to compute the deep size, it might be worth giving Pympler a try:Thus, on my computer, placing the long inside a list adds 80 bytes of overhead.
The size of A and B are not equal because you've put B into a list.  In this case, A is a long and B is a list type.  C and D are the same size because their numerical contents are the same width inside the list container.Further,  returns the size of the topmost object using the  method, not the size of the items referenced inside of that object.  
from python wiki :Its because of that  Return the size of an object in bytes. The object can be any type of object. All built-in objects will return correct results, but this does not have to hold true for third-party extensions as it is implementation specific.Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.and in this case B is the name of list and actually a pointer to list ! so  return the size of a list object , not its content ! 


Answer URL
https://docs.python.org/3/library/sys.html#sys.getsizeof
https://docs.python.org/3/library/sys.html#sys.getsizeof
