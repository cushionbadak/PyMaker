Natural Text
I was using asyncio for a project, and encountered this strange behavior.For some reason, storing the resulting task when you call  stops exceptions from doing anything.Could someone shed some light on this situation? I need to have a way to catch exceptions in my current project.
This is because the exception only gets raised if the  is destroyed without ever having its result retrieved. When you assigned the  to a global variable, it will always have an active reference, and therefore never be destroyed. There's a docstring in asyncio/futures.py that goes into detail on this:If you want to see/handle the exception, just use  to handle the result of the task, and do whatever is necessary when you get an exception:


Answer URL
https://docs.python.org/3/library/asyncio-task.html#asyncio.Future.add_done_callback
