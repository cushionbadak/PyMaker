Natural Text
Let's say I have a class which represents a directory (simplified example of course):To make things easier to implement internally, I am calling  on the  argument before I save it into an attribute.  This works great, but it lowercases the path:I would like a way to turn the path back into its properly capitalized form of .  I plan to do this inside the  method so that I can get nice outputs such as:when I am in the interactive interpreter. Is there anything like this in the standard library?Note: I am not referring to the string that the user supplied as the  argument.  If a user does:I still want  to be printed in the interpreter because that is the proper capitalization.  Basically, I want the outputed paths to be the same as they are in the file explorer.
Update:For those using the newer versions of Python, the new  module possesses this functionality in the form of :So, you could store the user-supplied path as a  object:and then implement the  method like so:As an added bonus, we no longer need the  function since  objects support case-insensitive comparisons directly.One downside to  though is that it is only available in Python 3.4 (the currently newest version).  So, those using earlier versions will need to either get a backport to their version or use the  function as demonstrated below.While I was digging through the standard library, I came across an undocumented function in the  module named :Using , I can get the output I need:The only downside to this approach is that the function is undocumented and somewhat hidden.  But it suits my needs for now (of course, I'd love to hear a better approach if you know of one :)


Answer URL
https://docs.python.org/3/library/os.path.html#os.path.normcase
https://docs.python.org/3/library/stdtypes.html#str.lstrip
