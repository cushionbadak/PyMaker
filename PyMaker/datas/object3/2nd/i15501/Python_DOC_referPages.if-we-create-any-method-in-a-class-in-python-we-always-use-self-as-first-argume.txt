Natural Text
output : here  is not given as parameter while calling  with .
That's because  is, by default, the instance itself.  is equivalent to .
The first argument of every class method, including , is always a reference to the current instance of the class. By convention, this argument is always named . In the  method, self refers to the newly created object; in other instance methods, it refers to the instance whose method was called. Although you need to specify  explicitly when defining the method, you do not specify it when calling the method; Python will add it for you automatically.Learn more about  here and here
Technically, this is what happens:It tries to evaluate It funds that the object  has no attribute named It then looks in 's class () for an attribute named , which it does have is a function, so then it "wraps" it into a "instance method". Basically,  is a function with one parameter (), so the "instance method" is a function with one less parameter from the original function (no parameters in this case), which remembers the object . And if you call this "instance method", it passes it onto , with the first argument being , the rest of the arguments being the argument to the bound method. evaluates to this instance methodYou make a call on this instance method, which calls , with the remembered instance () as the first argument.Here are the relevant parts from the language reference (scroll from here):Class instancesA class instance is created by calling a class object (see above). A class instance has a namespace implemented as a dictionary which is  the first place in which attribute references are searched. When an  attribute is not found there, and the instance’s class has an  attribute by that name, the search continues with the class  attributes. If a class attribute is found that is a user-defined  function object, it is transformed into an instance method object  whose  attribute is the instance. [...]andInstance methods[...]When an instance method object is created by retrieving a user-defined  function object from a class via one of its instances, its   attribute is the instance, and the method object is said to be bound.  The new method’s  attribute is the original function object.[...]When an instance method object is called, the underlying function  () is called, inserting the class instance () in  front of the argument list. For instance, when  is a class which  contains a definition for a function , and  is an instance of  , calling  is equivalent to calling .[...]


Answer URL
https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy
