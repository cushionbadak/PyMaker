Natural Text
I would have a function that can either be called directly or via a with statement, and it should behave differently depending on how it is called, returning a context manager if called via a with statement, otherwise doing what the context manager would do directly.e.g.When called from a with:When called directly:Is there a way to do this?Edit: My use case is for a tool I'm working on for writing html. I've put my initial code here: https://github.com/garyvdm/htmlwrite (please note it is currently a work in progress.)I would like the user to be able to write this: Instead of this: (note the call to )
Context managers are not limited to  statements. Apart from assigning the manager to a variable before using it with  (, then ), you can use context manager in an  or call the  and  methods separately.The better option is to always return a context manager from your function. If that means that you'll also need to provide a different function to provide a non-contextmanager version of the behaviour, so be it.That said, you could adapt behaviour based on the number of arguments; this is what  does. Internally you always create a context manager, but with more arguments you simply apply he context immediately:
Assuming what you want to avoid is double context manager invocation, that is same context manager should not be doubled, I propose that you hack context manager to be reentrant.Here's a simple example using transactions:


Answer URL
https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack
https://docs.python.org/3/library/contextlib.html#reentrant-cms
