Natural Text
I am sorry if a similar question to this has already been answered, but I looked extensively and haven't found a solution. I am relatively new to Pyhton.I am trying to create a matrix of indexes/coordinates to all the posible a list which is two dimensional (a set of sublists, of different size, a list), in order to address all possible combinations of elements.If my list was , the matrix to be created is , where the first and only element of each list refers to the position of the sublist inside the list.If my list was , the matrix should yield:And so on. Each sublist has length equal to the number of sublists in the original list. The content of the starting list is irrelevant, but the order is, since, in the outcome, position  of each sublist represents the coordinate of an element in the sublist , etcetera.Basically, this represents all combinations of elements among the sublists, something like a cartesian product.I guess this can be done with some sort of list comprehension, but couldn't find an answer.
You are looking for :Or rather, the product of the indices, so just use  of appropriate sizes instead of the original lists.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
