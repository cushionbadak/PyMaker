Natural Text
I'm new to python and currently playing with it.I have a script which does some API Calls to an appliance. I would like to extend the functionality and call different functions based on the arguments given when calling the script.Currently I have the following:I also have a andHow can I call the function (and only this) based on the argument given?I don't want to run as I want to move the different functions to a module later on keeping the main executable file clean and tidy.
Since it seems like you want to run one, and only one, function depending on the arguments given, I would suggest you use a mandatory positional argument , instead of optional arguments ( or ).so, something like this should do it:
There are lots of ways of skinning this cat.  Here's one using  (inspired by the documented subparser example):With a shared , each action puts its function () in the same Namespace attribute.  The function is invoked by .  And as in the documented subparsers example, those functions could be written so as to use other values from Namespace.For sake of comparison, here's the equivalent subparsers case:As illustrated in the documentation, subparsers lets you define different parameter arguments for each of the commands.And of course all of these  argument or parser statements could be created in a loop over some list or dictionary that pairs a key with a function.Another important consideration - what kind of usage and help do you want?  The different approaches generate very different help messages.
If your functions are "simple enough" take adventage of  parameter https://docs.python.org/2.7/library/argparse.html#type type= can take any callable that takes a single string argument and  returns the converted value:In your example (even if you don't need a converted value):This simple script:Will give:
At least from what you have described,  and  sound more like sub-commands than options. Assuming this is the case, we can use subparsers to achieve your desired result. Here is a proof of concept:


Answer URL
https://docs.python.org/3/library/argparse.html#sub-commands
