Natural Text
I am wondering if it would be a good idea to use different  scripts for different parts of a Python program. Like one  file for a calculator and another for class files and etc. If it is a good idea, is it possible?If possible, where can I find how to do so? I am asking this because I find it confusing to have so much code in a single file, and have to find it anytime fixing is needed.
If your program starts assuming big dimensions, yes, you could split your classes or simply your functions according to what they do. Usually functions that do similar tasks or that work on the same data are put together.To import a file containing a set of functions that you defined, if the file is in the same folder where your main script is, you can simply use this statement, if, for example, the name of the script containing your function that you want to imported is called , you can simply do  or , or, better, .Let's talk about the 3 ways of importing files that I have just mentioned:Here, in order to use one of your functions, for example , you have to put the name of the module in front of the name of the function followed by a :In this case, you can directly call foo just typing .  means that you have just imported everything from the module .In this last case, you have imported a specific function  from the module , and you can use just the  from the same module:
It certainly is possible, and is frequently a good idea.  This is for exactly the reason you cite: if you have all your code in one big file, it gets annoying to edit that one file.So, for example, let's say you have a calculator function and some class.  You can put them in two separate files -- the first in and the second in some other fileTo use them from some other script, you just need to import them:Instead of , you can also use  and then .  For example, the following is equivalent:There's always a balancing act between making too many separate files and making too few.  Basically, it's up to you.  The main factor that drives my decision is usually how closely related the different things are, and how reusable the different components would be if they were separated.  For example, if my  function did something complicated, but didn't depend at all on the details of , I would make sure to put it in a separate file.  On the other hand, if I always import  whenever I import , and the codes for both were simple, I'd probably just stick them into the same file.  And if I'm never going to use the code in them again, I'd probably just stick them in the main script's file itself.


Answer URL
https://docs.python.org/3/reference/import.html
