Natural Text
I have a dataframe with two columns  and  that contains lists:I want to construct a third column  that is defined such that it is equal to the smallest possible difference between list-elements in  and  if they are non-empty, and 0 if one or both of them are empty. For the first row the smallest difference is 1 (we take absolute value..), for the second row it is 0 due to lists being empty, third row is 4 and fourth row is 0 again due to one empty list, so we ultimately end up with:
This isn't easily vectorisable, since you have  dtype series of lists. You can use a list comprehension with :
You can use the following list comprehension, checking for the  difference of the cartesian product () from both columns

I just want to introduce the unnesting again FYI 
I think this works


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.product
