Natural Text
TL,DR; How can JSON containing a regex with escaped backslahes, be loaded using Python's JSON decoder?Detail; The regular expression  will match (for example):The same regular expression could be encoded as a JSON value:And in turn, the JSON value could be encoded as a string in Python (note the single quotes):When loading the JSON in Python, a JSONDecodeError is raised:The problem is caused by the regular expression escaping the blackslashes:This surprised me since each step seems reasonable (i.e. valid regex, valid JSON, and valid Python).How can JSON containing a regex with escaped backslahes, be loaded using Python's JSON decoder?
What's happening is that Python is first escaping the input to  as a string literal, making it  (double backslash -> single backslash). Then,  now attempts to escape , which is invalid. To fix, escape the backslashes again. However, it's easier and more practical to specify it as a raw string:Note that this problem won't apply if loading from a file.:Python:Basically, the problem arises with the fact that you're passing in a string literal, but ironically, your string literal isn't being taken literally.
The  means that the string is to be treated as a raw string, which means all escape codes will be ignored:


Answer URL
https://docs.python.org/3/library/json.html
https://docs.python.org/3/library/json.html
https://docs.python.org/3/library/json.html
