Natural Text
I have a very simple code that is supposed to print out '2' every time the microsecond of the current time is 2, or once per second. However, when I run this code, it returns nothing. How can I fix this?
You can't reliably build a loop that will only print exactly every second at the point where the number of microseconds in the current time is equal to 2.Computer clocks don't necessarily tick every single microsecond, nor is Python always fast enough to produce a  instance for a given microsecond. On many systems, calling  will produce the exact same value for several microseconds at a stretch, all the way up to only producing a new, distinct time once a second. Your code also creates multiple  objects, so after you test for the  attribute, the next one created when you call  may easily have a higher  value.See the  module which documents available clocks in a little more detail.  uses the same clock as :The precision of the various real-time functions may be less than suggested by the units in which their value or argument is expressed. E.g. on most Unix systems, the clock “ticks” only 50 or 100 times a second.andNote that even though the time is always returned as a floating point number, not all systems provide time with a better precision than 1 second. While this function normally returns non-decreasing values, it can return a lower value than a previous call if the system clock has been set back between the two calls.It depends both on your OS and your computer hardware what the precision of your system clock is; it is not the resolution of the clock that matters (how much information can be given in the clock value) but rather how often that value is refreshed.If you want to limit printing to once a second, just track the last time you printed and make sure the new time is at least 1 second newer:


Answer URL
https://docs.python.org/3/library/time.html
