Natural Text
I want to do the following in Python 2.7.13:Convert int-value to hex ( should become )Add a "payload" (Simple string like c1234) to the created hexWrite pure hex to a fileMy code currently looks like this:And I get the following file (Using  on Debian):which is not what i need. I need a file that looks like this:My understanding is the following: converted my int to hex, but it was written as a String.  did it correctly, but that doesn't work with integers. How can I circumvent this behavior and write "pure" hex to my file? If it is not possible to do it in Python 2 i can also use Python 3.As this is my first question on StackOverflow please tell me if I should do anything different.
Part of the problem is that the result of  is a string of the pairs of hexadecimal characters — in this case — which represents the value of the integer  in that format, so that's what is being written to the file. However what's needed are the actual byte values that comprise the integer itself.In Python 3, this could be easily solved by instead using a built-in method called  that was added to the  type in that version, but in Python 2.x it has to be done another way.There's similar issue due to your use of  which is also returning a hexadecimal string representation — not the actual byte values of each the characters already in , which is what is needed. Fortunately in this case what needs to be can be easily accomplished by using the built-in  class Python 2.x has.Below a version I wrote of a function posted as part of an answer to a related question that can deal with the issue with the  value.Following that function definition is code showing how to use it in this case, along with the  class, to get the proper binary data written to the file.Here's a hex dump of contents of the  file it produced (with Python 2.7.15):


Answer URL
https://docs.python.org/3/library/stdtypes.html#int.to_bytes
