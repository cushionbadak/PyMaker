Natural Text
I am looking at some code which apparently runs, as nobody has complained about it, but am well confused by what they have written:I have always thought of the 'and' operator as something which returns True or False, now am starting to doubt myself.. What else would it return, a number..  It is probably not pythonic, but am I missing something - how can someone write something like that?
According to [Python 3]: Operator precedence (emphasis is mine):The following table summarizes the operator precedence in Python, from lowest precedence (least binding) to highest precedence (most binding).The fact that is not comes after and, means that it will be evaluated before and (both might not be evaluated at all, due to lazy evaluation - thanks @NickA for the comment), so the expression is equivalent to (adding parentheses for clarity):Also, according to [Python 3]: Truth Value Testing:Any object can be tested for truth value, for use in an if or while condition or as operand of the Boolean operations below.your if statement is perfectly OK (produces a bool).Examples (using [Python 3]: class bool([x])):
It means if  and  and not what you thought it meant i.e. 
The code above means: If  (is truthy), AND  isn't , then .
In this code, you evaluate  first, which is a boolean.And then  is implicitly converted into a boolean (For a /,  if it is empty. For a number,  if it is 0)then  is evaluated which always return a boolean.
It is most certainly valid. When we take a variable which has been assigned a value and perform the AND operation with another variable with a null (in python - None), the AND operation results in a None. Hence, the check can be made. To make my point clear, please refer below. andresults in Noneand results in Non-null value - in our case 11


Answer URL
https://docs.python.org/3/reference/expressions.html#operator-precedence
https://docs.python.org/3/library/stdtypes.html#truth-value-testing
https://docs.python.org/3/reference/compound_stmts.html#if
https://docs.python.org/3/reference/compound_stmts.html#while
https://docs.python.org/3/library/functions.html#bool
