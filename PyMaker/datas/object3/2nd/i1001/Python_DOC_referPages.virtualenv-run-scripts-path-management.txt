Natural Text
Put simply:  How do i guarantee my virtualenv is used and not the native env?Problem with other answers:  I've seen this question answered a lot, but the answers are terse and basically just cover the "plug 'n play" scenario of virtual env.My Scenerio:  Lets assume a virtual python environment (myEnv) in a folder somewhere that is sufficiently complex, and a machine running it that is sufficiently complex (targetEnv).  Lets assume there is a lot of customization in the virtualenv (myEnv) and that the evn variable in that virtualenv are modified in ways we cannot know (example: through .pth files).Usually the answer I see is that we should do something like this in the windows cmd prompt:Now if you look into activate.batch or Activate.ps1, you'll see all they do is assume you've set up a  variable for your native python environment and then set up new env variables , , , and temporarily remove the  variable.However this still doesn't tell the shell how to find something like .  When I run this like the code suggested above I get a python environment that doesn't contain any of the sys paths in the shell that would activated if explicitly called:   cd /d C:\Program Files\MyApp\myEnv\Scripts\ && python.exeThen in the resulting shell I call:   import sys   sys.pathThis sort of makes since because all  did was change the name of environment variables so it's still completely logical that just calling:    cd /d C:\Program Files\MyApp\ && python Main.pyfinds the  in the  (which is the same as the  variable was) instead of the  (which is equal to ) path.  I suppose this means that modules in the 'VIRTUAL_ENV' path with be discovered but, paths added to the virtual environment will never be searched, because the executable for the myEnv shell isn't called.Anyone know how to trouble shoot this?EDIT 1As noted in the comments I need to clarify.  The .pth file mentioned in the question only contains relative paths and not absolute paths.  As in any real shipping or deployment situation lets assume we don't know where this virtual env is installed and thus have to rely on using paths relative to env variables. 
Did you tried using below command in CMD ??you can refer more on venv here


Answer URL
https://docs.python.org/3/library/venv.html
