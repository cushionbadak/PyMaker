Natural Text
I have a function that sorts a list of lists by the first list. When I use the function with the variables like so:it works perfectly. Although, as I don't know how many lists my input contains, I want to use this as my variable:Although this returns a sorting of one list (the superlist). Why is there a difference between these variables, and how can I improve the code?Here is the function if decisive (here IN[0] is the input with a number of sublists):I want to use this output:
Two things to understand here:  will give you all function parameters as a tuple is a generator expressionYou can see how your inputs are different if you simply add  statement in your function:Let the input list of lists be: .will print: . That's a tuple of inner lists.  Though, if you call it like this:or this will print , a one-element tuple of a generator. You can make your function work with a generator by accepting only one parameter:but I suggest to leave your function as is, and unpack your lists in the place where you call it instead:
Just change the function to accept list of lists, is it problem? This piece of code:returns again list of lists
As Georgy pointed out, the difference is between the arguments being a generator or list. I would also like to point out that this is an opportunity to use and practice the  method.  applies the same function to each entry in a list. The function can be a built-in like .Returns:You'll notice that you'll have to pass your  to the  function because  returns a map object, so you have to turn it into a list. The map documentation is here. And a good example of it is here.


Answer URL
https://docs.python.org/3/glossary.html#term-generator-expression
https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
https://docs.python.org/3/library/functions.html#map
