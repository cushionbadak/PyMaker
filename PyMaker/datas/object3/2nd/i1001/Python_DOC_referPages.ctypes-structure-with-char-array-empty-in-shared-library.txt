Natural Text
I have a shared C library with a struct I would like to use in my python codeso in python I recreate it withwhen I check the type of MyStruct.name i get 'str', whereas I expected 'c_char_Array_64'.So when I set the 'name' and try to use it, C sees it as blank.where lib is the shared C library loaded with ctypes and my_func simply prints struct->nameI would like to know why ctypes.Structure converts the char-array to a string and how to use it in the case specified above.Thank youUpdate & SolutionTnanks to @CristiFati for the help on debugging this problem. I have marked his answer as correct as it is in fact the answer to the question posted. In my case the problem was that the Structs were NOT of equal lengths in the Python and C program. So to whoever stumbles upon this question in the future, be very meticulous in checking that your Structs are in fact defined equally.
You're doing something wrong, but without looking at the full code I can't say what. So I prepared a small example that works. I'm also posting [Python 3]: ctypes - A foreign function library for Python as a reference.dll.c:code.py:Output:


Answer URL
https://docs.python.org/3/library/ctypes.html#module-ctypes
