Natural Text
This question already has an answer here:Access nested dictionary items via a list of keys?                    14 answers                Let's say i have a list of keysand i have a valueand an example dict  with this structureHow can i dynamically assign the new value in variable  to  by going thru / looping over my ?I can not just say  since the keys and the number of keys is changing. I always get the keys (the path that i have to save the value at) in a list...I'm using Python 3.7
Predefined dictionary structure: You can define a function using  to apply  repeatedly and then set a supplied value:Note  is used to access , or its more commonly used syntactic sugar . In this instance,  calls  recursively on , successively using each value in  as an argument. With , we intentionally leave out the last value, so we can use  via  for the final key.Arbitrary dictionary nesting: If you wish to add items at arbitrary branches not yet been defined, you can construct a . For this, you can first  your regular dictionary input, then use  as before:
You can iteratively build/access levels using  in a loop: is the reference to your dictionary, and  is a throw-away reference that accesses inner levels at each iteration.
I guess you can loop through your keys like this :Edit: I guess I misread the question and answered as if the dictionnary wasn't already existing. jpp answer is pretty neat otherwise I guess!
This is what you want:You could use  too, it's neat in a sense but prints rather ugly...:



Answer URL
https://docs.python.org/3/library/functools.html#functools.reduce
