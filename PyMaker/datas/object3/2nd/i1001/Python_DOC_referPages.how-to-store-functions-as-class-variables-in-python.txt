Natural Text
I am writing a framework, and I want my base class to use different functions for renaming in the child classes. I figured the best way would be to use a class attribute, like in case of , but I got s when running it like in . However it worked with implementation like So I experimented with the above a bit, and I get the following:My questions would be why can I use regular typed (int, str, etc.) values as class attributes and access them on the instance as well, while I cannot do that for functions?What happens during the attribute lookup in these cases? What is the difference in the attribute resolution process?Actually both  and  is in  so I am a bit puzzled. Thanks for the clarifications!
You are storing an unbound built-in method on your class, meaning it is a descriptor object. When you then try to access that on , descriptor binding applies but the  method called to complete the binding tells you that it can't be bound to your custom class instances, because the method would only work on  instances. That's a strict limitation of most methods of built-in types.You need to store it in a different manner; putting it inside another container, such as a list or dictionary, would avoid binding. Or you could wrap it in a  descriptor to have it be bound and return the original. Another option is to not store this as a class attribute, and simply create an instance attribute in .But in this case, I'd not store  as an attribute value, at all. I'd store  and fall back to  when you still encounter :Setting  to  is a better indicator that a default is going to be used, clearly distinguishable from explicitly setting  as the mask.
Everything that is placed in the class definition is bound to the class, but you can't bind a built-in to your own class.Essentially, all code that you place in a class is executed when the class is created. All items in  are then bound to your class at the end of the class. That's why this also works to bind a method to your class:To not have the function bound to your class, you have to place it in the  method of your class:


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/reference/datamodel.html#object.__get__
https://docs.python.org/3/library/functions.html#staticmethod
