Natural Text
I don't have much experience with Python. I'm trying to code in a functional style like I'm used to from Java and JavaScript e.g.I'm trying to do something similar in Python but I can't get the same chaining style. I had to break it down to two statements, which I don't like:I have two questions:Is there a way in Python to approach the first style?What is the idiomatic way of doing this in Python?Thank you.
As someone who adores functional programming, don't write in functional style in Python.This hard and fast rule is a little ham-handed, and there are certainly ways to do what you're trying to do using typical functional tools like , , and  (called  in Python), but it's likely that your functional code will look uglier than sin, in which case there's no reason to prefer it over something imperative and pretty.This could be done with a list comprehension, but is probably less readable.
Generator expressions are the Pythonic approach, but a functional solution is possible via a combination of  and :
IMO they way of doing that in a functional style in python (not pythonic actually), using  and :The pythonic way (not very functional) would be to use a generator expresion:
If you are willing to use third-party libraries, I would suggest  with its syntactic sugar for compositionsYou can remove the last element in the composition, if you don't want a list, though stateful iterators/generators are not very functional. -objects wrap callables and make partial application and composition easier. A chain of -expressions is a new function that can be used multiple times. This is closer to functional programming in the classical sense: programs are compositions:


Answer URL
https://docs.python.org/3/library/functions.html#map
https://docs.python.org/3/library/functions.html#filter
