Natural Text
I have the following code:When I run this code on my local machine, I get the correct (expected) time which is . However I tried running this exact same code on a VM and the result was  (two hours earlier). Why is this is happening and how can I fix it so that I always get the first one regardless of where the code is running?
 returns local time. From the documentation:Return the local date and time corresponding to the POSIX timestamp, such as is returned by . If optional argument  is  or not specified, the timestamp is converted to the platformâ€™s local date and time, and the returned datetime object is naive.The timestamp value is an offset in seconds from the UNIX epoch value, midnight 1 January 1970, in the UTC timezone. The local time is a system-wide configured offset from UTC, the local timezone.If your VM is producing unexpected results, you need to configure the timezone of the OS.Alternatively, ignore timezones and only deal with time in the UTC timezone. For timestamps, that means using the  function.Your specific timestamp is 13:50 UTC:so your VM is either set to the UTC or the GMT timezone (the latter is currently at UTC+0, until the switch to the UK daylight saving timezone BST). Your local system is in a UTC+2 timezone, given your stated location from your profile that'd be EEE, Easter European Time.Another option is to create a timezone-aware timestamp by passing in a  argument. If you have a specific UTC offset, just create a  instance for that offset:However, it is usually better to store and operate on UTC  instances everywhere, and only convert to specific timezones when displaying information to users. This simplifies datetime handling as it lets you avoid a number of timezone corner cases and problems, such as mixing datetime information from different timezones and timezones with a summer and winter time distinction.


Answer URL
https://docs.python.org/3/library/datetime.html#datetime.datetime.fromtimestamp
https://docs.python.org/3/library/datetime.html#datetime.datetime.utcfromtimestamp
https://docs.python.org/3/library/datetime.html#datetime.timezone
https://docs.python.org/3/library/datetime.html#datetime.datetime.utcfromtimestamp
