Natural Text
This question already has an answer here:permutations with unique values                    15 answers                Lets say I have the following word : "aabb" then all possible unique permutations are : "aabb","abab","baba","abba","baab" and "bbaa". Notice that that there are not 4! = 24 ways to do so but 4 choose 2 = 6. What I currently have is a naive approach : finding all permutations, including the duplicates, and afterwards deleting the duplicates :My question is if their exists a more efficient way to find all these permutations?EDIT : i do NOT want an approach which follows the inefficient idea of finding all permutations and afterwards deleting the duplicates. My code sample does this already!EDIT : coldspeed correctly marked my question as duplicate. The correct answer would be to use sympy's multiset_permutations function :, per @Bill Bell.
You can use  from . The  returns you the unique elements and then you use  to get the strings as a single element. The list comprehension way to do this is following.Output
Can use permutations and  to remove duplicatesOutputIf list of strings is desired resultOutput


Answer URL
https://docs.python.org/3/library/itertools.html
