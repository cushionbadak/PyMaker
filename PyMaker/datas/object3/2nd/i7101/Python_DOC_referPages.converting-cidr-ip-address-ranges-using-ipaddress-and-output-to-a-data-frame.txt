Natural Text
I have a dataframe with IPv4 and IPv6 CIDR IP address ranges (these can be split up if necessary) in a data frame. I am hoping to take those ranges and create a data frame with each address in the range, so I can join that with another data frame to do some filtering. Using the ipaddress package, the function to expand a list is:This yields a list for just this IP range. Does anyone know how to put in a series of CIDR ranges so I don't have to perform the above n times? If I put a reference to the data frame in place of the IP address above, I get a ValueError stating that it doesn't appear to be an IPv4 or IPv6 network.The secondary question, as a Python newbie, what do I need to do to get these expanded ranges into a list or data frame? I tried this:And ended up with:I'm sure there is a better way than taking that output and regexing the IP addresses. 

About the first question, I'm afraid you can't do it if the module doesn't support it, and I don't think it does given the docs. Python offers two ways to apply a method to a list besides the traditional for loop:The  way, applies an operation to all the items of a list and returns a generator of the results: The pythonic way with List comprehensions:About the second question, the list you get is a list of IPv4Address objects, you are just seeing a stringified representation of it. By using , you can see that is has two attributes named  and  that both yield what you want (I'm assuming the difference between the two is only relevant in IPv6 where you can use  as a shorthand for a group of zeroes):Jeff's answer is doing exactly the same thing but is more verbose.So, you can refactor your entire code to get all hosts from a list of networks like so:


Answer URL
https://docs.python.org/3/library/ipaddress.html#ipaddress.ip_network
