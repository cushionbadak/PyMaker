Natural Text
Consider these two examples:and:In the latter, if you step through this in a debugger like pdb, you'll it will stop at the  at each iteration of a loop. However in the first example, it stops once. Investigating further, disassembling the multi-statement line we see that there are in fact two entries for the first line in . But  lies about this. As for the for loop there is just the one line in the  but the place that you stop at on each interation, offset 10, is at the target of a jump. So is that what triggers stopping even though the line number hasn't changed? Where is the source code for this logic? I've looked in the Python C code, but I can't find it, say in  looking for .Edit:Based on user2357112's answer and reading the code suggested there, I was able to verify that one can stop/trace on each statement of the code.I used my new Python assembler, pyc-xasm, to modify the bytecode to this:And running this will cause Python to stop before each line.
PDB tracing uses a trace function set through . There are a number of events that will trigger the trace function, but the ones you're looking at are all line events:  The interpreter is about to execute a new line of code or re-execute the condition of a loop. The local trace function is called; arg is ; the return value specifies the new local trace function. See  for a detailed explanation of how this works.As the docs say, you can see a more detailed explanation of the line event triggers in . The most relevant section isWe fix this by only calling the line trace function for a forward jump if the  co_lnotab indicates we have jumped to the start of a line, i.e. if the current  instruction offset matches the offset given for the start of a line by the  co_lnotab.  For backward jumps, however, we always call the line trace function,  which lets a debugger stop on every evaluation of a loop guard (which usually  won't be the first opcode in a line).So PDB will pause on the start of a line, or if execution jumps backward in the code.If you want to see the source code that triggers line events, it's in  under . PDB's source code is, predictably, under .


Answer URL
https://docs.python.org/3/library/sys.html#sys.settrace
