Natural Text
I have a list of '1's and '0s' and I would like to calculate the number of groups of consecutive '1's. Doing it by hand gives us 3 groups but is there a way to do it by python?
Option 1With . First, initialise a dataframe:Now calculate sum total by number of groups:If you want just the number of groups,  is enough.Option 2With :If you want just the number of groups,  is enough.
Here I count whenever there is a jump from 0 to 1.Prepending the 0 prevents not counting a leading sequence.
you can try this 
Here's one solution:
You can try this:Output:
Take a look at :This works because  returns (the iterable equivalent) of:So you are just summing the first item.If you can have other items that are not 0, they would add to the sum.You can do something like this:
This can be accomplished without much work by simply summing the number of times the list transitions from  to  (Counting rising signal edges):
Here is my solution:c is the list to play on
A Quick and dirty one-liner (almost)step by step:This throws:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
