Natural Text
So I wish to create a process using the python multiprocessing module, I want it be part of a larger script. (I also want a lot of other things from it but right now I will settle for this)I copied the most basic code from the multiprocessing docs and modified it slightlyHowever, everything outside of the  statement gets repeated every time p.join() is called.This is my code:This is what I expected:This is the reality:I am not sure whether this is caused by the  statement or  or something else and by extension why this is happening. Can some one please explain what caused this and why?For clarity because some people cannot replicate my problem but I have; I am using Windows Server 2012 R2 Datacenter and I am using python 3.5.3. 
The way Multiprocessing works in Python is such that each child process imports the parent script. In Python, when you import a script, everything not defined within a function is executed. As I understand it,  is changed on an import of the script (Check this SO answer here for a better understanding), which is different than if you ran the script on the command line directly, which would result in . This import results in  not equalling , which is why the code in  is not executed for your subprocess.Anything you don't want executed during subprocess calls should be moved into your  section of your code, as this will only run for the parent process, i.e. the script you run initially.Hope this helps a bit. There are some more resources around Google that better explain this if you look around. I linked the official Python resource for the multiprocessing module, and I recommend you look through it.
Exploring the topic I run into an issue of multiple loads of modules. to make it work per above I had to:put all imports in a function (initializer())return all imports as objects in the call to initializer() functionreference those objects in definition and calls to the remaining functions in my modulethe example module below runs multiple classification approaches on the same dataset in parallel:


Answer URL
https://docs.python.org/3/library/multiprocessing.html
