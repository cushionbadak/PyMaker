Natural Text
I am trying to solve this challenge about error-handling. Maybe I'm way off! The challenge description:Write a function called "load_file" that accepts one parameter: a filename. The function should open the file and return the contents.If the contents of the file can be interpreted as an integer, return the contents as an integer. Otherwise, if the contents of the file can be interpreted as a float, return the contents as a float. Otherwise, return the contents of the file as a string.You may assume that the file has only one line.I get ValueError: could not convert string to float: "b>a!\{\'"Am I all wrong about the error-handling?
You need to do something likeThe point is you don't really care about the errors at all, because they just mean you need to proceed to the next option.I would also point out that the  construct takes care of closing the file for you. If you want to do  then you will need to store your return value to a variable, and then do  before you .
You handle the  thrown by using the  function, but there's the possibility of  also throwing such an error. The purpose of the try/catch structure is for running code inside the  block that may throw any exception, such as a , and to execute "error handler" code inside the  block. 
when you try to parse as a float there is also an exception. you can try something like thisYou can nest trys inside of exceptions to get it to do what you want
The problem with your approach is that the  can fail but that exception isn't handled.So it should be:But you could also just  errors (requires python 3.3 or newer though). This could reduce the length of the code and the number of nested  and s:


Answer URL
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
