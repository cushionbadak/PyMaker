Natural Text
I'm trying to implement my own version of , the problem is that i stumbled upon the return type. I mean both of these functions return an iterator, but i think the second one is not considered a generator function because there is no yield statement inside. So my question is, are these two implementations equivalent ?
Not quite. is equivalent to  This means your first implementation is a generator that yields each item from the result of map(), while your second implementation returns the map object.
While they may look like very similar, even outputted with results, they are not equivalent. Look at these basic code examples, mapping  to The first function is a , yielding the results from  and a shortened version of The second function returns an instance of , which is an  and not a .Due to the first function being a ,  has better performance than  
So my question is, are these two implementations equivalent ?Not at all. and  are two different, distinct syntactic constructs. is syntax that was introduced in PEP380. It's called generator delegation. From the documentation:PEP 380 adds the  expression, allowing a generator to delegate part of its operations to another generator. This allows a section of code containing yield to be factored out and placed in another generator. Additionally, the subgenerator is allowed to return with a value, and the value is made available to the delegating generator. however has completely different behavior. From the documentation:return may only occur syntactically nested in a function definition, not within a nested class definition.If an expression list is present, it is evaluated, else None is substituted.return leaves the current function call with the expression list (or ) as return value.Basically  is equivlent to , while  will simply return a single value.In your case, I believe  is what you're looking for. You want to  the values from the  iterator, not  the iterator itself.


Answer URL
https://docs.python.org/3/whatsnew/3.3.html#pep-380
https://docs.python.org/3/reference/simple_stmts.html#grammar-token-return_stmt
