Natural Text
I'm interested in functional programming with python and am working through Mary Rose Cook's blog post A practical introduction to functional programming.Apparently, it was written in python 2 as this:in Python 3 yields this:I have two questions:  Why is this is so?Other than converting the map object to a list and then use numpy, are there any other solutions?
As documented, in the migration guide, In Python 2 map() returns a list while in Python 3 it returns an iterator.Python 2:Apply function to every item of iterable and return a list of the results.Python 3:Return an iterator that applies function to every item of iterable, yielding the results. Python 2 always does the equivalent of , Python 3 allows for lazy evaluation.
To supplement @dhke's excellent answer (this is too long for a comment) think of it this way. You want to perform multiple transformations on a list by combining , , etc. So there are two ways to think of this:Apply the first transformation to the entire list, then the second, etc.Apply all the transformations to the first element of the list, then the second, etc.The python3 way allows for either, whereas the second cannot be written as succinctly in python 2: you would have to explicitly iterate the list with a  loop and build up a new list of the results.


Answer URL
https://docs.python.org/3/library/functions.html#map
