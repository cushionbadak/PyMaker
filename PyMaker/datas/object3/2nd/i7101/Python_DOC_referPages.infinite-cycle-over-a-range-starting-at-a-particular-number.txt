Natural Text
Say I have a range:Using this range, I want to cycle infinitely and yield the numbers as they come:This would correctly produce values of:However, I sometimes want to start the yielding from a specific value but continue on with the range as it's defined. That is, if I want to start at , the sequence would be:Is there a way to do this with a combination of  and  (or some other way)?
Just  until you reach the first value you want to emit:Per the docs (emphasis mine):Make an iterator that drops elements from the iterable as long as the  predicate is true; afterwards, returns every element.The  only takes effect until the first value for which it evaluates false-y.
Another way to do this is to chain two ranges together and pass the chain to .outputThis approach has an advantage over  or  if the  and  args are large because it doesn't need to discard the unwanted initial items.
Since  starts from the beginning of the iterator given to it, give it an iterator (a sequence in this case) that starts where you want:The  above is the lowest value to repeat, the  is one more than the highest value, and the  used twice is the starting value. It should be clear how to generalize this to other cases.
perhaps unesthetic but practical?  being "practically infinite" for many purposes that's years at 1 ns per request - on a 64 bit systembut of course it runs a bit slowerthe modulo takes more time as requests keeps upping but that doesn't seem to be the big time sink
you are looking for the  function


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
https://docs.python.org/3/library/itertools.html#itertools.dropwhile
