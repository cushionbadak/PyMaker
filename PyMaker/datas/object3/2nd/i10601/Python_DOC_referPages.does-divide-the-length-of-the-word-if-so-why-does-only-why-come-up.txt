Natural Text
I hope to turn this into an app to remind myself to think every once in a while. I would like to ask 'why'/'why not' every time I put an input in. I wanna make the determinant factor whether or not the length of the / is even or odd. You guys are the best! Thanks!Edit: Thank you for all your help. I realize this was a pretty simple thing that I messed up. I'd also like to point out that I've since changed the original/notoriginal to better variable names such as second, third, and fourth. I fixed the problem I had, I took your suggestions. What I was confused/forgot about was that you could simply rename variables later in the code and the whole variable would change. What I had was  this:The problem was that I kept renaming variables, when they didn't have to be renamed and in fact caused an error because they were renamed. I was calling on the code to assess two separate variables when I should've been calling the code to check on a single variable that had two separate outcome values, like so:
The % OperandThe % (modulo) operator yields the remainder from the division of the  first argument by the second. The numeric arguments are first  converted to a common type. A zero right argument raises the  ZeroDivisionError exception. The arguments may be floating point  numbers, e.g., 3.14%0.7 equals 0.34 (since 3.14 equals 4*0.7 + 0.34.)  The modulo operator always yields a result with the same sign as its  second operand (or zero); the absolute value of the result is strictly  smaller than the absolute value of the second operandtaken from hereTo divide  you can use the  operand, but by using the  operation you are able to determine if a number is even or not by analyzing the result, if it returns 0, it is even, if it does not, it is odd, like so:Why the 'why' input keeps coming upThe reason your code loops and seems to get stuck on the 'why?' question is because you are using  and , since the  and the  values don't change after the input, you get what is called a 'infinite loop',  the same  loop will run forever. To fix this, instead of using , you could use a  and  statement, but doing so will require you to fix your code logic, since it's quite flawed at the moment.Also...Don't ever call your variables these generic names, it just makes for very confusing debugging later on.


Answer URL
https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations
