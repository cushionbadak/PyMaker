Natural Text
This question already has an answer here:Is there an expression for an infinite generator?                    7 answers                Having started to learn code with C, I had always assumed that for-loops and while-loops where essentialy always equivalent (as in one could always reproduce the behaviour of one using only the other). But in python while going from a for-loop to a while-loop is always trivial, I could not find a way to achieve the reverse.Is there any way, in python, to reproduce the behaviour of a while-loop (infinite looping) using only for-loops ?Here is a solution that doesn't work (because of the recursion limit) using a recursive generator:
You can do this by writing a non- iterator class:(You can see it stalling on ideone if you have the patience - it's like watching paint dry).
You can use the two-argument version of  as follows:The 2-argument form of  calls the first argument as a function with no arguments. If the returned value equals () the second argument,  is raised, otherwise the return value is yielded.  called without arguments returns  which is of course not equal to  thus yielding 0 forever, and we have an infinite loop.
You can use ,  or :All of these can be represented by functions using  loops, but the  module is implemented in  (in cPython), and makes no use of  loops in the source code.  Similarly for jython (java), and even PyPy (python).  The same is true for  and .
You can use  in for loop.[Reference]Looping from 1 to infinity in Python


Answer URL
https://docs.python.org/3/library/functions.html#iter
