Natural Text
I'm using python 2, and trying to delete two lists.Here is the code:Every list of images contains millions of file-names, so I would prefer to delete the unnecessary lists after I created the  list. Just for make the code "easier" for the computer to run.How can I do it?I found few different ways, but no any of them refereed to memory issues. I'm not sure if   actually delete the list completely from the memory.also I'm afraid that the  line only combine the hashes of the lists, and when I'll delete the two lists,  also become empty.So.. what is the right way?Really appreciate your help!Sorry if the English is bad, I'm not a native speaker :PThanks! 
You can use list concatenation to remove the need for the intermediate listsAlso I'm not sure what the overall design of your program is, but there is a preference in Python to use iterators/generators instead of lists for just this reason. The less you have to keep in memory at once the better. See if you can redesign your program to just iterate on the fly instead of building up this large list.
You could use . This will instantiate a list and populate it with those items, and extend will append that list to . This way, the only place in memory that the lists exist in will be in . As opposed to multiple instances. Whether that will have any tangible effect on performance can only be determined with testing/profiling. or using , to clear the binding for that variable (the garbage collector will delete the unused value).
The option of adding new data to array as in other answers works, but if you want to keep having two arrays and adding them, consider using garbage collector.Python has a garbage collector, that will delete the objects when they are no longer in use (i.e. when the object is unreachable and is not referenced any more). For example, if you have the program:The garbage collector may eventually delete the object [1, 2, 3, 4]. You are not guaranteed when though. It happens automatically and you do not have to do anything with it.However, if you are concerned about memory resources, you can force garbage collector to delete unreferenced objects using  (do not forget to ). For example:So your program will turn into
In fact, each list store references to string, but not strings itself.I'm pretty sure, the used memory is about 1M x 4 (for 32 bits architecture) or 1M x 8 (for 64 bits architecture).I suggest you to do profiling, see Which Python memory profiler is recommended?.You can use glob.iglob to have iterators instead of lists and chain the list with itertools.chain, as bellow:


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#the-del-statement
https://docs.python.org/3/library/itertools.html#itertools.chain
