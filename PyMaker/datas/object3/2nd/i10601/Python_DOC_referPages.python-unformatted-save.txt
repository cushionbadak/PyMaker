Natural Text
I am using python to create the input for a program. This program takes an unformatted binary file as input. If I were using fortran I would create this file withIs there a way to create the same kind of file in python? My first guess would be to create a subroutine in fortran which can save files given some inputs and then implement this in my python code using f2py, but I don't really know how one would go about doing this.The lists that I am writing to file are very large and the exact structure is very important. This means that answers such as Writing Fortran unformatted files with Python seem to be unsatisfactory as they don't adequately deal with headers in the file/endianess and so on.In my python code a have a 2-d array, each row containing the x,y,z coordinates and the mass of the particle. This data needs to be split among a number of files.For the particle load the structure of the files is:BLOCK-1     - body is 48 bytes long:BLOCK-2(the x-coordinate is in units of the periodic box size   0<=x<1)BLOCK-3(the y-coordinate is in units of the periodic box size   0<=y<1)BLOCK-4(the z-coordinate is in units of the periodic box size   0<=z<1)BLOCK-5in units of the total mass in the periodic volume
A code like the following shall be a good starting point for what you are trying to do. The structure of your data is not complicated as what I expected to be from your explanation.I wrote a small function to write on list as it is pretty repetitive. The most important thing to notice is that fortran unformatted file write the size of each record along with the record (before and after the record). That helps fortran itself to check for basic error when reading the file later. Using fortran stream files will spare you from writing the record size.


Answer URL
https://docs.python.org/3/library/struct.html
https://docs.python.org/3/library/array.html
