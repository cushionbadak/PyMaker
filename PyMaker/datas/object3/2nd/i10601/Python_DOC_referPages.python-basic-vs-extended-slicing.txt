Natural Text
When experimenting with slicing I noticed a strange behavior in Python 2.7:When using a single colon in the brackets, the slice object has 0 as start and a huge integer as end. However, when I use more than a single colon, start and stop are None if not specified.Is this behaviour guaranteed or implementation specific?The Documentation says that the second and third case are extended slicing, while the first case is not. However, I couldn't find any clear explanation of the difference between basic and extended slicing.Are there any other "special cases" which I should be aware of when I override  and want to accept extended slicing??
For Python 2  still calls  (deprecated) and this is documented to return a slice  when called with default parameters:Note that missing  or  in the slice expression are replaced by zero or , ...(emphasis mine).New style classes don't implement  by default, soIf no  is found, a slice object is created instead, and passed to  instead.Python 3 doesn't support , anymore, instead it constructs a  object for all of the above slice expressions. And  has  as default:Note: Slicing is done exclusively with the following three methods. A call like is translated toand so forth. Missing slice items are always filled in with .


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__length_hint__
