Natural Text
So, I'm making a little Python 3 applet for madlibs. So far, I have it so that it reads a text file, pulls a random story from it, and splits that story into a list for search through it. That all works great. I have the stories formatted so that, where words are needed, it uses (noun), (adverb), (name), et cetera. However, I have some issues with replacing those strings. Here is an example:It searches for the '(' character in each object, and then replaces the whole object with the word. It doesn't preserve the punctuation that might be involved. Also, you can see that the punctuation/newline characters are left over and shown when  is called. How can I effectively replace just the substrings contained within the parenthesis?For reference, here is the original text that was pulled from the file:and my intended result is:
To address the problems with your approach I'd need to see the full code, but I have another suggestion.You can actually use the regular expressions here, which allows making the substitution in a one-liner (almost). accepts a callable as replacement, which we use to call  with the prompt extracted from the match.Edit: to match any phrase in brackets, you can just change the pattern, e.g.:

Okay, to solve my issue of only wanting to ask for each identical item once, I had to rewrite a little bit. I'm still using the regex provided by @Lex, so thanks to him for that. However, I am no longer using his  method.The  function finds all instances matching the regex of "between parenthesis" and builds an initial list. Then, I iterate through that list and put each unique token into a new list to eliminate duplicates. I iterate through the new list of tokens and replace each match with the prompted input. This is exactly what I had wanted for my applet as it eliminates duplicate prompts.


Answer URL
https://docs.python.org/3/library/re.html#re.sub
