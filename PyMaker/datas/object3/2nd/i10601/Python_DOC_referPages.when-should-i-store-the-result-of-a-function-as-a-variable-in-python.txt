Natural Text
Suppose a function  returns a list. I want to write a function that returns the single element of  if this list has length one and  otherwise. My code isIt just dawned on me that the codemight be more efficient since it only calls  once. Is this true?The function  could possibly be computationally intensive so I'm curious if there is a difference between these two blocks of code. I'd happily run a test myself but I'm not quite sure how to do so. I'm also curious if it is better practice in general to store the result of a function as a variable if the function is going to be called more than once.
You are correct. The second block would be more efficient since it only calls  once. If  isn't particularly computationally expensive, it's unlikely you will notice a difference at all. If you know it will be expensive, on the other hand, it is a good idea to save the result where you can if it does not hamper readability (however, note the caveat in @Checkmate's answer about memory for a possible exception).However, if  has side effects, or if it's return value may change between those two invocations, you may not want to save it (depends on if you want to trigger the side effects twice or need to receive the changed return value).  If you wanted to test this yourself, you could use  like this:to get the time for . Just run both functions and compare their time.
To answer your question on whether it is generally better to store the result of a function as a variable if it is going to be called more than once: it depends. In terms of readability, it's really up to you as a programmer.  In terms of speed, storing the result in a variable is generally faster than running the function twice.Storing the result can, however, uses memory, and if you're storing an unusually large variable, the memory usage can actually lead to longer running time than simply calling the function.  Further, as noted above, running a function can do more than just storing the result in a variable, so running a function a different number of times can give a different result.  


Answer URL
https://docs.python.org/3/library/functools.html#functools.lru_cache
