Natural Text
Here is an example:My understanding was that calling setting  would simply point  at the same item in memory that  was pointing at. So why is it that in the last 3 lines,  and  don't give the same results?
The assignment does make h point to the same item as l.  However, it does not permanently weld the two.  When you change h with h = h * 2, you tell Python to build a doubled version elsewhere in memory, and then make h point to the doubled version.  You haven't given any instructions to change l; that still points to the original item.
That's quite simple to check, run this simple test:As you can see because of the line , the h's id has been changedWhy is this? When you're using  operator it creates a new list (new memory space). In your case this new list is being assigned to the old h reference, that's why you can see the id is different after If you want to know more about this subject, make sure you look at Data Model link.
 assigns  to a new list object.You probably want to modify  in-place: 
Anytime you assign to a variable, its identity (memory address) generally changes - the only reason why it wouldn't change is that you happened to assign it the value that it already held.  So, your statement  caused h to become an entirely new object - one whose value happened to be based on the previous value of h, but that's not actually relevant to its identity.
It's tricky, but when you multiply a list, you are creating a new list.'l' and 'h' are now referring to the same list in memory.You swapped the values in , so the values are changed in .  This makes sense when you think about them as different names for the same objectWhen multiplying , you are creating a new list, so now only  will be the original list object.See how the  of  changes after the multiplication?  The  operator creates a new list, unlike other list operation, such as  which alter the current list.Hope this helps!
helps in confirming if two variables l and k share the same memory


Answer URL
https://docs.python.org/3/reference/datamodel.html
