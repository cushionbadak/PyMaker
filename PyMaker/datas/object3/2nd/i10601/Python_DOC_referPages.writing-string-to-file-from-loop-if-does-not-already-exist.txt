Natural Text
This has been asked and answered, and I've read lots of those posts... but for some reason my code isn't working.  Hopefully someone can help.The code matches strings within a variable and then attempts to write those strings to a file if they don't already exist within that file.  Code doesn't work.  Any help please?Without it, it says the string doesn't exist and writes it to the file multiple times.If I look at the string that's written using vim, it looks like:  mystring$(the $ is appended at the end of each string -- and no, adding +"$"  doesn't work)Any help please?
The problem here is that files don't (really) support membership tests with the  operator.The reason why no error is thrown is because files are iterable and thus  evaluates to  (docs). This operation works only once, because after the first time the file has been exhausted and no more lines can be read (until you write new ones).The solution to your problem is to read all the lines in the file into a list or set and use that for membership tests:However, this does not explain why  always returns . In fact it should always (after the first iteration) return , and that's exactly what happens when I run your code on my machine. There's probably something writing to the file in other parts of your code.
Problem is you are iterating through the file once, and file is not rewound afterwards. File is only scanned once.You have to read the data into a  first, then you can loop over the strings (and  is very performant because uses dichotomic search in O(log(N)))Problem: if there are duplicates in , it will be written more than once, so I added unicity with a Notes:to preserve the order in the file, remove  in the  loop, and add the string to  when found.first version with  added would work OK on Linux, but on windows it would fail because of the . Now I  the lines when I put them in the mini-database: no need to add  when testing and is portablethe  you saw in vim is explained: vim adds end-of-lines as  when showing the text. Mystery solved.


Answer URL
https://docs.python.org/3/reference/expressions.html#membership-test-operations
