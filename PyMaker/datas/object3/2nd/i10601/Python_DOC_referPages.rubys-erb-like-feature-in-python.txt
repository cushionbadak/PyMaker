Natural Text
I've configuration files some formatted as  some formatted as . I want to be able to read those configuration files with values which comes as environment variables. for example:Which means that password is retrieved when loading the json file from environment variable and replace the  with concrete value.Note:1. The syntax mentioned above is like it is being used using ruby's erb only for illustration       2. I prefer a solution of native python without installing new python packages, but if there no such ,I'll accept this also.
What you are looking for is commonly called templating, and you have basically defined a template language.Depending on what exactly you want to do, you can use the  library from the stdlib. It only does simple variable substitutions, though, as opposed to ERb, which allows arbitrary code (including code that deletes all your data, formats your harddisk, starts a backdoor, â€¦).So,  is both much less powerful than ERb, but also much safer. Your example already demonstrates this, as you cannot even access environment variables from within a template, you would have to pass them in explicitly.This is the basic usage:As accessing environment variables isn't possible inside the template, you will have to pass them in to the template explicitly:Actually, if you want to give the template access to all environment variables, you should be able to pass the  dict directly (you can pass any -like object for the mapping).If you want some more powerful substitutions, then you should look at some other so-called "logic-less" template languages (i.e. languages which only perform simple substitutions but don't allow executing code, and don't allow conditionals or loops). One of those languages is Mustache (the templating language used by GitHub), there are implementations in many languages, including Pystache for Python.If you want / need more advanced features such as loops, conditionals, etc., you might need to look for more full-featured template languages such as Jinja.


Answer URL
https://docs.python.org/3/library/string.html#template-strings
