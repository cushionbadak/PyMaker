Natural Text
I'm porting some code from Python 2 to 3, and  isn't playing well with the  decorator from . When I use the  decorator to pass a mock into the arguments of a test function,  instead interprets that argument to be a fixture, and is unable to set up the test.Here's a contrived example that hopefully illuminates the problem:After running , the error message would look like:This is the only scenario under which this failure occurs. If I explicitly call the test (i.e. run ), no error. If I patch  using either of the other patching techniques, no error. If I import patch from  instead of , no error.It's only while running my tests using , using , and patching using the decorator when this occurs.I'm running Python 3.4.5.
Yes, mock decorators are not supported.It's not such bad -- changing function signature by decorator appliance is considered as bad idea.But you still  may use  syntax.Also as an option there is pytest-mock plugin with pretty clean api for mocking:
There was a  issue that now seems to be solved in a newer version of :https://github.com/pytest-dev/pytest/pull/3206/commits/b6166dccb4d2b48173aa7e7739be52db9d2d56a0Basically, if you had  installed, this would fail. You can verify by uninstalling  and running the test again.If you really need that version of pytest, you can get the mock using  inside the function.


Answer URL
https://docs.python.org/3/library/unittest.mock.html
