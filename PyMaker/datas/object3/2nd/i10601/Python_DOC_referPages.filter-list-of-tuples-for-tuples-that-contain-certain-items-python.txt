Natural Text
I have a list of tuples like so:I want to be able to filter out the tuples that contain certain items. For example, I want to find all the tuples that contain  specifically and place them in a list. Expected result would be: will have a varying length of 1 to 7 so I using  is not going to be ideal. I've tried usingbut that doesn't work.EDIT: If  was also in the list I wouldn't want that tuple to be found. I guess I didn't specify this as all working solutions below would return this tuple as well.
If I understand your requirements correctly, this should return the expected results. Here we convert the lists to strings, and use  to check for membership.The below code has been updated to match exact sub-lists in the list of tuples. Instead of pattern matching like in the example above, we take a far different approach here. We start off by finding the  and  of the filter list. We then find the the indices of where the  and  occur in  (we must reverse  to find the , as  returns only the first element matched). Using our indices pair, we can then slice that sublist spanning the distance between  and . If this sublist matches the filter, then we know that only that range exists in the search tuple.Sample output
I'm not sure If I get the point what you're trying. But I would do it as following:
Did you mean thisinstead of your line?
This code seems to work, it tests every list by dividing them in several lists of the same length as Edit: I tried to add some excluded patterns after your edit


Answer URL
https://docs.python.org/3/reference/expressions.html#membership-test-details
