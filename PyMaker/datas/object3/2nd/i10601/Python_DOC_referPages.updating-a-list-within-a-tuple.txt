Natural Text
This question already has an answer here:Append to a list defined in a tuple - is it a bug? [duplicate]                    4 answers                I was just toying around in the interpreter and ran across something that I do not understand. When I create a tuple with a list as one the elements and then try to update that list, something strange happens. For example, when I run this:I get: Which is exactly what I expected. However then when I reference the tuple again, I get:So the list was in fact updated even though python threw an exception. How does that work? I can't imagine a scenario where I would actually want to do something like this, but I still would like to understand what is going on. Thank you. 
This is actually documented in the Python docs.EDIT: Here's a summary so that this is a more complete answer.When we use , Python calls the  magic method on the item, then uses the return value in the subsequent item assignment.For lists,  is equivalent to calling  on the list and then returning the list.Therefore, when we call , it is equivalent to:From #2, we can determine this is equivalent to:The first line succeeds in calling  on the list, and since the list is mutable, it updates. However, the subsequent assignment fails because tuples are immutable, and throws the error.


Answer URL
https://docs.python.org/3/faq/programming.html#why-does-a-tuple-i-item-raise-an-exception-when-the-addition-works
