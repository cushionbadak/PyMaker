Natural Text
For example, if I have an encoded string as:The name parameter has the characters %C3%A9 which actually implies the character é.Hence, I would like the output to be:I tried the following steps on a Python terminal:However, when I tried the same thing within a Python script and run as myscript.py, I am getting the following stack trace:I am using Python 2.6.6 and cannot switch to other versions due to work reasons. How can I overcome this error? Any help is greatly appreciated. Thanks in advance!EDITI realized that I am getting the above expected output. However, I would like to convert the parameters in the new_url into a dictionary as follows. While doing so, I am not able to retain the special character 'é' in my name parameter.Outputs:new_urllocality=Norwood&address=138+The+Parade&region=SA&country=AU&name=Pavé+cafe&postalCode=5067params_list[u'locality=Norwood', u'address=138+The+Parade', u'region=SA', u'country=AU', u'name=Pav\xe9+cafe', u'postalCode=5067']params_dict{u'name': u'Pav\xe9+cafe', u'locality': u'Norwood', u'country': u'AU', u'region': u'SA', u'address': u'138+The+Parade', u'postalCode': u'5067'}Basically ... the name is now 'Pav\xe9+cafe' as opposed to the required 'Pavé'.How can I still retain the same special character in my params_dict?
This is actually due to the difference between  and . When printing a unicode string,  is used and results in the  you see when printing . However, when a list or dict is printed,  is used, which uses  for each object within lists and dicts. If you print the items separately, they print as you desire.One way to print the list and dict is to get their string representation, then decode them with:Note: This is only an issue in Python 2. Python 3 prints the characters as you would expect. Also, you may want to look into  for parsing your URL instead of doing it manually.


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs
