Natural Text
In Python, how do you make a subclass from a superclass?
Or, even better, the use of Python's built-in function,  (see the Python 2/Python 3 documentation for it) may be a slightly better method of calling the parent for initialization:Or, same exact thing as just above, except using the zero argument form of , which only works inside a class definition: 
A heroic little example:
The section on inheritance in the python documentation explains it in more detail
Class2 is a sub-class of Class1
In the answers above, the  is initialized without any (keyword) arguments. Often, however, you would like to do that, as well as pass on some 'custom' arguments of your own. Here is an example which illustrates this use case:This is a subclass of  which, when initialized, immediately sorts itself in the direction specified by the  keyword argument, as the following tests illustrate:Thanks to the passing on of  to , the list can be initialized and populated with items instead of only being empty. (Note that  is a keyword-only argument in accordance with PEP 3102).

There is another way to make subclasses in python dynamically with a function :You usually want to use this method when working with metaclasses. When you want to do some lower level automations, that alters way how python creates class. Most likely you will not ever need to do it in this way, but when you do, than you already will know what you are doing.
You use:For details, see the Python docs, section 9.5.


Subclassing in Python is done as follows:Here is a tutorial about Python that also contains classes and subclasses.


Answer URL
https://docs.python.org/3/library/functions.html#super
