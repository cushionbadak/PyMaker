Natural Text
In PHP, I can do this:In Python, I currently just do this:However, this will cause a big jumbo of data. Is there any way to print it nicely into a readable tree? (with indents)?

A quick hack while debugging that works without having to import  would be to join the list on .
You mean something like...:...?  From your cursory description, standard library module pprint is the first thing that comes to mind; however, if you can describe example inputs and outputs (so that one doesn't have to learn PHP in order to help you;-), it may be possible for us to offer more specific help!
Simply by "unpacking" the list in the print function argument and using a newline (\n) as separator.print(*lst, sep='\n')
https://docs.python.org/3/library/pprint.htmlIf you need the text (for using with curses for example):Then  variable will something alike php  or . Check the documentation for more options, arguments.
As the other answers suggest pprint module does the trick. Nonetheless, in case of debugging where you might need to put the entire list into some log file, one might have to use pformat method along with module logging along with pprint.And if you need to directly log it to a File, one would have to specify an output stream, using the stream keyword. RefSee Stefano Sanfilippo's answer
Output:
As other answers have mentioned,  is a great module that will do what you want. However if you don't want to import it and just want to print debugging output during development, you can approximate its output.Some of the other answers work fine for strings, but if you try them with a class object it will give you the error . For more complex objects, make sure the class has a  method that prints the property information you want:And then when you want to print the output, simply map your list to the  function like this:outputs:You can also do things like override the  method of  to get a form of nested pretty printing:givesUnfortunately no second-level indentation but for a quick debug it can be useful.
For Python 3, I do the same kind of thing as shxfee's answer:which outputsAs an aside, I use a similar helper function to quickly see columns in a pandas DataFrame
you can also loop trough your list:


Answer URL
https://docs.python.org/3/library/pprint.html
https://docs.python.org/3/library/pprint.html
