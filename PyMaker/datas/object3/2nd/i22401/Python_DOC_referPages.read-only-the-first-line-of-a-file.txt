Natural Text
How would you get only the first line of a file as a string with Python?
Use the  method (Python 2 docs, Python 3 docs):Some notes:As noted in the docs, unless it is the only line in the file, the string returned from  will contain a trailing newline. You may wish to use  instead to remove the newline.The  statement automatically closes the file again when the block ends.The  statement only works in Python 2.5 and up, and in Python 2.5 you need to use In Python 3 you should specify the file encoding for the file you open. Read more...


This should do it:

To go back to the beginning of an open file and then return the first line, do this:
Lots of other answers here, but to answer precisely the question you asked (before @MarkAmery went and edited the original question and changed the meaning):In other words, if you've already read in the file (as you said), and have a big block of data in memory, then to get the first line from it efficiently, do a split() on the newline character, once only, and take the first element from the resulting list.Note that this does not include the  character at the end of the line, but I'm assuming you don't want it anyway (and a single-line file may not even have one).  Also note that although it's pretty short and quick, it does make a copy of the data, so for a really large blob of memory you may not consider it "efficient".  As always, it depends...
Solution1: contains all the lines from the  will give the line number from the files  if the  is 0, the first line will be printed as the indexstarts from 0  Similarly, if you want second line, you can write Solution 2: is the first line.  Similarly,  is the second lineSolution 3:Print first  lines. Replace  with any number. If you want first line, then N=1This is the equivalent code of unix command  Solution 4:



Answer URL
https://docs.python.org/3/library/io.html#io.IOBase.readline
