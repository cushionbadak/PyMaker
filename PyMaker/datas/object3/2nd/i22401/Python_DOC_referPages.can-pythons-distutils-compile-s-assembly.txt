Natural Text
I wrote a small Python extension that bundles, compiles and statically links with a small C library with one optional .S (assembler) file. Distutils's Extension() doesn't recognize the .S by default. Is there a good way to compile that file, or should I just shell out to ? Right now I compile the C code only for a slightly slower library.
I don't know how new it is, but the  class has an  argument, which I found can specify assembly files. So for example, my  looks something like this:I double checked, and if you inspect the generated library with , the assembly functions are properly assembled and linked if you include it in the , but they are not linked if you don't include it in that argument. So it seems to work.
As distributed, distutils don't know about assembly code, and I don't know of extensions to it that let it deal automatically with it.  In a similar situation I've always built the library separately (with C and assembly as needed and feasible) and only used the resulting  with setup.py.
There is an open feature request about this: http://bugs.python.org/issue2942


Answer URL
https://docs.python.org/3/distutils/apiref.html#distutils.core.Extension
