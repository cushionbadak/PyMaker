Natural Text
If I do It doesn't encode  to  (breaks OAuth normalization)It doesn't handle Unicode (it throws an exception)Is there a better library?
From the docs:Replace special characters in string  using the %xx escape. Letters, digits,  and the characters '_.-' are never  quoted. By default, this function is  intended for quoting the path section  of the URL.The optional safe parameter  specifies additional characters that  should not be quoted â€” its default  value is '/'That means passing '' for safe will solve your first issue:About the second issue, there is a bug report about it here. Apparently it was fixed in python 3. You can workaround it by encoding as utf8 like this:By the way have a look at urlencodeNote that  moved to  in Python3
In Python 3,  has been moved to  and it does handle unicode by default.
My answer is similar to Paolo's answer.I think module  is much better. It's based on .You can try this:
If you're using django, you can use urlquote:Note that changes to Python since this answer was published mean that this is now a legacy wrapper. From the Django 2.1 source code for django.utils.http:
It is better to use  here. Not much difference for single parameter but IMHO makes the code clearer. (It looks confusing to see a function ! especially those coming from other languates)Docsurlencode: https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencodequote_plus: https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus


Answer URL
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus
https://docs.python.org/3/library/urllib.parse.html#url-quoting
https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus
