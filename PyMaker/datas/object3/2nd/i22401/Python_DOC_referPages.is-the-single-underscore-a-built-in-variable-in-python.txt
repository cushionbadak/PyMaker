Natural Text
I don't understand what this single underscore means. Is it a magic variable? I can't see it in locals() and globals().
In the standard Python REPL,  represents the last returned value -- at the point where you called ,  was the value .For example:This is handled by , and the  variable goes in the  namespace with things like  and , which is why you couldn't find it in .Note that there is no such functionality within Python scripts.  In a script,  has no special meaning and will not be automatically set to the value produced by the previous statement.Also, beware of reassigning  in the REPL if you want to use it like above!This creates a global variable that hides the  variable in the built-ins. To undo the assignment (and remove the  from globals), you'll have to:then the functionality will be back to normal (the  will be visible again).
Why you can't see it? It is in So it's neither global nor local. 1And where does this assignment happen? :1 2012 Edit : I'd call it "superglobal" since 's members are available everywhere, in any module.
Usually, we are using _ in Python to bind a ugettext function.


Answer URL
https://docs.python.org/3/library/sys.html#sys.displayhook
https://docs.python.org/3/library/builtins.html
