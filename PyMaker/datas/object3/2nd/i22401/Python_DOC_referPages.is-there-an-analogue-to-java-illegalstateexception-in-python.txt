Natural Text
IllegalStateException is often used in Java when a method is invoked on an object in inappropriate state. What would you use instead in Python?
In Python, that would be , or a subclass of it.For example, trying to  a closed file raises "ValueError: I/O operation on closed file".
ValueError sounds appropriate to me: Raised when a built-in operation or function receives an argument that has the right type but an inappropriate value, and the situation is not described by a more precise exception such as IndexError.
 seems more like the equivalent to Java's . RuntimeError sounds like a better fit to me:Raised when an error is detected that doesnâ€™t fall in any of the other categories. The associated value is a string indicating what precisely went wrong.Most of the time you don't want to do any special error handling on such an error anyway, so the generic  should suffice out of the box.In case you do want to handle it differently to other errors just derive your own exception from it:


Answer URL
https://docs.python.org/3/library/exceptions.html#RuntimeError
