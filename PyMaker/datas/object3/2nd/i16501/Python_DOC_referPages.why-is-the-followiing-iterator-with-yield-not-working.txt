Natural Text
OK so my actual code is somewhat elaborate but I am illustrating the problem that I am having with the following example code:I have a class that has a list as one of its instance variable. I want the class to be an iterable and return the next element in the list  when next is called in the for loop.So I have as follows:However if I do the following: I get: list object is not an iterator.If I change the next as follows:I get infinite output.Can anyone tell me what I need to do to accomplish the task I want to do and why the code above is not working? From what I understand every time next is called the iterator object associated with the list is called and its next is return. so why can't my list find its iterator?
You need an iterator to iterator over a list.  A list itself is not an iterator so you cannot call  on it.
You are calling  on , which is a list, not an iterator.   only advances iterators, it does not set up an iterator from an iterable.Regarding your edit, you are getting an infinite recursion because you are calling next on a fresh iterator each time, rather than the same iterator.  So you are losing the state of the iterator.  Again, see my example above, which sets up the iterator once.
The  special method that you are trying to implement is used to control iteration over a container-like class at each progressive step.  If you do not need this functionality and simply want to make your class iterable, omit the method and return  from :Demo:


Answer URL
https://docs.python.org/3/library/stdtypes.html#iterator.__next__
https://docs.python.org/3/library/functions.html#iter
