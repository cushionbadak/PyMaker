Natural Text
I have to read a text file into Python. The file encoding is:This is a third-party file, and I get a new one every day, so I would rather not change it. The file has non ascii characters, such as Ö, for example. I need to read the lines using python, and I can afford to ignore a line which has a non-ascii character.My problem is that when I read the file in Python, I get the UnicodeDecodeError when reaching the line where a non-ascii character exists, and I cannot read the rest of the file.Is there a way to avoid this. If I try this:then when the error is reached the for loop ends and I cannot read the remaining of the file. I want to skip the line that causes the mistake and go on. I would rather not do any  changes to the input file, if possible.Is there any way to do this?Thank you very much.
Your file doesn't appear to use the UTF-8 encoding. It is important to use the correct codec when opening a file.You can tell  how to treat decoding errors, with the  keyword:errors is an optional string that specifies how encoding and decoding errors are to be handled–this cannot be used in binary mode. A variety of standard error handlers are available, though any error handling name that has been registered with  is also valid. The standard names are: to raise a  exception if there is an encoding error. The default value of  has the same effect. ignores errors. Note that ignoring encoding errors can lead to data loss. causes a replacement marker (such as '?') to be inserted where there is malformed data. will represent any incorrect bytes as code points in the Unicode Private Use Area ranging from U+DC80 to U+DCFF. These private code points will then be turned back into the same bytes when the  error handler is used when writing data. This is useful for processing files in an unknown encoding. is only supported when writing to a file. Characters not supported by the encoding are replaced with the appropriate XML character reference . (also only supported when writing) replaces unsupported characters with Python’s backslashed escape sequences.Opening the file with  or  will then let you read the file without exceptions being raised.


Answer URL
https://docs.python.org/3/library/functions.html#open
