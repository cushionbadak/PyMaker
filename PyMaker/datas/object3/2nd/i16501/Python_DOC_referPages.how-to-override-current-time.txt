Natural Text
I am writing an application which makes use of the current time (via ) Is there a way, for debugging purposes, to override this call so that it returns a specific timestamp?As a fallback I could write a function which would be called instead of  and return whatever is needed (the actual current time in producton and the required test time when debugging) but there may be a more pythonic way to perform these kind of actions?
Broadly, your options are:Use the  library, which can replace the function on the fly with a dummy function that always gives the same results (or use another mocking library that does the same thing).  This means you don't have to modify your function; however, reasonable people can disagree on whether monkey patching with mock is good practice, even for debugging.  I think this is the most widely used solution to this problem in Python.Modify your function to do something different depending on its environment (the actual environment variables on your system, or global state, or something else).  This is the easiest way, but also the crudest and most fragile way, so you'll have to be sure to change it back after your debugging is finished.Modify your function to accept a function itself as a parameter, and pass in  as that function in normal operation, but pass in something different (for instance a stub) for testing.
You can use the mock library to mock the  usage:


Answer URL
https://docs.python.org/3/library/unittest.mock.html
