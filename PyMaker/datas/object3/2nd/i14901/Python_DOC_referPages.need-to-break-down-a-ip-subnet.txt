Natural Text
I am trying to write a script which breaks down subnets larger(not greater than /16) than /24 to a /24 subnet.Eg : 10.10.10.0/23 should give me 10.10.10.0/24 and 10.10.11.0/24My logic is to first scan for the CIDR mask. if smaller than 24, then subtract that from 24 and that number(lets say x) gives the total number of /24s and then 1 to third octet of the IP x times and /24.eg: 10.10.8.0/22 I am not sure how to code/modify the string for the third octet only and add 1 to the third octet only. I am thinking of creating a list of all the third octet values and re constructing the IPs. But if there is a simpler way out there, that would help me a lot !! Thanks !
Take a look at the netaddr package. It already comes with built-in support for understanding net masks and is able to generate a list of subnets for any desired length:Since Python 3.3, this functionality is also available in the new built-in  module.
If you're using Python 3.3 or newer, you can use the  module. Using the  method, you can do it in one line:Converting to strings is trivial. Just cast to .


Answer URL
https://docs.python.org/3/library/ipaddress.html
https://docs.python.org/3/library/ipaddress.html
https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.subnets
