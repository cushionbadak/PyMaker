Natural Text
I wonder if print function can be made work (without changing the syntax all over the place) like in python 2 and earlier.So I have the statement like:And I like that syntax to work in python 3. I've tried importing the library  but that didn't do the trick (still a syntax error).
No, you cannot. The  statement is gone in Python 3; the compiler doesn't support it anymore.You can make  work like a function in Python 2; put this at the top of every module that uses :This will remove support for the  statement in Python 2 just like it is gone in Python 3, and you can use the  function that ships with Python 2. can only help bridge code written with both Python 2 and 3 in mind; that includes replacing  statements with  functions first.You probably want to read the Porting Python 2 Code to Python 3 howto; it'll tell you about more such  imports as well, as well as introduce tools such as Modernize and Futurize that can help automate fixing Python 2 code to work on both Python 2 and 3.
You can use the tool 2to3 is an Automated Python 2 to 3 code translation, as @Martijn Pietersâ™¦ told :), you can get over a ride throw the old python and making the changes work into python 3, I make a simple example like this:I created this file, python2.py:when I run it with python it obviously shows:so, you can transform it via terminal like this:This is the important comand-w parameter will write the file, if you want only see the future changes without apply them, just run it without -w. after run it it will show something likeAnd the file will look like:
If you are okay with overriding  and a simple regex to convert the print statements that don't have paren then you can do the following. Note that this doesn't actually change any file, just when you import them it'll read the code into a string, tweak that string, then send the fixed code to the compiler/importerIf you save this code to, say, pastimport.py, then lets say I have some file named juniper.py:Now if I want to call juniper.py from python3, I can just doAnd it'll run :)This could probably be faster and be more like the typical imports with caching and logging and stuff but I don't understand exactly how and when the pyc files are generated yet. There might also be edge cases with c plugins and such I'm not sure. So feel free to suggest improvements, but at least this is a proof of concept. I think you should be able to actually tweak the interpreter inputs and the values of the current file but I'm fiddling with that right now.Also technically this lets you import any python2 file (2to3 fixes xrange, print, etc.) and if those files import other python2 files they'll be converted too since this overrides the import everyone uses. You can also implement arbitrary operator overloading, require static typing, actually require braces, and technically even import code from other languages or change python altogether with this single import. But I digress
You can use regex to replace print code of python2 with python3:


Answer URL
https://docs.python.org/3/howto/pyporting.html
