Natural Text
This question already has an answer here:Python: subscript a module                    1 answer                So it's quite a simple question. how do I add  to a Python module. I mostly just want it as an ease of use, however it's confusing why it wouldn't let me 'just set it'. Below is a simple example of  semi-working, however I wish for the  to work.Here's the full output:main.pyother.pyI've tried to set  using  aswell, . It didn't work. And I tried to set it in . So I'm confused as to why it's so adamant in not allowing me to use .If it's impossible, then a short reason would be good.
Special methods are looked up on the type, not on an instance. Python looks for  and that isn't available. You'd have to add the  method to the  type; you can't in Python.You'd have to replace the whole  instance in  with an instance of your own class to achieve what you want:
This limitation doesn't just apply for modules, it applies for anything such that the type is not  or some subclass of , or something with a metaclass that never bottoms out with  in the .For example, you can also see this happening with type :The reason is that at the C-API level, both  and  are particular instances of  which don't implement the required protocol for inducing the same search mechanism that the  implementation of  and friends does implement.To change this aspect of the language itself, rather than hacking a replacement of , you would need to change the C source definitions for  and  such that there were C functions created for  and added to the appropriate location in the C-API big  struct-o-magic-functions (a lot of which is expanded by the macro ) instead of  (which is the sentinel for does not exist), and recompile Python itself with these modified implementations of  and .


Answer URL
https://docs.python.org/3/c-api/type.html#c.PyType_Type
