Natural Text
In python, there are a few flags you can supply when opening a file for operation. I am a bit baffled at finding a combination that allow me to do random write without truncating. The behavior I am looking for is equivalent to C: create it if it doesn't exist, otherwise, open for write (not truncating)Python's document is confusing (to me):  will truncate the file first,  is supposed to mean updating, but  will truncate it anyway. Is there anyway to achieve this without resorting to the low-level  interface?Note: the  or  doesn't work either (please correct if I am doing something wrong here)Is that so the append mode insist on writing to the end?
You should open in  mode.On Python 2 you could use  instead for text mode, but you shouldn't since it can change the length of the text you write.
You can do it with os.open:Now you can read, write in the middle of the file, seek, and so on. And it creates the file. Tested on Python 2 and 3.
You need to use  to append, it will create the file if it does not exist or append to it if it does.You cannot do what you want with append as the pointer automatically moves to the end of the file when you call the write method. You could check if the file exists then  use  with  inserting a line on whichever line number you want.http://linux.die.net/man/3/fopena+  Open for reading and appending (writing at end of file). The file is created if it does not exist. The initial file position for reading is at the beginning of the file, but output is always appended to the end of the file.fileinput makes a  copy of the file you pass in and it is deleted when the output is closed. If you  specify a backup extension  the backup file will be kept. 


Answer URL
https://docs.python.org/3/library/os.html#os.open
