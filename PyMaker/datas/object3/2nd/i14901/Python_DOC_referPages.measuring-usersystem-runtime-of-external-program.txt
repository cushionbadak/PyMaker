Natural Text
As part of an evaluation, I want to measure and compare the user+system runtime of different diff-tools.As a first approach, I thought about calling the particular tools with  (GNU ). Since the rest of the evaluation is done by a bunch of Python scripts I want to realise it in Python.The time output is formatted as follows:The output of the diff tool is redirected to  to get rid of unneeded output and the output of  is then further processed. (use of  deprecated for my example. See Edit 2)A call from within a shell would look like this (removes lines starting with "Binary"):Here is my approach so far:However it feels like that this is not clean (especially from an OS point of view). It also leads to the script being stuck in the  part under certain circumstances I couldn't figure out yet.Is there a cleaner (or better) way to achieve what I want?Edit 1Changed head line and gave a more detailed explanation Edit 2Thanks to  J.F. Sebastian, I had a look at  (information taken from his answer. But since I AM interested in the output, I had to implement it a bit different.My code now looks like this:Note that I do not pipe the result to  any more (decided to trim within python)The runtime measurement works fine for some test cases, but the execution gets stuck sometimes. Removing the runtime measurement then helps the program to terminate and so does sending  to  (as demanded here). Could I have a deadlock? ( did not find anything) Is there something fundamentally wrong in my approach?
but the execution gets stuck sometimes. If you use  then something should read the output while the process is still running otherwise the child process will hang if its stdout OS pipe buffer fills up (~65K on my machine).


Answer URL
https://docs.python.org/3/library/timeit.html
https://docs.python.org/3/library/functions.html#open
