Natural Text
I have a module; say it's structured as:Inside my algorithm module, I have some global vars, and I would like to create a convenience initializer that sets them up. I would like to use the same names for the initializer's parameters as for the vars, but that leads to a conflict of local and global names. The cleanest way I can think of to implement this is:If this were a class, (I think) I could do something like . Is there a less verbose way to do what I'm doing for module-global vars? Something like ?EDIT: Turns out my solution doesn't work.
You can use the  function to get the dictionary representing the global scope, and  it:
If you really insist on keeping the parameter names  and  (why not just ,  or something like that?) then you could delegate the task to an inner function with alternative variable names.Demo:


Answer URL
https://docs.python.org/3/library/functions.html#globals
https://docs.python.org/3/library/stdtypes.html#dict.update
