Natural Text
I need your help:I need to find all phone numbers in a passage of text, so I need to match different number formats, e.g: +420 123 123 123, 123 123 123, +420123123123 and/or 123123123. If I use a regex pattern with the search method it works perfectly, but if I use findall method it just returns a list of whitespaces.
https://docs.python.org/3/library/re.html#re.findallFindall returns lists of tuples, with each tuple representing the groups from one match. You are grouping the whitespaces but you're not grouping the actual digits.Try a regex that groups the digits too:E.g.prints:You could then string-join the group matches to get the numbers, e.g.prints:
Try regex like below for mobile number contains numbersIf you want to starts with some particular number user like below
This is because  only returns non-overlapping matches, whereas search returns you the first match.findallReturn all non-overlapping matches of pattern in string, as a list of strings. The string is scanned left-to-right, and matches are returned in the order found. If one or more groups are present in the pattern, return a list of groups; this will be a list of tuples if the pattern has more than one group. Empty matches are included in the result.You can either use  or you can change your regular expression to taken from this post. 
Let's assume your text is relatively well behaved. Then a simple pattern could be to recover all sequence of at least nine digits, spaces and  optionally preceeded by a  with .Unless your text contains some weird artifacts or arithmetic operations, this should do the trick. Furthermore, being loose on the format will allow to find numbers that contain format errors.Example:


Answer URL
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/library/re.html#re.findall
https://docs.python.org/3/howto/regex.html#grouping
