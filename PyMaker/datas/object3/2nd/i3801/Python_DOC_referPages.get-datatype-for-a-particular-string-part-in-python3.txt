Natural Text
I have input in a csv file like -0.02872239612042904, -0.19755002856254578.. with 128 values and when I read that array from a csv file it gets read as '-0.02872239612042904, -0.19755002856254578..' I have figured out a way to map all strings to a specific datatype. Right now i am doing it like this:-But since these are face encodings and when the distance is calculated it returns False all the time which i believe is because of the fact that after converting to string the array becomes like 1906684972345829.0 and so on.I can't find a datatype to represent numbers like -0.02872239612042904 that's why when mapping I am converting to float which is the wrong format. Can anyone please tell me what is the correct datatype for numbers like -0.02872239612042904 in python3. Much thanks, it is giving me headache now.EDIT:-This is how I am reading data from the csv file:-One row of my data looks like this^ and i just want all of it without quotes in this type dtype('    
If you have a csv, use the csv-module to read it (or read up on pandas, wich will auto-convert your values to suitable types):Create demo file:Read demofile back inIf you have non-floats in your data, you may want to use a  instead of  inside  to guard against parsing errors some text is not convertable to float.Output:You could also use regex, but then your pattern needs to allow the optional sign as well as a dot and numbers before/after it:You can check patterns f.e. at http://regex101.com - this pattern with demo data can be found here: https://regex101.com/r/xSiyO1/1pandas solution (only valid data):Output:


Answer URL
https://docs.python.org/3/library/ast.html#ast.literal_eval
