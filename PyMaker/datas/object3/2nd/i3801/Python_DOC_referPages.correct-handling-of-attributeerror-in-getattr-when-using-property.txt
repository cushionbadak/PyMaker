Natural Text
I have a difficulty implementing properties and  so thatwhen an error happens, it is reported correctly. This is my MWE (python 3.6):The output is as follows:But the error that should be raised is:I know that properties and attributes in the  are attempted before  is called in an error-free scenario.It seems incorrect to me that when a property exists but fails,  is still attempted instead of letting the error from the property to go through. How can this be avoided?The initial error message that was generated about failing to get attribute  has been lost. The final error message  is particularly misleading and annoying. How to implement  in order to see the initial error?(EDIT) A related problem is simultaneously to achieve that returns  while  returns  or raises an exception of the missing  attribute. Does that make sense?
What is happening?First, a little heads up as to why this happens. From the doc on :Called when the default attribute access fails with an AttributeError [...] or  of a name property raises AttributeError.In this case, since you are using , we are looking at an  raised from the  method of the property  when trying to recover . This is what your call stack looks like at that moment.The attribute getter protocol sees an error being raised from inside , it thus fallback on calling  and that despite the fact the error had been raised because of . The same then happens for This behaviour is considered normal in Python, since the top-most property that failed to return a value is indeed .SolutionNow what you want is for an  raised by a  method to bubble up instead of being caught. To do that you need not to have a  method.Thus, in this particular case, what you want to use is  instead.Of course, with this solution you have to make sure yourself not to override an existing attribute.ExampleOutput
Here's a hacky solution, replacing the  with another exception type:This results in the following output:As an addendum, to make it explicit why Python does what it does, here's an excerpt from the documentation:[ is called] when the default attribute access fails with an  (either  raises an  because  is not an instance attribute or an attribute in the class tree for ; or  of a  property raises ). This method should either return the (computed) attribute value or raise an  exception.(It looks like you know this but I think it's good to have it written out for other people running into the same issue.)So that means when  raises an , it results in  being called, which results into another 
Given the answers above, I have tried the following solution for the case when  is already defined by the base class  that we cannot change.It replicates what python does when looking for attributes: the order of calls and semantics are kept. It only changes the final error message toHowever, it might be causing more problems in the derived code than it is solving, so I don't know.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
https://docs.python.org/3/reference/datamodel.html#object.__getattribute__
https://docs.python.org/3/reference/datamodel.html#object.__getattr__
