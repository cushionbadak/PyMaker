Natural Text
I have the following codeI expected the  function to run forever but it seems to only executes as a result of calling  and it stops printing the while loop once  is finished executing. The output I see is:I expected the numbers to keep printing even after  is completed.The only way to get more numbers printed is to call  again.
I expected the numbers to keep printing even after  is completed.The argument to  controls how long the event loop is run. And once the event loop stops running, all coroutines are effectively suspended, not just the one that you've been waiting for. But you do have different options: - what you already used; run the event loop until the  coroutine finishes. Executes other coroutines in parallel during that time as well, but also stops executing them as soon as the event loop finishes. - run the event loop until some coroutine or callback invokes . If none of them do that, then the event loop will not halt, even if all the coroutines come to an end. In your case you'd call  followed by  and then . run the event loop until both the specified coroutines finish. This (wait for all the tasks) is apparently what you expected  to do automatically even if you name only one, except it doesn't work like that, it stops as soon as the specified coroutine finishes.  can be used to wait for multiple coroutines at once. For a more fine-tuned control of waiting, also see .Since one of your coroutines runs forever, the last two options will be equivalent and will result in the expected output.


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.run_forever
https://docs.python.org/3/library/asyncio-task.html#asyncio.gather
https://docs.python.org/3/library/asyncio-task.html#asyncio.wait
