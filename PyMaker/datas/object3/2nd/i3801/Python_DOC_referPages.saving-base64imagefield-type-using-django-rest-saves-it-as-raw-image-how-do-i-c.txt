Natural Text
I have 5 image fields in my model , imageA, imageB, imageC, imageD and imageEI am trying to save the images in the following manner.The image are of type In the above code  contains the raw data.I am trying to update the image using the dict I created (the key is the field name and value is the content).However the images saved in the imageField of the model are raw and not an actual image. How can I fix this ? This is what my serializer looks likeMore info:If I do something like thisit works fine and the problem is solved.However there are two problems with this approach first of all I do not know the extension. How do I extract an extension ? I am just guessing a jpeg here and it works. The next thing is Ill have to check for imageA,B,C,D and E if they exist and then save each one individually. If I could come up with a dynamic solution close to something that I have that would work as well. This is what my jsondata looks like that I am posting
The images encoding should come from the client, this is how you can know which format of each one has. Example:You will receive it from the client and you know that is a .gifOnce you have validated the extensions and the base64 you can convert it to images and save it in your OS:Convert string in base64 to image and save on filesystem in Python or Decoding base64 from POST to use in PIL Once you have the images in your OS, you can link them to your ImageField in the model changing the  property: Set Django's FileField to an existing fileI hope that is clear and helpful!!
Short answer is : ref : https://docs.python.org/2/library/imghdr.html OR https://docs.python.org/3/library/imghdr.htmlBasically import imghdr is the key in function Base64ImageField.get_file_extension to get / extract the extension of the function. With below class extend / code you don't need to do modelJob.instance.imageA.save(content=content,name="image.jpeg")You need to add this class in your codebase to call or for trial purpose you can add in same Serializer class file itself. One more information is you can have these params in case you want to make this optional. NOTE :: I had got this code from StackOverflow only, but not remembered from where I got this I had liked this answer too. 
Here is how I solved this problem. None of the answers above had this informationHowever there are two problems with this approach first of all I do  not know the extension.How do I extract an extension ?The extension can be extracted by using the following codeThe next thing is Ill have to check for imageA,B,C,D and E if they  exist and then save each one individually. If I could come up with a  dynamic solution close to something that I have that would work as  well.  The solution to this was simple to use


Answer URL
https://docs.python.org/3/library/imghdr.html
