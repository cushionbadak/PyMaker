Natural Text
Trying to figure this out, because there is an inconsistency between when I run the code from Pycharm and from terminal.Pycharm add automatically the current working directory; so if I add a module that is contained in my CWD, that is not in Pythonpath, it works just fine.But when running from terminal, Python does complain, because my import statements refer to modules that are not reachable, because the CWD is not added to PYTHONPATH (I did verify this printing out the content of the variable, while running from Pycharm and from Terminal).So at this point I am assuming that in my startup code, I need to add to Pythonpath the current directory, or this is not correct? I have no way to tell where the final user may put my code in; I just assume that the whole directory containing all my different modules, is located in a specific place.To be more specific, this is where I am at:my CWD when I run from Pycharm is , I run the script after  in that directory, and I call the script with The script has the  line as first line, instead of running it with The error I get, is when loading a module that is either in the same directory of my script () or one level above (); sadly the module load happen before my  is running; so I can't add to  the current directory from which the script run. All these issues are not happening if I just run the script from Pycharm
After various trial and error, and thanks to the info that I did get from the comments; I did find 2 ways to solve the issue.1) Create a shell script or another python script, which is adding the current directory (where all the files lives), and have no import in this file. Then the script call the script that has the main function.2) On the top of the module, right after import , add the statement to add the path, in this way the current directory will be added to the PATH and it will be accessible, when the import try to access the module.Neither look very nice, but this is all that I was able to find, to solve the issue. Pretty sure there is a more elegant way to do so


Answer URL
https://docs.python.org/3/library/sys.html#sys.path
