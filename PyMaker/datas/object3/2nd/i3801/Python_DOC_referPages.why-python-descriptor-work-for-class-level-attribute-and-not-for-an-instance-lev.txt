Natural Text
Why Python Descriptor Work for Class Level Attribute and not for an Instance Level Attribute.Output:looks like the descriptor is not used for the . I found this identical question, but it doesn't really answer the question All answers refer the second question in the post.   The Python documentation specifys:Instance Binding If binding to an object instance, a.x is transformedinto the call: .But:The first part of the (my code equivalent) statement , raises an KeyError as  does not have such an attribute. It is an instance level att. Isn't it?What am I missing?
The quick answer:  is handled by , and its definition simply ignores the value's  and  methods when it is found in the instance dictionary of .The longer answer starts with explaining how attribute lookups are handled. They aren't built into the language, but rather handled by the  method of some class. Being rarely overridden, this almost always means , which is implemented in C by .Rather than explain that algorithm in detail here, I refer you to https://blog.ionelmc.ro/2015/02/09/understanding-python-metaclasses/, which has fantastic diagrams to explain both object-attribute lookup and class-attribute lookup.There is at least one answer here at Stack Overflow with includes the diagram, but I cannot locate it at the moment, so I apologize for the off-site reference. I'll include a link (or possibly close this as a duplicate) if I can find it.


Answer URL
https://docs.python.org/3/reference/datamodel.html#invoking-descriptors
