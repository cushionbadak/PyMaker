Natural Text
Python provides the feature of overloading  operator AND  operator. But, why? Isn't it enough to overload  and  is automatically the opposite (in truth value) of ? Shouldn't the result of one imply the other automatically?
You don't have to, python isn't forcing you to. In fact, the documentation explains the what and why:By default,  delegates to  and inverts the result  unless it is . There are no other implied relationships  among the comparison operators, for example, the truth of ( or ) does not imply .In general, the truth of  does not have need to imply that  is false. If your data model needs to reflect this relationship, python lets you do so with minimal headache.Note that for earlier versions of python, not even this relationship was implied. For example, Now,  returns  on any version. HOWEVER,   returns  on python-3.x, but  on python-2.x (because  is not implied on python-2.x, and in general two user defined objects are not equal if their IDs are not the same, i.e., not the same object).  


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__lt__
