Natural Text
A  uses  to add multiple items, and  to add a single one. Why doesn't  work the same way? To increment a single  item using , you have to add it to a list:Can I get  to act like  (i.e. eliminate having to put the property in a list)?Edit: Use Case: Imagine a case where you have some unknown objects, and you're trying many different things quickly to find out some preliminary things about them: performance and scaling don't matter, and a comprehension would make adding and subtracting logic time-consuming.
Well, you don't really need to use methods of  in order to count, do you? There's a  operator for that, which also works in conjunction with Counter.
You can add a new element and set its value like this:Increment:Note though that  does not delete:To delete use :Counter is a dict subclass
There is a more Pythonic way to do what you want:It uses a generator expression instead of open-coding the loop.Edit: Missed your no-list-comprehensions paragraph. I still think this is the way to actually use  in practice. If you have too much code to put into a generator expression or list comprehension, it is often better to factor that into a function and call that from a comprehension.


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
