Natural Text
My data is in the format of HH:MM:SS.milliseconds. How can I calculate average of such data in Python? I need average in form of miliseconds. I looked at several other similar postings but they do not answer my question.
I don't know you data size or if you require a built-in solution or not.However, one simple solution involves using . If you haveYou can use  and  and just doMight be/might not be overkill, but its really readable and straightforward.
The first step is to parse all those timestamps into something that you can perform arithmetic on. This can be  objects, or integer microseconds (or milliseconds, since your times all have 0 micros), or float seconds, or any other reasonable type.For example, assuming that input is one big string:If it's a list of strings, or a file object, etc. just change it to iterate that and do  on each one, instead of iterating .Then we can average them the same as any other values:Since I used  values, that's what the result will be:… or, if you  it:… or, if you want it as, say, a number of seconds, just call its  method:
It looks like the input consists of strings. Those should be converted to  objects. Use  to do that.After that, the average of anything is calculated as , but unfortunately you cannot sum dates. What you can is sum date differences, so you'll have to make some conversionsFor example:
I'm assuming that each of these is a string, you can do the following using no libraries in both python 2 and 3
Here's one approach using . The tricky part is converting strings into  objects. Sequence unpacking makes this easier and efficient to implement.Note that  only appears to work with  objects with the added  argument, this trick courtesy of @JochenRitzel.


Answer URL
https://docs.python.org/3/library/datetime.html#timedelta-objects
https://docs.python.org/3/library/datetime.html#datetime-objects
https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime
