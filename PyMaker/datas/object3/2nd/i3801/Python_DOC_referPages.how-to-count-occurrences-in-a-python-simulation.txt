Natural Text
I am running a TASEP simulation in Python, where lattice-sites on a lattice of a given size can be either empty or occupied (0 or 1).The simulation gives me a plot of the lattice configuration (whether a state is occupied or not) for a given simulation-time, but not how many (number) of the states that are occupied.I can't get Python to count the number of occupied states because the graph comes from a simulation and not a list.TASEP code:Here is a plot from the simulation
Ok, so I basically fixed up your code because, no offence, but it was kind of a mess before (see the comments). This outputs 
The solution proposed by FHTMitchell is correct but inefficient. The  operation requires O(L) work to be performed at each iteration, making the overall program O(L * n_time).Note that:you start out with an  of 0;the  should be incremented only if a zero state gets switched to a one;the  should be decremented only if a one state gets switched to a zero;if you're already in the target state, no change is needed and short-circuiting can avoid an unnecessary call to ;and finally, when two states are toggled in opposite directions (your final ) there is no need to change the .Applying all of the above yields the following O(n_time) implementation, which is quite a bit faster:


Answer URL
https://docs.python.org/3/library/functions.html#iter
https://docs.python.org/3/library/random.html#random.seed
