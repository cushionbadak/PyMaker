Natural Text
I have a python class with such a module:xy.pythen I have ClassA defined as:b.pyNow in this code, when writing test for xy.py I want to mock.patch ClassC, is there a way to achieve that in python?obviously I tried:andNone of these worked.
You need to patch where  is located so that's  in :Or, in other words,  is imported into module  and so that's the scope in which  needs to be patched.
Where to patch:patch() works by (temporarily) changing the object that a name points to with another one. There can be many names pointing to any individual object, so for patching to work you must ensure that you patch the name used by the system under test.The basic principle is that you patch where an object is looked up, which is not necessarily the same place as where it is defined.In your case, the lookup location is  since you want to patch  used in .
Each time the method  is called, the method looks up  as a global, thus finding  in the  module. You need to patch that location:See the Where to patch section section.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
https://docs.python.org/3/library/unittest.mock.html#where-to-patch
