Natural Text
As the documentation stated, using  is not completely equivalent to slicing the string, i.e. . It won't do regex matching as if the string is starting from , so  does not match the beginning of the substring, but only matches the real beginning of the whole string. However,  matches either the end of the substring or the whole string.My questions are... Why is it not consistent between beginning and ending match? Why does using  and  treat the end as the real end, but the start/beginning is not treated as the real start/beginning? Is there any approach to make using  and  imitate slicing? Because Python copies string when slicing instead of just reference the old one, it would be more efficient to use  and  instead of slicing when working with big string multiple times.
The starting position argument  is especially useful for doing lexical analysers for example. The performance difference between slicing a string with  and using the  parameter might seem insignificant, but it certainly is not so; see for example this bug report in the JsLex lexer. Indeed, the  matches at the real beginning of the string; or, if  is specified, also at the beginning of line; this is also by design so that a scanner based on regular expressions can easily distinguish between real beginning of line/beginning of input and just some other point on a line/within the input.Do note that you can also use the  function to anchor the match to the beginning string or at the position specified by ; thus instead of doingyou'd generally implement a scanner asand then set the  to  (which in this case returns 4) for the successive matching operations.The match must be found starting exactly at the :(Notice how the  is anchored at the beginning of the input as if by implicit  but not to the end of the input; indeed this is often a source of errors as people believe the match has both implicit  and  - Python 3.4 added the  that does this)As for why the  parameter is not consistent with the  - that I do not know exactly, but it also makes some sense to me, as in Python 2 there is no  and there anchoring with  is the only way to ensure that the entire span must be matched.
This sounds like a bug in Python, but if you want to do slice by reference instead of copying the strings you can use the Python builtin .For example:This creates a substring without copying the data, so should allow for efficient splitting of large strings.


Answer URL
https://docs.python.org/3/library/re.html#re.regex.match
https://docs.python.org/3/library/re.html#re.regex.fullmatch
