Natural Text
I am converting an app from VB.NET to Python 3.4 and am running into problems calling a function within a DLL file using ctypes.  For that particular function, two structures are passed in byref.  For one structure, the field offsets are not working out as needed.  The last field's offset ends up being off.  That makes all of the fields in that structure have values that are not correct.For the PPNChartList structure below, the field offsets should be 0, 8, 12, and 76 (based on the working VB.NET code) but end up being 0, 8, 12, and 72.  So, how can I shift that last field over or otherwise get the correct values for that structure?Any guidance would be appreciated.Below is the Python code:EDIT: If it helps any, below is the applicable portions of the working VB.NET code showing the structure and function definitions.  This shows the appropriate offsets for the structures.  In Python, I am able to call the makePPNChart() function and pass it the two structures byref that it needs.  The structures come back as they should.  So, I have it partially working in Python.EDIT #2:  I used the loop below to check the offsets.  Adding in an extra c_long field into that structure's definition, I would think that would shift things over just right.  However, as you can see below, the offset for the audtChartSpec structure jumps to 80, instead of the expected 76.
12+15*4 is 72, so the VB.NET structure skips those 4 bytes, maybe to guarantee that the array is null terminated. Without knowing the actual struct definition from the called library it's hard to say. You could just add an additional 4 byte padding field.To control the alignment of the members you can set  to make them 4-bytes aligned (the equivalent of ):Now you should get the expected result, at least on systems where c_long is 32bit.


Answer URL
https://docs.python.org/3/library/ctypes.html#structure-union-alignment-and-byte-order
