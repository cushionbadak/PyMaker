Natural Text
I have the following list: and ,  and  are duplicated. However, as shown in the example, there is no specific pattern in the naming. I need to do a pairwise comparison of the element of the list:I need then to check for each pair, if the two, contain the same string but with length more than . That is  and , and  and  would pass this criterion but  and  would not. How can I achieve this in Python?
You can use an 'in' operator to see if on variable contains anotherTry this:Edit:As tobias_k mention: Note that this only works if the entire string is contained in the other string
You could iterate all the ,  them with some special character that can not be part of those strings, and use a regular expression like  to find a repeated group in that pair. Other than just testing with , this will also work if just a part of the first string is contained in the second, or vice versa.Here,  is the shared substring of at least 5 characters (from the  class in this case, but feel free to adapt), followed by more characters  the separator ( in this case), more filler  and then another instance of the first group .Output:    Of course, you can tweak the regex to fit your needs. E.g., if you do not want the repeated region to be bounded by , you could use a regex like .


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.combinations
https://docs.python.org/3/library/re.html
