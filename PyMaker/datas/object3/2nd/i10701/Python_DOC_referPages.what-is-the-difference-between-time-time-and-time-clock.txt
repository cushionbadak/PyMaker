Natural Text
This question already has an answer here:Python's time.clock() vs. time.time() accuracy?                    16 answers                I thought both measure the amount of time? But they return very different numbers and I don't understand what the documentation is saying. Can anyone elaborate?
 gives you an elapsed amount of time.  gives you the wall clock time.You can use  to communicate with others (including humans) about when something happened.  only lets you measure how long something takes.Generally speaking, you'd use  when you want to measure timings,  to schedule something. To that end  has to be set correctly on your computer (to agree with the rest of your region as to what time it is now), but  doesn't, it just counts seconds from an arbitrary point in time (usually when your computer started or when your process first used the function).The exact behaviour of  depends on your OS (it could just measure process time, excluding time sleeping, or it could measure time elapsed even when the process is inactive, it could go backwards if your system time is adjusted, etc).For some use-cases this variability in exact behaviour isn't good enough, and as such it is deprecated in Python 3. There better options are available for either measuring performance or process time, see  and .


Answer URL
https://docs.python.org/3/library/time.html#time.perf_counter
https://docs.python.org/3/library/time.html#time.process_time
