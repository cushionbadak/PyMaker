Natural Text
I have a specification which outlines how instructions should be sent over serial.Currently I am crafting the packets that will go over the connection.One segment of the packet, requires a 32-bit (4 byte) binary number. The first 31-bits are 'data' and the last bit is merely a flag.So, The max decimal number that could fit in data is: 2147483647 (2^31). Data could never be bigger than this, Cool!My problem, is how do I go about encoding the data to 31-bits binary, then setting the final bit to enable the flag?Say my data is  what is the desirable way of converting this to 31 bit binary then adding 1 or a 0 to the end?Edit - I'm Using Python 3.4
I think you can use binary shift to add your flag to a number:To unpack you can use mask and binary AND like this:
The only thing which comes to my mind is operation on stringsSay we have two variables:Convert the data hex to numberConvert the number to string binary representation:Append flag to the endEvaluate string to get number and convert back to hex or whatever you need:#edit1In order to extend the value to 4-bytes you can use:#edit2
See if this works, similar to other answers but accounts for original bit length.Define the final number of bitsStart with a bytes literalConvert to an Shift left to the required bit lengthAdd the flag


Answer URL
https://docs.python.org/3/library/struct.html
