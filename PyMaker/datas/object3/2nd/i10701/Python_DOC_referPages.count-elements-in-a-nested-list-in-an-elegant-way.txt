Natural Text
I have nested tuples in a list likeI want to know how many 'a' and 'b' in the list in total. So I currently use the following code to get the result.But I got , so how to get the right answer?Also, is there a more elegant way (less code or higher performance or using builtins) to do this?
I'd flatten the list with  and pass it to a  object:Or use  to count how many times a value appears in the flattened sequence:The two approaches are pretty much comparable in speed on Python 3.5.1 on my Macbook Pro (OS X 10.11):
You want to avoid putting data in a datastructure. The  syntax constructs a new list and fills it with the content you put in  , after which the length of the array is taken and the array is never used. If the list if very large, this uses a lot of memory, and it is inelegant in general. You can also use iterators to loop over the existing data structure, e.g., like so:The  predicate is a bool which evaluates to a 0 or 1 when cast to an int, causing the  to only count the tuple entry if the predicate evaluates to .
Just for fun, functional method using reduce:
You can iterate over both the list and the sub-lists in one list comprehension:I think that's fairly concise.To avoid creating a temporary list, you could use a generator expression to create a sequence of 1s and pass that to :
Although this question already has an accepted answer, just wondering why all of them as so complex. I would think that this would suffice.Or


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
https://docs.python.org/3/library/collections.html#collections.Counter
