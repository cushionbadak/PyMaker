Natural Text
I use Python rarely, so it's unclear to me why such behaviour is allowed:There is no w object and hence it has no s attribute, then why f allows to make  assignment?
Such behaviour is allowed because Python is a dynamic language. At compilation time, when the  function definition is executed (i.e., compiled to byte code), the interpreter knows that there in no local object in the function bound to the name , so  must refer to a global object. Sure, there is currently no object in the global scope which is bound to that name, but that doesn't matter: Python assumes you know what you're doing, until proven otherwise :).We can use the  module to disassemble the function's byte code. Here's a short demo.outputFWIW, in Python 2 the byte code for  is identical, but the  error message is.So if we try to call  without a valid  in the global scope at the time of the call we will get an exception, but if there _is _ a valid  then everything's ok.Note that  must be in the global scope, a local  inside another function will not work. Eg:output
Try running your function and see what happens. Python doesn't catch it as you write your code but as soon as you run the code it will error. What you see is because python doesn't know that by the time your function runs there won't be an object  with an attribute . However, when you do it outside the function call it checks that there is no  in the scope and thus errors.Try this: 
A function is not yet being run because it hasn't been called yet, as opposed to the assignment of  to  being done outside of the function.


Answer URL
https://docs.python.org/3/library/dis.html
