Natural Text
I have a package that works with the following files:Currently, with a file at the same level as the  folder, I need to do this:I want to be able to use the following:I know I need to edit one or more of the three existing  files, and I think I'll need to set the  variable in one or more of them, but I can't seem to figure out what the proper use is for what I want. Am I going about this incorrectly?
You could make it work by adding the following to your  files:In :In :In :Now top-level code can do any the imports you asked about and they'll make  a valid name.Is this a good design? Not really. One of the principles of good Python design is that "flat is better than nested". As user2357112 commented, unlike some other languages, Python doesn't require each class to have its own file. Since you want the  and  classes to be accessible from the  and  namespaces, respectively, it might make more sense to combine the files from the  folders into a single  file (replacing the subpackage with a single larger module).
Assuming you don't have anything else in the  files except for the following, this should work:After this your 3 use cases should work. You should not need a  unless you have other stuff in the  and keep in mind this only affects the load all syntax .One benefit to the  file using the aliased imports for  and  is that you can restructure the entirety of the subpackages and not have to change your  as long as the  files reflect the new structure.Edit: Flat vs Nested(copied from other answer's comment)It is best for the user of your package that your package appears as flat as possible, but for developers it may be any structure. For example if your package is mainly used via the Obj1 class it would suck to have to do . On the other hand it would suck as a developer to have to organize all the Obj1 dependencies in one large package/module with the rest of the package. Using the imports the way we've described will make it appear flat while being organized underneath.


Answer URL
https://docs.python.org/3/tutorial/modules.html#packages
