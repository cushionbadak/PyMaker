Natural Text
The Python built-in function  can help to quickly check if any  is  in a iterable type.But is there an elegant way or function in Python that could achieve the opposite effect of ? That is, if any  then return , like the following example:
There is also the  function which does the opposite of what you want, it returns  if all are  and  if any are . Therefore you can just do:
Write a generator expression which tests your custom condition. You're not bound to only the default truthiness test:
Well, the implementation of  is equivalent to:So, just switch the condition from  to :Yes, of course this doesn't leverage the speed of the built-ins  or  like the other answers do, but it's a nice readable alternative.
You can do:Recall that  in Python 3 is a generator. For Python 2, you probably want to use  Mea Culpa: After timing these, the method I offered is hands down the slowestThe fastest is  or  which is just a silly itertools variant. Use Jack Aidleys solution.Timing code:Results:


Answer URL
https://docs.python.org/3/library/functions.html#any
