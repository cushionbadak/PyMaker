Natural Text
I saw the following in a student's script, and to my surprise it works:The question, in brief, is: How is this different from simple ? Or is it the same, except for necessitating that  exists?As you can see below, it doesn't define  in my scope but . So the question is: What does python do with this? For sure, it imports (and hence executes) the module . It also ensures that  does resolve to something valid. (Thanks to @Lee and @Stuart for the links to the documentation that confirms it.) But is there more? Or is  always equivalent to  (provided  exists)?If I import , it already imports/executes any modules that  itself imports; so  is already loaded. Are there arrangements (not too exotic) where importing  could lead to different code being executed, or in different order, or otherwise having different side effects, than just importing ? And are there legitimate use cases for the multi-segment form? (To put it differently: What's the point?)
From the docs:[The fully qualified name of the module] will be used in various phases of the import search, and it  may be the dotted path to a submodule, e.g. . In this case,  Python first tries to import , then , and finally  . If any of the intermediate imports fail, an   is raised.So, to answer your original question, it seems that if  is a valid package, then the whole module is imported. So, as you suggest, the sub-module form would be used to validate that  exists within the  module, rather than just importing the module .If you want to only import the  module, then you can use the  syntax:See also:  vs 


Answer URL
https://docs.python.org/3/reference/import.html#searching
