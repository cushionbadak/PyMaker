Natural Text
I'm having some trouble in regards to assigning a variable to a specific string of elements.  Here's a simplified version of my code:And when I run this code the output is something along the lines of oretc.The first line of output is what I wanted it to be, however for some reason the second line only prints the last letter of the string.  Correct me if I'm wrong but I'm guessing it's because instead of  equaling the whole string of random elements it gets reassigned to 4-10 different elements and prints all of them for  under  but the second time it just uses the most recent letter.  How do I get it to print the full string both times? Or more specifically how to I get  to equal the entire string of output?The only thing I could think of to try was changing  to  but it gave the same result.
Yes, you are producing a separate list of characters here, because  always returns a list:The first line picks a list of 26 unique and random characters from the sequence . That the input is also 26 characters long means you basically have produced a randomly shuffled list of the 26 letters of the alphabet.  The second line then picks between 4 and 10 characters from that shuffled list, shuffling those again.You are confusing yourself somewhat by using a custom  function that does not add newlines after everything it prints, so each character the  loop prints appears right after the previous one. The  loop variable  ends up being bound to the last character from the  list when the loop is complete.You could get the same result by using  once, directly on This is still a list but you can just join the result back into a single string with :Now, usually when people pick random characters from  they don't mind if characters repeat. You'll get a better password if you do, for example. Use the  function to pick one random character at a time, and repeat this process in a loop to pick your desired number of letters. A list comprehension can make this easier, putting all the results into a list, you'll have to join the result again:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.join
https://docs.python.org/3/library/random.html#random.choice
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
