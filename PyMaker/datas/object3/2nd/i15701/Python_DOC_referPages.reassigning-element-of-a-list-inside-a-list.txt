Natural Text
This question already has an answer here:List of lists changes reflected across sublists unexpectedly                    12 answers                I'm trying to modify the list of lists:in particular when I assign ,  is now:instead of just reassigning the second element of the first sub list, it reassigns the first element of every sub list. I don't understand why this is happening. Does anyone know?
You must have created  like so:Doing this creates a list with five references to the same list object:So, when you modify one sublist, they all get changed.To fix the problem, use a list comprehension instead:Unlike your current code, this solution will create a list with five unique sublists. Consequentially, changing one will not affect the others.Also, I changed the name of your list to  to avoid shadowing the built-in.  You should never create a name that is the same as a built-in.Note that you could also write:Doing  is not a problem here because strings are immutable objects in Python.  So,  creates a list with six unique string objects.  Lists however are mutable objects and therefore cannot be created like this.


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
https://docs.python.org/3/library/functions.html#func-list
https://docs.python.org/3/glossary.html#immutable
https://docs.python.org/3/glossary.html#mutable
https://docs.python.org/3/faq/programming.html#how-do-i-create-a-multidimensional-list
