Natural Text
For example,I used , but the result was just all about . How can I get the real name "test" or if can not by using perf?
You won't be able to do this with perf, that's specifically built to interface the Linux process model, decode those stack frames, etc.  It's doing what it's supposed to by telling you that it was executing the function PyEval_EvalFrameEx.  It would have to be extended with python-specific information to be able to actually decode Python's frame information, which isn't going to happen.  Unfortunately I haven't found a really good way to debug both Python and C/C++ modules easily.  It's generally pdb for one and gdb for the other.
As of 2018,  simply doesn't have support for reading the Python stack frames (cf. a 2014 Python mailinglist discussion).Python 3.6 has some support for Dtrace and Systemtap.An alternative to this is Pyflame, a stochastic profiler for Python that samples python call stacks via . In contrast to Dtrace/Systemtap you don't need extra permissions and it also works with Python versions that are compiled without instrumentalization support.When you use the  option with Pyflame you see Python lines that call into C/C++ extensions, although the stack-trace stops at the last Python frame. But perhaps this is sufficient for your use case.
Maybe the traceback module will do the trick for you:https://docs.python.org/2/library/traceback.htmlhttps://docs.python.org/3/library/traceback.html


Answer URL
https://docs.python.org/3/howto/instrumentation.html
https://docs.python.org/3/library/traceback.html
