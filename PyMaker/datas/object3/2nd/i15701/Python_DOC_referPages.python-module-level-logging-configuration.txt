Natural Text
I have read from python docs https://docs.python.org/3/howto/logging.html#advanced-logging-tutorial that the best way to configure module level logging is to name the logger:I the main application logging works fine:However in another module when I set the logger in the module scope:the logger does not log anything. When I create the logger within a method logging works fine:Then I would need to use the self.logger.. formatting to get a logger in all methods in the class - which I have never seen before. I tried to set the logging.conf to log where the call is comming from:However when the logger is set in the module scope logging still doesn't work even with this configuration.I also tried:at the start of a module, again no logger. However If I use:at the start of a module, logging works fine and with config file above I can see which module the call is comming from.Why is configuring logger using name not inheriting it's config from root?Why does configuring using root not work while using fileHandler does, when both root and fileHandler are configured in the logging.conf file?
To avoid surprises, use  in your  call, as documented in this section of the docs.You should never need to use a  instance variable - module level loggers should be fine. 


Answer URL
https://docs.python.org/3/howto/logging.html#advanced-logging-tutorial
https://docs.python.org/3/howto/logging.html#configuring-logging
