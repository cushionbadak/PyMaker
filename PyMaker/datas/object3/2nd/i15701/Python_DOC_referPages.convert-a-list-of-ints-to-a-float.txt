Natural Text
I am trying to convert a number stored as a list of ints to a float type. I got the number via a serial console and want to reassemble it back together into a float.The way I would do it in C is something like this:What I tried to use in python is a much more simple conversion:However, this does not preserve the sign of the result, as the C code does.What is the right way to do this in python?UPDATE:Python version is 2.7.3.My byte array has a length of 2.in the python code byte_array is list of ints. I've renamed it to avoid misunderstanding. I can not just use the float() function because it will not preserve the sign of the number.
I'm a bit confused by what data you have, and how it is represented in Python. As I understand it, you have received two unsigned bytes over a serial connection, which are now represented by a list of two python ints. This data represents a big endian 16-bit signed integer, which you want to extract and turn into a float. eg.  ->  -> 
I think what you want is the struct module.Here's a round trip snippet: may be surprising to you.  returns a tuple. So to get to the value you can door modify the result setting line to beI personally hate that, so use the following insteadThe second thing you'll notice is that the value has extra digits of noise. That's because python's native floating point representation is .(This is python3 btw, adjust for using old versions of python as appropriate)
I am not sure I really understand what you are doing, but I think you got 4 bytes from a stream and know them to represent a float32 value. The way you handling this suggests big-endian byte-order. Python has the  package (https://docs.python.org/2/library/struct.html) to handle bytestreams.
Okay, so I think int_list isn't really just a list of ints. The ints are constrained to 0-255 and represent bytes that can be built into a signed integer. You then want to turn that into a float. The trick is to set the sign of the first byte properly and then procede much like you did.


Answer URL
https://docs.python.org/3/library/struct.html?highlight=struct
