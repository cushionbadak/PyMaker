Natural Text
I am writing a program to convert in any base to base 10 in Python. The code for the program is shown below.The problem is that for any number I enter the answer is always 1111. Any advice on how to fix this issue will be welcome.
 is the bitwise XOR operator, not the power operator. In Python the power operator is :There are other mistakes too;  is simply , you are doubling the number there. You probably want to start with  outside the loop then sum to that:but you are not converting  to an actual numeric value there yet.You'll want a mapping from 'digit' to numerical value here:This creates a dictionary mapping from string digit to numerical value, so  maps to  and  maps to 15, etc. giving you a mapping all the way up to base 36.Now you can use  to map from string digit to numerical value:I reversed the processing of the digits here; much easier to go from smaller to larger.  gives us an index count, and you can loop directly over  to yield characters, rather than use  and index into . I lowercase  so that  and  both mean  in bases that go that high.This then can be turned into a one-liner in a function:
To find the value for any digit, you need to know not only its position and base, but the set and ordering of the possible digits. In the code:I don't see a conversion from the character representation of a digit  to a numeric value. The line after it is even odder, as you just double , rather than collecting a sum of values. (As a side note, Python's  type already handles bases from 2 to 36.)Just because the exercise is fun, here's a slightly different approach:


Answer URL
https://docs.python.org/3/reference/expressions.html#binary-bitwise-operations
https://docs.python.org/3/reference/expressions.html#the-power-operator
