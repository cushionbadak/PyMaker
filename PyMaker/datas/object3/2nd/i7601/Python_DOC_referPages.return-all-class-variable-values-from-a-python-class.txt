Natural Text
I have a Python class that contains all the AWS regions. I wrote a class method that would return me the list of all the regions. Is there a better way of returning all the class variable values so I don't have to hard-code all the values in the return statement like I am doing in the example below?
In this case, you can enumerate all the attributes of the class that are uppercase; I'd use the  function to access the class namespace:Demo:
As a general reference, you can get the attributes of any class through the following ways. Choose depending on your needs::Will return a dict of all writeable class attributes. This is usually what you need.:Same result as , but using this instead is considered best practice.:Will return all class attributes, including those that aren't made by you but are inherited from .In your case, using  will work just fine, as demonstrated by Martijn Pieters in his answer.
It looks like what you might be doing is accidentally creating an  type. If your  class is only used to store these values (not lots of other complex behavior), try making it a subclass of .  This would give you a handful of nice methods without having to recreate it all yourself and would make your code clearer to others who know what enumerate types are.


Answer URL
https://docs.python.org/3/library/functions.html#vars
https://docs.python.org/3/library/enum.html
