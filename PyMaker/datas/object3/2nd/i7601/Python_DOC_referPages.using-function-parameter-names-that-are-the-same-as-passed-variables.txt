Natural Text
Is there anything wrong with the following?:Often in my code I change the function parameters to a name that differs from the passed variable.I do this just to be safe, but when other people look at the code, I think it would be great if I can keep the same name so they know exactly what is being passed. 
From syntax perspective, there is nothing wrong with 1 example. Python follows LEGB rule when it tries to get variable value, so when you use  as an argument, you rewrite global  in scope of  function.
You can keep the same name, it doesn't matter. Variables defined inside a function are not accessible outside.
The only risk with doing that is if you are using any global variable the scope of the variable has no impact. Depending on the variable name, it COULD be confusing to use the same variable name, but I think you should really just use whatever makes the most sense given the context. So for example in something likeit's totally fine. 
Well, there's no problem because variables that are defined inside a function have local scope. IMO, this problem only matters when your function need to use the same name local variable AND some global variable. But you should however avoid such design in the first place. This is how I handle this kind of situations:More, what should be worth mentioning is that in your second example,  is usually used for privatish (internal use) things in Python, but that's just a convention (It's not enforced by the language in any way, since Python programmers are all consenting adults). I'd rather use:  instead.


Answer URL
https://docs.python.org/3/faq/programming.html#how-do-i-share-global-variables-across-modules
