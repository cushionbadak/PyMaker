Natural Text
Problem statement: Given two list A of strings and B of regex's(they are string too).  For every regex in list B, find all the matching strings in list A.  Length of list A <= 10^6 (N)  Length of string B <= 100 (M)  Length of strings, regex <= 30 (K)  Assume regex matching and string comparisons take O(K) time and regex can contain any python regex supported operations.My algorithm:This takes  time.Is there any way to make it more time efficient even compromising space (using any data structure)?
This is about as fast as it can go, in terms of time complexity.Every regex has to be matched with every string at least once. Otherwise, you won't be able to get the information of "match" or "no match".In terms of absolute time, you can use a  to avoid the slow Python loops:


Answer URL
https://docs.python.org/3/library/functions.html#filter
