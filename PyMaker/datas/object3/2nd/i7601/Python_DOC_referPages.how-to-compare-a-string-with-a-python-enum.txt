Natural Text
I just discovered the existence of an Enum base class in python and I'm trying to imagine how it could be useful to me.Let's say I define a traffic light status:Let's say I receive information from some subsystem in my program, in the form of a string representing a colour name, for instance .How do I compare this string to my traffic light signals?Obviously,  is , because  is not a string. fails with .
One does not create an instance of an Enum.The  syntax is used to access Enum members by value, which are not intended to be used when they are .However one can use a string to access Enum members like one would access a value in a , using square brackets:Another possibility would be to compare the string to the  of an Enum member:But here, we are not testing identity between Enum members, but comparing strings, so it is better practice to use an equality test:(The identity comparison between strings worked thanks to string interning, which is better not to be relied upon. Thanks @mwchase and @Chris_Rands for making me aware of that.)Yet another possibility would be to explicitly set the member values as their names when creating the Enum:(See this answer for a method to have this automated.) Then,  would be valid.
It is possible to have  return the name of the enum member as its value (which is in the  section of the docs1:1 This requires version Python 3.6, or  2.02 ( works with Pythons as old as 2.7).2 Disclosure:  I am the author of the Python stdlib , the  backport, and the Advanced Enumeration ()  library.


Answer URL
https://docs.python.org/3/library/enum.html
https://docs.python.org/3/library/enum.html#enum-members-aka-instances
https://docs.python.org/3/library/enum.html#programmatic-access-to-enumeration-members-and-their-attributes
https://docs.python.org/3/library/enum.html#using-automatic-values
https://docs.python.org/3/library/enum.html
