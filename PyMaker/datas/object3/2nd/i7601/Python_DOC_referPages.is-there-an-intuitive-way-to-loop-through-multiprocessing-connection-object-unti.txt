Natural Text
I am developing a tool to scrape tweets and process them in order to build a word frequency analysis by user. Due to the sheer volume of the data needed to be processed, I am splitting the word processing section away from the tweet scraping section. () provides a useful utility to transfer data between processes. However, I cannot find a utility that the receiving end may tell when EOF has been reached when the sending end explicitly calls . I attempted:but this somehow stops after returning only the first item in the pipe.I am currently bypassing the problem with a Try-Except statement inside a  loop:I can also see this be done through sending a specific end marker and let the receiving end terminate the process when it receives that. But those are very counter-intuitive and ugly ways to do it, violating the Zen of Python:Beautiful is better than ugly....There should be one-- and preferably only one --obvious way to do it.Am I missing something? Is there a simple, elegant way like c++'s to perform my task?
You can use the second form of calling :  to make it into a for loop. You still would have to catch the exception though.If instead of closing the pipe, you send an "eof" down the pipe, you can remove the  and do , and when  is recieved (can be anything),  stops the for loop. Usually the EOF message is an empty string, so it is common to see things like:The itertools recipes have this function called . This is basically what you wanted to do before with the  functionSo, you could also do something like this:Or just fixing the  function:


Answer URL
https://docs.python.org/3/library/functions.html#iter
https://docs.python.org/3/library/itertools.html#itertools-recipes
