Natural Text
I am currently using the below code to import 6,000 csv files (with headers) and export them into a single csv file (with a single header row).This code works fine, but it is slow. It can take up to 2 days to process. I was given a single line script for Terminal command line that does the same (but with no headers). This script takes 20 seconds.Does anyone know how I can speed up the first Python script? To cut the time down, I have thought about not importing it into a DataFrame and just concatenating the CSVs, but I cannot figure it out. Thanks.
If you don't need the CSV in memory, just copying from input to output, it'll be a lot cheaper to avoid parsing at all, and copy without building up in memory:That's it;  handles efficiently copying the data, dramatically reducing the Python level work to parse and reserialize.This assumes all the CSV files have the same format, encoding, line endings, etc., and the header doesn't contain embedded newlines, but if that's the case, it's a lot faster than the alternatives.
Are you required to do this in Python? If you are open to doing this entirely in shell, all you'd need to do is first  the header row from a randomly selected input .csv file into  before running your one-liner:
You don't need pandas for this, just the simple  module would work fine.


Answer URL
https://docs.python.org/3/library/shutil.html#shutil.copyfileobj
