Natural Text
Fermi Dirac statistics implies that the number of microstates within a macrostate for distinguishable particles follows an equation of the form:Combinations = m!/((m-N)!N!Pretending m is the number of bouncy balls in a container, and N is the number of bouncy balls you're taking out, this tells us how many unique ways you can take out N balls for N < m.I'm trying to write a code in python to read out each combination, and need some help. So far all I have is the script telling me how many combinations there are. If m = 4 and N = 2, there are 6 combinations. I need to write a code that tells me that those combinations are the first and second, first and third, first and forth, second and third, second and forth, and third and forth. Now for small m this is easy to do by hand but you can see this gets monotonous fast. Can someone help me write a script to do this?
This is trivial using itertools.combinationsOutput:Itertools docs for Python 2.7: https://docs.python.org/2/library/itertools.htmlItertools docs for Python 3.6: https://docs.python.org/3/library/itertools.html
Here's a quick sketch of an algorithm that should handle this.


Answer URL
https://docs.python.org/3/library/itertools.html
