Natural Text
From Python in a NutshellA property is an instance attribute with special functionality.  ...Hereâ€™s one way to define a read- only property:Each instance  r  of class  Rectangle  has a synthetic read-only  attribute  r.area , computed on the fly in method  r.get_area()  by  multiplying the sides.Is a property a class attribute or an instance attribute? Does the above quote imply that a property is an instance attribute?A property is always defined inside the definition of a class, so is a property a class attribute.Does  store the class attributes and an     instance's  store the instance attributes? If    yes, then does the following show that the property is a class    attribute instead of an instance attribute:
The  object itself is a class attribute, as its position inside the class body implies; you can still access class attributes on instances, though, just not vice versa.What makes the property different is the descriptor protocol; in the case of accessing , the following (roughly) happens:Python looks for the attribute on the instance, and doesn't find it; thenPython looks for the attribute on the instance's type, and does find it; thenPython finds that the resulting value implements , so;Python invokes that method with the instance and the class.What actually gets called is therefore:This is how the property descriptor accesses the instance's state while actually being an attribute on the class; the instance is passed into it. You can tell it's a class attribute because it's accessible on the class, without creating any instances:


Answer URL
https://docs.python.org/3/library/functions.html#property
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/howto/descriptor.html
