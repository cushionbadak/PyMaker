Natural Text
I have a data file as such:When I import using pandas I'm trying to get the following:Using my script , when I import the 1st row everything is fine (with no index set).However with the second row since there's a comma there, the data that was originally in ID moves to the index column and everything gets shifted 1 to the left. The pattern repeats with the more commas are found in the last column. A possible solution to this is to rewrite the file but I'm trying to find a way to simply import it without having to rewrite each file (I have about 65+).My question is:Is it possible to import (per row) first column into "ID" second column to "ORIG" third column to "TIME" and everything else into "TEXT"?
Your CSV is malformed because it does not use quotes to distinguish commas which are delimiters from commas which are part of a field's value.However, we could iterate through the lines of the CSV and use  to split on just the first 3 commas:We can pass this iterator directly to :This will not be as fast loading valid CSV using 's optimized parsing engine, but I think the result pretty good considering the input is malformed.yieldswith 
It's a tad ugly, but you could use  using on-the-fly data:
While there are a few ways to force this to work entirely pandas-side, it's so much easier to do it using  that I'd just do that:This effectively fixes up the input data before pandas ever sees it.  This gives


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
