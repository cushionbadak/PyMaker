Natural Text
i've this implementation of singleton pattern in python, but i've noticedthat the init is called, uselessly, everytime i call MyClass, despite the same instance is returned.How can i avoid it?
The problem is that  doesn't return an object, it returns an unitialized object on which  is called afterwards.You can't avoid that at all. What you can do is the following(using metatypes):
Another simple, but totally viable way to implement what you want, which doesn't require super or meta classes, is to just make your class a Python module, which are essentially Singleton objects.Here's what I mean:::Output:It's possible to derive a subclass from MyClass, but you'd have to do it something like this:Afterwards you could add this to 'client.py':
, if implemented, is always called on whatever gets returned by ; in general, you should be implementing one or the other, not both. You could implement  on , instead, and initialise the  attribute only if it doesn't already exist:In use:


Answer URL
https://docs.python.org/3/reference/datamodel.html?highlight=__new__#object.__new__
