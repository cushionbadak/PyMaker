Natural Text
I am trying to play with python  module but get a bit confused here. Below is a standard script to create a  first, and then create and add a  and  to the . I run this on a newly started kernel.  works as expected. But in the console output, I've got some sort of duplicated messages:I suppose those log messages with time stamps are from the user-defined , but where are the duplicated messages come from? Can I get rid of them, say, keep only every other line? Any help is appreciated. 
The issue has been raised here.The observation is the following: In normal python, or the IPython console, there is no handler to the root logger installed until the root logger itself is used to issue a log message:However, in the IPython notebook, there is the default stderr root logger installed right away:Maybe I'm missing something, but I think that in the notebook, there should no handler be installed automatically, for a number of reasons:It would make the default logging configuration consistent between standard python, the IPython console and the IPython notebook.As soon as the user writes a log message with the root logger, the handler gets installed automatically, and therefore log messages are not easily missed.With the current behaviour, a library that configures a child logger, and a handler for that child logger, might easily spam the notebook with debug messages that are supposed to only go in a log file (or elsewhere). For example, astropy seems to have such an issue, and I'm running into the same issue with my own library. The problem is that for such a library, there is no "clean" way around this. The library could remove the handler of the root logger when it is imported, which is hack-y. It could set its own logger's  attribute to , so that the log messages are not propagated to the root logger, but this not only disables debug output from going into the notebook, but also more severe messages. Also, it prevents users from actually capturing all log output if they want to.An alternative might be to add a configuration option that specifies a log level for the automatically added stream handler, so that it becomes possible to ignore less severe messages from showing up in the notebook automatically. But this would still make the behaviour different between IPython console and IPython notebook.The only downside I see with making sure there is no default handler set is that some libraries/notebooks in use might rely on this behaviour and actively work around it, for example by disabling their own handlers if they detect that they are running in the ipython notebook. Such cases would likely break with such a change.So setting  to  or using  will prevent duplicate output but depending on will have side effects.Note that  is not available in newer version of python (3.4, maybe earlier). From 3.1 onwards see importlib.reload
When you perform  Your are creating another StreamHandler. To solve your problem you should capture the StreamHandler from iPython:If it does not exists you create your own:Finally format (set other properties) as desired:
My solution is:


Answer URL
https://docs.python.org/3/library/importlib.html#importlib.reload
