Natural Text
In PHP there a function called  to check if something (like an array index) exists and has a value. How about Python?I need to use this on arrays because I get "IndexError: list index out of range" sometimes.I guess I could use try/catching, but that's a last resort.
Look before you leap (LBYL):Easier to ask forgiveness than permission (EAFP):In Python, EAFP seems to be the popular and preferred style (because it's generally more reliable).  So, all other things being equal, I'll recommend to go for the / version in this use case - don't see it as a "last resort".  This excerpt is from the official docs linked above, endorsing using try/except for flow control:This common Python coding style assumes the existence of valid keys or attributes and catches exceptions if the assumption proves false. This clean and fast style is characterized by the presence of many try and except statements. 
EAFP vs. LBYLI understand your dilemma, but Python is not PHP and coding style known as Easier to Ask for Forgiveness than for Permission (or EAFP in short) is a common coding style in Python.See the source (from documentation):EAFP - Easier to ask for forgiveness than permission. This common Python coding style assumes the existence of valid keys or attributes and catches exceptions if the assumption proves false. This clean and fast style is characterized by the presence of many try and except statements. The technique contrasts with the LBYL style common to many other languages such as C.So, basically, using try-catch statements here is not a last resort; it is a common practice."Arrays" in PythonPHP has associative and non-associative arrays, Python has lists, tuples and dictionaries. Lists are similar to non-associative PHP arrays, dictionaries are similar to associative PHP arrays.If you want to check whether "key" exists in "array", you must first tell what type in Python it is, because they throw different errors when the "key" is not present:And if you use EAFP coding style, you should just catch these errors appropriately.LBYL coding style - checking indexes' existenceIf you insist on using LBYL approach, these are solutions for you:for lists just check the length and if , then  exists, otherwise it doesn't:for dictionaries you can use  keyword and if , then  exists, otherwise it doesn't:Did it help?
EDIT: With the clarification, new answer:Note that PHP arrays are vastly different from Python's, combining arrays and dicts into one confused structure. Python arrays always have indices from  to , so you can check whether your index is in that range.  is a good way to do it pythonically, though.If you're asking about the hash functionality of PHP "arrays" (Python's ), then my previous answer still kind of stands:
 is fast and efficient.Instead of array use an hash:
You may be able to use the built-in function  to produce similar behavior to PHP's , something like: returns a list of the names in the current scope, more information can be found here: http://docs.python.org/library/functions.html#dir.


Answer URL
https://docs.python.org/3/glossary.html#term-lbyl
https://docs.python.org/3/glossary.html#term-eafp
