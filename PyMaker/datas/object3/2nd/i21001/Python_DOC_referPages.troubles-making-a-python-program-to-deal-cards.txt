Natural Text
I'm tying to make a card game. What I'm stuck on is dealing the cards. What I've done is make a dict with each card and given it a value because some are worth more than others. What I have in mind is dividing the dictionary into 4 parts, or make 4 copies of each dictionary and then delete 39 cards from each of them (leaving 13 cards for each person). Is this even possible or am I going about this in the wrong way? (Sorry if the code is wrong, this is my first post, Thanks)
Sounds like a great occasion to use classes! I would do it like this:
I'm not very experienced with the dictionary functions in Python but what I would do is use card objects and set lists with shuffle.I hope that answers your question (because like this is your first question this is my first answer)Edit: Oops sets is deprecated. Using the built-in set instead. Edit2: And set.pop() isn't truly random it appears from reading further, just arbitrary. Boy is my face red.
One option for you would be simply to use python's built-in function . Don't bother with dictionaries; just create a list of cards and shuffle it whole:If you need to roll your own, consider the Fisher-Yates shuffle. It's super simple.At the risk of stating the dreadfully obvious, once you have a shuffled list, you can simply deal it by slicing it like so:Or in whatever more complicated way you need. (However, note that there's no need to cycle through the hands or anything like that; since it's already random, simple slicing will suffice.)
You can  cards among n players using the  library.Playing CardsOutputIt looks like player 1 has 2 pair.What is this tool doing? equally distributes items from an iterable among n sub-groups.Modified example from the docs: is a third-party package comprising itertools recipes and many other useful tools.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools-recipes
