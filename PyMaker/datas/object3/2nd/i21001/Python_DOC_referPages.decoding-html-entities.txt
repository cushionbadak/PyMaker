Natural Text
This question already has an answer here:Decode HTML entities in Python string?                    5 answers                I'm doing some web scraping and sites frequently use HTML entities to represent non ascii characters. Does Python have a utility that takes a string with HTML entities and returns a unicode type?For example:I get back:which represents an "ǎ" with a tone mark.  In binary, this is represented as the 16 bit 01ce.  I want to convert the html entity into the value  
Python has the htmlentitydefs module, but this doesn't include a function to unescape HTML entities.Python developer Fredrik Lundh (author of elementtree, among other things) has  such a function on his website, which works with decimal, hex and named entities:
The standard lib’s very own HTMLParser has an undocumented function unescape() which does exactly what you think it does:
Use the builtin  -- BeautifulSoup isn't necessary:
An alternative, if you have lxml:
If you are on Python 3.4 or newer, you can simply use the :
You could find an answer here -- Getting international characters from a web page?EDIT: It seems like  doesn't convert entities written in hexadecimal form. It can be fixed:EDIT:  function mentioned by @dF which uses   standard module and  might be more appropriate in this case.
This is a function which should help you to get it right and convert entities back to utf-8 characters.
Not sure why the Stack Overflow thread does not include the ';' in the search/replace (i.e. lambda m: '&#%d*;*') If you don't, BeautifulSoup can barf because the adjacent character can be interpreted as part of the HTML code (i.e. &#39B for &#39Blackout).                                                                                                                                                                                                                                                                                     This worked better for me:The int(m.group(1), 16) converts the number (specified in base-16) format back to an integer.                                                                             m.group(0) returns the entire match, m.group(1) returns the regexp capturing group                                                                                   Basically using markupMessage is the same as:html_string = re.sub('&#x([^;]+);', lambda m: '&#%d;' % int(m.group(1), 16), html_string)                                                                            
Another solution is the builtin library xml.sax.saxutils (both for html and xml). However, it will convert only &gt, &amp and &lt.
Here is the Python 3 version of dF's answer:The main changes concern  that is now  and  that is now . See this Python 3 porting guide.


Answer URL
https://docs.python.org/3/library/html.entities.html#html.entities.entitydefs
https://docs.python.org/3/library/html.html#html.unescape
