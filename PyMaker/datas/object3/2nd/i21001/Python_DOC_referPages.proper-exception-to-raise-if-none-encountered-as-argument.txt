Natural Text
What is the "proper" exception class to raise when one of my functions detects  passed where an argument value is required?  For instance:I think I've seen  used here (and it's true that I'm receiving a  where some other type is expected) but that doesn't strike me as quite right for this situation where I think the Exception could be more explicit.
There is no "invalid argument" or "null pointer" built-in exception in Python.  Instead, most functions raise  (invalid type such as ) or  (correct type, but the value is outside of the accepted domain).If your function requires an object of a particular class and gets  instead, it should probably raise  as you pointed out.  In this case, you should check for  explicitly, though, since an object of correct type may evaluate to boolean  if it implements /:Python docs: python2 / python3 python2 / python3
As others have noted,  or  would be natural. If it doesn't seem specific enough, you could subclass whichever of the two exceptions is a better fit. This allows consistent handling of invalid arguments for a broad class of functions while also giving you more detail for the particular function. 
Most of the python function raises  if  is passed as an argument. Take any function say  and see it raises . 
Just use assert:Or alternatively:This will prevent someone from passing you the wrong type, as well as dealing with the None issue. It will return an , as per the docs.


Answer URL
https://docs.python.org/3/library/exceptions.html#TypeError
https://docs.python.org/3/library/exceptions.html#ValueError
