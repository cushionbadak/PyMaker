Natural Text
Sometimes I need to call a gtk/gobject function that only exists in C, but returns an object that has a python wrapper. Previously I used a solution based on ctypes that worked well:http://faq.pygtk.org/index.py?req=show&file=faq23.041.htpNow that I swiched from PyGtk ("import gtk") to GObject-introspection ("from gi.repository import Gtk"), what can I use instead?
The  interface has changed at some point. I needed to drop the  function. The following works:To get an object from a pointer:to get a pointer from a (g)object:I have to add, in my case this didn't help me solve my actual problem. I was trying to interface with dconf, but dconf returns values of type GVariant, which does not inherit from GObject. It seems PyGI/GObject unfortunately does not expose the neccessary functions to turn a C (*GVariant) into a Python GLib.Variant. I guess it's of those times when you have to throw away your initial approach and try something different.
The code in jdm's answer isn't compatible with Python 3. Since  is deprecated in Python 2.7 and 3.1, and removed starting with 3.2, I tweaked the code to use  (available in 2.7 and since 3.1):(I also renamed it to PyGobjectCAPI -- not sure if CPAI stood for something, but it made more sense to me this way.)
PyGOject api changed since AlliedEnvy update
With the advent of instrospection files (, ), the same API should be available regardless of the language being used, that is, if you're using a C function not in the API, you're probably using a function intended to be used only internally.


Answer URL
https://docs.python.org/3/c-api/capsule.html
