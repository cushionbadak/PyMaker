Natural Text
Imagine a tab separated file like this one:I want to create a function that receive the number of the columns which have the information to be saved and return a "special" dictionary. And I say "special" because in my case that information is always categorical, but it could have different levels, and I am tired to write constantly the logic to add the information for each level. (Maybe there is another way of doing, that I was not able to search for, so, sorry in advanced for my ignorance)If the specified columns are 8, 2 and 3. Being 8 the column with the highest category and 3 with the lowest, the expected dictionary could be obtained:Output:Now with four columns 8, 2, 3 and 4. Being 8 the column with the highest category and 4 with the lowest, the expected dictionary could be obtained:Output:Now when I faced five levels of information (five columns), the code was almost unreadable and really really tedious... I could create specific functions for each number of levels, but.. Is there a way to design a function that could handle any number of levels?Please If I have not explained myself properly, do not hesitate in asking me.
What you need is a . This allows you to update entries without having to first test if they exist. i.e. if it does not exist, a default value is automatically added. As you have multiple levels, you will need to create nested defaultdicts recursively using the  function. Setting the value would also need to be recursive but the logic would be simpler:This would create your dictionary as follows:It may display differently to a normal dictionary, but it works the same way as a normal dictionary. Also  can be used to extract the required elements from a list into another list.
You can define a recursive function which does this.Preserving as much of your code logic and variable names as needed,


Answer URL
https://docs.python.org/3/library/collections.html?highlight=defaultdict#collections.defaultdict
