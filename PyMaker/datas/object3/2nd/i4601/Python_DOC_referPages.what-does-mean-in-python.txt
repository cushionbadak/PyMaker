Natural Text
I know  is for decorators, but what is  for in Python? Is it just reservation for some future idea?This is just one of my many questions while reading .
From the documentation:The  (at) operator is intended to be used for matrix multiplication. No builtin Python types implement this operator.The  operator was introduced in Python 3.5.  is matrix multiplication followed by assignment, as you would expect. They map to ,  or  similar to how  and  map to ,  or .The operator and the rationale behind it are discussed in detail in PEP 465.
 and  are new operators introduced in Python 3.5 performing matrix multiplication. They are meant to clarify the confusion which existed so far with the operator  which was used either for element-wise multiplication or matrix multiplication depending on the convention employed in that particular library/code. As a result, in the future, the operator  is meant to be used for element-wise multiplication only. As explained in PEP0465, two operators were introduced:A new binary operator , used similarly as An in-place version , used similarly as Matrix Multiplication vs Element-wise MultiplicationTo quickly highlight the difference, for two matrices:Element-wise multiplication will yield:Matrix multiplication will yield:Usage in NumpySo far, Numpy used the following convention:the  operator (and arithmetic operators in general) were defined as element-wise operations on ndarrays and as matrix-multiplication on numpy.matrix type.method/function  was used for matrix multiplication of ndarraysIntroduction of the  operator makes the code involving matrix multiplications much easier to read. PEP0465 gives us an example:Clearly, the last implementation is much easier to read and interpret as an equation.
@ is the new operator for Matrix Multiplication added in Python3.5Reference: https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-465Example


Answer URL
https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-465
