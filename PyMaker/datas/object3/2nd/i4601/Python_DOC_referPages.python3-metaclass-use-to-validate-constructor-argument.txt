Natural Text
I was planning to use metaclass to validate the constructor argument in Python3, but it seems method has no access to the variable , because the class  has not been instantiated yet. Sow what's the correct way to do it? 
wim is absolutely correct that this isn't a good use of metaclasses, but it's certainly possible (and easy, too).Consider how you would create a new instance of your class. You do this:In other words: You create an instance by calling the class. And python allows us to create custom callable objects by defining a  method. So all we have to do is to implement a suitable  method in our metaclass:And that's it. Simple, right?
... it seems __new__method has no access to the variable val, because the class A() has not been instantiated yet.Exactly.So what's the correct way to do it?Not with a metaclass.Metaclasses are for fiddling with the creation of the class object itself, and what you want to do is related to instances of the class.  Best practice: don't type-check the  at all.  Pythonic code is duck-typed.  Simply document that you expect a string-like argument, and users who put garbage in get garbage out.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__call__
