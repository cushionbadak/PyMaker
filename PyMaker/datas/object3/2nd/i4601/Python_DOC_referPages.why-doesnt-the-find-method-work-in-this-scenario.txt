Natural Text
This question already has an answer here:Why can't I call read() twice on an open file?                    7 answers                Contents of file2.txt:My code:Why does the second print convey "-1" ("beta" doesn't exist), even though it's right in the file, at index 11?
When you call , it moves the cursor to the end of the file, therefore when you call it the second time to find "beta" it will return -1You can fix this by doingbefore you read the file the second time. Alternatively, save the contents of the file into a variablethen you can do what you did before
Because you've already  consumed the file object on the previous line. The file pointer has nothing left to read Try thisThis way of reading files prevents you from forgetting to close a file, too 
As written in the Python documentation:To read a file’s contents, call f.read(size), which reads some quantity of data and returns it as a string (in text mode) or bytes object (in binary mode). size is an optional numeric argument. When size is omitted or negative, the entire contents of the file will be read and returned; it’s your problem if the file is twice as large as your machine’s memory. Otherwise, at most size bytes are read and returned. If the end of the file has been reached, f.read() will return an empty string ('').Which basically means you just read the content of the file and reached the end of file. you can do something like that:


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects
