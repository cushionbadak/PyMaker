Natural Text
Say you have a specific dict you want to assert against, but you want to have a couple of specific values you allow in a given property of that dict, how can you do that?Obviously I could simply explicitly check something like:But the problem is, I would have to update a huge amount of old tests. It would be much easier with something like:But as far as I can tell from the mock docs at http://www.voidspace.org.uk/python/mock/helpers.html#any, there is only a , which is too broad.It would be optimal if I could add some modification directly to the shared  dict, since all tests refer to it in the same manner.The backstory for this is that our office keeps changing the physical location between two neighbouring cities - at least according to the Maxmind GeoIP response :)
You can make  an instance of a custom class with a suitable  method. The  method is called whenever an object is compared to another object with .Now  will work the way you want and you don't have to make any changes to existing unit tests.


Answer URL
https://docs.python.org/3/reference/datamodel.html#object.__eq__
