Natural Text
How to spawn multiple parallel external exe instances from function(generator)  in multiprocessing manner(to keep always one exec running per cpu thread)? If there is no method to do it in current pseudo code below, then what other best/simple solutions would be?Btw after exec instance exit I'll need to get size of file outputed & delete it. Code purpose is to find desirable combination of x/y/z parameters,  line syntax is incorrect for better readability. Behind  will be more code like exitcode check, getfilesize and compare, so    will be not always passed to variables. UPDATE1I simplified code more to be more understandable, replaced  with  so that from shell output it would be more clear what code does. Disregard that  variables always gets last loop variation from generator, it is just simplified code, and expected result - sign that code works!Question still same, how to spawn exec/print in multiprocess from looping generator.Shell output:UPDATE2:This code below starts external exe multiprocessed if run from IDLE, but I don't get variables    passed out of function to global variable. After code is finished I type  in Python Shell I get returned it empty .code:
When you want one process per CPU, often the best approach it to use . I think this should do roughly what you want (the exact details of your code's logic are not obvious, since you're overwriting // on each iteration, to no apparent effect).A  created with no arguments will, by default, create one process per CPU core. You can tell it to use a different number of processes if you prefer, but it shouldn't be necessary in most cases.


Answer URL
https://docs.python.org/3/library/multiprocessing.html
