Natural Text
I am reading Item 31 in the book "Effective Python". I don't understand why in the example on page 97, why ,  and  are class (static) variables of the  class, rather than regular, instance variables. If they were instance variables, then the  class wouldn't need to use instance as key in its global book-keeping dictionary. Seems to me like the author made one obvious design mistake just to illustrate how to use descriptors, i.e. global book keeping in the Grade class, which seems like a bad idea anyways.My other question is more high-level: isn't this a confusing, unclear way to do things? Keeping global state of multiple objects in one single registry, like Grade does. Doesn't seem like a reusable, clean design to me.Here is reference to the code, for people that don't have the book:https://github.com/SigmaQuan/Better-Python-59-Ways/blob/master/item_31_use_descriptors.pySpecifically
I think a good reference in the subject available to everyone, is actually the official docs in this Descriptors How To I setup an example, but note that there is a lot more about descriptors, and you shouldn't be using this unless writing a framework or some library (like an ORM) that requires the dynamic instantiation and validation of fields of different types for example.For the usual validation needs, limit yourself to property decorator.


Answer URL
https://docs.python.org/3/howto/descriptor.html
