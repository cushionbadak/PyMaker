Natural Text
As you can see, I have two asymmetrical list and I want to mix them like above. The problem is it ignore the last item.Expected:Actual:
Since you're using  in the first place, I assume you want this to work on any iterables, not just lists, and ideally without eagerly listifying them first. Otherwise, just do this:The  function almost does what you want out of the box, but it inserts a  (default ) for each slot once the shorter iterable runs out. If your values are all truthy, you can just filter those out with  as in Ajax1234's answer, or  with  as the predicate, but if your values can be anything in Python, even , the only way to do it gets pretty clunky:But you can look at how  works and do the same thing yourself, only generating "incomplete" tuples instead of "filled-in" tuples, and then call it like this:Although making a variant of the  code from the docs that's easy enough to explain in an SO answer is a bit challenging, so maybe it's better to use an explicit loop:I think this version is a lot easier to understand (although it was actually a bit harder to writeâ€¦)Of course if the only thing you're ever going to use  for is to implement your , it's even easier to just inline it into the flattening part, at which point you end up with basically the two-liner in the last section.
Instead of , use :Output:
Just manually append the remaining:One liner:
This should work but it's not very elegant
You can try itertools zip_longest:output:


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.zip_longest
