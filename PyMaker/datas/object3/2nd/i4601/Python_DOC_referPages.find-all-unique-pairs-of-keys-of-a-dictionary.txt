Natural Text
If there's a dictionary:  I want to find pairs of keys in list of tuples like:  I tried with the following double iterationBut it's generating the following result  For my test case ('a','b') and ('b','a') are similar and I just want one of them in the list. I had to run one more loop for getting the unique pairs from the result.  So is there any efficient way to do it in Python (preferably in 2.x)? I want to remove nested loops.Update:I have checked with the possible flagged duplicate, but it's not solving the problem here. It's just providing different combination. I just need the pairs of 2. For that question a tuple of  and  are valid, but for me they are not. I hope, this explains the difference.
Sounds like a job for .I should add that although the output above happens to be sorted, this is not guaranteed. If order is important, you can instead use:
Since dictionary keys are unique, this problem becomes equivalent of finding all combinations of the keys of size 2. You can just use  for that:Note, these will come in no particular order, since  objects are inherently unordered. But you can sort before or after, if you want sorted order:Note, this algorithm is relatively simple if you are working with sequences like a list:Or more succinctly:
 does just what you want:  would just do; iterating over a dictionary is just iterating over its keys...


Answer URL
https://docs.python.org/3/library/itertools.html?highlight=itertools%20combinations#itertools.combinations
