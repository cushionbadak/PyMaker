Natural Text
I'm trying to convert strings of the formto a 2d list of Fraction objects from the fractions module.  In the particular case given above, the result should beThe spacing in the string won't necessarily be as uniform as I've written it (no spaces, extra spaces, uneven numbers of spaces, etc).I can do this in several steps by peeling off the outer brackets, splitting the string at the s, removing empty strings from the resulting list, removing any nondigit from the beginning of each string in the list in a while loop, splitting each of those strings at the comma, and finally converting the elements of the nested lists to Fractions.But that's fairly cumbersome.  Is there a better solution for this?
You can use regular expressions to transform the numeric literals in your string into calls to . After the transformation, you can call  on the result to get the appropriately nested list.You don't need to handle the division operations in a special way, since they will work exactly as you want if we just convert both numerator and denominator into  objects (so  becomes , which evaluates to ).The transformation should put quotation marks around the numbers you pass to , as that prevents  from parsing numbers with decimal points into  instances (which usually causes a loss of precision).  can do the parsing instead, from a string, and it won't lose any precision since all finite-length decimal numbers have an exact  representation.Code:
I came up with a nifty code snippet that can help you out with it:I hope this helps. Please use the comments section incase of any ambiguities. 
regex is simpler:  can handle many different input forms; see here https://docs.python.org/3/library/fractions.html#fractions.Fraction with the notethat since version 3.2 the  constructor now accepts  and . not 


Answer URL
https://docs.python.org/3/library/fractions.html#fractions.Fraction
