Natural Text
What are advantages of using UserDict class?I mean, what I really get if instead ofI will write the following:Edit: If I understand right I can add new fields to an object in a runtime in both cases?and
 has no substantial added value since Python 2.2, since, as @gs mention, you can now subclass  directly -- it exists only for backwards compatibility with Python 2.1 and earlier, when builtin types could not be subclasses. Still, it was kept in Python 3 (now in its proper place in the  module) since, as the docs now mention,The need for this class has been  partially supplanted by the ability to  subclass directly from dict; however,  this class can be easier to work with  because the underlying dictionary is  accessible as an attribute., in Python 2, is quite handy -- as the docs say,The module defines a mixin, DictMixin,  defining all dictionary methods for  classes that already have a minimum  mapping interface. This greatly  simplifies writing classes that need  to be substitutable for dictionaries  (such as the shelve module).You subclass it, define some fundamental methods (at least , which is sufficient for a read-only mapping without the ability to get keys or iterate; also  if you need those abilities; possibly , and you have a R/W mapping without the ability of removing items; add  for full capability, and possibly override other methods for reasons of performance), and get a full-fledged implementation of 's rich API (, , and so on). A great example of the Template Method design pattern.In Python 3,  is gone; you can get almost the same functionality by relying on  instead (or just  for R/O mappings). It's a bit more elegant, though not QUITE as handy (see this issue, which was closed with "won't fix"; the short discussion is worth reading).
Subclassing the dict gives you all the features of a dict, like . You normally do this if you want to extend the features of the dict, creating an ordered dict for example.BTW: In more recent Python versions you can subclass  directly, you don't need .


Answer URL
https://docs.python.org/3/library/collections.html#collections.UserDict
