Natural Text
I would like to know how to I exit from Python without having an traceback dump on the output. I still want want to be able to return an error code but I do not want to display the traceback log.I want to be able to exit using  without trace but in case of an Exception (not an exit) I want the trace.
You are presumably encountering an exception and the program is exiting because of this (with a traceback).  The first thing to do therefore is to catch that exception, before exiting cleanly (maybe with a message, example given).Try something like this in your  routine:
Perhaps you're trying to catch all exceptions and this is catching the  exception raised by ?In general, using  without naming an exception is a bad idea. You'll catch all kinds of stuff you don't want to catch -- like  -- and it can also mask your own programming errors. My example above is silly, unless you're doing something in terms of cleanup. You could replace it with:If you need to exit without raising :I do this, in code that runs under unittest and calls . Unittest gets when the forked process raises . This is definitely a corner case!

something like  ?
The following code will not raise an exception and will exit without a traceback:See this question and related answers for more details. Surprised why all other answers are so overcomplicated.
It's much better practise to avoid using sys.exit() and instead raise/handle exceptions to allow the program to finish cleanly.  If you want to turn off traceback, simply use:You can set this at the top of your script to squash all traceback output, but I prefer to use it more sparingly, for example "known errors" where I want the output to be clean, e.g. in the file foo.py:If CalledProcessError is caught, the output will look like this:If any other error occurs, we still get the full traceback output.
Use the built-in python function quit() and that's it.No need to import any library.I'm using python 3.4
I would do it this way:
What aboutNo traceback and somehow more explicit.



Answer URL
https://docs.python.org/3/library/constants.html#quit
