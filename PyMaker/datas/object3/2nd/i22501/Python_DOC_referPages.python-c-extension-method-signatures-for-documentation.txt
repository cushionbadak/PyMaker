Natural Text
I am writing C extensions, and I'd like to make the signature of my methods visible for introspection.Now if (after building it...) I load the module and look at its help:I will get:I would like to be even more specific and be able to replace foo(...) by foo(timeout, flags=None)Can I do this? How?
My usual approach to finding out about things like this is: "use the source".Basically, I would presume that the standard modules of python would use such a feature when available. Looking at the source (for example here) should help, but in fact even the standard modules add the prototype after the automatic output. Like this:So as upstream is not using such a feature, I would assume it is not there. :-)Okay, I just checked current python3k sources and this is still the case. That signature is generated in  in the python sources here: pydoc.py. Relevant excerpt starting in line 1260:inspect.isfunction checks if the object the documentation is requested for is a Python function. But C implemented functions are considered builtins, therefore you will always get  as the output.
It has been 7 years but you can include the signature for C-extension function and classes.Python itself uses the Argument Clinic to dynamically generate signatures. Then some mechanics create a  and this can be introspected (for example with ). @MartijnPieters explained this process quite well in this answer. You may actually get the argument clinic from python and do it in a dynamic fashion but I prefer the manual way: Adding the signature to the docstring:In your case:I made heavy use of this in my package: . So to demonstrate that it works I use one of the C-extension functions exposed by this package:The docstring for this function is defined this file.It is important to realize that this isn't possible for python < 3.4 and you need to follow some rules:You need to include  after the signature definition line.The signature must be in the first line of the docstring.The signature must be valid, i.e.  fails because it's not possible to define positional arguments after arguments with default.You can only provide one signature. So it doesn't work if you use something like:


Answer URL
https://docs.python.org/3/howto/clinic.html
