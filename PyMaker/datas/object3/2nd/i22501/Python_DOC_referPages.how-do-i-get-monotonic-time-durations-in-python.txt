Natural Text
I want to log how long something takes in real walltime. Currently I'm doing this:But that will fail (produce incorrect results) if the time is adjusted while the SQL query (or whatever it is) is running.I don't want to just benchmark it. I want to log it in a live application in order to see trends on a live system.I want something like clock_gettime(CLOCK_MONOTONIC,...), but in Python. And preferably without having to write a C module that calls clock_gettime().
That function is simple enough that you can use ctypes to access it:
Now, in Python 3.3 you would use time.monotonic.
As pointed out in this question, avoiding NTP readjustments on Linux requires CLOCK_MONOTONIC_RAW. That's defined as 4 on Linux (since 2.6.28).Portably getting the correct constant #defined in a C header from Python is tricky; there is h2py, but that doesn't really help you get the value at runtime.
Here's how I get monotonic time in Python 2.7:Install the  package:Then in Python:
 might be useful:Return the value (in fractional seconds) of a monotonic clock, i.e. a clock that cannot go backwards. The clock is not affected by system clock updates. The reference point of the returned value is undefined, so that only the difference between the results of consecutive calls is valid.


Answer URL
https://docs.python.org/3/library/time.html#time.CLOCK_MONOTONIC_RAW
