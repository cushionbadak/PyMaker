Natural Text
I am parsing a webpage which has Unicode representations of fractions.  I would like to be able to take those strings directly and convert them to floats.  For example:"⅕" would become 0.2Any suggestions of how to do this in Python?
You want to use the unicodedata module:This will print:If the character does not have a numeric value, then  will return default, or if default is not given will raise ValueError.
Those Unicode representations of floats are called Vulgar FractionsYou can covert them to floats using unicodedata.numeric(char)However,  won't work on something like . That takes a bit more effort:Output:You might also be interested isolating these vulgar fractions from broader user input using regular expressions. You can do so using ranges of their unicode character codes:Sample: https://regexr.com/3p8nd
Since there are only a fixed number of fractions defined in Unicode, a dictionary seems appropriate:Update: the  module is a much better solution.
Maybe you could decompose the fraction using the "unicodedata" module and then look for the FRACTION SLASH character and then it's just a matter of simple division.For example:Update: I'll leave this answer here for reference but using unicodedata.numeric() as per Karl's answer is a much better idea.
In Python 3.1, you don't need the 'u', and it will produce 0.2 instead of 0.20000000000000001.
I'm stating the obvious here, but it's very simple to extend this for cases when people write "1¾" meaning "1.75", so I'm just going to share it here for quick reference:
Although not exactly what asked, perhaps someone wants it converted to a fraction rather than to a float.  After all, a fraction is what it really represents. results in .  This is not (presently) understood by , which expects a fraction described with  rather than .  However, that is easy to replace:


Answer URL
https://docs.python.org/3/library/unicodedata.html#unicodedata.numeric
