Natural Text
In Python 3.6.5, this works fine:That's obviously a long line, so I used a line continuation:However, at startup, this generates a :This does not, however:I use line continuations all over the rest of the project; none have resulted in . Other questions like this one mention this warning, but none for continuation characters that I can find.What causes this warning, and why does it only appear in this very narrow case?Edit: This has nothing to do with the line continuation. The reason the error presented to me only some of the time has to do with Django's . The first time  is run, the error is not reported. But if a change causes a reload, then the error is reported when the reloader runs.
This has nothing to do with your line continuation, it's with using  as an escape sequence in your string.The warning explicitly includes :And that's why your later example doesn't warn: because the string doesn't have a  or other unrecognized escape sequence in it.As explained in the docs for String and Byte literals:Changed in version 3.6: Unrecognized escape sequences produce a . In some future version of Python they will be a .This change is mentioned in What's New in Python 3.6, with a link to issue #27364, which links to an earlier discussion on the -dev mailing list.Traditionally, Python allowed unrecognized escape sequences in string literals and just processed them as if they weren't escapes, so  literally means a backslash and a comma, because this makes it easier to see what's going wrong when you print out the string in the debugger.But this leads to all kinds of confusion, especially for Windows users (who get away with , , and , but get errors with ), and for people coming from any of the huge number of languages that follow C-style escape rules (where  would mean just a commaâ€”although most C compilers will generate a warning for that), which is presumably why you now get a warning.
try using lists for commands:Then call it without using :By doing this, you have multiple advantages:You are free from quote and escape hell - you don't have to add quotes or escape anything. Spaces are no longer delimiters, the parameters will be passed as in the list.You don't have to use string interpolation () because you can just pass the parameter separately to the list.By not using the shell, you avoid executing one extra process for nothing - why execute a shell to run your command when you can run it directly?


Answer URL
https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals
https://docs.python.org/3/whatsnew/3.6.html#deprecated-python-behavior
