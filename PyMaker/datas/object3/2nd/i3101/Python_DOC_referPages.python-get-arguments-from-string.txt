Natural Text
I wanted to grab a argument from a string in python...I wanted to grab the city of this string: How do I get the city? Into a new variable?
If you have constant spaces in your string and your strings are not going to change, it's relatively easy. Just use  on your string.Look at split's docs. But suppose your city is something like "New York", then you'll have to look for some alternative because in that case, the list will be -And then if you do this-You will have wrong city name
Use Regular Expressions!If you haven't heard of them, it's quite simple. Simply import the  module, and away you go!Ok, maybe that wasn't so exciting. But now you can use pattern matching. Simply define your pattern:and away you go!Don't worry! This is actually something useful. Let's store this in a variable so we can use it:Hooray!Now, what was that crazy  thing about? It worked, but it just seems like magic. Let me explain: just makes Python treat (most) s as literal s. So,  will be an actual  followed by an actual , as opposed to a new-line character. This is because regular expressions have special meanings for  characters, and it's awkward to have to write  all the time. means "start of the string". is a named group. Normal groups are represented by , and can be referenced by their number (e.g. ). Named groups can also be referenced by number, but they can also be referenced by their name. The  stands for Python, because that's where the syntax originally came from. Neat! means "any character". means "repeated 0 or more times". means a few things, but when it's after a  or  it means "match as little as possible". This means that it will make the  group have as few "any character"s as possible. means exactly what it looks like. A  followed by an  followed by a  followed by a . again means "match as few of any character as possible", but... I'm not really sure why I wrote that, considering that means "end of the string".And yeah, they never really stop seeming like magic. (Unless you use Perl.) If you want to make your own regular expression or learn some more, have a look at the documentation for the  module.
With :Prints:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.split
