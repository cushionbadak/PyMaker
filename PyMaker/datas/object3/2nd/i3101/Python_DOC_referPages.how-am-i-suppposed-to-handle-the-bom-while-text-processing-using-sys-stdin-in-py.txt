Natural Text
Note: The possible duplicate concerns an older version of Python and this question has already generated unique answers.I have been working on a script to process Project Gutenberg Texts texts into an internal file format for an application I am developing. In the script I process chapter headings with the  module. This works very well except in one case: the first line. My regex will always fail on the first Chapter marker at the first line if it includes the ^ caret to require the regex match to be at the beginning of the line because the BOM is consumed as the first character. (Example regex: ).What I've discovered is that if I do not include the caret, it won't fail on the first line, and then  is included in the heading after I've processed it. An example:The advice according to this SO question (from which I learned of the BOM) is to fix your script to not consume/corrupt the BOM. Other SO questions talk about decoding the file with a codec but discuss errors I never encounter and do not discuss the syntax for opening a file with the template decoder.To be clear: I generally use pipelines of the following format:And I am opening the file with the following syntax:My question is what is the proper way to handle this? Do I remove the BOM before processing the text? If so, how? Or do I use a decoder on the file before processing it (I am reading from stdin, so how would I accomplish this?)The files are stored in UTF-8 encoding with DOS endings (). I convert them in vim to UNIX file format before processing using  (I have to do several manual pre-processing tasks before running the script).
As a complement to the existing answer, it is possible to filter the UTF8 BOM from stdin with the codecs module. Simply you must use  to access the underlying byte stream and decode it with a 
In Python 3,  should be auto-decoded properly, but if it's not working for you (and for Python 2) you need to specify PythonIOEncoding before invoking your script likeNotice that this setting also makes  working with , so your  will maintain the original encoding.For your  parameter, just do 
You really don't need to import  or anything to deal with this. As lenz suggested in comments just check for the BOM and throw it out.


Answer URL
https://docs.python.org/3/using/cmdline.html#envvar-PYTHONIOENCODING
