Natural Text
So I have a class with the following method: I want to add an attribute with the title "new_name" that will be passed from somewhere else. Obviously, in the above program I simply created an attribute with the string "new_name" instead of the actual argument input. How should I go about making sure the attribute's name is the actual parameter? I believe in C++ it's easy to use  here, but with Python I'm not sure. ex.  should create a new attribute  which I can then store with information. Thank you. EDIT: Ok I see I should use setattr() now. However, I seem to not be getting the expected results. Is this how I would use it where the initialization is a list comprehension? I tried the two ways and neither worked as shown below: where API takes 3 arguments (I know this isn't the problem because this works fine as long as I don't use setattr() and the name is already known so it's nothing with the API. EDIT: For those suggesting dictionary, I'm not storing data with these attributes. I'm creating a method which creates a new attribute for users who are creating derived classes of my base class. It's to abstract away the creation of additional attributes because I was told my code would likely be adopted in the future when I leave (I'm an intern) and to make it as easy as possible to create derived classes. EDIT: Nevermind, I mislabeled a variable. It works! Thank you. 
This is exactly :The caveat is that you need to use  to retrieve  (and  to delete it), and any code that gets/deletes also needs to know the  in order to do that.Make your life easier and use a  for data, not attributes.
If you know what you are doing (and a normal dictionary is not an option), you can use :This should be one of your last resorts.Also if the using code knows  at write time (so it is not create by the program), instead of this :You could just writeThis depends on how you are using this function.


Answer URL
https://docs.python.org/3/library/functions.html#setattr
https://docs.python.org/3/library/functions.html#getattr
https://docs.python.org/3/library/functions.html#delattr
