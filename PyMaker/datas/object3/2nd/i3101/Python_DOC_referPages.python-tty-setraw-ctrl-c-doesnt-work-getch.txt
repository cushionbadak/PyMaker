Natural Text
This is my code.In this code, KeyboardInterrupt exception doesn't work.Thank you
Yes, when you set your TTY to raw mode—or, in particular, when you disable the  setting —you no longer get the corresponding behavior:In other words, the character , aka  in most terminals, no longer generates a  signal, which is what Python uses to raise a .This is how full-screen programs like  can use  as a control character instead of just quitting.So, there are two options:Instead of calling , set the exact set of  flags you want, making sure not to disable . It's worth looking at the source to Python's  to see exactly what it does, to use as a baseline. You could just do exactly the same thing without the . But really, you should read the docs to learn what each of these things means.And make sure to  on your own system, don't search online; things are a bit different on Linux vs. macOS/*BSD, and there are minor differences even between versions of the same OS.Even after reading the docs, and experimenting on your own, it may not be entirely clear what effect every setting has. This article seems to do a decent job explaining things what goes into raw mode, and what each of the relevant flags actually means (although I only quickly skimmed it—and. again, you still need to read  for your platform).Alternatively, you can just handle  manually. You're already reading a character at a time with , so when someone hits , you're going to read a  character. You can do whatever you want when that happens, including .As a side note, if this is Python 3, you may want to read in binary mode:(Then you'll check against  instead of . of course.)In text mode, you should get a whole character at a time, even if it's a multibyte character in UTF-8 (or whatever your locale is). Which seems simpler at first—but that can actually be misleading, because a single character can still be only part of a keystroke. For example, with most terminals, an up arrow sends 3 characters ()read(1)` will just give you the first one.


Answer URL
https://docs.python.org/3/library/signal.html
