Natural Text
I'm trying to write a function decorator that tests for bounds of x, yWhen I execute  I get:I need the boundtest function to check if  and  are in range of , and  respectively while being able to pass an arbitrary amount of parameters to the function it is decorating.Why does this happen?
Decorators are applied to function objects, not to bound methods. This means you need to pass on the  argument manually:Python uses a process called binding to turn a function into a bound method, and calling a bound method automatically passes in whatever it is bound to as the first argument; this is how  is passed into a method when you call a fuction on an instance. See the Descriptor HowTo for details. Instead of manually passing on , you could invoke descriptor binding manually, by calling  to produce a bound method:That binding behaviour was applied to the  function object your decorator returned when  was being resolved, but not to the wrapped  object.


Answer URL
https://docs.python.org/3/howto/descriptor.html
https://docs.python.org/3/reference/datamodel.html#invoking-descriptors
https://docs.python.org/3/reference/datamodel.html#object.__get__
https://docs.python.org/3/library/functools.html#functools.wraps
