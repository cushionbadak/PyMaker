Natural Text
constants.pystructure dir:data_handling.pyCurrently I'm trying to use pytest and testing  and  but I don't know how to proceed due to input files and processed files are too big and test process musn't override processed files.One approach is to change definition  to  and then call  but that it isn't make sense in the code because  always needs to read  and it is called in many places.Unit test for foo() and bar() would test if the processed files were created or not because it depends on .So... question is how can I solve it? Does a pattern/good practice exists for this case? What should I change in my code?
input files and processed files are too big and test process musn't  override processed filesYes, and tests are perfectly suitable for that kind of job. Generic approach is to create a test data (which can be a subset of original data with edge cases included) and place it somewhere near your tests, for example:Then, if testing functions accept input as a constant rather than a parameter, use  to change constant in test run (see this excellent answer for a quick reference). For storing output either regular or temporary file can be used.NOTE:  is deprecated because file is not created on  call thus can be locked by another process. Feel free to suggest alternative approach.


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch
