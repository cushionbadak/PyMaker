Natural Text
This question already has an answer here:How to test multiple variables against a value?                    20 answers                I am trying to add multiple 'or' clauses to a python if statement using list comprehension. My code is shown below. I would like to keep the list comprehension. In terms of pseudocode, the logic would simply be:Alive_Beatles = each name that contains '(Beatle)' and either ('Paul', 'Yoko' or 'Ringo')The code only returns Paul and skips Ringo and Yoko.
You need to test each name explicitly if it's :Otherwise the  and  use the truth value of you search strings (and each non-empty string is always True) and finally tests if  (the first truth value of the s).The documentation explicitly mentions this:4.2. Boolean Operations â€” and, or, notThese are the Boolean operations, ordered by ascending priority:Notes:(1) This is a short-circuit operator, so it only evaluates the second argument if the first one is false.(2) This is a short-circuit operator, so it only evaluates the second argument if the first one is true.(3) not has a lower priority than non-Boolean operators, so not a == b is interpreted as not (a == b), and a == not b is a syntax error.So  evaluates according to (2) to the second argument because  is truthy and according to (1) it evaluates to the first argument of the chained s:  because it's also truthy.
This doesn't do what you expect because the expression evaluates to . Type it in at an interpreter prompt to confirm this.And even that only seems to work becausealso evaluates to .
The most straightforward solution is to just list But you could use  to get a bit closer to what you tried initially:


Answer URL
https://docs.python.org/3/library/functions.html#any
