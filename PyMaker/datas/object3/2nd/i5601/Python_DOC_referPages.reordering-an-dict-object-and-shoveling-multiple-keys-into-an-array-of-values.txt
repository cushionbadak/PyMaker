Natural Text
This is my Ruby code. I want to convert this function to a Python 3 equivalent.   The Ruby result looks like this:Python would be:Here is what I have tried: Then I was trying to append the keys to an array.but I don't think that will work inside of a zip method. 
In Python, your mentioned data structure is known as dictionary ( in terms of code) and is syntactically represented as:In order to swap the key and values of your , you may use  as:where  is a  object holding the value:Note: Ruby maintains the order, but in Python version < 3.6, the  objects are unordered in nature. However, from Python version >= 3.6,  objects are now ordered in nature.For Python versions < 3.6, we have  which maintains the order in which keys are inserted. Here's an example to show the swapping of key/value pairs:which will return  object as: It is just represented like this, you can access  like a normal dictionary object.
Note: in Python dicts are unordered (until 3.7 version).
This is a dictionary version of  in Python: returns:


Answer URL
https://docs.python.org/3/library/functions.html#func-dict
