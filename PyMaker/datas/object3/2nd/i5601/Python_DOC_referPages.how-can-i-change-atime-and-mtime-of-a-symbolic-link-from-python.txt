Natural Text
I have a Python 2.7 program which must create a symbolic link with a modification date in the past. I can create the link with , and  claims to set the access time and modification time of files, but when I use  on my newly-created symlink, it changes the atime and mtime of the file to which the symlink points, rather than the atime and mtime of the symbolic link.What is the best way to set the access time and modification time of a symbolic link from Python code?Here is a test program which demonstrates what I am doing:This is the misbehaviour I see. The "After:" times change for "source" and not for "link", but the reverse should happen:By contrast,  changes the atime and mtime of the symlink as I want.Maybe executing  from Python is my best choice, but I'm hoping for something better.
Upgrade to Python 3.6 and use the  option.
As @Barmar points out, Python 3's os.utime() has a parameter, , which gives the behaviour the questioner wants. Unfortunately, Python 2's os.utime() does not permit this parameter.An alternative for Python 2 is to call out to the  command, using . This actually works on Python 3 as well. However, I only tested it on Mac. It probably works on Linux, which has a similar  utility pre-installed and a similar process invocation convention. It is not tested on Windows, and may well not work there unless you go out of your way to install a  utility.Here is the question's test program, rewritten to show these three options. Call it with a single argument, one of  (fails),  (succeeds, Python 3 only), or  (succeeds, maybe Mac or Linux only). Default is .Here is the Python 3  succeeding:Here is the  call succeeding on Python 2 (tested on Mac only):


Answer URL
https://docs.python.org/3/library/os.html#os.utime
https://docs.python.org/3/library/os.html#os.utime
