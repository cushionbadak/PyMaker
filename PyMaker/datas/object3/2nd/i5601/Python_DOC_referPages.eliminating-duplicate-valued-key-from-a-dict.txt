Natural Text
I have the following dictionary,What is the best way to eliminate keys with duplicate entries based on the first entry in the value i.e 1 and 3 are duplicates because of 'c1' and 2 and 4 are duplicates because of 'c2'?I would like the final output to be something like this
Similar to how you would eliminate duplicates in a regular list while keeping the list's order. The only real difference here is that dictionaries have no order, which means that iteration order through  is arbitrary so you will keep an arbitrary key-value pair with a unique first item for the value-tuple.
Here is the cryptic one-liner such questions tend to elicit:If you want to guarantee to keep the smallest key:Collects the old items as values to the keys to be uniquified and builds a new dict from the items that remain as values in said dict.
Try: Output:
You could solve it like this:
Do a set of first tuple values and then knowing what values are unique you can pop keys from the dict.edit: this is for python 2.7, @mrCarnivore answer is for python 3
You could use  to group what you want, and only take the first value:Or even with :


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.groupby
