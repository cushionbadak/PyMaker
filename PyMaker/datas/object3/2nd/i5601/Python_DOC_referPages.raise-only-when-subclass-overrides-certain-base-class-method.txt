Natural Text
I know I can implement in the base class some function to raise when subclass fails to override some method.But how can I do the opposite, i.e. raise only when the subclass does override this method?Thanks!Edit: I'm trying to prevent people from overriding getitem/getattr so the namespace clash doesn't apply here.Edit: I already tried to check if the subclass method is base class method. This worked under CPython, but not PyPy. Is there any all-around solution?
One way of solving this problem is to use a meta-class and then check during creation, if the method is part of the  and raise a 
You can check whether the method is the same method object as the superclass:Of course, this only detects unintentional overriding; if a subclass were determined to do this they could just monkey-patch  instead.
At  time you could use inspect.getmembers() to learn details about some_method(). Then you could choose to test the method's behavior or report on it as needed.


Answer URL
https://docs.python.org/3/library/inspect.html#inspect.getmembers
