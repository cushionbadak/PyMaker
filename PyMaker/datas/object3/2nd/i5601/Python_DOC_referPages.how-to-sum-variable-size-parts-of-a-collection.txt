Natural Text
I want to calculate the sum of a collection, for sections of different sizes:I wonder whether the solution I came up with is the most 'pythonic' (elegant, readable, concise) way to achieve what I want...In particular, I wonder whether there is a way to get rid of the separate iterator 'itd', and whether it would be easier to work with slices?
I would use itertools.islice since you can directly use the values in  as the step size at each point:Then you can convert that to a tuple if needed.The  is certainly needed in order to step through the tuple at the point where the last slice left off. Otherwise each slice would be 
There's no reason to get rid of your iterator – iterating over  is what you are doing, after all. You do seem to have an overabundance of tuples in that code, though. The line that's doing all the work could be made more legible by getting rid of them:… which has the added advantage that now you're producing a list rather than a tuple.  and  also make more sense as lists, by the way: they're variable-length sequences of homogeneous data, not fixed-length sequences of heterogeneous data.Note also that  is the conventional name for an arbitrary iterator, and  is the conventional name for any variable that must exist but is never actually used.Going a little further,  is doing the same work that  could do more legibly:… at which point, I'd say the code's about as elegant, readable and concise as it's likely to get.


Answer URL
https://docs.python.org/3/library/itertools.html#itertools.islice
https://docs.python.org/3/library/itertools.html#itertools.islice
