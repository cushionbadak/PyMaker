Natural Text
"All slice operations return a new list containing the requested elements"This is from the python tutorials.But if this is the case then why does this piece of code behave this way: 1) if slicing returned a new list then why does the binding that I have done to the new one affect the original one. What does this suggest?But then I have also observed this:2) This shows that indeed a new list is returned. What is really happening when      we slice a list?Please point out my ignorance. Thanks in advance.
You are confusing expressions with assignment. Getting values (reading) is handled differently from setting values (writing).Assignment (setting) re-uses syntax to specify a target. In an assignment like ,  is a target to which the assignment takes place. Using  in an expression produces a new list.In other words: you have two different language statements, that are deliberately using the same syntax. They are still distinct however.See the Assignment statements reference documentation:[...]If the target is a slicing: The primary expression in the reference is evaluated. It should yield a mutable sequence object (such as a list). The assigned object should be a sequence object of the same type. Next, the lower and upper bound expressions are evaluated, insofar they are present; defaults are zero and the sequence’s length. The bounds should evaluate to integers. If either bound is negative, the sequence’s length is added to it. The resulting bounds are clipped to lie between zero and the sequence’s length, inclusive. Finally, the sequence object is asked to replace the slice with the items of the assigned sequence. The length of the slice may be different from the length of the assigned sequence, thus changing the length of the target sequence, if the target sequence allows it.(Bold emphasis mine).Compare this with the Slicings section in the expressions reference documentation; slicing in an expression produces a  object, which the  method interprets as a request for a new list object with the matching indices copied over. Other object types can choose to interpret a slice object differently.Note that there is a third operation, the  statement to delete references, including slices. Deletion takes the same  syntax and asks to remove the indices indicated by a slice.These three operations are, under the hood, implemented by the  (reading),  (writing) and  (deleting) hook methods; the  argument to each of these operations is a  object, but only  is expected to return anything.


Answer URL
https://docs.python.org/3/reference/simple_stmts.html#assignment-statements
https://docs.python.org/3/reference/expressions.html#slicings
https://docs.python.org/3/reference/datamodel.html#types
https://docs.python.org/3/reference/simple_stmts.html#the-del-statement
https://docs.python.org/3/reference/datamodel.html#object.__getitem__
https://docs.python.org/3/reference/datamodel.html#object.__setitem__
https://docs.python.org/3/reference/datamodel.html#object.__delitem__
