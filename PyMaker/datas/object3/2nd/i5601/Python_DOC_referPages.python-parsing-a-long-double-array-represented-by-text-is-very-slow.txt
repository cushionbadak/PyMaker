Natural Text
I'd delete this question, as it turns out to be my mistake. The bottleneck I had was related to network latency.I have a Python application that gets as an input a text file that contains 4096 real numbers. It looks like this:No matter what approach I try, it takes Python about a whole second to parse the text into an actual Python array of floats.Note that I am using Python 3.5So far I tried:Parsing manually and creating the list using list comprehensions:Appending '[' and ']' wrapping signs and using  function:Appending '[' and ']' wrapping signs and using  function:Creating a Numpy array of strings and converting its data type to float:Using Numpy's  methodNone of these options worked faster than a whole second.How do I get it to convert faster?
I think you mistested somehow.  Here's my results:results inThis means that using a simple  of the string takes ~5ms.With JSON it gets a little faster:results ini. e. ~1.1ms
Python has it's limits like all other computer applications, as shown here. 1 second is actually a great time for computing an array of 4096 numbers, considering it goes through a value every 1/4096 of a second.


Answer URL
https://docs.python.org/3/library/profile.html
