Natural Text
I am trying to create a simple monitoring system that periodically checks things and logs them. Here is a cutdown example of the logic I am attempting to use but I keep getting a  error. How should I reschedule an async method from itself? Code in test.py:Error:
 accepts a plain sync callback (a function defined with ). A coroutine function () should be awaited to be executed.The cool thing about  is that it imitates imperative plain synchronous code in many ways. How would you solve this task for a plain function? I guess just sleep some time and recursively call function again. Do the same (almost - we should use synchronous sleep) with  also:If you sometime would need to run  in the background alongside with other coroutines you can create a task. There is also shown a way to cancel task execution.Update:As Andrew pointed out, a plain loop is even better:


Answer URL
https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.call_later
