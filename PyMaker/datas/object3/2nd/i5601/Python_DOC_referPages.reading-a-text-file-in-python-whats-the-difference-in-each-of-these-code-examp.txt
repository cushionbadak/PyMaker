Natural Text
MyData.txt is a tab delimited file. It has 3 lines that look like this.Adam    124 145Beth    121 206Andy    049 294In the code below, I understand why the second for loop works (where i'm looping through "data"). I'm trying to understand why the first for loop part doesn't work. What does it mean to loop though "myfile" and why won't it print any values.
There are numerous ways to read the content of a file and this answer could be infinite. The file objects have built in methods you can use. See this for instance: https://docs.python.org/3.6/tutorial/inputoutput.html#methods-of-file-objectsread()method that reads all the content to one string readlines()method that reads all lines to a list (you are now at the end of the file)readline() method that reads one line (you are now on next row)for row in file: ...For loop (iterator) over the file. This will read it line by line See: How to read large file, line by line in python for instance.So why not one way? Simply because there are tons of ways to read and write the data. Depending on the situation you will most likely want to use a different approach. My personal favourite for smaller files is using .read() like this:data variable is now:
Withyou open a file handle, andreads all of the files content, meaning until the end of the file is reached.Since after this, you reached the end of the file, there is nothing left to read from  in your first for loop, while you can iterate through the already read  as often as you like.
Whenever you use readlines or iterate over a file pointer , the position will be changed!When you call myfile.readlines() , the position is changed to the end and thus when you iterate , there is no output , use myfile.tell() to find the position of your file pointer!SolutionYou need to open the file twice. you can also use with 


Answer URL
https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects
