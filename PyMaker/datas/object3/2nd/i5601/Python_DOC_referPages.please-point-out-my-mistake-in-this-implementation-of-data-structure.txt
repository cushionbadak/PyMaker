Natural Text
A left rotation operation on an array of size  shifts each of the array's elements  1 unit to the left. For example, if 2 left rotations are performed on array [1,2,3,4,5] , then the array would become [3,4,5,1,2].Given an array of  integers and a number, , perform  left rotations on the array. Then print the updated array as a single line of space-separated integers.Sample Input: 5, 41 2 3 4 5Sample Output: 5 1 2 3 4My output is: 2 2 3 4 1
1) Return will halt execution of the code, so the code will only loop once before returning.2) These lines contain the error in logic:To do a left rotation we insert the last value in the first position. Your problem is that you are assigning  inside the loop, rather than outside. You are also reassigning the last value inside the loop.All of the errors fixed:gives you the correct answer.(P.S. There is a much easier way to left-rotate using standard list methods: .)
Rassar already covered what are the problems with the code, I just want to add nicer solution using  methods mentioned in the answer:
SInce others have pointed out the issues in your code, you could also try this solution using :Which Outputs:Note:  is  here, which is more efficient that , which is  instead. 
First of all your program is not running for whole(0,d), its ending in first iteration and left rotation is not completed so your 1st and 2nd element have same valuesEven if your code runs for whole iteration you will get  since you are running loop (0, length), when your i = length-1 => i+1 = length & in a list we only index "zero" to "length-1" in a listNow after fixing both the issues, this might work:-A much better answer using list slicing:-.   


Answer URL
https://docs.python.org/3/tutorial/datastructures.html#more-on-lists
