Natural Text
I want to sum all the value in one column based on a range of date in two column:A simple groupby won't do it since it would only add the value for a specific date. We could do an embeeded for loop but it would take forever to run:Something like that would work but like I said would take forever.The expected output is unique date with the total for each day.Here it would beHow do I compute the sum based on the date ranges?
First, group by ["Start_Date", "End_date"] to save some operations.Tools used:Counter.update([iterable-or-mapping]):  Elements are counted from an iterable or added-in from another mapping (or counter). Like dict.update() but adds counts instead of replacing them. Also, the iterable is expected to be a sequence of elements, not a sequence of (key, value) pairs. -- Cited from Python 3 Documentationpandas.date_range
Unfortunately, I don't believe there's a way to do this without involving at least one loop.  You are trying see if a date is between your start and end date.  If it is, you want to sum the  column.  We can make your loop more efficient.You can create a mask for each unique date and find all rows that match your criteria.  You then apply that mask and take the sum of all matching rows. This should be much faster than iterating over each row individually and determining what date counters to increase.This gives you the output you want:Someone else might be able to come up with a clever way to vectorize the entire thing, but I'm not seeing a way to do it.
if you want the sum to be part of the original dataframe you can use apply to iterate on each row (but this might not might the most optimized code as you are calculating the sum on every row)above will result to


Answer URL
https://docs.python.org/3/library/collections.html#collections.Counter
