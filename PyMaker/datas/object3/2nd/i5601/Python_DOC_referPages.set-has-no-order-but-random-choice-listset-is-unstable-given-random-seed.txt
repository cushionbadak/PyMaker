Natural Text
I found a weird result of this below code on my project (below code is equivalent to the code in my project since I have to remove parts that are irrelevant to the question):The result is unstable since the order (as printed) of set_diff is unstable (set is supposed to have no order). Result could be:orin different runs.Could anyone please explain why? Thanks!
A set is unordered and so will yield its elements in any order. However, this order is consistent within one python invocation. That is,  is always true within in the same python program. Python 3.2+ explicitly makes sure that the ordering will inconsistent from one python instance to the next (this is a security consideration relating to denial of service attacks involving dictionary construction). This is the behaviour you are seeing.To avoid this you need to set the environment variable  to the same value before you start your program. This is in addition to setting the random seed before using .A simpler solution, however, is to create a sorted list before doing . ie. 


Answer URL
https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHASHSEED
