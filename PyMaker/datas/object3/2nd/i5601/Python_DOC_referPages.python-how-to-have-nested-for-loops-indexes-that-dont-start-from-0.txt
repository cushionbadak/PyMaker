Natural Text
So one issue I discovered with python is that it is not very user-friendly to create nested loops each with their own indexes. How would I write the Python-equivalent of this Java code:Notice how I reference the counter value of the predecessor's for each nested loop. I tried using:but it seems like  will always start at 0 rather than start at the predecessor's index value. Is there a better solution besides maintaining separate counter variables?
It's very simple to do that using  or . Here's how you do it.Java version:Python version:I hope that helps!
From [Python 3]: enumerate(iterable, start=0) (emphasis is mine):The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable.Example:Output:
It's simple.


Answer URL
https://docs.python.org/3/library/functions.html#enumerate
https://docs.python.org/3/library/stdtypes.html#iterator.__next__
https://docs.python.org/3/library/functions.html#enumerate
