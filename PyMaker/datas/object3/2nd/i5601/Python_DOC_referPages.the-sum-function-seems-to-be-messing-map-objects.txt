Natural Text
I'm doing this code excercise for trying out functional programming in python, and I ran into problems with sum(), list(), and map objects. I don't understand what I'm doing wrong, but the list() function seems to be screwing with my map object.This is the code I have:heights should be a map object containing (or resulting in) a list of the two existing height entries: [160, 80].printing the length should give 2, the sum of the two should obviously be 240, and the average should be 120.The problem I'm facing, though, is that I get this error message:Yes, the length is right, but the sum is 0, and the second length print is 0 aswell. The whole zero-division fault must come from something there, and it seems that the list() function is causing it. Changing the print order still only lets through the first print statement correctly:Gives:and removing the list() function:gives me:So I have no idea what's going on. The list() function should not be changing the map object in any way, right? And it stays a map object, but calling list() on it more than once seems to change its behaviour. I am confuse.
Actually, calling  does change your  object.  is an iterator, not a data structure (in Python3). After it has been looped over once, it is exhausted. To reproduce the result, you need to recreate the map object.In your case, what you probably want to do is create a list from the map to store the result, then perform the .Edit: another approach.You can calculate arithmetic mean (and other statistics) directly from iterators using the statistics module. Check out the docs.
You can create a list by iterating over your  structure to avoid exhausting the iterator with every list call:Output:


Answer URL
https://docs.python.org/3/library/statistics.html#statistics.mean
