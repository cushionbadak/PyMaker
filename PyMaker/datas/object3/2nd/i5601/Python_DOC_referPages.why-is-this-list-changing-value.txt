Natural Text
I have a  called  that changes value after a block of code that shouldn't affect it. Why?Output:For context, I'm trying to use this to begin to solve the problem on page 5 of this British Informatics Olympiad past exam: http://www.olympiad.org.uk/papers/2009/bio/bio09-exam.pdf.
Here:You are appending a reference to , not its values. See the difference:In order to avoid this you can give a copy by using  operator:
 does not copy .There is only ever one list  in memory, which also goes by the following references: and also  and  because  and  only have one element each, so the first is the last.Now, when you mutate //// you are mutating the same list in memory.I highly recommend watching Facts and Myths about Python names and values.
When you do , you're passing the reference to the ones list, not the value itself. Therefore, when you do , it'll modify the value in the ones list itself, not a copy in the twos list.To pass the value instead of the reference to the ones list, you can do:


Answer URL
https://docs.python.org/3/tutorial/datastructures.html
