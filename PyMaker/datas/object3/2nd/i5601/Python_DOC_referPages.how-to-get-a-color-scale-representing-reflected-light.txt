Natural Text
I got this wonderful image below from the Wikipedia page on Dodecahedrons. It shows a Tetroid rotating slowly. If you look carefully, it is clear that the assumption is that there is a light source somewhere outside the screen. If a face reflects  more light back to the observer, it appears brighter and if it reflects less light back, it appears darker. I have an idea about how I might get a metric for the amount of light a face is reflecting back at a certain rotation. I can also scale the metric to a value between 0 and 255 (which most color scales assume). However, how do I get the actual rgb values that look like a bright, reflective blue when the metric is high and the darkish blue when the metric is low?
I suggest that you use the standard  module for this task, and work in the HSV or HLS color coordinate systems. Typically, you'd determine the hue and saturation of your base color, and then vary the value or lightness to create the range of shades that you want.Here's a short example that uses Numpy to create a HLS grid from a given hue.
Start with high RGB values and reduce R and G progressively to get darker hues of blue. Following figure is based on these RGB values (R and G being reduced in steps of 20):


Answer URL
https://docs.python.org/3/library/colorsys.html
https://docs.python.org/3/library/colorsys.html
