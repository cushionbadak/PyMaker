Natural Text
In Python 3 I have a series of links with "fixed-width files". They are websites with public information about companies. Each line has information about companiesExample links:http://idg.receita.fazenda.gov.br/orientacao/tributaria/cadastros/cadastro-nacional-de-pessoas-juridicas-cnpj/consultas/download/F.K03200UF.D71214ACandhttp://idg.receita.fazenda.gov.br/orientacao/tributaria/cadastros/cadastro-nacional-de-pessoas-juridicas-cnpj/consultas/download/F.K03200UF.D71214ROI have these links in a dictionary. The key is the name of the region of the country in which the companies are and the value is the linkI want to read these links (fixed-width files) and save the content to a CSV file. Example content:But to fill the rows of the CSV columns I need to separate and test on each line of the links with "fixed-width files"I must follow rules like these:1. If the line begins with "01" is a line with the company's registration number and its name. Example: 1.1 - The "01" indicates this /1.2 - The next 14 positions on the line are the company code - starts at position 3 and ends at 16 - (07397388000155) /1.3 - The following 150 positions are the company name - starts at position 17 and ends at 166 - (ASSOCIACAO CULTURAL)and2. If the line starts with "02" it will have information about the partners of the company. Example:  /2.1 - The "02" indicates this /2.2 - The next fourteen positions are the company registration code - starts at position 3 and ends at 16 (07397388000155) /2.3 - The next number is a member identifier code, which can be 1, 2 or 3  - starts and ends at position 17 - (2) /2.4 - The next fourteen positions are another code identifying the member - starts at position 18 and ends at 31 -("" - in this case is empty) /2.5 - The next two positions are another code identifying the member - starts at position 32 and ends at 33 (16) /2.6 - And the 150 final positions are the name of the partner - starts at position 34 and ends at 183 (MARIA DO SOCORRO RODRIGUES ALVES BRAGA)Please in this case one possible strategy would be to save each link as TXT? And then try to separate the positions?Or is there a better way to wipe a fixed-width files?
You can take a look at any URL parsing modules. I recommend Requests, although you can use urllib which comes bundled with python.With that in mind, you can the text from the page, and seeing as it doesn't require a login of any from, with requests it would simply be a matter of:Read more in the Quickstart section of requests. I'll leave the 'position-separating' to you. Hint: Use regex.
Using  it's possible to read the content from the link as a stream and process it without saving to file. Documentation for  is hereThere's also a related question here: How do you open a file stream for reading using Scrapy?


Answer URL
https://docs.python.org/3/library/urllib.request.html#module-urllib.request
