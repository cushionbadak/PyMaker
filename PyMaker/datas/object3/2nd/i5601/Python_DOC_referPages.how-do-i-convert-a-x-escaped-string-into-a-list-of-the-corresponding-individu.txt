Natural Text
I have strings of ASCII characters represented like this:I would like to convert these strings to lists where each element of the list is an ASCII character, and the order and values of the characters are conserved from the original string:This wouldn't be too difficult if every character was in the form  (representing a hex byte), but sometimes ASCII escape characters such as  newline and  backslash are included. This throws off the converter method I wrote.Is there a simple built-in function that can do what I desire? Or is there some package I can download? Or does someone have a simple code solution?
What you appear to have there is a string containing the Python representation of another string. One way to decode that is to use  with the  encoding:Note that although printable non-ASCII characters are represented here as-is, rather than as  escapes, they are literally identical to those escapes:Once you have your decoded string , it's trivial to convert it into a list:However: I can't help but wonder why you need to decode this string in the first place. There aren't many circumstances where it makes sense to be passing the result of  around, so it's possible you have an XY Problem. You should consider whether it would make more sense not to generate these repr-strings in the first place.


Answer URL
https://docs.python.org/3/library/codecs.html#codecs.decode
https://docs.python.org/3/library/codecs.html#text-encodings
