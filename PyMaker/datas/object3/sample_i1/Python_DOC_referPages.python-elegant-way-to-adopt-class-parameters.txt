Natural Text
Assume I have many expression similar toIs there an elegant way to rewrite this?Thanks!
Starting from Python 3.7, It could be done using data classesThe dataclass decorator automatically generates the suitable __init__ method.As @Lie Ryan commented, you could also use namedtuple:It can even be inherited to add or overload methods:The answer from fountainhead is also a nice version-agnostic trick.
Does not look like the most elegant thing everbut the longer the list the more simplified, also you only need to modify arglist and it will be reflected. Bad thing, you lose the signature (any non runtime checks you could make are lost, e.g. your IDE will freak outOther suggestions include enumerate (cleaner way to work with indices).Or you could just use zip, and do the check at the begginign:Note that you can still add arguments that don't behave this way:
You could try this:Output:
You can try using named generic arguments:and then:But this is not good practice, as it gives you no control on what is actually passed.Or:and then:BUT, as the Zen of Python says:explicit is better than implicitand your original code is good enough for that!EDITJust to avoid overwriting dangerous properties, replacewith


Answer URL
https://docs.python.org/3/library/dataclasses.html
https://docs.python.org/3/library/dataclasses.html
