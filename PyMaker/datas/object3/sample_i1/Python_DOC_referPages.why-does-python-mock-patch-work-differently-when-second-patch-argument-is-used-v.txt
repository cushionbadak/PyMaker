Natural Text
I'm trying to mock out the return value of a dependent method but the return value is different between using the return_value and adding an additional argument to the mock.patch. Please help me figure out why. I tried searching online but couldn't find an answer to this.library/abc.py:tools/operating_system.py:library/test_abc.py:Note: This example is somewhat contrived because I could mock the os_name method. That is not the main concern. I'm trying to learn python test mocking and I want to be able to mock os.name. Thanks! This is for Python 3.7.2 but I have the same problem with Python 2.7.15
See the documentation for mock.patch: when you call thisyou're doing this:You're replacing os.name with the string test, so that works as you'd expect.When you call thisyou're doing this:You're leaving NEW as NEW=DEFAULT so os.name is set to MagicMock object (as the documentation says). Setting mock_name.return_value='test' does not work, because you're not calling the function os.name() anywhere in your code, and of course you should not be, because os.name is a string and not a function.Like you said, in real code you would want to be patching os_name function instead of os.name:This test is not depending on the internal implementation of os_name function. If the correct behaviour of ABC class depended on os_name always returning os.name (which is what the tests are asserting), then the class could just as well use os.name itself and not depend on tools.operating_system at all.A little personal preference for the end: I prefer injecting dependencies instead of patching whenever possible, see, for example, the article "Every mock.patch() is a little smell".


Answer URL
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch
https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch
