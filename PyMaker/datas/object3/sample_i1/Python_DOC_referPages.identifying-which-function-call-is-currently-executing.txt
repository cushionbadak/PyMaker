Natural Text
When having multiple call of the same function on the same line. Is it possible for troubleshooting purpose, to use the traceback or the sys library to identify which one is currently executing ?Edit : Please do not provide work around. I know all I need to know about how to work around this problem. What I'd like to know, is if there is a way to find a more precise information about the parsing/execution state, than just the line number of the calling instruction.Let's take this example:Running this in idle will write : Is there any way to know inside the fn function if it is currently executing fn(a) or fn(b) ?Edit2 : I have added a case which shows that the calling order cannot be usedwill print:what would be nice, would be to have an indication of the first character of the call, or a way to recompile the code in order to get the values of lasti corresponding with each call.Obviously, analysing the result shows that values of lasti correlate with the position, but up to now, I have found no way to know this relationship before executing the program : (1) as given by stack[-2][-1]
You can send an ID which is unique and random as an extra parameter and add that to the logs.The identifier will help you trace back to the origin.
I think your best bet would be to learn how to use pdb. While you could alter the code to give you some kind of limited introspection into the running code. It will be easier and ultimately more valuable to get a running debugger to allow you to observer the state of the code while it's being evaluated.try pdbthis will open the python debugger and allow you to do things like use w which stands for where and in pdb prints a stack trace. Or l which show the source at the current line of execution, etc.It'll look something like thisGood luck. Hope this helps.


Answer URL
https://docs.python.org/3/reference/expressions.html#evaluation-order
