Natural Text
Alright, this is doing my head in. I have two dictionaries with object groups as shown below:The output I'm looking for is:The problem I'm having is that I don't know beforehand how much levels of recursion there are, as nested groups can theoretically go on infinitely. Additionally, I'm having trouble with determining which keys should be a top-level key in the combined dictionary. I currently have the following:This returns:Which is close, but it's clearly missing recursion and doesn't handle nesting of keys. Mainly looking for pointers here, recursion logic doesn't click for me yet...
I think this does what you want:With your example:Note this can fall into infinite recursion for malformed inputs, if you have for example group A containing group B but then group B contains group A.
You can use simple recursion:Output:
this will give :
I guess it needs just two loops, and no more. Here, the groups dict will be updated, more precisely, it'll lose some of its key-values.you'd probably like to re-write it using defaultdict
Assuming you're ok with possibly having cross referencing data structure, you don't necessarily need to use recursion here. Unlike other solutions, this will correctly handle cycles and infinitely recursive groups, as all the dict references are shared. When your groups topologically describes a tree, this will work exactly the same as the recursive solution. However, if your groups topologically describes a directed acyclic graph, this solution would share the dicts for all the nodes that appears more than once, while the recursive solution would copy and expand the duplicates out into a regular tree, this wouldn't really be an issue if you don't need to mutate the dicts. If your groups topologically describes a graph with cycles, then this will create those cycles, while the recursive solution would fall due to infinite recursion.
New to python I have been struggling though this but found a solution at last, it is quite long though.


Answer URL
https://docs.python.org/3/library/collections.html#collections.defaultdict
