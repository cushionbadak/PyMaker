Natural Text
Why are x and y strings instead of ints in the below code?  Everything on the web says to use raw_input(), but I read on Stack Overflow (on a thread that did not deal with integer input) that raw_input() was renamed to input() in Python 3.x.
TLDRPython 3 doesn't evaluate the data received with input function, but Python 2's input function does (read the next section to understand the implication).Python 2's equivalent of Python 3's input is the raw_input function.Python 2.xThere were two functions to get user input, called input and raw_input. The difference between them is, raw_input doesn't evaluate the data and returns as it is, in string form. But, input will evaluate whatever you entered and the result of evaluation will be returned. For example,The data 5 + 17 is evaluated and the result is 22. When it evaluates the expression 5 + 17, it detects that you are adding two numbers and so the result will also be of the same int type. So, the type conversion is done for free and 22 is returned as the result of input and stored in data variable. You can think of input as the raw_input composed with an eval call.Note: you should be careful when you are using input in Python 2.x. I explained why one should be careful when using it, in this answer.But, raw_input doesn't evaluate the input and returns as it is, as a string.Python 3.xPython 3.x's input and Python 2.x's raw_input are similar and raw_input is not available in Python 3.x. SolutionTo answer your question, since Python 3.x doesn't evaluate and convert the data type, you have to explicitly convert to ints, with int, like thisYou can accept numbers of any base and convert them directly to base-10 with the int function, like thisThe second parameter tells what is the base of the numbers entered and then internally it understands and converts it. If the entered data is wrong it will throw a ValueError.For values that can have a fractional component, the type would be float rather than int:Apart from that, your program can be changed a little bit, like thisYou can get rid of the play variable by using break and while True. PS: Python doesn't expect ; at the end of the line :)
In Python 3.x, raw_input was renamed to input and the Python 2.x input was removed.  This means that, just like raw_input, input in Python 3.x always returns a string object.To fix the problem, you need to explicitly make those inputs into integers by putting them in int:Also, Python does not need/use semicolons to end lines.  So, having them doesn't do anything positive.
For multiple integer in a single line, map might be better.If the number is already known, (like 2 integers), you can use
input() (Python 3) and raw_input() (Python 2) always return strings. Convert the result to integer explicitly with int().Pro tip: semi-colons are not needed in Python.
Multiple questions require input for several integers on single line.  The best way is to input the whole string of numbers one one line and then split them to integers.
Convert to integers:Similarly for floating point numbers:
Python 3.xTaking int as input in python:we take a simple string input using:Now we want int as input. So we typecast this string to int simply using:
Python 3.x has input() function which returns always string.So you must convert to intpython 3.xpython 2.xIn python 2.x raw_input() and input() functions always return string so you must convert them to int too.
In Python 3.x by default the input function takes input in string format. To convert it into integer you need to include int(input()):
I encountered a problem of taking integer input while solving a problem on CodeChef, where two integers - separated by space - should be read from one line.While int(input()) is sufficient for a single integer, I did not find a direct way to input two integers.  I tried this:Now I use num1 and  num2 as integers.  Hope this helps.

While in your example, int(input(...)) does the trick in any case, python-future's builtins.input is worth consideration since that makes sure your code works for both Python 2 and 3 and disables Python2's default behaviour of input trying to be "clever" about the input data type (builtins.input basically just behaves like raw_input).
the for loop shall run 'n' number of times . the second 'n' is the length of the array.the last statement maps the integers to a list and takes input in space separated form .you can also return the array at the end of for loop.

Yes, in python 3.x, raw_input is replaced with input. In order to revert to old behavior of input use: eval(input("Enter a number: "))This will let python know that entered input is integer
Try this,int() is a built-in python function that converts any datatype to a integer.
Lots of people like to do int(input("etc")), but if you put in a string, it will raise an error. What I like to do is this:Now use integer for whatever purpose!!Plus, if s is an string, this doesn't raise an error!!!At least, not immediately. 
parse the input into an integer with int
This makes it know that the variable x and y are integers and therefore uses them like integers.If you want it to be able to use decimals change int to float.The output for the first function: x = 3 and y = 7 returned 10.


Answer URL
https://docs.python.org/3/library/functions.html#input
https://docs.python.org/3/library/functions.html#int
https://docs.python.org/3/library/ast.html#ast.literal_eval
https://docs.python.org/3/library/functions.html#input
