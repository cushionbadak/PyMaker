Natural Text
I have a pre-existing berkeley database written to and read from a program written in C++. I need to sidestep using this program and write to the database directly using python.I can do this, but am having a heck of a time trying to encode my data properly such that it is in the proper form and can then be read by the original C++ program. In fact, I can't figure out how to decode the existing data when I know what the values are.The keys of the key value pairs in the database should be timestamps in the form YYYYMMDDHHmmSS. The values should be five doubles and an int mashed together, by which I mean (from the source code of the C++ program), the following structure(?) DVALSis written to the database as the value of the key value pair like so:Luckily, I can know what the values are. So if I run from the command linethe final record is:Using python's bsddb3 module I can pull this record out also:With kvpair now holding the following information:The timestamp is easy to read and in this case the actual values are as follows:As the '\xaeG\xe1z\x14\x0e@@' sequence is repeated 4 times I think it corresponds to the value 32.11So I think my question may just be about encoding/decoding, but perhaps there is more to it, hence the backstory.Using a variety of encodings just gives errors similar to this:
The value data is binary so it may be unpacked using Python's struct module.struct.unpack takes two arguments: a format specifier that defines the data format and types and the data to be unpacked.  The format '<5di4x' describes:<: little endian order5d: five doubles (8 bytes each)i: one signed int (4 bytes; I for unsigned)4x: four pad bytesData can be packed in the same way, using struct.pack.


Answer URL
https://docs.python.org/3/library/struct.html
https://docs.python.org/3/library/struct.html#struct.unpack
https://docs.python.org/3/library/struct.html#format-strings
https://docs.python.org/3/library/struct.html#struct.pack
