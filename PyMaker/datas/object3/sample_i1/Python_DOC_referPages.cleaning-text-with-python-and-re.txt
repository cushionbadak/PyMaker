Natural Text
I need to clean some text like the code below says:and this code must give me the questions list clean but I got the clean questions empty. I reopened the spyder and the list got full but without being cleaned and then reopened it and I got it empty .. the console error says:I am using Python 3.6, specifically the Anaconda build Anaconda3-2018.12-Windows-x86_64.
Your character class (as shown in the traceback) is invalid; } comes after = in ordinal value (} is 125, = is 61), and the - in between them means it's trying to match any character from }'s ordinal to ='s and in between. Since character ranges must go from low ordinal to high ordinal, 125->61 is nonsensical, thus the error.In a way you got lucky; if the characters around the - had been reversed, e.g. =-}, you'd have silently removed all characters from ordinal 61 to 125 inclusive, which would have included, along with a mess of punctuation, all standard ASCII letters, both lower and uppercase.You could fix this by just removing the second - in your character class (you already included it at the beginning of the class where it doesn't need to be escaped), changing fromtobut I'm going to suggest dropping regular expressions here; the risk of mistakes with lots of literal punctuation is high, and there are other methods that don't involve regex at all that should work just fine and not make you worry if you escaped all the important stuff (the alternative is over-escaping, which makes the regex unreadable, and still error-prone).Instead, replace that line with a simple str.translate call. First off, outside the function, make a translation table of the things to remove:then replace the line:with:It should run at least as fast as the regex (likely faster), and it's far less error-prone, since no character has special meaning (translation tables are just mappings from Unicode ordinals to None, meaning delete, another ordinal, meaning single character replacement, or a string, meaning char -> multichar replacement; they don't have a concept of special escapes). If the goal is killing all ASCII punctuation, you're probably better off using the string module constant to define the translation table (which also makes the code more self-documenting, so people aren't wondering if you are removing all or just some punctuation, and whether it was intentional):As it happens, your existing string is not removing all punctuation (it misses, among other things, ^, !, $, etc.), so this change might not be correct, but if it is correct, definitely make it. If it's supposed to be a subset of punctuation, you definitely want to add a comment as to how that punctuation was chosen, so maintainers don't wonder if you made a mistake.
You need to properly escape the special characters and enclose in square bracketsA more generic regex is for special characters (i.e not letter or number) is 


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.translate
https://docs.python.org/3/library/stdtypes.html#str.maketrans
https://docs.python.org/3/library/re.html#index-9
