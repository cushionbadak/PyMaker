Natural Text
I've been told to write a procedure to find the last position of a substring in a string. It seems to be outputing false information and I'm not sure where I've gone wrong.Can anyone help?
Each time you call s.find() you're working just with the substring after the previous match. So last_position won't be the position in the original string, it will be the position in that substring.It's easier to see what's happening if you use a more complicated string, e.g.The first time through the loop s = 'abcaxya34', it finds a at index 0. Then it removes that match from the beginning of the string.The second time through the loop s = 'bcaxya34', and it finds a at index 3. Then it removes that match from the beginning of the string.The third time through the loop, s = 'xya34', and it finds a at index 3. Then it removes that match from the beginning of the string.The fourth time through the loop, s = '34'. This time it doesn't find a, so the loop ends. It then returns the position from the previous iteration, which is 3. But that's just the index in the last successful substring, not the index in the original string.str.find() allows you to provide an optional starting index, you can use that instead of slicing the string each time.
You can use rfind() to get last character position. 
Try (Scan from right to left)
You can go through simple for loop.If you type just s.find(c) it will see first s in c, meaning return will be 0 now if you add count = 0 and for every time s is in c add 1 it will return you that position.
Reverse both strings:


Answer URL
https://docs.python.org/3/library/stdtypes.html#str.rfind
