<div class="post-text" itemprop="text">
<p>I have two lists:</p>
<pre><code>list1 = ["a", "b", "c", "d"]
list2 = [1, 2, 3]
</code></pre>
<p>I want to take 3 elements from <code>list1</code> and 2 elements from <code>list2</code> to combine like the following (a total of 12 combinations):</p>
<pre><code>[a b c 1 2]
[a b c 1 3]
[a b c 2 3]
[a b d 1 2]
[a b d 1 3]
[a b d 2 3]
[a c d 1 2]
[a c d 1 3]
[a c d 2 3]
[b c d 1 2]
[b c d 1 3]
[b c d 2 3]
</code></pre>
<p>This is the code I have that isn't working:</p>
<pre><code>import itertools
from itertools import combinations 

def combi(arr, r): 
    return list(combinations(arr, r)) 

# Driver Function 
if __name__ == "__main__": 
    a = ["a", "b", "c", "d"] 
    r = 3
    a= combi(arr, r)
    print (a)
    b = [1, 2, 3]
    s =2
    b = combi(brr, s)
    print (b)
    crr = a + b
    print (crr)
    c = combi(crr, 2)
    print (c)
    for i in range(len(c)):
        for j in range(len(c)):
            print c[i][j]
            print '\n' 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a combination of <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code></a> functions <code>combinations</code>, <code>product</code> and <code>chain</code>:</p>
<pre><code>list1 = ["a", "b", "c", "d"]
list2 = [1, 2, 3]

import itertools

comb1 = itertools.combinations(list1, 3)
comb2 = itertools.combinations(list2, 2)
result = itertools.product(comb1, comb2)
result = [list(itertools.chain.from_iterable(x)) for x in result]
</code></pre>
<p>Result:</p>
<pre><code>[['a', 'b', 'c', 1, 2],
 ['a', 'b', 'c', 1, 3],
 ['a', 'b', 'c', 2, 3],
 ['a', 'b', 'd', 1, 2],
 ['a', 'b', 'd', 1, 3],
 ['a', 'b', 'd', 2, 3],
 ['a', 'c', 'd', 1, 2],
 ['a', 'c', 'd', 1, 3],
 ['a', 'c', 'd', 2, 3],
 ['b', 'c', 'd', 1, 2],
 ['b', 'c', 'd', 1, 3],
 ['b', 'c', 'd', 2, 3]]
</code></pre>
<p>Here you have the <a href="https://repl.it/repls/MixedLargeIntroductory" rel="nofollow noreferrer">live example</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Here's an approach that might work for you:</p>
<pre><code>&gt;&gt;&gt; from itertools import combinations
&gt;&gt;&gt; list1 = ["a", "b", "c", "d"]
&gt;&gt;&gt; list2 = [1, 2, 3]
&gt;&gt;&gt; [[*x, *y] for x in combinations(list1, 3) for y in combinations(list2, 2)]
[['a', 'b', 'c', 1, 2], ['a', 'b', 'c', 1, 3], ['a', 'b', 'c', 2, 3], ['a', 'b', 'd', 1, 2], ['a', 'b', 'd', 1, 3], ['a', 'b', 'd', 2, 3], ['a', 'c', 'd', 1, 2], ['a', 'c', 'd', 1, 3], ['a', 'c', 'd', 2, 3], ['b', 'c', 'd', 1, 2], ['b', 'c', 'd', 1, 3], ['b', 'c', 'd', 2, 3]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use nested loops.Here is the code without any library(works only if you're leaving one element from each list!)</p>
<pre><code>list3=[]
for a in list1:
    st=''
    for t in list1:
        if(t!=a):
            st=st+t+' '
    for b in list2:
        st1=''
        for m in list2:
            if(m!=b):
                 st1=st1+m+' '
        list3.append(st+st1.strip())
</code></pre>
</div>
