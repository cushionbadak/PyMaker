<div class="post-text" itemprop="text">
<p>I have a function in dll file that takes float pointer as one of argument(argument 9: float *result). </p>
<pre><code>void generate_codebook(int *nodestatus, int *nofnode, int *noftree, int *terminal,  int *nofterminal, int *nofobservations, int *total, int *nofseries,  float *result)
</code></pre>
<p>Here is the python code where I am facing issue:</p>
<pre><code>nofseries=c_int(len(nofobservations))
noftree=c_int(terminal.shape[1])
nofnode=c_int(nodestatus.shape[0])
total=c_int(np.sum(nofobservations,dtype=np.int64))
nofentry=ctypes.POINTER(ctypes.c_float *(len(nofobservations)*nofterminal*terminal.shape[1]))()
mydll.generate_codebook.argtypes = [POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int),
                                  POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_float)]
result=mydll.generate_codebook(nodestatus.ctypes.data_as(ctypes.POINTER(ctypes.c_int)),
                               nofnode,noftree,terminal.ctypes.data_as(ctypes.POINTER(ctypes.c_int)),
                               c_int(nofterminal),
                               nofobservations.ctypes.data_as(ctypes.POINTER(ctypes.c_int)),total,
                               nofseries,
                              ctypes.byref(nofentry))
</code></pre>
<p>While calling generate_codebook function I am facing argument error in last argument where LP_c_float instance is expected. Below is the error:</p>
<pre><code>&lt;ipython-input-28-f73a7383211e&gt; in generatecodebook(nodestatus, terminal, nofterminal, nofobservations)
 16                                    nofobservations.ctypes.data_as(ctypes.POINTER(ctypes.c_int)),total,
 17                                    nofseries,
---&gt; 18                                   ctypes.byref(nofentry))

ArgumentError: argument 9: &lt;class 'TypeError'&gt;: expected LP_c_float instance instead of pointer to LP_c_float_Array_50000
</code></pre>
<p>I went through <a href="https://stackoverflow.com/questions/1413851/expected-lp-c-double-instance-instead-of-c-double-array-python-ctypes-error">this</a> question's solution but not able to resolve error.
Thank you in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <em>nofentry</em> value is a pointer to an array of <em>float</em>s, while <em>generate_codebook</em> expects a pointer to <em>float</em>. <em>ctypes</em> can't do such a conversion automatically, so it has to be performed manually (using <a href="https://docs.python.org/3/library/ctypes.html#ctypes.cast" rel="nofollow noreferrer">[Python 3]: ctypes.<strong>cast</strong>(<em>obj, type</em>)</a>).</p>
<p>Example:</p>
<blockquote>
<pre class="lang-py prettyprint-override"><code>&gt;&gt;&gt; import ctypes
&gt;&gt;&gt;
&gt;&gt;&gt; dim = 100
&gt;&gt;&gt;
&gt;&gt;&gt; FloatArr100 = ctypes.c_float * dim
&gt;&gt;&gt; FloatArr100Ptr = ctypes.POINTER(FloatArr100)
&gt;&gt;&gt;
&gt;&gt;&gt; float_arr = FloatArr100(*range(dim))
&gt;&gt;&gt; float_arr[4], float_arr[38], float_arr[99]
(4.0, 38.0, 99.0)
&gt;&gt;&gt;
&gt;&gt;&gt; float_arr_ptr = ctypes.pointer(float_arr)  # This is the equivalent of your `nofentry`
&gt;&gt;&gt; float_arr_ptr
&lt;__main__.LP_c_float_Array_100 object at 0x000001921ED85A48&gt;
&gt;&gt;&gt; type(float_arr_ptr) is FloatArr100Ptr
True
&gt;&gt;&gt;
&gt;&gt;&gt; float_ptr = ctypes.cast(float_arr, ctypes.POINTER(ctypes.c_float))  # This is what you should do
&gt;&gt;&gt;
&gt;&gt;&gt; float_ptr
&lt;__main__.LP_c_float object at 0x000001921ED859C8&gt;
&gt;&gt;&gt; float_ptr[4], float_ptr[38], float_ptr[99]
(4.0, 38.0, 99.0)
</code></pre>
</blockquote>
<p>Translated to your code:</p>
<ol>
<li><p>Change <em>nofentry</em> definition to:</p>
<pre class="lang-py prettyprint-override"><code>nofentry = (ctypes.c_float * (len(nofobservations) * nofterminal * terminal.shape[1]))()  # Notice dropping `ctypes.POINTER`
</code></pre></li>
<li><p>When invoking <code>mydll.generate_codebook</code>, replace</p>
<pre class="lang-py prettyprint-override"><code>ctypes.byref(nofentry)
</code></pre>
<p>with</p>
<pre class="lang-py prettyprint-override"><code>ctypes.cast(nofentry, ctypes.POINTER(ctypes.c_float))
</code></pre>
<p>so at the end it will look like:</p>
<pre class="lang-py prettyprint-override"><code>result = mydll.generate_codebook(nodestatus.ctypes.data_as(ctypes.POINTER(ctypes.c_int)),
                                 nofnode, noftree, terminal.ctypes.data_as(ctypes.POINTER(ctypes.c_int)),
                                 c_int(nofterminal),
                                 nofobservations.ctypes.data_as(ctypes.POINTER(ctypes.c_int)),
                                 total, nofseries,
                                 ctypes.cast(nofentry, ctypes.POINTER(ctypes.c_float)))
</code></pre></li>
</ol>
</div>
<span class="comment-copy">I tried above commands and got ArgumentError: argument 9: &lt;class 'TypeError'&gt;: expected LP_c_float instance instead of pointer to LP_c_float</span>
<span class="comment-copy">Hmm, that means that either there's smth wrong in the question, or you didn't do exactly what I've pointed out: <code>ctypes.cast(nofentry, ctypes.POINTER(ctypes.c_float))</code> returns a <i>LP_c_float instance</i>.</span>
<span class="comment-copy">Sorry, I made mistake while casting but now I get OSError: exception: access violation reading 0x0000020C7B9F2248</span>
<span class="comment-copy">Unfortunately that info will be only be available in <i>generate_codebook</i> implementation (or docs). The function expects some pointers (that are also arrays) and most likely is trying to access memory outside of he bounds.</span>
