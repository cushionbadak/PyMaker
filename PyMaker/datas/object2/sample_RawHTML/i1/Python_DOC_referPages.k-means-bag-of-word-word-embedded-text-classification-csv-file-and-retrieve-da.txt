<div class="post-text" itemprop="text">
<p>I have two tasks to do.</p>
<p>1)I have to extract the headers of any CVS file containing invoices data.
In specific: invoice number, address, location, physical good. 
I have been asked to create a text classifier for this task, therefore the classifier will go over any CVS file and identify those 4 headers. </p>
<p>2)After the classifier identifies the 4 words I have to find the attach the data of that column and create a class.</p>
<p>I researched the matter and the three methodologies that I thought were must be appropriated are: 
1)bad of words
2)word embedded
3)K-means clustering </p>
<p>Bag of words can identify the word but it does not give me the location of the word itself to go and grab the column and create the class.</p>
<p>Word embedded is over complicated for this task, I believe, and even if give me the position of the word in the file is too time-consuming for this</p>
<p>K-means seems simple and effective it tells me where the word is.</p>
<p>My question before I start coding</p>
<p>did I miss something. Is my reasoning correct?
And most important the second question 
Once the position of the word is identified in the CSV file how I translate that into coding so I can attach the data in that column  </p>
</div>
<div class="post-text" itemprop="text">
<p>I would simply:</p>
<ul>
<li>look at the first line of the file (the header); 

<ul>
<li><a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">filter</a> out the column names you are looking for, use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> so the result will contain the column indices</li>
<li>retrieve the column indices from the filtered result</li>
</ul></li>
<li>iterate over the rest of the file;  

<ul>
<li>use those indices to extract the specific columns' data from each line/row

<ul>
<li>put that data in a container for use later (maybe use a list)</li>
</ul></li>
</ul></li>
</ul>
</div>
<span class="comment-copy">You are looking for an appropriate way to find specific column names in any csv header and their column <i>numbers</i>? The header being the first line of the csv?</span>
<span class="comment-copy">The short answer is yes. I am looking to grab some particular header with some particular name and then when I know is there grab the data not necessarily numbers. Could be numbers or could be strings. They ask me to do this with an ML text classifier but I think is overdoing.</span>
<span class="comment-copy">I ask anyway to do the text classifier. When do I know the position of the word using means how can I attach the data that is in the column?</span>
<span class="comment-copy">The columns of a row/line of a csv file should be delineated by something, usually a comma but could be a tab.  If you split a string on that delimiter you will get a list with each column value as an item in the list - e.g. <code>[1,2,3,4,5]</code> and if you know the column index for your names you can get those values with ther index. Say you want columns zero and two --&gt; <code>split_line[0]</code> and <code>split_line[2]</code>.</span>
<span class="comment-copy">Thank you for your answer.  Is what I will do.  But since this is for a task I have been asked to create a text classifier. How I would do when I know the position of the word from the k-means classifier to attach the column of date.</span>
<span class="comment-copy">Do you think I can do the same if instead of csv file there is json file? What I am trying to say can I do the same procedure you describe here with a json file? Thank you for your kindness anyway</span>
<span class="comment-copy">I don't have any experience using text classifiers but from what little I know I'm having a hard time seeing/understanding how that would even be useful for examining the header of a csv file to determine the indices of the columns of interest.  It is certainly possible to parse a json file to extract needed/wanted information but the details of the process would depend on the structure of the json - you would have to have prior knowledge of the structure.  I don't know enough about nlp and text classification to know whether that could be used to extract info from a json string.</span>
<span class="comment-copy">thank you for your kindness</span>
