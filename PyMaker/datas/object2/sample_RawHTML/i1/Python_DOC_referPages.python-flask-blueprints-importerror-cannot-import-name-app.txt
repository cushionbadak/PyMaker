<div class="post-text" itemprop="text">
<p>I am working through a tutorial on flask blueprints, and the first step is to just to download flask and get initial "Hello World" printed. However when I try to run the initial run.py file I get the following error: </p>
<pre><code>Traceback (most recent call last):
File "run.py", line 1, in &lt;module&gt;
    from site import app
ImportError: cannot import name 'app' from 'site' (/Users/kyle/anaconda3/lib/python3.7/site.py)
</code></pre>
<p>My file structure is:</p>
<pre><code>website/
     run.py
     site/
        __init__.py
</code></pre>
<p><strong>run.py</strong></p>
<pre><code>from site import app

if __name__ == '__main__':
    app.run(debug=True)
</code></pre>
<p><strong>__init__.py</strong></p>
<pre><code>from flask import Flask

app = Flask(__name__)


@app.route('/')
def root():
    return "Hello World"
</code></pre>
<p>I am confused why I am getting this error since from what I understand if app is declared in the <strong>init</strong> file I should be able to import it. </p>
</div>
<div class="post-text" itemprop="text">
<p>This is happening because <em>site</em> is a module within the Python standard library (<a href="https://docs.python.org/3/library/site.html" rel="nofollow noreferrer">https://docs.python.org/3/library/site.html</a>). Your module name is clashing with it and the interpreter is loading from the library first, hence not finding the <em>app</em> variable. There are a few ways around this but I suspect you're not very attached to the name so I'd just change it. If you rename your <strong>site</strong> folder to <strong>web</strong> (or any other name not used by the Python std library), it'll work. </p>
</div>
