<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/38485735/python-find-sequence-of-same-characters">Python - Find sequence of same characters</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/22882922/splitting-a-string-with-repeated-characters-into-a-list-using-regex">Splitting a string with repeated characters into a list using regex</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>There is a string with one or more characters. I want to slice the list so that the adjoining same characters are in the same element. For example:</p>
<pre><code>'a' -&gt; ['a']
'abbbcc' -&gt; ['a', 'bbb', 'cc']
'abcabc' -&gt; ['a', 'b', 'c', 'a', 'b', 'c']
</code></pre>
<p>How do I make this in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>from itertools import groupby

s = 'abccbba'

print([''.join(v) for _, v in groupby(s)])
# ['a', 'b', 'cc', 'bb', 'a']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Can be achieved with <a href="https://docs.python.org/2/library/re.html#re.finditer" rel="noreferrer">re.finditer()</a></p>
<pre><code>import re
s='aabccdd'
print([m.group(0) for m in re.finditer(r"(\w)\1*", s)])
#['aa', 'b', 'cc', 'dd']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Without any modules and using for loop also it can be done in interesting way:</p>
<pre><code>l=[]
str="aabccc"
s=str[0]
for c in str[1:]:

   if(c!=s[-1]):
        l.append(s)
        s=c
   else:
        s=s+c
l.append(s)
print(l)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just one more alternative solution. You need no import for it in python2. In python3 you need import from functools.</p>
<pre><code>from functools import reduce   # in python3
s='aaabccdddddaa'
reduce(lambda x,y:x[:-1]+[x[-1]+y] if len(x)&gt;0 and x[-1][-1]==y else x+[y], s, [])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>t=input()
c=[t[0]]
for i in range(1,len(t)):
    if t[i]==c[-1][0]:
        c[-1]=c[-1]+t[i]
    else:
        c.append(t[i])
print(c)
</code></pre>
</div>
<span class="comment-copy">FYI, if you google "python group identical elements" or something similar you'll find plenty of recipes that would help you get started.</span>
<span class="comment-copy">Wow...this is as unreadable as it could get...</span>
<span class="comment-copy">Please add some text to make the answer more descriptive.</span>
