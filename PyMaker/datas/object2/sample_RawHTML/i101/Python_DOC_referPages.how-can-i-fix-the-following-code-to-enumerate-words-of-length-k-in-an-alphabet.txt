<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12715198/python-attributeerror-nonetype-object-has-no-attribute-append">Python : AttributeError: 'NoneType' object has no attribute 'append'</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/16641119/why-does-append-return-none-in-this-code">Why does append return none in this code?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>In Python 3, I am writing code to make a list of words of length k, where k is a positive integer, in some given alphabet. The alphabet should be a list (for example, [a,b,c,d]). </p>
<p>Here is the code:</p>
<pre><code>def list_len_k_words(alphabet, k):
list = []
if k == 1:
    return alphabet
if k &gt;= 2:
    for i in alphabet:
        for j in list_len_k_words(alphabet,k-1):
            list = list.append(i+j)
    return list
</code></pre>
<p>This throws the error "'NoneType' object has no attribute 'append'". I partially understand what is happening: if I print the values of i+j that the program generates, the last value is always None. This has something to do with the return statement of my code, but I do not see how to fix it.</p>
</div>
<div class="post-text" itemprop="text">
<p>The main problem in your code is that you assigned the output of <code>list.append</code> to list. <code>append</code> modifies your list in place, and returns nothing (in fact, it returns <code>None</code>, as all functions that don't have an explicit return value). On the next loop, your list was <code>None</code>, so trying to append to it failed.</p>
<p>Note that I renamed your list to 'words', as <code>list</code> is the name of a Python builtin function.</p>
<pre><code>def list_len_k_words(alphabet, k):
    words = []
    if k == 1:
        return alphabet
    if k &gt;= 2:
        for i in alphabet:
            for j in list_len_k_words(alphabet,k-1):
                words.append(i+j)
        return words

list_len_k_words('abc', 2)
# ['aa', 'ab', 'ac', 'ba', 'bb', 'bc', 'ca', 'cb', 'cc']
</code></pre>
<p>You could also have used the <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer">itertools</a> module to obtain the same result:</p>
<pre><code>from itertools import permutations

def list_len_k_words(alphabet, k):
    return [''.join(perm) for perm in permutations(alphabet, k)]
</code></pre>
</div>
