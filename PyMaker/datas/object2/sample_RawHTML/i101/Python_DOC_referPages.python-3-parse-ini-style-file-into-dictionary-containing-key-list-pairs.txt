<div class="post-text" itemprop="text">
<p>I am trying to parse a host file that is basically a host file like below.</p>
<pre><code>[prod]
server1
server2
server3
[uat]
server4
server5
server6
</code></pre>
<p>What I would like to figure out is how to make a dictionary out of this with the headers being keys and the servers being a list as the value part of the dictionary.</p>
<pre><code>{prod,[server1,server2,server3],uat[server4,server5,server6]}
</code></pre>
<p>I have not been able to find this or at least have been able to put it into working order. I'm kinda stuck with the code below.</p>
<pre><code>def file_parse(self,file):
  with open(file, 'r+') as file:
    lines = file.readlines()
  for word in filter(None, (line.rstrip('\n') for line in lines)):
    if word.startswith('['):
      print("header: {0}".format(word))
    else:
      print(word)
</code></pre>
<p>Which does output correctly but I can't wrap my head around getting it into a dictionary like above.</p>
<p>Sample output currently</p>
<pre><code>header: [prod]
server1
server2
server3
header: [uat]
server4
server5
server6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This one was pretty fun. I edited your string in the example below to add more</p>
<pre><code>&gt;&gt;&gt; string = '''[prod]
server1
server2
server3
[uat]
server4
server5
server6
[prod1]
server7
server8
server9
[uat1]
server10
server11
server11'''


&gt;&gt;&gt; def return_parsed_dict(string):
        import re
        dict = {}
        parse = re.findall('(?&lt;=\[)([\S\s]+?)(?=\])[\n\]]+([\S\s]+?)\n*(?=\[|$)', string)
        for elem in parse:
            dict.update({elem[0]:elem[1].split('\n')})
        return dict


&gt;&gt;&gt; return_parsed_dict(string)
  {'prod1': ['server7', 'server8', 'server9'], 'prod': ['server1', 'server2', 'server3'], 'uat': ['server4', 'server5', 'server6'], 'uat1': ['server10', 'server11', 'server11']}
</code></pre>
<p><strong>Let me know if you'd like for me to explain</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe you want something like it?</p>
<p><strong>Code</strong></p>
<pre><code>#!/usr/bin/python3
# -*- coding: utf-8 -*-

if __name__ == '__main__':

    result = dict()
    last_word = ''

    with open('hosts', 'r+') as file:
        lines = file.readlines()
        for word in filter(None, (line.rstrip('\n') for line in lines)):
            if word.startswith('['):
                last_word = word[1:-1]
                result[last_word] = list()
            else:
                result[last_word].append(word)

print(result)
</code></pre>
<p><strong>Output</strong></p>
<blockquote>
<p>{'prod': ['server1', 'server2', 'server3'], 'uat': ['server4', 'server5', 'server6']}</p>
</blockquote>
</div>
<span class="comment-copy">Quite simply, you need to work through more tutorials.  Your code contains no attempt to create or enhance a dictionary, and the line you give as your desired output is not even a legal Python object.  This is not a tutorial site.  You're getting there, but we need you to do a bit more learning elsewhere to get to a useful Stack Overflow question.</span>
<span class="comment-copy">you should check this out --&gt; <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer">configparser</a></span>
<span class="comment-copy">I had gone through config parser but there was no key value in the house file and I was having trouble figuring out how to move forward. I was hoping to reach out for the purpose of finding a solution since I couldn't figure out what was needed and everything I tried got me stuck. Thank you for the feed back and I'll make sure I get through the rest of the tutorials I have on my stack.</span>
<span class="comment-copy">I was so close before and you helped me take it the rest of the way. Thank you so much!</span>
<span class="comment-copy">No worries. Your solution was actually pretty cool imo. But, indeed this was a pretty complex task. Hope it works when you might need to edit it too.</span>
<span class="comment-copy">Thank you so much. It's perfect for what I was looking for. :)</span>
<span class="comment-copy">Please, vote for the question)</span>
