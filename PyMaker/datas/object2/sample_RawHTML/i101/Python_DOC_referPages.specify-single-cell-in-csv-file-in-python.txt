<div class="post-text" itemprop="text">
<p>I am struggling with one piece of this code and can not seem to get it right. I am attempting to access and print a single cell value from a csv in python. I have the list of rows and columns to specify each single cell but face index errors when I attempt to turn the file into a list and then specify[row][column]. Is there anyway I can get the single cell str values without using pandas? I would prefer to use the csv module if possible</p>
<pre><code>import csv
from csv import reader
import json

categories = { '1':'Unacceptable', '2':'Edit'}

def get_annotation_input():
    while True:
        try:
            annotation = int(input("Annotation: "))
            if annotation not in range (1,3):
                raise ValueError
            return annotation
        except ValueError:
            print("Enter 1 or 2") 


def annotate():
    annotator = input("What is your name? ")
    print(''.join(["-"]*50))

    with open('annotations_full.csv', 'rU') as infile:
              response_reader = csv.DictReader(infile)
              responses = {}
              for row in response_reader:
                  for header, response in row.items():
                      try:
                          responses[header].append(response)
                      except KeyError:
                          responses[header] = [response]


              for i in range(len(ROWS)):
                  ROWS[i] = int(ROWS[i])
              COLUMNS = responses['question_number']
              csv_file = csv.reader(open('results.csv'))
              header = next(csv_file)
              text_question = next(csv_file)
              for i in range(len(COLUMNS)):
                  COLUMNS[i] = (header.index(COLUMNS[i]))
              #print(ROWS,COLUMNS)

              for i,j in zip(ROWS,COLUMNS):
                  current_row = i
                  current_column = j
                  print("Current row number: ", current_row)
                  print("Annotate the following answer as 1-Unacceptable, 2-Edit")
                  print(header[current_column])
                  print(text_question[current_column], '\n')
                  #WANT TO PRINT SINGLE SPECIFIED CELL TEXT[CURRENT_ROW][CURRENT COLUMN] FROM CSV HERE 
                  annotation = get_annotation_input()
                  if annotation == 2:
                      edited_response = input("Edit the response: " )
                  else:
                      edited_response = "CAN NOT BE EDITED"

                      with open("annotations.json", mode='a') as annotation_file:
                          annotation_data = {'annotator' : annotator, 'row_number': current_row, 'question_number': header[current_column], 'annotation' : categories[str(annotation)], 'edited' : edited_response}
                          json.dump(annotation_data, annotation_file)
                          annotation_file.write('\n')



if __name__ == "__main__":
    annotate()
</code></pre>
<p><a href="https://i.stack.imgur.com/xATtX.png" rel="nofollow noreferrer">CSV file 'annotations_full.csv </a>
<a href="https://i.stack.imgur.com/wNHtu.png" rel="nofollow noreferrer">CSV file 'results.csv'</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you want want to access / view / print the specified cell value, then you can do the following:</p>
<p>CSV File: <code>simple.csv</code></p>
<pre><code>name,department,birthday month
John Smith,Accounting,November
Erica Meyers,IT,March
</code></pre>
<p>Python code to access specified code:</p>
<pre><code>import csv
with open('simple.csv', newline='') as csvfile:
    temp_reader = csv.reader(csvfile, delimiter=',')
    data = list(temp_reader)
row_val, col_val = 2, 1
try:
    print(data[row_val][col_val])
except IndexError:
    print('No data found')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The code snippet below focuses on accessing cells of <code>results.csv</code>, based on coordinates provided in <code>annotations_full.csv</code></p>
<p>It first creates a list of dicts (OrderedDicts as of Python 3.6) by iterating over a <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>csv.DictReader</code></a> instance on <code>results.csv</code>.</p>
<p>It then iterates over a <code>DictReader</code> instance on <code>annotations_full.csv</code>, fetching the coordinates for the lookup of the <code>results.csv</code> cells and prints the cell content, along with some safeguards for invalid column names and row numbers.<br/>
Note the <code>[rnum - 1]</code> used to provide the index for the <code>result_content</code> list. Python lists are zero-based; unless the row numbers in <code>annotations_full.csv</code> account for that (e.g. the first row in <code>results.csv</code> is referenced with the row number <code>0</code>) you need that to access the correct list element.</p>
<pre><code>import csv

annos = "annotations_full.csv"
results = "results.csv"

with open(results) as r:
    result_content = [row for row in csv.DictReader(r)]

with open(annos) as a:
    for row in csv.DictReader(a):
        rnum = int(row['row_number'])
        qnum = row['question_number']
        print("Result for question {} row {}:".format(qnum, rnum)
        try:
            print(result_content[rnum - 1][qnum])
        except KeyError:
            print("no column '{}' in {}".format(qnum, results))
        except IndexError:
            print("column '{}' has no row {} in {}".format(qnum, rnum, results))
</code></pre>
<p>Content of sample <code>annotations_full.csv</code>:</p>
<pre><code>row_number,question_number
5,Q5.3
6,Q5.1
2,Q2.1
1,Q3.3
</code></pre>
<p>Content of sample <code>results.csv</code>:</p>
<pre><code>Q5.3,Q5.1,Q2.1,Q3.3
result Q5.3-1,result Q5.1-1,result Q2.1-1,result Q3.3-1
result Q5.3-2,result Q5.1-2,result Q2.1-2,result Q3.3-2
result Q5.3-3,result Q5.1-3,result Q2.1-3,result Q3.3-3
result Q5.3-4,result Q5.1-4,result Q2.1-4,result Q3.3-4
result Q5.3-5,result Q5.1-5,result Q2.1-5,result Q3.3-5
result Q5.3-6,result Q5.1-6,result Q2.1-6,result Q3.3-6
</code></pre>
<p>Output of the code snippet using the sample files:</p>
<pre><code>Result for question Q5.3 row 5:
result Q5.3-5
Result for question Q5.1 row 6:
result Q5.1-6
Result for question Q2.1 row 2:
result Q2.1-2
Result for question Q3.3 row 1:
result Q3.3-1
</code></pre>
</div>
<span class="comment-copy">can you share a sample of your csv, and your desired output</span>
<span class="comment-copy">@Jeril yes of course! I actually had two csv files, the first one, I extracted the rows and column indexes to be able to access specific data from the second csv. The second csv has categories for questions and then responses under each one. I want to be able to access the str output for the [row][column] that I had extracted from the first csv. I am new to stack overflow so I am having difficulty posting it :(</span>
<span class="comment-copy">you need to show some 5 lines in the csv, and what output you need from the 5 rows. Just an example is enough. And you need to update these in the question.</span>
<span class="comment-copy">@Jeril I think I was able to uoload it successfully :)  I would like to print the specified field in the portion of the code where I have indicated as a comment " #print specified row, column cell from csv file"</span>
<span class="comment-copy">what exactly you wan to do with the csv</span>
<span class="comment-copy">This solutions did not work :(</span>
<span class="comment-copy">what is the problem that you are facing</span>
<span class="comment-copy">index error out of range</span>
<span class="comment-copy">I have updated the solution, can you check now</span>
<span class="comment-copy">it still has the index error, but thank you for trying!</span>
<span class="comment-copy">I tried this as well and I think I may be implementing wrong (although I tried to follow it exactly) I appended the code to the original question</span>
<span class="comment-copy">@JosephAbraham, honestly, we have a hard time reproducing your problem/guessing your goal. Your code example references names (<code>get_annotation_input</code>, <code>categories</code>) that are not defined in the snippet. The only changes I see in your 2nd snippet are the declaration of <code>OTHER</code>, which you never use, the declarartion of <code>input_file</code>, which you never use and the addition of that contextmanager on <code>annotation_file</code> which looks like it should not only be executed when <code>annotation != 0</code>.</span>
<span class="comment-copy">my apologies, I have just been looking at this and been unsuccessful for many hours. I uploaded the full code to see if it would be easier to follow now.</span>
<span class="comment-copy">@JosephAbraham It is unclear what you are trying to achieve. The code uses two csv files, <code>annotations_full.csv</code> and <code>results.csv</code>. It looks like you want to iterate through the content of one of those files and, in each iteration, retrieve corresponding data from the other file. You had a screenshot attached from <i>one</i> of those files. From the code you share here, we have to guess which of the two files that was and what the other one might look like. We have to make too many assumptions. Please try to be provide us with complete, precise information.</span>
<span class="comment-copy">@schmee I have uploaded snippets of both csv files</span>
