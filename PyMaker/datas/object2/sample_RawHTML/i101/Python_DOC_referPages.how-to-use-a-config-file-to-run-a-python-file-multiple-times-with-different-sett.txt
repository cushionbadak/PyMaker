<div class="post-text" itemprop="text">
<p>I have one <strong>python script</strong> with it's settings in one seperate <strong>json config file</strong>. The json file looks like this: </p>
<pre><code>{
  "connection" : {
      "db_server" : "server",
      "db_name" : "table1", 
      "db_user" : "user1", 
}}
</code></pre>
<p>Now I need to run the same python file more than one time, each with other settings in the config file. The other settings would look like this:</p>
<pre><code>{
  "connection" : {
      "db_server" : "server",
      "db_name" : "table2", 
      "db_user" : "user2", 
}}
</code></pre>
<p>I don't need to change anything in the Python script. I open the json file in my Python script like this:</p>
<pre><code>with open('settings.json') as json_data_file:
    data = json.load(json_data_file)
    json_data_file.close()
</code></pre>
<p>Since you cannot add comments in a json file, I don't know the easiest way to do this. I want the Python script to run simultaneously two times, each time with other settings for the json file.</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>After launching the the python script, you can just modify the config file inplace and run it a second time. This won't affect the already-running python program because they already read the config.</li>
<li>Or you can have multiple config files with different names, and run the script with some command line argument (i.e. <code>sys.argv[1]</code>) to choose which config file to use. I personally recommend this approach.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>A simple solution is a new script that parses your JSON file, imports your Python scripts, and then executes that scripts with different parameters using <a href="https://docs.python.org/3/library/concurrent.futures.html" rel="nofollow noreferrer">concurrent</a>. </p>
<p>An example <a href="https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor" rel="nofollow noreferrer">(adapted from the example for ThreadPoolExecutor)</a>:</p>
<pre><code>import concurrent.futures
import json
from YourModule import MainFunction

# First, open and load your JSON file
parameter_dict = json.load(open('yourfilename.json'))

# Do some parsing to your parameters in order
# (In your case, servers, tables, and users)
parameters_to_submit = [[entry['db_server'], entry['db_table'], entry['db_user'] for entry in parameter_dict.values()]

# Now, generate a ThreadPool to run your script multiple times
with concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor:
    # Submit the function + parameters to the executor
    submitted_runs = {
        executor.submit(MainFunction, params[0], params[1], params[2]): params
        for params in parameters_to_submit
    }

    # as the results come in, print the results
    for future in concurrent.futures.as_completed(submitted_runs):
        url = submitted_runs[future]
        try:
            data = future.result()
        except Exception as exc:
            print(f'Script generated an exception: {exc}')
        else:
            # if need be, you could also write this data to a file here
            print(f'Produced result {data}')
</code></pre>
</div>
<span class="comment-copy">Please post some samples.</span>
<span class="comment-copy">So your script is editing the json and then running again, or you are planning to go in and manually edit the json and then rerun the script?</span>
<span class="comment-copy">@Reedinationer The script isn't editing the json file, I'm planning to manually edit the json and run the script but I don't know if this is the best way to do it.</span>
