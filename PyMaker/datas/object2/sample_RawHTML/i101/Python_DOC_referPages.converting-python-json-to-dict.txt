<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7771011/parse-json-in-python">Parse JSON in Python</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I am calling an API which returns a complicated json:</p>
<pre><code>{"results": [{"attrs": {"name": "par.abd","state": 1.0},
              "joins": {},
              "meta": {},
              "name": "par.abd",
              "type": Host"
             },
             {"attrs": {"name": "bbc.abd","state": 1.0},
              "joins": {},
              "meta": {},
              "name": "bbc.abd",
              "type": "Host"
             }]}
</code></pre>
<p>How do I extract just the name and state for attrs? </p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a> module:</p>
<pre><code>import json

json_string = """{"results": [{"attrs": {"name": "par.abd","state": 1.0},"joins": {},"meta": {},"name": "par.abd","type": "Host"},{"attrs": {"name": "bbc.abd","state": 1.0},"joins": {},"meta": {},"name": "bbc.abd","type": "Host"} ]}"""
data = json.loads(json_string)

for res in data['results']:
    print(res['attrs']['name'], res['attrs']['state'])


# par.abd 1.0
# bbc.abd 1.0
</code></pre>
<p>Note that I had to add a missing <code>"</code> near the end of your string - I hope it only disappeared when you copied it here.</p>
</div>
<div class="post-text" itemprop="text">
<p>As @Aran-Fey suggested, you should use the <a href="https://docs.python.org/3.7/library/json.html" rel="nofollow noreferrer">json</a> module, which turns the JSON string into Python dicts and lists.</p>
<pre><code>import json

json_string = '{"results": [{"attrs": {"name": "par.abd","state": 1.0},"joins": {},"meta": {},"name": "par.abd","type": "Host"},{"attrs": {"name": "bbc.abd","state": 1.0},"joins": {},"meta": {},"name": "bbc.abd","type": "Host"} ]}'
data = json.loads(json_string)
for item in data['results']:
    attrs = item['attrs']
    print(attrs['name'], attrs['state'])
</code></pre>
<p>Btw, there's a syntax error in your JSON example. A double quote is missing before the first occurrence of 'Host'.</p>
</div>
<div class="post-text" itemprop="text">
<p>Pretty much the same answer as Thierry.
Same issue with the json being invalid.</p>
<pre><code>import json
text = '''{
    "results": [
        {
            "attrs": {
                "name": "par.abd",
                "state": 1.0
            },
            "joins": {
            },
            "meta": {
            },
            "name": "par.abd",
            "type": "Host"
        },
        {
            "attrs": {
                "name": "bbc.abd",
                "state": 1.0
            },
            "joins": {
            },
            "meta": {
            },
            "name": "bbc.abd",
            "type": "Host"
        }
    ]
}
'''
payload = json.loads(text)
results = payload['results']
for result in results:
    attrs = result['attrs']
    name = attrs['name']
    state = attrs['state']
    print("name: %s state: %s"%(name,state))
</code></pre>
</div>
<span class="comment-copy">What is your input type? A string?</span>
<span class="comment-copy">you can use <code>import ast; ast.literal_eval(your_string)</code> to convert string to dict. see here: <a href="https://stackoverflow.com/questions/988228/convert-a-string-representation-of-a-dictionary-to-a-dictionary" title="convert a string representation of a dictionary to a dictionary">stackoverflow.com/questions/988228/â€¦</a></span>
<span class="comment-copy">@shotgunner The OP said it's JSON and you recommend using <code>ast</code> to parse it? Surely you must be joking. That's <i>clearly</i> not the right tool for the job.</span>
<span class="comment-copy">Siong: this is JSON, not Python</span>
<span class="comment-copy">If it's JSON, use the <code>json</code> module to parse it. Not anything else.</span>
