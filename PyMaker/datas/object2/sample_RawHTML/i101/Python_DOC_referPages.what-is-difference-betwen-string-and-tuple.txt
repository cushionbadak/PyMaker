<div class="post-text" itemprop="text">
<p>Can anyone explain what is difference between string and tuple</p>
<pre><code>a="string"
b=("s","t","r","i","n","g")
</code></pre>
<p>both are immutable.</p>
</div>
<div class="post-text" itemprop="text">
<p>They're different types.</p>
<pre><code>"str" in a  # True
("s", "t", "r") in b  # False
</code></pre>
<p>Which means they have different methods, different use cases, different meanings, different implementations, etc. etc. etc....  Consider:</p>
<pre><code>datapoint_tuple = (datetime.datetime.now(), 42)
datapoint_str = ...???
</code></pre>
<p>Essentially the only thing they have in common is their immutability.</p>
</div>
<div class="post-text" itemprop="text">
<p>A <strong>string</strong> is a sequence of unicode characters with quotation marks on either side of the sequence.</p>
<p>Example: <code>mystring = "this is a string"</code></p>
<p>A <strong>tuple</strong> is an ordered sequence of objects or characters separated by commas with parentheses on either side of the sequence.</p>
<p>Example: <code>mytuple = (7, "u", "p", 1, "e')</code></p>
<p>They are, however, similar in the fact that they are both immutable</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Strings</strong> are immutable in python which means it cannot be changed once created, if you want to update it then a new string is to be created for example.</p>
<pre><code>s="Abcdef"
c=s+'112'
print s,c
</code></pre>
<p>you can extract value using index, find values but cannot modify it</p>
<p>To access substrings, use the square brackets for slicing along with the index or indices to obtain your substring </p>
<p><strong>Tuple</strong> they are immutable like strings and sequence like lists.They are used to store data just like list, just like string you cannot update or edit the tuple to change it you have to create a new one just like strings.Tuples can be created using parenthesis () and data is inserted using comas.</p>
<pre><code>t1=(1,2,3,'hi')
print type(t1)
print t1  
</code></pre>
<p><a href="https://i.stack.imgur.com/VAIHW.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/VAIHW.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>tuple use a trailing comma:</p>
<pre><code>tuple_a = 'a',
print(type(tuple_a)) # &lt;class 'tuple'&gt;
</code></pre>
<p>string don't use:</p>
<pre><code>string_a = 'a'
print(type(string_a)) # &lt;class 'str'&gt;
</code></pre>
<p>but string and tuple has some same characteristics。
eg:
1、indexing and slicing</p>
<pre><code>string_same = 'string'
tuple_same = ('s', 't', 'r', 'i', 'n', 'g')
print(string_same[0], tuple_same[0]) # s s
print(string_same[:-1], tuple_same[:-1]) # strin ('s', 't', 'r', 'i', 'n')
</code></pre>
<p>2、Immutability
means string and tuple not suport item assigment</p>
<pre><code>string_same[0] = 'python_'
tuple_same[0] = 'python_'
TypeError: 'str' object does not support item assignment
TypeError: 'tuple' object does not support item assignment
</code></pre>
<p>you could find all of the diffrent from the Doc.
including other tyeps build-in types.
<a href="https://docs.python.org/3/library/stdtypes.html?highlight=tuple#tuple" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html?highlight=tuple#tuple</a></p>
</div>
<span class="comment-copy">Basically everything? Eg <code>print(a)</code> and <code>print(b)</code> are different, you can't <code>.split</code>, <code>.join</code>, <code>.trim</code> etc on a tuple.</span>
<span class="comment-copy">Everything except the fact that both are immutable.</span>
<span class="comment-copy">Actually you should ask "what is the same between string and tuple"</span>
<span class="comment-copy">Try calling string methods on your tuple.</span>
<span class="comment-copy">Note that <code>b</code> is a tuple <i>of</i> strings, so the better question might be "What is the difference between <code>"string"</code> and <code>(,)</code>"</span>
<span class="comment-copy">An interesting point that's relevant to this: in some languages (though not Python) a valid question would be "What's the difference between a string and a <i>list</i>." Many languages implement strings as a naive list of <code>Char</code> values.</span>
<span class="comment-copy">tuples certainly don't have to be characters -- they contain arbitrary heterogeneous python values (see my use of a <code>datetime.DateTime</code> in my answer). Also perhaps worth pointing out that strings are only unicode (by default) in Python3, though I may be stretching the word "Worth" there :)</span>
<span class="comment-copy">Just to split the hair further: characters <i>are</i> objects, so saying "objects or characters" is redundant. Really, though, it's fine :)</span>
<span class="comment-copy">@AdamSmith lol you sound like me nitpicking everything :).  tbh you deserve the accepted answer</span>
