<div class="post-text" itemprop="text">
<p>After watching some Coding Train, I tried to make a Lissajous Curve Table in python. I successfully made circles, orbiting dots, and lines. 
However, I cannot seem to get the actual curves drawn. I created a list called positions which takes the x_ and y_ values from the rows and columns, but the animation only draws the bottom right circle. I cannot figure out my error. 
My full code on GitHub: <a href="https://github.com/JacketSnatcher/LissajousCurveTable" rel="nofollow noreferrer">LissajousCurveTable</a></p>
<pre><code>    width, height = 800, 800
name_of_window = ""
pygame.init()
window = pygame.display.set_mode((width, height))
pygame.display.set_caption(name_of_window)
clock = pygame.time.Clock()
angle = 1
circle_diameter = int(width / 10)
columns = int(width / circle_diameter) - 1
rows = int(height / circle_diameter) - 1
circle_diameter_draw = circle_diameter - 10
r = circle_diameter_draw / 2
position = []

is_running = True

while is_running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            is_running = False

    window.fill((0, 0, 0))

    for column in range(columns):
        # the circle x location
        cx = circle_diameter + column * circle_diameter + int(circle_diameter_draw / 2)
        # the circle y location
        cy = circle_diameter_draw / 2 + circle_diameter_draw / 10
        # the dot x location
        x = r * math.cos(angle * (column + 1))
        # the dot y location
        y = r * math.sin(angle * (column + 1))
        # draws circle
        pygame.draw.circle(window, (255, 255, 255), [cx, int(cy)], int(r), 1)
        # draws dot
        pygame.draw.circle(window, (255, 255, 255), [int(x + cx), int(y + cy)], 5)
        # draws line from dot pos
        pygame.draw.line(window, (255, 255, 255), (cx + x, cy + y), (cx + x, height), 1)
        angle += 0.001
        # adds the x
        x_ = cx + x

    for row in range(rows):
        # the circle y location
        cy = circle_diameter + row * circle_diameter + int(circle_diameter_draw / 2)
        # the circle x location
        cx = circle_diameter_draw / 2 + circle_diameter_draw / 10
        # the dot x location
        x = r * math.cos(angle * (row + 1))
        # the dot y location
        y = r * math.sin(angle * (row + 1))
        # draws circle
        pygame.draw.circle(window, (255, 255, 255), [int(cx), int(cy)], int(r), 1)
        # draws dot
        pygame.draw.circle(window, (255, 255, 255), [int(x + cx), int(y + cy)], 5)
        # draws line from dot pos
        pygame.draw.line(window, (255, 255, 255), (cx + x, cy + y), (width, cy + y), 1)
        angle += 0.001
        y_ = cy + y

    # adds the values to the
    position.append([x_, y_])

    for i in range(len(position)):
        pygame.draw.circle(window, (255, 255, 255), (int(position[i][0]), int(position[i][1])), 1)
</code></pre>
<p><a href="https://i.stack.imgur.com/BSy2N.png" rel="nofollow noreferrer"><img alt="Picture of Program" src="https://i.stack.imgur.com/BSy2N.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You've to add the permutations of the positions <code>(_x, _y)</code> which are calculated in each frame to the container <code>position</code>, rather than a single position per frame.  </p>
<p><a href="https://docs.python.org/3/library/functions.html#round" rel="nofollow noreferrer"><code>round()</code></a> the coordinates to integral values and only add unique coordinates to the container. Note, the coordinate of a pixel is integral. Drawing a point twice, doesn't make it "whiter".</p>
<p>Use a <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer"><code>set()</code></a> rathet than a list to store the unique postions</p>
<pre class="lang-py prettyprint-override"><code>position = set()  

while is_running:
    # [...]

    lx_ = []
    for column in range(columns):

        # [...]

        # adds the x
        lx_.append(int(round(cx + x)))

    ly_ = []
    for row in range(rows):

        # [...]

        # adds the y
        ly_.append(int(round(cy + y)))

    # adds the values to the
    position.update([(x_, y_) for x_ in lx_ for y_ in ly_])

    for pos in position:
        pygame.draw.circle(window, (255, 255, 255), pos, 1)
</code></pre>
<p><a href="https://i.stack.imgur.com/CoB4G.png" rel="nofollow noreferrer"><img alt="" src="https://i.stack.imgur.com/CoB4G.png"/></a></p>
</div>
