<div class="post-text" itemprop="text">
<p>I try crawling movie site.
No error, but no result
There's no iframe. And I choose select location 
through chrome &gt; F12 &gt; Copy &gt; Copy selector</p>
<p>Site Link is <a href="http://ticket.cgv.co.kr/Reservation/Reservation.aspx?MOVIE_CD=&amp;MOVIE_CD_GROUP=&amp;PLAY_YMD=&amp;THEATER_CD=&amp;PLAY_NUM=&amp;PLAY_START_TM=&amp;AREA_CD=&amp;SCREEN_CD=&amp;THIRD_ITEM=" rel="nofollow noreferrer">CGV movie</a></p>
<p><a href="https://i.stack.imgur.com/u3GOt.png" rel="nofollow noreferrer">Element what i select</a></p>
<pre><code>import requests
from bs4 import BeautifulSoup
import json
import os

## python file location
BASE_DIR = os.path.dirname(os.path.abspath(__file__))

req = requests.get('http://ticket.cgv.co.kr/Reservation/Reservation.aspx?MOVIE_CD=&amp;MOVIE_CD_GROUP=&amp;PLAY_YMD=&amp;THEATER_CD=&amp;PLAY_NUM=&amp;PLAY_START_TM=&amp;AREA_CD=&amp;SCREEN_CD=&amp;THIRD_ITEM=')
html = req.text
soup = BeautifulSoup(html, 'html.parser')
movie_titles = soup.select(
    '#movie_list &gt; ul &gt; li &gt; a &gt; span.text'
    )

data = {}

for title in movie_titles:
    data = title.text + "\n"

with open(os.path.join(BASE_DIR, 'result.json'), 'w+') as json_file:
    json.dump(data, json_file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The data you want is dynamically loaded. Use a method like selenium e.g.</p>
<pre><code>from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

url = 'http://ticket.cgv.co.kr/Reservation/Reservation.aspx?MOVIE_CD=&amp;MOVIE_CD_GROUP=&amp;PLAY_YMD=&amp;THEATER_CD=&amp;PLAY_NUM=&amp;PLAY_START_TM=&amp;AREA_CD=&amp;SCREEN_CD=&amp;THIRD_ITEM='
driver = webdriver.Chrome()
driver.get(url)
data = [item.text for item in WebDriverWait(driver,10).until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, "#movie_list &gt; ul &gt; li &gt; a &gt; span.text")))]
print(data)
</code></pre>
<p>You can shorten your css selector to</p>
<pre><code>#movie_list .text
</code></pre>
</div>
<span class="comment-copy">Thanks. What you teach me acts very well! But can't I crawling without selenium? Why my code not act? I want to know "dynamically loaded" means.</span>
<span class="comment-copy">The data you want isn't loaded by the time requests is done. You need a method like selenium which allows javascript to run on this page so your content is available. I add a wait condition to ensure that data is present. Other pages you may be able to use requests only.</span>
<span class="comment-copy">Your code + options.add_argument('headless') = act very well!!! very thank you. stackoverflow very kind and usefull!</span>
