<div class="post-text" itemprop="text">
<p>I'm trying to make some kind of static inheritance happen.
The code below prints "nope".
I'm not sure how to explain myself but what I want is that
class A uses B's method if it exists.</p>
<pre><code>class A(object):
    @staticmethod
    def test():
       print("nope")

    @staticmethod
    def test2():
        __class__.test()

class B(A):
    @staticmethod
    def test():
        print("It Works")

    @staticmethod
    def run():
        __class__.test2()


if __name__ == "__main__":
    B.run()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>__class__</code> as a closure reference was never meant to be used as a reference to the current <em>instance</em> type; it'll always refer to the class you defined a method on (e.g. <code>A</code> for <code>A.test2</code>). It is a internal implementation detail used by the <code>super()</code> function. Don't use it here.</p>
<p>Use <a href="http://docs.python.org/3/library/functions.html#classmethod"><code>@classmethod</code></a> instead; </p>
<pre><code>class A(object):
    @classmethod
    def test(cls):
       print("nope")

    @classmethod
    def test2(cls):
        cls.test()

class B(A):
    @classmethod
    def test(cls):
        print("It Works")

    @classmethod
    def run(cls):
        cls.test2()


if __name__ == "__main__":
    B.run()
</code></pre>
</div>
<span class="comment-copy">Then don't use static methods. Use class methods instead.</span>
<span class="comment-copy">If you are looking for <i>static</i> inheritance, chances are high that you are doing something wrongâ€¦</span>
<span class="comment-copy">Thanks a lot! I love this site!</span>
