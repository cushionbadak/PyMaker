<div class="post-text" itemprop="text">
<p>I have a dictionary named "location" like this:</p>
<pre><code>{
    'WA': [
        '47.3917',
        '-121.5708'
    ],
    'VA': [
        '37.7680',
        '-78.2057'
    ],
    ...
}
</code></pre>
<p>I want to convert to a dic that the value is a float, so it looks like:</p>
<pre><code>{
    'WA': [
        47.3917,
        -121.5708
    ],
    'VA': [
        37.7680,
        -78.2057
    ],
    ...
}
</code></pre>
<p>I tried </p>
<pre><code>for key in location.keys():
    location[key] = float(location[key][0,1])
print location
</code></pre>
<p>it gives me an arror that "float() argument must be a string or a number"</p>
<p>how can I fix that?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is in here:  <code>float(location[key][0,1])</code></p>
<pre><code># float objects are length 1
for key in location.keys():
    location[key] = [float(location[key][0]),float(location[key][1])]
print location
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use dictionary comprehension to construct a dictionary which has the values converted to floats, like this</p>
<pre><code>print {k:map(float, locations[k]) for k in locations}
</code></pre>
<p>As suggested by <a href="https://stackoverflow.com/questions/22590035/convert-the-value-of-dictionary-from-list-to-float/22590051#comment34391397_22590051">@Grijesh in the comments section</a>, if you are using Python 3,</p>
<pre><code>print({k:list(map(float, locations[k])) for k in locations})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension <em>within</em> a dictionary comprehension. Since you need both keys and values, use <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer"><code>dict.items</code></a> to iterate key-value pairs:</p>
<pre><code>res = {k: [float(x) for x in v] for k, v in locations.items()}
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> works more efficiently with built-ins, so you may wish to use:</p>
<pre><code>res = {k: list(map(float, v)) for k, v in locations.items()}
</code></pre>
<p>Or, since you have coordinates, for tuple values:</p>
<pre><code>res = {k: tuple(map(float, v)) for k, v in locations.items()}
</code></pre>
<p>The problem with your logic <code>location[key][0,1]</code> is Python lists do not support vectorised indexing, so you need to be explicit, e.g. the verbose <code>[float(location[key][0]), float(location[key][1])]</code>.</p>
</div>
<span class="comment-copy">Given that these appear to be coordinates, it makes much more sense to store it as an unmutable tuple rather than a list of two items. Consider doing that.</span>
<span class="comment-copy">I am wondering how did you get that error, are those actual Python lists? Because Python list won't allow you to index using tuple.</span>
<span class="comment-copy">@Aशwiniचhaudhary In question OP's typo -- written <code>,</code> instead of <code>:</code></span>
<span class="comment-copy">Not really an addition to this answer, but I'd like to +1 because of showing what the problem is. Not just simply pasting a piece of code: 'this works'.</span>
<span class="comment-copy">thank you very much</span>
<span class="comment-copy"><code>list(map(float, locations[k]) )</code> for python3</span>
<span class="comment-copy">Slightly shorter <code>{k: map(float, v) for k, v in locations.iteritems()}</code>, or the equivalent in python 3: <code>{k: list(map(float, v)) for k, v in locations.items()}</code></span>
<span class="comment-copy">Althou as <a href="https://stackoverflow.com/questions/22590035/convert-the-value-of-dictionary-from-list-to-float#comment34391439_22590035">Joost mentions</a>, <code>tuple</code> might make more sense here than <code>list</code></span>
<span class="comment-copy">thank you very much</span>
