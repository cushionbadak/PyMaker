<div class="post-text" itemprop="text">
<p>I have a list that contains other lists with coordinates for multiple tile positions and I need to check if that list contains another list of coordinates, like in this example:</p>
<pre><code>totalList = [ [[0,1], [2,7], [6,3]], [[2,3], [6,1], [4,1]] ]

redList = [ [0,1], [2,7], [6,3] ]

if totalList contains redList:
   #do stuff
</code></pre>
<p>Can you please help me find out how to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use a containment test:</p>
<pre><code>if redList in totalList:
</code></pre>
<p>This returns <code>True</code> for your sample data:</p>
<pre><code>&gt;&gt;&gt; totalList = [ [[0,1], [2,7], [6,3]], [[2,3], [6,1], [4,1]] ]
&gt;&gt;&gt; redList = [ [0,1], [2,7], [6,3] ]
&gt;&gt;&gt; redList in totalList
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use the <code>in</code> operator:</p>
<pre><code>&gt;&gt;&gt; totalList = [ [[0,1], [2,7], [6,3]], [[2,3], [6,1], [4,1]] ]
&gt;&gt;&gt; redList = [ [0,1], [2,7], [6,3] ]
&gt;&gt;&gt; redList in totalList
True
&gt;&gt;&gt; if redList in totalList:
...     print('list found')
...
list found
&gt;&gt;&gt;
</code></pre>
<p>From the <a href="http://docs.python.org/3/reference/expressions.html#in" rel="nofollow">docs</a>:</p>
<blockquote>
<p>The operators <code>in</code> and <code>not in</code> test for membership. <code>x in s</code> evaluates to
  true if <code>x</code> is a member of <code>s</code>, and false otherwise. <code>x not in s</code> returns
  the negation of <code>x in s</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>in</code> keyword to determine if a <code>list</code> (or any other Python container) contains an element:</p>
<pre><code>totalList = [ [[0,1], [2,7], [6,3]], [[2,3], [6,1], [4,1]] ]
redList = [ [0,1], [2,7], [6,3] ]
redList in totalList
</code></pre>
<p>returns</p>
<pre><code>True
</code></pre>
<hr/>
<p>So if you do:</p>
<pre><code>if redList in totalList:
    #do stuff
</code></pre>
<p>Your code will then <code>do stuff</code>.</p>
<hr/>
<blockquote>
<p>I need to know if totalList contains a list that has exactly the same elements as redList.</p>
</blockquote>
<p>We see that list implements <code>__contains__</code></p>
<pre><code>&gt;&gt;&gt; help(list.__contains__)
Help on wrapper_descriptor:

__contains__(...)
    x.__contains__(y) &lt;==&gt; y in x
</code></pre>
<p>and from the docs:</p>
<blockquote>
<p><code>__contains__</code>
<a href="http://docs.python.org/2/reference/expressions.html#membership-test-details" rel="nofollow">Called to implement membership test operators. Should return true if item is in self, false otherwise.</a> </p>
</blockquote>
<p>And:</p>
<blockquote>
<p><a href="http://docs.python.org/2/reference/expressions.html#not-in" rel="nofollow">The operators in and not in test for collection membership.</a> x in s evaluates to true if x is a member of the collection s, and false otherwise. x not in s returns the negation of x in s. The collection membership test has traditionally been bound to sequences; an object is a member of a collection if the collection is a sequence and contains an element equal to that object. However, it make sense for many other object types to support membership tests without being a sequence. In particular, dictionaries (for keys) and sets support membership testing.</p>
<p>For the list and tuple types, x in y is true if and only if there
  exists an index i such that x == y[i] is true.</p>
</blockquote>
<p>So we know that one of the elements must be equal to that of redList.</p>
</div>
