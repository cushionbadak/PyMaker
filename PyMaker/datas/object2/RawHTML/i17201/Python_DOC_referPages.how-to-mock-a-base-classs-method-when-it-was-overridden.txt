<div class="post-text" itemprop="text">
<p>I have a code similar to this:</p>
<pre><code>from mock import MagicMock


class Parent(object):

    def test_method(self, param):
        # do something with param
        pass


class Child(Parent):

    def test_method(self, param):
        # do something Child-specific with param
        super(Child, self).test_method(param)
</code></pre>
<p>Now I want to make sure that <code>Child.test_method</code> calls <code>Parent.test_method</code>. For this, I'd like to use <code>assert_called_once_with</code> from the <a href="http://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mock</a> module/library. However, I cannot figure out a way to do this. If the method would not be overridden by the subclass this would be easy as pointed out by <a href="https://stackoverflow.com/questions/20530921/need-to-mock-out-some-base-class-behavior-in-a-python-test-case">Need to mock out some base class behavior in a python test case</a>. However, in my case this is the same method, so what do I do?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/dev/library/unittest.mock.html#patch-object" rel="nofollow">patch.object</a>:</p>
<pre><code>with mock.patch.object(Parent, 'test_method') as mock_method:
    child = Child()
    mock_param = mock.Mock()
    child.test_method(mock_param)
    mock_method.assert_called_with(mock_param)
</code></pre>
</div>
