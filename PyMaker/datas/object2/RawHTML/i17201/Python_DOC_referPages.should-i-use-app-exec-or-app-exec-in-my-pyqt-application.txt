<div class="post-text" itemprop="text">
<p>I use Python 3 and PyQt5. Here's my test PyQt5 program, focus on the last 2 lines:</p>
<pre><code>from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
import sys

class window(QWidget):
def __init__(self,parent=None):
    super().__init__(parent)
    self.setWindowTitle('test')
    self.resize(250,200)

app=QApplication(sys.argv)
w=window()
w.show()
sys.exit(app.exec())
#sys.exit(app.exec_())
</code></pre>
<p>I know <code>exec</code> is a language keyword in Python. But code on <a href="http://pyqt.sourceforge.net/Docs/PyQt5/pyqt4_differences.html#object-destruction-on-exit" rel="noreferrer">Official PyQt5 Documentation</a> <em>(specifically the <strong>Object Destruction on Exit</strong> part)</em>. I see that example shows use of <code>app.exec()</code> which confuses me.</p>
<p>When I tested it on my machine. I found there is no any visible difference from my end. Both with and without <code>_</code> produces the same output in no time difference.</p>
<p>My question is:</p>
<ul>
<li>Is there anything wrong going when I use <code>app.exec()</code>? like clashing with Python's internal <code>exec</code>? I suspect because both <code>exec</code>'s are executing something.</li>
<li>If not, can I use both interchangeably?</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>That's because until Python 3, <code>exec</code> <a href="http://docs.python.org/2.7/reference/lexical_analysis.html#keywords">was a reserved keyword</a>, so the PyQt devs added underscore to it. From Python 3 onwards, <code>exec</code> is <a href="http://docs.python.org/3/reference/lexical_analysis.html#keywords">no longer a reserved keyword</a> (because it is a builtin function; same situation as <code>print</code>), so it made sense in PyQt5 to provide a version without an underscore to be consistent with C++ docs, but keep a version with underscore for backwards compatibility. So for PyQt5 with Python 3, the two <code>exec</code> functions are the same. For older PyQt, only <code>exec_()</code> is available. </p>
</div>
<div class="post-text" itemprop="text">
<p>On the question of whether to prefer one over the other: using <code>exec_</code> means you have one less thing to worry about if you ever decide to add support for PyQt4 and/or Python &gt;= 2.6, and want to maintain a single code-base.</p>
</div>
<span class="comment-copy">In PyQt5, you don't need <code>sys.exit()</code> at all. <code>app.exec_()</code> or <code>app.exec()</code> alone is enough and it works normally. They fixed some things in PyQt5 under the hood so that you don't need that <code>sys.exit()</code> anymore. If you want your code to run on PyQt4, then have <code>sys.exit()</code> there. Also, <code>app.exec_()</code> and <code>app.exec()</code> are interchangable, so you can use whichever you like. If you want your code to run on PyQt4 as well, then stick with <code>app.exec_()</code>. So, the bottom line is: for your code to work properly on PyQt5 <b>and</b> PyQt4, use <code>sys.exit(app.exec_())</code>.</span>
<span class="comment-copy">@ Boštjan Mejak.. hoora for your comment and explenation! More upvotes needed for sure! First comment so far I found that explains these minor differences that I noticed in the code. The change from pyqt4 to pyqt5 is like learning to read again (have to admit.. 10 years not programming makes one a bit rusty.. and python popping a few funballs under the hood too).</span>
<span class="comment-copy">@BoštjanMejak: you do need <code>sys.exit()</code> otherwise <code>app.exit(1)</code> call doesn't lead to the corresponding exit status i.e., even on Python 3 and PyQt5, use <code>sys.exit(app.exec())</code>.</span>
<span class="comment-copy">In PyQt5, they’ve fixed the order in which Qt and Python stop their process and so now we really don’t need to use sys.exit() call anymore. It’s all explained in the PyQt5 documentation.</span>
<span class="comment-copy">@BoštjanMejak: <i>wrong</i>. Here's a <a href="https://gist.github.com/zed/7219ddf356e25bfd9527c2762729b5d3" rel="nofollow noreferrer">minimal code example</a>. btw, use \@ syntax if you want me to be notified about your comments.</span>
<span class="comment-copy">I think you mean Python &lt;= 2.99, right? (Or Python2 &gt;= 2.6.).</span>
<span class="comment-copy">@FeRD. No. I mean that <code>exec_</code> will work with any version of python equal to or greater than 2.6 in combination with either pyqt4 or pyqt5. Earlier versions of python are not supported by pyqt. So <code>exec_</code> is both forwards and backwards compatible with both pyqt4 and pyqt5, and any version of python &gt;= 2.6 (I doubt whether python-3.0.x is really viable, though).</span>
