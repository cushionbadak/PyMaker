<div class="post-text" itemprop="text">
<p>Here is my code</p>
<pre><code>N = namedtuple("N", ['ind', 'set', 'v'])
def solve()
    items=[]
    stack=[]
    R = set(range(0,8))
    for i in range(0,8):
        items.append(N(i,R,8))      
        stack.append(N(0,R-set(range(0,1)),i))
    while(len(stack)&gt;0): 
        node = stack.pop()
        print node
        print items[node.ind]   
        items[node.ind].v = node.v
</code></pre>
<p>In the last line I cant set the <code>items[node.ind].v</code> value to <code>node.v</code> as I want, and am getting the error </p>
<pre><code>"AttributeError: can't set attribute"
</code></pre>
<p>I don't know what's wrong but it must be something based on syntax as using statements like <code>node.v+=1</code> is also showing same error. I'm new to Python, so please suggest a way to make the above change possible.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>items[node.ind] = items[node.ind]._replace(v=node.v)
</code></pre>
<p>(Note: Don't be discouraged to use this solution because of the leading underscore in the function _replace. Specifically for namedtuple some functions have leading underscore which is not for indicating they are meant to be "private")</p>
</div>
<div class="post-text" itemprop="text">
<p><code>namedtuple</code>s are immutable, just like standard tuples. You have two choices:</p>
<ol>
<li>Use a different data structure, e.g. a class (or just a dictionary); or</li>
<li>Instead of updating the structure, replace it.</li>
</ol>
<p>The former would look like:</p>
<pre><code>class N(object):

    def __init__(self, ind, set, v):
        self.ind = ind
        self.set = set
        self.v = v
</code></pre>
<p>And the latter:</p>
<pre><code>item = items[node.ind]
items[node.ind] = N(item.ind, item.set, node.v)
</code></pre>
<p><strong>Edit</strong>: if you want the latter, Ignacio's answer does the same thing more neatly using baked-in functionality.</p>
</div>
<span class="comment-copy">thanks for the answers but in case of comparison like <code>items[i].v &lt;8</code> how do I do it, I just tried using a temporary variable to store its value and then use this for comparison like <code>temp = items[i].v</code> then <code>temp&lt;8</code>.</span>
<span class="comment-copy">There is no need to take special measures when <i>accessing</i> a <code>namedtuple</code>'s attributes.</span>
<span class="comment-copy">there is no problem with accessing but i cant reassign it  and i understand that and its same reason why i cant use it for comparison like i mentioned <code>items[i].v]&lt;8</code> . I need to know any better alternative like the one in answer using <code>._replace()</code></span>
<span class="comment-copy">Using it in an expression does not require replacing it.</span>
<span class="comment-copy">yea it worked, dunno then why I was getting an error at that statement before :C</span>
<span class="comment-copy">Why?⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/collections.html#collections.somenamedtuple._replace" rel="nofollow noreferrer">Because.</a></span>
<span class="comment-copy">@IgnacioVazquez-Abrams more explanation is required in this answer.  (linking to the docs is not sufficient.)</span>
<span class="comment-copy">@kroiz Dennis is saying we use underscore for methods and attributes to distinguish them from field names, jonrsharpe gave a detailed answer, but my question is about getting the best way to correct the error, using a inbuilt functionality is always better.. Even jonrsharpe mentioned that part.. Frankly i would have accepted both but stack dont allow that</span>
<span class="comment-copy">TLDR; This is a valid solution. The leading underscore in the function _replace was not meant to indicate internal usage.</span>
<span class="comment-copy">yes after 10 mins i did what you told in the latter, and now I understand why this works but what I was doing before. Thnx</span>
<span class="comment-copy">namedtuples are immutable - hits it on the nail. thanks</span>
