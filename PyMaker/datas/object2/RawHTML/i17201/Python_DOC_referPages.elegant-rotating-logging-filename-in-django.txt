<div class="post-text" itemprop="text">
<p>I am trying to set up a logger that writes to a new file every day. I would like to log to a file in /log/name_YYYY_mm_dd.log but it seems that this is done initially.</p>
<p>Is there any elegant way to rotate the filename? </p>
<pre><code>LOGGING = {
'version': 1,
'disable_existing_loggers': False,
'filters': {
    'require_debug_false': {
        '()': 'django.utils.log.RequireDebugFalse'
    }
},
'formatters': {
    'verbose': {
        'format': '%(levelname)s|%(asctime)s|%(module)s|%(process)d|%(thread)d|%(message)s',
        'datefmt' : "%d/%b/%Y %H:%M:%S"
    },
},
'handlers': {
    'default': {
        'level': 'INFO',
        'class': 'logging.handlers.TimedRotatingFileHandler',
        'filename': os.path.join(ROOT_DIR, 'django_%s.log' % (datetime.now().strftime('%Y-%m-%d-%H-%M'))),
        'formatter': 'verbose',
    },
},
'loggers': {
    'sensible': {
        'handlers': ['default'],
        'level': 'DEBUG',
        'propagate': True,
    },
}
</code></pre>
<p>}</p>
</div>
<div class="post-text" itemprop="text">
<p>You forgot <code>'when': 'midnight',</code> and possibly a wrapper if you log from <a href="https://stackoverflow.com/questions/18840785/timedrotatingfilehandler-doesnt-work-fine-in-django-with-multi-instance">multiple instances</a>. Try <a href="https://gist.github.com/JasonGiedymin/887364" rel="nofollow noreferrer">this</a>:</p>
<pre><code>LOGGING = {
'version': 1,
'disable_existing_loggers': False,
'filters': {
    'require_debug_false': {
        '()': 'django.utils.log.RequireDebugFalse'
    }
},
'formatters': {
    'verbose': {
        'format': '%(levelname)s|%(asctime)s|%(module)s|%(process)d|%(thread)d|%(message)s',
        'datefmt' : "%d/%b/%Y %H:%M:%S"
    },
},
'handlers': {
    'default': {
        'level': 'INFO',
        'class': 'logging.handlers.TimedRotatingFileHandler',
        'filename': os.path.join(ROOT_DIR, 'django.log'),
        'formatter': 'verbose',
        'when': 'midnight',
        'backupCount': '30',
    },
},
'loggers': {
    'sensible': {
        'handlers': ['default'],
        'level': 'DEBUG',
        'propagate': True,
    },
}
</code></pre>
<blockquote>
<p>The system will save old log files by appending extensions to the
  filename. The extensions are date-and-time based, using the strftime
  format <code>%Y-%m-%d_%H-%M-%S</code> or <a href="https://docs.python.org/3/library/logging.handlers.html#timedrotatingfilehandler" rel="nofollow noreferrer">a leading portion thereof</a>, depending on
  the rollover interval.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Django logging is just a thin wrapper of the Python logging module, you can use that to override Django settings if needed.</p>
<p><a href="http://www.blog.pythonlibrary.org/2014/02/11/python-how-to-create-rotating-logs/" rel="nofollow">Rotating logs in Python</a>:</p>
<pre><code>import logging
import time

from logging.handlers import TimedRotatingFileHandler

#----------------------------------------------------------------------
def create_timed_rotating_log(path):
    """"""
    logger = logging.getLogger("Rotating Log")
    logger.setLevel(logging.INFO)

    handler = TimedRotatingFileHandler(path,
                                       when="midnight",
                                       interval=1,
                                       backupCount=5)
    logger.addHandler(handler)

    for i in range(6):
        logger.info("This is a test!")
        time.sleep(75)

#----------------------------------------------------------------------
if __name__ == "__main__":
    log_file = "timed_test.log"
    create_timed_rotating_log(log_file)
</code></pre>
<p>Bypassing Django might also avoid <a href="http://www.caktusgroup.com/blog/2015/01/27/Django-Logging-Configuration-logging_config-default-settings-logger/" rel="nofollow">parent loggers not receiving events from disabled children</a>.</p>
</div>
<span class="comment-copy">Where would we get all these logging feature like <code>when</code> and others? Please provide links. Thanks in advance.</span>
<span class="comment-copy">TimedRotatingFileHandler really helps!</span>
