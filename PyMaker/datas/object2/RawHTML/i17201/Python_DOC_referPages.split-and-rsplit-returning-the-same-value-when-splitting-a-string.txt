<div class="post-text" itemprop="text">
<p>I have several strings in the format of (10, 12), (7, 3) etc that I want to break apart into two strings of the format string1 = 10, string2 = 12, string1 = 7, string 2 = 3 etc. I am using the following code to do this:</p>
<pre><code>uv = uu[1:-1] #remove brackets from 'uu'
uva = uv.split(",", 1)[1] #take the first string before the ',' split
uvb = uv.rsplit(",", 1)[-1] #take the first string in reverse after the ','
</code></pre>
<p>However in the above examples 'uva' and 'uvb' would both resolve to the string after the ',' and I', not sure why.</p>
<p>Can anyone see what I am doing wrong? I've tried a few variations on the variable 'uva' but i'm not getting anywhere.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you want simply:</p>
<pre><code>uva, uvb = map(int, uv[1:-1].split(","))
</code></pre>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; uv = "(10, 12)"
&gt;&gt;&gt; uva, uvb = map(int, uv[1:-1].split(","))
&gt;&gt;&gt; uva
10
&gt;&gt;&gt; uvb
12
</code></pre>
<p>As there is only one comma <code>","</code> in each string, <code>split</code> and <code>rsplit</code> give the same result: <code>["10", " 12"]</code>. You can access these values by index:</p>
<pre><code> ["10", " 12"]
# ^ 0   ^ 1 (or -1)
</code></pre>
<p><em>(note zero-based indexing and the use of negative indices to count back from the end)</em></p>
<p>or simply unpack as I have done above. <code>map</code> converts both values to integers using <code>int</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>uva = uv.split(",", 1)[1] #take the first string before the ',' split
</code></pre>
<p>Index <code>1</code> is the second string, but you donâ€™t really need to do any of this.</p>
<pre><code>uva, uvb = uv.split(",")
</code></pre>
<p>Depending on what this format actually represents (something from <code>repr</code>?) you might consider <a href="http://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow"><code>ast.literal_eval</code></a> instead, which will get you a tuple of integers.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python uses 0-based indexing.  You meant</p>
<pre><code>uva = uv.split(",", 1)[0]
</code></pre>
</div>
