<div class="post-text" itemprop="text">
<p>I'm a newbie on python and flask.
When reading flask tutorial on the official web site, 
I found that the using urandom() function is recommended way of generating secret key.</p>
<p>In here, I'm wondering how the random number is generated by urandom(), and why this is more cryptographically safe.</p>
<p>I know the basic principle used in random generator used in C, and if the same principle is used in the urandom, it should be initialized with random seed. However, I don't see the seed related function in os module API.</p>
<p>I found some articles saying that it refers some value on specific locations but I don't know how it can be related to randomness and why it is safe to use.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>This function returns random bytes from an OS-specific randomness
  source. The returned data should be unpredictable enough for
  cryptographic applications, though its exact quality depends on the OS
  implementation. On a UNIX-like system this will query <code>/dev/urandom</code>,
  and on Windows it will use <code>CryptGenRandom()</code>. If a randomness source is
  not found, <code>NotImplementedError</code> will be raised.</p>
<p>For an easy-to-use interface to the random number generator provided
  by your platform, please see <code>random.SystemRandom</code>.</p>
</blockquote>
<p>[<a href="http://docs.python.org/3/library/os.html#os.urandom" rel="nofollow">Source</a>]</p>
</div>
