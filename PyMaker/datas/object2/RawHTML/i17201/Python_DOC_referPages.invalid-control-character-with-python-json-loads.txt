<div class="post-text" itemprop="text">
<p>Below is my string that is getting printed out with the below code -</p>
<pre><code>jsonString = data.decode("utf-8")

print jsonString
</code></pre>
<p>And below is the string that got printed out on the console - </p>
<pre><code>{"description":"Script to check testtbeat of TEST 1 server.", "script":"#!/bin/bash\nset -e\n\nCOUNT=60   #number of 10 second timeouts in 10 minutes\nSUM_SYNCS=0\nSUM_SYNCS_BEHIND=0\nHOSTNAME=$hostname      \n\nwhile [[ $COUNT -ge \"0\" ]]; do\n\necho $HOSTNAME\n\n#send the request, put response in variable\nDATA=$(wget -O - -q -t 1 http://$HOSTNAME:8080/heartbeat)\n\n#grep $DATA for syncs and syncs_behind\nSYNCS=$(echo $DATA | grep -oE 'num_syncs: [0-9]+' | awk '{print $2}')\nSYNCS_BEHIND=$(echo $DATA | grep -oE 'num_syncs_behind: [0-9]+' | awk '{print $2}')\n\necho $SYNCS\necho $SYNCS_BEHIND\n\n#verify conditionals\nif [[ $SYNCS -gt \"8\" &amp;&amp; $SYNCS_BEHIND -eq \"0\" ]]; then exit 0; fi\n\n#decrement the counter\nlet COUNT-=1\n\n#wait another 10 seconds\nsleep 10\n\ndone\n"}
</code></pre>
<p>But when I load this out using python <code>json.loads</code> as shown below- </p>
<pre><code>jStr = json.loads(jsonString)
</code></pre>
<p>I am getting this error -</p>
<pre><code>ERROR Invalid control character at: line 1 column 202 (char 202)
</code></pre>
<p>I looked at char 202 but I have no idea why that is causing an issue? char 202 in my notepad++ is <code>e</code> I guess.. Or may be I am calculating it wrong</p>
<p>Any idea what is wrong? How do I find out which one is causing problem.</p>
<p><strong>UPDATE:-</strong></p>
<pre><code>jsonString = {"description":"Script to check testtbeat of TIER 1 server.", "script":"#!/bin/bash\nset -e\n\nCOUNT=60   #number of 10 second timeouts in 10 minutes\nSUM_SYNCS=0\nSUM_SYNCS_BEHIND=0\nHOSTNAME=$hostname      \n\nwhile [[ $COUNT -ge \"0\" ]]; do\n\necho $HOSTNAME\n\n#send the request, put response in variable\nDATA=$(wget -O - -q -t 1 http://$HOSTNAME:8080/heartbeat)\n\n#grep $DATA for syncs and syncs_behind\nSYNCS=$(echo $DATA | grep -oE 'num_syncs: [0-9]+' | awk '{print $2}')\nSYNCS_BEHIND=$(echo $DATA | grep -oE 'num_syncs_behind: [0-9]+' | awk '{print $2}')\n\necho $SYNCS\necho $SYNCS_BEHIND\n\n#verify conditionals\nif [[ $SYNCS -gt \"8\" &amp;&amp; $SYNCS_BEHIND -eq \"0\" ]]; then exit 0; fi\n\n#decrement the counter\nlet COUNT-=1\n\n#wait another 10 seconds\nsleep 10\n\ndone\n"}

print jsonString[202]
</code></pre>
<p>Below error I got - </p>
<pre><code>KeyError: 202
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://ideone.com/sUFlEw">There is no error in your json text.</a></p>
<p>You can get the error if you copy-paste the string into your Python source code as a string literal. In that case <code>\n</code> is interpreted as a single character (newline). You can fix it by using raw-string literals instead (<code>r''</code>, Use triple-quotes <code>r'''..'''</code> to avoid escaping <code>"'</code> quotes inside the string literal).</p>
</div>
<div class="post-text" itemprop="text">
<p>The control character can be allowed inside a string as follows,</p>
<pre><code>json_str = json.loads(jsonString, strict=False)
</code></pre>
<p>You can find this in the <a href="https://docs.python.org/2/library/json.html" rel="noreferrer">docs for python 2</a>, or <a href="https://docs.python.org/3/library/json.html" rel="noreferrer">the docs for python 3</a></p>
<blockquote>
<p>If strict is false (<code>True</code> is the default), then control characters will be allowed inside strings. Control characters in this context are those with character codes in the 0â€“31 range, including <code>'\t'</code> (tab), <code>'\n'</code>, <code>'\r'</code> and <code>'\0'</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/a/42073/116047">Escape your newlines.</a></p>
<pre><code>{"description":"Script to check testtbeat of TEST 1 server.", "script":"#!/bin/bash\\nset -e\\n\\nCOUNT=60   #number of 10 second timeouts in 10 minutes\\nSUM_SYNCS=0\\nSUM_SYNCS_BEHIND=0\\nHOSTNAME=$hostname      #dc1dbx1145.dc1.host.com\\n\\nwhile [[ $COUNT -ge \\"0\\" ]]; do\\n\\necho $HOSTNAME\\n\\n#send the request, put response in variable\\nDATA=$(wget -O - -q -t 1 http://$HOSTNAME:8080/heartbeat)\\n\\n#grep $DATA for syncs and syncs_behind\\nSYNCS=$(echo $DATA | grep -oE 'num_syncs: [0-9]+' | awk '{print $2}')\\nSYNCS_BEHIND=$(echo $DATA | grep -oE 'num_syncs_behind: [0-9]+' | awk '{print $2}')\\n\\necho $SYNCS\\necho $SYNCS_BEHIND\\n\\n#verify conditionals\\nif [[ $SYNCS -gt \\"8\\" &amp;&amp; $SYNCS_BEHIND -eq \\"0\\" ]]; then exit 0; fi\\n\\n#decrement the counter\\nlet COUNT-=1\\n\\n#wait another 10 seconds\\nsleep 10\\n\\ndone\\n"}
</code></pre>
<p>Works for me.  </p>
<p>Also, if you get an error like this in the future, a debugging technique you can use is to shorten the string to something that works and slowly add data until it doesn't.</p>
</div>
<span class="comment-copy">Have you looked at character 202 yet?</span>
<span class="comment-copy">@Ignacio Vazquez-Abrams: I looked at it but I have no idea why that is causing an issue? char 202 in my notepad++ is <code>e</code> I guess.. Or may be I am calculating it wrong</span>
<span class="comment-copy">try <code>print jsonString[202]</code></span>
<span class="comment-copy">You're getting a <code>KeyError</code> because you defined jsonString as a dictionary</span>
<span class="comment-copy">@Pakman: Then how do I find out <code>char 202</code>?</span>
<span class="comment-copy">This answer is no different than mine.  Prefixing your string with 'r' (making it a string literal) escapes your newlines.  The problem lies with the OP's code.  If OP truly did <code>print jsonString</code> followed by <code>json.loads(jsonString)</code>, he wouldn't have encountered this error.  Otherwise, his console output would not have shown a literal \n but a newline.</span>
<span class="comment-copy">@Pakman: incorrect. My answer: <i>"There is no error in your json text."</i>. Your answer: <i>"Escape your newlines."</i></span>
<span class="comment-copy">Your statement "There is no error in your json text" is correct, but there <i>was</i> an error in the text he was inputting into json.loads, which we both address</span>
<span class="comment-copy">yes. If you take a valid json string with <code>\n</code> in it and paste it into Python source code as a string literal then the string won't be a valid json no more</span>
<span class="comment-copy">In case you don't have control over the JSON string, take a look at <a href="https://stackoverflow.com/questions/22394235/invalid-control-character-with-python-json-loads#answer-29827074">Joe Cheng's answer below</a>.</span>
<span class="comment-copy">100 upvotes to you</span>
<span class="comment-copy">This worked for me as I have no influence on how the json string was formatted.</span>
<span class="comment-copy">Thanks @NikhilParmar You are a life saver :) I was struggling with this problem from last 3 days and finally this one worked for me</span>
<span class="comment-copy">Then it should have complained before 202 character as well? Why it complained on 202 then?</span>
