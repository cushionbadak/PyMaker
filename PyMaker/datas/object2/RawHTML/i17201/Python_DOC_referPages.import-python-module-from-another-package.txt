<div class="post-text" itemprop="text">
<p>I have a script with the following structure</p>
<pre><code>./
    /foo
       __init__.py
    /bar
       __init__.py
    module.py
</code></pre>
<p>I want to use module.py both on foo and bar package, but i can't find a way to import it!</p>
<p>I can put the module inside both packages, but if I need to make any alteration I would have to do it on both.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is actually somewhat tricky, assuming we have structure like this:</p>
<pre><code>├── bar
│   ├── __init__.py
│   └── some_bar.py
├── foo
│   ├── __init__.py
│   └── some_foo.py
└── something.py
</code></pre>
<p>the correct way to get objects from <code>something.py</code> in <code>some_foo.py</code> is by adding:</p>
<pre><code># foo/some_foo.py
from something import some_module
</code></pre>
<p>and then running some_foo from top level directory as a module, with <code>-m</code> option like so:</p>
<pre><code>python -m foo.some_foo
</code></pre>
<p>add some print statements to <code>something.py</code> to test it, if everything goes right you should see some output from something.py after running some_foo. Remember you need to run some_foo from top level, not from foo directory.</p>
</div>
<div class="post-text" itemprop="text">
<p>Put the <code>__init__.py</code> next to <code>module.py</code>.</p>
<p>More information <a href="http://docs.python.org/3/tutorial/modules.html?highlight=packages#packages" rel="nofollow">http://docs.python.org/3/tutorial/modules.html?highlight=packages#packages</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>import foo</code> works then <code>import module</code> should work in your case too.</p>
<p>If you need to use <code>from toplevel import foo</code> to import <code>foo</code> then you could use <code>from toplevel import module</code> to import <code>module</code>.</p>
</div>
<span class="comment-copy"><code>import module</code>? If <code>module.py</code>'s directory is on the path, that should work. If it's not on the path, then you couldn't have imported your packages either.</span>
<span class="comment-copy">Which file is your entry point?</span>
<span class="comment-copy">why would you put <code>__init__.py</code> along side a possibly top-level module <code>something.py</code>? Why would you recommend <code>import *</code> in this case? Don't create the <code>__init__.py</code> file and don't use <code>import *</code> here.</span>
<span class="comment-copy">Good point, thank you, I edited my answer.</span>
<span class="comment-copy"><code>something.py</code> is not a package. <code>from something import some_module</code> might be misleading (technically, you could make <code>something.py</code> into a package programmatically but usually Python packages created as directories (like <code>foo</code>, <code>bar</code> in this case)).</span>
<span class="comment-copy">you don't need <code>__init__.py</code> file if the module is outside of any package</span>
<span class="comment-copy">module.py: <code>from foo import test</code>  foo\test.py: <code>from . import module</code> <code>&gt;python module.py</code> - &gt; <code>ImportError: cannot import name module</code>  No way to use <code>from toplevel import module</code> except PYTHONPATH magic?</span>
<span class="comment-copy">I agree that toplevel <code>__init__.py</code> only needs for packages.</span>
<span class="comment-copy">@AlexKroll: <code>module.py</code> is not inside <code>foo</code>. Why do you think <code>from . import module</code> would have worked? Use <code>import module</code> instead. Don't put info in the comment, <a href="http://stackoverflow.com/posts/22589572/edit">update your question</a> instead</span>
<span class="comment-copy">It's not my question. But you wrote: <i>If you need to use from toplevel import foo to import foo then you could use from toplevel import module to import module.</i> And now my adjacent question is: which way to point python for import toplevel <code>module</code> from <code>foo\test.py</code> with <code>import from</code> syntax?</span>
<span class="comment-copy">@AlexKroll: <code>foo</code> is toplevel in your case. It means that you should use <code>import module</code>.</span>
