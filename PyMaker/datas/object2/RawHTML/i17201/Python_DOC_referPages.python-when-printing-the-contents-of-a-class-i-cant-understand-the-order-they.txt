<div class="post-text" itemprop="text">
<p>I'm using python 3.3 and am experimenting with getting a good python equivalent of a struct in C. This is what I've settled on:</p>
<pre><code>class employeeStruct():
    def __init__(self,name,title,number,salary):
        self.name   = name
        self.title  = title
        self.number = number
        self.salary = salary

boss = employeeStruct("Michael Scott", "Regional Manager", 3, 50000.00)

print(vars(boss))
</code></pre>
<p>The output of this is:</p>
<pre><code>{'name': 'Michael Scott', 'salary': 50000.0, 'number': 3, 'title': 'Regional Manager'}
</code></pre>
<p>I don't understand the order the variables are being printed in. I tried using the <a href="http://www.pythontutor.com/visualize.html#code=class+employeeStruct%28%29%3a%0A++++def+__init__%28self,name,title,number,salary%29%3a%0A++++++++self.name+++=+name%0A++++++++self.title++=+title%0A++++++++self.number+=+number%0A++++++++self.salary+=+salary%0A%0Aboss+=+employeeStruct%28%22Michael+Scott%22,+%22Regional+Manager%22,+3,+50000.00%29%0A%0Aprint%28vars%28boss%29%29%0A&amp;mode=display&amp;cumulative=false&amp;heapPrimitives=false&amp;drawParentPointers=false&amp;textReferences=false&amp;showOnlyOutputs=false&amp;py=3&amp;curInstr=9" rel="nofollow">python tutor visualizer</a> but that didn't reveal anything.</p>
<p>Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://docs.python.org/3/library/collections#collections.namedtuple" rel="nofollow"><code>collections.namedtuple</code></a> factory function subclasses <code>tuple</code> to add <a href="http://docs.python.org/3/library/operator#operator.itemgetter" rel="nofollow"><code>operator.itemgetter</code></a> properties. In 2.7/3.1, a <code>__dict__</code> property was added that returns a <a href="http://docs.python.org/3/library/collections#collections.OrderedDict" rel="nofollow"><code>collections.OrderedDict</code></a>:</p>
<pre><code>from collections import namedtuple

Employee = namedtuple("Employee", 
                      "name title number salary")

boss = Employee("Michael Scott", "Regional Manager", 3, 50000.00)
print(repr(boss))
print(vars(boss))
</code></pre>
<p>Output:</p>
<pre><code>Employee(name='Michael Scott', title='Regional Manager', number=3, salary=50000.0)
OrderedDict([('name', 'Michael Scott'), ('title', 'Regional Manager'), ('number', 3), ('salary', 50000.0)])
</code></pre>
</div>
<span class="comment-copy">There is no meaning to the order; it's an artifact of the dict implementation.  If you want 'em sorted, use the <a href="http://docs.python.org/3/library/pprint.html" rel="nofollow noreferrer">pprint</a> module.</span>
<span class="comment-copy">Thanks! That doesn't quite explain why dict seems to output in such an unpredictable order, but that's exactly what I needed.</span>
