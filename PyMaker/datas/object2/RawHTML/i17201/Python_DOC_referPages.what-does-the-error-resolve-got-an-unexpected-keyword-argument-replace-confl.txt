<div class="post-text" itemprop="text">
<p>When I update certain packages in my Python installation using <code>pip</code> I get</p>
<pre><code>TypeError: resolve() got an unexpected keyword argument 'replace_conflicting'
</code></pre>
<p>I get this error for certain packages and not others, and <a href="https://stackoverflow.com/q/21678394/656912">have asked</a> about ways to work around it (ideally while continuing to use <code>pip</code>) in the specific cases where I encounter it; but the question here is what the error means in the first place and what might be the likely cause.</p>
<p>What does this error mean and what could be causing it?</p>
<hr/>
<pre><code>Downloading/unpacking xattr
  Downloading xattr-0.7.5.tar.gz
  Running setup.py (path:/private/tmp/pip_build_root/xattr/setup.py) egg_info for package xattr
    Traceback (most recent call last):
      File "&lt;string&gt;", line 17, in &lt;module&gt;
      File "/private/tmp/pip_build_root/xattr/setup.py", line 67, in &lt;module&gt;
        cmdclass={'build': cffi_build},
      File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py", line 112, in setup
        _setup_distribution = dist = klass(attrs)
      File "/Library/Python/2.7/site-packages/setuptools/dist.py", line 239, in __init__
        self.fetch_build_eggs(attrs.pop('setup_requires'))
      File "/Library/Python/2.7/site-packages/setuptools/dist.py", line 264, in fetch_build_eggs
        replace_conflicting=True
    TypeError: resolve() got an unexpected keyword argument 'replace_conflicting'
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File "&lt;string&gt;", line 17, in &lt;module&gt;

  File "/private/tmp/pip_build_root/xattr/setup.py", line 67, in &lt;module&gt;

    cmdclass={'build': cffi_build},

  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py", line 112, in setup

    _setup_distribution = dist = klass(attrs)

  File "/Library/Python/2.7/site-packages/setuptools/dist.py", line 239, in __init__

    self.fetch_build_eggs(attrs.pop('setup_requires'))

  File "/Library/Python/2.7/site-packages/setuptools/dist.py", line 264, in fetch_build_eggs

    replace_conflicting=True

TypeError: resolve() got an unexpected keyword argument 'replace_conflicting'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is caused by having two different versions of setuptools: one in <code>/System/Library/Frameworks/Python.framework/Versions/2.7</code> and another in <code>/Library/Python/2.7/site-packages</code>. Somehow, <code>setuptools.dist.Distribution.fetch_build_eggs</code> in  the newer version calls <code>pkg_resources.working_set.resolve</code> from the older version. The old version of resolve doesn't support the replace_conflicting argument.</p>
<p>On my OS X Lion machine, I was able to fix the problem like this:</p>
<pre><code>$ sudo python /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/easy_install.py -U setuptools
$ sudo easy_install -U pip
</code></pre>
<p>That is, I used the old version of easy_install to upgrade easy_install and then used that to upgrade pip.</p>
<p>This fixed the problem on my system because it modified <code>sys.path</code> so that the new version of <code>pkg_resources</code> under <code>/Library/Python</code> loaded before the old version which can still be found under <code>/System/Library/Frameworks</code>. An alternative workaround might be to modify <code>sys.path</code> temporarily using the <code>PYTHONPATH</code> environment variable, see <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH" rel="nofollow">the Python manual</a>.</p>
</div>
<span class="comment-copy">This seems like a bug in <code>setuptools</code>. There's no way it should be reaching out the current version should calling into the older version in a different location.</span>
<span class="comment-copy">Perhaps. Before running the commands above, after <code>import pkg_resources</code>, <code>pkg_resources.__file__</code> was <code>/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.pyc</code>. After running the commands, it's <code>/Library/Python/2.7/site-packages/setuptools-3.4.4-py2.7.egg/pkg_resources.pyc</code>. I think it has to do with sys.path settings on the Mac.</span>
<span class="comment-copy">Hmm. Maybe your problem was different than mine or something's different in our pip/easy_install configuration. Do you have two copies of pkg_resources.pyc, one under /System/Library/Frameworks and one under /Library/Python? What is the value of pkg_resources.__file__?</span>
<span class="comment-copy">After running the commands above, my sys.path starts out like this: ['', '/Library/Python/2.7/site-packages/setuptools-3.4.4-py2.7.egg', ... That is, the setuptools egg comes before standard locations. I think that's what really fixed things. I wouldn't call it an ideal solution, but it's all I've got. It looks like your easy_install didn't install setuptools as an egg, but mine did. OS X gives eggs priority in sys.path, which is why this fixed the version mismatch for me.</span>
<span class="comment-copy">Try <code>PYTHONPATH=/Library/Python/2.7/site-packages pip ...</code> which should put the location of your new setuptools at or near the beginning of sys.path for that run.</span>
