<div class="post-text" itemprop="text">
<p>I am trying to create a program that factors quadratics. I was mostly successful, but I am having trouble with the quadratic <code>5x^2 -13x + 6</code> in which one of the roots is 0.6, or 3/5. I want to write it as a fraction, but it is not working correctly. It is giving me the following:</p>
<p><code>5(x - 2)(x - 5404319552844595/9007199254740992)</code></p>
<p>This is the code I used after importing from fractions:</p>
<pre><code>    s1 = Fraction(((-b + sqrt(disc))/(2*a)))
    s2 = Fraction(((-b - sqrt(disc))/(2*a)))
</code></pre>
<p>Anyone know why this may not be working correctly? Or an easier way to factor the quadratics would be useful too.</p>
</div>
<div class="post-text" itemprop="text">
<p>Quoting the <a href="http://docs.python.org/2/library/fractions.html" rel="nofollow">Python manual</a>:</p>
<blockquote>
<p>Note that due to the usual issues with binary floating-point (see
  <a href="http://docs.python.org/2/tutorial/floatingpoint.html#tut-fp-issues" rel="nofollow">Floating Point Arithmetic: Issues and Limitations</a>), the argument to
  Fraction(1.1) is not exactly equal to 11/10, and so Fraction(1.1) does
  not return Fraction(11, 10) as one might expect.</p>
</blockquote>
<p>The suggested treatment for a case when you know the numerator and denominator must be small is to <a href="http://docs.python.org/2/library/fractions.html#fractions.Fraction.limit_denominator" rel="nofollow">limit the denominator</a>. Here is an example:</p>
<pre><code>from math import sqrt
from fractions import Fraction
a, b, c = 5, -13, 6
disc = b * b - 4 * a * c
s1 = Fraction(((-b + sqrt(disc))/(2*a)))
s2 = Fraction(((-b - sqrt(disc))/(2*a)))
print (s1, s2)
s1, s2 = s1.limit_denominator (), s2.limit_denominator ()
print (s1, s2)
</code></pre>
<p>The first one prints the fraction you mentioned, the second one gives 3/5.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; from fractions import Fraction
&gt;&gt;&gt; Fraction(0.6)
Fraction(5404319552844595, 9007199254740992)
&gt;&gt;&gt; Fraction("0.6")
Fraction(3, 5)
</code></pre>
<p><code>0.6</code> can't be represented exactly as a binary <code>float</code>. See <a href="http://docs.python.org/3/tutorial/floatingpoint.html">Floating Point Arithmetic: Issues and Limitations</a>. This is not a Python issue, it's an issue with how floating point numbers work.</p>
</div>
<span class="comment-copy"><a href="http://docs.scipy.org/doc/numpy-dev/reference/routines.polynomials.polynomial.html" rel="nofollow noreferrer">I'll just leave this here...</a></span>
<span class="comment-copy">I'm kind of new to this and that is really confusing. I saw a polynomial division function, but not factoring. I didn't quite understand the roots one. Thank you though.</span>
