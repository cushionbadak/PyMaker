<div class="post-text" itemprop="text">
<p>My program works in Python 2.0 but I need it to work in 3.0 or higher. The problem is that the new Python does not have the <code>.has_key</code> function anymore. I need to know how to fix this so it will work in the new version.</p>
<pre><code>dictionary = {}

for word in words:
    if dictionary.has_key(word):
        dictionary[word]+=1
    else:
        dictionary[word]=1
bonus = {}
for key in sorted(dictionary.iterkeys()):
    print("%s: %s" % (key,dictionary[key]))
    if len(key)&gt;5: #if word is longer than 5 characters (6 or greater) save to list, where we will get top 10 most common
        bonus[key]=dictionary[key]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>in</code> for key testing:</p>
<pre><code>if word in dictionary:
</code></pre>
<p>and replace <code>.iterkeys()</code> with <code>.keys()</code>; in this case a plain <code>sorted(dictionary)</code> would suffice (in either Python 2 <em>or</em> 3).</p>
<p>Your code, rewritten a little more compactly with more current techniques, replacing <code>dictionary</code> with a <a href="http://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter()</code></a> object:</p>
<pre><code>from collections import Counter

dictionary = Counter(words)

bonus = {}
for key in sorted(dictionary):
    print("{}: {}".format(key, dictionary[key]))
    if len(key) &gt; 5:
        bonus[key] = dictionary[key]
</code></pre>
<p>although you could also use <a href="http://docs.python.org/3/library/collections.html#collections.Counter.most_common" rel="nofollow"><code>Counter.most_common()</code></a> to list keys in order by frequency (high to low) instead.</p>
<p>You may want to read the <a href="http://docs.python.org/3/howto/pyporting.html" rel="nofollow">Python porting guide</a> if you are porting code from Python 2 to 3.</p>
</div>
<span class="comment-copy"><a href="http://docs.python.org/2.7/library/2to3.html" rel="nofollow noreferrer">docs.python.org/2.7/library/2to3.html</a></span>
<span class="comment-copy">Actually, just delete <code>.iterkeys()</code> in this case</span>
<span class="comment-copy">@wim: already ahead of you there.</span>
<span class="comment-copy">Martijn, you should write a tutorial on how to spawn-snipe. +1</span>
