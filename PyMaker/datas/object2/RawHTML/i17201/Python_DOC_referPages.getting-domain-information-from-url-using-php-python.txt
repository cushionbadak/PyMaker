<div class="post-text" itemprop="text">
<p>How can I get information about a domain name (such as owner or server details) using PHP or Python code? I'd like to avoid using any 3rd party web site.</p>
<p>Is this possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can base yourself on the following whois script: <a href="http://www.phpeasycode.com/whois/" rel="nofollow">http://www.phpeasycode.com/whois/</a></p>
<p><a href="http://www.phpeasycode.com/showdemo.php?target=/whois/whois.php" rel="nofollow">Here's an online demo.</a></p>
<p>The script first checks for the right whois server and then opens a socket on port 43. Here's a simpliefied query function based on the code from the demo above.</p>
<p>Each TLD has its own whois server. You can find a complete list here : <a href="http://www.iana.org/domains/root/db/" rel="nofollow">http://www.iana.org/domains/root/db/</a> and <a href="http://www.whois365.com/en/listtld/" rel="nofollow">http://www.whois365.com/en/listtld/</a></p>
<pre><code>&lt;?php
$whoisserver = "whois.pir.org";
$domain = "example.org";
$port = 43;
$timeout = 10;
$fp = @fsockopen($whoisserver, $port, $errno, $errstr, $timeout) or die("Socket Error " . $errno . " - " . $errstr);
fputs($fp, $domain . "\r\n");
$out = "";
while(!feof($fp)){
    $out .= fgets($fp);
}
fclose($fp);

$res = "";
if((strpos(strtolower($out), "error") === FALSE) &amp;&amp; (strpos(strtolower($out), "not allocated") === FALSE)) {
    $rows = explode("\n", $out);
    foreach($rows as $row) {
        $row = trim($row);
        if(($row != '') &amp;&amp; ($row{0} != '#') &amp;&amp; ($row{0} != '%')) {
            $res .= $row."\n";
        }
    }
}
print $res;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First make your live easier:</p>
<pre><code>pip install python-whois
pip install requests
</code></pre>
<p>Then do something like:</p>
<pre><code>&gt;&gt;&gt; import requests
&gt;&gt;&gt; import urlparse
&gt;&gt;&gt; import whois
&gt;&gt;&gt; url = 'http://docs.python.org/3/'
&gt;&gt;&gt; requests.head(url).headers['server']
'Apache/2.2.22 (Debian)'
&gt;&gt;&gt; hostname = urlparse.urlparse(url).netloc
&gt;&gt;&gt; print whois.whois(hostname)
creation_date: 1995-03-27 05:00:00
domain_name: PYTHON.ORG
emails: ['e89d6901ba3e470e8cedc3eaa32a0074-1697561@contact.gandi.net', 'e89d6901ba3e470e8cedc3eaa32a0074-1697561@contact.gandi.net', 'infrastructure-staff@python.org']
expiration_date: []
name_servers: ['NS3.P11.DYNECT.NET', 'NS1.P11.DYNECT.NET', 'NS2.P11.DYNECT.NET', 'NS4.P11.DYNECT.NET', '', '', '', '', '', '', '', '', '']
referral_url: 
registrar: Gandi SAS (R42-LROR)
status: clientTransferProhibited
updated_date: 2013-08-15 00:20:19
whois_server: 
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">Are just excluding 3rd party webtools? whois db, DNS are by definition third party services. And fingerprinting serverdetails is a hard problem to tackle on your own without use of third party libraries.</span>
<span class="comment-copy">Thanks boss, there is script also.. <a href="http://www.phpeasycode.com/count.php?target=whois/whois.zip" rel="nofollow noreferrer">phpeasycode.com/count.php?target=whois/whois.zip</a></span>
<span class="comment-copy"><a href="http://meta.stackexchange.com/a/8259/171231">Just a link?</a>... You missed a chance of making a real answer. The OP is from url to domain &amp; server details. With little effort you can show how PHP shines in parsing the hostname from the url and make a start investigating server details.</span>
<span class="comment-copy">Thanks, I didn't want to link directly to the download to give credit to the author.</span>
<span class="comment-copy">I'm sorry, I'm warming up today. I'll edit the question to include some information as how the script works.</span>
<span class="comment-copy">Answering questions is nice. Links are great. Giving credit where credit is due, even better. I'm not saying you should write a book or whole script in the answer. But the web is already full of forums with short First Post links that have rotted. With little extra effort you'll have something that survives the tests of time somewhat longer.</span>
