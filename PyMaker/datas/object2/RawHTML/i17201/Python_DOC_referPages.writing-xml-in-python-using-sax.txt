<div class="post-text" itemprop="text">
<p>Looking at the <a href="http://docs.python.org/2/library/xml.sax.html" rel="nofollow noreferrer">Python SAX documentation</a> I only see <strong>reading</strong> XML using SAX. But I would like to <strong>write</strong> it.<br/> I figured out how <a href="http://www.wissel.net/blog/d6plinks/SHWL-8B3G7U" rel="nofollow noreferrer">to do that in Java</a> a while ago:</p>
<pre><code> public void renderXML(OutputStream out) {
      PrintWriter pw = new PrintWriter(out);
      StreamResult streamResult = new StreamResult(pw);
      SAXTransformerFactory tf = (SAXTransformerFactory) TransformerFactory.newInstance();
      TransformerHandler hd = tf.newTransformerHandler();
      Transformer serializer = hd.getTransformer();
      serializer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
      serializer.setOutputProperty(OutputKeys.METHOD,"xml");
      serializer.setOutputProperty(OutputKeys.INDENT, "yes"); // So it looks pretty in VI
      hd.setResult(streamResult);
      hd.startDocument();
      AttributesImpl atts = new AttributesImpl();
      atts.addAttribute("", "", "someattribute", "CDATA", "test");
      atts.addAttribute("", "", "moreattributes", "CDATA", "test2");
      hd.startElement("", "", "MyTag", atts);
      String curTitle = "Something inside a tag";
      hd.characters(curTitle.toCharArray(), 0, curTitle.length());
      hd.endElement("", "", "MyTag");
      hd.endDocument();
   }
</code></pre>
<p>What would be the Python equivalent? I checked an <a href="https://stackoverflow.com/questions/4737244/generate-xml-with-sax2-in-python/4737362#4737362">answer on SO</a> using ElementTree - but that is rather the DOM way to do things (and problematic for really large output). <a href="https://stackoverflow.com/questions/19502503/how-to-stream-xml-output-quickly-from-python">Another question</a> is un-answered. Or: what is the better approach writing out XML in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/xml.sax.handler.html" rel="nofollow noreferrer">https://docs.python.org/3/library/xml.sax.handler.html</a> and for an example of Bible in <a href="https://www.crosswire.org/osis/" rel="nofollow noreferrer">OSIS XML</a> take a look at <a href="https://gitlab.com/bible_sword/CzeKMS/blob/d7bc1a3a5cdcc136a3d40bff7426a9f8fc181771/CEPtoOSIS.py" rel="nofollow noreferrer">this script</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know of a direct SAX-like way in Python; but I wrote a library for this that might perhaps be useful to you. It provides methods to open and close elements, make pis, comments, doctypes, etc. It has a fair range of higher-level features, like keeping track of what elements and inherited xml:lang values (if any) are in play, doing all the escaping for you (even %xx escaping for URIs in attributes), and things like "closeToElement(type)" etc. I find it makes it much easier to produce WF XML from Python. At <a href="http://www.derose.net/steve/utilities/PY/XmlOutput.py" rel="nofollow">http://www.derose.net/steve/utilities/PY/XmlOutput.py</a> if interested.</p>
</div>
<span class="comment-copy">For very large XML, an _not_so_elegant_but_working solution is using a template engine (like Cheetah for example: <a href="http://www.cheetahtemplate.org/" rel="nofollow noreferrer">cheetahtemplate.org</a>)</span>
