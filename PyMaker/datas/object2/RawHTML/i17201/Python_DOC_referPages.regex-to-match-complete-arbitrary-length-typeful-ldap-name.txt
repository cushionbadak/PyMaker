<div class="post-text" itemprop="text">
<p>I'm trying to use Python 3.4.0 to pull typeful LDAP FDNs out of a log file (checking each line for a match.) None of the regex patterns I've tried work, however. I need to be able to find the full FDN, regardless of the type of the first element of the FDN (e.g. DC,OU,CN).</p>
<pre><code>log_line1 = 'This server name is "CN=Server001,OU=SomeOU,DC=MyDom,DC=org".'
log_line2 = 'Whereas this server is called "cn=Server002,ou=SubContainer,ou=Elsewhere,dc=SubDomain,dc=MyDom,dc=org" and "something else" is also in quotes most likely.'
</code></pre>
<p>I'm okay with finding each <em>element</em> of the FDN and concatenating them myself. The closest I've come is this, which pretty much finds every word in the string:</p>
<pre><code>&gt;&gt;&gt; ldappattern = re.compile("cn=[\w-]+,|ou=[\w-]+,|dc=[\w-]+,", re.IGNORECASE)
&gt;&gt;&gt; re.findall(ldappattern, log_line1)
['This', 'server', 'name', 'is', 'CN=Server001,', 'OU=SomeOU,', 'DC=MyDom,', 'DC=org']
</code></pre>
<p>Note that these LDAP names can contain spaces, so whitespace searches are pretty useless, and I can't guarantee that the last element will be anything sensible (e.g. I've seen <code>'DC=testcompany,DC=internal'</code> as the root elements of a domain, and even single-label DNS names for domains.) They should be in quotes, but they won't necessarily be the only thing in quotes on a given line.</p>
<p>Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>If I'm understanding you, you want to capture the name and value of each element in strings like it:</p>
<pre><code>CN=Server001,OU=SomeOU,DC=MyDom,DC=org
</code></pre>
<p>The following regex is one way to do it. Note that the ending comma must be optional (and it's best to add a word boundary before it), or you'll miss the last element:</p>
<pre><code>(cn|ou|dc)=([\w-]+)\b,?
</code></pre>
<p><img alt="Regular expression visualization" src="https://www.debuggex.com/i/_pjBK45nIjUYV8EC.png"/></p>
<p><a href="https://www.debuggex.com/r/_pjBK45nIjUYV8EC" rel="nofollow">Debuggex Demo</a></p>
<p>The name of each item is in capture group 1, and value in group two. It requires the ignore-case flag, as you know.</p>
<blockquote>
<p>"Note that these LDAP names can contain spaces, so whitespace searches are pretty useless"</p>
</blockquote>
<p>I don't understand. Your posted demo input contains no spaces.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would advise always rawing your regex strings to avoid any sorts of bad surprises. This said, I would then suggest this regex:</p>
<pre><code>(?:cn|ou|dc)=[^,"]+
</code></pre>
<p><a href="http://regex101.com/r/xT0oB0" rel="nofollow">regex101 demo</a></p>
<p><a href="http://ideone.com/xmpdtQ" rel="nofollow">ideone demo</a></p>
<p>I used single quotes for the regex string so that I wouldn't have to escape the double quote I have in the regex.</p>
<p><code>(?:cn|ou|dc)</code> matches any of <code>cn</code>, <code>ou</code> or <code>dc</code>.</p>
<p><code>[^,"]+</code> matches any character except <code>,</code> and <code>"</code>.</p>
</div>
<span class="comment-copy">Regarding whitespace: <code>CN=Server001,OU=Some OU,DC=MyDom,DC=org</code> is also valid. However, <code>re.findall("(cn|ou|dc)=([\w\s-]+)\b,?", log_line1)</code> returns a list of tuples: <code>[('CN', 'Server001'), ('OU', 'Some OU'), ... ]</code> which works well enough for my purposes. There's probably a more efficient answer, and I'd love to see someone come up with it, but I can move forward with this.</span>
<span class="comment-copy">Just change the character class from <code>[\w-]</code> to <code>[-\w  ]</code>, and you should be good.</span>
<span class="comment-copy">What does "rawing" mean?</span>
<span class="comment-copy">@aliteralmind this means you won't have to double escape stuff. Say you want to match one backslash. You'd need <code>'\\\\'</code> to match a single backslash. Rawing the string enables you to use <code>'\\'</code> to match a single backslash. See <a href="http://docs.python.org/3/library/re.html" rel="nofollow noreferrer">the docs</a> .</span>
