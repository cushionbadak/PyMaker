<div class="post-text" itemprop="text">
<p>What would be the best way to change a single directory name (only the first occurence) within a path?</p>
<p>Example:</p>
<pre><code>source_path = "/path/to/a/directory/or/file.txt"
target_path = "/path/to/different/directory/or/file.txt"
</code></pre>
<p>I this case, the instruction would be: "replace the first directory of the name 'a' with a directory of the name 'different'"</p>
<p>I can think of methods where I would split up the path in its single parts first, then find the first "a", replace it and join it again. But I wonder if there is a more elegant way to deal with this. Maybe a built-in python function.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a function called <a href="http://docs.python.org/3.3/libray/os.path.html#os.path.split" rel="nofollow"><code>os.path.split</code></a> that can split a path into the final part and all leading up to it but that's the closest your going to get. Therefore the most elegant thing we can do is create a function that calls that continuously:</p>
<pre><code>import os, sys 
def splitall(path): 
    allparts = [] 
    while 1: 
        parts = os.path.split(path) 
        if parts[0] == path: # sentinel for absolute paths 
            allparts.insert(0, parts[0]) 
            break 
        elif parts[1] == path: # sentinel for relative paths 
            allparts.insert(0, parts[1]) 
            break 
        else: 
            path = parts[0] 
            allparts.insert(0, parts[1]) 
            return allparts
</code></pre>
<p>Then you could use it like this, joining back together with <a href="http://docs.python.org/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join</code></a>:</p>
<pre><code>&gt;&gt;&gt; source_path = '/path/to/a/directory/or/file'
&gt;&gt;&gt; temp = splitall(source_path)
&gt;&gt;&gt; temp
['path', 'to', 'a', 'directory', 'or', 'file']
&gt;&gt;&gt; temp[2] = 'different'
&gt;&gt;&gt; target_path = os.path.join(*temp)
&gt;&gt;&gt; target_path
'path/to/different/directory/or/file'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand what you want to say, you want this:</p>
<pre><code>source_path = "/path/to/a/directory/or/file.txt"
target_path = source_path.replace("/a/", "/different/", 1)
print target_path
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/pathlib.html#module-pathlib" rel="nofollow noreferrer">https://docs.python.org/3/library/pathlib.html#module-pathlib</a>:</p>
<pre><code>&gt;&gt;&gt; from pathlib import PurePath
&gt;&gt;&gt; import os
&gt;&gt;&gt; path = PurePath("/path/to/a/directory/or/file.txt")
&gt;&gt;&gt; path.parts
('/', 'path', 'to', 'a', 'directory', 'or', 'file.txt')
&gt;&gt;&gt; a_idx = -1
&gt;&gt;&gt; for idx,part in enumerate(path.parts):
...   if part == 'a':
...     a_idx = idx
...     break
... 
&gt;&gt;&gt; a_idx
3
&gt;&gt;&gt; pre_path = os.path.join(*path.parts[:a_idx])
&gt;&gt;&gt; post_path = os.path.join(*path.parts[a_idx+1:])
&gt;&gt;&gt; new_path = os.path.join(pre_path, 'different', post_path)
&gt;&gt;&gt; new_path
'/path/to/different/directory/or/file.txt'
</code></pre>
</div>
<span class="comment-copy">Thanks! Ok, I guess this really is the simplest approach after all.</span>
<span class="comment-copy">Ok, yes, that's true. But I was hoping to avoid "low-level" string operations that contain explicit slashs.</span>
<span class="comment-copy">Well, you can use regex to do it.</span>
