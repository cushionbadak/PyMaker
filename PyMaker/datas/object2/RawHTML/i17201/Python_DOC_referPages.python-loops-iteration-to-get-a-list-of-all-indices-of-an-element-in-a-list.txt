<div class="post-text" itemprop="text">
<p>I am trying to write a function which consumes a string and a character and produces a list of indices for all occurrences of that character in that string.</p>
<p>So far this is what I have, but it always gives me [].</p>
<pre><code>def list_of_indices(s,char):

    string_lowercase = s.lower()
    sorted_string = "".join(sorted(string_lowercase))
    char_list = list(sorted_string)

    for x in char_list:
          a = []
          if x == char:

             a.append(char_list.index(x))
          return a
</code></pre>
<p>I don't understand why this does not yield the answer. And it has to be a list of non-empty length.</p>
<p>Anyone aware of how to get the indices for all occurrences?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're returning on the first iteration of your <code>for</code>-loop. Make sure the <code>return</code> statement is outside the scope of the loop.</p>
<p>Also, be sure to put <code>a = []</code> <em>before</em> the <code>for</code>-loop. Otherwise, you're effectively resetting the list on each iteration of loop.</p>
<p>There is also a problem with <code>char_list.index(x)</code>. This will always return the index of the <em>first</em> occurrence of <code>x</code>, which isn't what you want. You should keep track of an index as you are looping (e.g. with <a href="http://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate()</code></a>).</p>
<p>And I'm not sure what you were trying to do with the sort; looping through the original string should be sufficient.</p>
<p>Lastly, note that you can loop over a string directly; you don't need to convert it to a list (i.e. <code>char_list</code> is unnecessary).</p>
<hr/>
<p>Note that your task can be accomplished with a simple <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; s = 'abcaba'
&gt;&gt;&gt; char = 'a'
&gt;&gt;&gt; 
&gt;&gt;&gt; [i for i,c in enumerate(s) if c == char]  # &lt;--
[0, 3, 5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could implement it using a quick <a href="http://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>.</p>
<pre><code>def list_of_indicies(s, char):
    return [i for i, c in enumerate(s) if c == char]
</code></pre>
<p>or by using a for loop instead:</p>
<pre><code>def list_of_indicies(s, char):
    results = list()

    for i, c in enumerate(s):
        if c == char:
            results.append(i)

    return results
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are returning a on the first loop of your for loop iteration.</p>
<p><strong>Change for loop to this for starters:</strong></p>
<pre><code>def list_of_indices(s,char):
    string_lowercase = s.lower()
    a = []
    i = 0
    for x in string_lowercase:
        if x == char:
            a.append(i)
        i+=1
    return a
</code></pre>
</div>
<span class="comment-copy">Related: <a href="http://stackoverflow.com/questions/6294179/how-to-find-all-occurrences-of-an-element-in-a-list">How to find all occurrences of an element in a list?</a></span>
<span class="comment-copy">Which would mean that it should be aligned with for or define?</span>
<span class="comment-copy">@user3457606 It should be at the same indentation level as <code>for</code>.</span>
<span class="comment-copy">I do realize that it could be solved through list comprehension but I specifically require a loops solution.</span>
<span class="comment-copy">@user3457606 Sure, the beginning of my answer still stands. Plus the comprehension might be helpful for others who visit this page with the same problem.</span>
<span class="comment-copy">Yes. Is there aq way we can do this with loops alone?</span>
<span class="comment-copy">This only gives a list of the same index of the character the number of times it appears in the list. Also, is there a way to get the answer while staying away from enumerate() or list comprehension, strictly loops?</span>
<span class="comment-copy">Sorry, maybe I missunderstood the question, can you please provide an example of an input and an output of your desired function ? This would make it much easier.</span>
<span class="comment-copy">so lets say if i have list_of_indices("abcc","c") =&gt; [2,3]</span>
<span class="comment-copy">Please see my updates</span>
<span class="comment-copy">Thanks a lot. That worked.</span>
