<div class="post-text" itemprop="text">
<p>I am executing a script which prompts for 2 values one after the other. I want to pass the values from the script itself as I want to automate this.</p>
<p>Using the subprocess module, I can easily pass one value:</p>
<pre><code>suppression_output = subprocess.Popen(cmd_suppression, shell=True,
        stdin= subprocess.PIPE,
        stdout= subprocess.PIPE).communicate('y') [0]
</code></pre>
<p>But passing the 2nd value does not seem to work. If I do something like this:</p>
<pre><code>suppression_output = subprocess.Popen(cmd_suppression, shell=True,
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE).communicate('y/r/npassword')[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should use \n for the new line instead of /r/n  -&gt; 'y\npassword'</p>
<p>As your question is not clear, I assumed you have a program which behaves somewhat like this python script, lets call it script1.py:</p>
<pre><code>import getpass
import sys
firstanswer=raw_input("Do you wish to continue?")
if firstanswer!="y":
  sys.exit(0)   #leave program
secondanswer=raw_input("Enter your secret password:\n")
#secondanswer=getpass.getpass("Enter your secret password:\n")
print "Password was entered successfully"
#do useful stuff here...
print "I should not print it out, but what the heck: "+secondanswer
</code></pre>
<p>It asks for confirmation ("y"), then wants you to enter a password. After that it does "something useful", finally prints the password and then exits</p>
<p>Now to get the first program to be run by a second script script2.py it has to look somewhat like this:</p>
<pre><code>import subprocess
cmd_suppression="python ./testscript.py"
process=subprocess.Popen(cmd_suppression,shell=True\
,stdin=subprocess.PIPE,stdout=subprocess.PIPE)
response=process.communicate("y\npassword")
print response[0]
</code></pre>
<p>The output of script2.py:</p>
<pre><code>$ python ./script2.py
Do you wish to continue?Enter your secret password:
Password was entered successfully
I should not print it out, but what the heck: password
</code></pre>
<p>A problem can most likely appear if the program uses a special method to get the password in a secure way, i.e. if it uses the line I just commented out in script1.py</p>
<pre><code>secondanswer=getpass.getpass("Enter your secret password:\n")
</code></pre>
<p>This case tells you that it is probably not a good idea anyway to pass a password via a script. </p>
<p>Also keep in mind that calling subprocess.Popen with the shell=True option is generally a bad idea too. Use shell=False and provide the command as a list of arguments instead:</p>
<pre><code>cmd_suppression=["python","./testscript2.py"]
process=subprocess.Popen(cmd_suppression,shell=False,\
stdin=subprocess.PIPE,stdout=subprocess.PIPE)
</code></pre>
<p>It is mentioned a dozen times in the <a href="http://docs.python.org/2/library/subprocess.html" rel="nofollow" title="Subprocessquot;">Subprocess</a> Documentation</p>
</div>
<div class="post-text" itemprop="text">
<p>Try <code>os.linesep</code>:</p>
<pre><code>import os
from subprocess import Popen, PIPE

p = Popen(args, stdin=PIPE, stdout=PIPE)
output = p.communicate(os.linesep.join(['the first input', 'the 2nd']))[0]
rc = p.returncode
</code></pre>
<p>In Python 3.4+, you could use <a href="http://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="nofollow"><code>check_output()</code></a>:</p>
<pre><code>import os
from subprocess import check_output

input_values = os.linesep.join(['the first input', 'the 2nd']).encode()
output = check_output(args, input=input_values)
</code></pre>
<p>Note: the child script might ask for a password directly from the terminal without using subprocess' stdin/stdout. In that case, you might need <code>pexpect</code>, or <code>pty</code> modules. See <a href="http://pexpect.readthedocs.org/en/latest/FAQ.html#whynotpipe" rel="nofollow">Q: Why not just use a pipe (popen())?</a></p>
<pre><code>import os
from pexpect import run # $ pip install pexpect

nl = os.linesep
output, rc = run(command, events={'nodes.*:': 'y'+nl, 'password:': 'test123'+nl},
                 withexitstatus=1)
</code></pre>
</div>
<span class="comment-copy">Thanks for the explanation. I will make my question a little more clear. I have a python script which runs a command which prompts me two times: Suppress nodes:? [y/N]:  and Enter schen password:    I want to respond to these prompts automatically from the script when running it from the subprocess module. Is that possible? I am only able to pass the first answer 'y' with communicate()..how to pass the second one?</span>
<span class="comment-copy">It should work right away if you change communicate('y/r/npassword') into communicate('y\npassword') or maybe even communicate('y\r\npassword') (under Windows). It would be most helpful if you were to provide the error message you get (if any). My script2.py has exactely the functionality you want to have for your script and it works fine on my machine (linux, python 2.7.5+)</span>
<span class="comment-copy">It still stops at the second prompt. Here is my code: <a href="http://pastebin.com/LA2Dcbvv" rel="nofollow noreferrer">pastebin.com/LA2Dcbvv</a>   It has two prompts: Suppress nodes:? [y/N]: and Enter schen password:   . It accepts the 'y' automatically but prompts for the password (password is test123 which i hard coded in the script)</span>
<span class="comment-copy">Well then it seems that the program doesn't take the password from stdin, so using subprocess will not work here. That is the problem I mentioned in my answer. A solution would be to use the module pexpect instead. Look at this Post, the problem is quite similar to yours: <a href="http://stackoverflow.com/questions/230845/make-python-enter-password-when-running-a-csh-script" title="make python enter password when running a csh script">stackoverflow.com/questions/230845/…</a></span>
<span class="comment-copy">A brief introduction to pexpect can be found here: <a href="http://www.pythonforbeginners.com/systems-programming/how-to-use-the-pexpect-module-in-python" rel="nofollow noreferrer">pythonforbeginners.com/systems-programming/…</a></span>
<span class="comment-copy">no..the same thing..it accepts 'y' for the first prompt but stops at the password..code.. <a href="http://pastebin.com/8L4T67d6" rel="nofollow noreferrer">pastebin.com/8L4T67d6</a></span>
<span class="comment-copy">@user3431143: <a href="http://stackoverflow.com/posts/22468215/edit">update your question</a> and put the code where. Also "the same thing" is not informative. Describe what happens in detail (in your question).</span>
<span class="comment-copy">The sript asks for 2 prompts which i want to supply automatically: Suppress nodes:? [y/N]: and Enter schen password: . It accepts the 'y' automatically for the 1st prompt but prompts for the password (password is test123 which i hard coded in the script)</span>
<span class="comment-copy">@user3431143: do not put the relevant info in the comments. <a href="http://stackoverflow.com/posts/22468215/edit">update your question instead</a></span>
<span class="comment-copy">@user3431143: do you see the password prompt on the terminal or is it blank?</span>
