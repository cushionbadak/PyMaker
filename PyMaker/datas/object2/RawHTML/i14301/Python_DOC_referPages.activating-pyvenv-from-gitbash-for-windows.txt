<div class="post-text" itemprop="text">
<p>I use gitbash on windows (7, 64bit). I tried to create a venv using python 3.4's built-in venv module by calling <code>python -m venv venv</code>, and it created successfully, but the resultant venv does not contain a bash activate script, only a <code>.bat</code> and <code>.ps1</code>.</p>
<p>The virtualenv library for python 2.6.6 (version 13.0.1) created the following four files in the <code>venv/Scripts/</code> folder: <code>activate</code>, <code>activate.bat</code>, <code>activate.ps1</code>, and <code>activate_this.py</code>.</p>
<p>As the gitbash console cannot use the bat or powershell scripts, and I don't really want to have to move back to the windows cmd prompt or to a VM, is there any way I can get pyvenv to create a shell script for me while I'm on windows?</p>
</div>
<div class="post-text" itemprop="text">
<p>There were lots of confusion in many answers and comments here. Some of them said you can simply do <code>. activate</code>, some (@nme) <a href="https://stackoverflow.com/questions/30577271/activating-pyvenv-from-gitbash-for-windows#comment83836595_40543065">said</a> "You'll get the "No such file or directory" error then since there is only activate.bat and Activate.ps1 which both don't work."</p>
<p>The problem did exist, as documented in <a href="https://bugs.python.org/issue22343" rel="nofollow noreferrer">this issue</a>. And that issue <a href="https://bugs.python.org/issue22343#msg285336" rel="nofollow noreferrer">was eventually fixed at Jan 2017</a> in Python 3.5.x, 3.6.x onward. Therefore, <strong>ONLY Python 3.5.3+, 3.6.1+, 3.7 released AFTER Jan 2017 would have fixed such issue.</strong> Possibly Python 2.7.14+ too. This means, if you are still reading this Q&amp;A page, the first thing you would need to do is to check which version of Python you are using, and then probably do an upgrade. (For example, I encountered same issue with one of my old Python 3.6.0 environment, and after upgrading to Python 3.7.2, the problem is gone.)</p>
</div>
<div class="post-text" itemprop="text">
<p>You do not have to worry about the presence of virtual env bash script go to <strong>Git bash</strong> and use <code>. Scripts/activate</code> or <code>source Scripts/activate</code> as mentioned in answer in this topic <a href="https://stackoverflow.com/questions/10450992/can-not-activate-a-virtualenv-in-git-bash-mingw32-for-windows">Can not activate a virtualenv in GIT bash mingw32 for Windows</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This is (currently) by design.</p>
<p>In Windows, only the Command Prompt (.bat) and PowerShell (.ps1) scripts are installed. <a href="https://docs.python.org/3/library/venv.html#creating-virtual-environments" rel="nofollow">The venv documentation</a> says "The invocation of the script is platform-specific" â€“ see the table in that document listing commands to activate the venv on different platforms. If you look at the venv source code, you can see that it differentiates between Windows and POSIX environments and installs scripts accordingly.</p>
<p>However, there is an <a href="https://bugs.python.org/issue22343" rel="nofollow">open bug</a> that requests that scripts for other shells should also be installed. While waiting for that to possibly be resolved, there is a workaround: you could grab the bash (or other shell) script from your local machine or from the <a href="https://hg.python.org/cpython/" rel="nofollow">cPython hg repository</a> (<a href="https://hg.python.org/cpython/raw-file/default/Lib/venv/scripts/posix/activate" rel="nofollow">direct link to the file</a>) and put it in the Scripts folder next to the Windows-specific ones. You need to change <code>__VENV_DIR__</code> to the directory where your venv is located, <code>__VENV_BIN_NAME__</code> to "bin", and <code>__VENV_PROMPT__</code> to whatever you want the bash prompt to be when the venv is activated (for example, "(env) "). Set permissions, and you should be good to go.</p>
</div>
<div class="post-text" itemprop="text">
<p>The following code explain how to set up and start a virtualenv named env_project inside a folder named project in Git Bash:</p>
<pre><code>mkdir project
cd project/
virtualenv env_project
. activate env_project/
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this worked for me:
        . activate</p>
</div>
<span class="comment-copy">I am having this exact problem right now.  I even upgraded to Python 3.5 but that didn't fix it.  Did you ever find a solution?</span>
<span class="comment-copy">I think this is a bug. I need to use Windows 7, 8 for development on project but always install the Git Bash Shell first thing so i can avoid that clunky DOS cmd shell and get my grep, find commands, aliases etc. I am going to try and generate a venv on Linux and archive the active/deactivate for later pastes on to Windows based systems.</span>
<span class="comment-copy">Thank you for the answer... AND the explanation!</span>
<span class="comment-copy">Thank you! God damn this was driving me insane. Had an installation of 3.6.0 that was not creating the activate script. 3.7.3 works great.</span>
<span class="comment-copy">You'll get the "No such file or directory" error then since there is only activate.bat and Activate.ps1 which both don't work.</span>
<span class="comment-copy">@nme  In git bash, please try to go to path <i>venvFolder/Scripts</i> and execute <code>. activate</code>. This works for me.(Windows10 64bit/Py3.5)</span>
<span class="comment-copy">That <code>activate</code> file does not work, as it contains placeholders which are presumably populated by a python script</span>
<span class="comment-copy">Is this a new/recent feature addition?</span>
