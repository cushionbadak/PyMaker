<div class="post-text" itemprop="text">
<p>I am trying to write a generic pattern using regex so that it fetches only particular things from the string. Let's say we have strings like GigabitEthernet0/0/0/0 or FastEthernet0/4 or Ethernet0/0.222. The regex should fetch the first 2 characters and all the numerals. Therefore, the fetched result should be something like Gi0000 or Fa04 or Et00222 depending on the above cases.</p>
<pre><code>x = 'GigabitEthernet0/0/0/2
m = re.search('([\w+]{2}?)[\\\.(\d+)]{0,}',x)
</code></pre>
<p>I am not able to understand how shall I write the regular expression. The values can be fetched in the form of a list also. I write few more patterns but it isn't helping.</p>
</div>
<div class="post-text" itemprop="text">
<p>In regex, you may use <code>re.findall</code> function.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = 'GigabitEthernet0/0/0/0 '
&gt;&gt;&gt; s[:2]+''.join(re.findall(r'\d', s))
'Gi0000'
</code></pre>
<p>OR</p>
<pre><code>&gt;&gt;&gt; ''.join(re.findall(r'^..|\d', s))
'Gi0000'
&gt;&gt;&gt; ''.join(re.findall(r'^..|\d', 'Ethernet0/0.222'))
'Et00222'
</code></pre>
<p>OR</p>
<pre><code>&gt;&gt;&gt; s = 'GigabitEthernet0/0/0/0 '
&gt;&gt;&gt; s[:2]+''.join([i for i in s if i.isdigit()])
'Gi0000'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>z="Ethernet0/0.222."
print z[:2]+"".join(re.findall(r"(\d+)(?=[\d\W]*$)",z))
</code></pre>
<p>You can try this.This will make sure only digits from end come into play .</p>
</div>
<span class="comment-copy">If you're going to process a lot of strings you should <a href="https://docs.python.org/3/library/re.html#re.compile" rel="nofollow noreferrer">compile</a> your regex - it's a lot more efficient than creating the same regex over &amp; over in a loop.</span>
<span class="comment-copy">@PM2Ring thank you very much, it would be of great help :)</span>
<span class="comment-copy">you can use <code>s[:2]</code> and a list comprehension within <code>join</code> for more performance</span>
<span class="comment-copy">done, thanks....</span>
<span class="comment-copy">Now you just need to turn that last gen exp into a list comp. :) As Kasra said, you get better performance that way. That's because <code>join</code> has to scan its iterable arg twice - the 1st scan is to determine the size of the string it needs to allocate. So if you pass it a generator it has to build that into a list before it can join it.</span>
<span class="comment-copy">thanks, don't know that..</span>
<span class="comment-copy">Lots of people don't know that. :) So I'll leave that comment for the benefit of future readers, even though you've fixed it now.</span>
<span class="comment-copy">But from the OP it looks like Vipul wants all the digits, eg <code>Ethernet0/0.222</code> -&gt; <code>Et00222</code></span>
<span class="comment-copy">@PM2Ring <code>Gig9abitEthernet0/0/0/2</code> i dont think OP would want <code>9</code> from this ex..He should clarify though</span>
<span class="comment-copy">@Vipul what is the expected output for <code>Gig9abitEthernet0/0/0/2</code> do you want <code>9</code> here?</span>
