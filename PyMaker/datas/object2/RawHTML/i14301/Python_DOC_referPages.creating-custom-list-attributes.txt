<div class="post-text" itemprop="text">
<p>I am trying to create functions for the property list. How do you create the attribute function for something like this?</p>
<pre><code>list([1,2,3,4,5]).even()
</code></pre>
<p>should return:</p>
<pre><code>[2,4]
</code></pre>
<p>The method should be easy but I am having trouble associating the function with the predefined object list.</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot add methods or attributes to any of the built-in objects.  This is by design.  </p>
<p>Instead, you can create your own list type that is derived from the built-in one:</p>
<pre><code>class MyList(list):
    def even(self):
        return [x for x in self if x % 2 == 0]
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; class MyList(list):
...     def even(self):
...         return [x for x in self if x % 2 == 0]
... 
&gt;&gt;&gt; MyList([1,2,3,4,5]).even()
[2, 4]
</code></pre>
<p>For more information, see <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow">Classes</a> in the documentation, specifically the section on <a href="https://docs.python.org/3/tutorial/classes.html#inheritance" rel="nofollow">Inheritance</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't monkeypatch built in objects in Python like you can in Ruby. You'd have to build a new object, inherit <code>list</code>, and put your method on that.</p>
<pre><code>class MyList(list):
    def even(self):
        return [num for num in self if num % 2 == 0]

MyList([1,2,3,4,5]).even()
</code></pre>
</div>
<span class="comment-copy">You can't. Python doesn't allow this.</span>
<span class="comment-copy">Don't put links to secondary questions that only appear behind a login wall. If you have another question, then ask it.</span>
<span class="comment-copy">Ok. Will do Adam.</span>
<span class="comment-copy">Do you want to change the original list?</span>
<span class="comment-copy">No, i want the function call above to work. Apparently there is a solution but, based on the posts below, i do not think it is possible. The above is one test code.</span>
<span class="comment-copy">Or <code>self[:] = (x for x in self if not x % 2)</code> to change the original list,</span>
<span class="comment-copy">@PadraicCunningham - Well, the OP said he wanted to have <code>even()</code> return <code>[2, 4]</code>.  If the method mutated the list, then it should probably return <code>None</code> instead to be consistent with <code>list.sort()</code> or <code>list.reverse()</code>.  That's why I made it return a new list.</span>
