<div class="post-text" itemprop="text">
<p>This is a small piece of an application I'm having some issues with at the moment.</p>
<pre><code>import csv
with open('eggs.csv', 'rb') as csvfile:
     reader = csv.DictReader(csvfile)
     for row in reader:
         print(row['first_name'], row['cat'])
         print(row[1])
</code></pre>
<p>The application section runs fine with no issues, But I wanted to access each value from 'row' by means of the ith element or through a numerical value.</p>
<p>However, this doesn't seem to function as expected.</p>
<p>Is there a specific way I should be doing this to access member items without having to directly call their column name.</p>
<p>Help and clarification is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>csv</code> module gives you two broad ways of accessing data from each line of the file:</p>
<ol>
<li>By index, using <a href="https://docs.python.org/2/library/csv.html#csv.reader" rel="nofollow"><code>reader</code></a>; or </li>
<li>By key, using <a href="https://docs.python.org/2/library/csv.html#csv.DictReader" rel="nofollow"><code>DictReader</code></a>.</li>
</ol>
<p>However, note that a <code>DictReader</code> instance has a <code>fieldnames</code> attribute, which is <em>"a sequence whose elements are associated with the fields of the input data in order"</em>, so to convert from index to key you could use:</p>
<pre><code>row[reader.fieldnames[1]]
</code></pre>
</div>
<span class="comment-copy">Don't use <code>DictReader()</code>, if all you want is a list of lists then use <code>csv.reader()</code></span>
<span class="comment-copy">I've assumed below that you want to use both keys and indices, but if you <i>only</i> want the index @Jkdc is correct, just use <code>reader</code>.</span>
<span class="comment-copy">Thanks guys. Great insight and helped me out allot.</span>
<span class="comment-copy">It's a little more advanced, but you can also use <code>csv.reader()</code> and convert each row into a <a href="https://docs.python.org/3/library/collections.html?highlight=namedtuple#collections.namedtuple" rel="nofollow noreferrer"><code>collections.namedtuple</code></a>. The advantage of doing that is that it would allow you to reference each row's contents by both integer indices OR as attributes. By the latter I mean something like this: <code>row.first_name</code> and <code>row.cat</code>. A possible downside it that, unlike a dictionary, the contents of a tuple can't be changed.</span>
<span class="comment-copy">This was exactly what I was looking for. Thank you for the clarification and on point answer!</span>
<span class="comment-copy">@andrew <a href="http://stackoverflow.com/help/someone-answers">stackoverflow.com/help/someone-answers</a></span>
