<div class="post-text" itemprop="text">
<p>Sometimes I am running unittest on specific modeule by pointing to  <code>make PYTHON_TEST=path_of_module_to_test test</code> and if this module <code>path_of_module_to_test test</code> imports some other python module that were updated, will importing done from this module be taken from the updated py source file or from the unupdated pyc file , or will the import lead to updated of dependent pyc file ?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://www.python.org/dev/peps/pep-3147/" rel="nofollow">PEP 3147</a>:</p>
<blockquote>
<p>CPython compiles its source code into "byte code", and for performance
  reasons, it caches this byte code on the file system whenever the
  source file has changes. This makes loading of Python modules much
  faster because the compilation phase can be bypassed. When your source
  file is foo.py , CPython caches the byte code in a foo.pyc file right
  next to the source.</p>
</blockquote>
<p>If your source changes; CPython will recompile and re-cached the bytecode.</p>
<p>Note that the above is for <code>Python 2.x</code>. This all changed in <code>Python 3.x</code> in <a href="https://docs.python.org/3/whatsnew/3.2.html#pep-3147-pyc-repository-directories" rel="nofollow">Python 3.2: PEP 3147: PYC Repository Directories</a></p>
<p><strong>Note:</strong> When we refer to "CPython" here we are referring to the implementation of Python that you are most likely using from <a href="https://www.python.org" rel="nofollow">https://www.python.org</a> as this behaviour (<em>I believe</em>) is implementation specific.</p>
</div>
<span class="comment-copy">Python (<i>CPython 2.x</i>) checks if <code>.pyc</code> (<i>cached byte-code</i>) is out-of-date and recompiles a new cached copy as necessary.</span>
<span class="comment-copy">well that I know, but if I have updated a python source file but have not compiled it and it has old pyc python bytecode file lying next in the same directory then if I run test on <code>path_of_module_to_test</code> will take the updated py or the pyc file, or the pyc will get updated when import is being done ?</span>
