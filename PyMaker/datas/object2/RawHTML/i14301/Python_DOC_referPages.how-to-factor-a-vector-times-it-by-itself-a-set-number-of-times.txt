<div class="post-text" itemprop="text">
<p>How do I factor a vector, so take a vector and multiply by itself a number of times. I tried <code>vec=vector**4</code> but get:</p>
<blockquote>
<p>Runtime error (TypeErrorException): unsupported operand type(s) for **: 'Vector3d' and 'int'</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Assuming <code>Vector3d</code> is a type you designed yourself, you need to add support for <code>**</code> explicitly.</p>
<p>If you look at the documentation for <a href="https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types" rel="nofollow">Emulating numeric types</a>, you'll see that the method you need to write is:</p>
<pre><code>object.__pow__(self, other[, modulo])
</code></pre>
<p>If you're confused by that third argument, <code>__pow__</code> is used not only for the <code>**</code> operator, but also for the <a href="https://docs.python.org/3/library/functions.html#pow" rel="nofollow"><code>pow</code></a> function, which takes an optional third argument for modular exponentiation. If you don't want to support that, you can ignore it.</p>
<p>Now, how do you implement vector exponentiation? Well, if you only care about whole number powers, you can always do it through repeated cross-product. Assuming you've defined the <code>*</code> operator to mean cross-product:</p>
<pre><code>class Vector3d(object):
    # ... other methods ...
    def __pow__(self, power):
        if not isinstance(power, numbers.Integral) or other &lt; 0:
            # give power.__rpow__ a chance, just in case...
            return NotImplemented
        result = type(self)(1, 1, 1)
        for _ in range(power):
            result *= self
        return result
</code></pre>
<p>If you want to be able to raise vectors to real, complex, or vector powers, then there are a few different ways to define those things, and if you don't know which one you want, you probably need to ask about it on Math rather than StackOverflow.</p>
</div>
<span class="comment-copy">First, that's not what "factoring" means. What you want is "exponentiation".</span>
<span class="comment-copy">Second, the problem is obviously that whatever <code>Vector3d</code> class you're using, it doesn't support the <code>**</code> operator. If you wrote that class yourself, show us the code, and we can show you how to add support for it (or just look up <code>__pow__</code> in the data model section of the docs). If you're using some third-party library, tell us what library, and maybe we can tell you what it supports if you can't find it in the docs yourself.</span>
<span class="comment-copy">I am working with Rhino3d rhinoscriptsyntax... I will research exponentiation . thanks for your reply</span>
<span class="comment-copy">wow. thanks for this in depth reply! I will study all these super helpful answers carefully! so much to learn!!!</span>
