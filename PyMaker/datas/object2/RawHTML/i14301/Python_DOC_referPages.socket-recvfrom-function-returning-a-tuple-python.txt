<div class="post-text" itemprop="text">
<p>I'm a python noobie and I must create a Truco (brazillian game, if you don't know) game that connects 4 machines. I'm doing it with classes, using pickles to transfer it to a socket. According to what I could find online, this should work, but my recv is a tuple, and I can't use loads from a tuple. I've tried to convert it to a list, and then to a string, but nothing works!</p>
<pre><code>def recv(self, machine):
    PORT = 5054
    HOST = ''
    orig = (socket.gethostbyname(HOST), PORT)
    machine._socketrcv.bind(orig)
    recv = machine._socketrcv.recvfrom(1024)
    return pickle.loads(recv)
</code></pre>
<p>And here is my send method:</p>
<pre><code>def sent(self, m, machine):
    PORT = 5054
    dest = (machine._host, PORT)
    self._socketsnd.sendto(m._dados,dest)
</code></pre>
<p>Where m._dados is self.dados = pickle.dumps(dados, 2)</p>
<p>Can anyone help?</p>
</div>
<div class="post-text" itemprop="text">
<p>You probably want to read through <a href="https://docs.python.org/2/library/socket.html" rel="nofollow" title="socket">socket</a> and then do something like <code>recv = machine._socketrcv.recvfrom(1024)[0]</code></p>
<blockquote>
<p><code>socket.recvfrom(bufsize[, flags])</code></p>
<p>Receive data from the socket. The return value is a pair (string, address) where string is a string representing the data received and address is the address of the socket sending the data. See the Unix manual page recv(2) for the meaning of the optional argument flags; it defaults to zero. (The format of address depends on the address family â€” see above.)</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><code>recvfrom</code> returns a tuple with the data and the address (more info can be found in the <a href="https://docs.python.org/3/library/socket.html" rel="nofollow">socket documentation</a>). Unlike some other languages Python lets you put a tuple on the left hand side of an assignment, so if you do something like this:</p>
<pre><code>data, (address, port) = machine._socketrcv.recvfrom(1024)
</code></pre>
<p>you will get access to all the information you need in separate named variables. In your case you just need the data:</p>
<pre><code>pickle.loads(data)
</code></pre>
</div>
<span class="comment-copy">the second element in the <code>recvfrom</code>  return is a 2 element tuple itself which contains the IP address and the port that the connection was made on. As far as I know this code works fine.</span>
