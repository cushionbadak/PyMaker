<div class="post-text" itemprop="text">
<p>I have model with two fields:</p>
<pre><code>class Event(models.Model):
    date = models.DateField(_(u'Date'))
    time = models.TimeField(_(u'Time'))
</code></pre>
<p>I need to find all objects where date&amp;time is in 24 hours from now. </p>
<p>I am able to do this when using DateTime field, but I am not sure how to achieve this when fields are separated. Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>For the simple case (not sure if all are simple cases though...), this should do the trick:</p>
<pre><code>import datetime

today = datetime.datetime.now()
tomorrow = today + datetime.timedelta(days=1)

qs_today = queryset.filter(
    date=today.date(),
    time__gte=today.time(),
)
qs_tomorrow = queryset.filter(
    date=tomorrow.date(),
    time__lt=tomorrow.time(),
)
qs = qs_today | qs_tomorrow
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you state you can do what you want with a <code>DateTimeField</code>, but now with the separate fields, I understand your issue is how to combine them.</p>
<p><a href="https://docs.djangoproject.com/en/1.8/ref/models/fields/#django.db.models.DateField" rel="nofollow noreferrer">Looking at the docs for DateField</a> - your <code>date</code> variable is a <code>datetime.date</code> instance and <a href="https://docs.djangoproject.com/en/1.8/ref/models/fields/#timefield" rel="nofollow noreferrer">similarly for TimeField</a> <code>time</code> is a <code>datetime.time</code>.  You can convert these into a <code>datetime.datetime</code> by using <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.combine" rel="nofollow noreferrer"><code>combine()</code></a></p>
<pre><code>import datetime as dt
datetime = dt.datetime.combine(date,time)
</code></pre>
<p>You now have the datetime object as you would have from <code>DateTimeField</code>.  You say in the question you can do the 24 hour from now bit from there, although let me know in comments if you need that made explicit.</p>
<p><strong><em>Caveat</em></strong> I <code>combine</code> will fail where one of the fields is <code>None</code> - you state this can't happen, so I haven't added any error checking or validation of this.</p>
<h3>EDIT</h3>
<p>It occurs to me that the problem may not be the combination, but adding the calculated field to the <code>Event</code> object.  You could look at <a href="https://stackoverflow.com/a/17682694/838992">this Q&amp;A</a>, or <a href="https://stackoverflow.com/a/11465349/838992">this</a>.  In summary you define the calculated value in a function in your class and then make it a <a href="https://docs.djangoproject.com/en/1.8/glossary/#term-property" rel="nofollow noreferrer">property</a> - either with a decorator or a function call.  There's an <a href="https://docs.djangoproject.com/en/1.8/topics/db/models/#model-methods" rel="nofollow noreferrer">example in the docs</a>, adapting for your case:</p>
<pre><code>    def _get_datetime(self):
       '''Returns a combination of date and time as a datetime'''
       return dt.datetime.combine(self.date,self.time)
    datetime = property(_get_datetime)
</code></pre>
<p>This should behave in the same way as you would expect a <code>DateTimeField</code> to behave.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>Q</code> objects to search for "yesterday after current time or today before current time":</p>
<pre><code>from django.db.models import Q
from .models import Event
from datetime import datetime, timedelta

def get_event_during_last_day():
    now = datetime.now()
    today = now.date()
    yesterday = (now - timedelta(day=1)).date()
    time = now.time()

    query_yesterday = Q(date=yesterday, time__gt=time)
    query_today = Q(date=today, time__lt=time)

    return Event.objects.filter(query_yesterday | query_today)
</code></pre>
</div>
<span class="comment-copy">Why are you using them separately?</span>
<span class="comment-copy">For many reasons. For example, I've got form, where user may or not provide time etc.</span>
<span class="comment-copy">I see, @rnevius has answered it already =).</span>
<span class="comment-copy">He has removed his answer :)</span>
<span class="comment-copy">@dease: what would happen if someone does not provide the date or time? The fields are not nullable right now so I wonder what kind of behaviour you are looking for.</span>
