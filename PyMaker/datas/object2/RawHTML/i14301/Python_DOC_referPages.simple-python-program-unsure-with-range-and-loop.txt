<div class="post-text" itemprop="text">
<p>Here is the psuedo code I was supposed to create in python:</p>
<pre class="lang-none prettyprint-override"><code>PlayerOneScore ← 0
PlayerTwoScore ← 0
OUTPUT "How many games?"
INPUT NoOfGamesInMatch
FOR NoOfGamesPlayed ← 1 TO NoOfGamesInMatch Do
    OUTPUT "Did Player One win the game (enter Y or N)?"
    INPUT PlayerOneWinsGame
    IF PlayerOneWinsGame = 'Y'
        THEN PlayerOneScore ← PlayerOneScore + 1
        ELSE PlayerTwoScore ← PlayerTwoScore + 1
    ENDIF
ENDFOR
OUTPUT PlayerOneScore
OUTPUT PlayerTwoScore
</code></pre>
<p>Here is what I created in python and its not working and I don't understand why?</p>
<pre><code>PlayerOneScore = 0
PlayerTwoSCore = 0
NoOfGamesInMatch = input("How Many games?")
for NoOfGamesPlayed != NoOfGamesInMatch:  
    PlayerOneWinsGame = input(" Did Player on win the game(Enter y or N?)")
    if PlayerOneWinsGame == "Y":
        PlayerOneScore = PlayerOneScore + 1
    else:
        PlayerTwoScore = PlayerTwoScore = 1
print("Player one Score is" + str(PlayerOneScore))
print("Player Two Score is" + str(PlayerTwoScore))
</code></pre>
<p>I tried the <code>in range</code> part, and I got this error when I input one when the program input how many games.</p>
<pre><code>    for NoOfGamesPlayed in range(NoOfGamesInMatch):
TypeError: 'str' object cannot be interpreted as an integer
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your line</p>
<pre><code>for NoOfGamesPlayed != NoOfGamesInMatch:  
</code></pre>
<p>is not valid Python. If you wanted to use looping here, <code>for</code> is helpful but you need to add a <code>range()</code> function:</p>
<pre><code>for NoOfGamesPlayed in range(int(NoOfGamesInMatch)):
</code></pre>
<p>See the <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow">Python tutorial on the <code>for</code> construct</a>. Since the <code>input()</code> function returns a <em>string</em>, you need to convert it to an integer first, using the <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow"><code>int()</code> function</a>.</p>
<p>Your code otherwise pretty much matches the pseudo-code otherwise, apart from using a lowercase <code>y</code> in your <code>input()</code> line; you may want to correct that as you only test for <em>uppercase</em> <code>Y</code> in the result:</p>
<pre><code>PlayerOneWinsGame = input("Did Player One win the game (enter Y or N?)")
</code></pre>
<p>You also made a small typo in your <code>PlayerTwoScore</code> update; replace the second <code>=</code> with <code>+</code>:</p>
<pre><code>PlayerTwoScore = PlayerTwoScore + 1
</code></pre>
<p>Putting that together would make:</p>
<pre><code>PlayerOneScore = 0
PlayerTwoSCore = 0
NoOfGamesInMatch = input("How Many games?")
for NoOfGamesPlayed in range(int(NoOfGamesInMatch)):
    PlayerOneWinsGame = input("Did Player One win the game (enter Y or N?)")
    if PlayerOneWinsGame == "Y":
        PlayerOneScore = PlayerOneScore + 1
    else:
        PlayerTwoScore = PlayerTwoScore + 1
print("Player one Score is" + str(PlayerOneScore))
print("Player Two Score is" + str(PlayerTwoScore))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In every language, <code>for</code> loops are more commonly used to iterate over a range of value as in</p>
<pre><code>for record in records
for file in files
for i in range(0, 10)
for prime_number in [11, 13, 19]
</code></pre>
<p>On the other hand, <code>while</code> loops are used to perform blocks of code <strong>while</strong> a given condition evaluates to true</p>
<pre><code>while i_am_hunger: eat()
while list_is_empty
while list_is_not_empty
</code></pre>
<p>And so on.</p>
<p>It seems to me that your case fits more in a <code>while</code> loop. Something like:</p>
<pre><code>while NoOfGamesPlayed != NoOfGamesInMatch:  *do something*
</code></pre>
<p>Last note:
Python has some style guides that are intended to keep your code cleaner. While style is sometimes a personal choice, it would be nice if you take some time to read them. For instance, in your case, your variable names should be divided by underscore as in <code>no_of_games_played</code>. Checkout more here:</p>
<p><a href="https://google-styleguide.googlecode.com/svn/trunk/pyguide.html" rel="nofollow">Google Style Guide</a></p>
<p><a href="http://legacy.python.org/dev/peps/pep-0008" rel="nofollow">PEP-8</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If I've guessed your intentions, the code should look like this:</p>
<pre><code>player_one_score = 0
player_two_score = 0

games_in_match = input("How Many games?")

for i in range(games_in_match):  
    player_one_wins = input(" Did Player One win the game(Enter Y or N?)")
    if player_one_wins.upper() == "Y":
        player_one_score += 1
    else:
        player_two_score += 1

print("Player One Score is {}".format(player_one_score))
print("Player Two Score is {}".format(player_two_score))
</code></pre>
</div>
<span class="comment-copy">How is the code not working? What input did you give it, what happened and what did you expect to happen instead?</span>
<span class="comment-copy"><code>for NoOfGamesPlayed != NoOfGamesInMatch</code> this have no sense.</span>
<span class="comment-copy"><code>for NoOfGamesPlayed != NoOfGamesInMatch</code> is not valid Python code. You tagged this with <code>while-loop</code>, perhaps you meant to use <code>while</code> there? If so, how do you increment your loop counter?</span>
<span class="comment-copy">@Martijn Pieters I tried the in range part, and i got this error when i input one when the program input how many games."for NoOfGamesPlayed in range(NoOfGamesInMatch): TypeError: 'str' object cannot be interpreted as an integer"</span>
<span class="comment-copy">@Danielb7: in future, <i>include</i> such details. It tells us what you already tried, and what went wrong with that.</span>
<span class="comment-copy">Thanks this worked a charm. You made a Typo "PlayerTwoSCore", should be "PlayerTwoScore". thanks for the advice</span>
<span class="comment-copy">Wouldn't it be better to change entities names according to PEP-0008?</span>
<span class="comment-copy">@IgorPomaranskiy: that's not actually going to be helpful here.  PEP 8 tells you that you need to stick to the <i>existing conventions</i>; here that means camel-case variables. This is a UK exam question (from June 2010, this student is practicing, not cheating) and that exam uses camel-casing throughout and supports multiple languages, not just Python.</span>
<span class="comment-copy">@IgorPomaranskiy: PEP-8 is <a href="https://www.youtube.com/watch?v=wf-BqAjZb8M" rel="nofollow noreferrer">low hanging fruit</a>; focusing on that is not actually going to help the question asker learn about the actual problems.</span>
<span class="comment-copy">@MartijnPieters look, the newbie come for help to community of cool, mature developers. He writes a piece of code which violates a lot of rules, which are supposed to be followed by community. And here we are to the rescue, explaining to him about loops and some other basic things. But keeping all bad approaches untouched and undiscussed. Then he keeps writing bad code, probably until his first real-job interviews. Did we help him, staying focused on his 'actual problems'?</span>
<span class="comment-copy">For what it's worth, the <a href="https://www.school-portal.co.uk/GroupDownloadFile.asp?GroupID=1211959&amp;ResourceId=4551018" rel="nofollow noreferrer">mark scheme (page 27)</a> for this exam expects the variables to be using the original camel casing</span>
<span class="comment-copy">Good to know! Well, I did not know this question was for a test. OP, adhere to the given naming convention in this case</span>
<span class="comment-copy">The title of the question suggests that they should be using <code>for</code> and <code>range</code>, not <code>while</code>. Without an explanation, this isn't very helpful for the OP; don't just give them code. Why does this work? Where did they go wrong?</span>
<span class="comment-copy">Updated the code. I believe that working code is much better (and quick) tutorial point, than dealing with contains tons of errors. OP can compare the versions and find out what has changed.</span>
<span class="comment-copy">Now imagine the teacher reading this and asking the student about how they got this lovely code, and could they explain how it works? What does the <code>format()</code> call do? Where did they read about the augmented assignment syntax? And the student would not be able to tell them any of that.</span>
<span class="comment-copy">Your code gives them a fish, while they were really asking about how to fish.</span>
<span class="comment-copy">I suppose that students are smart enough to google for unknown code entities. Besides that, they can just to play with the <i>working</i> code and try to apply different approaches. :)</span>
