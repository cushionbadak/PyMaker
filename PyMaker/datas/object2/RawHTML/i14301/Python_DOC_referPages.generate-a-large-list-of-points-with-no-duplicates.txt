<div class="post-text" itemprop="text">
<p>I want to create a large list containing 20,000 points in the form of:</p>
<pre><code>[[x, y], [x, y], [x, y]]
</code></pre>
<p>where x and y can be any random integer between 0 and 1000. How would I be able to do this such that there are no duplicate coordinates [x, y]?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could just use a while loop to pad it out until it's big enough:</p>
<pre><code>&gt;&gt;&gt; from random import randint
&gt;&gt;&gt; n, N = 1000, 20000
&gt;&gt;&gt; points = {(randint(0, n), randint(0, n)) for i in xrange(N)}
&gt;&gt;&gt; while len(points) &lt; N:
...     points |= {(randint(0, n), randint(0, n))}
...     
&gt;&gt;&gt; points = list(list(x) for x in points)
</code></pre>
<p>Your initial idea was probably slow because it was iterating lists for checking containmentship, which is <em>O(n)</em>.  This uses sets which are faster, and then only converts to the list structure once at the end.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Try this :</p>
<pre><code>import itertools
x = range(0,10)
aList =[]
for pair in itertools.combinations(x,2):
    for i in range(0,10):
        aList.append(pair)
print aList
</code></pre>
<p>If you want point between 0-10 with all unique and stored in a list, 
or you You need it random order, then use some random function . </p>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>n = 1001</code> is relatively small in your case, <a href="https://docs.python.org/2/library/random.html#random.sample" rel="nofollow"><code>random.sample(population, k)</code></a> will do just fine, taking a random sample of 20000 pairs from the space of possible pairs (no duplicates):</p>
<pre><code>import random
print random.sample([[x, y] for x in xrange(1001) for y in xrange(1001)], 20000)
</code></pre>
<p>This is the most concise and readable solution. (But if <code>n</code> is very big, generating the entire space of points will not be computationally efficient.)</p>
</div>
<div class="post-text" itemprop="text">
<p>An approach that avoids <code>while</code> loops with unknown iteration counts and avoids storing huge <code>list</code>s in memory is to use <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow"><code>random.sample</code></a> to produce unique encoded values from a single <code>range</code> (in Py3) or <code>xrange</code> (in Py2) to avoid actually generating huge temporaries; a simple mathematical operation can split the "encoded" values back into two values:</p>
<pre><code>import random
xys = random.sample(range(1001 * 1001), 20000)
[divmod(xy, 1001) for xy in xys] # Wrap divmod in list() if you must have list, not tuple
</code></pre>
</div>
<span class="comment-copy">you need random elements in the list ?</span>
<span class="comment-copy">try: <a href="http://stackoverflow.com/questions/6499327/is-there-python-way-to-generate-pairs" title="is there python way to generate pairs">stackoverflow.com/questions/6499327/â€¦</a></span>
<span class="comment-copy">As you create a coordinate pair compare back through the list to see if it exists before appending it... Are they integers?</span>
<span class="comment-copy">Yes integers, i have tried appending it to the list and then checking, but it will freeze because i think it might be too slow when it has to check the list if it is there evey time?</span>
<span class="comment-copy">@InNoam thanks i will give that a try</span>
<span class="comment-copy">It simple approach as per your question  .Your response will be appreciated</span>
