<div class="post-text" itemprop="text">
<p>First, here is my code:</p>
<pre><code>class Enemy():
    def __init__(self, name, hp, damage):
        self.name = name
        self.hp = hp
        self.damage = damage


    def is_alive(self):
        """Checks if alive"""
        return self.hp &gt; 0

class WildBoar(Enemy):
    def __init__(self):
        super(WildBoar, name="Wild Boar", hp=10, damage=2).__init__()

class Marauder(Enemy):
    def __init__(self):
        super(Marauder, name="Marauder", hp=20, damage=5).__init__()


class Kidnappers(Enemy):
    def __init__(self):
        super(Kidnappers, name="The Kidnappers", hp=30, damage=7).__init__()
</code></pre>
<p>When I compile this I get this error:</p>
<pre><code>super(WildBoar, name="Wild Boar", hp=10, damage=2).__init__()
TypeError: super does not take keyword arguments
</code></pre>
<p>I tried looking around for any kind of help but I couldn't find anything. I also have some Kwargs in some other class's supers, but these are the ones raising any kind of issues (as of right now). So what could be causing this? I've also seen someone say that putting a <code>super</code> in the base class will fix it, but it didn't work (I passed in the same arguments that are in the Base class's <code>__init__</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>The arguments to the parent's <code>__init__</code> method should be passed to the <code>__init__</code> method:</p>
<pre><code>super(Kidnappers, self).__init__(name="The Kidnappers", hp=30, damage=7)
# or
super(Kidnappers, self).__init__("The Kidnappers", 30, 7)
</code></pre>
<p>All you pass to <code>super()</code> is the child class (<code>Kidnappers</code> in this case) and a reference to the current instance (<code>self</code>).</p>
<hr/>
<p>Note however that if you are using Python 3.x, all you need to do is:</p>
<pre><code>super().__init__("The Kidnappers", 30, 7)
</code></pre>
<p>and Python will work out the rest.</p>
<hr/>
<p>Here are some links to where this is explained in the documentation:</p>
<ul>
<li><a href="https://docs.python.org/2/library/functions.html#super">Python 2.x <code>super()</code></a></li>
<li><a href="https://docs.python.org/3/library/functions.html#super">Python 3.x <code>super()</code></a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><strong>Option # 1 : Python 2.7x</strong></p>
<p>Here you can pass <code>self</code> keywork to super() which inherently refers the instance properties. </p>
<pre><code>super(self, name="Wild Boar", hp=10, damage=2).__init__()
</code></pre>
<p><strong>Option # 2 : Python 3x</strong></p>
<p><strong><code>super()</code></strong> no longer need to any parameters and you can simply write</p>
<pre><code>super().__init__("The Kidnappers", 30, 7)
</code></pre>
</div>
<span class="comment-copy">OK, I'll go through all my code and fix it all up, thanks!</span>
<span class="comment-copy">Option #1 is still passing <code>__init__</code>'s arguments to <code>super</code>, which will fail in exactly the same way Scoutdrago3 already experienced.</span>
