<div class="post-text" itemprop="text">
<p>I am trying to open an excel file from the web and extract one of the columns.  However, when I try to open the file with <code>xlrd</code> I get an error.  The code I am trying is:</p>
<pre><code>from urllib.request import urlopen
import xlrd
DJIA_URL = 'http://www.djaverages.com/?go=export-components&amp;symbol=DJI'
xlfile = urlopen(DJIA_URL).read()
xlbook = xlrd.open_workbook(xlfile)
</code></pre>
<p>however, I am getting a type error:</p>
<pre><code>Traceback (most recent call last):
  File "C:\Code\development\Pynance\pynance\sources\indices.py", line 31, in &lt;module&gt;
    xlbook = xlrd.open_workbook(xlfile)
  File "C:\Python34\lib\site-packages\xlrd\__init__.py", line 394, in open_workbook
    f = open(filename, "rb")
TypeError: embedded NUL character
[Finished in 0.8s with exit code 1]
</code></pre>
<p>If I download the file manually and open it like:</p>
<pre><code>xlfile = 'DJIComponents.xls'
xlbook = xlrd.open_workbook(xlfile)
</code></pre>
<p>no problems, I would just rather skip the manual step.  Is there an encoding setting or something I am missing?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>xlrd.open_workbook()</code> can only open excel files. However, the <code>xlfile</code> object created by <code>xlfile = urlopen(DJIA_URL).read()</code> is not an excel file, so <code>xlbook = xlrd.open_workbook(xlfile)</code> won't open.</p>
<p>xlfile created by the above way was an object of class "bytes". The fact can be seen by the command</p>
<p><code>print(type(xlfile))</code></p>
<p>and that should give</p>
<p><code>&lt;class 'bytes'&gt;</code></p>
<p>Therefore, you must retrieve the file by</p>
<p>(1) adding </p>
<p><code>import urllib.request</code></p>
<p>(2) saving the excel file by</p>
<p><code>urllib.request.urlretrieve(DJIA_URL, r'path\to\file\xxx.xls')</code></p>
<p>(3) finally open it with</p>
<p><code>xlrd.open_workbook(r'path\to\file\xxx.xls')</code></p>
<p>(Tested on python 3.4 eclipse PyDev win7 x64.)</p>
</div>
<span class="comment-copy">Thanks!  I was actually able to avoid explicitly saving the file by : <code>xl_file, headers = urlretrieve(DJIA_URL)</code> <code>xl_book = xlrd.open_workbook(xl_file)</code> since <a href="https://docs.python.org/3/library/urllib.request.html?highlight=urlretrieve#legacy-interface" rel="nofollow noreferrer">per the docs</a>, "The second argument, if present, specifies the file location to copy to (<b><i>if absent</i></b>, the location will be a tempfile with a generated name). " (emphasis mine).  Is there a different function for this instead of <code>urlretrieve</code> that isn't part of <i>legacy interface</i>?</span>
<span class="comment-copy">I recommend moving to <code>urllib3</code>. Something like <code>my_pool = urllib3.PoolManager()</code>....<code>with my_pool.request('get', my_url, preload_content=False) as my_connection_obj, open(fname, 'wb') as my_file:</code>....<code>shutil.copyfileobj(my_connection_obj, my_file_out)</code> may save your file. (sorry for unable to typeset in a comment)  Moreover, you can even use <code>tempfile.TemporaryFile()</code> to create your own temporary file if you really don't like saving the file explicitly.</span>
