<div class="post-text" itemprop="text">
<p>Here's the exercise <a href="http://www.example.com/" rel="nofollow">Lessons from a Triangle</a>! </p>
<pre><code>import turtle

def drawPolygon(t, sideLength, numSides):
    turnAngle = 360 / numSides
    for i in range(numSides):
    t.forward(sideLength)
    t.left(turnAngle)

def drawFilledCircle(anyTurtle, radius, vcolor):

    anyTurtle.fillcolor(vcolor)
    anyTurtle.begin_fill()
    circumference = 2 * 3.1415 * radius
    sideLength = circumference / 360
    drawPolygon(anyTurtle, sideLength, 360)
    anyTurtle.end_fill()

wn = turtle.Screen()
wheel = turtle.Turtle()


drawFilledCircle(wheel, 20, 'purple')

wn.exitonclick()
</code></pre>
<p>1) How come when I try to change the speed of the turtle like wheel.speed(10) it doesn't work? What's the default speed if I don't indicate the speed?</p>
<p>2) How do i put my turtle to the middle of the circle once it's done?</p>
<p>Thank You so Much!</p>
</div>
<div class="post-text" itemprop="text">
<p>As abarnert said, the link to your exercise is broken, but there are a few things you can do to speed up your program. FWIW, the turtle module has a <code>.circle</code> method, but I guess the point of your exercise is to use a polygon to approximate a circle. </p>
<p><code>wheel.speed(10)</code> <em>does</em> work (although <code>wheel.speed(0)</code> is even faster). It doesn't appear to make much difference because the sides of your 360-sided polygon are so tiny, and so the turtle has to do several moves &amp; turns just to traverse a single pixel.</p>
<p>Using a 360-sided polygon to draw a circle, no matter what the radius is, is not a great strategy. The code below determines the number of sides from the circumference so that each side is approximately 1 pixel. This will look good for a circle of any radius, and it avoids doing too much work for small circles.</p>
<p>Apart from using <code>turtle.speed</code> to speed things up you can also reduce the canvas's frame delay. Also, if you hide the turtle while drawing, it'll go even faster. </p>
<p>The following code was tested on Python 2.6.6; it should also work without modification on Python 3.x, but on Python 3.x you may remove the <code>from __future__ import division, print_function</code> line.</p>
<pre><code>#!/usr/bin/env python

''' Approximate a circle using a polygon

    From http://stackoverflow.com/q/30475519/4014959

    Code revised by PM 2Ring 2015.05.27
'''

from __future__ import division, print_function

import turtle

def drawPolygon(t, sideLength, numSides):
    turnAngle = 360 / numSides
    for i in range(numSides):
        t.forward(sideLength)
        t.left(turnAngle)


def drawFilledCircle(anyTurtle, radius, vcolor):
    anyTurtle.fillcolor(vcolor)
    anyTurtle.begin_fill()

    circumference = 2 * 3.14159 * radius

    #Calculate number of sides so that each side is approximately 1 pixel
    numSides = int(0.5 + circumference)
    sideLength = circumference / numSides
    print('side length = {0}, number of sides = {1}'.format(sideLength, numSides))

    drawPolygon(anyTurtle, sideLength, numSides)
    anyTurtle.end_fill()


wn = turtle.Screen()

#Set minimum canvas update delay
wn.delay(1)

wheel = turtle.Turtle()

#Set fastest turtle speed
wheel.speed(0)
#wheel.hideturtle()

radius = 20

#Move to the bottom of the circle, so 
#that the filled circle will be centered.
wheel.up()
wheel.goto(0, -radius)
wheel.down()

drawFilledCircle(wheel, radius, 'purple')

#Move turtle to the center of the circle
wheel.up()
wheel.goto(0, 0)
#wheel.showturtle()

wn.exitonclick()
</code></pre>
</div>
<span class="comment-copy">What does "doesn't work" mean? Where are you trying to do it? What are you expecting to happen? What's happening instead?</span>
<span class="comment-copy">The rest of your questions are covered in <a href="https://docs.python.org/3/library/turtle.html" rel="nofollow noreferrer">the documentation</a>. (And I'll bet the second question is also covered in detail in whatever place you got that exercise from, but since you linked to <a href="http://example.com" rel="nofollow noreferrer">example.com</a> it's hard to be sure.)</span>
