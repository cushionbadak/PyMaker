<div class="post-text" itemprop="text">
<p>How might one go about constructing something like a Linked List in python. I realize that python is not low level. But suppose I have a very large object, and I want to contain a reference to this large object in instances of another class:</p>
<pre><code>class LargeObject:

    def __init__(self):
        # use lots of memory


class SmallObject:

    def __init__(self, large_object_ref):
        self.large_object_ref = large_object_ref

    # ...


largeObj = LargeObject()
smallObj = SmallObject(largeObj) # What happens in memory? 
</code></pre>
<p>I want to ensure that <code>self.large_object_ref</code> never becomes a <em>deep copied</em> instance of <code>LargeObject</code> in memory, how do i prevent this/ensure this? </p>
<p>I admit I know very little about python's memory model or management, as one isn't  really supposed to have to in Python. I am familiar with C/++ though so I am borrowing terms and ideas from that area. </p>
</div>
<div class="post-text" itemprop="text">
<p>Python is <a href="https://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference" rel="nofollow">pass-by-assignment</a> which is basically equal to pass-by-reference for mutable objects (and most of the user-created objects are mutable).</p>
</div>
