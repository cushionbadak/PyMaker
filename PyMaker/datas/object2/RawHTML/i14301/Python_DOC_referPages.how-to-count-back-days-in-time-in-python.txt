<div class="post-text" itemprop="text">
<p>I'm trying to format a bunch of dates separated by pipes ("|") for the purposes of a web API query I am making, counting backwards in time seven days and adding each of those dates to a composite string. I read the documentation and piece together that a combination of date.today() and datetime.timedelta is what I need. I write the method:</p>
<pre><code>def someMethod():
    ret = ''
    pythonic_date = datetime.date.today()
    for i in range(0, 8):
        pythonic_date -= datetime.timedelta(days=1)
        ret += "SomePage" + datetime.date.today().strftime("%B" + " ")
        ret += str(pythonic_date.day).lstrip('0')
        ret += ", " + str(pythonic_date.year) + "|"
    ret = ret[0:len(ret) - 1]
    return ret
</code></pre>
<p>I expect to get the following output:</p>
<blockquote>
<p>SomePage/June 2, 2015|SomePage/June 1, 2015|SomePage/May 31, 2015|SomePage/May 30, 2015|SomePage/May 29, 2015|SomePage/May 28, 2015|SomePage/May 27, 2015|SomePage/May 26, 2015</p>
</blockquote>
<p>Instead I get the following output:</p>
<blockquote>
<p>SomePage/June 2, 2015|SomePage/June 1, 2015|SomePage/June 31, 2015|SomePage/June 30, 2015|SomePage/June 29, 2015|SomePage/June 28, 2015|SomePage/June 27, 2015|SomePage/June 26, 2015</p>
</blockquote>
<p>I am seeing that using <code>timedelta</code> here just naively loops back the day field in the date class object, instead of operating on the entire date. I have two questions:</p>
<ol>
<li>Why is this implemented this way?</li>
<li>What do I do to instead get what I want?</li>
</ol>
<p>Edit: On second look, the function I wrote won't even be able to handle moving between years. Seriously, what's a better way of doing this? The datetime documentation (<a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta.resolution" rel="nofollow">https://docs.python.org/3/library/datetime.html#datetime.timedelta.resolution</a>) is absurdly dense.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, that is not at all what timedelta does. It does exactly what you would expect.</p>
<p>The error is simply in your code: you always print the month from <code>datetime.date.today()</code>, rather than from <code>pythonic_date</code>.</p>
<p>A much better way of printing the formatted date would be to use a single call to <code>strftime</code>:</p>
<pre><code>ret += "SomePage" + pythonic_date.strftime("%B %-d, %Y") + "|"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could consider using <a href="https://arrow.readthedocs.io" rel="nofollow noreferrer">arrow</a> to handle the dates, it will make your life easier.</p>
<pre><code>import arrow

def someMethod():
    fulldates = []
    for date in [arrow.now().replace(days=-i) for i in range(0, 8)]:
        fulldates.append("SomePage/{fmtdate}".format(fmtdate=date.format("MMM D, YYYY")))
    return '|'.join(fulldates)

print(someMethod())
</code></pre>
<p>Output is</p>
<pre><code>SomePage/Jun 3, 2015|SomePage/Jun 2, 2015|SomePage/Jun 1, 2015|SomePage/May 31, 2015|SomePage/May 30, 2015|SomePage/May 29, 2015|SomePage/May 28, 2015|SomePage/May 27, 2015
</code></pre>
</div>
<span class="comment-copy">Unrelated:  <a href="http://stackoverflow.com/q/28894172/4279"><code>%-d</code> (dash in the format)</a> is not supported on all systems. Also, OP could use a list: <code>lst.append("SomePage/{:%B %d, %Y}".format(pythonic_date))</code> and <code>return "|".join(lst)</code> at the end.</span>
<span class="comment-copy">I was unaware that adding a "-" in front would remove the leading zero, but seeing that that solution is not platform agnostic, it's not a trick that <i>I</i> would use.  That being said, you've spotted a silly error I should have seen on review: thanks!</span>
<span class="comment-copy">This answer is missing one thing: I also need to shear off the leading zeroes in the day field, somehow.</span>
<span class="comment-copy">I edited the code so that there are no leading zeros, the output is updated as well</span>
<span class="comment-copy">The link to arrow is no longer valid.</span>
<span class="comment-copy">@NoctisSkytower: thanks, fixed.</span>
