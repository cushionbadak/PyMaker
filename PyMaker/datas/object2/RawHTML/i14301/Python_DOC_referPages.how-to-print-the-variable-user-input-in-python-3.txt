<div class="post-text" itemprop="text">
<p>So basically, I have a python program but there's a point in which I need help.
When the user input the variable name, I want it to print the variable value, not the variable name, even if the variable doesn't exist. This is what I've currently got:</p>
<pre><code>    CMD = input("&gt;&gt;&gt;&gt;  ")

    if CMD[0:17] == "console.printVar(" and CMD[-1:] == ")" and CMD[-2:]!="')":
    try:
        CMD[13:-1]
    except NameError:
        print("Variable "+CMD[13:1]+" Not defined")
        Main()
    else:
        print(CMD[17:-1])
        Main()
</code></pre>
<p>Oh, and just in case it's not clear, i'm sort of working on a coding language sort of thing.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can just call <code>eval(CMD[17:-1])</code>.</p>
<p>However, this evaluates more than just variable names, so be careful that the user cannot do anything malicious with your code.</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the value of a global variable by name, use the <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow"><code>globals()</code></a> dictionary:</p>
<pre><code>name = CMD[17:-1]
print(globals()[name])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can get the local (function's) scope as a dict with <code>locals()</code> and the global (module's) scope as a dict with <code>globals()</code>. Now you may want to read a bit more about parsing, AST etc... </p>
</div>
<span class="comment-copy">How does the expected input look like?</span>
<span class="comment-copy">Why don't you store the "variables" in a dictionary, so you can easily access them by name (this is basically what Python does, under the hood)? E.g. <code>variables[CMD[13:-1]]</code>. You can use <code>variables.get(..., default)</code> or <code>... in variables</code> to deal with missing keys.</span>
<span class="comment-copy">Oh, and if you're using recursion rather than iteration to keep your program looping, note that a long-running interaction will hit the <a href="https://docs.python.org/2/library/sys.html#sys.getrecursionlimit" rel="nofollow noreferrer">limit</a>.</span>
<span class="comment-copy"><code>eval()</code> is usually not the right solution in Python - there are dedicated ways to get to almost anything at runtime -, and this case (passing user inputs) is obviously the one where you <i>really</i> <i>dont</i> want to use <code>eval()</code>.</span>
<span class="comment-copy">I agree that it's quick and dirty. Of course, there are better ways. However, depending on the context, quick and dirty might be good enough. Thus, my suggestion including a warning.</span>
<span class="comment-copy">Thanks for you quick responses. This solved my problem . PEACE!</span>
<span class="comment-copy">@AnthonyProvenza this will <i>work</i>, but be aware that it's a <b>bad solution</b> that will likely give you bigger problems later on.</span>
<span class="comment-copy">What sort of problems can i expect later on?</span>
