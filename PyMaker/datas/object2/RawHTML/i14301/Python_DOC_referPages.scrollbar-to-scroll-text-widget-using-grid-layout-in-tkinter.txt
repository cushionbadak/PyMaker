<div class="post-text" itemprop="text">
<p>I am trying to use the grid layout manager in Tkinter to create a dialog box.
I want the Text area at the bottom to have a scrollbar. Unfortunately I can not figure out how to make the scrollbar be the same height as the Text widget beside it.  The sample below shows that the scrollbar is in the right position but is the wrong size (only about 10% of the height of the Text widget). </p>
<p><img alt="layout issue with tkinter grid and scrollbar" src="https://i.stack.imgur.com/9ggSo.png"/></p>
<pre><code>from tkinter import *

class queryrunner(Tk):
    def __init__(self,parent):
        Tk.__init__(self,parent)
        self.parent = parent
        self.minsize(width=800,height=500)
        self.initialize()

    def initialize(self):
        self.grid_columnconfigure(2,weight=1)
        self.grid_columnconfigure(3,weight=1)
        self.grid_columnconfigure(6,weight=2)
        self.grid_rowconfigure(0,weight=1)
        self.grid_rowconfigure(1,weight=1)
        self.grid_rowconfigure(2,weight=1)
        self.grid_rowconfigure(3,weight=1)
        self.grid_rowconfigure(4,weight=1)
        # BUCKET AND N1QL LABEL + INPUT PAIRS: 
        self.label = Label(self,text="Bucket", width=10, anchor="w")
        self.label.grid(column=0,row=0,columnspan=1,sticky='W')
        self.entry = Entry(self);
        self.entry.grid(column=1,row=0, columnspan=3, sticky='EW')
        self.entry.insert(0, "couchbase://couchbase1.mycompany.com/beer-sample" )
        # EXECUTE N1QL QUERY AGAINST BUCKET WHEN BUTTON CLICKED:
        self.button = Button(self,text="Go",width=20)
        self.button.grid(column=6,row=0)
        self.label2 = Label(self,text="N1QL", anchor="w")
        self.label2.grid(column=0,row=1,columnspan=1,sticky='W')
        self.entry2 = Text(self,height=5);
        self.entry2.grid(column=1,row=1, columnspan=3, rowspan=1, sticky='W')

        self.label3 = Label(self,text="Output:", width=50,anchor="w")
        self.label3.grid(column=0,row=4,columnspan=5,sticky='W')
        self.entry3 = Text(self,height=18)
        self.entry3.grid(column=1,row=5, columnspan=5, rowspan=1, sticky='W')
        # PROBLEM: GET SCROLLBAR TO BE THE RIGHT SIZE (IT'S NOT THE SIZE OF THE THING ITS BESIDE)
        self.scrollbar = Scrollbar(self) # height= not permitted here!
        self.entry3.config(yscrollcommand= self.scrollbar.set)
        self.scrollbar.config(command= self.entry3.yview)
        self.grid()
        self.scrollbar.grid(column=6, row=5, rowspan=2,  sticky='W')


if __name__ == "__main__":
    app = queryrunner(None)
    #font.nametofont('TkDefaultFont').configure(size = 10 )
    app.title('Couchbase N1QL Query Runner')
    app.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Add North and South to the sticky option of the Scrollbar grid call, so the Scrollbar is stretched in vertical direction.</p>
<pre><code>self.scrollbar.grid(column=6, row=5, rowspan=2,  sticky=N+S+W)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can only use one geometry manager on each of a container's child widgets, but if a child widget is itself a container, you can use any geometry manager you like for its children. This means we can just make a <code>Frame</code> and <code>pack()</code> the <code>Entry</code> and <code>Scrollbar</code> into it, using the <code>fill='y'</code> argument to make the <code>Scrollbar</code> fill the available space.</p>
<p>Change this:</p>
<pre><code>self.entry3 = Text(self,height=18)
self.entry3.grid(column=1,row=5, columnspan=5, rowspan=1, sticky='W')
# PROBLEM: GET SCROLLBAR TO BE THE RIGHT SIZE (IT'S NOT THE SIZE OF THE THING ITS BESIDE)
self.scrollbar = Scrollbar(self) # height= not permitted here!
self.entry3.config(yscrollcommand= self.scrollbar.set)
self.scrollbar.config(command= self.entry3.yview)
self.grid()
self.scrollbar.grid(column=6, row=5, rowspan=2,  sticky='W')
</code></pre>
<p>to this:</p>
<pre><code>self.frame = Frame(self)
self.frame.grid(column=1,row=5, columnspan=6, rowspan=1, sticky='W')
self.entry3 = Text(self.frame,height=18)
self.entry3.pack(side='left', fill='both', expand=True)
# PROBLEM: SOLVED
self.scrollbar = Scrollbar(self.frame) # height= not permitted here!
self.entry3.config(yscrollcommand= self.scrollbar.set)
self.scrollbar.config(command= self.entry3.yview)
self.grid()
self.scrollbar.pack(side='right', fill='y')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is the ScrolledText module. </p>
<p>If you are using Anaconda python distribution then in <code>conda</code> command line do:</p>
<pre><code> conda install ScrolledText
</code></pre>
<p>Then in your .py file import module (if python 3 and up)</p>
<pre><code> from tkinter.scrolledtext import ScrolledText
</code></pre>
<p>And if python 2.7 then</p>
<pre><code> import ScrolledText
</code></pre>
<p>Then you call it like a normal Text widget like so, in python 3:</p>
<blockquote>
<p><strong>self.textBox = ScrolledText(self, borderwidth=3, relief="sunken")</strong></p>
</blockquote>
<p>It is a compound widget (Text &amp; Scrollbar).</p>
</div>
<span class="comment-copy">I tried it, and used sticky='NS' which worked.</span>
<span class="comment-copy"><code>sticky='NS'</code> stretches it vertically and puts it in the middle of the row though, <code>sticky='NSW'</code> also sticks it to the left side of the row, so against the Text which looks nicer in my opinion.</span>
<span class="comment-copy">Yeah, NSW seems best</span>
<span class="comment-copy">This would work, but in my case, doing the sticky option was simpler.</span>
<span class="comment-copy">Most people are not using Anaconda, with regular python it seems if you have tkinter you have this too.</span>
<span class="comment-copy">Looks like it's tkinter.ScrolledText  python 3, but in python 2.7 it's just ScrolledText (leave off the tkinter. part )  <a href="https://docs.python.org/3/library/tkinter.scrolledtext.html" rel="nofollow noreferrer">docs.python.org/3/library/tkinter.scrolledtext.html</a> AND <a href="https://docs.python.org/2/library/scrolledtext.html" rel="nofollow noreferrer">docs.python.org/2/library/scrolledtext.html</a></span>
