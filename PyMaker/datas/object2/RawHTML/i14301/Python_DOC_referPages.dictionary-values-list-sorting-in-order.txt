<div class="post-text" itemprop="text">
<p>I have a dictionary with a list of names as keys and values as lists of three (str, int, int):</p>
<pre><code>stafflist={'Name1':['Position', register number, sales],
           'Name2':['Position', register number, sales],
           'Name3':['Position', register number, sales]}
</code></pre>
<p>I need to format the data as:</p>
<p>Register Number: Position, Name, sales</p>
<p>Register Number: Position, Name, sales</p>
<p>Register Number: Position, Name, sales</p>
<p>Where the register numbers are in numeric order and the Position, Name, and sales are associated to the correct register number.</p>
<p>I can get the register numbers in order with converting to a new list, as below:</p>
<pre><code>    regnumbers=[]
        for empname in stafflist:
            regnumbers.append(stafflist[name][1])

    regnumber.sort()

    for regnum in regnumbers[:]:
       if regnum in stafflist[name][1]:
           print('Reg #,regnum,':')
</code></pre>
<p>But I can't get the reaminder of the associated values or keys to print. All I've been able to do is get one set of the other values to print for all register numbers, and I can't get the keys (names) to print at all.</p>
<p>If it's not obvious - total Python newbie, and appreciate any light that can be shed on this!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use an <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow"><code>OrderedDict</code></a> - it's sort of a list-like dictionary.</p>
<pre><code>import collections

# Sample data
staff_list = {
    "A": ["CEO", 1, 100000],
    "B": ["Clerk", 400, 2500],
    "C": ["Restocker", 200, 0],
}

new_staff_list = collections.OrderedDict()

# Sort by register number
# Sorting ahead of time is easier than sorting an OrderedDict
staff = sorted(staff_list.items(), key=lambda emp: emp[1][1])

for name, (position, number, sales) in staff:
    new_staff_list[number] = [position, name, sales]

print(new_staff_list[200])
# ['Restocker', 'C', 0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of creating a sorted <code>regnumbers</code> which only holds your sorting information, iterate over a sorted stafflist instead:</p>
<pre><code># dict.items() is a sequence of (key, value)  tuples
for key, value in sorted(stafflist.items(), key=lambda kv: kv[1][1]):
    print('Reg #{}, Name: {}'.format(value[1], key))
</code></pre>
</div>
<span class="comment-copy">What is the variable <code>name</code> in your code fragments?</span>
<span class="comment-copy">Your print should be: <code>print('Reg #{}, Name: {}'.format(value[1], key)) </code></span>
<span class="comment-copy">@Ladmerc You’re right, thanks! At some point, I planned to rename the variable, but then didn’t really stick to it.</span>
<span class="comment-copy">Your lambda will only work in Python 2 (where tuple unpacking is allowed in functions).</span>
