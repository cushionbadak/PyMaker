<div class="post-text" itemprop="text">
<p>Using such example i want to count number of entries. And represent string with number of entries in Text field. Like, for example:</p>
<pre><code>1: number of entries(1)
21: number of entries(2)
...
</code></pre>
<p>Where should i put my counter variable?</p>
<pre><code>import random
from tkinter import *

class MyApp(Frame):

    def __init__(self, master):
        super(MyApp, self).__init__(master)
        self.grid()
        self.create_widgets()        

    def create_widgets(self):

        Label(self, text = 'Your number:').grid(row = 0, column = 0, sticky = W)
        self.num_ent = Entry(self)
        self.num_ent.grid(row = 0, column = 1, sticky = W)
        Button(self, text = 'Check', command = self.update).grid(row = 0, column = 2, sticky = W)
        self.user_text = Text(self, width = 50, height = 40, wrap = WORD)
        self.user_text.grid(row = 2, column = 0, columnspan = 3)

    def update(self):

        guess = self.num_ent.get()
        guess += '\n'
        self.user_text.insert(0.0, guess)

root = Tk()
root.geometry('410x200')
root.title('Entries counter')
app = MyApp(root)
root.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand what you want correctly, simply keep count of the number of button presses, you can define a count variable in <code>__init__</code> like</p>
<pre><code>self.count = 0
</code></pre>
<p>And increase and print it in <code>update</code> like</p>
<pre><code>def update(self):
    self.count += 1
    guess = self.num_ent.get()
    guess += '\n'
    self.user_text.insert(0.0, 'Guess #{}: {}'.format(self.count, guess))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems you're using Python 3.</p>
<p>The easiest way to store your counter is to use a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">dictionary</a>. The key would be the text you're counting (1 and 21 according to your example), the value stores the count itself (e.g. 1 and 2).</p>
<p>The structured data for your example would look like this:</p>
<pre class="lang-python prettyprint-override"><code>{
  '1':  1,
  '21': 2
}
</code></pre>
<p>And the final code:</p>
<pre class="lang-python prettyprint-override"><code>from tkinter import *

class MyApp(Frame):
  def __init__(self, master):
    super(MyApp, self).__init__(master)

    #this is your counter variable
    self.entries = {}

    self.grid()
    self.create_widgets()        

  def create_widgets(self):
    Label(self, text = 'Your number:').grid(row = 0, column = 0, sticky = W)
    self.num_ent = Entry(self)
    self.num_ent.grid(row = 0, column = 1, sticky = W)
    Button(self, text = 'Check', command = self.update).grid(row = 0, column = 2, sticky = W)
    self.user_text = Text(self, width = 50, height = 40, wrap = WORD)
    self.user_text.grid(row = 2, column = 0, columnspan = 3)

  def update(self):
    #get the new entry from the text field and strip whitespaces
    new_entry = self.num_ent.get().strip()

    #check if the entry is already in the counter variable
    if new_entry in self.entries:
      #if it is: increment the counter
      self.entries[new_entry] += 1
    else:
      #if it's not: add it and set its counter to 1
      self.entries[new_entry] = 1

    #delete the whole text area
    self.user_text.delete('0.0', END)

    #get every entry from the counter variable, sorted alphabetically
    for key in sorted(self.entries):
      #insert the entry at the end of the text area
      self.user_text.insert(END, '{}: number of entries({})\n'.format(key, self.entries[key]))

root = Tk()
root.geometry('410x200')
root.title('Entries counter')
app = MyApp(root)
root.mainloop()
</code></pre>
</div>
<span class="comment-copy">tnx, it helped!</span>
