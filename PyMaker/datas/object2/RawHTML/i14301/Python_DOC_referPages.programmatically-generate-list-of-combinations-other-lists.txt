<div class="post-text" itemprop="text">
<p>I want to create a list of possible combinations of a list of lists (example will explain better)</p>
<pre><code>list=[[a,b],[c,d],[f]]
</code></pre>
<p>The result should be</p>
<pre><code>acf
adf
bcf
bdf
</code></pre>
<p>The length of the list can vary, and the length of the lists within the variable list can also vary. How would I make this/these loop(s) programmatically? (preferably explained in Python or pseudo-language)</p>
</div>
<div class="post-text" itemprop="text">
<p>That's what <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="noreferrer"><code>itertools.product</code></a> is for:</p>
<pre><code>&gt;&gt;&gt; lst = ['ab','cd','f']
&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; list(product(*lst))
[('a', 'c', 'f'), ('a', 'd', 'f'), ('b', 'c', 'f'), ('b', 'd', 'f')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import itertools

list=[['a','b'],['c','d'],['f']]

for comb in itertools.product(*list):
  print ''.join(comb)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do it recursively:</p>
<pre><code>def printCombos(arrays, combo):
  if len(arrays) == 0:
    print combo
  else:
    for i in arrays[0]:
      combo.append(i)
      printCombos(arrays[1:], combo)
      combo.pop()

l=[['a','b'],['c','d'],['f']]
printCombos(l, [])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>curlist = []

for firstobj in listoflists[0]:
    for secondobj in listoflists[1]:
        for lastobj in listoflists[2]:
            curlist.append(firstobj)
            curlist.append(secondobj)
            curlist.append(lastobj)
            print ','.join(curlist)
</code></pre>
</div>
<span class="comment-copy">Don't call your list <code>list</code>. You're hiding the <code>list</code> type.</span>
<span class="comment-copy">I know, this is just an example</span>
<span class="comment-copy">Thanks! And it also works with [["a","b"],["c","d"],["f"]], which is great!</span>
<span class="comment-copy">Yeah, that's the same in this context. I'm just too lazy to type all those quotes etc.</span>
<span class="comment-copy">what would be your "combo" variable then?</span>
<span class="comment-copy">It is the combo seen so far. It starts out as an empty list.</span>
