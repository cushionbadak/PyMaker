<div class="post-text" itemprop="text">
<p>Given a current time of <code>23:30:00</code> and I add two hours (7200 seconds). How can I get the time of the same day? So I want as a result <code>25:30:00</code>.</p>
<p>Currently I am only able to get the time of the next day:</p>
<pre><code>&gt;&gt;&gt; from datetime import datetime, timedelta
&gt;&gt;&gt; current_time  = "23:30:00"
&gt;&gt;&gt; duration = 3600
&gt;&gt;&gt; (datetime.strptime(current_time, "%H:%M:%S") + timedelta(seconds=duration)).strftime("%H:%M:%S")
'00:30:00'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are just wanting to increment hours minutes, seconds and create a string:</p>
<pre><code>def weird_time(current_time,duration):
    start = datetime.strptime(current_time, "%H:%M:%S")
    st_hr, st_min, st_sec = start.hour, start.minute, start.second
    mn, secs = divmod(duration, 60)
    hour, mn = divmod(mn, 60)
    mn, secs = st_min+mn, st_sec+secs
    if secs &gt; 59:
        m, secs = divmod(secs,60)
        mn += m
    if mn &gt; 59:
        h, mn = divmod(mn,60)
        hour += h
    return "{:02}:{:02}:{:02}".format(st_hr+hour, mn, secs)
</code></pre>
<p>Output:</p>
<pre><code>In [19]: weird_time("23:30:00",7200)
Out[19]: '25:30:00'

In [20]: weird_time("23:30:00",3600)
Out[20]: '24:30:00'

In [21]: weird_time("23:30:59",7203)
Out[21]: '25:31:02'

In [22]: weird_time("23:30:59",3601)
Out[22]: '24:31:00'
</code></pre>
<p>Instead of doing all the calculations ourselves we can also use timedelta to calculate the total seconds and do our calculations from that:</p>
<pre><code>from datetime import datetime,timedelta


def weird_time(current_time,duration):
    start = datetime.strptime(current_time, "%H:%M:%S")
    st_hr, st_min, st_sec = start.hour, start.minute, start.second
    comb = timedelta(minutes=st_min,seconds=st_sec) + timedelta(seconds=duration)
    mn, sec = divmod(comb.total_seconds(), 60)
    hour, mn = divmod(mn, 60)
    return "{:02}:{:02}:{:02}".format(int(st_hr+hour), int(mn), int(sec))
</code></pre>
<p>Which outputs the same:</p>
<pre><code>In [29]: weird_time("23:30:00",7200)
Out[29]: '25:30:00'

In [30]: weird_time("23:30:00",3600)
Out[30]: '24:30:00'

In [31]: weird_time("23:30:59",7203)
Out[31]: '25:31:02'

In [32]: weird_time("23:30:59",3601)
Out[32]: '24:31:00'

In [33]:  weird_time("05:00:00",3600)
Out[33]: '06:00:00'
</code></pre>
<p>The hours just need to be incremented, the part that we need to catch is when either the combined total of either seconds, minutes or both is greater than 59.</p>
</div>
<div class="post-text" itemprop="text">
<p>Seems to me like what you want is to just add two timedeltas to get another timedelta... right?</p>
<pre><code>from datetime import timedelta as td

t0 = td(hours=23, minutes=30)
t1 = t0 + td(seconds=7200)
print(t1)  # prints "1 day, 1:30:00"
print("Hours: {}".format(t1.days*24 + int(t1.seconds/3600)))  # prints "Hours: 25"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I want to generate a valid GTFS dataset. Google defines that a trip that goes into the next day requires a time like this: <a href="http://developers.google.com/transit/gtfs/reference#stop_times_fields" rel="nofollow">http://developers.google.com/transit/gtfs/reference#stop_times_fields</a> </p>
</blockquote>
<p>To get the correct time you have to take into account daylight savings time changes:</p>
<pre><code>#!/usr/bin/env python
from datetime import datetime, time, timedelta
from tzlocal import get_localzone # $ pip install tzlocal

local_timezone = get_localzone()
current_time = datetime.now(local_timezone)
noon_naive = datetime.combine(current_time, time(12,0))
noon = local_timezone.localize(noon_naive, is_dst=None)

departure_time = (current_time - noon + timedelta(hours=12))
duration = timedelta(hours=2)
arrival_time = departure_time + duration
# -&gt; datetime.timedelta(1, 5400)
</code></pre>
<p>To convert <code>timedelta</code> to <code>HH:MM:SS</code> format:</p>
<pre><code>hours, seconds = divmod(arrival_time.total_seconds(), 3600)
minutes, seconds = divmod(seconds, 60)
print("%(hours)02d:%(minutes)02d:%(seconds)02d" % vars())
# -&gt; 25:30:00
</code></pre>
</div>
<span class="comment-copy">Adding a <code>timedelta</code> to a <code>datetime</code> is time aware so adding two hours will automatically update the date if appropriate.   To get the behavior you want you'll  need to not use <code>datetime</code> objects.</span>
<span class="comment-copy">Could you give an example on how to do that?</span>
<span class="comment-copy"><code>25:30:00</code> is not a valid time.</span>
<span class="comment-copy">I agree with you guys. I want to generate a valid GTFS dataset. Google defines that a trip that goes into the next day requires a time like this: <a href="https://developers.google.com/transit/gtfs/reference#stop_times_fields" rel="nofollow noreferrer">developers.google.com/transit/gtfs/reference#stop_times_fields</a></span>
<span class="comment-copy">what should <code>duration = 36000</code> output?</span>
<span class="comment-copy">I tried your code, it returned <code>33:30:00</code>. When desired output is <code>25:30:00</code>.</span>
<span class="comment-copy">@sobolevn, that is because I set duration to 36000 originally, try it now</span>
<span class="comment-copy">Oh, right, i got confused with the post update.</span>
<span class="comment-copy">had a bug, ironed it out I think!</span>
<span class="comment-copy">you don't need to implement the time arithmetics from scratch. <a href="http://stackoverflow.com/a/30477047/4279">Use <code>timedelta</code> and format it at the end</a>.</span>
<span class="comment-copy">Why the downvote?!?</span>
<span class="comment-copy">upvote: for doing the time arithmetics using <code>timedelta</code>. My guess for the downvote: OP wants <code>"%H:%M:%S"</code> format e.g., <code>25:30:00</code> see <a href="http://developers.google.com/transit/gtfs/reference#stop_times_fields" rel="nofollow noreferrer">arrival_time</a></span>
<span class="comment-copy">// , Further reading on the <code>datetime.timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)</code> constructor: <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer">docs.python.org/3/library/datetime.html#timedelta-objects</a></span>
<span class="comment-copy">You can't import timezone from datetime.</span>
<span class="comment-copy">@ustroetz: 1. You can in Python 3 2. It is not used in the code. I've removed it.</span>
