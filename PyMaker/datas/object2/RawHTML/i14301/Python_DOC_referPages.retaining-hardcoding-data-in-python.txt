<div class="post-text" itemprop="text">
<p>I would like to create something like a permanent storage using Python. What I mean is that I will have some variables coming into my code, and every time I execute my script it might be a different input. Let's imagine I am reading some website that is updating in real time. I want to be able to create a permanent storage that will hold on to the information (internalize it). So that when I get back to my script the next day and run it again, I will still have that internalized data available and it will not get re-set unless I specify so. Is that possible in Python? What should I be looking for? Any modules that do that? I really have no idea where to get started with this.  </p>
</div>
<div class="post-text" itemprop="text">
<p>There is no notion of an <strong>image</strong> as smalltalk had it (only heard, never worked with it) in standard python.</p>
<p>Depending on your actual use-case, I can see several approaches:</p>
<ul>
<li>use configuration-files, reading on start and writing them in intervals.</li>
<li><code>pickle</code> your relevant data-structures explicitly, and restore whatever graph of objects you have.</li>
<li>use stackless python, which allows to serialize interpreter state.</li>
</ul>
</div>
<span class="comment-copy">What's wrong with outputting to a file?</span>
<span class="comment-copy">Your question is a bit broad. In short: you persist data by writing it to a permanent medium, such as a disk. You can append to a file or use a database - there are a lot of possibilities, and, what will work for you will depend on your use case, which I miss a bit in your question.</span>
<span class="comment-copy">You should take a look at the <a href="https://docs.python.org/2/library/persistence.html" rel="nofollow noreferrer">chapter about data persistence in the standard library documentation</a> or about the <a href="https://docs.python.org/2/library/json.html" rel="nofollow noreferrer">JSON module</a>.</span>
<span class="comment-copy">@mkrieger1, Great link, but why not point to the <a href="https://docs.python.org/3/library/persistence.html" rel="nofollow noreferrer">Python 3</a> version?</span>
<span class="comment-copy">Because the Python 2.7 version was above the Python 3 version in the Google results...</span>
