<div class="post-text" itemprop="text">
<p>i get an email with the following code:</p>
<pre><code>m = imaplib.IMAP4_SSL(MailReceiveSRV)
m.login(MailReceiveUSER, MailReceivePWD)
m.select("Inbox")
status, unreadcount = m.status('INBOX', "(UNSEEN)")
unreadcount = int(unreadcount[0].split()[2].strip(').,]'))
items = m.search(None, "UNSEEN")
items = str(items[1]).strip('[\']').split(' ')
for index, emailid in enumerate(items):
    resp, data = m.fetch(emailid, "(RFC822)")
    email_body = data[0][1]
    mail = email.message_from_string(email_body)
    for part in mail.walk():
        body = part.get_payload()
</code></pre>
<p>FYI: This is always a part of the examplecode. </p>
<p>But body is now a biiig list of objects. If the Content_Type would be Plaintext, it would be much easier. </p>
<p>How can i get access to the body of that mail now? </p>
</div>
<div class="post-text" itemprop="text">
<h2>Short answer</h2>
<p>You have a multiparted email. That's why you're getting a list instead of a string: <code>get_payload</code> returns a list of <code>Message</code> if it's a multipart message, and <code>string</code> if it's not.</p>
<h2>Explanation</h2>
<p>From <a href="https://docs.python.org/3/library/email.message.html#email.message.Message.get_payload" rel="nofollow">the docs</a>:</p>
<blockquote>
<p>Return the current payload, which will be a list of <code>Message</code> objects when <code>is_multipart()</code> is <code>True</code>, or a string when <code>is_multipart()</code> is <code>False</code>.</p>
</blockquote>
<p>Hence <code>get_payload</code> returning a list.</p>
<p>Your code for getting the body would be something like:</p>
<pre><code>if email_message.is_multipart():
    for part in email_message.get_payload():
        body = part.get_payload()
        # more processing?
else:
    body = email_message.get_payload()
</code></pre>
<p>Again, <a href="https://docs.python.org/3/library/email.message.html#email.message.Message.is_multipart" rel="nofollow">from the docs</a>:</p>
<blockquote>
<p>Note that <code>is_multipart()</code> returning <code>True</code> does not necessarily mean that "msg.get_content_maintype() == 'multipart'" will return the <code>True</code>. For example, <code>is_multipart</code> will return <code>True</code> when the <code>Message</code> is of type <em>message/rfc822</em>.</p>
</blockquote>
</div>
<span class="comment-copy">Maybe instead of just body=part.getpayload() when multipart is true, you could append the body to a growing string. The way it's written, you'll just get the last part and discard all others.</span>
