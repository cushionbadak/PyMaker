<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/772124/what-does-the-python-ellipsis-object-do">What does the Python Ellipsis object do?</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>I was looking at <a href="https://github.com/sambler/myblenderaddons/blob/master/io_scene_fbx/import_fbx.py" rel="nofollow">the source code</a> of a Blender add-on and I saw a new syntax:</p>
<pre><code>def elem_name_ensure_class(elem, clss=...):
    elem_name, elem_class = elem_split_name_class(elem)
    if clss is not ...:
        assert(elem_class == clss)
    return elem_name.decode('utf-8')
</code></pre>
<p>What is the meaning of <code>...</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>...</code> is a literal syntax for the Python <a href="https://docs.python.org/3/library/stdtypes.html#the-ellipsis-object" rel="nofollow noreferrer"><code>Elipsis</code> object</a>:</p>
<pre><code>&gt;&gt;&gt; ...
Ellipsis
</code></pre>
<p>It is mostly used by NumPy; see <a href="https://stackoverflow.com/questions/772124/what-does-the-python-ellipsis-object-do">What does the Python Ellipsis object do?</a></p>
<p>The code you found uses it as a <em>sentinel</em>; a way to detect that a no other value was specified for the <code>clss</code> keyword argument. Usually, you'd use <code>None</code> for such a value, but that would disqualify <code>None</code> itself from ever being used as a value.</p>
<p>Personally, I dislike using <code>Ellipsis</code> as a sentinel; I would always create a dedicated sentinel instead:</p>
<pre><code>_sentinel = object()

def elem_name_ensure_class(elem, clss=_sentinel):
    elem_name, elem_class = elem_split_name_class(elem)
    if clss is not _sentinel:
        assert(elem_class == clss)
    return elem_name.decode('utf-8')
</code></pre>
<p>Using the <code>...</code> notation outside of a subscription (<code>object[...]</code>) is a syntax error in Python 2, so the trick used limits the code to Python 3.</p>
</div>
