<div class="post-text" itemprop="text">
<p>Simple question, yet should be simple answer ^_^ Looked around and found nothing. I'm using python 3.4 and can convert numbers up to 128 with the</p>
<pre><code>print (chr(int))
</code></pre>
<p>method without trouble. 104 gives me "h", and 73 gives me "I".  However, when I use numbers higher than 128, it gives me the wrong thing. I think it's converting to unicode or something like that? I.e. 193 gives me Á instead of the "bottom" sign (upside down T).</p>
</div>
<div class="post-text" itemprop="text">
<p>All text in Python 3 is Unicode. ASCII just happens to be a <em>subset</em> of the Unicode standard.</p>
<p>So <code>chr(codepoint)</code> <em>always</em> converts to a Unicode character, where the first 128 codepoints also conform to the ASCII standard.</p>
<p>I'm not sure what you were expecting for values &gt; 127 as the ASCII standard only contains 128 codepoints. Most codecs in use today are extensions of the ASCII standard; if you expected a specific codec, you need to use <em>bytes</em> and decode from that codec; to use the Windows 1252 codepage you could use:</p>
<pre><code>&gt;&gt;&gt; bytes([128]).decode('cp1252')
'€'
</code></pre>
<p>as that codepage defines codepoint 128 as the Euro sign, while the Unicode standard puts that (hex) <a href="https://codepoints.net/U+20AC" rel="nofollow">U+20AC</a>.</p>
<p>I think you were looking for <a href="http://en.wikipedia.org/wiki/Code_page_437" rel="nofollow">Codepage 437</a> here; a codepage that includes <a href="http://en.wikipedia.org/wiki/Code_page_437" rel="nofollow">box drawing characters</a>; 193 indeed is an inverted T in that codepage:</p>
<pre><code>&gt;&gt;&gt; bytes([193]).decode('cp437')
'┴'
</code></pre>
<p>That's <a href="https://codepoints.net/U+2534" rel="nofollow">U+2534 BOX DRAWINGS LIGHT UP AND HORIZONTAL</a> in the Unicode standard. To be absolutely clear: codepoints past 127 exist in codepage 437 but are <strong>not ASCII</strong>.</p>
<p>You may want to read up on Unicode and Python in this context:</p>
<ul>
<li><p><a href="http://joelonsoftware.com/articles/Unicode.html" rel="nofollow">The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</a> by Joel Spolsky</p></li>
<li><p><a href="http://nedbatchelder.com/text/unipain.html" rel="nofollow">Pragmatic Unicode</a> by Ned Batchelder</p></li>
<li><p>The <a href="http://docs.python.org/3/howto/unicode.html" rel="nofollow">Python Unicode HOWTO</a></p></li>
</ul>
</div>
<span class="comment-copy">Why do you know the answer is wrong above 128? What are you comparing to?</span>
<span class="comment-copy"><a href="http://www.ascii-code.com/" rel="nofollow noreferrer">ascii-code.com</a> are you using the correct encoding? what are you expecting?</span>
<span class="comment-copy">According to the chart at <a href="http://www.ascii-code.com/" rel="nofollow noreferrer">ascii-code.com</a>, in the extended ASCII range 193 is "Á". Why are you expecting something different?</span>
<span class="comment-copy">You need to show more code context - with python 3.4.2 on Windows, I get a <code>UnicodeEncodeError</code> with <code>print (chr(193))</code>. What exact code on what exact environment gives <code>Á</code>? See also @Martijn's answer below.</span>
<span class="comment-copy">I would love to give another +1 for finding Cp437 - but you already got one from me.</span>
<span class="comment-copy">@piet.t In general, I sometimes wished to be able to give "multi upvotes" for great answers ...</span>
<span class="comment-copy">well i'm working with someone who's using python 2.7, and when he does chr(193) he gets the inverted T. I assumed something had gone wrong for me rather than him, from <a href="http://www.asciitable.com/" rel="nofollow noreferrer">asciitable.com</a>, which shows 193 to be the inverted T.</span>
<span class="comment-copy">@w1nter: In Python 2, you produce <i>bytes</i>. If their console or terminal is configured to use CP437 then printing <code>chr(193)</code> writes that byte to the terminal, and the <i>terminal</i> then interprets that byte as a character.</span>
<span class="comment-copy">@w1nter: asciitable.com is <i>catastrophically</i> wrong. There is no such thing as <i>extended ASCII</i>, at least not as a standard. See <a href="http://en.wikipedia.org/wiki/Extended_ASCII" rel="nofollow noreferrer">en.wikipedia.org/wiki/Extended_ASCII</a></span>
