<div class="post-text" itemprop="text">
<p>I have a regular expression to fetch some links in HTML document.</p>
<pre><code>((http://)(|up)(\.example\.com))*(/uploads/pp2p|/sites/default/files/[-_a-zA-Z0-9%/]+)\.(jpg|jpeg|gif|png)
</code></pre>
<p>What I am intending to match is, if the <code>http</code> part exists match it if not, don't. If <code>up</code> part exists match it if not, don't. If <code>example.com</code> exists match it if not, don't. The same about <code>/uploads/pp2p</code> and the other one, if exists match if not, don't. Finally, if it has one of the following image formats match it if not, don't. I expect to get a list of links like</p>
<pre><code>links = ['http://up.example.com/uploads/pp2p/www.jpg', '/sites/default/files/.png', 'http://example.com/uploads/zzz.jpg']
</code></pre>
<p>And the elements in the link continue to be filled with different combinations. Anyway, I am getting results as a tuple like</p>
<pre><code>[('', '', '', '', '/sites/default/files/favicon', 'png'), ('', '', '', '', '/sites/default/files/logo_2', 'png')]
</code></pre>
<p>I don't want to get a tuple, I want the match to be represented as a whole. Only a complete link in each list element. How can I avoid getting a tuple as a result of the Regex match?</p>
</div>
<div class="post-text" itemprop="text">
<p>I am assuming you are getting images off a web page somewhere.</p>
<p>Here's a quick way to grab all the image src links using <a href="http://lxml.de/lxmlhtml.html" rel="nofollow">lxml.html</a>:</p>
<pre><code>from lxml.html import parse
import re

doc = parse('http://www.androidpolice.com').getroot()
links = []
img_list = []

for img in doc.cssselect('img'):
    links.append(img.get('src'))

for link in links:
    match = re.search(".*androidpolice\.com.*",link)
    if match:
        img_list.append(match.group(0))

for img in img_list:
    print(img)
</code></pre>
<p>Gives the output:</p>
<pre><code>http://www.androidpolice.com/wp-content/themes/ap2/ap_resize/ap_resize.php?src=http%3A%2F%2Fwww.androidpolice.com%2Fwp-content%2Fuploads%2F2015%2F05%2Fnexus2cee_gamethumb_thumb1.png&amp;h=128&amp;zc=3
http://www.androidpolice.com/wp-content/themes/ap2/ap_resize/ap_resize.php?src=http%3A%2F%2Fwww.androidpolice.com%2Fwp-content%2Fuploads%2F2015%2F05%2Fnexus2cee_gamethumb_thumb1.png&amp;w=150&amp;h=75&amp;f=8|8|8|8|8|8|8|8|8|8|8|8|8
http://www.androidpolice.com/wp-content/themes/ap2/ap_resize/ap_resize.php?src=http%3A%2F%2Fwww.androidpolice.com%2Fwp-content%2Fuploads%2F2014%2F06%2Fnexusae0_Google-Photos-icon-logo-150x150.png&amp;h=128&amp;zc=3
</code></pre>
<p>-----[output truncated]-----</p>
<p>Then you could do <code>(?:%2F)([\w-]+\.(?:png|jpg))</code> to get all the image names (of course just an example). I.E. <code>nexus2cee_gamethumb_thumb1.png</code></p>
<p><strong>Updated Code</strong></p>
<p>Changed it to search only for <code>androidpolice.com</code> in each link. You can find more on using <code>re</code> module at <a href="https://docs.python.org/3/library/re.html" rel="nofollow">6.2. re â€” Regular expression operations</a>.</p>
</div>
<span class="comment-copy">I think you need to reorganise the regex to have a single capture group</span>
<span class="comment-copy">Try using non-capturing groups: <a href="http://stackoverflow.com/questions/3512471/non-capturing-group">stackoverflow.com/questions/3512471/non-capturing-group</a></span>
<span class="comment-copy">@flamusdiu Is it possible to turn non-capturing-group off completely?</span>
<span class="comment-copy">Not sure what you mean? Non-capturing groups are not returned. Also, Can you post a example of the source file you are parsing with this? It would make it easier to hel you out.</span>
<span class="comment-copy">Oh, and how are you pushing this through python?</span>
<span class="comment-copy">Pretty nice way. Is not there a way to do regex on SRC tags? restricting it to special src tags which start for instance by, <code>example.com</code></span>
<span class="comment-copy">Yes. I will update my post shortly.</span>
<span class="comment-copy">@FreeMind Updated the answer.</span>
