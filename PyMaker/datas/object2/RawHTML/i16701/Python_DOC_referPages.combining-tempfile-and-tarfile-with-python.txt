<div class="post-text" itemprop="text">
<p>say we have a tempfile to which we could write some output. but for some strange reason we want it to be compressed by some of archiving techniques, tar for instance, </p>
<p>by tempfile I mean the one which has not visiable name created by tempfile.TemporaryFile().
any ideas?
my first impression includes some tweeking and class inheritance..
are there any simpler ways?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>fileobj</code> argument of <a href="https://docs.python.org/3/library/tarfile.html#tarfile.open" rel="nofollow noreferrer"><code>tarfile.open</code></a> serves exactly this purpose: you can pass any file-like object that support writting to it and <code>tarfile</code> will happily use that instead of trying to reach out to the filesystem. Note that such files should be opened in binary mode and not in text mode (which <code>tempfile.TemporaryFile</code> does by default).</p>
<p>Similarly, the first argument to <a href="https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile" rel="nofollow noreferrer"><code>zipfile.ZipFile</code></a> can be a file-like object.</p>
<p>So you could do:</p>
<pre><code>with tempfile.TemporaryFile(suffix='.tar.gz') as f:
    with tarfile.open(fileobj=f, mode='w:gz') as tar:
        tar.add(…)

    f.flush()
    f.seek(0)
    print(f.read())
</code></pre>
<p>Or</p>
<pre><code>with tempfile.NamedTemporaryFile('wb', suffix='.tar.gz', delete=False) as f:
    with tarfile.open(fileobj=f, mode='w:gz') as tar:
        tar.add(…)
</code></pre>
<p>to keep <code>f.name</code> on your filesystem and explore its content later.</p>
</div>
<span class="comment-copy">search doc for <code>tempfile</code>, <code>tarfile</code>, and you will find many well working options even on standard Python library. In your question it is not clear, if you ask for using <code>tempfile.TemporaryFile()</code> or you want prevent using it.</span>
<span class="comment-copy">true it is not clear enough, I mainly want to create compressed  (hash-a'like) content and store it temporarily inside a file created by tempfile.TemporaryFile(),  :)</span>
<span class="comment-copy">this content could be a source code, got by introspecting actual working a archiving program using inspect method,</span>
<span class="comment-copy">btw - <code>tar</code> is not compressing on its own. But with options like "tar.gz", "tar.bz2" it serves very well.</span>
