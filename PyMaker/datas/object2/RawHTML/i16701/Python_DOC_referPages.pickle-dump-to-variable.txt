<div class="post-text" itemprop="text">
<p>I'm new in python and i wanted to know if there is a solution for this problem:</p>
<p>I know that this may sound strange but i want to save the pickle.dump data into a variable.
I begin to think that may i could bypass it by making a fake class to instead of writing in a file, writing in a variable:</p>
<pre><code>class PickleDatatoVar(object):
def __init__(self):
    self.data = None
def write(self, data):
    self.data = data
def get(self):
    return self.data
</code></pre>
<p>and then:</p>
<pre><code>pick = PickleDatatoVar()
pickle.dump(Int, pick)
var = pick.get()
</code></pre>
<p>Nothing is presented as error, but the output is just a '.'</p>
<p>So is there a solution to instead of saving that in a file saving into a variable?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for an in-memory file object; in Python 2 that's <a href="https://docs.python.org/2/library/stringio.html" rel="noreferrer"><code>cStringIO.StringIO()</code></a>, for Python 3 <a href="https://docs.python.org/3/library/io.html#io.BytesIO" rel="noreferrer"><code>io.BytesIO()</code></a>; these act just like file objects and you can have <code>pickle.dump()</code> write to these.</p>
<p>However, the easier path would be to use <a href="https://docs.python.org/2/library/pickle.html#pickle.dumps" rel="noreferrer"><code>pickle.dumps()</code></a> to dump straight to a string object instead.</p>
<p><em>Under the hood</em>, what <code>pickle.dumps()</code> does for you is create an in-memory file object, write the pickle data to it and retrieve the string result for you; see the <a href="http://hg.python.org/cpython/file/cd8b5b5b6356/Lib/pickle.py#l1536" rel="noreferrer">source code</a>:</p>
<pre><code>def _dumps(obj, protocol=None, *, fix_imports=True):
    f = io.BytesIO()
    _Pickler(f, protocol, fix_imports=fix_imports).dump(obj)
    res = f.getvalue()
    assert isinstance(res, bytes_types)
    return res
</code></pre>
<p>but this way you don't have to do that extra work yourself.</p>
</div>
<span class="comment-copy">What is the point of dumping it to a variable ? Just use that variable directly.</span>
<span class="comment-copy">because i wanted to send that through a socket</span>
<span class="comment-copy">Are you looking for <code>pickle.dumps</code> (Return the pickled representation of the object as a string, instead of writing it to a file.)? <a href="https://docs.python.org/2/library/pickle.html#pickle.dumps" rel="nofollow noreferrer">docs.python.org/2/library/pickle.html#pickle.dumps</a></span>
<span class="comment-copy">It worked thank you very much @Mark! regards</span>
<span class="comment-copy">What Mark said, and also note that <code>PickleDatatoVar</code> exists in the stdlib, it's called <code>cStringIO.StringIO</code>. Your implementation fails because it doesn't handle multiple writes into the same <code>PickleDatatoVar</code> - it only retains the last write, which in case of pickle happens to be the terminating <code>.</code>.</span>
