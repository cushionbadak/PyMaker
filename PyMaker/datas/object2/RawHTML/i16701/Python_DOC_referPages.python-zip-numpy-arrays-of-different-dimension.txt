<div class="post-text" itemprop="text">
<p>I'd like to zip numpy arrays befor saving it via <code>np.save</code>. For zipping one dimensional arrays I use</p>
<pre><code>import numpy as np

a = np.ones(4) * 5.
b = np.ones(4) * 4.
data = np.array(zip(a, b))
</code></pre>
<p>which does exactly what I want. Now I have more data, say like</p>
<pre><code>c = numpy.ones((2, 4))
</code></pre>
<p>but</p>
<pre><code>data = np.array(zip(a, b, c))
</code></pre>
<p>does not work. I could do</p>
<pre><code>data = np.array(zip(a, b, c[0], c[1]))
</code></pre>
<p>instead, but the "depth" of <code>c</code> changes. My solution is</p>
<pre><code>data = np.insert(c, 0, b, axis=0)
data = np.insert(data, 0, a, axis=0)
data = zip(*data)
</code></pre>
<p>but that reads kind of suboptimal. Thanks for an advice.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would use numpy.hstack/vstack:</p>
<pre><code>a = np.ones(4) * 5
b = np.ones(4) * 4
c = np.ones((2, 4))
data = np.vstack([a,b,c]).T
</code></pre>
<p><em>Edit: I actually mostly use np.row_stack/column_stack nowadays, as I find it more natural than hstack or vstack:</em></p>
<pre><code>    data = np.column_stack([a,b,c.T])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>*</code> opertor to "unpack" <code>c</code> when calling <code>zip</code>:</p>
<pre><code>data = np.array(zip(a, b, *c))
data.shape
=&gt; (4, 4)
</code></pre>
<p>(You can avoid <code>zip</code> and use a direct numpy approach (e.g. using <code>vstack</code>, as @metaperture suggested), which is arguably a better approach. However, this answer demostrates the correct way to do exactly what you were trying to do originally)</p>
</div>
<div class="post-text" itemprop="text">
<p>I would <em>not</em> recommend using <code>zip</code> if your only objective is to save multiple arrays of different dimensions, as the title of this question suggests. Use <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.savez.html" rel="nofollow"><code>np.savez</code></a> or <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.savez_compressed.html#numpy.savez_compressed" rel="nofollow"><code>np.savez_compressed</code></a> instead. These functions were meant to save multiple arrays (of arbitrary dimensions).</p>
<p>Using <code>zip</code> is particularly bad as it won't port to <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow">Python3</a>, where <code>zip</code> returns an <em>iterator</em> and not a list of tuples. Calling <code>np.array</code> on the iterator creates an array with a single element of dtype <code>object</code>, which is probably not what you want.
I was not able to recover the zipped data after a save and a load.</p>
</div>
<span class="comment-copy">avoid using <code>zip</code> in connection with <code>np.array</code>s. It will turn them into lists, which is highly undesirable as soon as you start wielding larger datasets.</span>
