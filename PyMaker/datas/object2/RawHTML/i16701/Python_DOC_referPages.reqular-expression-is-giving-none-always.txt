<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/180986/what-is-the-difference-between-re-search-and-re-match">What is the difference between re.search and re.match?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>This is my code</p>
<pre><code>&gt;&gt;&gt; ll = 'window.DETAILS_PAGE_MAP_GLOBALS = {GOOGLE_MAPS_LONGITUDE: 55.2378015294,GOOGLE_MAPS_LATITUDE: 25.0463764816}'
&gt;&gt;&gt; print(re.match('GOOGLE_MAPS_LATITUDE:\s*(\d+\.\d+)', ll))
None
</code></pre>
<p>I always get <code>None</code> <strong>though I am sure 100% that the regular expression is correct.</strong></p>
<p>could you help please?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <code>re.search()</code> instead of <code>re.match()</code>. The first one is looking to the pattern anywhere in the string, and the other one looks if the pattern can be applied to the string <strong>exactly</strong>.</p>
<p><a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow">From the documentation</a>:</p>
<blockquote>
<p><code>re.search(pattern, string, flags=0)</code></p>
<p><strong>Scan through string looking for</strong> a location where the regular expression pattern produces a match, and return a corresponding match object. Return <code>None</code> <strong>if no position in the string matches the pattern</strong>; note that this is different from finding a zero-length match at some point in the string.</p>
</blockquote>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; print(re.search('GOOGLE_MAPS_LATITUDE:\s*(\d+\.\d+)', ll))
&lt;_sre.SRE_Match object at 0xffecf260&gt;
&gt;&gt;&gt; print(re.search('GOOGLE_MAPS_LATITUDE:\s*(\d+\.\d+)', ll).groups())
('25.0463764816',)
&gt;&gt;&gt; print(re.search('GOOGLE_MAPS_LATITUDE:\s*(\d+\.\d+)', ll).group(1))
25.0463764816
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/re.html#re.search" rel="nofollow"><code>re.search()</code></a>, <em>not</em> <code>re.match()</code>; the latter only matches <em>at the start of the string</em>:</p>
<blockquote>
<p>If zero or more characters <strong>at the beginning of <em>string</em></strong> match the regular expression pattern, return a corresponding <code>MatchObject</code> instance.</p>
</blockquote>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; ll = 'window.DETAILS_PAGE_MAP_GLOBALS = {GOOGLE_MAPS_LONGITUDE: 55.2378015294,GOOGLE_MAPS_LATITUDE: 25.0463764816}'
&gt;&gt;&gt; re.match('GOOGLE_MAPS_LATITUDE:\s*(\d+\.\d+)', ll)
&gt;&gt;&gt; re.search('GOOGLE_MAPS_LATITUDE:\s*(\d+\.\d+)', ll)
&lt;_sre.SRE_Match object at 0x105525cd8&gt;
&gt;&gt;&gt; re.search('GOOGLE_MAPS_LATITUDE:\s*(\d+\.\d+)', ll).group(1)
'25.0463764816'
</code></pre>
</div>
<span class="comment-copy">It is not duplicated guys. I didn't know that I have to use search instead of match. please be more careful about these things. consider that not all users are professionals in python</span>
<span class="comment-copy">what is this comma? and can I get the value without the <code>(</code> and the <code>)</code> please?</span>
<span class="comment-copy">Yes, you can. See my answer updated. Make sure to check if the <code>re.search()</code> object returned is not <code>None</code> before trying to call <code>group()</code> method.</span>
<span class="comment-copy">Many thanks, will accept it once the system allows +1</span>
<span class="comment-copy">For the record, the second line returns a tuple: <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">docs.python.org/3/tutorial/â€¦</a></span>
<span class="comment-copy">is this question really a duplicated one? I didn't know that <code>search</code> could help.</span>
<span class="comment-copy">I already tried the <code>search</code> syntax and I've got the exact same result u got. but how to see the actual number ? I am searching for <code>latitude</code> value</span>
<span class="comment-copy">@MarcoDinatsoli: you mean you want the group? The returned <code>MatchObject</code> has a <code>.group()</code> method, and you already are using <code>(..)</code> to capture the value into group 1, so use <code>.group(1)</code> to extract it.</span>
<span class="comment-copy">Many thanks for the efforts +1,</span>
<span class="comment-copy">is this really a duplicated question? I didn't know that <code>search</code> is beneficial in my case</span>
<span class="comment-copy">@MarcoDinatsoli: well, it does appear that the difference between <code>re.search()</code> and <code>re.match()</code> is what threw you off.</span>
