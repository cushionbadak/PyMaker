<div class="post-text" itemprop="text">
<p>I want a function returning a file object with which I can write binary data to standard output. In python2 <code>sys.stdout</code> is such an object. In python3 it is <code>sys.stdout.buffer</code>.</p>
<p>What is the most elegant/preferred way to retrieve such an object so that it works for both, the python2 and the python3 interpreter?</p>
<p>Is the best way to check for existance of <code>sys.stdout.buffer</code> (probably using the <code>inspect</code> module) and if it exists, return it and if it doesnt, assume we are on python2 and return <code>sys.stdout</code> instead?</p>
</div>
<div class="post-text" itemprop="text">
<p>No need to test, just use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="noreferrer"><code>getattr()</code></a>:</p>
<pre><code># retrieve stdout as a binary file object
output = getattr(sys.stdout, 'buffer', sys.stdout)
</code></pre>
<p>This retrieves the <code>.buffer</code> attribute on <code>sys.stdout</code>, but if it doesn't exist (Python 2) it'll return the <code>sys.stdout</code> object itself instead.</p>
<p>Python 2:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; getattr(sys.stdout, 'buffer', sys.stdout)
&lt;open file '&lt;stdout&gt;', mode 'w' at 0x100254150&gt;
</code></pre>
<p>Python 3:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; getattr(sys.stdout, 'buffer', sys.stdout)
&lt;_io.BufferedWriter name='&lt;stdout&gt;'&gt;
</code></pre>
<p>Take into account that in Python 2, <code>stdout</code> is still opened in text mode, newlines are still translated to <code>os.linesep</code> when writing. The Python 3 <code>BufferedWriter</code> object won't do this for you.</p>
</div>
