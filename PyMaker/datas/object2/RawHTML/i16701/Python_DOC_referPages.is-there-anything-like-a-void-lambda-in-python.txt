<div class="post-text" itemprop="text">
<p>That is, a lambda that takes no input and returns nothing. </p>
<p>I was thinking of clever ways to mimic switch statements in Python. Here's what I attempted (to no avail):</p>
<pre><code>statement = {
    "Bob": lambda: print "Looking good, Bob!",
    "Jane": lambda: print "Greetings, Jane!",
    "Derek": lambda: print "How goes it, Derek?"
}[person]()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The contents of a lambda function must be a single expression; no statements are allowed.  Moreover, <a href="https://docs.python.org/2.7/reference/simple_stmts.html#grammar-token-print_stmt" rel="nofollow"><code>print</code></a> is a statement in Python 2.x.  This means that you cannot use it inside a lambda.</p>
<p>If you want to use the Python 3.x <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow"><code>print</code> function</a>, you can import it from <a href="https://docs.python.org/2/library/__future__.html" rel="nofollow"><code>__future__</code></a> like so:</p>
<pre><code># Add this line to the top of your script file
from __future__ import print_function
</code></pre>
<p>Now, <code>print</code> can be used inside lambdas because it is a function:</p>
<pre><code>statement = {
    "Bob": lambda: print("Looking good, Bob!"),
    "Jane": lambda: print("Greetings, Jane!"),
    "Derek": lambda: print("How goes it, Derek?")
}[person]()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For this use case, you're probably better off doing:</p>
<pre><code>print {
    "Bob": "Looking good, Bob!",
    "Jane": "Greetings, Jane!",
    "Derek": "How goes it, Derek?"
}[person]
</code></pre>
<p>or</p>
<pre><code>statement = {
    "Bob": "Looking good, Bob!",
    "Jane": "Greetings, Jane!",
    "Derek": "How goes it, Derek?"
}[person]
print statement
</code></pre>
<p>For more complex <code>switch</code>-like applications, the <code>dict</code> could hold function references, of course.</p>
<p>I'm also fond of composing function names as strings:</p>
<pre><code>class Greeter(object):
    ... 
    def _greet_Bob(self): ...
    def _greet_Jane(self): ...
    def _greet_Derek(self): ...

    def greet(self,person):
        getattr( self, "_greet_"+person )()  
</code></pre>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/60208/replacements-for-switch-statement-in-python" title="replacements for switch statement in python">stackoverflow.com/questions/60208/â€¦</a></span>
<span class="comment-copy">All lambdas, like functions, return <i>something</i>; the default is <code>None</code>. Just ignore the return value. Your problem is with trying to use a statement where only expressions can be used.</span>
<span class="comment-copy">Thanks for clarification, but you may want to add commas there</span>
