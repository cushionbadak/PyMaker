<div class="post-text" itemprop="text">
<p>I have a bunch of 64-bit floating-point-format strings, and I have to convert them into floating-point numbers. I know what the format looks like, but I’m wondering whether there’s a <em>built-in</em> function can fulfill this job directly, as in:</p>
<pre class="lang-none prettyprint-override"><code>convertToFloat(C06FCA5E35000000) --&gt; -254.324 
convertToFloat(405F7D70A4000000) --&gt; +125.96
</code></pre>
<p>I know how to convert these bit patterns to numbers manually, but it needs a lot of bit shifting. Is there a better way?</p>
<p>I modified 'C06FCA5E35000000' to '\xC0\x6F\xCA\x5E\x35\x00\x00\x00', and stored it to myString.</p>
<pre><code>&gt;&gt;&gt;print (myString)
\xC0\x6F\xCA\x5E\x35\x00\x00\x00
&gt;&gt;&gt;d = struct.unpack('&gt;d', myString)
       d = struct.unpack('&gt;d', myString)
 struct.error: unpack requires a string argument of length 8
</code></pre>
<p>Why did it happened?</p>
<p>I didn't use binascii.a2b_hex or binascii.b2a_hex, beacuse it converts 'A' to '41' or '41' to 'A'. Both are not what I want. Right?</p>
<pre><code>&gt;&gt;&gt;print len('\xC0\x6F\xCA\x5E\x35\x00\x00\x00')
8
&gt;&gt;&gt;print len(myString)
32
</code></pre>
<p>Now I know why it happened, but I still don't know how to solve the situation.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>struct.unpack</code>. <code>&gt;d</code> is a big-endian double; see <code>help(struct)</code> for more!</p>
<pre><code>import struct

d, = struct.unpack('&gt;d', b'\xc0\x6f\xca\x5e\x35\x00\x00\x00')

print(d)
# -254.32399988174438
</code></pre>
<p>If your string is really <code>'C06FCA5E35000000'</code>, you can convert it first into bytes using <a href="https://docs.python.org/3/library/binascii.html#binascii.a2b_hex" rel="nofollow"><code>binascii.a2b_hex</code></a>.</p>
</div>
<span class="comment-copy">Does your string look like <code>'C06FCA5E35000000'</code> or like <code>'\xc0\x6f\xca\x5e\x35\x00\x00\x00'</code>? It's not clear whether you're talking about a string whose raw bit pattern encodes the floating-point number or a string containing hexadecimal text representing the floating-point number's bit pattern.</span>
<span class="comment-copy">nice answer +1 :) I was pretty stumped by this one</span>
<span class="comment-copy">it really exits!!! I am in love with python</span>
<span class="comment-copy">It looks to me like the OP has a string with literal hex digits in it. <code>'C06FCA5E35000000'</code> instead of <code>b'\xc0\x6f\xca\x5e\x35\x00\x00\x00'</code>.</span>
<span class="comment-copy">@user2357112: Ah, good point! Updated.</span>
<span class="comment-copy">@LiarLai: <code>\xc0</code> isn’t the literal content of the string; it only works in string literals and produces the byte C0. You have to use <code>binascii.a2b_hex</code>, but not just by itself; it’s something you do before unpacking. So <code>d, = struct.unpack('&gt;d', binascii.a2b_hex(string))</code>, where <code>string</code> is <code>'C06FCA5E35000000'</code> again.</span>
