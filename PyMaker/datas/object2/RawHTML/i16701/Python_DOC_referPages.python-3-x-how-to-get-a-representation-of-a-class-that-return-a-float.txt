<div class="post-text" itemprop="text">
<p>I have a class that return a float number, and I want to print it in the <code>__main__</code> as a representation of the previous class, formatted to trim some numbers over floating point. If I override the <code>__str__</code> method I obviously get <code>TypeError</code> exception, as the following example:</p>
<pre><code>class override_str:
    def __str__(self):
        return(77.543)

if __name__=='__main__':
    print("float got by overriden __str__  : {:2f}".format(override_str()))
</code></pre>
<p>So, how can I "fix"? Using the <code>__repr__</code> doesn't seem to help</p>
</div>
<div class="post-text" itemprop="text">
<p>You can convert the float to a string within the <code>__str__</code> method before returning it.</p>
<pre><code>class my_str:
    def __str__(self):
        return str(77.543)

&gt;&gt;&gt; a = my_str()
&gt;&gt;&gt; a
&lt;__main__.my_str instance at 0x02783288&gt;   # a is an instance of my_str

&gt;&gt;&gt; print a    # calls the __str__ method
77.543
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could implement the <a href="https://docs.python.org/3/reference/datamodel.html#object.__format__" rel="nofollow"><code>__format__()</code> special method</a> to customise how your custom class is interpolated into a string format:</p>
<pre><code>class SpecialFormat:
    def __format__(self, format_spec):
        if format_spec.endswith('f'):
            return format(77.543, format_spec)
        return 'Unknown format'
</code></pre>
<p>This delegates to the <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow"><code>format()</code> <em>function</em></a> to handle the actual formatting, but it gives you a hook to determine what format is being requested for your custom object.</p>
<p>The <code>__format__</code> method is passed the full <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow">Format Specification Mini Language string</a>. Like <code>__str__</code> you still need to return a string object.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; 'Formatted as float: {:.2f}'.format(SpecialFormat())
'Formatted as float: 77.54'
&gt;&gt;&gt; 'Formatted as float: {}'.format(SpecialFormat())
'Formatted as float: Unknown format'
</code></pre>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/5086113/methods-for-python-classes-representation">Methods for Python classes representation</a></span>
<span class="comment-copy">Do you have to be able to format the float value in the <code>str.format()</code> template?</span>
