<div class="post-text" itemprop="text">
<p>I'm using Windows 7 with official Python 2.7 . </p>
<p>On CMD command line, I can write</p>
<pre><code>python -c "import os; print os.environ['PATH'].split(';');"
</code></pre>
<p>However, this is wrong:</p>
<pre><code>C:\&gt;python -c "import os; for p in os.environ['PATH'].split(';'): print p"
  File "&lt;string&gt;", line 1
    import os; for p in os.environ['PATH'].split(';'): print p
                 ^
SyntaxError: invalid syntax
</code></pre>
<p>Could someone please help me out? I really hope to write <code>import</code> and subsequent statements in one line, because I'd like to write a doskey command like this, to make a easy-to-read PATH listing:</p>
<pre><code>doskey lpath=python -c "import os; for p in os.environ['PATH'].split(';'): print p"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about using <a href="https://docs.python.org/2/library/functions.html#__import__" rel="nofollow"><code>__import__</code></a> instead?</p>
<pre><code>python -c "for p in __import__('os').environ['PATH'].split(';'): print p"
</code></pre>
<p><strong>UPDATE</strong></p>
<p>Alternative: replacing <code>;</code> with newline.</p>
<pre><code>python -c "import os; print os.environ['PATH'].replace(';', '\n')"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This seems like a peculiarity in the language syntax. Observe:</p>
<p>A statement can be either a simple statement or compound statement:</p>
<pre><code>stmt: simple_stmt | compound_stmt
</code></pre>
<p>A simple statement is defined as follows:</p>
<pre><code>simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE
small_stmt: (expr_stmt | del_stmt | pass_stmt | flow_stmt |
             import_stmt | global_stmt | nonlocal_stmt | assert_stmt)
</code></pre>
<p>Notice it contains an <code>import_stmt</code> (an import statement). Additionally, only simple statements can be chained with <code>;</code>.</p>
<p>A compound statement, on the other hand, is:</p>
<pre><code>compound_stmt: if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef | decorated
</code></pre>
<p>Therefore the language disallows your for loop (which is syntactically valid on its own) in the same statement with a simple statement.</p>
<p>Source: <a href="https://docs.python.org/3/reference/grammar.html?highlight=grammar" rel="nofollow">https://docs.python.org/3/reference/grammar.html?highlight=grammar</a></p>
</div>
<span class="comment-copy">Is it illegal in windows to have linebreaks in a string on the command line?</span>
<span class="comment-copy">@Kay Either that, or at least impossible to enter. (There is no way of doing <code>$'\n'</code>...)</span>
<span class="comment-copy">As for the <i>why</i>, see <a href="http://stackoverflow.com/q/15185746">While loop one-liner</a></span>
<span class="comment-copy">@glglgl, Thank you for the typo correction.</span>
<span class="comment-copy">Another way: <code>"from __future__ import print_function; import os;print(*os.environ['PATH'].split(';'), sep='\n')"</code></span>
<span class="comment-copy">It solved the problem.</span>
