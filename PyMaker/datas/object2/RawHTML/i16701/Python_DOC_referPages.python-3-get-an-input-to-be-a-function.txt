<div class="post-text" itemprop="text">
<p>I'm trying to get this input to become a function to use later on when buying/selling shares in a program. Is this possible? For example, later on I might do:</p>
<p>if shareOne &gt;= 50 //where &gt;= is shareQuestionBuy or shareQuestionSell</p>
<h2>CODE BELOW</h2>
<pre><code>#Input of share code
shareCode = str(input("What is your share code? "))
if isValid(shareCode):
    print("\nShare code", str(shareCode), "is valid\n")
else:
    print("\nERROR! Share code", str(shareCode), " invalid. Share code too short/long or contains alpha/unicode characters.\n Program will now terminate\n")
    quit()


shareQuestionBuy = bool(input("Are shares bought by" + str(shareCode) + "bought when they are below the limit price (True) or greater than/equal to the limit price (False)? (True/False only): "))
if shareQuestionBuy == True:
    print("Shares will now only be bought if they are below the limit price")
    shareQuestionBuy = &lt;
elif shareQuestionBuy == False:
    print("Shares will now only be bought if they are greater than/equal to the limit price")
    shareQuestionBuy = &lt;=
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/operator.html" rel="nofollow"><code>operator</code></a></p>
<pre><code>3&gt;&gt; import operator
3&gt;&gt; foo = operator.gt
3&gt;&gt; foo(3, 2)
True
</code></pre>
</div>
<span class="comment-copy">FYI, the value of an <code>input()</code> is already a string, so you don't need to call <code>str(input(...</code>, and you certainly don't need to keep calling <code>str(shareCode)</code> every time you want to print it. String concatenation works seamlessly with <code>str1 + " some text " + str2</code>.</span>
<span class="comment-copy">Your example code is quite unclear - for example, why is <code>shareQuestionBuy</code> redefined, starting as a boolean and then becoming an operator? And is the question about inputs as the title says, or just about assigning an operator to a value as the body implies? If you can cut down the question to the essential point you are asking about it would be a lot easier to understand.</span>
<span class="comment-copy">Cheers, how does this get implemented into the code though?</span>
<span class="comment-copy">Erm... <code>shareQuestionBuy = operator.lt</code> ... <code>shareQuestionBuy(something, somethingElse)</code></span>
