<div class="post-text" itemprop="text">
<p>Strings are iterable.
Lists are iterable.
And with a List of Strings, both the List and the Strings can be iterated through with a nested loop.</p>
<p>For Example:</p>
<pre><code>input = [ 'abcdefg', 'hijklmn', 'opqrstu']
for item in input:
     for letter in item:
        print letter
</code></pre>
<p>Out:</p>
<pre><code>a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
</code></pre>
<p>It seems we can then iterate within the iteration over the string, i.e. iterate over each letter of 'abcdefg'. Is there a more pythonic way to iterate as above, possibly in one statement? </p>
<p>I've re-read through Learning Python Chapter 4, Chapter 1 of the Python Cookbook, and looked here <a href="https://stackoverflow.com/questions/20968823/in-python-iterate-over-each-string-in-a-list">in python: iterate over each string in a list</a>, and here <a href="https://stackoverflow.com/questions/23146299/displaying-and-iterating-a-list-within-a-string">Displaying and iterating a list within a string?</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable"><code>itertools.chain.from_iterable()</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import chain
&gt;&gt;&gt; input = ['abcdefg', 'hijklmn', 'opqrstu']
&gt;&gt;&gt;
&gt;&gt;&gt; for letter in chain.from_iterable(input):
...     print letter
... 
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>itertools.chain</code>:</p>
<pre><code>for letter in itertools.chain(*input):
    print letter
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you've written is already the most pythonic way to do it; there are already two levels of nesting (letters within strings within a list) so it's correct to have two nested <code>for</code> loops.</p>
<p>If you really want to use a single <code>for</code> statement, you can collapse the loops with a generator comprehension:</p>
<pre><code>for letter in (letter for item in input for letter in item):
    print letter
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That is good enough, 
everything else is just an academic puzzle</p>
<pre><code>for item in ''.join(input):
    print item
</code></pre>
</div>
<span class="comment-copy">Would you agree or disagree with @ecatmur that using the built in functionality is preferred to importing a library because <i>explicit is better than implicit</i> and why?</span>
<span class="comment-copy">@Aaron Disagree. There's nothing wrong with using <code>itertools</code> (in fact it would be advisable if the situation calls for it, as this one does). Also, <code>for letter in chain.from_iterable(input)</code> is as explicit as it gets. If you're worried about that, simply write a comment indicating the intent of the loop.</span>
<span class="comment-copy">What might I use to determine whether or not I should use one or two for statements?  IMO, your single for statement looks elegant. What would be the downside of using your single for statement?</span>
<span class="comment-copy">@Aaron it's a lot of text in a single statement, and it repeats <code>letter</code> more than necessary (3 times as opposed to just 1 with the two for statements).</span>
<span class="comment-copy">Thank you. In light of the three time repetition of <code>letter</code>, would it be preferable to import a library as suggested by others, or to use the built in functionality, such as, a generator?</span>
<span class="comment-copy"><code>itertools</code> should be in the armory of any good Python programmer, but the generator comprehension is clearer about what's going on, so (since <i>explicit is better than implicit</i>) I think that wins out.</span>
<span class="comment-copy">Your solution is printing the characters, but does not answer the question, which clearly asked for iterating. Your "join" is constructing complete string in memory, this could be for large list a problem.</span>
<span class="comment-copy">Not my preferred answer, but I don't really see a reason for down votes given that the question specifically asks about lists of strings, not more generalized situations.</span>
<span class="comment-copy">Why has this answer been downvoted?</span>
