<div class="post-text" itemprop="text">
<p>To my knowledge, indexing with <code>-1</code> will bring you up the last item in a list e.g.</p>
<pre><code>list = 'ABCDEFG'
list[-1] 
'G'
</code></pre>
<p>But when you are asking for a sequence from the list, <code>-1</code> gives the second to last term in a list, </p>
<pre><code>list[3:-1] 
'DEF'
</code></pre>
<p>Why? I would have expected, and would like to get <code>DEFG</code></p>
</div>
<div class="post-text" itemprop="text">
<p>It is because the stop (second) argument of slice notation is exclusive, not inclusive.  So, <code>[3:-1]</code> is telling Python to get everything from index <code>3</code> up to, but not including, index <code>-1</code>.</p>
<p>To get what you want, use <code>[3:]</code>:</p>
<pre><code>&gt;&gt;&gt; list = 'ABCDEFG'
&gt;&gt;&gt; list[3:]
'DEFG'
&gt;&gt;&gt;
&gt;&gt;&gt; list[3:len(list)]  # This is equivalent to doing:  list[3:]
'DEFG'
&gt;&gt;&gt;
</code></pre>
<hr/>
<p>Also, just a note for the future: it is considered a bad practice to use <code>list</code> as a variable name.  Doing so overshadows the <a href="https://docs.python.org/3/library/functions.html#func-list">built-in</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's for the same reason that <code>list[3:4]</code> doesn't include the character at the 4th index; slicing is not inclusive.  In addition, you can slice from a character to the end simply by omitting the second slice parameter, as in <code>list[3:]</code>.</p>
</div>
