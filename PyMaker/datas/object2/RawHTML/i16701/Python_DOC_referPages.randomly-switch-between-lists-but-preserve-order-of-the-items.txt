<div class="post-text" itemprop="text">
<p>I am creating a little script that will take a pickled file, read its contents and present it to the user. I am working on a feature that will allow to randomly select lists. Each list represents a single file. In these lists are items.</p>
<p>What I want to do is randomly jump between files (master lists) but every time it returns to the file, I want to pick up where it left off - to read from the position it was at before.</p>
<p>To demonstrate, I will give you a little example (in reality it's more complex):</p>
<pre><code>master_list = [['one','two','three'],[1, 2, 3],['foo','bar','nothing']]
</code></pre>
<p>Now I want to do something like:</p>
<pre><code>rand_master_list = random.choice(master_list)

while True:
    for item in rand_master_list:
        print item
        break
</code></pre>
<p><em>The <code>break</code> statement is because I want to jump out of <code>for</code> loop so <code>rand_master_list</code> is differing from the one that was before.</em></p>
<p>But I cannot do what I need. I would like to get this output for example:</p>
<pre><code>one         # prints master_list[0][0]
foo         # prints master_list[2][0]
1           # prints master_list[1][0]
bar         # randomly selects but it doesn't start with 'foo' but keeps
            # going in the list master_list[2][1]
two         # print master_list[0][1] again notice the item order is
            # unchanged but the list containing items was randomly selected
</code></pre>
<p>Etc. You get the idea. I cannot figure out how to keep the state where the list was read last time. I hope it's not too confusing. Also, I do not know how <code>master_list</code> will look like, it will be changed every time so I cannot use anything too "specific", the number of the item lists in <code>master_list</code> will be different every time as well as number of items inside those.</p>
</div>
<div class="post-text" itemprop="text">
<p>An <a href="https://docs.python.org/3/library/stdtypes.html#iterator-types" rel="nofollow">iterator</a> yields each item of a list (or any other iterable) in turn, keeping track of its place as it goes. You can make an iterator over a list (or any other iterable) with the built-in <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow"><code>iter()</code></a> function, and then get its items in turn using <a href="https://docs.python.org/3/library/functions.html#nexth" rel="nofollow"><code>next()</code></a>.</p>
<p>Here's how you could use iterators to accomplish your goal:</p>
<pre><code>import random

list_of_lists = [
    ['one', 'two', 'three'],
    [1, 2, 3],
    ['foo', 'bar', 'nothing']
]

list_of_iters = [iter(s) for s in list_of_lists]

while list_of_iters:
    key = random.randrange(0, len(list_of_iters))
    random_iter = list_of_iters[key]
    try:
        item = next(random_iter)
    except StopIteration:
        del list_of_iters[key]
        continue
    print(item)
</code></pre>
<p>Notice that when an iterator is exhausted, it raises <code>StopIteration</code>, and in the code above we catch that exception and remove the exhausted iterator from <code>list_of_iters</code>. When <code>list_of_iters</code> is empty, it evaluates as <code>False</code> and the <code>while</code> loop terminates.</p>
</div>
<span class="comment-copy">Thanks very much! I haven't been responding because I was studying <code>next</code>, <code>iter</code> and list comprehension as I haven't came across those before. It works well but there's one catch, what if I wanted infinite loop_ instead of <code>while list_of_iters</code> to use <code>while True</code> ?  it gives me ValueError if I replace it with <code>True</code>:  <code>raise ValueError</code> <code>, "empty range for randrange() (%d,%d, %d)" % (istart, istop, width) ValueError: empty range for randrange() (0,0, 0)</code></span>
<span class="comment-copy">If you changed <code>while list_of_iters</code> to <code>while True</code> ... well, what would happen with the code above is that rather than exiting gracefully when you run out of items, you'd get an error from trying to choose among an empty list of iterators. I'm not sure what you think you want here ... you have a finite amount of data, so an infinite loop makes no sense. Perhaps you could formulate a new SO question explaining what you're after?</span>
<span class="comment-copy">Well... it's how my script works, the user decides when to stop it. Is there an easy way? Maybe enclose it in another while loop? The best way would be when it finishes iterating to start over the iterable list.</span>
<span class="comment-copy">It's hard to tell what you're asking for ... I'd write a new question if I were you.</span>
