<div class="post-text" itemprop="text">
<p>I have a lot of python strings such as <code>"A7*4"</code>, <code>"Z3+8"</code>, <code>"B6 / 11"</code>, and I want to split these strings so that they would be in a list, in the format <code>["A7", "*", "4"]</code>, <code>["B6", "/", "11"]</code>, etc. I have used a lot of different split methods but I think I need to just perform the split where there is a math symbol, such as <code>/,*,+,-</code>. I would also need to strip out the whitespace.</p>
<p>Currently I am using the code <code>re.split(r'(\D)', "B6 / 11")</code>, which is returning <code>['', 'B', '6', ' ', '', '/', '', ' ', '11']</code>. Instead I want to get back <code>["B6", "/", "11"]</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>You should split on the <a href="https://docs.python.org/2/library/re.html#regular-expression-syntax">character set</a> <code>[+-/*]</code> after removing the whitespace from the string:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; def mysplit(mystr):
...     return re.split("([+-/*])", mystr.replace(" ", ""))
...
&gt;&gt;&gt; mysplit("A7*4")
['A7', '*', '4']
&gt;&gt;&gt; mysplit("Z3+8")
['Z3', '+', '8']
&gt;&gt;&gt; mysplit("B6 / 11")
['B6', '/', '11']
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is a way to solve this without regular expressions by using the Python <a href="https://docs.python.org/3/library/tokenize.html" rel="nofollow">tokenizer</a>. I used a more complex formula to show the capabilities of this solution.</p>
<pre><code>from io import StringIO
import tokenize

formula = "(A7*4) - (Z3+8) -  ( B6 / 11)"
print([token[1] for token in tokenize.generate_tokens(StringIO(formula).readline) if token[1]])
</code></pre>
<p>Result:</p>
<pre><code>['(', 'A7', '*', '4', ')', '-', '(', 'Z3', '+', '8', ')', '-', '(', 'B6', '/', '11', ')']
</code></pre>
</div>
<span class="comment-copy">is it always just the three parts, <code>$operand1 $operation $operand2</code>?</span>
<span class="comment-copy">@Pavel at this point it is just the three parts.</span>
<span class="comment-copy">On python 2.7.13, the example above throws an error. <code>TypeError: initial_value must be unicode or None, not str</code> .  Need to add 'u' flag in front of formula var string.</span>
