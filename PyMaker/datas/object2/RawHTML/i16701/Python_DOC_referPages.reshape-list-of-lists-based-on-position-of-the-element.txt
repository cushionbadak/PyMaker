<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17037566/transpose-a-matrix-in-python">Transpose a matrix in Python [duplicate]</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have a list of lists that looks like this;</p>
<pre><code>[[4, 0, 1], [0, 0, 1], [0, 1, 2], [1, 1, 0], [2, 0, 0]]
</code></pre>
<p>Which is the most efficient way to get 3 lists from the above list based on the position of the element?</p>
<p>Result:</p>
<pre><code>[4,0,0,1,2]
[0,0,1,1,0]
[1,1,2,0,0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#displays-for-lists-sets-and-dictionaries" rel="nofollow">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; lst = [[4, 0, 1], [0, 0, 1], [0, 1, 2], [1, 1, 0], [2, 0, 0]]
&gt;&gt;&gt; [list(x) for x in zip(*lst)]
[[4, 0, 0, 1, 2], [0, 0, 1, 1, 0], [1, 1, 2, 0, 0]]
&gt;&gt;&gt;
</code></pre>
<p>Placing <code>*</code> before <code>lst</code> unpacks the list into arguments for the <code>zip</code> function.  In this case:</p>
<pre><code>zip(*lst)
</code></pre>
<p>is equivalent to writing:</p>
<pre><code>zip([4, 0, 1], [0, 0, 1], [0, 1, 2], [1, 1, 0], [2, 0, 0])
</code></pre>
<p><code>zip</code> then zips these lists together by returning an iterator of tuples where the n-th tuple contains the n-th item from each of the lists.  In this case, it returns:<sup>1</sup></p>
<pre><code>&gt;&gt;&gt; list(zip(*lst))
[(4, 0, 0, 1, 2), (0, 0, 1, 1, 0), (1, 1, 2, 0, 0)]
&gt;&gt;&gt;
</code></pre>
<p>Finally, the list comprehension converts these tuples into lists and collects them into a new list.</p>
<hr/>
<p><sub><sup>1</sup>You need to call <code>list()</code> on <code>zip(*lst)</code> to view its items because <code>zip</code> returns an <a href="https://docs.python.org/3/glossary.html#term-iterator" rel="nofollow">iterator</a> in Python 3.x.</sub></p>
</div>
<span class="comment-copy">very elegant! :)</span>
<span class="comment-copy">This'll get a +1 from me if you say something about the <code>*</code> before <code>lst</code> and maybe a sentence about <code>zip</code> generally.</span>
<span class="comment-copy">@LondonRob - Better? :)</span>
