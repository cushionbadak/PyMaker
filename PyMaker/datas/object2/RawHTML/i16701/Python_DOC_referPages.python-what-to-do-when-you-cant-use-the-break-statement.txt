<div class="post-text" itemprop="text">
<p>How do you break out of the loop when you get in this situation (I'm still a beginner so I don't know everything even though this might be a "simple" problem)?</p>
<pre><code>while True:
    s = input('Enter something : ')
    if len(s) &gt; 3:
        print('too big')
        continue
    if s == 'quit':
        break
    print('something')
</code></pre>
<p>As you can see you can't break out of the loop because "quit" has more than 3 characters.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should restructure your program like so, placing the second if-statement above the first:</p>
<pre><code>while True:
    s = input('Enter something : ')
    if s == 'quit':  # Do this check first
        break
    elif len(s) &gt; 3:  # Then see if the input is too long
        print('too big')
        continue
    print('something')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow"><code>iter</code></a> with a sentinel value and a <code>for</code> loop instead of <code>while</code>:</p>
<pre><code>for s in iter(lambda: input('Enter something : '), 'quit'):
    if len(s) &gt; 3:
        print('too big')
    else:
        print('something')
</code></pre>
</div>
<span class="comment-copy">Move the <code>if s == 'quit'</code> above the length check?</span>
<span class="comment-copy">It is not the <code>break</code> statement that is the problem here. You can use <code>break</code> <b>just fine</b>. It is working out your program logic you are having trouble with.</span>
<span class="comment-copy">Down/close vote seems a bit harsh, its an honest question.</span>
<span class="comment-copy">i think u should read this <a href="http://stackoverflow.com/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response" title="asking the user for input until they give a valid response">stackoverflow.com/questions/23294658/â€¦</a></span>
<span class="comment-copy">I think it might be preferable to change it to <code>while s != 'quit'</code> for a more understandable flow. Personally, I'd also break up the validity check outside and wrap <code>input</code> but that's less relevant here.</span>
<span class="comment-copy">@BenjaminGruenbaum I disagree - then you need to initialise <code>s</code> outside the loop.</span>
<span class="comment-copy">Thank you, it works now but why does the order of if statements matter that much in this case?</span>
<span class="comment-copy">In your old code, if the user entered <code>"quit"</code>, the second if-statement would never be executed because the condition of the first passed.  Therefore, I put the second if-statement first so that it is executed immediately.  Then, once we have confirmed that the user did not enter quit, we can check the length of the input and print the <code>"too big"</code> message if necessary.</span>
<span class="comment-copy">clever. A bit too clever for OP perhaps. While we're clever, you can change <code>lambda: input('Enter something : ')</code> to <code>partial(input,"Enter Something : ")</code>.</span>
<span class="comment-copy">I don't think it's particularly clever. It's idiomatic to use <code>for</code>/<code>iter</code> for a "until <code>x</code> becomes <code>y</code> do <code>z</code>"-kind of loop.</span>
