<div class="post-text" itemprop="text">
<p>In my code I am using assert_any_call() to verify series of call that happens to the django model filter, Now I need to verify the reverse case of this like assert_not_called(args).</p>
<p>Is there any assert statement to achieve this in python? </p>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way is to use <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.call_args_list" rel="nofollow"><code>Mock.call_args_list</code></a>:</p>
<pre><code>assert call(None, a=1, b="") not in mocked_func.call_args_list, "Called with invalid args."
</code></pre>
<p>If you want a method, use:</p>
<pre><code>class NotCalledMagicMock(unittest.mock.MagicMock):
    def assert_not_called(_mock_self, *args, **kwargs):
        self = _mock_self
        if self.call_args is None:
            return

        expected = self._call_matcher((args, kwargs))
        if any(self._call_matcher(ca) == expected for ca in self.call_args_list):
            cause = expected if isinstance(expected, Exception) else None
            raise AssertionError(
                '%r found in call list' % (self._format_mock_call_signature(args, kwargs),)
            ) from cause
</code></pre>
<p>To use this class, put this decorator before your test function:</p>
<pre><code>@unittest.mock.patch("unittest.mock.MagicMock", NotCalledMagicMock)
</code></pre>
<p>Or make your mocks using:</p>
<pre><code>func_b_mock = NotCalledMagicMock()
</code></pre>
<p>To use the method (where <code>func_b_mock</code> is a mock generated by e.g. <code>patch</code>):</p>
<pre><code>func_b_mock.assert_not_called([12], a=4)
</code></pre>
<p>When it fails, it raises an <code>AssertionError</code> like:</p>
<pre><code>Traceback (most recent call last):
  File "your_test.py", line 34, in &lt;module&gt;
    test_a()
  File "/usr/lib/python3.4/unittest/mock.py", line 1136, in patched
    return func(*args, **keywargs)
  File "your_test.py", line 33, in test_a
    func_b_mock.assert_not_called([1])
  File "your_test.py", line 20, in assert_not_called
    ) from cause
AssertionError: 'func_b([1])' found in call list
</code></pre>
</div>
<span class="comment-copy">Possibly of help? <a href="http://stackoverflow.com/a/12187244/314291">stackoverflow.com/a/12187244/314291</a></span>
<span class="comment-copy">I wanted to check calls with parameters.</span>
