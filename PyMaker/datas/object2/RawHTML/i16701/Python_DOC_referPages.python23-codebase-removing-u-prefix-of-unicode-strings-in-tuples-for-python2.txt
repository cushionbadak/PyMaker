<div class="post-text" itemprop="text">
<p>I am writing my doctests like this:</p>
<pre><code>&gt;&gt;&gt; some_function(a=1, b=2)
{u'id': u'123', u'name': u'abc'}
</code></pre>
<p>This works fine for Python version 2.5, 2.6 &amp; 2.7 but fails for Python 3 with following error:</p>
<pre><code>Expected:
    {u'id': u'123', u'name': u'abc'}
Got:
    {'id': '123', 'name': 'abc'}
</code></pre>
<p>Problem is that if I write my doctests like this:</p>
<pre><code>&gt;&gt;&gt; some_function(a=1, b=2)
{'id': '123', 'name': 'abc'}
</code></pre>
<p>They will work only for Python3 and fail on Python2 version. My question is how do I make it cross version compatible?</p>
</div>
<div class="post-text" itemprop="text">
<p>I ran into the same problem with doctests in IPython. There's no neat solution, but I wrapped all of the <code>u'</code> prefixes in <code>{}</code>, i.e. <code>{u}'</code>, and made a little function that would include or exclude them as appropriate.</p>
<p>You can see <a href="https://github.com/ipython/ipython/blob/master/IPython/utils/py3compat.py#L93">the u_format() function</a> and <a href="https://github.com/ipython/ipython/blob/master/IPython/core/tests/test_magic.py#L410">a doctest using it</a>.</p>
<p>But that's rather messy, so I've moved many tests away from doctests.</p>
<p>Alternatively, you can test it like this:</p>
<pre><code>&gt;&gt;&gt; some_function(a=1, b=2) == {'id': '123', 'name': 'abc'}
True
</code></pre>
<p>If you need some unicode strings in the keys, you can use <code>u'abþ'</code>, and use distribute to run <code>2to3</code> on the doctests. But that only works on input code, not output reprs.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you use pytest, you can just do:</p>
<pre><code>&gt;&gt;&gt; some_function(a=1, b=2) # doctest: +ALLOW_UNICODE
{u'id': u'123', u'name': u'abc'}
</code></pre>
<p>And the u will be stripped if you are running Python 3, and kept in Python 2.</p>
</div>
<div class="post-text" itemprop="text">
<p>I run into the same issue with doctests in NLTK; it was solved by using a custom doctest output checker (that treats u'foo' and 'foo' the same) which is installed by a custom nose plugin: <a href="https://github.com/nltk/nltk/blob/develop/nltk/test/doctest_nose_plugin.py" rel="nofollow">https://github.com/nltk/nltk/blob/develop/nltk/test/doctest_nose_plugin.py</a></p>
<p>This solution is not pretty, but it works quite well (there are about 0.5 megabytes of doctests in NLTK) and it doesn't make doctests less readable.</p>
<p>EDIT: found a simplified standalone version of this nose plugin: <a href="https://github.com/gnublade/doctest-ignore-unicode" rel="nofollow">https://github.com/gnublade/doctest-ignore-unicode</a></p>
</div>
<span class="comment-copy">You'll have to use the same techniques as you'd use for making your code work in both Python 2.x and 3.x. That can get ugly, fast. Personally, I'd stick with unittests instead of doctests and use Sphinx for API documentation.</span>
<span class="comment-copy">I do use unittest for testing, this is just to validate the examples.</span>
<span class="comment-copy">Have you tried with Python 3.3? 3.3 reintroduces the u"" syntax (<a href="http://docs.python.org/3/whatsnew/3.3.html" rel="nofollow noreferrer">docs.python.org/3/whatsnew/3.3.html</a>). Don't know if the change will affect doctests, but it is worth a try.</span>
<span class="comment-copy">@codeape: You can use <code>u''</code> to <i>specify</i> a literal, but <code>repr(somestring)</code> will not use them, so the tests still will fail. Compare that to using <code>r''</code> raw python literals; the <code>r</code> will be dropped from the representation as well.</span>
<span class="comment-copy">OK, I see. I guess the only way to do this with doctests would be to rewrite the tests, then. For instance <code>&gt;&gt;&gt; result = some_function(a=1, b=2) &gt;&gt;&gt; print(result["id"])</code> etc.</span>
<span class="comment-copy">This did not work for me, see my follow-up question here: <a href="https://stackoverflow.com/questions/42158733/unicode-literals-and-doctest-in-python-2-7-and-python-3-5" title="unicode literals and doctest in python 2 7 and python 3 5">stackoverflow.com/questions/42158733/…</a></span>
<span class="comment-copy">The nose plugin link is now a 404.</span>
<span class="comment-copy">Thanks Jason, fixed.</span>
