<div class="post-text" itemprop="text">
<p>I'm trying to use a bitcoin address validator written in Python from <a href="http://rosettacode.org/wiki/Bitcoin/address_validation#Python" rel="nofollow">here</a>: </p>
<p>This snippet gives me trouble though:</p>
<pre><code>def decode_base58(bc, length):
    n = 0
    for char in bc:
        n = n * 58 + digits58.index(char)
    return n.to_bytes(length, 'big')
</code></pre>
<p>I understand that n is either an int or a long, but neither has a method called to_bytes, so I don't really understand how this code could have ever worked?</p>
<p>Does anybody know what's wrong here? Am I doing something wrong, or is this code simply written wrong? All tips are welcome!</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 2.7 <code>int</code> and <code>long</code> don't have the <code>.to_bytes</code> method. Python 3.2 <code>int</code> has the <code>.to_bytes</code> method.</p>
<p>A workaround for Python 2.x:</p>
<pre><code>&gt;&gt;&gt; length = 10
&gt;&gt;&gt; n = 123456789
&gt;&gt;&gt; ('%%0%dx' % (length &lt;&lt; 1) % n).decode('hex')[-length:]
'\x00\x00\x00\x00\x00\x00\x07[\xcd\x15'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since Python 3.2 the built-in integer types provide a <code>to_bytes</code> method.
<a href="https://docs.python.org/3/library/stdtypes.html#int.to_bytes" rel="nofollow">https://docs.python.org/3/library/stdtypes.html#int.to_bytes</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The code you linked contains :</p>
<pre><code>assert n.to_bytes(length, 'big') == bytes( (n &gt;&gt; i*8) &amp; 0xff for i in reversed(range(length)))
</code></pre>
<p>which means that you can define a <code>to_bytes</code> function:</p>
<pre><code>def to_bytes(n, length):
    return bytes( (n &gt;&gt; i*8) &amp; 0xff for i in reversed(range(length)))
</code></pre>
<p>And use it as such:</p>
<pre><code>def decode_base58(bc, length):
    n = 0
    for char in bc:
        n = n * 58 + digits58.index(char)
    return to_bytes(n, length)
</code></pre>
</div>
<span class="comment-copy">apparently to_bytes is a python3 method. it exists on int: <a href="https://docs.python.org/3.2/library/stdtypes.html#additional-methods-on-integer-types" rel="nofollow noreferrer">docs.python.org/3.2/library/â€¦</a></span>
<span class="comment-copy">(plus, the link you gave gives an alternative implementation for <code>to_bytes</code>)</span>
<span class="comment-copy">@njzk2 - Alright thanks! So would you know how I can solve this in Python 2.7?</span>
<span class="comment-copy">Alright, so do you know how I can make this work in Python 2.7?</span>
<span class="comment-copy">Yes, added a workaround to my answer.</span>
<span class="comment-copy">can you similarly explain for 'from_bytes'?</span>
<span class="comment-copy">@Abhiped: <code>int(data.encode('hex'), 16)</code></span>
<span class="comment-copy">Unfortunately that also only works in Python3..</span>
<span class="comment-copy">i just tested this on python 2.7. What part would you say does not work on python 2?</span>
<span class="comment-copy">This doesn't work in Python 2.7.13. <code>to_bytes()</code> returns something like <code>&lt;generator object &lt;genexpr&gt; at 0x021656E8&gt;</code>. Also note that in Python 2, <code>bytes</code> is just an alias for <code>&lt;type 'str'&gt;</code>, so in that version this would work: <code>return ''.join(chr((n &gt;&gt; i*8) &amp; 0xff) for i in reversed(range(length)))</code>.</span>
