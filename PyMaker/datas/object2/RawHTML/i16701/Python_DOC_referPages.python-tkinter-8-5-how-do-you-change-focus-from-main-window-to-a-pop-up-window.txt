<div class="post-text" itemprop="text">
<p>I'm new to tkinter and have a rather simple question. I would like to change focus from the first window, <code>root</code>,  to the <code>txt</code> window after it pops up. I would also like the "OK" button to be focused as well. Of course, the idea is for the user to just be able to hit enter when they see this error. I'm terribly confused after various attempts with focus(), focus_set(), and takefocus. I'm not finding the documentation for this particularly helpful. </p>
<p>Below is my code:</p>
<pre><code>from tkinter import *
from tkinter import ttk

def close(self):
    self.destroy()

def browse(*args):
    fileName = filedialog.askopenfilename()
    guiInputFile_entry.insert(0, fileName)
    return fileName

def formatInput(*args):
    if guiInputFile.get()[-4:] != ".txt": #checks for correct file extension (.txt)


    txt = Tk()
    txt.title("Error")         

    txtFrame = ttk.Frame(txt, padding="30 30 30 30")            
    txtFrame.grid(column=0, row=0, sticky=(N,W,E,S))
    txtFrame.columnconfigure(0, weight=1)
    txtFrame.rowconfigure(0, weight=1)

    ttk.Label(txtFrame, text = "Please enter a .txt file.\n").grid(column=2, row=1)
    okButton = ttk.Button(txtFrame, text = "OK", command = lambda: close(txt)).grid(column=2, row=2)
    return

    root = Tk()
    root.title("Cost Load Formatter")

    mainframe = ttk.Frame(root, padding="3 3 12 12")
    mainframe.grid(column=0, row=0, sticky=(N,W,E,S))
    mainframe.columnconfigure(0, weight=1)
    mainframe.rowconfigure(0, weight=1)

    guiInputFile = StringVar()

    guiInputFile_entry = ttk.Entry(mainframe, width=100, textvariable=guiInputFile)
    guiInputFile_entry.grid(column=1, row=2, stick=(W,E))

    ttk.Label(mainframe, text="Please enter the full filepath of the .txt file you wish to format:").grid(column=1, row=1)
    browseButton = ttk.Button(mainframe, text="Browse...", underline=0, command=browse).grid(column=2, row=2, sticky=W)
    formatButton = ttk.Button(mainframe, text="Format", underline=0, command= lambda: formatInput(guiInputFile)).grid(column=1, row=3)

    for child in mainframe.winfo_children(): child.grid_configure(padx=5, pady=5)

    guiInputFile_entry.focus()

    root.mainloop()
</code></pre>
<p>Thank you for any light you can shed.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're on the right track.</p>
<p>Firstly, you should only ever have one instance of <code>Tk</code> at a time.  <code>Tk</code> is the object that controls the <code>tkinter</code> application, it just so happens that it also shows a window.  Whenever you want a second window (third, fourth, etc.) you should use <code>Toplevel</code>.  You can use it as you have used <code>Tk</code>, just pass it <code>root</code>:</p>
<pre><code>txt = Toplevel(root)
</code></pre>
<p>It is just missing things like <code>mainloop</code>.</p>
<p>Secondly <code>grid</code> and <code>pack</code> do not return anything.  So for example:</p>
<pre><code>okButton = ttk.Button(txtFrame, text = "OK", command = lambda: close(txt)).grid(column=2, row=2)
</code></pre>
<p>Should be:</p>
<pre><code>okButton = ttk.Button(txtFrame, text = "OK", command = lambda: close(txt))
okButton.grid(column=2, row=2)
</code></pre>
<p>But you should have been getting an error if that was causing you problems.</p>
<p>So to answer your main question, as you do with the <code>Entry</code> at the bottom you just call <code>focus</code> on the appropriate widget.  <code>focus_set</code> does exactly the same, in fact if you look in <code>Tkinter.py</code> you will find <code>focus_set</code> is the name of the method, and <code>focus</code> is just an alias.</p>
<p>This will give the widget focus when the application has focus.  If the application is not in focus there are ways to force it into the focus, but it is considered impolite and you should let the window manager control that.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of making a seperate Tk Window, you could use the built in tkmessagebox.  This will give the window and OK button focus right out of the box.</p>
<p>Something like this:</p>
<pre><code>tkMessageBox.showinfo("Warning","Please enter a .txt file.")
</code></pre>
<p><a href="http://www.tutorialspoint.com/python/tk_messagebox.htm" rel="nofollow">http://www.tutorialspoint.com/python/tk_messagebox.htm</a></p>
<p>Also, note I wrote this in Python 2.7, the syntax may be slightly different for Python 3, but the functionality should be the same.</p>
</div>
<span class="comment-copy">Perfect explanation. Thank you!</span>
<span class="comment-copy">Thank you for your help. I think your link refers to an older version of tkinter, so I'm not sure if the syntax is the same in tkinter 8.5.</span>
<span class="comment-copy">@user3470705 It seems it has been <a href="https://docs.python.org/3/library/tkinter.html#tkinter-modules" rel="nofollow noreferrer">moved to</a> <code>tkinter.messagebox</code> in Python 3.  I am not certain, but I would imagine the actual message boxes would work the same.  They are very useful.</span>
