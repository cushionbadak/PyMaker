<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11847491/python-filtering-lists-by-indices">Python: filtering lists by indices</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I have two lists <code>a=[10,5,6,8]</code> and <code>b=[1,3]</code>.  How can I use the latter as a subscript of the former? I.e. I would like to extract the second and fourth element of <code>a</code>.</p>
<p>Put otherwise, <a href="http://www.mathworks.fr/company/newsletters/articles/matrix-indexing-in-matlab.html" rel="nofollow">in Matlab I would use</a></p>
<pre><code>v = [16 5 9 4 2 11 7 14];

v([1 5 6])      % Extract the first, fifth, and sixth elements
&gt;&gt;  ans =
        16   2   11
</code></pre>
<p>How can I do the same in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/operator.html#operator.itemgetter">operator.itemgetter</a> to do it:</p>
<pre><code>from operator import itemgetter

a=[10,5,6,8]
b=[1,3]
res = itemgetter(*b)(a)
# (5, 8)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a> like so:</p>
<pre><code>&gt;&gt;&gt; a = [10, 5, 6, 8]
&gt;&gt;&gt; b = [1, 3]
&gt;&gt;&gt; [a[x] for x in b]
[5, 8]
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://www.numpy.org/" rel="nofollow"><code>numpy</code></a> supports indexing with arrays, as well as a bunch of other array and matrix operations, in Matlab style. Consider using it for computationally intensive tasks:</p>
<pre><code>In [1]: import numpy as np

In [2]: a = np.array([10,5,6,8])

In [3]: b = np.array([1,3])

In [4]: a[b]
Out[4]: array([5, 8])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>l=[1 5 6]
v = [16 5 9 4 2 11 7 14];
[v[i] for i in l]
</code></pre>
<p>you can try like this </p>
<p>it can be explained like this</p>
<pre><code>for i in l:
    print v[i]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a=[10,5,6,8]
b=[1,3]

ex = [a[i] for i in b]
print(ex) # [5, 8] 
</code></pre>
</div>
<span class="comment-copy">If you're coming from Matlab, will you be using these lists for matlab-like array operations?</span>
<span class="comment-copy">To add a note, array index starts from 0 in python.</span>
<span class="comment-copy">Take a look at <a href="http://stackoverflow.com/questions/18272160/access-multiple-elements-of-list-knowing-their-index" title="access multiple elements of list knowing their index">stackoverflow.com/questions/18272160/â€¦</a></span>
<span class="comment-copy">@shahkalpesh I think they understand that, as the <code>[1,3]</code> corresponds with the explanation of <i>I would like to extract the second and fourth element</i></span>
<span class="comment-copy">@JonClements: My comment is based on the question where v[1, 5, 6] returns 16, 2, 11 in matlab. In python, it will return 5, 11, 7</span>
<span class="comment-copy">While the answer is helpful, numpy isnt part of standard module. So, it will be downloading something for the functionality OP asked.</span>
<span class="comment-copy">@shahkalpesh it's fine to assume that if coming from matlab, the OP will either want or already have installed numpy/scipy/pandas etc...</span>
<span class="comment-copy">@JonClements: I dont have that background to assume things. List comprehension is built in, so it is straight forward.</span>
