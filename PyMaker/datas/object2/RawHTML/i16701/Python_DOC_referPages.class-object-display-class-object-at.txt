<div class="post-text" itemprop="text">
<p>I'm wondering that when creating a class in python, for example, a class Car,
with the attributes being the make and year of the car, can return the name and the make,
without using anything except for</p>
<pre><code>&gt;&gt;&gt; c = Car('Toyota Camry', 2007)
&gt;&gt;&gt; c
</code></pre>
<p>instead of returning <code>&lt;car object at 0x0000000003394FD0&gt;</code></p>
<p>is there anyway to just return a tuple of </p>
<pre><code>('Toyota Camry', 2007)
</code></pre>
<p>without implementing a <code>__str__</code> method in the car class?</p>
</div>
<div class="post-text" itemprop="text">
<p>You'd implement a <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow"><code>__repr__</code> method</a>; it is that method that is used when representing an object:</p>
<pre><code>class Car:
    def __init__(self, make, year):
        self.make = make
        self.year = year

    def __repr__(self):
        return 'Car({!r}, {!r})'.format(self.make, self.year)
</code></pre>
<p>This produces a representation string that looks just like the original class invocation:</p>
<pre><code>&gt;&gt;&gt; class Car:
...     def __init__(self, make, year):
...         self.make = make
...         self.year = year
...     def __repr__(self):
...         return 'Car({!r}, {!r})'.format(self.make, self.year)
... 
&gt;&gt;&gt; Car('Toyota Camry', 2007)
Car('Toyota Camry', 2007)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/reference/datamodel.html#object.__repr__" rel="nofollow"><code>__repr__</code></a> instead of <code>__str__</code>.</p>
<p><code>__repr__</code> <strong>represents</strong> the objuect, while <code>__str__</code> is only called with a <code>print()</code>.</p>
<p>To do that, use the following:</p>
<pre><code>class Car:

    def __init__(self, model, year):
        self.model = model
        self.year = year

    def __repr__(self):
        return str((self.model, self.year))
</code></pre>
<p>This will run as:</p>
<pre><code>&gt;&gt;&gt; camry = Car('Toyota Camry', 2006)
&gt;&gt;&gt; camry
('Toyota Camry', 2006)
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">Yes, overload <code>__repr__</code>.</span>
<span class="comment-copy"><b>Why</b> donâ€™t you want to use the solution which is <i>designed</i> to solve your problem?!</span>
<span class="comment-copy">Vague test question made me paranoid and I couldn't find the solution :(</span>
<span class="comment-copy">Thanks! I understand now.</span>
