<div class="post-text" itemprop="text">
<p>I wanna scroll sys.argv from the second to the penultimate argument. why it doesn't work?</p>
<pre><code>for arg in sys.argv[1: :len(sys.argv)-1] :
    print arg  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a mistake in your code: you shouldn't put two colons, but just one. Here's how it works:</p>
<ul>
<li><p>In order to exclude <em>n</em> <strong>first</strong> elements, the syntax is <code>[n:]</code>.</p></li>
<li><p>In order to exclude <em>n</em> <strong>last</strong> elements, you don't need to count the number of elements in an array. Instead, you use: <code>[:-n]</code> syntax.</p></li>
<li><p>If you want to exclude first <em>x</em> elements <strong>and</strong> last <em>y</em> elements, you can combine both: <code>[x:y]</code>.</p></li>
</ul>
<p>In your case, to get the array without the first and the last arguments, you may simply do:</p>
<pre><code>sys.argv[1:-1]
</code></pre>
<p>Like this:</p>
<pre><code>for arg in sys.argv[1:-1]:
    print arg
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that you have too many colons, resulting in an <a href="https://docs.python.org/3/reference/datamodel.html#index-16" rel="nofollow noreferrer">extended slice</a>.</p>
<p>Because of the extra colon in <code>[1::len(sys.argv)-1]</code> (the space between the colons in your version is unnecessary, and may be what confused you), you're saying:</p>
<ul>
<li>Give me all the elements from index <code>1</code> ...</li>
<li>...to the end (because there's nothing between the first and second colons) ...</li>
<li>with a <em>stride</em> of <code>len(sys.argv)-1</code>.</li>
</ul>
<p>Obviously, if you start at the 2nd element of a sequence and then stride forward by <code>len(sequence) - 1</code>, you get to the end, and there's nothing left.</p>
<p>If you drop the extra colon, your code will work ... </p>
<pre><code>for arg in sys.argv[1:len(sys.argv)-1]:
    print arg  
</code></pre>
<p>... but Python allows you to use <a href="https://stackoverflow.com/a/493057/1014938">negative indexes</a> to count from the end of the sequence you're slicing, so you can replace the whole thing with:</p>
<pre><code>for arg in sys.argv[1:-1]:
    print arg  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>sys.argv</code> is a <code>list</code>, so you can apply <a href="http://www.pythoncentral.io/how-to-slice-listsarrays-and-tuples-in-python/" rel="nofollow">slicing</a> in order to get only a certain part of the list, for example if you only want to iterate from element two to the penultimate.
Generally, if <code>lst</code> is a list</p>
<pre><code>lst[0]
</code></pre>
<p>is the first element of the list, and</p>
<pre><code>lst[-1]
</code></pre>
<p>is the last.
Example:</p>
<pre><code>&gt;&gt;&gt; x = [1,2,3,4,5,6]
&gt;&gt;&gt; x[1:-1]
[2, 3, 4, 5]
</code></pre>
<p>With slicing, your <code>for</code> loop should look like</p>
<pre><code>for arg in sys.argv[1:-1]:
    print(arg)
</code></pre>
</div>
<span class="comment-copy">You put a <code>:</code> too much: <code>sys.argv[1:len(sys.argv)-1]</code>. Also, you can use negative indexes: <code>sys.argv[1:-1]</code>.</span>
<span class="comment-copy">@ZeroPiraeus: I thought it's clear enough, since I provided the correct syntax <b>and</b> explained how the syntax works. Since it appears that it's not, I edited my answer to include the actual mistake in OP's code.</span>
<span class="comment-copy">Thanks for that ... since OP wants to know "why it doesn't work?", I think it's important to tell them ... anyway, downvote replaced with upvote :-)</span>
<span class="comment-copy">I thought this explanation was an excellent example of slowly building up the syntax in steps and then (and only then) giving the actual code fix.</span>
<span class="comment-copy">This answer doesn't address the actual bug, which is the extra colon in the slice.</span>
