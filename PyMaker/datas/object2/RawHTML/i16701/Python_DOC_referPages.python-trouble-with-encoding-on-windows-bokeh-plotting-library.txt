<div class="post-text" itemprop="text">
<p>I am trying to reproduce the simplest examples from the <a href="http://bokeh.pydata.org/tutorial/basic.html" rel="nofollow">Bokeh tutorial</a>, on a 64-bit Windows machine with Python 3.3.0.</p>
<p>Here is the code in its entirety</p>
<pre><code>import pandas as pd
import numpy as np
import matplotlib.pyplot as mpl

# NOTE need this import as output_file was not getting imported into the 
#     global namespace
import bokeh.plotting as bkp
from bokeh.plotting import *

# Skip the first point because it can be troublesome
theta = np.linspace(0, 8*np.pi, 10000)[1:]

# Compute the radial coordinates for some different spirals
lituus = theta**(-1/2)          # lituus
golden = np.exp(0.306349*theta) # golden
arch   = theta                  # Archimedean
fermat = theta**(1/2)           # Fermat's

# Now compute the X and Y coordinates (polar mappers planned for Bokeh later)
golden_x = golden*np.cos(theta)
golden_y = golden*np.sin(theta)
lituus_x = lituus*np.cos(theta)
lituus_y = lituus*np.sin(theta)
arch_x   = arch*np.cos(theta)
arch_y   = arch*np.sin(theta)
fermat_x = fermat*np.cos(theta)
fermat_y = fermat*np.sin(theta)

# output to static HTML file
bkp.output_file("lines.html")

# Plot the Archimedean spiral using the `line` renderer. Note how we set the
# color, line thickness, title, and legend value.
line(arch_x, arch_y, color="red", line_width=2, title="Archimean", legend="Archimedean")
</code></pre>
<p>This gives me the following error:</p>
<pre><code>Traceback (most recent call last):
  File "F:\programming\python\python64\python33\lib\site-packages\IPython\core\interactiveshell.py", line 2732, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-1-00be3b4eba05&gt;", line 1, in &lt;module&gt;
    bkp.line(arch_x, arch_y, color="red", line_width=2, title="Archimean", legend="Archimedean")
  File "F:\programming\python\python64\python33\lib\site-packages\bokeh\plotting.py", line 318, in wrapper
    save()
  File "F:\programming\python\python64\python33\lib\site-packages\bokeh\plotting.py", line 284, in save
    f.write(html)
  File "F:\programming\python\python64\python33\lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
UnicodeEncodeError: 'charmap' codec can't encode characters in position 1831286-1831289: character maps to &lt;undefined&gt;
</code></pre>
<p>I understand that this has something to do with the encoding that Python is using to write to the output file, but don't know enough about setting the encoding of the output file or the encoding that is being used by Python to write out to fix this. Help appreciated.</p>
<h2>Edit:</h2>
<p>I tried to implement the advice given <a href="http://www.macfreek.nl/memory/Encoding_of_Python_stdout" rel="nofollow">here</a>, to always pass stdout output through a streamwriter:</p>
<pre><code>if sys.stdout.encoding != 'UTF-8':
    sys.stdout = codecs.getwriter('utf-8')(sys.stdout.buffer, 'strict')
if sys.stderr.encoding != 'UTF-8':
    sys.stderr = codecs.getwriter('utf-8')(sys.stderr.buffer, 'strict')
</code></pre>
<p>but some of the interface appears to have changed, and there is no <code>sys.stdout.encoding</code> variable.</p>
<pre><code>Traceback (most recent call last):
  File "F:\programming\python\python64\python33\lib\site-packages\IPython\core\interactiveshell.py", line 2732, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-1-e12310bc7a07&gt;", line 1, in &lt;module&gt;
    if sys.stdout.encoding != 'UTF-8':
  File "F:\programming\python\python64\python33\lib\codecs.py", line 387, in __getattr__
    return getattr(self.stream, name)
AttributeError: '_io.FileIO' object has no attribute 'encoding'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have opened an issue to track this problem: <a href="https://github.com/ContinuumIO/bokeh/issues/682" rel="nofollow">https://github.com/ContinuumIO/bokeh/issues/682</a></p>
<p>As you have discussed with eryksun, it seems easily fixable.</p>
<p>I will keep you updated here, but if you want to participate in the issue, you are very welcome.</p>
<p>Cheers</p>
</div>
<div class="post-text" itemprop="text">
<p>fg nu,</p>
<p>We can not replicate the issue in our win platforms... can you please join us in the opened issue: <a href="https://github.com/ContinuumIO/bokeh/issues/682" rel="nofollow">https://github.com/ContinuumIO/bokeh/issues/682</a> to get more information about your setup and architecture? </p>
<p>We will very grateful if you can give us more info to replicate the issue and get a quick fix.</p>
<p>Thanks.</p>
<p>Damian</p>
</div>
<span class="comment-copy">Your problem is unrelated to <code>sys.stdout</code>, but if you want to replace it in Python 3, use <code>sys.stdout = io.TextIOWrapper(sys.stdout.detach(), 'utf-8', 'strict')</code>.</span>
<span class="comment-copy"><a href="https://github.com/ContinuumIO/bokeh/blob/master/bokeh/plotting.py#L248" rel="nofollow noreferrer"><code>bokeh.plotting.save</code></a> doesn't set the encoding for the file. It uses the default from <a href="https://docs.python.org/3/library/locale.html#locale.getpreferredencoding" rel="nofollow noreferrer"><code>locale.getprefferedencoding</code></a>. I'm afraid to use this you'd need to either monkey patch <code>bokeh.plotting</code> or <code>locale</code> (<code>_bootlocale</code> in 3.4).</span>
<span class="comment-copy">@eryksun Hmm, I did a search for <code>getprefferedencoding</code> in the bokeh directory, and it does not seem to have been used. Can you point me to the lines of code where I can explicitly set the output enconding?</span>
<span class="comment-copy"><code>open(filename, "w")</code> implicitly uses <code>getprefferedencoding</code> if you don't provide an explicit <code>encoding</code> such as <code>open(filename, "w", encoding="utf-8")</code>.</span>
<span class="comment-copy">@eryksun So just add <code>encoding='utf-8'</code> option?</span>
<span class="comment-copy">As you have resolved this on github, I am marking this the accepted answer. Interesting dalliance with <code>wontfix</code> though.</span>
<span class="comment-copy">I tried this in Windows with <code>cp1252</code>, and it worked without error. For some reason fg nu's output has a character that can't be encoded in <code>cp1252</code>. But really, being limited to an 8-bit code page that has 250 characters is straight out of the last century. The output file needs an option to set the encoding and a cross-platform default of UTF-8.</span>
<span class="comment-copy">We are currently discussing this issue. An optional encoding could be problematic because the Bokeh content can not be encoded with all the encoding options available. But we are evaluating the possibility to default to UTF-8 as you mentioned.</span>
