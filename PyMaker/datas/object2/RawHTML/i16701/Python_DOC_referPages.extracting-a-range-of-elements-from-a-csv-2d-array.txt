<div class="post-text" itemprop="text">
<p>I want to extract elements from a range of elements is a specific column from a csv file.</p>
<p>I've simplified the problem to this:</p>
<pre><code>data = [['a',1,'A',100],['b',2,'B',200],['c',3,'C',300],['d',4,'D',400]]

print(data[0:2][:],'\nROWS 0&amp;1')
print(data[:][0:2],'\nCOLS 1&amp;1')
</code></pre>
<p>I thought that meant </p>
<ul>
<li>'show me all columns for just row 0 and 1'</li>
<li>'show me all the rows for just column 0 and 1'</li>
</ul>
<p>But the output is always just showing me rows 0 and 1, never the columns,</p>
<pre><code>[['a', 1, 'A', 100], ['b', 2, 'B', 200]] 
ROWS 0&amp;1
[['a', 1, 'A', 100], ['b', 2, 'B', 200]] 
COLS 1&amp;1
</code></pre>
<p>when I want to see this:</p>
<pre><code>['a', 1, 'A', 100,'b', 2, 'B', 200]  # ... i.e. ROWS 0 and 1
['a','b','c','d',1,2,3,4]
</code></pre>
<p>Is there a nice way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem here is that <code>data[:]</code> is just <a href="https://stackoverflow.com/a/509295/1014938">a copy of</a> <code>data</code>:</p>
<pre><code>&gt;&gt;&gt; data
[['a', 1, 'A', 100], ['b', 2, 'B', 200], ['c', 3, 'C', 300], ['d', 4, 'D', 400]]
&gt;&gt;&gt; data[:]
[['a', 1, 'A', 100], ['b', 2, 'B', 200], ['c', 3, 'C', 300], ['d', 4, 'D', 400]]
</code></pre>
<p>... so both your attempts at slicing are giving you the same result as <code>data[0:2]</code>.</p>
<p>You can get just columns 0 and 1 with a list comprehension:</p>
<pre><code>&gt;&gt;&gt; [x[0:2] for x in data] 
[['a', 1], ['b', 2], ['c', 3], ['d', 4]]
</code></pre>
<p>... which can be rearranged to the order you want with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a>:</p>
<pre><code>&gt;&gt;&gt; list(zip(*(x[0:2] for x in data)))
[('a', 'b', 'c', 'd'), (1, 2, 3, 4)]
</code></pre>
<p>To get a single list rather than a list of 2 tuples, use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain.from_iterable()</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import chain
&gt;&gt;&gt; list(chain.from_iterable(zip(*(x[0:2] for x in data))))
['a', 'b', 'c', 'd', 1, 2, 3, 4]
</code></pre>
<p>... which can also be used to collapse <code>data[0:2]</code>:</p>
<pre><code>&gt;&gt;&gt; list(chain.from_iterable(data[0:2]))
['a', 1, 'A', 100, 'b', 2, 'B', 200]
</code></pre>
</div>
<span class="comment-copy">Brilliant, really appreciate your full explanation. The one that I really wanted was              from itertools import chain &gt;&gt;&gt; list(chain.from_iterable(zip(*(x[0:2] for x in data)))) ['a', 'b', 'c', 'd', 1, 2, 3, 4]                Gonna hit some research on what itertools, chain and zip do.... and how to do CR in comments! Cheers!</span>
