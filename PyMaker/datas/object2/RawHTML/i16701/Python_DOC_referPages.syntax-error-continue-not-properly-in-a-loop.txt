<div class="post-text" itemprop="text">
<pre><code>elif command == 'join':
    if len(params) &lt; 1: continue
    safeexec(params[0], getattr(botimpl, 'onenter', None), (params[0], prefix))
</code></pre>
<p>it says </p>
<blockquote>
<p>Syntax error 'continue' not properly in a loop</p>
</blockquote>
<p>when I run the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot <code>continue</code> from an <code>if</code> statement. You need it to be in a loop.</p>
<pre><code>for x in range(10):
    if x == 4:
        continue
    # Do work
</code></pre>
<p>Whereas,</p>
<pre><code>if x == 4:
    continue
</code></pre>
<p>is wrong.</p>
<p><a href="https://docs.python.org/2/reference/simple_stmts.html#continue" rel="nofollow">Python Docs</a> state this:</p>
<blockquote>
<p>The continue statement, also borrowed from C, continues with the next iteration of the loop:</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>The <code>continue</code> keyword is used to <em>go directly</em> to the next iteration of a <em>loop</em>, skipping the code after the keyword. So, the error</p>
<pre><code>SyntaxError: 'continue' not properly in loop
</code></pre>
<p>indicates that the  <code>elif</code> clause is not inside a loop (like <code>for</code> or <code>while</code>).</p>
<p><strong>What can you do?</strong></p>
<ul>
<li><p>Check your logic. Do you really want to use <code>continue</code>?</p></li>
<li><p>Put the code inside a loop:</p>
<pre><code>while (...):
    if command == 'join':
        continue
</code></pre></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><code>continue</code> must be inside a while or for loop, check if your elif statement is within a for or while loop. if yes, check your indentation.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/simple_stmts.html#continue" rel="nofollow">The <code>continue</code> keyword</a> is reserved to skip the iteration of a loop and not a <code>if</code> condition block. What you want to do is more this:</p>
<pre><code>elif command == 'join' and len(params) &gt;= 1:
    safeexec(params[0], getattr(botimpl, 'onenter', None), (params[0], prefix))
</code></pre>
<p>From the documentation:</p>
<blockquote>
<p><code>continue</code> may only occur syntactically nested in a <code>for</code> or <code>while</code> loop, but not nested in a function or class definition or <code>finally</code> clause within that loop. It continues with the next cycle of the nearest enclosing loop.</p>
<p>When <code>continue</code> passes control out of a <code>try</code> statement with a <code>finally</code> clause, that <code>finally</code> clause is executed before really starting the next loop cycle.</p>
</blockquote>
</div>
<span class="comment-copy">Change the <code>elif</code> to: <code>elif command == 'join' and len(params) &gt;= 1: safeexec...</code></span>
<span class="comment-copy">You probably want to use <code>pass</code> - no <code>continue</code>.</span>
<span class="comment-copy">is the <code>if-elif</code> inside a loop ? please add more code to include the if-else context</span>
