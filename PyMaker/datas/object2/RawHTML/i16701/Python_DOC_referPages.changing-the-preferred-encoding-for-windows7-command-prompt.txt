<div class="post-text" itemprop="text">
<p>Using Python3.3</p>
<p>Running a python script to do some CAD file conversion, but getting below error</p>
<pre><code>Conversion Failed
Traceback (most recent call last):
File "Start.py", line 141, in convertLib
lib.writeLibrary(modFile,symFile)
File "C:\Python33\Eagle2Kicad/Library\Library.py", line 67, in writeLibrary
self.writeSymFile(symFile)
File "C:\Python33\Eagle2Kicad/Library\Library.py", line 88, in writeSymFile
devicepart.write(symFile)
File "C:\Python33\Eagle2Kicad/Common\Symbol.py", line 51, in write
symbol.write(symFile)
File "C:\Python33\Eagle2Kicad/Common\Symbol.py", line 114, in write
symFile.write(pin.symRep())
File "C:\Python33\Lib\encodings\cp1252.py", line 19, in encode
return codecs.charmap_encode(input,self.errors,encoding_table)[0]
UnicodeEncodeError: 'charmap' codec can't encode character '\x96' in position 4:     character maps to &lt;undefined&gt;
</code></pre>
<p>It seems the preferred encoding in my Windows7 command prompt is <strong>NOT</strong> cp1252 (typing chcp shows "Active code page 437"). How can I change it to cp1252?</p>
<p>Can anyone please suggest?</p>
<p><strong>EDIT:</strong></p>
<p>As the default preferred encoding of the python command line is cp1252, I tried running the script from python command line instead of the windows command prompt. But I am still getting the same error as above. Can anyone please suggest?</p>
</div>
<div class="post-text" itemprop="text">
<p>When writing to files, the console encoding is not taken into account; only the locale is. From the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open()</code> function documenation</a>:</p>
<blockquote>
<p>In text mode, if <em>encoding</em> is not specified the encoding used is platform dependent: <code>locale.getpreferredencoding(False)</code> is called to get the current locale encoding.</p>
</blockquote>
<p>On your system, evidently that call returns <code>'cp1252'</code>. The remedy is to always name the encoding for files <em>explicitly</em>; pass in an <code>encoding</code> argument to set the desired encoding for files:</p>
<pre><code>with open(filename, 'w', encoding='utf8') as symFile:
</code></pre>
</div>
<span class="comment-copy">You are <i>writing to a file</i>. The default encoding for files is <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>locale.getpreferredencoding(False)</code></a> and is <i>not</i> determined by your console settings; specify an explicit encoding when opening the file instead.</span>
<span class="comment-copy">Note that you normally would <i>show us the code</i> that triggered the exception; I have to make assumptions here that <code>symFile</code> in <code>symFile.write(pin.symRep())</code> is a file object opened with <code>open(filename, 'w')</code> or similar.</span>
<span class="comment-copy">You can use a cmd startup script that configures the console (<code>chcp</code>, <code>color</code>, <code>title</code>), sets environment variables, and loads doskey aliases. I use <code>"%APPDATA%\autorun.cmd"</code> and set a registry key to run this script when cmd starts: <code>reg add "HKCU\Software\Microsoft\Command Processor" /f /v AutoRun /t REG_EXPAND_SZ /d "\"^%APPDATA^%\autorun.cmd\""</code></span>
<span class="comment-copy">@MartijnPieters thanks. It worked after explicitly adding encoding type 		                                 <code>open(modFileName,'w', encoding='utf-8').close()</code> <code>open(symFileName,'w', encoding='utf-8').close()</code> <code>modFile=open(modFileName,"a", encoding='utf-8')</code> <code>symFile=open(symFileName,"a", encoding='utf-8')</code></span>
