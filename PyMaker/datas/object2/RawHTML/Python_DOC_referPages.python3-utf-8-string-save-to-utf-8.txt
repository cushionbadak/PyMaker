<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18337407/saving-utf-8-texts-in-json-dumps-as-utf8-not-as-u-escape-sequence">Saving utf-8 texts in json.dumps as UTF8, not as \u escape sequence</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I don't know the title that suits my situation.</p>
<pre><code>data=[]

for title in titles:
     real_title = ''.join(str(title.text).split())
     print(real_title)
     data.append(real_title)

with open(os.path.join(BASE_DIR, 'result.json'), 'w+') as json_file:
    json.dump(data, json_file)
</code></pre>
<p>when python ~~.py, result is very well.  print(real_title) show </p>
<pre><code>이스케이프룸
</code></pre>
<p>but when I open json_file:</p>
<pre><code>"\uc774\uc2a4\ucf00\uc774\ud504\ub8f8"
</code></pre>
<p>What's the problem? Why utf-8 letter is  literally saved to utf-8?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you are seeing are the Unicode escape codes; for example, <code>"\uc774"</code> is the character <code>이</code> with Unicode code point C774 16-bit hex.  This escape will occur by default for any character not in the ASCII range, 0 thru 127 decimal.</p>
<p>You can set the <code>ensure_ascii</code> parameter to <code>False</code>:</p>
<blockquote>
<p>If <code>ensure_ascii</code> is true (the default), the output is guaranteed to
  have all incoming non-ASCII characters escaped. If <code>ensure_ascii</code> is
  false, these characters will be output as-is.</p>
</blockquote>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt; data = {"key": "이스케이프룸"}
&gt;&gt;&gt; json.dumps(data)
'{"key": "\\uc774\\uc2a4\\ucf00\\uc774\\ud504\\ub8f8"}'
&gt;&gt;&gt; json.dumps(data, ensure_ascii=False)
'{"key": "이스케이프룸"}'
</code></pre>
</div>
<span class="comment-copy">Wow you are genius... Thank you.  <code>json.dump(data, json_file, ensure_ascii=False)</code> solve my problem!</span>
<span class="comment-copy">Glad to help @이종성.  Just keep in mind that it is, as far as I have seen, standard practice to escape non-ascii character in JSON files.</span>
