<div class="post-text" itemprop="text">
<p>I want to send an api request in this form:</p>
<pre><code>         "line_items": [
        {

            "account_id": "1717893000000067010",
            "debit_or_credit": "debit",
            "amount": 400,
            "tags": [
                {
                    "tag_option_id": "1717893000000115007",
                    "tag_id": "1717893000000000333"
                },
                {
                    "tag_option_id": "1717893000000123007",
                    "tag_id": "1717893000000000335"
                },
                {
                    "tag_option_id": "1717893000000126003",
                    "tag_id": "1717893000000000337"
                }
            ]
</code></pre>
<p>The above JSON may have hundreds of (line_items) and each (tags) in it may have different number of dictionaries.</p>
<p>what I did in python is:</p>
<pre><code>          accounts = []
          tags = []
          for line in payroll.line_ids:

            ######## code missing some correction for tags

            if len(line.x_zoho_jtag) == 0:
               the_tags = {"tag_id": " ", "tag_option_id": " "}
               tags.append(the_tags)


            for tag in line.x_zoho_jtag:
                for option in line.x_zoho_jtag_option:
                    if option.tag_ids == tag.tag_id:
                      the_tags = {"tag_id": tag.tag_id, "tag_option_id": option.option_tag_id}
                      tags.append(the_tags)

              ########

            if line.debit != 0.0:
               credit = {"amount": line.debit,"account_id": line.x_zoho_account_no,"debit_or_credit": "debit", "tags": tags}
               accounts.append(credit)
               print(credit)
            else:
                debit = {"amount": line.credit, "account_id": line.x_zoho_account_no,"debit_or_credit": "credit", "tags": tags}
                accounts.append(debit)
                print(debit)
          print(accounts)
</code></pre>
<p>As you can see in the above python code, I have 2 list (accounts and tags). I store (account_id, debit_or_credit, amount) in (accounts) list and it works fine.   </p>
<pre><code>  if line.debit != 0.0:
           credit = {"amount": line.debit,"account_id": line.x_zoho_account_no,"debit_or_credit": "debit", "tags": tags}
           accounts.append(credit)
           print(credit)
        else:
            debit = {"amount": line.credit, "account_id": line.x_zoho_account_no,"debit_or_credit": "credit", "tags": tags}
            accounts.append(debit)
            print(debit)
</code></pre>
<p>Along with that I have added (tags) key and (tags) list as you can see in the above line. </p>
<p>The problem that I am facing is in the (tags) key where I need to pass multiple block of dictionaries inside a list. So How to do that? </p>
<p>expected output:</p>
<pre><code>  "line_items": [       
          {
"account_id": "1717893000000067010",
"debit_or_credit": "debit",
"amount": 400,
"tags": [
  {
    "tag_option_id": " ",
    "tag_id": " "
  },
  {
    "tag_option_id": "1717893000000126003",
    "tag_id": "1717893000000000337"
  },
  {
    "tag_option_id": "1717893000000123007",
    "tag_id": "1717893000000000335"
  }


   "line_items": [
       {
"account_id": "1717893000000067036",
"debit_or_credit": "credit",
 "amount": 400,
"tags": [
  {
    "tag_option_id": "1717893000000126003",
    "tag_id": "1717893000000000337"
  }
</code></pre>
<p>wrong output:</p>
<pre><code>            {
"account_id": "1717893000000067010",
"debit_or_credit": "debit",
"amount": 400,
"tags": [
  {
    "tag_option_id": " ",
    "tag_id": " "
  },
  {
    "tag_option_id": "1717893000000126003",
    "tag_id": "1717893000000000337"
  },
  {
    "tag_option_id": "1717893000000123007",
    "tag_id": "1717893000000000335"
  }


      {
"account_id": "1717893000000067036",
"debit_or_credit": "credit",
 "amount": 400,
"tags": [
  {
    "tag_option_id": " ",
    "tag_id": " "
  },
  {
    "tag_option_id": "1717893000000126003",
    "tag_id": "1717893000000000337"
  },
  {
    "tag_option_id": "1717893000000123007",
    "tag_id": "1717893000000000335"
  }
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue here is that when you are looping through the tags you are not differentiating between the ones that should go on the <code>credit</code> and the ones that should go on the <code>debit</code>.<br/>
What you need to do is get the line first and then get the associated tags for that line.<br/>
Below should work, I think, but has a bit of repetition so could be improved further.   </p>
<pre class="lang-py prettyprint-override"><code>    accounts = []
    for line in payroll.line_ids:
        if line.debit != 0.0:
            credit = {
                "amount": line.debit,
                "account_id": line.x_zoho_account_no,
                "debit_or_credit": "debit", 
                "tags": []
            }
            if len(line.x_zoho_jtag) == 0:
                credit["tags"].append({"tag_id": " ", "tag_option_id": " "})
            else:
                for tag in line.x_zoho_jtag:
                    for option in line.x_zoho_jtag_option:
                        if option.tag_ids == tag.tag_id:
                          credit["tags"].append({"tag_id": tag.tag_id, 
                                                 "tag_option_id": option.option_tag_id})
            accounts.append(credit)
            print(credit)
        else:
            debit = {
                "amount": line.credit, 
                "account_id": line.x_zoho_account_no,
                "debit_or_credit": "credit", 
                "tags": []
            }
            if len(line.x_zoho_jtag) == 0:
                debit["tags"].append({"tag_id": " ", "tag_option_id": " "})
            else:
                for tag in line.x_zoho_jtag:
                    for option in line.x_zoho_jtag_option:
                        if option.tag_ids == tag.tag_id:
                          debit["tags"].append({"tag_id": tag.tag_id, 
                                                "tag_option_id": option.option_tag_id})

            accounts.append(debit)
            print(debit)
</code></pre>
<h3>Refactored Further</h3>
<p>Moving repetitive code block into a function</p>
<pre class="lang-py prettyprint-override"><code>accounts = []
for line in payroll.line_ids:
    if line.debit != 0.0:
        credit = create_account("credit", line)
        accounts.append(credit)
        print(credit)
    else:
        debit = create_account("debit", line)
        accounts.append(debit)
        print(debit)


def create_account(account_type, line):
    if account_type == "credit":
        amount = line.debit
        d_or_c = "debit"
    else: 
        amount = line.credit
        d_or_c = "credit"

    account = {
        "amount": amount,
        "account_id": line.x_zoho_account_no,
        "debit_or_credit": d_or_c, 
        "tags": []
    }
    if len(line.x_zoho_jtag) == 0:
        account["tags"].append({"tag_id": " ", "tag_option_id": " "})
    else:
        for tag in line.x_zoho_jtag:
            for option in line.x_zoho_jtag_option:
                if option.tag_ids == tag.tag_id:
                  account["tags"].append({"tag_id": tag.tag_id, 
                                         "tag_option_id": option.option_tag_id})
    return account
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I guess I see you... soo... move the tags = [] inside the top level for loop. </p>
</div>
<span class="comment-copy">Can you clarify what your problem is?</span>
<span class="comment-copy">The tags info  repeated for each tags in line_items where each one should be different</span>
<span class="comment-copy">Thank you so much , It works fine now .. appreciated</span>
<span class="comment-copy">No problem. Glad its working</span>
<span class="comment-copy">I dont think this answers the question asked, and it certainly doesnt make it easier to access either key or value.</span>
<span class="comment-copy">sorry, my colleagues are shouting around me and I just went through the post quickly...</span>
<span class="comment-copy">but I don't get it what is the problem, it seems to be fine.  you create a 'tags' list what stores a dictionary in each item.  and this 'tags' list will be the value of the 'tags' key, right? this is not working?</span>
<span class="comment-copy">I dont know. @Alqebaiti can you clarify the problem?</span>
<span class="comment-copy">and what do you want? can you paste the current output and the one what you want to achieve?</span>
