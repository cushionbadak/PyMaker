<div class="post-text" itemprop="text">
<p>How can I subscribe to an event using <code>ALMemory</code>'s <code>subscribeToEvent</code> function, which requires the correct Python scope while using ROS (rospy) that initiates modules outside my code?</p>
<p>This question is similar to <a href="https://stackoverflow.com/questions/44160518/how-to-subcribe-an-event-of-alspeechrecognition-naoqi-in-python">this Naoqi subscription question</a>, but differs in the sense that rospy was not used, which is critical to the implementation.</p>
<p>My current code is as such;<br/>
<em>mainBehaviour.py</em></p>
<pre><code>from nao.nao import Nao


class mainBehaviour(AbstractBehaviour):
    def init(self):
        global mainBehaviourMethod
        mainBehaviourMethod = self
        self.nao.setCallOnFall("mainBehaviourMethod", "robotHasFallen")

    def update(self):
        print("Update")

    def robotHasFallen(self, eventName, val, subscriberIdentifier):
        print("FALLING")
</code></pre>
<p><em>nao.py</em></p>
<pre><code>from naoqi import ALProxy, ALModule, ALBroker
import rospy
from math import radians
import weakref
class Nao(object):

    def __init__(self):
        self.nao_ip = rospy.get_param("nao_ip")
        self.port = 9559
        self.memory_proxy = ALProxy("ALMemory", self.nao_ip, self.port)

    def setCallOnFall(self, module, method):
        self.memory_proxy.subscribeToEvent("robotHasFallen", module, method)
</code></pre>
<p>What I want is that mainBehaviour.py, using nao.py, has its function  <code>robotHasFallen</code> fire when the robot has fallen. However, the current code does not produce this behaviour (it ignores any fall), but does not produce an error either. I attempted to implement this using <a href="http://doc.aldebaran.com/2-1/naoqi/core/almemory-tuto.html#almemory-tuto" rel="nofollow noreferrer">this ALMemory tutorial</a>. However, this tutorial makes use of a single python file, in which methods aren't instantiated by ROS. Therefore I cannot make use of the line <code>pythonModule = myModule("pythonModule")</code>. I attempted to still obtain this Python scope (on which the answer to the previously linked question states "the python variable must have the same name than the module name you create"), by declaring a global variable pointing to <code>self</code>.</p>
<p>How can I create the desired behaviour, detecting a fallen robot using <code>subscribeToEvent</code>, using ROS with its consequences of not initiating modules myself and therefore not being able to pass its constructor?<br/>
I cannot install any further libraries because I use a university computer.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your example code uses the "naoqi" library, but it's now more convenient to use the "qi" library (you can get it with "pip install qi", it's already present on your robot in versions 2.1 or above). In that version you can directly pass a callback, see <a href="https://github.com/pepperhacking/studiotoolkit/blob/master/python/stk/events.py" rel="nofollow noreferrer">here</a> for a helper library that allows you to do <code>events.connect("MyALMemoryKey", my_callback)</code> (you pass the function and not just it's name - and it doesn't care where the function comes from).</p>
<p>Under the hood, it does this:</p>
<pre><code>ALMemory.subscriber("MyALMemoryKey").signal.connect(my_callback)
</code></pre>
<p>(note that here ALMemory is a <em>Service</em> (qi framework) and not a <em>module</em> (naoqi framework).</p>
<p>You can directly use that helper lib (see the doc <a href="https://github.com/pepperhacking/studiotoolkit/blob/master/doc/stk_events.md" rel="nofollow noreferrer">here</a>, and some samples using it <a href="https://github.com/aldebaran/robot-jumpstarter" rel="nofollow noreferrer">here</a>), or use the same logic in your code (it's not very complicated, once you have a working example to start from).</p>
</div>
<span class="comment-copy">hello, could you try with a initial declaration at the beginning of your mainBehavior.py of a variable: "mainBehaviourMethod  = None" (because just saying global later should not be enough to really create the variable with global scope)</span>
<span class="comment-copy">Thanks! Unfortunately we're using university computers and cannot install any other libraries. With "use the same logic in your code" you mean to also use the connect() function? How do I obtain the subscriber then (using naoQi)?</span>
<span class="comment-copy">You can't even install other libraries with pip install --user ? That doesn't require any superuser rights; you can also just download the Python SDK on here: <a href="https://community.ald.softbankrobotics.com/en/resources/software/language/en-gb" rel="nofollow noreferrer">community.ald.softbankrobotics.com/en/resources/software/â€¦</a> (you may get "not allowed" if you didn't register a (free) account)</span>
