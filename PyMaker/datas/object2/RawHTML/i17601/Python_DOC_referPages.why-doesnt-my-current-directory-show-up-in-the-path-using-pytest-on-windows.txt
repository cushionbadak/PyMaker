<div class="post-text" itemprop="text">
<p>I have the following folder structure;</p>
<pre><code>myapp\
  myapp\
     __init__.py
  tests\
     test_ecprime.py
</code></pre>
<p>and my pwd is</p>
<pre><code>C:\Users\wwerner\programming\myapp\
</code></pre>
<p>I have the following test setup:</p>
<pre><code>import pytest
import sys
import pprint

def test_cool():
    pprint.pprint(sys.path)
    assert False
</code></pre>
<p>That produces the following paths:   </p>
<pre><code>['C:\\Users\\wwerner\\programming\\myapp\\tests',
 'C:\\Users\\wwerner\\programming\\envs\\myapp\\Scripts',
 'C:\\Windows\\system32\\python34.zip',
 'C:\\Python34\\DLLs',
 'C:\\Python34\\lib',
 'C:\\Python34',
 'C:\\Users\\wwerner\\programming\\envs\\myapp',
 'C:\\Users\\wwerner\\programming\\envs\\myapp\\lib\\site-packages']
</code></pre>
<p>And when I try to <code>import myapp</code> I get the following error:</p>
<pre><code>ImportError: No module named 'ecprime'
</code></pre>
<p>So it looks like it's not adding the current directory to my path.</p>
<p>By changing my import line to look like this:</p>
<pre><code>import sys
sys.path.insert(0, '.')
import myapp
</code></pre>
<p>I am then able to import <code>myapp</code> with no problems.</p>
<p>Why does my current directory not show up in the path when running pytest? Is my only workaround to insert <code>.</code> into the <code>sys.path</code>? (I'm using Python 3.4 if it matters)</p>
</div>
<div class="post-text" itemprop="text">
<p>Ahah!</p>
<p>After comparing the layout of my <a href="https://github.com/waynew/cookiecutter-pypackage/tree/master/%7B%7Bcookiecutter.repo_name%7D%7D/tests" rel="nofollow noreferrer">cookiecutter repo</a>, it turns out to be way more simple (and better) than that.</p>
<pre><code>tests/
    __init__.py
    test_myapp.py
</code></pre>
<p>A simple addition of the <code>__init__.py</code> file to my test dir allows me to run <code>py.test</code> from my main directory.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the environment variable <a href="http://docs.python.org/3/using/cmdline.html?highlight=pythonpath#envvar-PYTHONPATH" rel="nofollow"><code>PYTHONPATH</code></a>.</p>
<p>In Windows:</p>
<pre><code>set PYTHONPATH=.
py.test
</code></pre>
<p>In Unix:</p>
<pre><code>PYTHONPATH=. py.test
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>sys.path automatically has the script's directory in it, and not the current working directory.</p>
<p>I am guessing that your script in placed in <code>tests</code> directory. Based on this assumption, your code should look like this:</p>
<pre><code>import sys
import os

ROOT_DIR = os.path.dirname(os.path.dirname(__file__))
sys.path.append(ROOT_DIR)

import myapp # Should work now
</code></pre>
</div>
<span class="comment-copy">Have you tried importing <code>myapp</code> before importing <code>pytest</code> (to make sure pytest is the problem here)? Try <code>import myapp</code> as the very first line in the script.</span>
<span class="comment-copy">@SunnyNanda tried that, too. Still doesn't work.</span>
<span class="comment-copy">Doing this was explicitly discouraged in the "good practices" section of the pytest docs. It only makes your package importable by accident. If you do it like this, you're somewhat obliged to use a src-based project layout. See <a href="https://github.com/pytest-dev/pytest/pull/2297/" rel="nofollow noreferrer">github.com/pytest-dev/pytest/pull/2297</a> for all the details about why.</span>
<span class="comment-copy">One of these days I should go back and figure out why in the world I needed to do that :) I suspect there's a much better way to do what I needed to do (like probably install my package in a virtualenv with <code>python -m pip install -e .</code> or something)</span>
<span class="comment-copy">Yes, installing the package is the usual/recommended way. If you don't want to install it (eg you don't have any installer), then using python -m pytest instead of just pytest is the documented way to get the cwd present in sys.path. Should I add an answer? Nobody here mentioned it yet..</span>
<span class="comment-copy">This shouldn't be necessary because by default the current directory should be inserted in sys.path. Refer <a href="http://docs.python.org/3/library/sys.html#sys.path" rel="nofollow noreferrer">docs.python.org/3/library/sys.html#sys.path</a></span>
<span class="comment-copy">@SunnyNanda, It is not the current working directory that is inserted, but <b>the directory containing the script</b>.</span>
<span class="comment-copy">Thanks for the correction. I was earlier assuming the script to be present in the main directory itself. I added an answer with the assumption that the called script is placed in a child directory.</span>
