<div class="post-text" itemprop="text">
<p>I'm trying to make a python script that will upload a file to a folder. Everything is working fine except I tried saving a file with a name in Japanese text, and it was cut off. It comes out like somefile__.zip, the underscores being where the Japanese text was. At the top of the file I set coding: utf-8 but this doesn't have any effect. Is it an issue with the secure filename function or am I missing something? My file manager can display files with Japanese characters in the name just fine, so it isn't an issue with that. </p>
<pre><code>def upload_file():
if request.method == 'POST': 
    file = request.files['file']
    if file and allowed_file(file.filename):
        filename = secure_filename(file.filename)
        if is_image(file.filename):
            filename = shortuuid.uuid()[:7] + "." + file.filename.rsplit(".", 1)[1]
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
        else:
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I can't be sure this is right without more info and I would make this a comment but I don't have enough rep yet.</p>
<p>I think you're problem is the <code>secure_filename</code> function. I realised this a Django question really. I searched for the secure_filename and found that is from Werkzeug. In the <a href="http://werkzeug.pocoo.org/docs/utils/" rel="nofollow">documentation</a> it says that the <code>secure_filename</code> function returns a ASCII only string. This is probably your problem.</p>
<p>If you remove that function then you can check if it works.</p>
<p>If you really need to make the filename secure you might have to write your own code to do it or find some other library to use.</p>
<p>It also may be that the function is returning an empty filename and so you could use it but it is your responsibility to check that and deal with it.</p>
</div>
<span class="comment-copy">What platform are you on? If it's Windows, what's your OEM code page? If it's Unix, what's your default locale? (If it's OS X, just say that and we already know the answer.)</span>
<span class="comment-copy">Adding <code>coding: utf-8</code> just affects the encoding used for string literals in your code, like <code>"."</code> and <code>'file'</code>, which is obviously not  at all relevant to your problem. Please read the <a href="http://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">Unicode HOWTO</a> and make sure you understand the issues (if you still don't, see the links at the bottom, and the famous <a href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow noreferrer">Spotsky blog</a>); just randomly changing things like this is not going to help you.</span>
<span class="comment-copy">Also, where did that <code>secure_filename</code> function come from? If it's in your code, show us the code; if it's from some library, tell us which one.</span>
<span class="comment-copy">More importantly, where does <code>request</code> come from? What type is it?</span>
<span class="comment-copy">@abarnert secure_filename is from werkzeug utils <a href="http://werkzeug.pocoo.org/docs/utils/" rel="nofollow noreferrer">werkzeug.pocoo.org/docs/utils</a>. As someone already said it looks like it returns an ASCII only string. Damn. I searched for a unicode version of this utility, but nothing came up. How would I even go about writing my own version of it? From the examples provided on the site, it looks like it removes slashes from filenames and replaces spaces with underscores - would just writing a function that does this and spits back out a unicode string be sufficient?</span>
