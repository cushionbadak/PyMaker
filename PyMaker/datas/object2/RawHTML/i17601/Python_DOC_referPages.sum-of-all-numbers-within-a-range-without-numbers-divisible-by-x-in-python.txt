<div class="post-text" itemprop="text">
<p>I am trying to make a code (in python) where I can input a range and it will find the sum off all the numbers besides the ones that are divisible by x (which i also choose).</p>
<p>For example:</p>
<p>if the range is <code>0&lt;N&lt;10</code> and <code>x = 3</code> then I want the code to sum the numbers
1 + 2 + 4 + 5 + 7 + 8 
and output 27.</p>
<p>or if the range is <code>0&lt;N&lt;5</code> and <code>x = 2</code> I want the code to sum the numbers 
1 + 3
and output 4</p>
<p>But, the problem is I have no idea how to do it. Can anyone help me?</p>
</div>
<div class="post-text" itemprop="text">
<p>For your second example: (<code>0&lt;N&lt;5</code>, <code>x=2</code>):</p>
<pre><code>sum(i for i in range(1, 5) if i%2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def fn(N, x):
    sum = 0
    for i in range(N):
        if i%x:
            sum += i
    return sum
</code></pre>
<p>Read up on <a href="http://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow">loops</a> and <a href="http://docs.python.org/3/tutorial/controlflow.html#the-range-function" rel="nofollow">ranges</a> in python if you are new.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do something like this:</p>
<pre><code>&gt;&gt;&gt; div = 3
&gt;&gt;&gt; n = 10 
&gt;&gt;&gt; num_div = filter(lambda x: x%div, range(n))
&gt;&gt;&gt; sum(num_div)
27
</code></pre>
<p>or as a function</p>
<pre><code>def func(n,div):
   return sum(filter(lambda x: x%div, range(n))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The other answers implicitly assume the range will always start from 0. If you want to be able to set both the start and end points of your range, you could use:</p>
<pre><code>def sumrange(start, stop, n):
    return sum(i for i in range(start, stop) if i%n)
</code></pre>
</div>
<span class="comment-copy">Well, start with <i>something</i>. Do you know how to create a range of numbers? How about filtering out multiples of a certain number? Summing is trivial.</span>
<span class="comment-copy">Which part are you stuck on?</span>
<span class="comment-copy">How would you, as a human, perform this task? Can you translate that into step-by-step instructions?</span>
<span class="comment-copy">Even though it's a valid question to ask on SO, I suggest you read up basics on the particular programming language first. SO is not the place to comprehensively learn a language, though people will be ready to help you out with that as well. IMHO, you will be better off spending time on the docs than framing a question that adheres to the rules here. Not to mention the unnecessary downvotes!</span>
<span class="comment-copy">Why not a genexpr instead of a list?</span>
<span class="comment-copy">You don't even need the <code>[]</code> brackets in newer versions of Python.</span>
<span class="comment-copy">@abarnert: because I didnt know about them before ;)</span>
<span class="comment-copy">Tempted to downvote because of <code>is not 0</code>. At the very least, that should be <code>!= 0</code> - and since any number except <code>0</code> is "truthy", it can be dropped altogether: <code>if i%x:</code>...</span>
<span class="comment-copy">@gravetii <code>is</code> is checking for object ids and not equality</span>
<span class="comment-copy"><code>is</code> is used to compare for identity, not equality. Now there is a small set of numbers where the two behave the same, but this is an implementation-dependent detail and can't be relied upon.</span>
<span class="comment-copy">@Lo√ØcFaure-Lacroix: That's why I said separate lines.</span>
<span class="comment-copy">Oh I see it now.</span>
<span class="comment-copy">You really shouldn't be naming your function <code>sum</code>. In most cases, that's just an accident waiting to happen, in your case, it's actually happening.</span>
<span class="comment-copy">@TimPietzcker: Nice phrasing.</span>
<span class="comment-copy">@TimPietzcker Yeah it was just too tempting</span>
