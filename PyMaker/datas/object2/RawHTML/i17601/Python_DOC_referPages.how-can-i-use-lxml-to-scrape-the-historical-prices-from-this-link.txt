<div class="post-text" itemprop="text">
<p>How can I use Python lxml etree to scrape the historical prices of funds from this link:</p>
<p><a href="http://www.aia.com.hk/en/individual/resources-guides/investment-information/underlying-funds-historical-prices/" rel="nofollow">http://www.aia.com.hk/en/individual/resources-guides/investment-information/underlying-funds-historical-prices/</a></p>
<p>The link of each individual fund page is similar to the following; however, I don't know how to get there:</p>
<pre><code>&lt;a style="color:#AA231B;" href="javascript:void(0);" onclick="window.location='fund_search_content_new.jsp?fund=c04&amp;amp;tier=sp_br&amp;todate=&amp;date=&amp;name='"&gt;Aberdeen Global - Asia Pacific Equity Fund "A2"&lt;/a&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First you need to obtain the url of the iframe containing the links:</p>
<pre><code>iframeurl = yourpage.xpath("//iframe[@id='myframe']/@src")
</code></pre>
<p>Then download/parse this frame with lxml, and get your links from here:</p>
<pre><code>onclicks = lxml.html.parse(iframeurl[0]).xpath("//tr/td/a/@onclick")    
</code></pre>
<p>If you want what's inside <code>window.location=''</code>, I guess you could finish the job with substring/regex...</p>
<pre><code>map(lambda _: _.split("'", 2)[1], mylistofonclicks)
</code></pre>
<p>And if you wonder how I got these XPaths, on Chrome you can ctrl+shift+i -&gt; rightclick on a node -&gt; copy XPath, and test them with <code>$x("/my/path")</code> on the console. I also had to disable JavaScript (ctrl+shift+i -&gt; settings icon -&gt; General -&gt; Disable JavaScript) to block the automatic redirection triggered when loading the iframe.</p>
</div>
<span class="comment-copy">I see no XML at this link.</span>
<span class="comment-copy">Have you tried extracting the URL inside the <code>window.location='…'</code>? If you don't know how to do it in code, first try doing it manually to make sure it works (you will have to un-XML-escape the <code>&amp;amp;</code> of course). Then write the parts you <i>do</i> know how to do (can you find the right <code>a</code> nodes? could you get the <code>onclick</code> attribute if you had an <code>a</code> node? could you parse the URL out of that string if you had the <code>onclick</code>?) and ask for help with the parts you're stuck on.</span>
<span class="comment-copy">@abarnert I even cannot parse the URL out manually based on the onclick attribute.</span>
<span class="comment-copy">@TerenceNg: Then you need to learn basic string processing (slicing, splitting, searching, etc.) before you'll be able to write this code, and you definitely should learn that before trying to learn XPath or other more complicated things. Read <a href="http://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">the tutorial</a>, then try to build something simpler first, and work your way up to this.</span>
<span class="comment-copy">Nice explanation on how to figure out XPath queries easily without either parsing the whole thing in your head, or just randomly hacking on an example you don't understand. That seems to be the biggest stumbling block for most novices. If I could give that paragraph an extra +1 on top of the +1 for the whole answer…</span>
<span class="comment-copy">One quick comment: it might be simpler and more robust to parse out the window.location with <code>_.split("'", 2)[1]</code>.</span>
<span class="comment-copy">@OlivierBlanvillain I have tried to test the xpath $x('//tbody/tr/td[1]/a') using Chrome but the result is []. Anything after $x('//iframe') is [].  Therefore, I can't parse the value of onclicks.</span>
<span class="comment-copy">Have you understood/tried the code I wrote? You need to first download the page returned by <code>//iframe[@id='myframe']/@src</code>. Tt's only on this page that you will be able to see the table.</span>
<span class="comment-copy">@OlivierBlanvillain It should be: onclicks = lxml.html.parse(iframeurl[0]).xpath("//tr/td/a/@onclick")</span>
