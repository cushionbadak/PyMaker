<div class="post-text" itemprop="text">
<pre><code>def test():
    a = [1,2,3]
    def test2():
        a += [4,5]
    test2()
    print a
test()
</code></pre>
<p>In my thoughts, <code>a += [4,5]</code> would be equivalent to <code>a.extend</code> cus it is in-place <a href="https://stackoverflow.com/questions/3653298/concatenating-two-lists-difference-between-and-extend">Concatenating two lists - difference between '+=' and extend()</a></p>
<p>However, use <code>+=</code> triggers an error, but <code>extend</code> works fine.</p>
<p>Am I wrong?</p>
<h3>Update</h3>
<p>I believe I found the reason.</p>
<p><code>operator.iadd(a, [4,5])</code> works fine.</p>
<p>So I believe internally <code>a+=[4,5]</code> is interpreted as <code>a = operator.iadd(a, [4,5])</code>, and here comes the assignment.</p>
</div>
<div class="post-text" itemprop="text">
<p>The presence of an assignment to <code>a</code> (such as <code>a += [4,5]</code>) in <code>test2</code> causes Python to create an <code>a</code> variable local to <code>test2</code>, which is never initialized. In Python 3, you would be able to declare <code>nonlocal a</code> in <code>test2</code> to get around this. In Python 2, you have to use <code>extend</code> or workarounds where you put <code>a</code> in a 1-element list and use</p>
<pre><code>a[0] += [4, 5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="http://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value" rel="nofollow">Why am I getting an UnboundLocalError when the variable has a value?</a>:</p>
<blockquote>
<p>This is because when you make an <strong>assignment</strong> to a variable in a scope,
  that variable becomes local to that scope and shadows any similarly
  named variable in the outer scope. Since the last statement in foo
  assigns a new value to x, the compiler recognizes it as a local
  variable.</p>
</blockquote>
<p>And according to <a href="http://docs.python.org/3/reference/simple_stmts.html#augmented-assignment-statements" rel="nofollow">Augmented assignment statements</a>:</p>
<blockquote>
<p>An augmented assignment evaluates the target (which, unlike normal
  assignment statements, cannot be an unpacking) and the expression
  list, performs the binary operation specific to the type of assignment
  on the two operands, and <strong>assigns</strong> the result to the original target.</p>
</blockquote>
</div>
<span class="comment-copy">@colinfang, augmented assignment involves LOAD, <b>STORE</b> operation beside the binary operation.</span>
