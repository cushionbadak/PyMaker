<div class="post-text" itemprop="text">
<p>I have been looking at some code for a small chat program that I found online. It was originally written for 2.7, but it seems to work with 3.2. The only problem is that I cannot send strings, only numbers:</p>
<p>The chat.py file source code:</p>
<pre><code>from socket import *
HOST = ''
PORT = 8000
s = socket(AF_INET, SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(1) 
conn, addr = s.accept() 
print ('Connected by ' + str(addr)) 
i = True
while i is True:
    data = conn.recv(1024)
    print ("Received " + repr(data))
    reply = str(input("Reply: "))
    conn.send(reply)
conn.close()
</code></pre>
<p>And the client.py source file:</p>
<pre><code>from socket import * 
HOST = ''
PORT = 8000
s = socket(AF_INET, SOCK_STREAM)
s.connect((HOST, PORT)) # client-side, connects to a host
while True:
    message = str(input("Your Message: "))
    s.send(message)
    print ("Awaiting reply...")
    reply = s.recv(1024) # 1024 is max data that can be received
    print ("Received " + repr(reply))
s.close()
</code></pre>
<p>When I run these using two separate terminals, they work, but do not send strings.</p>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>When you work with sockets, the message you're passing around should probably be in bytes, <code>b'bytes'</code>. In Python 2.x, a <a href="http://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange" rel="nofollow"><code>str</code></a> is actually what a <a href="http://docs.python.org/3/library/functions.html#bytes" rel="nofollow"><code>bytes</code></a> is in Python 3.x</p>
<p>So your message should be something like:</p>
<pre><code>message = b'Message I want to pass'
</code></pre>
<p>Check here <a href="http://docs.python.org/3.3/library/stdtypes.html" rel="nofollow">http://docs.python.org/3.3/library/stdtypes.html</a> for more information.</p>
<p>According to <a href="http://docs.python.org/3/library/functions.html#input" rel="nofollow">http://docs.python.org/3/library/functions.html#input</a> <code>input</code> returns a <code>str</code>, which means you'll have to encode <code>message</code> into <code>bytes</code> as such:</p>
<pre><code>message = message.encode()
</code></pre>
<p>Do verify that this is the right approach to convert <code>str</code> to <code>bytes</code> by checking the type of <code>message</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your socket code is correct, it was just failing due to an unrelated error due to <a href="http://docs.python.org/2/library/functions.html#raw_input" rel="nofollow"><code>raw_input</code></a> vs <code>input</code>. You probably intended to read a string from the shell instead of reading a string and trying to evaluate it as Python code which is what <code>input</code> does.</p>
<p>Try this instead:</p>
<p><strong>chat.py</strong></p>
<pre><code>from socket import *
HOST = ''
PORT = 8000
s = socket(AF_INET, SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(1) 
conn, addr = s.accept() 
print ('Connected by ' + str(addr)) 
i = True
while i is True:
    data = conn.recv(1024)
    print ("Received " + repr(data))
    reply = str(raw_input("Reply: "))
    conn.send(reply)
conn.close()
</code></pre>
<p><strong>client.py</strong></p>
<pre><code>from socket import * 
HOST = ''
PORT = 8000
s = socket(AF_INET, SOCK_STREAM)
s.connect((HOST, PORT)) # client-side, connects to a host
while True:
    message = str(raw_input("Your Message: "))
    s.send(message)
    print ("Awaiting reply...")
    reply = s.recv(1024) # 1024 is max data that can be received
    print ("Received " + repr(reply))
s.close()
</code></pre>
</div>
<span class="comment-copy">What error do you get or what happens when you send strings?</span>
<span class="comment-copy">Hi @woozyking, thank you for your reply. Would I format my message line like this: message = input(b"Your Message: ")</span>
<span class="comment-copy">@user3089646 No, it just means that the input you're reading in has to be ensured as <code>bytes</code> type before passing it across sockets. So <code>message = input('Your message: ')</code> is perfectly fine, but after that and before <code>s.send(message)</code>, you have to make sure <code>type(message)</code> is <code>bytes</code>.</span>
<span class="comment-copy">Hi @Stephen Diehl, thank you for your reply. I was happy to see this work, but realized that my IDLE was 3.2, but my shell was 2.7. When I updated it to 3.2, I get some more errors.</span>
<span class="comment-copy">In Python 3, <code>raw_input</code> is deprecated. Instead <code>input</code> of Python 3 behaves like <code>raw_input</code> in Python 2</span>
