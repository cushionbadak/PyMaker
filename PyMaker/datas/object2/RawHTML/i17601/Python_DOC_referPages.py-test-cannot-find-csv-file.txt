<div class="post-text" itemprop="text">
<p>I have a folder structure like this</p>
<pre><code>App
--App
  --app.py       
--Docs
--Tests
  --test_app.py
  --sample.csv
</code></pre>
<p>In my test_app.py, I have a line to open the sample.csv file. When I run py.test command on the root <code>App</code> level. It throws errors saying that sample.csv does not exist. How should I configure py.test so that it can find my sample.csv file?</p>
<p><strong>Edit:</strong></p>
<pre><code>import pandas as pd

class TestReturns:
    def test_annualized(self):
        pd.read_csv("sample.csv")
    def test_rebalancing(self):
        assert 1 == 1
</code></pre>
<p>Nothing fancy about the test. I am just trying out how to configure paths.</p>
</div>
<div class="post-text" itemprop="text">
<p>If the csv file is always in the same directory as the test file you should use <code>__file__</code>, something like:</p>
<pre><code>def test_annualized():
    fname = os.path.join(os.path.dirname(__file__), 'sample.csv')
    pd.read_csv(fname)
</code></pre>
<p>See the python <a href="http://docs.python.org/3/reference/datamodel.html?highlight=__file__" rel="nofollow">datamodel docs</a> for some scant notes on <code>__file__</code>.</p>
</div>
<span class="comment-copy">Can you post your code?</span>
<span class="comment-copy">@AnkitJaiswal Just updated to include my code</span>
<span class="comment-copy">But with this setup, where is py.test looking for the file?</span>
<span class="comment-copy">This exact code looks in the same directory as the test file lives.  <code>__file__</code> is the path of the test module so calling <code>dirname()</code> on it returns the directory of the test module.</span>
