<div class="post-text" itemprop="text">
<p>I am new to python programming and I am learning python by doing simple programs. Here is what I would like to do: if I have a text file containing numbers:
say this a f1.txt</p>
<pre><code>f1.txt:

1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 15


fp = open('f1.txt')
a1=[]
a2=[]
a3=[]
a4=[]
lines = fp.readlines()

for ln in lines[0:len(lines)]:
line=ln.strip().split()
a1=line();

fp.close()
</code></pre>
<p>I want to get first column in a1, second in a2 and so on. I know above code may be wrong, please tell me where I went wrong and how to correct it. Especially I am not understanding command 'ln.strip().split()'. Can someone help?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do it like this:</p>
<pre><code>a1 = []
a2 = []
a3 = []
a4 = []

with open('f1.txt') as f:
    for line in f:
        data = line.split()
        a1.append(int(data[0]))
        a2.append(int(data[1]))
        a3.append(int(data[2]))
        a4.append(int(data[3]))
</code></pre>
<p>So first of all, we use the <code>with</code> statement to open the file. This makes sure that the file is automatically closed even when errors appear. It’s just nicer that way. While the file is open <code>f</code> will be the file handle.</p>
<p>Now, Python allows us to iterate over the lines of a file simply by iterating over the file handle. So <code>for line in f</code> will iterate over all lines automatically. There is no need to call <code>readlines()</code> first, and certainly no need to do <code>lines[0:len(lines)]</code> which essentially only creates a copy of the list—you could just iterate over <code>lines</code> too.</p>
<p>Now inside of the loop, we take the line, and split it by whitespace—without arguments <code>str.split</code> will always do that. <a href="http://docs.python.org/3/library/stdtypes.html#str.split"><code>str.split</code></a> returns a list, so we store that in an extra variable. Next we append each column to the correct list. And as you want the values as numbers, we convert them to integers.</p>
<p>The <a href="http://docs.python.org/3/library/stdtypes.html#str.strip"><code>str.strip</code></a> you mentioned basically takes off any leading or trailing whitespace of the string. As we are using <code>str.split</code> without arguments, extra whitespace will be removed too, so we don’t really need that.</p>
<p>Finally, having four separate lists stored in separate variables is a bit annoying to maintain. You could simply create a list of lists instead:</p>
<pre><code>a = [[], [], [], []] # A list with four empty lists
</code></pre>
<p>And then, inside of the loop, you can just append <code>data[i]</code> to <code>a[i]</code>:</p>
<pre><code>for i, value in enumerate(line.split()):
    a[i].append(int(value))
</code></pre>
<p>When iterating over <a href="http://docs.python.org/3/library/functions.html#enumerate"><code>enumerate</code></a>, you will not only get the value (which you would get when iterating just over the list), but also the index. So using this, we get the index of each element within the splitted line and can automatically append it to the correct sublist of <code>a</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>data = []
for line in lines:
    data.append([int(v) for v in line.split()])
</code></pre>
<p>or </p>
<pre><code>data = [[int(v) for v in line.split()] for line in lines]
</code></pre>
<p><strong>EDIT:</strong>
To answer the comment  - code below will rearrange the data as required list of numbers</p>
<pre><code>numbers = zip(*data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>line[0], line[1]</code>, etc. should give you the first, second, etc. entry in each line.</p>
<p>The <code>split()</code> function will split the given line at whitespace and returns a list of the entries.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your indentation is wrong in the <code>for</code> loop. All the code that you want included in the loop should be indented 4 spaces.</p>
<p>The line <code>a1= line()</code> won't do anything. The syntax <code>a = A()</code> would set <code>a</code> equal to the result of a function <code>A()</code> or to a new instance of a class <code>A</code>. If you want to add line to the list <code>a1</code> you need to use <code>a1.append(line)</code></p>
</div>
<span class="comment-copy">Please use correct indentation as this won't run.</span>
<span class="comment-copy">This is going to get better responses if you narrow the question to one thing. You might try running your code and asking specifically about any error messages you get, or why the output differs from your expected output.</span>
<span class="comment-copy">Well, the four append lines are not good. I'd show him how to use a loop for that. Plus, he wants numbers, so let's mention <code>int()</code>.</span>
<span class="comment-copy">Good job!......</span>
<span class="comment-copy">@thg435 Thanks for your suggestions ;)</span>
<span class="comment-copy">This will make a list of rows, instead of a list of columns.</span>
<span class="comment-copy">@poke, mission accomplished :)</span>
