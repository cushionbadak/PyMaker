<div class="post-text" itemprop="text">
<p>I have a class called <code>Points</code> and I need to create 100 points.
I need to do something like:</p>
<pre><code>class Point(object)
...

for i in range(1,100):
    pi = Point()
</code></pre>
<p>the points should be named <code>p1</code>, <code>p2</code>, ... <code>p100</code></p>
<p>The lines above do not work, obviously.</p>
<p>The question is: I know that I could use <code>exec</code> inside a loop to create the 100 points but is there any better way to do it without using <code>exec</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create several objects using list comprehension:</p>
<pre><code># 100 points in list
points = [Point() for _ in range(100)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Creating/using dynamic variables is considered a bad practice in Python.  It is very easy for you to lose track of them, cause name collisions, etc.</p>
<p>Instead, you can use a <a href="http://www.python.org/dev/peps/pep-0274/" rel="nofollow">dict comprehension</a> and <a href="http://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format</code></a> to create a dictionary of named instances:</p>
<pre><code>points_dict = {"p{}".format(x):Point() for x in range(1, 101)}
</code></pre>
<p>Then, you can access those instances by name like so:</p>
<pre><code>points_dict["p1"]
points_dict["p10"]
# etc.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Thank you very much for your answers. I learned a lot from them. </p>
<p>Anyway, I don't need a list of points or a dictionary of points. </p>
<p>Imagine I start writing:</p>
<p>p1 = Point()
p2 = Point ()
.
.
.
p100 = Point()</p>
<p>I will obtain 100 points and nothing more. That is what I need. I believe it is not a good practice to put in the program 100 lines of code as above! Additionally, the number of points to create will possibly be variable. That is why I thought there should be an elegant way to do it. Thank you.</p>
</div>
<span class="comment-copy">See <a href="http://stupidpythonideas.blogspot.com/2013/05/why-you-dont-want-to-dynamically-create.html" rel="nofollow noreferrer"><i>Why you don't want to dynamically create variables</i></a>.</span>
<span class="comment-copy">Your indices and range endpoints are wrong.</span>
<span class="comment-copy">Fixed.  I actually changed my answer to use a dictionary comprehension so that the instances are named like the OP wanted.</span>
