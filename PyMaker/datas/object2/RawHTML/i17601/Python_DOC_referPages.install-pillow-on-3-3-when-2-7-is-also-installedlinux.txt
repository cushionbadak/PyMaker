<div class="post-text" itemprop="text">
<p>I have both Python 2.7 and 3.3 installed on my system.  I'm trying to hopefully write everything for 3.3.  I've run into a snag.  I need to install Pillow on 3.3 so I can use Images.  How do I get it to install on 3.3.  If I try</p>
<pre><code>pip install Pillow
</code></pre>
<p>It comes up and says 'Requirement already satisfied(use --upgrade to upgrade): Pillow in /usr/lib/python2.7/dist-packages'</p>
<p>How do I get Pillow to install on 3.3, since that is where I need it?</p>
<p>I ran through the rest of the install(setuptools and prerequisites).  Not sure where they installed.  I did use the python3-setuptools for the initial install attempt.  I don't know if that helped to control the flow of the prerequisites to 3.3 or not.</p>
<p>This is on a Linux system.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your 2.7 and 3.3 have their own separate site-packages locations.</p>
<p>And, just as they have their own separate executables (usually <code>python</code> and <code>python2.7</code> for 2.7, and <code>python3</code> and <code>python3.3</code> for 3.3), when you install <code>pip</code> for each one, they'll each have their own <code>pip</code> scripts (usually <code>pip</code>, <code>pip2</code>, and <code>pip2.7</code> vs. <code>pip3</code> and <code>pip3.3</code>).</p>
<p>So, just do this:</p>
<pre><code>pip3.3 install Pillow
</code></pre>
<hr/>
<p>As a side note, if you use virtual environments, either via the third-party <a href="https://pypi.python.org/pypi/virtualenv" rel="nofollow"><code>virtualenv</code></a> package or the stdlib <a href="http://docs.python.org/3/library/venv.html" rel="nofollow"><code>venv</code></a> package (3.3+ only, and really not worth using until 3.4), this problem goes away: when you're inside a virtual environment, it's either a 2.7 environment or a 3.3 environment, and it's as if nothing else exists.</p>
<hr/>
<p>The basic design is explained in <a href="http://www.python.org/dev/peps/pep-0394/" rel="nofollow">PEP 394</a>. How <code>pip</code> fits into that design is explained in… as far as I know, docs that haven't been written yet, but will hopefully be part of Python 3.4.0 and/or pip 1.5.something.</p>
<p>Older versions of <code>pip</code> (I believe before 1.5.0) would use <code>pip</code> and <code>pip-2.7</code> vs. <code>pip</code> and <code>pip-3.3</code>, which obviously leads to a bit of confusion.</p>
<p>And some distros have their own <code>python-pip</code> packages that do things differently. And then there's Arch, where <code>python</code> actually means 3.2. And so on.</p>
<p>But the basic idea is that when you have Python X.Y and V.W side by side, there will be some way to differentiate explicitly.</p>
</div>
<span class="comment-copy">usualy if you are on linux, pip for 3.3 will be pip-3.3 or something similar</span>
<span class="comment-copy">may also be pip-3.3 depends on distro</span>
<span class="comment-copy">@FooBarUser: That's already explained in the answer. See "Older versions of <code>pip</code>…" and "And some distros…" I edited the answer to split those off into separate paragraphs to make it harder to miss; does that help?</span>
<span class="comment-copy">yes it does.  your answer is more than complete</span>
<span class="comment-copy">Just trying it and it comes up looks like it's going to do it but then I get Permission denied on it trying to create the python3.3/dist-packages/PIL directory.  I am doing this on a full installion on Linux and not through a virtual player.</span>
<span class="comment-copy">@confused: Most likely you need to <code>sudo</code> the install, just as you do with most system-wide install commands. (If you don't understand <code>sudo</code>, you probably need to read a Unix tutorial or ask on a site like SuperUser.)</span>
