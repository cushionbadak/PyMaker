<div class="post-text" itemprop="text">
<p>Let us imagine that in python we have list of numbers, like this:</p>
<pre><code>[1, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
<p>What is the simplest possible way to convert this list of numbers into a random series of lists within lists?</p>
<p>Like this:</p>
<pre><code>[[1, 2, 3], [4], 5, 6, [7, 8], 9]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://docs.python.org/3/library/random.html#random.randint" rel="nofollow"><code>random.randint</code></a>:</p>
<pre><code>import random

def random_series(lst, size=3):
    start = end = 0
    n = len(lst)
    while end &lt; n:
        end += random.randint(1, size)
        if end - start == 1:
            yield lst[start]
        else:
            yield lst[start:end]
        start = end
</code></pre>
<p>Example usage:</p>
<pre><code>&gt;&gt;&gt; lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]
&gt;&gt;&gt; list(random_series(lst))
[[1, 2, 3], 4, 5, [6, 7], [8, 9]]
&gt;&gt;&gt; list(random_series(lst))
[[1, 2], [3, 4], [5, 6], 7, 8, 9]
&gt;&gt;&gt; list(random_series(lst))
[[1, 2], [3, 4, 5], [6, 7], [8, 9]]
&gt;&gt;&gt; list(random_series(lst))
[[1, 2, 3], [4, 5, 6], 7, [8, 9]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My Code (I am assuming <code>2</code> is in input list):</p>
<pre><code>from random import randint

L = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print L
l, length = 0, len(L)
L2 = []
while l &lt; length:
    r = randint(0, length - l)  # rnum &lt; length_remaining  
    x = L[l: l + r] # taking next `r`  numbers from original L 
    if len(x) &gt; 1:   
        L2.append(x)  # append as list        
    if len(x) == 1:
        L2.append(x[0]) # append as single element 
    l += r    
print L2
</code></pre>
<p>Some execution: </p>
<pre><code>$ python  x.py
[1, 2, 3, 4, 5, 6, 7, 8, 9]
[[1, 2, 3, 4], 5, [6, 7, 8], 9]
$ python  x.py
[1, 2, 3, 4, 5, 6, 7, 8, 9]
[[1, 2, 3, 4], [5, 6, 7, 8, 9]]
$ python  x.py
[1, 2, 3, 4, 5, 6, 7, 8, 9]
[[1, 2, 3, 4, 5, 6], [7, 8], 9]
$ python  x.py
[1, 2, 3, 4, 5, 6, 7, 8, 9]
[1, [2, 3], 4, [5, 6], [7, 8], 9]
</code></pre>
<p>Not very much but a bit improved: </p>
<pre><code>L = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print L
l, length = 0, len(L)
L2 = []
while l &lt; length:
    r = randint(1, length - l)  # rnum &lt; length_remaining  
    x = L[l: l + r] # taking next `r`  numbers from original L 
    if len(x) &gt; 1:   
        L2.append(x)  # append as list        
    else:
        L2.extend(x) # append as single element 
    l += r    
print L2
</code></pre>
</div>
<span class="comment-copy">Does it have to stay "sorted"?</span>
<span class="comment-copy"><code>2</code> is missing in your input? or you add it in output list?</span>
<span class="comment-copy">+1. Please review my answer too and let me know if it's okay.</span>
<span class="comment-copy">@ComputerFellow duplicating your comment. :)</span>
<span class="comment-copy">@ComputerFellow, <code>rand_series</code> in your code modify the original list. That could cause issue depend on situation.</span>
<span class="comment-copy">@ComputerFellow, the function also does not preserve order. But OP does not specified that; it may not be a problem.</span>
<span class="comment-copy">@falsetru wow. thanks. I'll see if I can make it any more elegant!</span>
<span class="comment-copy">If some one find mistake(s) please add a comment also. that will be helpful for me.</span>
