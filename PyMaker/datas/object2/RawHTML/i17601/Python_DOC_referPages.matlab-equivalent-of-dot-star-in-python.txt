<div class="post-text" itemprop="text">
<p>I am working on a matlab conversion code.
what is equivalent of .* in matlab with python?</p>
<pre><code>len = sum(sqrt(sum(v.*v)))/N;
</code></pre>
<p>where v is numpy array : </p>
<pre><code>v =  [array([-35289.38919481, -30575.56015338, -21456.41798462, ...,
    19796.17331542,  11216.34277023,   6977.87432284])]
N = 18225
</code></pre>
<p>In such cases, how will I convert code to python?</p>
</div>
<div class="post-text" itemprop="text">
<p>For numpy arrays, just using * will do the element-wise multiplication as in Matlab's <code>.*</code>
<a href="http://wiki.scipy.org/NumPy_for_Matlab_Users" rel="nofollow">http://wiki.scipy.org/NumPy_for_Matlab_Users</a></p>
<p>you can use,</p>
<pre><code>len = numpy.sum(numpy.sqrt(numpy.sum(v[0] * v[0], axis=0))) / N 
</code></pre>
<p>Note: If you want to use matrices instead of arrays in numpy, you have to use the <code>multiply</code> method.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>v_squared_sum = v.dot(v.transpose()) 
len_ = np.sum(np.sqrt(v_squared_sum)) / N
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import numpy as np

v = np.array([1,2,3])
N = 3
len_ = np.sqrt(np.dot(v, v)) / N
print(len_)
</code></pre>
<p>Result:</p>
<pre><code>1.24721912892
</code></pre>
<p>Do not use <code>len</code> as a variable name, because this shadows the built-in length function <a href="http://docs.python.org/3/library/functions.html#len" rel="nofollow"><code>len()</code></a>. </p>
</div>
<span class="comment-copy">What is the expected result of this on Matlab? <code>sum(...)</code> should return a number, so why do you also have an outer <code>sum</code> around the <code>sqrt</code>?</span>
<span class="comment-copy">but v is in array so we should use v[0]?</span>
<span class="comment-copy">@sam Thanks for pointing out. I fixed it.. :)</span>
