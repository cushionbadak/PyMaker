<div class="post-text" itemprop="text">
<p>So I have made a small application that I typically want to package and share it with the world. I read the tutorials for packaging my app using setuptools. It was going well until I got stuck at one place.</p>
<p>My directory structure is something like this:</p>
<pre><code>- MyApp
  - setup.py
  - README.md
  - LICENSE.txt
  - MANIFEST.in
  - myapp
    - __init__.py
    - index.py
    - utils
      - __init__.py
      - helper.py
      - some_dump.pickle
      - images
        - folder_1
          - image_1.jpg
          - image_2.jpg
        - folder_2
          - another_image_1.jpg
          - another_image_2.jpg
      - sounds
        - sound_1.wav
        - sound_2.wav
</code></pre>
<p>Given this directory structure, I have created the <code>setup.py</code> file with the <code>packages</code> option as the list containing <code>myapp</code> and <code>myapp.utils</code>. I have also created a <code>MANIFEST.in</code> file that will have all the files that I want to package but which are not included by default. Here is the content of the manifest file:</p>
<pre><code>include README.md
include LICENSE.txt
include myapp/utils/*.pickle
include myapp/utils/sounds/*.wav
include myapp/utils/images/folder_1/*.jpg
include myapp/utils/images/folder_2/*.jpg
</code></pre>
<p>The problem is that all these files are created as required in the distribution package (.zip), but when I try to use the distribution package to try the install the package myself, I don't see the images, sounds or the pickle file.
i.e. when I run <code>python setup.py install</code>, I don't see these files in the <code>build/lib</code> folder. I am not sure what the reason is. Could anyone help me out with this?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>The manifest is about distribution, not about installation.
You need to specify in <code>setup.py</code> what to install and WHERE:</p>
<pre><code>setup(...,
  data_files=[(whereto1, [file1, file2]),
              (whereto2, [file3])]
 )
</code></pre>
<p>See <a href="http://docs.python.org/3/distutils/setupscript.html#installing-additional-files" rel="nofollow">http://docs.python.org/3/distutils/setupscript.html#installing-additional-files</a></p>
</div>
<span class="comment-copy">It looks like you have several different questions (e.g. one about installing resource files, and one about installing PyQt from PyPi). Please split them to separate StackOverflow questions.</span>
<span class="comment-copy">@pts: Generally, that's right, but the OP is asking if these two questions have a common root cause in a packaging issue.</span>
<span class="comment-copy">The second is probably not the cause of the first. Meanwhile, you normally do not install non-code files in the middle of a package; use the resource files API instead. However, IIRC (it's been a while), PyQt has its own resource-files API instead of the one in <code>setuptools</code>/<code>pkg_resources</code>, and you might want to use that.</span>
<span class="comment-copy">Thanks, I managed to get it right after your answer. :-)</span>
