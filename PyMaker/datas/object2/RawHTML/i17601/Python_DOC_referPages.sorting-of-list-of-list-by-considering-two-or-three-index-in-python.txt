<div class="post-text" itemprop="text">
<pre><code>list = [["hasan",6,"bad","chennai"], ["vishnu",7,"good","chennai"], ["tabraiz",8,"good","bangalore"], ["shaik",5,"excellent","chennai"], ["mani",6,"avarage","kerala"], ["cilvin",9,"excellent","chennai"]]
</code></pre>
<p>given priority as </p>
<pre><code>{'excellent':4, 'good':3, 'average':2, 'bad':1}    

list.sort(key=lambda x: (x[3], -x[2], -x[1]))
list.sort(key=lambda x: (x[2], x[0], -x[1]))
list.sort(key=lambda x: (x[2], -x[3], x[0]))
</code></pre>
<p>These all are working.</p>
<p>but it says</p>
<pre><code>TypeError: bad operand type for unary -: 'str'
</code></pre>
<p>when trying to place negative sign in the first position. </p>
<p>ie</p>
<pre><code>list.sort(key=lambda x: (-x[3], x[2], x[1]))
</code></pre>
<p>why????</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem with your method is that <code>x[3]</code> is a string, so it does not make sense to do <code>-x[3]</code>.</p>
<p>I am not sure there isn't a simpler solution, but you can use <a href="http://docs.python.org/3/library/functools.html#functools.cmp_to_key" rel="nofollow"><code>cmp_to_key</code></a>, and define your own reversed <code>key</code> function:</p>
<pre><code>from functools import cmp_to_key

l = [['hasan', 6, 'bad', 'chennai'],
     ['vishnu', 7, 'good', 'chennai'],
     ['tabraiz', 8, 'good', 'bangalore'],
     ['shaik', 5, 'excellent', 'chennai'],
     ['mani', 6, 'avarage', 'kerala'],
     ['cilvin', 9, 'excellent', 'chennai']]

rev_key = cmp_to_key(lambda x,y: 1 if x&lt;y else -1 if x&gt;y else 0)
l.sort(key=lambda x: (rev_key(x[3]), x[2], x[1]))
print(l)
</code></pre>
<p>Result:</p>
<pre><code>[['mani', 6, 'avarage', 'kerala'],
 ['hasan', 6, 'bad', 'chennai'],
 ['shaik', 5, 'excellent', 'chennai'],
 ['cilvin', 9, 'excellent', 'chennai'],
 ['vishnu', 7, 'good', 'chennai'],
 ['tabraiz', 8, 'good', 'bangalore']]
</code></pre>
<p>Note that if you're using Python 2, you can just write:</p>
<pre><code>rev_key = cmp_to_key(lambda x,y: cmp(y,x))
</code></pre>
<p>If you didn't want to sort according to several keys, the right way to go would be to use the <code>reverse</code> argument:</p>
<pre><code>&gt;&gt;&gt; sorted(l, key=lambda x: x[3], reverse=True)
[['mani', 6, 'avarage', 'kerala'],
 ['hasan', 6, 'bad', 'chennai'],
 ['vishnu', 7, 'good', 'chennai'],
 ['shaik', 5, 'excellent', 'chennai'],
 ['cilvin', 9, 'excellent', 'chennai'],
 ['tabraiz', 8, 'good', 'bangalore']]
</code></pre>
</div>
<span class="comment-copy">Unary minus operator works properly, in sorting, with numeric data only.</span>
<span class="comment-copy">Well, is the first element of each sub-list a string? Because that would cause exactly this problem.</span>
<span class="comment-copy">yes, that is why this problem. how to fix it???</span>
<span class="comment-copy"><code>These all are working.</code> I do doubt that. Please double check it. To be specific, only <code>list.sort(key=lambda x: (x[2], x[0], -x[1]))</code> shall work. Also don't override built-in identifiers like <code>list</code>.</span>
<span class="comment-copy">What are you trying to achieve? Do you want to order first by <code>x[3]</code> in decreasing order, then by <code>x[2]</code> in increasing order and then by <code>x[1]</code> in increasing order?</span>
