<div class="post-text" itemprop="text">
<p>What is the easiest way to add a database to a python application, so that when compiled and then installed on another machine it isn't necessary to install a seperate dbms?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3/library/sqlite3.html" rel="nofollow">SQLite3 support is part of Python</a>.  This is a file backed db, so no software needs to be installed outside your app.  Consider using the <a href="http://sqlalchemy.readthedocs.org/en/rel_0_9/" rel="nofollow">SQLAlchemy package</a> for easier use.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python includes the module <a href="http://docs.python.org/3/library/sqlite3.html" rel="nofollow"><code>sqlite3</code></a> in its standard library.</p>
</div>
<div class="post-text" itemprop="text">
<p>As of I know it is not possible to bundle a RDBMS into python application and ship it for installation. </p>
<p>But incase if you are looking for a way to store application data without the burden of installing an RDBMS you can use<a href="http://www.gnu.org.ua/software/gdbm/" rel="nofollow">GDBM</a> which is a database with key value pair much like python dictionaries but they are non volatile and so you can store them in disks and use them later. Python has a <a href="http://docs.python.org/3/library/dbm.html" rel="nofollow">dbm library</a> to access it.</p>
<p>Or incase if you certainly need RDBMS you can check out installers which can do that for you during the time of application installation.</p>
</div>
<span class="comment-copy">I believe sqlite is distributed with Python, would that work for you?</span>
<span class="comment-copy">Smells like another XY problem. Everything has its trade off. I believe comparing to deploying code, installing db is much easier. Give us more details about your situations and we may help you find the best approach.</span>
<span class="comment-copy">Hi Leonardo. I'm writing an app for my brother's business. At the moment it writes and reads records by parcing a single encrypted delimited file. This method works fine at the moment, but I doubt it's very scalable and performing any kind of complex analysis on the data is complicated and memory intensive. I think a database is the obvious thing to replace a file with, but preferably something that can be embeded into the app or at least bundled into an executable package for deployment. sqlite looks like it may do the trick, but if you have any other suggestions I'm open to anything.</span>
