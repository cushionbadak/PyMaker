<div class="post-text" itemprop="text">
<p>How to use the same FileHandler for several loggers but with a filename different based on the  on the logger?
Can I avoid to write 3 times the file handler definition?</p>
<pre><code>LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '...', # I do not want to set the file name here because I want it to be different based on the logger: loggerA.log, loggerB.log, loggerC,log
        },
    },
    'loggers': {
        'loggerA': {
            'handlers': ['file'],
            'propagate': True,
            'level': 'INFO',
        },
        'loggerB': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': False,
        },
        'loggerC': {
            'handlers': ['file'],
            'level': 'INFO',
            'filters': ['special']
        }
    }
}
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>To do this, you'd need to create your own handler, which (for example) created a list of handlers and then passed each event to one of them based on the logger. It doesn't seem worth it just to save a bit of configuration.</p>
<pre><code>class DelegatingHandler(logging.Handler):
    def __init__(self, ...):
        logging.Handler.__init__(self)
        self.handlers = ... # compute a list of other handlers

    def handle(self, record):
        handler = ... # determine one of self.handlers based on record contents
        handler.handle(record)
</code></pre>
<p>You don't have to repeat stuff unnecessarily in a configuration, you can refer to shared areas of the configuration as per <a href="http://docs.python.org/3/library/logging.config.html#access-to-internal-objects" rel="nofollow">the documentation</a>.</p>
</div>
