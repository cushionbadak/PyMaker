<div class="post-text" itemprop="text">
<p>I have a problem with using python module inside another one. The use case is as follows: </p>
<p>Consider the following scenario. The error was commented accordingly.</p>
<p>In file A.py:</p>
<pre><code>import B

...
...
</code></pre>
<p>In file B.py:</p>
<pre><code>import C
import A

c_func = C.func1() # works perfectly
a_func = A.func2() # Error: 'module' object has no attribute 'func2' 

...
...
</code></pre>
<p>In file C.py:</p>
<pre><code>...
...
</code></pre>
<p>Any ideas? Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a circular import. In general, they don't work.</p>
<p>See <a href="http://docs.python.org/3/faq/programming.html#how-can-i-have-modules-that-mutually-import-each-other" rel="nofollow">How can I have modules that mutually import each other?</a> in the FAQ for an explanation, and some different ways to solve it. There's also a <a href="http://effbot.org/zone/import-confusion.htm#circular-imports" rel="nofollow">Circular Imports</a> section on Fredrik Lundh's effbot site. But briefly:</p>
<ul>
<li><code>A</code> starts executing.</li>
<li><code>A</code> reaches the <code>import B</code>.</li>
<li><code>B</code> starts executing.</li>
<li><code>B</code> reaches the <code>import A</code>. Since <code>A</code> already exists, this does nothing. Whatever code in <code>A</code> wasn't run yet—like the definition for <code>A.func2</code>—still hasn't run.</li>
<li><code>B</code> tries to use <code>A.func2</code>, which hasn't been defined yet, so you get an error.</li>
</ul>
<p>(Even more briefly, but less accurately: <code>B</code> depends on <code>A</code>, which depends on <code>B</code>, which means <code>B</code> can't run until <code>B</code> runs. This may help you get an intuitive understanding of the problem, which may help you understand the more complete/accurate explanation above.)</p>
<p>What you probably want to do is move the code in <code>A</code> that <code>B</code> needs into a separate module, which both <code>A</code> and <code>B</code> can import, which won't need to import either <code>A</code> or <code>B</code>. That's not the <em>only</em> possible solution (see the FAQ entry for two other ideas), but when it's possible to do this cleanly, it's hard to beat it. (Without actual code, it's hard to give a more specific answer than that.)</p>
</div>
<span class="comment-copy">show us the code for A.py which defines <code>func2</code>...</span>
<span class="comment-copy">But it <i>can</i> work so long as the function is called after the import finishes, right?</span>
<span class="comment-copy">@mhlester: Yes. One of the possible solutions suggested in the FAQ is to move all of <code>B</code>'s top-level code into a function, and have <code>A</code> call that function only after it's defined whatever that function needs. And another possible solution is to move the <code>import B</code> farther down in <code>A</code> until after <code>func2</code> has been defined.</span>
<span class="comment-copy">@abarnert: Thanks a lot for the explanation. I got it..</span>
