<div class="post-text" itemprop="text">
<p>What's the difference between:</p>
<pre><code>things = []

things = {}

things = set()
</code></pre>
<p>I tried googling but it's difficult to Google for constructs like these with only brackets to identify them without knowing their actual names.</p>
<p>There's also (element1, element2) that I've seen passed as an argument to a function but I don't know what Python interprets it as.</p>
</div>
<div class="post-text" itemprop="text">
<p>These are </p>
<ol>
<li><a href="http://docs.python.org/3/library/stdtypes.html?highlight=list#list" rel="nofollow">list</a></li>
<li><a href="http://docs.python.org/3/library/stdtypes.html?highlight=list#mapping-types-dict" rel="nofollow">dict</a></li>
<li><a href="http://docs.python.org/3/library/stdtypes.html?highlight=set#set" rel="nofollow">set</a></li>
</ol>
<p>Welcome to Python!</p>
<p>Oh, I forgot to say, if you are new too Python (and even in not) I recommend that you look into <a href="http://ipython.org/" rel="nofollow">IPython</a>. </p>
<p>And when ever you don't know anything in python just do:</p>
<pre><code>help(thing)
</code></pre>
<p>e.g</p>
<pre><code>help([]) # will show this ...
Help on list object:

class list(object)
 |  list() -&gt; new empty list
 |  list(iterable) -&gt; new list initialized from iterable's items
 |  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In C++ world, they are </p>
<ul>
<li><code>list [] = std::vector</code></li>
<li><code>set = std::set</code></li>
<li><code>dict {} = std::map</code></li>
</ul>
</div>
<span class="comment-copy">They're called <code>list</code>, <code>dict</code>, and <code>set</code>. <i>To the Google-mobile!</i></span>
<span class="comment-copy">Try the <code>type</code> function on these <i>things</i>.</span>
<span class="comment-copy"><a href="http://en.wikibooks.org/wiki/Python_Programming/Sequences" rel="nofollow noreferrer">Python Programming/Sequences</a></span>
<span class="comment-copy">where ever you found those symbol, will surely explained what they are, and you may not need to ask here.</span>
