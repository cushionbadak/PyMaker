<div class="post-text" itemprop="text">
<p>So there are a lot of pretty similar questions but none of the answers seems to satisfy what I'm looking for.  </p>
<p>Essentially I am running a python script using an absolute directory in the command line.<br/>
Within this file itself, I want to import a module/file,I currently use an absolute path to do this (<code>sys.path.append(/....)</code>.<br/>
But I would like to use a relative path, relative to the script itself.<br/>
All I seem to be able to do is append a path relative to my present working directory.</p>
<p>How do I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The two below alternate possibilities apply to both Python versions 2 and 3. Choose the way you prefer. All use cases are covered.</p>
<h2>Example 1</h2>
<pre><code>main script:      /some/path/foo/foo.py
module to import: /some/path/foo/bar/sub/dir/mymodule.py
</code></pre>
<p>Add in <code>foo.py</code></p>
<pre><code>import sys, os
sys.path.append(os.path.join(sys.path[0],'bar','sub','dir'))
from mymodule import MyModule
</code></pre>
<h2>Example 2</h2>
<pre><code>main script:      /some/path/work/foo/foo.py
module to import: /some/path/work/bar/mymodule.py
</code></pre>
<p>Add in <code>foo.py</code></p>
<pre><code>import sys, os
sys.path.append(os.path.join(os.path.dirname(sys.path[0]),'bar'))
from mymodule import MyModule
</code></pre>
<h2>Explanations</h2>
<ul>
<li><code>sys.path[0]</code> is <code>/some/path/foo</code> in both examples</li>
<li><code>os.path.join('a','b','c')</code> is more portable than <code>'a/b/c'</code></li>
<li><code>os.path.dirname(mydir)</code> is more portable than <code>os.path.join(mydir,'..')</code></li>
</ul>
<h2>See also</h2>
<p>Documentation about importing modules:</p>
<ul>
<li>in <a href="https://docs.python.org/2/tutorial/modules.html" rel="noreferrer">Python 2</a></li>
<li>in <a href="https://docs.python.org/3/tutorial/modules.html" rel="noreferrer">Python 3</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Ok, so I've found how to do this.</p>
<p><a href="https://stackoverflow.com/questions/4934806/python-how-to-find-scripts-directory">How can I find script's directory with Python?</a></p>
<p>provides the answer</p>
</div>
<span class="comment-copy">Can you give an example of what you want to import?</span>
<span class="comment-copy">BTW, I think you should read documentation on packages <a href="http://docs.python.org/2/tutorial/modules.html#packages" rel="nofollow noreferrer">docs.python.org/2/tutorial/modules.html#packages</a></span>
<span class="comment-copy">And this may also help you <a href="http://as.ynchrono.us/2007/12/filesystem-structure-of-python-project_21.html" rel="nofollow noreferrer">as.ynchrono.us/2007/12/â€¦</a> . I have had the same problem as you when I first came to python.</span>
<span class="comment-copy">Hi, it's just a python file from a directory above where my script is. Am I really using packages? Currently at the top of my file, it says     'sys.path.append("/directory/file")  I would like to just put something like     'sys.path.append("../file")  But that just appends something relative to the pwd I am running the script from (I run it using '/directory1/director2/file.py')</span>
<span class="comment-copy">Don't. Expand the relative path to an absolute path, and append that.</span>
<span class="comment-copy">If you're happy with this solution you should accept the answer to let others know.  In brief the command <code>script_location = os.path.realpath(__file__)</code> will give you the location of the script file and from there you can edit the path using <code>os.path.join(script_location, relative_path)</code></span>
