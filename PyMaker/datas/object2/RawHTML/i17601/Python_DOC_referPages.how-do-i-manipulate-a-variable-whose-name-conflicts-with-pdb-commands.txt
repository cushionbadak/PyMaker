<div class="post-text" itemprop="text">
<p>My code is, for better or worse, rife with single letter variables (it's physics stuff, so those letters are meaningful), as well as NumPy's, which I'm often interacting with.  </p>
<p>When using the Python debugger, occasionally I'll want to look at the value of, say, <code>n</code>.  However, when I hit <code>n&lt;enter&gt;</code>, that's the PDB command for <code>(n)ext</code>, which has a higher priority.  <code>print n</code> works around looking at it, but how can I set it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use an exclamation mark <code>!</code> before a statement to have it run :</p>
<pre><code>python -m pdb test.py
&gt; /home/user/test.py(1)&lt;module&gt;()
-&gt; print('foo')
(Pdb) !n = 77
(Pdb) !n
77
(Pdb) n
foo
&gt; /home/user/test.py(2)&lt;module&gt;()
-&gt; print('bar')
(Pdb)
</code></pre>
<p>The <a href="https://docs.python.org/3/library/pdb.html#pdbcommand-!" rel="nofollow noreferrer">docs</a> say:</p>
<blockquote>
<h3><a href="https://docs.python.org/3/library/pdb.html#pdbcommand-!" rel="nofollow noreferrer"><code>! statement</code></a></h3>
<p>Execute the (one-line) <em>statement</em> in the context of the current stack frame. The exclamation point can be omitted unless the first word of the statement resembles a debugger command. [...]</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can use semicolons, so just put something else in front of it:</p>
<pre><code>ipdb&gt; print n
2
ipdb&gt; n
&gt; 145 &lt;some code here&gt;
  146
  147

ipdb&gt; 1; n=4
1
ipdb&gt; print n
4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That is not the direct answer to your question, but it may help you: <a href="https://pypi.python.org/pypi/pudb/" rel="nofollow">PuDB</a> is a console-based visual interface for PDB which separates commands from variable manipulation by design.</p>
</div>
<div class="post-text" itemprop="text">
<p>Eric IDE, Wing IDE &amp; Spyder to mention just a few all have visual debuggers that are worth a go as they separate the display of values from the commands.</p>
</div>
<span class="comment-copy">Kind of overkill but have you try with <code>eval</code>? <code>eval('n = 3')</code>? Maybe it helps :)</span>
<span class="comment-copy">A functional workaround, but I believe '!' is the operator intended to deal with this case.</span>
<span class="comment-copy">you are right... i'd recommend that instead.</span>
<span class="comment-copy">Looks interesting; I'll have to take a stab at it when I have time to learn</span>
<span class="comment-copy">visual debuggers are usually very slow compared to debugging through console, which takes almost no time to start the debugger.</span>
<span class="comment-copy">@Curious They are slower to start but are often more usable especially for those of limited experience.</span>
