<div class="post-text" itemprop="text">
<p>In case of for loop in PHP i wrote</p>
<pre><code>foreach($vertex['neighbours'] as $n_vertex)
</code></pre>
<p>Is it similar to the for loop below in Python</p>
<pre><code>for n_vertex in vertex['neighbors']:
</code></pre>
<p>Similarly in case of While loop in PHP i used</p>
<pre><code>while(!empty($my_queue))
</code></pre>
<p>Is it similar to the while loop below in Python</p>
<pre><code>while my_queue:
</code></pre>
<p>If not, what is correct version of for and while loop in Python following the one in PHP.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, these are similar.</p>
<p>They're not exactly identical, but the differences won't matter in most code.*</p>
<p>And using <code>my_queue</code> directly as a test, rather than an <code>empty</code> method/function, is the Pythonic way to do it, as recommended in <a href="http://www.python.org/dev/peps/pep-0008/#programming-recommendations" rel="nofollow">PEP 8</a>:</p>
<blockquote>
<p>For sequences, (strings, lists, tuples), use the fact that empty sequences are false.</p>
</blockquote>
<p>So, you've done everything exactly right.</p>
<p>Of course in some cases, using a <a href="http://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> or generator expression (which have no direct analogy in PHP) may be more concise or readable than a <code>for</code> statement, but you never <em>need</em> to use them.</p>
<hr/>
<p>* First, a Python <code>for</code> loop creates an <a href="http://docs.python.org/3/tutorial/classes.html#iterators" rel="nofollow">iterator</a> from the source, then calls <code>next(it)</code> over and over until <code>StopIteration</code> is raised, which is pretty different from what happens under the covers in PHP. Unless you're using very weird types, or trying to mutating the object you're iterating over during iteration, you'll never notice the difference. Second, in Python, unlike PHP, <code>my_queue</code> could theoretically be something which is an iterable, but not a sequence, like an iterator—in which case <code>while my_queue:</code> will not work. That's unlikely for something you've named <code>my_queue</code>, however. </p>
</div>
<div class="post-text" itemprop="text">
<p>Both of your for loops are fine. They are same/similar. But the while loops are different from one another:</p>
<pre><code>while(!empty($my_queue))
</code></pre>
<p>is checking the list not empty and going through it. On the other hand,</p>
<pre><code>while my_queue:
</code></pre>
<p>will not be working if my_queue is not a boolean value. Hope that helps.</p>
</div>
<span class="comment-copy">Both examples are correct.  For the latter, assuming <code>my_queue</code> is a list, it will evaluate as <code>True</code> as long as <code>my_queue</code> is not empty.</span>
<span class="comment-copy">Wrong. If <code>my_queue</code> is a sequence, <code>while my_queue:</code> will be true as long as it's non-empty. More generally, a Python <code>while</code>/<code>if</code>/etc. condition can take any value which is convertible to boolean (using C++ terminology because there's no real Python terminology for it…), which includes all built-in/stdlib sequences and all third-party sequences that supply <code>__len__</code>/implement <code>collections.abc.Sized</code>.</span>
<span class="comment-copy">I assumed that my_queue is a list. I also compared both of them from that sense!</span>
<span class="comment-copy">If <code>my_queue</code> is a list, as you assumed, then the OP's code <i>will</i> work, because lists are sequences, and therefore true as long as they're non-empty, so your answer is wrong.</span>
<span class="comment-copy">It will create an infinite loop. Go to terminal, and run a 3 lines of python code please.</span>
<span class="comment-copy">The bare loop with nothing in it will create an infinite loop in both PHP and Python (and C and any other language with a <code>while</code> loop). If you add code to, e.g., pop an element off the queue each time, then it will do exactly what you want in both PHP and Python (and C and …). There is no difference. You seem to think that <code>empty</code> will somehow mutate the list, but it doesn't. Maybe you are thinking of <code>each</code> or <code>next</code>?</span>
