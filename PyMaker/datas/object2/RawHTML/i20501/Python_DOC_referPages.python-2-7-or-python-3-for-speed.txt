<div class="post-text" itemprop="text">
<p>I've looked around for answers and much seems to be old or outdated. Has Python 3 been updated yet so that it's decently faster than Python 2.7 or am I still better off sticking with my workable code?</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue isn't about speed -- they're either the same speed or Python 3.x is faster (depending on which benchmarks you look at). More specifically, Python 2 used to be faster, but apparently, they're on par with each other now (?). See the comments and this <a href="https://speakerdeck.com/pyconslides/python-3-dot-3-trust-me-its-better-than-python-2-dot-7-by-dr-brett-cannon" rel="nofollow noreferrer">slide deck</a> (towards the back).</p>
<p>The core devs are also actively working on optimizing Python 3 -- each new release of Python 3 has been <a href="http://igordavydenko.com/talks/by-pycon-2017/" rel="nofollow noreferrer">faster than the last</a>. You can keep abreast of the latest proposals and ideas on optimizing Python (as well as the many complications) by monitoring the <a href="https://mail.python.org/mailman/listinfo/python-dev" rel="nofollow noreferrer">python-dev mailing list</a>.</p>
<p>Rather, the reason many people used to give for not updated is because when Python 3 came out, and for several years after, the majority of Python libraries were not updated to work on Python 3.x. However, thankfully, this situation is vastly improved today -- the majority of 3rd party libraries are now Python 3 compatible.</p>
<p>The <a href="http://wiki.python.org/moin/Python2orPython3" rel="nofollow noreferrer">Python FAQ</a> contains more info. You can also check the <a href="https://python3wos.appspot.com/" rel="nofollow noreferrer">Python Wall of Superpowers</a> or <a href="http://py3readiness.org/" rel="nofollow noreferrer">Py3 Readiness</a> to get an overview of which popular Python libraries are currently compatible with Python 3.</p>
<p><strong>Update: (Summer 2017)</strong></p>
<p>I feel somewhat obligated to note that support for Python 2 is <a href="https://www.python.org/dev/peps/pep-0373/" rel="nofollow noreferrer">formally ending in 2020</a>.</p>
<p>Many 3rd party libraries are also planning on following suit -- a large subset of the scientific ecosystem (e.g. matplotlib, pandas, ipython) are planning on <a href="http://www.python3statement.org/" rel="nofollow noreferrer">dropping support for Python 2 in 2020</a>, Django is <a href="https://www.djangoproject.com/weblog/2015/jun/25/roadmap/" rel="nofollow noreferrer">dropping support</a>... I wouldn't be surprised if other libraries do the same.</p>
<p>So, if you're interested in making sure you can use the latest and greatest features in either Python or your favorite library, you should look into migrating to Python 3 sooner rather than later.</p>
<p>Here are some guides on converting Python 2 to 3 code:</p>
<ul>
<li><a href="https://docs.python.org/3/howto/pyporting.html" rel="nofollow noreferrer">https://docs.python.org/3/howto/pyporting.html</a></li>
<li><a href="http://python3porting.com/" rel="nofollow noreferrer">http://python3porting.com/</a></li>
<li><a href="https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/" rel="nofollow noreferrer">https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>FYI, <a href="https://speakerdeck.com/pyconslides/python-3-dot-3-trust-me-its-better-than-python-2-dot-7-by-dr-brett-cannon" rel="noreferrer">here</a>'s a performance benchmark comparing Python 2.7 with Python 3.3. Python 3.3 comes faster than Python 2.7.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.3 included an optimization for Unicode strings that reduced their memory consumption. That <em>might</em> translate into faster code if more of it fits into cache.</p>
<p>Really the only way to know is to benchmark your most critical code in both and see what the difference is.</p>
</div>
<div class="post-text" itemprop="text">
<p>The necessity of Libraries for your applications will determine whether Python3 or Pyhton2 is better. </p>
</div>
<span class="comment-copy">Unicode support for certain use case is better in Python 3.</span>
<span class="comment-copy">Python 3 has some new optimizations in part of the language, but Python2 has the <a href="http://www.pypy.org" rel="nofollow noreferrer"><code>pypy</code> JIT VM</a> which can get you major speed improvements. What's your question though? If you already have python 2 compatible code, you can either stay with Python 2, or move to Python 3 with some code changes (unless there are libs you can't get in Python 3).</span>
<span class="comment-copy">@birryree My question is if I could expect speed improvements by porting over to Python 3. I couldn't get pypy working on Windows.</span>
<span class="comment-copy">Actually, Python 3 tends to be slightly slower than 2.x. Not by much and you can treat them as the same for practical purposes, but the fact that every integer is now a <code>long</code> and every string is now <code>unicode</code> does have some overhead.</span>
<span class="comment-copy">My PyQt/numpy app is around 10% slower running its self tests on Python 3.3.2 compared to 2.7.5. This is using x86-64 linux with a single compatible codebase.</span>
<span class="comment-copy">@kindall: Python 3.3 is now on par with 2.7. See <a href="https://speakerdeck.com/pyconslides/python-3-dot-3-trust-me-its-better-than-python-2-dot-7-by-dr-brett-cannon" rel="nofollow noreferrer">Brett Cannon's slides</a>.</span>
<span class="comment-copy">@NagabhushanBaddi -- if you have a specific issue with the benchmarks listed in the linked slides, or can point to an alternate set of benchmarks/data to back up your claim, please do so. (As a piece of advice, simply asserting a claim doesn't really gain you any credibility, especially in tech circles. You should get into the habit of always backing up your claims with data immediately and up front. If your data is strong, it should speak for itself.)</span>
<span class="comment-copy">@NagabhushanBaddi yes, please do provide proof.</span>
<span class="comment-copy">@JimFerrans ok, it's updated now</span>
<span class="comment-copy">I agree -- benchmarking is the way to go.</span>
<span class="comment-copy">He asked about speed, not which is better. He asked for information, not a judgement or preference.</span>
