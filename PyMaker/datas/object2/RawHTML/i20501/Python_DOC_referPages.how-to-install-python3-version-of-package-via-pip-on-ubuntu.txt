<div class="post-text" itemprop="text">
<p>I have both <code>python2.7</code> and <code>python3.2</code> installed in <code>Ubuntu 12.04</code>.<br/>
The symbolic link <code>python</code> links to <code>python2.7</code>.</p>
<p>When I type:</p>
<pre><code>sudo pip install package-name
</code></pre>
<p>It will default install <code>python2</code> version of <code>package-name</code>.</p>
<p>Some package supports both <code>python2</code> and <code>python3</code>.<br/>
How to install <code>python3</code> version of <code>package-name</code> via <code>pip</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You may want to build a <code>virtualenv</code> of python3, then install packages of python3 after activating the virtualenv. So your system won't be messed up :)</p>
<p>This could be something like:</p>
<pre><code>virtualenv -p /usr/bin/python3 py3env
source py3env/bin/activate
pip install package-name
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Ubuntu 12.10+ and Fedora 13+ have a package called <code>python3-pip</code> which will install <code>pip-3.2</code> (or <code>pip-3.3</code>, <code>pip-3.4</code> or <code>pip3</code> for newer versions) without needing this jumping through hoops.</strong></p>
<hr/>
<p>I came across this and fixed this without needing the likes of <code>wget</code> or virtualenvs (assuming Ubuntu 12.04):</p>
<ol>
<li>Install package <code>python3-setuptools</code>: run <code>sudo aptitude install python3-setuptools</code>, this will give you the command <code>easy_install3</code>.</li>
<li>Install pip using Python 3's setuptools: run <code>sudo easy_install3 pip</code>, this will give you the command <code>pip-3.2</code> like kev's solution.</li>
<li>Install your PyPI packages: run <code>sudo pip-3.2 install &lt;package&gt;</code> (installing python packages into your base system requires root, of course).</li>
<li>â€¦</li>
<li>Profit!</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<h1>Short Answer</h1>
<pre class="lang-sh prettyprint-override"><code>sudo apt-get install python3-pip
sudo pip3 install MODULE_NAME
</code></pre>
<p>Source: <a href="https://stackoverflow.com/questions/10763440/how-to-install-python3-version-of-package-via-pip#comment17706098_12262143">Shashank Bharadwaj's comment</a></p>
<h1>Long Answer</h1>
<p>The short answer applies only on newer systems. On some versions of Ubuntu the command is <code>pip-3.2</code>:</p>
<pre class="lang-sh prettyprint-override"><code>sudo pip-3.2 install MODULE_NAME
</code></pre>
<p>If it doesn't work, this method should work for any Linux distro and <a href="https://pip.pypa.io/en/stable/installing/#python-and-os-compatibility" rel="noreferrer">supported version</a>:
</p>
<pre><code>sudo apt-get install curl
curl https://bootstrap.pypa.io/get-pip.py | sudo python3
sudo pip3 install MODULE_NAME
</code></pre>
<p>If you don't have <code>curl</code>, use <code>wget</code>. If you don't have <code>sudo</code>, switch to <code>root</code>. If <code>pip3</code> symlink does not exists, check for something like pip-3.<strong>X</strong></p>
<p>Much python packages require also the dev package, so install it too:</p>
<pre class="lang-sh prettyprint-override"><code>sudo apt-get install python3-dev
</code></pre>
<p>Sources:<br/>
<a href="https://askubuntu.com/questions/104514/python-installing-packages-with-pip">python installing packages with pip</a><br/>
<a href="http://www.pip-installer.org/en/latest/installing.html" rel="noreferrer">Pip latest install </a></p>
<p>Check also <a href="https://stackoverflow.com/questions/10763440/how-to-install-python3-version-of-package-via-pip#15269233">Tobu's answer</a> if you want an even more upgraded version of Python.</p>
<p>I want to add that using a virtual environment is usually the preferred way to develop a python application, so @felixyan answer is probably the best in an ideal world. But if you really want to install that package globally, or if need to test / use it frequently without activating a virtual environment, I suppose installing it as a global package is the way to go.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, on <strong>ubuntu 13.10/14.04</strong>, things are a little different.</p>
<h2>Install</h2>
<pre><code>$ sudo apt-get install python3-pip
</code></pre>
<h2>Install packages</h2>
<pre><code>$ sudo pip3 install packagename
</code></pre>
<p>NOT <code>pip-3.3 install</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way to install latest <code>pip2</code>/<code>pip3</code> and corresponding packages:</p>
<pre><code>curl https://bootstrap.pypa.io/get-pip.py | python2
pip2 install package-name    

curl https://bootstrap.pypa.io/get-pip.py | python3
pip3 install package-name
</code></pre>
<p><sup><strong>Note:</strong> please run these commands as <code>root</code></sup></p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same problem while trying to install pylab, and I have found this <a href="https://docs.python.org/3/installing/" rel="noreferrer">link</a></p>
<p>So what I have done to install pylab within Python 3 is:</p>
<pre><code>python3 -m pip install SomePackage
</code></pre>
<p>It has worked properly, and as you can see in the link you can do this for every Python version you have, so I guess this solves your problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Old question, but none of the answers satisfies me.  One of my systems is running Ubuntu 12.04 LTS and for some reason there's no package <code>python3-pip</code> or <code>python-pip</code> for Python 3.  So here is what I've done (all commands were executed as root):</p>
<ul>
<li><p>Install <code>setuptools</code> for Python3 in case you haven't.</p>
<pre><code>apt-get install python3-setuptools
</code></pre>
<p>or</p>
<pre><code>aptitude install python3-setuptools
</code></pre></li>
<li><p>With Python 2.4+ you can invoke <code>easy_install</code> with specific Python version by using <code>python -m easy_install</code>.  So <code>pip</code> for Python 3 could be installed by:</p>
<pre><code>python3 -m easy_install pip
</code></pre></li>
<li><p>That's it, you got <code>pip</code> for Python 3.  Now just invoke <code>pip</code> with the specific version of Python to install package for Python 3.  For example, with Python 3.2 installed on my system, I used:</p>
<pre><code>pip-3.2 install [package]
</code></pre></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>If you have pip installed in both pythons, and both are in your path, just use:</p>
<pre><code>$ pip-2.7 install PACKAGENAME
$ pip-3.2 install PACKAGENAME
</code></pre>
<p>References:</p>
<ul>
<li><a href="http://www.pip-installer.org/docs/pip/en/0.8.3/news.html#id4" rel="nofollow noreferrer">http://www.pip-installer.org/docs/pip/en/0.8.3/news.html#id4</a></li>
<li><a href="https://github.com/pypa/pip/issues/200" rel="nofollow noreferrer">https://github.com/pypa/pip/issues/200</a></li>
</ul>
<p>This is a duplicate of question <a href="https://stackoverflow.com/questions/2812520/pip-dealing-with-multiple-python-versions/4910393#4910393">#2812520</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If your system has <code>python2</code> as default, use below command to install packages to <code>python3</code></p>
<p><code>$ python3 -m pip install &lt;package-name&gt;</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Easy enough:</p>
<pre><code>sudo aptitude install python3-pip
pip-3.2 install --user pkg
</code></pre>
<p>If you want Python 3.3, which isn't the default as of Ubuntu 12.10:</p>
<pre><code>sudo aptitude install python3-pip python3.3
python3.3 -m pip.runner install --user pkg
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can alternatively just run <code>pip3 install packagename</code> instead of <code>pip</code>,</p>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, you need to install pip for the Python 3 installation that you want. Then you run that pip to install packages for that Python version.</p>
<p>Since you have both pip and python 3 in /usr/bin, I assume they are both installed with a package manager of some sort. That package manager should also have a Python 3 pip. That's the one you should install.</p>
<p>Felix' recommendation of virtualenv is a good one. If you are only testing, or you are doing development, then you shouldn't install the package in the system python. Using virtualenv, or even building your own Pythons for development, is better in those cases.</p>
<p>But if you actually <em>do</em> want to install this package in the system python, installing pip for Python 3 is the way to go.</p>
</div>
<div class="post-text" itemprop="text">
<p>Although the question relates to Ubuntu, let me contribute by saying that I'm on Mac and my <code>python</code> command defaults to Python 2.7.5. I have Python 3 as well, accessible via <code>python3</code>, so knowing the pip package origin, I just downloaded it and issued <code>sudo python3 setup.py install</code> against it and, surely enough, only Python 3 has now this module inside its site packages. Hope this helps a wandering Mac-stranger.</p>
</div>
<div class="post-text" itemprop="text">
<p>Execute the pip binary directly.</p>
<p>First locate the version of PIP you want.</p>
<pre><code>jon-mint python3.3 # whereis ip
ip: /bin/ip /sbin/ip /usr/share/man/man8/ip.8.gz /usr/share/man/man7/ip.7.gz
</code></pre>
<p>Then execute.</p>
<pre><code>jon-mint python3.3 # pip3.3 install pexpect
Downloading/unpacking pexpect
  Downloading pexpect-3.2.tar.gz (131kB): 131kB downloaded
  Running setup.py (path:/tmp/pip_build_root/pexpect/setup.py) egg_info for package pexpect

Installing collected packages: pexpect
  Running setup.py install for pexpect

Successfully installed pexpect
Cleaning up...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p>You should install ALL dependencies:</p>
<p><code>sudo apt-get install build-essential python3-dev python3-setuptools  python3-numpy python3-scipy libatlas-dev libatlas3gf-base</code></p></li>
<li><p>Install pip3(if you have installed, please look step 3):</p>
<p><code>sudo apt-get install python3-pip</code></p></li>
<li><p>Iinstall scikit-learn by pip3</p>
<p><code>pip3 install -U scikit-learn</code></p></li>
<li><p>Open your terminal and entry python3 environment, type <code>import sklearn</code> to check  it.</p></li>
</ol>
<p>Gook Luck!</p>
</div>
<div class="post-text" itemprop="text">
<p>If you just installed Python 3.3 and now want to install pip 3.3 <strong>locally</strong>:</p>
<pre><code>wget http://python-distribute.org/distribute_setup.py
python3.3 -m distribute_setup install --user
easy_install-3.3 --user pip
</code></pre>
<p>This works in Ubuntu 12.04. Don't forget to add <code>$HOME/.local/bin</code> to your path.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another way to install python3 is using wget. Below are the steps for installation.</p>
<pre><code>wget http://www.python.org/ftp/python/3.3.5/Python-3.3.5.tar.xz
tar xJf ./Python-3.3.5.tar.xz
cd ./Python-3.3.5
./configure --prefix=/opt/python3.3
make &amp;&amp; sudo make install
</code></pre>
<p>Also,one can create an alias for the same using</p>
<pre><code>echo 'alias py="/opt/python3.3/bin/python3.3"' &gt;&gt; ~/.bashrc
</code></pre>
<p>Now open a new terminal and type <strong>py</strong> and press Enter. </p>
</div>
<span class="comment-copy">Are there separated <code>pip-2.7</code> and <code>pip-3.2</code> commands in your system?</span>
<span class="comment-copy">There are only one <code>pip</code>.</span>
<span class="comment-copy">Can I change the first line of <code>/usr/bin/pip</code> from <code>#!/usr/bin/python</code> to <code>#!/usr/bin/python3</code> ?</span>
<span class="comment-copy">Yes, but I would recommend you to <code>cp</code> the <code>pip</code> to <code>pip-3.2</code> then change it, so you would get a better choice next time :)</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/2812520/pip-dealing-with-multiple-python-versions">pip: dealing with multiple Python versions?</a></span>
<span class="comment-copy">Does virtualenv install pip even if you don't have it installed in the main Python 3? If so, then this does solve his problem. Otherwise not.</span>
<span class="comment-copy">Yes, virtualenv installs pip.</span>
<span class="comment-copy">OK. I still think the answer doesn't really answer his question in a generic way, though.</span>
<span class="comment-copy">This works for me. Two additions: You can leave the <code>virtualenv</code> with <code>deactivate</code> and python3 might be installed at a different location. Mine is at <code>/usr/local/bin/python3</code>, which you can find out with <code>which python3</code></span>
<span class="comment-copy">Following @LennartRegebro and @user2503795, I can confirm that this is a bit more robust: <code>virtualenv -p `which python3` py3env</code></span>
<span class="comment-copy">Perfect and proper, this should be the accepted answer. However you should specify <code>sudo pip-3.2 install &lt;package&gt;</code>, superuser permissions are required.</span>
<span class="comment-copy">You can combine steps 1 and 2 and just do: <code>sudo apt-get install python3-pip</code></span>
<span class="comment-copy"><a href="http://packages.ubuntu.com" rel="nofollow noreferrer">packages.ubuntu.com</a> shows this super handy package for Ubuntu 12.10, but not for 12.04: <a href="http://packages.ubuntu.com/search?keywords=python3-pip&amp;searchon=names&amp;exact=1&amp;suite=precise&amp;section=all" rel="nofollow noreferrer">packages.ubuntu.com/â€¦</a> (great find though ;))</span>
<span class="comment-copy">The <code>pip3</code> seems to work in Ubuntu 13.10.</span>
<span class="comment-copy">pip-3.3, pip-3.4 etc no longer work.  It is now just: pip, pip2, pip3.  (At least on Ubuntu 14.04)</span>
<span class="comment-copy">The <code>curl</code> call borks for me with a syntax error on line 48.</span>
<span class="comment-copy">@icedwater: can't help if you don't post the trace (use pastebin).</span>
<span class="comment-copy">Thanks @MarcoSulla, but I just re-ran this and noticed a <code>UserWarning: Support for Python 3.0-3.2 has been dropped. Future versions will fail here.</code> The paste is at <a href="http://ix.io/1fX5" rel="nofollow noreferrer">ix.io/1fX5</a> for all interested parties :)</span>
<span class="comment-copy">A <code>syntax error</code> might occur when using a version of python that is no longer supported by <code>pip</code>. The above commands do work with <b>python3.5</b></span>
<span class="comment-copy">if pip is installed already and it still doesn't work, I recommend to <code>sudo apt-get purge  python3-pip</code> first</span>
<span class="comment-copy">Works on Ubuntu 14.04</span>
<span class="comment-copy">Works on Ubuntu 16.04</span>
<span class="comment-copy">This will work on all Ubuntu versions starting from 12.04</span>
<span class="comment-copy">Though Fedora has a <code>python3-pip</code> package, it does not create a <code>pip3</code> or <code>pip-3</code> command as suggested in other answers.  This answer indeed works.</span>
<span class="comment-copy">This works great, but it assumes that <code>pip</code> has already been installed via: <code>sudo apt-get install python3-pip</code></span>
<span class="comment-copy">This worked for me. Thanks.</span>
<span class="comment-copy">Your answer is a duplicate to many answers on this page. (Search "pip3" in text) I don't see any added value of this.</span>
