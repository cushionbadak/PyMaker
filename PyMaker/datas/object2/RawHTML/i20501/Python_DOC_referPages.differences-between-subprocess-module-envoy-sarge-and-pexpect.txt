<div class="post-text" itemprop="text">
<p>I am thinking about making a program that will need to send input and take output from the various aircrack-ng suite tools. I know of a couple of python modules like subprocess, envoy, sarge and pexpect that would provide the necessary functionality. Can anyone advise on what I should be using or not using, especially as I'm new to python.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>As the maintainer of <code>sarge</code>, I can tell you that its goals are broadly similar to <code>envoy</code> (in terms of ease of use over <code>subprocess</code>) and there is (IMO) more functionality in <code>sarge</code> with respect to:</p>
<ul>
<li>Cross-platform support for bash-like syntax (e.g.use of <code>&amp;&amp;</code>, <code>||</code>, <code>&amp;</code> in command lines)</li>
<li>Better support for capturing <code>subprocess</code> output streams and working with them asynchronously</li>
<li>More documentation, especially about the internals and peripheral issues like threading+forking in the context of using subprocess</li>
<li>Support for prevention of shell injection attacks</li>
</ul>
<p>Of course YMMV, but you can check out <a href="http://sarge.readthedocs.org/en/latest/index.html" rel="noreferrer">the docs</a>, they're reasonably comprehensive.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>subprocess</strong> - is a standard library module, so it'll be available with python installation. But it has a reputation of hard to use since it's api is non-intuitive.  </p>
<p><strong>envoy</strong> - is a third party module that wraps around subprocess. It was written to be an easy to use alternative to subprocess. The author of envoy Kenneth Reitz is famous for his <a href="http://python-for-humans.heroku.com/" rel="nofollow">Python for Humans</a> philosophy. </p>
<p>I'm not familiar with the other two. </p>
</div>
<div class="post-text" itemprop="text">
<h2>pexpect</h2>
<p>In 2015, pexpect does not work on windows. Rumored to add "experimental" support <a href="https://github.com/pexpect/pexpect/issues/17" rel="nofollow noreferrer">in the next version</a>, but this has been a rumor for a long time (I'm not holding my breath).</p>
<p>Having written many applications using pexpect (and loving it), I am now sorry because one of the things I love about python (that it is cross platform) is not true for my applications.</p>
<p>If you plan to ever add windows support, for the moment, avoid pexpect.</p>
<h2>envoy</h2>
<p>Not much activity in the last year. And few commits (12 total) since 2012. Not very promising for its future.</p>
<p>Internally it uses shlex in a way that is not compatible with windows paths (the commands must use '/' not '\' for directory separators). A workaround (when using pathlib) is to call <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.as_posix" rel="nofollow noreferrer">as_posix()</a> on path objects before passing them as commands. See <a href="https://stackoverflow.com/a/23811981/880509">this answer</a>.</p>
<p>Getting access to the internal streams (i.e. I want to parse the output to have some updating scrollbars), seems possible but is not documented.</p>
<h2>sarge</h2>
<p>Works on windows out-of-the-box and has an expect() method that should provide functionality similar to pexpect (allowing me to update a scrollbar). Recent activity, but it is hosted on <a href="https://github.com/vsajip/sarge" rel="nofollow noreferrer">gitlab</a> and <a href="https://bitbucket.org/vinay.sajip/sarge/" rel="nofollow noreferrer">bitbucket</a> (very confusing).</p>
<h1>Personal Conclusion</h1>
<p>I'm moving <em>from</em> <strong>pexpect</strong> <em>to</em> <strong>sarge</strong> for future development. Seems to provide similar feature set to pexpect and supports windows.</p>
</div>
<span class="comment-copy">I haven't heard of most of those libraries, but in general if there's a standard module that does everything I need, I'd favor it over any 3rd-party libraries.</span>
<span class="comment-copy">You may need <code>pexpect</code> instead of <code>subprocess</code> when you want bidirectional communication with a process. I don't know the other two libraries.</span>
<span class="comment-copy">Testing sarge vs envoy (I am replacing pexpect to add windows support to my application), I found that envoy uses shlex.This results in native windows paths not being supported (shlex removes "\" chars). This can be worked around (when using pathlib) by calling <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.as_posix" rel="nofollow noreferrer">as_posix()</a> before passing paths to envoy. However, sarge works with windows paths out-of-the-box.</span>
