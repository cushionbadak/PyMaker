<div class="post-text" itemprop="text">
<p>How do I extract a zip to memory?</p>
<p>My attempt (returning <code>None</code> on <code>.getvalue()</code>):</p>
<pre><code>from zipfile import ZipFile
from StringIO import StringIO

def extract_zip(input_zip):
    return StringIO(ZipFile(input_zip).extractall())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>extractall</code> extracts to the file system, so you won't get what you want. To extract a file in memory, use the <a href="https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.read" rel="nofollow noreferrer"><code>ZipFile.read()</code></a> method.</p>
<p>If you really need the full content in memory, you could do something like:</p>
<pre><code>def extract_zip(input_zip):
    input_zip=ZipFile(input_zip)
    return {name: input_zip.read(name) for name in input_zip.namelist()}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Frequently working with archive i would recommend making a tool for comfortly working with in-memory archives. Something like this:
<code></code></p>
<pre><code>import zipfile
import StringIO

class InMemoryZip(object):

   def __init__(self):
       # Create the in-memory file-like object for working w/imz
       self.in_memory_zip = StringIO.StringIO()

   # Just zip it, zip it
   def append(self, filename_in_zip, file_contents):
       # Appends a file with name filename_in_zip and contents of
       # file_contents to the in-memory zip.
       # Get a handle to the in-memory zip in append mode
       zf = zipfile.ZipFile(self.in_memory_zip, "a", zipfile.ZIP_DEFLATED, False)

       # Write the file to the in-memory zip
       zf.writestr(filename_in_zip, file_contents)

       # Mark the files as having been created on Windows so that
       # Unix permissions are not inferred as 0000
       for zfile in zf.filelist:
           zfile.create_system = 0       

       return self

   def read(self):
       # Returns a string with the contents of the in-memory zip.
       self.in_memory_zip.seek(0)
       return self.in_memory_zip.read()

   # Zip it, zip it, zip it
   def writetofile(self, filename):
       # Writes the in-memory zip to a file.
       f = file(filename, "wb")
       f.write(self.read())
       f.close()

if __name__ == "__main__":
# Run a test
   imz = InMemoryZip()
   imz.append("testfile.txt", "Make a test").append("testfile2.txt", "And another one")
   imz.writetofile("testfile.zip")
</code></pre>
<p></p></div>
<div class="post-text" itemprop="text">
<p>Probable reasons:</p>
<p>1.This module does not currently handle multi-disk ZIP files.
      (OR)<br/>
2.Check with StringIO.getvalue() weather Unicode Error is coming up.</p>
</div>
<span class="comment-copy">See also: <a href="https://stackoverflow.com/questions/5710867">stackoverflow.com/questions/5710867</a></span>
<span class="comment-copy">No. <a href="http://docs.python.org/library/zipfile#zipfile.ZipFile.extractall" rel="nofollow noreferrer"><code>extractall</code></a> doesn't return anything (well, <code>None</code> by default), and that's what he gets.</span>
