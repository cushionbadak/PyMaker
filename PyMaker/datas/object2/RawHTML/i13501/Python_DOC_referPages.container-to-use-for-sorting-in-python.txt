<div class="post-text" itemprop="text">
<p>The task is to create a spam filter using machine learning. In order to do feature selection I have implemented a method that calculates MI for each word but then I want to return N words that have a high MI and choose between them based on how many times they appear in the spam email.</p>
<p>The reason for the additional requirement is that we are using the small lingspam set and there is little difference between the results and there are about 3000 words that share the same top MI value.</p>
<p>We are required to do this in Python and I have currently implemented this using dictionaries but I can't find a container type that would let me do what I need.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can sort the items of a dictionary (you'll have to use a custom key), where the items are stored as a list.</p>
<pre><code>&gt;&gt;&gt; some_dictionary = {"a": 1, "b": 5, "c": 0, "e": 2}
&gt;&gt;&gt; sorted(some_dictionary.items())
[('a', 1), ('b', 5), ('c', 0), ('e', 2)]
&gt;&gt;&gt; sorted(some_dictionary.items(), key=lambda i:i[1])                                                                                                                                                                                                                            
[('c', 0), ('a', 1), ('e', 2), ('b', 5)]
&gt;&gt;&gt; 
</code></pre>
<p>Where <code>.items()</code> lets you get the items in the dictionary (in an arbitrary order):</p>
<pre><code>&gt;&gt;&gt; some_dictionary.items()
dict_items([('a', 1), ('b', 5), ('e', 2), ('c', 0)])
</code></pre>
<p>Note that <code>dict_items</code> is an iterable, which just wraps a list in this case.</p>
</div>
<span class="comment-copy">Ah excellent - I wasn't aware of that use of sorted with lambda</span>
<span class="comment-copy">It's explained better in the <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer">Python docs</a>: "<i>key</i> specifies a function of one argument that is used to extract a comparison key from each list element"</span>
