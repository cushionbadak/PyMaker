<div class="post-text" itemprop="text">
<p>I am trying to solve this issue.</p>
<p>I have a list like that:</p>
<pre><code>  g = ['hey','man','sup']
</code></pre>
<p>and i want 3 different text files like "hey.txt","man.txt","sup.txt".</p>
<p>I used;</p>
<pre><code>f = open('hey.txt','w')
sys.stdout = f
....
</code></pre>
<p>but is there a way to do it like that?;</p>
<pre><code>for x in range(3):
    f = open('g[x].txt','w')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you are almost there</p>
<p>Instead of this </p>
<pre><code>for x in range(3):
    f = open('g[x].txt','w')
</code></pre>
<p>Do this:</p>
<pre><code>for x in range(3):
    f = open(g[x]+'.txt','w')
</code></pre>
<p>The actual problem is <code>'g[x].txt'</code> it is a string and it's value does not change during each iteration where as to get <code>g</code> elements we use g[x] which return a string which then can be appended with <code>'.txt'</code> to form the file name </p>
<p>You could use <a href="https://stackoverflow.com/questions/3693771/trying-to-understand-python-with-statement-and-context-managers"><code>context manager to open the file object</code></a></p>
<p><strong>i.e)</strong></p>
<pre><code>for x in range(3):
    with open(g[x]+'.txt','w') as f:
</code></pre>
<p>If you want both index and value then you could use <a href="https://stackoverflow.com/questions/22171558/what-does-enumerate-mean"><strong>enumerator</strong> </a></p>
<p><strong>i.e.)</strong></p>
<pre><code>for index,value in enumerate(g):
    with open(value+'.txt','w') as f:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use string <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow">formatting</a>:</p>
<pre><code>for filename in g:
    f = open('{}.txt'.format(filename),'w')
</code></pre>
</div>
<span class="comment-copy">Thank you so much!</span>
<span class="comment-copy">You could also iterate the <i>iterable</i> directly: ` for value in g:`</span>
<span class="comment-copy">@wap26 yes we could :)</span>
<span class="comment-copy"><code>for x in g:</code> would be even better... especially if you replaced <code>x</code> with <code>filename</code> to get expressive variable names.</span>
