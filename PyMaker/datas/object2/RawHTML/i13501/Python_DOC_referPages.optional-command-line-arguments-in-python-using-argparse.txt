<div class="post-text" itemprop="text">
<p>I have a script which is meant to be used like this:
<code>usage: installer.py dir [-h] [-v]</code></p>
<p><code>dir</code> is a positional argument which is defined like this:</p>
<pre><code>parser.add_argument('dir', default=os.getcwd())
</code></pre>
<p>I want the <code>dir</code> to be optional: when it's not specified it should just be <code>cwd</code>.</p>
<p>Unfortunately when I don't specify the <code>dir</code> argument, I get <code>Error: Too few arguments</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/2/library/argparse.html#nargs" rel="noreferrer"><code>nargs='?'</code></a> (or <code>nargs='*'</code>  if you will need more than one dir)</p>
<pre><code>parser.add_argument('dir', nargs='?', default=os.getcwd())
</code></pre>
<p>extended example:</p>
<pre><code>&gt;&gt;&gt; import os, argparse
&gt;&gt;&gt; parser = argparse.ArgumentParser()
&gt;&gt;&gt; parser.add_argument('-v', action='store_true')
_StoreTrueAction(option_strings=['-v'], dest='v', nargs=0, const=True, default=False, type=None, choices=None, help=None, metavar=None)
&gt;&gt;&gt; parser.add_argument('dir', nargs='?', default=os.getcwd())
_StoreAction(option_strings=[], dest='dir', nargs='?', const=None, default='/home/vinay', type=None, choices=None, help=None, metavar=None)
&gt;&gt;&gt; parser.parse_args('somedir -v'.split())
Namespace(dir='somedir', v=True)
&gt;&gt;&gt; parser.parse_args('-v'.split())
Namespace(dir='/home/vinay', v=True)
&gt;&gt;&gt; parser.parse_args(''.split())
Namespace(dir='/home/vinay', v=False)
&gt;&gt;&gt; parser.parse_args(['somedir'])
Namespace(dir='somedir', v=False)
&gt;&gt;&gt; parser.parse_args('somedir -h -v'.split())
usage: [-h] [-v] [dir]

positional arguments:
  dir

optional arguments:
  -h, --help  show this help message and exit
  -v
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As an extension to @VinaySajip answer. <a href="https://docs.python.org/2/library/argparse.html#nargs">There are additional <code>nargs</code> worth mentioning</a>.</p>
<ol>
<li><code>parser.add_argument('dir', nargs=1, default=os.getcwd())</code> </li>
</ol>
<p>N (an integer). N arguments from the command line will be gathered together into a list</p>
<ol start="2">
<li><code>parser.add_argument('dir', nargs='*', default=os.getcwd())</code> </li>
</ol>
<p>'*'. All command-line arguments present are gathered into a list. <strong>Note</strong> that it generally doesn't make much sense to have more than one positional argument with <code>nargs='*'</code>, but multiple optional arguments with <code>nargs='*'</code> is possible.</p>
<ol start="3">
<li><code>parser.add_argument('dir', nargs='+', default=os.getcwd())</code></li>
</ol>
<p>'+'. Just like '*', all command-line args present are gathered into a list. Additionally, an error message will be generated if there wasnâ€™t at least one command-line argument present.</p>
<ol start="4">
<li><code>parser.add_argument('dir', nargs=argparse.REMAINDER, default=os.getcwd())</code></li>
</ol>
<p><code>argparse.REMAINDER</code>. All the remaining command-line arguments are gathered into a list. This is commonly useful for command line utilities that dispatch to other command line utilities</p>
<p>If the <code>nargs</code> keyword argument is not provided, the number of arguments consumed is determined by the action. Generally this means a single command-line argument will be consumed and a single item (not a list) will be produced.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>parser.add_argument</code> also has a switch <strong>required</strong>. You can use <code>required=False</code>.
Here is a sample snippet with Python 2.7:</p>
<pre><code>parser = argparse.ArgumentParser(description='get dir')
parser.add_argument('--dir', type=str, help='dir', default=os.getcwd(), required=False)
args = parser.parse_args()
</code></pre>
</div>
<span class="comment-copy">Do the <code>?</code> and <code>*</code> mean the same thing they mean in regular expressions (i.e. <code>?</code> requires 0 or 1, and <code>*</code> requiring 0 or more)? If so, does <code>+</code> work as well?</span>
<span class="comment-copy">@dolan: Yes, <code>+</code> works, too. See <a href="http://docs.python.org/2/library/argparse.html#nargs" rel="nofollow noreferrer">docs.python.org/2/library/argparse.html#nargs</a> for the details.</span>
<span class="comment-copy">is there some way to get dir to show up in optional arguments?  or it seems that positional arguments should have a preceeding 'optional' qualifier.  is it possible to register (as far as help is concerned) it as such?</span>
<span class="comment-copy">@ant From the above, you can see that dir is optional (that it appears in square brackets in argparse output indicates this).</span>
<span class="comment-copy">Tx! Access dir from <code>options.dir</code>, not <code>args.dir</code>, as I was trying!</span>
<span class="comment-copy">It should be noted however that <code>nargs='?'</code> does not produce a list.</span>
<span class="comment-copy">@A-B-B Last line of the answer <code>Generally this means a single command-line argument will be consumed and a single item (not a list) will be produced.</code> Hope this helps...</span>
<span class="comment-copy">The quoted line refers to the case of not defining <code>nargs</code>, but <code>nargs='?'</code> is defining it. The <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">docs</a> say: <i>'?'. One argument will be consumed from the command line if possible, and produced as a single item. If no command-line argument is present, the value from default will be produced.</i></span>
<span class="comment-copy">@A-B-B Just edit the answer if you feel that something is missing. Thanks.</span>
<span class="comment-copy">What is the difference between <code>nargs=argparse.REMAINDER</code> and <code>nargs='*'</code>, as it seems to me, they are identical in their effect (tested in Python 2.7.10 and Python 3.6.1)?</span>
<span class="comment-copy">OP was asking about positional params, not '--dir'.  'required' is an invalid argument for positionals.  And 'false' was a typo, she meant 'False'.  +1 for newbie, -1 for sloppiness.</span>
