<div class="post-text" itemprop="text">
<p>I have to create a function that takes a message the user wants to encrypt and returns the encrypted string. The encryption follows a set of rules:</p>
<ul>
<li>Character: In the alphabet and uppercase [A-Z], Replace with: Lowercase character and add a ^ character afterwards</li>
<li>Character: In the alphabet and lowercase [a-z], Replace with: Do not change</li>
<li>Character: 1, Replace with: @</li>
<li>Character: 2, Replace with: #</li>
<li>Character: 3, Replace with: $</li>
<li>Character: Any other character, Replace with: *</li>
</ul>
<p>This is my code so far. It'll only return <code>'p^'</code>, so I figured something is wrong with my first <code>if</code> statement and the return value. If someone could steer me in the right direction I'd appreciate it!</p>
<pre><code>def encryptMessage(secretMsg):

secretMsg = str(secretMsg)
u = secretMsg.upper()
symbol = "^"
for x in secretMsg:
    if u in secretMsg:
        return u.lower() + symbol
        secretMsg += x
    return secretMsg
    if u.lower():
        return secretMsg
    elif 1 in secretMsg:
        return secretMsg.replace(1, "@")
    elif 2 in secretMsg:
        return secretMsg.replace(2, "#")
    elif 3 in secretMsg:
        return secretMsg.replace(3, "$")
    num = u &gt; 3
    if num in secretMsg:
        return secretMsg.replace(num, "*")
return secretMsg
</code></pre>
<p><strong>Examples:</strong></p>
<p><em>Note:</em> These are examples of what the program should return, not actual instances of the program running.</p>
<pre><code>&gt;&gt;&gt; encryptMessage("my123password")
'my@#$password'
&gt;&gt;&gt; encryptMessage("Dan()123Barrun")
'd^an**@#$b^arrun'
&gt;&gt;&gt; encryptMessage("PASS99cats")
'p^a^s^s^**cats'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let's start from the top and work our way down.</p>
<p>First off, this is not encryption.</p>
<p>This is just adding random characters to text, not converting the data into cipher-text which can then be decrypted via a key. If anything I'd call it obfuscation.</p>
<hr/>
<p>Now that we have that out of the way, let's tell you why your code is not working.</p>
<pre><code>def encryptMessage(secretMsg):
    secretMsg = str(secretMsg)
    u = secretMsg.upper()
    symbol = "^"
    for x in secretMsg:
        if u in secretMsg:
            return u.lower() + symbol # Your function stops here b/c return
            secretMsg += x
        return secretMsg # Use print() to display, return will stop your function.
        # Nothing below here is executed because of the return above.
        if u.lower(): # This is always True unless u is empty.
            return secretMsg # Function will then stop here.
        elif 1 in secretMsg: # This will raise an error, make that 1 a string
            return secretMsg.replace(1, "@") # Same here
        elif 2 in secretMsg: # here
            return secretMsg.replace(2, "#") # here
        elif 3 in secretMsg: # here
            return secretMsg.replace(3, "$") # and here
        num = u &gt; 3 # This will return True if u &gt; 3 or False if u &lt;= 3, not any number greater than u.
        if num in secretMsg:
            return secretMsg.replace(num, "*")
    return secretMsg
</code></pre>
<p>Please research the return statement through <a href="https://stackoverflow.com/questions/7129285/why-would-you-use-the-return-statement-in-python">this stackoverflow post</a> or through <a href="https://www.youtube.com/watch?v=2CythYpk7c0" rel="nofollow">this video</a>.</p>
<hr/>
<p>Since you were appreciative of feedback, I have decided to go one step further in helping and am going to give you a better way to do the program so you can learn from it.</p>
<pre><code>import string # This module holds lists of characters that you would find useful.

def encryptMessage(original_message):
    original_message = str(original_message)
    secret_message = []
    conversions = {"1": "@", "2": "#", "3": "$"}
    for letter in original_message:
        if letter in string.ascii_uppercase:
            secret_message.append(letter.lower() + "^")
        elif letter in '123':
            secret_message.append(conversions[letter])
        elif letter in string.ascii_lowercase:
            secret_message.append(letter)
        else:
            secret_message.append("*")
    return ''.join(secret_message)
</code></pre>
<p>If you want to know what the variable <code>conversions</code> is, it is known as a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">dictionary</a>.</p>
<p>If you want to know what the <code>[]</code> brackets denote, they denote a <a href="http://www.tutorialspoint.com/python/python_lists.htm" rel="nofollow">list</a>. Note that <code>.append()</code> is a function that adds a new element on to the end of a list or compatible data structure, and that <code>''.join()</code> is a function which joins a list together into a string.</p>
<p>If you want to know what I'm doing with <code>string.ascii_uppercase</code>, I'm calling a variable defined in the <code>string</code> module. For more information on modules, please look at <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow">the documentation</a>.</p>
<p>For more information on how to work with Python's control flow statements, please, please, please read up on them <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow">here</a>.</p>
</div>
<span class="comment-copy">That's quite an impressive "encryption" algorithm... real James Bond security.</span>
<span class="comment-copy">More seriously, please <a href="https://stackoverflow.com/posts/32430125/edit">edit</a> to add a specific problem statement â€” "it doesn't work" can be assumed, but <i>how</i> does it not work? What error message or incorrect behavior is characteristic?</span>
<span class="comment-copy">@NathanTuggy It's not meant to be impressive, just something for class.</span>
<span class="comment-copy">Thanks for the feedback, and I'd just like to tell you that I didn't create this assignment. I understand that it's nothing like encryption so please tell that to the dude who made it. I found the function quite stupid to be honest but hey, I have to do it. Thanks again.</span>
<span class="comment-copy">@swimdawg12 Since you were quite a ways off with your first attempt, I've gone ahead and written a working program. However, remember that you must study the code on your own and learn how everything works otherwise none of this will do you any good. Just use the references that I've given you and read through each line of the code, character by character, until you know exactly what the program does and how it does it.</span>
<span class="comment-copy">I read through it and understand what's happening. I really do appreciate all your help as it was an important learning experience as well. I haven't learned many of the functions you've used yet but I can see how helpful they are for this function. Thanks again.:)</span>
