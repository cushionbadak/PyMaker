<div class="post-text" itemprop="text">
<p>I am new to Python programming. I am learning Python.</p>
<p>The below code helped me plot a bar chart. I am trying to understand the code.
I could not understand the lines 5,6,7 and 8. i.e.,</p>
<pre><code>N = len(data)
x = np.arange(1,N+1)
y = [num for (s, num) in data ]
labels = [ s for (s, num) in data ]
</code></pre>
<p>Also, why are we taking <code>x+width/2.0</code> while plotting x axis labels?
And, how to bring a small width at the start of the graph before House Theft? The bar usually starts with 0. I am not sure how to bring a small width before the start of the first bar. I tried, but it is not coming properly.</p>
<p>The full program is as follows.</p>
<pre><code>import matplotlib.pyplot as plt
import numpy as np
data = [ ("House Theft", 57), ("House Fire", 48),
            ("Car Theft", 156), ( "Car Accident", 245)]
N = len(data)
x = np.arange(1,N+1)
y = [num for (s, num) in data ]
labels = [ s for (s, num) in data ]
width = 0.35 #Use 1 to make it as a histogram
bar1 = plt.bar( x, y, width, color="y")
plt.ylabel( 'Frequency' )
plt.xticks(x + width/2.0, labels )
plt.show()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow">Multiple assignment, tuple/sequence packing/unpacking</a>:</p>
<pre><code>&gt;&gt;&gt; 
&gt;&gt;&gt; data = [ ("House Theft", 57), ("House Fire", 48),
            ("Car Theft", 156), ( "Car Accident", 245)]
&gt;&gt;&gt; 
&gt;&gt;&gt; for thing in data:
    (s, num) = thing
    print thing, '\t', s, '\t', num

('House Theft', 57)     House Theft     57
('House Fire', 48)      House Fire      48
('Car Theft', 156)      Car Theft       156
('Car Accident', 245)   Car Accident    245
&gt;&gt;&gt;
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; for (s, num) in data:
    print s, '\t\t', num


House Theft         57
House Fire          48
Car Theft           156
Car Accident        245
&gt;&gt;&gt;
</code></pre>
<hr/>
<p><code>plt.xticks(x + width/2.0, labels )</code> will offset the ticks on the x axis by on-half of the width.  Not sure why it was done, except maybe for the visual effect.</p>
<pre><code>&gt;&gt;&gt; x = np.arange(1,11)
&gt;&gt;&gt; x
array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
&gt;&gt;&gt; width = .5
&gt;&gt;&gt; x + width/2
array([  1.25,   2.25,   3.25,   4.25,   5.25,   6.25,   7.25,   8.25,   9.25,  10.25])
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ul>
<li><code>N = len(data)</code></li>
</ul>
<p>The value of <code>N</code> is now the length of the array <code>data</code>. In your case, the length of <code>data</code> is <code>4</code>.</p>
<ul>
<li><code>x = np.arange(1,N+1)</code></li>
</ul>
<p>The value of <code>x</code> is now <code>[1, 2, 3, 4]</code>, see this example from the <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.arange.html" rel="nofollow">doc</a>:</p>
<pre><code>&gt;&gt;&gt; np.arange(3)
array([0, 1, 2])
&gt;&gt;&gt; np.arange(3.0)
array([ 0.,  1.,  2.])
&gt;&gt;&gt; np.arange(3,7)
array([3, 4, 5, 6])
&gt;&gt;&gt; np.arange(3,7,2)
array([3, 5])
</code></pre>
<ul>
<li><code>y = [num for (s, num) in data ]</code></li>
</ul>
<p>The value of <code>y</code> is <code>[57, 48, 156, 245]</code>.</p>
<p><code>for (s, num) in data</code> iterates the values of <code>data</code>.
Since the values of <code>data</code> have two parts <code>("House Theft", 57)</code>, for each loop <code>s</code> takes the value of the first part (<code>"House Theft"</code> for the first loop) and <code>num</code> the value of the second part (<code>57</code> for the first loop). Since you only want the numbers (the second part), <code>num for (s, num) in data</code> only takes the <code>num</code> and your array is then filled with these since the expression is between brackets <code>[]</code>.</p>
<p>It creates an array from the "result" of the expression <code>num for (s, num) in data</code>.</p>
<ul>
<li><code>labels = [ s for (s, num) in data ]</code></li>
</ul>
<p>Same as before but with the strings instead of the value.</p>
<p><em>I still have confusions with nomenclature (array, tuple, listâ€¦), if someone could check my answer I'd appreciate it as it'd help both the author and me to learn the correct Python vocabulary!</em></p>
</div>
<span class="comment-copy"><code>data</code> is a list - <a href="https://docs.python.org/3/library/functions.html#len" rel="nofollow noreferrer"><code>len</code></a>.  <a href="http://docs.scipy.org/doc/numpy/user/" rel="nofollow noreferrer"><code>numpy</code></a>(<code>np</code>) is a library - <a href="http://docs.scipy.org/doc/numpy-1.6.0/reference/generated/numpy.arange.html" rel="nofollow noreferrer"><code>np.arange</code></a>.  Lines 7 and 8 are <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehensions</a>.</span>
<span class="comment-copy">@wwii what does this line <code>num for (s,num) in data</code> indicate? I understand data is the range. What these variables s and num indicate? Something to do with string and number? What they are trying to do exactly here?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer"><code>tuple</code> unpacking</a>.  One nice thing about an interpreted language is that you can easily play around with the language features in the shell to try stuff out and see how it works.  Python has a pretty good <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">Tutorial</a>.</span>
<span class="comment-copy">@wwii Ok. I will try now. I am reading the page you posted. If I get doubts, I will revert back. Thanks very much!</span>
<span class="comment-copy">I tried this now. It helps me understand it very clearly. This language is very nice. I worked in C, C++ and Java. Comparatively, everything is more simple here. Thanks a lot!</span>
<span class="comment-copy">Thank you very much for a clear explanation.</span>
