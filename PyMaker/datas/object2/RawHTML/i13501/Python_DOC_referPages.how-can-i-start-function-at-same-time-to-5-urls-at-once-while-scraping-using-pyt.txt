<div class="post-text" itemprop="text">
<p>I am scraping a website for information and want to get some information from the translated pages which are available for each page too.</p>
<p>So I have written a function to go to the appropriate page and get the translated info. Only problem is I have to wait while first it hits French, then Italian, then German, then Spanish and then English... I want to get them all at once.</p>
<p>I am crawling the site on the English version and then when I get to a target page, I want to process concurrently. I have read plenty about how you can multi-process the whole script for a scraper, but I just want it to do so at this one point in the scrape as it is where the bottleneck is. Here is what the code for that part looks like at the moment:</p>
<pre><code>lang = soup.find('div',{'id':'language-config'})
try: 
    french = translator(lang,language='Français')
    italian = translator(lang,language='Italiano')
    german = translator(lang,language='Deutsch')
    spanish = translator(lang,language='Español')
    english = translator(lang,language='English')
</code></pre>
<p>I want to fire off the five instances of the function at the same time if possible? Probably simple, just haven't had the lightbulb moment.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try the new <code>asyncio</code> <a href="https://docs.python.org/3/library/asyncio-task.html#example-parallel-execution-of-tasks" rel="nofollow">library</a>. Make a <code>wrapper_translator</code> wrapper that returns the output of your <code>translator</code> method at put the <code>@asyncio.coroutine</code> decorator.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is simple, just use <a href="https://docs.python.org/3/library/concurrent.futures.html" rel="nofollow">concurrent.futures</a>. Since your task is IO bound, <a href="https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor" rel="nofollow">ThreadPoolExecutor</a> would be enough.</p>
<pre><code>languages = ('Français', 'Italiano', 'Deutsch', 'Español', 'English')

with ThreadPoolExecutor(max_workers=5) as executor:
    for language in languages:
        executor.submit(translator, lang, language=language)
</code></pre>
</div>
