<div class="post-text" itemprop="text">
<p>I have written a for loop which gives me all the values of a specific letters place in the alphabet.</p>
<p>For example the word <em>hello</em> will give me the numbers 8, 5, 12, 12 and 14. Now I want to add them to another word which is the same length for e.g <em>abcde</em>, which would be 1, 2, 3, 4 and 5. Now I want to add the two numbers together but keeping the individual numbers for example 8+1, 5+2, 12+3, 12+4 and 14+5. </p>
<p>This is the code I have so far</p>
<pre><code>for letter in message:
    if letter.isalpha() == True:
        x = alphabet.find(letter)

for letter in newkeyword:
    if letter.isalpha() == True:
        y = alphabet.find(letter)
</code></pre>
<p>When I try adding <code>x</code> and <code>y</code>, I get a single number. Can someone help? </p>
</div>
<div class="post-text" itemprop="text">
<p>If you are planning to do further calculations with the numbers consider this solution which creates a list of tuples (also by using zip, as @Kashyap Maduri suggested):</p>
<pre><code>messages = zip(message, newkeyword)
positions = [(alphabet.find(m), alphabet.find(n)) for m, n in messages]
sums = [(a, b, a + b, "{}+{}".format(a,b)) for a, b in positions]
</code></pre>
<p>Each tuple in the sums list consists of both operands, their sum and a string representation of the addition.<br/>
Then you could for example print them sorted by their sum:</p>
<pre><code>for a, b, sum_ab, sum_as_str in sorted(sums, key = lambda x: x[2]):
    print(sum_as_str)
</code></pre>
<h1>Edit</h1>
<blockquote>
<p>when i run the program i want it to give me the answer of those sums for e.g 14+5=19 i just want the 19 part any ideas? â€“  Shahzaib Shuz Bari </p>
</blockquote>
<p>This makes it a lot easier:</p>
<pre><code>messages = zip(message, newkeyword)
sums = [alphabet.find(m) + alphabet.find(n) for m, n in messages]
</code></pre>
<p>And you get a list of all the sums.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow">zip</a> function. It <em>zips</em> 2 or more iterables together. For e.g. </p>
<pre><code>l1 = 'abc'
l2 = 'def'
zip(l1, l2)
# [('a', 'd'), ('b', 'e'), ('c', 'f')] in python 2.7
</code></pre>
<p>and</p>
<pre><code>list(zip(l1, l2))
# [('a', 'd'), ('b', 'e'), ('c', 'f')] in python 3    
</code></pre>
<p>So here is a solution for your problem:</p>
<pre><code>l = list(zip(message, newkeyword))
[str(alphabet.find(x)) + '+' + str(alphabet.find(y)) for x, y in l]
</code></pre>
</div>
<span class="comment-copy">Convert <code>x</code> and <code>y</code> to string and then do concatenation. Like <code>str(x) + '+' + str(y)</code> . And use <code>eval()</code> for evaluating expression!</span>
<span class="comment-copy">thanks how can i actually get the answer of the sums from there</span>
<span class="comment-copy">What exactly do you mean by the answer of the sums? If you need the results to be individual lists you can use <code>zip*</code> (the inverse of the zip function) like this: <code>all_as, all_bs, int_sums, str_sums = zip(*sums)</code>. Does this help?</span>
<span class="comment-copy">when i run the program i want it to give me the answer of those sums for e.g 14+5=19  i just want the 19 part  any ideas?</span>
<span class="comment-copy">Ah, ok :) I edited the answer accordingly.</span>
<span class="comment-copy">by any chance do you know how to implement a modulus so that if the sum is greater than 26 it loops back to 1 for example 20+20 should become 14</span>
