<div class="post-text" itemprop="text">
<p>I'm new to programming, and I was wondering how I can repeat an input section, if the user types in invalid data.</p>
<p>I want the application to just repeat the input section, instead of having to run the function all over again and making the user type everything all over again.</p>
<p>My guess is that I would have to change the "return main()" into something else.</p>
<pre><code>condition = input("What is the condition of the phone(New or Used)?")
if condition not in ["New", "new", "Used", "used"]:
    print("Invalid input")
    return main()

gps = input("Does the phone have gps(Yes or No)?")
if gps not in ["Yes", "yes", "No", "no"]:
    print("Invalid input")
    return main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can generalise the code to use a message prompt and a validating function:</p>
<pre><code>def validated_input(prompt, validate):
    valid_input = False
    while not valid_input:
        value = input(prompt)
        valid_input = validate(value)
    return value
</code></pre>
<p>eg:</p>
<pre><code>&gt;&gt;&gt; def new_or_used(value):
...     return value.lower() in {"new", "used"}

&gt;&gt;&gt; validate_input("New, or used?", new_or_used)
</code></pre>
<p>Or, simpler, but less flexible, pass in the valid values:</p>
<pre><code>def validated_input(prompt, valid_values):
    valid_input = False
    while not valid_input:
        value = input(prompt)
        valid_input = value.lower() in valid_values
    return value
</code></pre>
<p>And use:</p>
<pre><code>&gt;&gt;&gt; validate_input("New, or used?", {"new", "used"})
</code></pre>
<p>You could even use the valid values to create the input prompt:</p>
<pre><code>def validated_input(prompt, valid_values):
    valid_input = False
    while not valid_input:
        value = input(prompt + ': ' + '/'.join(valid_values))
        valid_input = value.lower() in valid_values
    return value
</code></pre>
<p>Which gives a prompt:</p>
<pre><code>&gt;&gt;&gt; validate_input("What is the condition of the phone?", {"new", "used"})
What is the condition of the phone?: new/used
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can make a method to check it in a loop:</p>
<pre><code>def check_input(values,  message):
    while True:
        x = input(message) 
        if x in values:
            return x
        print "invalid values, options are "   + str(values) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a good reading about <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow">Control Flows</a>.</p>
<p>Also in your case, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow"><code>strip()</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.lower" rel="nofollow"><code>lower()</code></a> for user inputs.</p>
<pre><code>&gt;&gt;&gt; 'HeLLo'.lower()
'hello'
&gt;&gt;&gt; ' hello   '.strip()
'hello'
</code></pre>
<p>Here is the solution for Python 3:</p>
<pre><code>while True:
    condition=input("What is the condition of the phone(New or Used)?")
    if condition.strip().lower() in ['new', 'used']:
        break
    print("Invalid input")

while True:
    gps=input("Does the phone have gps(Yes or No)?")
    if gps.strip().lower() in ['yes','no']:
        break
    print("Invalid input")
</code></pre>
</div>
<span class="comment-copy">take a look at the <a href="https://wiki.python.org/moin/WhileLoop" rel="nofollow noreferrer">while loop</a>. Note: in the example it uses <code>raw_input()</code> which is for <code>python 2.7</code>. You <i>shoud</i> use <code>input()</code> if you have <code>python 3.4</code></span>
<span class="comment-copy">Don't write it that way. It makes you think in negatives, and duplicates code. Write <code>while True</code> and <code>break</code> if input is good.</span>
<span class="comment-copy">I always think in negatives. What is wrong with it? :-) But I agree that it makes duplicate code, let me update my answer.</span>
