<div class="post-text" itemprop="text">
<p>I have two lists - <code>list1</code> when printed looks like this:</p>
<pre><code>[['KR', 'Alabama', 111], ['KR', 'Alabama', 909], ['KR', 'Alabama', 90], ['KR', 'Alabama', 10], ['KR', 'Arizona', 12], ['KR', 'Arizona', 10], ['KR', 'Arizona', 93], ['KR', 'Arizona', 98],....]
</code></pre>
<p>And <code>list2</code> when printed looks like this:</p>
<p>[11, 110, 108,....]</p>
<p>Now I want to join these two lists and write the result into a csv file so that output looks like this:</p>
<pre><code>KR,Alabama,111,11
KR,Alabama,909,110
KR,Alabama,90,108
KR,Alabama,10,34
KR,Arizona,12,45
</code></pre>
<p>So basically the values of <code>list2</code> becomes the 4th column in csv file. I wrote this code in <code>ipython</code> but it produces output in wrong format and also does not write all the records in the file (last 26 records are not in the file):</p>
<pre><code>final_list = zip(list1,list2)
print final_list

cdc_part1 = open("file1.csv", 'wb')
wr = csv.writer(cdc_part1, dialect='excel')

wr.writerows(final_list)
</code></pre>
<p>The output in file looks like:</p>
<pre><code>"['KR', 'Alabama', 111]",11
"['KR', 'Alabama', 909]",110
"['KR', 'Alabama', 90]",108
"['KR', 'Alabama', 10]",34
"['KR', 'Arizona', 12]",45
</code></pre>
<p>As you can notice there <code>"</code> and <code>[]</code> around the <code>list1</code> item and strings in <code>list1</code> have <code>'</code> around them. How can I get the correct format of output and why last 26 records are not getting written to file?</p>
<p><strong>NOTE:</strong> <code>list1</code>,<code>list2</code> as well as <code>final_list</code> that I am forming all are of same size (300) but yet in file I see only 274 records</p>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>list1</code> is a list of lists, performing <code>zip(list1, list2)</code> will end up with something like this:</p>
<pre class="lang-py prettyprint-override"><code>[(['KR', 'Alabama', 111], 11),
 (['KR', 'Alabama', 909], 110),
 (['KR', 'Alabama', 90], 108)]
</code></pre>
<p>So you'll need to add an extra step in there to add last element to the first list.</p>
<pre class="lang-py prettyprint-override"><code>final_list = [ a + [b] for a, b in zip(list1, list2) ]
</code></pre>
<p>This will get you,</p>
<pre class="lang-py prettyprint-override"><code>[['KR', 'Alabama', 111, 11],
 ['KR', 'Alabama', 909, 110],
 ['KR', 'Alabama', 90, 108]]
</code></pre>
<p>And that should output the CSV properly.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using zip the wrong way, for more look here <a href="https://stackoverflow.com/questions/13704860/zip-lists-in-python">zip lists in python</a>.
the problem is that zip joins elements in the input lists, here the element in the first list itself is a list so its joined to the elements in the second list. 
the correct way to do it is</p>
<pre><code>for each in xrange(0, len(list1)):
    list1[each].append[list2[each]]
print list1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's all in how <code>zip</code> works. From <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow">the docs</a>: </p>
<blockquote>
<p>Returns an iterator of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables.</p>
</blockquote>
<p>So <code>zip</code> expects each argument to be an iterable.  It will then create an iterable (in python2 a list) of tuples grabbing the ith element of each argument for the ith tuple.  So if you pass in a list of lists as the first argument and a list of strings as the second, your final items will each be a tuple where each first element is the inner list of <code>list1</code> and the second element is the corresponding indexed string from <code>list2</code>.</p>
<p>Instead, you want something like:</p>
<pre><code>final_list = [list1[i] + [list2[i]] for i in \
     range(min(len(list1),len(list2)))]
</code></pre>
<p>As to why the last 26 records are not in the file, from the zip docs:</p>
<blockquote>
<p>The iterator stops when the shortest input iterable is exhausted</p>
</blockquote>
<p>So your <code>list2</code> has 26 fewer elements than <code>list1</code>. Rather than guess at what to add to the last 26 items from <code>list1</code>, it just doesn't include them in the result. </p>
<p><em>Note:</em> Using <code>min()</code> in the new <code>final_list</code> formulation as above will result in the same short-circuiting behavior</p>
</div>
<span class="comment-copy">how do I remove <code>'</code> around strings?</span>
<span class="comment-copy">@user2966197 The output I have is python's string representation of the list. The CSV library you're using should properly format the CSV file. You just have to change your line <code>final_list = ...</code> to the line above.</span>
<span class="comment-copy">also I am using <code>ipython</code> for this and so my code which writes to a csv file, is there anything wrong to it that may result in last 26 records not getting written to file? Is there a better way to write to csv file in ipython?</span>
<span class="comment-copy">@user2966197 I'm unsure of why you would be missing 26 records. I would investigate those records and see if there's some encoding problem that causes the csv module to ignore them.</span>
