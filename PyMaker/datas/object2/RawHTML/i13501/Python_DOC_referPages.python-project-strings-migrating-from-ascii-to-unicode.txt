<div class="post-text" itemprop="text">
<p>Ive got some lazy trouble about pythons strings.<br/>
I have a project with python 2.x and all strings we have there are <code>'blabla'</code>.<br/>
Now we want to move this strings to unicode without taking extra libraries like  <code>__future__</code> or moving to <code>python 3</code> or using <code>sys.setdefaultencoding</code>.<br/>
And i have to click this all through project to change <code>''</code> to <code>u''</code>. But not all strings i need to change, for example fields of object i do not want to change:<br/>
<code>obj = {'field': field}</code> </p>
<p>A question: is there a way to make it automatic? And i have stacked with a next problem my regex <code>[^u]([\'][^\'\"]*[\'])</code> catches <code>'   ' '   '</code> middle section which are not a string. </p>
<p>For now i have next replacements: <code>(\'.*\')</code> --&gt; <code>u$1</code></p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>is there a way to make it automatic?</p>
</blockquote>
<p>If you mean -- is there a program that may decide what type of string (Unicode (<code>u''</code>), bytestring (<code>b''</code>), or native (<code>''</code>)) should be used in a specific place in an arbitrary program -- then no: there is no such program -- you should inspect each and every case very carefully. See <a href="https://docs.python.org/3/howto/pyporting.html#text-versus-binary-data" rel="nofollow">Text versus binary data</a>.</p>
</div>
<span class="comment-copy">i'd just find and replace in sublime</span>
<span class="comment-copy">I can not use it for all strings, i can change only strings in logging, values etc.</span>
<span class="comment-copy">Why don't you want to change dict keys?</span>
<span class="comment-copy">Yes, there is a way to do it.  However, <i>which</i> way depends on a clear description of what does and does not get changed.  Simple recognition within the scope of regex (regular expressions) can be done in almost any modern text editor.  Dependence on language syntax (not dictionary keys) is harder in regex, and may warrant a stronger tool (awk, or even a Python script).  How long is your code?  I suspect that it's fastest to change them all and then step through all of the u' occurrences to reverse the ones you don't want to change.</span>
<span class="comment-copy"><code>from __future__ import unicode_literals</code> is a <a href="https://docs.python.org/3/reference/simple_stmts.html#future" rel="nofollow noreferrer"><i>directive</i> to the compiler</a>. There is nothing wrong with it if you want all <code>'abc'</code> <i>literals</i> to create Unicode strings in the current module.</span>
<span class="comment-copy">Thank you, i think i know how to deal with my problem now. Also link was useful!</span>
