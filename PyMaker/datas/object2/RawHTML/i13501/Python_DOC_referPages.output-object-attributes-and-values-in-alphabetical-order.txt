<div class="post-text" itemprop="text">
<p>I need to generate an export (csv) of a series of simple objects like this:</p>
<pre><code>class trx:
   def __init__(self,
                 file_name='',
                 bank='',
                 trans_type='',
                 account=''):

        self.filename = file_name
        self.bank = bank
        self.trans_type = trans_type
        self.account = account
</code></pre>
<p>What is the simplest way to list the attribute/value pairs in order by attribute? <code>__dict__</code> changes order every time.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>vars()</code> on <code>self</code>, then sort the items:</p>
<pre><code>sorted(vars(self).items())
</code></pre>
<p>This then gives you a sorted list of <code>(attributename, value)</code> pairs.</p>
<p>However, if your class is little more than a container for 4 related datapoints, then consider using a <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow"><code>namedtuple</code> class</a>:</p>
<pre><code>from collections import namedtuple

TRX = namedtuple('TRX', ('file_name', 'bank', 'trans_type', 'account'))
</code></pre>
<p>This lists the attributes in named order, always:</p>
<pre><code>&gt;&gt;&gt; from collections import namedtuple
&gt;&gt;&gt; TRX = namedtuple('TRX', ('file_name', 'bank', 'trans_type', 'account'))
&gt;&gt;&gt; TRX('foo.txt', 'Bar PLC', 'withdrawal', '1234xyz')
TRX(file_name='foo.txt', bank='Bar PLC', trans_type='withdrawal', account='1234xyz')
</code></pre>
<p>Because the instances are sequences (a subclass of <code>tuple</code> in fact) you can pass these directly to a <a href="https://docs.python.org/3/library/csv.html#csv.csvwriter.writerow" rel="nofollow"><code>csv.writer().writerow()</code> call</a>; at the same time you can use <code>instance.bank</code> or <code>instance.file_name</code> to access the fields.</p>
<p>Another alternative is to use <em>dictionaries</em>, and use <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow"><code>csv.DictWriter()</code></a> to handle the order (the <code>fieldnames</code> argument determines the order).</p>
</div>
<span class="comment-copy">You can use <code>collections.OrderedDict</code> and <code>sorted</code></span>
