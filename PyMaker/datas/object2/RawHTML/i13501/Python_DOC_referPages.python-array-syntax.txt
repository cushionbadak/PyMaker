<div class="post-text" itemprop="text">
<p>Maybe is a stupid/easy question, but how should I interpet this type of array notation in python.</p>
<pre><code>self.sessions[(recepientId, deviceId)]
</code></pre>
<p>I'm trying to translate some Python to PHP. </p>
<p>As someone said is unclear, is more unclear to me, so I'll put the full function. But I cannot do more, I don't know very well python.</p>
<pre><code>   def loadSession(self, recepientId, deviceId):
    if self.containsSession(recepientId, deviceId):
        return SessionRecord(serialized=self.sessions[(recepientId, deviceId)])
    else:
        return SessionRecord()
</code></pre>
<p>The definition of the sessions variable is like this.</p>
<pre><code>self.sessions = {}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>(recepientId, deviceId)</code> is a tuple consisting of two objects.
<code>self.sessions</code> is a dictionary (i.e. a key-value hash map).</p>
<p>The tuple is the <em>key</em> for which the associated value is retrieved from the dictionary by doing <code>self.sessions[(recepientId, deviceId)]</code>.
So it is simply a lookup for a specific value in a hash map (which is called a dictionary in Python).</p>
</div>
<div class="post-text" itemprop="text">
<p>This code is just trying to find the SessionRecord among others in self.sessions (it's key-value map) by key, where key is a pair of recipientId and deviceId.</p>
<p>In C++, Java, C# etc. one would rather write something like:</p>
<pre><code>class Key {
//constructor
Id recipientId;
Id deviceId;
//getters|setters and stuff
}
Map&lt;Key, SessionRecord&gt; sessions = Store.getSessions();
SessionRecord session = sessions.get(new Key(recipientId, deviceId));
</code></pre>
</div>
<span class="comment-copy"><b>UNCLEAR....</b></span>
<span class="comment-copy">I suggest you start to read about <a href="https://docs.python.org/3/library/stdtypes.html#tuple" rel="nofollow noreferrer">tuples</a>, then go on to read about <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">dictionaries</a>. Or better yet, start with a <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">Python tutorial</a>.</span>
<span class="comment-copy">Thank you, just my last question, as PHP doesn't have tuples, and it don't let you use another array as key, the solution could be creating a string key of both values concatenated in the same order.</span>
<span class="comment-copy">@Payn3: FWIW, concatenation is how the awk language handles indices for multidimensional arrays. But it's a Good Idea to keep some kind of separator between the items, don't just run them together without a separator. So try to use a separator that will never occur in either <code>recepientId</code> or <code>deviceId</code>.</span>
<span class="comment-copy">Thank you very much. I thought about putting a separator just because i have to get in the future the values separated.</span>
