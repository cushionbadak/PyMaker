<div class="post-text" itemprop="text">
<p>I have a sample code like following:</p>
<pre><code>import smtplib
def send_mail(PASS,FAIL):
    me = "XXXX"
    you = "YYYY"
    print "Start of program"
    server = smtplib.SMTP('ZZZ', 25)
    total_testcase = "15/12"
    print total_testcase
    message = """From: From Person &lt;XXXX&gt;
    To: To Person &lt;YYYY&gt;
    Subject: mail testing

    %s
    """ %total_testcase
    print message
    server.sendmail(me, you, message)


send_mail(8,9)
</code></pre>
<p>when I am sending the email it is delivering without the subject </p>
<p>But if I use the code instead of a function call - then it is delivering fine with subject. Anything I am missing in a function call. Please suggest.</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue you're having is with the triple-quoted multi-line string. When you put it in your function, you're indenting all of its lines so that they line up with the rest of the code. However, this results in unnecessary (and inappropriate) spaces at the start of each line of the message after the first.</p>
<p>Leading spaces in the headers of an SMTP message indicate that the previous header should be continued. This means that all of your first three lines are combined into the <code>From</code> header.</p>
<p>You can fix this either by leaving out the leading spaces:</p>
<pre><code>def send_mail(PASS,FAIL):
    #...
    message = """From: From Person &lt;XXXX&gt;
To: To Person &lt;YYYY&gt;
Subject: mail testing

%s
""" % total_testcase
    #...
</code></pre>
<p>Or by using <code>\n</code> instead of real newlines in your string:</p>
<pre><code>message = "From: From Person &lt;XXXX&gt;\nTo: To Person &lt;YYYY&gt;\nSubject: mail testing\n\n%s" % total_testcase
</code></pre>
<p>Or finally, you could keep the current code for the generation of the message, but strip out the leading whitespace afterwards:</p>
<pre><code>def send_mail(PASS,FAIL):
    #...
    message = """From: From Person &lt;XXXX&gt;
    To: To Person &lt;YYYY&gt;
    Subject: mail testing

    %s
    """ % total_testcase
    message = "\n".join(line if not line.startswith("    ") else line[4:]
                        for line in message.splitlines())
    #...
</code></pre>
<p>This last option is a bit fragile, as it may strip out desired whitespace from lines in your <code>total_testcase</code> string (if it had multiple lines), not only the spaces added due to the multi-line string. It also will break if you're using tabs for indentation, or really anything other than four spaces. I'm not sure I'd actually recommend this approach.</p>
<p>A better version of the last approach is to use the <a href="https://docs.python.org/3/library/textwrap.html#textwrap.dedent" rel="nofollow"><code>textwrap.dedent</code> function</a> from the the standard library. It removes any indentation that is present at the start of every line in a string (but only the indentation that is common to all lines). This does require a small change to how you were creating <code>message</code>, as you need the first line to have the same leading spaces as all the rest (you'll also need to avoid adding any newlines without indentation in the extra text that comes from <code>total_testcase</code>).</p>
<p>Here's the code:</p>
<pre><code>import textwrap

def send_mail(PASS,FAIL):
    #...
    # backslash after the quotes on the first line avoids a empty line at the start
    message = """\
    From: From Person &lt;XXXX&gt;
    To: To Person &lt;YYYY&gt;
    Subject: mail testing

    %s
    """ % total_testcase
    message = textwrap.dedent(message)
    #...
</code></pre>
</div>
<span class="comment-copy">I don't understand what you mean when you say "if I use the code instead of a function call". Do you mean that it works if you move the SMTP code out of your <code>send_mail</code> function and call it directly at the top level of your module?</span>
<span class="comment-copy">Yes. the code which is written inside function if write inside the program it works perfect but when I use the code inside the function, mail delivery is working but without subject line</span>
<span class="comment-copy">I knew there was a standard library function that did the unindenting of triple-quoted strings in a nice way, but I couldn't remember where it was. Only after giving up for a while and then searching again did I finally find it!</span>
