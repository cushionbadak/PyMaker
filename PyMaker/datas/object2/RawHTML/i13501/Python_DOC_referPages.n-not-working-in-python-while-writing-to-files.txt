<div class="post-text" itemprop="text">
<p>I wrote python code to write to a file like this:</p>
<pre><code>   with codecs.open("wrtieToThisFile.txt",'w','utf-8') as outputFile:
            for k,v in list1:
                outputFile.write(k + "\n")
</code></pre>
<p>The list1 is of type (char,int)
The problem here is that when I execute this, file doesn't get separated by "\n" as expected. Any idea what is the problem here ? I think it is because of the </p>
<pre><code>with
</code></pre>
<p>Any help is appreciated. Thanks in advance.
(I am using Python 3.4 with "Python Tools for Visual Studio" version 2.2)</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are on windows the <code>\n</code> doesn't terminate a line.<br/>
Honestly, I'm surprised you are having a problem, by default any file opened in text mode would automatically convert the <code>\n</code> to <code>os.linesep</code>. I have no idea what <code>codecs.open()</code> is but it must be opening the file in binary mode.<br/>
Given that is the case you need to explicitly add <code>os.linesep</code>:</p>
<pre><code>outputFile.write(k + os.linesep)
</code></pre>
<p>Obviously you have to <code>import os</code> somewhere.</p>
</div>
<div class="post-text" itemprop="text">
<p>Figured it out, from here:</p>
<p><a href="https://stackoverflow.com/questions/11497376/new-line-python">How would I specify a new line in Python?</a></p>
<p>I had to use "\r\n" as in Windows, "\r\n" will work.</p>
</div>
<div class="post-text" itemprop="text">
<p>Per <a href="https://docs.python.org/3/library/codecs.html#codecs.open" rel="nofollow"><code>codecs.open</code>'s documentation</a>, <code>codecs.open</code> opens the underlying file in binary mode, without line ending conversion. Frankly, <code>codecs.open</code> is semi-deprecated; in Python 2.7 and onwards, <code>io.open</code> (which is the same thing as the builtin <code>open</code> function in Python 3.x) handles 99% of the cases people used to use <code>codecs.open</code>, but better (faster, and without stupid issues like line endings). If you're reliably running on Python 3, just use plain <code>open</code>; if you need to run on Python 2.7 as well, import <code>io</code> and use <code>io.open</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are on windows, try '\r\n'. Or open it with an editor that recognizes unix style new lines.</p>
</div>
<span class="comment-copy">thank you, it worked now</span>
<span class="comment-copy">Not very portable, use <code>os.linesep</code>, which will put the right line separator for whatever system you are on.</span>
<span class="comment-copy">Thanks, but I tried it and it just prints os.linesep where I wanted the new line break. I am writing to a text file in windows. Even I want something portable.</span>
<span class="comment-copy">Don't put it in quotes...</span>
<span class="comment-copy">I didn't just use codecs.open simply, it was for other requirement which otherwise won't decode my required file</span>
<span class="comment-copy">Unless your file was in one of the pseudocodecs (<code>hex</code>, <code>rot13</code> and the like), <code>io.open</code> should handle it. It reads and writes non-ASCII-encoded files just fine; it's not Py2's default <code>open</code> where it would only read <code>str</code>, not <code>unicode</code>.</span>
<span class="comment-copy">Thanks, figured it out just now.</span>
