<div class="post-text" itemprop="text">
<p>I have following code:</p>
<pre><code>import re
r = re.compile('^[0-9 ]{1,4}Ty', 'i')
</code></pre>
<p>I get unexpected error:</p>
<pre class="lang-none prettyprint-override"><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.4/re.py", line 219, in compile
    return _compile(pattern, flags)
  File "/usr/lib/python3.4/re.py", line 275, in _compile
    bypass_cache = flags &amp; DEBUG
TypeError: unsupported operand type(s) for &amp;: 'str' and 'int'
</code></pre>
<p>How to fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>'i'</code> is not a valid flag value, because <a href="https://docs.python.org/3/howto/regex.html#compilation-flags" rel="nofollow">all compilation flags used by <code>re</code> functions</a> must be integers (<code>re</code> uses bitwise operations to manipulate flags).</p>
<p>Use <code>re.I</code> (or <code>re.IGNORECASE</code>) instead</p>
<pre><code>import re
r = re.compile('^[0-9 ]{1,4}Ty', re.I)
</code></pre>
<p>Technically you <em>can</em> specify flags as strings but in this case they'll have to be included in the pattern:</p>
<pre><code>import re
r = re.compile('(?i)^[0-9 ]{1,4}Ty')
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">docs</a>:</p>
<blockquote>
<p><em>(?aiLmsux)</em></p>
<p>One or more letters from the set <code>'a'</code>, <code>'i'</code>, <code>'L'</code>, <code>'m'</code>, <code>'s'</code>,
  <code>'u'</code>, <code>'x'</code>. The group matches the empty string; the letters set the
  corresponding flags.</p>
</blockquote>
<p>So <code>(?i)</code> has the same effect as passing <code>re.I</code> (or <code>re.IGNORECASE</code>) to <code>compile</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Flags are predefined constants in <code>re</code> module:</p>
<pre><code>re.compile('..', re.IGNORECASE).
</code></pre>
</div>
<span class="comment-copy">Just use <code>re.I</code></span>
<span class="comment-copy">@vaultah thank you, <code>re.IGNORECASE</code> instead of <code>'i'</code> works.</span>
