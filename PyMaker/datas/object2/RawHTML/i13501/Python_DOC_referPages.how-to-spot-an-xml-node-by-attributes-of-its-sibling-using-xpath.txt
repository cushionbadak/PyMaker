<div class="post-text" itemprop="text">
<p>Suppose I have the following XML-file (dispensable parts are marked with '...'):</p>
<pre><code>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;PARAMETERS version="1.6.2" xsi:noNamespaceSchemaLocation="http://open-ms.sourceforge.net/schemas/Param_1_6_2.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
  &lt;NODE name="info" description=""&gt;
    &lt;ITEM name="version" value="2.0.0" type="string" description="" required="false" advanced="false" /&gt;
    &lt;ITEM name="num_vertices" value="5" type="int" description="" required="false" advanced="false" /&gt;
    &lt;ITEM name="num_edges" value="4" type="int" description="" required="false" advanced="false" /&gt;
    &lt;ITEM name="description" value="&amp;lt;![CDATA[]]&amp;gt;" type="string" description="" required="false" advanced="false" /&gt;
  &lt;/NODE&gt;
  &lt;NODE name="vertices" description=""&gt;
    &lt;NODE name="0" description=""&gt;
      &lt;ITEM name="recycle_output" value="false" type="string" description="" required="false" advanced="false" /&gt;
      &lt;ITEM name="toppas_type" value="input file list" type="string" description="" required="false" advanced="false" /&gt;
      &lt;ITEMLIST name="file_names" type="string" description="" required="false" advanced="false"&gt;
        &lt;LISTITEM value="input_data/STD_MIX_1_25_neg.mzML"/&gt;
      &lt;/ITEMLIST&gt;
      &lt;ITEM name="x_pos" value="-1680" type="double" description="" required="false" advanced="false" /&gt;
      &lt;ITEM name="y_pos" value="-620" type="double" description="" required="false" advanced="false" /&gt;
    &lt;/NODE&gt;
    &lt;NODE name="1" description=""&gt;
    ...
    &lt;/NODE&gt;
    ...
  &lt;/NODE&gt;
&lt;/PARAMETERS&gt;
</code></pre>
<p>My aim is to make an XPath query that returns the ITEMLIST node having an attribute name="file_names" and a sibling ITEM node that has attributes name="toppas_type", value="input file list". I tried the following one:</p>
<p><code>'./NODE/NODE[ITEM[@name="toppas_type"][@value="input file list"]]/ITEMLIST[@name="file_names"]'</code></p>
<p>with xml.etree.ElementTree in Python 3.4, but I get an error 'invalid predicate'. I think my query contains a silly mistake, but I can't find it.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>xml.etree.ElementTree</code> has a <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xpath-support" rel="nofollow">limited XPath support</a>:</p>
<blockquote>
<p>This module provides limited support for XPath expressions for
  locating elements in a tree. The goal is to support a small subset of
  the abbreviated syntax; a full XPath engine is outside the scope of
  the module.</p>
</blockquote>
<p>If you are okay with switching to <a href="http://lxml.de/" rel="nofollow"><code>lxml</code></a>, it can be solved by using <a href="https://developer.mozilla.org/en-US/docs/Web/XPath/Axes/following-sibling" rel="nofollow"><code>following-sibling</code></a> axis:</p>
<pre><code>//ITEM[@name = 'toppas_type' and @value = 'input file list']/following-sibling::ITEMLIST[@name = 'file_names']
</code></pre>
</div>
<span class="comment-copy">Cool, thanks. How can I modify your solution if don't now exactly if <code>ITEMLIST</code> is actually a following sibling, but just a sibling?</span>
<span class="comment-copy">@Ivan just combine <code>preceding-sibling</code> and <code>following-sibling</code>. For example: <code>//ITEMLIST[@name = 'file_names'][following-sibling::ITEM/@name = 'toppas_type' or preceding-sibling::ITEM/@name = 'toppas_type']</code> (not tested).</span>
<span class="comment-copy">Thanks, I'll try this variant.</span>
<span class="comment-copy"><code>lxml</code> really worked! I managed to do what I wanted using '..' reference to a parent node: <code>'./NODE/NODE/ITEM[@name="toppas_type"][@value="input file list"]/../ITEMLIST[@name="file_names"]'</code>. It looks shorter than mixing <code>preceding/following-sibling</code>.</span>
<span class="comment-copy">@Ivan that's a good point, much simpler, thanks for sharing!</span>
