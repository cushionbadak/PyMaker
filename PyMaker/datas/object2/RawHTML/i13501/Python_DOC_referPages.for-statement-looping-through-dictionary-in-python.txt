<div class="post-text" itemprop="text">
<p>I need to use a for loop over a dictionary to display all the corresponding values</p>
<pre><code>shops = {

              'Starbucks': {
                  'type':'Shops &amp; Restaurants',
                  'location':'Track 19'
               },

              'Supply-Store': {
                   'type':'Services',
                   'location':'Central Station'
               }
         }

for shop in shops:
    print(shop + " is a: " +shop.items(0))
</code></pre>
<p>What I want my for loop to do is to take one item at a time, and then get the corresponding type and location. Right now, I'm stuck at getting the corresponding types and locations.</p>
<p>Expected Output would be:</p>
<pre><code>Starbucks is a Shops &amp; Restaurants located at Track 19.
Supply-Store is a Services located at Central Station.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming each value in your <code>shops</code> dictionary to be another dictionary with type and location.</p>
<p>What you want might be -</p>
<pre><code>for key,value in shops.items():
    print(key + " is a: " + value['type'] + " at : " + value['location']) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/string.html#format-examples" rel="nofollow">str.format</a> passing the dict using <code>**</code> to access arguments by name:</p>
<pre><code>Shops = {

              'Starbucks': {
                  'type':'Shops &amp; Restaurants',
                  'location':'Track 19'
               },

              'Supply-Store': {
                   'type':'Services',
                   'location':'Central Station'
               }
         }

for shop,v in Shops.items():
    print("{} is a {type} located at {location}".format(shop,**v))
</code></pre>
<p>Output:</p>
<pre><code>Starbucks is a Shops &amp; Restaurants located at  Track 19
Supply-Store is a Services located at  Central Station
</code></pre>
</div>
<span class="comment-copy">I dont know who voted this answer down, but it works. Marked as answered, thanks Sharon!</span>
