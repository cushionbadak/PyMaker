<div class="post-text" itemprop="text">
<p>I have the following image:
Please look at it for reference.</p>
<p><a href="http://i58.tinypic.com/33219hh.png" rel="nofollow">http://i58.tinypic.com/33219hh.png</a></p>
<p>What I am trying to get is for the code to read every value
in each column, and tell me how many times that "number" and 
"letter" is there in the column. In other words, what is the
occurrence of that "number" and "letter" in their respective columns?</p>
<p>Here is my code:</p>
<pre><code>import xlrd,xlwt

ws = 'C://Users/Jack/Desktop

extract=[]
wb1 = xlrd.open_workbook(ws + 'try.xlsx')
sh1 = wb1.sheet_by_index(0)

for a in range(0,sh1.nrows):
    for b in range(0,sh1.ncols):
        extract.append(sh1.cell(a,b).value)
#print(extract)
print()
print('4:',extract.count('4'))
</code></pre>
<p>Output is <code>4: 0</code></p>
<p>I am only trying to count the number 4 from the first column
because I do not know how to count everything from every
column at once. The output is supposed to read <code>4: 3</code>.
But, I want to know how to read everything at once as mentioned
earlier above.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try using a dictionary for each column:</p>
<pre><code>for col in range(0,sh1.ncols):
    counts = {}
    for row in range(1, sh1.nrows): #start with 1 to skip header
        val = sh1.cell(row,col).value
        if val not in counts:
            counts[val] = 0
        counts[val] += 1
    extract.append(counts)

# to get the total number of 4s in the 1st column (index 0) run:
print "4:%d" % extract[0][4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can check out <a href="http://pandas.pydata.org/" rel="nofollow">pandas</a>. The solution can be something like this:</p>
<pre><code>import pandas as pd
df = pd.io.excel.read_excel(your_file_name)
print df.icol(0).value_counts()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Feed each column to <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a></p>
<pre><code>import collections, xlrd
import xlrd
wb = xlrd.open_workbook('test.xls')
sh = wb.sheet_by_index(0)
columns = []
for i in xrange(sh.ncols):
    columns.append(collections.Counter(sh.col_values(i)))

format_str = 'column {}: {}'
for n, column in enumerate(columns):
    print(format_str.format(n, column))
&gt;&gt;&gt; 
column 0: Counter({u'a': 3, u'b': 2, u'c': 1, u'd': 1})
column 1: Counter({u'c': 2, u'b': 2, u'd': 2, u'a': 1})
column 2: Counter({u'c': 4, u'a': 1, u'b': 1, u'd': 1})
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>  import xlrd,xlwt

def printDate(res):
    for k,v in sorted(res.items(),key = lambda (k,v):(v,k),reverse= True):
        print('{} : {}'.format(k,v))
    print()

ws = 'C:\Users\galaxyan\Desktop\\'
wb1 = xlrd.open_workbook(ws + 'Book1.xlsx')
sh1 = wb1.sheet_by_index(0)
letterRes, numRes = {},{}
for a in range(1,sh1.nrows):
    numValue = sh1.cell(a,0).value
    letterValue = sh1.cell(a,1).value
    numRes[numValue] = numRes.get(numValue,0) + 1
    letterRes[letterValue] = letterRes.get(letterValue,0) + 1

printDate(letterRes)
printDate(numRes)
</code></pre>
<p>output:</p>
<pre><code>B : 4
E : 3
D : 3
A : 3
C : 1

3.0 : 4
5.0 : 3
4.0 : 3
2.0 : 2
1.0 : 2
</code></pre>
</div>
<span class="comment-copy">you might want to look at <code>pandas.read_excel</code></span>
<span class="comment-copy">You could possibly use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to transpose the rows and columns then use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> to tally the results.  Or just use <code>collections.Counter</code> with the <code>col</code>  attribute of the <code>Sheet</code> object.</span>
<span class="comment-copy">What do u want me to do with the old code. Delete what and keep what ?</span>
<span class="comment-copy">Keep everything before your for loop.  And then replace your for loop with mine.</span>
<span class="comment-copy">The answer comes out to 1 instead of 3 for the count of 4. Also, I want to do it for the complete dataset I have on that picture link.</span>
<span class="comment-copy">Strange, are you sure you did "counts[val] += 1" instead of "counts[val] = 1"?  I checked using your dataset and it worked for me.  This will also work for the complete dataset.  extract[0][&lt;number&gt;] will show you the counts of any number and extract[1][&lt;letter&gt;] will show you the counts of any letter.</span>
<span class="comment-copy">I want to display the count for every number in "numbers" and for every letter in "letters", and that also at once.</span>
<span class="comment-copy">Yes. That is correct.That does fix my problem for printing the count for 4. But, my original question is to do the same thing for the whole dataset I have. How can I do that ?</span>
<span class="comment-copy">res is dict and stores all the frequency</span>
<span class="comment-copy">Awesome!! But, I am getting an error.                                                                   --------------------------------------------------------------------------- AttributeError                            Traceback (most recent call last) &lt;ipython-input-98-4a5beebd8147&gt; in &lt;module&gt;()      13     res[letterValue] = res.get(letterValue,0) + 1      14  ---&gt; 15 for k,v in res.iteritems():      16     print('{} : {}'.format(k,v))  AttributeError: 'dict' object has no attribute 'iteritems'</span>
<span class="comment-copy">try again. I think you are using python 3</span>
<span class="comment-copy">Still an error. Yes. I am using python 3. Also, I would also want the output to be arranged. The "numbers" should be all together in the column when printed, and the "letters" should be all together.</span>
