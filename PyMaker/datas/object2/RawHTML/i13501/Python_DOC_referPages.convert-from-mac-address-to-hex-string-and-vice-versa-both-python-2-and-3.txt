<div class="post-text" itemprop="text">
<p>I have MAC address that I want to send to dpkt as raw data. 
dpkt package expect me to pass the data as hex stings.
So, assuming I have the following mac address:    <code>'00:de:34:ef:2e:f4'</code>, written as:    <code>'00de34ef2ef4'</code> and I want to encode in to something like    <code>'\x00\xdeU\xef.\xf4'</code> and the backward translation will provide the original data.</p>
<p>On Python 2, I found couple of ways to do that using    <code>encode('hex')</code> and decode('hex').
However this solution isn't working for Python 3. </p>
<p>I'm haveng some trouble finding a code-snippet to support that on both versions.</p>
<p>I'd appriciate help on this.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/binascii.html#binascii.hexlify" rel="nofollow"><code>binascii</code> module</a> works on both Python 2 and 3:</p>
<pre><code>&gt;&gt;&gt; import binascii
&gt;&gt;&gt; binascii.unhexlify('00de34ef2ef4') # to raw binary
b'\x00\xde4\xef.\xf4'
&gt;&gt;&gt; binascii.hexlify(_) # and back to hex
b'00de34ef2ef4'
&gt;&gt;&gt; _.decode('ascii') # as str in Python 3
'00de34ef2ef4'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>On python3 encoding between arbitrary codecs must be done using the <code>codecs</code> module:</p>
<pre><code>&gt;&gt;&gt; import codecs
&gt;&gt;&gt; codecs.decode(b'00de34ef2ef4', 'hex')
b'\x00\xde4\xef.\xf4'
&gt;&gt;&gt; codecs.encode(b'\x00\xde4\xef.\xf4', 'hex')
b'00de34ef2ef4'
</code></pre>
<p>This will only work with <code>bytes</code>, not with <code>str</code> (unicode) objects. It will also work in python2.7, where <code>str</code> is <code>bytes</code> and the <code>b</code>-prefix does nothing.</p>
</div>
<span class="comment-copy">Both solutions did the trick, thanks! I've chosen this one simply because I used     <code>binascii</code> for other methods in my code.</span>
