<div class="post-text" itemprop="text">
<p><strong>What is the pythonic way to set a maximum length paramter?</strong></p>
<p>Let's say I want to restrict a list of strings to a certain maximum size:</p>
<pre><code>&gt;&gt;&gt; x = ['foo', 'bar', 'a', 'rushmoreorless', 'kilimangogo']
&gt;&gt;&gt; maxlen = 3
&gt;&gt;&gt; [i for i in x if len(i) &lt;= maxlen]
['foo', 'bar', 'a']
</code></pre>
<p>And I want to functionalize it and allow different maxlen but if no maxlen is given, it should return the full list:</p>
<pre><code>def func1(alist, maxlen):
  return [i for i in x if len(i) &lt;= maxlen]
</code></pre>
<p>And I want to set the maxlen to the max length of element in alist, so I tried but I am torn between using <code>None</code>, <code>0</code> or <code>-1</code>.</p>
<p>If I use <code>None</code>, it would be hard to cast the type later on:</p>
<pre><code>def func1(alist, maxlen=None):
  if maxlen == None:
    maxlen = max(alist, key=len)
  return [i for i in x if len(i) &lt;= maxlen]
</code></pre>
<p>And I might get this as the function builds on:</p>
<pre><code>&gt;&gt;&gt; maxlen = None
&gt;&gt;&gt; int(None)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: int() argument must be a string or a number, not 'NoneType'
&gt;&gt;&gt; type(maxlen)
&lt;type 'NoneType'&gt;
</code></pre>
<p>If I use -1, it sort of resolve the <code>int(maxlen)</code> issues but it's also sort of weird since length should never be negative. </p>
<pre><code>def func1(alist, maxlen=-1):
  if maxlen &lt; 0:
    maxlen = max(alist, key=len)
  return [i for i in x if len(i) &lt;= maxlen]
</code></pre>
<p>If I use 0, I face the problem when I really need to return an empty list and set <code>maxlen=0</code> but then again, if I really need an empty list then I don't even need a function to create one.</p>
<pre><code>def func1(alist, maxlen=0):
  if maxlen == 0:
    maxlen = max(alist, key=len)
  return [i for i in x if len(i) &lt;= maxlen]
</code></pre>
<p>(Note: the ultimate task is NOT to filter a list, i.e. <code>(filter(lambda k: len(k) &lt;= maxlen, lst))</code> but it's an example to ask about the pythonic way to set an integer variable that sets a maximum)</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Let's say I want to restrict a list of strings to a certain maximum
  size:</p>
<p>And I want to functionalize it and allow different maxlen but if no
  maxlen is given, it should return the full list:</p>
<p>And I want to set the maxlen to the max length of element in alist</p>
</blockquote>
<p>To address all these requests, the best answer I can think of is something like this...</p>
<pre><code>def func(lst, ln=None):
    if not ln:
        return lst
    ln = max(ln, len(lst))
    return [i for i in lst if len(i) &lt;= ln]
</code></pre>
<hr/>
<p><strong>edit:</strong></p>
<p>If it is important to handle negative maximum length (who knows why) or 0 length, then a function like this can be used. (Though I am against duck-typing)</p>
<pre><code>def func(lst, ln=None):
    if ln is None:
        return lst
    elif ln &lt; 1:  # handles 0, and negative values.
        return []
    else:
        ln = max(ln, len(lst))
        return [i for i in lst if len(i) &lt;= ln]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about the following approach, this avoids the need to use <code>max</code>:</p>
<pre><code>def filter_length(a_list, max_length=None):
    if max_length == 0:
        return []
    elif max_length:
        return [i for i in x if len(i) &lt;= max_length]
    else:
        return a_list

x = ['foo', 'bar', 'a', 'rushmoreorless', 'kilimangogo']

print filter_length(x, 3)
print filter_length(x)
print filter_length(x, 0)
</code></pre>
<p>Giving you the output:</p>
<pre><code>['foo', 'bar', 'a']
['foo', 'bar', 'a', 'rushmoreorless', 'kilimangogo']
[]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about some tricks?.. Operator <code>or</code> returns first value, if both values are <code>True</code>. And, if first value is <code>False</code> and second is <code>True</code>, <code>or</code> returns second value.</p>
<pre><code>&gt;&gt;&gt; m = 3
&gt;&gt;&gt; [i for i in x if len(i) &lt;= m] or x
['foo', 'bar', 'a']
&gt;&gt;&gt; m = 0
&gt;&gt;&gt; [i for i in x if len(i) &lt;= m]
[]
&gt;&gt;&gt; [i for i in x if len(i) &lt;= m] or x
['foo', 'bar', 'a', 'rushmoreorless', 'kilimangogo']
</code></pre>
<p>I think it's just what you need. :-)</p>
<p>Ough... I forget about <code>-1</code> and <code>None</code>. Result will be the same:</p>
<pre><code>&gt;&gt;&gt; m = None
&gt;&gt;&gt; [i for i in x if len(i) &lt;= m] or x
['foo', 'bar', 'a', 'rushmoreorless', 'kilimangogo']
&gt;&gt;&gt; m = -1
&gt;&gt;&gt; [i for i in x if len(i) &lt;= m] or x
['foo', 'bar', 'a', 'rushmoreorless', 'kilimangogo']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you said: "<em>I want to allow different <code>maxlen</code>s but if no <code>maxlen</code> is given, it should return the full list</em>".
An approach would be a definition of a <code>maxFilter()</code> function which uses Pythons <strong><a href="https://docs.python.org/3/tutorial/controlflow.html#default-argument-values" rel="nofollow"><em>default argument values</em></a></strong>:</p>
<pre><code>&gt;&gt;&gt; def maxFilter(alist, maxlen = None):
        if maxlen is None:
           #no maxlen is given -&gt; return full list
           return alist
        else:
           #in all other cases apply algorithm  
           return [i for i in x if len(i) &lt;= maxlen]
</code></pre>
<p>Examples, using <code>x = ['foo', 'bar', 'a', 'rushmoreorless', 'kilimangogo']</code>:</p>
<pre><code>&gt;&gt;&gt; maxFilter(x, None) #same as maxFilter(x)
['foo', 'bar', 'a', 'rushmoreorless', 'kilimangogo']

&gt;&gt;&gt; maxFilter(x, 3)
['foo', 'bar', 'a']

&gt;&gt;&gt; maxFilter(x, 0)
[]
</code></pre>
<p><strong>Note:</strong> In my opinion it would be better to ask about a way <em>to set an <strong>optional</strong> length parameter to list elments</em> .</p>
</div>
<span class="comment-copy">I didn't down vote you, but just wanted to point you to this:  <a href="http://stackoverflow.com/questions/17526659/how-to-set-a-max-length-for-a-python-list-set" title="how to set a max length for a python list set">stackoverflow.com/questions/17526659/â€¦</a></span>
<span class="comment-copy">How about using  <code>float('inf')</code> or <code>float('-inf')</code> as default values?</span>
<span class="comment-copy">is <code>max(ln, len(lst))</code> expensive if my lst in size of 3,000,000?</span>
<span class="comment-copy"><code>if not ln:</code> --&gt; This is also true for <code>ln = 0</code> and thus will return the full list. The list comprehension would return an empty list for <code>ln=0</code>. Depending on the exact requirements you might have to distinguish these two cases.</span>
<span class="comment-copy">@OcasoProtal OP mentioned that for <code>ln=0</code> it is irrelevant because it's basically an empty list. <code>"If I use 0, I face the problem when I really need to return an empty list and set maxlen=0 but then again, if I really need an empty list then I don't even need a function to create one."</code></span>
<span class="comment-copy">@alvas No, <code>len()</code> function on any list size is O(1) complexity.</span>
<span class="comment-copy">See updated function which considers duck-typing scenarios.</span>
