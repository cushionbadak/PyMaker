<div class="post-text" itemprop="text">
<p>Working in Python 2.7. I have a dictionary with team names as the keys and the amount of runs scored and allowed for each team as the value list:</p>
<pre><code>NL_East = {'Phillies': [645, 469], 'Braves': [599, 548], 'Mets': [653, 672]}
</code></pre>
<p>I would like to be able to feed the dictionary into a function and iterate over each team (the keys).</p>
<p>Here's the code I'm using. Right now, I can only go team by team. How would I iterate over each team and print the expected win_percentage for each team?</p>
<pre><code>def Pythag(league):
    runs_scored = float(league['Phillies'][0])
    runs_allowed = float(league['Phillies'][1])
    win_percentage = round((runs_scored**2)/((runs_scored**2)+(runs_allowed**2))*1000)
    print win_percentage
</code></pre>
<p>Thanks for any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have several options for iterating over a dictionary.</p>
<p>If you iterate over the dictionary itself (<code>for team in league</code>), you will be iterating over the keys of the dictionary.  When looping with a for loop, the behavior will be the same whether you loop over the dict (<code>league</code>) itself, or <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="noreferrer"><code>league.keys()</code></a>:</p>
<pre><code>for team in league.keys():
    runs_scored, runs_allowed = map(float, league[team])
</code></pre>
<p>You can also iterate over both the keys and the values at once by iterating over <code>league.items()</code>:</p>
<pre><code>for team, runs in league.items():
    runs_scored, runs_allowed = map(float, runs)
</code></pre>
<p>You can even perform your tuple unpacking while iterating:</p>
<pre><code>for team, (runs_scored, runs_allowed) in league.items():
    runs_scored = float(runs_scored)
    runs_allowed = float(runs_allowed)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can very easily iterate over dictionaries, too:</p>
<pre><code>for team, scores in NL_East.iteritems():
    runs_scored = float(scores[0])
    runs_allowed = float(scores[1])
    win_percentage = round((runs_scored**2)/((runs_scored**2)+(runs_allowed**2))*1000)
    print '%s: %.1f%%' % (team, win_percentage)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Dictionaries have a built in function called <code>iterkeys()</code>.</p>
<p>Try:</p>
<pre><code>for team in league.iterkeys():
    runs_scored = float(league[team][0])
    runs_allowed = float(league[team][1])
    win_percentage = round((runs_scored**2)/((runs_scored**2)+(runs_allowed**2))*1000)
    print win_percentage
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Dictionary objects allow you to iterate over their items. Also, with pattern matching and the division from <code>__future__</code> you can do simplify things a bit.</p>
<p>Finally, you can separate your logic from your printing to make things a bit easier to refactor/debug later.</p>
<pre><code>from __future__ import division

def Pythag(league):
    def win_percentages():
        for team, (runs_scored, runs_allowed) in league.iteritems():
            win_percentage = round((runs_scored**2) / ((runs_scored**2)+(runs_allowed**2))*1000)
            yield win_percentage

    for win_percentage in win_percentages():
        print win_percentage
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>List comprehension can shorten things...</p>
<pre><code>win_percentages = [m**2.0 / (m**2.0 + n**2.0) * 100 for m, n in [a[i] for i in NL_East]]
</code></pre>
</div>
<span class="comment-copy"><code>dic.items()</code>...</span>
<span class="comment-copy">dict.iteritems() was removed since Python3. You should use dict.items() instead</span>
<span class="comment-copy">dict.iterkeys() was also removed in Python 3. You should use dict.keys() instead</span>
<span class="comment-copy">dict.itervalues() was also removed in Python  3. You should use dict.values() instead</span>
<span class="comment-copy">Thanks for the help! Code worked great.</span>
<span class="comment-copy">@BurtonGuster: Whenever you think an answer worthy, please upvote (click the "up" button on the left side of the post)! That way you're helping the community, too!</span>
<span class="comment-copy">Thanks for the help!</span>
