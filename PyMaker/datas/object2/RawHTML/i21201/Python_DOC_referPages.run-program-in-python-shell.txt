<div class="post-text" itemprop="text">
<p>I have a demo file: <code>test.py</code>.
In the Windows Console I can run the file with: <code>C:\&gt;test.py</code></p>
<p>How can I execute the file in the Python Shell instead?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2.7/library/functions.html#execfile" rel="noreferrer">execfile</a> for <strong>Python 2</strong>:</p>
<pre><code>&gt;&gt;&gt; execfile('C:\\test.py')
</code></pre>
<p>Use <a href="https://docs.python.org/3/library/functions.html#exec" rel="noreferrer">exec</a> for <strong>Python 3</strong></p>
<pre><code>&gt;&gt;&gt; exec(open("C:\\test.py").read())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're wanting to run the script and end at a prompt (so you can inspect variables, etc), then use:</p>
<pre><code>python -i test.py
</code></pre>
<p>That will run the script and then drop you into a Python interpreter.</p>
</div>
<div class="post-text" itemprop="text">
<p>It depends on what is in <code>test.py</code>. The following is an appropriate structure:</p>
<pre><code># suppose this is your 'test.py' file
def main():
 """This function runs the core of your program"""
 print("running main")

if __name__ == "__main__":
 # if you call this script from the command line (the shell) it will
 # run the 'main' function
 main()
</code></pre>
<p>If you keep this structure, you can run it like this in the command line (assume that <code>$</code> is your command-line prompt):</p>
<pre><code>$ python test.py
$ # it will print "running main"
</code></pre>
<p>If you want to run it from the Python shell, then you simply do the following:</p>
<pre><code>&gt;&gt;&gt; import test
&gt;&gt;&gt; test.main() # this calls the main part of your program
</code></pre>
<p>There is no necessity to use the <code>subprocess</code> module if you are already using Python. Instead, try to structure your Python files in such a way that they can be run both from the command line and the Python interpreter.</p>
</div>
<div class="post-text" itemprop="text">
<p>For newer version of python:</p>
<pre><code>exec(open(filename).read())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the same folder, you can do:</p>
<pre><code>import test
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to avoid writing all of this everytime, you can define a function :</p>
<pre><code>run = lambda filename : exec(open(filename).read())
</code></pre>
<p>and then call it</p>
<pre><code>run('filename.py')
</code></pre>
</div>
<span class="comment-copy">What do you mean by "the python shell"?  Did you run <code>python</code> from the command line?  Or are you using IDLE or some other program which can also provide a Python <code>&gt;&gt;&gt;</code> prompt?</span>
<span class="comment-copy">Related posts - <a href="https://stackoverflow.com/q/1522564/465053">How do I run a Python program?</a> &amp; <a href="https://stackoverflow.com/q/5458048/465053">How to make a Python script standalone executable to run without ANY dependency?</a></span>
<span class="comment-copy">in the version 3 (my version) the equivalent is: exec(open("C:\\test.py").read()). thanks!</span>
<span class="comment-copy">@loops I'm getting: <code>SyntaxError: (Unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \uXXXX excape</code>. What does this mean?  I tried changing the encoding of my .py document to Unicode but that didn't have any effect.</span>
<span class="comment-copy">@loops --Okay I just learned about <code>\U</code> unicode escapes. Apparetly you avoid his miscommunication by duplicating all backslashes followed by U's. But this produces an OSError 22 invalid argument <code>'c:\\users\username\\desktop\\test.py'</code> which is weird because I only duplicated the backslash in <code>\Users</code>. Why does the error show that I duplicated all the backslashes except for the one followed by username?</span>
<span class="comment-copy">@Musixauce3000 Please <a href="http://stackoverflow.com/questions/ask">post a new question</a>.</span>
<span class="comment-copy">add an 'r' at the beginning if you get the SyntaxError: (Unicode error) 'unicodeescape' codec... Therefore it will be, exec(open(r"C:\\test.py").read()).</span>
