<div class="post-text" itemprop="text">
<p>I have data which I need to group either by mean or median. I want to write a function for this. This is what I tried so far</p>
<pre><code>def clean(data, met = np.mean):
    data_grouped = data.groupby(['zipcode','neighbourhood'], as_index=False).met()[['zipcode', 'neighbourhood','revenue']]
return data_grouped
</code></pre>
<p>This throws an error</p>
<pre><code>AttributeError: 'DataFrameGroupBy' object has no attribute 'met'
</code></pre>
<p>How do I go about this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<p>you can change <code>met</code> to <code>median</code> at the end (rather than <code>mean</code>, but for me it only worked when I specified the actual <code>groupby</code> methods (rather than use <code>numpy</code>'s). </p>
<p>Also, notice that <code>met</code> comes at the beginning rather than the end of the expression</p>
<pre><code>def clean(data, met = pandas.core.groupby.groupby.SeriesGroupBy.mean):
    return met(data.groupby(['zipcode','neighbourhood'], as_index=False)['zipcode', 'neighbourhood','revenue'])
</code></pre>
<p>It worked for me on a different dataset</p>
</div>
<span class="comment-copy">Have you considered <code>met(data.groupby(['zipcode','neighbourhood'], as_index=False))[['zipcode', 'neighbourhood','revenue']]</code>?</span>
<span class="comment-copy"><code>groupby().met()</code> means you are treating <code>met</code> as a method.  Methods are attributes, hence the error.  <code>np.mean</code> and <code>np.median</code> are numpy functions, not methods of the <code>groupby</code> object.</span>
<span class="comment-copy">You could pass the method name as a string <code>met='mean'</code> and  then use <code>operator.methodcaller(met, &lt;args&gt;)(&lt;object&gt;)</code></span>
