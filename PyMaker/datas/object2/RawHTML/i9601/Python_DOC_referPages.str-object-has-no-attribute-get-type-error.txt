<div class="post-text" itemprop="text">
<p>I try to append an element to a list but i received this error. I check if the types of the 2 objects are the same and if they have the same type, than i append it. So the next function is where i received the error. The class contains the elements.</p>
<pre><code> def LogsBeiTyp(self,list,type):

    """
    Thid funftion return a list that contains all logs group by a type
    :param list: a list that contains all object logare
    :return: a list modified in such a way thet elements are gropu by type
    """

    l=[]

    for el in list:
        if el.get_type()==type:
            l.append(el)

    return l
</code></pre>
<p>And this is the class :</p>
<pre><code>class Logare():

    """
     This   class contains information about a log
     It is known that each log has a date,type,description
    """

    def __init__(self,date,time,type,melldung):
        """

        The incresemnt function

        :param date: a  string which is written as "YYYY-MM-DD"
        :param type: a string that contains in cappital letters the type of thr log
        :param description: a string that contains more details about the log
        """

        self.date=date
        self.time=time
        self.type=type
        self.melldung=melldung

    def get_date(self):
        return self.date

    def get_time(self):
        return self.time

    def get_type(self):
        return self.type

    def get_melldung(self):
        return self.melldung

    def __str__(self):
        return '%s %s %s %s'%(self.date,self.time,self.type,self.melldung)
</code></pre>
<p>Here is where I bild the list</p>
<pre><code>from LogDatei.LogDatei import *
from Date.Date import *
from Melldung.Melldung import *
from Time.Time import *
class Repo():

    """
    This class contains the most important methonds
    """

    def __init__(self,filename):

        """
        The initialization function
        :param filename: the name of the file you want to take the information
        """
        self.filename=filename

    def get_all(self):

        """
        This function reads all lines from a file
        It grpups in in object Logare that is build from date,type and melldung
        date and melldung are classes also
        :return: a list that contains all information from file
        """

        rez=[]
        f=open(self.filename,'r')

        for line in f:

            tolks=line.split(' ',3)
            date=tolks[0].split('-',2)
            time=tolks[1].split(':',2)
            melldung=tolks[3].split(':')
            final=melldung[1].split('-')
            #date(date[0],date[1],date[2])
            #time()
            rez.append(Logare(date,time,tolks[2],Melldung(melldung[0],final[0],final[1],melldung[2])))

        return rez
</code></pre>
<p>In function get_all() I built the list than i sent it to the controler where i haev the function</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be resolved by using isinstance.  Using this construct you
could have:</p>
<pre><code>def LogsBeiTyp(self,list,class_type):

    """
    Thid funftion return a list that contains all logs group by a type
    :param list: a list that contains all object logare
    :return: a list modified in such a way thet elements are gropu by type
    """

    l=[]

    for el in list:
        if isinstance(el, class_type):
            l.append(el)

    return l
</code></pre>
<p>As mentioned using comments using a <strong>builtin</strong> (i.e., types) for a variable name is not a good idea.</p>
<p>Calling this within the Logare class and looking for Logare instances in a elements list would look something like:</p>
<pre><code>my_logs = self.LogsBeiTyp(elements, Logare)
</code></pre>
</div>
<span class="comment-copy">Can you post the stack trace for the exception?</span>
<span class="comment-copy"><code>for el in list</code> you mean <code>for el in l</code> here i think EDIT: nvm but don't name things <code>list</code>, it's a built-in</span>
<span class="comment-copy">Unrelated: It's a bad idea to overwrite built-ins like <a href="https://docs.python.org/3/library/functions.html#func-list" rel="nofollow noreferrer">list</a> and <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer">type</a>.</span>
<span class="comment-copy">writing getter's and setters is an anti-pattern in python</span>
<span class="comment-copy">Apparently, you are passing a list of strings rather than Logare objects.</span>
<span class="comment-copy">This is a band-aid solution. He should figure out why the list contains something that isn't a <code>Logare</code> and fix that.</span>
<span class="comment-copy">Logare is not a class, it is just a python file name</span>
<span class="comment-copy">This won't help here. get_type returns a custom value not the type of a class.</span>
