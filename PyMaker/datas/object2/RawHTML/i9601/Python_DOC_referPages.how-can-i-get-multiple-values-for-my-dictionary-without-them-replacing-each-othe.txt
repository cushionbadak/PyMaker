<div class="post-text" itemprop="text">
<pre><code>def newRecord(record):
    record= {'name' : 'test'}
    students = int(input('How many students are in your class? '))
    tests = int(input('How many tests have you given? '))
    for name in range(students):
        record ['name'] = input('Please enter students name: ')
        for test in range(tests):
            record ['test'] = input('Please enter test score: ')
    print (record)
</code></pre>
<p>For example, depending on the user input, I am trying to get record to print out as shown below and also trying to get all the values for test to be saved under the names specified.</p>
<pre><code>{'name' : ' sam', 'test':  '99','98','78'}
{'name' : 'john', 'test':  '92','68','70'}
</code></pre>
<p>or</p>
<pre><code>{'sam': '99','98','78'}
{'john':'92','68','70'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I see a few problems here:</p>
<ul>
<li>Your <code>record</code> parameter is <em>instantly</em> overwritten by the method, which may lead to strangeness down the road</li>
<li>You're attempting to encapsulate multiple values in a data structure which only handles key-value relationships</li>
<li>You're not really taking advantage of a useful design element with Python - <strong>class abstraction</strong>.</li>
</ul>
<p>My recommendations:</p>
<ol>
<li><p>Create a class for <code>Student</code>s and have all of their information referencable in there.</p>
<pre><code>class Student(object):
    def __init__(self, name):
        self.name = name
        self.test_scores = []
</code></pre>
<p>Here I'd recommend you define <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer">a suitable <code>__str__()</code></a> value, but I leave this as an exercise for the reader.</p></li>
<li><p>Create a list of records somewhere which is simply a list of students.</p>
<pre><code>students = []
</code></pre></li>
<li><p>Adjust your <code>newRecord</code> method to make use of the class (and rename it to better describe its purpose).</p>
<pre><code>def create_new_records():
    students = int(input('How many students are in your class? '))
    tests = int(input('How many tests have you given? '))
    for i in range(students):
        student_name = input('Please enter students name: ')
        student = Student(student_name)
        for j in range(tests):
            student.test_scores.append(input('Please enter test score: '))
    students.append(student)
    print(student)
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>use <code>list</code> as your tags imply:</p>
<pre><code>record['test'] = []
for test in range(tests):
    score = input('Please enter test score: ')
    record['test'].append(score)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should keep a <a href="https://www.tutorialspoint.com/python/python_lists.htm" rel="nofollow noreferrer">list</a> as values for each of the dictionary key items where keys will be student names and <code>list</code> will contain the test scores. See an example below.</p>
<pre><code>record= {}
students = int(input('How many students are in your class? '))
tests = int(input('How many tests have you given? '))
for name in range(students):
    name = input('Please enter students name: ')
    testScores = []
    for test in range(tests):
        testScores.append(input('Please enter test score: '))
    record[name] = testScores
print (record)
</code></pre>
<p>It outputs:</p>
<pre><code>How many students are in your class? 2
How many tests have you given? 3
Please enter students name: Alex
Please enter test score: 80
Please enter test score: 75
Please enter test score: 95
Please enter students name: Mac
Please enter test score: 90
Please enter test score: 88
Please enter test score: 79
{'Alex': ['80', '75', '95'], 'Mac': ['90', '88', '79']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can keep using a dictionary if you'd like:</p>
<pre><code>def newRecord():
    record = {}
    students = int(input('How many students are in your class? '))
    for name in range(students):
        name = input('Please enter students name: ')
        test = input('Please enter test score: ')
        record[name] = test
    print(record)
</code></pre>
<p>This will log:</p>
<pre><code>How many students are in your class? 3
Please enter students name: john
Please enter test score: 12
Please enter students name: mike
Please enter test score: 33, 45, 66
Please enter students name: otherjohn
Please enter test score: 9
{'john': '12', 'otherjohn': '9', 'mike': '33, 45, 66'}
</code></pre>
<p>Or you can do it in-place with:</p>
<pre><code>for name in range(students):
    record[input('Please enter students name: ')] = input('Please enter test score: ')
print (record)
</code></pre>
<p>This will ask you for the test scores first though and then the name.</p>
</div>
<span class="comment-copy">Do you know what a list is or how to use it?</span>
<span class="comment-copy">keep a list as values for each of the dictionary key items.</span>
<span class="comment-copy">You are confusing <code>'name'</code> with <code>name</code>. The <a href="https://docs.python.org/3.5/tutorial/introduction.html" rel="nofollow noreferrer">introduction page of the Python tutorial</a> goes over this.</span>
<span class="comment-copy">Thank you, I shall take your advice and rework my way to get to what you've explained above.</span>
<span class="comment-copy">Thank you for the help.</span>
<span class="comment-copy">haha you're welcome @Milky, i bet you have a lot to learn on programming!</span>
<span class="comment-copy">any reason for the negative vote?</span>
<span class="comment-copy">Hello, thank you and no reason here personally.</span>
