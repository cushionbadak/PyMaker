<div class="post-text" itemprop="text">
<p>I want to replace each instance of a character in one string with a character at the same index in another string. If no character exists at that index, leave it as it is.</p>
<p>Here's my solution with a list comprehension (Python 3):</p>
<pre><code>string1 = "food is delicious"
string2 = "orange is not delicious"
string3 = "".join([string2[i] if i&lt;len(string2) and c=="o" else c for i, c in enumerate(string1)])
print(string3)
</code></pre>
<p>Result</p>
<pre><code>frad is delicidus
</code></pre>
<p>It feels like there should be a better way though, for example using str.replace somehow. Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>itertools.zip_longest</code></a> to iterate both the strings, till the longest of the them is exhausted. The smaller string will be filled with <code>fillvalue</code></p>
<pre><code>&gt;&gt;&gt; s1 = "food is delicious"
&gt;&gt;&gt; s2 = "orange is not delicious"

&gt;&gt;&gt; from itertools import zip_longest
&gt;&gt;&gt; "".join([c2 if (c1 == 'o' and c2) else c1 for c1, c2 in zip_longest(s1, s2, fillvalue='')])
'frad is delicidus'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The shortest solution i found:</p>
<pre><code>a="food is delicious"
b="orange is not delicious"
''.join(y if x is 'o' else x for (x, y) in zip(a, b))
&gt;&gt;&gt;&gt; frad is delicidus
</code></pre>
<p>Note that the result string will have the length of the shorter of the two, because otherwise it would be undefined what to replace the remaining <code>o</code>s with.</p>
</div>
<span class="comment-copy"><b>Don't</b> use <code>is</code> to compare objects.</span>
<span class="comment-copy">Also, this will not work if the <code>a</code> is longer than <code>b</code>.</span>
