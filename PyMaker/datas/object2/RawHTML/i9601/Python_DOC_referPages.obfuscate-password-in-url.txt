<div class="post-text" itemprop="text">
<p>I want to obscure a password in a URL for logging purposes. I was hoping to use <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">urlparse</a>, by parsing, replacing password with dummy password, and unparsing, but this is giving me:</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlparse
&gt;&gt;&gt; parts = urlparse('https://user:pass@66.66.66.66/aaa/bbb')
&gt;&gt;&gt; parts.password = 'xxx'
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: can't set attribute
</code></pre>
<p>So the alternative seems to be <a href="https://www.metabrite.com/devblog/posts/python-obfuscate-url-password/" rel="nofollow noreferrer">this</a>, which seems overkill.</p>
<p>Is there an easier way of replacing the password, using the standard library?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>urlparse</code> returns a (subclass of) <em>named tuple</em>. Use the <a href="https://docs.python.org/3/library/collections.html#collections.somenamedtuple._replace" rel="nofollow noreferrer"><code>namedtuple._replace()</code> method</a> to produce a new copy, and use <code>geturl()</code> on that to 'unparse'.</p>
<p>The password is part of the <code>netloc</code> attribute, which can be parsed further:</p>
<pre><code>from urllib.parse import urlparse

def replace_password(url):
    parts = urlparse(url)
    if parts.password is not None:
        # split out the host portion manually. We could use
        # parts.hostname and parts.port, but then you'd have to check
        # if either part is None. The hostname would also be lowercased.
        host_info = parts.netloc.rpartition('@')[-1]
        parts = parts._replace(netloc='{}:xxx@{}'.format(
            parts.username, host_info))
        url = parts.geturl()
    return url
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; replace_password('https://user:pass@66.66.66.66/aaa/bbb')
'https://user:xxx@66.66.66.66/aaa/bbb'
</code></pre>
</div>
<span class="comment-copy">What is <code>parts</code> here?</span>
<span class="comment-copy">@AKS: sorry, I thought it was clear. Added more context.</span>
<span class="comment-copy">@janbrohl: That is exactly what the linked script is doing, and it seems overkill to me just because urlparse does not allow to set the separate components.</span>
<span class="comment-copy">I think one of the best way is to write a logger handler which will obfuscate password during logs creation</span>
<span class="comment-copy">For a simpler solution can't you directly replace the string by getting anything like this <code>:pass@</code> and replacing it?</span>
<span class="comment-copy">That is genious! Let me test it.</span>
<span class="comment-copy">@delavnog: slight issue: there is no password field; i'll update with the right field.</span>
<span class="comment-copy">Why not just checking if <code>parts.password is not None</code>?</span>
<span class="comment-copy">@warvariuc: because I forgot about that attribute ;-)</span>
<span class="comment-copy">Ok, that is a good middleground: some custom parsing there, but seems harmless enough. Not so good as the original replace password idea, but I guess urlparse / urlunparse does not allow for that. Thanks!</span>
