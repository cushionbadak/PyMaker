<div class="post-text" itemprop="text">
<p>I'm trying to understand what the fastest way is to add a bunch of strings that are pre-arranged in some fashion to a Listbox widget, so that every string is in a new line.</p>
<p>The quickest I could gather so far:</p>
<pre><code> from Tkinter import *

 strings= 'str1', 'str2', 'str3'
 listbox=Listbox(None)
 [listbox.insert(END, item) for item in strings]
 listbox.pack()
</code></pre>
<p>Is there perhaps a cleaner faster way to get it done, without iterating over every string? Perhaps if the strings are pre-packed in a certain way or using some other method? </p>
<p>If it is of relevance, I want to use it to display directory listings.</p>
</div>
<div class="post-text" itemprop="text">
<p>This code inserts all strings in the collection:</p>
<pre><code>listbox.insert(END, *strings)
</code></pre>
</div>
<span class="comment-copy">What's <code>END</code> in your case?</span>
<span class="comment-copy">@ettanany, that's the current end of the listbox as far as I understand from Programming Python, so basically allows inserting without being concerned with the current index</span>
<span class="comment-copy">Sweet, thanks. Just to make sure. is this the same usage of * as in *args/**kwargs to a function? I ask because if I remember correctly, I use *args in the function definition but not when calling it.</span>
<span class="comment-copy">@Joe Yes, it is.</span>
<span class="comment-copy">seems I need to read up on *args/**kwargs. thanks!</span>
<span class="comment-copy">@Joe The Python doc Index has a page called Symbols.  Under the <code>*</code> heading is an entry <code>in function calls</code>, which links to <a href="https://docs.python.org/3/reference/expressions.html#index-38" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#index-38</a>, which says "If the syntax *expression appears in the function call, expression must evaluate to an iterable. Elements from these iterables are treated as if they were additional positional arguments. ...", followed by more examples and explanations.</span>
<span class="comment-copy">Thanks @TerryJanReedy, I also found this in the python control flow docs -</span>
