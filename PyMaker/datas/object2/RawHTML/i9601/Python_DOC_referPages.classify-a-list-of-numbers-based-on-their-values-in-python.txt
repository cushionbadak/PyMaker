<div class="post-text" itemprop="text">
<p>I am trying to write a loop in python that reads a text file of 50 numbers and sorts through the numbers and assigns them to different variables based on their values. I would like variable A to contain values less than 2, variable B to to contain values from 2 to 2.1, Variable c to contain values from 2.1 to 2.25, variable d to contain values from 2.25 to 2.5, and variable e to contain values from 2.25 to 2.5. </p>
<p>My code so far looks like this: </p>
<pre><code>import os
import numpy
os.chdir('/Users/DevEnv')

dispFile = open('output1.txt')
displacement = dispFile.readlines()
dispFile.close()

displacement = [float(i.strip()) for i in displacement]


for i in range (0,50):
   displacementval = displacement[i]
   if i&lt;2 displacementval()=a():
</code></pre>
<p>However, when I try to run this I get an invalid syntax error. I am new to python and programming and would appreciate any help!</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to initialize variables <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code>, and <code>e</code> as <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">list</a>:</p>
<pre><code>import os
import numpy
os.chdir('/Users/DevEnv')

dispFile = open('output1.txt')
displacement = dispFile.readlines()
dispFile.close()

displacement = [float(i.strip()) for i in displacement]

a = []
b = []
c = []
d = []
e = []

for displacementval in displacement:
   if displacementval &lt; 2:
        a.append(displacementval)
   elif displacementval &lt; 2.1:
        b.append(displacementval)
   # ... the rest is similar, so omitted
print a
print b
</code></pre>
<p>I would suggest reading the official <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">Python tutorial</a>, so you get an idea of Python syntax first.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you get the hang of the above beginner friendly solutions, consider taking a look at <a href="https://docs.python.org/2/library/bisect.html#other-examples" rel="nofollow noreferrer">bisect</a>.</p>
<p>You can solve your problem by doing a little semantic modification of the linked example.</p>
<pre><code>from bisect import bisect

def grade(score, breakpoints=[2, 2.1, 2.25, 2.5], marks='abcde'):
        i = bisect(breakpoints, score)
        return marks[i]

a,b,c,d,e = [], [], [] ,[], []
lists = [a,b,c,d,e]
marks='abcde'

r = map(lambda x: x / 10.0, range(0, 501, 1))

for item in [(grade(score),score) for score in r ]:
    l = marks.index(item[0])
    lists[l].append(item[1])
</code></pre>
<p><code>grade()</code> , for a given number will ask, at what index would it go if it were to be inserted in breakpoints? And it will return marks[index]. For example if you gave it a score of 1, it would calculate that 1 belongs in index 0 of breakpoints before 2, so it will return marks[0]=a.</p>
<p>the print statement will give you a list of tuples containing (letter mark, value that mark is assigned to).</p>
<p>As I said this is more advanced and you should try to get to understand it after you grasped basic concepts, but it's worth taking a look at to bend your mind a little.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
import numpy
os.chdir('/Users/DevEnv')

dispFile = open('output1.txt')
displacement = dispFile.readlines()
dispFile.close()

displacement = [float(i.strip()) for i in displacement]
a = []
b = []
c = []
d = []
e = []

for i in displacement:
    if i &lt;2:
        a.append(i)
    elif i &lt; 2.1:
        b.append(i)
    elif i &lt; 2.25:
        c.append(i)
    elif i&lt; 2.5:
        d.append(i)
    else:
        e.append(i)
</code></pre>
<p>Don't forget to instantiate the lists, and the line <code>if i&lt;2 displacementval()=a():</code> doesn't mean anything.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's a couple of issues here, but I'll try my best to walk you through them.
First off, you said you wanted 5 variables: a, b, c, d, e, and that each should hold a list of values. To do this we must first <em>declare</em> each as a <em>list</em>, which, in Python is just a collection of values. This looks like this:</p>
<pre><code>a = []
b = []
c = []
d = []
e = []
</code></pre>
<p>Next during our for loop, we need to compare the values and sort them accordingly, like this:</p>
<pre><code>for i in range(0, 50):
    displacementval = displacement[i]
    if displacementval &lt; 2:
        a.append(displacementval)
    elif displacementval &lt; 2.1:
        b.append(displacementval)
    elif displacementval &lt; 2.25:
        c.append(displacementval)
    elif displacementval &lt; 2.5:
        d.append(displacementval)
        e.append(displacementval)
</code></pre>
<p>A little explanation: when we use <em>a_list.append(a_value)</em> we are adding that value on to the end of the list. Also, our if statement just checks if something is true, and then moves onto the next elif. So if a value is not &lt; 2, it will go to the next and check if it's less than 2.1, if it is it must be greater than or equal to 2 and less than 2.1, and so on.</p>
<p>Hopefully this helps!</p>
</div>
<span class="comment-copy">Where is that <code>a</code> variable coming from?</span>
<span class="comment-copy">a is a variable I would like to create to store the values that are less than 2</span>
<span class="comment-copy">Seems like values in displacmentval is already instantiated.</span>
<span class="comment-copy">Is that your actual code?  There are syntax errors - please clean it up&gt;</span>
<span class="comment-copy">Thank you very much!</span>
<span class="comment-copy">Great solution! But I would suggest using the original data in the question as an example, so <code>numpy</code> is not needed (since it does not come with Python by default).</span>
<span class="comment-copy">Thank you, I needed a quick way to demonstrate float ranges, do you know if STL supports that by default?</span>
<span class="comment-copy">There are multiple ways as discussed in this thread: <a href="http://stackoverflow.com/a/7267287/1292238">stackoverflow.com/a/7267287/1292238</a></span>
<span class="comment-copy">@azalea thanks, it was simple enough, edited with list dispatching</span>
<span class="comment-copy">Wow, thank you so much for the help!!</span>
<span class="comment-copy">an 'else' clause is missing in your code.</span>
<span class="comment-copy">@azalea what would the behavior be during the 'else' case?</span>
<span class="comment-copy">your current solution appends the same value to list <code>d</code> and <code>e</code>.</span>
<span class="comment-copy">@azalea the question says that values between 2.25 and 2.5 should be added to both <code>d</code> an <code>e</code>.</span>
<span class="comment-copy">Yes, you are right! (facepalm).</span>
