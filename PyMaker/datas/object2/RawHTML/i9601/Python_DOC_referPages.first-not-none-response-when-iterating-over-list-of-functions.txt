<div class="post-text" itemprop="text">
<p>I've got a list of functions, each of which can return <code>None</code> or a valid value. I want to take the result of the first <code>not None</code> response:</p>
<pre><code>funcs = (lambda: None, lambda: None, lambda: True)
result = next((f() for f in funcs if f()), None)  # result = True
</code></pre>
<p>This works, but I don't like that I've had to execute the function twice to perform the test and generate the result. Is there any way to only execute <code>f()</code> once and maintain the solution?</p>
<p>PS. I know I can do this in a <code>for</code> or traditional loop (that's how the code currently is), I'm looking for a nice one liner :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter()</code> function</a> to remove any falsey results (including <code>None</code>) as you iterate:</p>
<pre><code>try:
    # Forward compatibility for Python 2
    from future_builtins import filter
except ImportError:
    pass

result = next(filter(None, (f() for f in funcs)), None)  
</code></pre>
<p>To make sure you use the <em>iterator</em> version of <code>filter()</code> in Python 2 as well I used the <a href="https://docs.python.org/2/library/future_builtins.html#future_builtins.filter" rel="nofollow noreferrer"><code>filter</code> function from the <code>future_builtins</code> module</a>.</p>
<p>Just a demo to show that this won't execute more functions than needed:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; from future_builtins import filter
&gt;&gt;&gt; sys.version_info
sys.version_info(major=2, minor=7, micro=12, releaselevel='final', serial=0)
&gt;&gt;&gt; funcs = (lambda: None, lambda: None, lambda: True, lambda: 1/0)  # last one throws an exception!
&gt;&gt;&gt; next(filter(None, (f() for f in funcs)), None)
True
</code></pre>
</div>
<span class="comment-copy">Yes but that'll go through all the values <code>funcs</code>, this example is trivial but I'm using <code>next()</code> so it exits straight away because in my actual code each func is doing database multiple calls.</span>
<span class="comment-copy">@AlexLatchford: no, it won't. The Python 3 version of <code>filter</code> iterates lazily.</span>
<span class="comment-copy">Ah awesome, so if I use regular python 2.x version it will iterate though all values first right? (Just to make sure my logic of v2 filter is correct)</span>
<span class="comment-copy">@AlexLatchford: yes, the Python 2 built-in <code>filter()</code> function would return a list, having consumed the whole input iterator.</span>
<span class="comment-copy">Fantastic, answer will be accepted in 7 mins when the timer expires!</span>
