<div class="post-text" itemprop="text">
<p>I  have  a   csv file  which has the   first  row  as  column names.</p>
<p>I am  trying to  generate  a  new   csv file   from the  old one   .</p>
<p>The   new   csv file  is obtained by  filtering the   original  csv  file  by    the   second column whose  value  is   HR</p>
<p>Here  is the  code</p>
<pre><code>import csv
import os
Filename = os.getenv("HOMEDRIVE") + os.getenv("HOMEPATH") + "\\Desktop\RosterUnified.csv"
Filename1=os.getenv("HOMEDRIVE") + os.getenv("HOMEPATH") + "\\Desktop\RosterCurrentMonth.csv"
f1=open(Filename,'r',newline='\n')
f2=open(Filename1,'w',newline='\n')
reader = csv.DictReader(f1)
writer = csv.writer(f2)
rows = [row for row in reader if row[1] == 'HR']
for row in rows:
    writer.writerow(row)
f1.close()
f2.close()
</code></pre>
<p>I am getting the  error:</p>
<pre><code>Traceback (most recent call last):
  File "C:\Users\dasa17\Desktop\testcsv.py", line 9, in &lt;module&gt;
    rows = [row for row in reader if row[1] == 'HR']
  File "C:\Users\dasa17\Desktop\testcsv.py", line 9, in &lt;listcomp&gt;
    rows = [row for row in reader if row[1] == 'HR']
KeyError: 1
</code></pre>
<p>Sample from the   csv file, the  shifts  B,WO etc  corresponds to  dates</p>
<pre><code>Manager NT ID    Vertical Org   Employee ID 12/1/2016   12/2/2016   12/3/2016   12/4/2016   12/5/2016

johnyv  GS Finance  banakv  B   B   WO  WO  B
johnyv  GS Finance  anbazh  B   B   WO  WO  B
johnyv  GS Finance  immana  B   B   WO  WO  B
immana  GS Finance  raosha  B   B   WO  WO  B
chinj   GS Finance  johnyv  B   B   WO  WO  B
johnyv  GS Finance  yeddub  B   B   WO  WO  B
johnyv  GS Finance  sharmr25    B   B   WO  WO  B
chinj   GS Finance  pellan      B   WO  WO  B
johnyv  GS Finance  ccl B   B   WO  WO  B
johnyv  GS Finance  raos27  B   B   WO  WO  B
johnyv  GS Finance  chinns3 B   B   WO  WO  B
gopals5 IT  guntuv1 B   B   WO  WO  B
goganp  IT  vasuds2 G   G   WO  WO  G
sharmr1 IT  konakr  G   G   C   C   WO
mangan  IT  kanumr  B   B   WO  WO  B
singho1 IT  nanjad  G   G   G   G   G
goganp  IT  tandok  G   G   WO  WO  G
sharmr1 IT  ranjas2 D   WO  A   A   B
mangan  IT  poddar2 A   A   A   A   A
wongs2  IT  subras24    G   G   WO  WO  G
singho1 IT  sevakm  G   G   G   G   G
sharmr1 IT  gopalh  B   B   WO  WO  A
mangan  IT  ramakp2 B   B   B   B   B
cohna1  IT  perumk  B   B   WO  WO  B
ramosj6 IT  maddib  G   G   WO  WO  G
singho1 IT  guptar29    G   G   G   G   G
darisr  IT  vasudl  G   G   WO  WO  G
thangk  IT  singhs70    L   L   WO  WO  L
subras16    IT  hampas  A   A   A   A   A
gordos7 IT  subras16    B   B   B   B   B
omahoc  IT  royd1   G   G   WO  WO  G
darisr  IT  gandhn5 G   G   WO  WO  G
eranhm  IT  arasap  G   G   WO  WO  G
juszkw  IT  patilg2 B   B   WO  WO  B
mkulkarn    IT  kembhp  G   G   WO  WO  G
chavvp  IT  pinnas1 G   G   WO  WO  G
subras16    IT  dhanam  A   A   A   A   A
vasudl  IT  saralm  A   A   A   WO  A
mkulkarn    IT  sukumk1 G   B   WO  WO  B
arorag  IT  sreedr  G   G   WO  WO  G
subras16    IT  sivasm2 B   B   B   B   B
parvar  IT  razdak  B   B   WO  WO  L
vasudl  IT  jayacs1 B   B   WO  WO  A
palang1 IT  vedagm  B   B   B   B   B
mkulkarn    IT  kur5    G   G   WO  WO  G
sharmr1 IT  sambaa1 A   D   WO  WO  B
chavvp  IT  rangak3 G   G   WO  WO  G
arorag  IT  suryaa1 G   G   WO  WO  G
subras16    IT  kumarr27    B   B   B   B   B
Royd1   IT  gavria  G   G   WO  WO  G
</code></pre>
<p>The file  was   created using the  code</p>
<pre><code>d=open(Filename, 'w',newline='\n') #Format for CSV  input
    c = csv.writer(d)
    c.writerow(["Manager NT ID"," Vertical Org","Employee ID" ]+ dayssl)# Write  the  header list of strings  in the  first row
    for row in result_IT:
        c.writerow(row)#Write output for IT to csv
    d.close()


    e=open(Filename, 'a',newline='\n')

    f= csv.writer(e)
    for row in result_Others:
        f.writerow(row)# Append to the  existing  CSV file with non IT data 
    e.close()
    #Close the  CSV  file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I cannot see why you are using a DictReader. You are trying to access the second column so would have needed to use something like <code>row['NT']</code>, i.e. you would access it using the header name rather than its position. Using a standard CSV reader, you can just use the position.</p>
<p>I would recommend you make use of Python's <code>with</code> statement for accessing files which ensures the file is automatically closed afterwards (no need for a <code>close()</code> statement). You could also use <a href="https://docs.python.org/3/library/os.path.html?highlight=os.path.join#os.path.join" rel="nofollow noreferrer"><code>os.path.join()</code></a> to append your path components together as follows:</p>
<pre><code>import os
import csv

input_filename = os.path.join(os.getenv("HOMEDRIVE"), os.getenv("HOMEPATH"), r"Desktop\RosterUnified.csv")
output_filename = os.path.join(os.getenv("HOMEDRIVE"), os.getenv("HOMEPATH"), r"Desktop\RosterCurrentMonth.csv")

with open(input_filename, newline='\n') as f_input, open(output_filename, 'w', newline='\n') as f_output:
    csv_input = csv.reader(f_input)
    csv_output = csv.writer(f_output)
    #csv_output.writerow(next(csv_input))        # optionally copy over the header

    for row in csv_input:
        if row[1] == 'HR':
            csv_output.writerow(row)
</code></pre>
<p>This will result in a CSV output file containing only rows with <code>HR</code> in the second column. If you also need the header, just uncomment the line.</p>
<p>By working a row at time, it will work with any file size by avoiding loading the whole file into memory at once.</p>
</div>
<div class="post-text" itemprop="text">
<p>Uness you have a strong reason not to, just use pandas:</p>
<pre><code>import pandas as pd

filename_1 = os.getenv("HOMEDRIVE") + os.getenv("HOMEPATH") + "\\Desktop\RosterUnified.csv"
filename_2 = os.getenv("HOMEDRIVE") + os.getenv("HOMEPATH") + "\\Desktop\RosterCurrentMonth.csv"

df_1 = pd.read_csv(filename_1, sep='\t', skip_blank_lines=True)
df_2 = df_1[df_1['NT'] == 'HR']

df_2.to_csv(filename_2, sep='\t', index=False)
</code></pre>
<p>If <code>filename_1</code> is delimited by spaces instead of tabs, pass <code>sep=' *'</code> instead of <code>sep='\t'</code> to <code>read_csv</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>About the <code>KeyError</code>:</p>
<p>Essentially, the exception occurred because Python thinks you are trying to access the column nammed "1" in the last line:</p>
<pre><code>reader = csv.DictReader(f1)
writer = csv.writer(f2)
rows = [row for row in reader if row[1] == 'HR']
</code></pre>
<p>This happens because you are using <code>DictReader</code> and by your CSV snippet, the allowed columns are the ones that appear in the first row of your CSV file.</p>
<p>If possible, I highly recommend you to use ";" or "," as your column delimiter to make things easier</p>
</div>
<span class="comment-copy">Are there any blank lines in your <code>csv</code>?  you may have to open it with <code>newline=''</code>, like the docs recommend.  Or change your comp to <code>rows = [row for row in reader if row and row[1] == 'HR']</code></span>
<span class="comment-copy">Sample lines (first 5-10 lines) from your csv file?</span>
<span class="comment-copy">@Mohammad Yusuf Ghazi   added</span>
<span class="comment-copy">@Patrick Haugh   no there  are  no   blank spaces</span>
<span class="comment-copy">@ananda what are those dates doing there in the first column? You have 8 columns in data rows and 12 columns in header row.</span>
<span class="comment-copy">,@Martin Evans  I  tried  the   code , it rerturns  a blank (0 kb) csv  output</span>
<span class="comment-copy">only the   header part works   when uncommented</span>
<span class="comment-copy">The data you have given does not contain any records with <code>HR</code> in the second column. As a test, try changing the test to give you <code>IT</code> records, e.g.<code>if row[1] == 'IT':</code></span>
<span class="comment-copy">yes, works flawlessly, my   mistake  in including a filter   that was   not available. Thanks  Much  !!</span>
<span class="comment-copy"><i>Using a standard CSV reader, you can just use the position.</i> Actually, if you inform the fieldnames, you can access them by the name :)</span>
