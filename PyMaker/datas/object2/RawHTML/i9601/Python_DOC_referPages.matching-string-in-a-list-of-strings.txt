<div class="post-text" itemprop="text">
<p>I basically want to create a new list 'T' which will match if each element in the list 'Word' exists as a separate element in the list 'Z'.
ie I want the output of 'T' in the following case to be T = ['Hi x']</p>
<pre><code>Word = ['x']
Z = ['Hi xo xo','Hi x','yoyo','yox']
</code></pre>
<p>I tried the following code but it gives me all sentences with words having 'x' in it however I only want the sentences having 'x' as a separate word.</p>
<pre><code>for i in Z:
    for v in i:
        if v in Word:
            print (i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just another pythonic way</p>
<pre><code>[phrase for phrase in Z for w in Word if w in phrase.split()]
['Hi x']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do it with list comprehension.</p>
<pre><code>&gt;&gt;&gt; [i for i in Z if any (w.lower() ==j.lower() for j in i.split() for w in Word)]
['Hi x']
</code></pre>
<hr/>
<p>Edit:</p>
<p>Or you can do:</p>
<pre><code>&gt;&gt;&gt; [i for i in Z for w in Word if w.lower() in map(lambda x:x.lower(),i.split())]
['Hi x']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you want to print all strings from <code>Z</code> that contain a word from <code>Word</code>:</p>
<pre><code>Word = ['xo']
Z = ['Hi xo xo','Hi x','yoyo','yox']

res = []
for i in Z:
    for v in i.split():
        if v in Word:
            res.append(i)
            break
print(res)
</code></pre>
<p>Notice the <code>break</code>. Without the break you could get some strings from <code>Z</code> twice, if two words from it would match. Like the <code>xo</code> in the example.</p>
<p>The <code>i.split()</code> expression splits <code>i</code> to words on spaces.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>words = ['x']
phrases = ['Hi xo xo','Hi x','yoyo','yox']
for phrase in phrases:
    for word in words:
        if word in phrase.split():
            print(phrase)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you would store <code>Word</code> as a <code>set</code> instead of <code>list</code> you could use <code>set</code> operations for check. Basically following splits every string on whitespace, constructs <code>set</code> out of words and checks if <code>Word</code> is subset or not.</p>
<pre><code>&gt;&gt;&gt; Z = ['Hi xo xo','Hi x','yoyo','yox']
&gt;&gt;&gt; Word = {'x'}
&gt;&gt;&gt; [s for s in Z if Word &lt;= set(s.split())]
['Hi x']
&gt;&gt;&gt; Word = {'Hi', 'x'}
&gt;&gt;&gt; [s for s in Z if Word &lt;= set(s.split())]
['Hi x']
</code></pre>
<p>In above <code>&lt;=</code> is same as <a href="https://docs.python.org/3.5/library/stdtypes.html#set.issubset" rel="nofollow noreferrer"><code>set.issubset</code></a>.</p>
</div>
<span class="comment-copy">What is the question?</span>
<span class="comment-copy">what output do you want?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.split</a></span>
<span class="comment-copy">Just to confirm, if <code>Word</code> would be <code>['Hi', 'x']</code> you would still expect the same output <code>['Hi x']</code>?</span>
<span class="comment-copy">This looks better, hope OP gets this.</span>
<span class="comment-copy">Hi can you also edit this code to make it applicable for lowercase words for both lists 'Word' &amp; 'Z', ie i dont want to differentiate b/w 'Work' and 'work'.</span>
<span class="comment-copy">I am getting an error 'lower is not defined'.</span>
<span class="comment-copy">@InheritedGeek, sorry, there was a typo, see the updated answer.</span>
<span class="comment-copy">this does it, thanks @Ahsanul Haque</span>
<span class="comment-copy"><code>Word</code> was a list in OP's question, not a single string.</span>
<span class="comment-copy">Thank you for pointing that out.</span>
<span class="comment-copy">Now, you will print <code>Hi xo xo</code> twice if <code>words</code> contains <code>xo</code>. See my solution :)</span>
<span class="comment-copy">Did you run the program? It only prints once.</span>
<span class="comment-copy">Oh, ok. My bad.</span>
