<div class="post-text" itemprop="text">
<p>Whenever a file is uploaded to S3, I appreciate that S3 can write a message to SQS. However, accessing the file name ("key":"filename.txt") in the SQS message body from Python is a bit problematic since it's a dictionary that contains a list with multiple dictionaries. </p>
<p>Has anyone accessed the filename in the SQS message body when <em>that message was created by an S3 event</em>?  </p>
<p>The full message is:</p>
<pre><code>{
    "Records": [{
        "eventVersion": "2.0",
        "eventSource": "aws:s3",
        "awsRegion": "us-west-2",
        "eventTime": "2016-12-04T22:14:52.325Z",
        "eventName": "ObjectCreated:Put",
        "userIdentity": {
            "principalId": "ABC123"
        },
        "requestParameters": {
            "sourceIPAddress": "12.345.687.899"
        },
        "responseElements": {
            "x-amz-request-id": "ABC123",
            "x-amz-id-2": "ABCDEF"
        },
        "s3": {
            "s3SchemaVersion": "1.0",
            "configurationId": "MyQueueName",
            "bucket": {
                "name": "mybucket",
                "ownerIdentity": {
                    "principalId": "ABC123"
                },
                "arn": "arn:aws:s3:::mybucket"
            },
            "object": {
                "key": "filename.txt",
                "size": 2310,
                "eTag": "defg123",
                "sequencer": "00345"
            }
        }
    }]
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I've fixed your question to be proper <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">JSON</a>. </p>
<pre><code>import json
# message = get_sqs_message()
message = json.loads(message)
print(message["Records"][0]["s3"]["object"]["key"])
</code></pre>
<p>Should output <code>filename.txt</code></p>
</div>
<span class="comment-copy">Are you sure that isnt a standard JSON response message that you have to parse?</span>
<span class="comment-copy">Also,  <code>"object":"key":"filename.txt"</code> isnt valid JSON or Python dictionary syntax, so iI think you are missing some escape characters</span>
<span class="comment-copy">@cricket_007 I think that's a typo -- this message has been sanitized.  It's actually <code>"object":{"key":"filename.txt","size": ...</code>... yes, standard JSON.  OP needs to extract (pseudocode) from_json(this)-&gt;Records[0]-&gt;object-&gt;key.  Perhaps you can assist with that? I'm very familiar with this JSON data structure but I'm not a python person.  The Records array always only has 1 member (this data structure is a common one used by multple AWS services, which is why this is an array at all).</span>
<span class="comment-copy">@Michael-sqlbot Should take a about 10-15 minutes to go over the builtin <code>json</code> library of the Python documentation if you wanted to try</span>
<span class="comment-copy">I completely agree, @cricket_007 ... but I'm not the OP. I just threw that comment in to help try to clarify the apparent nature of the question, and to point out that your observation about the data structure was spot-on accurate, but that this isn't precisely what the original JSON string looks like -- many of the string values have been replaced with dummy values and the missing <code>{</code> is almost certainly an accidental artifact of that.</span>
<span class="comment-copy">Thanks for your help. I was receiving an error --&gt; TypeError: the JSON object must be str, not 'list'. The following 3 commands work and return the file name: message = queue.receive_messages(MaxNumberOfMessages=1)  jsonmsg = json.loads(message[0].body)  jsonmsg["Records"][0]["s3"]["object"]["key"]</span>
<span class="comment-copy">Yes, I didn't know the format of the message you were receiving. But, you figured it out ..<code>message[0].body</code></span>
