<div class="post-text" itemprop="text">
<p>I am trying to get the pending data size in output buffer after calling my socket's sendall(). 
I am using TCP (non-blocking) socket in a class. My code for send message function in the class is as follows:</p>
<pre><code>def send_data(self, msg):
    try:
        status_of_send = self.client.sendall(msg)
        buffer = array.array('I', [0])
        pending = fcntl.ioctl(self.tcp_socket.fileno(), termios.TIOCOUTQ, buffer, True)
        print pending
    except socket.error as e:
        print 'Error while sending data: %s', e
</code></pre>
<p>On calling to this function, an Error is occurring as follows:   </p>
<pre><code>TraceBack (most recent call last):
File "server.py", line 199, in send_date
pending = fcntl.ioctl(self.tcp_socket.fileno(), termios.TIOCOUTQ, buffer, True)
IOERROR: [Errno 22] Invalid argument
</code></pre>
<p>I checked for the same Error, but as per the document of python linked as <a href="https://docs.python.org/3/library/fcntl.html#fcntl.ioctl" rel="nofollow noreferrer">https://docs.python.org/3/library/fcntl.html#fcntl.ioctl</a> I am using the same method. But still the Error is Occurring</p>
<p>Can any one help me with this??</p>
<p>I am using platform kernel v 3.18.7 -7+
and python v 2.7.3</p>
</div>
<div class="post-text" itemprop="text">
<p>From <code>sendall</code> <a href="https://docs.python.org/3.6/library/socket.html#socket.socket.sendall" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>Send data to the socket... <em>Unlike send(), this method continues to send data from string until either all data has been sent or an error occurs.</em> None is returned on success. On error, an exception is raised, and there is no way to determine how much data, if any, was successfully sent.</p>
</blockquote>
<p>With that being said, <code>status_of_send</code> will always be <code>None</code> and it will send the whole <code>msg</code>. Otherwise, an exception will be raised and you won't be able to see how much data it managed to send.</p>
<p>On the other hand, I found <a href="https://mail.python.org/pipermail/python-dev/2003-January/032458.html" rel="nofollow noreferrer">Guido van Rossum's email</a> where he states that you shouldn't use sendall with a non-blocking socket. Searching for this question in the internet seems to confirm this claim.</p>
<p>It's <a href="https://docs.python.org/3.6/library/socket.html#socket.socket.send" rel="nofollow noreferrer"><code>send</code></a> that may not send all the message. In this case you don't need to use <code>ioctl</code> as well, because <code>send</code> returns the number of bytes it sent. You can use it like this (plus some non-blocking checks perhaps):</p>
<pre><code>def my_sendall(sock, message):
    bytes_sent = 0
    while bytes_sent &lt; len(message):
        bytes_sent += sock.send(message[bytes_sent:])
</code></pre>
</div>
<span class="comment-copy">Are you certain that the number-of-bytes-in-the-output-buffer is something that is useful to know?  That number will be decreasing asynchronously to your program (as the TCP stack sends out more buffered data to the network device), so any number that gets returned will likely already be wrong/out-of-date before you can use it to make any decisions.  The result is that using that information for any purpose will likely make your program unreliable.  What are you hoping to achieve by knowing that information?</span>
<span class="comment-copy">I am now calling the same function "fcntl.ioctl()" in a loop with a timeout of some dynamic time t which i am taking as an input, and want to know whether at that particular time, the output buffer is emptied or Not, By this, I want to make sure that the ACK for the sent data has been received...</span>
<span class="comment-copy">on using send() instead of sendall() , does it also returns ack on successfull sending the data to the counter-part.???? I basically want to get the Ack of the sent data. which I am not able to get on sendall() for which i used ioctl() to check the pending data in the output buffer for a specific time, till which if pending data is empty, then I am assuming that the data is sent and ACK is obtained, if not then i want to perform some other operation...</span>
