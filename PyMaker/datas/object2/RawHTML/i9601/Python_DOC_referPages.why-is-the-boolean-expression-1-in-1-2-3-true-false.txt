<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/9284350/why-does-1-in-1-0-true-evaluate-to-false">Why does (1 in [1,0] == True) evaluate to False? [duplicate]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/6074018/why-does-the-expression-0-0-0-return-false-in-python">Why does the expression 0 &lt; 0 == 0 return False in Python?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>Why does the statement <code>1 in (1, 2, 3) == True</code> return <code>False</code> in Python?
Is the operator priority in Python ambiguous?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because, per <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">the documentation</a> on operator precedence:</p>
<blockquote>
<p>Note that comparisons, membership tests, and identity tests, all have
  the same precedence and have a left-to-right chaining feature as
  described in the <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">Comparisons</a> section.</p>
</blockquote>
<p>The Comparisons section shows an example of the chaining:</p>
<blockquote>
<p>Comparisons can be chained arbitrarily, e.g., <code>x &lt; y &lt;= z</code> is equivalent
  to <code>x &lt; y and y &lt;= z</code></p>
</blockquote>
<p>So:</p>
<pre><code>1 in (1, 2, 3) == True
</code></pre>
<p>is interpreted as:</p>
<pre><code>(1 in (1, 2, 3)) and ((1, 2, 3) == True)
</code></pre>
<p>If you override this chaining by adding parentheses, you get the expected behaviour:</p>
<pre><code>&gt;&gt;&gt; (1 in (1, 2, 3)) == True
True
</code></pre>
<p>Note that, rather than comparing truthiness by equality to <code>True</code> or <code>False</code>, you should just use e.g. <code>if thing:</code> and <code>if not thing:</code>.</p>
</div>
<span class="comment-copy">Comparisons can be chained arbitrarily, e.g., x &lt; y &lt;= z is equivalent to x &lt; y and y &lt;= z</span>
<span class="comment-copy">@宏杰李 yes that is true - I've literally just added that quote from the docs!</span>
<span class="comment-copy">we got same idea, lol</span>
<span class="comment-copy">Also, if you explicitly want to compare to <code>True</code> use <code>stuff is True</code>, not <code>stuff == True</code></span>
