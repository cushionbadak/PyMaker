<div class="post-text" itemprop="text">
<p>I try to understand generator in python 3. I try the following code:</p>
<pre><code>def int_gen():
    """Infinite integer generator"""
    n = 1
    while True:
        n = n + 1
        yield n

print(next(int_gen())) # 2 
print(next(int_gen())) # 2
print(next(int_gen())) # 2
</code></pre>
<p>However, in this case:</p>
<pre><code>for i in int_gen():
    print(i)
</code></pre>
<p>The results as I expected:</p>
<pre><code>2
3
4
...
</code></pre>
<p>Refering to: <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a>, <a href="https://stackoverflow.com/questions/2776829/difference-between-pythons-generators-and-iterators">this answer</a> and <a href="http://anandology.com/python-practice-book/iterators.html" rel="nofollow noreferrer">this example</a></p>
<p>Why do 2 results difference ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Each time you call <code>int_gen()</code>, you make a new generator that restarts everything. If you want the generator to continue where it left off, you'll have to save it so you have something useful to pass to <code>next()</code>.</p>
<pre><code>it = int_gen()
print(next(it)) # 2
print(next(it)) # 3
print(next(it)) # 4
</code></pre>
</div>
