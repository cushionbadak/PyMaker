<div class="post-text" itemprop="text">
<p>I'm having problem with understanding why unpacking does not work with list and print statement in Python 2.7:</p>
<pre><code>&gt;&gt;&gt; l=['a', 'b', 'c']
&gt;&gt;&gt; print (*l, sep='')
</code></pre>
<p>Python 3.x works fine and prints:</p>
<pre><code>abc
</code></pre>
<p>Python 2.7, however, raises an error:</p>
<pre><code> print (*l, sep='')
       ^
SyntaxError: invalid syntax
</code></pre>
<p>How can I make it work for Python 2.7?</p>
<p>I know I can alternatively code it using join with: <code>''.join(l)</code> </p>
</div>
<div class="post-text" itemprop="text">
<p>Because <code>print</code> isn't a function in Python 2; unpacking a list and providing it as positional args <em>isn't possible if it isn't a function</em>. </p>
<p>You'll need to import the <code>print_function</code> from <code>__future__</code> in order to support this:</p>
<pre><code>&gt;&gt;&gt; from __future__ import print_function
</code></pre>
<p>Now unpacking is possible:</p>
<pre><code>&gt;&gt;&gt; l = ['a', 'b', 'c']
&gt;&gt;&gt; print(*l, sep='')
abc
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have two options:</p>
<ul>
<li><p>Convert to strings and join with spaces manually:</p>
<pre><code>print ''.join(map(str, l))
</code></pre></li>
<li><p>Use the <a href="https://docs.python.org/2/library/functions.html#print" rel="nofollow noreferrer"><code>print()</code> <em>function</em></a>, by using the <code>from __future__</code> import that disables the <code>print</code> <em>statement</em>:</p>
<pre><code>from __future__ import print_function

print(*l, sep='')
</code></pre>
<p>or directly call the function by accessing it via the <a href="https://docs.python.org/2/library/__builtin__.html" rel="nofollow noreferrer"><code>__builtin__</code> module</a>:</p>
<pre><code>import __builtin__
print_function = getattr(__builtin__, 'print')

print_function(*l, sep='')
</code></pre>
<p>The same function is available in both Python 2 and 3, but in Python 2 you can't use it directly without first disabling keyword.</p></li>
</ul>
</div>
<span class="comment-copy">There is no <code>*</code> operator in Python 2.</span>
<span class="comment-copy">@EliSadoff: sure there is. It's the <a href="https://docs.python.org/2/reference/expressions.html#binary-arithmetic-operations" rel="nofollow noreferrer">multiplication operator</a> (in both 2 and 3). <code>*</code> in calls or function definitions is not an operator, however, but does exist in Python 2.</span>
<span class="comment-copy">@MartijnPieters Let me correct myself, there is no unary <code>*</code> operator in python 2.</span>
<span class="comment-copy">@EliSadoff: nor is there one in Python 3. It is <b>not an operator</b>. It is part of a larger syntax construct. Like a <a href="https://docs.python.org/3/reference/expressions.html#calls" rel="nofollow noreferrer">call</a> or a <a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions" rel="nofollow noreferrer">function definition</a>. In Python 3, <a href="https://docs.python.org/3/reference/expressions.html#expression-lists" rel="nofollow noreferrer">expression lists</a> now support such syntax where in Python 2 they didn't.</span>
