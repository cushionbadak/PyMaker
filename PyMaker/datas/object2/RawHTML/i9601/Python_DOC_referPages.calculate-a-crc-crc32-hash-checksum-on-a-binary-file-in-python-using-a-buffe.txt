<div class="post-text" itemprop="text">
<p>I've been trying to teach myself Python so I don't fully understand what I'm doing.  I'm embarrassed to say this but my question should be really easy to answer.  I want to be able to do a CRC checksums on binary files with code similar to this:</p>
<pre><code># http://upload.wikimedia.org/wikipedia/commons/7/72/Pleiades_Spitzer_big.jpg

import zlib

buffersize = 65536

with open('Pleiades_Spitzer_big.jpg', 'rb') as afile:
    buffr = afile.read(buffersize)
    while len(buffr) &gt; 0:
        crcvalue = zlib.crc32(buffr)
        buffr = afile.read(buffersize)

print(format(crcvalue &amp; 0xFFFFFFFF, '08x'))
</code></pre>
<p>The correct result should be "a509ae4b" but my code's result is "dedf5161". I think what is happening is the checksum is being calculated on either the first or last 64kb of the file instead of the whole file.  </p>
<p>How should the code be altered so it checks the entire file without loading the entire file into memory?  </p>
<p>As it is, the code "works" in either Python 2.x or 3.x.  If the code <strong>has</strong> to be in one or the other, I'd prefer it to be in 3.x.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're currently calculating CRC of only the last chunk of the file. In order to fix this pass current <code>crcvalue</code> to <a href="https://docs.python.org/3/library/zlib.html#zlib.crc32" rel="nofollow noreferrer"><code>crc32</code></a> as starting value:</p>
<pre><code>import zlib

buffersize = 65536

with open('Pleiades_Spitzer_big.jpg', 'rb') as afile:
    buffr = afile.read(buffersize)
    crcvalue = 0
    while len(buffr) &gt; 0:
        crcvalue = zlib.crc32(buffr, crcvalue)
        buffr = afile.read(buffersize)

print(format(crcvalue &amp; 0xFFFFFFFF, '08x')) # a509ae4b
</code></pre>
<p>Here's the relevant part from Python docs:</p>
<blockquote>
<p>If value is present, it is used as the starting value of the checksum; otherwise, a default value of 0 is used. Passing in value allows computing a running checksum over the concatenation of several inputs.</p>
</blockquote>
</div>
<span class="comment-copy">I read that in the Python docs but didn't understand it well enough to make the code work.  Thank you, so much!</span>
