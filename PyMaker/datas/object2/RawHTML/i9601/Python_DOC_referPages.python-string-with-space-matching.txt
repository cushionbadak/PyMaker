<div class="post-text" itemprop="text">
<p>while trying to eliminate few strings in the list of strings, I tried to use a simple code similar to:</p>
<pre><code>&gt;&gt;&gt; s = ['a b', 'c d', 'e f', 'g h']
&gt;&gt;&gt; for i in s:
...     if i is not 'e f':
...         print(i)
...
a b
c d
e f    # this should not get printed, right?
g h
</code></pre>
<p>and i am unable to understand the underlying behavior?
can u explain? because the following seems logical and above should also work accordingly</p>
<pre><code>&gt;&gt;&gt; if 'a b' is not 'a b':
...     True
... else:
...     False
...
False
&gt;&gt;&gt; s = ['a', 'c', 'e', 'g']
&gt;&gt;&gt; for i in s:
...     if i is not 'e':
...         print(i)
...
a
c
g
</code></pre>
<p>are spaces to be treated specially? What am i missing?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>is not</code> is an identity based test; when it works on strings, it's due to interning of strings or the small string cache; it's an implementation detail that should never be relied on.</p>
<p>Don't use <code>is</code>/<code>is not</code> in general, except for comparisons to <code>None</code>, until you really understand what it's doing. You want <code>!=</code> here, which <a href="https://docs.python.org/3/reference/expressions.html#value-comparisons" rel="nofollow noreferrer">tests <em>value</em></a> (do the two objects represent the same logical information?), not <code>is not</code>, which <a href="https://docs.python.org/3/reference/expressions.html#is-not" rel="nofollow noreferrer">tests <em>identity</em></a> (are both things referring to the exact same object?).</p>
<p>If you wanted to force this to work, you could do something terrible, like explicitly <code>intern</code>ing all the strings involved, but that doesn't save any work (the work is spent interning them), and it's generally frowned upon.</p>
</div>
