<div class="post-text" itemprop="text">
<p>I'm trying to inherit from this class:</p>
<pre><code>class Event(Clock, Calendar):

    def __init__(self):
        year,month,day, hours, minutes,seconds = time.localtime()[0:6]

        eClock = Clock(hours,minutes,0)
        eCal = Calendar(month, day, year)

    def createEvent(self,year,month,day,hours,minutes):
        year,month,day = date[0:]
        hours,minutes = ttime[0:2]
</code></pre>
<p>In order to create an event here:</p>
<pre><code>sett = line[1:].split(",") # Line[1:] is going to be a
                           # date, such as 1/8/17 17:50.
date = sett[0]
ttime = sett[1]
ttime = ttime.split(":")
date = date.split("/")
Cevent = ttime + date
Cevent.event()
</code></pre>
<p>I have another class, called Reminder, that inits this:</p>
<pre><code>event = Event.createEvent()
</code></pre>
<p>Anytime I try to run this program though, it gives me this error:</p>
<blockquote>
<p>TypeError: unbound method createEvent() must be called with Event
  instance as first argument (got nothing instead)</p>
</blockquote>
<p>Im wondering why, and how I could take the method createEvent and use it in another class in the same file.</p>
</div>
<div class="post-text" itemprop="text">
<p>A bound method means that the method is called from a class.  Let's look at an example:</p>
<pre><code>class MyClass:
    def add(self, x, y):
        return x+y
</code></pre>
<p>vs</p>
<pre><code>def add_numbers(x, y):
    return x+y
</code></pre>
<p>The method add_numbers() is an unbound method, meaning it is not attached to any class instance.  To use it, we can just call:</p>
<pre><code>print(add_numbers(1, 2))
</code></pre>
<p>However, when we want to call the method add(), we need an <em>instance</em> of the class MyClass:</p>
<pre><code>class_instance = MyClass()
print(class_instance.add(1, 2))
</code></pre>
<p>Notice that when we want to call the add() method, we first have to create a new instance of the class, then use that to call the method,  Under the hood, python takes the <em>class_instance</em> variable and passes it to the method as the 'self' argument seen in the function definition.</p>
<p>In closing, your issue is in the line:</p>
<pre><code>event = Event.createEvent()
</code></pre>
<p>The error is telling you that the method is expecting an instance of an event class, and not the class itself.  If the Event class can be instantiated without arguments, then the correct syntax would be:</p>
<pre><code>base_event = Event()
event = base_event.createEvent()
</code></pre>
<p>Of course, the method of instantiating the <em>base_event</em> variable will depend on the API you're trying to use.</p>
</div>
<span class="comment-copy">I actually don't know what you're trying to achieve here. The error is because <code>createEvent</code> is a normal method, make it a <code>classmethod</code> or <code>staticmethod</code> or call it on an actual instance <code>Event().createEvent()</code>. But I really don't know what your class is trying to do because nothing is saved as properties and nothing is returned.</span>
<span class="comment-copy">If <code>createEvent</code> is not intended to be an instance attribute, you could just as easily define it at the module level - it doesn't have to be in a class.  If you want it to be a class method instead of an instance method decorate/define it like this  -<a href="https://docs.python.org/3/library/functions.html#classmethod" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#classmethod</a>.  For a static method - <a href="https://docs.python.org/3/library/functions.html#staticmethod" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#staticmethod</a>.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/a/27568860/2823755">stackoverflow.com/a/27568860/2823755</a> - You should look at all the answers in the Q&amp;A.</span>
