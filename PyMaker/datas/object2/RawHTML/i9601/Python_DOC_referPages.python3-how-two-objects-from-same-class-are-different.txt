<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/37648137/comparing-two-identical-objects-in-python-2-7-returns-false">Comparing two identical objects in Python (2.7) returns False</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I am looking at simple python code like below</p>
<pre><code>class Robot:
    pass

if __name__ == "__main__":
    x = Robot()
    y = Robot()
    y2 = y
    print(y == y2)
    print(y == x)
</code></pre>
<p>and output is </p>
<pre><code>True
False
</code></pre>
<p>That's the advantage of OOP concept, I understand. But what makes it different like when two different objects are reference to same class they almost have same properties but something is different and I want to know that property which is different. </p>
<p>EDIT: I think this question is not duplicate to given question below. I want to see each object more deeply something like skeleton structure. They have different ID's I can understand that because object ID concept in python is something similar to <a href="http://www.python-course.eu/python3_variables.php" rel="nofollow noreferrer">variable ID's concept</a> , only ID's assigning concept.  </p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is called <em>identity</em> and you can get (a numeric representation of) it by using the function <a href="https://docs.python.org/3/library/functions.html#id" rel="nofollow noreferrer"><code>id</code></a>.</p>
<pre><code>print(id(x))
print(id(y))
print(id(y2))

163193456
163193584
163193584
</code></pre>
<p>The only thing which is necessarily different in two objects is the identity (the result of calling <code>id</code> on them, if you want to be pragmatic). Everything else can be the same.</p>
</div>
<span class="comment-copy">because those are 2 instances for x and y. y2 and y share the same reference.</span>
<span class="comment-copy"><code>print id(x), id(y), id(x) != id(y)</code></span>
<span class="comment-copy">@muç„¡ Can I take this concept it a little deeper ? Please excuse me if its a silly question but I want to ask. Is there any way I can see what properties were adopted to reference objects ?</span>
<span class="comment-copy">@Raja I don't understand how object identity is related to any "skeleton structure". Actually in python an object's structure can change but it still is the same object.</span>
<span class="comment-copy">@Goyo oh please excuse me for my reply. I am saying I dont want to differ two objects by their ID's and I want to differ two objects by their other properties. is it possible ? I dont know what are the other properties and I would like to know if they are exist. Thank you.</span>
