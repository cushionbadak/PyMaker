<div class="post-text" itemprop="text">
<p>When I execute this code I get the following error: </p>
<blockquote>
<blockquote>
<blockquote>
<p>AttributeError: 'function' object has no attribute 'labels_'</p>
</blockquote>
</blockquote>
</blockquote>
<p>I understand that this message is triggered by the method:
clusterWithFewestSamples</p>
<p>by lines like: </p>
<p>minSamples = len(model.labels_)</p>
<p>Any hint on what's wrong or what's lacking?</p>
<p>Many thanks in advance.</p>
<p>Jordi</p>
<pre><code>import pandas as pd
from datetime import timedelta
import matplotlib.pyplot as plt
import matplotlib
from sklearn.cluster import KMeans

matplotlib.style.use('ggplot')


def model(self, num):
    return

def showandtell(title=None):
    if title != None: plt.savefig(title + ".png", bbox_inches='tight', dpi=300)
    plt.show()
    exit()

def clusterInfo(model):
    print "Cluster Analysis Inertia: ", model.inertia_  
    print '------------------------------------------'
    for i in range(len(model.cluster_centers_)):
      print "\n  Cluster ", i
      print "    Centroid ", model.cluster_centers_[i]
      print "    #Samples ", (model.labels_==i).sum() # NumPy Power

def clusterWithFewestSamples(model):
    minSamples = len(model.labels_)
    minCluster = 0
    for i in range(len(model.cluster_centers_)):
        if minSamples &gt; (model.labels_==i).sum():
            minCluster = i
            minSamples = (model.labels_==i).sum()
        print "\n Cluster With Fewest Samples: ", minCluster
    return (model.labels_==minCluster)

def doKMeans(data, clusters=0):
    df_user1 = data.loc[:, ['TowerLon', 'TowerLat']]
    kmeans = KMeans(n_clusters=clusters)
    kmeans.fit(df_user1)
    labels = kmeans.predict(df_user1)
    centroids = kmeans.cluster_centers_
    ax.scatter(centroids[:,0], centroids[:,1], marker='x', c='red', alpha=0.5, linewidths=3, s=169)
    print centroids
    return model

df = pd.read_csv('Datasets/CDR.csv')
df.CallDate = pd.to_datetime(df.CallDate, errors='coerce')
df.CallTime = pd.to_timedelta(df.CallTime, errors='coerce')

PhoneList = df["In"].unique()

print "\n\nExamining person: ", 0

user1 = df[df.In == PhoneList[0]]
user1 = user1[(user1.DOW != 'Sat') &amp; (user1.DOW != 'Sun')]
user1 = user1[(user1.CallTime &gt; '09:00:00') | (user1.CallTime &lt; '17:00:00')]

fig = plt.figure()

ax = fig.add_subplot(111)
ax.scatter(user1.TowerLon,user1.TowerLat, c='g', marker='o', alpha=0.2)
ax.set_title('Weekday Calls (&gt;7:306am or &lt;17p)')

model = doKMeans(user1, 2)

midWayClusterIndices = clusterWithFewestSamples(model)
midWaySamples = user1[midWayClusterIndices]
print " Its Waypoint Time: ", midWaySamples.CallTime.mean()

ax.scatter(model.cluster_centers_[:,1], model.cluster_centers_[:,0], s=169, c='r', marker='x', alpha=0.8, linewidths=2)

showandtell('Weekday Calls Centroids')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Where does <code>model</code> come from?</p>
<pre><code>def doKMeans(data, clusters=0):
    ...
    return model

model = doKMeans(user1, 2)
</code></pre>
<p>In <code>doKMeans()</code> nothing ever gets assigned to <code>model</code>, I'm surprised it doesn't throw a NameError exception.  Maybe it should be </p>
<pre><code>def doKMeans(data, clusters=0):
    ...
    return kmeans
</code></pre>
<p>An <code>sklearn.cluster.KMeans</code> object does have a <code>labels_</code> attribute.</p>
<hr/>
<p>You expect <code>model</code> to have a <code>labels_</code> attribute but you have defined <code>model</code> as a function that returns <code>None</code></p>
<pre><code>def model(self, num):
    return
</code></pre>
<p>When <code>doKMeans</code> is called, it returns the function named <code>model</code></p>
<pre><code>def doKMeans(data, clusters=0):
    ...
    return model
</code></pre>
<p>So the statement <code>model = doKMeans(user1, 2)</code> does nothing:</p>
<pre><code>&gt;&gt;&gt; def f(a,b):
    return
&gt;&gt;&gt; f
&lt;function f at 0x00000000034A9840&gt;

&gt;&gt;&gt; def g(a,b):
    return f

&gt;&gt;&gt; f = g(1,2)
&gt;&gt;&gt; f
&lt;function f at 0x00000000034A9840&gt;
</code></pre>
<p>Neither the function, <code>model</code>, or its return value, <code>None</code> have a <code>labels_</code> attribute.</p>
</div>
<span class="comment-copy">What is a <code>model</code>?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Catch the exception</a> and in the except suite inspect <code>model</code> - what <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer">type</a> is it, does it <a href="https://docs.python.org/3/library/functions.html#hasattr" rel="nofollow noreferrer">have a <code>labels_</code> attribute</a>, <a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer">what attributes does it have</a>?</span>
<span class="comment-copy">is the indentation of line <code>print "    #Samples ", (model.labels_==i).sum() # NumPy Power</code> in <code>def clusterInfo(model)</code> right ?</span>
<span class="comment-copy">Where does <code>model</code> come from?</span>
<span class="comment-copy">The indentation was mistaken in the pasted code (but ok in the actual python code). Just edited.</span>
<span class="comment-copy">I forgot to add           "def model(self, num): /           return"   at the beginning of the code (that is in the actual code, sorry about that). Before that addition I was getting an error message complaining about "model" as you imagined.</span>
<span class="comment-copy">@JordiGalli - then what about this line - <code>model = doKMeans(user1, 2)</code>  what does it do?</span>
<span class="comment-copy">Thanks for your help. I understand that "model = doKMeans(user1, 3)" executes the doKMeans module with those parameters. Originally the "def model(self): return" wasn't there, but I got an error about global name model not being defined, so I added that and the error disappeared. Perhaps I should have added something to the return? When debugging it seems that the error arises after "midWayClusterIndices = clusterWithFewestSamples(model)" is executed. As you mention there is the message "--Return-- None". Not sure if this helps you understand what the problem could be. Thanks.</span>
