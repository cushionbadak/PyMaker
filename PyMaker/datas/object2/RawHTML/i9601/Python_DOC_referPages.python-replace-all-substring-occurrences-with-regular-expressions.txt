<div class="post-text" itemprop="text">
<p>I would like to replace all substring occurrences with regular expressions. The original sentences would be like:</p>
<pre><code>mystring = "Carl's house is big. He is asking 1M for that(the house)."
</code></pre>
<p>Now let's suppose I have two substrings I would like to bold. I bold the words by adding ** at the beginning and at the end of the substring. The 2 substrings are:</p>
<pre><code>substring1 = "house", so bolded it would be "**house**"
substring2 = "the house", so bolded it would be "**the house**"
</code></pre>
<p>At the end I want the original sentence like this:</p>
<pre><code>mystring = "Carl's **house** is big. He is asking 1M for that(**the house**)."
</code></pre>
<p>The main problem is that as I have several substrings to replace, they can overlap words like the example above. If I analyze the longest substring at first, I am getting this:</p>
<pre><code>Carl's **house** is big. He is asking 1M for that(**the **house****). 
</code></pre>
<p>On the other hand, if I analyze the shortest substring first, I am getting this:</p>
<pre><code>Carl's **house** is big. He is asking 1M for that(the **house**).
</code></pre>
<p>It seems to be I will need to replace from the longest substring to the shortest, but I wonder how should I do to consider it in the first replacement but in the second. Also remember the substring can appear several times in the string.</p>
<p>Note:// Suppose the string ** will never occur in the original string, so we can use it to bold our words</p>
</div>
<div class="post-text" itemprop="text">
<p>You can search for all of the strings at once, so that the fact that one is a substring of another doesn't matter:</p>
<pre><code>re.sub(r"(house|the house)", r"**\1**", mystring)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could have a group that is not captured and is note required. If you look at the regex patter <code>(?P&lt;repl&gt;(?:the )?house)</code>, the <code>(?:the )?</code> part is saying that there might be a <code>the</code> in the string, if it is present, include it in the match. This way, you let the <code>re</code> library optimize the way it matches. Here is the complete example</p>
<pre><code>&gt;&gt;&gt; data = "Carl's house is big. He is asking 1M for that(the house)."
&gt;&gt;&gt; re.sub('(?P&lt;repl&gt;(?:the )?house)', '**\g&lt;repl&gt;**', data) 
"Carl's **house** is big. He is asking 1M for that(**the house**)."
</code></pre>
<p>Note: <code>\g&lt;repl&gt;</code> is used to get all the string matched by the group <code>&lt;repl&gt;</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You could do two passes:</p>
<p>First: Go through from longest to shortest and replace with something like:</p>
<ul>
<li>'the house': 'AA_THE_HOUSE'</li>
<li>'house': 'BB_HOUSE'</li>
</ul>
<p>Second: Go through replace like:</p>
<ul>
<li>'AA_THE_HOUSE': '<code>**the house**</code>'</li>
<li>'BB_HOUSE': '<code>**house**</code>'</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Replace the strings with some unique values and then replace them back with original string enclosed in ** to make them bold.</p>
<p>For example:</p>
<p>'the house' with 'temp_the_house'
'house' with 'temp_house'</p>
<p>then 'temp_house' with '<strong>house</strong>' 
'temp_the_house' with '**the house****'</p>
<p>Should work fine. You can automate this by using two lists.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub()</code></a> can take a function for the <i>repl</i> argument.  Create a pattern that matches your substrings, then create a function that takes a match object as an argument and returns that string modified however you want.</span>
<span class="comment-copy">What does the <code>\1</code> mean? What does <code>|</code> mean?</span>
<span class="comment-copy">@wwii <code>\1</code> refers the first matched group, <code>|</code> is a <code>or</code> operator that helps you have a pattern thats <code>house</code> <code>or</code> <code>the house</code></span>
<span class="comment-copy">It works as magic. Thanks!</span>
