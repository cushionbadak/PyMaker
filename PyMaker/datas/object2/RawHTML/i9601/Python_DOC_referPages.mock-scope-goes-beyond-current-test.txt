<div class="post-text" itemprop="text">
<p>I am mocking a module... here is my sample code</p>
<pre><code>def test_validate(self):
    """Test Base Retriever Dataframe"""

    sampleQuoteClass = self.sampleQuoteClass('ThisQuote')

    bRet._getAsOfData = MagicMock(return_value=sampleQuoteClass)

    dataAsDataFrame = bVal.validate(metaDataName='MyNewQuote')
    self.assertTrue(len(dataAsDataFrame) &gt; 0)
</code></pre>
<p>This works OK.</p>
<p>Problem is - bRet._getAsOfData is also mocked for the next tests, which incidentally resides in other test class.</p>
<p>This problem only occurs when all the tests are running together as a part of collection.</p>
</div>
<div class="post-text" itemprop="text">
<p>Sounds like you might want to <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch" rel="nofollow noreferrer">patch</a> the object instead of mocking it directly. You may need to adjust my example a bit to fit your code, but try something like this:</p>
<pre><code>from mock import patch

def test_validate(self):
    """Test Base Retriever Dataframe"""

    sampleQuoteClass = self.sampleQuoteClass('ThisQuote')

    with patch('__main__.bRet') as mock_bRet:
        mock_bRet._getAsOfData.return_value = sampleQuoteClass

        dataAsDataFrame = bVal.validate(metaDataName='MyNewQuote')
        self.assertTrue(len(dataAsDataFrame) &gt; 0)
</code></pre>
<p>When you patch the object, the mocking will be undone and the object will "go back to normal" once the <code>with</code> block exits, so the mocked state will not carry over to your other tests. It is also possible to use <code>patch</code> as a decorator, but I have always preferred to use it as a context manager. See the documentation linked above for examples of each usage.</p>
<p>Also, patching can be tricky in my experience, so I would suggest you read <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow noreferrer">this useful bit of documentation on "where to patch"</a> as well. </p>
</div>
<span class="comment-copy">Yup, I tried what you suggested. It works. You have a point though, I need to look into your suggestion if I am applying the patch in the correct location</span>
