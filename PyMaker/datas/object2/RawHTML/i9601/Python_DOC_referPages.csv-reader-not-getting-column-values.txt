<div class="post-text" itemprop="text">
<pre><code>db_path = "./db_file.csv"
db_read = open(db_path, "r") 
for row in db_read:
    g_tag = (row)[1]
</code></pre>
<p>My code is not accessing the second column as expected. Instead it is returning the second character of the 0th column. Don't get whats going on.</p>
</div>
<div class="post-text" itemprop="text">
<p>Salah is right, although I'd advise against parsing a csv file directly:</p>
<pre><code>In [63]: with open('output.csv', 'r') as f:
    ...:     reader = csv.reader(f)
    ...:     for row in reader:
    ...:         print row
    ...:
['latitude', 'local_time', 'longitude', 'time']
['51.2997804', '20:01:14:334 11 08 2015 +0100 GMT+01:00', '1.070336', '1439319674334']
['51.2997889', '20:01:34:428 11 08 2015 +0100 GMT+01:00', '1.0703332', '1439319694428']
['51.2997794', '20:01:54:638 11 08 2015 +0100 GMT+01:00', '1.0703123', '1439319714638']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you need to use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a> to parse csv files intuitively, otherwise you can just use <code>row.split(',')</code> to get values</p>
</div>
<div class="post-text" itemprop="text">
<p>Forgot to do this:</p>
<pre><code>        db_read = open(db_path, 'r')
        db_reader = csv.reader(db_read)
</code></pre>
</div>
<span class="comment-copy">can you provide the first few lines of your csv file as an example to work with?</span>
<span class="comment-copy">Give your <code>csv</code> data, there might be somehting worng with data.</span>
<span class="comment-copy">If you are looking to follow best practice, I would very much encourage you to use a context manager (with open('your.csv', 'r') as file: ) this will close the file object for you, its a good habit to get in.</span>
