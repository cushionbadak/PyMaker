<div class="post-text" itemprop="text">
<p>Element3 of each list is a list (in brackets). I want element3 to be a string 'store1.txt' not ['store1.txt']. </p>
<pre><code>store_list = [["Freds", "store1"], ["Sams", "store2"], ["Johns", "store3"], ["Toms", "store4"]]
urls_list = ['store1.txt', 'store2.txt', 'store3.txt', 'store4.txt', 'store5.txt', 'store6.txt']
ls = []
for x in store_list:
    str_num = x[1]
    matching = [s for s in urls_list if str_num in s]
    x.insert(3, matching)
    ls.append(x)
for i in ls:
    print i
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Change the 6th line to:</p>
<pre><code>matching = [s for s in urls_list if str_num in s][0]
</code></pre>
<p>The list comprehension automatically generates a list, so you need to take the first value of that list if you just want the string.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>matching</code> is a list, you can use <a href="https://docs.python.org/3/library/stdtypes.html#set.pop" rel="nofollow noreferrer"><code>pop()</code></a> to get your element like this:</p>
<pre><code>x.insert(3, matching.pop())
</code></pre>
</div>
<span class="comment-copy">Both ettanany and rassar's answers work on my example, but they do not work for my actual script.  When adding the [0] to the end of the matching line I get an IndexError: list index out of range.  When adding the .pop() I get and IndexError: pop from empty list.  Sigh, but when I run the code without either, it does as it should and returns a list in that element.</span>
<span class="comment-copy">I understand now. Some of the lists are empty because they were generated improperly, therefore an empty list cannot be popped.  Thanks again for the awesomeness.</span>
<span class="comment-copy">Wonderful rassar.  Thank you.</span>
<span class="comment-copy">Thanks ettanany.  This worked too.</span>
