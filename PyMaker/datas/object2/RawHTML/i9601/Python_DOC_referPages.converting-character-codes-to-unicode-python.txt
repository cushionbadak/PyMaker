<div class="post-text" itemprop="text">
<p>So I have a large csv of french verbs that I am using to make a program, in the csv, verbs with accent characters contain codes instead of the actual accents:</p>
<p><strong>ê</strong>tre is <strong>Ãª</strong>tre, for example (atleast when I open the file in Excel)</p>
<p>Here is the csv:</p>
<p><a href="https://raw.githubusercontent.com/ianmackinnon/inflect/master/french-verb-conjugation.csv" rel="nofollow noreferrer">https://raw.githubusercontent.com/ianmackinnon/inflect/master/french-verb-conjugation.csv</a></p>
<p>In Chrome and Firefox atleast, the codes are converted to the correct accents. I was wondering if once the string is imported in python into a given a variable, ie.</p>
<pre><code>...
for row in reader:
        inf_lst.append(row[0])
verb = inf_lst[2338]

#(verb = Ãªtre)
</code></pre>
<p>if there was a straightforward/built in method for printing it out with correct unicode to give "être"?</p>
<p>I am aware that you could do this by replacing the Ãª's with ê's in each string but since this would have to be done for each different possible accent, I was wondering if there was an easier way.
Thanks,</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use unicode encoding by prefixing a string with 'u'.</p>
<p><code>&gt;&gt;&gt; foo = u'être'                                                                           &gt;&gt;&gt; print foo                                                                                être</code></p>
</div>
<div class="post-text" itemprop="text">
<p>It all comes down to the character encoding of the data. Its possible that it is utf-8 encoded and you are viewing it in a Windows tool that is using your local code page, which gives a different display for the stream. How to read/write with files is covered in the <a href="https://docs.python.org/3/library/csv.html#examples" rel="nofollow noreferrer">csv doc examples</a>.</p>
<p>You've given us a zipped, utf-8 encoded web page and the <code>requests</code> modules is good at handling that sort of thing. So, you could read the csv with:</p>
<pre><code>&gt;&gt;&gt; import requests
&gt;&gt;&gt; import csv
&gt;&gt;&gt; resp=requests.get("https://raw.githubusercontent.com/ianmackinnon/inflect/master/french-verb-conjugation.csv",
...     stream=True)
&gt;&gt;&gt; try:
...     inf_lst = list(csv.reader(resp.iter_lines(decode_unicode=True)))
... finally:
...     del resp
... 
&gt;&gt;&gt; len(inf_list)
5362
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a UTF-8-encoded file.  Excel likes that encoding to start with a byte order mark character (U+FEFF) or it assumes the default ANSI encoding for your version of Windows instead.  To get UTF-8 with BOM, use a tool like <a href="https://notepad-plus-plus.org/" rel="nofollow noreferrer">Notepad++</a>.  Open the file in Notepad++.  On the Encoding menu, select "Encode in UTF-8-BOM" and save.  Now it will display correctly in Excel.</p>
<p>To write a file that Excel can open, use the encoding <code>utf-8-sig</code> and write Unicode strings:</p>
<pre><code>import io
with io.open('out.csv','w',encoding='utf-8-sig') as f:
    f.write(u'être')
</code></pre>
</div>
<span class="comment-copy">have you read this? <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">docs.python.org/3/howto/unicode.html</a></span>
<span class="comment-copy">Which version of python are you using? Is it in a file or online like your example? Can you boil this down to a single line example text holding the word you are interested in?</span>
<span class="comment-copy">That's how you write unicode literals in python 2.x but I don't see how it helps when reading data from a file or the web.</span>
