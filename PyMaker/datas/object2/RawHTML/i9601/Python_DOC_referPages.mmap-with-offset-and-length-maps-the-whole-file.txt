<div class="post-text" itemprop="text">
<p>Is it possible to <code>mmap</code> just part of a file using Python/mmap?</p>
<p>I do it like this:</p>
<pre><code>fn_from = 'test20mil.dat'
print os.stat(fn_from).st_size
8896332925
f2= open(fn_from, 'r+')
mm = mmap.mmap(f2.fileno(), 40, access=mmap.ACCESS_COPY, offset=2*mmap.ALLOCATIONGRANULARITY)
</code></pre>
<p>Should <code>mm</code> size be 40?</p>
<pre><code>print mm.size()
8896332925
</code></pre>
<p>Then when I read data it passes the boundary without error</p>
<pre><code>while True:
  b= mm.read(256*1024)
  if not b: break;
</code></pre>
<p>What's the point of <code>length</code> then?</p>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="https://docs.python.org/3.6/library/mmap.html#mmap.mmap.size" rel="nofollow noreferrer">documentation</a>, no.  It's the size of the whole file.</p>
</div>
<span class="comment-copy">What it means depends on the OS you're using according to the <a href="https://docs.python.org/3/library/mmap.html#module-mmap" rel="nofollow noreferrer">documentaiton</a>. There are different Windows and Unix versions. For either case, for any value other than zero, the entire file is mapped. This should be a problem because only the portion(s) referenced will be brought into memoryâ€”that's the whole point, is it not?</span>
<span class="comment-copy">@martineau The documentation for both Unix and Windows states that only <code>length</code> bytes are mapped, and on Linux I can confirm this is what actually happens.</span>
<span class="comment-copy">@olekb the <code>read()</code> method returns <i>up to</i> the number of bytes you tell it to read.  if only 40 bytes are mapped, but you ask to read 256k, only fourty bytes will be returned.  This is not an error, and in line with how <code>read()</code> on file objects in general works.</span>
