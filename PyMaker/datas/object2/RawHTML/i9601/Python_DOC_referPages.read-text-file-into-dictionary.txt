<div class="post-text" itemprop="text">
<p>How can I read a text file in line by line and assign odd number lines to a dictionary's keys and the even number lines to a dictionary's values? For example, how could I make the below new line delimited list:</p>
<pre><code>A
B
C
D
E
F
G
H
</code></pre>
<p>go into a dictionary like this:</p>
<pre><code>dict{"A":"B","C":"D","E":"F","G":"H"}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open(filename, 'r') as f:
    d = {}
    for line in f:
        d[line.strip()] = next(f, '').strip()
</code></pre>
<p>Note:  If your file has an odd number of lines your last key will have a blank value.  If you prefer an exception to be thrown change <code>next(f, '')</code> to <code>next(f)</code>.  If you prefer a different default change <code>next(f, '')</code> to <code>next(f, 'default')</code>.</p>
<p>Another way:</p>
<pre><code>with open(filename, 'r') as f:
    d = {k.strip():v.strip() for k, v in zip(f, f)}
</code></pre>
<p>Note that if the text file has an odd number of lines it will drop the last key.  </p>
<p>To preserve the last key when there are an odd number of lines do:</p>
<pre><code>from itertools import izip_longest, imap
with open(filename, 'r') as f:
    f = imap(str.strip, f)
    d = dict(izip_longest(f, f, fillvalue='default'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Actually, you just have to read in a file and loop through it. If a line is odd, remember it as the value, if a line is even append it to the dictionary with the line as key.</p>
<pre><code>import sys
import numpy as np

fn=sys.argv[1]

d={}

with open(fn,'rb') as f:

for i,line in enumerate(f):

    if np.mod(i+1,2)==0:
        d[lastVal]=line.replace('\n','')
    else:   
        lastVal=line.replace('\n','')

print d         
</code></pre>
</div>
<span class="comment-copy">What code do you have so far?</span>
<span class="comment-copy">Nice. I just learned that "the left-to-right evaluation order of the iterables is guaranteed", so the dict comprehension with <code>zip()</code> being passed the same iterable works nicely. <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">See zip() docs.</a></span>
