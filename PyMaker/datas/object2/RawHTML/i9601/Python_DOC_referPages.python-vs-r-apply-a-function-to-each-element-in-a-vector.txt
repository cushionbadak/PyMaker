<div class="post-text" itemprop="text">
<p>I want to apply a function (<code>len</code>) over each element in a vector. In R I can easily do this with <code>sapply(cities,char)</code>. Is there an alternative like this in Python WITHOUT writing a loop?</p>
</div>
<div class="post-text" itemprop="text">
<p>The syntax is <code>map(function, list)</code>.</p>
<p>Example:</p>
<pre><code>map(len, [ [ 1,2,3], [4,5,6] ])
</code></pre>
<p>Output:</p>
<pre><code>[ 3, 3 ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The R <code>sapply()</code> could be replaced with a list comprehension, but fair enough a list comprehension doesn't strictly avoid the <em>writing</em> of a <b>loop</b>. </p>
<p>In addition to <code>map()</code> you should take a look at <a href="http://pandas.pydata.org/pandas-docs/version/0.18.1/comparison_with_r.html" rel="nofollow noreferrer">Pandas</a>, which provides Python alternatives to several of the functionality that people use in R.</p>
<pre><code>import pandas as pd

vector = [1,2,3,4,5]
square_vector = pd.Series(vector).apply(lambda x: x**2)  
print square_vector.tolist()
</code></pre>
<p>The above code results in a new list with the square values of the imput:</p>
<pre><code>[1, 4, 9, 16, 25]
</code></pre>
<p>Here, I passed the vector to a series constructor <code>pd.Series(vector)</code> and apply an anonymus function <code>apply(lambda x: x**2)</code>. The output is a pandas series which can be converted back to a list if desired <code>tolist()</code>. Pandas series have a lot of functionalities and are ideal for many data manipulation and analysis tasks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use function map that receives a function to apply to an iterable. Documentation to map map: <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer">here</a></p>
<p>For example, you cans pass an anonymus function (using lambda) to apply to each element to the list by this way:</p>
<pre><code>&gt;&gt;&gt; map(lambda x: x[1]*2 + 3, [[1,2,3], [1,4]])
[7, 11]
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#map</a></span>
<span class="comment-copy">What about a list comprehension? <code>[len(el) for el in vector]</code>. It's more Pythonic than <code>map</code>.</span>
<span class="comment-copy">But <code>sapply</code> is a loop!</span>
