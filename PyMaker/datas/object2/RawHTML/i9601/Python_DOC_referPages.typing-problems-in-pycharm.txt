<div class="post-text" itemprop="text">
<p>I have the following function:</p>
<pre><code>def clock(dimS: Tuple[int] =(0)) -&gt; Generator[Tuple[int], None, None]:
    """ Produce coordinates """
    itr = 0
    dim = len(dimS)
    maxItr = np.prod(dimS)

    if (dim &lt; 1):
        raise ValueError(
            'function clock expected positive number of dimensions, received: 0'
        )

    while itr &lt; maxItr:
        c = []
        ind = itr

        # build coordinate
        for i in range(dim):
            s = dimS[dim - i - 1]
            g = ind % s
            ind //= s       # update
            c.append(g)

        itr += 1
        yield tuple(reversed(c))
</code></pre>
<p>I'm using PyCharm to edit my code (love it). It tells me the type <code>Generator[Tuple[int], None, None]</code> was expected, but instead <code>got no return</code> ? When I change it to <code>Generator[Tuple[int], None, bool]</code> and add a line <code>return True</code>, as in <a href="https://docs.python.org/3/library/typing.html#typing.Generator" rel="nofollow noreferrer">the documentation</a> example, the IDE highlights <code>True</code> and tells me <code>Expected Generator[Tuple[int], None, bool], got bool</code>. How do I fix this?</p>
<hr/>
<p>Here's a simpler example that does the same thing:</p>
<pre><code>from typing import Generator

def foo(i: int =0) -&gt; Generator[int, None, None]:
    while True:
        i += 1
        yield i
</code></pre>
<p>It highlights <code>Generator[int, None, None]</code> and tells me <code>got no return</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>mypy</code> accepts your sample input without issue. This is an issue with PyCharm from what it seems. </p>
<p>Scaning through the bug tracker for JetBrains, I found an issue that deals with what you're experiencing, see <a href="https://youtrack.jetbrains.com/issue/PY-20709" rel="nofollow noreferrer">Return type hint messes up with 'Generator' type</a>.</p>
</div>
<span class="comment-copy">@AndrewLi I don't follow...</span>
<span class="comment-copy">@AndrewLi Ahh yes, but then how is this function not similar then to the second example in the documentation? That doesn't <code>return</code> any value either, at least not with that keyword; they only specify the <code>YieldType</code> in <code>Generator</code> as <code>int</code> in the annotation. They talk explicitly about annotating the generator's return type annotation with <code>Generator</code>.</span>
<span class="comment-copy">It's possible PyCharm doesn't handle generator types correctly - have you looked to see if there's an open issue? Tried a simpler example to ensure the handling is correct?</span>
<span class="comment-copy">@jonrsharpe I added a simpler example that does the same thing (edited: I made a simple error but it still does the same thing).</span>
<span class="comment-copy">This works. Wonder when they'll fix it?</span>
<span class="comment-copy">The issue states that it is fixed @bjd2385 Don't know how PyCharm development goes but I'm guessing that if you get the most recent build you'll get the expected results.</span>
<span class="comment-copy">I downloaded it from their site and installed it, so I don't know how my version could be out of date.</span>
<span class="comment-copy">@bjd2385 The fix was performed quite recently from what I can understand, most likely the build that contains the fix has not yet been released. Wait until the next build is released and if that <i>still</i> doesn't perform as expected you should raise an appropriate issue in their bug tracker.</span>
<span class="comment-copy">Last night I was prompted by PyCharm to grab an update (popup in the lower-right) and it resolved this issue. Thank you for all of your help; it seems I was just one day ahead of the fix.</span>
