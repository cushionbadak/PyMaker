<div class="post-text" itemprop="text">
<p>This is my logging setting. It works fine and I can find log in test.log but I also find log in <code>/var/log/messages</code> something looks like</p>
<pre><code>Dec  9 16:13:39 ip-10-80-48-6 python: DEBUG:__main__:Test Log
</code></pre>
<p>I don't want to log to <code>/var/log/messages</code> maybe other path is better because the log is too big</p>
<pre><code>import logging
logger = logging.getLogger(__name__)
logging.basicConfig()
logger.setLevel(logging.DEBUG)

handler = logging.handlers.RotatingFileHandler('test.log', "a", maxBytes=50000000, backupCount=10)
handler.setLevel(logging.DEBUG)
handler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(message)s'))

logger.addHandler(handler)
</code></pre>
<p><strong>#Update</strong></p>
<p>This code is in my twisted service I use <code>systemctl</code> to start this service</p>
</div>
<div class="post-text" itemprop="text">
<p>Refer below links. Explained with examples.</p>
<p><a href="https://docs.python.org/2.7/howto/logging-cookbook.html#logging-to-multiple-destinations" rel="nofollow noreferrer">https://docs.python.org/2.7/howto/logging-cookbook.html#logging-to-multiple-destinations</a></p>
<p><a href="https://docs.python.org/3/howto/logging-cookbook.html#logging-to-multiple-destinations" rel="nofollow noreferrer">https://docs.python.org/3/howto/logging-cookbook.html#logging-to-multiple-destinations</a>.</p>
<p>In the example (Explained in the link), they have redirected output to a file and console. If your requirement is to redirect to some other file instead of /var/log/messages; pass "test.log" as parameter to basicConfig() function and create one more handler for syslog as below. </p>
<pre><code>sysloghandler = logging.handlers.SysLogHandler("/dev/log") 
sysloghandler.setLevel(logging.INFO) 
syslogformatter = logging.Formatter('%(name)s: %(level)s %(message)s') 
sysloghandler.setFormatter(syslogformatter) 
logging.getLogger('myapp').addHandler(sysloghandler)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>logging.basicConfig()
</code></pre>
<p>is what obviously sets a standard handler that logs to /var/log/messages
Try removing it or simply remove all handlers before adding yours. I have never used python :)</p>
</div>
<span class="comment-copy">I think maybe Linux would log my service to /var/log/messages</span>
<span class="comment-copy">do you mean the "root " part?</span>
<span class="comment-copy">In the example (Explained in the link), they have redirected output to a file and console. If your requirement is to redirect to some other file instead of /var/log/messages; pass "test.log" as parameter to basicConfig() function and create one more handler for syslog as below.                      sysloghandler = logging.handlers.SysLogHandler("/dev/log")                     sysloghandler.setLevel(logging.INFO)                     syslogformatter = logging.Formatter('%(name)s: %(level)s %(message)s')                     sysloghandler.setFormatter(syslogformatter)</span>
<span class="comment-copy">I don't want to write log to syslog(var/log/messages) and in my code I just use basicConfig but it still write log to syslog(var/log/messages). I register my python application to a service, does that matter?</span>
<span class="comment-copy">I don't down vote your answer but why do you know the reason is logging.basicConfig() any reference?</span>
