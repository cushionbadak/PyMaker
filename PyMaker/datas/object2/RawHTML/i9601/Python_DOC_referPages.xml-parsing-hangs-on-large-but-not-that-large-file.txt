<div class="post-text" itemprop="text">
<p>I am using python's excellent <code>xml</code> module to handle some xml files I have.  One of these files is 250+ MB.  While parsing, it appears to hang.  Running <code>top</code> shows that it is slowly filling my memory, then starts swapping, but does not return for over an hour (at which point I kill the process and search SO).</p>
<p>I am staring the process like so:</p>
<pre><code>&gt;&gt;&gt; import xml.etree.ElementTree as ET
&gt;&gt;&gt; tree = ET.parse('some_xml_file.xml')
</code></pre>
<p>But that's as far as any of my attempts go.  Smaller files are working just fine, but this one large file is breaking things.</p>
<p>What is filling all (4 GB) of my memory, and how can I avoid this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer"><code>xml.etree.ElementTree</code> documentation</a> has this paragraph documented:</p>
<blockquote>
<p>If you don’t mind your application blocking on reading XML data but
  would still like to have incremental parsing capabilities, take a look
  at <code>iterparse()</code>. <em>It can be useful when you’re reading a large XML
  document and don’t want to hold it wholly in memory.</em></p>
</blockquote>
<p>Consider using <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse" rel="nofollow noreferrer"><code>iterparse()</code></a> to process your XML file <em>incrementally</em>.</p>
<p>Plus, you should consider switching to <a href="http://lxml.de/index.html" rel="nofollow noreferrer"><code>lxml.etree</code></a> as it is generally faster and more memory-friendly in general, source:</p>
<ul>
<li><a href="http://lxml.de/performance.html" rel="nofollow noreferrer">http://lxml.de/performance.html</a></li>
</ul>
</div>
<span class="comment-copy">You should iteratively parse the file, if possible. <a href="http://boscoh.com/programming/reading-xml-serially.html" rel="nofollow noreferrer">boscoh.com/programming/reading-xml-serially.html</a></span>
<span class="comment-copy">Thanks, <code>lxml</code> module works great!</span>
