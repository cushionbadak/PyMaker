<div class="post-text" itemprop="text">
<p>I'm trying to get the variable <code>Intadd</code> to change from the number 0, but I can't because <code>Intadd</code> is in the function, causing it to remain 0 no matter what. I tried moving the variable <code>Intadd</code> outside of the function, but then it says that <code>Intadd</code> is already refferenced before assignment (the only time <code>Intadd</code> is run in my whole code is in this function).</p>
<pre><code>dictfile = open('c:/ScienceFairDictionaryFolder/wordsEn.txt', 'r')
DictionaryWords = dictfile.readlines()

def Number_Finder():
    for x in DictionaryWords:
        Intadd = 0
        print(Intadd)
        if x.replace("\n", str(Intadd)) == Password:
            print("Congrats, you found the password!")
            break
        else:
            while Intadd &lt; 10:
                Intadd += 1
</code></pre>
<p>Thanks for the help, you guys are lifesavers!</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem with your function lies in the fact that you are setting the value of <code>Intadd</code> on every iteration of the loop. Here's a possible alternative:</p>
<pre><code>def number_finder():  # I've taken the liberty of re-writing with more Pythonic naming conventions
    intadd = 0
    for x in dictionary_words:
        print(intadd)
        if x.replace('\n', str(intadd)) == password:
            print('Congratulations...')
            break
        # et cetera
</code></pre>
<p>However, I have a feeling that this might still not do exactly what you hope it to. That little <code>while</code> loop inside the <code>else</code> block has exactly the same effect as just setting <code>Intadd</code> to 10. Additionally, since <code>Intadd</code> is entirely contained inside the function, as soon as the function has returned, its current value will be lost. This could be solved with the <a href="https://docs.python.org/3/reference/simple_stmts.html#global" rel="nofollow noreferrer"><code>global</code> statement</a> or by returning the value.</p>
</div>
<div class="post-text" itemprop="text">
<p>I may have the wrong end of the stick here but you can simply <code>return</code> <code>Intadd</code> from the function.<br/>
For example:</p>
<pre><code>dictfile = open('wordsEn.txt', 'r')
#DictionaryWords = dictfile.readlines()
DictionaryWords = ['hello\n', 'world\n', 'password\n', 'Quality\n', 'guess\n', '\n']
Password = "Quality5"

def Number_Finder():
    for x in DictionaryWords:
        for Intadd in range(10):
            if x.replace("\n", str(Intadd)) == Password:
                return Intadd
    return 0

Password_attempts = Number_Finder()

if Password_attempts != 0:
    print ("Congratulations, you found the password! In",Password_attempts,"attempts")
else:
    print ("Password not found")
</code></pre>
<p>Result:</p>
<pre><code>Congratulations, you found the password! In 5 attempts
</code></pre>
</div>
<span class="comment-copy">Try to manipulate with 'global' keyword: <a href="http://stackoverflow.com/questions/423379/using-global-variables-in-a-function-other-than-the-one-that-created-them" title="using global variables in a function other than the one that created them">stackoverflow.com/questions/423379/â€¦</a></span>
