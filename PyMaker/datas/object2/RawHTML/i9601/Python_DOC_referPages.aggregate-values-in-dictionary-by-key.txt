<div class="post-text" itemprop="text">
<p>I'm quite new to Python and just started working with dictionaries. I have the following question:</p>
<p>Given the following dictionary:</p>
<pre><code>{'Berlin': {'Country': 'Germany', 'Population': 3.502},
'New York': {'Country': 'USA', 'Population': 8.406},
'Munich': {'Country': 'Germany', 'Population': 1.388}, ... }
</code></pre>
<p>How could I sum the population over countries? Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>country_to_population = {}
for city, data in dict.iteritems():
    country = data['Country']
    if country not in country_to_population:
        country_to_population[country] = 0
    country_to_population[country] += data['Population']
</code></pre>
<p>You iterate the main dictionary and add population to a new dictionary that maps a country to population.</p>
<p>If using Python 3, do <code>items()</code> instead of <code>iteritems()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a> to group your data by country like below:</p>
<pre><code>from itertools import groupby

my_dict = {'Berlin': {'Country': 'Germany', 'Population': 3.502}, 'New York': {'Country': 'USA', 'Population': 8.406}, 'Munich': {'Country': 'Germany', 'Population': 1.388}}

population = {}

for k,v in groupby(sorted(my_dict.items()), key=lambda i:i[1]['Country']):
    population[k] = sum(item[1]['Population'] for item in list(v))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; population
{'Germany': 4.89, 'USA': 8.406}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can go inside the dict iterating on the key:</p>
<pre><code>dict = {'Berlin': {'Country': 'Germany', 'Population': 3502},
'New York': {'Country': 'USA', 'Population': 8406},
'Munich': {'Country': 'Germany', 'Population': 1388}}
country = []
sum = {}
for key in dict:
    coun = dict[key]['Country']
    if coun in country:
        pass
    else:
        country.append(dict[key]['Country'])
        sum[coun] = 0

    sum[coun] += dict[key]['Population']

for key in sum:
    print(key, sum[key])    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>defaultdict</code> from collections module, with <code>int</code> assigned to it in order to have a default value of <code>0</code> to each country you are about to sum.</p>
<p>The code looks like:</p>
<pre><code>from collections import defaultdict

country_dict = {"Berlin":{"Country":"Germany","Population":3.502},"Munich":{"Country":"Germany","Population":1.388},"New York":{"Country":"USA","Population":8.406}}

sum_countries_dict = defaultdict(int)
for item in country_dict.values():
    sum_countries_dict[item['Country']] += item['Population']
</code></pre>
<p>And the result is:</p>
<pre><code>&gt;&gt;&gt; country_dict
{'Berlin': {'Country': 'Germany', 'Population': 3.502}, 'New York': {'Country': 'USA', 'Population': 8.406}, 'Munich': {'Country': 'Germany', 'Population': 1.388}}
&gt;&gt;&gt; sum_countries_dict
defaultdict(&lt;type 'int'&gt;, {'Germany': 4.89, 'USA': 8.406})
&gt;&gt;&gt; sum_countries_dict['Germany']
4.89
&gt;&gt;&gt; sum_countries_dict['USA']
8.406
</code></pre>
</div>
<span class="comment-copy">@ yper. Thank you very much for your input. It's exactly what I was looking for.</span>
