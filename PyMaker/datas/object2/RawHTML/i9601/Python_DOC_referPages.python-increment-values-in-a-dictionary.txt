<div class="post-text" itemprop="text">
<p>I am trying to count every word from text files and appending the word and count to a dictionary as the key-value pairs. It throws me this error: if key not in wordDict:
TypeError: unhashable type: 'list'
Also, I am wondering of .split() is good because my text files contain different punctuation marks.</p>
<pre><code>fileref = open(mypath + '/' + i, 'r')
wordDict = {}
for line in fileref.readlines():
    key = line.split()
    if key not in wordDict:
        wordDict[key] = 1
    else:
        wordDict[key] += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import Counter
text = '''I am trying to count every word from text files and appending the word and count to a dictionary as the key-value pairs. It throws me this error: if key not in wordDict: TypeError: unhashable type: 'list' Also, I am wondering of .split() is good because my text files contain different punctuation marks. Thanks ahead for those who help!'''

split_text = text.split()
counter = Counter(split_text)
print(counter)
</code></pre>
<p>out:</p>
<pre><code>Counter({'count': 2, 'and': 2, 'text': 2, 'to': 2, 'I': 2, 'files': 2, 'word': 2, 'am': 2, 'the': 2, 'dictionary': 1, 'a': 1, 'not': 1, 'in': 1, 'ahead': 1, 'me': 1, 'trying': 1, 'every': 1, '.split()': 1, 'type:': 1, 'my': 1, 'punctuation': 1, 'is': 1, 'key': 1, 'error:': 1, 'help!': 1, 'those': 1, 'different': 1, 'throws': 1, 'TypeError:': 1, 'contain': 1, 'wordDict:': 1, 'appending': 1, 'if': 1, 'It': 1, 'Also,': 1, 'unhashable': 1, 'from': 1, 'because': 1, 'marks.': 1, 'pairs.': 1, 'this': 1, 'key-value': 1, 'wondering': 1, 'Thanks': 1, 'of': 1, 'good': 1, "'list'": 1, 'for': 1, 'who': 1, 'as': 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>key</code> is a list of space-delimited words found in the current line. You would need to iterate over that list as well.</p>
<pre><code>for line in fileref:
    keys = line.split()
    for key in keys:
        if key not in wordDict:
            wordDict[key] = 1
        else:
            wordDict[key] += 1
</code></pre>
<hr/>
<p>This can be cleaned up considerably by either using the <code>setdefault</code> method or a <code>defaultdict</code> from the <code>collections</code> module; both allow you to avoid explicitly checking for a key by automatically adding the key with an initial value if it isn't already in the <code>dict</code>.</p>
<pre><code>for key in keys:
    wordDict.setdefault(key, 0) += 1
</code></pre>
<p>or</p>
<pre><code>from collections import defaultdict
wordDict = defaultdict(int)   # Default to 0, since int() == 0

...

   for key in keys:
       wordDict[key] += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>key</code> is a list and you're trying to see if a list is in a dictionary which is equivalent to seeing if it is one of the keys. Dictionary keys canot be lists hence the "unhashable type" error.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split</code></a> return a list of words </p>
<pre><code>&gt;&gt;&gt; "hello world".split()
['hello', 'world']
&gt;&gt;&gt; 
</code></pre>
<p>and lists or any other mutable object cannot be used as a key of a dictionary, and that is why you get the error <code>TypeError: unhashable type: 'list'</code>. </p>
<p>You need to iterate over it to include each one of those, also the recommended way to work with a <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">file</a> is with the <a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer"><code>with</code> statement</a></p>
<pre><code>wordDict = {}
with open(mypath + '/' + i, 'r') as fileref:
    for line in fileref:
        for word in line.split():
            if word not in wordDict:
                wordDict[word] = 1
            else:
                wordDict[word] += 1
</code></pre>
<p>the above can be shortened with the use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">Counter</a> and an <a href="https://docs.python.org/3/howto/functional.html#generator-expressions-and-list-comprehensions" rel="nofollow noreferrer">appropriate</a> call to it</p>
<pre><code>from collections import Counter

with open(mypath + '/' + i, 'r') as fileref:    
    wordDict = Counter( word for line in fileref for word in line.split() )
</code></pre>
</div>
<span class="comment-copy">If you want to use an <i>additional</i> seperator you could use <code>line.replace(other, ' ')</code> before you <code>split</code>.</span>
<span class="comment-copy">this example can be better with a multi-lines example, str.splitlines() can be used for that. :)</span>
<span class="comment-copy">@ Copperfield thanks for the tip</span>
<span class="comment-copy">Working pretty well, thanks!</span>
