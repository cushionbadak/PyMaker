<div class="post-text" itemprop="text">
<p>I'm trying to print the output of an astronomy simulation so that it looks nice in my console. I generate 4 numpy arrays called Amplitude, Mass, Period and Eccentricity and I want to put them in a table. The first index of each array are the values for planet 1, the second for planet 2 etc.</p>
<p>So my arrays look like (values are all float numbers, eg 'a1' just a placeholder):</p>
<pre><code>amp = [a1 a2 a3 a4]
mass = [m1 m2 m3 m4]
period = [p1 p2 p3 p4]
ecc = [e1 e2 e3 e4]
</code></pre>
<p>I'd like my table to look like:</p>
<pre><code>planet|amp|mass|period|ecc
1     |a1 |m1  |p1    |e1
2     |a2 |m2  |p2    |e2
...
</code></pre>
<p>I've tried using tabulate and something like:</p>
<pre><code>print tabulate(['1', amp[0], mass[0], period[0], ecc[0]], headers=[...])
</code></pre>
<p>but I get an error of 'numpy.float64' object is not iterable</p>
<p>Any help would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> like this:</p>
<pre><code>amp = ['a1', 'a2', 'a3', 'a4']
mass = ['m1', 'm2', 'm3', 'm4']
period = ['p1', 'p2', 'p3', 'p4']
ecc = ['e1', 'e2', 'e3', 'e4']
planet = [1, 2, 3, 4]


titles = ['planet', 'amp', 'mass', 'period', 'ecc']

print '{:&lt;6}|{:&lt;6}|{:&lt;6}|{:&lt;6}|{:&lt;6}'.format(*titles)
for item in zip(planet, amp, mass, period, ecc):
    print '{:&lt;6}|{:&lt;6}|{:&lt;6}|{:&lt;6}|{:&lt;6}'.format(*item)
</code></pre>
<p>Instead of using <code>planet = [1, 2, 3, 4]</code>, you can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> like below:</p>
<pre><code>print '{:&lt;6}|{:&lt;6}|{:&lt;6}|{:&lt;6}|{:&lt;6}'.format(*titles)
for i, item in enumerate(zip(amp, mass, period, ecc)):
    print '{:&lt;6}|{:&lt;6}|{:&lt;6}|{:&lt;6}|{:&lt;6}'.format(i+1, *item)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; python print_table.py
planet|amp   |mass  |period|ecc
1     |a1    |m1    |p1    |e1
2     |a2    |m2    |p2    |e2
3     |a3    |m3    |p3    |e3
4     |a4    |m4    |p4    |e4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>tabulate.tabulate() takes a list of lists (or arrays) as its main argument, you've given it a list of floats (and a '1').</p>
<p>So you want to put in all your data at once.</p>
<p>You'll need to create new lists where each is one horizontal row of the new table. You'll also need to add the row number at the front.</p>
<p>First build new lists/arrays where:</p>
<pre><code>list1=[1,a1,m1,p1,e1]
list2=[2,a2,m2,p2,e2]
...
</code></pre>
<p>And then try:</p>
<pre><code>print tabulate([list1, list2, list3, list4], headers=[...])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can combine the usage of <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip()</a> with <a href="https://pypi.python.org/pypi/tabulate" rel="nofollow noreferrer">tabulate</a> to create a nicer looking table:</p>
<pre class="lang-python prettyprint-override"><code>from tabulate import tabulate
headers = ['planet', 'amp', 'mass', 'period', 'ecc']    

amp = [1.1, 1.2, 1.3, 1.4]
mass = [2.1, 2.2, 2.3, 2.4]
period = [3.1, 3.2, 3.3, 3.4]
ecc = [4.1, 4.2, 4.3, 4.4]
planet = range(1, len(amp)+1)

table = zip(planet, amp, mass, period, ecc)
print(tabulate(table, headers=headers, floatfmt=".4f"))
</code></pre>
<h2>Output:</h2>
<pre class="lang-none prettyprint-override"><code>  planet     amp    mass    period     ecc
--------  ------  ------  --------  ------
       1  1.1000  2.1000    3.1000  4.1000
       2  1.2000  2.2000    3.2000  4.2000
       3  1.3000  2.3000    3.3000  4.3000
       4  1.4000  2.4000    3.4000  4.4000
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>\t</code>.</p>
<p>For example:</p>
<pre><code>print 'a\t','b\t','\n','c\t','d\t'
</code></pre>
<p>output:</p>
<pre><code>a   b   
c   d   
</code></pre>
</div>
<span class="comment-copy">Thanks for the suggestion. This prints out the column titles in 'titles' but then nothing else underneath. I might have to redefine my arrays like you did...</span>
<span class="comment-copy">@RichardHall You need to run the for loop as well. You can also put the above code in a file like I did with <code>print_table.py</code></span>
<span class="comment-copy">The enumerate worked! Thanks! Follow up question, can I format it so that each 'cell' of the table is the same length/size?</span>
<span class="comment-copy">Sure, that's what I have done with <code>:&lt;6</code>. I am using <code>6</code> because the longest word is 6 characters (planet and period)</span>
<span class="comment-copy">Yeah I thought that was controlling it, but the values (eg 'a1') are showing with up 11 decimal places, but others are whole numbers so only show one decimal place ...</span>
<span class="comment-copy">This does not answer the question and would be better suited as a comment. You will be able to comment once you have sufficient reputation.</span>
<span class="comment-copy">@TigerhawkT3 No. This is an answer to the question.</span>
<span class="comment-copy">@FelixSFD - No, it isn't an answer to the question. The question is already asking how to <code>tab</code>ulate their arrays. This answer is more like a guess regarding the meaning of "tabulate." That doesn't provide an answer or help in any way.</span>
