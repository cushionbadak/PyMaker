<div class="post-text" itemprop="text">
<p>This is supposed to be a menu-driven program with user input. I know very little about <code>turtle</code>. I do know how to have the shapes drawn, but the info that I have is not given as input by the user. It's just me saying how each shape would be drawn.</p>
<p>I am supposed to import a module and have a menu with 4 choices:</p>
<ol>
<li>Draw a circle. </li>
<li>Draw a rectangle. </li>
<li>Draw star.</li>
<li>Quit.</li>
</ol>
<p>I don't know how to create or import the module, I don't know how to add the user input, and I don't know how to create the menu... </p>
<p>So far all I have is the code pasted below. Is it completely wrong or does it just need adjustments to fit the above criteria? </p>
<pre><code>import turtle 

smart = turtle.Turtle()

for i in range(4):
    smart.forward(50)
    smart.right(90)

turtle.done()


## draw a polygon with turtle




import turtle 

polygon = turtle.Turtle()

num_sides = 6
side_length = 70
angle = 360.0 / num_sides 

for i in range(num_sides):
    polygon.forward(side_length)
    polygon.right(angle)

turtle.done()



### random shape .... star



import turtle 

star = turtle.Turtle()

for i in range(50):
    star.forward(50)
    star.right(144)

turtle.done()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use Tkinter.
Use this template:</p>
<pre><code>from Tkinter import * #the module could also be called tkinter (no caps)

root = Tk()

def circle():
    turtle.clear()
    #Cirle drawing code
def rectangle():
    turtle.clear()
    #rectangle drawing code
def star():
    turtle.clear()
    #star drawing code
def quit1():
    root.destroy()

circler = Button(root,text="Circle", command=circle)
rectangler = Button(root,text="Rectangle", command=rectangle)
starer = Button(root,text="Star", command=star)
quiter = Button(root,text="Quit", command=quit1)
circler.pack()
rectangler.pack()
starer.pack()
quiter.pack()
root.mainloop()
</code></pre>
<p>Also you do <strong>not</strong> need to:
1. import turtle more than once
2. create a new turtle(just use "turtle.forward(100)" for example)</p>
<p>Make sure to write <strong>different</strong> pieces of code inside the functions</p>
<p>Comment back if it worked</p>
</div>
<div class="post-text" itemprop="text">
<p>You do not need to use a module like Tkinter to implement a menu, it can instead be done using one of the graphic input methods that are new to Python 3 turtle:</p>
<pre><code>turtle.textinput(title, prompt)
turtle.numinput(title, prompt, default=None, minval=None, maxval=None)
</code></pre>
<p>Here's a skeletal example:</p>
<pre><code>import turtle

def circle():
    turtle.reset()
    pass  # Circle drawing code

def rectangle():
    turtle.reset()
    pass  # rectangle drawing code

def star():
    turtle.reset()
    pass  # star drawing code

COMMANDS = [None, circle, rectangle, star, exit]
ABORT = len(COMMANDS) - 1
PROMPT = "1. Draw a circle\n2. Draw a rectangle\n3. Draw a star\n4. Quit"

while True:
    choice = turtle.numinput("Pick a number", prompt=PROMPT, default=ABORT, minval=1, maxval=ABORT)

    if choice is None:
        choice = ABORT
    else:
        choice = int(choice)

    if 1 &lt;= choice &lt;= ABORT:
        COMMANDS[choice]()

turtle.mainloop()  # never reached
</code></pre>
<p>A better approach would be to eliminate the inifinite loop <code>while True:</code> and instead use something like a timer event to bring up the initial menu, and subsequent menus after each drawing finishes.  This would let <code>turtle.mainloop()</code> execute and allow other types of events to fire off.</p>
<p>If you want to allow text input instead of simply number choices, you can use <code>turtle.textinput()</code> instead, but parse the user input carefully!</p>
</div>
<span class="comment-copy"><i>"I know very little about turtle"</i> - Then the proper place to go would be [the Documentation for the <code>turtle</code>module] (<a href="https://docs.python.org/3/library/turtle.html" rel="nofollow noreferrer">docs.python.org/3/library/turtle.html</a>). It can do a much better job of explaining how to use the turtle module than we could.</span>
<span class="comment-copy">on it. very much appreciated</span>
<span class="comment-copy">Your very welcome :-)</span>
<span class="comment-copy">Also you do not need to:</span>
