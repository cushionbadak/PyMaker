<div class="post-text" itemprop="text">
<p>I never used json and I'm barely a python user, how would you write this json format into a csv file : </p>
<pre><code>{
    "meta": {},
    "data": {
        "suggestionTitleAccessor": "symbol",
        "items": [
            {
                "name": "Automatic Data Processing, Inc.",
                "exch": "NMS",
                "type": "S",
                "symbol": "ADP",
                "exchDisp": "NASDAQ",
                "typeDisp": "Equity"
            },
            {
                "name": "Adeptus Health Inc.",
                "exch": "NYQ",
                "type": "S",
                "symbol": "ADPT",
                "exchDisp": "NYSE",
                "typeDisp": "Equity"
            },
            {
                "name": "ADP170217P00080000",
                "exch": "OPR",
                "type": "O",
                "symbol": "ADP170217P00080000",
                "exchDisp": "OPR",
                "typeDisp": "Option"
            },
            {
                "name": "Automatic Data Processing, Inc.",
                "exch": "FRA",
                "type": "S",
                "symbol": "ADP.F",
                "exchDisp": "Frankfurt",
                "typeDisp": "Equity"
            },
            {
                "name": "Adelphia Recovery Trust",
                "exch": "PNK",
                "type": "S",
                "symbol": "ADPAJ",
                "exchDisp": "OTC Markets",
                "typeDisp": "Equity"
            },
            {
                "name": "Adelphia Recovery Trust",
                "exch": "PNK",
                "type": "S",
                "symbol": "ADPAS",
                "exchDisp": "OTC Markets",
                "typeDisp": "Equity"
            },
            {
                "name": "AB Short Duration A",
                "exch": "NAS",
                "type": "M",
                "symbol": "ADPAX",
                "exchDisp": "NASDAQ",
                "typeDisp": "Fund"
            },
            {
                "name": "AB Short Duration B",
                "exch": "NAS",
                "type": "M",
                "symbol": "ADPBX",
                "exchDisp": "NASDAQ",
                "typeDisp": "Fund"
            },
            {
                "name": "AB Short Duration C",
                "exch": "NAS",
                "type": "M",
                "symbol": "ADPCX",
                "exchDisp": "NASDAQ",
                "typeDisp": "Fund"
            },
            {
                "name": "A\u00c3\u00a9roports de Paris S.A.",
                "exch": "PAR",
                "type": "S",
                "symbol": "ADP.PA",
                "exchDisp": "Paris",
                "typeDisp": "Equity"
            }
        ],
        "suggestionMeta": [
            "symbol",
            "name",
            "exch",
            "type",
            "exchDisp",
            "typeDisp"
        ],
        "hiConf": false
    }
}
</code></pre>
<p>I tried </p>
<pre><code>import json
import csv
body = {"data":{"suggestionTitleAccessor":"symbol","suggestionMeta":["symbol","name","exch","type","exchDisp","typeDisp"],"hiConf":false,"items":[{"symbol":"ADP","name":"Automatic Data Processing, Inc.","exch":"NMS","type":"S","exchDisp":"NASDAQ","typeDisp":"Equity"},{"symbol":"ADPT","name":"Adeptus Health Inc.","exch":"NYQ","type":"S","exchDisp":"NYSE","typeDisp":"Equity"},{"symbol":"ADP170217P00080000","name":"ADP170217P00080000","exch":"OPR","type":"O","exchDisp":"OPR","typeDisp":"Option"},{"symbol":"ADP.F","name":"Automatic Data Processing, Inc.","exch":"FRA","type":"S","exchDisp":"Frankfurt","typeDisp":"Equity"},{"symbol":"ADPAJ","name":"Adelphia Recovery Trust","exch":"PNK","type":"S","exchDisp":"OTC Markets","typeDisp":"Equity"},{"symbol":"ADPAS","name":"Adelphia Recovery Trust","exch":"PNK","type":"S","exchDisp":"OTC Markets","typeDisp":"Equity"},{"symbol":"ADPAX","name":"AB Short Duration A","exch":"NAS","type":"M","exchDisp":"NASDAQ","typeDisp":"Fund"},{"symbol":"ADPBX","name":"AB Short Duration B","exch":"NAS","type":"M","exchDisp":"NASDAQ","typeDisp":"Fund"},{"symbol":"ADPCX","name":"AB Short Duration C","exch":"NAS","type":"M","exchDisp":"NASDAQ","typeDisp":"Fund"},{"symbol":"ADP.PA","name":"AÃ©roports de Paris S.A.","exch":"PAR","type":"S","exchDisp":"Paris","typeDisp":"Equity"}]},"meta":{}}
x = json.loads(body)
f = csv.writer(open("test.csv", "wb+"))
for x in x:
    csvwriter.writerow(x())
    f.close()
</code></pre>
<p>But it yields an empty <code>test.csv</code> file. I think it's due to the line <code>csvwriter.writerow(x())</code>, <code>x</code> is an array and I'm not writing the cells appropriately.</p>
<p>Edit : the kind of output I'm looking for is basically a csv array with each item as row so : </p>
<pre><code>Adeptus Health Inc.,NYQ,S,ADPT,NYSE,Equity
ADP170217P00080000,OPR,O,ADP170217P00080000,OPR,Option
etc
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you just need the 'items', you could something like the following. <code>if i == 0:</code> simply writes a header.</p>
<pre><code>#coding: utf-8
import json
import csv

body = "..."
x = json.loads(body)

with open('test.csv', 'w', newline='') as csvfile:
  wHandle = csv.writer(csvfile)
  for i, item in enumerate(x['data']['items']):
    if i == 0:
      wHandle.writerow(item.keys())
    wHandle.writerow(item.values())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your case <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer">DictWriter</a> will be helpful. </p>
<p>Small example:</p>
<pre><code>import csv

body = [
    {'name': 'A', 'value1': 1, 'value2': 2},
    {'name': 'B', 'value1': 1, 'value2': 2}
]

with open('items.csv', 'w') as csvfile:
    fieldnames = ['name', 'value1', 'value2']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

    writer.writeheader()
    for item in body:
        writer.writerow(item)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I tried below code, i used you JSON from file</p>
<pre><code>import csv
import json

json_file='your.json'
with open(json_file, 'r') as json_data:
    x = json.load(json_data)

f = csv.writer(open("test.csv", "w"))#store result in test.csv

#store header name in variable, later w.r.t value from variable will retrieve respective data 
symbol=x['data']['suggestionMeta'][0]
name=x['data']['suggestionMeta'][1]
exch=x['data']['suggestionMeta'][2]
dtype=x['data']['suggestionMeta'][3]
exchdisp=x['data']['suggestionMeta'][4]
typedisp=x['data']['suggestionMeta'][5]
# Write CSV Header, If you dont need that, remove this line
f.writerow([symbol,name,exch,dtype,exchdisp,typedisp])
for key in x['data']['items']:
    f.writerow([key[symbol],key[name],key[exch],key[dtype],key[exchdisp],key[typedisp]])
</code></pre>
<p><strong>OUTPUT</strong></p>
<pre><code>symbol,name,exch,type,exchDisp,typeDisp
ADP,"Automatic Data Processing, Inc.",NMS,S,NASDAQ,Equity
ADPT,Adeptus Health Inc.,NYQ,S,NYSE,Equity
ADP170217P00080000,ADP170217P00080000,OPR,O,OPR,Option
ADP.F,"Automatic Data Processing, Inc.",FRA,S,Frankfurt,Equity
ADPAJ,Adelphia Recovery Trust,PNK,S,OTC Markets,Equity
ADPAS,Adelphia Recovery Trust,PNK,S,OTC Markets,Equity
ADPAX,AB Short Duration A,NAS,M,NASDAQ,Fund
ADPBX,AB Short Duration B,NAS,M,NASDAQ,Fund
ADPCX,AB Short Duration C,NAS,M,NASDAQ,Fund
ADP.PA,AÃ©roports de Paris S.A.,PAR,S,Paris,Equity
</code></pre>
<p>Hope this helps you</p>
</div>
<span class="comment-copy">CSV and JSON are fundamentally different. CSV is two-dimensional, and JSON is N-dimensional. The first question to answer is how you want your N-dimensional data represented in a CSV file.</span>
<span class="comment-copy">Can you give an example of what result you're expecting (e.g. the first five lines)? Also, <code>for x in x</code> doesn't look right, even if it is. And <code>body</code> should be a string, not the object.</span>
<span class="comment-copy">@Chris This JSON looks like a sequence of flat records, so it is essentially 2D. I agree that "how" is an important question, though</span>
<span class="comment-copy">@Rhymoid, the top-level container in that JSON is an object, not an array, and its content is nested. I'm not sure how you see that as a sequence of flat records, unless you're focusing on the inner <code>items</code> array and ignoring other values like <code>meta</code> or <code>hiConf</code> (which is inside <code>data</code>).</span>
<span class="comment-copy">if i understand right he want create csv by <code>items</code> key</span>
<span class="comment-copy">In OP's example, you can lift <code>fieldnames</code> from <code>json_data['data']['suggestionMeta']</code>.</span>
