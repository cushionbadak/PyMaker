<div class="post-text" itemprop="text">
<p>So I'm trying to make a web crawler in python using HTMLParser and urllib3 in python. Currently I have two different import problems the first being</p>
<pre><code>import html.parser
import urllib

urlText = []

#Define HTML Parser
class parseText(HTMLParser.HTMLParser):

def handle_data(self, data):
    if data != '\n':
        urlText.append(data)


#Create instance of HTML parser
lParser = parseText()

thisurl = "http://www-rohan.sdsu.edu/~gawron/index.html"
#Feed HTML file into parser
lParser.feed(urllib.urlopen(thisurl).read())
lParser.close()
for item in urlText:
    print (item)
</code></pre>
<p>and with this code it returns an error in the visual studio error box</p>
<pre><code>name 'HTMLParser' is not defined
</code></pre>
<p>and the second option is the exact same but with import HTMLParser instead of html.parser</p>
<pre><code>import HTMLParser
import urllib

urlText = []

#Define HTML Parser
class parseText(HTMLParser.HTMLParser):

def handle_data(self, data):
    if data != '\n':
        urlText.append(data)


#Create instance of HTML parser
lParser = parseText()

thisurl = "http://www-rohan.sdsu.edu/~gawron/index.html"
#Feed HTML file into parser
lParser.feed(urllib.urlopen(thisurl).read())
lParser.close()
for item in urlText:
    print (item)
</code></pre>
<p>which returns the error </p>
<pre><code>No module named 'markupbase'
</code></pre>
<p>I'm losing my mind with the packages. Does anyone know a fix or see a problem.
Ps. I'm running this in Visual studio 2016 and am in Python 3.5</p>
</div>
<div class="post-text" itemprop="text">
<p>I am also following the same tutorial that you are following to learn web crawling. I also got those issues yesterday when I run that code. After a few google search I resolved those. I am new to python and web crawling, so correct me if I say something wrong.</p>
<p>If you are using python 3.5 you should import <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer"><code>HTMLParser from html.parser</code></a>
and <a href="https://docs.python.org/3/library/urllib.request.html#module-urllib.request" rel="nofollow noreferrer"><code>urllib.request</code></a>. 
At line 7 you have to inherit just HTMLParser instead of HTMLParser.HTMLParser.
At this point your code should be look like this </p>
<pre><code>from html.parser import HTMLParser
import urllib.request

urlText = []

#Define HTML Parser
class parseText(HTMLParser):

    def handle_data(self, data):
        if data != '\n':
            urlText.append(data)


#Create instance of HTML parser
lParser = parseText()

thisurl = "http://www-rohan.sdsu.edu/~gawron/index.html"
#Feed HTML file into parsers
lParser.feed(urllib.request.urlopen(thisurl).read())
lParser.close()
for item in urlText:
    print (item)
</code></pre>
<p>Now if you run this code you will this error </p>
<blockquote>
<p>TypeError: Can't convert 'bytes' object to str implicitly</p>
</blockquote>
<p>that's because <code>HTMLParser.feed()</code> only takes string and <code>urllib.request.urlopen().read()</code> generates raw data as bytes. So we are going to decode this raw data as utf8. At line 19 we add <code>.decode('utf8')</code>after <code>read()</code>.
The final code will be look like </p>
<pre><code>from html.parser import HTMLParser
import urllib.request

urlText = []

#Define HTML Parser
class parseText(HTMLParser):

    def handle_data(self, data):
        if data != '\n':
            urlText.append(data)


#Create instance of HTML parser
lParser = parseText()

thisurl = "http://www-rohan.sdsu.edu/~gawron/index.html"
#Feed HTML file into parsers
lParser.feed(urllib.request.urlopen(thisurl).read().decode('utf8'))
lParser.close()
for item in urlText:
    print (item)
</code></pre>
<p>Converting bytes to sting also works with this at line 19 </p>
<pre><code>lParser.feed(str(urllib.request.urlopen(thisurl).read()))
</code></pre>
<p>but if i use this handle_data won't recognize any whitespace such as '\n'.
So the code works fine without removing any '\n'.   </p>
</div>
<span class="comment-copy">I can't reproduce the problem in your second sample. Please show a full traceback. Also fix your indentation.</span>
<span class="comment-copy">Thank you so very much. This helped a ton and was the perfect answer.</span>
<span class="comment-copy">Are you still following that tutorial?</span>
