<div class="post-text" itemprop="text">
<p>I want to create a file of hexadecimal number where everyone is composed of 32 elements like this: </p>
<pre><code>ccddeeff8899aabb4455667fffffff33
e0370734313198a2885a308aaaaaaaa8
7354776f204f6e65204e696bbbbbbb6f
64976fbb4f6e6ee0cc681e6ccccccc77
</code></pre>
<p>I try by this code to create my numbers but I don't now how to have 32 elements for each number: </p>
<pre><code>   import random
   Plaintext_file = open("C:\\Users\\user\\Plaintexts.txt", "w")
   for i in range(5):
      i = random.randint(0, 16777215)
      print "%x" % i 
      Plaintext_file.write("%x \n" % i)
</code></pre>
<p>The result that I have:</p>
<pre><code>c39ea9
a737a0
d2d352
fcebf1
ade761
</code></pre>
<p>I would be very grateful if you could help. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import uuid
&gt;&gt;&gt; uuid.uuid4().hex
'd734fde6d45e47e99d06f129b5c128f8'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/binascii.html#binascii.b2a_uu" rel="nofollow noreferrer"><code>binascii.b2a_hex</code></a> to convert binary data to a line of ASCII characters,</p>
<pre><code>&gt;&gt;&gt; import os,binascii
&gt;&gt;&gt; binascii.b2a_hex(os.urandom(16))
'a8922d48fba3bddd0214a338ce090ea6'
</code></pre>
<p><a href="https://docs.python.org/3/library/os.html#os.urandom" rel="nofollow noreferrer"><code>os.urandom(n)</code></a> returns a string of <code>n</code> random bytes from an OS-specific randomness source.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>random.choice</code> using the list of accepted hex chars (from <code>string.hexdigits</code> ):</p>
<pre><code>&gt;&gt;&gt; import string
&gt;&gt;&gt; string.hexdigits
'0123456789abcdefABCDEF'
&gt;&gt;&gt; import random
&gt;&gt;&gt; "".join([random.choice(string.hexdigits) for x in range(32)])
'37bAA921dd6BE09eEff45c280D62FFAb'
</code></pre>
<p>If you want only the lowercase you case use <code>string.hexdigits[:16]</code>:</p>
<pre><code>&gt;&gt;&gt; import string
&gt;&gt;&gt; string.hexdigits[:16]
'0123456789abcdef'
&gt;&gt;&gt; import random
&gt;&gt;&gt; "".join([random.choice(string.hexdigits[:16]) for x in range(32)])
'805cb6c9b38515b588bfec42613eff9d'
</code></pre>
</div>
<span class="comment-copy">where does 16777215 come from? It's not 16**32.</span>
<span class="comment-copy">i = random.randint(0, 16**32) Doesn't give me  32 elements, sometimes it gives me 31 elements</span>
<span class="comment-copy">because the first digit is zero 1/16 of the time. (use <code>"%032x"</code> to force width to be 32 with zero padding).</span>
<span class="comment-copy">No I am sorry It doesn't work</span>
<span class="comment-copy">I still have the same  problem</span>
<span class="comment-copy">It works but I need to return back to line, Plaintext_file.write("\n" % i)this one doesn't work</span>
<span class="comment-copy">Plaintext_file.write("%s\n" % uuid.uuid4().hex)</span>
<span class="comment-copy">Thank you very much it works.</span>
<span class="comment-copy">@nani92, did you check this code? I'm not so sure what/where exactly is the problem.</span>
<span class="comment-copy">Using '0123456789abcdefABCDEF' increases the chances of picking a hex digit in the range a..f.  It might be better to use '01234567890123456789abcdefABCDEF' if case is significant in the result.</span>
