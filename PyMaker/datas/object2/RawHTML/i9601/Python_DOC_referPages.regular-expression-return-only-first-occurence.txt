<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4594161/list-of-all-words-matching-regular-expression">List of all words matching regular expression</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I don't understand why my regular expression extraction don't return all occurences (<a href="https://regex101.com/r/1yWpq6/1" rel="nofollow noreferrer">https://regex101.com/r/1yWpq6/1</a>):</p>
<pre><code>import re

s = """
_('hello')

foo

_('world')

bar

"""

print(re.search('_\(\'(.*)\'\)', s, re.MULTILINE).groups())
</code></pre>
<p>produce</p>
<blockquote>
<p>('hello',)</p>
</blockquote>
<p>I expect ``('hello', 'world')</p>
<p>Why only thirst occurence returned ?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>print(re.findall('_\(\'(.*)\'\)', s, re.MULTILINE))
</code></pre>
<p>out:</p>
<pre><code>['hello', 'world']
</code></pre>
<blockquote>
<p><code>re.search(pattern, string, flags=0)</code>
  Scan through string looking for a
  location where the regular expression pattern produces a match, and
  return <strong>a corresponding match</strong> object.</p>
<p><code>re.findall(pattern, string, flags=0)</code>
  Return all non-overlapping
  matches of pattern in string, as a list of strings.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall()</code></a> like this:</p>
<pre><code>print(re.findall('_\(\'(.*)\'\)', s))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt;
&gt;&gt;&gt; print(re.findall('_\(\'(.*)\'\)', s))
['hello', 'world']
</code></pre>
</div>
<span class="comment-copy">From the docs of <code>re.search()</code>: "Scan through string looking for the first locationâ€¦"</span>
<span class="comment-copy">You may just use <code>re.findall(r"_\('([^']*)'\)", s)</code></span>
