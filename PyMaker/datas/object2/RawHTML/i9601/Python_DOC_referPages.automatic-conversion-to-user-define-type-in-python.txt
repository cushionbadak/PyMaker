<div class="post-text" itemprop="text">
<p>I'm building a type (<a href="https://en.wikipedia.org/wiki/Dual_number" rel="nofollow noreferrer">dual numbers</a>) and can't find the way to make them behave nicely in arithmetic expressions, like the complex numbers in Python do:    </p>
<pre><code>&gt;&gt;&gt; 2 + 3 + 7j
&gt;&gt;&gt; 5 + 7j
</code></pre>
<p>In my case:   </p>
<pre><code>&gt;&gt;&gt; 3 + 4 + 5e
&gt;&gt;&gt; obvious type error
</code></pre>
<p>I can easily make it work in, manipulate __add__method,  the other way: my type + built in. I, also, can do it making external function add and passing parameters, but, obviously, nice integration with '+' is much better.<br/>
Thanks in advance.
PS Where to find Python modules source code (I could look in a complex class myself)?  </p>
</div>
<div class="post-text" itemprop="text">
<p>There is no automatic type conversion to user defined types in Python.</p>
<p>You need to implement the methods <code>_add__</code> and <code>__radd__</code>, <code>__sub__</code> and <code>__rsub__</code>, etc. to emulate the behaviour of numeric types.</p>
<p>See <a href="https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types" rel="nofollow noreferrer">the Language Reference</a> for a list of magic methods you need to implement.</p>
<p>You can find the source code of CPython at <a href="https://hg.python.org/" rel="nofollow noreferrer">https://hg.python.org/</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not sure You can do this. Those are called built-in types, and You can't expand them. However, You can do something like this:</p>
<pre><code>class ENumber():
     def __init__(self, a=0, b=0):
         self.a = a
         self.b = b

     def __repr__(self):
         return "{} + {}e".format(self.a, self.b)

     def __add__(self, other):
         if isinstance(other, ENumber):
             return ENumber(self.a + other.a, self.b + other.b)
</code></pre>
<p>In action:         </p>
<pre><code>In [15]: x = ENumber(1, 1)

In [16]: y = ENumber(2, 2)

In [17]: x+y
Out[17]: 3 + 3e
</code></pre>
<p>Of course, You'll have to implement all other significant functions too.</p>
</div>
<span class="comment-copy">Check <a href="https://docs.python.org/3/reference/datamodel.html#object.__radd__" rel="nofollow noreferrer"><code>__radd__</code></a></span>
<span class="comment-copy">@niemmi: this looks good, will check it.</span>
<span class="comment-copy">@niemmi: this is cool, just check, works for addition, with a some tricks for unsymmetrical opers too!</span>
