<div class="post-text" itemprop="text">
<p>I have an xml file:</p>
<pre><code>    &lt;movie title="Enemy Behind"&gt;
       &lt;type&gt;War, Thriller&lt;/type&gt;
       &lt;type&gt;WW2&lt;/type&gt;
       &lt;format&gt;DVD&lt;/format&gt;
       &lt;year&gt;2003&lt;/year&gt;
       &lt;rating&gt;PG&lt;/rating&gt;
       &lt;stars&gt;10&lt;/stars&gt;
       &lt;description&gt;Talk about a US-Japan war&lt;/description&gt;
   &lt;/movie&gt;
</code></pre>
<p>And I am using the following code to Parse this XML in Python:</p>
<pre><code>     Print detail of each movie.
     for movie in movies:
        print ("*****Movie*****")
        if movie.hasAttribute("title"):
           print ("Title: %s" % movie.getAttribute("title"))

        type = movie.getElementsByTagName('type')[0]
        print ("Type: %s" % type.childNodes[0].data)
        format = movie.getElementsByTagName('format')[0]
        print ("Format: %s" % format.childNodes[0].data)
        rating = movie.getElementsByTagName('rating')[0]
        print ("Rating: %s" % rating.childNodes[0].data)
        description = movie.getElementsByTagName('description')[0]
        print ("Description: %s" % description.childNodes[0].data)
</code></pre>
<p>But using this code only one of the  attribute gets printed i.e. "War, Thriller". The other  attribute that says "WW2" doesn't get printed.</p>
<p>Should I use a for loop? I have tried that and I get an error "'Element' object is not iterable".</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know what library you are using but you can get the values for the XML snippet with the code below:</p>
<p>test.xml</p>
<pre><code>   &lt;movie title="Enemy Behind"&gt;
       &lt;type&gt;War, Thriller&lt;/type&gt;
       &lt;type&gt;WW2&lt;/type&gt;
       &lt;format&gt;DVD&lt;/format&gt;
       &lt;year&gt;2003&lt;/year&gt;
       &lt;rating&gt;PG&lt;/rating&gt;
       &lt;stars&gt;10&lt;/stars&gt;
       &lt;description&gt;Talk about a US-Japan war&lt;/description&gt;
   &lt;/movie&gt;
</code></pre>
<p>test.py</p>
<pre><code>import lxml.etree

# Getting the XML root tag... Movie in our case
root = lxml.etree.parse("test.xml").getroot()

# the method "get" returns the value of the XML attribute informed
# as parameter
print(root.get("title"))

# You can iterate over the children of an XML node
for child in root:
    print(child.text) # gets the text value from the children XML nodes

# Or more specifically, for each type, use the method FIND to get
# the XML child node from the current XML node.
node = root.find("name")
if node is not None:
    print(node.text)

# ..Or if you expect more than one node, as it is the case for the tag
# "type", you can use FINDALL which returns all direct children from the current XML node.
nodes = root.findall("type")
for node in nodes:
    print(node.text)
</code></pre>
<p>Recommended reading:</p>
<ul>
<li><a href="https://docs.python.org/3/library/xml.etree.elementtree.html#tutorial" rel="nofollow noreferrer">Python XML Tutorial</a></li>
<li><a href="http://www.diveintopython3.net/xml.html" rel="nofollow noreferrer">Chapter 2. XML - Dive into Python 3</a></li>
</ul>
</div>
<span class="comment-copy">What does this show? print type(movie.getElementsByTagName('type'))</span>
<span class="comment-copy">Mate I am looking at the tutorial you sent me, they seem to be very nice. I am trying to devise my own way of doing it. Will post soon what I used.</span>
<span class="comment-copy">@NikhileshSharma the code snippet that I posted should help you but reading the references is highly recommended :) if you think I helped you in any way, consider upvoting/accepting my answer :)</span>
<span class="comment-copy">Mate I was trying something different&gt; i will probably make a new post for it.</span>
<span class="comment-copy">@NikhileshSharma didn't <code>findall</code> help you? I demonstrate the usage in the last statement. If you meant really something different, I suggest you to edit you question and I can update my answer :)</span>
<span class="comment-copy">@Jaenderson <code>findall</code> worked like a charm</span>
