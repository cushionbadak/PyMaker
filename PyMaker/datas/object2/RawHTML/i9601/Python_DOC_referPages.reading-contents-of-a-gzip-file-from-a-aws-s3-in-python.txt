<div class="post-text" itemprop="text">
<p>I am trying to read some logs from a Hadoop process that I run in AWS. The logs are stored in an S3 folder and have the following path.</p>
<p>bucketname = name
key = y/z/stderr.gz
Here Y is the cluster id and z is a folder name. Both of these act as folders(objects) in AWS. So the full path is like x/y/z/stderr.gz.</p>
<p>Now I want to unzip this .gz file and read the contents of the file. I don't want to download this file to my system wants to save contents in a python variable.</p>
<p>This is what I have tried till now.</p>
<pre><code>bucket_name = "name"
key = "y/z/stderr.gz"
obj = s3.Object(bucket_name,key)
n = obj.get()['Body'].read()
</code></pre>
<p>This is giving me a format which is not readable. I also tried</p>
<pre><code>n = obj.get()['Body'].read().decode('utf-8')
</code></pre>
<p>which gives an error <strong>utf8' codec can't decode byte 0x8b in position 1: invalid start byte.</strong></p>
<p>I have also tried </p>
<pre><code>gzip = StringIO(obj)
gzipfile = gzip.GzipFile(fileobj=gzip)
content = gzipfile.read()
</code></pre>
<p>This returns an error <strong>IOError: Not a gzipped file</strong></p>
<p>Not sure how to decode this .gz file.</p>
<p>Edit - Found a solution. Needed to pass n in it and use BytesIO</p>
<pre><code>gzip = BytesIO(n)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just like what we do with variables, data can be kept as bytes in an in-memory buffer when we use the io module’s Byte IO operations.</p>
<p>Here is a sample program to demonstrate this:</p>
<pre><code>mport io

stream_str = io.BytesIO(b"JournalDev Python: \x00\x01")
print(stream_str.getvalue())
</code></pre>
<p>The <code>getvalue()</code> function takes the value from the Buffer as a String.</p>
<p>So, the @Jean-FrançoisFabre answer is correct, and you should use</p>
<pre><code>gzip = BytesIO(n)
</code></pre>
<p>For more information read the following doc:</p>
<p><a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer">https://docs.python.org/3/library/io.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>@Amit, I was trying to do the same thing to test decoding a file, and got your code to run with some modifications. I just had to remove the function def, the return, and rename the gzip variable, since that name is in use. </p>
<pre><code>import json
import boto3
from io import BytesIO
import gzip

try:
     s3 = boto3.resource('s3')
     key='YOUR_FILE_NAME.gz'
     obj = s3.Object('YOUR_BUCKET_NAME',key)
     n = obj.get()['Body'].read()
     gzipfile = BytesIO(n)
     gzipfile = gzip.GzipFile(fileobj=gzipfile)
     content = gzipfile.read()
     print(content)
except Exception as e:
    print(e)
    raise e
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Read Bz2 extension file from aws s3 in python</strong></p>
<pre><code>import json
import boto3
from io import BytesIO
import bz2
try:
    s3 = boto3.resource('s3')
    key='key_name.bz2'
    obj = s3.Object('bucket_name',key)
    nn = obj.get()['Body'].read()
    gzipfile = BytesIO(nn)
    content = bz2.decompress(gzipfile.read())
    content = content.split('\n')
    print len(content)

except Exception as e:
    print(e)
</code></pre>
</div>
<span class="comment-copy"><code>gzip = StringIO(obj)</code> if you're using python 3 you'd need <code>gzip = BytesIO(obj)</code>. It's <i>binary</i> data.</span>
<span class="comment-copy">Also surely you want <code>BytesIO(obj.get()['Body'].read())</code>.</span>
<span class="comment-copy">@Jean-FrançoisFabre It worked. Thanks.</span>
<span class="comment-copy">@KshitijMarwah kindly help me with my below query</span>
