<div class="post-text" itemprop="text">
<p>The built-in function <code>quit()</code> behaves differently in Python-3.x and IPython 3. The following code prints <code>Hello</code> if executed in IPython, but does not print anything in Python:</p>
<pre><code>quit()
print("Hello")
</code></pre>
<p>What is the purpose of <code>quit()</code> in IPython? What was the reason for changing its behavior?</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like <code>IPython</code>'s <code>quit</code>/<code>exit</code> "function" simplifies to just setting a flag to say "you should exit when this is next checked". It doesn't raise <code>SystemExit</code> itself, so it's presumably dependent on an intermittent check that, if you queue both commands at once, isn't performed until the second command finishes.</p>
<p>You can check it yourself at the IPython prompt, first run <code>quit??</code> to see that it's a callable class whose <code>__call__</code> delegates to <code>self._ip.ask_exit()</code>. Next, run <code>quit._ip.ask_exit??</code> and you'll see that <code>ask_exit</code> just sets a flag, <code>self.exit_now = True</code> (and it's a plain attribute if you check it, not a <code>property</code> with hidden code execution).</p>
<p>You're welcome to track down where <code>IPython</code> is checking that; I'm guessing it's done after any given line or cell of <code>IPython</code> completes.</p>
<p>Fundamentally, the difference is that <code>quit</code> in IPython has never been the same as <code>quit</code> in regular Python's interactive interpeter; <code>quit</code>/<code>exit</code> as a built-in is intended to be replaced for alternate interactive interpreters, and needn't behave exactly the same. If you want a consistent exit behavior, <code>import sys</code> and run <code>sys.exit()</code>, which is also the correct way to exit early inside a script, and is not intended as a hook for the interactive prompt.</p>
</div>
<span class="comment-copy">It's for quitting out of the interpreter session...? That works for me. Anyway, it is perhaps more precise to say what is the difference between the normal interactive Python interpreter REPL and IPython. IPython isn't distinct from Python 3.x... Anyway, are you actually running scripts with <code>ipython</code>? The <code>quit</code> function is just there for exiting from a python shell session, and shouldn't be used in scripts anyway.</span>
<span class="comment-copy">@juanpa.arrivillaga Since "Hello" is printed, apparenlty quit() in IPython does not really quit the interpreter - at least not immediately.</span>
<span class="comment-copy">it does if you are in an interpreter <i>shell session</i>, which is what it is meant to do. This is likely some loose end because no one thought you'd use <code>quit</code> outside of the interactive prompt.</span>
<span class="comment-copy">If I type <code>quit();print(10)</code> in the shell, it still prints 10 before it quits.</span>
<span class="comment-copy">Well, ShadowRanger looked into it and has posted an answer that looks to be complete. Anyway, <code>quit</code> is not a built-in function.</span>
<span class="comment-copy"><code>quit</code> isn't even really a built-in.</span>
<span class="comment-copy">As I said above, it is: <a href="https://docs.python.org/3/library/constants.html" rel="nofollow noreferrer">docs.python.org/3/library/constants.html</a></span>
<span class="comment-copy">@juanpa.arrivillaga: Sort of. It's an instance of a special <code>Quitter</code> class, that looks to be implemented in Python (it has helpful extras like a <code>repr</code> that reminds you you need to add parentheses if you type <code>quit</code> and forget to call it). It's a built-in only in the sense that it ships with core Python, not an actual part of the CPython interpreter core or the C level implementation of <code>__builtins__</code> or anything, it just gets shoved into <code>__builtins__</code> by the <code>site</code> package on startup (and technically, the <code>site</code> auto-import can be disabled, though that's rarely done).</span>
