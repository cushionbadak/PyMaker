<div class="post-text" itemprop="text">
<p>I can use <code>with open</code> in Python to iterate through a Comma Sep text file but I wish to add another level of complexity.
I need to return the value at <code>index[0]</code> of a row where a string is found.</p>
<p>For example, I have a text file containing:</p>
<pre><code>00:00,19.90,990.49,59.16,11.78,No
01:00,19.92.991.00,59.75,11.90,Yes
02:00,19.76,991.21,58.87,10.95,No
03:00,19.34,989.97,57.00,10.64,Yes
</code></pre>
<p>now I use:</p>
<pre><code>MaxTemp = -float('inf')
MinTemp = +float('inf')
with open (YdPath + yFileDate + '.txt', 'r') as DailyData:
    for lines in DailyData:
        temp = float(lines.strip().split(',')[1])
        if MaxTemp &lt; temp:
            MaxTemp = temp
        if MinTemp &gt; temp:
            MinTemp = temp
</code></pre>
<p>and output would be:</p>
<pre><code>MaxTemp = 19.92
MinTemp = 19.34
</code></pre>
<p>now though I wish to get the <code>index[0]</code> value that relates to these entries, i.e.</p>
<p>MaxTemp needs to find that the entry 19.92 in in the row starting with <code>index[0]</code> of 01:00 &amp; be displayed as such, using variable <code>tTime</code> as <code>index[0]</code> value:</p>
<pre><code>print 'The Max Temp was ' + MaxTemp + ' recorded at ' +  tTime 
</code></pre>
<p>Thanks for looking</p>
<p><strong>UPDATE</strong></p>
<p>thanks goes to <a href="https://stackoverflow.com/users/5341275/henry-heath">Henry Heath</a> for the help &amp; pointers.</p>
<p>Needed 2 time variables as the <code>MaxTemp</code> &amp; <code>MinTemp</code> were returning the exact same time using <code>tTime</code> here is the correct working code:</p>
<pre><code>MaxTemp = -float('inf')
MinTemp = +float('inf')

with open (YdPath + yFileDate + '.txt', 'r') as DailyData:
    for line in DailyData:
        line = line.strip().split(',')
        temp = float(line[1])
        if MaxTemp &lt; temp:
            MaxTemp = temp
            MXtTime = line[0]
        if MinTemp &gt; temp:
            MinTemp = temp
            MNtTime = line[0]

MaxTemps = '%.1f' %MaxTemp
MinTemps = '%.1f' %MinTemp

print('The Max Temp was ' + MaxTemps + ' recorded at ' + MXtTime)
print('The Min Temp was ' + MinTemps + ' recorded at ' + MNtTime)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This might be easier if you use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> library</p>
<pre><code>MaxTemp = -float('inf')
MinTemp = +float('inf')
with open (YdPath + yFileDate + '.txt', 'r') as DailyData:
    for line in DailyData:
        line = line.strip().split(',')
        temp = float(line[1])
        if MaxTemp &lt; temp:
            MaxTemp = temp
            tTime = line[0]
        if MinTemp &gt; temp:
            MinTemp = temp
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Following up on @henry-heath â€™s suggestion:</p>
<pre><code>import csv
from decimal import Decimal

# n.b., this implementation uses a sort for the brevity of 
# implementation.  However, the original iterative approach 
# will be much faster (O(n) compared to O(n log n)) than
# the version below
with open (YdPath + yFileDate + '.txt', 'r') as f:
    reader = csv.reader(f)
    lines = [line for line in reader]
    lines.sort(key=lambda x: Decimal(x[1]))
    print 'The Max Temp was ' + lines[-1][1] + ' recorded at ' +  lines[-1][0]
    print 'The Min Temp was ' + lines[0][1] + ' recorded at ' + lines[0][0] 
</code></pre>
<p>Iterative version:</p>
<pre><code>import csv
from decimal import Decimal

with open (YdPath + yFileDate + '.txt', 'r') as f:
    reader = csv.reader(f)
    line = reader.next()
    line[1] = Decimal(line[1])
    min_temp, max_temp = line, line
    for x in reader:
        x[1] = Decimal(x[1])
        if x[1] &lt; min_temp[1]: min_temp = x
        if x[1] &gt; max_temp[1]: max_temp = x       
    print 'The Max Temp was ' + max_temp[1] + ' recorded at ' +  max_temp[0]
    print 'The Min Temp was ' + min_temp[1] + ' recorded at ' + min_temp[0] 
</code></pre>
</div>
<span class="comment-copy">Thanks, your answer worked aside from a small issue where the time for both the <code>MaxTemp</code> &amp; <code>MinTemp</code> was showing as the same but it set me on the correct path. I have added an update to my post reflecting this, although checking your answer as correct. Thanks a lot.</span>
<span class="comment-copy">This approach looks promising and easier to read, I'll try it out, thanks.</span>
