<div class="post-text" itemprop="text">
<p>Ok so if you use this you get the possible combinations of a list</p>
<pre><code>stuff = [1, 2, 3]
for L in range(0, len(stuff)+1):
    for subset in itertools.combinations(stuff, L):
        print(subset)
</code></pre>
<p>And the result is </p>
<pre><code>()
(1)
(2)
(3)
(1, 2)
(1, 3)
(2, 3)
(1, 2, 3)
</code></pre>
<p>Is there a way to change this so that the result will be</p>
<pre><code>(0, 0, 0)
(1, 0, 0)
(0, 2, 0)
(0, 0, 3)
(1, 2, 0)
(1, 0, 3)
(0, 2, 3)
(1, 2, 3)
</code></pre>
<p>or another code that would do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>If the output order doesn't matter you could turn items on <code>stuff</code> to lists of length of 2 where the first number is 0 and use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="noreferrer"><code>itertools.product</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; stuff = [1, 2, 3]
&gt;&gt;&gt; list(product(*([0, x] for x in stuff)))
[(0, 0, 0), (0, 0, 3), (0, 2, 0), (0, 2, 3), (1, 0, 0), (1, 0, 3), (1, 2, 0), (1, 2, 3)]
</code></pre>
</div>
