<div class="post-text" itemprop="text">
<p>I have a dictionary of commits over a week. I want to print them out in a weekly calendar style of columns.</p>
<pre><code>{
  'Fri': 
  ['Commit: 04:15PM Move flex to mixin and do mobile-first queries\n', 
   'Commit: 03:52PM use padding to get the margins\n', 
   'Commit: 10:09AM Remove field_prepared_logo height\n', 
   'Commit: 03:15PM Add the final div to footer\n', 
   'Commit: 03:05PM Merge from redesign\n'], 
  'Thu': 
  ['Commit: 10:25AM Design qa fixes on /clients page\n'], 
  'Tue': ['Commit: 09:40AM remove transform and tweak span placement in hamburger\n'], 
  'Wed': ['Commit: 02:19PM Change blockquote font and width\n']}
</code></pre>
<p>It seems like using <code>numpy</code> is the way to go to print this out in columns. I've also been able to "even out" the lists by adding some dummy strings, and turning the dictionary into an array of arrays. The thing I'm struggling with is how to convert the array of arrays into a proper <code>numpy</code> array.</p>
<p>"Evened out" array of arrays:</p>
<pre><code>[ 
['Commit: 09:40AM remove transform and tweak span placement in hamburger\n', 'X', 'X', 'X', 'X']
['Commit: 02:19PM Change blockquote font and width\n', 'X', 'X', 'X', 'X']
['Commit: 04:15PM Move flex to mixin and do mobile-first queries\n', 'Commit: 03:52PM use padding to get the margins\n', 'Commit: 10:09AM Remove field_prepared_logo height\n', 'Commit: 03:15PM Add the final yeti to footer\n', 'Commit: 03:05PM Merge from p-redesign\n']
['Commit: 10:25AM Design qa fixes on /clients page\n', 'X', 'X', 'X', 'X']
]
</code></pre>
<p>What I've tried:</p>
<pre><code>nump_array = numpy.array(array_of_arrays)
print(nump_array[:,0])
</code></pre>
<p>Which always errors <code>IndexError: too many indices for array</code>. I <em>think</em> what I need to do is to go in and turn those inner arrays into numpy arrays then <code>vstack</code> them, but I'm pretty unclear on how to handle numpy. I also wonder if I shouldn't be so quick to trash the dictionary from the start.</p>
<p>Here is a foreshortened version of what I'm looking for:</p>
<pre><code>|  Mon  |  Tue  |  Wed  |  Thu  |  Fri  |
| 04:15 | 09:40 |  10:32| 04:12 | 11:00 |
| Move..|Do a ..|Add .. | Use ..| Change|
| 03:52 |       |       |       |       |
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you can solve this without <code>numpy</code> and using only stdlib modules!</p>
<pre><code>from itertools import zip_longest

d = {'Fri': ['Commit: 04:15PM Move flex to mixin and do mobile-first queries\n',
         'Commit: 03:52PM use padding to get the margins\n',
         'Commit: 10:09AM Remove field_prepared_logo height\n',
         'Commit: 03:15PM Add the final div to footer\n',
         'Commit: 03:05PM Merge from redesign\n'],
 'Thu': ['Commit: 10:25AM Design qa fixes on /clients page\n'],
 'Tue': ['Commit: 09:40AM remove transform and tweak span placement in '
         'hamburger\n'],
 'Wed': ['Commit: 02:19PM Change blockquote font and width\n']}

for row in zip_longest(d['Tue'], d['Wed'], d['Thu'], d['Fri']):
    print(row)
# ('Commit: 09:40AM remove transform and tweak span placement in hamburger\n', 'Commit: 02:19PM Change blockquote font and width\n', 'Commit: 10:25AM Design qa fixes on /clients page\n', 'Commit: 04:15PM Move flex to mixin and do mobile-first queries\n')
# (None, None, None, 'Commit: 03:52PM use padding to get the margins\n')
# (None, None, None, 'Commit: 10:09AM Remove field_prepared_logo height\n')
# (None, None, None, 'Commit: 03:15PM Add the final div to footer\n')
# (None, None, None, 'Commit: 03:05PM Merge from redesign\n')
</code></pre>
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>zip_longest</code> obviates the need to "even out" your arrays</a>...it just returns <code>None</code> where there was nothing to put. You could also pass <code>fillvalue=''</code> or similar to set the default value.</p>
<p>You could also use an ordered dict to avoid manually specifying the order of the days as I did.</p>
<p>Now that you have the individual rows, all that's left is an exercise in pretty-printing. The <a href="https://docs.python.org/3/library/textwrap.html" rel="nofollow noreferrer"><code>textwrap</code> module</a> is probably your friend here.</p>
<p>EDIT: This took a bit of doing, but here's the pretty printing taken care of as well</p>
<pre><code>maxwidth = (80//len(d)) - 1  # set this to whatever value you want
wrapper = textwrap.TextWrapper(width=maxwidth, subsequent_indent=' ')

wrapped_commits = {k: [wrapper.wrap(commit) for commit in v] for k, v in d.items()}
justified_commits = {k: [line.ljust(maxwidth) for commit in v for line in commit] for k, v in wrapped_commits.items()}

for l in zip_longest(justified_commits['Tue'], justified_commits['Wed'], justified_commits['Thu'], justified_commits['Fri'], fillvalue=' '*maxwidth):
    print(' '.join(l))
</code></pre>
<p>Here's the output from that:</p>
<pre><code>Commit: 09:40AM     Commit: 02:19PM     Commit: 10:25AM     Commit: 04:15PM    
 remove transform    Change blockquote   Design qa fixes on  Move flex to mixin
 and tweak span      font and width      /clients page       and do mobile-    
 placement in                                                first queries     
 hamburger                                                  Commit: 03:52PM use
                                                             padding to get the
                                                             margins           
                                                            Commit: 10:09AM    
                                                             Remove field_prepa
                                                             red_logo height   
                                                            Commit: 03:15PM Add
                                                             the final div to  
                                                             footer            
                                                            Commit: 03:05PM    
                                                             Merge from        
                                                             redesign          
</code></pre>
</div>
<span class="comment-copy">Your approach works perfectly for me on numpy version 1.11.1. Do you use an old numpy?</span>
<span class="comment-copy">While this definitely makes filling the arrays better, and textwrap will come in handy, I still think I need numpy to print across arrays.</span>
<span class="comment-copy">See my updated answer</span>
<span class="comment-copy">Wow, I definitely wouldn't have gotten there. Thanks.</span>
<span class="comment-copy">@icicleking One thing that <i>might</i> help if you get to really huge inputs is changing the list comprehensions in <code>wrapped_commits</code> and <code>justified_commits</code> to generator expressions with <code>(wrapper.wrap(commit) for commit in v)</code> or similar. I just tried this and it produced identical output.</span>
