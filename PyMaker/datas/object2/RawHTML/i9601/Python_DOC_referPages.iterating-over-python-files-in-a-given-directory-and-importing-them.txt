<div class="post-text" itemprop="text">
<p>I'm working on a little pet project in python, and I want to be able to write external modules and dynamically import them. So far, I've got something like this:</p>
<pre><code>def getModules(self):
    os.chdir(moduleDir)
    for module in os.listdir():
          #code goes here to import
          #also append to a list for use later on
</code></pre>
<p>I'd use <code>import module</code>, but that just gives a Syntax Error.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/importlib.html#importlib.import_module" rel="nofollow noreferrer"><code>importlib.import_module()</code></a> like this:</p>
<pre><code>import importlib

my_modules = []

def getModules(self):
    os.chdir(moduleDir)
    for module in os.listdir():
          my_module = importlib.import_module(module[:-3])  # Or: module.split('.')[0]
          my_modules.append(my_module)
</code></pre>
<p><strong>Example:</strong></p>
<p>Let's say we have a module <code>a</code> that contains the following function:</p>
<pre><code>def fn():
    print("Hello World")
</code></pre>
<p>The following is the result:</p>
<pre><code>&gt;&gt;&gt; import importlib
&gt;&gt;&gt;
&gt;&gt;&gt; my_module = importlib.import_module('a')  # Note: 'a' without '.py'
&gt;&gt;&gt;
&gt;&gt;&gt; my_module.fn()
Hello World
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should use the <a href="https://docs.python.org/2/library/functions.html#__import__" rel="nofollow noreferrer"><code>__import__</code></a> function. Something like this will help,</p>
<pre><code>def getModules(self):
    modules = []
    os.chdir(moduleDir)
    for module in os.listdir('.'):
          m = __import__(module.split('.')[0]) # Assuming your listdir() gives .py files
          modules.append(m)
</code></pre>
<p>A still better choice would be <a href="https://docs.python.org/2/library/importlib.html#importlib.import_module" rel="nofollow noreferrer"><code>importlib.import_module()</code></a> which is a wrapper around <code>__import__</code>. It's got a similar syntax to <code>__import__</code>. Of course, you need to <code>import importlib</code>.</p>
</div>
<span class="comment-copy">Did you try using "__import__" ?</span>
<span class="comment-copy">try to use <code>importlib.import_module</code>, if your moduleDir is a package, use <code>pkgutil.walk_packages</code> to list all modules.</span>
<span class="comment-copy">@hjfitz if you are satisfied with one of the answers, please accept them</span>
