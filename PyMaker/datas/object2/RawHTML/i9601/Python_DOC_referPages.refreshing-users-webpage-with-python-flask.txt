<div class="post-text" itemprop="text">
<p>I am creating a thread and after that thread finishes I want to refresh the users page and send him to another page. But I am really new to python and flask so I have no idea how to do that. </p>
<p>This is my code so far:</p>
<pre><code>nit = Thread()
def stampa():
    print ("Starting")
    com = "python plan.py"
    proc = subprocess.Popen(com.split(),shell=False)
    if proc.wait()!=0:
        print ("Ne radi")
    else:
        print ("Radi")
        return redirect('ended')


@app.route('/', methods=['GET','POST'])
def home():
    return render_template("homepage.html")

@app.route('/start_thread', methods=['GET','POST'])
def start_thread():
    global nit
    nit = Thread(target = stampa)
    nit.start()
    return redirect('end')

@app.route('/end', methods=['GET','POST'])
def end():
    global nit
    if nit.is_alive():
        return "Still working"
    else:
        return redirect('ended')
@app.route('/ended', methods=['GET','POST'])
def ended():
    return "It has ended"

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=5000)
</code></pre>
<p>The homepage template has just 1 button that redirects to <code>start_thread</code>.
The reason why I start a thread is because I dont want the windows to freeze while the program runs (it takes about 5 minutes to finish). for now the user has to refresh the page manually to see if the process has finished but I want to be able to do it myself.
Does anyone have a solution? ( Or any idea that I can research ?) </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>As stated in the documentation, <code>wait</code> can cause deadlock, so communicate is
  advisable.  <a href="https://docs.python.org/3/library/subprocess.html#convenience-functions" rel="nofollow noreferrer">subprocess.html#convenience-functions</a></p>
</blockquote>
<p>Please try</p>
<pre><code>def stampa():
    print ("Starting")
    com = "python plan.py"
    proc = subprocess.Popen(com.split(),shell=False)
    if proc.wait()!=0:
        print ("Ne radi")
    else:
        print ("Radi")
        return redirect('ended')
</code></pre>
<p>To</p>
<pre><code>def stampa():
    print ("Starting")
    com = "python plan.py"
    proc = subprocess.Popen(com.split(),shell=False)
    stdout, stderr = p.communicate()
    exitCode = proc.returncode
    if (exitCode == 0):
        return redirect('ended') # refresh
    else:
        # raise some exception
        pass
</code></pre>
</div>
<span class="comment-copy"><a href="http://www.celeryproject.org/" rel="nofollow noreferrer">celeryproject.org</a> and <a href="https://www.rabbitmq.com/" rel="nofollow noreferrer">rabbitmq.com</a> would be good tools to look at. I think you'll need some javascript on the front end to accomplish what you're looking to do, as far as i'm aware the server can't "push" content to the client without a client initiated request. You could use a <code>setInterval()</code> javascript function to periodically check a flask endpoint for progress.</span>
<span class="comment-copy">Have you read the question?</span>
<span class="comment-copy">@MilosRadosavljevic " for now the user has to refresh the page manually to see if the process has finished but I want to be able to do it myself. " I thought the idea you want refresh the page automatically after the thread process done?</span>
<span class="comment-copy">I have found the solution, you cant just redirect because you are in a thread. I needed to use javascript and send requests to see if the thread has finished</span>
