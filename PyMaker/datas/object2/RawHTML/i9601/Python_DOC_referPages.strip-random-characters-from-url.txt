<div class="post-text" itemprop="text">
<p>I have a list of urls as follows:</p>
<pre><code>urls = [
www.example.com?search?q=Term&amp;page=0,
www.example.com?search?q=Term&amp;page=1,
www.example.com?search?q=Term&amp;page=2
]
</code></pre>
<p>Where Term might be whatever term we want: <code>Europe</code>, <code>London</code>, etc..</p>
<p>My part of code (among the whole code) is the following:</p>
<pre><code>for url in urls:
  file_name = url.replace('http://www.example.com/search?q=','').replace('=','').replace('&amp;','')
  file_name = file_name+('.html')
</code></pre>
<p>which results in:</p>
<pre><code>Termpage0.html
Termpage1.html
and so on..
</code></pre>
<p>How can I strip the Term in the list of urls to result as:</p>
<pre><code>page0.html
page1.html
and so on?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow noreferrer"><code>urllib.parse</code></a> to parse the URL and then the query part. Benefit of this approach is that it will work the same if order of query parts are changed or new parts are added:</p>
<pre><code>from urllib import parse

urls = [
    'www.example.com?search?q=Term&amp;page=0',
    'www.example.com?search?q=Term&amp;page=1',
    'www.example.com?search?q=Term&amp;page=2'
]

for url in urls:
    parts = parse.urlparse(url)
    query = parse.parse_qs(parts.query)
    print('page{}.html'.format(query['page'][0]))
</code></pre>
<p>Output:</p>
<pre><code>page0.html
page1.html
page2.html
</code></pre>
<p>In above <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow noreferrer"><code>urlparse</code></a> returns <code>ParseResult</code> object that contains URL components:</p>
<pre><code>&gt;&gt;&gt; from urllib import parse
&gt;&gt;&gt; parts = parse.urlparse('www.example.com/search?q=Term&amp;page=0')
&gt;&gt;&gt; parts
ParseResult(scheme='', netloc='', path='www.example.com/search', params='', query='q=Term&amp;page=0', fragment='')
</code></pre>
<p>Then <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow noreferrer"><code>parse_qs</code></a> will return <code>dict</code> of query parameters where values are lists:</p>
<pre><code>&gt;&gt;&gt; query = parse.parse_qs(parts.query)
&gt;&gt;&gt; query
{'page': ['0'], 'q': ['Term']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you just want the last part after the last <code>&amp;</code>, it's easy:</p>
<pre><code>url.split('&amp;')[-1].replace('=', '') + '.html'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Continue with what you were doing and use <a href="https://docs.python.org/2/library/string.html#string.replace" rel="nofollow noreferrer"><code>str.replace</code></a></p>
<pre><code>for url in urls:
  file_name = url.replace('http://www.example.com/search?q=','').replace('=','').replace('&amp;','').replace('Term', '')
  file_name = file_name+('.html')
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; urls = ['www.example.com/search?q=Term&amp;page=0', 'www.example.com/search?q=Term&amp;page=1', 'www.example.com/search?q=Term&amp;page=2']
&gt;&gt;&gt; for url in urls:
...   file_name = url.replace('www.example.com/search?q=','').replace('=','').replace('&amp;','').replace('Term', '')
...   file_name = file_name+('.html')
...   print (file_name)
page0.html
page1.html
page2.html
</code></pre>
<p>If the terms are random, then use <a href="https://docs.python.org/2/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a> like this:</p>
<pre><code>re.sub('Term|Term1|Term2', '', file_name)
</code></pre>
<p>Or this if the term isn't known before the program is run:</p>
<pre><code>pattern = re.compile("|".join(map(str.strip, sys.stdin.readlines())))
pattern.sub('', file_name)
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; for url in urls:
...   file_name = url.replace('www.example.com/search?q=','').replace('=','').replace('&amp;','')
...   file_name = re.sub('Term|Term1|Term2', '', file_name)
...   file_name = file_name+('.html')
...   print file_name
... 
page0.html
page1.html
page2.html
</code></pre>
</div>
<span class="comment-copy">Thanks for your reply. However, It a bit difficult for me to comprehend how your code works. Do you hardcode the url after parse.urlparse? Also, at what is query assinged to (line 4)?</span>
<span class="comment-copy">@YannisDran URL doesn't need to be hardcoded,  I've modified response to illustrate this. <code>query</code> on line 4 is a dictionary where keys are query fields (<code>'page'</code> &amp; <code>'q'</code>) and values are lists of query values (<code>['0']</code> &amp; <code>['Term']</code> respectively).</span>
<span class="comment-copy">Thanks, that's it. But what should we do when it is not the last &amp; but somewhere between in a larger url and we want to only change this random term?</span>
<span class="comment-copy">Term is random. Might not be Term always. ;)</span>
<span class="comment-copy">+1 for re.sub because I didn't know it. However, Term is not hard-coded as I guess you misperceived the question. My program asks the user for a 'Term' which might be whatever we want and the start of search results (0 to n). Then, with this, I save all html files to the disk.</span>
