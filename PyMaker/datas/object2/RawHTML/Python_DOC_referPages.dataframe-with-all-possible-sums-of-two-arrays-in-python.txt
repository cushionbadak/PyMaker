<div class="post-text" itemprop="text">
<p>Lets say i have two arrays</p>
<pre><code>array_1 = [10,20,30]
array_2 = [50,60,70]
</code></pre>
<p>Dataframe i need as Output:</p>
<pre><code>        10   20   30
50      60   70   80
60      70   80   90
70      80   90  100
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.outer.html" rel="noreferrer"><code>outer</code></a> addition</p>
<pre><code>&gt;&gt;&gt; np.add.outer(array_1, array_2)
</code></pre>
<p>To create the data frame:</p>
<pre><code>pd.DataFrame(arr, columns=array_2, index=array_1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>numpy.ndarray</code> and broadcasting:</p>
<pre><code>&gt;&gt;&gt; length = len(array_1)
&gt;&gt;&gt; pd.DataFrame(np.reshape(np.array(array_1), (length, 1)) + np.reshape(np.array(array_2), (1, length)))
    0   1    2
0  60  70   80
1  70  80   90
2  80  90  100
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Similar to @Marcus's answer but using newaxis. Reshape array_1 to (3,1) and array_2 to (1,3). The resulting sum of the two arrays will have shape (3,3).</p>
<pre><code>df = pd.DataFrame(array_1[np.newaxis, :] + array_2[:, np.newaxis], index = array_1, columns = array_2)

    50  60  70
10  60  70  80
20  70  80  90
30  80  90  100
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here are two short methods using <code>ix_</code></p>
<pre><code>A = sum(np.ix_([40, 0], [10, 20, 30]))
pd.DataFrame(sum(np.ix_(*A)), *A)
#     10  20   30
# 50  60  70   80
# 60  70  80   90
# 70  80  90  100
</code></pre>
<p>or <code>c_</code></p>
<pre><code>A2, A1 = np.c_[[40, 0]] + [10, 20, 30]
pd.DataFrame(np.c_[A2] + A1, A2, A1)
#     10  20   30
# 50  60  70   80
# 60  70  80   90
# 70  80  90  100
</code></pre>
</div>
<span class="comment-copy">Hello, welcome to Stack Overflow. What did you try so far ?</span>
<span class="comment-copy"><code>pd.DataFrame(np.reshape(np.array(array_1), (len(array_1), 1)) + np.reshape(np.array(array_2), (1, len(array_2))))</code>   Worked for me, thanks! Only had to replace <i>length</i> with <code>len(array_1)</code></span>
<span class="comment-copy">@Andre whoops, forgot to put that in when pasting code.</span>
