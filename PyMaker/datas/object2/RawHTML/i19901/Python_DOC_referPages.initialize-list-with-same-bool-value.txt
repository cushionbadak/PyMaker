<div class="post-text" itemprop="text">
<p>Is it possible without loops initialize all list values to some bool? For example I want to have a list of N elements all False.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it like this: -</p>
<pre><code>&gt;&gt;&gt; [False] * 10
[False, False, False, False, False, False, False, False, False, False]
</code></pre>
<p><strong>NOTE: -</strong>
Note that, you should never do this with a <code>list</code> of <code>mutable types</code> with same value, else you will see surprising behaviour like the one in below example: -</p>
<pre><code>&gt;&gt;&gt; my_list = [[10]] * 3
&gt;&gt;&gt; my_list
[[10], [10], [10]]
&gt;&gt;&gt; my_list[0][0] = 5
&gt;&gt;&gt; my_list
[[5], [5], [5]]
</code></pre>
<p>As you can see, changes you made in one inner list, is reflected in all of them.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>    my_list = [False for i in range(n)]
</code></pre>
<p>This will allow you to change individual elements since it builds each element independently.</p>
<p>Although, this technically <em>is</em> a loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>When space matters, <a href="https://docs.python.org/3/library/functions.html#bytearray" rel="noreferrer"><code>bytearray</code></a> is a better choice. It's roughly five times more space efficient than the list of boolean solution.</p>
<p>This creates an array of <code>N</code> values, initialized to zero:</p>
<pre><code>B = bytearray(N)
</code></pre>
</div>
<span class="comment-copy">This is absolutely the correct idiom for this problem.  However, it is absolutely the incorrect idiom to use when you're dealing with a mutable type:  <code>[[]]*10</code> has some surprising consequences for new comers :).</span>
<span class="comment-copy">Why not just <code>range(n)</code>?</span>
<span class="comment-copy">Good point!  I suppose I didn't really think about it when I was typing it.</span>
<span class="comment-copy">range(n) would start from 0, not 1.</span>
