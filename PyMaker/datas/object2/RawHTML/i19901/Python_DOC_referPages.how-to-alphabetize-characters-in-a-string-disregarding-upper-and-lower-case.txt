<div class="post-text" itemprop="text">
<p>It it possible to alphabetize the characters in a string, disregarding upper and lower case?  I need them to stay in the case they are in, so I can't use <code>.lower()</code> or <code>.upper()</code>, but I'd like for them to be arranged with the letter taking precedence, so the resulting string would be something like:</p>
<p><code>"LMmqRRs"</code></p>
<p>instead of</p>
<p><code>"LMRRmqs"</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This makes sure capital letters go first:</p>
<pre><code>s = 'mqRMRsL'
result = ''.join(sorted(s, key=lambda c:(c.lower(), c)))
# LMmqRRs
</code></pre>
<p>This doesn't:</p>
<pre><code>s = 'mqRMRsL'
result = ''.join(sorted(s, key=str.lower))
# LmMqRRs
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>here is a slight alteration to BlaXpirit solution to make the sort stable:</p>
<pre><code>def alphabet_cmp(a, b):
    a_lower, b_lower = a.lower(), b.lower()
    if a_lower == b_lower:
        return cmp(a, b)
    else:
        return cmp(a_lower, b_lower)

x = 'ABcdCDab'
''.join(sorted(x, cmp=alphabet_cmp))
# 'AaBbCcDd'
</code></pre>
</div>
<span class="comment-copy">This may help:  <a href="http://stackoverflow.com/questions/10269701/case-insensitive-list-sorting-without-lowercasing-the-result" title="case insensitive list sorting without lowercasing the result">stackoverflow.com/questions/10269701/â€¦</a></span>
<span class="comment-copy">Do you want the sort to be stable (i.e. "aA" would stay "aA" and "Aa" would stay "Aa") or do you want the cases to have a specific order, whether "aA" or "Aa"?</span>
<span class="comment-copy">I'd rather have the uppercase come first for any given number of the same letter</span>
<span class="comment-copy"><code>NameError: name 'cmp' is not defined</code>. <code>TypeError: 'cmp' is an invalid keyword argument for this function</code>. See <a href="http://docs.python.org/3/whatsnew/3.0#ordering-comparisons" rel="nofollow noreferrer"><b>this</b></a></span>
<span class="comment-copy">And my solution is stable anyway...</span>
<span class="comment-copy">I don't know why cmp is an invalid keyword, the doc string for sorted in python 27 is "sorted(iterable, cmp=None, key=None, reverse=False) --&gt; new sorted list" however your solution is more elegant and also stable and thus better than mine, I don't know why I didn't realize that when I quickly read your reply prior to posting, sorry</span>
<span class="comment-copy">yes.. I didn't see that it was a python 3.0 thread I replied to... I just continue to make a fool of myself :)</span>
