<div class="post-text" itemprop="text">
<p>I'm trying to list out tweets with their time-stamps. I have this...</p>
<pre><code>#!/usr/bin/python
import twitter
api = twitter.Api()
statuses = api.GetUserTimeline('ttytter')
for s in statuses:
  print s.created_at + " " + s.text
</code></pre>
<p>Which prints out...</p>
<p><code>Sat Oct 20 04:56:47 +0000 2012 @uriel1998 W/r/t DMs, they appear just fine in 2.0.4 and 2.1 beta here, near as I can tell.</code></p>
<p>Which is pretty much what I'm after, but for the time, which seems to be in the wrong timezone. <a href="https://twitter.com/ttytter/status/259518502069760000" rel="nofollow noreferrer">https://twitter.com/ttytter/status/259518502069760000</a></p>
<p>Is there a way I can change this within the python-twitter library? I was looking at  <a href="http://static.unto.net/python-twitter/0.6/doc/twitter.html" rel="nofollow noreferrer">GetTimeZone() and SetTimeZone()</a>, but I haven't been able to figure out how they work.</p>
<p>Also looking at <a href="https://stackoverflow.com/questions/3660210/how-to-shift-a-datetime-object-by-12-hours-in-python">how to shift a datetime object by 12 hours in python</a> but not sure if I need to go there.</p>
<p>Thanks for any help!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://pypi.python.org/pypi/python-twitter" rel="nofollow noreferrer">python-twitter</a> returns the status timestamps as a string and as the number of seconds since the epoch. The latter is the simplest to convert to a timezone-aware <a href="http://docs.python.org/2/library/datetime.html#datetime-objects" rel="nofollow noreferrer"><code>datetime</code></a> instance (see this <a href="https://stackoverflow.com/questions/12691081/from-a-timezone-and-a-utc-time-get-the-difference-in-seconds-vs-local-time-at-t">answer</a>).</p>
<p>Unfortunately the user's <code>time_zone</code> attribute is not in the standard <a href="http://en.wikipedia.org/wiki/Tz_database" rel="nofollow noreferrer">tz database</a> format used by <a href="http://pypi.python.org/pypi/pytz/" rel="nofollow noreferrer"><code>pytz</code></a>, so it is necessary to use the <code>utc_offset</code> user attribute instead (we still use the <code>time_zone</code> attribute to name the <a href="http://docs.python.org/3/library/datetime.html#tzinfo-objects" rel="nofollow noreferrer"><code>tzinfo</code></a> created with with the UTC offset). The <a href="http://labix.org/python-dateutil" rel="nofollow noreferrer"><code>python-dateutil</code></a> package provides a convenience type <code>tzoffset</code> that allows the creation of <a href="http://docs.python.org/3/library/datetime.html#tzinfo-objects" rel="nofollow noreferrer"><code>tzinfo</code></a> instances from UTC offsets, which we can then use to convert the <a href="http://docs.python.org/2/library/datetime.html#datetime-objects" rel="nofollow noreferrer"><code>datetime</code></a> from UTC to the local time zone:</p>
<pre><code>import pytz
import twitter

from datetime import  datetime
from dateutil.tz import tzoffset

USERNAME = 'ttytter'

api = twitter.Api()

# get a 'tzinfo' instance with the UTC offset for the user's local time
user = api.GetUser(USERNAME)
localtime_tz = tzoffset(user.time_zone, user.utc_offset)

statuses = api.GetUserTimeline(USERNAME)
for s in statuses[:1]:
    # get UTC timestamp from seconds since epoch
    utc_dt = datetime.utcfromtimestamp(s.created_at_in_seconds).replace(tzinfo=pytz.utc)
    print('utc: {}'.format(utc_dt))
    # convert to local time in the user's timezone
    localtime_dt = utc_dt.astimezone(localtime_tz)
    print('localtime [{}]: {}'.format(localtime_dt.tzname(), localtime_dt))
</code></pre>
<p>which gives the output for the first status:</p>
<pre><code>utc: 2012-10-20 04:56:47+00:00
localtime [Pacific Time (US &amp; Canada)]: 2012-10-19 20:56:47-08:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Combining suggestions from Pedro Romano and J.F. Sebastian, I have this...</p>
<pre><code>import pytz
import twitter

from datetime import  datetime

USERNAME = 'ttytter'

api = twitter.Api()

user = api.GetUser(USERNAME)
pst_tz = pytz.timezone('America/Los_Angeles')

statuses = api.GetUserTimeline(USERNAME)
for s in statuses[:1]:
    # get UTC timestamp from seconds since epoch
    utc_dt = datetime.utcfromtimestamp(s.created_at_in_seconds).replace(tzinfo=pytz.utc)
    # convert to given timezone
    pst_dt = pst_tz.normalize(utc_dt.astimezone(st_tz))
    print(pst_dt.strftime('%Y-%m-%d %H:%M:%S ')) + s.text
</code></pre>
<p>Output: <code>2012-10-19 21:56:47 @uriel1998 W/r/t DMs, they appear just fine in 2.0.4 and 2.1 beta here, near as I can tell.</code> which is the correct time zone and also accounts for DST.</p>
<p>Thank you!</p>
</div>
<span class="comment-copy">do you want to convert utc time to tweet's author timezone or your local timezone?</span>
<span class="comment-copy">In this case, they are the same, and I'm ok with setting it manually. Probably, it would be a better script if it used the author's timezone, though.</span>
<span class="comment-copy">If it is not part of the question then you could post the code as an answer to allow independent voting, commenting, small fixes that are not appropriate if it is a part of the question e.g., <code>st_tz</code> stands for Stockholm timezone in my code, it could replaced by <code>la_tz</code>, <code>user_tz</code>, <code>local_tz</code> whatever more appropriate in your case (same for <code>st_dt</code>)</span>
<span class="comment-copy">Ok, put it as its own answer. Thanks for pointing out the variable convention you're using. I will edit my code accordingly.</span>
<span class="comment-copy">you don't need <code>dateutil</code>. python-twitter provides <code>created_at_in_seconds</code> that you could convert to a time in given timezone using <a href="http://stackoverflow.com/a/12692910/4279">the pytz example I've linked above</a>.</span>
<span class="comment-copy">You're absolutely right @J.F.Sebastian. Thanks. Revising the answer.</span>
<span class="comment-copy">How does dateutil.tzoffset-based code account for DST transitions?</span>
<span class="comment-copy">@J.F.Sebastian: it doesn't. I just assume that Twitter calculates the correct UTC offset for the local timezone and timestamp taking into account any DST transitions. I would prefer to use just <code>pytz</code>, but how can we get a <code>pytz</code> timezone from just the UTC offset? The <code>time_zone</code> attribute is useless because it doesn't contain proper Olson timezone names.</span>
<span class="comment-copy">Thanks Pedro and J.F.! By combining your answers I've got exactly what I was after.</span>
