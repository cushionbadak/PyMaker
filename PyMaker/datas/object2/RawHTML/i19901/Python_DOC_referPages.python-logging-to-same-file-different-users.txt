<div class="post-text" itemprop="text">
<p>I am using the logging module of python. </p>
<p>In the case of unit tests (we use py.test) every time tests are launched, some log information goes to a certain file. In the integration server, everytime someone pushes code (we also use git :) we run the tests. </p>
<p>The problem is that once the file is created, by user A when user B tries to run the tests, the tests will fail as user B has no permission to write on the same file. </p>
<p>So far, we have changed the file permissions manually, but looks like a dirty solution. Also we though of creating a log file per user, but again, does not feel right. </p>
<p>Our code for the logging in the tests is</p>
<pre><code>logging.basicConfig(level=logging.DEBUG,
    format='%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
    datefmt='%m-%d %H:%M',
    filename='/tmp/py.test.log',
    filemode='w')
log.setLevel(logging.DEBUG)
log.addHandler(logging.StreamHandler())
</code></pre>
<p>Is there a way to avoid this problem? Maybe using filemode = 'a' could do it, but lets assume I want a new file everytime (to be honest this is more curiosity that a real problem, still I want to do it right)</p>
<p>Thanks :)</p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like the logging process is trying to write on top of an existing file that's owned by another user. Here is a procedure for allowing group access for the group <code>loggroup</code> to the directory <code>logdir</code>.</p>
<ol>
<li><p>Make the containing directory group-writable.</p>
<pre><code>$ chgrp loggroup logdir
$ chmod g+w logdir
</code></pre></li>
<li><p>Set the <strong>setgid</strong> bit on <code>logdir</code>.  That makes new files in <code>logdir</code> always owned by the group.  Otherwise, new files are owned by the creator's group.</p>
<pre><code>$ chmod g+s logdir
</code></pre></li>
<li><p>Ensure all logging users belong to <code>loggroup</code>.</p>
<pre><code>$ usermod -a -G loggroup myuser
</code></pre></li>
<li><p>Ensure all writing processes have the right umask so they can make newly created files group-writable.</p>
<pre><code>$ umask 0002
</code></pre></li>
<li><p>Now all members of the <code>loggroup</code> group can create files in <code>logdir</code> and overwrite each other's files.</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>You could use the git hash as part of the filename. Then if there were weird messages in the log, you know which version caused it.</p>
<p>Another possibility is to run the tests from a different directory or even in a chroot.</p>
<p>Changing the permissions or removing the file might also work, but you still get a messy log file if the tests are run by two or more users at the same time.</p>
<p>You could also make a logger that doesn't log anything if you don't care about the content, or log to a database or... really the right/best answer depends on the situation</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
os.chmod("/some/location/file.type", 0777)
</code></pre>
<p>You can do this for the created file I guess. where 0777 is the permissions in octa. you can change it to whatever you want.</p>
</div>
<span class="comment-copy">how about adding the username to the filename, so each user gets their own separate copy?</span>
<span class="comment-copy">@MarcB as I said in the question "Also we though of creating a log file per user, but again, does not feel right." I just want to know if we can use the same log for everyone.</span>
<span class="comment-copy">Increment the log file name every test?</span>
<span class="comment-copy">see <a href="http://docs.python.org/3/howto/logging-cookbook.html" rel="nofollow noreferrer">Logging to a single file from multiple processes</a> though a single file doesn't seem useful in your case unless you log to multiple destinations</span>
<span class="comment-copy">@AlexL Again, and as I said on the question "Also we though of creating a log file per user, but again, does not feel right." Creating different log files is somehow discarded.</span>
<span class="comment-copy">Thanks for the idea, but as I said in the question "So far, we have changed the file permissions manually, but looks like a dirty solution. Also we though of creating a log file per user, but again, does not feel right" So yes, we already did the file permission changes, I just wonder if it is possible to do something directly from the code (and I do not mean executing those commands from python). Thanks for the answer.</span>
<span class="comment-copy">It is a good point that if two users run the tests at the same time the file will look weird, to say the least.</span>
<span class="comment-copy">This doesn't work because the logging module appears to not actually write the file until the program is completed, so any chmod call will result in file not found.</span>
<span class="comment-copy">create the file if it's not already created..</span>
