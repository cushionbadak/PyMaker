<div class="post-text" itemprop="text">
<p>Say for example I want to split string <code>"12:30-14:40"</code> and have the result in a matrix like: <code>[["12","30"],["14","40"]]</code>.</p>
<p>I can do this in JavaScript with:</p>
<pre><code>"12:30-14:40".split("-").map(function(x) {
    return x.split(':');
});
</code></pre>
<p>and in Ruby with:</p>
<pre><code> "12:30-14:40".split("-").map{|x| x.split(":")}
</code></pre>
<p>What would be the python equivalent for the above?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python and using <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> you will have something like:</p>
<pre><code>In [1]: map(lambda x: x.split(":"), "12:30-14:40".split("-"))
Out[1]: [['12', '30'], ['14', '40']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension:</p>
<pre><code>&gt;&gt;&gt; [i.split(':') for i in "12:30-14:40".split('-')]
[['12', '30'], ['14', '40']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="http://grschafer.com/guides/2013/08/20/ruby-and-python-by-example/" rel="nofollow noreferrer">Ruby and Python by example</a></p>
<blockquote>
<h3>Ruby</h3>
<pre><code>a = [1,2,3]
a.map { |x| x**2 } # [1,4,9]
# map returns a new array
# use map! to mutate the original

a.collect { |x| x**2 } # [1,4,9]
# collect is an alias of map
</code></pre>
<h3>Python</h3>
<pre><code>a = [1,2,3]
[x**2 for x in a] # [1,4,9]
map(lambda x: x**2, a) # [1,4,9]
</code></pre>
</blockquote>
<p>If you'd like python to return a list, just like ruby, instead: <code>list(map(lambda x: x**2, a))</code></p>
</div>
<span class="comment-copy">+1/accept for being short and using map.</span>
<span class="comment-copy">This is the closest way, but (since map needs a lambda) I think that a list comprehension would be faster and more Pythonic.</span>
<span class="comment-copy">this one is slower than list comprehension based solution.</span>
<span class="comment-copy">Indeed, I just wrote the closest translation I could remember. However I wouldn't recommend to do it this way. Instead I'd use a list comprehension.</span>
<span class="comment-copy">@AshwiniChaudhary &amp; everybody: Yes is slower but is the equivalent of the above code in JS and Ruby,and I am trying more to learn language possibilities, especially things I may overlook or don't get from documentation.</span>
<span class="comment-copy">So there is no way without for/in like in JS and Ruby?</span>
<span class="comment-copy">@EduardFlorinescu map is not a method of list in python it is built in function <a href="http://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#map</a></span>
<span class="comment-copy">@dm03514 That I already saw when I did <code>"12:30-14:40".split("-").map</code>, and got <code>AttributeError: 'list' object has no attribute 'map'</code>. What I had in mind was something like if there is  the andrefsp answer without the <code>for/in</code>.</span>
<span class="comment-copy">+1 for being short.</span>
