<div class="post-text" itemprop="text">
<p>I would like to write a function in Python that will take arguments just like <code>print</code> does but instead of printing the strings to stdout, I would like to write the strings formatted into a text file.</p>
<p>How do I define the arguments for such a function arguments to accept the string formatting, I'm wondering?</p>
<p>I am looking for something that would replace</p>
<pre><code>print "Test"
</code></pre>
<p>with</p>
<pre><code>MyLog "Test"
</code></pre>
<p>but the % rguments should also be supported.
So far I have only come up with this:</p>
<pre><code>def logger(txt):    
fh = open (LOGFILE, "a") #Get handle in append mode
fh.write(txt)
fh.close()
print txt
return True 
</code></pre>
<p>which works fine for a simple string but i don't think it'll take the % arguments nor will I be able to call it like <em>logger "TEST"</em></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the "print chevron" statement to do what you want like this:</p>
<pre><code>with open('filename.txt', 'w') as f:
  print &gt;&gt; f, my_object
</code></pre>
<p>See the <a href="http://docs.python.org/2/reference/simple_stmts.html#print" rel="nofollow noreferrer">documentation</a> for the print statement.</p>
<p>Of course, it probably is better practice to use the <code>print()</code> function as Martijn Pieters <a href="https://stackoverflow.com/a/13275117/600110">suggests</a>.</p>
<p><strong>Update</strong></p>
<p>If I change your <code>logger</code> function to use the print chevron syntax, I get this:</p>
<pre><code>def logger(txt):    
  fh = open (LOGFILE, "a") #Get handle in append mode
  fh.write(txt)
  fh.close()
  print &gt;&gt;fh, txt
  return True 
</code></pre>
<p>If you call this function like:</p>
<pre><code>now, duration = 4.0, 2.0
logger("User request at %f time took %f seconds." % (now, duration))
</code></pre>
<p>You'll have a line in your log file that looks like this:</p>
<pre><code>User request at 4.0 time took 2.0 seconds.
</code></pre>
<p>So you can use this with the <code>%</code> formatting (although you really should take a look at the <a href="http://docs.python.org/2/library/string.html#format-string-syntax" rel="nofollow noreferrer">new-style formatting</a>), but you won't be able to call it like:</p>
<pre><code>logger "User request at %f time took %f seconds." % (now, duration)
</code></pre>
<p>That's because print is a <a href="http://docs.python.org/2/reference/simple_stmts.html" rel="nofollow noreferrer">simple statement</a>, which is a language level construct, and you can't add those to Python.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3/library/functions.html#print" rel="nofollow"><code>print()</code></a> <em>already</em> lets you do that:</p>
<pre><code>print(somestring, file=someopenfile)
</code></pre>
<p>If you are on python 2, use <code>from __future__ import print_function</code> to get the same functionality.</p>
<p>You can always implement a function with the same arguments as the <code>print</code> function and use that as a replacement, or use wildcard arguments (<code>*args</code>, <code>**kw</code>), then add the <code>file</code> keyword argument as needed. You can always reach the <em>original</em> builtin <code>print()</code> function via the <code>__builtins__</code> structure:</p>
<pre><code>def print(*args, **kw):
    if 'file' not in kw:
        # print to a file instead of stdout
        kw['file'] = someopenfile
    return __builtins__.print(*args, **kw)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since by default <code>print</code> outputs to <code>sys.stdout</code>, you could create a <a href="http://docs.python.org/2/library/stdtypes.html?highlight=contextmanager#context-manager-types" rel="nofollow noreferrer"><code>contextmanager</code></a> as described in this <a href="https://stackoverflow.com/a/3378965/355230">answer</a> of mine, which would allow you to use regular <code>print</code>, regardless of whether you're using the statement or a function version.</p>
</div>
<span class="comment-copy">the same file each time?</span>
<span class="comment-copy">Do you mean you want to write a function you can call like <code>my_function arg1 arg2</code> or do you just need a way to write to a file using a builtin function?</span>
<span class="comment-copy">Well, I can e.g. call print "Test" and I would like to be able to just replace print with MyLog "Test" e.g.</span>
<span class="comment-copy"><code>print</code> is a statement in Python2.x, and you can't add another statement to the language.  You can however, use specific syntax for <code>print</code> as a statement to make it write to a file (e.g. <code>print &gt;&gt; log_file_object, "Test"</code>.</span>
<span class="comment-copy"><code>"string with %s formats %d" % ('3', 3)"</code> will always evaluate to a string, even as an argument to a function.  What have you tried?</span>
<span class="comment-copy">Fine, except that that <code>print</code> is a statement, not a function.</span>
<span class="comment-copy">True -- but it seems that the OP is looking for a statement, not a function from the way he wants to invoke it.</span>
<span class="comment-copy">see edits above</span>
<span class="comment-copy">@cerr I've updated my answer -- I don't think you can get Python to do exactly what you want, but I've added how you can get close, and why you can't get closer.</span>
