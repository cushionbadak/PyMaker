<div class="post-text" itemprop="text">
<p>I have a block of text like this:</p>
<pre><code>Hello @Simon, I had a great day today. #StackOverflow
</code></pre>
<p>I want to find the most elegant solution to stripping it down to look like this:</p>
<pre><code>Hello, I had a great day today.
</code></pre>
<p>i.e. I want to strip out all words that have a prefix of # and @.  (And yes, im inspecting tweets)</p>
<p>I am new to python, and I would be ok doing this on single words, but not sure on the best way to achieve this on a string that contains multiple words.</p>
<p>My first thoughts would be to use replace, but that would just strip out the actual @ and # symbols.  <strong>Looking for the best way to strip out any word that has a prefix of # or @.</strong></p>
<p>-EDIT-
Not sure if it this invalidates the answers give, but for acceptance, I also need to strip out where multiple words contain a prefix of # or $.  e.g. hello #hiya #ello</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/re.html" rel="nofollow">regular expressions</a>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = 'Hello @Simon, I had a great day today. #StackOverflow'
&gt;&gt;&gt; re.sub(r'(?:^|\s)[@#].*?(?=[,;:.!?]|\s|$)', r'', s)
'Hello, I had a great day today.'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's as simple as writing an anonymous function and putting it in a filter statement</p>
<pre><code>' '.join(filter(lambda x: x[0] not in ['@','#'], tweet.split()))
</code></pre>
<p>This will lose the comma on @users or #topics but if you're just processing the tweets you probably won't miss it.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>' '.join([w for w in s.split() if len(w)&gt;1 and w[0] not in ['@','#']])
</code></pre>
<p>Where <code>s</code> is your tweet. </p>
</div>
<span class="comment-copy">Does this fail if the <code>@</code> or <code>#</code> occurs in the middle of the word?</span>
<span class="comment-copy">@MarkRansom Improved so that it doesn't.</span>
<span class="comment-copy">Although this works for my example above, this does not seem to catch everything.  e.g. If two hash tags follow each other with a space. See <a href="http://pastebin.com/hMWJ1D9W" rel="nofollow noreferrer">pastebin.com/hMWJ1D9W</a></span>
<span class="comment-copy">@Simon That's because I used a replacement instead of a lookahead. Should be fixed now.</span>
<span class="comment-copy">This has the unfortunate side effect of turning multiple spaces into one. Depending on the application this might not matter.</span>
<span class="comment-copy">Twitter eats spaces anyways</span>
<span class="comment-copy">Is <code>split()</code> capable of returning a zero-length string?</span>
<span class="comment-copy">Nope, <code>''.split() == []</code>.</span>
<span class="comment-copy">Oops. I added some unneeded check indeed. My bad.</span>
