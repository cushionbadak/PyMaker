<div class="post-text" itemprop="text">
<p>I'm trying to get a troublesome python app of mine to work. I've just overcame a problem via help of @unutbu <a href="https://stackoverflow.com/questions/13221021/cannot-get-imports-to-work-in-web-py-project/13221195#comment18006635_13221195">here</a>.</p>
<p>My next problem is happenig to be a bit weird, the stack trace shows nothing related to my code:</p>
<pre><code>Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/web.py-0.37-py2.7.egg/web/application.py", line 239, in process
    return self.handle()
  File "/usr/local/lib/python2.7/dist-packages/web.py-0.37-py2.7.egg/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/usr/local/lib/python2.7/dist-packages/web.py-0.37-py2.7.egg/web/application.py", line 419, in _delegate
    cls = fvars[f]
KeyError: u'Home'
</code></pre>
<p>The only script I call a web.py function is this:</p>
<pre><code>#Application/App.py
import web
class AppInstance(object):
    def __init__(self):
        from Views import Home
        self.urls = (
                "/", "Home",
                )
        self.app = web.application(self.urls, globals())
    def run(self):
        self.app.run()
</code></pre>
<p>This guy is called from a script a directory upper in the filesystem:</p>
<pre><code>#start.py
from Application import App
app = App.AppInstance()
app.run()
</code></pre>
<p>If you want, I can copy how directory layout look from the question I mentioned above, but I'm not doing it now, as it will cause a lot of mess here (output of tree command). My question is: <em>How can I fix this issue with minimal changes to the directory structure?</em>
<hr/>
I thougth adding directory structure of the application should be helpful to those who want to help/who may read this for solving their own problem.</p>
<pre><code>Blog/
├── Application/
│   ├── App.py
│   └── __init__.py
|
├── Engine/
│   ├── Connection/
│   │   ├── __init__.py
│   │   └── MySQLConnection.py
│   ├── Errors.py
│   └── __init__.py
├── __init__.py
├── Models/
│   ├── BlogPostModel.py
│   └── __init__.py
├── start.py
└── Views/
    ├── Home.py
    └── __init__.py
</code></pre>
<p>This thing has just started, aims to provide a blogging engine, and helps me implement thing I've learnt till today for something complete and useful.</p>
</div>
<div class="post-text" itemprop="text">
<p>The second argument to <a href="http://webpy.org/docs/0.3/api#web.application" rel="nofollow"><code>web.application</code></a> must be a dictionary of potential handlers. In your case, you want <code>Home</code> to be in it, but that binding is only in the local variables. Either call <a href="http://docs.python.org/3/library/functions.html#locals" rel="nofollow"><code>locals</code></a> instead of <code>globals</code>:</p>
<pre><code>import web
class AppInstance(object):
    def __init__(self):
        from Views import Home
        self.urls = (
                "/", "Home",
                )
        self.app = web.application(self.urls, locals())
        #                                     ^^^^^^
    def run(self):
        self.app.run()
</code></pre>
<p>or move the import:</p>
<pre><code>import web
from Views import Home # &lt;-- Moved into global namespace
class AppInstance(object):
    def __init__(self):
        self.urls = (
                "/", "Home",
                )
        self.app = web.application(self.urls, globals())
    def run(self):
        self.app.run()
</code></pre>
</div>
<span class="comment-copy">Isn't "Home" supposed to exist in globals?</span>
<span class="comment-copy">@bereal Home.py is in folder "Views", which is at the same level with Applications. The guess of mine is, somehow, web.py is having a problem reaching the class. I'll add the directory structure for better expressing the problem. My eyes are getting hazy, it's been more than 5 hours me trying to figure this thing.</span>
<span class="comment-copy">Thank you very much! I can't beleive I've spent a day chasing somthing this obvious :) I've advanced to the next bug in my app.</span>
