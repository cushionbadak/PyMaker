<div class="post-text" itemprop="text">
<p>After much hair loss, I'm looking for help.</p>
<p>I'm embedding Python 3.3 into a simple app.  One unusual aspect is Python isn't on the path, but it all seems to load OK.  But for some reason, nothing can be executed.</p>
<p>Below is a small example program that shows the error:</p>
<p><strong>EDIT</strong>: I know the reference counting is horrible -- this is just a simple example.</p>
<pre><code>SetDllDirectory(L"D:\\dev\\python\\python33"); //so Python33.dll can be delay-loaded since not in the path

Py_Initialize();
PyObject* pGlobals = PyDict_New();
if (PyDict_GetItemString(pGlobals, "__builtins__") == NULL) 
{
    PyObject* pMod = PyImport_ImportModule("builtins"); &lt;-- always succeeds
    if(NULL != pMod)
        PyDict_SetItemString(pGlobals, "__builtins__", pMod);
}

PyObject* pResult = PyRun_String("import sys", 0, pGlobals, pGlobals); &lt;-- always fails

if (PyErr_Occurred()) 
{
    //PyErr_Fetch returns:
    //&lt;class 'SyntaxError'&gt;  
    //('invalid syntax', ('&lt;string&gt;', 1, 6, 'import sys'))
}
</code></pre>
<p>I have tried a variety of ways to import and define builtins, including various attempts shown below:</p>
<pre><code>PyObject* pMod = PyImport_ImportModule("builtins");
PyDict_SetItemString(pGlobals, "builtins", pMod);
PyDict_SetItemString(pGlobals, "__builtins__", pMod);

PyDict_SetItemString(pGlobals, "__builtins__", PyEval_GetBuiltins());
PyDict_SetItemString(pGlobals, "builtins", PyEval_GetBuiltins());
</code></pre>
<p>None of them work -- the error is identical with each.</p>
<p>What am I doing wrong?  Is it path related?  Something about builtins that I'm doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try it with the start symbol set to <a href="http://docs.python.org/3/c-api/veryhigh.html#Py_file_input" rel="nofollow"><code>Py_file_input</code></a> and use <a href="http://docs.python.org/3/c-api/reflection.html#PyEval_GetBuiltins" rel="nofollow"><code>PyEval_GetBuiltins</code></a>. </p>
<p>Edit: the correct dict key to set is <code>"__builtins__"</code>.</p>
</div>
<span class="comment-copy">That error doesn't look like a problem with the builtins - it's a <code>SyntaxError</code>, not a <code>NameError</code>. But I don't know what could cause it.</span>
<span class="comment-copy">THANK YOU!  Py_file_input was the secret!</span>
