<div class="post-text" itemprop="text">
<p>can someone explain how to do this in python? the idea is to figure out the 4 digit code(ex: 3968) entered by the user. how would one design an algorithm to go about finding this?
here is what i got..:</p>
<pre><code>code=int(input("Enter 4 digit secret code:"))
count=0000
while(count!=code):
    count=count+1
print("Your code was",count)
</code></pre>
<p>this works perfectly....Except when the code starts with 0... Ex: 0387
it prints " Your code was 387" as appose to 0387</p>
<p>whats a quick fix for this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>print("Your code was %04i" % count)
</code></pre>
<p>The % means that here comes a variable.
The 04 means zero-pad it to four characters.
The i means it's an integer. <a href="http://docs.python.org/2/library/stdtypes.html#string-formatting-operations" rel="nofollow">Docs here.</a></p>
<p>Alternative version, using the new, more flexible <a href="http://docs.python.org/2/library/string.html#format-string-syntax" rel="nofollow"><code>.format()</code> formatting</a>:</p>
<pre><code>print("Your code was {:04n}".format(count))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to print it with some formatting:</p>
<pre><code>print("Your code was {0:04d}".format(count))
</code></pre>
<p>which will zero-pad your number up to 4 digits. See the <a href="http://docs.python.org/3/library/string.html#formatstrings" rel="nofollow">string formatting</a> documentation for more details.</p>
<p>Alternatively, you can use the <a href="http://docs.python.org/3/library/stdtypes.html#str.zfill" rel="nofollow"><code>str.zfill()</code> method</a> to add the extra zeros after string conversion:</p>
<pre><code>print("Your code was", str(count).zfill(4))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a way of doing it purely using strings:</p>
<pre><code>import itertools

code = input("Enter 4 digit secret code:")

for attempt in itertools.product("0123456789", repeat=4):
    attempt = ''.join(attempt)
    if attempt == code:
        print("Your code was", attempt)
        break
</code></pre>
</div>
<span class="comment-copy"><code>print("Your code was", code)</code></span>
<span class="comment-copy">Also, you should never, ever, store anything as an int (or float) unless you intend to do arithmetic with it. This is a perfect example why this is so. Phone numbers, post codes etc. are not numbers, they are strings and should be treated as such.</span>
<span class="comment-copy">Increasing it with 1 is arithmetic, though. :-)</span>
<span class="comment-copy">@LennartRegebro: But the algorithm can't be changed to cope with an alphabetic code like <code>ABCD</code> as a result.</span>
<span class="comment-copy">@LennartRegebro: OK, but the entire example is quite contrived.</span>
<span class="comment-copy">AHHH string formatting got me again! :S THANKS!</span>
<span class="comment-copy">Hah! I beat you with two minutes! :-)</span>
<span class="comment-copy">@LennartRegebro: but without documentation! I hesitated if I should add an answer, but since yours was so very basic and lacking any explanation, I did so anyway. :-P</span>
<span class="comment-copy">Right, I should add doc links. I did add the format formatting for completeness even though I don't like it. :)</span>
<span class="comment-copy">@LennartRegebro: I am coming round to it; it <i>is</i> more flexible, and supports mixing positional and keyword parameters.</span>
<span class="comment-copy"><b>Too</b> flexible. I had some horror show example somewhere. It's very easy to obfuscate.</span>
<span class="comment-copy">im using python, thanks anyways =)</span>
<span class="comment-copy">@3MIN3M: To clarify, the code above will now work in python</span>
<span class="comment-copy">Nope! "count" should be "attempt" in print statement other then that it works although the printed result is a comma separated list.. to fix this i just did this:       if j == code:         print("Your code was",j)         break it now prints it as one string no spaces or commas :D</span>
