<div class="post-text" itemprop="text">
<p>I've been trying to use a regex to identify a word between two characters and I just cannot succeed. This is my code:</p>
<pre><code>re.match(r"\s*\#?\w*(\&lt;)+\s*(?P&lt;method&gt;\w+)\s*(\&gt;)+\w*", "# This &lt;foo&gt; truc")
</code></pre>
<p>The sentence has (or not) a python comment (#) and must show the group method.</p>
<p>Thank you for you time and help</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to change your regex to include optional spaces before <code>This</code> and <code>&lt;</code>, then you can use the <code>groups</code> attribute:</p>
<pre class="lang-py prettyprint-override"><code>some_match = re.match(r"\s*\#?\s*\w*\s*(\&lt;)+\s*(?P&lt;method&gt;\w+)\s*(\&gt;)+\w*", "# This &lt;foo&gt; truc")

some_match.groups()
('&lt;', 'foo', '&gt;')

some_match.groups(1)
'foo'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're missing some whitespace matches. After the <code>#</code> character, before the <code>&lt;</code>, and after the <code>&gt;</code>. </p>
<p>So one option is to add the missing whitespace matches:</p>
<pre><code>&gt;&gt;&gt; m = re.match(r"\s*\#?\s*\w*\s*(\&lt;)+\s*(?P&lt;method&gt;\w+)\s*(\&gt;)+\s*\w*", "# This &lt;foo&gt; truc")
&gt;&gt;&gt; m.group('method')
'foo'
</code></pre>
<p>However, if you only need the value between <code>&lt;</code> and <code>&gt;</code>, then use <code>re.search</code> instead and you can simply your regex significantly:</p>
<pre><code>&gt;&gt;&gt; r = re.search(r"\&lt;(?P&lt;method&gt;[^\&gt;]*)\&gt;", "# This &lt;foo&gt; truc")
&gt;&gt;&gt; r.group('method')
'foo'
</code></pre>
</div>
<span class="comment-copy"><a href="https://regex101.com/r/vBEM5I/1/" rel="nofollow noreferrer">Try this</a></span>
<span class="comment-copy">Very nice app!!! Thank you</span>
<span class="comment-copy">Thank you very much for your answer. It works perfectly. However, one question: Aren't white spaces included in \w* ?</span>
<span class="comment-copy">@linksse no, whitespaces are <code>\s</code> which includes <code>\n \t \r \s</code> which are newline, tab, carriage return, and space, respectively. <code>\w</code> is a word char (think <code>[A-Za-z]</code>)</span>
