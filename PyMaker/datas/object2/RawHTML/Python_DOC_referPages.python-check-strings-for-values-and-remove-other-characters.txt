<div class="post-text" itemprop="text">
<pre><code>f= open("new_sample.txt","r")

for ranges_in_file in f:
if(ranges_in_file.find('ranges:')!= -1):
    new_data = ranges_in_file.split(" ")
    print('success')
</code></pre>
<p>hi guys, currently i am reading a .txt file line by line to find for a certain value. I am able to find the line. For example, <code>ranges: [1.3,1.9,2.05,inf,1.64]</code> How do i store the certain line into a list and after that, remove any excess characters in the line such as the word <code>"ranges"</code> and <code>"inf"</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Given you have read the lines of a file and can get a list,</p>
<p>which is like</p>
<pre><code>ranges_in_file = [1.3,1.9,2.05,math.inf,1.64]
</code></pre>
<p>you can make a comprehension over the things you need/do not need:</p>
<pre><code>wanted = [x for x in ranges_in_file if x not in [math.inf, "range"] ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can split the variable<code>ranges</code> and the list using <code>a,b=ranges_in_file.split('=')</code>
<code>b.strip()</code>
So b contains your required list as a string. Use <code>c=list(b[1:len(b)-1].split(','))</code> to convert it into list. Then you can iterate over list and discard any values you don't want. (Remember now all entries of list are strings!)</p>
</div>
<div class="post-text" itemprop="text">
<p>For <strong>new_sample.txt</strong>:</p>
<pre><code> ranges: [1.3,1.9,2.05,inf,1.64]
</code></pre>
<p>you can split data with delimiter <strong>space</strong> and <strong>", "</strong>:</p>
<pre><code>f = open("new_sample.txt", "r")
file = f.read().splitlines()
f.close()
result = []

for i in file:
    b = i.split(" ")
    if b[0] == "ranges:":
        temp = b[1][1:-1].split(",")

for j in temp:
    if j not in ["inf"]:
        result.append(j)

print(result)
OUTPUT: ['1.3', '1.9', '2.05', '1.64']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your lines always look like this, so the start with <code>"ranges: "</code>, followed by a list of values, and the only thing you want to remove is <code>inf</code>, you can turn it into a list of floats easily using a <code>map</code>function like this:</p>
<pre><code>line = "ranges: [1.3,1.9,2.05,inf,1.64]"
values = list(map(float, [x.strip('[]') for x in (line.split(' ')[1]).split(',') if 'inf' not in x]))
</code></pre>
<p>Output:</p>
<pre><code>[1.3, 1.9, 2.05, 1.64]  # list of float values
</code></pre>
<p>You can then apply this to every line of the file that starts with <code>'ranges:'</code>, which will give you a list of the individual lines value lists. Notice the use of <code>with open(...</code>, which is safer to use for files in general, because the file will always be closed properly no matter what happens.</p>
<pre><code>values = []
with open('new_sample.txt', 'r') as f:
    for line in f.readlines():
        if line.startswith('ranges:'):
            line_values = list(map(float, [x.strip #.... and so on, see above
            values.append(line_values)
</code></pre>
<p>But if your lines can be different, a more general approach is needed.</p>
</div>
<span class="comment-copy">do you want the line as a list of values, or do you want a list of lines, as strings, but without the excess words? Could you specifiy your desired output with an example?</span>
<span class="comment-copy">Hi flob, my desired output will be able to read just the values (1.3,1.9,2.05,1.64) and generate a data structure, like a graph or some sort</span>
<span class="comment-copy">i think the question is how to get to that list.</span>
<span class="comment-copy">Hi flob, in my new_sample.txt there are other char and values. However, the ranges: [1.3,1.9,2.05,inf,1.64] will always look like that, just with different values. And the value in ranges: is what i need.</span>
<span class="comment-copy">Then this should work for you</span>
