<div class="post-text" itemprop="text">
<p>My Json File <code>'DueDate': '/Date(1539205200000)/', 'Bydate': '/Date(-62135578800000)/', 'NeedsAppointment': False</code></p>
<p>Code:</p>
<pre><code>for o in odpg:
    try:
        duedate= o['DueDate']
        print(duedate)
    except:
        # Handle error
</code></pre>
<p>Am getting output as:</p>
<pre><code>/Date(1539205200000)/
</code></pre>
<p>Required Output:</p>
<pre><code>07/31/2018 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Are you sure this is the correct number? At first I thought it’s an <a href="https://en.wikipedia.org/wiki/Unix_time" rel="nofollow noreferrer">epoch</a> but that resulted in much too big a year; however, taking away the last three <code>0</code>s works which makes me wonder if the epoch is in milliseconds instead of seconds (wild hand-wavy assumption):</p>
<pre><code>&gt;&gt;&gt; import time
&gt;&gt;&gt; time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime(1539205200000))
'50745-06-22 00:00:00'
&gt;&gt;&gt; time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime(1539205200))
'2018-10-10 21:00:00'
</code></pre>
<p>or </p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; datetime.datetime.fromtimestamp(1539205200000)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: year is out of range
&gt;&gt;&gt; datetime.datetime.fromtimestamp(1539205200)
datetime.datetime(2018, 10, 11, 7, 0)
</code></pre>
<p>To produce your desired output, just change the <a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">format string</a>:</p>
<pre><code>&gt;&gt;&gt; # Assuming constant format "/Date(…)/", this also removes the trailing zeroes..
&gt;&gt;&gt; funky_timestamp = int(o["duedate"][6:-5])
&gt;&gt;&gt; datetime.datetime.fromtimestamp(funky_timestamp).strftime("%d/%m/%Y")
'11/10/2018'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
import datetime
json = {'DueDate': '/Date(1539205200000)/', 'Bydate': '/Date(-62135578800000)/', 'NeedsAppointment': False}
duedate = re.findall(r'[\d]+', json['DueDate'])
datetime.datetime.fromtimestamp(float(duedate[0][:10])).strftime("%d/%m/%Y")
</code></pre>
</div>
<span class="comment-copy">Convert unixtimstamp to datetime using <code>date=datetime.datetime.fromtimestamp(eval(task_datetime)).strftime('%Y-%m-%d')</code> Jus by importing <code>import datetime</code></span>
<span class="comment-copy">Am getting  invalid syntax (&lt;string&gt;, line 1)</span>
<span class="comment-copy">What <i>are</i> <code>DueDate</code> and <code>ByDate</code> exactly… the numbers are too big for an epoch and the second number there is negative? Are you sure that your JSON is correct?</span>
<span class="comment-copy">exception here an integer is required (got type str)</span>
<span class="comment-copy">Then use <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer"><code>int()</code></a> to convert the string <code>"1539205200000"</code> to an integer. But beware the three zeroes and my question, <i>Are you sure this is the correct number?</i></span>
<span class="comment-copy">Am getting the value as <b>/Date(1539205200000)/</b>  from json</span>
<span class="comment-copy">I’ve updated my answer: assuming the <code>o["duedate"]</code> string is <i>*always*</i> formatted the same way, you can extract the <a href="https://stackoverflow.com/questions/663171/is-there-a-way-to-substring-a-string-in-python">substring using Python’s slice notation</a>.</span>
<span class="comment-copy">Perfect.. Its now working fine ....  duedate=re.sub("\D", "", duedate)</span>
