<div class="post-text" itemprop="text">
<p>I am using Thavelick's summarizer with some edits and cannot find a way to fix this error:</p>
<blockquote>
<p>TypeError: &lt; lambda &gt; () missing 1 required positional argument: 's2'</p>
</blockquote>
<p>Here is the code I know is causing the error: </p>
<pre><code>def reorder(input, output):
    output.sort(key=lambda s1, s2: input.find(s1)-input.find(s2))
    return output
</code></pre>
<p>Thavelick's summarizer link: <a href="https://github.com/thavelick/summarize/blob/master/summarize.py" rel="nofollow noreferrer">https://github.com/thavelick/summarize/blob/master/summarize.py</a></p>
</div>
<div class="post-text" itemprop="text">
<p>That code probably use the <code>cmp</code> argument for <code>sort</code> which is gone now. You cannot just use the same <code>lamdba</code>. The <code>key</code> function must accept only one argument.</p>
<p>There is a way to blindly convert the code: use <a href="https://docs.python.org/3/library/functools.html#functools.cmp_to_key" rel="nofollow noreferrer"><code>functools.cmp_to_key</code></a>. However I believe in this case it is easier to provide a proper key function:</p>
<pre><code>output.sort(key=lambda s: input.find(s))
</code></pre>
<p>Which can also be written as simply:</p>
<pre><code>output.sort(key=input.find)
</code></pre>
<p>The expression <code>a - b</code> returns a negative value if <code>a &lt; b</code>, <code>0</code> if <code>a == b</code> and a positive value if <code>a &gt; b</code>. So this means that your code is sorting <code>output</code> according to where the elements it contains are found in <code>input</code>.</p>
<p>So the <code>key</code> function is to just lookup where the substring is in <code>input</code>.</p>
<hr/>
<p>To use <code>cmp_to_key</code> you'd do this instead:</p>
<pre><code>from functools import cmp_to_key

output.sort(key=cmp_to_key(lambda s1, s2: input.find(s1) - input.find(s2)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the docs: <a href="https://docs.python.org/3/howto/sorting.html#key-functions" rel="nofollow noreferrer">https://docs.python.org/3/howto/sorting.html#key-functions</a></p>
<p><em>Both list.sort() and sorted() have a key parameter to specify a function to be called on each list element prior to making comparisons.</em></p>
<p>Thus,</p>
<pre><code>output.sort(key=lambda s: input.find(s[0])-input.find(s[1]))
</code></pre>
</div>
<span class="comment-copy">Please give an example of what each variable is, including <code>s1</code> and <code>s2</code>.</span>
<span class="comment-copy">@JakeMorris thats exactly what I am thinking too. It was from this gitHub repository <a href="https://github.com/thavelick/summarize/blob/master/summarize.py" rel="nofollow noreferrer">github.com/thavelick/summarize/blob/master/summarize.py</a></span>
<span class="comment-copy">Thank you! I have been searching for ages with no answer I could wrap my head around.</span>
<span class="comment-copy">@MPatel glad to help. Anyway StackOverflow has already two ways to thank an other users: upvotes and acceptance of an answer. You should consider using them in addition or instead of writing a comment.</span>
<span class="comment-copy">I needed to wait 4 minutes to accept the answer</span>
<span class="comment-copy">That won't perform the correct sort. Presumably <code>s</code> is a string, so for string <code>s</code> your lambda returns the difference between the index of character <code>s[0]</code> and the index of character <code>s[1]</code> as the key. If neither char is found in <code>input</code> that will give a result of zero, since both <code>.find</code> calls will return -1. And it will crash with an IndexError if <code>s</code> consists of a single char. The proper key function is given in Bakuriu's answer: <code>lambda s: input.find(s)</code>.</span>
<span class="comment-copy">I see. The type of the elements in 'output' wasn't quite clear in the question. But it should address the reported error.</span>
