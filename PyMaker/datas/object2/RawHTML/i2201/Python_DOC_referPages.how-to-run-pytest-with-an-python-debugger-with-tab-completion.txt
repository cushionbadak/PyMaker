<div class="post-text" itemprop="text">
<h2>Background</h2>
<p>I have been debugging my python scripts for ~2 years with plain <code>from IPython import embed; embed()</code>, and it has been working really fine. I just place the command on the line I want to examine, and when running the script I will have full IPython shell with capability for examining variables, defining functions, etc. On top of that, IPython shell comes with variable name tab completion.</p>
<p>Now, instead of always defining the "line of pause" with <code>from IPython import embed; embed()</code>, I would like my python scripts pause the execution while running tests, when they encounter an exception.</p>
<h2>Question</h2>
<p>How do you run <code>pytest</code> in such way, that </p>
<ol>
<li>When an <em>exception</em> is raised, it launches python debugger</li>
<li>This debugger has <em>tab completion</em> for variable names?</li>
</ol>
<h2>Setup</h2>
<ul>
<li>Windows 10</li>
<li>Python 3.6</li>
</ul>
<h2>Simple failing test</h2>
<pre><code># test_somemodule.py
def test_me(some_variable):
    x = 1 + some_variable
    return x


test_me('I am a string')
</code></pre>
<p><em>(No, you do not write tests for pytest like this, but for this exemplary purpose this is just fine.)</em></p>
<h2>Solutions that do not work</h2>
<h3>1. <code>pytest --pdb</code> (with no <code>pdbpp</code> installed)</h3>
<p>This opens the basic <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer"><code>pdb</code></a> shell when it runs to the error. But it has no tab completion.</p>
<pre><code>-&gt; x = 1 + some_variable
(Pdb) so[&lt;tab_here_produces_tab&gt;]
</code></pre>
<h3>2. <code>pytest --pdb</code> (<em>with</em> <code>pdbpp</code> installed)</h3>
<p>This opens the basic <a href="https://pypi.org/project/pdbpp/" rel="nofollow noreferrer"><code>pdbpp</code></a> shell when it runs to the error. But no tab completion.</p>
<pre><code>-&gt; x = 1 + some_variable
(Pdb++) so[&lt;tab_here_produces_tab&gt;]
</code></pre>
<h3>3. <code>pytest --pdb --pdbcls=IPython.terminal.debugger:Pdb</code></h3>
<p>This opens the basic <a href="https://pypi.org/project/ipdb/" rel="nofollow noreferrer"><code>ipdb</code></a> shell when it runs to the error. But no tab completion.</p>
<pre><code>    103
    104 def test_me(some_variable):
--&gt; 105     x = 1 + some_variable
    106     return x
    107

ipdb&gt; so[&lt;tab_here_produces_tab&gt;]
</code></pre>
<h3>4. <code>fancycompleter.interact()</code></h3>
<p>Tried <code>fancycompleter.interact()</code> as suggested <a href="https://github.com/antocuni/pdb/issues/74" rel="nofollow noreferrer">here</a>, no luck (with <code>pdb</code>, <code>ipdb</code> and <code>pdbpp</code>, <code>fancycompleter v.0.8</code> and even <a href="https://github.com/antocuni/pdb/issues/74#issuecomment-378729981" rel="nofollow noreferrer">this patched version</a>.).</p>
<h3>5. <code>pytest --pdb -s</code></h3>
<p>As <a href="https://stackoverflow.com/users/4000827/sergey-voronezhskiy">Sergey Voronezhskiy</a> commented, there is <code>-s</code> flag available for <code>pytest</code>. However, the tab completion works only partially: If there are multiple options for the same starting character(s), it will print out list of possible variables. This lacks the ability of quickly selecting one of the matching variables (which is available in IPython shell, for example):</p>
<p><a href="https://i.stack.imgur.com/zJZY2.png" rel="nofollow noreferrer"><img alt="example with the -s flag" src="https://i.stack.imgur.com/zJZY2.png"/></a></p>
<p>Is there a way to make the variable name tab completion work? I would prefer <code>ipdb</code> or <code>pdbpp</code> over the vanilla <code>pdb</code>, but even a working solution with <code>pdb</code> is just fine. </p>
</div>
<div class="post-text" itemprop="text">
<p>This is not the optimal solution, but it's better than nothing. Maybe somebody comes with a better answer. Here is what I did</p>
<ol>
<li>Installed <code>pdbpp</code> (<code>pip install pdbpp</code>)</li>
<li><p>Made <code>~/.pdbrc</code> file (<code>‪C:\Users\&lt;USER&gt;\.pdbrc</code>) with following contents</p>
<p><code>alias emb from IPython import embed; embed()</code></p></li>
<li><p>Made <code>~/.pdbrc.py</code> file (<code>‪C:\Users\&lt;USER&gt;\.pdbrc.py</code>) with following contents </p></li>
</ol>
<h1> </h1>
<pre><code>import pdb


class Config(pdb.DefaultConfig):
    def setup(self, pdb):
        print('Use "emb" to enter IPython shell')
</code></pre>
<h3>Usage Example</h3>
<p>Run <code>pytest --pdb</code> (same .py file as in the question). As you can see from the figure, tab completion for the variable <code>some_variable</code> works.</p>
<p><a href="https://i.stack.imgur.com/daLjA.png" rel="nofollow noreferrer"><img alt="tab completion inside IPython shell inside pdbpp" src="https://i.stack.imgur.com/daLjA.png"/></a></p>
</div>
<span class="comment-copy">Found some related discussion at <a href="https://github.com/pytest-dev/pytest/issues/4008" rel="nofollow noreferrer">github.com/pytest-dev/pytest/issues/4008</a></span>
<span class="comment-copy">looks like you forgot <code>-s</code> option</span>
<span class="comment-copy">Thank you! Did not notice that flag. It's nice solution since it does not add an extra step, but there is the downside that it really does not allow tab completion if there are multiple variable names starting with the same letter(s). It just prints the available options. I will add an example picture.</span>
