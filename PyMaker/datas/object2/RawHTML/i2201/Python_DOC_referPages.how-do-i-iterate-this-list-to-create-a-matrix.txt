<div class="post-text" itemprop="text">
<p>In an online course, part of the exercise is to create a matrix.</p>
<p>We were given the data below:</p>
<pre><code>KobeBryant_FT = [696,667,623,483,439,483,381,525,18,196]
JoeJohnson_FT = [261,235,316,299,220,195,158,132,159,141]
LeBronJames_FT = [601,489,549,594,593,503,387,403,439,375]
CarmeloAnthony_FT = [573,459,464,371,508,507,295,425,459,189]
DwightHoward_FT = [356,390,529,504,483,546,281,355,349,143]
ChrisBosh_FT = [474,463,472,504,470,384,229,241,223,179]
ChrisPaul_FT = [394,292,332,455,161,337,260,286,295,289]
KevinDurant_FT = [209,209,391,452,756,594,431,679,703,146]
DerrickRose_FT = [146,146,146,197,259,476,194,0,27,152]
DwayneWade_FT = [629,432,354,590,534,494,235,308,189,284]
</code></pre>
<p>in order to create a matrix, this would be the code:</p>
<pre><code>FT = np.array([KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, 
               CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT,
               KevinDurant_FT, DerrickRose_FT, DwayneWade_FT])
</code></pre>
<p>I was wondering if there's a way to use a 'for' loop to emulate the output of the above code without having to manually type in KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, etc,etc. </p>
</div>
<div class="post-text" itemprop="text">
<p>It depends how you would receive this data. If it's in the *.txt file, than you can read it <a href="https://stackabuse.com/read-a-file-line-by-line-in-python/" rel="nofollow noreferrer">line by line</a>(if you want to assign at the same time name with the list) or just read everything at once, and by using <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regular expression</a> look for anything inside square brackets.</p>
<pre><code>import re

file = open("data.txt","r").read()

lists_txt = re.finditer('[\[].*[\]]$', file, flags=re.MULTILINE)
#item in lists_txt = anything found inside [] brackets.

for item in lists_txt:
    txt = str(item.group(0))
    print(txt[1:-1])
</code></pre>
<p>Output from program:</p>
<pre><code>696,667,623,483,439,483,381,525,18,196
261,235,316,299,220,195,158,132,159,141
601,489,549,594,593,503,387,403,439,375
573,459,464,371,508,507,295,425,459,189
356,390,529,504,483,546,281,355,349,143
474,463,472,504,470,384,229,241,223,179
394,292,332,455,161,337,260,286,295,289
209,209,391,452,756,594,431,679,703,146
146,146,146,197,259,476,194,0,27,152
629,432,354,590,534,494,235,308,189,284
</code></pre>
<p>You should get strings of of anything inside []. Now by <a href="https://www.pythonforbeginners.com/dictionary/python-split" rel="nofollow noreferrer">using .split(",")</a> you can convert them into lists.</p>
<p>Hopefully it will help you out :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this,</p>
<pre><code>import pandas as pd
df = pd.DataFrame(FT)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you create the lists, you can put them in a dictionary, so that you can reference them in an easier way:</p>
<pre><code>d = {"KB":[696,667,623,483,439,483,381,525,18,196], "JJ":[261,235,316,299,220,195,158,132,159,141]}
np.stack(d.values())
# Out[32]: 
# array([[261, 235, 316, 299, 220, 195, 158, 132, 159, 141],
#        [696, 667, 623, 483, 439, 483, 381, 525,  18, 196]])
</code></pre>
<p>If you want the array in some particular order, you could use an Ordereddict:</p>
<pre><code>from collections import OrderedDict
d = OrderedDict({"KB":[696,667,623,483,439,483,381,525,18,196], "JJ":[261,235,316,299,220,195,158,132,159,141]})
np.stack(d.values())
</code></pre>
</div>
<span class="comment-copy">The solution you mentioned it good. You would not use a for loop here, but if you would like to try, look at <code>np.append()</code> or <code>np.vstack()</code> and iterate over the list: <code>for x in [KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT,                 CarmeloAnthony_FT, DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT,                KevinDurant_FT, DerrickRose_FT, DwayneWade_FT]:</code></span>
