<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1823058/how-to-print-number-with-commas-as-thousands-separators">How to print number with commas as thousands separators?</a>
<span class="question-originals-answer-count">
                    27 answers
                </span>
</li>
</ul>
</div>
<p>Easy task:</p>
<pre><code>number = 100123.44
number_formated = "100,123"
</code></pre>
<p>Don't tell me there is no better way than:</p>
<pre><code>number_formated = "{:,}".format(int(format("{:.0f}".format(number))))
</code></pre>
<p>?</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the number with <code>,</code> as a thousands separator as a whole number, use this format string:</p>
<pre><code>number_formated = "{:,.0f}".format(number)
</code></pre>
<p>No need to nest two calls and cast the resulting string to int again.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply call <code>int</code> on your <code>number</code> without formatting:</p>
<pre><code>number_formatted = "{:,}".format(int(number))
</code></pre>
<p>If you use Python 3.6 or higher you can use <a href="https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals" rel="nofollow noreferrer"><code>f-strings</code></a>:</p>
<pre><code>number_formatted = f'{int(number):,}'
</code></pre>
<p>Edit: using <a href="https://stackoverflow.com/users/6725184/christian-k%c3%b6nig">Christian KÃ¶nig</a> answer we can remove the <code>int</code> call:</p>
<pre><code>number_formatted = f"{number:,.0f}"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this
    <code>formatted_number = "{:,}".format(number)</code></p>
</div>
<span class="comment-copy">"{:,}".format(int(number))</span>
<span class="comment-copy">Note that <code>int(number)</code> truncates the decimal digits, while <code>f"{number:,.0f}"</code> rounds. <code>int(1.9)</code> gives <code>1</code>, but <code>f"{1.9:,.0f}"</code> gives <code>2</code>.</span>
<span class="comment-copy">While this correctly prints <code>,</code> as a thounsands separator, the fractional digits are not removed.</span>
