<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12897374/get-unique-values-from-a-list-in-python">Get unique values from a list in python [duplicate]</a>
<span class="question-originals-answer-count">
                    31 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to iterate through a column in a text file, where each entry has only three choices  <code>A, B, and C</code>. </p>
<p>I want to identify the number of different types of choices <code>(another text file has A, B, C, and D)</code>, but if I iterate through each element in the column with a <code>100 entries</code> and add it to a list, I'll have multiple repetitions of each type. For example, if I do this, the list might read <code>[A,A,A,B,C,C,D,D,D,B,B...]</code>, but I want to remove the extraneous entries and just have my list show the distinguishable types <code>[A,B,C,D]</code>, regardless of how many entries there were. </p>
<p>Any ideas how I might reduce a list with many common elements to a list with only the different distinguishable elements displayed? Thanks!</p>
<p>Desired Output:</p>
<p><code>[A, B, C, D]</code></p>
</div>
<div class="post-text" itemprop="text">
<h1>This is what you needed with <code>set()</code>:</h1>
<pre><code>&gt;&gt;&gt; lst1 = ['A','A','A','B','C','C','D','D','D','B','B']
&gt;&gt;&gt; list(set(lst1))
['A', 'B', 'D', 'C']
</code></pre>
<h1>Another solution <code>OrderedDict</code> to keep the order of keys during insertion.</h1>
<pre><code>&gt;&gt;&gt; from collections import OrderedDict
&gt;&gt;&gt; list(OrderedDict.fromkeys(lst1))
['A', 'B', 'C', 'D']
</code></pre>
<h1>In case you have liberty to use pandas then try below ones..</h1>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; drop_dups  = pd.Series(lst1).drop_duplicates().tolist()
&gt;&gt;&gt; drop_dups
['A', 'B', 'C', 'D']
</code></pre>
<p>In case you are looking for common values between two files:</p>
<pre><code>$ cat getcomn_vals.py
#!/python/v3.6.1/bin/python3
def print_common_members(a, b):
    """
    Given two sets, print the intersection, or "No common elements".
    Remove the List construct and directly adding the elements to the set().
    Hence assigned the dataset1 &amp; dataset2 directly to set()
    """

    print('\n'.join(s.strip('\n') for s in a &amp; b) or "No common element")

with open('file1.txt') as file1, open('file2.txt') as file2:
    dataset1 = set(file1)
    dataset2 = set(file2)
    print_common_members(dataset1, dataset2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is a data structure called <code>set</code> in python that does not allow duplicates.
This might help you out.</p>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="noreferrer">documentation for set() at docs.python.org</a></p>
</div>
<div class="post-text" itemprop="text">
<p>We could use <em>itertools.groupby</em> and <code>sorted</code> to get this list of unique elements    </p>
<pre><code>from itertools import groupby

with open('text.txt') as f:
    content = [line.strip('\n') for line in f]

l = [k for k, g in groupby(sorted(content))]
print(l)
# ['A', 'B', 'C', 'D']
</code></pre>
</div>
<span class="comment-copy">would help if you posted a snippet of the <code>txt</code> and any code you attempted</span>
<span class="comment-copy">@Ferreroire, you can accept the answer along with upvote if you feel that solves your requirement that way it will be removed from un-answered queue.</span>
<span class="comment-copy">Thanks a lot! That was very helpful!</span>
