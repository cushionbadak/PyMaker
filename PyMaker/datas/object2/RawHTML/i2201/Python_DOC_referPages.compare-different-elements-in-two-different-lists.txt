<div class="post-text" itemprop="text">
<p>I need to compare if 2 different data are matching from different lists. </p>
<p>I have those 2 lists and I need to count the numbers of babies with :</p>
<pre><code>first_name_baby = S AND age_baby = 1 
age_baby = [ 2, 1, 3, 1, 4, 2, 4, 1, 1, 3, 4, 2, 2, 3].  first_name_baby= [ T, S, R, T, O, A, L, S, F, S, Z, U, S, P]
</code></pre>
<p>There is actually 2 times when <code>first_name_baby = S AND age_baby = 1</code> but I need to write a Python program for that.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>zip</code> to combine corresponding list entries and then <code>.count</code></p>
<pre><code>&gt;&gt;&gt; age_baby = [ 2, 1, 3, 1, 4, 2, 4, 1, 1, 3, 4, 2, 2, 3]
&gt;&gt;&gt; first_name_baby = "T, S, R, T, O, A, L, S, F, S, Z, U, S, P".split(', ')
&gt;&gt;&gt; list(zip(first_name_baby, age_baby)).count(('S', 1))
2
</code></pre>
<p>Alternatively, you could use numpy. This would allow a solution very similar to what you have tried:</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt;                                                                                                             
&gt;&gt;&gt; age_baby = np.array(age_baby)                                                    
&gt;&gt;&gt; first_name_baby = np.array(first_name_baby)                                      
&gt;&gt;&gt;                                                                                                                 
&gt;&gt;&gt; np.count_nonzero((first_name_baby == 'S') &amp; (age_baby == 1))                                      
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can just take the sum of <code>1</code> whenever the conditions match. iterate over the lists simultaneously using <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a>:</p>
<pre><code># need to make sense of the names
T, S, R, O, A, L, F, Z, U, S, P = 'T, S, R, O, A, L, F, Z, U, S, P'.split(', ')
age_baby = [2, 1, 3, 1, 4, 2, 4, 1, 1, 3, 4, 2, 2, 3]
first_name_baby = [T, S, R, T, O, A, L, S, F, S, Z, U, S, P]


sum(1 for age, name in zip(age_baby, first_name_baby) 
    if age == 1 and name == S)
</code></pre>
<hr/>
<p>thanks to <a href="https://stackoverflow.com/users/8472377/austin">Austin</a> a more elegant version of this:</p>
<pre><code>sum(age == 1 and name == S for age, name in zip(age_baby, first_name_baby))
</code></pre>
<p>this works because bools in python are subclasses of <code>int</code> and <code>True</code> is basically <code>1</code> (with overloaded <code>__str__</code> and <code>__repr__</code>) and <code>False</code> is <code>0</code>; therefore the booleans can just be summed and the result is the number of <code>True</code> comparisons.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>&gt;&gt;&gt; count = 0
&gt;&gt;&gt; 
&gt;&gt;&gt; 
&gt;&gt;&gt; for i in range(len(first_name_baby)):
...   if first_name_baby[i] == 'S' and age_baby[i] == 1:
...     count += 1
... 
&gt;&gt;&gt; count
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>x = len([item for idx, item in enumerate(age_baby) if item == 1 and first_name_baby[idx] == 'S'])
</code></pre>
<blockquote>
<pre><code>2
</code></pre>
</blockquote>
<p>Expanded:</p>
<pre><code>l = []
for idx, item in enumerate(age_baby):
    if item == 1 and first_name_baby[idx] == 'S':
        l.append(item)
x = len(l)
</code></pre>
</div>
<span class="comment-copy">where is the second list?</span>
<span class="comment-copy">what did you try?</span>
<span class="comment-copy">Thank you. I tried that : if first_name_baby[i] == "S"  and age_baby[i]=="1" :            count ()</span>
<span class="comment-copy">Or just: <code>sum(age == 1 and name =='S' for age, name in zip(age_baby, first_name_baby))</code>.</span>
<span class="comment-copy">@Austin oh, thanks! never thought of that. updated (hope that's fine for you).</span>
