<div class="post-text" itemprop="text">
<p>I have a script that reads a YAML file into a python dictionary.  How do I read the values and concatenate some of them to be more meaningful?</p>
<pre><code>#script to load the yaml file into a python object
import yaml
from yaml import load, dump
#read data from the config yaml file
with open("config.yaml", "r") as stream:
    try:
        print(yaml.load(stream))
    except yaml.YAMLError as exc:
        print(exc)
</code></pre>
<p>Contents of YAML file:</p>
<pre><code>os2:
  host:hostname
  ip:10.123.3.182
  path:/var/log/syslog
  file:syslog
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your yaml file is incorrectly configured. There should be a space between each key and its value. You should have something like:</p>
<pre><code>os2:
  host: hostname
  ip: 10.123.3.182
  path: /var/log/syslog
  file: syslog
</code></pre>
<p>yaml.load will return a dictionary whose values you can access normally.</p>
<pre><code>{'os2': {'host': 'hostname', 'ip': '10.123.3.182', 'path': '/var/log/syslog', 'file': 'syslog'}}
</code></pre>
<p>Your code will look like this</p>
<pre><code>#script to load the yaml file into a python object
import yaml
from yaml import load, dump
#read data from the config yaml file
with open("config.yaml", "r") as stream:
    try:
        config = yaml.load(stream)
        #concatenate into string
        string = f"{config['os2']['host']}@{config['os2']['ip']}:{config['os2']['path']}"
    except yaml.YAMLError as exc:
        print(exc)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>yaml</code> is inappropriately formatted.  There should be a space after the <code>:</code> in each of the sub items like so:</p>
<pre><code>os2:
    host: hostname
    ip: 10.123.3.182
    path: /var/log/syslog
    file: syslog
</code></pre>
<p>After that if you do a <code>data = yaml.load(stream)</code> it should pass the data correctly as such:</p>
<pre><code>{'os2': {'file': 'syslog',
         'host': 'hostname',
         'ip': '10.123.3.182',
         'path': '/var/log/syslog'}}
</code></pre>
<p>Also, you don't need the line <code>from yaml import load, dump</code> since you already <code>import yaml</code> in its entirety.</p>
<p>Once the data is loaded, you can do pretty much anything you wish with it.  You might want to use <code>str.format()</code> or <a href="https://docs.python.org/3/whatsnew/3.6.html" rel="nofollow noreferrer">f strings (Python 3.6+)</a> as such:</p>
<pre><code>'{host}@{ip}:{path}'.format(**data['os2'])

# 'hostname@10.123.3.182:/var/log/syslog'
</code></pre>
<p>this is called <a href="https://docs.python.org/3.7/library/string.html#string-formatting" rel="nofollow noreferrer">string formatting </a>.  The <code>**data['os2']</code> bit is essentially unpacking the dictionary within `data['os2'] so you can refer to the keys directly in your string as such:</p>
<pre><code>{'file': 'syslog',
 'host': 'hostname',
 'ip': '10.123.3.182',
 'path': '/var/log/syslog'}
</code></pre>
<p>Note that since your <code>yaml</code> doesn't include the key or value "ubuntu" there's no way for you to get reference that string unless you update your <code>yaml</code>.</p>
<p>Also Note: Don't confuse dictionary keys with attributes.  You cannot reference <code>data.os2.file</code> as no such attribute exist under dictionary.  You can however reference <code>data['os2']['file']</code> (note they are in strings) to retrieve the data stored.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your YAML is perfectly normal, and it loads as you can see <a href="http://yaml-online-parser.appspot.com/?yaml=os2%3A%0A%20%20host%3Ahostname%0A%20%20ip%3A10.123.3.182%0A%20%20path%3A%2Fvar%2Flog%2Fsyslog%0A%20%20file%3Asyslog&amp;type=json" rel="nofollow noreferrer">here</a>.</p>
<p>You have one key (<code>os2</code>) and as value, a multiline plain scalar that loads, following the YAML standard, as a string with a space where the YAML has newline+spaces. That value thus loads as <code>"host:hostname ip:10.123.3.182 path:/var/log/syslog file:syslog"</code>. </p>
<p>Since you indicate you expect values (multiple), you either have to introduce make the value for <code>os2</code> a flow-style mapping (in which case you <strong>must</strong> quote the scalars, otherwise you could e.g. not write plain URLs as scalars in valid YAML):</p>
<pre><code>os2: {
  "host":"hostname",
  "ip":"10.123.3.182",
  "path":"/var/log/syslog",
  "file":"syslog"
  }
</code></pre>
<p>or you should follow the guideline from the <a href="http://yaml.org/spec/1.2/spec.html#id2791260" rel="nofollow noreferrer">YAML standard</a> that</p>
<blockquote>
<p>Normally, YAML insists the “:” mapping value indicator be separated from the value by white space.</p>
</blockquote>
<pre><code>os2:
  host: hostname
  ip: 10.123.3.182
  path: /var/log/syslog
  file: syslog
</code></pre>
<p>You should load YAML (when using PyYAML), using <code>yaml.safe_load()</code> as there is absolutely no need to use <code>yaml.load()</code> function, which is documented to be potentially unsafe.</p>
<p>With either of the above in <code>config.yaml</code>, you can do:</p>
<pre><code>import sys
import yaml

with open('config.yaml') as stream:
    d = yaml.safe_load(stream)

os2 = d['os2']
# "concatenate" host, ip and path
print('{host}@{ip}:{path}'.format(**d['os2']))
</code></pre>
<p>to get:</p>
<pre><code>hostname@10.123.3.182:/var/log/syslog
</code></pre>
</div>
<span class="comment-copy">thanks a lot! see my comment above, do you have a solution perhaps?</span>
<span class="comment-copy">See my updated answer</span>
<span class="comment-copy">thanks! that did it!</span>
<span class="comment-copy">There should be a space between the mapping value indicator (":") and the value. You cannot just have a space between a key and its value as you suggest (but do not show), and it is also not enough to have a space before the mapping value indicator. A space is <b>not necessary at all</b> in a flow-style mapping when the keys are quoted. There is no excuse for using potentially dangerous code in your answer. <code>yaml.load()</code> is <b>documented</b> to be potentially unsafe. If the OP is an inexperienced beginner programmer and makes this error, you should always correct it and clearly indicate you did.</span>
<span class="comment-copy">Awesome, thanks for the quick response. How do I concatenate the values to make it read like hostname@ip:path. (ubuntu@10.123.3.182:/var/log/syslog). When I use os1.file or something it doesn't work. Basically gives an error that the variable is undefined.</span>
<span class="comment-copy">I have updated the answer to provide a little clarity</span>
<span class="comment-copy">Thanks for that explanation too.When I use the data['os1]['file'] I get an error message -- " TypeError: '_io.TextIOWrapper' object is not subscriptable " , trying to debug what this could be.</span>
<span class="comment-copy">awesome, used string formatting &amp; got the info I needed. if I have a yaml file with a lot of information about servers, how can I use this such that I don't need to specify os2 or os1 and can instead use a for loop or something?                                '{host}@{ip}:{path}'.format(**data['os2']) in this line of code ? Thanks for the incredible help!</span>
