<div class="post-text" itemprop="text">
<p>In my attempt to learn Python I have been writing code from tutorials and my own. I am using Python 3. </p>
<p>The piece of code that is doing me in:</p>
<pre><code>&gt;&gt;&gt;print(not 1 == 1 or 6 == 6 and 9 == 9)  
True
</code></pre>
<p>I've run the separate parts of this code. It seems the OR operator is negating itself with a double True. (not True or True) outputs True instead of False? Isn't the or operator suppose to conclude upon the first True and the not operator returns True as False?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should look in to <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a>.</p>
<p>Let's examine this expression and handle each operator according to their precedence:</p>
<pre><code>not 1 == 1 or 6 == 6 and 9 == 9
</code></pre>
<p>First, the <code>==</code> operators are executed, so we get:</p>
<pre><code>not True or True and True
</code></pre>
<p>Then, the <code>not</code> operator:</p>
<pre><code>False or True and True
</code></pre>
<p>Then, the <code>and</code> operator:</p>
<pre><code>False or True
</code></pre>
<p>Then, the <code>or</code> operator, producing the result you're seeing:</p>
<pre><code>True
</code></pre>
</div>
<span class="comment-copy">This has to do with <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a> in Python, I'd check that out to understand better. Essentially, Python might not be evaluating your expression how you'd expect right now. I'd add some parentheses to help with clarity and "overwrite" the precedence.</span>
<span class="comment-copy">This is why I'm liberal with the parentheses. There's nothing technically wrong happening with this code in terms of language misbehavior, but it's unnecessarily difficult to reason about without the visual grouping (and while understanding operator precedence is important, if you need to think about it to understand an expression, it is a poorly written expression).</span>
<span class="comment-copy">Thanks for the advice as I'm new to Python and coding. So my expressions are extremely basic. This is my first language, so still learning how it works and why. I will try to be more cognizant of writing the expressions with better clarity.</span>
<span class="comment-copy">This makes it seem like all the equality ops are executed before the not is evaluated, but that's not true (although in this case we get the same result as if they were).</span>
<span class="comment-copy">Thank you! Your response and the link are greatly appreciated. I will use the link posted as I continue studying boolean expressions.</span>
