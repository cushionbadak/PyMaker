<div class="post-text" itemprop="text">
<p>I want to print Alternate A.P and G.P series like:</p>
<pre><code>- 2 2 4 6 6 18 8 54 10 162 12 486... i.e (A1 G1 A2 G2 A3 G3 .....)
</code></pre>
<p>here variable is with literal meaning asinged below.
I found in form of </p>
<pre><code>[(2, 2), (4, 6), (6, 18), (8, 54), (10, 162), (12, 486), (14, 1458), 
 (16, 4374), (18, 13122), (20, 39366)]
</code></pre>
<p>How can I find as expected?</p>
<pre><code>a,d,r,length=2,2,3,10
lst=[( a+(n-1)*d, a*r**(n-1) ) for n in range(1,length+12)]
print(lst)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you just want to <a href="https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python">flatten your list</a>, you could use <a href="https://docs.python.org/3/library/itertools.html?itertools.chain.from_iterable#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain.from_iterable</code></a>:</p>
<pre><code>from itertools import chain

chn = chain.from_iterable(lst)
flat_tuple = tuple(chn)
print(flat_tuple)  # (2, 2, 4, 6, 6, 18, 8, 54, 10, 162, ...)
</code></pre>
<p>or if you need that as a string you could to this:</p>
<pre><code>from itertools import chain

strg = ' '.join(str(i) for i in chain.from_iterable(lst))
print(strg)  # 2 2 4 6 6 18 8 54 10 162 12 486 14 ...
</code></pre>
</div>
<span class="comment-copy">Thanks a lot. you give me the exact answer to improve my skills.</span>
<span class="comment-copy">Patrick Artner,                                                                                                                         Please, tell me how works itertools chain? Giving an example.</span>
<span class="comment-copy">there are lots of examples in the doc (see link in my answer).</span>
