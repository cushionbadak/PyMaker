<div class="post-text" itemprop="text">
<p>What can I do to only get the zipcode, and not the whole address? right now it shows a whole address which contains a zipcode, is there a way of extracting the zipcode? </p>
<pre><code>import pandas as pd
import matplotlib.pyplot as plt
import numpy as py
from tabulate import tabulate
from geopy.geocoders import Nominatim
geolocator = Nominatim()

my_data = pd.read_csv('dt/TrafficCounts_OpenData_wm.csv')


geolocator = Nominatim(user_agent="my_application")
sub_set = my_data[["POINT_Y","POINT_X"]]
count = 0
for y in sub_set.itertuples() :
    mypoint = str(y[1]) + ' ,' + str(y[2])
    print(mypoint)
    location = geolocator.reverse(mypoint)
    print(location)
    if count == 5 : break
    count +=1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since zip codes are always the last 5 digits or 5 plus 4 digits in an address, you can use the following regex to extract the zip code from the address stored in your <code>location</code> variable:</p>
<pre><code>import re
zipcode = re.search(r'\d{5}(?:-\d{4})?(?=\D*$)', location).group()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't know regex I think you can do something like this but you should learn about them they will give you more robust behavior. </p>
<pre><code>data ='''29.607416999999998 ,-95.114007 Pinebrook KinderCare, 4422,Clear Lake City Boulevard, Houston, Harris County, Texas,77059,USA
29.74770501 ,-95.39656199 2345, Commonwealth Street, Houston, Harris County, Texas, 77006, USA
29.707028 ,-95.59624701 Hastings Ninth Grade Center, 6750, Cook Road, Houston, Harris County, Texas, 77072, USA 
29.59038673 ,-95.47975719 6333, Court Road, Houston, Fort Bend County, Texas, 77053, USA
29.67591366 ,-95.32867835 7084, Crestmont Street, Houston, Harris County, Texas, 77033, USA'''

dl = data.split('USA')
# print(dl)
</code></pre>
<p><br/></p>
<pre><code># 1)

zip_code_lst = []
for addrs in dl:
    zip_found = addrs.rstrip(', ')[-5:] # --&gt; 77006,whitspace --&gt; 77006
    if len(zip_found) == 5:
        zip_code_lst.append(zip_found)

print(zip_code_lst) # ['77059', '77006', '77072', '77053', '77033']
</code></pre>
<p><br/></p>
<pre><code># 2)

zip_code_lst_comp =  [ addrs.rstrip(', ')[-5:] for addrs in dl ]

print(zip_code_lst_comp) # ['77059', '77006', '77072', '77053', '77033', '']
</code></pre>
</div>
<span class="comment-copy">Can you share some sample data and the output you get?</span>
<span class="comment-copy">29.607416999999998 ,-95.114007 Pinebrook KinderCare, 4422, Clear Lake City Boulevard, Houston, Harris County, Texas, 77059, USA 29.74770501 ,-95.39656199 2345, Commonwealth Street, Houston, Harris County, Texas, 77006, USA 29.707028 ,-95.59624701 Hastings Ninth Grade Center, 6750, Cook Road, Houston, Harris County, Texas, 77072, USA 29.59038673 ,-95.47975719 6333, Court Road, Houston, Fort Bend County, Texas, 77053, USA 29.67591366 ,-95.32867835 7084, Crestmont Street, Houston, Harris County, Texas, 77033, USA</span>
<span class="comment-copy">do you want to extract zipcode from this string ?<code>'29.607416999999998 ,-95.114007 Pinebrook KinderCare, 4422, Clear Lake City Boulevard, Houston, Harris County, Texas, 77059, USA 29.74770501 ,-95.39656199 2345, Commonwealth Street, Houston, Harris County, Texas, 77006, USA 29.707028 ,-95.59624701 Hastings Ninth Grade Center, 6750, Cook Road, Houston, Harris County, Texas, 77072, USA 29.59038673 ,-95.47975719 6333, Court Road, Houston, Fort Bend County, Texas, 77053, USA 29.67591366 ,-95.32867835 7084, Crestmont Street, Houston, Harris County, Texas, 77033, USA '</code></span>
<span class="comment-copy">thanks a lot, could you explain me the sintax? i am new with python</span>
<span class="comment-copy">You're welcome. Which specific syntax do you need explanations on? Is it regular expression, or is it the usage of <code>re.search</code>?</span>
<span class="comment-copy">re.search(r'\d{5}(?:-\d{4})?(?=\D*$)' Could you explain this deeply? I am trying to look for it on the regex api, but did not find. Thanks.</span>
<span class="comment-copy">It would be worth your time to understand the regex syntax by reading the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">documentation</a>. But basically what I'm doing here is simply to match 5 digits (<code>\d{5}</code>), optionally followed by another 4 digits preceded by a dash (<code>(?:-\d{4})?</code>), while requiring that the match has to be followed by zero or more non-digit characters until the end of the string (<code>(?=\D*$)</code>), which really means to prohibit another number to follow the zip code.</span>
<span class="comment-copy">Thanks a lot, you were more than helpful.</span>
<span class="comment-copy">Thanks a lot man!</span>
