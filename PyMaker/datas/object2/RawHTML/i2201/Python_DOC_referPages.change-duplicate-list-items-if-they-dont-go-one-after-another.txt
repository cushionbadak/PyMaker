<div class="post-text" itemprop="text">
<p>I have a list of integers that has duplicates. Example:</p>
<blockquote>
<p>37 1 30 38 <strong>5</strong> 39 <strong>5 5 5</strong> 40 33 <strong>5</strong> 35 42 25 36 <strong>27 27</strong> 43 <strong>27</strong></p>
</blockquote>
<p>I need to change duplicate numbers to some other numbers if they don't go one after another. New numbers should not duplicates other numbers in a list. For example, the list above should become something like this:</p>
<blockquote>
<p>37 1 30 38 <strong>5</strong> 39 <strong>8 8 8</strong> 40 33 <strong>2</strong> 35 42 25 36 <strong>27 27</strong> 43 <strong>55</strong></p>
</blockquote>
<p>This is what I got:</p>
<pre><code>a = [37, 1, 30, 38, 5, 39, 5, 5, 5, 40, 33, 5, 35, 42, 25, 36, 27, 27, 43, 27]

duplicates = list(item for item, count in Counter(a).items() if count &gt; 1)


for dup in duplicates:
    positions = []

    for item in range(len(a)):
        if a[item] == dup:
            positions.append(item)

    for x in range(len(positions)-1):
        if positions[x+1] - positions[x] != 1:
            ran = random.randrange(1, len(a))
            while ran in a:
                ran = random.randrange(1, len(a))
            a[positions[x+1]] = ran
        else:
            y = x
            while positions[y+1] - positions[y] == 1:
                a[positions[y+1]] = a[positions[y]]
                y += 1
</code></pre>
<blockquote>
<p>[37, 1, 30, 38, <strong>5</strong>, 39, <strong>17</strong>, <strong>17</strong>, <strong>17</strong>, 40, 33, <strong>13</strong>, 35, 42, 25, 36, <strong>27</strong>, <strong>27</strong>,
  43, <strong>8</strong>]</p>
</blockquote>
<p>But I don't think it's a good solution.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> to process the list in chunks of identical numbers, and a generator expression with <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer"><code>itertools.count</code></a> to generate replacement numbers:</p>
<pre><code>input_list = [37, 1, 30, 38, 5, 39, 5, 5, 5, 40, 33, 5, 35, 42, 25, 36, 27, 27, 43, 27]

import itertools

# make a generator that yields unused numbers
input_values = set(input_list)
unused_number = (num for num in itertools.count() if num not in input_values)

# loop over the input, grouping repeated numbers, and keeping track
# of numbers we've already seen
result = []
seen = set()
for value, group in itertools.groupby(input_list):
    # if this number has occurred already, pick a new number
    if value in seen:
        value = next(unused_number)

    # remember that we've seen this number already so future
    # occurrences will be replaced
    seen.add(value)

    # for each repeated number in this group, add the number
    # to the output one more time
    for _ in group:
        result.append(value)

print(result)
# output:
# [37, 1, 30, 38, 5, 39, 0, 0, 0, 40, 33, 2, 35, 42, 25, 36, 27, 27, 43, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just another method.</p>
<p><strong>Demo:</strong></p>
<pre><code>import random


L = [37, 1, 30, 38, 5, 39, 5, 5, 5, 40, 33, 5, 35, 42, 25, 36, 27, 27, 43, 27]
result = []
previous_value = ''
dup_val = ''
length = len(L)
ran = ''

for i, v in enumerate(L):                              #Iterate Each element with index. 
    if (v not in result) or (v == previous_value):     #Check if value in result or previous value is the same. 
        result.append(v)
        previous_value = v
        dup_val = ''
    else:
        if dup_val == v:                                #Check if previous value is duplicate
            result.append(ran)
            continue
        else:
            ran = random.randrange(1, length)
            while ran in result:
                ran = random.randrange(1, length)
            result.append(ran)
            dup_val = v

print(result)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[37, 1, 30, 38, 5, 39, 16, 16, 16, 40, 33, 17, 35, 42, 25, 36, 27, 27, 43, 2]
</code></pre>
</div>
<span class="comment-copy">do the new items have to be duplicates of eachtother or can they all be new individual numebrs</span>
<span class="comment-copy">you have three 9 in the middle and one 9 in the end</span>
<span class="comment-copy">Sorry missed that...Updated solution.</span>
<span class="comment-copy">really like your solution but again. It doesn't work properly with this list <code>[37, 1, 30, 38, 5, 39, 5, 5, 40, 33, 33, 33, 5, 33, 35, 42, 42, 42, 25, 36, 27, 27, 43, 27]</code> RESULT: <code>[37, 1, 30, 38, 5, 39, 7, 7, 40, 33, 33, 33, 14, 33, 35, 42, 42, 42, 25, 36, 27, 27, 43, 18]</code> as you can see, there's problem with 33</span>
