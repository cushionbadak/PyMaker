<div class="post-text" itemprop="text">
<p>If I have two files:</p>
<p>file1.py, which contains functions that would be shared across different files:</p>
<pre><code>def log(x):
    return math.log(x)
</code></pre>
<p>file2.py</p>
<pre><code>import file1
import math
print(file1.log(math.e))
</code></pre>
<p>However, when I run <code>python file2.py</code> I get the following error: <code>NameError: name 'math' is not defined</code>. Is there a way to avoid re-importing a module in an imported module when the importing module had already imported it? </p>
<p>Alternatively, does re-importing a module in an imported module actually decreases performance? I'm using <code>math</code> to demonstrate but the module I'm importing actually takes some time to import (<code>nltk</code>)</p>
</div>
<div class="post-text" itemprop="text">
<p>I'll answer your last question. Python does the work of importing only once, the first time it is imported. It's cached internally. After that, if another module imports the same module, it's pulled quickly from the cache. So there is no performance hit importing multiple times.</p>
<p>Python is smarter than you think. Just write your code in the obvious way. </p>
</div>
<span class="comment-copy">No, there is no other way. You have to import <code>math</code> in the module in which you use it.</span>
<span class="comment-copy">Why are you importing math in file2.py, having used it in file1.py? You could remove the import math from file2 and put it in file1.py</span>
<span class="comment-copy">The functions in file1 are in the file1 namespace, and can access imported modules within that namespace. They can't use modules in a different namespace, like the file2 namespace.</span>
<span class="comment-copy">Functions cannot be shared with imported file but the imported file can share the functions.</span>
<span class="comment-copy">@VijayLingam What if I also need to use the math module in file2?</span>
<span class="comment-copy">Do you have a source for that? I have no reason to not trust you but I'd rather have confirmation.</span>
<span class="comment-copy">@C.J.Jackson <a href="https://docs.python.org/3/library/sys.html#sys.modules" rel="nofollow noreferrer">sys.modules</a></span>
