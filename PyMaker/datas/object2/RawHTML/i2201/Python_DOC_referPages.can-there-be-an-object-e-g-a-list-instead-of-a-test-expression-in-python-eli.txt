<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/39983695/what-is-truthy-and-falsy-in-python-how-is-it-different-from-true-and-false">What is Truthy and Falsy in python? How is it different from True and False?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/11732329/boolean-testing-a-list-in-python">Boolean testing a list in Python</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<pre><code>def lines(file): # a text file 
    for line in file:yield line
    yield "\n"
def blocks(file):
    block=[]
    for line in lines(file):
        if not line.isspace():
            block.append(line)
        elif block:  #a list in elif test expression
            yield ''.join(block).strip()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So long as the list isn't empty then yes you can use a list to be evaluated as a <code>True</code> bool in and if/elif/else statement. Empty lists will be <code>False</code>, lists with at least 1 item will be <code>True</code></p>
<p>You can always just try your own code out to see for yourself!</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, it is valid. Empty lists yield <code>False</code>, otherwise the expression yields <code>True</code>.</p>
<p>If you want more clarity, you can also use a more verbose form:</p>
<pre><code>if ...
    ...
elif len(block) &gt; 0:
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, because any object can be tested for truth value in Python as stated <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">here</a>:  </p>
<blockquote>
<p>Any object can be tested for truth value, for use in an if or while
  condition or as operand of the Boolean operations below.</p>
<p>By default, an object is considered true unless its class defines
  either a <strong>bool</strong>() method that returns False or a <strong>len</strong>() method
  that returns zero, when called with the object. [1] Here are most of
  the built-in objects considered false:  </p>
<ul>
<li>constants defined to be false: None and False.  </li>
<li>zero of any numeric type: 0, 0.0, 0j, Decimal(0), Fraction(0, 1)  </li>
<li>empty sequences and collections: '', (), [], {}, set(), range(0)</li>
</ul>
<p>Operations and built-in
  functions that have a Boolean result always return 0 or False for
  false and 1 or True for true, unless otherwise stated. (Important
  exception: the Boolean operations or and and always return one of
  their operands.)</p>
</blockquote>
</div>
<span class="comment-copy">Yes, there can. The code you've shared demonstrates it.</span>
<span class="comment-copy">Yes you can. Non-empty <code>list</code> objects evaluate to Truthy. Empty <code>list</code> objects will evaluate to Falsey.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#truth-value-testing</a></span>
<span class="comment-copy">anything that can be passed to <code>bool</code></span>
<span class="comment-copy">What do you mean "so long as the list isn't None"?</span>
<span class="comment-copy">@juanpa.arrivillaga My bad, meant empty</span>
<span class="comment-copy">See the section "Answer Well-Asked Questions" in <a href="https://stackoverflow.com/help/how-to-answer">How to Answer</a>, particularly the bullet point regarding questions which <i>"...have already been asked and answered many times before"</i>.</span>
<span class="comment-copy">Why couldn't you use an empty list?</span>
<span class="comment-copy">@juanpa.arrivillaga I've interpreted OP's question as asking if the the object will be evaluated as <code>True</code> but technically an empty list is a valid argument too, yes. Just it'll be false. It depends how you interpret the questions I guess.</span>
