<div class="post-text" itemprop="text">
<p>Got a set of tags called tags_json in the form of </p>
<pre><code> [u'03fb9e77138602b41feb8f667f04cc8998a1fd00', u'1575c845a43685b674f54c5cfccd2850c34502ff', u'v0.2.1']
</code></pre>
<p>and would like to get only the ones that point at a version i.e. v0.2.1 . That's why I created a regex and used the regex_search filter</p>
<pre><code>- set_fact: 
release_tags: "{{ tags_json | map('regex_search','\\b\\v(?:[0-9]{1,3}\\.){2}[0-9]{1,3}\\b') | select('string') | list }}"
</code></pre>
<p>but while listing that I'm getting just empty strings with no match. Suppose the regex itself is fine but can't get proper result (list of tags starting with a "v" and x.y.z).</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to remove any escaping symbol before <code>v</code> and use</p>
<pre><code>r'\bv(?:[0-9]{1,3}\.){2}[0-9]{1,3}\b'
</code></pre>
<p>Or, to match the whole string,</p>
<pre><code>r'^v(?:[0-9]{1,3}\.){2}[0-9]{1,3}$'
</code></pre>
<p>Note that <code>\v</code> matches a <code>\x0B</code> symbol.</p>
<p>Basically, watch out what you escape, some literal chars when escaped form a <em>regex escape sequence</em> and stop matching those chars literally. See <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Python <code>re</code> docs</a>:</p>
<blockquote>
<p>Most of the standard escapes supported by Python string literals are also accepted by the regular expression parser:<br/></p>
<p><code>\a      \b      \f      \n</code><br/>
<code>\r      \t      \u      \U</code><br/>
<code>\v      \x      \\</code></p>
</blockquote>
</div>
<span class="comment-copy">Do not escape a letter if you need to get it as a literal char, replace <code>\\v</code> into <code>v</code>.</span>
<span class="comment-copy">of course ... worked, thanks</span>
