<div class="post-text" itemprop="text">
<p>I have with me now a group of about 20 SNPs that I would like to acquire all possible genotype combinations for. As an example, let's start off with three SNPs and their alleles.</p>
<pre><code>SNP      A1         A2
SNP1      A          T
SNP2      C          G
SNP3      T          A
</code></pre>
<p>I want to start off by generating a list of all possible genotype permutations/combinations of these three SNPs, for example:</p>
<pre><code>SNP1 SNP2 SNP3
  AA   CC   TT
  AA   CC   TA
  AA   CC   AA
  AA   CG   TT
  AA   CG   TA
  AA   CG   AA
  AA   GG   TT
  AA   GG   TA
  AA   GG   AA
  ...
</code></pre>
<p>And so on, for what I expect to be 3^3 = 27 possible combinations.</p>
<p>From here, I hope to scale this up to my full group of ~20 SNPs. What is a good way of doing this, in Python or even in R?</p>
</div>
<div class="post-text" itemprop="text">
<p>We can use two functions from the standard <code>itertools</code> module to generate the combinations. We use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations_with_replacement" rel="nofollow noreferrer"><code>combinations_with_replacement</code></a> to build the 3 pairs from a SNP.</p>
<pre><code>from itertools import combinations_with_replacement

def pairs(alleles):
    return [u + v for u, v in combinations_with_replacement(alleles, 2)]

print(pairs('TA'))
</code></pre>
<p><strong>output</strong></p>
<pre><code>['TT', 'TA', 'AA']
</code></pre>
<p>Then we use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>product</code></a> to build all the combinations from a list of SNPs.</p>
<pre><code>from itertools import combinations_with_replacement, product

def pairs(alleles):
    return [u + v for u, v in combinations_with_replacement(alleles, 2)]

all_snps = ('AT', 'CG', 'TA')

for t in product(*[pairs(snp) for snp in all_snps]):
    print(t)
</code></pre>
<p><strong>output</strong></p>
<pre><code>('AA', 'CC', 'TT')
('AA', 'CC', 'TA')
('AA', 'CC', 'AA')
('AA', 'CG', 'TT')
('AA', 'CG', 'TA')
('AA', 'CG', 'AA')
('AA', 'GG', 'TT')
('AA', 'GG', 'TA')
('AA', 'GG', 'AA')
('AT', 'CC', 'TT')
('AT', 'CC', 'TA')
('AT', 'CC', 'AA')
('AT', 'CG', 'TT')
('AT', 'CG', 'TA')
('AT', 'CG', 'AA')
('AT', 'GG', 'TT')
('AT', 'GG', 'TA')
('AT', 'GG', 'AA')
('TT', 'CC', 'TT')
('TT', 'CC', 'TA')
('TT', 'CC', 'AA')
('TT', 'CG', 'TT')
('TT', 'CG', 'TA')
('TT', 'CG', 'AA')
('TT', 'GG', 'TT')
('TT', 'GG', 'TA')
('TT', 'GG', 'AA')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a solution in R for the example you provided:</p>
<pre><code># Alleles for each SNP
alleles &lt;- data.frame(
  A1 = c("A", "C", "T"),
  A2 = c("T", "G", "A"),
  row.names = paste0("SNP", 1:3)
)

# Get the three possible genotypes for each SNP (diallelic loci)
genotypes &lt;- apply(alleles, 1, function(x) {
  paste0(x[c(1, 1, 2)], x[c(1, 2, 2)])
})  

# Generate all possible combinations
expand.grid(as.data.frame(genotypes))
</code></pre>
<p><strong>output</strong></p>
<pre><code>   SNP1 SNP2 SNP3
1    AA   CC   TT
2    AT   CC   TT
3    TT   CC   TT
4    AA   CG   TT
5    AT   CG   TT
6    TT   CG   TT
7    AA   GG   TT
8    AT   GG   TT
9    TT   GG   TT
10   AA   CC   TA
11   AT   CC   TA
12   TT   CC   TA
13   AA   CG   TA
14   AT   CG   TA
15   TT   CG   TA
16   AA   GG   TA
17   AT   GG   TA
18   TT   GG   TA
19   AA   CC   AA
20   AT   CC   AA
21   TT   CC   AA
22   AA   CG   AA
23   AT   CG   AA
24   TT   CG   AA
25   AA   GG   AA
26   AT   GG   AA
27   TT   GG   AA
</code></pre>
</div>
<span class="comment-copy">3^20 is almost 3.5 billion. Do you have the RAM for a list that big? Do yoj need the whole list at once, or can you just iterate over the combinations? Or maybe compromise, and work with small sections of the whole list?</span>
<span class="comment-copy">BTW, itertools.product can be used to generate those combinations.</span>
<span class="comment-copy">Thanks! Looking briefly at itertools.product, it seems like I could work with this. I'm not too sure if I have the appropriate amount of RAM, but yes it would be okay to work in sections of the list. After this, I simply just want to calculate two values: (i) a score based on summing published log odds ratio for each risk allele present in each snp, and (ii) the frequency of each combination based on known allele frequencies in 1000G data.</span>
<span class="comment-copy">Ok. That sounds like you don't need to hold the whole list in RAM. I'll post some code to generate those combinations shortly.</span>
<span class="comment-copy">Wow, thanks! It's a great alternative.</span>
