<div class="post-text" itemprop="text">
<p>I'm doing my python assignments using PyCharm. I have created folders like "Assignment 01", "Assignment 02" and so on. In each of the assignment folders, I have 2 python files. "Helper.py" and "Demo.py". In "Demo.py", I have to import the <code>Helper</code> file. I do that using </p>
<pre><code>import Helper
</code></pre>
<p>But PyCharm doesn't recognize this unless I mark the directory containing the <code>Helper</code> files as <code>Sources Root</code>. So, I marked my directory "Assignment 01" as <code>Sources Root</code>. All is fine. Now, I started with "Assignment 02". In "Demo.py" of "Assignment 02", I imported <code>Helper</code>. This imports <code>Helper</code> from "Assignment 01" and not "Assignment 02". Even if I mark "Assignment 02" as <code>Sources Root</code>, PyCharm still refers to "Helper.py" from "Assignment 01". How to make PyCharm refer to "Helper.py" in the same folder?</p>
<p>Note: I don't want to open different Assignments as different projects. I would like to have everything as a single project.</p>
<p>Any other suggestions, conventions, best practices are also welcome. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can set the root project folder as the <code>Sources Root</code>. </p>
<p>After that, to import Helper from Assignment01, simply do <code>import Assignment01.Helper</code>, and <code>import Assignment02.Helper</code> for Assignment02.</p>
</div>
<span class="comment-copy">Marking as Sources Root should not be necessary inside the same Project. Are <code>Assignment 0*</code> really just folders or Python packages (i.e. do they have an <code>__init__.py</code> file in them)?</span>
<span class="comment-copy">No. They don not have <code>__init__.py</code>. They're just folders. <code>Assignment 0*</code> are sub-folders under some sub-folders. May be that's why it is asking me to mark it as <code>Sources Root</code>. I'm not exactly sure why it requires me to mark it. But if I don't mark it, PyCharm gives an error saying <code>No module named Helper found</code>.  May be because I've multiple files with same name under different folders?</span>
<span class="comment-copy">Then you should definitely turn them into packages by adding said file to each of them. It can be empty, it just has to exist. Then you can import as @hornhound outlined below in their answer.</span>
<span class="comment-copy">Yes, these files are part of <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">Python's import system</a>. They turn a folder into a package that the importer can search for in all directories specified in <code>sys.path</code>, which contains all the internal folders like <code>site-packages</code> and all other folders you might add, e.g. using the <code>PYTHONPATH</code> environment variable. The issue with setting them as <code>Sources Root</code> is that this won't work once you try to run a program using these modules from outside PyCharm, like the shell for example.</span>
<span class="comment-copy">Normally, the project root is added to <code>sys.path</code> automatically by PyCharm, so you don't need an <code>__init__.py</code> directly in the project folder. But you need it all the way down in your packages when you create submodules. And no, spaces are not a good idea. They work from inside the package with relative imports but not from the outside. Better avoid them.</span>
