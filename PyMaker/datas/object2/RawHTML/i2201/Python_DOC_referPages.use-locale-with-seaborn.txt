<div class="post-text" itemprop="text">
<p>Currently I'm trying to visualize some data I am working on with seaborn. I need to use a comma as decimal separator, so I was thinking about simply changing the locale. I found <a href="https://stackoverflow.com/a/35937196/6608142">this</a> answer to a similar question, which sets the locale and uses matplotlib to plot some data.</p>
<p>This also works for me, but when using seaborn instead of matplotlib directly, it doesn't use the locale anymore. Unfortunately, I can't find any setting to change in seaborn or any other workaround. Is there a way?</p>
<p>Here some exemplary data. Note that I had to use <code>'german'</code> instead of <code>"de_DE"</code>. The xlabels all use the standard point as decimal separator.</p>
<pre><code>import locale
# Set to German locale to get comma decimal separator
locale.setlocale(locale.LC_NUMERIC, 'german')

import pandas as pd
import seaborn as sns

import matplotlib.pyplot as plt
# Tell matplotlib to use the locale we set above
plt.rcParams['axes.formatter.use_locale'] = True

df = pd.DataFrame([[1,2,3],[4,5,6]]).T
df.columns = [0.3,0.7]

sns.boxplot(data=df)
</code></pre>
<p><a href="https://i.stack.imgur.com/PJsUY.png" rel="nofollow noreferrer"><img alt="Exemplary boxplot with seaborn" src="https://i.stack.imgur.com/PJsUY.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>The "numbers" shown on the x axis for such boxplots are determined via a 
<code>matplotlib.ticker.FixedFormatter</code> (find out via <code>print(ax.xaxis.get_major_formatter())</code>).
This fixed formatter just puts labels on ticks one by one from a list of labels. This makes sense because your boxes are positionned at <code>0</code> and <code>1</code>, yet you want them to be labeled as <code>0.3</code>, <code>0.7</code>. I suppose this concept becomes clearer when thinking about what should happen for a dataframe with <code>df.columns=["apple","banana"]</code>.</p>
<p>So the <code>FixedFormatter</code> ignores the locale, because it just takes the labels as they are. The solution I would propose here (although some of those in the comments are equally valid) would be to format the labels yourself.</p>
<pre><code>ax.set_xticklabels(["{:n}".format(l) for l in df.columns]) 
</code></pre>
<p>The <code>n</code> format here is just the same as the usual <code>g</code>, but takes into account the locale. (See <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow noreferrer">python format mini language</a>). Of course using any other format of choice is equally possible. Also note that setting the labels here via <code>ax.set_xticklabels</code> only works because of the fixed locations used by boxplot. For other types of plots with continuous axes, this would not be recommended, and instead the concepts from the linked answers should be used.</p>
<p>Complete code:</p>
<pre><code>import locale
# Set to German locale to get comma decimal separator
locale.setlocale(locale.LC_NUMERIC, 'german')

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.DataFrame([[1,2,3],[4,5,6]]).T
df.columns = [0.3,0.7]

ax = sns.boxplot(data=df)
ax.set_xticklabels(["{:n}".format(l) for l in df.columns])

plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/I9eRa.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/I9eRa.png"/></a></p>
</div>
<span class="comment-copy">Tried something similar (see <a href="https://stackoverflow.com/questions/49445935/change-decimal-point-to-comma-in-matplotlib-plot?rq=1">this</a> answer). Unfortunately that didn't work either.</span>
<span class="comment-copy">This does not seem to be a seaborn issue to me. While using <code>plt.plot</code> happily formats its labels according to the chosen locale, calling the matplotlib function directly via <code>plt.boxplot(df.T, positions=list(df.columns))</code> ignores the locale. So it appears to me that is due to the way the <code>positions</code> keyword is handled in matplotlib.</span>
<span class="comment-copy">Without really solving the underlying problem, a stupid way to get the numbers with commas on the x-axis is to set <code>df.columns</code> to appropriate strings: <code>df.columns = ["0,3", "0,7"]</code></span>
<span class="comment-copy">@jdamp That's unfortunate. Really seems like the fastest and easiest way is to convert the numbers to the appropriate string. Thanks!</span>
<span class="comment-copy">@jdamp seaborn rather calls something like <code>plt.boxplot(df.T, positions=range(len(df.columns)), labels=df.columns)</code>, so it's not the positions, but the labels which are relevant here. Apart, the analysis is pretty much correct.</span>
