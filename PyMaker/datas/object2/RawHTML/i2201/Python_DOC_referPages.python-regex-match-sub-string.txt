<div class="post-text" itemprop="text">
<p>I have the following string:</p>
<p><code>spf=pass (sender IP is 198.71.245.6)
 smtp.mailfrom=bounces.em.godaddy.com; domainname.com.au; dkim=pass (signature was
 verified) header.d=godaddy.com;domainname.com.au; dmarc=pass action=none
 header.from=godaddy.com;
</code></p>
<p>With the following code:    </p>
<pre><code>if "Authentication-Results" in n:
    auth_results = n['Authentication-Results']
    print(auth_results)

    spf = re.match(r"spf=(\w+)", auth_results)
    if spf:
       spf_result = spf.group(1)

    dkim = re.match(r"^.*dkim=(\w+)", auth_results)
    print(dkim)
    if dkim:
        dkim_result = dkim.group(1)
</code></pre>
<p>The SPF always matches but the DKIM doesn't:</p>
<p><code>print(dkim) = None</code></p>
<p>According to the regex testers online it should: <a href="https://regex101.com/r/ZkVg74/1" rel="nofollow noreferrer">https://regex101.com/r/ZkVg74/1</a> any ideas why it's not i also tried these:</p>
<p><code>dkim = re.match(r"dkim=(\w+)", auth_results)
dkim = re.match(r"^.*dkim=(\w+)", auth_results, re.MULTILINE)</code></p>
</div>
<div class="post-text" itemprop="text">
<p><code>.</code> does not match a newline character by default. Since the <code>dkim</code> in your test string is on the second line and your regex pattern tries to match any non-newline character from the beginning of the string with <code>^.*</code>, it would not find <code>dkim</code> on the second line. You should either use the <code>re.DOTALL</code> flag to allow <code>.</code> to match a newline character:</p>
<pre><code>dkim = re.match(r"^.*dkim=(\w+)", auth_results, flags=re.DOTALL)
</code></pre>
<p>or remove the unnecessary match from the beginning of the string altogether:</p>
<pre><code>dkim = re.search(r"dkim=(\w+)", auth_results)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, <a href="https://docs.python.org/3/library/re.html#re.Pattern.match" rel="nofollow noreferrer"><em>re.match</em></a> works from the beginning. so your <code>r"dkim=(\w+)"</code> trial doesn't work.</p>
<p>Second, the <code>.</code> symbol matches characters except the new line character. If you want it to, you should explictly force it using <code>re.S</code> or <a href="https://docs.python.org/3/library/re.html#re.DOTALL" rel="nofollow noreferrer"><code>re.DOTALL</code></a> flag.</p>
<p>Also, you can use <code>[\s\S]</code> or <code>[\w\W]</code> to match any characters.</p>
<p>Try this:<br/>
<code>re.match(r"^[\s\S]*dkim=(\w+)", auth_results).group(1)</code><br/>
or this:<br/>
<code>re.match(r"^.*dkim=(\w+)", auth_results, re.DOTALL).group(1)</code></p>
</div>
<span class="comment-copy">is that string at the top all one string or a few different ones?</span>
<span class="comment-copy">@HenryWoody, it's one strng</span>
<span class="comment-copy">Thank you, adding the <code>re.DOTALL</code> fixed my issue.</span>
