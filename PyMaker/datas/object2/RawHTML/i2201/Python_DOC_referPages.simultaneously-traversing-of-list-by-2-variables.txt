<div class="post-text" itemprop="text">
<p>I am working on a code in which I am traversing a list, for example:</p>
<pre><code>a = [1,2,3,4,5,6,7,8]
</code></pre>
<p>There are 8 elements(assuming that 'a' will always have even numbers) and I want to access 2 at a time, means the loop will execute 4 times. Every time the variable will increase by 2, like the odd and even numbers</p>
<pre><code>b =1
for i range(len(a)/2):
    print(a[2*b-1],a[2*b])
    b += 1
</code></pre>
<p>the output will be an error because list index starts from 0 and ends on 3 and the list index will be out of range. this will not print 1 and 8 what do I have to do?</p>
</div>
<div class="post-text" itemprop="text">
<p>For the most recent version of your code the minimal fix (most close to the original solution)</p>
<pre><code>b = 0
for i in range(len(a)/2):
    print(a[2*b], a[2*b+1])
    b += 1
</code></pre>
<p>A better solution is</p>
<pre><code>for i in range(len(a)/2):
     print(a[2*i], a[2*i+1])
</code></pre>
<p>To handle even length use range((len(a) + 1) /2)</p>
</div>
<div class="post-text" itemprop="text">
<p>I think changing <code>2*i-1</code> to <code>2*i+1</code>. That's a simple question.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can iterate two-by-two without having to worry about indexing by creating a single iterator with <code>iter</code> and then <code>zip</code> it with itself.</p>
<p>This is similar to the <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer"><code>grouper</code> function from itertools' recipes</a> and has the advantage of being able to treat any iterarable, including non-indexed ones such as generators.</p>
<pre><code>def iter_two_by_two(it):
    it = iter(it)
    yield from zip(it, it)

a = [1, 2, 3, 4, 5, 6, 7, 8]

for pair in iter_two_by_two(a):
    print(pair)
</code></pre>
<h2>Output</h2>
<pre><code>(1, 2)
(3, 4)
(5, 6)
(7, 8)
</code></pre>
</div>
<span class="comment-copy">yes actually the i is wrong there i have to place a different variable can you it now</span>
<span class="comment-copy">the new version makes no sense at all. Well you can add increment of b, b += 1 but it is simpler with i?</span>
<span class="comment-copy">do not forget missing in keyword in the loop, decrement index even one more,print(a[2*b-2],a[2*b - 1])  and make clear in the question what was original question and which result worked for you. That will  looks stupid but will work</span>
<span class="comment-copy">yes, this works correctly, but now what is the use of 'b' here, in the upper solution?</span>
<span class="comment-copy">ok just replace i with b</span>
<span class="comment-copy">then can you please add the solution</span>
