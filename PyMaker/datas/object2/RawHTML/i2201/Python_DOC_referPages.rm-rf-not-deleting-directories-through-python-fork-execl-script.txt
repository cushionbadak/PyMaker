<div class="post-text" itemprop="text">
<p>Hi i am trying to use python's fork and execl to create a new bash process and delete a directory 'temptdir'. </p>
<p>I wrote the following code:</p>
<pre><code>import os

pid = os.fork()
if pid == 0:
    os.execl('/bin/rm', 'rm-rf', 'temptdir') # temptdir is a directory in home folder. 
</code></pre>
<p>I am expecting that it would create a new bash process and run the following command in bash:</p>
<pre><code>rm -rf temptdir
</code></pre>
<p>and delete the temptdir directory but it is showing me :</p>
<pre><code>rm-rf: temptdir: is a directory
</code></pre>
<p><strong>Any idea why it is not deleting the directory? Also how to fix it?</strong></p>
<p>Lastly, on python docs the fortmat of python execl command is given to be:</p>
<pre><code>execl(  path, arg0, arg1, ...)
</code></pre>
<p>but if I run:</p>
<pre><code>os.execl('/bin/echo','hello')
</code></pre>
<p>it doesn't print anything. <strong>Why do I have to add an extra 'echo' argument</strong> like:</p>
<pre><code>os.execl('/bin/echo','echo','hello')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to pass the arguments separately. As <code>-r</code> and <code>f</code> are separate arguments to <code>rm</code>.</p>
<pre><code>import os

pid = os.fork()
if pid == 0:
    os.execl('/bin/rm', 'rm', '-rf', 'temptdir') # temptdir is a directory in home folder.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this: Its always better to check the path where you are doing delete or remove operations..</p>
<pre><code>import shutil
import os
dct = "testrmo"
if os.path.exists(dct):
    os.rmdir(dct)   # &lt;--  if directory is blank
    #shutil.rmtree(dct) # &lt;- - if directory has the contents
else:
    print("Sorry, I can not remove %s Dir." % dct)


shutil.rmtree() deletes a directory and all its contents.
</code></pre>
<p>better use subprocess:</p>
<pre><code>import subprocess
subprocess.call(['rm', '-rf', 'temptdir'])
</code></pre>
<p>Just sideby note of using <code>os</code> module while playing with files and dirs</p>
<pre><code>os.remove() removes a file.

os.rmdir() removes an empty directory.

shutil.rmtree() deletes a directory and all its contents.

pathlib.Path.unlink() removes the file or symbolic link.

pathlib.Path.rmdir() removes the empty directory.
</code></pre>
<p>another way around is if you need to delete it at all like native way:</p>
<pre><code>os.system('rm -rf /your_directory_path/')
</code></pre>
</div>
<span class="comment-copy">try with subprocess</span>
<span class="comment-copy">why not use <a href="https://docs.python.org/3/library/shutil.html?highlight=rmtree#shutil.rmtree" rel="nofollow noreferrer"><code>shutil.rmtree</code></a>? or why not start with a <code>tempdir</code> from the beginning (see <a href="https://docs.python.org/3/library/tempfile.html?highlight=tempdir#examples" rel="nofollow noreferrer">last example here</a>)?</span>
<span class="comment-copy">Why would you expect python to create a <code>bash</code> process?  You are trying to call the <code>rm</code> program, not <code>bash</code>.  Actually you are trying to call a program called <code>rm-rf</code>, which (probably) does not exist.</span>
<span class="comment-copy"><i>Why do I have to add an extra 'echo' argument</i> - because python is mirroring the low-level C interface.  A program expects its own name as the first argument, that's in the POSIX standard: <a href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html" rel="nofollow noreferrer">pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html</a></span>
<span class="comment-copy">Note that <code>os.system()</code> invokes a shell to run the command, the others do not.</span>
