<div class="post-text" itemprop="text">
<p><strong>Problem:</strong> I would like to get   </p>
<pre><code>(7,5,3) =&gt; 000001110000010100000011 =&gt; 460035  
  also the converse, i.e.,   
460035 =&gt; 000001110000010100000011 =&gt; (7,5,3)
</code></pre>
<p>Here is the the program I have tried:</p>
<pre><code>L=(7,5,3) # here L may vary each time.
a=0
for i in range(3):
    a=bin(a &lt;&lt; 8) ^ bin(L[i])
print a  
</code></pre>
<p>But It gives error <code>TypeError: unsupported operand type(s) for ^: 'str' and 'str'</code><br/>
How can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no need to reinvent the wheel. If you'd seen the links to docs that I provided in the comments, you could find these useful methods there: <a href="https://docs.python.org/3/library/stdtypes.html?highlight=bitwise#int.from_bytes" rel="nofollow noreferrer"><code>int.from_bytes</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html?highlight=bitwise#int.to_bytes" rel="nofollow noreferrer"><code>int.to_bytes</code></a>. We can use them like this: </p>
<pre><code>input = (7, 5, 3)
result = int.from_bytes(input, byteorder='big')
print(result)
&gt;&gt;&gt; 460035

print(tuple(result.to_bytes(3, byteorder='big')))
&gt;&gt;&gt; (7, 5, 3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should perform bit operations on the numbers rather than the converted strings:</p>
<pre><code>L=(7,5,3)
a=0
for i in L:
    a &lt;&lt;= 8
    a |= i
print(bin(a), a)
</code></pre>
<p>This outputs:</p>
<pre><code>0b1110000010100000011 460035
</code></pre>
<p>Reversal:</p>
<pre><code>a = 460035
L = []
while True:
    L.append(a &amp; 0xff)
    a &gt;&gt;= 8
    if not a:
        break
L = tuple(L[::-1])
print(L)
</code></pre>
<p>This outputs:</p>
<pre><code>(7, 5, 3)
</code></pre>
</div>
<span class="comment-copy">To raise a power in python, you should use <code>**</code> instead of <code>^</code>. Your operands are also of type <code>str</code> (string) on which <code>**</code> won't work</span>
<span class="comment-copy">This is not power, it is bit wise xor operation @Bazingaa</span>
<span class="comment-copy">What is the relation between <code>000001110000010100000011</code> and <code>460035</code> ?</span>
<span class="comment-copy">decimal of 000001110000010100000011 is 460035 @ BlackBeard</span>
<span class="comment-copy">Remove the calls to <code>bin</code> to make direct conversion from tuple to integer and after that convert from integer to binary string.</span>
