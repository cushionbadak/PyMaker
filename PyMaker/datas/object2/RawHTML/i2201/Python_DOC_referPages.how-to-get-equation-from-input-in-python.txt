<div class="post-text" itemprop="text">
<pre><code>def func(x): 
    return x*x*x - x*x + 2

# Prints root of func(x) 
# with error of EPSILON 
def bisection(a,b): 

    if (func(a) * func(b) &gt;= 0): 
        print("You have not assumed right a and b\n") 
        return

    c = a 
    while ((b-a) &gt;= 0.01): 

        # Find middle point 
        c = (a+b)/2

        # Check if middle point is root 
        if (func(c) == 0.0): 
            break

        # Decide the side to repeat the steps 
        if (func(c)*func(a) &lt; 0): 
            b = c 
        else: 
            a = c 

    print("The value of root is : ","%.4f"%c) 
</code></pre>
<p>in the above code, I want to get the equation from user as input, here I use x<em>x</em>x - x*x + 2, but I want to get an equation from user input instead of it and use that on the function func(x) </p>
</div>
<div class="post-text" itemprop="text">
<p>If ths code is for academic purposes and you don't want to involve third party libraries, the <code>eval()</code> function in Python is built just for this. You can create a function which evaluates a string expression <code>expr</code> for a value <code>x</code> as such:</p>
<pre><code>def func(expr, x):
    return eval(expr)

input_expr = input('Enter an expression in x: ')
val = 5
print(func(input_expr, val))
</code></pre>
<blockquote>
<p>Input: x*x*x - x*x + 2</p>
<p>Output: 102</p>
</blockquote>
<p><code>eval()</code> treats the string passed to it as a right hand side expression and evaluates it. So, when the user-input string <code>'x*x*x - x*x + 2'</code> is passed to the function, the statement <code>return eval('x*x*x - x*x + 2')</code> is equivalent to <code>return x*x*x-x*x+2</code>. </p>
<p>Note that this means there must be a variable <code>x</code> in scope, which we handle by wrapping the eval() function in the function <code>eval_expr()</code>. </p>
<p>A problem would arise however, if the user input something like <code>y*y*y+y*y-2</code> as <code>y</code> isn't declared in the scope. If you need to handle such cases, then you would need to write additional code that converts the input string by replacing any alphabetical character in it to <code>x</code>.</p>
<p>It should be noted that <code>eval</code> generally isn't considered safe, and if this code is not for academic purposes and needs to be safe, you should consider using python libraries like <a href="https://pypi.org/project/numexpr/" rel="nofollow noreferrer">numexpr</a> or <a href="https://pypi.org/project/pyparsing/" rel="nofollow noreferrer">pyparsing</a>. numexpr should be fairly easy to use and would suffice for your application.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just add it as an argument:</p>
<pre><code>def bisection(func, a, b): 

    if (func(a) * func(b) &gt;= 0): 
        print("You have not assumed right a and b\n") 
        return

    c = a 
    while ((b-a) &gt;= 0.01): 

        # Find middle point 
        c = (a+b)/2

        # Check if middle point is root 
        if (func(c) == 0.0): 
            break

        # Decide the side to repeat the steps 
        if (func(c)*func(a) &lt; 0): 
            b = c 
        else: 
            a = c 

    print("The value of root is : ","%.4f"%c) 
</code></pre>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a>?</span>
<span class="comment-copy">@FredLarson input ==&gt; import os; os.system("rm -rf /*")</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/43695459/getting-mathematical-function-as-users-input">Getting mathematical function as user's input</a></span>
<span class="comment-copy">The important part of the question is ' I want to get the equation from user as input', you didn't answer that.</span>
<span class="comment-copy">Based on the simplicity of the code and question, I think OP's is just confused in that functions can be arguments.</span>
