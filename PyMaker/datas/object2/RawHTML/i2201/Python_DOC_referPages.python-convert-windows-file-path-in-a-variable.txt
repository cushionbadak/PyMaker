<div class="post-text" itemprop="text">
<p>Given is a variable that contains a windows file path. I have to then go and read this file. The problem here is that the path contains escape characters, and I can't seem to get rid of it. I checked os.path and pathlib, but all expect the correct text formatting already, which I can't seem to construct.</p>
<p>For example this. Please note that fPath is given, so I cant prefix it with <em>r</em> for a rawpath.</p>
<pre><code>#this is given, I cant rawpath it with r 
fPath = "P:\python\t\temp.txt"

file = open(fPath, "r")
for line in file:
    print (line)
</code></pre>
<p>How can I turn fPath via some function or method from:</p>
<pre><code>"P:\python\t\temp.txt"
</code></pre>
<p>to</p>
<pre><code>"P:/python/t/temp.txt"
</code></pre>
<p>I've tried also tried .replace("\","/"), which doesnt work.</p>
<p>I'm using Python 3.7 for this.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you would like to do replace then do</p>
<p><code>replace("\\","/")</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>os.path.abspath()</code> to convert it:</p>
<pre><code>print(os.path.abspath("P:\python\t\temp.txt""))

&gt;&gt;&gt; P:/python/t/temp.txt
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use Path function from <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">pathlib</a> library. </p>
<pre><code>from pathlib import Path

docs_folder = Path("some_folder/some_folder/")
text_file = docs_folder / "some_file.txt"
f = open(text_file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I've solved it.</p>
<p>The issues lies with the python interpreter. \t and all the others don't exist as such data, but are interpretations of nonprint characters.</p>
<p>So I got a bit lucky and someone else already faced the same problem and solved it with a hard brute-force method:</p>
<p><a href="http://code.activestate.com/recipes/65211/" rel="nofollow noreferrer">http://code.activestate.com/recipes/65211/</a></p>
<p>I just had to find it.</p>
<p>After that I have a raw string without escaped characters, and just need to run the simple replace() on it to get a workable path.</p>
</div>
<span class="comment-copy">"P:\python\t\temp.txt".replace("\\", "/") works fine for me!</span>
<span class="comment-copy">I used replace("\\\","/"). It even is escaped when writing here.</span>
<span class="comment-copy">@Fourier, for me it doesn't. This is what I get: <code>OSError: [Errno 22] Invalid argument: 'P:/python\t\temp.txt'</code></span>
<span class="comment-copy">could you paste the path from properties of the temp.txt</span>
<span class="comment-copy">@AlbinPaul If I understood what you are asking: The properties window for the file lists this <code>Location: P:\python\t</code></span>
<span class="comment-copy">I came to write this.</span>
<span class="comment-copy">I tried that, but Stackoverflow decided to escape the first backslash.</span>
<span class="comment-copy">@RedBoxes - try to cast it to string first str(fPath).replace("\\","/")</span>
<span class="comment-copy"><code>OSError: [Errno 22] Invalid argument: 'P:\\python\t\temp.txt'</code>  No luck. This is the error I get. :/</span>
<span class="comment-copy">Ah, where does the string come from?</span>
<span class="comment-copy">From a different .txt containing windows filepaths. It functions as a job list that I work through. For the problem at hand here, this file is uneditable and cannot be altered. I recieve windows style file paths and have to deal with it. Modifiyng the source is not possible.</span>
<span class="comment-copy">This requires the path of the correct format already.  I tried this: <code>docs_folder = Path("P:\python\t\temp.txt") f = open(docs_folder) for line in f: 	print (line)</code>  And got this:  <code>OSError: [Errno 22] Invalid argument: 'P:\\python\t\temp.txt'</code></span>
<span class="comment-copy">Use Path(r'P:\python\t\temp.txt') instead it.</span>
<span class="comment-copy">I specifically mentioned this case in the original question. I have no control over the path origin. I am given a variable with a windows style path. Nothing I can change about that. The source data has to be in this style of format.</span>
<span class="comment-copy">See the PureWindowsPath function: <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PureWindowsPath" rel="nofollow noreferrer">docs.python.org/3/library/pathlib.html#pathlib.PureWindowsPath</a></span>
<span class="comment-copy">None of these work with windows paths. They all expect fwd-slashes as input.</span>
