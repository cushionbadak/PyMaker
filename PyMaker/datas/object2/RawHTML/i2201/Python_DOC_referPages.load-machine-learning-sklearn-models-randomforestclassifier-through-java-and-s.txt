<div class="post-text" itemprop="text">
<p>I have a ML model which is trained as saved as pickle file, Randomforestclassifier.pkl. I want to load this one time using java and then execute my "prediction" part code which is written python. So my workflow is like:</p>
<ol>
<li>Read Randomforestclassifier.pkl file (one time)</li>
<li>Send this model as input to function defined in "python_file.py" which is executed from java for each request</li>
<li>python_file.py has prediction code and predictions returned should be captured by java code</li>
</ol>
<p>Please provide suggestions for this workflow requirement
I have used processbuilder in java to execute python_file.py and everything works fine except for model loading as one time activity</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://github.com/ninia/jep/wiki/Getting-Started" rel="nofollow noreferrer">Jep</a>. </p>
<p>I actually never tested the pickle module in Jep, but for your case it would be something like this:</p>
<pre><code>try(Jep jep = new Jep()) {
    // Load model
    jep.eval("import pickle");
    jep.eval("with open('Randomforestclassifier.pkl', 'rb'): as f: clf = pickle.load(f)");
    Object randomForest = jep.getValue("clf");

    ...

    // Then in another context you can pass your model to your function
    jep.eval("import predictionModule");
    jep.set("arg", randomForest);
    jep.eval("result = predictionModule.use(arg)");
    Object result = jep.getValue("result");
}
</code></pre>
<p>Assuming you have a module named <code>predictionModule.py</code> which should be something like this:</p>
<pre><code>import pickle

def use(model_as_bytes):
    model = pickle.loads(model_as_bytes)
    print(model)
    # do other stuff
    ...
    return prediction
</code></pre>
<p>Hope this helps.</p>
</div>
<span class="comment-copy">Use a python service something like flask, which can load the model at a single time independently from java and accepts inputs as requests. Or you can also look at the sklearn-pmml to convert pickle file into pmml files and directly load them as java objects.</span>
<span class="comment-copy">Can't you do the model loading using python? I understand that you explicitly asked for solutions using this workflow but I think this is the best way to solve the problem. If Randomforestclassifier.pkl is a remote file or something, download it using java, save it locally and provide the path of the file as an argument for python_file.py.</span>
<span class="comment-copy">My python-file.py should run once for each request but model loading takes time and I donâ€™t want that to happen for each request and so I want to load model.pkl from java and send loaded model as argument to python-file.py.... I have tried using flask but my requirement is based on using queues so restful api is not suitable for my existing architecture. Is there any way like python client server type of programs where models can be loaded only once and predictions can be done using those models for each request ? Thanks for your time...</span>
<span class="comment-copy">I forgot to mention one more requirement to my problem. I need to send "test data" from java to python. But process builder doesn't accept anything but strings. Is there any way out sending "test data" is some format that can be read by python script and can be converted to data frame? Thanks in advance.</span>
<span class="comment-copy">Can we use python client server type program for this requirement? Load model one time in server program and predict with client program? I don't want to use any APIs as we want to use some existing architecture and use java to call some python script to get this done.</span>
<span class="comment-copy">Thanks @btt, I installed jep with great difficulty and am able to load pickle file ... first 3 lines of code working fine... can you please let me know how exactly to execute the prediction.py by sending randomForest as argument... Do we have to give any path for predictionModule.py for "import predictionModule" to work...</span>
<span class="comment-copy">jep.eval("import predictionModule");------ This line is throwing error as predictionModule not found. How to resolve this error. Kindly help. Thanks.</span>
<span class="comment-copy">This doesn't work ....randomForest  is returned as string to python but not as ML model... randomForest.predict() is not working....</span>
<span class="comment-copy">This is normal. Actually randomForest should be passed as <code>bytes</code>, but string should be fine too. What you should do, is once you have <code>arg</code> in the python side, you do this: <code>arg = pickle.loads(arg)</code> ref: <a href="https://docs.python.org/3/library/pickle.html#pickle.loads" rel="nofollow noreferrer">docs.python.org/3/library/pickle.html#pickle.loads</a>  The reason for that is that <code>jep.set</code> supports only standard types: <a href="http://ninia.github.io/jep/javadoc/3.7/" rel="nofollow noreferrer">ninia.github.io/jep/javadoc/3.7</a> So everything else is passed as bytes, or as a string like in your case.</span>
<span class="comment-copy">I added an example of what <code>predictionModule.py</code> should look like. Note that all this is pseudocode that I didn't test. So please don't hesitate to edit my answer.</span>
