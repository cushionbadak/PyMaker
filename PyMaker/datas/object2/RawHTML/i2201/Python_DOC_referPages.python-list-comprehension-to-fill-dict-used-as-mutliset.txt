<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/46304423/create-dictionary-comprehension-from-list-with-condition-syntax">Create dictionary comprehension from list with condition syntax</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I need to create a multiset tracking the frequencies of characters appearing in a given string. I wanted to implement this using dict comprehensions, but what I tried:</p>
<pre><code>mySet = {letter : mySet.get(letter, 0) + 1 for letter in myStr}
</code></pre>
<p>Did not seem to work... as <code>mySet.get(letter, 0)</code> always seems to return 0. Is there another way to accomplish this simple task without resorting to loops?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try Counter</p>
<pre><code>from collections import Counter

Counter('Hello World')
</code></pre>
<p>This returns</p>
<pre><code>Counter({' ': 1, 'H': 1, 'W': 1, 'd': 1, 'e': 1, 'l': 3, 'o': 2, 'r': 1})
</code></pre>
</div>
<span class="comment-copy"><code>mySet</code> is not set until <b>after</b> the dictionary comprehension completes. You can't reference the dictionary-being-built from inside the dictionary comprehension.</span>
<span class="comment-copy">There is a standard type for this in the Python standard library: <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter()</code></a>: * The <code>Counter</code> class is similar to bags or multisets in other languages.*, so use <code>mySet = Counter(myStr)</code>.</span>
<span class="comment-copy">This was exactly what I was looking for. Thanks.</span>
