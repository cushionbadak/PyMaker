<div class="post-text" itemprop="text">
<p>I have a Python program that runs facial recognition service. The program comes with a Tornado server that serves a UI so I can see the recognition result. I have a few IP cameras and I want each of these cameras to have separate recognition service.  </p>
<p>What I did right now is:  </p>
<pre><code>import subprocess
import user_config

port = 9000
for cam in user_config.CAMERA_ID:
    command = "python recognition.py -camid "+cam+" -port "+str(port)
    p = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)
    port = port+1
</code></pre>
<p>Is this a good way to do this? If let say one of the processes died, how do I check and bring it back up?</p>
</div>
<div class="post-text" itemprop="text">
<p>You have two options:</p>
<ul>
<li><code>multiprocessing</code></li>
</ul>
<p>run a function in an other process, you can give args through <code>args</code> and <code>kwargs</code>.
you can use shared <code>Variable</code> and <code>Array</code> with this strategy</p>
<ul>
<li><code>subprocess</code></li>
</ul>
<p>run an other script with the command line, you can pass args in the string and get them back through <code>sys.argv</code></p>
</div>
<span class="comment-copy">Not too surprisingly, using the <a href="https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing" rel="nofollow noreferrer">multiprocessing</a> module would be good approach.</span>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.poll" rel="nofollow noreferrer"><code>Popen.poll()</code></a> to check if a subprocess is still running and, if not, respawn it. But given that you're running a Python process, why not just import the file and run it directly via <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer"><code>multiprocessing</code></a>, or even <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer"><code>threading</code></a> if its main function is I/O bound.</span>
