<div class="post-text" itemprop="text">
<p>When I run docker-compose, it just hangs.  The first line of my code is a print statement and I'm not seeing any output.
docker-compose</p>
<pre><code>version: "3"
services:
  grip-sim-results-parser:
    container_name: grip-sim-results-parser
    build: .
    ports:
      - "5000:5000"
</code></pre>
<p>Dockerfile</p>
<pre><code>FROM library/python:3.7-stretch
RUN apt-get update
RUN apt-get install -y vim
ADD . /code
WORKDIR /code
COPY requirements.txt /
RUN pip3 install --trusted-host pypi.org -r /requirements.txt

CMD ["python3", "app.py"]
</code></pre>
<p>docker-compose version</p>
<pre><code>user@ubuntu:~/projects/grip/grip-sim-results-parser$ docker-compose --version
docker-compose version 1.22.0, build f46880fe
</code></pre>
<p>Docker version</p>
<pre><code>user@ubuntu:~/projects/grip/grip-sim-results-parser$ docker --version
Docker version 18.06.1-ce, build e68fc7a
</code></pre>
<p>Linux version</p>
<pre><code>user@ubuntu:~/projects/grip/grip-sim-results-parser$ uname -a
Linux ubuntu 4.13.0-46-generic #51-Ubuntu SMP Tue Jun 12 12:36:29 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
</code></pre>
<p>app.py</p>
<pre><code>....
def main():
    print('main')
</code></pre>
<p>docker-compose output</p>
<pre><code>user@ubuntu:~/projects/grip/grip-sim-results-parser$ docker-compose --verbose up --build
compose.config.config.find: Using configuration files: ./docker-compose.yml
docker.utils.config.find_config_file: Trying paths: ['/home/user/.docker/config.json', '/home/user/.dockercfg']
docker.utils.config.find_config_file: Found file at path: /home/user/.docker/config.json
docker.auth.load_config: Found 'auths' section
docker.auth.parse_auth: Found entry (registry='https://index.docker.io/v1/', username='jcald1')
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/version HTTP/1.1" 200 543
compose.cli.command.get_client: docker-compose version 1.22.0, build f46880fe
docker-py version: 3.4.1
CPython version: 3.6.6
OpenSSL version: OpenSSL 1.1.0f  25 May 2017
compose.cli.command.get_client: Docker base_url: http+docker://localhost
compose.cli.command.get_client: Docker version: Platform={'Name': ''}, Components=[{'Name': 'Engine', 'Version': '18.06.1-ce', 'Details': {'ApiVersion': '1.38', 'Arch': 'amd64', 'BuildTime': '2018-08-21T17:23:27.000000000+00:00', 'Experimental': 'false', 'GitCommit': 'e68fc7a', 'GoVersion': 'go1.10.3', 'KernelVersion': '4.13.0-46-generic', 'MinAPIVersion': '1.12', 'Os': 'linux'}}], Version=18.06.1-ce, ApiVersion=1.38, MinAPIVersion=1.12, GitCommit=e68fc7a, GoVersion=go1.10.3, Os=linux, Arch=amd64, KernelVersion=4.13.0-46-generic, BuildTime=2018-08-21T17:23:27.000000000+00:00
compose.cli.verbose_proxy.proxy_callable: docker inspect_network &lt;- ('gripsimresultsparser_default')
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/networks/gripsimresultsparser_default HTTP/1.1" 404 61
compose.cli.verbose_proxy.proxy_callable: docker info &lt;- ()
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/info HTTP/1.1" 200 None
compose.cli.verbose_proxy.proxy_callable: docker info -&gt; {'Architecture': 'x86_64',
 'BridgeNfIp6tables': True,
 'BridgeNfIptables': True,
 'CPUSet': True,
 'CPUShares': True,
 'CgroupDriver': 'cgroupfs',
 'ClusterAdvertise': '',
 'ClusterStore': '',
 'ContainerdCommit': {'Expected': '468a545b9edcd5932818eb9de8e72413e616e86e',
                      'ID': '468a545b9edcd5932818eb9de8e72413e616e86e'},
...
compose.cli.verbose_proxy.proxy_callable: docker inspect_network &lt;- ('grip-sim-results-parser_default')
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/networks/grip-sim-results-parser_default HTTP/1.1" 200 590
compose.cli.verbose_proxy.proxy_callable: docker inspect_network -&gt; {'Attachable': True,
 'ConfigFrom': {'Network': ''},
 'ConfigOnly': False,
 'Containers': {},
 'Created': '2018-10-02T22:17:49.401421224-04:00',
 'Driver': 'bridge',
 'EnableIPv6': False,
 'IPAM': {'Config': [{'Gateway': '172.27.0.1', 'Subnet': '172.27.0.0/16'}],
          'Driver': 'default',
          'Options': None},
...
compose.cli.verbose_proxy.proxy_callable: docker containers &lt;- (all=False, filters={'label': ['com.docker.compose.project=grip-sim-results-parser', 'com.docker.compose.oneoff=False']})
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/containers/json?limit=-1&amp;all=0&amp;size=0&amp;trunc_cmd=0&amp;filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dgrip-sim-results-parser%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1" 200 3
compose.cli.verbose_proxy.proxy_callable: docker containers -&gt; (list with 0 items)
compose.cli.verbose_proxy.proxy_callable: docker containers &lt;- (all=False, filters={'label': ['com.docker.compose.project=gripsimresultsparser', 'com.docker.compose.oneoff=False']})
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/containers/json?limit=-1&amp;all=0&amp;size=0&amp;trunc_cmd=0&amp;filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dgripsimresultsparser%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1" 200 3
compose.cli.verbose_proxy.proxy_callable: docker containers -&gt; (list with 0 items)
compose.cli.verbose_proxy.proxy_callable: docker containers &lt;- (all=True, filters={'label': ['com.docker.compose.project=grip-sim-results-parser', 'com.docker.compose.service=grip-sim-results-parser', 'com.docker.compose.oneoff=False']})
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/containers/json?limit=-1&amp;all=1&amp;size=0&amp;trunc_cmd=0&amp;filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dgrip-sim-results-parser%22%2C+%22com.docker.compose.service%3Dgrip-sim-results-parser%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1" 200 1133
compose.cli.verbose_proxy.proxy_callable: docker containers -&gt; (list with 1 items)
compose.cli.verbose_proxy.proxy_callable: docker inspect_container &lt;- ('1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68')
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/containers/1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68/json HTTP/1.1" 200 None
compose.cli.verbose_proxy.proxy_callable: docker inspect_container -&gt; {'AppArmorProfile': 'docker-default',
 'Args': ['app.py'],
 'Config': {'ArgsEscaped': True,
            'AttachStderr': False,
            'AttachStdin': False,
            'AttachStdout': False,
            'Cmd': ['python3', 'app.py'],
            'Domainname': '',
            'Entrypoint': None,
            'Env': ['PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin',
...
compose.service.build: Building grip-sim-results-parser
compose.cli.verbose_proxy.proxy_callable: docker build &lt;- (path='/home/user/grip-sim-results-parser', tag='grip-sim-results-parser_grip-sim-results-parser', rm=True, forcerm=False, pull=False, nocache=False, dockerfile=None, cache_from=None, labels=None, buildargs={}, network_mode=None, target=None, shmsize=None, extra_hosts=None, container_limits={'memory': None}, gzip=False, isolation=None, platform=None)
docker.api.build._set_auth_headers: Looking for auth config
docker.api.build._set_auth_headers: Sending auth config ('https://index.docker.io/v1/')
urllib3.connectionpool._make_request: http://localhost:None "POST /v1.25/build?t=grip-sim-results-parser_grip-sim-results-parser&amp;q=False&amp;nocache=False&amp;rm=True&amp;forcerm=False&amp;pull=False HTTP/1.1" 200 None
compose.cli.verbose_proxy.proxy_callable: docker build -&gt; &lt;generator object APIClient._stream_helper at 0x7f5717d10a98&gt;
Step 1/8 : FROM library/python:3.7-stretch
 ---&gt; a9d071760c82
Step 2/8 : RUN apt-get update
 ---&gt; Using cache
 ---&gt; 75cc76eecf8a
Step 3/8 : RUN apt-get install -y vim
 ---&gt; Using cache
 ---&gt; af651ad63dda
Step 4/8 : ADD . /code
 ---&gt; Using cache
 ---&gt; 5ae41ae91671
Step 5/8 : WORKDIR /code
 ---&gt; Using cache
 ---&gt; a709b10facf8
Step 6/8 : COPY requirements.txt /
 ---&gt; Using cache
 ---&gt; 3d1a13239b96
Step 7/8 : RUN pip3 install --trusted-host pypi.org -r /requirements.txt
 ---&gt; Using cache
 ---&gt; 7e6d00d828ae
Step 8/8 : CMD ["python3", "app.py"]
 ---&gt; Using cache
 ---&gt; 1a2bdd386cd1
Successfully built 1a2bdd386cd1
Successfully tagged grip-sim-results-parser_grip-sim-results-parser:latest
compose.cli.verbose_proxy.proxy_callable: docker close &lt;- ()
compose.cli.verbose_proxy.proxy_callable: docker close -&gt; None
compose.cli.verbose_proxy.proxy_callable: docker containers &lt;- (all=True, filters={'label': ['com.docker.compose.project=grip-sim-results-parser', 'com.docker.compose.service=grip-sim-results-parser', 'com.docker.compose.oneoff=False']})
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/containers/json?limit=-1&amp;all=1&amp;size=0&amp;trunc_cmd=0&amp;filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dgrip-sim-results-parser%22%2C+%22com.docker.compose.service%3Dgrip-sim-results-parser%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1" 200 1133
compose.cli.verbose_proxy.proxy_callable: docker containers -&gt; (list with 1 items)
compose.cli.verbose_proxy.proxy_callable: docker inspect_image &lt;- ('grip-sim-results-parser_grip-sim-results-parser')
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/images/grip-sim-results-parser_grip-sim-results-parser/json HTTP/1.1" 200 None
compose.cli.verbose_proxy.proxy_callable: docker inspect_image -&gt; {'Architecture': 'amd64',
 'Author': '',
 'Comment': '',
 'Config': {'ArgsEscaped': True,
            'AttachStderr': False,
            'AttachStdin': False,
            'AttachStdout': False,
            'Cmd': ['python3', 'app.py'],
            'Domainname': '',
            'Entrypoint': None,
...
compose.cli.verbose_proxy.proxy_callable: docker inspect_container &lt;- ('1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68')
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/containers/1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68/json HTTP/1.1" 200 None
compose.cli.verbose_proxy.proxy_callable: docker inspect_container -&gt; {'AppArmorProfile': 'docker-default',
 'Args': ['app.py'],
 'Config': {'ArgsEscaped': True,
            'AttachStderr': False,
            'AttachStdin': False,
            'AttachStdout': False,
            'Cmd': ['python3', 'app.py'],
            'Domainname': '',
            'Entrypoint': None,
            'Env': ['PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin',
...
compose.parallel.feed_queue: Pending: {&lt;Service: grip-sim-results-parser&gt;}
compose.parallel.feed_queue: Starting producer thread for &lt;Service: grip-sim-results-parser&gt;
Starting grip-sim-results-parser ... 
compose.parallel.feed_queue: Pending: {&lt;Container: grip-sim-results-parser (1f8f0b)&gt;}
compose.parallel.feed_queue: Starting producer thread for &lt;Container: grip-sim-results-parser (1f8f0b)&gt;
compose.cli.verbose_proxy.proxy_callable: docker attach &lt;- ('1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68', stdout=True, stderr=True, stream=True)
urllib3.connectionpool._make_request: http://localhost:None "POST /v1.25/containers/1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68/attach?logs=0&amp;stdout=1&amp;stderr=1&amp;stream=1 HTTP/1.1" 101 0
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/containers/1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68/json HTTP/1.1" 200 None
compose.cli.verbose_proxy.proxy_callable: docker attach -&gt; &lt;docker.types.daemon.CancellableStream object at 0x7f5717d32908&gt;
compose.cli.verbose_proxy.proxy_callable: docker start &lt;- ('1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68')
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
compose.parallel.feed_queue: Pending: set()
urllib3.connectionpool._make_request: http://localhost:None "POST /v1.25/containers/1f8f0b4c36a90c4771e7a2373986dcaed61dbfd140c66b5840bf310edd0c0e68/start HTTP/1.1" 204 0
compose.cli.verbose_proxy.proxy_callable: docker start -&gt; None
Starting grip-sim-results-parser ... done
compose.parallel.feed_queue: Pending: set()
compose.parallel.parallel_execute_iter: Finished processing: &lt;Service: grip-sim-results-parser&gt;
compose.parallel.feed_queue: Pending: set()
Attaching to grip-sim-results-parser
compose.cli.verbose_proxy.proxy_callable: docker events &lt;- (filters={'label': ['com.docker.compose.project=grip-sim-results-parser', 'com.docker.compose.oneoff=False']}, decode=True)
urllib3.connectionpool._make_request: http://localhost:None "GET /v1.25/events?filters=%7B%22label%22%3A+%5B%22com.docker.compose.project%3Dgrip-sim-results-parser%22%2C+%22com.docker.compose.oneoff%3DFalse%22%5D%7D HTTP/1.1" 200 None
compose.cli.verbose_proxy.proxy_callable: docker events -&gt; &lt;docker.types.daemon.CancellableStream object at 0x7f5717ce9cc0&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To see output from python, try adding following lines to <code>docker-compose.yml</code>: </p>
<pre><code>grip-sim-results-parser:
  environment:
    - PYTHONUNBUFFERED=1
</code></pre>
</div>
<span class="comment-copy">Thanks.  The underlying error went away on its own, but this is good to know.</span>
<span class="comment-copy">I was having a similar issue, in my version, <code>while True: print('main')</code> worked just fine but if I added <code>time.sleep(...)</code> after the <code>print</code> statement then nothing would be printed out. Adding <code>PYTHONUNBUFFERED=1</code> to the environment solved the issue, however, it would be great to know the reason behind it.</span>
<span class="comment-copy">Python buffers stdout by default which keeps the output from being printed. This is why if you restart the container you might see all the output show up at once. <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-u" rel="nofollow noreferrer">docs.python.org/3/using/cmdline.html#cmdoption-u</a></span>
