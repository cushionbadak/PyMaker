<div class="post-text" itemprop="text">
<p>How can I change a class object with some rules when it assigned?
for example:</p>
<pre><code>class Foo:
    x=0
    if x &lt; 0:
        x = -1
    else:
        x = 1


p = Foo()
p.x = 1234
print(p.X)
</code></pre>
<p>So when I print p.x I expect 1 to be printed. but 1234 is printed. What should I do?</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to make <code>x</code> a <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer"><code>property</code></a>, with a setter function:</p>
<pre><code>class Foo:
    def __init__(self):
        self.x = 1

    @property
    def x(self):
        return self._x

    @x.setter
    def x(self, value):
        if value &lt; 0:
            value = -1
        else:
            value = 1

        self._x = value
</code></pre>
<p>This makes it so the function decorated with <code>@x.setter</code> is executed whenever an assignment to the <code>x</code> attribute is performed:</p>
<pre><code>&gt;&gt;&gt; foo = Foo()
&gt;&gt;&gt; foo.x = 1234
&gt;&gt;&gt; foo.x
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The first <code>x = 0</code> you declare is a <em>class attribute</em>. It is the same for all objects of the class.</p>
<p>When you write <code>p.x</code>, you create an <em>instance attribute</em>, a value of <code>x</code> that belongs to that specific object. That hides the <code>Foo.x</code> in that particular object (that's how the python attribute lookup works). </p>
<p>However, that value remains the default for other objects of the class, eg, if you create a new object</p>
<pre><code>foo2 = Foo()
print(f2.x) # prints 1
</code></pre>
</div>
<span class="comment-copy">Welcome to stackoverflow!! this might helpes you <a href="https://stackoverflow.com/questions/2627002/whats-the-pythonic-way-to-use-getters-and-setters" title="whats the pythonic way to use getters and setters">stackoverflow.com/questions/2627002/â€¦</a></span>
<span class="comment-copy">Use <code>self.x</code> instead of <code>x</code></span>
<span class="comment-copy">Do you want to set the class property <code>Foo.x</code>  or the object property <code>p.x</code>?</span>
<span class="comment-copy">I got it. Thanks :)</span>
<span class="comment-copy">You should initialize <code>self.x</code> in <code>Foo.__init__</code> else trying to read <code>x</code> before setting it will raise an attribute error.</span>
