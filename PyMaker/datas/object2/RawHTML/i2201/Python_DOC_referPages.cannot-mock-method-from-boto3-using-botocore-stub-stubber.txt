<div class="post-text" itemprop="text">
<p>In my <code>podcasts.py</code> I have at first lines:</p>
<pre><code>kms = boto3.client('kms')
access_key = kms.decrypt(
    CiphertextBlob=base64.b64decode(os.environ['access_key'])
)['Plaintext'].decode()
</code></pre>
<p>According to the <a href="https://botocore.amazonaws.com/v1/documentation/api/latest/reference/stubber.html" rel="nofollow noreferrer">docs</a>, I tried to stub it in my <code>podcasts_test.py</code>:</p>
<pre><code>import base64
import os

from botocore.stub import Stubber

os.environ['access_key'] = base64.b64encode('my_test_access_key'.encode()).decode()
client = boto3.client('kms')
stubber = Stubber(client)
stubber.add_response('decrypt', {'Plaintext': b'my_test_key'})
stubber.activate()

import podcasts_build
</code></pre>
<p>But I get:</p>
<pre><code>Traceback (most recent call last):
  File "podcasts_build_test.py", line 14, in &lt;module&gt;
    import podcasts_build
  File "/Users/vitaly/intelligent-speaker/backend/lambdas/podcasts_build/podcasts_build.py", line 23, in &lt;module&gt;
    CiphertextBlob=base64.b64decode(os.environ['access_key'])
  File "/usr/local/lib/python3.7/site-packages/botocore/client.py", line 320, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/usr/local/lib/python3.7/site-packages/botocore/client.py", line 623, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.errorfactory.InvalidCiphertextException: An error occurred (InvalidCiphertextException) when calling the Decrypt operation:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like the cause of this is that the client is being re-defined after the Stubber is applied, and it's trying to hit the API for real.</p>
<p>This is a minimal example based on your question, so to get it working with your code you'll likely have to apply this principle more generally while refactoring. I would additionally consider using the <a href="https://docs.python.org/3/library/unittest.html" rel="nofollow noreferrer">unittest framework</a>.</p>
<p>First, make it possible to pass a client instance into the code you're testing.</p>
<p>podcasts.py:</p>
<pre><code>def decrypt_kms(kms_client):
    access_key = kms_client.decrypt(
        CiphertextBlob=base64.b64decode(os.environ['access_key'])
    )['Plaintext'].decode()
    return access_key
</code></pre>
<p>Then in your tests, create the stubbed client and pass it into the code to test</p>
<p>tests.py:</p>
<pre><code>from botocore.stub import Stubber
from podcasts import decrypt_kms

kms_decrypt_response = {'Plaintext': 'my_test_key'}
stubbed_client = boto3.client('kms')
stubber = Stubber(stubbed_client)
stubber.add_response('decrypt', kms_decrypt_response)
stubber.activate()
result = decrypt_kms(kms_client=stubbed_client)
</code></pre>
</div>
<span class="comment-copy">My mocked response was returned, but after that the same exception. Tried to <code>print()</code> response in my prod code that I want to test - no response.</span>
<span class="comment-copy">Try re-writing your production code as a method that accepts a client instance. I'll update my answer.</span>
