<div class="post-text" itemprop="text">
<p>I want to download data from <strong>python application/command</strong> (for eg: youtube-dl or any other <strong>library that download from 3rd party url</strong>) directly to <strong>google cloud storage(Bucket)</strong>.</p>
<p>I have used <strong>gsutil</strong> stream command to stream data directly from process to gcs, but it saves only <strong>console output</strong> to bucket</p>
<p>Also i don't want to mount storage because i want to share that storage with distributed system</p>
<p>Is there any way in which i can download it without downloading on file system first and then copying it to google cloud storage ?</p>
<p>Thanks,</p>
</div>
<div class="post-text" itemprop="text">
<p>The situation you are describing doesn't seem possible: looking at the documentation and source code for the <a href="https://googleapis.github.io/google-cloud-python/latest/storage/blobs.html#google.cloud.storage.blob.Blob.upload_from_file" rel="nofollow noreferrer">Cloud Storage library</a> in Python only leave you 3 options: upload from file (already in your disk), upload providing a filename (a path to a file already in your disk) and upload from string (upload a text as a .txt file). </p>
<p>You will need to download the file from whichever program you mention (as mentioned in the comments, you can download it to a temporal folder), upload the file to GCS and then delete it from your temporal folder. </p>
</div>
<div class="post-text" itemprop="text">
<p>From what I understand, you are in search for another technique aside from <strong>gsutil stream</strong> to store into your bucket directly. Considering that you have a command application of Python already. You have a couple of options to achieve your goal:</p>
<p><strong>Option 1</strong>: Store your data into a python variable then push it into your bucket with the help of  <a href="https://cloud.google.com/storage/docs/boto-plugin#uploading-objects" rel="nofollow noreferrer">boto client library plugin</a> (which uses Python: 2.6.x and 2.7.x )</p>
<p>The Google documentation <a href="https://cloud.google.com/storage/docs/streaming#streaming_uploads_and_downloads_using_python_and_the_boto_plugin" rel="nofollow noreferrer">here</a> outlines the idea of how to utilize boto within Python ( plus usage examples ). </p>
<p>However, here is copy/paste version of that link with a brief description provided.</p>
<p><strong>upload:</strong></p>
<p>dst_uri = boto.storage_uri( + '/' + , 'gs')
dst_uri.new_key().set_contents_from_stream()</p>
<p><strong>download:</strong></p>
<p>import sys
src_uri = boto.storage_uri( + '/' + , 'gs')
src_uri.get_key().get_file(sys.stdout)</p>
<p>Where:
<em>bucket</em> is your app bucket name that you have set up and <em>object</em> being the object you wish to store ( you can find the information for your bucket-name in your GCP console). Also, the great thing about GCS buckets is that you can literally store anything you want into it (i.e: no need to specify what you are storing or encode anything before storing ).</p>
<p><strong>Option 2</strong>: Store your data using <a href="https://cloud.google.com/storage/docs/reference/libraries#client-libraries-install-python" rel="nofollow noreferrer">Google Cloud Storage Client Libraries</a>. To be more precise, the functionality that you are looking for in your situation is <a href="https://cloud.google.com/storage/docs/uploading-objects#storage-upload-object-code_sample" rel="nofollow noreferrer">uploading objects</a> with the help of <a href="https://googleapis.github.io/google-cloud-python/latest/storage/blobs.html#google.cloud.storage.blob.Blob.upload_from_string" rel="nofollow noreferrer">blob</a>. ( you can store any form of data inside a blob as well )</p>
<p>Since you do <strong>not</strong> want to save locally and store <strong>directly</strong> into your bucket. It would be my recommendation to use the following method:</p>
<p>upload_from_string(data, content_type='text/plain', client=None, redefined_acl=None)</p>
<p><em>(Google definition: Upload contents of this blob from the provided string)</em></p>
<p>The important thing to note in this method is that you can set which type of <strong>data</strong> you want to store. Depending on what you are trying to store ( libraries that download from 3rd party urlâ€™s ) you can choose between <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">str</a> or <a href="https://docs.python.org/3/library/stdtypes.html#bytes" rel="nofollow noreferrer">bytes</a>. However, it would be my recommendation to try bytes first as it allows ASCII characters.</p>
</div>
<span class="comment-copy">You can certainly use a tempfile or a NamedTemporyFile, and upload that file to google cloud storage as if it were a regular file. Then use the api to send the files.</span>
<span class="comment-copy">I was trying to avoid that, but anyway this seems the only viable option, Thanks</span>
<span class="comment-copy">Thanks for pointing out to documentation, seems like uploading from disk is the only viable option</span>
