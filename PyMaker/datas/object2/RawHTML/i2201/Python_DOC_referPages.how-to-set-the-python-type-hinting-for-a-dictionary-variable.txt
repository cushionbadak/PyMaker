<div class="post-text" itemprop="text">
<p>Let say I have a dictionary stored in the variable 'v':</p>
<pre><code>from typing import Dict

v = { 'height': 5, 'width':14, 'depth': 3 }

result = doSomething( v )

def doSomething( value:Dict[???] ):
    #do stuff
</code></pre>
<p>How do I declare the dictionary type in 'doSomething'?
Any ideas anyone? Your help is much appreciated :)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>Dict</code> takes two "arguments", the type of its keys and the type of its values. For a <code>dict</code> that maps strings to integers, use</p>
<pre><code>def doSomething(value: Dict[str, int]):
</code></pre>
<p>The <a href="https://docs.python.org/3/library/typing.html#typing.Dict" rel="nofollow noreferrer">documentation</a> could probably be a little more explicit, though.</p>
</div>
<span class="comment-copy">IIUC, see <a href="https://mypy.readthedocs.io/en/latest/cheat_sheet_py3.html#built-in-types" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">I believe it's <code>Dict[key_type, value_type]</code>, so in your case <code>Dict[str, int]</code></span>
<span class="comment-copy">Thanks, Chepner, but what would I do if the dictionary also had a key such as 'name': 'Book', i.e. a string key, and string value including the original values?</span>
<span class="comment-copy">Then you would have to use a union type that could cover a string or an int.  <code>Dict[str, Union[str, int]]</code>.</span>
<span class="comment-copy">Oh yeah!.. that works. Thanks :)</span>
