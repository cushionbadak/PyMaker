<div class="post-text" itemprop="text">
<p>I am trying to make a .csv splitter.
I should take x number og lines and make new csv files with that number of lines in them from the original csv file.</p>
<pre><code>import os
import csv

fileDir = ('C:\\somedir\\')
fName = input('Write the file name here, without extention:  ')
lineNo = int(input('Number of lines pr csv file:  '))
fNameF = (fName + '.csv')
filehandler = (fileDir + fNameF)

def split(filehandler, delimiter=',', row_limit=lineNo, 
    output_name_template='fName_%s.csv', output_path=fileDir, keep_headers=True):
    reader = csv.reader(filehandler, delimiter=delimiter)
    current_piece = 1
    current_out_path = os.path.join(
         output_name_template  % current_piece
    )
    current_out_writer = csv.writer(open(current_out_path, 'w'))
    current_limit = row_limit
    if keep_headers:
        headers = reader.next()
        current_out_writer.writerow(headers)
    for i, row in enumerate(reader):
        if i + 1 &gt; current_limit:
            current_piece += 1
            current_limit = row_limit * current_piece
            current_out_path = os.path.join(
               output_name_template  % current_piece
            )
            current_out_writer = csv.writer(open(current_out_path, 'w'))
            if keep_headers:
                current_out_writer.writerow(headers)
        current_out_writer.writerow(row)
</code></pre>
<p>It runs the script, but nothing happens, could someone help me?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you have not called the function <code>split()</code> at all. And you have also passed all the values in function as parameters. Check if you get output with the following code. </p>
<pre><code>import os
import csv

fileDir = ('C:\\somedir\\')
fName = input('Write the file name here, without extention:  ')
lineNo = int(input('Number of lines pr csv file:  '))
fNameF = (fName + '.csv')
filehandler = (fileDir + fNameF)

def split(filehandler, delimiter, row_limit, 
output_name_template, output_path, keep_headers):

    reader = csv.reader(filehandler, delimiter=delimiter)
    current_piece = 1
    current_out_path = os.path.join(
         output_name_template  % current_piece
    )
    current_out_writer = csv.writer(open(current_out_path, 'w'))
    current_limit = row_limit
    if keep_headers:
        headers = reader.next()
        current_out_writer.writerow(headers)
    for i, row in enumerate(reader):
        if i + 1 &gt; current_limit:
            current_piece += 1
            current_limit = row_limit * current_piece
            current_out_path = os.path.join(
               output_name_template  % current_piece
            )
            current_out_writer = csv.writer(open(current_out_path, 'w'))
            if keep_headers:
                current_out_writer.writerow(headers)
        current_out_writer.writerow(row)
split(filehandler,',', lineNo,'fName_%s.csv', fileDir, True)
</code></pre>
</div>
<span class="comment-copy">How do you call <code>split()</code>?</span>
<span class="comment-copy">what is your goal? please provide input and desired output. and please take the <a href="http://stackoverflow.com/tour">tour</a>, read up on <a href="https://stackoverflow.com/help/asking">how to ask a question</a> and provide a <a href="https://stackoverflow.com/help/mcve">minimal, complete and verifiable example</a>.</span>
<span class="comment-copy">You didn't post how you call your <code>split()</code> function. Also, if your CSVs are strictly one row per line (i.e. new-line delimited without the data being capable of containing non-encoded newlines) you're complicating this way, way too much - just read your CSV line by line and use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> to count lines to find out when you need to start writing to a new file. No need for CSV parsing and all that.</span>
<span class="comment-copy">If that's your exact full code, then it's not a surprise if "nothing happens" - you need to call your <code>split()</code> function at some point. Else please post a proper MVCE. Also, as zwer mentions, you definitly don't need a csv parser here.</span>
<span class="comment-copy">As i wrote in the text i have a csv file, with many lines i want to split into multiple files with x (example 100) lines in each.</span>
<span class="comment-copy">You are getting input from the users up top, and that input is stored in a global variable. It can be referenced from anywhere. Alternatively, you can keep all the parameters like how you originally did and pass the values in call like this <code>split(filehandler,',', lineNo,'fName_%s.csv', fileDir, True)</code> instead of assigning them in the function definition.</span>
<span class="comment-copy">Removing those parameters is a bad, bad, bad idea. Now the function relies on the existence of some global values.</span>
<span class="comment-copy">@Matthias Yes, it is a bad idea, I wrote that way because those variables were initialized globally. I have edited my answer. Now those parameters are passed through the function call.</span>
<span class="comment-copy">Changed <code>headers = reader.next()</code> to <code>headers = next(reader)</code> and now it does something, It takes the <code>filepath</code> i have <code>c:\somefilepath\test.csv</code> and devides into <code>row_limit</code> number of text documents, on the same place i have this python script, not where i want it, each line in each document has only 1 letter from the <code>filepath</code> and document name. Why does it do that?</span>
