<div class="post-text" itemprop="text">
<p>I am creating a dice program that must roll the dice a certain amount of times and append those rolls to a list. I am trying to figure out how to add commas in between each item of the list. This is the code that I have so far: </p>
<pre><code>listRolls = []

def listPrint():
    for i, item in enumerate(listRolls):
        if (i+1)%13 == 0:
            print(item)
        else:
            print(item,end=' ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>change </p>
<pre><code>print(item,end=' ') 
</code></pre>
<p>into </p>
<pre><code>print(item,end=',')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>print(', '.join(listRolls))</code></p>
<p>For future reference, it's more "pythonic" (not my word) to use lower case <code>variable_names</code>, meaning your <code>listRolls</code> would then be <code>list_rolls</code>.  Your code will handle it JUST FINE, however!</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to print your whole list in one line, komma seperated simply use</p>
<pre><code>data = [2,3,4,5,6]

print( *data, sep=",")
</code></pre>
<p>The <code>*</code> before the list-variable will make single elements from your list (decomposing it), so the print command essentially sees:</p>
<pre><code>print( 2,3,4,5,6 , sep=",")
</code></pre>
<p>The <code>sep=","</code> tells the print command to print all given elements with a seperator as specified instead of the default <code>' '</code>.</p>
<p>If you need to print, say, only 4 consecutive elements from your list on one line, then you can slice your list accordingly: </p>
<pre><code>data = [2,3,4,5,6,7,8,9,10,11]

# slice the list in parts of length 4 and print those:
for d in ( data[i:i+4] for i in range(0,len(data),4)):
    print( *d, sep=",")
</code></pre>
<p>Output:</p>
<pre><code>2,3,4,5
6,7,8,9
10,11
</code></pre>
<p>Doku:</p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">unpacking lists</a></li>
<li><a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>print(*objects, sep=' ', ...)</code></a> </li>
<li><a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer"><code>range(start, stop[, step])</code></a></li>
</ul>
</div>
<span class="comment-copy">not a good dupe. its concattenating <i>strings</i> not printing - you could create strings from numbers and concattenate but thats not even needed here</span>
<span class="comment-copy">I'd prefer this solution among three answers here</span>
<span class="comment-copy">Okay that makes sense... Iâ€™m going to revise mine and see which works best. Thank you!!</span>
