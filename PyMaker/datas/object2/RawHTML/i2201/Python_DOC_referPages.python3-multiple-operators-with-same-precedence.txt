<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6074018/why-does-the-expression-0-0-0-return-false-in-python">Why does the expression 0 &lt; 0 == 0 return False in Python?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I recently started to learn Python.</p>
<p>And my friend asked me which value <code>3 &lt; 5 != True</code> evaluates to.</p>
<p>As I have prior experience to javascript and c++, I answered <code>False</code>. (I was able to see false in both languages)</p>
<p>Because, operators with same precedence (<code>comparison</code>) works left to right.</p>
<p>So that <code>3 &lt; 5</code> is evaluated first, which becomes <code>True</code> and <code>True != True</code> is <code>False</code>.</p>
<p>I believed it was right answer.</p>
<p>But it turned out it wasn't.</p>
<p>I ran this expression on my computer and it said it's <code>True</code>.</p>
<p>Am I missing something? or Python evaluates operators with same precedence in different way?</p>
</div>
<div class="post-text" itemprop="text">
<p>The expression <code>3 &lt; 5 != True</code> is evaluated as:</p>
<pre><code>(3 &lt; 5) and (5 != True)
</code></pre>
<p>Since <code>True == 1</code>, this equates to:</p>
<pre><code>(3 &lt; 5) and (5 != 1)
</code></pre>
<p>Of course, both parts evaluate to <code>True</code> and therefore your result is <code>True</code>.</p>
<p>Chained comparisons are described in the <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>Comparisons can be chained arbitrarily, e.g., <code>x &lt; y &lt;= z</code> is equivalent
  to <code>x &lt; y and y &lt;= z</code>, except that <code>y</code> is evaluated only once (but in both
  cases <code>z</code> is not evaluated at all when <code>x &lt; y</code> is found to be false).</p>
</blockquote>
</div>
<span class="comment-copy">Nice answer, but maybe explain a bit more how <code>3 &lt; 5 != True</code> equals <code>(3 &lt; 5) and (5 != True)</code>.</span>
<span class="comment-copy">@ChristianDean, I don't think I can explain it better than the docs, so I've included a quote.</span>
<span class="comment-copy">Yeah, fair point @jpp</span>
<span class="comment-copy">I think it's intended to work the same way as conventional mathmatical expression where a &lt; b &lt; c means (a &lt; b) and (b &lt; c) unlike other programming languages</span>
