<div class="post-text" itemprop="text">
<p>I would like to use a <code>for</code> loop to go through a list of numbers and stop when it reaches a specific number like <code>4</code>, returning the sum of the numbers that came before it.</p>
<p>So if the list is <code>[1, 2, 4, 0, 3, 2]</code>, the function would return <code>3</code> after summation.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here are two ways (<em>with</em> and <em>without</em> function) using <code>for</code> loop. The <code>if</code> condition will break out of the <code>for</code> loop as soon as element will be <code>4</code>, otherwise it will keep summing. Coming out of the <code>for</code> loop, you can print the sum <code>s</code></p>
<p><strong>Without function</strong></p>
<pre><code>lst = [1, 2, 4, 0, 3, 2]
s = 0
for l in lst:
    if l == 4:
        break
    s += l

print ("The sum is %d" %s) 

&gt; The sum is 3
</code></pre>
<p><strong>With function</strong></p>
<pre><code>lst = [1, 2, 4, 0, 3, 2]
num = 4

def summ(lst, num):
    s = 0
    for l in lst:
        if l == num:
            return s
        s += l

print ("The sum is %d" %summ(lst, num))   

&gt; The sum is 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools.takewhile</code>:</p>
<pre><code>from itertools import takewhile

res = sum(takewhile(lambda x: x &lt; 4, [1, 2, 4, 0, 3, 2]))  # 3
</code></pre>
<p>The <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow noreferrer">docs for <code>itertools.takewhile</code></a> give the equivalent generator which can be used to implement the logic directly:</p>
<pre><code>def takewhile(predicate, iterable):
    # takewhile(lambda x: x &lt; 4, [1, 2, 4, 0, 3, 2]) --&gt; 1 2
    for x in iterable:
        if predicate(x):
            yield x
        else:
            break
</code></pre>
</div>
<span class="comment-copy">What have you tried so far and what exactly is the problem with it? SO is neither a code-writing nor tutorial service.</span>
<span class="comment-copy">Thank you just what i needed!</span>
<span class="comment-copy">You are welcome. Glad to help.</span>
<span class="comment-copy">The OP says <code>for</code> loop.</span>
<span class="comment-copy">@Bazingaa, Sure, I've added the code from the docs.</span>
<span class="comment-copy">;) Great. ...... I have to add dots because there is a minimum limit of characters :)</span>
