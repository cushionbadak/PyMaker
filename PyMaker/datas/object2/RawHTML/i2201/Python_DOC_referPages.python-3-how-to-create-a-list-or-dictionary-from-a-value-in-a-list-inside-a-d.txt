<div class="post-text" itemprop="text">
<p>Is it possible if I create a list/dictionary from a list inside a dictionary using user's input?</p>
<pre><code>E.g.
in the dictionary: {'fruits', 'veggies', 'drinks'}
every key has list:  fruits = ['apple','manggo']
every value has a list (or maybe dict): apple = ['stock':30, 'amount':10] 
</code></pre>
<p>So far I was able to create a list inside a dictionary but I can't create a new list from every value in the list <code>apple = ['stock':30]</code>.</p>
<p>My code</p>
<pre><code>class Inventory:


    def __init__(self):

        self.dict_inv = dict()
        self.count_inv = int(input("Enter the number of inventories: "))


        for count in range(self.count_inv):

            name_inv = str(input("Enter Inventory #%d: " % (count+1)))
            self.dict_inv[name_inv] = count
            self.dict_inv[name_inv] = []


        for name_inv in self.dict_inv:

            max_item = int(input("How many items in {} " .format(name_inv)))

            for count in range(max_item):

                name_item = str(input("Enter item #%d: " % (count+1)))
                self.dict_inv[name_inv].append(name_item)
                self.dict_inv[name_inv[name_item]] = [] # &lt;-- ERROR

        # PRINTS EVERYTHING 
        for key in self.dict_inv.keys():

            if type(self.dict_inv[key]) is list:
                print("{} is a list" .format(key))
                print("items in {} are {}" .format(key, self.dict_inv[key]))


Inventory()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not sure you to need to create a class for this. Will this accomplish what you are trying to do?</p>
<pre><code># define a generator that ask the user to enter things until they quit.
def ask(thing):
    user_input = 'x'
    while user_input != 'quit':
        user_input = input("Enter %s or 'quit' to stop: " % (thing))
        if user_input != 'quit':
           yield(user_input)


# use list comprehension to create inventory
inventory = [{c: [ {i: int(input("Enter stock: "))} for i in ask("item")]} for c in ask("category")]

# voila!
print( inventory )
</code></pre>
<p>Here's what happens when the above code executes:</p>
<pre><code>$ python3 inventory.py
Enter category or 'quit' to stop: fruit
Enter item or 'quit' to stop: apples
Enter stock: 45
Enter item or 'quit' to stop: bananas
Enter stock: 23
Enter item or 'quit' to stop: berries
Enter stock: 47
Enter item or 'quit' to stop: quit
Enter category or 'quit' to stop: cars
Enter item or 'quit' to stop: fords
Enter stock: 4
Enter item or 'quit' to stop: toyotas
Enter stock: 7
Enter item or 'quit' to stop: quit
Enter category or 'quit' to stop: quit
[{'fruit': [{'apples': 45}, {'bananas': 23}, {'berries': 47}]}, {'cars': [{'fords': 4}, {'toyotas': 7}]}]
</code></pre>
<p>I guess you can get that into a class if you want.</p>
</div>
<span class="comment-copy">A note on syntax: A <code>dict</code> is in the form <code>{key: value}</code>. If you want the key to have a list, then it is <code>{key: [value_list]}</code>. If you have <code>{[value_list]}</code> that is not a <code>dict</code>. It is a <code>set</code> containing a <code>list</code>. <code>[key: value]</code> will give a <code>SyntaxError</code>.</span>
<span class="comment-copy">Why would you overwrite like this: <code>self.dict_inv[name_inv] = count             self.dict_inv[name_inv] = []</code></span>
<span class="comment-copy">@KevinFang I just removed the one with the 'count'. Thank you</span>
<span class="comment-copy">I'm not sure that it is clear enough what you're trying to do for you to get an answer here. You be better served by reviewing a tutorial on lists and dictionaries, like <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">this one</a> from the official Python documentation (you might want to start the tutorial <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">from the beginning</a>, since Chapter 5 that I linked to may assume you're already read the first description of lists and their syntax in chapter 3).</span>
<span class="comment-copy">will do thanks.</span>
<span class="comment-copy">What?! My code could be simplified like this?</span>
<span class="comment-copy">I think so. You'll need to define the generator method <code>ask()</code> and set your <code>inventory</code> attribute like I do in  my answer.</span>
