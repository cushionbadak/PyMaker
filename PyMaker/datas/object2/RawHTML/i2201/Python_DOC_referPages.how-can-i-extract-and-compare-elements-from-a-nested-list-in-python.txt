<div class="post-text" itemprop="text">
<p>I will post only the format of my list.
I am trying to split this list:</p>
<pre><code>list1 = [["first","22","25","35"],["second","22","25","35"]]
</code></pre>
<p>Into this</p>
<pre><code>list2 = [[["first"],["22"],["25"],["35"]],[["second"],["22"],["25"],["35"]]]
</code></pre>
<p>so i can iterate in list2[x][y], or any better idea please to compare values between list1</p>
<pre><code>for x in list:
    list2.append(x.split(","))
</code></pre>
<p>But it says that list does not have split() method.</p>
<p>Again it is a learning project so it does not need to give me the straight answer, i am just looking for hints and help how to do it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could <code>zip</code> both sublist together and compare them from there   </p>
<pre><code>l = [*zip(list1[0], list1[1])]
</code></pre>
<p>Can be done with <em>List comprehension</em>:</p>
<pre><code>l = [(list1[0][idx], list1[1][idx]) for idx, item in enumerate(list1[1])]
</code></pre>
<blockquote>
<pre><code>[('first', 'second'), ('22', '22'), ('25', '25'), ('35', '35')]
</code></pre>
</blockquote>
<p>From here you could just compare each tuple elements by using <code>[i][0] and [i][1]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> in nested manner to do something like this perhaps:              </p>
<pre><code>list1 = [["first","22","25","35"],["second","22","25","35"]]

list2 = list(map(lambda l: list(map(lambda e: [e], l)), list1))

print(list2)                 

# [[['first'], ['22'], ['25'], ['35']], [['second'], ['22'], ['25'], ['35']]]              
</code></pre>
<p>However, if your objective is to <strong>just compare each elements</strong> you can do something like this:                     </p>
<pre><code>list1 = [["first","22","25","35"],["second","22","25","35"]]
for e in zip(*list1):    # will also work even if list1 has more than two lists
    print(len(set(e)) == 1)

# False
# True
# True
# True
</code></pre>
</div>
<span class="comment-copy">you want to compare sub_array elements with each other, ie. list1[0] elements with list1[1] elements ? If yes, you should read about <code>zip</code></span>
<span class="comment-copy">You can do this easily with list comprehension</span>
<span class="comment-copy">You have nested lists; <code>["first", "22", "25", "35"]</code> is not a string, so there is no need to split anything.  You can <i>already</i> iterate over that object to get each individual string value from that; <code>for string_value in list1[0]:</code> works already and gives you the individual string values. There is <i>no advantage</i> to turning this into <code>[["first"], ["22"], ["25"], ["35"]]</code>, you only added a layer of list objects with each a single element.</span>
<span class="comment-copy">You said "to compare values between list1". Does that mean you want to test if  "first"=="second", "22"=="22", etc?</span>
<span class="comment-copy">Do you just want to test if the number values are equal? If they aren't equal do you want to identify which one is greater? What should the output look like? A single value of True or False? Or should it be a list containing the results of comparing each pair?</span>
<span class="comment-copy">This is not what is being asked. The OP is adding a layer of 1-element lists to each string value. There is no pairing up being done.</span>
<span class="comment-copy">@MartijnPieters  <code>any better idea please to compare values between list</code> What other values would he want to be comparing, I doubt OP is looking to compare <code>first</code> to <code>22</code> , it would make sense he is trying to compare corresponding indexes from each sublsit</span>
<span class="comment-copy">@vash_the_stampede that's correct, corresponding indexes.</span>
<span class="comment-copy">@SachiTakamori: so why not <i>include this information in your question</i>. If you wanted to compare values with corresponding indices, we could have gotten you this information much faster. See <a href="//stackoverflow.com/q/2407398">How to merge lists into a list of tuples?</a></span>
<span class="comment-copy">Please don't make assumptions about who voted which way. That I am commenting on a post does not mean I am also voting. My votes are my own and so are my criteria of how I use them, please don't ask me to use or not use them.</span>
