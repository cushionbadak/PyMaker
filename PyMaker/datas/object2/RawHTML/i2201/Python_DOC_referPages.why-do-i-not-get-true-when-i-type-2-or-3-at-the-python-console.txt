<div class="post-text" itemprop="text">
<p>In Python, any non-zero value is evaluated as True. So, for example, the following code prints <code>Yes</code>.</p>
<pre><code>if 2 or 3:
    print('Yes')
</code></pre>
<p>But, if I type <code>2 or 3</code> at the Python console I get <code>2</code> instead of <code>True</code>. Why the different behavior?</p>
</div>
<div class="post-text" itemprop="text">
<p>In all your cases the <code>2 or 3</code> expression is producing <code>2</code>. </p>
<p>It is then either displayed directly by the console, passed to the <code>print</code> function, or passed to the <code>if</code> statement. </p>
<p>The <code>if</code> does its own truthiness testing.</p>
<pre><code>In [14]: 2 or 3          # or returns the first truthy item
Out[14]: 2
In [15]: None or 3
Out[15]: 3
In [16]: False or 0 or 2
Out[16]: 2
</code></pre>
<p><code>print</code> just displays its argument:</p>
<pre><code>In [17]: print(2 or 3)
2
</code></pre>
<p><code>if</code> does the action if its argument if truthy; does the <code>else</code> if not:</p>
<pre><code>In [18]: if 2: print('yes')
yes
In [19]: if False: print('yes')
</code></pre>
<p>Here it evaluates the <code>or</code>, and then acts on the result:</p>
<pre><code>In [20]: if None or 2 or 3: print('yes')
yes
</code></pre>
<hr/>
<p><code>and</code> returns the first falsy, or last if none</p>
<pre><code>In [21]: 2 and 3
Out[21]: 3
In [22]: 2 and False
Out[22]: False
In [23]: 2 and 0 and 3
Out[23]: 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When using <code>or</code>, Python will return the first truthy value.</p>
<pre><code>print None or 2 #  Prints 2
print 0 or 'Foo' # Prints Foo
print False or True # Prints True
</code></pre>
<p>If the first value is falsy, it will return the second one, actually no matter if it's truthy or not:</p>
<pre><code>print None or False #  Prints False
print False or None # Prints None
print False or 0 # Prints 0
</code></pre>
<p>If you chain the statements, it will evaluate the first condition first, then the second</p>
<pre><code>print None or False or 0 # Will evaluate into ((None or False) or 0)
</code></pre>
<p>This is also possible in languages like <a href="https://stackoverflow.com/a/2382510/10400050">PHP</a> and <a href="https://stackoverflow.com/a/35642837/10400050">JavaScript</a>.</p>
<hr>
<p><strong>Source</strong>: <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#truth-value-testing</a></p>
</hr></div>
<div class="post-text" itemprop="text">
<p><code>or</code> returns the first value if the value is <em>truthy</em>, or the second value if the first value is <em>falsy</em> (<a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">source</a>).</p>
<p>This behavior is sometimes used idiomatically to initialize keyword argument of mutable type:</p>
<pre><code>def foo(bar=None, zoo=None):
    bar = bar or []
    zoo = zoo or {}
</code></pre>
<p>This is <a href="https://stackoverflow.com/questions/366422/what-is-the-pythonic-way-to-avoid-default-parameters-that-are-empty-lists">not the unique way</a> to initialize them, but you should be <a href="https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument">aware</a> you should not use empty list or dict as default argument.</p>
</div>
<span class="comment-copy">or returns the first truthy value it encounters. In particular, it does not implicitly casts it to a boolean</span>
<span class="comment-copy"><code>if 2: print('Yes')</code> also prints "Yes", but you wouldn't expect <code>print(2)</code> to print "True", would you?</span>
<span class="comment-copy">Based on the above two comments- should I then infer the following: (a) Typing something at the console is the equivalent of a issuing a print and (b) Python interprets a truthy-value as True only in the context of if statements. Or maybe, I am missing something very basic.</span>
<span class="comment-copy">Both (a) and (b) are wrong.</span>
<span class="comment-copy">In all your cases the <code>2 or 3</code> expression is producing <code>2</code>.  It is then either displayed directly by the console, passed to the <code>print</code> function, or passed to the <code>if</code> statement.  The <code>if</code> does its own truthiness testing.</span>
