<div class="post-text" itemprop="text">
<p>Here's the issue I'm running into:</p>
<pre><code>Error: iterator should return strings, not bytes (did you open the file in text mode?)
</code></pre>
<p>The code that's causing this looks something like:</p>
<pre><code>for fileinfo in tarfile.open(filename):
    f = t.extractfile(fileinfo)
    reader = csv.DictReader(f)
    reader.fieldnames
</code></pre>
<p>The trouble seems to be that the <code>extractfile()</code> method produces a <a href="https://docs.python.org/3.6/library/tarfile.html" rel="nofollow noreferrer">io.BufferedReader</a> that is a very basic file-like object and has no high-level text interface.</p>
<p>What would be a good way to handle this?</p>
<p>I'm thinking of looking at decoding the bytes from the reader into text but I need to retain streaming because these files are <em>very</em> large. The codebase is Python 3.6 running on Docker/Linux.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to both @Aran-Fey and @zwer who led me to <a href="https://stackoverflow.com/questions/34447623/wrap-an-open-stream-with-io-textiowrapper">another StackOverflow question</a> that answered it. Here's how:</p>
<pre><code>for fileinfo in tarfile.open(filename):
    with t.extractfile(fileinfo) as f:
        ft = codecs.getreader("utf-8")(f)
        reader = csv.DictReader(ft)
        reader.fieldnames
</code></pre>
<p>This seems to work so far.</p>
</div>
<span class="comment-copy">I'm too lazy to tar a csv file and post a complete and tested solution, but you should take a look at <a href="https://docs.python.org/3/library/io.html#io.TextIOWrapper" rel="nofollow noreferrer"><code>io.TextIOWrapper</code></a>.</span>
<span class="comment-copy">Can't you just wrap it as a text stream using the <a href="https://docs.python.org/3/library/codecs.html" rel="nofollow noreferrer"><code>codecs</code></a> module? Something like <code>codecs.getreader("utf-8")(t.extractfile(fileinfo))</code>?</span>
