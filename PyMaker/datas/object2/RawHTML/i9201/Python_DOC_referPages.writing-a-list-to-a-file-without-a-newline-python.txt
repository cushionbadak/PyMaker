<div class="post-text" itemprop="text">
<p>I have the following code, and I simply want it to write the list to a file. It does so, but with a blank line each time, which causes problems with every iteration!</p>
<pre><code>with open("films.txt", mode='r') as f:
 allfilms=[]

 reader = csv.reader(f)
 for row in reader:
    #create a list again which reads in and stores all films in the file

    allfilms.append(row)
    print(allfilms)


with open("films.txt","w") as f:
     writer=csv.writer(f)
     writer.writerows(allfilms)
</code></pre>
<p>The output is:
        0,Genre, Title, Rating, Likes</p>
<pre><code>    1,Sci-Fi,Out of the Silent Planet, PG, 0

    2,Sci-Fi,Solaris, PG,0

    3,Sci-Fi,Star Trek, PG, 0

    4,Sci-Fi,Cosmos, PG, 0
</code></pre>
<p>As mentioned, I don't want the blank line when saving the list. Also, I'd be interested in more elegant or better ways of doing the same thing. I want the file to be READ in to the list, and then written back to the file EXACTLY the same, in terms of formatting, as what was stored in the file.</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe the source of your issue is that when you opened <code>films.txt</code>, you forgot to include the <code>newline=''</code> argument as the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs</a> say to use. This means your code becomes:</p>
<pre><code>with open("films.txt", mode='r', newline='') as f:
</code></pre>
<p>and</p>
<pre><code>with open("films.txt", mode='w', newline='') as f:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>Edit: I misunderstood how the csv module gave output when I wrote this answer, but I am not removing it due to the helpful comment by downshift on it. Please see my more recent and more accurate answer.</em></p>
<p>downshift answered this in the comments, but I will try to give a little more detail about why this is happening.</p>
<p>When you read each row in from the csv reader, it gives you the entire row, which includes the newline character (<code>\n</code>) at the end. Your issue stems from the fact that when you write to the file, the write function adds it's own newline character to the end of your string. Luckily there are two very simple ways to remove the newline character from the end of the line you get back from the csv reader.</p>
<p>One way is to use the <code>.strip()</code> method of a string, which takes in some characters in the form of a string as input, and strips of as many of those characters as possible from the ends of the string. Using this method you could replace:</p>
<pre><code>allfilms.append(row)
</code></pre>
<p>with</p>
<pre><code>allfilms.append(row.strip("\n"))
</code></pre>
<p>Another way you could do it is to use string slicing and slice off the last character of the string. I wouldn't recommend you use string slicing for this, because it is less clear what you are doing, but if you wanted to, you would replace:</p>
<pre><code>allfilms.append(row)
</code></pre>
<p>with</p>
<pre><code>allfilms.append(row[:-1])
</code></pre>
<p><code>row[:-1]</code> will return row with the last character excluded, discarding the newline character.</p>
<p>Hope this helped you!</p>
</div>
<span class="comment-copy">try using <code>allfilms.append(row.strip('\n')</code></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/1826400/suppress-linebreak-on-file-write">Suppress linebreak on file.write</a></span>
<span class="comment-copy">Which version of Python are you using? In Python 2, the CSV module expects files to be opened in binary mode. In Python 3, you need the output file to be opened with the parameter <code>newline=""</code> for it to work correctly.</span>
<span class="comment-copy">@downshift - actually the following error occurs on using what you suggested: AttributeError: 'list' object has no attribute 'strip'</span>
<span class="comment-copy">Finally, after tons of searching this is what I needed. Thanks!</span>
<span class="comment-copy">Very helpful explanation, thank you. However, AttributeError: 'list' object has no attribute 'strip' ....is the error message that occurs on using what you suggested with the row.strip("\n")). Having said that, your second suggestion BlueCode, worked! So, thanks</span>
<span class="comment-copy">Interestingly allfilms[3] produces the third row in the list. I need to know however, how to get at the fourth field in the third row, if that makes any sense. I tried allfilms[3][4], but it came up with the error:"List index out of range". Any thoughts?</span>
<span class="comment-copy">@pythoncarrot, just offering my thoughts until BluCode can respond. Lists in python are typically zero-indexed (meaning they start from zero for the first element), so a list index out of range suggests the index is higher than what is available..meaning <code>allfilms[2][3]</code> should point to the 3rd row, 4rd index. Consider trying that to get around that error.</span>
