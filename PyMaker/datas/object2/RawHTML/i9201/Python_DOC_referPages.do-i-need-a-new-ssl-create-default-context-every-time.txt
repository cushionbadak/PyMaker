<div class="post-text" itemprop="text">
<p>This is my code using a SSL context:</p>
<pre><code>with smtplib.SMTP(host, port) as smtpserver:
    smtpserver.ehlo()
    smtpserver.starttls(context=ssl.create_default_context())
    ... etc ...
</code></pre>
<p>Is the default context object a constant that can be shared and reused in a multi-threaded program? I mean creating it just once:</p>
<pre><code>SSL_CONTEXT = ssl.create_default_context()
</code></pre>
<p>and then:</p>
<pre><code>with smtplib.SMTP(host, port) as smtpserver:
    smtpserver.ehlo()
    smtpserver.starttls(context=SSL_CONTEXT)
</code></pre>
<p>for every message sent.</p>
</div>
<div class="post-text" itemprop="text">
<p>Each connection should have its own context. You can see in the Python source code for http.client, that HTTPSConnection creates the new context for every connection.</p>
<p><a href="https://github.com/python/cpython/blob/master/Lib/http/client.py" rel="nofollow noreferrer">https://github.com/python/cpython/blob/master/Lib/http/client.py</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Indeed <code>ssl.create_default_context()</code> can be used again (as it's purpose) after initializing it:</p>
<pre><code>import ssl, smtplib
&gt;&gt;&gt; smtp = smtplib.SMTP("mail.python.org", port=587)
&gt;&gt;&gt; context = ssl.create_default_context()
&gt;&gt;&gt; smtp.starttls(context=context)
</code></pre>
<blockquote>
<p>(220, b'2.0.0 Ready to start TLS')</p>
</blockquote>
<p>â†³ <a href="https://docs.python.org/3/library/ssl.html#best-defaults" rel="nofollow noreferrer">https://docs.python.org/3/library/ssl.html#best-defaults</a></p>
</div>
<span class="comment-copy">I'm afraid that the example shown and the linked documentation do not say anything about the reusability. A new context is created for each SMTP connection.</span>
<span class="comment-copy">Does it say anything about not re-using it, and have you tried it?</span>
<span class="comment-copy">I could not find anything, that's why I wrote this question. I did not try. If it works, there is still a small chance of breaking something without noticing it. I'd rather avoid such risk. Anyway I do agree with you on the expected purpose of such context and hope the resusability will be confirmed.</span>
<span class="comment-copy">If you read the documentation (on the page I linked) you would have known the answer; look at the examples, there are plenty showing a context being used multiple times. It's unclear what multi-threading your app is doing, although read the multiprocessing section (as it's important with <code>SSL</code> to change the <code>PRNG</code> state of the parent process with <code>os.fork()</code>).</span>
