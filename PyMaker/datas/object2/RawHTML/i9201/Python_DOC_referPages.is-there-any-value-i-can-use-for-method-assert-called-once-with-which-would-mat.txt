<div class="post-text" itemprop="text">
<p>I have this function</p>
<pre><code>def my_function(param1, param2):
    ...
    my_other_function(param1, param2, &lt;something else&gt;)
    ...
</code></pre>
<p>I want to test that <code>my_other_function</code> is being called with <code>param1</code> and <code>param2</code>, and I don't care about the rest</p>
<p>I wrote a test like this</p>
<pre><code>@mock.patch('mymodule.my_other_function')
def test_my_other_function_is_called(my_other_function_mock):

   my_function('foo', 'bar')
   my_other_function_mock.assert_called_once_with('foo', 'bar', ?????)
</code></pre>
<p>Is there any value I can pass to the <code>assert_called_once_with</code> method (or any of the "sister" method from <code>MagicMock</code>, so that the assertion passes? Or do I have to manually get the calls list, and check each of the parameters with which the function was called?</p>
</div>
<div class="post-text" itemprop="text">
<p>In the docs <a href="https://docs.python.org/3/library/unittest.mock.html#any" rel="nofollow noreferrer">https://docs.python.org/3/library/unittest.mock.html#any</a> is said that you can use <code>unittest.mock.ANY</code>:</p>
<pre><code>@mock.patch('mymodule.my_other_function')
def test_my_other_function_is_called(my_other_function_mock):

   my_function('foo', 'bar')
   my_other_function_mock.assert_called_once_with('foo', 'bar', ANY)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/22184642/how-to-check-for-mock-calls-with-wildcards">How to check for mock calls with wildcards?</a></span>
