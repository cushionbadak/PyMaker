<div class="post-text" itemprop="text">
<p>I have a sizable array (8000ish entires) in python which is the edge list of a graph. part of the array looks like:</p>
<pre><code>... [' Tulane-B (Tulane (Bacchus)) ', ' Florida Tech (Florida Tech) '],
[' Stanford-B (Stanford Prison Experiment) ', ' San Jose State (Megabyte) '],
[' Stanford-B (Stanford Prison Experiment) ', ' Duke (Brimstone) '],
[' Stanford-B (Stanford Prison Experiment) ', ' Oregon State (Beavers) '],...
</code></pre>
<p>The string pairs pairs of vertices which have an edge between them.</p>
<p>Is there a efficient way to import this array into mathematica, so that it can read it? I know mathematica strings are surrounded by <code>{</code>. Can I just export this array in a different format out of python, or do I have to go in an re-parse the thing as a string?
Where my code looks like:</p>
<pre><code>print('{', end = '')
for edge in named_edgelist: 
        print('{' + '\"' + edge[0] +'\"' +  ", " +'\"'  + edge[1] + '\"' + '},', end ='')
print('}',end = '')
</code></pre>
<p>second to last print call makes an extra comma, but i'm not worrying about that.</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since your data is clean, i.e., it contains no double-quotes or square brackets we can use the <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate</code></a> method to translate Python's native string representation of the list into Mathematica format.</p>
<p>To use <code>str.translate</code> we first need to construct a translation table, using the <a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans" rel="nofollow noreferrer"><code>str.maketrans</code></a> method.</p>
<pre><code>data = [
    [' Tulane-B (Tulane (Bacchus)) ', ' Florida Tech (Florida Tech) '],
    [' Stanford-B (Stanford Prison Experiment) ', ' San Jose State (Megabyte) '],
    [' Stanford-B (Stanford Prison Experiment) ', ' Duke (Brimstone) '],
    [' Stanford-B (Stanford Prison Experiment) ', ' Oregon State (Beavers) '],
]

trans = str.maketrans("'[]", '"{}')
s = str(data).translate(trans)
print(s)
</code></pre>
<p><strong>output</strong></p>
<pre><code>{{" Tulane-B (Tulane (Bacchus)) ", " Florida Tech (Florida Tech) "}, {" Stanford-B (Stanford Prison Experiment) ", " San Jose State (Megabyte) "}, {" Stanford-B (Stanford Prison Experiment) ", " Duke (Brimstone) "}, {" Stanford-B (Stanford Prison Experiment) ", " Oregon State (Beavers) "}}
</code></pre>
<p>This is faster than using Python loops with Python string formatting, since almost all the work is being done by code that's written in C, so it runs at C speed.</p>
<hr/>
<p>FWIW, this can also be done in Python 2, with a minor change. In Python 2, there's no <code>str.maketrans</code> method. Instead, you need to use the <a href="https://docs.python.org/2/library/string.html#string.maketrans" rel="nofollow noreferrer"><code>string.maketrans</code></a> helper function.</p>
<hr/>
<p>If you'd like each row to be on a separate line you'll need to pre-process each row. This will necessarily be a little slower, but the speed difference will be hardly noticeable with 8000 rows.</p>
<pre><code>data = [
    [' Tulane-B (Tulane (Bacchus)) ', ' Florida Tech (Florida Tech) '],
    [' Stanford-B (Stanford Prison Experiment) ', ' San Jose State (Megabyte) '],
    [' Stanford-B (Stanford Prison Experiment) ', ' Duke (Brimstone) '],
    [' Stanford-B (Stanford Prison Experiment) ', ' Oregon State (Beavers) '],
]

# Convert data to strings with each row on a separate line
s = '[\n    ' + ',\n    '.join([str(row) for row in data]) + '\n]'

trans = str.maketrans("'[]", '"{}')
s = s.translate(trans)
print(s)
</code></pre>
<p><strong>output</strong></p>
<pre><code>{
    {" Tulane-B (Tulane (Bacchus)) ", " Florida Tech (Florida Tech) "},
    {" Stanford-B (Stanford Prison Experiment) ", " San Jose State (Megabyte) "},
    {" Stanford-B (Stanford Prison Experiment) ", " Duke (Brimstone) "},
    {" Stanford-B (Stanford Prison Experiment) ", " Oregon State (Beavers) "}
}
</code></pre>
</div>
<span class="comment-copy">You should add your expected output to your question, since not all Python coders know Mathematica. I assume you want something like <code>{{"a", "b"}, {"c", "d"}}</code> etc. You can easily do this with string formatting. So you should make an attempt to code this yourself and paste your code attempt into the question.</span>
<span class="comment-copy">Your example is the format I did instead, should have wrote that down. The point of the question though is for educational purposes is there an easier way to do this. I know I can do the string formatting easily, but to save future time I am wondering if their is a more efficient way.</span>
<span class="comment-copy">There are a few ways to do this with string formatting, so it's a bit hard to suggest a more efficient way than what you're currently doing if we can't actually see what you're currently doing.</span>
<span class="comment-copy">Thanks for adding that info. Can you guarantee that the strings will <i>never</i> contain any double-quote characters? Can they contain square brackets? It looks like you're using Python 3, is that correct?</span>
<span class="comment-copy">I am using python3 my output, has no brackets and it should not have any. There are no double quotes.</span>
