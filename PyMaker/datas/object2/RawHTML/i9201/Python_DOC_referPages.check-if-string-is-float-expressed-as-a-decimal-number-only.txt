<div class="post-text" itemprop="text">
<p>I'm writing script for checking if a pair of numbers is a valid coordinate. I need to check if the numbers are expressed as decimals only and in the range of 0 to 180 positive or negative for longitude and 0 to 90 positive or negative for latitude. 
I have used a try/except block to check if the number is a float like this:</p>
<pre><code>def isFloat(n):
    try:
       float(n)
       return True
    except ValueError:
       return False
</code></pre>
<p>While this mostly works, I want it to accept floats expressed only as decimals and not values like <code>True</code>, <code>False</code>, <code>1e1</code>, <code>NaN</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a fairly simple <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expression</a>:</p>
<pre><code>import re

def isFloat(n):
    n = str(n)  # optional; make sure you have string
    return bool(re.match(r'^-?\d+(\.\d+)?$', n))  # bool is not strictly necessary
    # ^         string beginning
    # -?        an optional -
    # \d+       followed by one or more digits (\d* if you want to allow e.g. '.95')
    # (\.\d+)?  followed by an optional group of a dot and one or more digits
    # $         string end

&gt;&gt;&gt; isFloat('4')
True
&gt;&gt;&gt; isFloat('4.567')
True
&gt;&gt;&gt; isFloat('-4.567')
True
&gt;&gt;&gt; isFloat('-4.')
False
&gt;&gt;&gt; isFloat('-4.45v')
False
&gt;&gt;&gt; isFloat('NaN')
False
&gt;&gt;&gt; isFloat('1e1')
False
</code></pre>
</div>
<span class="comment-copy">surprisingly this is <i>not</i> a duplicate! +1!!</span>
<span class="comment-copy">I would change the first <code>d+</code> to <code>d*</code> to catch values like <code>.985</code>.  Also, while I think this solution is the best for the poster's needs, it does require <code>n</code> to be (cast to) a string.</span>
<span class="comment-copy">I'm afraid I'm just a novice so could you please explain how this works?</span>
<span class="comment-copy">@TirthJain I added some explanation and added the link to the docs of pythons <code>regex</code> module. As for the ins and outs of regular expression syntax, you should read the docs or do a tutorial ;)</span>
<span class="comment-copy">@huck_cussler I added that option in the comment, but I don't really like it as it would accept the empty string... (without further complicating the expression) As for the casting, I took it from the question's title that n is a string.</span>
