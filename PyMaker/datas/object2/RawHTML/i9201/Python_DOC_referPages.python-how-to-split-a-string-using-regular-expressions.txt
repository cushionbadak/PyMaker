<div class="post-text" itemprop="text">
<p>I want to split the following strings to get each attribute seperately:</p>
<pre><code>String_one: 'archived': True, 'id': '30znq1', '_has_fetched': True
String_two: \\'hidden\\': False, \\'user_reports\\': [], \\'num_reports\\': None
</code></pre>
<p>I know that all of the attributes end with either ", '" or ", \\'"
Initially I was just using two string.spilt()</p>
<pre><code>1) line.split(', \'')
2) line.split(', \\\'')
</code></pre>
<p>These both did the job, but I am working with a large amount of data and both of these are very general and the pattern was matched somewhere in the data it wasn't supposed to.</p>
<p>So I tried a re.split instead:</p>
<pre><code>reg_split_no_esc = re.compile(', \'(.*\': .*)')
reg_split_esc    = re.compile(', \\\'(.*\\\': .*)')

line = re.split(reg_split_esc, line)
line = re.split(reg_split_no_esc, line)
</code></pre>
<p>The regular expressions are meant to find the first ", \'" and the split on this if it is followed by characters a single quote and a colon, its meant to catch what follows the ", \'".</p>
<p>reg_split_no_esc split on the first split condition but not for anymore, the other pattern is just not working.</p>
<p>Any help would be really appreciated</p>
<p>EDIT:
My first regular expression works but it only splits the first element and leaves the rest un-split so it looks like this:</p>
<pre><code>_uniq': None

suggested_sort': None, 'secure_media_embed': {} 'report_reasons': None, '_params': {}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just for completeness sake I figured out the answer, it was the <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">lookahead assertion</a></p>
<p>The final pattern looks like: </p>
<pre><code>re.compile(', \'(?=\w*\': )')
</code></pre>
<p>Cheers</p>
</div>
<span class="comment-copy">the "raw" prefix would probably help here.</span>
<span class="comment-copy">Would that stop me needing to escape characters within the pattern?</span>
<span class="comment-copy">I added the raw flag and tidied up the \ but I'm still having the same problems</span>
<span class="comment-copy">Welcome to Stack Overflow! You can <a href="http://stackoverflow.com/tour">take the tour</a> first and learn <a href="http://stackoverflow.com/help/how-to-ask">How to Ask a good question</a> and create a <a href="http://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable</a> example. That makes it easier for us to help you. Specifically, the strings in your post are not python legal strings. Where did they come from?  Is this json?</span>
<span class="comment-copy">Its not json, its data from reddit I pulled using praw, I then stored it in a text file. I trying to clean up the data. reg_split_no_esc = re.compile(', \'(.*\': .*)') is working but its only finding the first example and splitting the list into one attribute followed by the rest of the string</span>
