<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/835092/python-dictionary-are-keys-and-values-always-the-same-order">Python dictionary: are keys() and values() always the same order?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>As a dictionary is not ordered the output is also not ordered:</p>
<pre><code>&gt;&gt;&gt; d = dict(b = 1, a = 2, z = 3)
&gt;&gt;&gt; d.keys()
['a', 'z', 'b']
&gt;&gt;&gt; d.values()
[2, 3, 1]
</code></pre>
<p>But are the <code>keys</code> and <code>values</code> outputs above always in corresponding order?</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer is yes.</p>
<p>From <a href="https://docs.python.org/2/library/stdtypes.html#dict.items" rel="nofollow noreferrer">python 2 documentation</a>:</p>
<blockquote>
<p>If items(), keys(), values(), iteritems(), iterkeys(), and itervalues() are called with no intervening modifications to the dictionary, the lists will directly correspond. This allows the creation of (value, key) pairs using zip(): pairs = zip(d.values(), d.keys()). The same relationship holds for the iterkeys() and itervalues() methods: pairs = zip(d.itervalues(), d.iterkeys()) provides the same value for pairs. Another way to create the same list is pairs = [(v, k) for (k, v) in d.iteritems()].</p>
</blockquote>
<p>And from <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">python 3 documentation</a></p>
<blockquote>
<p>If keys, values and items views are iterated over with no intervening modifications to the dictionary, the order of items will directly correspond</p>
</blockquote>
</div>
<span class="comment-copy">Note, (pedantic point) dictionaries are ordered in CPython 3.6 <a href="http://stackoverflow.com/questions/39980323/dictionaries-are-ordered-in-cpython-3-6" title="dictionaries are ordered in cpython 3 6">stackoverflow.com/questions/39980323/â€¦</a></span>
<span class="comment-copy">@Chris_Rands I read that and it looks like it is not clear if that should be relied upon.</span>
<span class="comment-copy">@ayhan The text and sample here are clearer than in the other question.</span>
<span class="comment-copy">I don't agree. The title itself explains the issue. If you think it would improve with a clearer example you can always edit it but I don't think it is a good enough reason to close that canonical question as a duplicate of this one.</span>
<span class="comment-copy">@ayhan It is not necessary to be one and not the other. It can be both.</span>
<span class="comment-copy">Worth adding for Python 3 too: "if keys, values and items views are iterated over with no intervening modifications to the dictionary, the order of items will directly correspond..." <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#dictionary-view-objects</a></span>
<span class="comment-copy">they changed the text, but still same behaviour. Thanks Chris</span>
