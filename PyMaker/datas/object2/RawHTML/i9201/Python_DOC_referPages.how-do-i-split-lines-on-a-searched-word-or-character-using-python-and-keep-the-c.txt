<div class="post-text" itemprop="text">
<p>I am trying to append or put the remaining words into the next line when I have searched for the string or character already.
For example I have a file that has a paragraph like below:</p>
<pre><code>/This is my first time doing this\ /I am trying to append this line\
/I can't seem to find the solution\ /Trying so hard\ /Testing so hard\
</code></pre>
<p>I want to search for the <code>/</code> and have the result be like this:</p>
<pre><code>/This is my first time doing this\
/I am trying to append this line\
/I can't seem to find the solution\
/Trying so hard\
/Testing so hard\
</code></pre>
<p>So, whenever it sees a forwardslash <code>/</code> in line, it will move the remaining string or text in that line to the next line. I want to gather them into a list like format so that I can do further processing. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this again. By replacing the character to next line</p>
<pre><code>def sample():
    with open(r'sample.txt', 'r') as infile, open(r'sample2.txt', 'w') as outfile:
            data = infile.read()
            data = data.replace("/","\n") 
            outfile.write(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way to split up your text into a list of lines.</p>
<pre><code>data = r'''/This is my first time doing this\ /I am trying to append this line\
/I can't seem to find the solution\ /Trying so hard\ /Testing so hard\
'''

print(data)
print('- ' * 20)

# Put text after `/` onto a new line
data = data.replace('/', '\n/')

# Split text up into a list of lines
lines = data.splitlines()

# Remove leading and trailing whitespace from each line
lines = [s.strip() for s in lines]

# Get rid of empty lines
lines = [s for s in lines if s]

for line in lines:
    print(line)
</code></pre>
<p><strong>output</strong></p>
<pre><code>/This is my first time doing this\ /I am trying to append this line\
/I can't seem to find the solution\ /Trying so hard\ /Testing so hard\

- - - - - - - - - - - - - - - - - - - - 
/This is my first time doing this\
/I am trying to append this line\
/I can't seem to find the solution\
/Trying so hard\
/Testing so hard\
</code></pre>
<hr/>
<p>To make sure that each line has <em>exactly</em> the contents that we want we can print its representation:</p>
<pre><code># show the representation of each line
for line in lines:
    print(repr(line))
</code></pre>
<p><strong>output</strong></p>
<pre><code>'/This is my first time doing this\\'
'/I am trying to append this line\\'
"/I can't seem to find the solution\\"
'/Trying so hard\\'
'/Testing so hard\\'
</code></pre>
<p>Note that a single backslash is shown as a pair of backslashes in the representation. Similarly, to put a backslash into a normal Python string literal you need to use two backslashes, eg</p>
<pre><code>s = 'One backslash \\ here'
</code></pre>
<p>I didn't need to do that in the <code>data</code> string literal because I used a <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">raw string</a>.</p>
<hr/>
<p>To read <code>data</code> from a text file instead of using a string literal, you just need to use the file <code>.read</code> method, like this:</p>
<pre><code>with open('test.txt') as f:
    data = f.read()
print(data)
</code></pre>
<p><strong>output</strong></p>
<pre><code>/This is my first time doing this\ /I am trying to append this line\
/I can't seem to find the solution\ /Trying so hard\ /Testing so hard\
</code></pre>
<hr/>
<p>When you've finished processing the <code>lines</code> list and wish to save it to a new file, the simplest way is to pass a file argument to print. Eg,</p>
<pre><code>with open('sample3.txt', 'w') as outfile:
    for line in lines: 
        print(line, file=outfile)
</code></pre>
<p>I should also mention that to use the <code>print</code> <em>function</em> in Python 2 instead of the <code>print</code> <em>statement</em>, then you need to import it. To do that, put this line at the top of the script, before other imports:</p>
<pre><code>from __future__ import print_function
</code></pre>
<p>Actually, it's a good idea to tell the interpreter to use Python 3 style division as well: </p>
<pre><code>from __future__ import print_function, division
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you considered doing this, for example you have a paragraph that the second sentence has a charcter of '/'.</p>
<pre><code>def sampleFunction():

    text = "/"
    newText = "\n"

    x = fileinput.input(files ="log.txt", inplace=1)
    for line in x:
        if text in line:
            line = newText
        sys.stdout.write(line)
</code></pre>
<p>So that the line that starts with the '/' will be in next line.</p>
</div>
<span class="comment-copy">So you want to print a new line every time you encounter a space located between a backslash and a slash?</span>
<span class="comment-copy">@barakmanos - Whenever it sees a forwardslash ( / ) in line, it will move the remaining string or text in that line to the next line.</span>
<span class="comment-copy">Is there actually a blank line between each of your input and output lines? Or did you just put them into your question so that the lines would format properly?</span>
<span class="comment-copy">Well, how about <code>for line in data.split('/'): print '/'+line</code>?</span>
<span class="comment-copy">Also, do you just want to print these lines, or are you trying to gather them into a list of lines that you can do further processing on?</span>
<span class="comment-copy">Your code won't create the correct output: Karl wants to keep those slashes.</span>
<span class="comment-copy">How if I want to start this with opening a file? with open('test.txt') as data: ??</span>
<span class="comment-copy">one last, for line in lines:     print(line) how can I print it in another text file? line | tee sample3.txt???</span>
<span class="comment-copy">@KarlGuevarra I just remembered that you're using Python 2. So I've added some important info about using the <code>print</code> function in Python 2.</span>
<span class="comment-copy">It just made my text file blank because if the line has the "/" it turns it into a next line which is blank</span>
<span class="comment-copy">or create a function that will replace the character '/' to '\n'</span>
<span class="comment-copy">I'm using the slahes as my delimiter so readers can easily distinguish the start and end</span>
