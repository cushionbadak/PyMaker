<div class="post-text" itemprop="text">
<p>I have a dictionary that I am writing to a file and then loading it again. The dictionary has some sets, so I have the option of either doing an <code>eval()</code> or <code>json.dumps()</code> with a custom ModelEncoder. </p>
<p>I tried both and <code>json</code> has a much smaller memory footprint than <code>eval</code> does. Why does <code>eval</code> take up so much more memory?</p>
</div>
<div class="post-text" itemprop="text">
<p>Whether or not you should be using <code>eval</code> is really another question.</p>
<p>The primary reason <code>eval</code> takes more memory is the text is first compiled into a python expression (parsed, converted to byte code) and then evaluated.</p>
<p>Especially with large literals, python has a <a href="http://bugs.python.org/issue24085" rel="nofollow noreferrer">memory leak in the bytecode compiler</a>.  This issue talks about pyc compilation, but you'll also hit it with code compilation in eval.</p>
<p>json doesn't suffer from this because it's not converting your text into executable bytecode.</p>
</div>
<span class="comment-copy"><code>eval</code> is a much more general operation. Why is it surprising that it isn't as well-optimized as a tightly-constrained one? (Also, given the extent to which those constraints rule out several classes of security bugs, why are you even <i>considering</i> <code>eval</code>?)</span>
<span class="comment-copy">@CharlesDuffy it's my data that i'm saving and reading so it's a quick way to do it.</span>
<span class="comment-copy">Trusting your data is, generally speaking, an error. A well-designed deployment model will generally have code be read-only, but can't avoid having data be read-write; by evaluating data as code, you're thus defeating your ops team's efforts to prevent an attacker who can store arbitrary data from being able to execute arbitrary code.</span>
<span class="comment-copy">This is <b>absolutely</b> not what eval should be used for.  Consider using <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer"><code>pickle</code></a>, <a href="http://msgpack.org/index.html" rel="nofollow noreferrer"><code>msgpack</code></a> or similar library.</span>
<span class="comment-copy">Also, <code>eval</code> is buggy when used in this context. See <a href="http://stackoverflow.com/questions/6627635/is-json-syntax-a-strict-subset-of-python-syntax">Is JSON syntax a strict subset of Python syntax?</a></span>
