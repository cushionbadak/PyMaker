<div class="post-text" itemprop="text">
<p>I have a dict of Boolean flags in my app. As I work through a data set, I key into the dict using fields from the data and flag whether I've already performed a do-once operation on them. Right now, I'm initializing a dict of False values with the right keys, then copying that dict at the start of the loop that operates on the data. Here's a code snippet from a function that distributes database records to a set of .csv files:</p>
<pre><code>do_once_defaults = dict.fromkeys([f for f in output_file_names], False)
for db in db_files:
    do_once = dict(do_once_defaults)
    for row in cur.execute(query, params):
        if not do_once[row[0]]:
            do_once[row[0]] = True
            _replace_csv_headers(output_files[row[0]], [r[0] for r in cur.description])
        _write_record_to_csv(row[1:])
</code></pre>
<p>Is there a better way to reset the dict of flags on each outer iteration? A more Pythonic way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You'd better not use a dict at all. A dict where values are just booleans is really just a set (unless you actually distinguish the three values True/False/notIncluded, but you're not doing that).</p>
<p>I think this is what you want:</p>
<pre><code>for db in db_files:
    done = set()
    for row in cur.execute(query, params):
        if row[0] not in done:
            done.add(row[0])
            _replace_csv_headers(output_files[row[0]], [r[0] for r in cur.description])
        _write_record_to_csv(row[1:])
</code></pre>
<hr/>
<p>((Edit: This is about the now-fixed <code>do_once = do_once_defaults</code>) Btw, you're <strong>not</strong> copying the dict. Your <code>do_once</code> is just another reference to <strong>the same</strong> dict object that <code>do_once_defaults</code> references. So you're <strong>not</strong> resetting the flags there. The simplest way to actually make a copy would be <code>do_once = dict(do_once_defaults)</code>, but I really think you should use the set as suggested above.)</p>
</div>
<div class="post-text" itemprop="text">
<p>use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> from python stdlib:</p>
<pre><code>from collections import defaultdict

d = defaultdict(bool)

print(d)
for key in ['foo', 'bar', 'foo']:
    if not d[key]:
        d[key] = True
        print('doing operation for %s' % key)
print(d)
</code></pre>
<p>output:</p>
<pre><code>defaultdict(&lt;class 'bool'&gt;, {})
doing operation for foo
doing operation for bar
defaultdict(&lt;class 'bool'&gt;, {'foo': True, 'bar': True})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, just build a dictionary comprehension:</p>
<pre><code>do_once = {t: False for t in output_file_names}
</code></pre>
</div>
<span class="comment-copy">Thanks for the (btw). I'll edit the OP to show code that does what's intended so it's pertinent to the question.</span>
<span class="comment-copy">correct, thought default value is True for some reason. updated thanks :)</span>
<span class="comment-copy">I'd include duplicates in the example, without duplicates it's rather uninteresting.</span>
<span class="comment-copy">this will force creating all keys on the dict at first place</span>
