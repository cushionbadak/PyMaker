<div class="post-text" itemprop="text">
<p>I would like to use a function with many parameters. </p>
<p>Is there a way, instead of having : </p>
<pre><code>def fonction(ok):
    print("alors = %s" % (ok))
</code></pre>
<p>something like : </p>
<pre><code>def fonction(question=ok):
    print("alors = %s" % (ok))
</code></pre>
<p>(but this code does not work)</p>
<p>I would just like to have the "question=" part to make things easier to read</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to define things before you use them. If you meant <code>ok</code> to be a variable, then it needs to be defined before the function. Note that the function takes a reference to the object. If you rebind the variable later, that isn't seen by the function.</p>
<p>Then, notice that the variable name inside the function is the thing on the left, not the thing on the right.</p>
<pre><code># if you want the default to be a string
def fonction(question="ok"):
    print("alors = %s" % (question))

# if you want the default to be a variable
ok = "all is okay"
def fonction(question=ok):
    print("alors = %s" % (question))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's possible to enter the type of variable as an argument</p>
<pre><code>def fonction(question=str):
    print("alors = %s" % (question))
</code></pre>
</div>
<span class="comment-copy">question is unclear... What are yo trying to achieve? This function has only one parameter. Do you maybe mean a default value?</span>
<span class="comment-copy">Apart from the fact that <code>question=ok</code> doesn't make any sense as a parameter, yes you can invoke parameters by name in Python.</span>
<span class="comment-copy">Give it a try! The <a href="https://docs.python.org/3/tutorial/controlflow.html#more-on-defining-functions" rel="nofollow noreferrer">python.org tutorial</a> is a good read.</span>
<span class="comment-copy">It almost works. The default parameter "ok" needs to be defined before the function. If you meant to simply use the string "ok", then its <code>def fonction(qustion="ok")</code>. If you meant "ok" to be a variable, then put it before the function: <code>ok = "okay"</code>.</span>
<span class="comment-copy">Posting the stack trace instead of "it doesn't work" is better. Then we can see what really went wrong. In this case it was likely something like <code>NameError: name 'ok' is not defined</code> but why should we have to guess?</span>
