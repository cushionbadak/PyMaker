<div class="post-text" itemprop="text">
<p>According to <a href="https://en.wikipedia.org/wiki/Braille_Patterns" rel="nofollow noreferrer">Wikipedia</a>, the Unicode block for braille is U+2800 .. U+28FF.</p>
<p>I'm trying to convert normal text to Braille symbols (dots). To do so, I'm mapping this string:</p>
<pre><code>" A1B'K2L@CIF/MSP\"E3H9O6R^DJG&gt;NTQ,*5&lt;-U8V.%[$+X!&amp;;:4\\0Z7(_?W]#Y)="
</code></pre>
<p>The reason for mapping this specific string is mentioned <a href="https://en.wikipedia.org/wiki/Braille_ASCII#Braille_ASCII_values" rel="nofollow noreferrer">on this Wikipedia page</a></p>
<p>My code:</p>
<pre><code>def toBraille(c):
unic=2800
mapping = " A1B'K2L@CIF/MSP\"E3H9O6R^DJG&gt;NTQ,*5&lt;-U8V.%[$+X!&amp;;:4\\0Z7(_?W]#Y)="
i = mapping.index(c.upper())
if (i&gt;0):
    unic+=i 
    unichex = hex(unic)
    return unichr(unichex))
if (i==0):
    return '_'
if (i&lt;O):
    return '?'

def converter(txt):
tmp=""
for x in txt:
    tmp+=str(toBraille(x))
return tmp

txt = raw_input("Please insert text: \n")
print(converter(txt))
</code></pre>
<p>I want to print braille characters like this</p>
<pre><code>input = hello world
output = ⠓⠑⠇⠇⠕ ⠺⠕⠗⠇⠙
</code></pre>
<p>The problem is my output looks like this</p>
<pre><code>Input = A
Output = 2801
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>remapping strings is built-in to python: with <a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans" rel="nofollow noreferrer"><code>str.maketrans</code></a>  and <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate</code></a> you could do this:</p>
<pre><code>intab = "helo"  # ...add the full alphabet and other characters
outtab = "⠓⠑⠇⠕" # and the characters you want them translated to
transtab = str.maketrans(intab, outtab)

strg = "hello"
print(strg.translate(transtab)) # ⠓⠑⠇⠇⠕
</code></pre>
<p>note that the length of <code>intab</code> must match the length of <code>outtab</code> if you pass 2 arguments to <code>maketrans</code> only (you could pass a third argument; see doc).</p>
</div>
<div class="post-text" itemprop="text">
<p>I used a simple Python dictionary and it works but it's very basic</p>
<pre><code># ASCII
asciicodes = [' ','!','"','#','$','%','&amp;','','(',')','*','+',',','-','.','/',
          '0','1','2','3','4','5','6','7','8','9',':',';','&lt;','=','&gt;','?','@',
          'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q',
          'r','s','t','u','v','w','x','y','z','[','\\',']','^','_']

# Braille symbols
brailles = ['⠀','⠮','⠐','⠼','⠫','⠩','⠯','⠄','⠷','⠾','⠡','⠬','⠠','⠤','⠨','⠌','⠴','⠂','⠆','⠒','⠲','⠢',
        '⠖','⠶','⠦','⠔','⠱','⠰','⠣','⠿','⠜','⠹','⠈','⠁','⠃','⠉','⠙','⠑','⠋','⠛','⠓','⠊','⠚','⠅',
        '⠇','⠍','⠝','⠕','⠏','⠟','⠗','⠎','⠞','⠥','⠧','⠺','⠭','⠽','⠵','⠪','⠳','⠻','⠘','⠸']
</code></pre>
</div>
<span class="comment-copy">Why are you mapping this string? What make is special w.r.t. your desired conversion? Do you expect your average colleague understand it?</span>
<span class="comment-copy">I've read it on wikipedia [<a href="https://en.wikipedia.org/wiki/Braille_ASCII]" rel="nofollow noreferrer">en.wikipedia.org/wiki/Braille_ASCII]</a>: this C string (which can also be used in Python and other programming languages that accept C string literals) gives the Braille ASCII mappings for Unicode Braille characters U+2800 through U+283F in order, starting with U+2800 at the start of the string:</span>
<span class="comment-copy">This is a rather counterintuitive encoding. One thing that breaks your code is 2800. It ought to be hexadecimal, 0x2800. Why not get rid of confusion and write a normal Python dictionary? <code>{'A':u'⠁',...}</code>?</span>
<span class="comment-copy">Just create a dict that has the desired mapping and run each character through it.</span>
<span class="comment-copy">@RadLexus Done.</span>
<span class="comment-copy">Note please this is Python 3 only. Translation tables are ascii only on python 2.</span>
<span class="comment-copy">this should be defined as dictionary not as two arrays. Current version is unmaintainable.</span>
