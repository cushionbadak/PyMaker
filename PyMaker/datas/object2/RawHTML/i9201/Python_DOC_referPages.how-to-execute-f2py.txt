<div class="post-text" itemprop="text">
<p>How can I wrap in the f2py module?</p>
<p>I mean, I am reading a few tutorials that say I should execute</p>
<pre><code>f2py FIB1.f -m FIB2 -h FIB1.pyf
</code></pre>
<p>However, I don't know where I have to execute that, for sure not in <code>spyder</code> or I am doing something wrong.</p>
<p><strong>why?</strong></p>
<p>Because I execute this code that should create the extension module of Fortran with Python from my subroutine in Fortran, however an error is generated.</p>
<ul>
<li><p>my Fortran subroutine:</p>
<p>SUBROUTINE FIB(A,N)</p>
<pre><code> INTEGER N
  REAL*8 A(N)
  DO I=1,N
     IF (I.EQ.1) THEN
        A(I) = 0.0D0
     ELSEIF (I.EQ.2) THEN
        A(I) = 1.0D0
     ELSE
        A(I) = A(I-1) + A(I-2)
     ENDIF
  ENDDO
  END
</code></pre></li>
</ul>
<p><strong>what Im executing in Python:</strong></p>
<pre><code>import numpy.f2py as f2py

f2py FIB1.f -m FIB2 -h FIB1.pyf
</code></pre>
<p><strong>the error is this one:</strong></p>
<pre><code>runfile('F:/SLB/Larryf2py/teste.py', wdir='F:/SLB/Larryf2py')
  File "F:/SLB/Larryf2py/teste.py", line 9
    f2py FIB1.f -m FIB2 -h FIB1.pyf
            ^
SyntaxError: invalid syntax
</code></pre>
<p>As far as I know, not sure, It should generate something like:</p>
<pre><code># File setup.py
def configuration(parent_package='',top_path=None):
    from numpy.distutils.misc_util import Configuration
    config = Configuration('',parent_package,top_path)

    config.add_extension('m',
                         sources = ['m.pyf','foo.c'])
    return config
if __name__ == "__main__":
    from numpy.distutils.core import setup
    setup(**configuration(top_path='').todict())
</code></pre>
<p>This example of what is generated is to C but I think its something like that to Fortran too.</p>
<p>What I think? That I should run the first code in another place of the Python...</p>
<p>I tried to reproduce this <a href="https://sysbio.ioc.ee/projects/f2py2e/usersguide/#signature-file" rel="nofollow noreferrer">https://sysbio.ioc.ee/projects/f2py2e/usersguide/#signature-file</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>f2py</code> is not a Python command, you cannot execute it in the Python shell or inside a <code>.py</code> source file. It is an executable command. You must execute it in your system's shell.</p>
<p>You still did not answer which operating system you have, but if it is Windows, you must run it in the <code>CMD.exe</code> command prompt or in PowerShell. If it is Linux or similar, run it in <code>bash</code> or similar shell. You must run it in the same directory (folder), where the Fortran source file is located.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Are you adding <code>f2py</code> command inside your Python code?</strong> If yes, that's not good. </p>
<p>The line <code>f2py FIB1.f -m FIB2 -h FIB1.pyf</code> needs to be in command line, not inside any *.py script.  </p>
<blockquote>
<p><strong><a href="https://docs.scipy.org/doc/numpy-dev/f2py/index.html" rel="nofollow noreferrer">From F2PY Users Guide and Reference Manual</a></strong>
<em>f2py is a program/compiler from The purpose of the F2PY –Fortran to Python interface generator– project is to provide a connection between Python and Fortran languages. F2PY is a Python package (with a command line tool <strong>f2py</strong> and a module f2py2e) that facilitates creating/building Python C/API extension modules that make it possible.</em></p>
</blockquote>
<p>In additon, here is detailed <a href="https://docs.scipy.org/doc/numpy-dev/f2py/getting-started.html" rel="nofollow noreferrer">explanation</a> on how to use f2py . </p>
<p><em>There might be some other problems in OP's question but for the moment most vital is this one. Like the Fortran subrotuine is not using <code>implicit none</code>, etc.</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Well I found an answer.</p>
<p>Looks like in this version of anaconda one is supossed tu put like</p>
<pre><code>Python c:\user\anaconda3\scripts\f2py.py FIB1.f -m FIB2 -h FIB1.py
</code></pre>
<p>so this way that f2py.py part was substituted for all of that. For sure I'll have more trouble in the future with this module but so far my doubts are clear. </p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to convert fortran into a python object using a python code, the following will work:</p>
<pre><code> from numpy import f2py

 with open('path_to_fotran_code') as sourcefile:
     sourcecode = sourcefile.read()

 f2py.compile(sourcecode, modulename='test_module', verbose=1,
              extra_args= '--verbose'
                          '--compiler=mingw32')
 import test_module
</code></pre>
<p>In case you do not have <code>mingw32</code> you can use <code>--compile=msvc</code> (I ran into problems trying to use <code>msvc</code> which I could never solve with all the internet help).<br/>
Also ensure that your windows path environment is configured to point the fortran compiler path. </p>
</div>
<span class="comment-copy"><i>" am doing something wrong."</i> Why? What happens? Any error messages? What exactly have you tried? Which operation system do you have? Any particular Python distribution? (Anaconda or something else?)</span>
<span class="comment-copy">No im just trying the simple example like creating a fibonaci script in fortran and trying to load it in python just to learn how to use f2py because I will need to use it later.  im getting this:  runfile('F:/SLB/Larryf2py/teste.py', wdir='F:/SLB/Larryf2py')   File "F:/SLB/Larryf2py/teste.py", line 9     f2py -c fib1.f -m fib1                ^ SyntaxError: invalid syntax  however fib1.f is the name of my script in fortran so should work right? but I read about shellsomething and has to do with directory... Dont know if im doing right.</span>
<span class="comment-copy">Show the code of your programs and full error messages. It is not clear when the error is printed. Read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> And please answer my questions from the previous comment. Edit your question to add more information, don't use comments for that.</span>
<span class="comment-copy">Now I added all info that I have, thanks!</span>
<span class="comment-copy">Please don't put greetings like "regards, Patrick  Thanks in advance!" in your questions. We don't do that here, we delete this. Your name is appended automatically under your question with your photo.</span>
<span class="comment-copy">My Os is windows. I tried to execute in CMD.exe in the folder of my fortran file but still not working.  "the error is f2py is not recognized as an internar or external command, operable or batch file"  I also tried with numpy.f2py because f2py is now part of numpy but the same error returned. Do I have to compile F2py? I download anaconda 2.5 and python 2.7.11 it should be inside that. I can easily import numpy.f2py in the spyder.</span>
<span class="comment-copy">@PatrickMachado I assume you can't even run python.exe from the command line. See <a href="http://stackoverflow.com/a/37918326/721644">stackoverflow.com/a/37918326/721644</a></span>
<span class="comment-copy">I added the extensions and nothing happened. I cannot load the f2py or numpy.f2py in the CMD. Not sure why. I installed Anaconda in the F: directory and my windows is at c: could it be the cause?, besides that python I can load in the cmd</span>
<span class="comment-copy">My Os is windows. I tried to execute in CMD.exe in the folder of my fortran file but still not working. "the error is f2py is not recognized as an internar or external command, operable or batch file" I also tried with numpy.f2py because f2py is now part of numpy but the same error returned. Do I have to compile F2py? I download anaconda 2.5 and python 2.7.11 it should be inside that. I can easily import numpy.f2py in the spyder.</span>
<span class="comment-copy">You can follow the advice of @vladimir-f, official Python documents for settings on Windows machines are <a href="https://docs.python.org/3/using/windows.html" rel="nofollow noreferrer">here</a>. Probably your installation is suffering from bad/wrong "environment variables".</span>
<span class="comment-copy">Other possibilities might be installing a virtual machine, <a href="http://www.howtogeek.com/196060/beginner-geek-how-to-create-and-use-virtual-machines/" rel="nofollow noreferrer">just an example</a> , or <a href="http://www.pcworld.com/article/2955460/operating-systems/dual-booting-linux-with-windows-what-you-need-to-know.html" rel="nofollow noreferrer">dual boot</a> if you can/like to run your code with a linux distro. I suggested these 2 options as Linux package managers should set the "environment variables" seamlessly.  All these methods should work more or less equivalently once they are set correctly.</span>
