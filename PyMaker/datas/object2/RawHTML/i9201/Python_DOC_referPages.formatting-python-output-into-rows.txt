<div class="post-text" itemprop="text">
<p>So, I'm still sort of new to programming, and I'm trying to format the output of some arrays in Python. I'm finding it hard to wrap my head around some of the aspects of formatting.
 I have a few arrays that I want to print, in the format of a table.</p>
<pre><code>headings = ["Name", "Age", "Favourite Colour"]
names = ["Barry", "Eustace", "Clarence", "Razputin", "Harvey"]
age = [39, 83, 90, 15, 23]
favouriteColour = ["Green", "Baby Pink", "Sky Blue", "Orange", "Crimson"]
</code></pre>
<p>I want the output to look like this: (where the column widths are a little more than the max length in that column)</p>
<pre><code>Name          Age        Favourite Colour
Barry         39         Green
Eustace       83         Baby Pink
Clarence      90         Sky Blue
Razputin      15         Orange
Harvey        23         Crimson
</code></pre>
<p>I tried to do this:</p>
<pre><code>mergeArr = [headings, name, age, favouriteColour]
</code></pre>
<p>but (I think) that won't print the headings in the right place?</p>
<p>I tried this:</p>
<pre><code>mergeArr = [name, age, favouriteColour] 
col_width = max(len(str(element)) for row in merge for element in row) + 2

for row in merge:
    print ("".join(str(element).ljust(col_width) for element in row))
</code></pre>
<p>but that prints the data of each object in columns, rather than rows.</p>
<p>Help is appreciated! Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just adding the extra formatting:</p>
<pre><code>ll = [headings] + list(zip(names, age, favouriteColour))

for l in ll:
    print("{:&lt;10}\t{:&lt;2}\t{:&lt;16}".format(*l))

# Name          Age Favourite Colour
# Barry         39  Green     
# Eustace       83  Baby Pink 
# Clarence      90  Sky Blue  
# Razputin      15  Orange    
# Harvey        23  Crimson  
</code></pre>
<p>The parts in the curly braces are part of python's new character <a href="https://pyformat.info/" rel="nofollow noreferrer">formatting</a> features, while the TABs serve as delimiters. In sum, the <code>.format()</code> method looks for those curly braces inside the string part to determine what values inside the container <code>l</code>
go <em>where</em> and <em>how those values should be formatted</em>. For example, in the case of the headers, the following is what's happening:</p>
<pre><code>headings = ["Name", "Age", "Favourite Colour"]
print("{:&lt;10}\t{:&lt;3}\t{:&lt;16}".format(*headings))
</code></pre>
<ul>
<li><p>We use the asterisk (<code>*</code>) in front of the list to <a href="https://stackoverflow.com/questions/400739/what-does-asterisk-mean-in-python"><code>unpack</code></a> the elements inside that list.</p></li>
<li><p>The first curly brace is for the string "Name", and it is formatted with <code>:&lt;10</code> which means that it is adjusted to the left and padded with extra space characters, if the length of the string is less than 10. In essence, it will print all characters in a given string and add extra spaces to the right of that string.</p></li>
<li><p>The second curly brace is for "Age" and is formatted with <code>:&lt;3</code>.</p></li>
<li><p>The third curly brace is for "Favourite Colour" and is formatted with <code>:&lt;16</code>.</p></li>
<li><p>All those strings are delimited with the TAB character.</p></li>
</ul>
<p>The combination of the above steps inside the print function yields:</p>
<pre><code># Name          Age Favourite Colour
</code></pre>
<p>I hope this proves useful.</p>
</div>
<div class="post-text" itemprop="text">
<p>You'd print the heading on its own (the one with name, age, favourite colour). </p>
<p>Then you use the code you have, but with:</p>
<pre><code>rows = zip(name, age, favouriteColour)
for row in rows...
</code></pre>
<p>You might also look into the <code>tabulate</code> package for nicely formatted tables.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip(*iterables)</a>:</p>
<pre><code>print(heading)
for row in zip(names, age, favouriteColour):
  print(row) # formatting is up to you :)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Jacob Krall is perfectly correct about using <code>zip</code> to combine your lists. Once you've done that, though, if you want your columns to align nicely (assuming you are using Python 3.x) then take a look at the <code>.format()</code> method which is available with strings and as part of the Python <code>print</code> function. This allows you to specify field widths in your output.</p>
</div>
<span class="comment-copy"><code>merge</code> and <code>name</code> are both undefined in your example code</span>
<span class="comment-copy">Thank you! This works. Would you be able to explain to me just what exactly the parts within the curly braces do? I sort of understand it, but not quite. Am I right in thinking the '\t' means TAB? And what does the * mean?</span>
