<div class="post-text" itemprop="text">
<p>Consider the following code:</p>
<pre><code>import typing

def a(x: int, y: int) -&gt; int:
    return x + y

class F(object):
    def b(self, x: int, y: int) -&gt; int:
        return x + y

def call(operation: typing.Callable[[int, int], int]) -&gt; int:
    return operation(2, 2)

call(a)

f = F()
call(f.b)
</code></pre>
<p>My PyCharm IDE indicates a typing error for the last line:</p>
<p><img alt="1" src="https://i.stack.imgur.com/PGbDK.png"/></p>
<p>Is it a typing/type declaration error? Is the PyCharm type checker failing? If it's a typing error, what should it be?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a PyCharm typechecker bug. The <a href="http://mypy-lang.org" rel="nofollow noreferrer">mypy typechecker</a> accepts your example without warnings or errors:</p>
<pre><code>$ bin/mypy --verbose so_41869174.py
LOG:  Mypy version 0.470
LOG:  Parsing so_41869174.py (so_41869174)
LOG:  Parsing lib/mypy/typeshed/stdlib/3/typing.pyi (typing)
LOG:  Parsing lib/mypy/typeshed/stdlib/3/builtins.pyi (builtins)
LOG:  Parsing lib/mypy/typeshed/stdlib/3/sys.pyi (sys)
LOG:  Parsing lib/mypy/typeshed/stdlib/3/abc.pyi (abc)
LOG:  Parsing lib/mypy/typeshed/stdlib/3/types.pyi (types)
LOG:  Parsing lib/mypy/typeshed/third_party/2and3/mypy_extensions.pyi (mypy_extensions)
LOG:  Parsing lib/mypy/typeshed/stdlib/3/_importlib_modulespec.pyi (_importlib_modulespec)
LOG:  Loaded graph with 8 nodes
LOG:  Found 2 SCCs; largest has 7 nodes
LOG:  Processing SCC of size 7 (_importlib_modulespec mypy_extensions types abc typing sys builtins) as inherently stale
LOG:  Processing SCC singleton (so_41869174) as inherently stale
LOG:  No fresh SCCs left in queue
LOG:  Build finished in 0.482 seconds with 8 modules, 1708 types, and 0 errors
</code></pre>
<p>Because <code>F().b</code> is a <em>bound method</em>, it inherits the signature of the underlying function <em>without the <code>self</code> argument</em> (as it is the job of the bound method to pass in the bound instance).</p>
<p>For example, the <a href="https://docs.python.org/3/library/typing.html#typing.get_type_hints" rel="nofollow noreferrer"><code>typing.get_type_hints()</code> function</a>, applied to the bound method, correctly omits <code>self</code>:</p>
<pre><code>&gt;&gt;&gt; typing.get_type_hints(f.b)
{'x': &lt;class 'int'&gt;, 'y': &lt;class 'int'&gt;, 'return': &lt;class 'int'&gt;}
</code></pre>
</div>
<span class="comment-copy">I'd report that as a bug to PyCharm. That looks like a bug to me. The bound method has the right signature, the <code>self</code> argument is dropped.</span>
<span class="comment-copy">@MoinuddinQuadri: the type of <code>self</code> is implied and doesn't need specifying. Even if you did, you'd have to use <code>self: 'F'</code> (a string literal), because the class <code>F</code> doesn't exist yet when functions are created.</span>
<span class="comment-copy">pycharm error. And @MoinuddinQuadri no, as you can see from the error, it was detected correctly.</span>
<span class="comment-copy">Okay, thank's for replies and bug report.</span>
<span class="comment-copy">This bug still exists CAO this timestamp.</span>
