<div class="post-text" itemprop="text">
<p>Year <em>Y</em> is a leap year if <em>Y</em> is perfectly divisible by 4, and</p>
<ul>
<li>not by 100, or</li>
<li>by 100 and 400</li>
</ul>
<p>The following sources follow the rule above:</p>
<ul>
<li>Python (output of <code>calendar.monthrange(1000,2)</code> is (5, 28))</li>
<li><a href="http://www.webconversiononline.com/leap-year-calculator.aspx?year=1000">webconversiononline.com</a></li>
</ul>
<p>However, the following sources say 1000 <em>was</em> a leap year:</p>
<ul>
<li>Linux cal (command <code>cal 2 1000</code> displays 29 days)</li>
<li><a href="https://www.timeanddate.com/calendar/?year=1000">timeanddate.com</a></li>
</ul>
<p>The Gregorian system was introduced in <a href="https://www.wwu.edu/skywise/leapyear.html">1582</a>, where the rule above apparently started to apply (before 1582, the only requirement was perfect division by 4). However, testing several other year values (100, 500, 600, 700, 900, 1100, 1300, 1400, 1500 and 1700) indicate that only after and including 1800 the results of <em>Python</em> and <em>Linux cal</em> agree.</p>
<p>Why do these sources give different answers?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>calendar</code> module uses the proleptic Gregorian calendar.</p>
<p>From <a href="https://docs.python.org/3/library/calendar.html">the <code>calendar</code> docs</a>:</p>
<blockquote>
<p>Most of these functions and classes rely on the <a href="https://docs.python.org/3/library/datetime.html#module-datetime"><code>datetime</code></a> module which
  uses an idealized calendar, the current Gregorian calendar extended in
  both directions. This matches the definition of the “proleptic
  Gregorian” calendar in Dershowitz and Reingold’s book “Calendrical
  Calculations”, where it’s the base calendar for all computations.</p>
</blockquote>
<p>From <a href="https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar">Wikipedia</a>:</p>
<blockquote>
<p>The proleptic Gregorian
  calendar
  is produced by extending the Gregorian calendar backward to dates
  preceding its official introduction in 1582.</p>
</blockquote>
<p>The Julian calendar was not replaced by the Gregorian calendar on a single date. It was adopted by various countries at different times.</p>
<p>From the Linux <code>cal</code> man page on my (rather ancient) machine:</p>
<blockquote>
<p><code>-s -file ... -country_code</code></p>
<p>Assume the switch from Julian to Gregorian Calendar at the date
  associated with the country_code If not specified, <code>ncal</code> tries to guess
  the switch date from the local environment or falls back to September
  2, 1752. This was when Great Britain and her colonies switched to the
  Gregorian Calendar. </p>
<p>[...]</p>
<p><strong>BUGS</strong></p>
<p>The assignment of Julian–Gregorian switching dates to country codes is
  historically naive for many countries.</p>
</blockquote>
</div>
<span class="comment-copy">It may seem unfortunate that Python uses such a naive approach to leap years, but <a href="https://support.microsoft.com/en-us/help/214326/excel-incorrectly-assumes-that-the-year-1900-is-a-leap-year" rel="nofollow noreferrer">it could be worse</a>...</span>
