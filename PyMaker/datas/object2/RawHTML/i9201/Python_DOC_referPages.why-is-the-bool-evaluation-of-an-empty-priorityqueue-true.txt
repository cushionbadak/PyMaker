<div class="post-text" itemprop="text">
<p>Why doesn't an empty PriorityQueue evaluate to <code>False</code> like other iterables in Python?</p>
<pre><code>&gt;&gt;&gt; from queue import PriorityQueue
&gt;&gt;&gt; q1 = PriorityQueue()
&gt;&gt;&gt; bool(q1)
True
&gt;&gt;&gt; q1.qsize()
0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you can see from <a href="https://hg.python.org/cpython/file/3.6/Lib/queue.py" rel="nofollow noreferrer">the source code</a>, the <code>PriorityQueue</code> class doesn't implement <a href="https://docs.python.org/3/reference/datamodel.html#object.__len__" rel="nofollow noreferrer"><code>__len__</code></a> or <a href="https://docs.python.org/3/reference/datamodel.html#object.__bool__" rel="nofollow noreferrer"><code>__bool__</code></a>, and the default is that if an object is present it's truthy:</p>
<blockquote>
<p>If a class defines neither <code>__len__()</code> nor <code>__bool__()</code>, all its
  instances are considered true.</p>
</blockquote>
</div>
<span class="comment-copy">The next question would be "Why did they implement a qsize() function instead of __len__()?" Knowing nothing other than what the comments in the source say, it seems that due to multi threading and race conditions qsize() only returns an approximate size so they probably didn't want to use a magic method with unexpected results. Thanks Jon.</span>
<span class="comment-copy">@BeardedOne85 yes, that's right; implementing <code>__len__</code> implies they actually know what it is!</span>
<span class="comment-copy">@BeardedOne85 Now they just need to be consistent and document <code>empty()</code> as "Return True if the queue is approximately empty." :-)</span>
