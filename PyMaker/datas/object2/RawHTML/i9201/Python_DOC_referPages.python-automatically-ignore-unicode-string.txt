<div class="post-text" itemprop="text">
<p>I've been searching to automatically import some files but since I'm on Windows i got the unicode error (because of the "C:\Users\..."). 
I've been looking to correct this error and found some hints (using r"<em>MyString</em>" or u"<em>MyString</em>" for raw and unicode strings) and I have been directed to this page (<a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">https://docs.python.org/3/howto/unicode.html</a>). </p>
<p>But since my problem is about a GUI interface to automatically import some files, I haven't figured out the way to do it. </p>
<p>I'll leave you my hints right here : </p>
<pre><code> file = file.replace('\\', '//')

 file = r"MyFilePath" 

 file = u"MyFilePath" 

 file = os.path.abspath("MyFilePath") 

 file = "MyFilePath".decode('latin1')
 """ isn't correct because a string has no attribute 'decode' of course """ 
</code></pre>
<p>One of those two seems to be nice but I don't know how to let python understands that I want to copy the path behind the <em>r</em> or the <em>u</em>. </p>
<p>Or is there a way to tell Python :</p>
<pre><code>file = StopThinkingWithUnicode("MyFilePath")
</code></pre>
<p>I've also see this link (<a href="https://stackoverflow.com/questions/28101187/deal-with-unicode-usernames-in-python-mkdtemp">Deal with unicode usernames in python mkdtemp</a>) but doesn't work neither (I've corrected the print() function because of the Python2.7 write and I'm on 3.5) </p>
<p>I've forgotten to post the traceback so there it is : </p>
<pre><code>  MyFilePath = "C:\Users\MyUser\Desktop\Projet\05_Statistiques\Data\MyFileName.xlsx"
  File "&lt;ipython-input-13-d8c2e72a6d3f&gt;", line 1
  MyFilePath = "C:\Users\MyUser\Desktop\Projet\05_Statistiques\Data\MyFileName.xlsx"
            ^
  SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape
</code></pre>
<p>Could someone help me with me some hints or link? 
Thank for your help.</p>
<p>PS : I've tried setting at the first line of the script : </p>
<pre><code> # -*- coding: latin-1 -*- 
</code></pre>
<p>(I have *.xl , *.csv, *.sas7bdat, *.txt files)</p>
</div>
<div class="post-text" itemprop="text">
<p>That's a very frequent issue with windows paths. I suspect that people stumble upon it, and figure out a way by putting the "annoying" lowercase letters matching escape sequences (<code>\n</code>,<code>\t</code>,<code>\b</code>,<code>\a</code>,<code>\v</code>,<code>\x</code> ...) in upper case. It works, except for <code>\U</code> (which is unicode escape sequence) and <code>\N</code> .</p>
<p>The real solution is to use <em>raw</em> prefix to treat backslashes literally:</p>
<pre><code>MyFilePath = r"C:\Users\MyUser\Desktop\Projet\05_Statistiques\Data\MyFileName.xlsx"
             ^
</code></pre>
<p>EDIT: my theory about "bug avoidance by uppercase confirms. Check the path in this question: <a href="https://stackoverflow.com/questions/41876292/largest-number-of-rows-in-a-csv-python-can-handle">Largest number of rows in a csv python can handle?</a></p>
</div>
<span class="comment-copy">Just use / or \\ instead of \</span>
<span class="comment-copy">The user shouldn't have to do it, that's one of the main problem @JayParikh</span>
<span class="comment-copy">Do you know a way to sort of concat r + "MyFilePath"  (MyFilePath is actually chosen by the user with the explorer) ? (and not type but me as I did here - sorry if it wasn't clear) I've tried using ''.join(["r" + MyFilePath]) but because of the Unicode error, MyFilePath isn't handled</span>
<span class="comment-copy">Nevermind find that tkinter can return the path of the file and auto convert the "\" to "/" ( <a href="http://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog" title="choosing a file in python with simple dialog">stackoverflow.com/questions/3579568/…</a> if someone is looking for it) Thanks @jean-françois Fabre</span>
<span class="comment-copy">@StevenS.  Raw strings are <i>only</i> for creating string constants in source code.  If your user is entering a filename from a GUI the string will be correct.  Your problem is probably with joining strings.  Show a <b>small</b> example of what you are <i>actually</i> trying to do instead of vague hard-coded examples that don't represent what the user is doing.</span>
<span class="comment-copy">@StevenS., there is no reason to replace backslash with slash in a Windows path, and it can potentially cause problems because there are cases in which a path <i>must</i> use backslash. Thus to the contrary you should use <code>os.path.normpath</code> to <i>ensure</i> that a path only uses backslash. Also, your aversion to Unicode on Windows seems masochistic. ANSI/OEM codepages are a deprecated legacy from DOS-based Windows -- last released as Windows ME circa 2000. Windows XP and later are based on NT, a Unicode platform.</span>
<span class="comment-copy">Note that the suggestion to use raw strings isn't an option for Unicode string literals in Python 2. Its parsing is broken, and there are no plans to ever fix it, e.g. <code>ur'C:\Users'</code> is a <code>SyntaxError</code>. Solution: upgrade to Python 3.</span>
