<div class="post-text" itemprop="text">
<p>I have the below dictionary:</p>
<pre><code>&gt;&gt;&gt; dict1={'a':1,'b':2}
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; dict1['a']
1
&gt;&gt;&gt;
</code></pre>
<p>Q: Is there a way to retrieve the value of key (in the above dictionary), using the hash value of the key?
If I print <code>'a'.__hash__</code> , I get:</p>
<pre><code>&gt;&gt;&gt; print 'a'.__hash__
&lt;method-wrapper '__hash__' of str object at 0x00000000021AA0F8&gt;
&gt;&gt;&gt;
</code></pre>
<p>Q2: Why not do a key lookup directly rather than converting the key to a hash value and then do the lookup? I read that using hash makes it faster.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to retrieve the value using hash by yourself, Python dict do that for you. Python dict use hash internally. </p>
<p>from <a href="https://docs.python.org/3/library/stdtypes.html#typesmapping" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#typesmapping</a></p>
<blockquote>
<p>A mapping object maps hashable values to arbitrary objects. Mappings
  are mutable objects. There is currently only one standard mapping
  type, the dictionary.</p>
</blockquote>
</div>
<span class="comment-copy">There is not necessary a one-to-one mapping between the hash and the key, it depends on the implementation and on the key.  Of course Python manages to do the lookup, and I suggest you download the C source and read <code>Objects/dictnotes.txt</code>  and <code>Objects/dictobject.c</code>.  Then you will probably decide it is better to let Python do it.</span>
<span class="comment-copy">i understand what you say, but i need to know if there is a way to get the value of a key(in a dict) using the hash of the key ?</span>
