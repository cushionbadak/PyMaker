<div class="post-text" itemprop="text">
<p>I have a script that emails me links to me. </p>
<p>The problem is the links arent included, instead I get:</p>
<pre><code>&lt;function &lt;lambda&gt; at 0x7f75b5fb4a60&gt;
</code></pre>
<p><strong>My script looks like:</strong></p>
<pre><code>from bs4 import BeautifulSoup
import re
import requests

ex_webdev_js_by_city = [
'http://boston.website.org/search/web',
]

ex_web_j_keywords = [['one'],['coool', 'person']]
ex_web_j_keywords = sum(ex_web_j_keywords, [])

ex_js = []

for webdev_j_for_a_city in ex_webdev_js_by_city:
    webdev_j = requests.get(webdev_j_for_a_city)
    soup = BeautifulSoup(webdev_j.text, "lxml")
    for j_keyword in ex_web_j_keywords:
        for a in soup.find_all('a', class_="result-title hdrlnk", text=re.compile(j_keyword,re.IGNORECASE)):
            #print(a.get('href'))
            ex_js.append(a.get('href'))

if ex_js:
   #email them to myself!
   import smtplib, socket
   TO = 'myemail@gmail.com'

   try:
       server = smtplib.SMTP('smtp.gmail.com', 587)
       server.starttls()
       TEXT = lambda: print(('Latest js from site:\n\n{}'*len(ex_js)).format(*ex_js))
       #Gmail Sign In
       gmail_sender = 'myemail'
       gmail_passwd = 'mypass'
       server.login(gmail_sender, gmail_passwd)
       msg = str(TEXT)
       server.sendmail(gmail_sender, gmail_sender, msg)
       print('Sent you some links!')
       server.quit()
   except socket.error as e:
       print ('error sending mail, error was {}'.format(e))
</code></pre>
<p>The error is occuring on this line (I believe):</p>
<pre><code>lambda: print(('Latest js from site:\n\n{}'*len(ex_js)).format(*ex_js))
</code></pre>
<p>It appears its printing out the <code>object details</code> in the email to me, and not the <code>value</code>.</p>
<p>Thus, what am i possibly doing wrong here?</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know why you use <code>print</code> or <code>lambda</code> anyway. If you simply wrote:</p>
<pre><code>msg = ('Latest js from site:\n\n{}'*len(ex_js)).format(*ex_js)
</code></pre>
<p>and drop the:</p>
<pre><code>msg = str(TEXT)
</code></pre>
<p>it should probably work.</p>
<p>So the <code>try</code> block should read:</p>
<pre><code>server = smtplib.SMTP('smtp.gmail.com', 587)
server.starttls()
<b>msg = ('Latest js from site:\n\n{}'*len(ex_js)).format(*ex_js)</b>
#Gmail Sign In
gmail_sender = 'myemail'
gmail_passwd = 'mypass'
server.login(gmail_sender, gmail_passwd)
<b># msg = str(TEXT)</b> !!commented out!! (only to make it explicit)
server.sendmail(gmail_sender, gmail_sender, msg)
print('Sent you some links!')
server.quit()</code></pre>
<hr/>
<p>I think however that you do not really understand what <code>lambda</code> and <code>print</code> are supposed to do. <code>print</code> is used <strong>to write data to the standard output channel</strong>, but you want to write it into an email, so you do not need to print it locally, you need somehow to store your message <strong>in memory</strong>.</p>
<p>Finally <code>lambda:...</code> is used to create an <strong>anonymous function</strong>, if you do not feed it any arguments, its usage is usually to postpone execution (for instance to achieve laziness). But here you actually <strong>need the message</strong>, so again no need to use this construct.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you say </p>
<pre><code>TEXT = lambda: print(('Latest js from site:\n\n{}'*len(ex_js)).format(*ex_js))
</code></pre>
<p>Yo are simply creating lambda function , it is not executed yet . In order to execute you need to specifically invoke it by calling <code>TEXT()</code></p>
<p>In order to fix your problem change to </p>
<pre><code>TEXT = lambda: ('Latest js from site:\n\n{}'*len(ex_js)).format(*ex_js)
</code></pre>
<p>And <code>msg = str(TEXT())</code></p>
</div>
<span class="comment-copy">First of all, the value is <code>None</code> since you "return" a <code>print</code> statement and secondly, why do you use lambda?</span>
<span class="comment-copy">The <code>lambda</code> function isn't doing anything because it is never called.</span>
<span class="comment-copy">I think you mean to comment out <code>msg=str(TEXT)</code> ?</span>
<span class="comment-copy">@Jshee: comment out or remove. Indeed, my bad... Sorry.</span>
<span class="comment-copy">This is really helpful. So, to use <code>format()</code> i dont need to call a function like <code>print()</code> before?</span>
<span class="comment-copy">@Jshee: no format is a function defined on a string (as you can see <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str.format#str.format" rel="nofollow noreferrer">here</a>), <code>print</code> has nothing to do with that. When you use it, you only <b>feed the output of <code>.format</code> to <code>print</code></b>.</span>
<span class="comment-copy">I don't think you need a lambda, this will only introduce overhead...</span>
<span class="comment-copy">You don't use <code>return</code> in <code>lambda</code> functions; the result of the expression is returned implicitly. And yeah, a <code>lambda</code> isn't needed at all in this case anyway.</span>
<span class="comment-copy">@ShadowRanger . True. Answer updated.</span>
<span class="comment-copy">@WillemVanOnsem I was trying to answer the original question. Not trying to questioning his code. And you are  absolutely correct, this scenario we don't need lambda</span>
