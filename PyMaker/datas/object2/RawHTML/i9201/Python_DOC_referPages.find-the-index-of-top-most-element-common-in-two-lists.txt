<div class="post-text" itemprop="text">
<p>Say, I have two lists </p>
<pre><code>  retrieved = ["foo", "bar", "baz", "foobar"]
  relevant = [ "foobar", "baz"]
</code></pre>
<p>What the pythonic way to find the first element present in retrieved that is also "relevant"</p>
<p>So in the example above.. since "baz" is the first relevant object retrieved. It should return 2, corresponding to the index 2 in retrieved.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>As a <code>for</code> loop</p>
<pre><code>for i, item in enumerate(retrieved):
    if item in relevant:
        print(i)
        break
</code></pre>
<p>As a generator</p>
<pre><code>print(next(i for i, item in enumerate(retrieved) if item in relevant))
</code></pre>
<p>Read more on <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a></p>
</div>
<span class="comment-copy">possible dupe of <a href="http://stackoverflow.com/questions/28948143/python-find-indices-of-the-first-match-between-two-arrays">Python: Find indices of the <i>first</i> match between two arrays</a></span>
<span class="comment-copy">Can we use numpy array to solve this? Just wondering</span>
<span class="comment-copy">Also, I want to return index rather than the element itself.</span>
<span class="comment-copy">@Fraz in that case, we'll use enumerate, and just capture the index.  Give me a second and I'll update it.  Are you asking if this would be faster using numpy arrays?  I doubt it.  If you're really looking for speed, converting <code>relevant</code> to a hashed container like a <code>set</code> is your best bet.</span>
<span class="comment-copy">But it wouldnt work if there is not relevant item retrieved.. But i think.. i got the idea. thannks</span>
