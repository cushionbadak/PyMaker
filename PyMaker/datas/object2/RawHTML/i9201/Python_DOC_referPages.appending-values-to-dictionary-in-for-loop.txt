<div class="post-text" itemprop="text">
<p>Just cant get this working. Any help is highly appreciated.</p>
<pre><code>dict = {}
for n in n1:
    if # condition #
        dict[key] = []
        dict[key].append(value)
        print dict
</code></pre>
<p>This is printing something like this</p>
<blockquote>
<p>{'k1':['v1']} and {'k1':['v2']}</p>
</blockquote>
<p>I have few other nested for loops down this code, which will be using this dict and the dict has only the latest key value pairs i.e. <code>{'k1':'v2'}</code></p>
<p>I am looking for something like <code>{'k1':['v1','v2']}</code></p>
<p>Please suggest a solution without using <code>setdefault</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Give <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">Collections.defaultdict</a> a try:</p>
<pre><code>#example below is in the docs.
from Collections import defaultdict

s = [('yellow', 1), ('blue', 2), ('yellow', 3), ('blue', 4), ('red', 1)]
d = defaultdict(list)
for k, v in s:
    d[k].append(v)

sorted(d.items())
[('blue', [2, 4]), ('red', [1]), ('yellow', [1, 3])]
</code></pre>
<p>the <code>d = defaultdict(list)</code> line is setting the keys values to be an empty dictionary by default and appending the value to the list in the loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem with the code is it creates an empty list for 'key' each time the for loop runs. You need just one improvement in the code:</p>
<pre><code>dict = {}
dict[key] = []
for n in n1:
   if # condition #
       dict[key].append(value)
       print dict
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also check key existence before assign.</p>
<pre><code>dict = {}
for n in n1:
    if # condition #
        if key not in dict:
            dict[key] = []
        dict[key].append(value)
        print dict
</code></pre>
</div>
<span class="comment-copy">When I try <code>d = defaultdict(list)</code> in my dictionary, it gives error in the line <code>for k, v in s</code>, saying <code>ValueError: not enough values to unpack (expected 2, got 0)</code>. My dictionary looks like <code>{'branch': {'NumberOfTimes': 4, 'Score': 34},  'transfer': {'NumberOfTimes': 1, 'Score': 5},  'deal': {'NumberOfTimes': 2, 'Score': 10}, ... }</code>. Would you know what's the issue? I tried <code>d = defaultdict(dict)</code>, but that doesn't solve the issue either.</span>
<span class="comment-copy">Your outer structure is a dictionary.  Each one of the values of your keys should be of type "list". right now each or your values is a dictionary as well.  But since you have things in the list that need a order or a name I would suggest creating a type of namedTuple to store "numberOfTimes" and "Score", then creating a dd = defaultdict(my_namedtuple)</span>
