<div class="post-text" itemprop="text">
<p>I'm  a Java, C++, C programmer trying to learn Python. While playing with some code I encountered this weird behavior. I'm somewhat familiar with non statically typed languages, but can't come up with a solution or explanation to this phenomenon.</p>
<pre><code>for i in range(3):   
    div(a,b,c,list)
    #print(list)
    list = []
    #print(list)
    printABC(a,b,c)
    theInput = input("\nselect the column: a, b or c : \n")
    if "a" in theInput:         
        list = b + a + c
    elif "b" in theInput:
        list = a + b + c
    elif "c" in theInput:
        list = a + c + b
    print(list);
</code></pre>
<p>The variable or "name" <code>list</code> is a list of numbers, I'm dividing that list into three more lists (<code>a</code>, <code>b</code> and <code>c</code>). Then I clear <code>list</code> and repopulate it with a predetermined combination of (<code>a</code>, <code>b</code> and <code>c</code>). </p>
<p>In the first pass of the loop, <code>list</code> gets cleared, but by the second pass of the for loop <code>list = []</code> is making reference to another completely different variable and not clearing my <code>list</code>. </p>
<p>Does anyone have an explanation as of why this is happening?</p>
</div>
<div class="post-text" itemprop="text">
<p>Like one of the commenters already said, don't name the variables after built-ins. This Pythoncode should do the trick:</p>
<pre><code>a, b, c, = 0, 1, 2
list_1 = [0, 1, 2]
try:
    for i in range(3):   
        a, b, c, = list_1[0], list_1[1], list_1[2]
        print("a:%d, b:%d. c:%d" % (a,b,c))
        theInput = raw_input("\nselect the column: a, b or c : \n")
        if theInput.find("a") &gt; -1:         
            list_1 = [b, a, c]
        elif theInput.find("b") &gt; -1:
            list_1 = [a, b, c]
        elif theInput.find("c") &gt; -1:
            list_1 = [a, c, b]
        print(list_1)
except Exception as e:
    print(e)
</code></pre>
<p>The try/except block isn't nessesary, but it was in the code I used as a example.</p>
</div>
<span class="comment-copy">Don't name your variables the same thing as <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">built-ins</a>.</span>
<span class="comment-copy">To complement and be explicit about what @Mitch said above: you tried naming your variable <code>list</code>. Well, <code>list</code> is actually a built-in class name, and it is bad practice to rename built-ins. Try something like <code>my_list</code> or even <code>array</code>.</span>
<span class="comment-copy">yes, one variable (bad) name, different reference at each iteration.</span>
<span class="comment-copy">This works pretty much the same way it would in Java. Not the way it'd work in C++, but Java behaves pretty much the same.</span>
<span class="comment-copy">Why not keep the <code>if 'a' in theInput</code> line instead of the <code>str.find</code> method that's arguably much less intuitive?</span>
<span class="comment-copy">@not_a_robot, you right, 'if "a" in theInput' is more intuitive, like I said, I already had the similar example code ready.</span>
