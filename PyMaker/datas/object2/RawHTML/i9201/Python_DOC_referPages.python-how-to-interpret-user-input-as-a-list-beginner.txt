<div class="post-text" itemprop="text">
<p>I am trying to write a function that takes a user inputted list, and transforms it into a string that separates each value inside the list with a comma, and the last value in the list with "and". For example, the list ['cats', 'dogs', 'rabbits', 'bats'] would be transformed to: 'cats, dogs, rabbits, and bats'.
My code works if I assign a list to a variable and then pass the variable to my newString function, but if I pass a user input to my function, it will treat every character in the user input as a separate list value.</p>
<p>So my question is, how can I tell Python that I want input() to be read as a list. Is this even possible? I am very new to Python and programming in general, so Lists and Tuples is about as far as I know so far. I am learning dictionaries now. My code is printed below, thanks. </p>
<pre><code>def listToString(aList):

    newString = ''
    for i in range(len(aList) - 1):
        newString += aList[i] + ', '


    newString = newString + 'and ' + aList[-1]

    return(newString)



spam = list(input())

print(listToString(spam))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>input()</code> always gives you just a string. </p>
<p>You can analyze that string depending on how the user is supposed to enter the list.</p>
<p>For example, the user can enter it space separated like <code>'cats dogs rabbits bats'</code>. Then you do</p>
<pre><code>input_list = input().split()
print(listToString(input_list))
</code></pre>
<p>You can also split on <code>,</code> or any delimiter you like.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to read a list literal from user input, use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> to parse it:</p>
<pre><code>import ast

input_list = ast.literal_eval(input()) # or ast.literal_eval(raw_input()) on Python 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could build a list from the input and use your current working code to format it as you want.</p>
<pre><code>def get_user_input():
    my_list = []
    print('Please input one word for line, leave an empty line to finish.')
    while True:
        word = input().strip()
        if word:
            my_list.append(word)
        else:
            break
    return my_list
</code></pre>
</div>
<span class="comment-copy">This is related to numbers, but it's basically the same idea.  <a href="http://stackoverflow.com/questions/4663306/get-a-list-of-numbers-as-input-from-the-user" title="get a list of numbers as input from the user">stackoverflow.com/questions/4663306/â€¦</a></span>
<span class="comment-copy">Your statement <i>"input() always gives you just a string"</i> is true only in case of Python 3. In Python 2, it returns the type of object (based on <code>eval</code> value)</span>
<span class="comment-copy">@MoinuddinQuadri Good point! :) But Python 3 is the only Python I use, everybody else without legacy dependencies should use, newcomers should learn <i>and</i> which is tagged in the question.</span>
