<div class="post-text" itemprop="text">
<p>I am a newbie to python and I am struggling to find a better way for a problem.</p>
<p>I have a list like below:</p>
<pre><code> [(1048, u'3', u'1', ), (1048, u'03', u'00','Deleted' ), (1048, u'4', u'0', 'Deleted')]
</code></pre>
<p>In each tuple, the last attributed could be 'deleted' or 'None'. I need to check if all tuples have 'deleted' at last place. </p>
<p>How to do that.</p>
<p>I tried to do list comprehension (<a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions</a>)</p>
<pre><code>object_with_specific_attribute = [dataObj for dataObj in data if "Deleted" in dataObj[3]]
</code></pre>
<p>but it does not seem to be working in case of null data.</p>
<p>Can anybody please help?</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>all(item[-1] == "Deleted" for item in items)
</code></pre>
<p>This should return <code>True</code> if they all contain "Deleted"</p>
<p>Also all your tuples need to have at least 4 elements. If not, you will get an index error</p>
<p>EDIT: As it stands in the comments it is better to go with <code>item[-1]</code> as you stated: "last element"</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>all(len(tup) == 3 or tup[-1] in [None, "Deleted"] for tup in data)
</code></pre>
<p>From your example it is inferable some tuples have no 4th item, so I added the <code>len</code> check.</p>
</div>
<div class="post-text" itemprop="text">
<p>Below line would work.</p>
<pre><code>object_with_specific_attribute = [tup for tup in data if tup[-1] == 'Deleted']
</code></pre>
</div>
<span class="comment-copy">How about checking every tuple -1 position and check if that is Deleted or not</span>
<span class="comment-copy">Shashank, instead of suggesting a partial solution in a comment, please suggest a full answer as answer instead.</span>
<span class="comment-copy">It is unclear whether last item could be None (as None value) or missing from the tuple (no value at all).</span>
<span class="comment-copy">@Jérôme based on the example provided above it appears that it would be entirely missing. I assume the process that writes those tuples out is not the best..</span>
<span class="comment-copy">@Jerome: both cases are possible. ie: value also can be none or element itself cannot be present.</span>
<span class="comment-copy">OP says <i>last item</i> so it might be better to go with index <code>[-1]</code> in case some of the tuples for some reason have more or less elements.</span>
<span class="comment-copy">I think by "None", the OP means the 4th element is absent. <code>(1048, u'3', u'1', )[-1]</code> is <code>1</code> so this solution does not handle this @Ev.Kounis</span>
<span class="comment-copy">@Chris_Rands True but i still think it is better than <code>[3]</code>. A separate check has to be made for the absence or the 4th value. Some of the other solutions check the lenght too. OP has not been very clear as to what the tuples might or might not look like.</span>
<span class="comment-copy">got it !! thanks.</span>
<span class="comment-copy">got it !! thanks</span>
