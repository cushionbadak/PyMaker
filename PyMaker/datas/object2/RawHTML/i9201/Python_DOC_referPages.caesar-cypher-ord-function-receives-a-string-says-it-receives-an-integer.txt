<div class="post-text" itemprop="text">
<p>I'm supposed to be creating a Caesar-cypher function. It was recommended I use the built-in ord() and chr() functions to help me do this(from the textbook my course is using). That may or may not be the best way(definitely not from what I've looked up), but it's what they want you to do.</p>
<p>My problem is that in a for loop when I send the placeholder variable into the ord() function I get an error that it expected a string of length 1, but receives an integer instead. I put a print function just before it to confirm that the variable, c in this case, has the value of 'i' but it seems to fail regardless.</p>
<p>Here is the function I created:</p>
<pre><code>def rotate_word(word, num):
    count = 0
    newWord = ''
    while count &lt; len(word):
        for c in word:
            print(c)
            newWord += chr(((ord(c)) - (ord(num) -1)))
            count += 1
    print(newWord)
</code></pre>
<p>And this is the error I receive:</p>
<pre><code>rotate_word('ibm', -1)
i
Traceback (most recent call last):
  File "&lt;pyshell#95&gt;", line 1, in &lt;module&gt;
    rotate_word('ibm', -1)
  File "&lt;pyshell#94&gt;", line 7, in rotate_word
    newWord += chr(((ord(c)) - (ord(num) -1)))
TypeError: ord() expected string of length 1, but int found
</code></pre>
<p>This error occurs for integers other than -1 as well. To be fair, I'm not totally certain if the code itself does what I want(I've been stuck trying to figure this part out and I don't see the point in ensuring the rest works if this part does not).</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#ord" rel="nofollow noreferrer"><code>ord</code></a> takes <code>string</code> as a parameter and returns <code>int</code>:</p>
<blockquote>
<p>Given a string representing one Unicode character, return an integer representing the Unicode code point of that character. For example, ord('a') returns the integer 97 and ord('â‚¬') (Euro sign) returns 8364. This is the inverse of chr().</p>
</blockquote>
<p>In your code you're passing <code>int</code> instead which gives you the error you see on command line. You don't need to convert <code>num</code> to anything. Just convert the character to number, add the rotation amount and convert the result back to character again with <code>chr</code>:</p>
<pre><code>def rotate_word(word, num):
    count = 0
    newWord = ''
    while count &lt; len(word):
        for c in word:
            newWord += chr(ord(c) + num)
            count += 1
    print(newWord)

rotate_word('ibm', -1)  # 'hal'
</code></pre>
<p>Note that above doesn't handle the overflow/underflow cases where <code>'a'</code> is rotated left or <code>'z'</code> is rotated right.</p>
</div>
<span class="comment-copy">dont't use <code>ord(num)</code>, just <code>num</code> :)</span>
<span class="comment-copy">Thank you for your answer, and the endnote. I realized the int problem in the second call of ord but didn't think about the over/under-flow. Thank you.</span>
