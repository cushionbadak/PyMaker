<div class="post-text" itemprop="text">
<p>My goal is to generate functions dynamically and then save them in a file. For e.g, in my current attempt, On calling <code>create_file</code></p>
<pre><code>import io


def create_file():
    nested_func = make_nested_func()
    write_to_file([nested_func, a_root_func], '/tmp/code.py')


def a_root_func(x):
    pass


def make_nested_func():
    def a_nested_func(b, k):
        return b, k

    return a_nested_func


def write_to_file(code_list, path):
    import inspect
    code_str_list = [inspect.getsource(c) for c in code_list]
    with open(path, 'w') as ofh:
        for c in code_str_list:
            fh = io.StringIO(c)
            ofh.writelines(fh.readlines())
            ofh.write('\n')


create_file()
</code></pre>
<p>The output I want is('/tmp/code.py'):</p>
<pre><code>def a_nested_func(b, k):
        return b, k

def a_root_func(x):
    pass
</code></pre>
<p>The output I get is('/tmp/code.py'):</p>
<pre><code>    def a_nested_func(b, k):
        return b, k

def a_root_func(x):
    pass
</code></pre>
<p><code>a_nested_func</code> is indented. How can I reduce the indentation? I can do <code>lstrip</code> etc. but I wonder if there is a better way.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/textwrap.html#textwrap.dedent" rel="nofollow noreferrer"><code>textwrap.dedent()</code> function</a> to remove the common leading whitespace:</p>
<pre><code>import inspect
from textwrap import dedent

def write_to_file(code_list, path):
    code_str_list = [inspect.getsource(c) for c in code_list]
    with open(path, 'w') as ofh:
        for c in code_str_list:
            dedented = dedent(c)
            ofh.write(dedented + '\n')
</code></pre>
<p>Note that there is no need for a <code>StringIO(string).readlines()</code> dance here.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's a function in built-in module, <a href="https://docs.python.org/2/library/textwrap.html#textwrap.dedent" rel="nofollow noreferrer"><code>textwrap.dedent</code></a>.</p>
<pre><code>import textwrap
s = """
   abc
     def
"""
s2 = """
abc
  def
"""
assert textwrap.dedent(s) == s2
</code></pre>
</div>
<span class="comment-copy">Find the least-indented line (likely the first will suffice). Find the amount of indentation in it. Cut the same amount from all lines before writing them.</span>
<span class="comment-copy">Thanks, wish I could check your answer too!</span>
