<div class="post-text" itemprop="text">
<p>I need to extract two numbers inside a string. They can look like this:</p>
<pre><code>(0,0)
(122,158)
(1,22)
(883,8)
etc...
</code></pre>
<p>So I want to get the first number before the comma and the number after the comma and store them in variables. I can get the first number like this:</p>
<pre><code>myString.split(',')[0][1:])
</code></pre>
<p>However, I can't figure out how to get the next number.</p>
<hr/>
<blockquote>
<p>Thanks for the help everyone!</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>It should work with something like</p>
<pre><code>myVar.split(',')[0][1:] # = 122 for the string in the second line
myVar.split(',')[1][:-1] # = 158 for the string in the second line
</code></pre>
<p>This should be the easiest way to do this</p>
</div>
<div class="post-text" itemprop="text">
<p>You could get rid of the parentheses, split the string, and convert each item to an int:</p>
<pre><code>a, b = [int(x) for x in s[1:-1].split(',')]
</code></pre>
<p>Of course, if you <strong>absolutely sure</strong> about the string's format, and don't care about security, you could just <code>eval</code> the string:</p>
<pre><code>a, b = eval(s)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">ast.literal_eval()</a> to convert your string into a tuple. This will also take care about extra whitespace like <code>'( 123, 158)'</code>.</p>
<pre><code>&gt;&gt;&gt; from ast import literal_eval
&gt;&gt;&gt; tup = literal_eval('(122,158)')
&gt;&gt;&gt; tup[0]
122
&gt;&gt;&gt; tup[1]
158
</code></pre>
<p>Or just:</p>
<pre><code>&gt;&gt;&gt; first, second = literal_eval('(122,158)')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Multi assignment, <a href="https://docs.python.org/2/library/string.html#string.lstrip" rel="nofollow noreferrer">stripping</a> the parentheses and splitting will do:</p>
<pre><code>a, b = myString.lstrip('(').rstrip(')').split(',')
# a, b = map(int, (a, b))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>myVar.split(',')[1][:-1])
</code></pre>
<p>will get you the second number</p>
</div>
<div class="post-text" itemprop="text">
<p>The <em>simplest</em> one-liner would be </p>
<pre><code>a, b = (myString[1:-1].split(',')[0], myString[1:-1].split(',')[1])
</code></pre>
<p>Gets rid of the parentheses, then splits at the comma.</p>
</div>
<span class="comment-copy">Use Regular Expressions <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">docs.python.org/2/library/re.html</a></span>
<span class="comment-copy">In your posted code <code>[0]</code> refers to the first number. So just do <code>[1]</code> to get the second number.</span>
<span class="comment-copy">That also prints the parenthesis. I just want the numbers.</span>
<span class="comment-copy">@m.o <code>myString.split(',')[1][:-1]</code> just about the same as your own code! You were close.</span>
<span class="comment-copy">Isn't it easier to first remove the parentheses, then do the split?</span>
<span class="comment-copy">@Posh_Pumpkin I realised this as soon as i posted, my fingers were faster than my brain :-)</span>
