<div class="post-text" itemprop="text">
<p>I am using Python3 and have just learned how to use <code>mypy</code>. I was reading the documentation (espcially <a href="http://mypy.readthedocs.io/en/latest/kinds_of_types.html" rel="nofollow noreferrer">this</a> part seemed relevant), but couldn't find any answers to my question:</p>
<p>Is is possible to define some shortcuts for types?</p>
<p>Example:</p>
<p>Rather than writing</p>
<pre><code>from typing import List


def f(x: List[int]) -&gt; List[int]:
    return x[1:]
</code></pre>
<p>I would like to have</p>
<pre><code>from typing import List

sequence = DefineTypeShortcut(List[int])

def f(x: sequence) -&gt; sequence:
    return x[1:]
</code></pre>
<p>Just to clarify, I do not want to define a new class <code>Sequence</code>, I just want more easily readable signatures of functions.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you're looking for <a href="https://docs.python.org/3/library/typing.html#type-aliases" rel="nofollow noreferrer"><code>Type Aliases</code></a>. Fortunately they are pretty straight forward, by assigning to a new name the name can act as a hint for the type. </p>
<p>The example supplied in the docs provides an example of exactly the thing you're after:</p>
<pre><code>from typing import List
Vector = List[float]

def scale(scalar: float, vector: Vector) -&gt; Vector:
    return [scalar * num for num in vector]
</code></pre>
</div>
<span class="comment-copy">I can accept the answer in 12 minutes.</span>
<span class="comment-copy">@Antoine there's zero need to do it then. Take your time with accepting answers on Stack Overflow, let as many eyes see the question and offer alternative solutions if they think it is required :-)</span>
