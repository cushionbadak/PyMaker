<div class="post-text" itemprop="text">
<p>I am converting some date time, but I got a problem. the date time is</p>
<pre><code>my_time = "2012-03-18 14:50:36.90"
</code></pre>
<p>my code to convert this date time is </p>
<pre><code>import time
import datetime
import calendar

time_con = datetime.datetime.strptime(my_time,'%Y-%m-%d %H:%M:%S.%f')
final_time = calendar.timegm(time_con.timetuple())
</code></pre>
<p>when print, i got</p>
<pre><code>&gt;&gt; print "time_con", time_con

datetime.datetime(2012, 3, 18, 14, 50, 36, 900000)
</code></pre>
<p>when I print final_time , I got</p>
<pre><code>&gt;&gt; print "final_time", final_time
1332082236
</code></pre>
<p>I am unable to get milliseconds, and I don,t know how to deal with them properly because I need those milliseconds in my date time. I search SO but no clue. but in Can help would be great and it will save my day. thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>This is easy to solve. Since you have not the milliseconds but microseconds stored in <code>time_con</code>, we can do <code>time_con.microsecond*1000</code> to get milliseconds.</p>
<pre><code>import time
import datetime
import calendar

my_time = "2012-03-18 14:50:36.90"
time_con = datetime.datetime.strptime(my_time,'%Y-%m-%d %H:%M:%S.%f')
microsecs =  time_con.microsecond
final_time = calendar.timegm(time_con.timetuple())*1000000 + millisecs
# final_time is in microseconds

# To print in seconds
# print(final_time/1000000)

print(final_time)
</code></pre>
<p>Results in </p>
<pre><code>1332082236900
</code></pre>
<p>Which is hopefully what you want. Hope this helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3 you can do</p>
<pre><code>import datetime

my_time = "2012-03-18 14:50:36.90"
time_con = datetime.datetime.strptime(my_time,'%Y-%m-%d %H:%M:%S.%f')
final_time = time_con.replace(tzinfo=datetime.timezone.utc).timestamp()
# 1332082236.9
</code></pre>
<p><a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp" rel="nofollow noreferrer">Here is the link to <code>datetime.datetime.timestamp</code>'s documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Please read the <a href="https://docs.python.org/2/library/calendar.html#calendar.timegm" rel="nofollow noreferrer">docs</a> for <code>calendar.timegm</code> (emphasis mine):</p>
<blockquote>
<p><code>calendar.timegm(tuple)</code></p>
<p>An unrelated but handy function that takes a time tuple such as returned by the <code>gmtime()</code> function in the time module, and returns the corresponding <strong>Unix timestamp value</strong>, assuming an epoch of 1970, and the POSIX encoding.</p>
</blockquote>
<p>The <a href="https://en.m.wikipedia.org/wiki/Unix_time" rel="nofollow noreferrer">UNIX timestamp</a> is <em>defined</em> to be a non-negative integer. Well, Wikipedia says that it can be floating-point, but anyways, UNIX systems normally represent it with a variable of C type <code>time_t</code>, which is whole non-negative. An <em>integer</em>, because it's meant to represent the number of seconds passed since the beginning of the UNIX epoch. </p>
<p>So, it clearly cannot represent milliseconds because it's defined to be a whole number.</p>
</div>
<span class="comment-copy"><code>dat-time</code> is an invalid variable name in Python.</span>
<span class="comment-copy">@linusg  I change variable name. thanx a lot , but problem still exists.</span>
<span class="comment-copy"><code>my-time</code>, too the dash is not allowed.</span>
<span class="comment-copy">Look, this will never ever run and therefore not work. <code>final-time</code> has ... a dash in it (see <a href="http://stackoverflow.com/questions/2064329/why-python-does-not-allow-hyphens" title="why python does not allow hyphens">stackoverflow.com/questions/2064329/â€¦</a> if still don't believe)</span>
<span class="comment-copy">See my answer below, which is different from ForceBru and shows it is indeed possible.</span>
<span class="comment-copy">i will implement and will come back in a moment. thanx alott</span>
<span class="comment-copy">thanx a lot for the help. its my extremely silly mistake. %f mean micro. so I was talking about microseconds. can you change it accordingly so that I accept your answer. because your solutions works perfectly fine for milliseconds.</span>
<span class="comment-copy">Yeah, wait a sec...</span>
<span class="comment-copy">thanx a lot for the help and precious time.</span>
<span class="comment-copy">thanx , i will come back in a moment.</span>
<span class="comment-copy">I am using python 2+.  but thanx a lot. I learn this new thing for python 3.</span>
<span class="comment-copy">Right! I noticed that a bit late, well, here it stays for later reference.</span>
