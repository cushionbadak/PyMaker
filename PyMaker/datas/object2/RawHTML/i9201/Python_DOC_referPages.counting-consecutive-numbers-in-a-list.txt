<div class="post-text" itemprop="text">
<p>Sorry if this has already been asked; I couldn't find a question that was similar enough to mine to where I could develop a satisfactory answer.</p>
<p>I'm pretty new to python (3.4.3). I am trying to add elements to an empty list using a for loop by comparing the elements of another list to the next element in that second list (terrible explanation; I apologize).</p>
<p>Here is my code so far:</p>
<pre><code>random_list=[1,4,5,6,7,9,19,21,22,23,24]

def count_consec(random_list):
    count=1
    consec_list=[]
    for i in listrand:
        if listrand[i] == listrand[i+1]+1:
            count+=1
        else:
            list.append(count)
    return consec_list
</code></pre>
<p>Basically, I want to add to list[] values that represent how the length of consecutive blocks of numbers in random_list[].</p>
<p>I expect my output in this case to look like this:</p>
<pre><code>[1,4,1,1,4]
</code></pre>
<p>As in, there is one singular number, followed by 4 consecutive numbers, followed by one singular number, followed by one singular number, followed by 4 consecutive numbers.</p>
<p>I've tried this many different ways, and I have gotten the function to build a list, but all the elements are 1's...</p>
<p>Thanks for your help!</p>
</div>
<div class="post-text" itemprop="text">
<p>You could take an approach like this: </p>
<pre><code>def countlist(random_list):
    retlist = []
    # Avoid IndexError for  random_list[i+1]
    for i in range(len(random_list) - 1):
        # Check if the next number is consecutive
        if random_list[i] + 1 == random_list[i+1]:
            count += 1
        else:
            # If it is not append the count and restart counting
            retlist.append(count)
            count = 1
    # Since we stopped the loop one early append the last count
    retlist.append(count)
    return retlist
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are a few problems with your code, among others undefined variables, or using an element <code>i</code> from the list as the index of that element, but also you will get an index error for the last element, and you never add the last count to the result list.</p>
<p>Instead, I'd suggest using the <code>zip(lst, lst[1:])</code> recipe for iterating pairs of elements from the list, and using <code>consec[-1]</code> to access and modify the counts already in the list.</p>
<pre><code>def count_consec(lst):
    consec = [1]
    for x, y in zip(lst, lst[1:]):
        if x == y - 1:
            consec[-1] += 1
        else:
            consec.append(1)
    return consec

random_list=[1,4,5,6,7,9,19,21,22,23,24]
print(count_consec(random_list))
# [1, 4, 1, 1, 4]
</code></pre>
<p>Alternatively, you could subtract the index from each element. This way, successive consecutive elements will end up being the <em>same</em> element. Now, you can just use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> to group and count those elements.</p>
<pre><code>&gt;&gt;&gt; random_list=[1,4,5,6,7,9,19,21,22,23,24]
&gt;&gt;&gt; [e-i for i, e in enumerate(random_list)]
[1, 3, 3, 3, 3, 4, 13, 14, 14, 14, 14]
&gt;&gt;&gt; [sum(1 for _ in g) for _, g in itertools.groupby(_)]
[1, 4, 1, 1, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following code fixes it up. You were iterating over the elements of the list itself instead of the counter you were referencing.</p>
<pre><code>random_list=[1,4,5,6,7,9,19,21,22,23,24]

def count_consec(listrand):
    count=1
    consec_list=[]
    for i in range(len(listrand[:-1])):
        if listrand[i]+1 == listrand[i+1]:
            count+=1
        else:
            consec_list.append(count)
            count=1

    # Account for the last iteration
    consec_list.append(count)     

    return consec_list

print(count_consec(random_list))      
</code></pre>
<p>Returns this:</p>
<pre><code>[1, 4, 1, 1, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's my version</p>
<p>Say you had a list of numbers, which you want to loop through and count the consecutive streaks:</p>
<pre><code>list_of_nums = [4,5,7,8,2,1,3,5,7,6,8,9,9,9,2,2]
</code></pre>
<p>You could do something like this:</p>
<pre><code>streak_count = []
counter = 1
for i in range(len(list_of_nums)):
    if i != (len(list_of_nums) - 1):
        diff = list_of_nums[i+1] - list_of_nums[i]
        if diff == 1:
            counter += 1
        else:
            streak_count.append(counter)
            counter = 1
    else:
        streak_count.append(counter)
</code></pre>
</div>
<span class="comment-copy"><code>listrand</code> is undefined</span>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation.  <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a> applies here.  We cannot effectively help you until you post your MCVE code and accurately describe the problem. Your given code doesn't compile.  After fixing the parameter name (random_list to listrand), it dies for improper use of <b>append</b>.  This is not a MCVE.</span>
<span class="comment-copy">I'm still confused about the output =(</span>
<span class="comment-copy">@DmitryPolonskiy, the output is determined by the relationship between the numbers in the list: 1: <code>1</code>, then <code>4, 5, 6, 7</code> are 4 consecutive numbers, so a <code>4</code>, then <code>9</code> which is not consecutive to the previous or next number in the list, so it's a <code>1</code>: "singluar", same for <code>19</code>: not consecutive to other numbers in the list: "singular", so add another <code>1</code>, then <code>21, 22, 23, 24</code> are <code>4</code> consecutive numbers: hence <code>[1, 4, 1, 1, 4]</code>. nevermind, see the answer below for clarity. :)</span>
<span class="comment-copy">@downshift I get it now, thanks for the clarity</span>
<span class="comment-copy">consider adding some comments, especially on the last <code>retlist.append(count)</code>. It may be obvious to you, but the OP said he's beginner :)</span>
<span class="comment-copy">Thanks! Other than the initial: count = 0 assignment, this worked perfectly!</span>
