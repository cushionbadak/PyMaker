<div class="post-text" itemprop="text">
<p>Quite a stupid question but...</p>
<pre><code>def gcd(a, b):
    if a &lt; b:
        a, b = b, a
    if a == 0:
        return b
    elif b == 0:
        return a
    return gcd(b, a % b)
</code></pre>
<p>So when there's no <code>return</code> at the end of the function, why would the code return <code>None</code>? When it's called recursively and <code>a</code> or <code>b</code> is eventually equal to <code>0</code>, it meets the <code>if</code> condition right? Then it should return the non-zero value.</p>
</div>
<div class="post-text" itemprop="text">
<p>If neither <code>a</code> nor <code>b</code> is equal to zero, neither one of the first two return statements will be executed.</p>
<p>Without the final return, the flow of control reaches the end of the function without hitting a return statement, so the <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">default value of <code>None</code></a> is returned.</p>
</div>
<span class="comment-copy">The intermediate steps won't return a value then.</span>
<span class="comment-copy">This function should never return <code>None</code>. What were the values of <code>a</code> and <code>b</code> that made you observe a <code>None</code>?</span>
<span class="comment-copy">@DYZ The function as written above won't return None, but I think he's saying that when he omits the last return (making his last line simply <code>gcd(b, a % b)</code>) <i>then</i> it returns <code>None</code>, and he's asking why.</span>
<span class="comment-copy">@Dan Sounds like a plausible interpretation.</span>
