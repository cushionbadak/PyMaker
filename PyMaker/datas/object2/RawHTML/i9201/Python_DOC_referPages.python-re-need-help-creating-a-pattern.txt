<div class="post-text" itemprop="text">
<p>Quick silly question...
I am trying to create a pattern to match the following type of string <code>'12/06/06 08:15'</code>.</p>
<p>I tried <code>r'/d{1-2}///d{1-2}///d{1-2} /d{1-2}:/d{1-2}'</code> and <code>'/d{1-2}///d{1-2}///d{1-2} /d{1-2}:/d{1-2}'</code> but obviously it doesnt work... Can anyone give me a leg up?</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work for the pattern shown:</p>
<pre><code>r'\d{2}/\d{2}/\d{2} \d{2}:\d{2}'
</code></pre>
<p>But this really should be done with a datetime lib and just handle exceptions for non-matching lines.</p>
<ul>
<li><p>Python documentation for <code>strptime</code>: <a href="https://docs.python.org/2/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer" title="datetime.datetime.strptime">Python 2</a>, <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer">Python 3</a></p></li>
<li><p>Python documentation for <code>strftime</code> format mask: <a href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer" title="strftime-and-strptime-behavior">Python 2</a>, <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">Python 3</a></p></li>
<li><p><a href="http://strftime.org/" rel="nofollow noreferrer">Good strftime reference</a></p></li>
</ul>
</div>
<span class="comment-copy">Why not use a datetime lib? See <a href="http://stackoverflow.com/a/466376/868044">doc links on this answer</a></span>
<span class="comment-copy">@Dan because some of the strings i want to test don't correspond to that format. That's precisely the goal, i.e. separate strings that match from those which don't</span>
<span class="comment-copy"><code>/</code> is not the same as `\`.</span>
<span class="comment-copy"><code>-</code> is not the same as <code>,</code>.</span>
<span class="comment-copy">But if you're using pandas (which was not stated in your original question), you can use something like <code>pd.to_datetime(df.Timestamp, format='%m/%d/%Y %H:%M', errors='raise')</code> to raise an exception then try parsing again with <code>to_datetime()</code> using <code>format='%d/%m/%Y %H:%M'</code>. You can experiment with <code>errors='coerce'</code> and <code>ignore</code> also. <a href="http://pandas.pydata.org/pandas-docs/version/0.19.2/generated/pandas.to_datetime.html" rel="nofollow noreferrer">See the docs</a>. Note that pandas use strftime to that documentation is applicable to the format keyword argument</span>
<span class="comment-copy">Sorry, I was using grep for testing, and forward slashes do mean something in grep. I suppose this is not true of Python.</span>
<span class="comment-copy">@Dan Hmm ok. Yeah its true i was using the pandas <code>to_datetime()</code> and not the <code>strptime</code> or <code>strftime</code>. I will look into that. Thx!</span>
<span class="comment-copy">@Dan regexr.com uses your browser's JavaScript regex engine (JavaScript uses slashes to delimit regex literals in its syntax, but they're not part of the regex per se; they work like <code>"</code> does for strings). It doesn't have anything to do with grep.</span>
<span class="comment-copy">Testing of regular expresses: <a href="https://regex101.com/" rel="nofollow noreferrer">regex101.com</a></span>
<span class="comment-copy">@Dan Yeah I love it. The python code generator sucks - it generates 30 lines where 3 would do. However, the rest of the site is top notch.</span>
