<div class="post-text" itemprop="text">
<p>I'm trying to pull data from aws that is base64 encoded. I need to pipe the output through base64 -D to make it readable. When I run the code without the piped base64 argument it returns the output no problem, however, the output is not readable: </p>
<pre><code>import subprocess
import shlex
aws_read_report = "aws iam get-credential-report --query 'Content' --output text"
args_read = shlex.split(aws_read_report)
proc_read = subprocess.check_output(args_read)
print proc_read
</code></pre>
<p>However, when I add the | base64 -D argument as so: </p>
<pre><code>aws_read_report = "aws iam get-credential-report --query 'Content' --output text | base64 -D"
</code></pre>
<p>I get the following error: </p>
<pre><code>usage: aws [options] &lt;command&gt; &lt;subcommand&gt; [&lt;subcommand&gt; ...] [parameters]
</code></pre>
<p>To see help text, you can run:</p>
<pre><code>  aws help
  aws &lt;command&gt; help
  aws &lt;command&gt; &lt;subcommand&gt; help

Unknown options: base64, -D, |
Traceback (most recent call last):
  File "cmd_aws.py", line 12, in &lt;module&gt;
    proc_read = subprocess.check_output(args_read)
  File "/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py", line 574, in check_output
    raise CalledProcessError(retcode, cmd, output=output)
subprocess.CalledProcessError: Command '['aws', 'iam', 'get-credential-report', '--query', 'Content', '--output', 'text', '|', 'base64', '-D']' returned non-zero exit status 255
</code></pre>
<p>Also as a side note when I run the command straight from the command line I get the results I want: </p>
<pre><code>aws iam get-credential-report --query 'Content' --output text | base64 -D
</code></pre>
<p>It seems as though the '|' is throwing something off. </p>
</div>
<div class="post-text" itemprop="text">
<p>To make the pipe work, you need to pass <code>shell=True</code> to the <code>subprocess.check_output()</code> call: <a href="https://docs.python.org/2/library/subprocess.html#subprocess.check_output" rel="nofollow noreferrer">docs</a>.</p>
<p>Alternatively, you could do your own base64 decoding: <a href="https://docs.python.org/2/library/base64.html" rel="nofollow noreferrer">https://docs.python.org/2/library/base64.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I/O-redirection is a shell feature.  While it's nice and secure to provide a sequence of arguments for execution to subprocess.check_output(), you want something else here.  So don't split your command line and let the shell do what it's supposed to do like:</p>
<p><code>proc_read = subprocess.check_output("aws iam get-credential-report --query 'Content' --output text | base64 -D", shell=True)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If it's Linux , at least, I think there are security problems with shell=True.  anyways, here's another link to help you make this work out: 
<a href="https://docs.python.org/3/library/subprocess.html#replacing-shell-pipeline" rel="nofollow noreferrer">https://docs.python.org/3/library/subprocess.html#replacing-shell-pipeline</a></p>
</div>
<span class="comment-copy">redirection/piping is made by shell/bash so you have to use <code>shell=True</code> or you had to use one <code>suprocess</code> to get data from <code>aws</code> and later second <code>subprocess</code> to use <code>base64</code> - and you had to manually get data from first <code>suprocess</code> and send to second <code>subprocess</code>.</span>
<span class="comment-copy">Nice, that gave me the results I was looking for.</span>
