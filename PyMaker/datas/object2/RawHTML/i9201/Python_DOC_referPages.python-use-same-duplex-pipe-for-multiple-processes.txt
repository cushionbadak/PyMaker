<div class="post-text" itemprop="text">
<p>I have two processes: proc_a, proc_b and I want the <strong>return</strong> of <strong>proc_a</strong> to be equal to the value of <code>data_new</code>.
Is this possible or do I have to use multiple Pipes? </p>
<pre><code>if __name__ == '__main__':

    parent, child = Pipe()
    p1 = Process(target=proc_a, args=(parent, child,))
    p2 = Process(target=proc_b, args=(parent, child,))

    p1.start()
    p2.start()
    p1.join()
    p2.join()
</code></pre>
<p>And on <code>proc_a()</code> and <code>proc_b()</code>:</p>
<pre><code>def proc_a(parent, child):
        data = somedata
        child.send(data)
        result = parent.recv()

        return result


def proc_b(parent, child):
    data = parent.recv()
    data_new = data + 1 # Sample change 
    child.send(data_new)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can solve it with only one pipe, as pipes are two way (duplex).
But what you can't do is to send both ends of the pipes to both processes.</p>
<p>See this <a href="https://docs.python.org/3/library/multiprocessing.html#exchanging-objects-between-processes" rel="nofollow noreferrer">section of the docs</a>:</p>
<blockquote>
<p>Note that data in a pipe may become corrupted if two processes (or threads) try to read from or write to the same end of the pipe at the same time. Of course there is no risk of corruption from processes using different ends of the pipe at the same time.</p>
</blockquote>
<p>This code works and prints <code>2</code>:</p>
<pre><code>from multiprocessing import Pipe, Process

def proc_a(pipe):
    data = 1
    pipe.send(data)
    result = pipe.recv()
    print(result)

def proc_b(pipe):
    data = pipe.recv()
    data_new = data + 1 # Sample change 
    pipe.send(data_new)

if __name__ == '__main__':
    parent, child = Pipe()
    p1 = Process(target=proc_a, args=(parent,))
    p2 = Process(target=proc_b, args=(child,))

    p1.start()
    p2.start()
    p1.join()
    p2.join()
</code></pre>
<p>Note that <code>return</code> of <code>proc_a</code> does nothing, if you need to consume the return value in the parent process have a look at <a href="https://stackoverflow.com/questions/10415028/how-can-i-recover-the-return-value-of-a-function-passed-to-multiprocessing-proce">this question</a></p>
</div>
