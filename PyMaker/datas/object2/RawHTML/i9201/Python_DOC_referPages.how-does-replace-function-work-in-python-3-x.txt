<div class="post-text" itemprop="text">
<p>I am new to Python, I read in a book that strings are immutable. Then how does <code>replace()</code> function work in Python? Does it slice up to the part where it finds the text that we want to replace and add the text with new string and then add the remaining text which is after the text we want to replace.</p>
</div>
<div class="post-text" itemprop="text">
<p>The documentation for <code>str.replace</code> says:</p>
<blockquote>
<p>Return a copy of the string with all occurrences of substring old replaced by new.</p>
</blockquote>
<p>From <a href="https://docs.python.org/3.6/library/stdtypes.html#text-sequence-type-str" rel="nofollow noreferrer">here</a>:</p>
<blockquote>
<p>There is also no mutable string type, but <code>str.join()</code> or <a href="https://docs.python.org/3.6/library/io.html#io.StringIO" rel="nofollow noreferrer"><code>io.StringIO</code></a> can be used to efficiently construct strings from multiple fragments.</p>
</blockquote>
<p>However, it looks like, at least in the standard implementation, <code>replace</code> is implemented in <a href="http://svn.python.org/view/python/trunk/Objects/stringobject.c?view=markup" rel="nofollow noreferrer">native code</a>.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>str.replace</code></a>, as documented, returns a new string; it doesn't mutate the old one.</span>
<span class="comment-copy">String methods return a new string object, they do not alter the original.</span>
