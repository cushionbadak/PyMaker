<div class="post-text" itemprop="text">
<p>I'm new to python. Currently, I'm trying to implement a program to download large no of files from the remote server(http/https). The no. of files are large(&gt;1000). To handle this I need to implement the code in a way so it can utilize the OS resource in a efficient and optimal way. To handle this the way which I took is multiprocessing.</p>
<p>Here, is my implementation : </p>
<pre><code>import urllib,urlparse
import urllib2
import os
import multiprocessing
from multiprocessing.dummy import Pool as ThreadPool
from itertools import repeat

def download_file((url, d_dir)) :
    #logger.debug('Download URL -&gt; ' + url)

    try :
        with open(d_dir + os.sep + urlparse.urlparse(url).path, 'wb') as tfile :
            tfile.write(urllib2.urlopen(url).read())

    except :
        logger.error('There was a some problem while downloading file, ' + url)


def create_pool(d_links, d_dir) :
    pool = multiprocessing.Pool(processes=10)
    pool.map(download_file, zip(d_links, repeat(d_dir)))

def extract_urls() :
    # some logic to extract urls from files
    links = {‘url1’, ‘url2’, ‘url3’, ‘url4’, ‘url5’, …} 

    #created  process pool
    create_pool(links, l_dir)
</code></pre>
<p>If I run this code, it gives me normal output. But I think I didn't implemented the multiprocessing correctly. Can you please give some input to optimize this piece of code?</p>
<p>Thanks in advance.</p>
<p>Regards,
Ashish</p>
</div>
<div class="post-text" itemprop="text">
<p>You may do this</p>
<pre><code>import multiprocessing as mp
with mp.Pool(4) as pool:
    pool.map_async(download_file, zip(d_links, repeat(d_dir)))
</code></pre>
<p>Reference: <a href="https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.pool" rel="nofollow noreferrer">https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.pool</a></p>
<p>Note that <em>map_async</em> does the job parallel, but <em>map</em> blocks the process until the called function returns</p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same problem in python 2.7. The issue is that the <code>multiprocessing</code> library don't support more than one argument in <code>pool.map(func,arg)</code>. As a solution i have used the multiprocessing library from <code>pathos</code>.
So your function could be as follow</p>
<pre><code>from pathos.multiprocessing import ProcessingPool as Pool
from itertools import izip

p = Pool(self.nbr_processes) 
        try:
            p.map(download_file, izip(d_links, repeat(d_dir)))
            p.close()
            p.join()

        except Exception as f:
            logging.error(f)
</code></pre>
</div>
<span class="comment-copy">'Traceback (most recent call last):   File "FileScanner.py", line 192, in create_pool     create_threadpool(d_links, d_dir)   File "FileScanner.py", line 195, in create_threadpool     with multiprocessing.Pool(4) as pool: AttributeError: <b>exit</b>'  Above error I got If I implement as per your suggestion</span>
<span class="comment-copy">@AshishMisra sorry but I don't get the error. I've edited my answer twice, maybe try it another time</span>
<span class="comment-copy">@MatthiasGlich : Thank you.  Actually you are right but my python version on server is  2.7 and your suggestion is from python 3.</span>
