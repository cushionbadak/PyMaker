<div class="post-text" itemprop="text">
<p>I have a python script that uses keras and tensorflow libraries, which are incredibly time consuming to set up on every machines. Is it possible to export my python script and the keras and tensorflow libraries into a file like java projects --&gt; .jar so that I don't need to set up the libraries every time I moved to a new machine?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 includes <a href="https://docs.python.org/3/library/zipapp.html" rel="nofollow noreferrer">a tool called <code>zipapp</code></a> that allows you to build single archives out of Python projects, bundling in all (or some) dependencies. <strong>The tool is only bundled with Python 3, but the generated archive will work with any version of Python &gt;= 2.6</strong> you are targeting.</p>
<p>Supposing you have all your source files in <code>src/</code>, including the mentioned Tensor Flow library:</p>
<pre><code>$ python3 -m zipapp -o yourapp.pyz -m "your.entry.point.module:main_function" src/
</code></pre>
<p>The <code>-m</code> flag allows you to specify a module and a function inside it, separed with a <code>:</code>, that will be executed when you run the <code>.pyz</code> file. About running it, it's just a matter of:</p>
<pre><code>$ python ./yourapp.pyz
</code></pre>
<p>Again, you will need Python &gt;= 2.6 in order for this to work.</p>
<p>If you are targeting unix platforms, you might also add a shebang:</p>
<pre><code>$ echo "#! /usr/bin/python" &gt; yourapp2.pyz
$ cat yourapp.pyz &gt;&gt; yourapp2.pyz
$ chmod +x yourapp2.pyz
</code></pre>
<p>so that you can run the file as:</p>
<pre><code>$ ./yourapp2.pyz
</code></pre>
<p>As a side note, a <code>.pyz</code> is nothing more than a <code>.zip</code> file. You might create one yourself without <code>zipapp</code>, just include a <code>__main__.py</code> file at top level. That will be the entry point of your bundle.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not file, but a folder. Use virtualenv (<a href="https://virtualenv.pypa.io/en/stable/" rel="nofollow noreferrer">https://virtualenv.pypa.io/en/stable/</a>). You can specify a python version and it will install it in the folder:</p>
<pre><code>virtualenv -p /usr/bin/python2.6 &lt;path/to/new/virtualenv/&gt;
</code></pre>
<p>You can then use pip to install packages and modules for that specific environment and then zip that folder up and move it around.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is related to deploying python applications in general
this isn't trivial, especially for complex projects, but if the only issue is handling library installation the common solution is:</p>
<p>include in you project a text file (typically requirements.txt) that includes the libraries and versions you need </p>
<p>you can use </p>
<pre><code>pip freeze &gt; requirements.txt
</code></pre>
<p>but you should probably remove libraries that were installed in the past but not actually used</p>
<p>on the target machine run:</p>
<pre><code>pip install -r requirements.txt
</code></pre>
<p>using a virtual env for setting up the environment is recommended, but using a virtual env from one machine and copying it as is to a different one isn't very safe or scalable (will only work with same os, same python version, and same directory structure)</p>
</div>
<span class="comment-copy"><code>.jar</code> is normal <code>.zip</code> file.</span>
<span class="comment-copy">@furas I think you are saying <code>.tar</code>?</span>
<span class="comment-copy">@BingGan, no it's actually a <code>zip</code> file.</span>
<span class="comment-copy">no, <code>.zip</code> - you can change extension to <code>.zip</code> and uncompress</span>
<span class="comment-copy">The easiest way is to setup a virtual environment and pack that up. The problem is, python is not java, it does not run its code in a VM. So if you have different platforms, they will require different builds of TensorFlow, so your one packed virtua environment wouldn't work. If you are talking about moving between multiple computers with the same OS though this would work.</span>
<span class="comment-copy">Thank you for this! Very convenient when setting up environments on different computers</span>
