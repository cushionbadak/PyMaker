<div class="post-text" itemprop="text">
<p>(See <a href="https://stackoverflow.com/questions/16675865/difference-between-python3-and-python3m-executables">this question</a> for what the <code>m</code> means)</p>
<p>I need to construct the include path of <code>.virtualenvs/foo/include/pythonX.Ym</code> to compile something (i.e. <code>-I...</code>) against the virtualenv. I <a href="https://stackoverflow.com/questions/1093322/how-do-i-check-what-version-of-python-is-running-my-script">can get</a> the <code>X.Y</code> using <code>sys.version</code> or <code>sys.final_version</code>.</p>
<p>How do I get the <code>m</code> to construct the include path?</p>
<p>EDIT: I tried <code>sys.executable</code> but that is pointing to <code>.../foo/bin/python</code>, which is unhelpful for this.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <em>easiest</em> way to get the include path is to use the <a href="https://docs.python.org/3/library/sysconfig.html#sysconfig.get_path" rel="nofollow noreferrer"><code>sysconfig.get_path()</code> function</a>:</p>
<pre><code>import sysconfig

include_path = sysconfig.get_path('include')
</code></pre>
<p>This path is adjusted for virtualenvs already. For scripting purposes outside of Python, you can either print the path directly:</p>
<pre class="lang-sh prettyprint-override"><code>$ python -c 'import sysconfig; print(sysconfig.get_path("include"))'
</code></pre>
<p>or get <em>all</em> <code>sysconfig</code> data by running the module as a script:</p>
<pre><code>$ python -m sysconfig
</code></pre>
<p>then parse the output that dumps to stdout.</p>
<p>Other than that, if you only want the executable name (with the <code>m</code> included), you can get that from the <a href="https://docs.python.org/3/library/sys.html#sys.executable" rel="nofollow noreferrer"><code>sys.executable</code> variable</a>; this includes the <code>m</code> suffix:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.executable
'/usr/bin/python3.5m'
</code></pre>
<p>As of Python 3.2, you can also use the <a href="https://docs.python.org/3/library/sys.html#sys.abiflags" rel="nofollow noreferrer"><code>sys.abiflags</code> variable</a>; it is set to <code>m</code> in this case:</p>
<pre><code>&gt;&gt;&gt; sys.abiflags
'm'
</code></pre>
<p>Also see <a href="https://www.python.org/dev/peps/pep-3149/" rel="nofollow noreferrer">PEP 3149</a>.</p>
<p>For earlier Python versions, the various flags that influence the suffixes are available still via the aforementioned <code>sysconfig</code> module as configuration variables:</p>
<pre><code>pymalloc = bool(sysconfig.get_config_var('WITH_PYMALLOC'))
pydebug = bool(sysconfig.get_config_var('WITH_PYDEBUG'))
wideunicode = bool(sysconfig.get_config_var('WITH_WIDE_UNICODE'))
</code></pre>
<p>Note that ubuntu merely compiles multiple binaries and adjusts the executable name to reflect the configuration option chosen; on other systems the ABI flags are not necessarily reflected in the executable name.</p>
</div>
<span class="comment-copy">Interesting. I am not getting the same as you when using a virtualenv (updated question)</span>
<span class="comment-copy">@J.C.Leit√£o: I'll fire up a vm when I get at the office.</span>
<span class="comment-copy"><code>sysconfig.get_path('include')</code> is definitely the answer to the question. :)</span>
<span class="comment-copy">shouldn't it be <a href="https://docs.python.org/2/library/sysconfig.html#sysconfig.get_config_var" rel="nofollow noreferrer"><code>sysconfig.get_config_var</code></a> instead of <code>sysconfig.get_config</code>?</span>
<span class="comment-copy">@hoefling: yup, thanks for the headsup.</span>
