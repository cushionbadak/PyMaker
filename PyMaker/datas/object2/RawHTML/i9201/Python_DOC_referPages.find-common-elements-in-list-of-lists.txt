<div class="post-text" itemprop="text">
<p>I have a list of lists of words called wordlist as follows:</p>
<pre><code>[['dog', 'cat', 'sheep', 'rabbit', 'kiss', 'time'], ['cow', 'pig', 'bomb', 'cat', 'sheep', 'cake', 'boy', 'new']]
</code></pre>
<p>I want to find the common elements in all the sub-lists. Hence, my desired output of the above list should be:</p>
<pre><code>['cat', 'sheep']
</code></pre>
<p>In order to achieve this, I created sets using the below code:</p>
<pre><code>sets = set(tuple(row) for row in wordlist)
</code></pre>
<p>The set look like this:</p>
<pre><code>{('cow', 'pig', 'bomb', 'cat', 'sheep', 'cake', 'boy', 'new'), ('dog', 'cat', 'sheep', 'rabbit', 'kiss', 'time')}
</code></pre>
<p>There can be any number of words per list, and there can be any number of lists. So I can end up with uneven sets of any number. I know I can compare two sets using the intersection methods, but how do I compare across multiple sets to return only the common items?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using <a href="https://docs.python.org/3/library/functions.html#func-set" rel="nofollow noreferrer"><code>set</code></a> incorrectly. You may use it like:</p>
<pre><code>my_list = [['dog', 'cat', 'sheep', 'rabbit', 'kiss', 'time'], ['cow', 'pig', 'bomb', 'cat', 'sheep', 'cake', 'boy', 'new']]

# convert list of list to list of sets
my_sets = map(set, my_list)

# perform intersection on each set present in list
common_items = set.intersection(*my_sets)
</code></pre>
<p>This could be written in one line as:</p>
<pre><code>common_items = set.intersection(*map(set, my_list))
</code></pre>
<p>The value hold by <code>common_items</code> will be:</p>
<pre><code>{'sheep', 'cat'}
</code></pre>
<p>Here is the solution giving same result with the slightly <strong>performance efficient approach</strong>:</p>
<pre><code>#                              v no need to type-cast sub-lists to `set` here
set(my_list[0]).intersection(*my_list[1:])

# OR,
# set(my_list[0]).intersection(*my_list)
# as intersection of set with itself returns the same set
</code></pre>
<p>Since <code>set.intersection</code> accepts all the iterables, there is no need to type-cast all the sub-lists to set.</p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way is to use <a href="https://docs.python.org/2.7/library/functions.html#map" rel="nofollow noreferrer"><em>map()</em></a> to convert the inputs to sets, and then use <a href="https://docs.python.org/2.7/library/stdtypes.html#set.intersection" rel="nofollow noreferrer"><em>set.intersection</em></a> to find their commonalities:</p>
<pre><code>&gt;&gt;&gt; data = [['dog', 'cat', 'sheep', 'rabbit', 'kiss', 'time'],
            ['cow', 'pig', 'bomb', 'cat', 'sheep', 'cake', 'boy', 'new']]
&gt;&gt;&gt; set.intersection(*map(set, data))
{'sheep', 'cat'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this way in order to get common elements:</p>
<pre><code>wordlist ={('cow', 'pig', 'bomb', 'cat', 'sheep', 'cake', 'boy', 'new'), ('dog', 'cat', 'sheep', 'rabbit', 'kiss', 'time')}&lt;/i&gt;
for word in wordlist:
   for cm in word:
        if(cm in cm):
            print(cm)
</code></pre>
</div>
