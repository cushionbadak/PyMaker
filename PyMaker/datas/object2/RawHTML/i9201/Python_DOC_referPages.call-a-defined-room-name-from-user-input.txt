<div class="post-text" itemprop="text">
<p>I can't seem to find any good answer to my problem. I'm trying to create a Maintenance Mode for my game and I want the user to be able to input a room name from the main menu and be able to spawn to that room. Here's the code. I have a module set up as</p>
<pre><code>Class MM():
    def Room_Name():
        pass
</code></pre>
<p>This is just to pass through obviously, then in the game I have this.</p>
<pre><code>def MaintenanceMode():
    MM.Room_Name()
</code></pre>
<p>Now this code works like a charm, I can put a room name inside the brackets of MM.Room_Name() and I spawn to the room no problem. What I want is a more User Friendly version.</p>
<p>Ok so I have it setup in the main menu of the game to type a code which enters Maintenance Mode then check in MM.Room_Name() for the room to call. I would like it to instead, when I type the code at the main menu, to ask for a room name, and spawn there. I can't seem to get this to work and I've searched like crazy to find a solution. I've tried</p>
<pre><code>ask = input("Which room do you want to go?&gt;: ")
MM.Room_Name(ask())
</code></pre>
<p>But I can't get it to work, I just get str not callable, and I tried several other solutions to the problem, even more complex versions of what I did and still nothing working. I've tried to avoid asking here as I'm afraid the question has already been answered, but I've been stuck for weeks and I'm kinda desperate. And yes I tried</p>
<pre><code>ask = str(input("Which room do you want to go?&gt;: "))
</code></pre>
<p>But I'm still having no luck. If at all possible I would like to avoid making a list of all the rooms in my game and making a check list. But if that's my only solution, I guess it wouldn't hurt. I just figured since I can call the room name in MM.Room_Name(Escape()) that there must be a way for user input to go in there and be callable. Any suggestions guys? I would really appreciate it.</p>
<p>vEdit 1v</p>
<p>So code simulates what I want. Run this code and type 164 at the main menu to enter Maintenance Mode, it will spawn to the room Bedroom() that is in MM.Room_Name(Bedroom()). What I want is for the user to enter the password 164, and it will ask the player what room you want to spawn in, and somehow call that room from the user input. Don't try any other options, just type 164 at Menu and it will spawn to Bedroom(). So I need to figure out how I can turn user input into a callable function that way players trying Maintenance Mode doesn't have to edit the room in MM.Room_Name() every time they want a different room, instead, when player enters Maintenance Mode, the game asks for room name, and spawn there. I included a Bedroom and a Livingroom for you guys to test. Just switch between them in MM.Room_Name() and see how it works when you enter Maintenance Mode. And hopefully this gives you an idea of how I want the user input version to work.</p>
<pre><code>import time
class MM():
    def Room_Name():
        pass
def Question():
    return input("You entered the Room, What do you do?&gt;: ")

def space():
    print(" ")

def pass1():
    while True:
        space()
        return input("**Press Enter**")
        break

def what():
    space()
    print("I didn't understand that.")
    space()
def MaintenanceMode():
    print("Check MaintenanceMode() Block On Line 49 To Change Room's!")
    print("V  V  V  V  V  V  V  V  V  V  V  V  V  V  V  V  V  V  V  V")
    space()
    MM.Room_Name(Bedroom())
def Menu():
    space()
    space()
    print("**The Hunter**")
    space()
    print("Press 1: To Start The Game")
    space()
    print("Press 2: For Story")
    space()
    print("Press 3: To Quit")
    space()
    Choice_input0()

def Choice_input0():
    while True:
        def Choice():
            return input("What do you want to do?&gt;: ")
        Player = Choice()
        if Player == '1':
            p.next_source()
            time.sleep(1)
            Startgame()
        elif Player == '2':
            Storyinfo()
        elif Player == '3':
            print('Exit Okay!')
        elif Player == '164':
            space()
            print('Maintenance Mode Active!')
            MaintenanceMode()
        else:
            what()
def Bedroom():
    while True:
        def Choice():
            Question()
        Player = Question()
        if Player in ['look around']:
            space()
            print("You see the Bedroom")
            space()
        else:
            what()

def Livingroom():
    while True:
        def Choice():
            Question()
        Player = Question()
        if Player in ['look around']:
            space()
            print("You see the Livingroom")
            space()
        else:
            what()

Menu()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>After assigning <code>ask</code>, you should not attempt to call it as a function since it is a string. So</p>
<pre><code>MM.Room_Name(ask)
</code></pre>
<p>without the parantheses on <code>ask()</code> might work better.</p>
</div>
<span class="comment-copy">You also need to add the instance variable to you method, typically called <code>self</code>. That would be <code>def room_name(self, name): pass</code>. You also need to declare it as taking the name parameter.</span>
<span class="comment-copy">I can't seem to figure out how to make a player defined variable become self and callable from MM.Room_Name(). I guess I'll just have to create a list system. But thank you for your help anyways, I do appreciate it and I'll keep trying. I just don't understand when I create self, its saying self isn't defined.</span>
<span class="comment-copy">Try reading the Python <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">tutorial</a>.</span>
<span class="comment-copy">Well doing it that way says TypeError: Room_Name() takes 0 positional arguments but 1 was given.  And doing it as ask() says str not callable</span>
<span class="comment-copy">"'str' object is not callable" is what you would expect from calling a string as function. Compare the output of <code>"hello"()</code>. You are passing an argument to a function defined without arguments, as <code>def MaintenanceMode()</code>, so what do you want to happen? Can you show the rest of your code?</span>
<span class="comment-copy">Ok I added an edit to my Question with your request, I created a demo code for you guys to try.</span>
<span class="comment-copy">Is the user input option only possible with a list? Is what I'm wondering but because you can call the room itself in the MM.Room_Name() why can't we have a variable ask the player and it would equal a callable room name?</span>
