<div class="post-text" itemprop="text">
<p>I need to create a ORDERED list that contains a series of sub-lists. But I'm not sure how to iterate through known variables.</p>
<p>Here's an example. Let's say I have the following sub-lists:</p>
<pre><code>list_0 = [0, 1, 2]
list_1 = [3, 4, 5, 6]
list_2 = [7, 8, 9]
</code></pre>
<p>I'm trying to append the lists to a larger list <code>list_all</code>:</p>
<pre><code>list_all = [ [0, 1, 2], [3, 4, 5, 6], [7, 8, 9] ]
</code></pre>
<p>So I'm trying to iterate through the variable names but I'm not sure this is possible?</p>
<pre><code>list_all = [list_{num}.format(num=i) for i in range(3)]
# SyntaxError
</code></pre>
<p>This seems to work if <code>list_all</code> contains strings of the known variables but I don't need the variables obviously, I need the data within those variables.</p>
<pre><code>list_all = ['list_{num}'.format(num=i) for i in range(3)]
print list_all
# ['list_0', 'list_1', 'list_2']
</code></pre>
<p>So I guess the question is how can I dynamically create and execute python variable names? I need to do this because the number of lists changes with each use case.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you really, <em>really</em> need this, you could get the variables and their values from the <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer"><code>globals()</code></a> or <a href="https://docs.python.org/3/library/functions.html#locals" rel="nofollow noreferrer"><code>locals()</code></a> dictionaries.</p>
<pre><code>&gt;&gt;&gt; list_0 = [0, 1, 2]
&gt;&gt;&gt; list_1 = [3, 4, 5, 6]
&gt;&gt;&gt; list_2 = [7, 8, 9]
&gt;&gt;&gt; [globals()["list_{}".format(i)] for i in range(3)]
[[0, 1, 2], [3, 4, 5, 6], [7, 8, 9]]
</code></pre>
<p>However, almost certainly it would be a better idea to store the individual lists as part of <code>list_all</code> to begin with, and access them as <code>list_all[0]</code> etc. instead of <code>list_0</code>:</p>
<pre><code>&gt;&gt;&gt; list_all = []
&gt;&gt;&gt; list_all.append([0, 1, 2])
&gt;&gt;&gt; list_all.append([3, 4, 5, 6])
&gt;&gt;&gt; list_all.append([7, 8, 9])
&gt;&gt;&gt; list_all[0]
[0, 1, 2]
</code></pre>
</div>
<span class="comment-copy">What you should do is use a list (or other data structure) instead of naming your variables "foo_#".  Then you can very simply and naturally iterate through your list to do what you want.</span>
<span class="comment-copy">don't create variables <code>list_0</code>, <code>list_1</code> but list or dictionary <code>list[0]</code>, <code>list[1]</code></span>
<span class="comment-copy">Great answer thanks! I also figured out <code>eval()</code> works in this case too</span>
