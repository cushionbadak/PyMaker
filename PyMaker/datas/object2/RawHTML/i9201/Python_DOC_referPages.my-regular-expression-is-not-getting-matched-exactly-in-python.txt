<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3994493/checking-whole-string-with-a-regex">Checking whole string with a regex</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>Here's my code...</p>
<pre><code>import re

l=["chap","chap11","chapa","chapb","chapc","chap3","chap2","chapf","chap4","chap55","chapf","chap33","chap54","chapgk"]
for i in l:
    matchobj=re.match(r'chap[0-9]',i,re.M|re.I)
    if matchobj:
        print(i)
</code></pre>
<p>as I have mentioned chap[0-9].. so it should only those strings which follow only one integer after chap</p>
<p>so I should get the following output..</p>
<p>chap3
chap2
chap4</p>
<p>but I am getting the following output...
chap11
chap3
chap2
chap4
chap55
chap33
chap54</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>match</code></a> matches your pattern at the beginning of the string. Append e.g. end of string <code>'$'</code> or word boundary <code>'\b'</code> to your pattern:</p>
<pre><code>matchobj=re.match(r'chap\d$',i,re.M|re.I)
# \d (digit) is shortcut for [0-9]
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer">docs</a> on <code>re.match</code>:</p>
<blockquote>
<p>If zero or more characters at the beginning of string match the regular expression pattern, return a corresponding MatchObject instance.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You should add a dollar sign to the end of your regex expression. The dollar ($) means the end of the string, and for future reference, the carat (^) signifies the beginning.</p>
<pre><code>import re

l=["chap","chap11","chapa","chapb","chapc","chap3","chap2","chapf","chap4","chap55","chapf","chap33","chap54","chapgk"]
for i in l:
    matchobj=re.match(r'chap[0-9]$',i,re.M|re.I)
    if matchobj:
        print(i)
</code></pre>
<p>Output </p>
<pre><code>chap3
chap2
chap4
</code></pre>
</div>
<span class="comment-copy">Add a word boundary <code>chap[0-9]\b</code></span>
<span class="comment-copy">You can simplify number range by using <code>\d</code>.</span>
<span class="comment-copy">@Niitaku I added this as it shortens the pattern and usually makes no semantic difference. However, <code>\d</code> can match more characters than <code>[0-9]</code></span>
<span class="comment-copy">But it should match only 1 integer right after chap...here why it isn't?</span>
