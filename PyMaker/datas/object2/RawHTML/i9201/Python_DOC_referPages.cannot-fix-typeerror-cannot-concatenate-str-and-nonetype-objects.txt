<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6130768/return-none-if-dictionary-key-is-not-available">Return None if Dictionary key is not available</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>I tried few solved questions on stackoverflow but couldn't make it work. Can someone kindly help me to fix this. I am using Flask for one of my project and this is the error I am getting. Following is the code and traceback.</p>
<p>The code is related to line 12 in sqlutils.py.</p>
<pre><code>import hashlib
import os
import oursql
import uuid
from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from mainapp import app

app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql+oursql://'+os.environ.get('DB_USR') \
                                        + ':' + os.environ.get('DB_PASSWD')+'@'\
                                        + os.environ.get('DB_HOST') + '/school_new'
db = SQLAlchemy(app)
</code></pre>
<p>Traceback:</p>
<pre><code>Traceback (most recent call last):
  File "run.py", line 3, in &lt;module&gt;
    from mainapp import app
  File "/home/osboxes/school/mainapp-web/mainapp/__init__.py", line 85, in &lt;module&gt;
    import views
  File "/home/osboxes/school/mainapp-web/mainapp/views.py", line 8, in &lt;module&gt;
    from mainapp.students.availability_students import add_availability, delete_availability, get_availabilities_by_username, \
  File "/home/osboxes/school/mainapp-web/mainapp/students/availability_students.py", line 3, in &lt;module&gt;
    from .sqlutils import build_where, build_set, get_connection
  File "/home/osboxes/school/mainapp-web/mainapp/students/sqlutils.py", line 12, in &lt;module&gt;
    + os.environ.get('DB_HOST') + '/school_new'
TypeError: cannot concatenate 'str' and 'NoneType' objects
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to provide some sensible defaults for when the environment doesn't contain your settings:</p>
<pre><code>DB_HOST = os.environ.get('DB_HOST', 'localhost')
DB_USR = os.envrion.get('DB_USR', 'root')
DB_PASSWD = os.environ.get('DB_PASSWD', 'sekret')

DB_URL = 'mysql+oursql://{}:{}@{}/school_new'

app.config['SQLALCHEMY_DATABASE_URI'] = DB_URL.format(DB_USR, DB_PASSWD, DB_HOST)
</code></pre>
<p>Or raise an error if critical settings are not provided:</p>
<pre><code>DB_HOST = os.environ.get('DB_HOST')
DB_USR = os.environ.get('DB_USR')
DB_PASSWD = os.environ.get('DB_PASSWD')

if not all([DB_HOST, DB_USR, DB_PASSWD]):
   raise Exception('Missing Database Environment Variables')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To debug try:</p>
<pre><code>app.config['SQLALCHEMY_DATABASE_URI'] = \
    'mysql+oursql://' + os.environ.get('DB_USR','NO_USER') \
    + ':' + os.environ.get('DB_PASSWD', 'NOPASSWD')+'@' \
    + os.environ.get('DB_HOST', 'NO_HOST') + '/school_new'
</code></pre>
<p>And log/print <code>app.config['SQLALCHEMY_DATABASE_URI']</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>As others have mentioned, <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer">using <code>.get()</code> on a dictionary will result in a <code>None</code> if the value does not exist</a>:</p>
<blockquote>
<p><strong>get</strong>(key[, default])</p>
<p>Return the value for <em>key</em> if <em>key</em> is in the dictionary, else <em>default</em>. If <em>default</em> is not given, it defaults to <code>None</code>, so that this method never raises a <a href="https://docs.python.org/3/library/exceptions.html#KeyError" rel="nofollow noreferrer"><code>KeyError</code></a>.</p>
</blockquote>
<p>It's a dictionary, so you could even do things like <code>os.environ['DB_HOST']</code> instead of using <code>.get()</code>. Why? Because then you'd get an error on startup if the value didn't exist! Which might be nifty in something so critical to your application. :)</p>
<p>Okay, so apparently <code>os.environ.get('DB_HOST')</code> in your code has returned <code>None</code>. Why is that?</p>
<p><a href="https://docs.python.org/3/library/os.html#os.environ" rel="nofollow noreferrer"><code>os.environ</code></a> gives you access to the operating system's environment variables from the shell. Apparently, the variable <code>DB_HOST</code> hasn't been set anywhere!</p>
<p>To solve your problem, you'll have to set the environment variable for <code>DB_HOST</code> in your OS, or else provide the information in some other way. Personally, I like passing these values in as command-line arguments via <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a>, but that's up to you!</p>
<hr/>
<p>In case you really want to use the OS's environment, I'll give you an example of setting a variable in bash (my shell). You'd have to look up parallel instructions for other shells.</p>
<p>From the bash command line:</p>
<pre><code>$ export TEST_VAL="My hovercraft is full of eels."
$ python
(...)
&gt;&gt;&gt; import os
&gt;&gt;&gt; os.environ['TEST_VAL']
'My hovercraft is full of eels.'
</code></pre>
<p>Note that use of <code>os.environ</code> in Python cannot <em>set</em> a new value for this variable outside of its own interactions. That is to say:</p>
<pre><code>&gt;&gt;&gt; os.environ['TEST_VAL'] = "new value"
&gt;&gt;&gt; exit()
$ echo $TEST_VAL
My hovercraft is full of eels.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When the key you request the value of doesn't exist in the dictionary, <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer">.get()</a> returns <code>None</code>.</p>
<p>So, given the error you're getting, it appears that there is no <code>'DB_HOST'</code> in <code>os.environ</code>.</p>
<p>If there's some default value (<code>'localhost'</code> perhaps?) that makes sense for you to use in such cases, you can add it as the second parameter in your call to <code>.get()</code>, and then that value will be returned rather than <code>None</code> whenever the key doesn't exist.</p>
<pre><code>os.environ.get('DB_HOST', 'localhost')
</code></pre>
<p>And if it's at all possible that the other keys (<code>'DB_USR'</code> and <code>'DB_PASSWD'</code>) might not exist, you should either add appropriate default values for them, or employ some form of error handling.</p>
</div>
<span class="comment-copy">os.environ.get('DB_HOST') is probably None</span>
<span class="comment-copy">print all these: <code>os.environ.get('DB_USR'), os.environ.get('DB_PASSWD'), os.environ.get('DB_HOST')</code> 1 of them is None.</span>
<span class="comment-copy">Its not even letting me print in shell. Whenever I do it pops up error in env shell.</span>
