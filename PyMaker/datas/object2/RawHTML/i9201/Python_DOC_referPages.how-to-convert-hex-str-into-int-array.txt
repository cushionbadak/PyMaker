<div class="post-text" itemprop="text">
<p>I have strings of hex, for exemple '01ff6fee32785e366f710df10cc542B4' and I am trying to convert them (efficiently) into an int array 2 characters by 2 characters like [1,255,...].</p>
<p>I tried </p>
<pre><code>c = '8db6796fee32785e366f710df10cc542B4' 
c2=[int(x,16) for x in c]
</code></pre>
<p>but it only takes the characters one by one.
Can i do it without using a for loop (I might be wrong but if think it would be slower) ?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could <code>range(..)</code> over substrings of length 2:</p>
<pre><code>c = '8db6796fee32785e366f710df10cc' 
c2=[int(c[i:i+2],16) for i in range(0,len(c),2)]
</code></pre>
<p>So <code>i</code> iterates of the string with steps of 2 and you take a substring of length 2 from <code>i</code> to <code>i+2</code> (exclusive) with <code>c[i:i+2]</code>. These you convert by taking <code>int(..,16)</code>.</p>
<p>For your sample input it generates:</p>
<pre><code>&gt;&gt;&gt; c='8db6796fee32785e366f710df10cc'
&gt;&gt;&gt; [int(c[i:i+2],16) for i in range(0,len(c),2)]
[141, 182, 121, 111, 238, 50, 120, 94, 54, 111, 113, 13, 241, 12, 12]
</code></pre>
<p>The last element is <code>12</code> because the length of your string is odd, so it takes <code>c</code> as the last element to parse.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; c = '8db6796fee32785e366f710df10c'
&gt;&gt;&gt; [int(x) for x in bytearray.fromhex(c)]
[141, 182, 121, 111, 238, 50, 120, 94, 54, 111, 113, 13, 241, 12]
&gt;&gt;&gt; list(map(int, bytearray.fromhex(c)))
[141, 182, 121, 111, 238, 50, 120, 94, 54, 111, 113, 13, 241, 12]
</code></pre>
<p>Two relatively simple solutions, but these will error out if the string has an odd number of characters which might or might not be what you want.</p>
</div>
<span class="comment-copy">It's the whole hex number ?</span>
<span class="comment-copy">yes it's 32 characters long</span>
<span class="comment-copy">Your first example '01ff6fee32785e366f710df10cc' is 27 characters!</span>
<span class="comment-copy">Would <a href="https://docs.python.org/3/library/binascii.html#binascii.unhexlify" rel="nofollow noreferrer">binascii.unhexlify()</a> work for you?  It'll convert the 2-character sequences into binary bytes.</span>
<span class="comment-copy">Oh yes, I missed a part of it while copy pasting. Sorry</span>
<span class="comment-copy">That seems to work well, thanks !</span>
