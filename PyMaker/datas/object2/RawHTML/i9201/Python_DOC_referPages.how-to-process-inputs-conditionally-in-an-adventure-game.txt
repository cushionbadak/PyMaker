<div class="post-text" itemprop="text">
<p>OK, so I want to start an adventure game and don't know how to get the program to choose between 2 answers. </p>
<p>For example: Do you want to start? <code>input()</code>, but then I don't know how to make it chose between if the player said "no" to break and quit or if he said "yes" to continue to the next question. </p>
<p>This is my code:</p>
<pre><code>import os
import sys
import random

print("Welcome player!, we invite you to an andventure in our forests, but we warn you!, the monsters are luckng in every corner!")
print("We are going to ask you question for what you want to do and you will answer them by writing in the chat yes or no")
print("are you ready?")
a = input("yes or no?:")

# what goes next?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>IMMEDIATE PROBLEM</strong></p>
<p>In formal structured programming, you would handle this with the test that Keatinge gave you:</p>
<pre><code>if a.lower() == "yes":
    # Remainder of program
</code></pre>
<p>... and the rest of the program would be indented to make it <em>all</em> the "true" branch of the <strong>if</strong>.  In the practical world, I'd do this with the reverse logic: if the user says "no", then end the program:</p>
<pre><code>if a.lower() == "no":
    exit()

# Remainder of program
</code></pre>
<p><strong>LARGER PROBLEMS</strong></p>
<p><strong>Learning code</strong></p>
<p>You'll help yourself a lot if you read through your class materials or a Python tutorial to learn these things.  Really.  Stack Overflow is not a tutorial site; you <em>should</em> be able to look up the basics on your own.  Also, you <em>really</em> don't want to wait for us to respond to little mechanical questions.</p>
<p><strong>Designing your program</strong></p>
<p>Use whatever descriptive tools work for you: a flowchart, a story board, anything that helps you draw out what happens in what order, and what information you need to keep (variables).  If it's any help, "Learning Python the Hard Way" has a nice core for an adventure game -- and you can certainly search for "Python adventure" to get code that helps you with your own organization.</p>
<p><strong>Implementation</strong></p>
<p>You're starting correctly, but make <em>sure</em> you keep it up: code a few lines, make sure they do what you want, and don't continue until they work.  For instance, you should now code the <strong>if</strong> statement you need, and a simple message in each branch to tell you that you got there properly.  Test it out a few times, entering at least "YES", "no", and other junk.</p>
<p>That should get you started.  Most of all, have fun.  Kill a beast with your bare hands.  Steal some treasures.  Fall into a pit with spikes.  Get eaten by an angry house cat.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simple example with comments:</p>
<pre><code>while True:
    answer = input("Are you ready? [Y/n] ")

    # remove spaces and convert to lower
    answer = answer.strip().lower()

    # set default answer
    if not answer:
        answer = 'y'

    # ----

    if answer == 'y':
        print("YES")
        break # exit `while`
    elif answer == 'n':    
        print("NO")
        break # exit `while`
    else:
        print("incorrect answer")
        # it will return to question
</code></pre>
</div>
<span class="comment-copy"><code>if a.lower() == "yes":</code> If you don't know how to do this you're just going to have a bunch more questions after, read the tutorial: <a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html#if-statements</a></span>
<span class="comment-copy">Maybe you should decide what the program should do if, for example, the user answers "no"?</span>
<span class="comment-copy">in many tools short answers are prefered - <code>n</code>, <code>y</code> - and also default answer when you only press enter <code>input("Are you ready [N/y]? ")</code>  - upper <code>N</code> shows that default answer is <code>n</code> - but rest you have to do with <code>if</code> and <code>lower()</code>.</span>
