<div class="post-text" itemprop="text">
<p>i want to store multiple products list into the Buyer Model.How can i do that ??
I got this error saying <strong>can not assign query set</strong>.:</p>
<pre><code>ValueError at /shop/items/buy/now/
Cannot assign "&lt;QuerySet [&lt;Product: applewatch&gt;, &lt;Product: laptop4&gt;]&gt;":
"Buyer.product" must be a "Product" instance.   
</code></pre>
<blockquote>
<p>models.py</p>
</blockquote>
<pre><code>class Product(models.Model):
    name = models.CharField(max_length=250)
    image = models.ImageField(upload_to='products')
    seller = models.ForeignKey(User,on_delete=CASCADE)
    slug = AutoSlugField(populate_from='name')
    category = models.ForeignKey(Category,on_delete=CASCADE)
    description = models.TextField(blank=True,default="Description Field")
    brand = models.CharField(max_length=250)
    quantity = models.PositiveIntegerField(default=1)
    price = models.DecimalField(max_digits=10,default=0.0,decimal_places=2)
    shipping_fee = models.DecimalField(max_digits=10,default=0.0,decimal_places=2)
    featured = models.BooleanField(default=False)
    active = models.BooleanField(default=True)
    created = models.DateTimeField(auto_now_add=True)
    modified = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name


class Buyer(models.Model):
    full_name = models.CharField(max_length=250)
    phone = models.CharField(max_length=20)
    city = models.CharField(max_length=250,choices=city_choices)
    address = models.CharField(max_length=250,default="123Area , House#123 , Street#123")
    product = models.ForeignKey(Product,on_delete=CASCADE)

    def __str__(self):
        return self.full_name
</code></pre>
<blockquote>
<p>forms.py</p>
</blockquote>
<pre><code>class BuyerDeliveryForm(forms.ModelForm):
class Meta:
    model = Buyer
    fields = ['full_name','phone','city','address']
</code></pre>
<blockquote>
<p>views.py</p>
</blockquote>
<pre><code>def items_buy_now(request):
    if not request.user.is_authenticated:
        messages.info(request, 'You have to logged in first.')
        return redirect('%s?next=%s' % (settings.LOGIN_URL, request.path))
    sess = request.session.get("data", {"items": []})
    if request.method == "POST":
        form = BuyerDeliveryForm(request.POST)
        if form.is_valid():
            buyer = form.save(commit=False)
            buyer.product = Product.objects.filter(active=True, slug__in=sess["items"])
            buyer.save()
            return redirect('shop:payment')
    else:
        form = BuyerDeliveryForm()
    return render(request, 'shop/delivery_form.html', {'form': form})

def mycart(request):
    sess = request.session.get("data", {"items": []})
    products = Product.objects.filter(active=True, slug__in=sess["items"])
    if not products:
        return render(request,'shop/empty_cart.html')
    context = {"products": products,
               "categories": categories}
    return render(request,'shop/cart_item.html',context)
</code></pre>
<blockquote>
<p>urls.py</p>
</blockquote>
<pre><code>path('mycart/', views.mycart, name='mycart'),
path('items/buy/now/', views.items_buy_now, name='items_buy_now'),
</code></pre>
<blockquote>
<p>admins.py</p>
</blockquote>
<pre><code>admin.site.register(Product)



class BuyerAdmin(admin.ModelAdmin):
    readonly_fields = ['product']

admin.site.register(Buyer,BuyerAdmin)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to use many to many relation instead of ForeignKey in By=uyer model like this</p>
<pre><code>class Buyer(models.Model):
    full_name = models.CharField(max_length=250)
    phone = models.CharField(max_length=20)
    city = models.CharField(max_length=250,choices=city_choices)
    address = models.CharField(max_length=250,default="123Area , House#123 , Street#123")
    product = models.ManyToManyField(Product,on_delete=CASCADE)

    def __str__(self):
        return self.full_name
</code></pre>
<p>And then assign value to this field like this in views.py</p>
<pre><code>        if form.is_valid():
            buyer = form.save(commit=False)
            buyer.save()
            buyer.product.set(Product.objects.filter(active=True, slug__in=sess["items"]))
            return redirect('shop:payment')
</code></pre>
</div>
<span class="comment-copy">If you want to bind multiple products to a buyer, you should use many-to-many instead of forieign key.</span>
<span class="comment-copy">as BugHunter said you must change product in buyer model as ManyToMany field. you also can create a third model to store relation between buyer and products.</span>
<span class="comment-copy">you can use django-formset</span>
<span class="comment-copy">I changed ForeignKey to ManyToMany Field .After changing it is giving me this TypeError   Direct assignment to the forward side of a many-to-many set is prohibited. Use product.set() instead.</span>
<span class="comment-copy">I tried this now it says                                                                                        &lt;Buyer: peter&gt;" needs to have a value for field "id" before this many-to-many relationship can be used.</span>
<span class="comment-copy">You have to save buyer first. I have edited the post</span>
<span class="comment-copy">it worked.Thanks Nafees Anwar</span>
