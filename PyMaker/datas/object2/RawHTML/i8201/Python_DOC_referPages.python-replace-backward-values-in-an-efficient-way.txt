<div class="post-text" itemprop="text">
<p>Suppose I have the following <strong>string</strong> (it is NOT a dictionary)</p>
<pre><code>"RandomText...Name1: a, randomtext, Name2: b, Value:1, randomtext Name1: c, Name2: d, Value:2, Name1: e, Name2: f, Value:3, ...RandomText"
</code></pre>
<p>Which is, in your opinion, the most efficient way to look for "Value:x" where x is any number and replace <strong>only</strong> the previous Name1 with "test"?</p>
<p>For instance if x is 2 I will have in the end:</p>
<pre><code>"Randomtext...Name1: a, randomtext, Name2: b, Value:1, randomtext, Name1:test, Name2: d, Value:2, Name1: e, Name2: f, Value:3, ...RandomText"
</code></pre>
<p>They are strings and cannot be expressed as dictionarys or other python objects.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><strong><em>re.sub()</em></strong></a> function with specific regex pattern (just for your test case):</p>
<pre><code>import re

s = "RandomText...Name1: a, Name2: b, Value:1, Name1: c, Name2: d, Value:2, Name1: e, Name2: f, Value:3, ...RandomText"
x = 2
result = re.sub(r'(Name1: )[a-z](?=, Name2: [a-z]+, Value:'+ str(x) +')', '\\1test', s)

print(result)
</code></pre>
<p>The output:</p>
<pre><code>RandomText...Name1: a, Name2: b, Value:1, Name1: test, Name2: d, Value:2, Name1: e, Name2: f, Value:3, ...RandomText
</code></pre>
<hr/>
<p><code>(?=...)</code> - positive lookahead assertion, ensures that <code>Name1</code> substring is followed by <code>Name2</code> and <code>Value</code>(with needed value) substrings/attributes</p>
</div>
<span class="comment-copy">That's not a string, perhaps you are looking for a dictionary. Please do a Python tutorial</span>
<span class="comment-copy">Sounds like an <a href="http://xyproblem.info/" rel="nofollow noreferrer">XY problem</a>. Why do you want to do just that? (Replacing Name1 before a certain Value sounds very abritrary.)</span>
<span class="comment-copy">&gt;"They are strings and cannot be expressed as dictionaries or other python objects." â€“ why not?</span>
<span class="comment-copy">Because I am simplyfing the problem. In reality is not as simple as that butit could be "random text name1a randomtext name2b random random randomtext value2" where random text is anything. And there are a lot of narratives in random order</span>
<span class="comment-copy">Nice, I was writing a complex regex with lookarounds, but didn't notice that <code>Name1, Name2, Value</code> are always in the same order.</span>
<span class="comment-copy">@EricDuminil, thanks</span>
