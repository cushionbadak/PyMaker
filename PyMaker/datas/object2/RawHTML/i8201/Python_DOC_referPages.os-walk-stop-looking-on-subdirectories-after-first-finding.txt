<div class="post-text" itemprop="text">
<p>I need to get the first appearance of the repository.config files in a directory and stop looking in the subdirectories. </p>
<p>Here is my directory tree:</p>
<pre>
./WAS80/base/disk1/ad/repository.config
./WAS80/base/disk1/md/repository.config
./WAS80/base/disk2/ad/repository.config
./WAS80/base/disk3/ad/repository.config
./WAS80/base/disk4/ad/repository.config
<b>./WAS80/base/repository.config</b>
<b>./WAS80/fixpack/fp5/repository.config</b>
<b>./WAS80/fixpack_suplements/fp5/repository.config</b>
./WAS80/supplements/disk1/ad/repository.config
./WAS80/supplements/disk1/md/repository.config
./WAS80/supplements/disk2/ad/repository.config
./WAS80/supplements/disk3/ad/repository.config
./WAS80/supplements/disk4/ad/repository.config
<b>./WAS80/supplements/repository.config</b>
</pre>
<p>I need the ones in bold and stop looking in the subdirectories.</p>
<p>I started tinkering with this code, but I couldn't figure it out.</p>
<pre><code>pattern='repository.config'
path='/opt/was_binaries'

    def find_all(name, path):
            result = []
            for root, dirs, files in os.walk(path):
                    if name in files:
                            result.append(os.path.join(root, name))
                            continue

            return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this should do what you want:</p>
<pre><code>import os

res = []

for here, dirs, files in os.walk(startdir, topdown=True):
    if 'repository.config' in files:
        res.append(os.path.join(here, 'repository.config'))
        dirs[:] = []

print(res)
</code></pre>
<p>whenever you encounter a <code>'repository.config'</code> file, set <code>dirs</code> to <code>[]</code> in order to prevent <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a> from descending further into that directory tree.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, you have to make sure that <code>topdown</code> is set to <code>True</code> (this is default) so parent directories are scanned <em>before</em> child directories.</p>
<p>Create an <code>existing</code> <code>set()</code> to remember which directories you traversed when successfully found a config file.</p>
<p>Then, when you find your filename in the list:</p>
<ul>
<li>check if the directory of the file isn't a child of a directory you registered</li>
<li>if it's not, just note down the path of the file in <code>existing</code> (add <code>os.sep</code>, so you don't match substrings of directories starting with the current dirname at the same level: ex: <code>path\to\dir2</code> should be scanned even if <code>path\to\dir</code> is already in the <code>set</code>. But <code>path\to\dir\subdir</code> will be successfully filtered out).</li>
</ul>
<p>code:</p>
<pre><code>import os

existing = set()
for root,dirs,files in os.walk(path,topdown=True):
    if any(root.startswith(r) for r in existing):
        # current directory is longest and contains a previously added directory: skip
        continue
    if "repository.config" in files:
        # ok, we note down root dir (+ os.sep to avoid filtering siblings) and print the result
        existing.add(root+os.sep)
        print(os.path.join(root,"repository.config"))
</code></pre>
</div>
<span class="comment-copy">For one thing indent your code properly. Python is very space-sensitive. For another, don't start your paragraphs with "so basically".</span>
<span class="comment-copy">What does "I started tinkering with this code, but I couldn't figure it out." mean? What does it do that you don't like or understand. Please be specific. Do not reply in the comments! Edit your question to be a stand-alone problem statement please.</span>
