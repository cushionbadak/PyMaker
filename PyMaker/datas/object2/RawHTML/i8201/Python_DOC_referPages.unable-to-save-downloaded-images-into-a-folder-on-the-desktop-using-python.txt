<div class="post-text" itemprop="text">
<p>I have made a scraper which is at this moment parsing image links and saving downloaded images into python directory by default. The only thing i wanna do now is choose a folder on the desktop to save those images within but can't. Here is what I'm up to:</p>
<pre><code>import requests
import os.path
import urllib.request
from lxml import html

def Startpoint():
    url = "https://www.aliexpress.com/"
    response = requests.get(url)
    tree = html.fromstring(response.text)
    titles = tree.xpath('//div[@class="item-inner"]')
    for title in titles:
        Pics="https:" + title.xpath('.//span[@class="pic"]//img/@src')[0]
        endpoint(Pics)

def endpoint(images):
    sdir = (r'C:\Users\ar\Desktop\mth')
    testfile = urllib.request.URLopener()
    xx = testfile.retrieve(images, images.split('/')[-1])
    filename=os.path.join(sdir,xx)
    print(filename)

Startpoint()
</code></pre>
<p>Upon execution the above code throws an error showing: "join() argument must be str or bytes, not 'tuple'"</p>
</div>
<div class="post-text" itemprop="text">
<p>you can download images with <code>urllib</code> of python. You can see the official documentation of python here <a href="https://docs.python.org/2/library/urllib.html" rel="nofollow noreferrer">urllib documentation for python 2.7</a> . If you want to use python 3 then follow this documentation <a href="https://docs.python.org/3/library/urllib.html" rel="nofollow noreferrer">urllib for python 3</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use urllib.request, BytesIO from io and PIL Image.
(if you have a direct url to the image)</p>
<pre><code>from PIL import Image
from io import BytesIO
import urllib.request

def download_image(url):
    req = urllib.request.Request(url)
    response = urllib.request.urlopen(req)
    content = response.read()
    img = Image.open(BytesIO(content))
    img.filename = url
    return img
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The images are dynamic now. So, I thought to update this post:</p>
<pre><code>import os
from selenium import webdriver
import urllib.request
from lxml.html import fromstring

url = "https://www.aliexpress.com/"

def get_data(link):

    driver.get(link)
    tree = fromstring(driver.page_source)
    for title in tree.xpath('//li[@class="item"]'):
        pics = "https:" + title.xpath('.//*[contains(@class,"img-wrapper")]//img/@src')[0]
        os.chdir(r"C:\Users\WCS\Desktop\test")
        urllib.request.urlretrieve(pics, pics.split('/')[-1])

if __name__ == '__main__':
    driver = webdriver.Chrome()
    get_data(url)
    driver.quit()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>This is the code to download the html file from the web</h1>
<pre><code>import random
import urllib.request
def download(url):
   name = random.randrange(1, 1000) 
   #this is the random function to give the name to the file 
   full_name = str(name) + ".html" #compatible data type 
   urllib.request.urlretrieve(url,full_name) #main function 
   download("any url")
</code></pre>
<p>This is the code for downloading any html file from the internet just you have to provide the link in the function.</p>
<p>As in your case you have told that you have retrieved the  images links from the web page So you can change the extension from ".html" to compatible type, but the problem is that the image can be of different extension may be ".jpg" , ".png" etc. </p>
<p>So what you can do is you can match the ending of the link using if else with string matching and then assign the extension in the end. </p>
<p>Here is the example for the illustration</p>
<pre><code>import random
import urllib.request

if(link extension is ".png"): #pseudo code
     def download(url):
        name = random.randrange(1, 1000) 
        #this is the random function to give the name to the file 
        full_name = str(name) + ".png" #compatible extension with .png 
        urllib.request.urlretrieve(url,full_name) #main function 
        download("any url")
else if (link extension is ".jpg"): #pseudo code
     def download(url):
        name = random.randrange(1, 1000) 
        #this is the random function to give the name to the file 
        full_name = str(name) + ".jpg" #compatible extension with .jpg 
        urllib.request.urlretrieve(url,full_name) #main function 
        download("any url")
</code></pre>
<p><strong>You can use multiple if else for the various type of the extension.
If it helps for your situation have a Thumbs up buddy.</strong></p>
</div>
<span class="comment-copy">use wget instead to download the URL</span>
<span class="comment-copy">There are plenty of other posts on this site which answer this question <a href="http://stackoverflow.com/questions/8286352/how-to-save-an-image-locally-using-python-whose-url-address-i-already-know">example</a>.  Does this or one the others help you to formulate a solution?</span>
<span class="comment-copy">Thanks sir,  Paul Rooney for your answer. Following your provided link i could learn to save a single image but in case of more than one image i can't get any idea to name it differently moreover choosing a directory is another concern.  I've corrected my above code to be very close to what i want. Thanks.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/8286352/how-to-save-an-image-locally-using-python-whose-url-address-i-already-know">How to save an image locally using Python whose URL address I already know?</a></span>
<span class="comment-copy">@SMth80 get the original filename with <a href="https://docs.python.org/2/library/os.path.html#os.path.basename" rel="nofollow noreferrer"><b><code>os.path.basename</code></b></a> and <a href="https://docs.python.org/2/library/urlparse.html#urlparse.urlparse" rel="nofollow noreferrer"><b><code>urlparse</code></b></a>: <code>basename(urlparse(images).path)</code></span>
<span class="comment-copy">Use <code>==</code> not <code>is</code> to compare strings. See <a href="https://stackoverflow.com/questions/1504717/why-does-comparing-strings-in-python-using-either-or-is-sometimes-produce">Why does comparing strings in Python using either '==' or 'is' sometimes produce a different result?</a> (I realise you say pseudo-code)</span>
<span class="comment-copy">There's a lot of repetition just to change the file extension. Put it in a function taking the extension as a parameter.</span>
<span class="comment-copy">You can get the extension from 'Content-Type' or with <code>url.split('.')[-1]</code></span>
<span class="comment-copy">@PeterWood , Sir i am also trying to say == not is it is just a pseudo code and also for the case of the repetition same statement i want to convey but it is just a pseudo code. Thank you for adding your response</span>
