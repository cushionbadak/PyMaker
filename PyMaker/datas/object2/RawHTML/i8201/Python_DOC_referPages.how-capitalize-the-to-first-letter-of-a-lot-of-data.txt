<div class="post-text" itemprop="text">
<p>I am pretty new to Python, barely 20-25 days old, I have researched a lot and though I have found a way to capitalize (first letter), the name and address data by using the following python code , I used 'atom editor' to write the code, and  'Powershell' to check it.</p>
<p>Raw data:</p>
<pre class="lang-none prettyprint-override"><code>john deere
apt. no. 23,
9th floor, sixth avenue,
michael street, new arc,
edmonton, canada.
</code></pre>
<p>Code</p>
<pre><code>value = """john deere apt.
         no. 23, 9th floor,
         sixth avenue, michael street,
         new arc,
         edmonton,
         canada.
         """
# Convert to title case.
result = value.title()
print(result)
</code></pre>
<p>Result:</p>
<pre class="lang-none prettyprint-override"><code>John Deere
Apt. No. 23,
9th Floor, Sixth Avenue,
Michael Street, New Arc,
Edmonton, Canada.
</code></pre>
<p>Now suppose if I have to capitalize the first letters of such names &amp; addresses which are in 'Note Pad' and twenty at a time, how can I do that and how can I input the data and how can I get it back on 'Notepad' as output. I would be very grateful if anyone can guide me.</p>
<p>This is how the data appears in Notepad</p>
<ol>
<li><p> </p>
<pre><code>john deere
apt. no. 23,
9th floor, sixth avenue,
michael street, new arc,
edmonton, canada.
</code></pre></li>
<li><p> </p>
<pre><code>peter simons.
..address here.
.........
..........
</code></pre></li>
<li><p> </p>
<pre><code>florence nightingale
...........
...........
..........
</code></pre></li>
</ol>
<p>so on and so forth....</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work.</p>
<pre><code>f = open("infile.txt", "r") # change this with your file name, open your source file to read
out = open("outfile.txt", "w") # open your output file to write
for line in f: # read from input line by line
    out.write(line.title()) # write to your output line by line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't want to overwrite contents of actual file then you can write the output to a new file. However using same file, let's say file name is <code>data.txt</code>.</p>
<pre><code>with open('data.txt', 'w+') as f:
    data = f.read()
    data = data.title()
    f.write(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way to do it is to use the <a href="https://docs.python.org/3/library/fileinput.html#module-fileinput" rel="nofollow noreferrer"><code>fileinput</code></a> module. It makes it very easy to process a file <strong>in-place</strong> and will even optionally create a backup file. </p>
<p>Here's how use it to solve your problem:</p>
<pre><code>import fileinput

filename = 'addresses.txt'
backup = '.bak'  # will create backup file named 'addresses.txt.bak'

with fileinput.input(filename, inplace=True, backup=backup) as file:
    for line in file:
        print(line.title(), end='')  # end='' suppresses extra newline normally added

print('done')
</code></pre>
<p>However, using the string <code>.title()</code> method isn't always going to work correctly because it will do things like turn something like <code>"sak's 5th ave"</code> into <code>"Sak'S 5Th Ave"</code> since it recognizes words as simply any group of consecutive letters.</p>
<p>One workaround for those kind of issues is by using Python's regex (regular expression) module, named <a href="https://docs.python.org/3/library/re.html#module-re" rel="nofollow noreferrer"><code>re</code></a>, to define your own custom word pattern matching logic.</p>
<p>To illustrate how to do this, here's the previous code modified to use <code>re</code> and a custom regex pattern that will avoid the two problem cases previously mentioned:</p>
<pre><code>import re

def titlecase(s):
    return re.sub(r"\b[A-Za-z]+('[A-Za-z]+)?",
                  lambda mo: mo.group(0)[0].upper() + mo.group(0)[1:].lower(),
                  s)

filename = 'addresses.txt'
backup = '.bak'  # will create backup file named 'addresses.txt.bak'

with fileinput.input(filename, inplace=True, backup=backup) as file:
    for line in file:
        print(titlecase(line), end='')  # end='' suppresses extra newline normally added

print('done')
</code></pre>
</div>
<span class="comment-copy">Kindly mark the best answer</span>
