<div class="post-text" itemprop="text">
<p>I have a csv with some data and I want to made a dictionary in Python.</p>
<p>I do this</p>
<pre><code>with open("file.csv") as f:
    for line in f:
        dictionary= dict(x.rstrip().split(',', 1) for x in f)
print(dictionary)
</code></pre>
<p>but althougth the file is </p>
<pre><code>a,1
b,2
c,3
</code></pre>
<p>I only achieve this</p>
<pre><code>{'b': '2', 'c': '3'}
</code></pre>
<p>why is missing the first line?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>dict</code> constructor doesn't use the <code>line</code> in the <code>for</code> loop - it consumes the entire file in its constructor. That first line is ignored and when the loop comes back to the top, the file is exhausted and it exits.</p>
<pre><code>with open("file.csv") as f:
    dictionary= dict(x.rstrip().split(',', 1) for x in f)
print(dictionary)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're looping over <code>f</code> twice. First you do:</p>
<pre><code>for line in f:
</code></pre>
<p>which sets <code>line</code> to the first line of the file. Then within that loop, you use the list comprehension:</p>
<pre><code>x.rstrip().split(',', 1) for x in f
</code></pre>
<p>This reads the remaining lines of <code>f</code>, and passes the resulting list to the <code>dict()</code> constructor. But since the outer loop read the first line, it's not included in the dictionary.</p>
<p>Then it goes back to the top of the outer loop. Since the file has been read completely, that loop ends.</p>
<p>The solution, as others have pointed out, is to get rid of the outer loop.</p>
<pre><code>with open("file.csv") as f:
    dictionary= dict(x.rstrip().split(',', 1) for x in f)
print(dictionary)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to do something very complicated, you can do the same, simply with <code>csv</code> module.</p>
<pre><code>with open("file.csv", 'r') as f:            # 'r' &gt; read only
    reader = csv.reader(f, delimiter=',')   # I am not sure if delimiter is obligatory
    file = dict([x for x in reader])        # This make a list of list with reader and then it is turned into a dictionary
return file
</code></pre>
<p>For better undersanting:</p>
<pre><code>file = dict([x for x in reader]) 
</code></pre>
<p>Is the same as:</p>
<pre><code>file = []
for x in reader:
    file.append(x)
file = dict(file)
</code></pre>
<p>Or:</p>
<pre><code>file = {}
for x in reader:
    file[x[0]] = x[1]
</code></pre>
</div>
<span class="comment-copy">You are recreating the dictionary for each line in the file.  I can't imagine how you even got two dict elements out of it, either your code or your data differs from what you posted here.</span>
<span class="comment-copy">Side-note: If you're parsing CSV, perhaps use <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">the <code>csv</code> module</a>, instead of reinventing the wheel?</span>
<span class="comment-copy">@jasonharper: They exhaust the rest of the file in the first iteration of the loop (because it's consumed to construct the <code>dict</code>), so it doesn't actually recreate it.</span>
<span class="comment-copy">is there any possibility for your data file to have rows with duplicated key like <code>a, 1 ... a, 4</code>?</span>
