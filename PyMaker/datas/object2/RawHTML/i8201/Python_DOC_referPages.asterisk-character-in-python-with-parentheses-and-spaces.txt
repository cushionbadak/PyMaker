<div class="post-text" itemprop="text">
<p>I want to search for a certain string in a file that is followed by another string.</p>
<p>I have the following string:</p>
<pre><code>string = 'Hello ) world Reply ( some text ) and some Reply ( more text ) and that is ) it.'
</code></pre>
<p>and I want to have the string replaced with </p>
<pre><code>'Hello ) world some text and some more text and that is ) it.'
</code></pre>
<p>So basically, I want the <code>Reply</code> and the parentheses gone, but I want to keep whatever is inside the parentheses and I want to keep parentheses that do not follow a <code>Reply (</code>.  I have tried to use the answers provided <a href="https://stackoverflow.com/questions/20791207/using-asterix-character-as-joker-in-python-string-replacement">here</a>, but they give me trouble when I'm trying to use parentheses and spaces. I've tried to do this with the following code:</p>
<pre><code>string = 'Hello world Reply ( some text ) and some Reply ( more text ) and that is it.'
find = '* Reply ( * ) *'
replace = '* * *'
for f,r in zip(find.strip('*').split('*'), replace.strip('*').split('*')):
    string = string.replace(f,r)
print string

Hello world some text and some more text and that is it.
</code></pre>
<p>Unfortunately, this removes all parentheses. As you can imagine, nested parentheses cause problems when you only want to remove one pair of parentheses, and all closing parentheses are removed.</p>
<p>Is there a way to do this task without removing all closing parentheses? If you need any more info, please let me know.</p>
<p>Any help is greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use regular expressions for this, take a look at: <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html</a>, more specific, you want the <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">sub</a> method.</p>
<p>I think this is what you want (untested):</p>
<pre><code>import re
string = 'Hello ) world Reply ( some text ) and some Reply ( more text ) and that is ) it.'
new_string = re.sub(r"Reply \((.+?)\)",lambda a : a.group(1), string)
</code></pre>
<p>Give it a try and let me know!</p>
<p><strong>Some explanation:</strong></p>
<p>The first parameter of the sub method is the pattern we want to find and substitute, so <code>r"Reply \((.+?)\)"</code> matches the pattern you want, Reply followed by something between parenthesis, also note that we <a href="https://docs.python.org/2/howto/regex.html#grouping" rel="nofollow noreferrer">capture</a> the thing between parenthesis. Also notice the <a href="https://docs.python.org/2/howto/regex.html#greedy-versus-non-greedy" rel="nofollow noreferrer">ungreedy</a> operator (?).</p>
<p>The second parameter is a lambda function to generate what is going to replace the pattern, notice that it receives as argument the match object. So we use the captured data by returning group 1 of the match object.</p>
<p>The third parameter is the string we want to search and substitute things at.</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't know if this is what you wanted:</p>
<pre><code>def Reply(N):

    if N in range(0,len(Replies)):
        return Replies[N]

    Replies = ["some text", "more text"]

    string = "Hello ) world " + Reply(0) + " and some" + Reply(1) + "and that is ) it."

    print(string)
</code></pre>
</div>
<span class="comment-copy">If you don't know about regular expressions yet, have a look at it: <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">docs.python.org/2/library/re.html</a></span>
<span class="comment-copy">Maybe the python docs are a bit much for first meetu. Regex is everywhere, not just python so it makes sense to learn it outside of a languages context. <a href="https://www.codeproject.com/Articles/9099/The-Minute-Regex-Tutorial" rel="nofollow noreferrer">This maybe</a>.</span>
<span class="comment-copy">Thanks a bunch for the quick response! This works for me, and I was able to prevent double spaces in the resulting string by adding the spaces to <code>"Reply \( (.+?) \)"</code> at the right places. Thanks again!</span>
<span class="comment-copy">You're welcome. Also you can use <code>r"Reply \(\s*(.+?)\s*\)"</code> and it will work with or without the spaces, (it will remove all white spaces in the beginning and in the end of matched content)</span>
