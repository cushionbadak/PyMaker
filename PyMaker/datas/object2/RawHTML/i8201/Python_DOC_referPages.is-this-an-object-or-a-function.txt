<div class="post-text" itemprop="text">
<p>I'm following a tutorial on machine learning, and learning python at the same time. There is a part of code which I don't understand:</p>
<pre><code>&gt;&gt;&gt; from sklearn.naive_bayes import GaussianNB
&gt;&gt;&gt; clf = GaussianNB()
&gt;&gt;&gt; clf.fit(X, Y)
</code></pre>
<p>I don't understand the second line. Is it a new instantiated object and the brackets are there because it's a constructor? If it is, how can I differentiate it from a function being assigned to a variable? I know that in this example it's rather clear because of this line <code>clf.fit(X, Y)</code>, but I want to know what to do in other cases.</p>
</div>
<div class="post-text" itemprop="text">
<p>Everything in Python is an object. <code>GaussianNB</code> is callable. Adding the <code>()</code> calls it. The return value of that call is entirely up to the object. </p>
<p>In this specific case, <code>GaussianNB()</code> instantiates a new <code>GaussianNB</code> object and returns it.</p>
</div>
<div class="post-text" itemprop="text">
<p>In this example you can use </p>
<pre><code>&gt;&gt;&gt; type(clf)
&lt;class 'sklearn.naive_bayes.GaussianNB'&gt;
</code></pre>
<p>and see that his is a class. You can also use </p>
<pre><code>&gt;&gt;&gt; help(GaussianNB)
</code></pre>
<p>to get more info.
Python guidelines recommended  </p>
<blockquote>
<p>Class names should normally use the CapWords convention.</p>
</blockquote>
<p>and for functions </p>
<blockquote>
<p>Function names should be lowercase, with words separated by
  underscores as necessary to improve readability.</p>
</blockquote>
<p>You can read more <a href="https://www.python.org/dev/peps/pep-0008/#class-names" rel="nofollow noreferrer">here</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>It is an object.  The third line is a method you can always do 'type(object)' to see what type it is so try type(clf)</p>
</div>
<span class="comment-copy">You can think of a class as a function for creating new objects. As long as it returns what you want, why do you need to know if it is a class for a function?</span>
<span class="comment-copy">A little research would make this clear: <a href="http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html" rel="nofollow noreferrer">scikit-learn.org/stable/modules/generated/â€¦</a></span>
<span class="comment-copy">I understand that it's a class, but is there any way to differentiate it without checking the documentation?</span>
<span class="comment-copy">You could check <code>type(whatever)</code> if you really want to</span>
<span class="comment-copy">This might be a stupid question, but from what I understand all python libraries contain objects, that have required functions, but never only functions?</span>
<span class="comment-copy">@faken functions are objects, so this question makes no sense to me.</span>
<span class="comment-copy">@faken In python functions are actually objects that you can call and not instantiate</span>
<span class="comment-copy">@faken Think of a function as an object that stores a routine, with special syntax to invoke that routine.</span>
<span class="comment-copy"><code>functions</code> is a subset of <code>objects</code> which are callable. <code>classes</code> are another subset of <code>objects</code> which, from the docs: <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">Class instantiation uses function notation</a></span>
