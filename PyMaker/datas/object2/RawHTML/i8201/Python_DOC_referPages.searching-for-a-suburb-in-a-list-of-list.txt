<div class="post-text" itemprop="text">
<p>I have a list of lists which contain a set of postcodes and the suburbs that match with. I need to create a iterative binary search algorithm that asks the user to input the name of the suburb and then the program outputs the postcode the suburb belongs to. The list looks like this:</p>
<blockquote>
<pre><code>L = [['4000', 'Charlestown'], ['4001', 'Jamestown'], ['4002', 'Henrytown']] 
</code></pre>
</blockquote>
<p>So if I were to run a binary search on this and the user entered 'Jamestown', then the program would output '4001'. This is what I've done to create the binary search function: </p>
<pre><code>    suburb = input("Please enter the name of a suburb: ")

    def binarySearch(L, target):
        low = 0
        high = len(L)-1
        while low &lt;= high:
            mid = (low + high)//2
            if L[mid] == target:
                return mid
            elif L[mid] &gt; target:
                high = mid-1
            else:
                low = mid+1
    binarySearch(L, suburb) 
</code></pre>
<p>However, when I run the program I get an error:</p>
<blockquote>
<pre><code>elif L[mid] &gt; target:
</code></pre>
<p>TypeError: '&gt;' not supported between instances of 'list' and 'str'</p>
</blockquote>
<p>I'm not really sure how to resolve this problem, any help would be greatly appreciated. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're really set on using a list, e.g., if this is for homework...</p>
<p>recognize that you're using a list of lists. So when you're trying to compare the ith list L[i] to the value of suburb, you're comparing your inner list, e.g., [4000, 'Charlestown'] to 'Charlestown'</p>
<p>Instead, you're going to want to compare L[i][1] to suburb.</p>
<p>Additionally, the function is not going to give you what you want (though you will avoid the error message) given the data you supplied, even when you fix that. Binary search is great, but it requires data be sorted according to the value you're searching for.</p>
<p>Here's a suggestion for that:</p>
<pre><code>sorted(L, key=lambda L_inner: L_inner[1])
</code></pre>
<p>see if you can figure out how to implement that yourself.  Some documentation: <a href="https://docs.python.org/3/howto/sorting.html#sortinghowto" rel="nofollow noreferrer">https://docs.python.org/3/howto/sorting.html#sortinghowto</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Just use a dictionary for this. Makes life much easier:</p>
<pre><code>&gt;&gt;&gt; d = {key: val for (val, key) in L}
&gt;&gt;&gt; d['Jamestown']
'4001'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For this kind of problem, you're going to be better off if you can structure the data as a dictionary, e.g.,:</p>
<pre><code>zips = { 'Charlestown': 4000, 'Jamestown': 4001,'Henrytown': 4002}
</code></pre>
<p>then  you can look up the zip code for any suburb in one step:</p>
<pre><code>zips['Charlestown']
</code></pre>
<p>will evaluate to:</p>
<pre><code>4000
</code></pre>
<p>If you have a bunch of these to look up, and for some reason the data was given to you in a list, you can convert from a list to a dictionary. That question is answered nicely here: </p>
<p><a href="https://stackoverflow.com/questions/4576115/convert-a-list-to-a-dictionary-in-python">Convert a list to a dictionary in Python</a></p>
<p>If you are being forced to do work with an odd data structure for an exercise for homework, see my separate answer for you below.</p>
</div>
<div class="post-text" itemprop="text">
<p>In this case you just need to modify your binary search function. The error is that you compare a list with a string (see Exception message). That is because of this line:</p>
<pre><code>L[mid] &gt; target
</code></pre>
<p>where L[mid] is a tuple and target is a String. Use <code>L[mid][1] &gt; target</code> instead.</p>
<pre><code>def binarySearch(L, target):
    low = 0
    high = len(L)-1
    while low &lt;= high:
        mid = (low + high)//2
        if L[mid][1] == target:
            return mid
        elif L[mid][1] &gt; target:
            high = mid-1
        else:
            low = mid+1
</code></pre>
<p><strong>NOTE: This only works if your list is sorted by your townsname otherwise your search goes in the wrong direction</strong> </p>
</div>
<div class="post-text" itemprop="text">
<p>The issue is that you have a multidimensional array and you are trying to match it to the name of the suburb. You need to match the second element of each nested array instead.</p>
<pre><code>   def binarySearch(L, target):
    low = 0
    high = len(L)-1
    while low &lt;= high:
        mid = (low + high)/2
        if L[mid][1] == target:
            return L[mid][0]
        elif L[mid][1] &gt; target:
            high = mid-1
        else:
            low = mid+1
</code></pre>
<p>Note that I'm also returning L[mid][0] which will give you the pincode instead of the element number.</p>
</div>
<span class="comment-copy">I understand this but I do not know how to fix the issue.</span>
<span class="comment-copy">This makes sense to me however I'm not sure how I would implement it into my code. Would I need a for loop?</span>
<span class="comment-copy">Well, for one, do you see where in your code you're comparing a list to a string? Looks like @MrLeeh did the work for you...</span>
<span class="comment-copy">for two, you'll need to make sure your list is sorted according to the second element of the inner list. The short version you gave as an example is NOT sorted in that manner. I'll update the answer to illustrate.</span>
<span class="comment-copy">I believe I have sorted the list according to the second element. Would it help if I showed all of my code?</span>
<span class="comment-copy">You haven't. It looks like it's sorted according to the first element. Otherwise Henrytown would be before Jamestown (instead of 4001 before 4002).</span>
<span class="comment-copy">Unfortunately the task requires me to use a binary search function.</span>
<span class="comment-copy">The task requires me to use a binary search function.</span>
<span class="comment-copy">This did help a lot, thank you. However I'm not sure if my code worked because the output just produces the value '1' when I search for a valid suburb.</span>
<span class="comment-copy">I just realised that it is returning the index where the suburb is located, so the program works. I just need to figure out how to print the postcode for that suburb.</span>
