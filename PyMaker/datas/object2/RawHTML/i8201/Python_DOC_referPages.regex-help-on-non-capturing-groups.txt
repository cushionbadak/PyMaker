<div class="post-text" itemprop="text">
<p>Must be a duplication but I can't seem to find it...</p>
<p>I am using a group to match a repeating sub-string. However, I do not want the group to be captured. This seems to be a contradiction.</p>
<p>To be explicit suppose I want to find any character that follows 3 exact replicas of an all capital subset strings. For</p>
<pre><code>s = 'hjgABABABfgfBBdqCCCugDDD'
              |         |
</code></pre>
<p>it should return </p>
<pre><code>['f', 'u']
</code></pre>
<p>I can find very well the repeating strings and following character by</p>
<pre><code>import re
print(re.findall(r'([A-Z]+)\1{2}(.)', s))
</code></pre>
<p>which gives</p>
<pre><code>[('AB', 'f'), ('C', 'u')]
</code></pre>
<p>I can easily parse the resulting list and get just the 2nd items. But is there a regex way to get just the 2nd items to begin with? If I try to do</p>
<pre><code>print(re.findall(r'(?:[A-Z]+)\1{2}(.)', s))
</code></pre>
<p>I get</p>
<pre><code>raise source.error("invalid group reference", len(escape)) sre_constants.error: invalid group reference at position 10
</code></pre>
<p>I'll appreciate a short verification that the issue is indeed a collision between the non-capturing requirement and the capturing that is needed to detect repetitions. Then a clever idea how to achieve the goal neatly.</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason this won't work is that when you write <code>\1</code> you basically say "the content of the first group", which is of course undefined if the group is non-capturing.</p>
</div>
<div class="post-text" itemprop="text">
<p>As <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code></a> will always fetch a list of tuples once you define several  capturing groups in the pattern, you can't use "regex-only" approach here.</p>
<p>Use <code>re.finditer</code> to get all match data objects and get Group 2 contents from each match only:</p>
<pre><code>print([x.group(2) for x in re.finditer(r'([A-Z]+)\1{2}(.)', s)])
</code></pre>
<p>See the <a href="https://ideone.com/DliI1e" rel="nofollow noreferrer">Python demo</a></p>
</div>
<span class="comment-copy">With re module, it can't be possible without capturing group. But with <code>regex</code> module, it may <a href="https://regex101.com/r/f8Iszd/1" rel="nofollow noreferrer">possible</a>..</span>
<span class="comment-copy">Did my answer work for you?</span>
