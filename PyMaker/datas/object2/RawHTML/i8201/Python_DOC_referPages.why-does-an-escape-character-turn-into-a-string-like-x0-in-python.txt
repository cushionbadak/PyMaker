<div class="post-text" itemprop="text">
<p>I have a simple question here: </p>
<pre><code>mylist=[1,2,3]
mylist.insert(0, '\0')
print(mylist) 
</code></pre>
<p>gives us:</p>
<pre><code>['\x00', 1, 2, 3]
</code></pre>
<p>in other words, why and how is the escape character <code>\</code> turning into <code>\x0</code>?<br/>
Is there some purpose here? Is this some encoding thing?</p>
<p>Why does python return one representation over another?</p>
</div>
<div class="post-text" itemprop="text">
<p>So <code>\&lt;various single characters&gt;</code> have special meanings, and <code>\xYY</code> is a character which is hex value <code>YY</code>.  The following (and others) are equivalent:</p>
<pre><code>&gt;&gt;&gt; assert '\0' == '\x00'   # null
&gt;&gt;&gt; assert '\t' == '\x09'   # tab
&gt;&gt;&gt; assert '\r' == '\x0d'   # carriage return
&gt;&gt;&gt; assert '\n' == '\x0a'   # line feed
</code></pre>
<p>This is because a tab is encoded as 9, etc.  And in general, Python will show you the most general representation, which is the hexadecimal value for a character, if it can not show you the character itself.</p>
<p>(<a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">String Literal Docs</a>)</p>
</div>
<span class="comment-copy"><code>\0</code> and <code>\x00</code> are just two different representations of the same thing: a zero byte.</span>
<span class="comment-copy">by 'representation' you mean, human readable printout? Or something else? Why, also, are there two different representations of the same thing? Isn't DRY a basic tenement in all levels of programming and design?</span>
<span class="comment-copy">DRY is totally unrelated to it. And there always many representations of one think, human readable or not. Just in your case yu have the octal and hexadecimal representations of 0.</span>
<span class="comment-copy">Why did python return one representation over another?</span>
<span class="comment-copy">Python always returns its one preferred representation. However, you have various different ways of creating the same value, like octal vs. hexadecimal notation. Under the hood it's a <code>NUL</code> byte, which is not directly representable to a human at all, and it doesn't remember how it was created.</span>
