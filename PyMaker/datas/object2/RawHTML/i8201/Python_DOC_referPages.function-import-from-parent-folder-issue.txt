<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/16981921/relative-imports-in-python-3">Relative imports in Python 3</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I have folder structure like this:</p>
<pre><code>d1
 - app
   — script.py
 - lib
   — lib1
     — file.py
</code></pre>
<p>When I do <code>from ..lib.lib1 import my func</code> in <code>script.py</code> it gives error:</p>
<pre class="lang-none prettyprint-override"><code>SystemError: Parent module '' not loaded, cannot perform relative import
</code></pre>
<p>I am using Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Relative imports are for use within packages. You could change what you have into one by adding some empty <code>__init__.py</code> files into your directory structure like this:</p>
<pre><code>d1
 - test.py  # added to run script.py below
 - app
   - __init__.py  # an empty script
   — script.py
 - lib
   - __init__.py  # an empty script
   — lib1
     - __init__.py  # an empty script
     — file.py
</code></pre>
<p>There's also a new file I've called <code>test.py</code> because you genrally can't run modules within a package as the main script (which is why I added  <code>test.py</code>). All it contains is:</p>
<pre><code>from app import script
</code></pre>
<p>I also changed the import in <code>script.py</code> to this:</p>
<pre><code>from lib.lib1 import file
</code></pre>
<p>To show that the above <code>import</code> works, I put a <code>print('in file.py')</code> in <code>file.py</code>.</p>
<p>Now running <code>test.py</code>, which runs the <code>script</code> module by importing it, produces the following output:</p>
<pre class="lang-none prettyprint-override"><code>in file.py
</code></pre>
<p>Now, if you want to import a particular function from <code>file.py</code>, you could do something like this in <code>script.py</code>:</p>
<pre><code>from lib.lib1.file import my_func
</code></pre>
</div>
<span class="comment-copy">You could find that page by pasting the error message in any decent search engine.</span>
<span class="comment-copy">@vaultah and what made you to think  I did not try it? I did try but some how I am doing something wrong that it still gives error.</span>
<span class="comment-copy"><code>from ..lib.lib1 import my func</code> produces a <code>SyntaxError</code>. What is your actual <code>import</code> statement? It also appears the you're trying to import from a grandparent folder, not the parent folder.</span>
<span class="comment-copy">Relative imports only work inside Python packages. Your folder structure doesn't define one. Question <a href="http://stackoverflow.com/questions/3616952/how-to-properly-use-relative-or-absolute-imports-in-python-modules"><b><i>How to properly use relative or absolute imports in Python modules?</i></b></a> may help.</span>
<span class="comment-copy">Also see the documentation about regular <a href="https://docs.python.org/3/reference/import.html#packages" rel="nofollow noreferrer"><b>Packages</b></a>.</span>
<span class="comment-copy">The real case to use is for CRON JObs.</span>
<span class="comment-copy">Whatever—shouldn't matter.</span>
