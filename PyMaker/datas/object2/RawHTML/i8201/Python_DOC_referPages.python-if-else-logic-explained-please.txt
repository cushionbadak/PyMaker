<div class="post-text" itemprop="text">
<p>I have a really basic if/else logic question for Python. An exercise in the book required me to write a function that takes a list of integers are returns True if the list contains all even numbers and False if it doesn't.</p>
<p>I wrote:</p>
<pre><code>list1 = [8,0,-2,4,-6,10]
list2 = [8,0,-1,4,-6,10]
def allEven(list):
    for x in list:
        if x % 2 != 0:
            return False
        else:
            return True
</code></pre>
<p>This code always returns True. Why is that? Doesn't the code see the -1 during the loop of all the values of the list and returns the False?</p>
<pre><code>list1 = [8,0,-2,4,-6,10]
list2 = [8,0,-1,4,-6,10]
def allEven(list):
    for x in list:
        if x % 2 != 0:
            return False
    return True
</code></pre>
<p>The book gives the answer of this. Why does this work and mine doesn't?</p>
</div>
<div class="post-text" itemprop="text">
<p>Pay <strong>close attention</strong> to where that <code>else</code> is placed.  Indentation and nesting matters here!</p>
<p>In your first example, it will return <code>True</code> on the first element that satisfies your condition because your first <code>if</code> check fails.</p>
<p>In your second example, it will return <code>True</code> after <em>all</em> elements have been iterated through and a return value hasn't been produced.</p>
</div>
<div class="post-text" itemprop="text">
<p>The first function checks the first number only, since it returns something as soon as the for loop starts.</p>
<p>By the way, you can but should not use <code>list</code> as an argument or a variable name, since it is a keyword.</p>
</div>
<div class="post-text" itemprop="text">
<p>I strongly recommend writing a print statement to output x before both of your return statements.  It will help you understand the flow of the code.</p>
<p>The short answer is that only the first element is being checked by your code, and the function returns True or False based on that value.</p>
<p>In the book solution, any failure causes a return of False, but the loop simply continues otherwise.  Only if all elements are checked without failure does the return True reached.</p>
</div>
<span class="comment-copy">The code inside the <code>for</code> block is supposed to execute multiple times. If you <code>return True</code> the first time it executes, the function is finished, and the rest of the loop won't execute. A function only returns once.</span>
<span class="comment-copy">Just to note, you can do this with python's builtin <a href="https://docs.python.org/2/library/functions.html#any" rel="nofollow noreferrer"><b><code>any</code></b></a> function: <code>return not any(x % 2 for x in values)</code>. Also, don't use <code>list</code> as a variable name.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/compound_stmts.html#the-if-statement" rel="nofollow noreferrer">8.1 The if statement</a></span>
<span class="comment-copy"><code>return</code> what do you think this does?</span>
<span class="comment-copy">This makes sense! Thanks.</span>
