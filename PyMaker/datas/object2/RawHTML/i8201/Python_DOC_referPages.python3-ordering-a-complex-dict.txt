<div class="post-text" itemprop="text">
<p>I've got a complex Python dictionary that stores the following values:
MAC ADDRESS, RSSI and TIMESTAMP:</p>
<pre><code>beacons_detected = {
    '55:c1:9a:41:4c:b9': ['-78', '1493580469'],
    '9c:20:7b:e0:6c:41': ['-74', '1493622425'],
    '5e:30:e7:12:97:64': ['-79', '1493587968']
}
</code></pre>
<p>I would like to order that list based on timestamp... any idea on how to achieve that?</p>
</div>
<div class="post-text" itemprop="text">
<p>sort the dictionary from smallest to largest:</p>
<pre><code>&gt;&gt;&gt; sorted(beacons_detected.items(), key=lambda x: x[1][1])
[('55:c1:9a:41:4c:b9', ['-78', '1493580469']), ('5e:30:e7:12:97:64', ['-79', '1493587968']), ('9c:20:7b:e0:6c:41', ['-74', '1493622425'])]
</code></pre>
<p>sort the dictionary from largest to smallest:</p>
<pre><code>&gt;&gt;&gt; sorted(beacons_detected.items(), key=lambda x: x[1][1], reverse=True)
[('9c:20:7b:e0:6c:41', ['-74', '1493622425']), ('5e:30:e7:12:97:64', ['-79', '1493587968']), ('55:c1:9a:41:4c:b9', ['-78', '1493580469'])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want a sorted dictionary, then use the <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>OrderedDict</code></a> from <a href="https://docs.python.org/3/library/collections.html" rel="nofollow noreferrer"><code>collections</code></a>:</p>
<pre><code>&gt;&gt;&gt; ordered = OrderedDict(sorted(beacons_detected.items(), key=lambda x: x[1][1]))
OrderedDict([('55:c1:9a:41:4c:b9', ['-78', '1493580469']),
             ('5e:30:e7:12:97:64', ['-79', '1493587968']),
             ('9c:20:7b:e0:6c:41', ['-74', '1493622425'])])
</code></pre>
<p>And the access is same as <code>dict</code>:</p>
<pre><code>&gt;&gt;&gt; ordered['55:c1:9a:41:4c:b9']
['-78', '1493580469']
</code></pre>
</div>
<span class="comment-copy">What output do you expect?</span>
<span class="comment-copy">Theoretically we want <code>int(x[1][1])</code> though the odds that this matter are practically zero.</span>
<span class="comment-copy">@DietrichEpp, you are right but in this case the <code>timestamp</code> is already a <code>str</code>, hence string comparison would be much faster rather than converting them into a int and doing comparison since conversion is a costly matter.</span>
<span class="comment-copy">Thank you so much!</span>
<span class="comment-copy">Right, merely pointing out that the comparison is only correct since the all the values have the same number of digits.</span>
<span class="comment-copy">Thank you so much!</span>
