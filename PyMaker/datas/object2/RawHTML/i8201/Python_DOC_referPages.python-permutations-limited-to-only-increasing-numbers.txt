<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17176887/python-get-all-combinations-of-a-list">Python - get all combinations of a list</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to create a function that will produce all permutations of a list but limited to only sets of <code>len(n)</code> and only increasing from left to right. For instance, if I have list <code>l = [2,4,6,8,10]</code> and <code>n = 3</code>, the results should be</p>
<pre><code>[2,4,6],
[2,4,8],
[2,4,10],
[2,6,8],
[2,6,10],
[2,8,10],
[4,6,8],
[4,6,10],
[6,8,10]
</code></pre>
<p>I've seen plenty of variations of permutation functions but none with this kind of restriction. </p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer">itertools docs</a>:</p>
<blockquote>
<p>Combinations are emitted in lexicographic sort order. So, if the input iterable is sorted, the combination tuples will be produced in sorted order.</p>
</blockquote>
<p>So if you have a sorted list, then using <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a> you'll get your desired result. If not, you can call <code>sorted()</code>  first.</p>
<pre><code>lst = range(2, 11, 2)

list(itertools.combinations(lst, 3))
Out: 
[(2, 4, 6),
 (2, 4, 8),
 (2, 4, 10),
 (2, 6, 8),
 (2, 6, 10),
 (2, 8, 10),
 (4, 6, 8),
 (4, 6, 10),
 (4, 8, 10),
 (6, 8, 10)]
</code></pre>
</div>
<span class="comment-copy">Combinations by nature are not repeated so if you have a sorted list, <code>list(itertools.combinations(l, 3))</code>  should work just fine?</span>
<span class="comment-copy">@ayhan that should be the answer. Or maybe <code>[list(x) for x in itertools.combinations(lst, 3)]</code> to create sublists, not tuples.</span>
<span class="comment-copy">@ayhan are we sure order is guaranteed not to change?</span>
<span class="comment-copy">@AAron you mean order of the sublists? you can always sort your result if you're not sure</span>
<span class="comment-copy">@ayhan I don't blame you for answering a duplicate, because the sorting part is new, that's true. Closing as a duplicate now that you answered was the right thing to do: your answer answers this very question, and the duplicate probably offers more variety.</span>
