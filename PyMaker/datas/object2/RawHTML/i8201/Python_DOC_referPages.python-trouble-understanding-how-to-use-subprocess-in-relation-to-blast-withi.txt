<div class="post-text" itemprop="text">
<p>I'm a Python beginner and am having trouble understanding the wording for an assignment. It involves object-oriented programming and creating classes. I have installed BLAST onto my Windows 10 computer so I can access it via the command prompt. For convenience, I have typed my questions in bold. Here is the general background information needed to understand what I'm going to be doing:</p>
<hr/>
<p><em>"Write a Python script that runs BLAST+ to compare the genomes of two organic nitrogen and methane metabolizing bacteria, then make a graphical representation of the alignments.</em></p>
<p><em>Include the following to perform the main logic:</em></p>
<pre><code>if (__name__ = "__main__"):
    Main() # Create an object of the main class
</code></pre>
<p><em>All other operations your script performs should be done within classes. There should be no other code that exists outside a class."</em></p>
<hr/>
<p><strong>From this I don't understand why the <code>(__name__ = "__main__")</code> is there (I saw a question asking about this too but the answers were too complicated to understand; I don't have enough coding experience so a simpler explanation of this would be appreciated) and why the class called <code>Main()</code> exists beneath that line of code. I thought that the class was supposed to be made first. Also, I know how to use the BLAST website but not in the form of a Python script or command line arguments.</strong></p>
<hr/>
<p>A particular part I'm having trouble with is the following:</p>
<p><em>"Write a method that uses the 'subprocess' library to execute 'blastn', aligning the two genomes using the tab-delimited output. You will need to look at the BLAST+ manual or program usage to figure out which command line options to use. The 'subprocess' library has many ways of running non-python programs. We suggest you use the <code>subprocess.run()</code> function. Your 'subprocess' code must use the <code>shell = False</code> argument, and the 'blastn' alignment must be piped into your Python script, and should not create any new files on disk.</em></p>
<p><em>Your script should expect the first command line argument to be the path to the query FASTA file, which should be 'file1.fasta'. Your scrpt should expect the second command line positional parameter to be the subject FASTA, which should be 'file2.fasta'.</em></p>
<p><em>Use your method to align the query to the subject using three different sets of parameters:</em></p>
<p><em>1. Default values</em></p>
<p><em>2. A word size of 12; a maximum of 100000 alignments; a maximum e-value of 0.001; a gap opening penalty of 7; a gap extension penalty of 3; a mismatch penalty of 5; a match reward of 1</em></p>
<p><em>3. A word size of 10; a maximum of 1000 alignments; a maximum e-value of 0.0001; a gap opening penalty of 5; a gap extension penalty of 2; a mismatch penalty of 3; a match reward of 2"</em></p>
<hr/>
<p>What I understand from this is that I have to use <code>subprocess</code>to execute something from the terminal. The issue here is that I don't know how to use <code>subprocess</code> to setup the 3 required parameters. </p>
<p>Code that I have so far is this:</p>
<pre><code>class Main()
    def __init__(self): # we're using self so that we can refer to this function outside of this area # the default __init__ function is being redefined
        parameters = [___,___,___]
        self.alignments = []
        for p in parameters:
            self.alignments.append(self.align(p))

    def align(self,pars): 
        subprocess # I don't know what to add here
        # output is test of alignment objects

if (__name__ =="__main__"):
    Main() # Create an object of the main class
    # we don't need to do this:
    # m.align.seqs()
    # m.color = blue
    m = Main()
    m.align()
    m.parse()
    m.filter()
    m.make_dm()
</code></pre>
<p>I was instructed to use most of this code. The commented lines after the if statement were given so I don't know how to explain those.</p>
<p>I tried messing with 'subprocess' using notes I had for the assignment, but it's just this and isn't helping me:</p>
<pre><code>'''Example to run a shell process via a Python script and capture STDOUT'''

import subprocess

command_list = ['blastn', '-help']
cp = subprocess.run(command_list, shell=False, check=True, stdout=subprocess.PIPE)
output = cp.stdout.decode()

print('number of characters =', len(output))
print('number of lines =', len(output.splitlines()))
print('thread lines:')
for line in output.splitlines():
    if 'threads' in line:
        print(line)
</code></pre>
<p><strong>My questions: How am I supposed to do this all within a class and how do I use 'subprocess' to execute 'blastn' to align the two genomes? The 3 parameters listed in the instructions should go in the empty parameters list and I do not know how to include them.</strong> </p>
<p>I apologize if this is hard to understand but I've tried asking multiple people that know Python better than I do and they've gotten stuck as well. Please let me know if I can clarify anything I mentioned.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Comment</strong>: ...  I still don't understand 'main' and where to include it within a class  </p>
</blockquote>
<p><strong>__main__</strong> has nothing to do with a <code>class</code>.<br/>
It's only a idiom for conditionally executing code in a module when it is run as a script.  Think of it as the <strong>main</strong> start point. E.g. you have the following 3 lines of code in my_script.py.<br/>
<code>python my_script.py</code> will start executing <code>main()</code>.</p>
<pre><code>if __name__ == "__main__":
    # execute only if run as a script
    main()
</code></pre>
<hr/>
<p>Read: <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">tutorial</a>.  </p>
<p>Read: <a href="https://docs.python.org/3/library/__main__.html?highlight=__main__" rel="nofollow noreferrer">__main__</a>.  </p>
<p>Read: <a href="https://docs.python.org/3/tutorial/classes.html#class-definition-syntax" rel="nofollow noreferrer">class-definition-syntax</a> </p>
</div>
<span class="comment-copy">Ok that explained classes a little better but I still don't understand '<b>main</b>' and where to include it within a class or what to code in the lines beneath that statement.</span>
<span class="comment-copy">@biocoder: Updated my Answer</span>
