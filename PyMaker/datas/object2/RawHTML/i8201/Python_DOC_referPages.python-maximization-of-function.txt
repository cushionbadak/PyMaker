<div class="post-text" itemprop="text">
<p>Suppose I have the following simple function and inputs:</p>
<pre><code>dates = pd.date_range('20170101',periods=20)
a1 = np.ones(3)
b1 = pd.DataFrame(np.random.randint(10,size=(20,3)),index=dates,columns=['foo','bar','see'])
def test_func(a,b):
        c = (a*b).sum(axis=1)
        d = c.std()*np.sqrt(3)
        e = c.mean()/d
        return -np.array(e) 
</code></pre>
<p>I would like to solve this function for a that minimizes the output (maximizes e).   </p>
<pre><code>scipy.optimize.fmin(test_func,a1,args=(b1))
</code></pre>
<p>But this throws a type error</p>
<pre><code>TypeError: test_func() takes 2 positional arguments but 4 were given
</code></pre>
<p>My quesiton is i) is this a good way to solve for the max of such a function and ii) what the devil is the problem? </p>
</div>
<div class="post-text" itemprop="text">
<p>You are missing a comma after the <code>b1</code> in the extra argument:</p>
<pre><code>scipy.optimize.fmin(test_func,a1,args=(b1,))
</code></pre>
<p>seems to work.</p>
</div>
<span class="comment-copy">the second part is clear. you are misusing the test_func. check <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.fmin.html" rel="nofollow noreferrer">here</a>. you are providing extra inputs</span>
<span class="comment-copy">Brilliant! This is helpful.  So to be clear, the 'args' parameter requires a trailing comma with 1, but not 2, variables?  For other functions that require more inputs, I've used 'args=(b1,c1,d1)' and it's worked just fine.</span>
<span class="comment-copy">That is correct: <code>(b1,)</code> is a tuple with one element, while <code>(b1)</code> is just <code>b1</code> itself. From the the <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">docs</a>: "A special problem is the construction of tuples containing 0 or 1 items: the syntax has some extra quirks to accommodate these. Empty tuples are constructed by an empty pair of parentheses; a tuple with one item is constructed by following a value with a comma (it is not sufficient to enclose a single value in parentheses). Ugly, but effective."</span>
