<div class="post-text" itemprop="text">
<p>I have two strings that I compare, but I am not getting the result I want. Here's how I do it, with Python 2.7:</p>
<pre><code>str1 = '0000644'
str2 = '0000644'

if str1 == str2:
    print 'true!'
else:
    print 'false'
</code></pre>
<p>I have also tried with the <code>is</code> comparison:</p>
<pre><code>if str1 is str2:
    print 'true'
else:
    print 'false'
</code></pre>
<p>Can someone explain why I am not printing true when I do this?  I come from C#, and if you do it like this you should print the true value.</p>
</div>
<div class="post-text" itemprop="text">
<p>The code you posted is not valid Python.</p>
<p>This will do:</p>
<pre><code>str1 = '0000644'
str2 = '0000644'

if str1 == str2:
  print True
else:
  print False
</code></pre>
<p>To elaborate:</p>
<ul>
<li>booleans start with capital letters: <code>True</code> and <code>False</code> (not sure why you had the exclamation)</li>
<li>blocks need to be consistently indented (unlike C# where you separate them with {})</li>
<li><code>else</code> needs to finish with a colon</li>
</ul>
<p>edit: my answer was based on OPs original code, which was not valid Python. I can't help if someone then changes the code into valid code after.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>is</code> will return <code>True</code> if two variables point to the same object, <code>==</code> if the objects referred to by the variables are equal.</p>
<pre><code>&gt;&gt;&gt; a = [17,27,37]
&gt;&gt;&gt; b = a
&gt;&gt;&gt; b is a 
True
&gt;&gt;&gt; b == a
True
&gt;&gt;&gt; b = a[:] #shallow copy of a
&gt;&gt;&gt; b is a
False
&gt;&gt;&gt; b == a
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python, 'true' and 'false' booleans need to be capitalized at the 'T' and 'F', respectively. Also, when printing, whatever you want to print needs to be surrounded in double or single quotes.</p>
</div>
<span class="comment-copy">Python requires indentation to separate blocks of code e.g. in case of <code>if</code> and <code>else</code>! Also, it should be <code>True</code> and <code>False</code> and a colon should come after <code>else</code></span>
<span class="comment-copy">Also you're missing a colon and some quote marks (unless you meant boolean <code>True</code> and <code>False</code>, in which case you're missing the capital letters). <code>'0000644' == '0000644'</code> works as expected for me.</span>
<span class="comment-copy">Include the actual exact code you are running.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is-in-python">Is there a difference between `==` and `is` in Python?</a></span>
<span class="comment-copy">@KevinJensen that would strike me as really strange. Check that the contents of the strings are really the same (no "O" instead of zero, no Unicode lookalikes, no typos) and that you're really using <code>==</code> to compare.</span>
<span class="comment-copy">I don't think point 1 is really relevant. I was under the impression he just intended to print "true!", not necessarily the boolean literal.</span>
<span class="comment-copy">In that case he should put it in double or single quotes. Hard to tell from his question so I made an assumption.</span>
<span class="comment-copy">I wasn't the downvoter btw. That would be petty lol. And fair enough.</span>
<span class="comment-copy">No worries, I haven't been on here for a while now. Is this what it has became? Downvotes for posting a correct answer?</span>
<span class="comment-copy">The code you've posted is correct, but how does it solve the OP's problem? The code in the question as it stands is just like this, and still they claim it doesn't work.</span>
<span class="comment-copy">^@Jan Beat me to it.</span>
<span class="comment-copy">That is not necessarily true. Look at: <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#print</a> : "All non-keyword arguments are converted to strings like str()". You can pass any object convertible to a string</span>
<span class="comment-copy">Many objects in python have a string version.</span>
<span class="comment-copy">Thank you for clarifying those details @J.C.Rocamonde</span>
