<div class="post-text" itemprop="text">
<p>Working this example from the Python for Finance book in Python 3 and getting this error.  My understanding is I need to use slice in order to have this range. Otherwise I need to use a tuple.</p>
<pre><code>spo.brute(fo, (slice(-10, 10.1, 5)), (slice(-10, 10.1, 5)), finish=None)

TypeError: object of type 'slice' has no len()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of passing a tuple of two slices as the <code>ranges</code> argument to <code>scipy.optimize.brute</code>, you're passing one slice as <code>ranges</code> and another as <code>args</code>. You need to provide a tuple:</p>
<pre><code>scipy.optimize.brute(fo, (slice(-10, 10.1, 5), slice(-10, 10.1, 5)), finish=None)
</code></pre>
<p>It may be clearer to define the tuple outside the function call:</p>
<pre><code>ranges = (slice(-10, 10.1, 5), slice(-10, 10.1, 5))
scipy.optimize.brute(fo, ranges, finish=None)
</code></pre>
</div>
<span class="comment-copy">is spa a list @michael-peterson?</span>
<span class="comment-copy">@AndyK do you mean spo? it's a sublibrary in Scipy</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow noreferrer"><code>slice()</code></a> vs <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer"><code>range()</code></a>? Neither of those will support float arguments, so please explain what you are trying to achieve.</span>
<span class="comment-copy">@dhke: <code>slice</code> actually does take float arguments - heck, <a href="http://ideone.com/OHma0f" rel="nofollow noreferrer">it takes anything</a> - but most things receiving a slice won't understand what to do with floats.</span>
<span class="comment-copy">@dhke A <code>slice</code> constructed with float parameters <i>can</i> be a valid index, provided that the object that's being indexed knows what to do with them. In the case of <code>scipy.optimize.brute</code>, <a href="https://github.com/scipy/scipy/blob/0a721abff500de68bcbf339e6875bd6dd9d441be/scipy/optimize/optimize.py#L2715" rel="nofollow noreferrer">the slices are ultimately passed to <code>numpy.mgrid</code></a>, which <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.mgrid.html" rel="nofollow noreferrer">interprets these in a special way</a>, but in general most objects that support slice indexing won't handle floats as slice parameters.</span>
<span class="comment-copy">your original example and the ranges variable both bring back TypeError: fo() missing 1 required positional argument: 'y'</span>
<span class="comment-copy">@MichaelPeterson: Yeah, you've got more bugs.</span>
<span class="comment-copy">yeah thanks for taking a look. working right from the book but published before 3. kinda frustrating but at least get the gist of the example</span>
