<div class="post-text" itemprop="text">
<p>How to reverse re.escape? <a href="https://mentaljetsam.wordpress.com/2007/04/13/unescape-a-python-escaped-string/" rel="nofollow noreferrer">This blog from 2007</a> says there is no reverse function, but is that still true, ten years later?</p>
<p>Python 2's <code>decode('string_escape')</code> doesn't work on all escaped chars (such as space).</p>
<pre><code>&gt;&gt;&gt; re.escape(' ')
'\\ '
&gt;&gt;&gt; re.escape(' ').decode('string-escape')
'\\ '
</code></pre>
<p>Python 3: <a href="https://stackoverflow.com/questions/14820429/how-do-i-decodestring-escape-in-python3">Some suggest</a> <code>unicode_escape</code> or <code>codec.escape_decode</code> or <code>ast.literal_eval</code> but no luck with spaces.</p>
<pre><code>&gt;&gt;&gt; re.escape(b' ')
b'\\ '
&gt;&gt;&gt; re.escape(b' ').decode('unicode_escape')
'\\ '
&gt;&gt;&gt; codecs.escape_decode(re.escape(b' '))
(b'\\ ', 2)
&gt;&gt;&gt; ast.literal_eval(re.escape(b' '))
ValueError: malformed node or string: b'\\ '
</code></pre>
<p>So is this really the only thing that works?</p>
<pre><code>&gt;&gt;&gt; re.sub(r'\\(.)', r'\1', re.escape(' '))
' '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>So is this really the only thing that works?</p>
<pre><code>&gt;&gt;&gt; re.sub(r'\\(.)', r'\1', re.escape(' '))
' '
</code></pre>
</blockquote>
<p><strong>Yes.</strong> The <a href="https://github.com/python/cpython/blob/3.7/Lib/re.py" rel="nofollow noreferrer">source</a> for the <code>re</code> module contains no <code>unescape()</code> function, so you're definitely going to have to write one yourself.</p>
<p>Furthermore, the <a href="https://github.com/python/cpython/blob/3.7/Lib/re.py#L252" rel="nofollow noreferrer"><code>re.escape()</code></a> function uses <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate()</code></a> …</p>
<pre><code>def escape(pattern):
    """
    Escape special characters in a string.
    """
    if isinstance(pattern, str):
        return pattern.translate(_special_chars_map)
    else:
        pattern = str(pattern, 'latin1')
        return pattern.translate(_special_chars_map).encode('latin1')
</code></pre>
<p>… which, while it can transform a single character into multiple characters (e.g. <code>[</code> → <code>\[</code>), cannot perform the reverse of that operation.</p>
<p>Since there's no direct reversal of <code>escape()</code> available via <code>str.translate()</code>, a custom <code>unescape()</code> function using <code>re.sub()</code>, as described in your question, is the most straightforward solution.</p>
</div>
<span class="comment-copy">Why do you need this? Why not just keep a copy of the original string?</span>
<span class="comment-copy">I'm importing escaped strings from elsewhere...</span>
