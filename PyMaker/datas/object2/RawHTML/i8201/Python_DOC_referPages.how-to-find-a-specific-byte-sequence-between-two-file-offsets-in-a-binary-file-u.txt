<div class="post-text" itemprop="text">
<blockquote>
<p>How to find a specific byte sequence between two file offsets in a binary file using Python?</p>
</blockquote>
<p>I want to open a binary file to search for a specific byte sequence <code>0x66,0x66,...,0x66</code> between two file offsets <code>start</code> and <code>end</code>.</p>
<p>My idea is to open the file using <code>rb</code> and then set the file position to <code>start</code> using <code>fseek()</code>. Then for each position in the file, I read 16 bytes and compare them to the sequence above (16 bytes in length).</p>
<p>However, there must be an easier way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You didn't say it was a large file, so let's assume it fits easily into memory.  fseek to the start position, then read end-start bytes. You'll have a bytestring, then you can use .index to find your sequence:</p>
<pre><code>with open("the_file.bin", "rb") as f:
    f.fseek(start)
    data = f.read(end-start)
where = data.index(b"\x66"*16)
</code></pre>
</div>
<span class="comment-copy">How large is the file? If it's not small enough to read the whole thing, you may be able to use a <a href="https://docs.python.org/3/library/mmap.html" rel="nofollow noreferrer">memory-mapped file</a>.</span>
<span class="comment-copy">Lets say ~100MB.</span>
<span class="comment-copy">That should be ok to read the whole thing, but I think <code>mmap</code> will be faster.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/28643919/python-string-processing-optimization"><code>mmap</code> is very versatile</a></span>
<span class="comment-copy">Does this give me ALL indicies?</span>
<span class="comment-copy">@Shuzheng No, it just gives you the first one. You'll need to loop to find the other indices. You may wish to use <code>.find</code> instead of <code>.index</code>, otherwise you'll need a <code>try:... except</code> block to catch the <code>ValueError</code> raised by <code>.index</code> when your pattern can't be found.</span>
<span class="comment-copy">Can you show loop example?</span>
