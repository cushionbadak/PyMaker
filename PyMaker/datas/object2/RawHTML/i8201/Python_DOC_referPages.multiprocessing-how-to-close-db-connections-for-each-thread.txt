<div class="post-text" itemprop="text">
<p>I am creating a db connection for each thread and was wondering what the best way to close these connections when I am done. </p>
<p>Here is my code where I initialized my db connection and call pool</p>
<pre><code>class Processor(object):
    def __init__(self, DSN):
        self.dsn0= DSN[0]
        self.dsn1= DSN[1]
        self.conn0 = None
        self.conn1 = None


    def __call__(self, data):
        if(self.conn0 is None and self.conn1 is None):
           self.conn0 = psycopg2.connect(self.dsn0)
           self.conn0Curs = self.conn0.cursor()
           self.conn1 = psycopg2.connect(self.dsn1)
           self.conn1Curs = self.conn1.cursor()
       sql = generateQuery(*data)
       print(sql)



if __name__ == '__main__':

    pool = ThreadPool()
    pool.map(Processor([DSN1, DSN2]), batches)
    pool.close()
    pool.join()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Rather than opening the connections in the Thread I would recommend you to use a <a href="https://docs.python.org/3/library/stdtypes.html#typecontextmanager" rel="nofollow noreferrer">Context Manager</a>. Its main advantage is that it will ensure the connections to be closed even in case of errors.</p>
<pre><code>class Processor(object):
    def __init__(self, DSN):     
        self.dsn0= DSN[0]
        self.dsn1= DSN[1]
        self.conn0 = None
        self.conn1 = None 
        self.curs0 = None
        self.curs1 = None

    def __enter__(self):
        self.conn0 = psycopg2.connect(self.dsn0)
        self.conn1 = psycopg2.connect(self.dsn1)
        self.curs0 = self.conn0.cursor()
        self.curs1 = self.conn1.cursor()
        return self

    def __exit__(self, *_):
        """Close the connections."""
        self.conn0.close()
        self.conn1.close()

    def process(self, data):
        sql = generateQuery(*data)
        print(sql)


if __name__ == '__main__':
    with Processor([DSN1, DSN2]) as processor:
        pool = ThreadPool()
        pool.map(processor.process, batches)
        pool.close()
        pool.join()
</code></pre>
</div>
<span class="comment-copy">Tagging the questions with the language tag will enable coloured faces for the code which makes it easier to read.</span>
<span class="comment-copy">A note to others: this won't work with the multiprocessing library, as the .map callable needs to be pickleable. The database connections unfortunately aren't.</span>
