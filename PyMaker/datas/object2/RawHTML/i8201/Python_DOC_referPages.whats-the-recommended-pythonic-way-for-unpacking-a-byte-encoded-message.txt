<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20612587/struct-unpack-with-bytearrays">struct.unpack with bytearray's</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Suppose I have a byte-packed message with the following schema:</p>
<pre><code>Message Name: Ball
    Field #1: 
        Name: Color
        Type: unsigned int
        Start Bit: 0
        Bit Length: 4
    Field #2: 
        Name: Radius
        Type: single
        Start Bit: 4
        Bit Length: 32
    Field #3: 
        Name: New
        Type: bool
        Start Bit: 36
        Bit Length: 1
</code></pre>
<p>What is the recommended pythonic way to convert the byte sequence into a python variables? Would the "struct" module work well for unpacking byte arrays that have arbitrary bit length fields?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><em>What is the recommended pythonic way to convert the byte sequence into a python variables?</em></p>
</blockquote>
<p>this question will get closed pretty soon. What you want is to read <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">this python doc page about <code>struct</code> and <code>bytearray</code>s</a>.</p>
<p>It will show you how to <code>pack</code> and <code>unpack</code> data using format.</p>
<blockquote>
<p><em>Would the "struct" module work well for unpacking byte arrays that have arbitrary bit length fields?</em></p>
</blockquote>
<p>It will show you how to <code>pack</code> and <code>unpack</code> data using format.</p>
<p>Yup, as follows:</p>
<pre><code>import struct
color, radius, new = struct.unpack("If?", incoming_bytes)
</code></pre>
<p>Check the <a href="https://docs.python.org/3/library/struct.html#format-characters" rel="nofollow noreferrer">format characters</a> to define the format string and you're done.</p>
<p>You could use more bloated libraries like <code>construct</code>, but TBH, this format is super simple and if you <code>unpack</code> early and <code>pack</code> late, you're free to organize your data as you want in your code.</p>
<p>e.g.:</p>
<pre><code>class Ball:
    def __init__(self, color, radius, new):
        self.color = color
        self.radius = radius
        self.new = new

Ball(*unpack("If?", incoming_bytes))
</code></pre>
</div>
<span class="comment-copy">I suspect this question will end up closed for one reason or another, but in the interest of helping anyway, <a href="http://construct.readthedocs.io" rel="nofollow noreferrer"><code>construct</code></a> would probably be better-suited than <code>struct</code>.</span>
<span class="comment-copy">Hmm, check out <a href="http://varx.org/wordpress/2016/02/03/bit-fields-in-python/" rel="nofollow noreferrer">this</a>.</span>
<span class="comment-copy">@juanpa.arrivillaga. I think that is a perfect example. I was very familiar with how to do this in C, but I was curious the proper python method. I like the references in that article for using native python libraries.</span>
<span class="comment-copy">@jwodder: Thank you. I'll check that out, but was hoping for a native python approach.</span>
<span class="comment-copy">@Pat yeah, if you want to do something like you would do it in C, generally <code>ctypes</code> and <code>struct</code> with maybe <code>array</code> modules is what you need to look at.</span>
