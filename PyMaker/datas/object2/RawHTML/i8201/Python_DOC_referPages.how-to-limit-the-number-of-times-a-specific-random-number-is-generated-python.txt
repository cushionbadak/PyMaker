<div class="post-text" itemprop="text">
<p>I am currently working on a memory game in python as a class project. I am trying to generate random numbers between 0 and 3 which would correspond to a certain card. The thing is, I need each card to only appear twice. No more, and no less. </p>
<p>Here is my current code:</p>
<pre><code>import random
cards = ["___TI___", "___GK___", "___QW___", "___KJ___"]
boardTemp1 = ['1', '2',
              '3', '4',
              '5', '6',
              '7', '8']

def shuffle():

    cardChoose = random.randint(0, 3)
    boardChoose = random.randint(0, 7)
    randCard = 9
    randCard = cards[cardChoose]
    boardTemp1[boardChoose] = cards[cardChoose]
    return randCard

boardTemp1[0] = shuffle()
boardTemp1[1] = shuffle()
boardTemp1[2] = shuffle()
boardTemp1[3] = shuffle()
boardTemp1[4] = shuffle()
boardTemp1[5] = shuffle()
boardTemp1[6] = shuffle()
boardTemp1[7] = shuffle()


print(boardTemp1)
</code></pre>
<p>Thanks for any help</p>
</div>
<div class="post-text" itemprop="text">
<p>Making independent random choices isn't a good approach when you have a specific set of items that you're shuffling around.  Try this instead:</p>
<pre><code>import random
cards = ["___TI___", "___GK___", "___QW___", "___KJ___"]
boardTemp1 = cards * 2
random.shuffle(boardTemp1)
print(boardTemp1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would list each card twice and randomize the list instead of the board, then remove each card from the list as you place it on the board:</p>
<pre><code>import random

cards = [1, 1, 2, 2, 3, 3, 4, 4]
random.shuffle(cards)

while cards:
    card = cards.pop()
    # place each card on the board sequentially
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Can you store the numbers in two lists as they are generated? 
When a number is generated:
check the lists:</p>
<p>-if number is not in first list, add it</p>
<p>-if number is in the first list, check the second</p>
<p>-if number is not in the second, add it</p>
<p>-if number is in the second list, then it has been generated twice, and do what you want from there, which is assume is to generate
   another random number.</p>
<p>eg something like this:</p>
<pre><code>list1=[]
list2=[]
n=newly generated random number
if n not in list1:
    list1.append(n)
elif
  if n not in list2:
    list2.append(n)
else:
  #regenerate random number
</code></pre>
</div>
<span class="comment-copy">Worth noting, totally random can to humans look like the algorithem stacks the game against them. If you are looking for more "fair" random shuffles take a look at <a href="https://labs.spotify.com/2014/02/28/how-to-shuffle-songs" rel="nofollow noreferrer">how spotify does it</a>.</span>
<span class="comment-copy">@Olian04 Probably good advice in general, but in this case, it’s a memory game. As long as the cards don’t move in the middle of playing, I don’t think “stacked against them” is likely to be a thing.</span>
<span class="comment-copy">@DanielH Ohh, didn't realize it was for a memory game. Then yes, general Fisher-Yates randomness would absolutely be good enough.</span>
<span class="comment-copy">you can keep a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> which will be a lot easier than 2 lists</span>
<span class="comment-copy">Thanks, I didn't know of Counter, but would the list method work? I appreciate the feedback, as I'm just getting into python/coding.</span>
<span class="comment-copy">It would work but not be very clear or useful</span>
<span class="comment-copy">Ok, appreciate it.</span>
