<div class="post-text" itemprop="text">
<p>i am following a tutorial <a href="http://www.aosabook.org/en/500L/a-python-interpreter-written-in-python.html" rel="nofollow noreferrer">here</a> which is about implementing a simple stack based python byte code interpreter . </p>
<p>i am having problem in this funciton :</p>
<pre><code>def parse_byte_and_args(self):
    .........
    if byteCode &gt;= dis.HAVE_ARGUMENT: #&lt;-----------------------this part
</code></pre>
<p>what exactly is <code>dis.HACE_ARGUMENT</code> ? since its a big function i thought not to post it here rather give link to it.if its required let me know</p>
</div>
<div class="post-text" itemprop="text">
<p>In the context of the function you are defining, you're trying to process an opcode (instruction) which may or may not have arguments associated with it.</p>
<p>If you look at the <a href="https://docs.python.org/3/library/dis.html#opcode-HAVE_ARGUMENT" rel="nofollow noreferrer">Python disassembler documentation for HAVE_ARGUMENT</a>, you'll see that dis.HAVE_ARGUMENT is used exactly for this purpose.</p>
<p>That is, if byteCode &gt;= dis.HAVE_ARGUMENT, the the opcode has arguments and you need to figure out what to do with them.  Otherwise, the opcode has no arguments and there's no extra processing required.</p>
<p>Take care, because according to the documentation I linked above, this changed slightly as of Python 3.6</p>
</div>
<span class="comment-copy">thanks, i got it now. can you suggest any other source for learning a byte code interpreter</span>
<span class="comment-copy">that function also has this statement  <code>arg_val = arg[0] + (arg[1] * 256)</code>. why multiplication by 256?</span>
<span class="comment-copy">During my brief period of writing interpreters, I found it helpful to look at two different types of resources:  Generic resources which explained the concepts (such as wikipedia, etc.), and specific resources which involved someone's own bespoke implementation.  Examples of the latter: <a href="http://www.parsifalsoft.com/examples/xidek/xidek/doc/bcidefs.htm" rel="nofollow noreferrer">Extensible Interpreter Development Kit</a>  and <a href="https://news.ycombinator.com/item?id=12553591" rel="nofollow noreferrer">My Most Important Project Was a Bytecode Interpreter</a></span>
<span class="comment-copy">In answer to your second question, multiplying by 256 is the same as bit-shifting to the left by 8 bits, so <code>arg[0] + (arg[1] * 256)</code> concatenates the bits of <code>arg[1]</code> together with the bits of <code>arg[0]</code></span>
