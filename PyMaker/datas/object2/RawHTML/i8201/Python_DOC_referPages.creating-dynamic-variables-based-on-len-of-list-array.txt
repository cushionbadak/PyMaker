<div class="post-text" itemprop="text">
<p>I am trying to write a program that runs a command on Cisco router and writes list of IP on a text file. I am able to write all IPs to the file and then grab all IPs successfully.  Now the part where I am having trouble is that I do not know how many IPs I will get from the list.  As I would like to compare each IP I get from file against user's defined IP, I would like a way to either create dynamic variable based on # of IPs or somehow iterate through all IPs and compare it against user's IP.</p>
<pre><code>import re
import ipaddr

userIP = raw_input('Enter IP address to compare i.e, 10.10.10.0/24:')
ipFile = ("router.com.txt")
found = []
with open(ipFile, 'r') as f:
    for text in f.readlines()[1:]: #File had a blank line so this skips it
        text = text.rstrip()
        regex = re.findall(r'(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})\/(?:[\d]{1,3})', text)
        #print regex
        found.append(regex)
    print found
    print len(found) - 1
</code></pre>
<p>This is what I get when I run it:</p>
<pre><code>[['10.10.20.192/27'], ['10.10.40.0/24'], []]
2
</code></pre>
<p>Now the hard part where I am struggling is how can I compare each of these with variable <strong>userIP</strong> dynamically.</p>
<pre><code>#if userIP.overlaps(found):
#print "Overlapping IPs!!"
#else:
#print "Does not Overlap!!" 
</code></pre>
<p>Thanks
Damon</p>
</div>
<div class="post-text" itemprop="text">
<p>You can compare each IP address with the user input subnet one by one like this (and it actually uses less memory than your code):</p>
<pre><code>import re

userIP = raw_input('Enter IP address to compare i.e, 10.10.10.0/24:')
userIP = pseudoSubnetClass(userIP)     # pseudo code
ipFile = ("router.com.txt")
found = []
with open(ipFile, 'r') as f:
    for text in f: #File had a blank line so this skips it
        text = text.rstrip()
        match = re.findall(r'(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})\/(?:[\d]{1,3})', text)
        if not match:
            continue
        found = match[0]
        if userIP.overlaps(found):     # This part is
            print "Overlapping IPs!!"  # pseudo code too
            break
    else:
        print "Does not Overlap!!"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you can avoid a lot of complexity once you take into account that <code>re.findall</code> will pull out all IPs over all lines of the file itself, you don't need to have your own loop. For example:</p>
<pre><code>import re

userIP = raw_input('Enter IP address to compare i.e, 10.10.10.0/24:')
ipFile = "router.com.txt"

with open(ipFile) as f:
    for ip in re.findall(r'(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})\/(?:[\d]{1,3})', f.read()):
        if overlaps(ip, userIP):
            print "Overlapping IPs!!"
            break
</code></pre>
<p>The <code>overlaps()</code> function is just a made up example, to help illustrate the rest of the logic.</p>
</div>
<div class="post-text" itemprop="text">
<p>Could this be what you want?</p>
<p>Change <code>append</code> to <code>extend</code> so that the resulting list is something like <code>['10.10.20.192/27', '10.10.40.0/24', '']</code>.</p>
<pre><code>found.extend(regex)
</code></pre>
<p>Ask whether <code>userIP</code> matches any of those found:</p>
<pre><code>if userIP in found:
    &lt;suite&gt;
</code></pre>
</div>
<span class="comment-copy">It looks like you can use the built-in <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.compare_networks" rel="nofollow noreferrer"><code>ipaddress</code></a> library if you are using Python 3.3+. However, for Py2.7 there is a backport package you can still use: <a href="https://pypi.python.org/pypi/py2-ipaddress" rel="nofollow noreferrer">pypi.python.org/pypi/py2-ipaddress</a></span>
<span class="comment-copy">I am using ipaddr.py and it is working fine for me.  I need help with dynamic variable part</span>
<span class="comment-copy">What do you mean by "dynamic variables"?</span>
<span class="comment-copy">I am new to programming so that was the first thing that popped up in my mind.  Since list length is dynamic I couldn't think a way other than dynamically assigning creating IP and assigning them all IPs.  If there is a better way I will use it</span>
<span class="comment-copy">Damon: Most containers, like lists and dictionaries, are mutable, which means their contents can be altered at almost any time. To me a "dynamic variable" is one the program creates <b>and names</b> at runtimeâ€”which is generally considered a bad idea and can generally be avoided by using a mutable container.</span>
<span class="comment-copy">I edited the code as it is if userIP.overlaps(found): instead of if subnet.overlaps(found):  Also, I am getting this:  AttributeError: 'str' object has no attribute 'overlaps'</span>
<span class="comment-copy">@Damon you said you are using <code>ipaddr.py</code>. The conditional test is actually your pseudo code. Do you want me to change that to use <code>ipaddress</code>?</span>
<span class="comment-copy">Conditional test is actually works (ipaddr.py).  For example:  if userIP.overlaps(found):    I hardcoded userIP and found variables and it worked as it suppose to.</span>
<span class="comment-copy">@Damon: the <code>userIP</code> is input through <code>raw_input</code> and it must be a <code>str</code>. Did you use that value to create an object later somewhere?</span>
<span class="comment-copy">That is the end plan but for faster testing I hardcoded it:  userIP = "10.10.10.0/24"</span>
<span class="comment-copy">@Philip Tzou and your solution worked after I fixed an obvious issue.  Can you tell me which one is a better solution to use?  This list won't grow more than 10 IPs usually but I might use this for future project.  Which one is more efficient?  Thanks all for helping  ;)</span>
