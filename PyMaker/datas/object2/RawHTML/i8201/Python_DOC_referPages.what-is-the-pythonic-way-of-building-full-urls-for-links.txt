<div class="post-text" itemprop="text">
<p>I'm looking for a way to build urls in python3 without having to do string concatenation. I get that I can </p>
<pre><code>import requests
url_endpoint = 'https://www.duckduckgo.com'
mydict = {'q': 'whee! Stanford!!!', 'something': 'else'}
resp = requests.get(url_endpoint, params=mydict)
print(resp.url) # THIS IS EXACTLY WHAT I WANT
</code></pre>
<p>or</p>
<pre><code>from requests import Request, Session
s = Session()
req = Request('GET',  url, params={'q': 'blah'})
print(req.url)
# I didn't get this to work, but from the docs 
#   it should build the url without making the call
</code></pre>
<p>or</p>
<pre><code>url = baseurl + "?" + urllib.urlencode(params)
</code></pre>
<p>I like that the request library intelligently decides to drop <code>?</code> if it isn't needed, but that code actually makes a full GET request so instead of just building a full text url (which I plan to dump to an html tag). I am using django, but I didn't see anything to help with that in the core library.</p>
</div>
<div class="post-text" itemprop="text">
<p>Django comes with <a href="https://docs.djangoproject.com/en/1.11/ref/request-response/#django.http.QueryDict" rel="nofollow noreferrer"><code>QueryDict</code>s</a> which basically do everything you want.</p>
<pre><code>def make_url(url, args=None):
    query = QueryDict(mutable=True)
    query.update(args or {})
    return '{}{}{}'.format(url, '?' if query else '', query.urlencode())
</code></pre>
<p>It supports multiple values per argument just like you can encounter in a url: <code>example.com/foo?a=1&amp;a=2&amp;a=3</code>.</p>
</div>
<span class="comment-copy">Maybe if you build a <a href="http://docs.python-requests.org/en/master/api/#requests.Request" rel="nofollow noreferrer"><code>requests.Request</code></a> or <code>requests.PreparedRequest</code> (which won't send it), you can get the URL out of that object.</span>
<span class="comment-copy">Are you aware of <a href="https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse" rel="nofollow noreferrer"><code>urllib.parse</code></a>?</span>
<span class="comment-copy"><code>req.url</code> will contain the url after redirections, so it needs a request to be populated.</span>
<span class="comment-copy">If to be done offline, there's of course <a href="https://docs.python.org/2/library/urlparse.html#urlparse.urlunparse" rel="nofollow noreferrer"><code>urlunparse()</code></a>.</span>
<span class="comment-copy">urlunparse has an unwieldy method signature, requiring 6 paramaters as a tuple.</span>
<span class="comment-copy">Why use QueryDict over: <code>url = '{}{}{}'.format(baseurl, '?' if query else '', urllib.parse.urlencode(params)</code>?</span>
