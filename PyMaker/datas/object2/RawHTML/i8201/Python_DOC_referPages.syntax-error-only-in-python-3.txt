<div class="post-text" itemprop="text">
<p>I have the following code which runs fine on <code>python 2</code> but throws error on <code>python 3</code></p>
<pre><code>import sys
if sys.version_info &gt; (3,):
  #print("Python 3")
  #Try Block
  except urllib2.HTTPError as err:

else:
  #print "Python 2"  # Throws error on python 3
  #Try Block
  except urllib2.HTTPError, err: # Throws error on python 3.
</code></pre>
<p>The above code returns "Python 2" in python 2, but throws syntax error on python 3 (For python 2 syntax ).</p>
<p>Can anyone tell me why is this happening ? And what is the work around to fix those syntax errors in python 3 ?</p>
<p>Note : I am aware of print syntax on Python 3</p>
<p>Thanks you!</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that the <em>parser</em> runs before any code is evaluated at runtime. Your check <code>sys.version_info &gt; (3,)</code> runs at run time, after the code was already parsed and compiled. So doing such checks, you are able to make changes <em>at runtime</em>, but that does not help you when dealing with syntax changes.</p>
<p>The syntax is parsed and compiled before any code is interpreted, that is why you get syntax errors even for code that is never run at runtime.</p>
<p>If you are trying to create a polyglot script that is able to run on both Python 3 and Python 2, then you will need to make sure to use a syntax that works on both. For <code>print</code> in particular, you can import the print function in Python 2, so you can use it just like you would in Python 3:</p>
<pre><code>from __future__ import print_function
</code></pre>
<p>Some newer features won’t work that way (for example everything async), but for the most part, you can make it work somehow.</p>
<p>If you end up depending on stuff with Python 3 that requires Python 2-incompatible syntax, then you could put that into a separate module and import that module conditionally at runtime. That way it won’t be loaded for Python 2, so the Python 2 parser wouldn’t attempt to load the incompatible syntax.</p>
<hr/>
<p>As for why Python 2 does not throw an error, that’s actually very simple: <code>print('foo bar')</code> is valid syntax in Python 2, even with the <code>print</code> <em>statement</em>. That is because you can put parentheses around anything without impacting the value. So what you actually do there is this:</p>
<pre><code>print ('foo bar')
^^^^^
print statement
      ^^^^^^^^^^^
      value, wrapped in parentheses (that don’t do anything)
</code></pre>
<p>That’s also the reason, why the following produces different results in Python 3 and 2:</p>
<pre><code>print('foo', 'bar')
</code></pre>
<p>In Python 3, you get <code>foo bar</code> as the output, while Python 2 gives you <code>('foo', 'bar')</code>. That is because the comma inside the parentheses now makes this a tuple, so you pass a tuple to the <code>print</code> statement. – Importing the print function fixes this to give you the same behavior on Python 2 as on Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Even though the line <code>print "Python 2"</code> will never be <em>executed</em> in Python 3, it will still be <em>compiled</em> to byte code (or at least attempted). That line is a syntax error in Python 3, which requires the printed items to be in parentheses. Look up the documentation for more details: other changes to <code>print</code> were also made.</p>
<p>So remove the error. Make the line</p>
<pre><code>print("Python 2")  # Throws error on python 3
</code></pre>
<p>instead. That way it works in both Python 2 and in 3. There are many sites that discuss how to write code that executes in both versions of Python. The parentheses are merely ignored in version 2 but are needed in version 3. This works if you print only one item: more than one gets more complicated.</p>
<p>There is another way to do printing in both versions, using <code>from __future__ import print_function</code> but the way I showed is easier.</p>
<p>Note that your attempted comment in the line is also not proper Python syntax. Change the <code>//</code> to <code>#</code> and it works.</p>
</div>
<span class="comment-copy">python3 needs parens for print...</span>
<span class="comment-copy">print is a function in python 3. This is among the first things mentioned on any of the zillions of googleable docs and official docs on python 2 / 3 differences.</span>
<span class="comment-copy">It's for a migration process from python 2 to python 3. Same code works on python 2 but doesn't work on python 3.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/howto/pyporting.html" rel="nofollow noreferrer">docs.python.org/3/howto/pyporting.html</a></span>
<span class="comment-copy">@chris Code works in Python 2 but it's not throwing any errors for <code>print("Python 3")</code> . But on Python 3, It's throwing errors for <code>print("Python 3")</code>. it's considering as syntax error at this line.  I know we have to use parentheses for print on P3</span>
<span class="comment-copy">Understood ! Thanks for explaining.   What if I want to import some libraries/classes instead of print statement. ?</span>
<span class="comment-copy"><code>As for why Python 2 does not throw an error, that’s actually very simple: print('foo bar') is valid syntax in Python 2, even with the print statement. That is because you can put parentheses around anything without impacting the value. So what you actually do there is this:</code> +1 For this</span>
<span class="comment-copy">Importing is a process that happens at runtime, so you can easily make that conditional on the version.</span>
<span class="comment-copy">I am getting error for this line <code>except urllib2.HTTPError, err:</code> while executing on P3. I know that it has to be <code>except urllib2.HTTPError as err:</code> on P3, but <code>except urllib2.HTTPError, err:</code> should execute only if it's P2.  I used print example only to make the question short.</span>
<span class="comment-copy"><code>except</code> is again a syntax feature, so you will have to use the syntax that works for both. So use <code>as</code>.</span>
<span class="comment-copy">Makes more sense than all other comments. But I want to keep both the blocks, as it's an application that should support both Python 2 and Python 3.</span>
<span class="comment-copy">@Nandan: One of my points was that putting both print statements in parentheses, when printing one only item per print command, works in both versions of Python. Did you try it? If by "keep both the blocks" you mean make no modifications at all to the code, I do not see how that is possible. Did you also change the comment style to <code>#</code> or remove the comment?</span>
<span class="comment-copy">@nandan: If you put <code>from __future__ import print_function</code>, then  Python 2 can have print as a function and Python 3 will not be changed.</span>
<span class="comment-copy">Understood ! Thanks for explaining. What if I want to import some libraries/classes instead of print statement. ?</span>
<span class="comment-copy">I am getting error for this line <code>except urllib2.HTTPError, err:</code> while executing on P3. I know that it has to be <code>except urllib2.HTTPError as err:</code> on P3, but <code>except urllib2.HTTPError, err:</code> should execute only if it's P2.  I used print example only to make the question short.</span>
