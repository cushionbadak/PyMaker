<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/34766677/python-splat-unpack-operator-in-python-cannot-be-used-in-an-expression">Python: Splat/unpack operator * in python cannot be used in an expression?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>In python, I can use the splat operator to unpack a list and send the list items as arguments to a function</p>
<pre><code>dirs = ['this','is','a','file','path']
path = os.path.join(*dirs)
# path is now 'this/is/a/file/path'
</code></pre>
<p>My question is, why is this feature limited to method params?</p>
<p>For example, the following is invalid syntax:</p>
<pre><code>x = [1,2,3]
y = [0,*x,4,5]
</code></pre>
<p>Why doesn't this result in <code>[0,1,2,3,4,5]</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned, it is valid syntax <a href="https://docs.python.org/3/whatsnew/3.5.html#pep-448-additional-unpacking-generalizations" rel="nofollow noreferrer">as of Python 3.5+</a>:</p>
<pre><code>&gt;&gt;&gt; x = [1,2,3]
&gt;&gt;&gt; y = [0,*x,4,5]
&gt;&gt;&gt; y
[0, 1, 2, 3, 4, 5]
</code></pre>
<p>You can read about this and more use cases in <a href="https://www.python.org/dev/peps/pep-0448/" rel="nofollow noreferrer">PEP 448: "Additional Unpacking Generalizations"</a>.</p>
</div>
<span class="comment-copy">It's a valid syntax in Python 3.5 and newer.</span>
<span class="comment-copy">Wow, they were really quick to implement my suggestion! :)</span>
<span class="comment-copy">Thanks! @vaultah</span>
<span class="comment-copy">Upvote for including the PEP reference.</span>
