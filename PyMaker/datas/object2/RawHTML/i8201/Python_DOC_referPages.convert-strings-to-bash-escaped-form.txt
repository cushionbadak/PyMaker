<div class="post-text" itemprop="text">
<p><strong>How to make normal strings (filenames in my case) to Linux CLI/bash escaped strings?</strong></p>
<p>Examples:</p>
<p><code>"It's a great weather today" -&gt; "It\'s\ a\ great\ weather\ today"</code></p>
<p><code>"Wind [Wine]" -&gt; "Wind\ [Wine]"</code></p>
<p><code>"/Downloads/RPM's/" -&gt; "/Downloads/RPM\'s/"</code></p>
<p>I would like to know if there's an easier way to do that, as I am reading filenames in my python script and when I am forwarding them to a bash command, it's failing. </p>
<p>The problem is the number of files are too many and it won't be possible for me to rename or do string manipulation for them.</p>
<hr/>
<p>I am using Python 2.7 on a CentOS 7 System</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>shlex</code>, see <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow noreferrer">here</a>, it has arguments for <code>escape</code>, <code>qoutes</code> and <code>escapedqoutes</code>.</p>
</div>
<span class="comment-copy">Are you using <code>subprocess</code>? If the <code>bash</code> script is written correctly, you shouldn't need to. If the <code>bash</code> script <i>isn't</i> written correctly, there's no guarantee that doing this will help.</span>
<span class="comment-copy"><code>foo="Wind [Wine]"; subprocess.call(["script.bash", foo])</code>. No escaping of <code>foo</code> should be required.</span>
<span class="comment-copy">Thanks, I also find this link which was also helpful:   <a href="http://stackoverflow.com/questions/18116465/escape-a-string-for-shell-commands-in-python" title="escape a string for shell commands in python">stackoverflow.com/questions/18116465/â€¦</a></span>
