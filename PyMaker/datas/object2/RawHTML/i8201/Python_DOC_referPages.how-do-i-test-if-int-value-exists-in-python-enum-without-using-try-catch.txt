<div class="post-text" itemprop="text">
<p>Using the Python Enum class, is there a way to test if an Enum contains a specific int value without using try/catch?</p>
<p>With the following class:</p>
<pre><code>from enum import Enum

class Fruit(Enum):
    Apple = 4
    Orange = 5
    Pear = 6
</code></pre>
<p>How can I test for the value 6 (returning true), or the value 7 (returning false)?</p>
</div>
<div class="post-text" itemprop="text">
<p>you can list the values like this:</p>
<pre><code>values = [item.value for item in Fruit]  # [4, 5, 6]
</code></pre>
<p>or (probably better): use a <code>set</code>; the <code>in</code> operator will be more efficient:</p>
<pre><code>values = set(item.value for item in Fruit)  # {4, 5, 6}
</code></pre>
<p>then test with</p>
<pre><code>5 in values  # True
7 in values  # False
</code></pre>
<p>you could also add this as a method to your class:</p>
<pre><code>class Fruit(Enum):
    Apple = 4
    Orange = 5
    Pear = 6

    @classmethod
    def has_value(cls, value):
        return any(value == item.value for item in cls)


print(Fruit.has_value(5))  # True
print(Fruit.has_value(7))  # False
</code></pre>
<p>if you want to test for the names (and not the values) <a href="https://stackoverflow.com/a/43634675/4954037">Reda Maachi's answer</a> covers what i would do.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>Enum.__members__</code> - <a href="https://docs.python.org/3/library/enum.html#iteration" rel="noreferrer"><em>an ordered dictionary mapping names to members</em></a>:</p>
<pre><code>In [12]: 'Apple' in Fruit.__members__
Out[12]: True

In [13]: 'Grape' in Fruit.__members__
Out[13]: False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just check whether it's in <code>Enum. _value2member_map_</code></p>
<pre><code>In[15]: Fruit._value2member_map_
Out[15]: {4: &lt;Fruit.Apple: 4&gt;, 5: &lt;Fruit.Orange: 5&gt;, 6: &lt;Fruit.Pear: 6&gt;}

In[16]: 6 in Fruit._value2member_map_
Out[16]: True

In[17]: 7 in Fruit._value2member_map_
Out[17]: False
</code></pre>
</div>
<span class="comment-copy">I personally prefer the second solution. Thank you.</span>
<span class="comment-copy">Either advice is not particularly memory- or time-efficient, although also not very heavy in these terms. In my case, I am working with the <code>HTTPStatus</code> enum from the standard library which as of now contains 57 entries. I would never process a whole list of values from an enumeration, and caching them is something I'd like to avoid.</span>
<span class="comment-copy">@none if you are worried about speed you could create a <code>set</code> for the lookup. that would use some additional memory but not a significant amount...</span>
<span class="comment-copy">Why the parentheses around the return value?</span>
<span class="comment-copy">@Konstantin you are absolutely right: there is no point to those parentheses. edited the answer. thanks!</span>
<span class="comment-copy">The question is asking to test for an int value, not a string.</span>
<span class="comment-copy">Is there no member in Enum that contains the values? Isn't that strange?</span>
<span class="comment-copy">This goes in the opposite direction from what the question asked.</span>
