<div class="post-text" itemprop="text">
<p>I have a list of tuples of the following format: </p>
<pre><code>list = [(var1, var2, var3). (var1, var2, var3), ...]
</code></pre>
<p>Is it possible to construct an <code>if var is in list</code> statement that only checks if <code>var</code> is specifically in one of the <code>var3</code> slots?</p>
<p>For example, given the following list:</p>
<pre><code>list = [(1, 2, 3), (7, 8, 9)]
</code></pre>
<p>I want to be able to check <code>if var is in List</code> in such a way that it will be true if <code>var == 3</code> but NOT true if <code>var == 2</code> since it's only checking a <strong><em>specific position</em></strong> in each tuple.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use:</p>
<pre><code>if any(x[2] == var for x in l)
</code></pre>
<p>(p.s: don't name your variable <code>list</code> since you override the built-in type)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the built-in <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a>:</p>
<pre><code>&gt;&gt;&gt; lst = [(1, 2, 3), (7, 8, 9)]
&gt;&gt;&gt; any(v3==3 for *_, v3 in lst)
True
</code></pre>
<p>It short-circuits once a match is found so you don't need to iterate over the entire list.</p>
<p>Can be extended to Python 2 (since extended unpacking will not work):</p>
<pre><code>any(v3==3 for _, _, v3 in lst)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following trick to get a list of all the var1 values, a list of all var2 values, and a list of all var3 values:</p>
<pre><code>var1s, var2s, var3s = zip(*list)
</code></pre>
<p>Then you simply check <code>if var is in var3s</code>.</p>
</div>
<span class="comment-copy">You could do <code>if var in (x[2] for x in list)</code></span>
<span class="comment-copy">Never name your variables as the language keywords - <code>list</code> in your sample code.</span>
<span class="comment-copy">@vaultah this is really useful. Much thanks!</span>
<span class="comment-copy">This is perfect, Thanks! And yeah the actual name will be something more descriptive, "node_list" etc</span>
<span class="comment-copy"><code>*_, v3</code> is cute.</span>
<span class="comment-copy">will this work for <code>lst = [(1, 2, 3, 7), (8, 9)]</code>?</span>
<span class="comment-copy">@amarnath The Python 3 solution will always go for the last item, so yes.</span>
<span class="comment-copy">If you need a python 2 solution you could do <code>any(x[-1]==3 for x in lst)</code> and you just want the last item and you aren't sure of the sizes of tuples.</span>
