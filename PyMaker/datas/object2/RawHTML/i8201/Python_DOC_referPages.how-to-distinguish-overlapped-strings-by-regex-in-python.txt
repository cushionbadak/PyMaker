<div class="post-text" itemprop="text">
<p>I want to find all four-letter strings in a sequence. The first letter is 'N', the second one is not 'P', the third one is 'S' or 'T' and the last one is not 'P'.</p>
<p>Here's my code:</p>
<pre><code>import re
seq='NNSTQ'
glyco=re.findall('N[^P][S|T][^P]',seq)
print glyco
</code></pre>
<p>and the result is:</p>
<p><code>['NNST']</code></p>
<p>However, the expected output should be:</p>
<p><code>['NNST','NSTQ']</code></p>
<p>I think the problem is that these two strings have overlapped part, and re.findall() just skips the second one. What can I do to solve it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use the <code>(?=...)</code> (lookahead assertion) instead, since <code>findall</code> only matches use the part of the string only once, with means, ignores overlapping:</p>
<pre><code>import re
seq='NNSTQ'
glyco=re.findall('(?=(N[^P][S|T][^P]))',seq)
print (glyco) 
# prints ['NNST','NSTQ']
</code></pre>
<p>This will match everything even if it overlaps. As the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">doc</a> stated:</p>
<blockquote>
<p>(?=...) </p>
<p>Matches if ... matches next, but doesn’t consume any of the
  string. This is called a lookahead assertion. For example, Isaac
  (?=Asimov) will match 'Isaac ' only if it’s followed by 'Asimov'.</p>
</blockquote>
<p>You can also check this for more info:</p>
<p><a href="http://regular-expressions.mobi/lookaround.html?wlr=1" rel="nofollow noreferrer">http://regular-expressions.mobi/lookaround.html?wlr=1</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>findall()</code> does not return overlapping matches, but there is nothing to stop you from explicitly searching for them, for example with:</p>
<pre><code>def myfindall(p, s):
 found = []
 i = 0
 while True:
  r = re.search(p, s[i:])
  if r is None:
   break
  found.append(r.group())
  i += r.start()+1
 return found

seq='NNSTQ'
glyco=myfindall('N[^P][ST][^P]', seq)
</code></pre>
</div>
<span class="comment-copy">How does your answer address the requirement that N is the first letter, etc?</span>
<span class="comment-copy">edited to add an example of calling it with the pattern where N is the first letter</span>
