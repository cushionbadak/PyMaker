<div class="post-text" itemprop="text">
<p>Say I have a function <code>fun(f, x, y)</code> where x and y are numbers and f is a string specifying a function such as <code>"1 / x ** 2 + y"</code>.</p>
<p>I wish to use this function <code>f</code> a lot, say a few million times, and the values of <code>x</code> and <code>y</code> change between each use.<br/>
Therefore calling <code>eval(f)</code> takes a significant amount of time as opposed to just calculating the value of the function each time. (About 50x, in my measured case.)</p>
<p>Is there any way to save this function <code>f</code> so that I would only have to call <code>eval</code> once?</p>
<p><strong>PS.</strong> Please do not discuss the (un)safety of using <code>eval</code> here, I am aware of it, but this code isn't going anywhere where a 3rd party will run it, nor is it relevant to my question.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could <code>eval</code> the <code>lambda</code>, so you just evaluate it once, and after that it's a function that you can use:</p>
<pre><code>s = "1 / x ** 2 + y"

s = "lambda x,y: "+s
f = eval(s)
x = 2
y = 3
print(f(x,y))
</code></pre>
<p>I get <code>3.25</code>, but I can change <code>x</code> and <code>y</code> as many times I need without evaluating the expression again.</p>
</div>
<div class="post-text" itemprop="text">
<p>If Jean_Francois' solution still isn't fast enough, you can take a look at numba. <code>f_numba = jit(f)</code>, and then probably also @jit the function that calls f_numba so that f_numba is inlined into the caller. Depends on your application.</p>
</div>
<span class="comment-copy">Why do you need the function to be stored as a string?</span>
<span class="comment-copy">It will be input by the user.</span>
<span class="comment-copy">Another option is to pre-<a href="https://docs.python.org/3/library/functions.html#compile" rel="nofollow noreferrer">compile</a> your expression into a code object, but Jean-Fran√ßois's technique is almost twice as fast.</span>
