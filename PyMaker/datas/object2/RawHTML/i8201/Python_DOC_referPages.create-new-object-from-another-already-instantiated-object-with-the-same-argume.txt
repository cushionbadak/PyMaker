<div class="post-text" itemprop="text">
<p>Is it possible in python to recreate an object from already instatiated object, with all it's arguments passed into <code>__init__</code> method?</p>
<p>Something similar to <code>inspect.getcallargs</code>, but for class instances.</p>
<p>For example:</p>
<pre><code>class A:
    def __init__(self, some_arg):
        self.some_arg = some_arg

def f(a):
    # somehow get all arguments from `a`, with which it was created
    # kwargs = ...?
    # and create a new instance of class with the same (or modified) args:
    return a.__class__(**kwargs)

a = A(100)
new_a = f(a)
print(new_a.some_arg)
&gt;&gt;&gt; 100
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, it is not possible, because the arguments of the <code>__init__</code> method might have been discarded, used to compute other values, or saved in a multitude of different manners which would be impossible to create a generic method to retrieve. </p>
<p>However, you can achieve flexible object initialization from preset configurable parameters by using <a href="http://python-3-patterns-idioms-test.readthedocs.io/en/latest/Factory.html" rel="nofollow noreferrer">the Factory pattern</a>, and you can copy existing objects using <a href="https://docs.python.org/3/library/copy.html" rel="nofollow noreferrer"><code>copy.deepcopy</code></a>. (However, be aware that there are edge cases to deepcopy, so be careful when using it and be sure to read the docs)</p>
</div>
<span class="comment-copy">See <a href="http://stackoverflow.com/questions/15661063/main-purpose-of-repr-in-python">Main purpose of <code>__repr__</code> in python</a></span>
