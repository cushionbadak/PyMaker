<div class="post-text" itemprop="text">
<p>I'm extremely new to Python, and have tried in vain to search for this exact problem - I can find several similar issues but none that quite fit, and I think I'm now getting further away from it.</p>
<p>My overall goal is to collect specific data points from a large number of forms for export into csv. I've started by bringing the .txt file into Python as one huge string (maybe not the best), but now I'm stuck on collecting those data points. They can all be located between static language, but so far I've only figured out how to capture single instances rather than multiple. It's an extended version of this:</p>
<pre><code>horrible_string = 'stuff KNOWN START first data to collect KNOWN END further stuff KNOWN START second data to collect KNOWN END'
</code></pre>
<p>I can collect "first data to collect" but my amateur code ends there - I need to get both "first data to collect" and "second data to collect" out of this string (and ideally put them in some format that I can later export to csv).</p>
<p>There will be several / many data points (in the above example, different "Known Starts" and "Ends") I need to collect, but I assume if I understand the core code I can expand it out to capture those points, and not waste everyone's time. Is this something that will require me to learn RegEx, or is there a more straightforward method I'm missing?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Learn regular expressions.</strong></p>
<p>They'll help you all your life as a developer.</p>
<p>So just <code>import re</code> </p>
<p>And really, it's not that hard : <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">https://docs.python.org/3/howto/regex.html</a></p>
<pre><code>horrible_string = 'stuff KNOWN START first data to collect KNOWN END further stuff KNOWN START second data to collect KNOWN END'
m = re.findall( 'KNOWN\ START\ (.*?)\ KNOWN\ END', horrible_string, re.DOTALL)
print(m)

# =&gt; ['first data to collect', 'second data to collect']
</code></pre>
</div>
<span class="comment-copy">Thank you, this helps terrifically and steers me in the right direction - I'm working on learning regex and I'm a little further along. At the moment I'm still a bit confused on how to capture null values here (which is a requirement for exporting to csv correctly). In the case of a null, this interprets a blank badly. Ex:    worse_string = 'varA: Yes varB: No varA: varB: Yes' Because the second varA is missing any value, it actually picks up everything between that and the following instance of a varB. Still working through this, will update if I learn enough regex to fix it first...</span>
<span class="comment-copy">Actually it looks like single spaces don't get picked up, but multiple whitespaces do - I'm trying to make \s work to pick up individual spaces because there are instances where they can cause problems with missed entries, but I can't quite see it yet.</span>
<span class="comment-copy">Scratch that, works perfectly, was being an idiot. Exported to csv, beautiful!</span>
<span class="comment-copy">if that works for you, please accept the answer hitting the "V sign" below voting signs. :)</span>
