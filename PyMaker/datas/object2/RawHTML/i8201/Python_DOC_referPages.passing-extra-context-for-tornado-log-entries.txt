<div class="post-text" itemprop="text">
<p>Our log formatter has a user defined parameter. It is defined as:</p>
<pre><code>'%(asctime)s|%(levelname)s|%(name)s|REQID:%(req_id)s|%(module)s:%(lineno)s|%(message)s'
</code></pre>
<p>where <code>req_id</code> is a request id, generated by application code for every request. When we are processing the requests, on our application code, we have access to this <code>req_id</code>, and we use it for logging purposes like this:</p>
<pre><code>logger = logging.LoggerAdapter(logging.getLogger(service_name), {'req_id': req_id})
logger.debug('A debug message')
</code></pre>
<p>I am trying to make the tornado logger conforming to our log format, but since tornado has no access to our application level <code>req_id</code> it fails with:</p>
<pre><code>KeyError: 'req_id'
</code></pre>
<p>How can I tell tornado to use a <code>LoggerAdapter</code> for <code>tornado.access</code>, with a user provided context?</p>
<h2>EDIT</h2>
<p>As a workaround, I tried the following:</p>
<blockquote>
<p>Since it is not possible for me to tell tornado what loggers to use, I managed to hack my way around this limitation by reconfiguring the tornado logger in each request, adding the contextual information using a <a href="https://docs.python.org/3/howto/logging-cookbook.html#using-filters-to-impart-contextual-information" rel="nofollow noreferrer">logging filter</a>.</p>
</blockquote>
<p>Unfortunately, reconfiguring the log for each request does not work since tornado will be serving requests in parallel, and we will get an inconsistent state.</p>
<p>How can we pass user context for the tornado loggers then?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>tornado.access</code> log can be controlled by overriding <a href="http://www.tornadoweb.org/en/stable/web.html#tornado.web.Application.log_request" rel="nofollow noreferrer"><code>Application.log_request</code></a> in a subclass or using the <code>log_function</code> application setting. This method defaults to writing to the <code>tornado.access</code> log, but you can override it to log however you want.</p>
<p>Note however that the <code>tornado.general</code> and <code>tornado.application</code> loggers cannot be overridden in this way, so your log formatters/filters must still be able to handle messages that do not have the <code>req_id</code> field.</p>
</div>
