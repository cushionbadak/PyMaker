<div class="post-text" itemprop="text">
<p>below is some code written to open a CSV file. Its values are stored like this:</p>
<pre><code>03/05/2017 09:40:19,21.2,35.0
03/05/2017 09:40:27,21.2,35.0
03/05/2017 09:40:38,21.1,35.0
03/05/2017 09:40:48,21.1,35.0
</code></pre>
<p>This is just a snippet of code I use in a real time plotting program, which fully works but the fact that the array is getting so big is unclean. Normally new values get added to the CSV while the program is running and the length of the arrays is very high. Is there a way to not have exploding arrays like this?
Just run the program, you will have to make a CSV with those values too and you will see my problem.</p>
<pre><code>from datetime import datetime
import time


y = []    #temperature
t = []    #time object
h = []    #humidity

def readfile():
 readFile = open('document.csv', 'r')
 sepFile = readFile.read().split('\n')
 readFile.close()
 for idx, plotPair in enumerate(sepFile):
     if plotPair in '. ':
         # skip. or space
         continue
     if idx &gt; 1:  # to skip the first line
         xAndY = plotPair.split(',')
         time_string = xAndY[0]
         time_string1 = datetime.strptime(time_string, '%d/%m/%Y %H:%M:%S')

         t.append(time_string1)
         y.append(float(xAndY[1]))
         h.append(float(xAndY[2]))
         print([y])        

while True:

    readfile()
    time.sleep(2)
</code></pre>
<p>This is the output I get:</p>
<pre><code>[[21.1]]
[[21.1, 21.1]]
[[21.1, 21.1, 21.1]]
[[21.1, 21.1, 21.1, 21.1]]
[[21.1, 21.1, 21.1, 21.1, 21.1]]
</code></pre>
<p>Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use Python's <a href="https://docs.python.org/3/library/collections.html?highlight=deque#collections.deque" rel="nofollow noreferrer"><code>deque</code></a> if you also want to limit the total number of entries you wish to keep. It produces a list which features a maximum length. Once the list is full, any new entries push the oldest entry off the start.</p>
<p>The reason your list is growing is that you need to re-read your file up to the point of you last entry before continuing to add new entries. Assuming your timestamps are unique, you could use <code>takewhile()</code> to help you do this, which reads entries until a condition is met.</p>
<pre><code>from itertools import takewhile    
from collections import deque
from datetime import datetime
import csv
import time


max_length = 1000     # keep this many entries

t = deque(maxlen=max_length) # time object
y = deque(maxlen=max_length) # temperature
h = deque(maxlen=max_length) # humidity

def read_file():
    with open('document.csv', newline='') as f_input:
        csv_input = csv.reader(f_input)
        header = next(csv_input)    # skip over the header line

        # If there are existing entries, read until the last read item is found again
        if len(t):
            list(takewhile(lambda row: datetime.strptime(row[0], '%d/%m/%Y %H:%M:%S') != t[-1], csv_input))

        for row in csv_input:
            print(row)
            t.append(datetime.strptime(row[0], '%d/%m/%Y %H:%M:%S'))
            y.append(float(row[1]))
            h.append(float(row[2]))

while True:
    read_file()
    print(t)
    time.sleep(1)
</code></pre>
<p>Also, it is easier to work with the entries using Python's built in <a href="https://docs.python.org/3/library/csv.html?highlight=csv#module-csv" rel="nofollow noreferrer"><code>csv</code></a> library to read each of the values into a list for each row. As you have a header row, read this in using <code>next()</code> before starting the loop.</p>
</div>
<span class="comment-copy">you can use collections.deque with maxlength and append data to it.</span>
<span class="comment-copy">Your appeding a list inside a while True loop. You can declare your lists inside readFile method or use insert instead of append</span>
