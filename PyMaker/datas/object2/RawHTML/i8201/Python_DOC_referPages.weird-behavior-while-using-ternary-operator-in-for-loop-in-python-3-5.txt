<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11922302/python-ternary-operator-behaviour">python ternary operator behaviour</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>While I was testing ternary operator in python 3, I came across this weird phenomenon</p>
<pre><code>import string
test = ""
testing = chr(0) if chr(0) in test else ""
for c in string.ascii_letters + testing:
    print(c)
</code></pre>
<p>would print a~Z 1 character per line, but</p>
<pre><code>import string

test = ""
for c in string.ascii_letters + chr(0) if chr(0) in test else "":
    print(c)
</code></pre>
<p>would print nothing.<br/>
Can somebody give me an explanation?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is due to operator precedence: <code>+</code> binds tighter than <code>if</code>.</p>
<p>In the first snippet, <code>testing</code> evalutes to "" because <code>chr(0)</code> is not in <code>test</code>. So, the loop is over ascii_letters + "", ie just the letters.</p>
<p>In the second, the <code>+</code> is evaluated first; the <code>if</code> therefore evaluates the whole thing to <code>""</code> and the loop is just over the empty string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Change to:</p>
<pre><code>for c in string.ascii_letters + (chr(0) if chr(0) in test else ""):
</code></pre>
<p>and it will work.</p>
<p>Why? <a href="https://docs.python.org/3.7/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">Operator precedence</a>. Your current code is actually:</p>
<pre><code>for c in (string.ascii_letters + chr(0)) if chr(0) in test else "":
</code></pre>
</div>
<span class="comment-copy">Change to <code>for c in string.ascii_letters + (chr(0) if chr(0) in test else "")</code> and it will work.</span>
<span class="comment-copy">Are there cases or platforms where a Python string contains a NUL character?</span>
<span class="comment-copy">Check operator precedence: <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
<span class="comment-copy">operator precedence. When you have a doubt, use parentheses.</span>
<span class="comment-copy">why is the variable <code>test</code> or the <code>if</code> statement being used? as just doing this <code>for c in string.ascii_letters: print(c)</code> gives the same functionality</span>
