<div class="post-text" itemprop="text">
<pre><code>import sys, os, datetime, time, urllib
from subprocess import *

List_SP_Servers=["toto1","toto2","toto3"]
ListTraceFile_SP_Servers=["c:\\\\dic1\\\\udic1\\\\file1.txt","c:\\\\dic1\\\\udic1\\\\file2.txt"]

for l__sp in List_SP_Servers:
    try:
        print '\n--------'+str(l__sp)+'--------'
        for l__traces in ListTraceFile_SP_Servers:
            #l__cmd1 = '['+'\"psexec\",\"\\\\'+l__sp+'\",'+'\"-nobanner\"'+',\"ls\",\"-al\"'+',"'+l__traces+'\"'+']'
            #l__cmd1 = '(['+'\"psexec\",\"\\\\'+l__sp+'\",'+'\"-nobanner\"'+',\"ls\",\"-al\"'+',"'+l__traces+'\"'+'],shell=True,stdout=PIPE).communicate()[0]'
            #print l__cmd1
            #output1=popen(l__cmd1,shell=True,stdout=PIPE).communicate()[0]
            #l__cmd1 = "[\"C:\\Tools\\Sysinternalsuite\\psexec\",\"\\\\\\"%s"\",\"-nobanner\",\"ls\",\"-al\","%s"\"]" % (l__sp,l__traces)
            #print 'La vies est --&gt;'+l__cmd1
            #l__cmd1_WithCall = "\'psexec\",\"\\\\\\"%s"\",\"-nobanner\",\"ls\",\"-al\" "%s"\'" % (l__sp,l__traces)
            l__cmd1_WithCall = "\'psexec \\\%s -nobanner ls -al %s\'" % (l__sp,l__traces)
            #l__cmd1_WithCall = "\"psexec\",\"\\\%s,\"ls\",\"-al\",%s" % (l__sp,l__traces)
            print 'l__cmd1_WithCall--&gt;',l__cmd1_WithCall
            p5=call(l__cmd1_WithCall,shell=True)
            print '----&gt;',p5,'&lt;-----'
    except:
        print '\n'+l__sp+' Can\'t reach it !\n'
</code></pre>
<p>The above code gives me error as I am trying to get the last modified date of some files from a Windows server to a remote Windows server.
I am on Windows using psexec but maybe they are other solutions to get such information.</p>
<p>I tried using <code>subprocess.call, subprocess.popen, subprocess.check_out</code> and all give me errors, but when I tried to type directly the command on cmd it is working fine.</p>
</div>
<div class="post-text" itemprop="text">
<p>In order to get the last time a file was modified in windows ,you can use the code below</p>
<pre><code>import os,datetime
timestamp = os.stat(PATH_OF_FILE).st_ctime
readable = datetime.datetime.fromtimestamp(timestamp).strftime('%Y-%m-%d %H:%M:%S')
</code></pre>
<p>first you get the time stamp and readable converts it into date</p>
</div>
<span class="comment-copy">Please also give us the error message and at which line in your code snippet it occurs. Also, have you considered retrieving the times using <a href="https://docs.python.org/3/library/os.html#os.stat" rel="nofollow noreferrer"><code>os.stat()</code></a> or similar from the Python standard library instead of going through external tools?</span>
<span class="comment-copy">Thanks. This is my issue. I know how to get the information when locally. My goal is to get the same for files in remote servers. Also, if you see the commands inside l_cmd1 it is working fine when I type it in windows command prompt but while place it in subprocess.popen it is not. And you are right I am sure there is another way by not using external tools, but how?</span>
<span class="comment-copy">You still haven't shown us the error you're getting.</span>
<span class="comment-copy">--------toto1-------- l__cmd1_WithCall--&gt; 'psexec \\toto1 -nobanner ls -al c:\\dic1\\udic1\\file1.txt' ''psexec' is not recognized as an internal or external command, operable program or batch file. ----&gt; 1 &lt;----- l__cmd1_WithCall--&gt; 'psexec \\toto1 -nobanner ls -al c:\\dic1\\udic1\\file2.txt' ''psexec' is not recognized as an internal or external command, operable program or batch file. ----&gt; 1 &lt;-----  --------toto2-------- l__cmd1_WithCall--&gt; 'psexec \\toto2 -nobanner ls -al c:\\dic1\\udic1\\file1.txt' ''psexec' is not recognized as an internal or external command, operable prog</span>
<span class="comment-copy">@vivideen This should go into the question description (you can edit it), as it's an important part for understanding the question. At first glance, it looks like your quoting is wrong - you need to remove the single quotes around the whole command line, as it's trying to execute a command with the name <code>psexec \\toto1 -nobanner ...</code> and so on, instead of a command <code>psexec</code> and separate arguments.</span>
<span class="comment-copy">Great. But my concern as shown in the code is remotely. This works fine and I got it when you are in the same server (locally) but I would like the same for files in remote server.</span>
<span class="comment-copy">@vivadeen You could make the relevant directories available as shares. I mean you allow PsExec, which is even more powerful, so what speaks against a share?</span>
<span class="comment-copy">Ok for this solution if you have only one or 2 remote servers to read from but I have 70 remote servers to get this information.</span>
<span class="comment-copy">You can mount the network drive as described in this question <a href="http://stackoverflow.com/a/19171820/5306132">stackoverflow.com/a/19171820/5306132</a></span>
<span class="comment-copy">Thanks  Stavros Avramidis, good idea which I used. It is at least working quicker than using psexec, maybe they are others ways and quicker but at least it is working. Thanks again.</span>
