<div class="post-text" itemprop="text">
<p>I have a regex: <code>r'((\+91|0)?\s?\d{10})'</code></p>
<p>I'm trying to match numbers like <code>+91 1234567890</code>, <code>1234567790</code>, <code>01234567890</code>.</p>
<p>These numbers shouldn't be matched: <code>1234568901112</code> because it doesn't start with +91 or 0 or doesn't have just 10 numbers:</p>
<p>When I try to use <code>re.findall()</code>:</p>
<pre><code>re.findall(r'((\+91|0)?\s?\d{10})', '+91 1234567890, 1234567790, 01234567890, 1234568901112')
[('+91 1234567890', '+91'),
 (' 1234567790', ''),
 (' 0123456789', ''),
 (' 1234568901', '')]
</code></pre>
<p>You can notice that in the third and fourth index the output is not what I want. 
My expected output at third index is 01234568890 and because it starts with 0 and followed by 10 characters. But it's only showing the first 10 characters. Also I don't want the output in the 4th index because it the number doesn't completely match. So either it matched the complete word/string else it is invalid.</p>
<p>Is there any other regex that I can use? Or a function? What am I doing wrong here?</p>
<p>The expected output is:</p>
<pre><code>[('+91 1234567890','1234567790', '01234567890']
</code></pre>
<p>Please let me know if any more clarifications are needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may use</p>
<pre><code>r'(?&lt;!\w)(?:(?:\+91|0)\s?)?\d{10}\b'
</code></pre>
<p>See the <a href="https://regex101.com/r/U85XNk/2" rel="nofollow noreferrer">regex demo</a>. </p>
<p>The point is to match these patterns as whole words, the problem is that the first part is optional and one of the optional alteratives starts with a non-word char, so a single <code>\b</code> word boundary won't work here.</p>
<p><strong>Details</strong></p>
<ul>
<li><code>(?&lt;!\w)</code> - there should be no word char immediately to the left of the current location</li>
<li><code>(?:(?:\+91|0)\s?)?</code> - an optional occurrence of  

<ul>
<li><code>(?:\+91|0)</code> -  <code>+91</code> or <code>0</code></li>
<li><code>\s?</code> - an optional whitespace</li>
</ul></li>
<li><code>\d{10}\b</code> - ten digits matches as a whole word, no word chars allowed on both sides</li>
</ul>
<p><a href="https://ideone.com/KcfQLb" rel="nofollow noreferrer">Python demo</a>:</p>
<pre><code>import re
s = '+91 1234567890, 1234567790, 012345678900, 1234568901112, 01234567890'
print(re.findall(r'(?&lt;!\w)(?:(?:\+91|0)\s?)?\d{10}\b', s))
# =&gt; ['+91 1234567890', '1234567790', '01234567890']
</code></pre>
</div>
<span class="comment-copy"><a href="https://regex101.com/r/0OeJ0R/1" rel="nofollow noreferrer">Use anchors <code>^</code> <code>$</code></a></span>
<span class="comment-copy">@Potatoãƒ„ I've tried <code>^((\+91|0)?\s?\d{10})$</code> too. It doesn't work.</span>
<span class="comment-copy">Thank you for your response. I've made one small change. There was a typo. I've changed 012345678900 to 01234567890 in the input. This should match too.</span>
<span class="comment-copy">@MohitMotwani I updated the post.  I thought about the unambiguous word boundaries (like <code>(?&lt;!\w)</code> / <code>(?!\w)</code>) from the very start, but your examples put me off-track.</span>
<span class="comment-copy">This works! Thank you so much. <code>(?&lt;!\w)</code> This is exactly what I was looking for. Although can you please explain me <code>?:</code> more clearly. I'm a bit confused.</span>
<span class="comment-copy">@MohitMotwani <code>(?:...)</code> is a <a href="https://stackoverflow.com/questions/3512471/what-is-a-non-capturing-group-what-does-do">non-capturing group</a>. It is used here to make sure <code>re.findall</code> <a href="https://stackoverflow.com/a/31915134/3832970">does not behave weird</a></span>
