<div class="post-text" itemprop="text">
<p>I want to prompt the user to input specific data from a text file(keys) so my dictionary can give the value for each of them.</p>
<p>It works like this:</p>
<pre><code>fin=open('\\python34\\lib\\toys.txt')
toys = {}

for word in fin:
    x=fin.readline()
    x = word.replace("\n",",").split(",")
    a = x[0]
    b=x[1]
    toys[a]=str(b)
    i = input("Please enter the code:")
    if i in toys:
        print(i," is the code for a= ", toys[i],)
    else:
        print('Try again')
    if i == 'quit':
        break
</code></pre>
<p>but it prints 'try again' if I input a random key from my list. (which is the following: </p>
<p>D1,Tyrannasaurous</p>
<p>D2,Apatasauros</p>
<p>D3,Velociraptor</p>
<p>D4,Tricerotops</p>
<p>D5,Pterodactyl</p>
<p>T1,Diesel-Electric</p>
<p>T2,Steam Engine</p>
<p>T3,Box Car</p>
<p>T4,Tanker Car</p>
<p>T5,Caboose</p>
<p>B1,Baseball</p>
<p>B2,Basketball</p>
<p>B3,Football</p>
<p>B4,Softball</p>
<p>B5,Tennis Ball</p>
<p>B6,Vollyeball</p>
<p>B7,Rugby Ball</p>
<p>B8,Cricket Ball</p>
<p>B9,Medicine Ball</p>
<p>but if I do it in order it works. How can I fix this program so I can input any key at any time and it will still print its corresponding value?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to read in the whole file before prompting for your search term. So you'll need two loops -- one to get the whole data in, and a second loop to search through he data.</p>
<p>Here's what your updated code will look like. I replaced the file input with an array so that I could run it using a web tool:</p>
<pre><code>fin=['D1,Tyrannasaurous','D2,Apatasauros','D3,Velociraptor' ]
toys = {}

for word in fin:
    x = word.replace("\n",",").split(",")
    a = x[0]
    b=x[1]
    toys[a]=str(b)

while 1:
    i = input("\nPlease enter the code:")
    if i in toys:
        print(i," is the code for a= ", toys[i],)
    else:
        print('\nTry again')
    if i == 'quit':
        break
</code></pre>
<p>Output here: <a href="https://repl.it/BVxh" rel="nofollow">https://repl.it/BVxh</a></p>
</div>
<div class="post-text" itemprop="text">
<p>To read the file into dictionary:</p>
<pre><code>with open('toys.txt') as file:
    toys = dict(line.strip().split(',') for line in file)
</code></pre>
<p>To print values corresponding to the input keys provided by a user from a command-line interactively until <code>quit</code> key is received:</p>
<pre><code>for code in iter(lambda: input("Please enter the code:"), 'quit'):
    if code in toys:
        print(code, "is the code for toy:", toys[code])
    else:
        print(code, 'is not found. Try again')
</code></pre>
<p>It uses <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow">two-argument <code>iter(func, sentinel)</code></a>.</p>
</div>
<span class="comment-copy"><code>for word in fin:</code> followed by <code>x=fin.readline()</code>: you appear to step through the lines in your file (the for loop), followed immediately by reading another line of your file. And then you throw away the result of that next readline(). Is that correct?</span>
<span class="comment-copy">Perhaps it's a good idea to do some standard debuggin, and print out word, x, a and b in your loop to see what's happening.</span>
<span class="comment-copy">Yes it is. <code>x=fin.readline() </code> reads each line and then ` x = word.replace("\n",",").split(",") ` separates the key from the value for my dictionary. @Evert</span>
<span class="comment-copy">@Evert I tried by printing out each one outside the loop and it worked perfectly. I don't understand what the problem is, but thanks !!</span>
<span class="comment-copy">Re: your first comment: there may be a misunderstanding, but <code>x = fin.readline()</code> will not read each line. The <code>for word in fin</code> line also read lines from your file, with the result that the first reads all even lines, and the second all odd lines.</span>
<span class="comment-copy">That works bro. I see my mistake now. thank you!</span>
