<div class="post-text" itemprop="text">
<p>I'm learning <code>subprocess</code>, but I have a little confusion with this code:</p>
<pre><code>import subprocess

proc = subprocess.Popen('lspci', stdout=subprocess.PIPE)
for line in proc.stdout:
    print(line)
</code></pre>
<p>Output:</p>
<pre><code>b'00:00.0 Host bridge: Intel Corporation Xeon E3-1200 v2/3rd Gen Core processor DRAM Controller (rev 09)\n'
b'00:02.0 VGA compatible controller: Intel Corporation Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller (rev 09)\n'
</code></pre>
<p>As you can see, the output is formated. But I dont know why there is the character <code>b''</code> and the <code>\n</code> at the end.</p>
<p>If I run this command in my terminal, there aren't these char.</p>
<p>Normal output:</p>
<pre><code>00:00.0 Host bridge: Intel Corporation Xeon E3-1200 v2/3rd Gen Core processor DRAM Controller (rev 09)
00:02.0 VGA compatible controller: Intel Corporation Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller (rev 09)
</code></pre>
<p>How could I remove them?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're probably using python3 - python changed up the way certain objects read/write data, and now there's a real <code>bytes()</code> object. To get the string you want, you just need:</p>
<pre><code>print(line.decode("utf8")) ## or some encoding; that one should print anything though
</code></pre>
<p>You may also need to strip the newline (<code>\n</code>) from your output; I can't remember how <code>stdout</code> does the buffering/reporting:</p>
<pre><code>print(line.decode("utf8").strip())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>b''</code> is a text representation for <code>bytes</code> objects in Python 3.</p>
<p>To print bytes as is, use a binary stream -- <code>sys.stdout.buffer</code>:</p>
<pre><code>#!/usr/bin/env python3
import sys
from subprocess import Popen, PIPE

with Popen('lspci', stdout=PIPE, bufsize=1) as process:
    for line in process.stdout: # b'\n'-terminated lines
        sys.stdout.buffer.write(line)
        # do something with line here..
</code></pre>
<p>To get the output as text (Unicode string), you could use <code>universal_newlines=True</code> parameter:</p>
<pre><code>#!/usr/bin/env python3
from subprocess import Popen, PIPE

with Popen('lspci', stdout=PIPE, bufsize=1, universal_newlines=True) as process:
    for line in process.stdout: # b'\n', b'\r\n', b'\r' are recognized as newline
        print(line, end='')
        # do something with line here..
</code></pre>
<p><code>locale.getpreferredencoding(False)</code> character encoding is used to decode the output.</p>
<p>If the child process uses a different encoding, then you could specify it explicitly using <code>io.TextIOWrapper()</code>:</p>
<pre><code>#!/usr/bin/env python3
import io
from subprocess import Popen, PIPE

with Popen('lspci', stdout=PIPE, bufsize=1) as process:
    for line in io.TextIOWrapper(process.stdout, encoding='utf-8'):
        print(line, end='')
        # do something with line here..
</code></pre>
<p>For Python 2 code and links to possible issues, see <a href="https://stackoverflow.com/q/2715847/4279">Python: read streaming input from subprocess.communicate()</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I think you use python 3:</p>
<p><strong>b</strong> is for Bytes, and  it indicates that it is a byte sequence which is equivilent to a normal string in Python 2.6+</p>
<p>see <a href="https://docs.python.org/3/reference/lexical_analysis.html#literals" rel="nofollow">https://docs.python.org/3/reference/lexical_analysis.html#literals</a></p>
</div>
<span class="comment-copy">You could try change <code>print(line)</code> to <code>print(type(line))</code> and <code>print(type(line.decode()))</code> and see the output, as the answers say, <code>line</code> is a byte object.</span>
<span class="comment-copy"><code>.decode('utf8')</code> is recommended.</span>
<span class="comment-copy">Oh is it? I didn't know for certain, I just ran into this once and a coworker said <code>iso 8859-1</code> "should generally do what I want". But if there's an actual recommendation, let's go with that instead. Thanks!</span>
<span class="comment-copy">Actually there is lots of encode here. If you'd like learn more, <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">here's the Python document</a> :)</span>
<span class="comment-copy">@KevinGuan It's not that <code>utf8</code> is recommended; it depends entirely on what the command is producing. You have to know if the output uses ISO-8859-1, or UTF-8, or some other encoding for its output, and use the correct character set to decode it.</span>
<span class="comment-copy">@chepner Oh, you're right. That depends on the subprocess's output encoding :)</span>
<span class="comment-copy">Thanks for explanation ! it works good now!</span>
