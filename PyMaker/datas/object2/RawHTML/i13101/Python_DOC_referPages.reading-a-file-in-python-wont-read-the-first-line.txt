<div class="post-text" itemprop="text">
<p>I am reading a text file, separating the word and the number with the comma then adding them into separate lists however, the first name gets omitted. Here is my code.</p>
<pre><code>for line in keywordFile:
     line = keywordFile.readline()
     keyword.append(line[0])
     keywordValue.append(line[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're jumping ahead with the first <code>readline()</code> and just use <code>line</code> defined in the <code>for</code> statement.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems that you <code>keywordFile</code> is a file object and since file objects are iterator (one shot iterables) after the first line that you loop over it you consume the first line.</p>
<pre><code>for line in keywordFile:
          ^
</code></pre>
<p>And then you are using <code>readline</code> to read the next line which is extra here, so for getting ride of this problem you need to remove this part.</p>
<p>Also as a more pythonic way you can use a list comprehension to create the list of words by splitting the lines with comma.If you want to create a list of all words you can use a nested loop :</p>
<pre><code>with open ('filename') as keywordFile :
    words = [w for line in keywordFile for w in line.split(',')]
</code></pre>
<p>But if you want to put the separated words of each line in a separate list you just need to use a one loop :</p>
<pre><code>with open ('filename') as keywordFile :
    words = [line.split(',') for line in keywordFile]
</code></pre>
<p>Or as a better choice use <code>csv</code> module to open the file as a separated words.You can pass a delimiter argument to <code>csv.reader</code> function :</p>
<pre><code>import csv

with open('file_name') as f:
  words=csv.reader(f,delimiter=',')  
</code></pre>
<p>Here <code>words</code> is a iterator from tuples of separated words. And of you want to concatenate them you can sue <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow"><code>itertools.chain.from_iterable()</code></a> function.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try something like:</p>
<pre><code>for line in keywordFile:
     tokens = line.split(',')
     keyword.append(tokens[0])
     keywordValue.append(tokens[1])
</code></pre>
</div>
<span class="comment-copy">Files can be iterated in Python. <code>line</code> is the "line" in the file.</span>
<span class="comment-copy">Also, you don't appear to be splitting the line on a comma at all. <code>line[0]</code> and <code>line[1]</code> are just the first and second characters, respectively, in <code>line</code>.</span>
