<div class="post-text" itemprop="text">
<p>I have string in a python script which contains some <code>java</code> code. <br/>
How can I extract base java class name from it in order to execute it using <code>subprocess</code>?<br/>
 I think it can achieved using regex, but I don't know how.<br/></p>
<p>Sample:</p>
<pre><code>a = """
import java.util.Scanner;
class sample{}
class second
{
    static boolean check_prime(int a)
    {
        int c=0;
        for (int i=1;i&lt;=a; i++) {
            if(a%i==0)
                c++;
        }
        if(c == 2)
            return true;
        else
            return false;
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Enter two numbers");
        int a = in.nextInt();
        int b = in.nextInt();
        if(check_prime(a) &amp;&amp; check_prime(b))
        {
            if(b-a==2 || a-b==2)
                System.out.println("They are twin primes");
            else
                System.out.println("They are not twin primes");
        }
        else
            System.out.println("They might not be prime numbers");
    }
}
"""
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I said in comment, use <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow"><code>re.findall()</code></a> like this:</p>
<pre><code>re.findall('class (\w*)', a)
</code></pre>
<p>As the function name, <code>findall()</code> can find <strong>all</strong> of the class names. And use <code>\w</code> here will match all ascii letters(will be better than <code>.*</code> if you're using <code>class MyClass{</code>).</p>
<hr/>
<p>About find the main class, use <a href="https://docs.python.org/3/library/re.html#re.S" rel="nofollow"><code>re.S</code></a> like this:</p>
<pre><code>for i in re.split('\nclass ', a)[1:]:                      # will match the main code block and the class name of all classes
    if re.search('\n\s*public static void main', i):              # check if 'public static void main' in a class
        print(re.search('(\w*)', i).group(1))       # and print out the class name
</code></pre>
<p>A more simple way, only one line use list comprehension:</p>
<pre><code>[re.search('(\w*)', i).group(1) for i in re.split('\nclass ', a) if re.search('\n\s*public static void main', i)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>A main class is a class which contains the public static void main function. </p>
</blockquote>
<p>If it is possible in your environment; you could use a library that can parse Java source code such as <a href="https://github.com/musiKk/plyj" rel="nofollow"><code>plyj</code></a> or <a href="https://github.com/c2nes/javalang" rel="nofollow"><code>javalang</code></a>:</p>
<pre><code>#!/usr/bin/env python
import javalang # $ pip install javalang

tree = javalang.parse.parse(java_source)
name = next(klass.name for klass in tree.types
            if isinstance(klass, javalang.tree.ClassDeclaration)
            for m in klass.methods
            if m.name == 'main' and m.modifiers.issuperset({'public', 'static'}))
# -&gt; 'second'
</code></pre>
<p>If there is a package declaration e.g., <code>package your_package;</code> at the top of the Java source i.e., if the full class name is <code>your_package.second</code> then you could get the package name as <code>tree.package.name</code>.</p>
<p>Or you could use a parser generator such as <a href="https://bitbucket.org/apalala/grako" rel="nofollow"><code>grako</code></a> and specify a Java grammar subset that is enough to get the class name in your case. If the input is highly regular; you could try a regex and expect it to fail if your assumptions about the structure of the code are wrong.</p>
</div>
<div class="post-text" itemprop="text">
<p>An approximate solution to the problem is possible with regular expressions, as you guessed. However, there are a few tricks to keep in mind:</p>
<ol>
<li>A class name may not terminate with whitespace, since <code>MyClass{</code> is legal and common</li>
<li>A type parameter can be provided after the classname such as <code>MyClass&lt;T&gt;</code> and the compiled <code>.class</code> file's name will not be effected by this type parameter</li>
<li>A file may have more than one top level class, however one must not be declared public and this class <em>cannot</em> have the same name as the file</li>
<li>The public class that has the same name as the file may have inner class (which may even be public) but these must necessarily come after the outer class declaration.</li>
</ol>
<p>These tips lead to searching for the first occurrence of the phrase <code>public class</code>, capturing the next run of characters, then looking for whitespace, a <code>{</code> or <code>&lt;</code> character.</p>
<p>This is what I came up with (may be a bit ugly): <code>public\s*(?:abstract?)?\s*(?:static?)?\s*(?:final?)?\s*(?:strictfp?)?\s*class\s*(\w.*)\s*,?&lt;.*$</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Using only regex is hardly ever going to work. As a basic example of why it could not, consider this:</p>
<pre><code>public class A {
     public static void ImDoingThisToMessYouUp () {
          String s = "public static void main (String[] args) {}";
     }
}

public class B {
      public static void main (String[] args) {}
}
</code></pre>
<p>You get the idea... Regex could always be fooled into believing they found something which isn't really what you are looking for. You must rely on more advanced libraries for parsing.</p>
<p>I'd go with J.F. Sebastian's answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a crude way:</p>
<pre><code>import re

b = a.split()
str = b[b.index("class")+1]
javaclass = re.sub("{.*$","",str)
print (javaclass)
</code></pre>
<p>...which essentially takes all the words, and find the first word after the first occurrence of "class".  It also removes "{" and anything after it, if you have a situation like </p>
<pre><code>class MyClass{
</code></pre>
<p>However you would need to do a lot more if you have multiple classes in a file.  </p>
</div>
<span class="comment-copy">So where is the string?</span>
<span class="comment-copy">Show your code and what isn't working.</span>
<span class="comment-copy">I just wanted to extract the classname which has the main method in it, in order to  run the <code>javac</code> command using subprocess.</span>
<span class="comment-copy">The example you provide doesn't have a base class as it doesn't extend anything.</span>
<span class="comment-copy">So you just need the class name? What about <code>re.findall('class (.*)', a)</code>?</span>
<span class="comment-copy">Sorry about I've just leave :)</span>
<span class="comment-copy">It's not working, if I print <code>i</code> inside the loop it prints the whole code.</span>
<span class="comment-copy">@user2444327 Don't print <code>i</code>. As I said in my answer, <code>print(re.search('class (\w*)', i).group(1))</code>.</span>
<span class="comment-copy">I was printing i with it.</span>
<span class="comment-copy">@user2444327 Okay, maybe this can work now.</span>
<span class="comment-copy">this seems to work, but I was wondering if it isn't too overkill. Also is it fast enough, like regex ?</span>
<span class="comment-copy">@user2444327: it depends. Measure time performance and see whether it is fast enough in your case. It might be an overkill but if there is no restrictions on dependencies then it is easier to add <code>javalang</code> to your <code>requirements.txt</code>, use the code that I've provided and forget about it. On the other hand if the input is simple then write a simple regex and expand it if necessary on a case by case basis.</span>
<span class="comment-copy">it is not necessary for the class to be public (as the code example in the question shows), you could even have <a href="http://stackoverflow.com/a/2324915">multiple classes with <code>public static main()</code> method</a></span>
<span class="comment-copy">@J.F.Sebastian yes, that is true. But how would you execute that file using <code>subprocess</code> because there would be no way to obtain the filename from that source code? The filename will always be the same as the public class in that file, and executing that file will cause <code>main</code> to be called regardless of which class it is in.</span>
<span class="comment-copy">click the link. It explicitly shows the example how you can execute the code in such cases. Anyway, the source is not in any file in OPs case.</span>
<span class="comment-copy">@J.F.Sebastian How would you execute that Java code using <code>subprocess</code> if it isn't in a file?</span>
<span class="comment-copy">e.g., save it to a file. I don't see how your comments are related to my first comment in anyway. Could you elaborate how exactly is it related to <i>"it is not necessary for the class to be public (as the code example in the question shows), you could even have multiple classes with public static main() method"</i>?</span>
<span class="comment-copy">The whitespace is optional after the class name, as this is perfectly legal and common <code>class MyClass{ ....</code> so your method will fail in a substantial number of cases.</span>
