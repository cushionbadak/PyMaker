<div class="post-text" itemprop="text">
<p>Python is installed at:</p>
<pre><code>C:/Python/Python35
</code></pre>
<p>At the top of my program I put:</p>
<pre><code>#!/usr/bin/env python3
</code></pre>
<p>I opened windows command prompt and entered:</p>
<pre><code>./words.py
</code></pre>
<p>The message I got was:</p>
<pre><code>"." is not recognized
</code></pre>
<p>I was told this should work great on Windows so I'm confused?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>./words.py</code> will not work on the Windows command prompt, this way of executing scripts is meant for Linux/UNIX shells.</p>
<p>If you're using Python 3.3+:</p>
<p>The shebang lines <em>will</em> be obeyed by the Windows Python Launcher <code>py</code> if you have it installed (<a href="https://docs.python.org/3/using/windows.html#shebang-lines" rel="nofollow">https://docs.python.org/3/using/windows.html#shebang-lines</a>).</p>
<p>Make sure you have that installed and try launching using:</p>
<p><code>py words.py</code></p>
</div>
<div class="post-text" itemprop="text">
<p>There are multiple problems here.</p>
<ol>
<li><strong>Shebangs are a Unix thing</strong>.  Windows does not recognize them at all.  Instead, Windows uses file extensions.  </li>
<li><strong>There is no file named /usr/bin/env on Windows</strong>, so even if your shebang did work, it wouldn't do what you want.</li>
<li><strong>The Python installer normally associates Python with <code>.py</code> files</strong> on installation.  If it did not in your case (because you disabled the option?) you need to go fix that.</li>
<li><strong><code>./something</code> doesn't work on cmd.exe.</strong>  It's <code>.\something</code> or just <code>something</code>.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Whoever told you, must have either misunderstood you or you misunderstood them.</p>
<p>Shebang lines have no effect with windows unless you're trying to use <a href="https://www.cygwin.com/" rel="nofollow">cygwin</a>. The other reason you'll need them to ensure smooth transition between windows and linux if you're passing the code to someone who might be running on linux.</p>
<p>As far as the "." it is not used in windows. Its reason in linux OS is to inform the command that the script is in the current directory.</p>
<p>For windows all you'll need is: <code>python words.py</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your first problem is that Windows won't treat <code>/</code> as a path separator here. It has to be <code>.\words.py</code> or just <code>words.py</code>. That's why you get the error you see.</p>
<p>The next problem is that the shebang is not implemented by the windows command shell. It works on linux shells (and linux-like shells on Windows such as cygwin) because those shells read the front bit of executables to see how they should be executed. Windows does this by looking at the extension.</p>
</div>
<span class="comment-copy">I don't think windows cmd.exe recognizes shebangs. Maybe if you were running cygwin/msys.</span>
<span class="comment-copy">Using a forward slash in the cmd shell generally requires double quotes, so use either <code>.\words.py</code> or <code>"./words.py"</code>. There's no reason to run py.exe directly. The default installation should have associated .py with the <code>Python.File</code> progid, which runs the script using py.exe.</span>
<span class="comment-copy">In Vista+ if you set the environment variable <a href="https://msdn.microsoft.com/en-us/library/ms684269" rel="nofollow noreferrer"><code>NoDefaultCurrentDirectoryInExePath</code></a>, e.g. <code>set NoDefaultCurrentDirectoryInExePath=1</code>, then the cmd shell <i>requires</i> the explicit <code>.\words.py</code> or <code>"./words.py"</code>. In this case you could also use <code>py words.py</code>. Without setting the environment variable, you can simply run <code>words.py</code> from the working directory; this is the classic, less-secure behavior, which is still the default in Windows.</span>
<span class="comment-copy">You are <a href="https://docs.python.org/3/using/windows.html#python-launcher-for-windows" rel="nofollow noreferrer">completely wrong</a>.</span>
<span class="comment-copy">@eryksun very constructive, especially for an answer that addresses multiple questions you sure provided a lot of insight. From your link <i>Linux and other Unix like operating systems have native support for such lines (Shebang lines) and are commonly used on such systems to indicate how a script should be executed.</i> Like I said that line does not effect windows, the Python Launcher gives it that ability but if I'm <i>completely wrong</i> then you're saying all files need it for windows.</span>
<span class="comment-copy">You said "[s]hebang lines have no effect with windows unless you're trying to use cygwin". That's wrong. A launcher can start any executable program, and even support virtual shebangs to ease cross-platform development. You can even associate it with files that have no extension. As to providing more information, I did so on the answer that showed the most merit, including explaining why the "." can definitely be necessary in cmd.exe on Vista+ (and is so on any Windows machine I use, since it's more secure and matches the behavior of PowerShell).</span>
<span class="comment-copy">this contradict that <a href="https://docs.python.org/3/using/windows.html#shebang-lines" rel="nofollow noreferrer">docs.python.org/3/using/windows.html#shebang-lines</a></span>
<span class="comment-copy">That's half-wrong. Shells do not read executables, the kernel does. Here is the <a href="https://github.com/torvalds/linux/blob/master/fs/binfmt_script.c#L25" rel="nofollow noreferrer">relevant code</a> in Linux kernel.</span>
<span class="comment-copy">@spectras I didn't get into the specifics of how its done because it didn't seem particularly important. OP was talking about the windows command shell so I kept the conversation on that level.</span>
<span class="comment-copy">I understand the intent. Let's say "linux systems" then, that mirrors the "windows" of the next sentence, without getting the specifics wrong :)</span>
<span class="comment-copy">The first part of this answer is also not entirely true. Windows seems to have no problem with the forward slash, at least for resolving files at the command prompt. I just ran C:/Python34/python.exe meow/meow.py and it didn't flinch (Windows 10). Apparently it's been this way for a long time: <a href="http://blogs.msdn.com/b/larryosterman/archive/2005/06/24/432386.aspx" rel="nofollow noreferrer">blogs.msdn.com/b/larryosterman/archive/2005/06/24/432386.aspx</a></span>
<span class="comment-copy"><code>/</code> works as a path separator when in double quotes, e.g. <code>"./words.py"</code>.</span>
