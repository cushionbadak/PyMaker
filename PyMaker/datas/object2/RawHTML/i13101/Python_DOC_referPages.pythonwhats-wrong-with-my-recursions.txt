<div class="post-text" itemprop="text">
<p>I want to performe </p>
<pre><code>  [√(1/2+1/2*√1/2)]  ---------(P1)
  [√(1/2+1/2*√(P1)]  ----------(P2)
  [√(1/2+1/2*√(P2)]  
  etc.
</code></pre>
<p>to find out the P(nth)term</p>
<p>I have this for now</p>
<pre><code>from math import *

n=eval(input('fjeowijo'))
i=sqrt(1/2+1/2*(sqrt(1/2)))

def P(n):
  for i in range(n):        
      g=sqrt(1/2+1/2*i)
      i=sqrt(1/2+1/2*i)
      print(g)

P(n)
</code></pre>
<p>When I enter 1 for n, the result is 0.7071067811865476, which is only equal to the part " sqrt(1/2) ". Why?</p>
</div>
<div class="post-text" itemprop="text">
<p>In case you want to make it recursive do</p>
<pre><code>def P(n):
    if n &lt;= 0:
        return 0.5
    else:
        return sqrt(0.5*(1+sqrt(P(n-1))))
</code></pre>
<p>which works out as</p>
<pre><code>&gt;&gt;&gt; P(1)
0.9238795325112867
&gt;&gt;&gt; P(2)
0.9902490907008235
&gt;&gt;&gt; P(3)
0.9987774031336784
&gt;&gt;&gt; P(4)
0.9998471169658009
</code></pre>
<p>As @JoshRomRock points out, python generally limits the maximum depth of the recursion (the default max depth is platform-dependent).
In case of CPython, the default limit is 1000.</p>
<p>In case you want to alter such limit do:</p>
<pre><code>import sys
sys.setrecursionlimit(5000)
</code></pre>
<p>Note: in this case, the precision offered by the floating point representation may well be the biggest hurdle to the calculation. Please see the <a href="https://docs.python.org/3/tutorial/floatingpoint.html" rel="nofollow">official docs</a> for further info on what to expect using floats.</p>
<p>Second note: in case the <code>P</code> function is going to be used several times and/or in multiple points of the code of a program, as a library function, it would make sense to implement it using <a href="https://en.wikipedia.org/wiki/Memoization" rel="nofollow">Memoization</a>.
Please see <a href="https://wiki.python.org/moin/PythonDecoratorLibrary#Memoize" rel="nofollow">here</a> for a few examples in python.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def P(n):
  i = 0
  g = sqrt(0.5+.5*sqrt(0.5)
  while(i &lt; n):
    g = sqrt(0.5+0.5*g)
    print(g)
</code></pre>
<p>Could it be what you're looking for ?</p>
</div>
<span class="comment-copy">In the for "i" in range, i is an iterator, when you set it to i=sqrt(..), it will be forgotten at the next iteration.</span>
<span class="comment-copy">Please post your exact code for example you have print(x) but clearly x is not defined</span>
<span class="comment-copy">@Arkantus but if i assign other word,like 'a', it shows [local variable 'a' referenced before assignment] error</span>
<span class="comment-copy">You should be aware that Python call stack is limited to 1000 levels of recursion though.</span>
<span class="comment-copy">@JoshRomRock thank you for the comment. I have edited my answer.</span>
