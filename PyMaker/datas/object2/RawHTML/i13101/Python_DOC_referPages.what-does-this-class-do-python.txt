<div class="post-text" itemprop="text">
<p>I am trying to understand what does this class</p>
<pre><code>class undo:
    def __init__(self, ss):
        self.ss = ss
</code></pre>
<p>In my head it should simply put the value of ss uniquely in the variables i decide to use,but when I'm using it it rewrites all the variables, as if it was shared.</p>
<pre><code>sum_expenses[100][0] = 100
sum_expenses[99][2] = 99

s = 1
a = [0 for i in range(100)]
a[s] = undo(sum_expenses)
output(a[1].ss)

sum_expenses[100][0] = 0
b = undo(sum_expenses)
print " "
print b.ss
print " "
sum_expenses[99][2] = 1
a[2] = undo(sum_expenses)
print a[2].ss
</code></pre>
<p>I do not understand why it overwrites all the variables with the current values of sum_expense, when I try to put it individually so that I can use the past values of sum_expenses.</p>
<p>Thank you and have a good day!</p>
</div>
<div class="post-text" itemprop="text">
<p>It happens because you're giving <code>__init__</code> a reference to the list. If you change the list somewhere else, the reference in <code>.ss</code> still points to the same list, so the changes are visible there, too.</p>
<p>You could copy the list, since it's 2D try <a href="https://docs.python.org/3/library/copy.html#copy.deepcopy" rel="nofollow"><code>deepcopy</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Everytime you call this function it overrides reference to thr whole array ss, changing it to the new one you just passed to the constructor.</p>
<p>You can also create this array within the class and pass indexes and value to it like so:</p>
<pre><code>undo.add(index1,index2,value)
</code></pre>
<p>Or you can make another variable ss_old and have make the function return that variable before you set it to a new value.</p>
</div>
