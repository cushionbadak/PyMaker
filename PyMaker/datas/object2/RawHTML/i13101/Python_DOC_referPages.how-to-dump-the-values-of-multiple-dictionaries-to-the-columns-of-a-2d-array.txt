<div class="post-text" itemprop="text">
<p>I have a set of 15 <code>dicts</code> with both <code>int</code> and <code>float</code> values. The keys are of course not sorted. I would like to:</p>
<ul>
<li>Fill a 2D <code>numpy</code> array which size is <code>50x15</code>, so that the values of <code>dict1</code> align under column 0, those of <code>dict2</code> align under column 1, and so forth.</li>
</ul>
<p>Before doing this, however, I need to have the dict keys sorted smallest to largest.</p>
<p>This is how the 2D array should look like:</p>
<pre><code>dict1  dict2  dict3  dict4  dict5  dict6  dictn
val    val    val    val    val    val    val
val    val    val    val    val    val    val
</code></pre>
<p>Can I do it in a single <code>for</code> loop? Or should I use <code>3</code> nested <code>for</code> loops, similar to the next code block? If so, how can I advance to the next <code>dict</code>?</p>
<pre><code>#do stuff 
for i in range(array.shape[0]):
        for j in range(array.shape[1]):
            for val in dict1.items():
               array[i][0]=dict1[val]
#do stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you collect the dictionaries into a list like:</p>
<pre><code>dicts = [dict1, dict2, dict3,...]
</code></pre>
<p>then you can do:</p>
<pre><code>dataarray = np.zeros((50,15),float)
for i, adict in enumerate(dicts):
    values = current_dict.values()
    for j,value in enumerate(values):
           dataarray[i,j]= value
</code></pre>
<p>I'm using <code>enumerate</code> to get the index number, because it is more Pythonic and cleaner.  However it would have problems if <code>dataarray</code> isn't big enough.</p>
<p><code>[i,j]</code> is the correct way to index an element of a 2d array.</p>
<p>The clip I modified did nothing with the keys, so I'm ignoring those (so far).</p>
<p>Reading your question again, I see you want to sort the keys.  In that case we need to use:</p>
<pre><code>   items = adict.items()
   # list of key,value pairs
   items.sort()  # may need to tweak sort parameters
   for j, (key, [value) in enumerate(items):
        dataarray[i,j] = value
</code></pre>
<p>I haven't tested this code, so there might be some bugs.  But the outline is correct - I think.</p>
<p>If you need to match up keys across rows of <code>dataarray</code>, we'll have to do more work.</p>
<hr/>
<p>I would use an expression like</p>
<pre><code>max_dict_size = max([len(d) for d in dicts])
</code></pre>
<p>to find the maximum size of the dictionaries, and to define <code>dataarray</code> accordingly.</p>
<p>It just occured to me that I don't need to iterate to add the dictionary values to the array.  I'll illustrate with one simple dictionary:</p>
<pre><code>In [111]: dd={1:2.,3:4.,4:324.23}   # sample dictionary

In [112]: data=np.zeros((5,2),dtype=float)  # empty array

In [113]: items=dd.items()
In [114]: items
Out[114]: [(1, 2.0), (3, 4.0), (4, 324.23)]
</code></pre>
<p>Get the values out of this list of tuples.  Actually this is an iteration too.</p>
<pre><code>In [115]: values=[v for k,v in items]
In [116]: values
Out[116]: [2.0, 4.0, 324.23]
</code></pre>
<p>fill in the <code>data</code> column.  To be extra safe I should use <code>values[:data.shape[0]</code> (in case <code>data</code> isn't big enough for this dictionary).    </p>
<pre><code>In [117]: data[:len(values),0]=values

In [118]: data
Out[118]: 
array([[   2.  ,    0.  ],
       [   4.  ,    0.  ],
       [ 324.23,    0.  ],
       [   0.  ,    0.  ],
       [   0.  ,    0.  ]])
</code></pre>
<p>But if all the dictionaries have the same size, and <code>dataarray</code> is the right size, all these cross-checks can be left out.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you have your dicts in a list called <code>dicts</code> and you have imported <code>zip_longest</code> or <code>izip_longest</code> (depending on python versions) from <code>itertools</code>. You can do this with a 1 liner:</p>
<pre><code>[ tuple('dict{}'.format(i+1) for i in range(len(dicts))) ] + list( zip_longest(*([ v for k,v in sorted(d.items())] for d in dicts)) )
</code></pre>
</div>
<span class="comment-copy">Can you give an example of what one of the <code>dict</code>s looks like? Are all <code>dict</code>s of <code>len</code> 50?</span>
<span class="comment-copy">Share sample input with the <i>dict</i> items?</span>
<span class="comment-copy"><code>dict1={'event1':3400,'event2': 2345, 'event3':7654, ...}</code>. @vk1011 Yes, all dicts have <code>len</code> 50</span>
<span class="comment-copy">Your last block should be nested inside a <code>for</code> loop as I have multiple <code>dicts</code>. Am I correct?</span>
<span class="comment-copy">Yes, it's intended to be a modification of part of the previous.</span>
<span class="comment-copy">A few questions: 1) Why will it have problems if <code>dataarray</code> is too small? 2) What you call <code>current_dict</code> should be <code>adict</code> instead, correct? 3) Does the problem with <code>dataarray</code> refer to an error like <code>IndexError: index 2 is out of bounds for axis 1 with size 2</code> or similar? Thanks! And Bring Back the Sonics!</span>
<span class="comment-copy">Sorry about the variable name change.  When I use <code>enumerate</code> it loops through all the <code>items</code> in a dicitonary.  Your iterator loops through all the rows of the array.  Either way you need to insure that sizes match and any mismatch is handled correctly.</span>
<span class="comment-copy">I added an example.</span>
<span class="comment-copy">But it's pretty dense code, so you might want to break it up for readability</span>
<span class="comment-copy">I am ok with this density. My only question: since my output is a <code>list</code> in which the first <code>tuple</code> has the names of my dicts and later tuples hold the respective values, how could I print it to a <code>csv</code> file? How should the <code>for</code> loop look like? Thanks!</span>
<span class="comment-copy">use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">CSV</a> module (eg. <code>csvwriter.writerows()</code>)</span>
<span class="comment-copy">Writing a list fo <code>csv</code> deserves its own question.  Look up <code>savetxt</code>.</span>
<span class="comment-copy">The idea of the phrase "one liner" is to be indicative of a concise, expressive way of doing something. That's the whole point behind doing something in one line. The problem here is you are not being concise. You have further burdened the maintenance programmer who must interpret anonymous lists and dictionaries. More code is sometimes better.</span>
