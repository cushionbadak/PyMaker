<div class="post-text" itemprop="text">
<p>I'd like to figure out how to take all dictionary keys from an API call, and insert them into a flat file.</p>
<pre><code>#!/usr/bin/env python

import requests
import json
import time
import urllib3
from base64 import b64encode

requests.packages.urllib3.disable_warnings()


# 
# GET /dashboards/{dashboardId}/widgets/{widgetId}/value
test_dashboard = "557750bee4b0033aa111a762"
test_widget = "8bad2fc0-5c9b-44f2-a54b-05c8c6f9552b"
apiserver = "http://serveraddress"
userpass = b64encode(b"myuser:mypass").decode("ascii")
headers = { 'Authorization' : 'Basic %s' % userpass }

def get_apicall(dashboardId, widgetId):
    response = requests.get(
                            apiserver + "/dashboards/" +
                            dashboardId + "/widgets/" +
                            widgetId + "/value",
                            headers=headers,
                            verify=False)
    json_data = json.loads(response.text)
    print(json.dumps(json_data["result"]["terms"], indent=2))

get_apicall(test_dashboard, test_widget)
</code></pre>
<p>which outputs something like:</p>
<pre><code>[user@host ]$ ./shunhosts.py 
{
  "71.6.216.39": 2, 
  "71.6.158.166": 2, 
  "71.6.216.55": 2, 
  "71.6.216.56": 2
}
</code></pre>
<p>I would like the code to write/append each dictionary key to new line in a flat text file: i.e.</p>
<pre><code>71.6.216.39
71.6.158.166
71.6.216.55
71.6.216.56
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have a dictionary as </p>
<pre><code>d = {
  "71.6.216.39": 2, 
  "71.6.158.166": 2, 
  "71.6.216.55": 2, 
  "71.6.216.56": 2
}
</code></pre>
<p>You can get your keys with <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">keys()</a>: </p>
<pre><code>d.keys()
dict_keys(['71.6.216.56', '71.6.216.39', '71.6.158.166', '71.6.216.55'])
</code></pre>
<p>Make it to a string that is new-line separated: </p>
<pre><code>s = '\n'.join(d.keys())
print(s)
71.6.216.39
71.6.158.166
71.6.216.55
71.6.216.56
</code></pre>
<p>Then write it to a file: </p>
<pre><code>with open('some_file.txt', 'w') as fw:
    fw.write(s)
</code></pre>
<p>You can now further simplify this to: </p>
<pre><code>with open('some_file.txt', 'w') as fw:
    fw.write('\n'.join(d.keys()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>json_data["result"]["terms"].keys()</code> should give you all the keys.</p>
<p>You should read the documentation for how to open and write to file. It is very straight forward in python. Assuming you are using python 2.7, here is the link: <a href="https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow">https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files</a></p>
<p>It would be something like this:</p>
<pre><code>f = open(filename, 'w')
f.write(json_data["result"]["terms"].keys())
f.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A dictionary has, by definition, an arbitrary number of keys. There is no "the key". You have the keys() method, which gives you a python list of all the keys, and you have theiteritems() method, which returns key-value pairs, so</p>
<pre><code>for key, value in mydic.iteritems() : 
    thefile.write("%s\n" % key)
</code></pre>
<p>Or simply you can do this </p>
<pre><code>for key in mydic.keys():
    thefile.write("%s\n" % key)
</code></pre>
</div>
<span class="comment-copy">There is a <code>keys()</code> method</span>
