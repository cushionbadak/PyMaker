<div class="post-text" itemprop="text">
<p>I would like to convert my list(items) from string to int, therefore I can calculate the numbers in it. However, the python showed up the invalid literal for int() with base 10 error, and I've no idea what's wrong with it. (list: in one line only, separate by comma and no space before and after comma.)</p>
<p>list:</p>
<pre><code>51,2,2,49,15,2,1,14
</code></pre>
<p>Code:</p>
<pre><code>def parseCSV(file):
    file_open = open(file)
    print (file_open.read())

    with open(file) as rd:
        items = rd.readlines()

    print (items)
    items = list(map(int, items))

    print (items)

def main():
    file = str(input("Please enter the full name of the desired file (with extension) at the prompt below: \n"))
    parseCSV(file)

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to convert this to an integer: </p>
<pre><code>'51,2,2,49,15,2,1,14'
</code></pre>
<p>The error message is pretty explicit in showing you what it is you are trying to typecast to an <code>int</code>. </p>
<p>The data in your file is most likely comma separated, and you are reading it in as a list with a single string entry that is comma separated like this:</p>
<pre><code>['51,2,2,49,15,2,1,14']
</code></pre>
<p>So, you should be reading your file using read() and then split on ',' like this:</p>
<pre><code>with open(file) as f:
    fd = f.read().split(',')
    d = list(map(int, fd))
</code></pre>
<p>Output of <code>d</code>:</p>
<pre><code>[51, 2, 2, 49, 15, 2, 1, 14]
</code></pre>
<p>Alternatively, because you are dealing with a delimited file, and if you might have several of those rows, it might be worth it to also look in to using the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow">csv</a> module as well. Here is an example using it while also incorporating your bit of code: </p>
<pre><code>import csv

with open(file) as cf:
    c = csv.reader(cf, delimiter=',')
    for i in c:
        print(list(map(int, i)))
</code></pre>
<p>Finally, can be further simplified:</p>
<pre><code>with open('crma.csv') as cf:
    data = [list(map(int, i)) for i in csv.reader(cf, delimiter=',')]
</code></pre>
<p>Assuming you have three rows in your file, it would then look like this: </p>
<pre><code>[[51, 2, 2, 49, 15, 2, 1, 14], [51, 2, 2, 49, 15, 2, 1, 12], [51, 2, 2, 49, 15, 2, 1, 11]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I modified according to your code. Please have try.</p>
<pre><code>def main():
    file = str(input("Please enter the full name of the desired file (with extension) at the prompt below: \n"))
    parseCSV(file)

def parseCSV(file):

    file_open = open(file)
    print (file_open.read())

    with open(file) as rd:
        lines = rd.readlines()


    for line in lines:
        items = map(int, line.split(','))
        print (items)

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To answer your question, <em>'What's wrong with it?'</em>:</p>
<p>You are reading in your whole csv to a list containing one item that is the whole file as a long string. Even if your csv only contains integers the way you are parsing in all of the lines will not work.</p>
</div>
<span class="comment-copy">Could you please provide a good sample from the CSV?</span>
<span class="comment-copy">Why not use the built-in tools for reading a CSV?  or at least splitting the text by comma</span>
<span class="comment-copy"><code>'\n'</code> and <code>','</code>stripping problem when read lines?</span>
<span class="comment-copy">The parseCSV is just a variable name, no actual code or sample for it.</span>
<span class="comment-copy">We answered within a minute/seconds of each other :-) You provided good detail. +1</span>
<span class="comment-copy">It's not a good practice to make an edit that invalidate an existing answer.</span>
<span class="comment-copy">This doesn't invalidate the answer at all. It provides more context, and there is nothing removed from what was accepted.</span>
<span class="comment-copy">You edit invalidate mine because I posted an answer using the csv module.</span>
<span class="comment-copy">@user3100115 This is perfectly acceptable. Your answer is in no way invalid and all the users can see it. If you want your answer to be more visible, you are free to find ways to improve it. Users will automatically upvote the better answers from the less good ones. From my perspective, you have a good answer, and idjaw has a better answer.</span>
<span class="comment-copy">The (AttributeError: 'list' object has no attribute 'split') error occurred by this modification.</span>
<span class="comment-copy">Try my updates, thanks.</span>
<span class="comment-copy">Why the downvote?</span>
<span class="comment-copy">Hmm, I'd say that simply answering what is wrong with the OP's code is not very useful. What would be useful would be to explain what's wrong, then provide the solution to whatever OP is trying to do (or guide towards it).</span>
