<div class="post-text" itemprop="text">
<p>I'm trying to write a program that counts the 5 most common words in a txt file. </p>
<p>Here is what I have so far:</p>
<pre><code>file = open('alice.txt')
wordcount = {}

for word in file.read().split():
    if word not in wordcount:
        wordcount[word] = 1
    else:
        wordcount[word] += 1

for k, v in wordcount.items():
    print (k, v)
</code></pre>
<p>The program as it is counts every word in the .txt file.</p>
<p>My question is how to make it so it only counts the 5 most common words in the file so that it displays the words and the word count next to each word.</p>
<p>One catch - I can't use dictionary...whatever that means.</p>
</div>
<div class="post-text" itemprop="text">
<p>Easy, you just need to find <em>the 5 most common words in the file</em>. </p>
<p>So you could do something like this:</p>
<pre><code>wordcount = sorted(wordcount.items(), key=lambda x: x[1], reverse=True)
</code></pre>
<p>And then, this dictionary will be sorted by values(remember that <code>sorted</code> return a list). </p>
<p>You can use the following code to get the 5 most common words:</p>
<pre><code>for k, v in wordcount[:5]):
    print (k, v)
</code></pre>
<hr/>
<p>So the full code looks like:</p>
<pre><code>wordcount = {}

with open('alice.txt') as file:  # with can auto close the file
    for word in file.read().split():
        if word not in wordcount:
            wordcount[word] = 1
        else:
            wordcount[word] += 1

wordcount = sorted(wordcount.items(), key=lambda x: x[1], reverse=True)

for k, v in wordcount[:5]:
    print(k, v)
</code></pre>
<hr/>
<p>Also, here is a more simple way to do this use use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a>:</p>
<pre><code>from collections import Counter
with open('alice.txt') as file:  # with can auto close the file
    wordcount = Counter(file.read().split())

for k, v in wordcount.most_common(5):
    print(k, v)
</code></pre>
<p>The output is same as the first solution.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>File_Name = 'file.txt'

counterDict = {}

with open(File_Name,'r') as fh:
    #Reading  all lines into a list.
    data = fh.readlines()

for line in data:
    # Removing some characters like '.' , ',' 
    # Changing all case into lower. 
    line = line.lower().replace(',','').replace('.','')
    # Splitting all words into list elements.
    words = line.split()
    for word in words:
        # Add the word into counterDict if  it is not present.
        # key should be 1.
        if word not in counterDict:
            counterDict[word] = 1
        #If the word is already in the counterDict, then increase its count by one.
        else:
            counterDict[word] = counterDict[word] + 1    

# The sorting will be based on word count.
# Eg : lambda x = (word,count) = x[0] = word , x[1]=count
sorted_counterDict = sorted(counterDict.items(), reverse=True , key=lambda x : x[1])

#sorted_counterDict[0:5] , print first five.
for key,val in sorted_counterDict[0:5]:
    print(key,val)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is a built-in function that sorts a dictionary by key:</p>
<pre><code>sorted(wordcount, reverse=True)
</code></pre>
<p>Now it's up to you to figure out how to get/print only the first five elements ;)</p>
<p>Note: of course <em>sorted</em> is also capable to sort other collections. </p>
</div>
<span class="comment-copy">The code is using a dictionary: <code>wordcount = {}</code></span>
<span class="comment-copy">As falsetru told you. You're using a dictionary. You're doing fine so far. You just need to order your wordcount collection and print the first 5 items in it.</span>
<span class="comment-copy">pablo, that's what I am stuck on, how would I do that. Sorry, not really good at python, but I hope you can help me out.</span>
<span class="comment-copy">Thank you so much! It worked for me :)</span>
