<div class="post-text" itemprop="text">
<p>I'm trying to match all strings <strong>not</strong> ending with a specific word. 
For some reason the following doesn't work:</p>
<pre><code>&gt;&gt; import re
&gt;&gt; my_str = 'static/assets/img/favicon.ico'
&gt;&gt; re.search('^static.+(?!ico)$', my_str)
&lt;_sre.SRE_Match at 0x7f08b9773440&gt;
</code></pre>
<p>Can you please explain why it's not working and how to fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>That's exactly what <code>str.endswith()</code> is for.</p>
<pre><code>if my_str.endswith('ico'):
     # do stuff
</code></pre>
<p>And if you are dealing with file names you can use <a href="https://docs.python.org/3/library/fnmatch.html" rel="nofollow"><code>fnmatch</code></a> module which provides support for Unix shell-style wildcards:</p>
<pre><code>import fnmatch
for name in file names:
  if fnmatch.fnmatch(file, '*.ico'):
         #do stuff
</code></pre>
<p>And if you want to check that your string stats with a specific pattern you can use <code>str.startswith()</code> method alongside the <code>str.endswith()</code> :</p>
<pre><code>if my_str.startswith('static') and my_str.endswith('ico'):
        #do stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you want to use a negative lookbehind, not lookahead.</p>
<pre><code>^static.+$(?&lt;!ico)
</code></pre>
<p>See <a href="https://regex101.com/r/jN1kL6/1" rel="nofollow">demo at regex101</a> if this is what you needed.</p>
<hr/>
<p><code>(?!ico)$</code> or <code>$(?!ico)</code> would look if there is not <code>ico</code> after the end which is impossible.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use:</p>
<pre><code>print re.search(r'^(?!.*ico$)static.+', my_str)
None
</code></pre>
<p><code>(?!.*ico$)</code> asserts that string doesn't end with <code>ico</code></p>
</div>
<span class="comment-copy">Why not just <code>if not my_str.endswith('.ico')</code>?</span>
<span class="comment-copy">can you show to correct way to do it with re? because it also needs to start with 'static'</span>
<span class="comment-copy">@DavidTzoor That's what anubhava showed, but it's not a pyhtonic way at all. In terms of runtime using <code>fnmatch</code> and <code>endswith</code> will performs too much faster for huge data sets.</span>
<span class="comment-copy">so use <code>startswith</code> and <code>endswith</code>?</span>
<span class="comment-copy">@DavidTzoor Yep, check the edit.</span>
<span class="comment-copy">but that's not what I wanted. I need the string to start with static and not end with ico</span>
<span class="comment-copy">You're mistaken as this is what this regex is already doing i.e. matching a string starting with <code>static</code> and NOT ending with <code>ico</code></span>
