<div class="post-text" itemprop="text">
<p>Hey so I'm using argparse to try and generate a quarterly report. This is what the code looks like:</p>
<pre><code>parser  = argparse.ArgumentParser()

parser.add_argument('-q', "--quarter",  action='store_true', type=int, help="Enter a Quarter number: 1,2,3, or 4 ")
parser.add_argument('-y', "--year", action='store_true',type=str,help="Enter a year in the format YYYY ")
args = parser.parse_args()
</code></pre>
<p>the error I receive is: </p>
<blockquote>
<p>TypeError: <strong>init</strong>() got an unexpected keyword argument 'type'  </p>
</blockquote>
<p>as far as I can tell from the argparse documentation type is one of the parameters of the add_argument function. I tried removing this and updating the code to :</p>
<pre><code>parser  = argparse.ArgumentParser()

parser.add_argument('-q', "--quarter",  action='store_true', help="Enter a Quarter number: 1,2,3, or 4 ")
parser.add_argument('-y', "--year", action='store_true',help="Enter a year in the format YYYY ")
args = parser.parse_args()
</code></pre>
<p>I then tried to run it with: <code>python scriptname.py -q 1 -y 2015</code> and it is giving me the following error:</p>
<blockquote>
<p>error:unrecognized arguments: 1 2015 </p>
</blockquote>
<p>I don't know why that is either. Can anyone please shed some light on this.   </p>
</div>
<div class="post-text" itemprop="text">
<p>What <code>action="store_true"</code> means is that if the argument is given on the command line then a <code>True</code> value should be stored in the parser. What you actually want is to store the given year (as a string) and quarter (as an int).</p>
<pre><code>parser  = argparse.ArgumentParser()

parser.add_argument('-q', "--quarter", type=int, help="Enter a Quarter number: 1,2,3, or 4 ")
parser.add_argument('-y', "--year", type=str, help="Enter a year in the format YYYY ")
args = parser.parse_args()
</code></pre>
<p>When you specify <code>action='store_true</code> argparse is internally instantiating a <code>_StoreAction</code> instance whose constructor does not accept a <code>type</code> parameter (since it will always be a boolean (True/False)). You cannot supply <code>action="store_true"</code> and 'type' at the same time.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>argparse</code> documentation is not as detailed as it could be (but still has more information than many users can absorb).</p>
<p>In particular, the actual information that an argument needs varies with <code>action</code>.</p>
<pre><code>parser.add_argument('-q', "--quarter",  action='store_true', type=int, help="Enter a Quarter number: 1,2,3, or 4 ")
</code></pre>
<p>A <code>store_true</code> action does not take any parameters (i.e. nargs=0).  It's default value is <code>False</code>, and if used the attribute is set to <code>True</code>.</p>
<p>If you want the user to give one of those four numbers I'd suggest using</p>
<pre><code>parser.add_argument('-q', '--quarter', type=int, choices=[1,2,3,4], help="...")
</code></pre>
<p><a href="https://docs.python.org/3/library/argparse.html#choices" rel="nofollow">https://docs.python.org/3/library/argparse.html#choices</a> has a similar example.</p>
<p>The examples in <a href="https://docs.python.org/3/library/argparse.html#action" rel="nofollow">https://docs.python.org/3/library/argparse.html#action</a> give a pretty good idea of what parameters each action class takes.</p>
<p>There is a Python bug/issue discussing improving either the documentation, or the error message when unnecessary parameters are given in the function.  As it stands, it's the Python subclass definition that is issuing the error message.</p>
</div>
<span class="comment-copy">Please reformat that code, it's hard to read - 4 chars before each line will make it be a code block.</span>
<span class="comment-copy">Why are you using <code>action='store_true'</code>? What was your understanding of what that would do?</span>
<span class="comment-copy">later on in the code i do a check to see if the variables stored in argparse are true. if they are i execute some code.</span>
<span class="comment-copy">That's not at all how <code>store_true</code> works, or even how truth works in Python.</span>
<span class="comment-copy">The purpose of <code>store_true</code> is to save the value <code>True</code> for the named variable.  Specifying a <code>type</code> value for the same option is meaningless, and disallowed.</span>
<span class="comment-copy">thanks a lot this was very insightful</span>
<span class="comment-copy">Thanks a lot! i will try this and see if it works</span>
<span class="comment-copy">Interesting, to so the "optionality" flavor is built in, no need to do <code>nargs='?'</code> for example, which apparently conflicts with that built in/default design.</span>
<span class="comment-copy">The base <code>Action</code> class has 2 parameters and 8 keyword parameters.  But for the 'store_true' subclass, <code>_StoreTrueAction</code> subclass, only 3 of those keywords are in its <code>__init__</code>, and only the <code>help</code> makes sense.  Class inheritance gives a lot of flexibility, but sometimes makes accurate documentation difficult.</span>
<span class="comment-copy"><code>argparse</code> docs on <code>required</code> may help <a href="https://docs.python.org/2/library/argparse.html#required" rel="nofollow noreferrer">docs.python.org/2/library/argparse.html#required</a></span>
