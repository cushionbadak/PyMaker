<div class="post-text" itemprop="text">
<p>I have a date with events that happened on the date. I want to enumerate the list of events on the date when i show the calendar. </p>
<p>Also I need to be able to delete an event from the list.</p>
<pre><code>def command_add(date, event, calendar):
    if date not in calendar:
        calendar[date] = list()
    calendar[date].append(event)


calendar = {}
command_add("2015-10-29", "Python class", calendar)
command_add("2015-10-12", "Eye doctor", calendar)
command_add("2015-10-12", "lunch with sid", calendar)
command_add("2015-10-29", "Change oil in blue car", calendar)
print(calendar)

def command_show(calendar):
    for (date, event) in calendar:
       print(date, enumerate(event))

command_show(calendar)
</code></pre>
<p>I thought that this would let me access the secondary list under the date and enumerate it but I get an error.</p>
<p>Example out:</p>
<pre><code>command_show(calendar)
    2015-10-20:
        0: stackover flow sign up
    2015-11-01:
        0: stackoverflow post
        1: banned from stack overflow
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just change your <code>command_show()</code> function to this, if you don't use <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer"><code>dict.items()</code></a> then you will <em>only</em> get the keys(not both keys and values):</p>
<pre><code>def command_show(calendar):
    for (date, event) in calendar.items():
        print(date+':')
        for i in enumerate(event):
            print('    '+str(i[0])+': '+i[1])
</code></pre>
<p>Output:</p>
<pre><code>2015-10-29:
    0: Python class
    1: Change oil in blue car
2015-10-12:
    0: Eye doctor
    1: lunch with sid
</code></pre>
<hr/>
<p>About why am I doing this:</p>
<pre><code>for i in enumerate(event):
    print('    '+str(i[0])+': '+i[1])
</code></pre>
<p>As you can see, I'm using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> function here. From the document:</p>
<blockquote>
<p>Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration.<br/>
  The <code>__next__()</code> method of the iterator returned by <code>enumerate()</code> returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable.</p>
</blockquote>
<p>So it will return something like <code>[(0, 'Python class'), (1, 'Eye doctor'), (2, 'lunch with sid')]</code> if the <code>evernt</code> is <code>['Python class', 'Eye doctor', 'lunch with sid']</code>. </p>
<p>Now we have <code>[(0, 'Python class'), (1, 'Eye doctor'), (2, 'lunch with sid')]</code>, when we use <code>for</code> loop on it like <code>for i in enumerate(event)</code>, <code>i</code> will be <code>(0, 'Python class')</code> at the first loop, and <code>(1, 'Eye doctor')</code> at the second loop, etc.</p>
<p>And then, if you want to print something like <code>0: Python class</code>(there is some spaces in front of the sting), we need manually put the spaces like <code>'    '+</code>(<code>+</code> can join strings here, for example, <code>'foo'+'bar'</code> is <code>foobar</code>). </p>
<p>Then, because <code>i</code> is a tuple, I'm using <a href="https://stackoverflow.com/questions/509211/explain-pythons-slice-notation"><code>slice</code></a>. <code>i[0]</code> can get the first element in that tuple, <code>i[1]</code> can get the second, etc.</p>
<p>Because <code>i[0]</code> is a integer, and we can't just do something like <code>0 + 'foobar'</code>(will raise <code>TypeError: unsupported operand type(s) for +: 'int' and 'str'</code>). So we need use <code>str()</code> function to covert it to string. And then...maybe you'll understand.</p>
<hr/>
<p>Also you can do something like:</p>
<pre><code>for num, event in enumerate(event):
    print('    '+str(num), event, sep=': ')
</code></pre>
<p>More clear? <code>for num, event in enumerate(event)</code> will give something like <code>num = 0, evert = 'Python class'</code> at the first loop, and...as I said.</p>
<p>About <code>sep</code>, you could check <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">the document</a> for more details.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>for ... in calendar:</code> will only loop over the keys in the dictionary. You need to call <code>.items()</code> to get both <em>keys and values</em>:</p>
<pre><code>def command_show(calendar):
    for date, events in calendar.items():
        print(date, enumerate(events))
</code></pre>
<p>You can also simplify <code>command_add</code> by using <a href="https://docs.python.org/2/library/stdtypes.html#dict.setdefault" rel="nofollow"><code>.setdefault()</code></a> method:</p>
<pre><code>def command_add(date, event, calendar):
    calendar.setdefault(date, []).append(event)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <code>defaultdict</code> which which take care of that <code>if</code> check for you; and loop through the <code>calendar.iteritems()</code> so that you get a tuple of <code>key,value</code> on each iteration.</p>
<pre><code>from collections import defaultdict

calendar = defaultdict(list)

def command_add(date, event, calendar):
    calendar[date].append(event)

command_add("2015-10-29", "Python class", calendar)
command_add("2015-10-12", "Eye doctor", calendar)
command_add("2015-10-12", "lunch with sid", calendar)
command_add("2015-10-29", "Change oil in blue car", calendar)
print(calendar)

for date, events in calendar.iteritems():
    print(date)
    for event in events:
        print('\t{}'.format(event))
</code></pre>
</div>
<span class="comment-copy">hey this worked really well but i just wanted to clarify something for my understanding. when u iterate the for loop thru i in enumerate(event) . how does str(i[0]) and + i[1], the first 1 add's the numbers to enumerate the list (str(i[0]) and the second one i[1] gets all the events i just don't know how that interaction works. because i want to be able to delete something from the list as well so im trying to understand what i would need to access to delete a specifc entry at a given date</span>
<span class="comment-copy">more specifically why did u put a [0] and [1] in brackets what does that do exactly</span>
<span class="comment-copy">@Sinoda I've edited :) (seems like little long :P)</span>
<span class="comment-copy">this was brilliant thanks for the well thought out reply i appreciate it really helps me understand</span>
<span class="comment-copy">Glad I could help :)</span>
