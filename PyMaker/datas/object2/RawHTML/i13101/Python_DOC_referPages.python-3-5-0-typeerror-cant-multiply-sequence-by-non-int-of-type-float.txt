<div class="post-text" itemprop="text">
<p>I can't make this to work.</p>
<p>I've tried:</p>
<pre><code>print('Names choosed was %s' % (random.sample(namesList, float(len(namesList))*0.25))), but still doesn't work.
</code></pre>
<p>Tried to seek other solutions, but still can't solve this.</p>
<pre><code>import random

f= open('file.txt','r')
namesList = []

for line in f:
    namesList.append(line.strip())

print('There are %d names in list and we will choose %.0f from the list.' % (len(namesList), float(len(namesList))*0.25))

print('Names choosed was %s' % (random.sample(namesList, len(namesList)*0.25)))

f.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Floating point is the devil, just divide:</p>
<pre><code>print('Names choosed was %s' % (random.sample(namesList, len(namesList) // 4),))
</code></pre>
<p>If you need to convert from a non-fixed <code>float</code> to a rough <code>int</code> divisor, one approach would be to divide <code>1</code> by the <code>float</code> to get the inverse, then convert to <code>int</code> (with <code>int</code> constructor, or <code>round</code> or whatever you like), e.g.:</p>
<pre><code>divisor = int(1 / floatval)
print('Names choosed was %s' % (random.sample(namesList, len(namesList) // divisor),))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your tenth line you only specify the type of the expression (len(namesList)) as float but the output you want to be converted to a float is (len(namesList))*0.25, so I guees it doesn't give you the right output.</p>
<p>In my opinion it would be : float(len(namesList)*0.25)</p>
</div>
<span class="comment-copy">Wow, that's works! Can I ask you something? Why use //4 instead of /4? I'm missing something here.</span>
<span class="comment-copy">@RafaelDias: In Python 3, <code>/</code> is "true division", which for <code>int / int</code> always produces <code>float</code> (<code>1 / 4</code> -&gt; <code>0.25</code>). <code>//</code> is "floor division" (<code>1 // 4</code> -&gt; <code>0</code>). Even on Py2, <code>//</code> is always available (to get <code>/</code> as "true division", you'd need <code>from __future__ import division</code> at the top of the file), so it's a good idea to use it whenever you want floor division.</span>
<span class="comment-copy">thanks for you help! I need so much to learn! Can I ask you something? How to learn more abou python? I've made few beginners courses but for this simple question I just spent hours without knowing where and how to solve.</span>
<span class="comment-copy">Well, for the most basic stuff, there is <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">the main Python tutorial</a>. It does cover some of the basics like this.</span>
