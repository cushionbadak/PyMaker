<div class="post-text" itemprop="text">
<p>In Python, whenever I try to use <code>.sort()</code> or a <code>random.shuffle()</code> on a list like such:</p>
<pre><code>a = [1, 3, 2].sort()
b = random.shuffle([1, 3, 2])
</code></pre>
<p>The <code>a</code> and <code>b</code> will be <code>None</code> as both methods return <code>None</code>. </p>
<p>Of course, I am aware that there is a <code>sorted()</code> function for <code>.sort()</code>. However, the <code>random.shuffle()</code> does not. So the fix for this is to do:</p>
<pre><code>a = [1, 3, 2]
random.shuffle(a)
b = a
</code></pre>
<p>or from <a href="https://stackoverflow.com/questions/17649875/why-does-random-shuffle-return-none">another post</a>:</p>
<pre><code>b = sorted([1, 3, 2], key=lambda k: random.random())
</code></pre>
<p>Is there a general and elegant way to store literals, edited by methods that return <code>None</code>, into a variable?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = [1, 3, 2]
b = random.shuffle(a) or a[:]
</code></pre>
<p>This will shuffle <code>a</code>, and point <code>b</code> to a copy of it.</p>
<p><code>or</code> - used to chain, returns first truth value (or last false)</p>
<p><code>a[:]</code> - copies <code>a</code></p>
<p><strong>Note</strong>: the original <code>a</code> <em>will</em> change. <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow"><code>random.shuffle</code></a> modifies any list it is given (from the docs):</p>
<blockquote>
<p>Shuffle the sequence x <em>in place</em>...</p>
</blockquote>
<p>My advice is just write your own shuffle method.</p>
</div>
<span class="comment-copy">Why not just write your own <code>shuffled</code> that copies, shuffles and returns an iterable argument? Those methods alter their argument in-place, so you already have a reference to the result; <i>it's the same object you passed in</i>. <code>b = a</code> could happen before or after with the same result - it's just a reference, <b>not</b> a copy.</span>
<span class="comment-copy">I've edited out <i>"immediate"</i> because it's unclear what you mean - are you referring to <i>literals</i>?</span>
<span class="comment-copy">Yes, I was referring to literals.</span>
<span class="comment-copy">Then no, there is no general way - in the <code>.sort</code> case (or anything else with a deterministic outcome) you <i>write the literal in order</i> and if it needs to be random just manipulate it on a second line. That would be more explicit than the random sort you show.</span>
<span class="comment-copy">I see. The <code>.sort()</code> was a bad example.</span>
<span class="comment-copy">But you can't do this with a literal in one line, and it <i>doesn't</i> prevent the original being modified like <code>sorted</code> does. The fact that the OP has accepted this leaves me more confused than their question did; I'm not sure they even know what they're looking for.</span>
<span class="comment-copy">@jonrsharpe added clarification. I tend to agree but now can't delete accepted answer.</span>
<span class="comment-copy">Well, you can: <code>b = [(random.shuffle(x), x) for x in [a[:]]][0][1]</code></span>
<span class="comment-copy">@DanD. Ok, but that's: 1. Not the same thing (I was referring to using <code>or</code>); and 2. Almost unreadable!</span>
