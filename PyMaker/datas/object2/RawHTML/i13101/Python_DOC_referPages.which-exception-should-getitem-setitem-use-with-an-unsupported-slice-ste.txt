<div class="post-text" itemprop="text">
<p>I found this code in a 3rd party module which was ignoring <code>foo[::step]</code> or <code>key.step</code> in this case.</p>
<pre><code>def __getitem__(self, key):
    if isinstance(key, slice):
        return self._sub_slice(key.start, key.stop)
    if self._is_in_range(key):
        return self._tree[key]
    else:
        raise KeyError(key)
</code></pre>
<p>While supporting steps would be ideal, assuming this isn't going to be supported, I'd like to add an exception, otherwise <code>foo[a:b:-1]</code> for eg will ignore the <code>-1</code> in the slice.</p>
<p>eg:</p>
<pre><code>if key.step not in {None, 1}:
    raise Exception("only a step size of 1 is supported")
</code></pre>
<hr/>
<p>So my question is, for valid but unsupported slice steps,
which exception type should be used?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>ValueError</strong></p>
<p>Raised when a built-in operation or function receives an argument that has <em>the right type but an inappropriate value</em>, and the situation is not described by a more precise exception such as <a href="https://docs.python.org/3/library/exceptions.html#IndexError" rel="nofollow">IndexError</a>.</p>
<p><a href="https://docs.python.org/3/library/exceptions.html#ValueError" rel="nofollow">https://docs.python.org/3/library/exceptions.html#ValueError</a></p>
</blockquote>
<p>"The right type but an inappropriate value" seems to match your description pretty well.</p>
</div>
<span class="comment-copy">Note that an unsupplied step size defaults to <code>None</code>, not <code>1</code>.</span>
<span class="comment-copy">I'd recommend making your own <code>SliceStepError</code> class; the built-in ones don't match very well.</span>
<span class="comment-copy">Correct me if I'm misunderstanding, but slicing doesn't usually raise an exception. Accessing an index out of range will, but the slicing won't. Let me know if this is helpful: <a href="http://stackoverflow.com/a/9490148/1832539">stackoverflow.com/a/9490148/1832539</a></span>
