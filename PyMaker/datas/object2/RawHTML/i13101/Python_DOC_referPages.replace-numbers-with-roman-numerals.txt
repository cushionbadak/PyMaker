<div class="post-text" itemprop="text">
<p>I need a way to replace all occurrences of numbers represented as digits within a string with their Roman numeral equivalents.</p>
<p>Examples: </p>
<ul>
<li><code>My 3 Top Tips: Part 19</code> should output <code>My III Top Tips: Part XIX</code></li>
<li><code>Se7en</code> should output <code>Se7en</code> (since the character <code>7</code> is not a 'word')</li>
</ul>
<p>It seems the best package out there for the job is <a href="https://pypi.python.org/pypi/roman" rel="nofollow">roman</a>.  Unfortunately it won't accept strings containing both text and numbers.</p>
<p>My thoughts are:</p>
<ol>
<li><code>split()</code> the text</li>
<li>iterate each <code>word</code></li>
<li>is <code>word</code> a number, if so replace it using <code>roman</code></li>
<li>merge the list together again</li>
</ol>
<p>This just seems messy and error prone, and not very pythonic.  What are the better ways to do this?  Is it possible with a regex or list comprehension, or a combination of both?</p>
</div>
<div class="post-text" itemprop="text">
<p>To find numbers that are not parts of larger words, use a regex with <a href="http://www.regular-expressions.info/wordboundaries.html" rel="nofollow noreferrer">word boundary anchors</a>:</p>
<pre><code>regex = re.compile(r"\b\d+\b")
</code></pre>
<p>will only match <code>3</code> and <code>19</code> in your example, but not <code>7</code>.</p>
<p>So, using <code>write_roman()</code> from <a href="https://stackoverflow.com/q/28777219/20670">this answer</a>, you can do</p>
<pre><code>def repl(match):
    return write_roman(int(match.group(0)))

print(regex.sub(repl, "My 3 Top Se7en Tips: Part 19"))
</code></pre>
<p>and will get</p>
<pre><code>My III Top Se7en Tips: Part XIX
</code></pre>
</div>
<span class="comment-copy">i would use regex !</span>
<span class="comment-copy">Yeah I'm pretty sure that's the way to go!  But, I don't know how to make <code>re</code> replace a match with a function output - using the match itself as an argument</span>
<span class="comment-copy">Did you look at the <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">documentation on re.sub</a>? I guess not, because if you had, you would have read that "If repl is a function, it is called for every non-overlapping occurrence of pattern. The function takes a single match object argument, and returns the replacement string."</span>
<span class="comment-copy">@rici Thanks for the tip</span>
<span class="comment-copy">@TigerhawkT3 I disagree that this is a duplicate of the question you have linked to, this is a much more specific problem. That question specifically concerns the actual conversion process.</span>
<span class="comment-copy">you should add the code for translating the number to Roman, otherwise you are not answering his question (although pretty much you addressed the important part)</span>
