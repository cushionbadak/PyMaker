<div class="post-text" itemprop="text">
<p>The following code shows how the standard alphabet can be translated using a dictionary.</p>
<pre><code>letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
encryption_code = 'LFWOAYUISVKMNXPBDCRJTQEGHZ'
randomlist  = "Hello world!"
letters += letters.lower()
encryption_code += encryption_code.lower()
enc = dict(zip(letters,encryption_code))
display_enc = "".join([enc.get(ch, ch) for ch in randomlist])
print(display_enc)
</code></pre>
<p>I was wondering if there was a way to apply this method and get the individual characters of a text file and encrypt it in the same or similar way. This is what I've tried:</p>
<pre><code>letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
encryption_code = 'LFWOAYUISVKMNXPBDCRJTQEGHZ'
letters += letters.lower()
encryption_code += encryption_code.lower()
enc = dict(zip(letters,encryption_code))

file_name = askopenfilename(filetypes=[("Text files","*.txt")])

import_list = []

with open(file_name, 'r') as f:
    import_list = f.readlines()

display_enc2 = "".join([enc.get(ch, ch) for ch in import_list])
print(display_enc2)
</code></pre>
<p>But this doesn't encrypt the letters in the file you choose to import.</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done by making use of the <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow">translate</a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans" rel="nofollow">maketrans</a> methods in <code>str</code></p>
<p>Here is an example of translating a string using <code>translate</code> and <code>maketrans</code>:</p>
<pre><code>print("This Is Now TrAnsLateD".upper().translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "LFWOAYUISVKMNXPBDCRJTQEGHZ")))
JISR SR XPE JCLXRMLJAO
</code></pre>
<p>So, when using <code>readlines</code>, you will get a list of strings probably something like this: </p>
<pre><code>list_of_words = ["words and words\n", "I like words\n", "Me too\n"]
</code></pre>
<p>So, similarly to what you did, you can do this (accounting for removing <code>\n</code> as specified in comments): </p>
<pre><code>translated = [i.upper().strip().translate(str.maketrans("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "LFWOAYUISVKMNXPBDCRJTQEGHZ")) for i in list_of_words]
</code></pre>
<p>Output:</p>
<pre><code>['EPCOR LXO EPCOR', 'S MSKA EPCOR', 'NA JPP']
</code></pre>
</div>
<span class="comment-copy">So how would I make it not print the <code>/n'</code>?</span>
<span class="comment-copy">call <code>.strip()</code> on the string.</span>
<span class="comment-copy">@Inkblot look at my update. Answer includes it now.</span>
<span class="comment-copy">Thanks but is there a way to a) Print it on a new line if the file has it on a new line? b)Remove commas and square brackets?</span>
<span class="comment-copy">If you want newlines you should not have removed the '\n'. '\n' is the newline character. So don't use <code>strip()</code> that way it preserves the newlines. If you are looking to remove characters like punctuation from the string you should look in to <code>replace</code> or even better regex to remove punctuation in the string.</span>
