<div class="post-text" itemprop="text">
<p>So far this is what I have from the comments but it doesn't run.</p>
<pre><code>with open('score_report.txt') as in_file, open('score_report.txt','w') as out_file:
    f = iter(in_file) 
    while True:
        try:
            name = next(f)
            scores = next(f)
        except StopIteration:
            break
        s = scores.strip('[]\n').split(', ')
        scores1 = tuple(map(int, s))
        out_file.write('{}\t{}\t{}\t{}\n'.format(name.strip(),
                                                 min(scores1),
                                                 max(scores1),
                                                 sum(scores1)/len(scores1)))
</code></pre>
<p>Is there a problem with how it is that I'm not seeing? I need it to print student score reports on separate lines.</p>
<pre><code>Smith, Jane
[77, 91, 70, 93, 73, 87]
Doe, John
[90, 83, 94, 77, 88, 95, 73]
Jones, David
[99, 80, 95, 70, 83, 99, 78]
</code></pre>
<p>Your program is to print to a file called score_report.txt one line for each student containing their name, the maximum score, their minimum score, and their average score, where each item is separated from the next by a tab.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a> function to create the pairs of consecutive lines then use <a href="https://docs.python.org/2/library/ast.html" rel="nofollow"><code>ast.literal_eval</code></a> to convert the list string to a list object :</p>
<pre><code>from itertools import tee
with open('file_name') as in_file,open('score_report.txt','w') as out_file:
   f1,f2 = tee(in_file)
   next(f2)
   for name , scores in zip(f1,f2):
       scores = ast.literal_eval(scores.strip())
       out_file.write('{}\t{}\t{}\t{}'.format(
                                              name.strip(),
                                              min(scores),
                                              max(scores),
                                              sum(scores)/len(scores)))
</code></pre>
<p>Note that since file objects are iterator here using <a href="https://docs.python.org/3/library/itertools.html#itertools.tee" rel="nofollow"><code>itertools.tee</code></a> you can create 2 independent iterator form your file object then use next to consume the first item of one of the iterators then use zip to create the relative pairs.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is my solution</p>
<pre><code>with open('file_name') as in_file, open('score_report.txt','w') as out_file:
    f = iter(in_file) 
    while True:
        try:
            name = next(f)
            scores = next(f)
        except StopIteration:
            break
        s = scores.strip('[]\n').split(', ')
        iscores = tuple(map(int, s))
        out_file.write('{}\t{}\t{}\t{}\n'.format(name.strip(),
                                                 min(iscores),
                                                 max(iscores),
                                                 sum(iscores)/len(iscores)))
</code></pre>
<p>which with an input file of</p>
<pre><code>Smith, Jane
[77, 91, 70, 93, 73, 87]
Doe, John
[90, 83, 94, 77, 88, 95, 73]
Jones, David
[99, 80, 95, 70, 83, 99, 78]
</code></pre>
<p>produces an output file of</p>
<pre><code>Smith, Jane 70  93  81.83333333333333
Doe, John   73  95  85.71428571428571
Jones, David    70  99  86.28571428571429
</code></pre>
</div>
<span class="comment-copy">you lack a <code>)</code> and an import maybe</span>
<span class="comment-copy">most of all, if I am not mistaken, <code>tee</code> returns <b>indpendent iterators</b> so even if you advance f2 by one step, f1 will re-read the next line. Probably, it would be better to revert to the good ol' <code>f1=iter(in_file); f2=f1; next(f2)...</code></span>
<span class="comment-copy">@Pynchia No that's exactly what <code>tee</code> is for.By assigning an iterator to another one ` f2=f1` actually you will create 2 reference to one object and by traversing one of them you will consume the others too.</span>
<span class="comment-copy">Are you saying this is what you want: <code>&gt;&gt;&gt; l=['Smith, Jane', [77, 91, 70, 93, 73, 87], 'Doe John', [90, 83, 94, 77, 88, 95, 73], 'Jones, David', [99, 80, 95, 70, 83, 99, 78]]</code> <code>&gt;&gt;&gt; f1,f2 = tee(l)</code> <code>&gt;&gt;&gt; next(f2)</code> <code>&gt;&gt;&gt; [z for z in zip(f1,f2)]</code> <code>[('Smith, Jane', [77, 91, 70, 93, 73, 87]), ([77, 91, 70, 93, 73, 87], 'Doe John'), ('Doe John', [90, 83, 94, 77, 88, 95, 73]), ([90, 83, 94, 77, 88, 95, 73], 'Jones, David'), ('Jones, David', [99, 80, 95, 70, 83, 99, 78])]</code></span>
<span class="comment-copy">No, the output file you got was right, i just can get it to run. I have score report in in_file and out_file, but I cant get it to run.</span>
<span class="comment-copy">What would the fist four lines of code look like when you are reading in the file with out file?</span>
<span class="comment-copy">I don't understand the question, please elaborate</span>
<span class="comment-copy">I wanted to know what the lines of code are to read in the file?</span>
<span class="comment-copy">How do I open('file_name') as in_file, open('score_report.txt','w') as out_file: , or more to the point what would this look like in Python code?</span>
<span class="comment-copy">@Crash917 -  that is exactly how it would look like in python</span>
