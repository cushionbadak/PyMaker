<div class="post-text" itemprop="text">
<p>I have to write a program that checks if a user's variable name is valid. These are the rules I am checking for: Only letters, numbers, and the underscore character are allowed. The first character cannot be a number.</p>
<p>I am not sure what I am doing wrong. Every time I run the program, it tells me that it's a valid variable, even for invalid inputs.</p>
<p>Here is my program: </p>
<pre><code>import string

def valid(name):
    for character in (name):
        if name[0].isdigit():
            name==False
            break 
        else:
            if character.isalnum() and character is ('_'):
                name==True
            else:
                name==False
    return

def main():
    name=input("Enter your Python variable name: ")

    while name != "done":
        valid(name)

        if True:
            print("This is a valid variable name.")

        else:
            print("This is not a valid variable name.")

        name=input("Enter your Python variable name or 'done': ")

main()
</code></pre>
<p>Here is a sample output (if done right): </p>
<pre><code>Enter your Python variable name: high_temp
This is a valid variable name.

Enter your Python variable name or "done": highTemp2
This is a valid variable name.

Enter your Python variable name or "done": 2_high_temp
This is not a valid variable name.

Enter your Python variable name or "done": done
</code></pre>
<p>Thank you in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd write it this way:</p>
<pre><code>def valid(name):
    return not name[0].isdigit() and all(c.isalnum() or c == '_' for c in name)
</code></pre>
<p>But perhaps this would make more sense now:</p>
<pre><code>def valid(name):
    if name[0].isdigit():
       return False
    for c in name:
       if not (c.isalnum() or c == '_'):
          return False
    return True

def main():

    while True:

        name = input("Enter your Python variable name or 'done': ")

        if name == "done":
           break

        if valid(name):
            print("This is a valid variable name.")
        else:
            print("This is not a valid variable name.")

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another pythonic solution,</p>
<pre><code>import string

def valid(name):
   if name[0].isdigit():
       return false
   accepted_chars=string.digits + string.ascii_lowercase + '_'
   return all(item for name if item.lower() in accepted_chars)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if True
</code></pre>
<p>is always <code>True</code>.  You mean to say</p>
<pre><code>if valid(name)
</code></pre>
<p>You only need this one call to <code>valid</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you can get away with <code>isidentifier</code> method</p>
<pre><code>return name.isidentifier()
</code></pre>
</div>
<span class="comment-copy">What about keywords, like <code>if</code>, <code>for</code>, <code>try</code>, <code>except</code>? If you're working with Python 3.x check out <a href="https://docs.python.org/3/library/stdtypes.html#str.isidentifier" rel="nofollow noreferrer"><code>std.isidentifier()</code></a>. Also have a look at this question: <a href="http://stackoverflow.com/q/12700893/1025391">stackoverflow.com/q/12700893/1025391</a></span>
<span class="comment-copy">You can use a regex: <code>def valid(name): return re.match(r'[a-zA-Z_]\w+', name)</code></span>
<span class="comment-copy">Thank you, it worked!!</span>
<span class="comment-copy">Ahh, I see. I changed it but now everything is not valid!</span>
