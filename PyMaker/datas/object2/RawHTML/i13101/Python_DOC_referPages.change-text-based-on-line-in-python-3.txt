<div class="post-text" itemprop="text">
<p>I have some files that need to have alterations done on several lines, and the line it is on determines what needs to be changed. I have looked at other answers, but they seem to assume only one character needs changed throughout the file, or only one line needs to be changed.</p>
<p>My file looks like this:</p>
<pre><code>%chk=C:/place/drive/stuff/thing/here/long/path/name/that/we/dont/need/We_need_this_part.gjf
%mem=1000MB
#pm3 scf=direct Opt=Modredun Test

Strucrtural optmization using pm3 G03, Gaussian 8, 2015/02/03

0 1
 C              
 N                  1            B1
 N                  1            B2    2            A1
 N                  1            B3    3            A2    2            D1    0
 C                  4            B4    1            A3    3            D2    0
 H                  3            B5    1            A4    2            D3    0
 H                  3            B6    1            A5    2

        D4    0
</code></pre>
<p>I need to get rid of the path, so the first line would just be <code>%chk=We_need_this_part</code> I also will later need to be able to change the 2nd 3rd and 5th lines based on input from tkinter widgets, but I think after I get this that part will be relatively simple.</p>
<p>Here is what I have so far:</p>
<pre><code>import shutil
import fileinput
import tkinter

##    window = tkinter.Tk()
##    window.title("Gaussian Cookbook")
##    window.mainloop()    

def fileFind():

#prompts user to navigate to desired file
    inFile = tkinter.filedialog.askopenfilename()
#prompts user to save new file under new name
    outFile = tkinter.filedialog.asksaveasfilename()
#copies contents of old file, to have needed changes applied,
#leaves user option to overwrite or create new file
    outFile = shutil.copyfile(inFile, outFile)

    fileAlter(outFile)



def fileAlter(file):


    lines = file.readlines()
    print (lines)

#applies needed changes
    sep = '/'
    rest = text.split(sep,1)[1]
    line[0] = rest

    sep = '.'
    rest = text.split(sep,1)[0]
    line[0] ='%chk=' rest


##    for line in fileinput.input(outFile, inplace=True):
##        print(line.replace('pm3', 'B3LYP/6-31G(d)'))
</code></pre>
<p>I think by specifying line[n] I will be able to control what happens on each line, but I get <code>AttributeError: 'str' object has no attribute 'readlines'</code> when I try to run it. I don't know why it is taking my file to be a string.</p>
<p>Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>outfile</code> is a string containing the filename.  As specified in the <a href="https://docs.python.org/3/library/shutil.html#shutil.copyfile" rel="nofollow">shutil doc</a> (though not the doc string) <code>copyfile</code> returns the second parameter <code>dst</code>.</p>
<p>That said, there is no point to writing the file only to read and rewrite it.  Unless you need information on later lines to edit earlier lines, read, edit, and write a line at a time.</p>
<pre><code>with open(infile,...) as inn, open(outfile,...) as out:
    for line in inn:  # or: for n, line in enumerate(inn):
        if need_to_edit(line):
            line = edit(line)
        out.write(line)
</code></pre>
<p>If you do needs later info, either use <code>inn.readlines()</code> or if not enough memory, scan inn once to collect info, rewind (seek to beginning), scan again to edit and write.</p>
</div>
<span class="comment-copy">You have to <code>open</code> a file before you can read it.</span>
