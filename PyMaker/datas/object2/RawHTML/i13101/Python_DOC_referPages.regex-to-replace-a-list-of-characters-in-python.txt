<div class="post-text" itemprop="text">
<p>I have a list of characters that I want to find in a string and replace its multiple occurances together into just one occurance.</p>
<p>But I am facing 2 problems - when i loop over them, the re.sub function does not replace the multiple occurances and when i have a smiley like :) it replaces ':' with ':)' which I dont want.</p>
<p>Here is the code that I tried.</p>
<pre><code>end_of_line_chars = [".",";","!",":)",":-)","=)",":]",":-(",":(",":[","=(",":P",":-P",":-p",":p","=P"]
for i in end_of_line_chars:
    pattern = "[" + i + "]" + "+"
    str = re.sub(pattern,i,str)
</code></pre>
<p>If I take a single character and try it works as shown below.</p>
<pre><code>str = re.sub("[.]+",".",str)
</code></pre>
<p>But looping over a list of characters gives error.
How to solve these 2 problems? Thanks for the help.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/re.html#re.escape" rel="nofollow"><code>re.escape(str)</code></a> does the escaping for you. Separated with <code>|</code> you can match alternatives. With <code>(?:…)</code> you do grouping without capturing. So:</p>
<pre><code># Only in Python2:
from itertools import imap as map, ifilter as filter

# Escape all elements for, e.g. ':-)' → r'\:\-\)':
esc = map(re.escape, end_of_line_chars)
# Wrap elements in capturing as group, so you know what element what found,
# and in a non-capturing group with repeats and optional trailing spaces:
esc = map(r'(?:({})\s*)+'.format, esc)
# Compile expressing what finds any of these elements:
esc = re.compile('|'.join(esc))

# The function to turn a match of repeats into a single item:
def replace_with_one(match):
    # match.groups() has captures, where only the found one is truthy: ()
    # e.g. (None, None, None, None, ':-)', None, None, None, None, None, None, None, None, None, None, None)
    return next(filter(bool, match.groups()))

# This is how you use it:
esc.sub(replace_with_one, '.... :-) :-) :-) :-( .....')
# Returns: '.:-):-(.'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the things to replace are not single characters, character classes won't work. Instead, use non-capture groups (and use <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow"><code>re.escape</code></a> so the literals aren't interpreted as regex special characters):</p>
<pre><code>end_of_line_chars = [".",";","!",":)",":-)","=)",":]",":-(",":(",":[","=(",":P",":-P",":-p",":p","=P"]
for i in end_of_line_chars:
    pattern = r"(?:{})+".format(re.escape(i))
    str = re.sub(pattern,i,str)
</code></pre>
</div>
<span class="comment-copy">regex has special characters that you have to escape with a <code>\`</code> in order to actually match those characters. i would suggest using <code>string.replace()</code> method instead, why bother with <code>regex</code></span>
<span class="comment-copy"><code>str.replace</code> won't replace a variable length run of a specific character with a single replacement.</span>
<span class="comment-copy">Hi Kay, Thanks for the answer. But you could tell what do to after getting the esc variable? I am still not able to proceed with that.</span>
<span class="comment-copy">My first answer was wrong. Please see my update.</span>
<span class="comment-copy">Hi Shadow Ranger, Thanks for the answer. But your snippet does not give the output I want. Say str contains ":) :) :) :) :) :)" , I want str to change to ":)"</span>
