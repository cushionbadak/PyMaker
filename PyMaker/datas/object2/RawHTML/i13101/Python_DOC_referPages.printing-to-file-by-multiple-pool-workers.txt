<div class="post-text" itemprop="text">
<p>I'm trying to make a pool which prints data into a file.</p>
<pre><code>def get_and_print_something(url):

    with open('file.txt','a') as f:
        f.write(get_line(url))

pool = Pool(50)

for url in urls:
    pool.apply_async(get_something, args=(url,))
</code></pre>
<p>The problem is that sometimes it writes wrong data. It's because two workers manipulates with the same file in the same time. Is it possible to allow waiting until the file could be modified?</p>
<p>Example of the txt:</p>
<pre><code>This is a correct line.
This is a correct line. 
orrect line.
This is a correct line.
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can take the example from e.g. this site:</p>
<p><a href="http://effbot.org/zone/thread-synchronization.htm#locks" rel="nofollow">http://effbot.org/zone/thread-synchronization.htm#locks</a>, or</p>
<p><a href="https://pymotw.com/2/threading/" rel="nofollow">https://pymotw.com/2/threading/</a></p>
<p>which basically boils down to:</p>
<pre><code>import threading

lock = threading.Lock()

def get_and_print_something(url):

    # Not yet in critical section because we want this to happen concurrently:
    line = get_line(url) 

    lock.acquire() # Will wait if necessary until any other thread has finished its file access.

    # In critical section now. Only one thread may run this at any one time.

    try:
        with open('file.txt','a') as f:
            f.write( line )
    finally:
        lock.release() # Release lock, so that other threads can access the file again.
</code></pre>
</div>
<span class="comment-copy">Use proper synchronization mechanisms, see <a href="https://docs.python.org/3/library/threading.html#lock-objects" rel="nofollow noreferrer">docs.python.org/3/library/threading.html#lock-objects</a>.</span>
