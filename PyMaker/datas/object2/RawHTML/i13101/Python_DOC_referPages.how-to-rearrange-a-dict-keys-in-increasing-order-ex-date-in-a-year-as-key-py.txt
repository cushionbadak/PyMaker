<div class="post-text" itemprop="text">
<p>Ive been working with dictionaries recently and Ive been working on a project which includes saving events of a day to a calendar.</p>
<p>so the format for the key would be in the date format yyyy-mm-dd. I wanted to make it so that every 'key' that is in the dictionary would come out as according to the days. For example:the key 2015-11-10 with its events on that day and 2015-11-9 with its events, I would like 2015-11-9 and its events to be printed out first. I have tried sorting and tuples etc.. but that would only sort what is inside the key not the key itself. Any ideas or suggestions?</p>
<pre><code>&gt;&gt;&gt; calendar = {}
    &gt;&gt;&gt; command_add("2015-10-12", "Eye doctor", calendar)
    ''
    &gt;&gt;&gt; command_add("2015-10-12", "lunch with sid", calendar)
    ''
    &gt;&gt;&gt; command_add("2015-10-29", "Change oil in blue car", calendar)
    ''
    &gt;&gt;&gt; command_add("2015-10-12", "dinner with Jane", calendar)
    ''
    &gt;&gt;&gt; command_add("2015-10-29", "Fix tree near front walkway", calendar)
    ''
    &gt;&gt;&gt; command_add("2015-10-29", "Get salad stuff", calendar)
    ''
    &gt;&gt;&gt; command_add("2015-11-06", "Sid's birthday", calendar)
    ''
    &gt;&gt;&gt; command_show(calendar)
</code></pre>
<p>What I need is this:</p>
<pre><code>&gt;&gt;&gt; command_show(calendar)
        2015-10-12:
            0: Eye doctor
            1: lunch with sid
            2: dinner with Jane
        2015-10-29:
            0: Change oil in blue car
            1: Fix tree near front walkway
            2: Get salad stuff
        2015-11-06:
            0: Sid's birthday
    ''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Normal <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow">dictionaries</a> are unordered. If you want an ordered dictionary, you have to use <a href="https://docs.python.org/2/library/collections.html#collections.OrderedDict" rel="nofollow"><code>OrderedDict</code></a>.</p>
<p>But I guess it would be enough to iterate over the values in an ordered fashion. Usually, you do it like this:</p>
<pre><code>for key, value in sorted(mydict.items()):
    pass  # now it is sorted in ascending order of key
</code></pre>
<p>Please note that <code>mydict</code> is still unordered. <code>.items()</code> returns a list of <code>(key, value)</code> tuples. And lists can be sorted.</p>
<h2>dict with list elements</h2>
<pre><code>#!/usr/bin/env python


def command_add(day, event_name, calendar):
    if day in calendar:
        calendar[day].append(event_name)
    else:
        calendar[day] = [event_name]


def command_show(calendar):
    """
    Parameters
    ----------
    calendar : dict
        The keys are dates in the format YYYY-MM-DD and the values are lists
        of events
    """
    for day, events in sorted(calendar.items()):
        print("%s:" % day)
        for i, event in enumerate(events):
            print("\t%i: %s" % (i, event))


calendar = {}
command_add("2015-10-12", "Eye doctor", calendar)
command_add("2015-10-12", "lunch with sid", calendar)
command_add("2015-10-29", "Change oil in blue car", calendar)
command_add("2015-10-12", "dinner with Jane", calendar)
command_add("2015-10-29", "Fix tree near front walkway", calendar)
command_add("2015-10-29", "Get salad stuff", calendar)
command_add("2015-11-06", "Sid's birthday", calendar)
command_show(calendar)
</code></pre>
</div>
<span class="comment-copy">Break your sentences, currently failed to understand your query.</span>
<span class="comment-copy">Ive edited it to the best of my abilities</span>
<span class="comment-copy">i dont want the value to be sorted but the key to be printed out in the correct order of a year and when i try this it rearranges everything but not in increasing order</span>
<span class="comment-copy">Please add a minimal example of input (your dictionary) and expected output. The code I gave in my answer does sort the keys.</span>
<span class="comment-copy">Ive added the code</span>
<span class="comment-copy">@Pythonbeginner I've expanded my answer.</span>
