<div class="post-text" itemprop="text">
<p><strong>To CLARIFY: this question is not a duplicate of <a href="https://stackoverflow.com/questions/17912307/u-ufeff-in-python-string">this one</a>, I have already tried all the hints there and didn't get the answer.</strong> </p>
<p>I have a txt file with unicode data in, and am want to open the file as an string. </p>
<p>I tried </p>
<pre><code>a=open('myfile.txt', 'r', encoding='utf-8') 
print a.read()
</code></pre>
<p>but there is an error saying:</p>
<blockquote>
<p>UnicodeDecodeError: 'charmap' codec can't encode character '\ufeff' at
  position Y: character maps to undefined</p>
</blockquote>
<p>Now my question is, I don't care about my UTF-8 characters at all, is there anyway to put an exception that whenever python is encountering utf-8 character just remove it or pass it?   <strong>Also to clarify, I have tried the encoding with, utf-8, utf-8-sig, utf-16 and etc.</strong> </p>
<p>I tried this as well but no luck.</p>
<pre><code>a=open('myfile.txt', 'r', encoding='utf-8') 
try:
    print a.read()
except:
    pass
</code></pre>
<p>I also tried importing codecs and the code below:</p>
<pre><code>a=codecs.open('myfile.txt', 'r', encoding='utf-8') 
print a.read()
</code></pre>
<p>but still same error is popping out. </p>
</div>
<div class="post-text" itemprop="text">
<p>Correcting my answer for encoding in <code>print</code> statement:
Avoid printing to <code>stdout</code> Windows, because Python assumes that CMD terminal can only handle Windows-1252 (MS copy of ISO of latin-1). This is easily sidestepped by always printing to <code>stderr</code> instead:</p>
<pre><code>import sys
print('your text', file=sys.stderr)
</code></pre>
<p>On Linux there should be no issue with printing Unicode correctly.</p>
<p><strong>P.S.:</strong> for Python 2.x:</p>
<pre><code>from __future__ import print_function
import sys
print('your text', file=sys.stderr)
</code></pre>
<p><strong>P.P.S.:</strong>
<strong>Original answer:</strong>
For python 3.x:</p>
<pre><code>a=open('myfile.txt', 'r', encoding='utf-8', errors='ignore') 
</code></pre>
<p>See <a href="https://docs.python.org/3/library/codecs.html#error-handlers" rel="nofollow">https://docs.python.org/3/library/codecs.html#error-handlers</a> for a detailed list of your options</p>
</div>
<span class="comment-copy">From that post <code>utf-8  w/ BOM decoded with utf-8-sig u'ABC'          # removes BOM if present.</code></span>
<span class="comment-copy">@Leb its not a duplicated of that, I already tried the hints there and didn't work for me, I have tried both utf-8 and utf-8-sig</span>
<span class="comment-copy">You should include that in your question then. Otherwise we can't tell what you tried or didn't try.</span>
<span class="comment-copy">you are right, I will add a edition now</span>
<span class="comment-copy">it generates the same error</span>
<span class="comment-copy">This will handle <i>decode</i> errors from the <i>file</i>. The asker is having <i>encode</i> problems on <i>output</i>.</span>
<span class="comment-copy">Thanks Muposat, you were right, it worked well</span>
