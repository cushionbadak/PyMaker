<div class="post-text" itemprop="text">
<p>I am trying to pass 2 arguments, condition is if the 1st argument is not null, then it should store the 2nd argument. code is shown below</p>
<pre><code>import argparse
store= ""
parser = argparse.ArgumentParser()
parser.add_argument('-one','--two', required = True)

args = parser.parse_args()

if args.one != "":
    store = args.two
    print store
</code></pre>
<p>But i am getting the following error:</p>
<pre><code>C:\app\Tools\exam\Python25&gt;python nwe.py -one abc
Traceback (most recent call last):
  File "nwe.py", line 8, in &lt;module&gt;
    if args.one  != "":
AttributeError: 'Namespace' object has no attribute 'one'
</code></pre>
<p>can anyone tell me whats exactly happening</p>
</div>
<div class="post-text" itemprop="text">
<p>Yu can use <code>default</code> and <code>parser</code>: </p>
<pre><code>import argparse
store = ""
parser = argparse.ArgumentParser()
parser.add_argument('--one', help='this is one help', default=None)
parser.add_argument('--two', help='this is two help')

sys_args = vars(parser.parse_args())

print sys_args.get('one')
if sys_args.get('one'):
    print sys_args.get('two')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you have glossed over the distinction between long options and short options</p>
<p><a href="https://docs.python.org/3/library/argparse.html#dest" rel="nofollow">https://docs.python.org/3/library/argparse.html#dest</a></p>
<p><code>add_argument</code> creates an Action object.  Your example produces (as shown in an interactive session):</p>
<pre><code>In [32]: parser.add_argument('-one','--two', required = True)
Out[32]: _StoreAction(option_strings=['-one', '--two'], dest='two', nargs=None, 
    const=None, default=None, type=None, choices=None, help=None, metavar=None)
</code></pre>
<p>Note that the <code>dest</code> is 'two', taken from your '--two'.  '-one' is in the list of <code>option_strings</code>, but does not set the <code>dest</code>.  This statement creates one Action, not two.</p>
<p>When testing, it is a good idea to print the <code>args</code> object.  This gives you a better idea of what your parser produced.  Don't just straight to testing for attributes that might not even be there.</p>
<p><code>'prog.py -one value'</code> and <code>'prog.py --two value'</code> will both produce an <code>args</code> that looks like</p>
<pre><code>Namespace(two='value')
</code></pre>
<p>and</p>
<pre><code>args.two == 'value'
</code></pre>
<p>If you use both, it's the last value that will appear in the namespace (regardless of order)</p>
<p>If instead you define 2 arguments:</p>
<pre><code>parser.add_argument('-o','--one')
parser.add_argument('-t','--two')
</code></pre>
<p>You can then test/use both after parsing</p>
<pre><code>if args.one is None:  # the default default is None, not ""
    store = args.two
    etc
</code></pre>
</div>
<span class="comment-copy">You have defined 1 argument, not 2.</span>
<span class="comment-copy">please check new answer. it say too long , so i have added new answer. Pretty new to stackoverflow, please bear with me  @Kobi K</span>
<span class="comment-copy">Thanks! helped alot!</span>
