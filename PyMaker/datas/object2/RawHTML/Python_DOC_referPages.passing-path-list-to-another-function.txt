<div class="post-text" itemprop="text">
<p>So this code was originally one function and with help I have broken it into two separate functions but I am still struggling to get it to work.  Any guidance would be appreciated  </p>
<pre><code># -------------------------------------------
# Checks to see if listed folders exists and then deletes
# -------------------------------------------


def check_directory(path):
    # returns true if path is an existing directory
    return os.path.exists(path) and os.path.isdir(path)


dirs_to_delete = [
    'C:\Folder Here',
    'C:\Folder Here1',
    'C:\Folder Here2',
    'C:\Folder Here3'

 ]


def remove_directory(pathlist):
    for path in pathlist:
        if check_directory(path):
            shutil.rmtree(path)
            print(colored('Found ' + path + ' removing', 'green'))
</code></pre>
<p>I am calling this function with </p>
<pre><code>remove_directory()     #Checks and Removes directories listed above
</code></pre>
<p>I am getting the following error when ran </p>
<pre><code>remove_directory()  #Checks and Removes directories listed above
TypeError: remove_directory() missing 1 required positional argument: 'pathlist'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to pass <code>dirs_to_delete</code> to the function:</p>
<p><code>remove_directory(dirs_to_delete)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You have defined <code>remove_directory</code> to take a single positional arg, <code>pathlist</code>, however, that does <em>not</em> take a value of the variable <code>pathlist</code> in global scope:</p>
<pre class="lang-py prettyprint-override"><code>s = 100

def print_val(s):
    print(s)

# I have not given it a positional arg, so s isn't defined
print_val()
# raises TypeError because the scope inside the function
# doesn't know what s is

# Now i give it that value
print_val(s)
# 100
</code></pre>
<p>So for your problem, you need to pass that arg</p>
<pre class="lang-py prettyprint-override"><code># This is how you call the function in your script
remove_directory(pathlist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Debugging</strong>:</p>
<pre><code>TypeError: remove_directory() missing 1 required positional argument: 
</code></pre>
<p><strong>Because</strong>:</p>
<p>The function <code>remove_directory()</code> expects a param in this case perhaps the <code>dirs_to_delete</code> </p>
<p><strong>Hence</strong>:</p>
<pre><code>def check_directory(path):
    # returns true if path is an existing directory
    return os.path.exists(path) and os.path.isdir(path)


dirs_to_delete = [
    'C:\Folder Here',
    'C:\Folder Here1',
    'C:\Folder Here2',
    'C:\Folder Here3'

 ]

def remove_directory(pathlist):
    for path in pathlist:
        if check_directory(path):
            shutil.rmtree(path)
            print(colored('Found ' + path + ' removing', 'green'))

remove_directory(dirs_to_delete)   # pass the list to the function here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your post it appears that you are calling <code>remove_directory</code> without passing your list as desired,<br/>
Change your call to <code>remove_directory()</code> to <code>remove_directory(dirs_to_delete)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The remove_directory function expects the parameter <code>pathlist</code></p>
<p>Since you did not add a default value for <code>pathlist</code>, calling <code>remove_directory()</code> fails.</p>
<p>Try:</p>
<pre class="lang-py prettyprint-override"><code>def remove_directory(pathlist=[]):
    for path in pathlist:
        if check_directory(path):
            shutil.rmtree(path)
            print(colored('Found ' + path + ' removing', 'green'))
</code></pre>
<p>or supply a list when calling the function:</p>
<pre class="lang-py prettyprint-override"><code>remove_directory([])
</code></pre>
</div>
<span class="comment-copy">you need to pass <code>dirs_to_delete</code> to <code>remove_directory()</code></span>
<span class="comment-copy">You need to pass an argument to the function <code>remove_directory()</code></span>
<span class="comment-copy">Try: <code>remove_directory(dirs_to_delete)</code></span>
