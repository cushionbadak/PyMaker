<div class="post-text" itemprop="text">
<p>I have a list which i have joined using the following code:</p>
<pre><code>patternCore = '|'.join(list(Broker['prime_broker_id']))

patternCore
'CITI|CS|DB|JPM|ML'
</code></pre>
<p>Not sure why i did it that way but I used patternCore to filter multiple strings at the same time. Please note that Broker is a dataFrame</p>
<pre><code>Broker['prime_broker_id']
29    CITI
30      CS
31      DB
32     JPM
33      ML
Name: prime_broker_id, dtype: object
</code></pre>
<p>Now I am looking to strip one string. Say I would like to strip 'DB'. How can I do that please?</p>
<p>I tried this  </p>
<pre><code>patternCore.strip('DB')
'CITI|CS|DB|JPM|ML'
</code></pre>
<p>but nothing is stripped </p>
<p>Thank you </p>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>Broker</code> is a Pandas dataframe, you can use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.loc.html" rel="nofollow noreferrer"><code>loc</code></a> with Boolean indexing, then use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.tolist.html" rel="nofollow noreferrer"><code>pd.Series.tolist</code></a>:</p>
<pre><code>mask = Broker['prime_broker_id'] != 'DB'
patternCore = '|'.join(Broker.loc[mask, Broker['prime_broker_id']].tolist())
</code></pre>
<p>A more generic solution, which works with objects other than Pandas dataframes, is to use a list comprehension with an <code>if</code> condition:</p>
<pre><code>patternCore = '|'.join([x for x in Broker['prime_broker_id'] if x != 'DB'])
</code></pre>
<p>Without returning to your input series, using the same idea you can split and re-join:</p>
<pre><code>patternCore = 'CITI|CS|DB|JPM|ML'
patternCore = '|'.join([x for x in patternCore.split('|') if x != 'DB'])
</code></pre>
<p>You should expect the last option to be expensive as your algorithm requires reading each character in your input string.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would like to mention some points which have not been touched upon till now.</p>
<blockquote>
<p>I tried this</p>
<p><code>patternCore.strip('DB')</code></p>
<p><code>'CITI|CS|DB|JPM|ML'</code></p>
<p>but nothing is stripped</p>
</blockquote>
<p>The reason why it didn't work was because <code>strip()</code> returns a copy of the string with the <strong><code>leading</code> and <code>trailing</code> characters</strong> removed.
NOTE: </p>
<ol>
<li>Not the characters in the occuring somewhere in the mid.</li>
<li><blockquote>
<p>The chars argument is not a prefix or suffix; rather, all combinations of its values are stripped</p>
</blockquote></li>
</ol>
<p>Here you have specified the argument characters as 'DB'. So had your string been something like <code>'CITI|CS|JPM|ML|DB'</code>, your code would have worked partially(the pipe at the end would remain). </p>
<p>But anyways this is not a good practice. Because it would strip something like 
<code>'DCITI|CS|JPM|MLB'</code> to <code>'CITI|CS|JPM|ML'</code> or <code>'CITI|CS|JPM|ML|BD'</code> to <code>'CITI|CS|JPM|ML|'</code> also.</p>
<blockquote>
<p>I would like to strip 'DB'.</p>
</blockquote>
<p>For this part, @jpp has already given a fine answer.</p>
</div>
<span class="comment-copy">What type is <code>Broker</code>: is it a Pandas dataframe, a dictionary or something else?</span>
<span class="comment-copy">I have edited my question to make it clear. Thanks</span>
<span class="comment-copy">Strategy:  Remove it from the list (or prevent it from appearing in the list), then join.  (Also, even if <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>strip</code></a> did what you think it does, it still wouldn't produce what you want:  "The <code>chars</code> argument is a string specifying the <b><i>set</i> of characters</b> to be removed." [emphasis added])</span>
<span class="comment-copy">Thank you jpp for your answer it works fine but i was thinking whether we can do it without coming back to Broker['prime_broker_id']. Is there a way to strip patternCore?</span>
<span class="comment-copy">@SBad, See update.</span>
<span class="comment-copy">Thank you jpp it is very helpful</span>
