<div class="post-text" itemprop="text">
<pre><code>from random import randint

result = []
colors = {1: "Red", 2: "Green", 3: "Blue", 4: "White"}

while True:
    for key in colors:
        ball = randint(1,4)
        probability = (ball/10)
        result.append(probability)

    break

print(result)
</code></pre>
<p>This code gives me 4 values which is ok, but I'd like to have no repetitions. So if program took e.g "White", it won't include it to iteration. Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have 4 values and you just want a random permutation of them, just use <code>random.shuffle</code>:</p>
<pre><code>from random import shuffle

colors = {1: "Red", 2: "Green", 3: "Blue", 4: "White"}

balls = list(colors)
shuffle(balls)
result = [ball/10 for ball in balls]

print(result)
</code></pre>
<p>Another option (especially good with larger lists, because shuffling a list is "slow") is the use of <code>random.sample</code>:</p>
<pre><code>from random import sample

colors = {1: "Red", 2: "Green", 3: "Blue", 4: "White"}

result = [ball/10 for ball in sample(colors, 4)]

print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can check whether that particular value has been taken or not.<br/></p>
<pre><code>list_taken = []
number = randint(1,n)
while number in list_taken:
    number = randint(1,n)
list_taken.append(number)
</code></pre>
<p>So what above 4 lines of code do is, maintain a list of already taken values and repeat finding new values until it gets a new one. </p>
<p>Hope this helps!</p>
</div>
<span class="comment-copy">Look into <code>random.shuffle</code></span>
<span class="comment-copy">the <code>while</code> loop is pointless; and i'm not clear what you're trying to do, you iterate over <code>colors</code> but never use <code>key</code></span>
<span class="comment-copy">If you have a bigger list, and you need to draw <code>n</code> elements from it without replacement, you can just shuffle the list, and take <code>draw = big_list[:n]</code>.</span>
<span class="comment-copy">@L3viathan better to <code>sample</code> for that case</span>
<span class="comment-copy">@Hiddenguy well you need to specify the sample size, read the docs when you try a new function <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer">docs.python.org/3/library/random.html#random.sample</a></span>
