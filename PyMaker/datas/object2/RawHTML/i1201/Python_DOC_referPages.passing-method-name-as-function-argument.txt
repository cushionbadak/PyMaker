<div class="post-text" itemprop="text">
<p>I'm probably missing something obvious here, what I'm trying to do is extract part of this Django view into a function since I'm using same code multiple times:</p>
<pre><code>def method_name(pk, method_name, model_name):
    instance = get_object_or_404(Document, id=pk)
    wb = instance.method_name()
    with NamedTemporaryFile() as tmp:
        wb.save(tmp.name)
        tmp.seek(0)
        stream = tmp.read()
    instance.model_name.save('POPDV.xlsx', ContentFile(stream), save=False)
    instance.save()
</code></pre>
<p>I would like to pass model_name as a method name (in bold). What is the correct way to do this?
My solution would be calling <code>instance.__getattribute__ ("model_name").save(...)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr</code></a> to access attributes by name:</p>
<pre><code>wb = getattr(instance, method_name)()
# ...
getattr(instance, model_name).save(...)
</code></pre>
<p><code>getattr(obj, name)</code> implicitly goes through the various attribute lookup options:
<code>obj.__getattribute__(name)</code>, <code>obj.__dict__['name']</code>, <code>obj.__getattr__(name)</code></p>
<p>Usually, you do not call magic methods directly. They often are hooks for built-in methods or operators, e.g. <code>iter(obj)</code> calls <code>obj.__iter__()</code>, <code>len(obj)</code> calls <code>obj.__len__()</code>. </p>
</div>
