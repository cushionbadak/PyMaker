<div class="post-text" itemprop="text">
<pre><code>test_string = '----a---b--c-d'
a = test_string.split('-')
print(a)
</code></pre>
<h2>OUTPUT</h2>
<pre><code>['', '', '', '', 'a', '', '', 'b', '', 'c', 'd']
</code></pre>
<p>I'm assuming the empty list items ('') are the hyphens. My question is, why between a and b are there only two '' and not three like in the input? </p>
</div>
<div class="post-text" itemprop="text">
<p>let's replace the empty fields by some string:</p>
<pre><code>test_string = '&lt;field&gt;-&lt;field&gt;-&lt;field&gt;-&lt;field&gt;-a-&lt;field&gt;-&lt;field&gt;-b-&lt;field&gt;-c-d'
</code></pre>
<p>now you see clearly where the fields are located.</p>
<p>You can see that there are only 2 fields between <code>a</code> and <code>b</code>. Special case is at the start of the string, where the empty string at the start is also seen as a field.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>str.split</code> uses its argument as a delimiter, and so won't include it in the list it returns.</p>
<p>The same goes when using <code>re.split(r'-', test_string)</code>, unless you put the <em>pattern</em> in parentheses.  So if you really want to keep the <code>-</code> when splitting a string, I suggest you do something like this:</p>
<pre><code>test_string = '----a---b--c-d'

import re
a = re.split(r'(-)', test_string)
print(a)
</code></pre>
<p>This will print out:</p>
<pre><code>['', '-', '', '-', '', '-', '', '-', 'a', '-', '', '-', '', '-', 'b', '-', '', '-', 'c', '-', 'd']
</code></pre>
<p>If you're wondering why there are a lot of empty strings in this output, it's because <code>re.split</code> will keep whatever is between the <code>-</code> characters, <em>even if they are strings of zero length</em>.</p>
<p>A shorter example might help to understand what's going on:</p>
<pre><code>test_string = 'cat-dog-bird'

import re
a = re.split(r'(-)', test_string)
print(a)
</code></pre>
<p>This will print out:</p>
<pre><code>['cat', '-', 'dog', '-', 'bird']
</code></pre>
<p>If you don't want the <code>-</code> characters, then remove the parentheses from <code>r'(-)'</code>.  That is, change <code>r'(-)'</code> to <code>r'-'</code>, or just use:</p>
<pre><code>a = test_string.split('-')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is default split() function operation.</p>
<p>So basically if you separate between to other characters, you always get x-</p>
<blockquote>
<p>Splitting an empty string with a specified separator returns [''].</p>
</blockquote>
<p><a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html</a></p>
</div>
<span class="comment-copy">fullblown copy&amp;paste of python 2 documentation that could have been linked in comment - beside that it is a python 3 questions. why copy the docu?</span>
<span class="comment-copy">You have a point about python2, on top of the answer there is some explanation too.</span>
