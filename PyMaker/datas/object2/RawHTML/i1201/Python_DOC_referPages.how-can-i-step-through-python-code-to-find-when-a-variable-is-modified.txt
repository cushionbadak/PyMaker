<div class="post-text" itemprop="text">
<p>I am writing a python program which defines a class, SpatialPooler.  Objects of this class have an internal Boolean variable, self._learn and another internal variable self._data.  When self._learn==False, self._data should <strong>not</strong> be altered by the SpatialPooler's main method.  </p>
<p>I have another python file which creates an object instantiating this class and then runs through a test scenario.  With learning turned on, the output is as expected.  However, when learning is turned off, something goes wrong and self._data is modified, but I cannot find where in the code this is happening.</p>
<p>Is there a way to step through the code to find where this variable is being modified?  pdb seems like it may be the kind of tool that would allow me to do this, but my code is not actually throwing any warnings or errors, and I can't find any instructions on how I could accomplish finding the function that is inappropriately modifying the self._data variable.</p>
<p>Any suggestions or tips would be much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's a little difficult to tell you where exactly to put this, but you can add a pdb statement somewhere in the code.</p>
<p>Specifically, add <code>import pdb; pdb.set_trace()</code> somewhere in the code (maybe the main function you mentioned), and when the program gets to that line, it will go into the debugger. You can then step through the code as it executes (by entering <code>n</code>). You can see what the variable values are by just typing the variable name (<code>self._data</code>, if you're in the class's method).</p>
<p><a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">Reference to how pdb is used.</a></p>
</div>
<span class="comment-copy">provide the code how you are approaching solution.</span>
<span class="comment-copy">@prashantrana The code is quite large and there are quite a few methods in the SpatialCooler class, many of which call yet other methods to a decent depth.  So I think posting the code would distract from the main question which is about how to perform this type of debugging rather than about my particular example.</span>
<span class="comment-copy">Is there a way to check if the variable is modified without printing it out?  self._data is a large matrix and it appears to only be changing in a few locations.  It will be an enormous pain to try to locate a changed entry or two by eye.</span>
<span class="comment-copy">Do you know how the matrix will be changing? You can add some if statements in the different functions, something like <code>if self._data != self._original_data: import pdb; pdb.set_trace()</code>. Then it's only triggered when / after it changes, so you can triangulate where it happens. Or, you can add <code>import pdb; pdb.set_trace()</code> to all major functions. At each break point the program will stop. You can then check what self._data is. If it's normal, type <code>c</code>, which executes the program until the next break point, rinse and repeat. That way, you don't have to painstakingly step through every line.</span>
