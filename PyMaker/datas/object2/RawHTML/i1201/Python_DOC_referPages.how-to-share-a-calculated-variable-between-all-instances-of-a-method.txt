<div class="post-text" itemprop="text">
<p>I want to calculate a value in the class that stays the same for all instances of that class and is calculated only once</p>
<pre><code>class A:
    a = calculate_a()
    def calculate_a():
        return 5
</code></pre>
<p>first, What should I set as reference for <code>calculate_a()</code> in <code>a = calculate_a()</code> ?
<code>self.calculate_a()</code> and <code>A.calculate_a()</code> both are not correct (unresolved reference)
what I need is, when the second instance is created, the <code>calculate_a()</code> is not called again.</p>
<pre><code>instance1 = A()  -&gt; calls calculate_a() to set value for a;
instance2 = A()  -&gt; uses the value of a calculated above without calling calculate_a
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Class members are only initialized once - they are initialized <em>before</em> (and without) instances being created.</p>
<hr/>
<p>You can test this yourself:</p>
<pre><code>def calculate_a():
    print("Calculated")
    return 5

class A:   
    a = calculate_a()
</code></pre>
<p>Executing this prints <code>'Calculated'</code> once, even without any creation of instances. </p>
<pre><code>def calculate_a():
    print("Calculated")
    return 5

class A:   
    a = calculate_a()

input("Order?")
k = A()
i = A()
c = A()
</code></pre>
<p>Executing this print's <code>'Calculated'</code> only once - and it does so right before asking for <code>'Order?'</code> - after inputting the program ends wihtout any more outputs. </p>
<hr/>
<p>More infos:</p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">PyTut: classes</a></li>
<li><a href="https://stackoverflow.com/questions/867219/python-class-members-initialization">Python Class Members Initialization</a></li>
<li><a href="https://stackoverflow.com/questions/2714573/instance-variables-vs-class-variables-in-python">Instance variables vs. class variables in Python</a></li>
</ul>
<p>You can put your "init"-method into a holder-class to avoid polluting global():</p>
<pre><code>class A_base:
    @staticmethod
    def calculate_a():
        print("Calculated")
        return 5

class A:   
    a = A_base.calculate_a()
</code></pre>
</div>
