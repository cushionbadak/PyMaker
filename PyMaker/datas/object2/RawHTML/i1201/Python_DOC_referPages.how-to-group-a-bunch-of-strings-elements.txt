<div class="post-text" itemprop="text">
<p>I have a string like:</p>
<pre><code>"Hotel_Rooms: R15,R11,R5,R4,R8,R2,R15,R3,R6,R1,R6,R5,R3,R2,R4,R1,R2,R5,R1,R4,R3,R6,R8,R4,R3,R1,R5,R6,R2"
</code></pre>
<p>and I am trying  to make a list of list of those which are the same. This is my code:</p>
<pre><code>List = []
ls = []
for el in input:
  if el == 'Hotel_Rooms: ':
      pass
  else:
    if el !=',': 
      ls.extend(el)
    else:
      List.append(ls)
print List
</code></pre>
<p>But the result is so weird. Could you please lemme know how can I improve my code?</p>
<p>Thanks </p>
</div>
<div class="post-text" itemprop="text">
<p>Try to use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">collections.Counter</a>, as follows:</p>
<pre><code>from collections import Counter
text= "Hotel_Rooms: R15,R11,R5,R4,R8,R2,R15,R3,R6,R1,R6,R5,R3,R2,R4,R1,R2,R5,R1,R4,R3,R6,R8,R4,R3,R1,R5,R6,R2"
C = Counter(text.split('Hotel_Rooms: ')[1].split(','))
print [[k,]*v for k,v in C.items()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also do <code>groupby</code>:</p>
<pre><code>from itertools import groupby

string = "Hotel_Rooms: R15,R11,R5,R4,R8,R2,R15,R3,R6,R1,R6,R5,R3,R2,R4,R1,R2,R5,R1,R4,R3,R6,R8,R4,R3,R1,R5,R6,R2"

# convert string to sorted list
vals = sorted([x.strip() for x in string.split(':')[1].split(',')])

print([list(g) for k,g in groupby(vals)])

[['R1', 'R1', 'R1', 'R1'], ['R11'], ['R15', 'R15'], ['R2', 'R2', 'R2', 'R2'], ['R3', 'R3', 'R3', 'R3'], ['R4', 'R4', 'R4', 'R4'], ['R5', 'R5', 'R5', 'R5'], ['R6', 'R6', 'R6', 'R6'], ['R8', 'R8']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code currently just iterates through the input string and separates commas from other characters into different lists. I don't think thats what you want. It seems like you want to group similar rooms. You can use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict()</code></a> for this:</p>
<pre><code>from collections import defaultdict

s = "Hotel_Rooms: R15,R11,R5,R4,R8,R2,R15,R3,R6,R1,R6,R5,R3,R2,R4,R1,R2,R5,R1,R4,R3,R6,R8,R4,R3,R1,R5,R6,R2"

# Split rooms from 'Hotel_Rooms'
_, rooms = s.split(':')

# Group rooms into dictionary
room_dict = defaultdict(list)
for room in rooms.strip().split(','):
    room_dict[room].append(room)

print(list(room_dict.values()))
# [['R15', 'R15'], ['R11'], ['R5', 'R5', 'R5', 'R5'], ['R4', 'R4', 'R4', 'R4'], ['R8', 'R8'], ['R2', 'R2', 'R2', 'R2'], ['R3', 'R3', 'R3', 'R3'], ['R6', 'R6', 'R6', 'R6'], ['R1', 'R1', 'R1', 'R1']]
</code></pre>
</div>
