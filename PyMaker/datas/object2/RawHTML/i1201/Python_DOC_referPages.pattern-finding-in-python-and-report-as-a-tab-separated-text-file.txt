<div class="post-text" itemprop="text">
<p>I have a big text file like this small example:</p>
<p>small example:</p>
<pre><code>&gt;chr9:128683-128744
GGATTTCTTCTTAGTTTGGATCCATTGCTGGTGAGCTAGTGGGATTTTTTGGGGGGTGTTA
&gt;chr16:134222-134283
AGCTGGAAGCAGCGTGGGAATCACAGAATGGCCGAGAACTTAAAGGCTTTGCTTGGCCTGG
&gt;chr16:134226-134287
GGAAGCAGCGTGGGAATCACAGAATGGACGGCCGATTAAAGGCTTTGCTTGGCCTGGATTT
&gt;chr1:134723-134784
AAGTGATTCACCCTGCCTTTCCGACCTTCCCCAGAACAGAACACGTTGATCGTGGGCGATA
&gt;chr16:135770-135831
GCCTGAGCAAAGGGCCTGCCCAGACAAGATTTTTTAATTGTTTAAAAACCGAATAAATGTT
&gt;chr16:135787-135848
GCCCAGACAAGATTTTTTAATTGTTTAAAAACCGAATAAATGTTTTATTTCTAGAAAACTG
&gt;chr16:135788-135849
CCCAGACAAGATTTTTTAATTGTTTAAAAACCGAATAAATGTTTTATTTCTAGAAAACTGT
&gt;chr16:136245-136306
CACTTCACAAATAGAAGGCTGTCAGAGAGACAGGGACAGGCCACACAAGTGTTTCTGCACA
&gt;chr7:146692-146753
GTGTGACCAAAACTTAGGATGTTAGCCGAACTCTCCGTTACTATCATTTTGGATTTCCAGT
&gt;chr8:147932-147993
GGTAAAGGTAAATACATAAACAAACATAAAACCGATCCTATTGTAATTTTGGTTTGTAACT
</code></pre>
<p>this file is divided into different groups and every group has 2 parts (2 lines). the 1st line which starts with <code>&gt;</code> is ID and the 2nd line is a sequence of characters. length of every sequence of characters is 61.
I have a short sequence (which is <code>CCGA</code>) I would like to scan every 2nd part for this short sequence. and output would be a text file with 2 columns.</p>
<p>1st column: is the position where the beginning of short sequence is located (every 2nd part has 61 characters so in the output I will report the position of characters which is a number). 
2nd column: is the count of number of times that the beginning of short sequence is located at that specific position.</p>
<p>for instance for the following sequence of characters the beginning of short sequence is at position <code>49</code>.</p>
<pre><code>GCCTGAGCAAAGGGCCTGCCCAGACAAGATTTTTTAATTGTTTAAAAACCGAATAAATGTT
</code></pre>
<p>for the small example, the expected output would look like this:</p>
<p>expected output:</p>
<pre><code>1   0
2   0
3   0
4   0
5   0
6   0
7   0
8   0
9   0
10  0
11  0
12  0
13  0
14  0
15  0
16  0
17  0
18  0
19  0
20  0
21  1
22  0
23  0
24  0
25  0
26  1
27  0
28  0
29  0
30  0
31  1
32  4
33  0
34  0
35  0
36  0
37  0
38  0
39  0
40  0
41  0
42  0
43  0
44  0
45  0
46  0
47  0
48  0
49  1
50  0
51  0
52  0
53  0
54  0
55  0
56  0
57  0
58  0
59  0
60  0
61  0
</code></pre>
<p>I am trying to do that in python using the following code. but the output is not like what I want.</p>
<pre><code>infile = open('infile.txt', 'r')
ss = 'CCGA'
count = 0
for line in infile:
    if not line.startswith('&gt;'):
        for match in pattern.finder(ss):
            count +=1
            POSITION = pattern.finder(ss)
            COUNT = count
</code></pre>
<p>do you know how to fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>The below uses <a href="https://docs.python.org/3/library/re.html#re.finditer" rel="nofollow noreferrer"><code>finditer</code></a> to find all non-overlapping occurences of the <code>CCGA</code> pattern, and creates a mapping from the index of the beginning of the sequence to the number of times a sequence has begun at that index.  </p>
<pre><code>from re import compile
from collections import defaultdict

pat = compile(r'CCGA')
mapping = defaultdict(int)

with open('infile.txt', 'r') as infile:
    for line in infile:
        if not line.startswith('&gt;'):
            for match in pat.finditer(line):
                mapping[match.start() + 1] += 1

for i in range(1, 62):
    print("{:&gt;2} {:&gt;2}".format(i, mapping[i]))
</code></pre>
<p>prints</p>
<pre><code> 1  0
 2  0
 3  0
 4  0
 5  0
 6  0
 7  0
 8  0
 9  0
10  0
11  0
12  0
13  0
14  0
15  0
16  0
17  0
18  0
19  0
20  0
21  1
22  0
23  0
24  0
25  0
26  1
27  0
28  0
29  0
30  0
31  1
32  4
33  0
34  0
35  0
36  0
37  0
38  0
39  0
40  0
41  0
42  0
43  0
44  0
45  0
46  0
47  0
48  0
49  1
50  0
51  0
52  0
53  0
54  0
55  0
56  0
57  0
58  0
59  0
60  0
61  0
</code></pre>
<p>One way to export it to a file would be to use the <code>print</code> function</p>
<pre><code>with open('outfile.txt', 'w+') as outfile:
    for i in range(1, 62):
        print(i, mapping[i], sep='\t', file=outfile)
</code></pre>
</div>
<span class="comment-copy">Hi, in your code: <code>line.startswith('&lt;')</code>; did you mean <code>line.startswith('&gt;')</code> here?</span>
<span class="comment-copy">Can the <code>CCGA</code> sequence appear more than once in a single line?</span>
<span class="comment-copy">@Patrick Haugh yes that is possible</span>
<span class="comment-copy">Can we see your <code>pattern.finder</code>? Why are you calling it twice, and why does it seem to yield an iterable the first time and a position integer the second time, and how is it fed the actual line it's supposed to test?</span>
<span class="comment-copy">i think it works. how can I export it into a tab separated file?</span>
