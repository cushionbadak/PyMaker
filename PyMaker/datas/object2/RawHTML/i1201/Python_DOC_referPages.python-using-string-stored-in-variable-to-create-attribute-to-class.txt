<div class="post-text" itemprop="text">
<p>I am trying to follow syntax of the pyparticleio.ParticleCloud package.  Using the following command, my code works correctly "particle_cloud.boron1.led('on')" (hardcoded values)</p>
<p>I want to pass portions of the command, "boron1" and "on" as variable.  I'm trying to figure out how to use those variables to act in the same way as if i'd hardcoded the values.</p>
<p>My python level is very beginner. </p>
<pre><code>command_list['boron1','on']
device = command_list[0]
function_1 = command_list[1]
access_token = "ak3bidl3xxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
particle_cloud = ParticleCloud(username_or_access_token=access_token)
#particle_cloud.boron1.led('on') #hardcoded example that works

particle_cloud.device.led(function_1)  #what i would like to work
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you set <code>device</code> to the actual object, you can call methods on the object. Example:</p>
<pre><code>device = particle_cloud.boron1 # Or whatever you like
arg = 'on' # Also make this whatever you like
device.led(arg) # Same as: particle_cloud.boron1.led('on')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has a built in function called <a href="https://www.programiz.com/python-programming/methods/built-in/exec" rel="nofollow noreferrer"><code>exec</code></a></p>
<p>It allows you to take a string, and have Python execute it as code.<br/>
A basic example based on the code you provided would look like this:</p>
<pre><code>command_list['boron1','on']
device = command_list[0]
function_1 = command_list[1]

exec('particle_cloud.' + device + '.led("' + function_1 + '")')
</code></pre>
<p>This is a bit ugly, but there are different ways to compose strings in Python such as using <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>join</code></a> or <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>format</code></a> so depending on your real code you may be able to build something nice.</p>
<p>Just be careful not to pass raw user input to <code>exec</code>!<br/>
I can cause all kinds of trouble from errors to security issues.</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe you could use <code>getattr()</code> (in Python3: <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#getattr</a> ) :</p>
<pre><code>pcdevice = getattr(particle_cloud, device)
pcdevice.led(function_1)
</code></pre>
<p>(BTW, I woudln't name the string 'on' with the label 'function_1' as the variable name implies that this option is a function when it is a string. Also, the above may now work depending on the properties of your library object ParticleCloud.) </p>
</div>
<span class="comment-copy">does not work that way - one are members of a class (that you might get through the dictionary of the class holding all its members - wich will look ugly as hell) - the others are unrelated variables that are strings</span>
<span class="comment-copy">Your suggestion works as long as I hardcode "boron1" similar to your first line.  Instead of hardcode i'd like to pass it a string to use.  Sorry about the formatting, I can't figure out how to make it show up correctly.                                              <code>#this works        devicename = 'boron1'       function_1 = 'on' '   device = particle_cloud.boron1       device.led(function_1)        #this still throws an error       devicename = 'boron1'       function_1 = 'on'       device = particle_cloud.devicename   #substitued variable       device.led(function_1)</code></span>
<span class="comment-copy">Thanks,  this solves the deal killer portion of the problem which is placing the device name in the code line.  I had to hard code function_1 as "on" or "off" to make it work.  It says "name 'off' not defined".  But that's not a deal killer since i can do a simple if statement to execute one of only 2 options.</span>
<span class="comment-copy">@JonathanPaschel sorry, I forgot the quotes around the function parameter ("on" or "off"). I added them now. If you make sure to use quot marks next to the parentheses it will build the correct string and you will not need the <code>if</code>.</span>
