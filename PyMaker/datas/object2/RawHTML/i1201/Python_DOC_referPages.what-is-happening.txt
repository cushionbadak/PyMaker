<div class="post-text" itemprop="text">
<p>I was bored while watching youtube and I started to program just basic randomisation of characters. And then I thought of three letter words that have 36 different characters to choose from. </p>
<pre><code>import random
file = open("C:\\Users\\nikol\\Downloads\\ThreeLetters.txt","w+",encoding = 
"utf-8")
word = []
char = 0
wordloop = 0
words = []
currentword = ""
while wordloop &lt; 46656:
    for n in range(3):
        char = random.randint(1,36)
        if char == 1:
            word.append("a")
        if char == 2:
            word.append("b")
        if char == 3:
            word.append("c")
        if char == 4:
            word.append("d")
        if char == 5:
            word.append("e")
        if char == 6:
            word.append("f")
        if char == 7:
            word.append("g")
        if char == 8:
            word.append("h")
        if char == 9:
            word.append("i")
        if char == 10:
            word.append("j")
        if char == 11:
            word.append("k")
        if char == 12:
            word.append("l")
        if char == 13:
            word.append("m")
        if char == 14:
            word.append("n")
        if char == 15:
            word.append("o")
        if char == 16:
            word.append("p")
        if char == 17:
            word.append("q")
        if char == 18:
            word.append("r")
        if char == 19:
            word.append("s")
        if char == 20:
            word.append("t")
        if char == 21:
            word.append("u")
        if char == 22:
            word.append("v")
        if char == 23:
            word.append("w")
        if char == 24:
            word.append("x")
        if char == 25:
            word.append("y")
        if char == 26:
            word.append("z")
        if char == 27:
            word.append("0")
        if char == 28:
            word.append("1")
        if char == 29:
            word.append("2")
        if char == 30:
            word.append("3")
        if char == 31:
            word.append("4")
        if char == 32:
            word.append("5")
        if char == 33:
            word.append("6")
        if char == 34:
            word.append("7")
        if char == 35:
            word.append("8")
        if char == 36:
            word.append("9")

    for n in range(len(word)):
        currentword = currentword + word[n]
    word = []
    words.append(currentword)
    currentword = ""
    wordloop += 1

words = sorted(words)
for n in range(len(words)):
    file.write(str(words[n]) + ",")
file.close()
</code></pre>
<p>This code lets me make 46656 or 36^3 three letter words, because that is how many characters I am using. The weird thing about this is that when it writes to a file I get things like: 〰ⰰ〰ⰱ〰ⰱ〰ⰲ〰ⰳ〰ⰳ〰ⰶ〰ⰶ〰ⰷ〰ⰸ〰ⱡ〰Ɫ〰Ᵽ〰Ᵽ〰Ɽ〰ⱦ〰ⱨ. Why? What is this? Is it Unicode?
Python 3.5 BTW</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Is it Unicode?</p>
</blockquote>
<p>Yes. But you may be surprised to learn that your <code>"a"</code>, <code>"b"</code>, etc. are <em>also</em> Unicode.</p>
<p>You get these weird characters because you open or view your output file as a two-byte Unicode encoded text.</p>
<p>Some of those codes you see fall above the range <code>U+2C00</code>, where that first code is the comma and the second one is one of your letters. For example, ⰶ is this: <a href="http://www.fileformat.info/info/unicode/char/2c36/index.htm" rel="nofollow noreferrer">http://www.fileformat.info/info/unicode/char/2c36/index.htm</a>. Other weird characters are also formed by combining two random characters in one double-wide Unicode value.</p>
<p>Inspecting the resulting file with a hex editor shows you indeed got the expected 3-letter combinations, separated by a comma:</p>
<pre><code>0hp,1gb,1u4,23x,2xj,30m,3pe,4kd,59u,75y,7l5,7od
.. etc.
</code></pre>
<p>For some reason your text file viewer thinks this should be 2-byte Unicode text. If you fix that, you'll see your code worked as you intended.</p>
</div>
<div class="post-text" itemprop="text">
<p>You interprete a unicode file wrongly. You also can simplify your code a bit:</p>
<pre><code>import random
from string import ascii_lowercase,digits
words = [] 
chars = ascii_lowercase+digits
for _ in range(10): # 46656 - reduced amount to 10 
    # words.append( random.choices(chars,k=3) ) # python 3.6 has choices
    words.append( [ random.choice(chars),random.choice(chars),
                    random.choice(chars)] )    # python 3.5 got no choices

words.sort()
with open("./ThreeLetters.txt","w+",encoding ="utf-8") as file:
    for w in words:
        file.write(str(w) + ",")
</code></pre>
<p>You can print the file without mishap in your console like so:</p>
<pre><code># and output it again            
with open("./ThreeLetters.txt", encoding ="utf-8") as f:
    print(f.read())
</code></pre>
<p>Output:</p>
<pre><code>['1', '2', 'n'],['9', '6', 'f'],['j', 'o', 'k'],['n', '1', '4'],['n', 'o', '9'],['s', 'c', 'l'],['v', 'l', 'b'],['v', 'o', 'a'],['w', '7', 'u'],['z', '3', '6'],
</code></pre>
<p>I fixed the file writing to be more locally - not far to the top and also used <code>with open(..) as f:</code> to make it more robust.</p>
<p>See: </p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">with open(..) as ..:</a></li>
</ul>
</div>
<span class="comment-copy">Side note: "What is happening?" the title could use a better description. See <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a></span>
<span class="comment-copy">How are you opening the file? What editor? What encoding?</span>
<span class="comment-copy">Side note: you are indeed writing 36³ "words" but these are not all <i>possible</i> combinations of <code>a..z0..9</code>, because you are picking them at random. If you want all combinations, you need to replace <code>random</code> with something from <code>itertools</code>.</span>
<span class="comment-copy">why the big <code>if</code> and using a random integer to get a character? use <code>word = random.choices("abcdefghijklmnopqrstuvwxyz0123456789", k=3)</code> to get a list of 3 characters from the given string ...</span>
<span class="comment-copy">TrebuchetMS - Yes it could, however, I am learning this in school and as school has finished, I can't ask my teachers for help. That is why I came to this site which has helped me a lot in the past with coding. usr2564301 - I don't want all combinations, i want to see how many combinations of "red" or "the" will show up in a random generator. Patrick Artner -  The big "if" is because that is the only thing I knew and I could code much easier. I could've used loops and lists to make it shorter, I didn't use "random.choices" because I didn't know it existed till now. Thanks for the new info.</span>
