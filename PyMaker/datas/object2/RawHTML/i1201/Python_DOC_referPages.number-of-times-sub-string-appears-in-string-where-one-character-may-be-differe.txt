<div class="post-text" itemprop="text">
<p>I found this problem on codingbat.com under the Python section. The problem title is: String-2 &gt; count_code.</p>
<p>Return the number of times that the string "code" appears anywhere in a given string, except we'll accept any letter for the 'd', so "cope", "cooe", "coze", etc will count. <strong>But "co5e", "co)e", etc will not count because only a letter is allowed in the 'd' index.</strong></p>
<p>I added the part in bold (it's not in the original question). I was wondering if there was a short way of writing the code without listing all letters of the alphabet. My code currently looks like:</p>
<pre><code>def count_code(string):
   count = 0
   for i in range(len(string) - 3):
      if string[i:i+2] == "co" and (string[i+2] == "a" or string[i+2] == "b" or str[i+2] == "c" or str[i+2] == "d" or str[i+2] == "e" or #you get the idea) and str[i+3] == "e":
         count += 1
   return count    
</code></pre>
<p>I hope this is explanatory. The link to the original problem is: <a href="https://codingbat.com/prob/p186048" rel="nofollow noreferrer">https://codingbat.com/prob/p186048</a>
I would appreciate all answers.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe this code will help:</p>
<pre><code>def count_code(str):
   i, ans = 0, 0
   while i &lt; len(str) - 3:
      if str[i:i+2] == 'co' and str[i+3] == 'e':
         # the catch
         if str[i+2] &gt;= 'a' and str[i+2] &lt;= 'z':
            i += 4
            ans += 1
         else:
            i += 1
      else:
          i += 1
   return ans
</code></pre>
<p>I would advise you not to ask any questions from competitive programming sites on Stack Overflow, this platform is totally for different purposes.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>EDIT:</strong> The original problem link does not allow imports, so the <code>re</code> module cannot be used. Please refer to Jarvis's solution for it to work with that particular site. However, using regex is the preferred method for such problems so I will be leaving this answer here.</p>
<hr/>
<p>You should use Regular Expressions for problems where such pattern matching is needed. This is the <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">RegEx HOWTO</a> from the official docs, but you can find numerous tutorials online.</p>
<p>The expression needed to solve this is quite basic, and since the problems are meant to help you learn, please look at the answer below only after you have attempted it yourself.</p>
<blockquote class="spoiler">
<p> 'co[a-zA-z]e' <br/><br/> You'll be using the above to create a Pattern, then call the <code>findall</code> method on your input string. This will return a list of matches, so the number of matches would be <code>len(resultlist)</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>This code passed all the tests. </p>
<pre><code>def count_code(str):
  n = len(str)
  if n &lt;= 3:
    return 0
  count = 0
  for i in range(n - 3):
    temp = str[i: i + 4]
    if temp[0:2] == 'co':
      if (ord(temp[2]) &gt;= ord('a') and ord(temp[2]) &lt;= ord('z')) or (ord(temp[2]) &gt;= ord('A') and ord(temp[2]) &lt;= ord('Z')):
        if temp[3] == 'e':
          count += 1

  return count
</code></pre>
<p>I have used the ascii values to check the third character.</p>
</div>
<span class="comment-copy">Thank you very much for your response Jarvis. This worked well. Please note that CodingBat.com is not a competitive site. It is meant to help beginner programmers like me to practise programming problems in order to improve. Thanks once again.</span>
<span class="comment-copy">Please mark the answer as accepted. @Goriola</span>
<span class="comment-copy">The problem statement doesn't allow any import statements. You have to do it by simply iterating over the string.</span>
<span class="comment-copy">Just noticed when I opened the original problem link. I'll still leave the answer here  because this would be the preferred method without that limitation.</span>
<span class="comment-copy">Thank you TheGamer007. I didn't know anything about "regex" before now. I will take a look at the link you posted. Thanks, I appreciate.</span>
<span class="comment-copy">The problem statement doesn't allow any <code>import</code> statements. You have to do it by simply iterating over the string.</span>
<span class="comment-copy">Thank you gopiariv. This also worked well, although I am still trying to wrap my head around it. For example, I'm seeing the "ord" function for the first time. Thank you still, I've learnt something new (ord).</span>
