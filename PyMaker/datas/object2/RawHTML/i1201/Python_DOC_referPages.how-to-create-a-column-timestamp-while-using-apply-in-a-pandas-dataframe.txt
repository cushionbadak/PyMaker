<div class="post-text" itemprop="text">
<p>I am applying some functions to pandas dataframe columns as:</p>
<pre><code>def foo(x):
     return 1 + x
</code></pre>
<p>Then, I apply the function to a column:</p>
<pre><code>df['foo'] = df['a_col'].apply(foo)
</code></pre>
<p>How can I return a column with the amount of miliseconds that the function <code>foo</code> takes to finish?. For instance:</p>
<pre><code>A time_milisecs
2 0.1
4 0.2
4 0.3
3 0.3
4 0.2
</code></pre>
<p>Where <code>A</code> is the column that contains the result of the sum.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>time</code> module. Given you also wish to create a new series via a calculation, you can output a sequence of tuples, then convert to a dataframe and assign back to two series.</p>
<p>Here's a demonstration:</p>
<pre><code>import time

df = pd.DataFrame({'A': [2, 4, 4, 3, 4]})

def foo(x):
    tstart = time.time()
    time.sleep(0.25)
    tend = time.time()
    return 1 + x, (tend-tstart) * 10**3

df[['B', 'B_time']] = pd.DataFrame(df['A'].apply(foo).values.tolist())

print(df)

   A  B      B_time
0  2  3  250.014544
1  4  5  250.014305
2  4  5  250.014305
3  3  4  250.014305
4  4  5  250.014067
</code></pre>
<p>With Python 3.7, you can use <a href="https://docs.python.org/3/library/time.html#time.process_time_ns" rel="nofollow noreferrer"><code>time.process_time_ns</code></a>, which measures time in nanoseconds.</p>
</div>
<span class="comment-copy">Its just an example... obviously its another function I just want to create a column with the time in miliseconds that the funciton takes to finish</span>
<span class="comment-copy">This might be useful: <a href="https://stackoverflow.com/questions/24812253/how-can-i-capture-return-value-with-python-timeit-module" title="how can i capture return value with python timeit module">stackoverflow.com/questions/24812253/…</a></span>
<span class="comment-copy">I would've gone with <code>timeit</code>, even though <code>time</code> seems like the easy way out. See <a href="https://stackoverflow.com/questions/24812253/how-can-i-capture-return-value-with-python-timeit-module" title="how can i capture return value with python timeit module">stackoverflow.com/questions/24812253/…</a> on how to monkeypatch <code>timeit</code> to return timings and function results together.</span>
<span class="comment-copy">@coldspeed, Do you believe the results will be any different? <code>timeit</code> is good, I find, for repeating a process multiple times to get the average time. But for a one-off calculation I don't see the difference. With Python 3.7, you also have <code>time.process_time_ns</code>.</span>
<span class="comment-copy">The results will be the same, but the timings will be more accurate at least. If performance matters (i.e., if OP doesn't want to wait for the function to run 30 times), or if this is one of those functions that does stuff like db calls, io/async/rpc calls, then certainly not appropriate. Of course, with a question like this, one can never tell :-)</span>
<span class="comment-copy">@coldspeed could you provide an example?</span>
