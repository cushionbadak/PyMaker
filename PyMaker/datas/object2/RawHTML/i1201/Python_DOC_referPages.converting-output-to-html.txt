<div class="post-text" itemprop="text">
<p>I am making this program:</p>
<pre><code>name = input("Enter your name: ")
age = input("Enter your age: ")
position = input("Your position in class: ")
print("I am",name,". I am",age,"years old. This time I got",position,"position 
in my class.")
</code></pre>
<p>This outputs</p>
<pre><code>I am Python Man . I am 13 years old. This time I got 1st position in my 
class.
</code></pre>
<p>How can I enter this output into html, guys?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you were to put...</p>
<pre><code>I am Python Man . I am 13 years old. This time I got 1st position in my 
class.
</code></pre>
<p>Into a .html file then load it, it'd work fine. If you want to format it properly with tags directly from the python file, you could change your print() line to, for example...</p>
<pre><code>print("&lt;p&gt;I am",name,". I am",age,"years old. This time I got",position,"position 
in my class.&lt;/p&gt;")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is several ways, and depends on what you really want to achieve, so I'll explain couple of options you have:</p>
<ol>
<li><p>you can add any HTML tags you want in the string "as it's already
HTML that doesn't have any tags to format it" but you will have to
escape special characters that may break your HTML using built-in
Module " <a href="https://docs.python.org/3/library/html.html" rel="nofollow noreferrer">html</a>" </p></li>
<li><p>you can also use third-party modules such as <a href="https://pypi.org/project/html/" rel="nofollow noreferrer">this</a> which can generate HTML for you, and it's usage described briefly in the link.</p></li>
</ol>
<p>The choice is simple if you have HTML knowledge and want to customize your HTML go for the first option, if not or you want easy solution go for the module.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm going to cut you some slack here. The text you have is already perfectly valid HTML. I think you actually want to display the text in a browser (jumping a few steps ahead). You will need a web framework for that; I'm using Flask here, but there are many, with Django being the other major framework (that takes a little more effort to set up).</p>
<pre><code>from flask import Flask, request
app = Flask(__name__)

@app.route('/')
def homepage():
    return("""&lt;table&gt;
   &lt;thead&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Age&lt;/th&gt;
      &lt;th&gt;Position&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
   &lt;/thead&gt;
   &lt;tbody&gt;
      &lt;form method ="post" action="{{ url_for('submit_answer') }}"&gt;
         &lt;input type="hidden" value="{{ csrf_token() }}" name="csrf_token"&gt;
         &lt;tr&gt;
            &lt;td&gt;&lt;input type="text" name="my_name" value=""&gt;&lt;/td&gt;
            &lt;td&gt;&lt;input type="text" name="my_age" value=""&gt;&lt;/td&gt;
            &lt;td&gt;&lt;input type="text" name="my_position" value=""&gt;&lt;/td&gt;
            &lt;td&gt;&lt;input type="submit" value="Submit"&gt;&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/form&gt;
   &lt;/tbody&gt;
&lt;/table&gt;""")

@app.route('/submit_answer', methods=["GET", "POST"])
def submit_answer():
    req = request.form.to_dict()
    return "Hello {}, aged {}, your position is {}".format(req['my_name'],
                                                           req['my_age'],
                                                           req['my_position'])


if __name__ == '__main__':
    app.run()
</code></pre>
<p>Run this and then type <code>127.0.0.1:5000</code> in the browser. There's a <em>lot</em> going on here, but hopefully enough to inspire you and keep you interested. You'll need to Google a lot. You can find more in the <a href="http://flask.pocoo.org/docs/1.0/quickstart/" rel="nofollow noreferrer">quickstart guide</a> for Flask.</p>
</div>
<span class="comment-copy">It already is. It just doesn't have any tags to format it. You're going to need to be more specific</span>
<span class="comment-copy">Pre-empting the actual question, you'll want to look into web frameworks to display your message. Flask is super-simple to set up to display your message in a browser, but there's also Django and many others.</span>
