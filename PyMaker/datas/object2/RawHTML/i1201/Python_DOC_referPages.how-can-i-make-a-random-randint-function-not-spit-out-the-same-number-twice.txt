<div class="post-text" itemprop="text">
<p>I want to generate a random number, and that random number should be unique, meaning it should not be repeated or generated again. I have tried making a list where I append in every iteration and check if it is already present in the list or not. If it is present in the list, the number is not appended. But I don't think it is an effective method. So, please help me with it.</p>
<pre><code>    import random
    #an empty list to append randomly generated numbers
    empty = []
    while True:
        #checking from range 500 to 510
        number = random.randrange(500, 510)
        if number not in empty:
            empty.append(number)
        else:
            pass
        #breaking the loop if the length of the numbers is 9
        if len(empty) == 9:
            break

    print("Final list --&gt; " + str(empty))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can get such a list of a given number of non-repeating elements taken from a given pool via <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer"><strong><code>random.sample</code></strong></a>:</p>
<pre><code>&gt;&gt;&gt; random.sample(range(500, 510), 9)
[500, 501, 503, 502, 505, 507, 508, 506, 504]
</code></pre>
</div>
<span class="comment-copy">You should generate a list of all random numbers you need and then shuffle them. Otherwise you will need to keep generating random numbers until you get one that isn't in the list (which is very time consuming for large lists of numbers)</span>
<span class="comment-copy">@GarbageCollector in the scope of this problem, the values would be unique because the shuffle function would be passed the range of values needed by the OP, which are all unique.</span>
<span class="comment-copy">@Ajax1234 Yes agreed.</span>
<span class="comment-copy">In your case you can probably pick only 1 random element and leave that one out, or does order matters?</span>
