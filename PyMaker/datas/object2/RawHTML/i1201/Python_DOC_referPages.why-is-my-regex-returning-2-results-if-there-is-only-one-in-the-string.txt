<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11703573/strange-behavior-of-parenthesis-in-python-regex">strange behavior of parenthesis in python regex</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to extract an ID from a string with python3. The regex returns more then one item, despite only having one in the text:</p>
<blockquote>
<p>text_total = 'Lore Ippsum Ref. 116519LN Perlmutt'</p>
</blockquote>
<pre><code>&gt;&gt;&gt; re.findall(r"Ref\.? ?(([A-Z\d\.]+)|([\d.]+))", text_total)

[('116519LN', '116519LN', '')]
</code></pre>
<p>I am looking for a single trimed result, if possible without beeing a list anyway.</p>
<p>That's why my original line is:</p>
<pre><code> [x for x in re.findall(r"Ref\.? ?(([A-Z\d\.]+)|([\d.]+))", text_total)][0]
</code></pre>
<p>The regex has an OR as I am also trying to match </p>
<blockquote>
<p>Lore Ippsum Ref. 1166AB.39AZU2.123 Lore Ippsum</p>
</blockquote>
<p>How can I retrieve just one result from the text and match both conditions?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your groups inside your OR group, so to speak, are "capturing groups". You need to make them non capturing using the <code>?:</code> syntax inside those groups, and allow the outer group to stay as a capturing group. </p>
<pre><code>import re
text_total = 'Lore Ippsum Ref. 116519LN Perlmutt'
re.findall(r"Ref\.? ?((?:[A-Z\d\.]+)|(?:[\d.]+))", text_total)
#result ['116519LN']
</code></pre>
<p>Note that this still gets you multiple matches if there are many. You can use re.search for just first match.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't necessarily need an or, you can do <code>Ref\.? ?([a-zA-Z. 0-9]+)</code> (note the space at the end of the regex, it will be used as the ending for the match.</p>
<pre><code>import re
pattern = r"Ref\.? ?([a-zA-Z. 0-9]+) "
text_total = "Lore Ippsum Ref. 116519LN Perlmutt"
results = re.findall(pattern, text_total)
print(results[0])
</code></pre>
</div>
<span class="comment-copy">Please <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer">check the docs</a>. The tuple represents all the groups in your regular expression.</span>
<span class="comment-copy">If you only want one result - then you don't want to use <code>findall</code> - consider using   <code>re.match</code> or <code>re.search</code> instead?</span>
<span class="comment-copy">@JonClements I am not getting a result with re.match, while re.search returns: &lt;re.Match object; span=(47, 60), match='Ref. 116519LN'&gt;. I am just looking for the ID: 116519LN to be extracted.</span>
<span class="comment-copy">@merlin and when you get that match object using re.search, what does that object's <code>.groups()</code> return ?</span>
<span class="comment-copy">It returns: 'Ref. 116519LN'</span>
