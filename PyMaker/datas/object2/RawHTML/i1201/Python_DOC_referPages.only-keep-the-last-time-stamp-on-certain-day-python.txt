<div class="post-text" itemprop="text">
<p>Hey sorry for being a rookie with python, just need a point in the right direction.</p>
<p>Here is the data i am working with:</p>
<pre><code> 2018-12-14 14:36:00
 2018-12-15 02:00:00
 2018-12-15 04:48:00
 2018-12-16 06:12:00
 2018-12-16 11:28:00
 2018-12-16 23:52:00
</code></pre>
<p>What i need to do is only keep the last entry for each day. Is it wise take the values which are stored in a numpy array and append them to a list. Will this be my best option? I ask because I know I cannot delete values from a numpy array. Just curious if this will be easier to do this from a list or numpy array?</p>
</div>
<div class="post-text" itemprop="text">
<p>I noticed that your times are ordered.  If that is the case, you may simply convert to dict to keep the last entry:</p>
<pre><code>&gt;&gt;&gt; times
['2018-12-14 14:36:00',
 '2018-12-15 02:00:00',
 '2018-12-15 04:48:00',
 '2018-12-16 06:12:00',
 '2018-12-16 11:28:00',
 '2018-12-16 23:52:00']
&gt;&gt;&gt; print(*dict(s.split() for s in times).items(), sep='\n')
('2018-12-14', '14:36:00')
('2018-12-15', '04:48:00')
('2018-12-16', '23:52:00')
</code></pre>
<p>If the ordering is not reliable, do <strong>not</strong> sort - this will degrade time complexity down to <em>O(n log n)</em> for what is an <em>O(n)</em> task. Instead, you should build a dict (keys are dates, and values are lists of times) and take maxima for the dict values.</p>
</div>
<div class="post-text" itemprop="text">
<p>If that is an option, you can use some of the facilities in pandas dataframes.</p>
<p>The following makes two assumptions:</p>
<ol>
<li>Your data have been sorted by time stamps;</li>
<li><p>You have added an extra column on which to group, which will discard the time from the time stamp so that you can group by day.</p>
<pre><code>my_dataframe.groupby(['my_date_only_column']).my_timestamp_column.last()
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>If your data is not sorted, you could also store your dates in <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict()</code></a>, then take the maximum <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime" rel="nofollow noreferrer"><code>datetime</code></a>:</p>
<pre><code>from collections import defaultdict
from datetime import datetime

data = [
    '2018-12-14 14:36:00',
    '2018-12-15 02:00:00',
    '2018-12-15 04:48:00',
    '2018-12-16 06:12:00',
    '2018-12-16 11:28:00',
    '2018-12-16 23:52:00'
]

d = defaultdict(list)
for item in data:
    date, _ = item.split()
    d[date].append(item)

print([max(v, key=lambda x: datetime.strptime(x, "%Y-%m-%d %H:%M:%S")) for _, v in d.items()])
# ['2018-12-14 14:36:00', '2018-12-15 04:48:00', '2018-12-16 23:52:00']
</code></pre>
<p>The above uses <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>datetime.datetime.strptime()</code></a> to get the maximum datetime, as specified in the <code>key</code> parameter. </p>
<p>If your data is already sorted, you can take advantage of <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a>:</p>
<pre><code>from itertools import groupby

data = [
    '2018-12-14 14:36:00',
    '2018-12-15 02:00:00',
    '2018-12-15 04:48:00',
    '2018-12-16 06:12:00',
    '2018-12-16 11:28:00',
    '2018-12-16 23:52:00'
]

print([list(g)[-1] for _, g in groupby(data, key=lambda x: x.split()[0])])
# ['2018-12-14 14:36:00', '2018-12-15 04:48:00', '2018-12-16 23:52:00']
</code></pre>
</div>
<span class="comment-copy">The ordering is reliable... the data is coming from a API that uploads data regularly.</span>
<span class="comment-copy">is there any way to get the index value from the times list of the dates that are being printed?</span>
<span class="comment-copy">Yes, look at the built-in function <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>.</span>
