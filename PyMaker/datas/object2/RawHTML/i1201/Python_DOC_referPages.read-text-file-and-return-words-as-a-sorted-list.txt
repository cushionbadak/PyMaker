<div class="post-text" itemprop="text">
<p>For an assignment in Python 3, I need to create a program that will do the following:</p>
<ol>
<li>Open a text file chosen by the user</li>
<li>Append all words within text file to a list</li>
<li>Sort the words in the list</li>
<li>Print the sorted list matching the desired results</li>
</ol>
<p>The code I have will sort the list but will not dedup the list to the desired results. The text file is the first four lines of a soliloquy from Romeo and Juliet.</p>
<pre><code>fname = input("Enter file name: ")
fh = open(fname)
lst = list()
for line in fh:
    line = line.rstrip()
    words = line.split()
    for word in words:
        lst.append(word)
lst.sort()
print(lst)
</code></pre>
<p>The desired result is:</p>
<pre><code>['Arise', 'But', 'It', 'Juliet', 'Who', 'already', 'and', 'breaks', 'east', 'envious', 'fair', 'grief', 'is', 'kill', 'light', 'moon', 'pale', 'sick', 'soft', 'sun', 'the', 'through', 'what', 'window', 'with', 'yonder']
</code></pre>
<p>But with my code, I get duplicated words:</p>
<pre><code>['Arise', 'But', 'It', 'Juliet', 'Who', 'already', 'and', 'and', 'and', 'breaks', 'east', 'envious', 'fair', 'grief', 'is', 'is', 'is', 'kill', 'light', 'moon', 'pale', 'sick', 'soft', 'sun', 'sun', 'the', 'the', 'the', 'through', 'what', 'window', 'with', 'yonder']
</code></pre>
<p>How can I dedupe the list?</p>
</div>
<div class="post-text" itemprop="text">
<p>There are a few ways you can do this. You can check if the word is already in the list, and only append when the word is not in the list:</p>
<pre><code>for word in words:
    if word not in lst:
        lst.append(word)
lst.sort()
</code></pre>
<p>If the word is already in the list, you don't do anything, so I think that is all you need.</p>
<p>You can also convert your list to a set (sets can only have a single instance of each unique value they contain). The kind of clunky thing about this is that you will then need to convert it back to a list to sort it (sets are unsorted by nature, although there are other libraries that give you sorted options), and to match the required output format (I assume they require a <em>list</em> output):</p>
<pre><code>for word in words:
    lst.append(word)
lst = sorted(set(lst))  # convert to set and sort in one line. Returns a list.
</code></pre>
<p>I'd assume the first option seems more illustrative of what you are likely expected to be learning for this assignment.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of list, use set to collect words. At the end, convert to list and sort</p>
<pre><code>fname = input("Enter file name: ")
words = set()
with open(fname) as fh:
    for line in fh:
        line = line.rstrip()
        words.update(set(line.split()))

words_list = sorted(list(words))
print(words_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One possibility would be to use a <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer"><code>set</code></a>, maybe like this:</p>
<pre><code>filename = input("Enter file name: ")
words = set()

with open(filename) as f:
    for line in f:
        line = line.strip()
        if len(line) &gt; 0:
            for w in line.split()
                w = w.strip()
                if len(w) &gt; 0:
                    words.add(w)

print(words)
sorted_words = list(sorted(words))
print(sorted_words)
</code></pre>
</div>
<span class="comment-copy">It must be a list? Can't you use <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">Sets</a>?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/7961363/removing-duplicates-in-lists">Removing duplicates in lists</a></span>
<span class="comment-copy"><code>print(list(set(lst)))</code> will yield the correct result.</span>
<span class="comment-copy">I knew I was missing a small detail somewhere</span>
<span class="comment-copy">@PatrickArtner right you are on <code>sorted(set(whatever))</code>. Updated. I kept the <code>for</code> loop because <code>lst</code> is being built as he reads through line-by-line. Wouldn't <code>set(words)</code> give an independent set <i>per line</i>, and then replace it on the next line? Sure, you could do things to get around this elegantly, but elegant is often not very readable or instructive, and I was trying to make minimal modifications to his existing code. Homework problem, after all.</span>
<span class="comment-copy">You are right, I read the OP only half and yours not good enough - you would need something along <code>sorted( {word for line in fh for word in line.rstrip().split()} )</code> and <code>with open(...) as fh:</code> to get it in one go. and thats not as readable for homework-level.</span>
