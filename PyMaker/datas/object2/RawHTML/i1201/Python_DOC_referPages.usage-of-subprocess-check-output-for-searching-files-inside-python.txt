<div class="post-text" itemprop="text">
<p>I am using subprocess.check_output() to run the basic "ls" command. From what I understand after reading documentation is that this process can help run a shell command from within the domain of python. </p>
<p>Let us say my example folder is home/ where I have the following files </p>
<pre><code>  -rw-rw-r-- 1 aravind aravind     761 Dec  2 10:48 flux_acis_bare_479.dat
  -rw-rw-r-- 1 aravind aravind    2426 Dec  2 10:49 flux_acis_bare_481.dat
  -rw-rw-r-- 1 aravind aravind     759 Dec  2 18:46 flux_acis_hetg_479.dat
  -rw-rw-r-- 1 aravind aravind    2178 Dec  2 18:45 flux_acis_hetg_481.dat
</code></pre>
<p>If I do an ls search from shell for the keyword "acis", naturally all files are returned. </p>
<p>Now I want to do the same thing from within python.</p>
<p>The following is my attempt</p>
<pre><code>     import os
     import subprocess

     os.chdir("home/")
     subprocess.check_output(["ls", "*acis*"])
</code></pre>
<p>The two " ", " " should run sequentially and I should get back all the files as a result would have been my guess. However the output I get is a file not found error. </p>
<pre><code>     Command '['ls', '*acis*']' returned non-zero exit status 2
</code></pre>
<p>Disclaimer : I have looked at multiple Stack Overflow questions on subprocess.check_output() and tried to see if my question is a duplicate. If I have missed something please let me know.   </p>
</div>
<div class="post-text" itemprop="text">
<p>As @Ry-♦ said, <code>glob</code> is the module you're looking for. Running <code>glob.glob("home/*acis*")</code> will give you a list of files and directories that match the pattern. To match recursively, like if you wanted to find a file such as <code>home/flux_acis_folder/something_else.dat</code>, you could use <code>glob.glob("home/*acis**", recursive=True)</code>. </p>
</div>
<span class="comment-copy">The shell interprets glob patterns, not <code>ls</code>. You would need to spawn a shell. Is your actual goal to run <code>ls</code>, though, or is it to look for files? ’Cause there are better tools for that, like <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">the glob module</a>.</span>
<span class="comment-copy">My actual goal is indeed to search for files and convert them into a list. I'll look into the glob module. Thanks.</span>
