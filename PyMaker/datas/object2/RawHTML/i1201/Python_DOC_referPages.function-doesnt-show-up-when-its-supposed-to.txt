<div class="post-text" itemprop="text">
<p>At school we have to write a program to use the pythagorean theory. Im writing it in python 3 but when I return cber the program just ends. bber on the other hand works fine. Can someone please help? Thanks already:)</p>
<p>Edit: Thanks for helping me, this is not everything with the function kiezen the user can choose two numbers and the j and the n are to decide which lines they are in the triangle, thats in the function kiezen too. This is all in one function called cijfers, I dont know if that makes a difference. I used return because that way I could let the user choose the numbers again if he/she entered something unvalid. And I forgot to remove the ifs in cber before posting it. Iâ€™ll try to 
improve my program sometime soon. Thanks for all your feedback:)</p>
<pre><code> def bber():
   if (c &gt;= a):
     print(str(a) + "^2 + b^2 = " + str(c) + "^2")
     print("b^2 = " + str(c) + "^2 - " + str(a) + "^2")
     print("b = V(" + str(c**2) + " - " + str(a**2) + ")")
     print("b = V" + str((c**2) - (a**2)) + " = " + str(math.sqrt((c**2) - (a**2))))
   if (a &gt;= c):
     print("De rechthoekzijde kan niet langer zijn dan de schuine zijde.")
     cijfers()
 def cber():
   if (a &gt;= b):
     print(str(a) + "^2 + " + str(b) + "^2 = c^2")
     print("c^2 = " + str(a) + "^2 + " + str(b) + "^2")
     print("c = V(" + str(a**2) + " + " + str(b**2) + ")")
     print("c = V" + str((a**2) + (b**2)) + " = " + str(math.sqrt((a**2) + (b**2))))
   if (b &gt;= a):
     print(str(a) + "^2 + " + str(b) + "^2 = c^2")
     print("c^2 = " + str(a) + "^2 + " + str(b) + "^2")
     print("c = V(" + str(a**2) + " + " + str(b**2) + ")")
     print("c = V" + str((a**2) + (b**2)) + " = " + str(math.sqrt((a**2) + (b**2))))

 def kiezen():
   x = int(input("Wat is de lengte van de eerste zijde?"))
   xz = input("Is deze zijde een rechthoekzijde (J/N)?")

   print(" ")

   y = int(input("Wat is de lengte van de tweede zijde?"))
   yz = input("Is deze zijde een schuine zijde (J/N)?")

   print(" ")

 return kiezen()

 if xz == "j" or "J":
   if yz == "n" or "N":
      b = y
      a = x
      return cber()
   if yz == "j" or "J":
     c = y
     a = x
     return bber()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are a few problems going on.</p>
<ol>
<li>You need to import <strong>modules</strong>.</li>
</ol>
<p>In your code, you are using <code>math.sqrt</code>, so the first line required is to actually import the <code>math</code> module at the beginning of your file:</p>
<pre><code>import math
</code></pre>
<ol start="2">
<li><p>You are not getting access to your variables inside your functions. To pass them to your function, you have to specify them as function parameters:</p>
<p>def bber(a, c):</p></li>
</ol>
<p>On the positive side, your function <code>bber</code> reports the right answer inside your statement <code>if (c &gt;= a)</code>. However, the following conditional statement, <code>if (a &gt;= c)</code>, calls the function <code>cijfers()</code>, which doesn't actually exist. In that case, every time <strong>a</strong> is greater than or equal to <strong>c</strong>, the program will print a <code>NameError</code>.</p>
<ol start="3">
<li>The function <code>cber</code> works, but you don't actually need to have <code>if</code> statements, because you get the variable <strong>c</strong> no matter if <strong>b</strong> is greater than <strong>a</strong> or if <strong>a</strong> is greater than <strong>b</strong>. You might want to consider checking for other types of input (like text, negative numbers, floats, etc.), though.</li>
</ol>
<p>Here is how you could simplify your <code>cber</code> function, also having to pass in actual parameters:</p>
<pre><code>def cber(a, b):
        print(str(a) + "^2 + " + str(b) + "^2 = c^2")
        print("c^2 = " + str(a) + "^2 + " + str(b) + "^2")
        print("c = V(" + str(a**2) + " + " + str(b**2) + ")")
        print("c = V" + str((a**2) + (b**2)) + " = " + str(math.sqrt((a**2) + (b**2))))
</code></pre>
<ol start="4">
<li><p>The function <code>kiezen</code> isn't actually doing anything in your code. It is defined, but you don't use it anywhere, apparently.</p></li>
<li><p>Variables defined inside functions are <strong>local</strong> to that function while variables defined outside a function (i.e. no indentation) are <strong>global</strong> variables. When you need to use a global variable inside a function, you have to pass it as a function parameter. For more information on this topic, you can read about the concepts of "scope", "global scope" and "local scope". You can also find examples in the official Python documentation, <a href="https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value" rel="nofollow noreferrer">here</a>.</p></li>
</ol>
<p>For now, so you can see how to use variables that are defined <strong>globally</strong>, I will use your incomplete <code>kiezen</code> function without actually making it a function, so the code is directly executed in your program.</p>
<ol start="6">
<li>One other problem here is that you can use the keyword <code>return</code> only inside a function, because that is what it is meant for: to return the result of a function.</li>
</ol>
<p>This means that you have to change your code <code>return cber()</code> and <code>return bber()</code> by removing the <strong>return</strong> keyword.</p>
<ol start="7">
<li><p>You are missing a space at the end of your questions with <code>input</code>. When you type your answer, it will appear right next to the last character in your string.</p></li>
<li><p>When you want to check for multiple options (as you did with <code>XZ == "j" or "J"</code>), you can use a list instead and the keyword <strong>in</strong>.</p></li>
</ol>
<p>Here are some modifications needed to make your program work in the end. Comments are present on lines with the <strong>#</strong> symbol.</p>
<pre><code># To use a function provided by the math module, you have to import it first
import math


# You have to get "a" and "c" from somewhere, so you pass them as parameters
def bber(a, c):
    if (c &gt;= a):
        print(str(a) + "^2 + b^2 = " + str(c) + "^2")
        print("b^2 = " + str(c) + "^2 - " + str(a) + "^2")
        print("b = V(" + str(c**2) + " - " + str(a**2) + ")")
        print("b = V" + str((c**2) - (a**2)) + " = " + str(math.sqrt((c**2) - (a**2))))

    if (a &gt;= c):
        print("De rechthoekzijde kan niet langer zijn dan de schuine zijde.")


# Same scenario here: "a" and "b" must be defined somehow
# Note that the "if" statements were unnecessary
def cber(a, b):
        print(str(a) + "^2 + " + str(b) + "^2 = c^2")
        print("c^2 = " + str(a) + "^2 + " + str(b) + "^2")
        print("c = V(" + str(a**2) + " + " + str(b**2) + ")")
        print("c = V" + str((a**2) + (b**2)) + " = " + str(math.sqrt((a**2) + (b**2))))

# Note that a space has been added at the end of each string
# where you use "input".
X = int(input("Wat is de lengte van de eerste zijde? "))
XZ = input("Is deze zijde een rechthoekzijde (J/N)? ")

print(" ")

Y = int(input("Wat is de lengte van de tweede zijde? "))
YZ = input("Is deze zijde een schuine zijde (J/N)? ")

print(" ")

if XZ in ["j", "J"]:
    if YZ in ["n", "N"]:
        b = Y
        a = X

        # You have to remove the word "return", this is not a function
        cber(a, b)

    if YZ in ["j", "J"]:
        c = Y
        a = X

        # You have to remove the word "return", this is not a function
        bber(a, c)
</code></pre>
<p>As I mentioned earlier, this is not perfect because you would need to manage errors. For example, it will not work if you enter text instead of numbers, but that is a topic for another discussion.</p>
<p>Also, for the purpose of this exercise, you do not actually "need" to use the <code>return</code> keyword in your functions if your goal is just to print the output, but keep in mind that if you need to reuse the result of a function, you will have to return a value for it.</p>
<p>A quick example of that concept would be the following:</p>
<pre><code>def my_function():
    return 12

# my_variable will have a value of 12
my_variable = my_function()
</code></pre>
</div>
<span class="comment-copy">Just a hint (I don't know if that is the cause of the problem): the statement <code>if yz == "j" or "J":</code> gets interpreted as <code>if (yz == "j") or ("J"):</code>. That is probably not what you want.</span>
<span class="comment-copy">Also, could you please fix the intentations of your code? I cannot identify where the last lines belong to, because they contain <code>return</code> statements but not clear starting <code>def</code>.</span>
<span class="comment-copy">See <a href="https://stackoverflow.com/questions/15112125/how-do-i-test-one-variable-against-multiple-values">how do I teset one variable against multiple values</a></span>
<span class="comment-copy">What is <code>return kiezen()</code> supposed to do? It's not inside a function, so what are you returning from? And <code>kiezen()</code> doesn't return anything, so what are you trying to return? And this statement will prevent the <code>if</code> statement after it from running.</span>
<span class="comment-copy">the same question about <code>return bber()</code> and <code>return cber()</code>. Those functions don't return anything, so why are you returning their values?</span>
