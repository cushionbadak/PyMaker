<div class="post-text" itemprop="text">
<p>I'm currently using Python 3 on Ubuntu 18.04.  I'm not a programmer by any means and I'm not asking for a code review, however, I'm having an issue that I can't seem to resolve.  </p>
<p>I have 1 text file named <code>content.txt</code> that I'm reading lines from.<br/>
I have 1 text file named <code>standard.txt</code> that I'm reading lines from.<br/>
I have 1text file named <code>outfile.txt</code> that I'm writing to. </p>
<pre><code>content = open("content.txt", "r").readlines()
standard = open("standard.txt", "r").readlines()
outfile = "outfile.txt"
outfile_set = set()
with open(outfile, "w") as f:
    for line in content:
        if line not in standard:
            outfile_set.add(line)
    f.writelines(sorted(outfile_set))  
</code></pre>
<p>I'm not sure where to put the following line though.  My for loop nesting may all be off:  </p>
<pre><code>f.write("\nNo New Content")  
</code></pre>
<p>Any code examples to make this work would be most appreciated.  Thank you.  </p>
</div>
<div class="post-text" itemprop="text">
<p>if i understand good you whant to add outfile_set if this is not empty to the outfile or add the string "\nNo New Content" </p>
<p>Replace the line</p>
<pre><code>f.writelines(sorted(outfile_set))
</code></pre>
<p>to</p>
<pre><code>if any(outfile_set):
    f.writelines(sorted(outfile_set))
else:
    f.write("\nNo New Content")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm assuming that you want to write "No new content" to the file if every line in content is in standard. So you might do something like:</p>
<pre><code>with open(outfile, "w") as f:
    for line in content:
        if line not in standard:
            outfile_set.add(line)
    if len(outfile_set) &gt; 0:
        f.writelines(sorted(outfile_set))
    else:
        f.write("\nNo New Content") 
</code></pre>
<p>Your original code was almost there!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can reduce your runtime a lot by using <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer">set/frozenset</a>:</p>
<pre><code>with open("content.txt", "r") as f:
    content = frozenset(f.readlines())  # only get distinct values from file
with open("standard.txt", "r") as f:
    standard = frozenset(f.readlines()) # only get distinct values from file

# only keep whats in content but not in standard
outfile_set = sorted(content-standard) # set difference, no loops or tests needed


with open ("outfile.txt","w") as outfile:
    if outfile_set:   
        outfile.writelines(sorted(outfile_set))
    else:   
        outfile.write("\nNo New Content")
</code></pre>
<p>You can read more about it here:</p>
<ul>
<li><a href="https://docs.python.org/2/library/sets.html#set-objects" rel="nofollow noreferrer">set operator list (python 2 - but valid for 3</a> - can't find this overview in py3 doku </li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#frozenset.difference" rel="nofollow noreferrer">set difference</a></li>
</ul>
<hr/>
<p>Demo:</p>
<pre><code># Create files
with open("content.txt", "w") as f:
    for n in map(str,range(1,10)):     # use range(1,10,2) for no changes
        f.writelines(n+"\n") 
with open("standard.txt", "w") as f:
    for n in map(str,range(1,10,2)): 
        f.writelines(n+"\n") 

# Process files:
with open("content.txt", "r") as f:
    content = set(f.readlines()) 
with open("standard.txt", "r") as f:
    standard = set(f.readlines())

# only keep whats in content but not in standard
outfile_set = sorted(content-standard)  

with open ("outfile.txt","w") as outfile:
    if outfile_set:
        outfile.writelines(sorted(outfile_set))
    else:
        outfile.write("\nNo New Content")

with open ("outfile.txt") as f:
    print(f.read())
</code></pre>
<p>Output:</p>
<pre><code>2
4
6
8
</code></pre>
<p>or</p>
<pre><code>No New Content
</code></pre>
</div>
<span class="comment-copy">write <code>no new content</code> is the case when line in standard ? right</span>
