<div class="post-text" itemprop="text">
<p>I have a file that uses <code>\x01</code> as the field delimiter and <code>\x02\n</code> for the line terminator. Here is an example of the file header:</p>
<pre><code> #export_date\x01artist_id\x01name\x01is_actual_artist\x01view_url\x01artist_type_id\x02\n
</code></pre>
<p>When I use <code>csv.Sniffer()</code> I get the following:</p>
<blockquote>
<p>{'<strong>module</strong>': 'csv', '_name': 'sniffed', 'lineterminator': '\r\n', 'quoting': 0, '<strong>doc</strong>': None, 'doublequote': False, 'delimiter': '\x01', 'quotechar': '"', 'skipinitialspace': False}</p>
</blockquote>
<p>What do the following three fields mean: </p>
<ul>
<li>quoting</li>
<li>quotechar</li>
<li>doublequote</li>
</ul>
<p>The above doesn't have any quoting, so I'd assume the <code>quotechar</code> should be empty instead of a double quote, but any explanation on these three fields would be great.</p>
<p>Also, I've tried a few other files and it seems to always give the exact output for those three fields, regardless of whether that file has quoting or not.</p>
</div>
<div class="post-text" itemprop="text">
<p>Check the documentation   </p>
<ul>
<li><em>Dialect.doublequote</em> </li>
</ul>
<blockquote>
<p>Controls how instances of quotechar appearing inside a field should themselves be quoted. When True, the character is doubled. When False, the escapechar is used as a prefix to the quotechar. It defaults to True.</p>
</blockquote>
<ul>
<li><em>Dialect.quotechar</em> </li>
</ul>
<blockquote>
<p>A one-character string used to quote fields containing special characters, such as the delimiter or quotechar, or which contain new-line characters. It defaults to '"'.</p>
</blockquote>
<ul>
<li><em>Dialect.quoting</em> </li>
</ul>
<blockquote>
<p>Controls when quotes should be generated by the writer and recognised by the reader. It can take on any of the QUOTE_* constants (see section Module Contents) and defaults to QUOTE_MINIMAL.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Those fields are covered in the <a href="https://docs.python.org/3/library/csv.html#csv-fmt-params" rel="nofollow noreferrer">Dialects and Formatting Paramteres docs</a>:</p>
<blockquote>
<ul>
<li>quoting: Controls when quotes should be generated by the writer and recognised by the reader. It can take on any of the QUOTE_* constants (see section Module Contents) and defaults to QUOTE_MINIMAL.</li>
<li>doublequote: Controls how instances of quotechar appearing inside a field should themselves be quoted. When True, the character is doubled. When False, the escapechar is used as a prefix to the quotechar. It defaults to True. On output, if doublequote is False and no escapechar is set, Error is raised if a quotechar is found in a field.</li>
<li>quotechar: A one-character string used to quote fields containing special characters, such as the delimiter or quotechar, or which contain new-line characters. It defaults to '"'.</li>
</ul>
</blockquote>
<p>Regarding:</p>
<blockquote>
<p>The above doesn't have any quoting, so I'd assume the quotechar should be empty instead of a double quote, but any explanation on these three fields would be great.</p>
</blockquote>
<p>There's a comment in the CPython <code>csv.py</code> library stating that:</p>
<pre><code># _csv.reader won't accept a quotechar of ''`
</code></pre>
<p>Source: <a href="https://github.com/python/cpython/blob/2ef69a1d45de8aa41c45d32d9ee1ff227bb1a566/Lib/csv.py#L198" rel="nofollow noreferrer">https://github.com/python/cpython/blob/2ef69a1d45de8aa41c45d32d9ee1ff227bb1a566/Lib/csv.py#L198</a></p>
<p>In your case, if there's no quoting, you probably want to use <code>csv.QUOTE_NONE</code>. The sniffer probably couldn't figure that out for you.</p>
</div>
