<div class="post-text" itemprop="text">
<p>if I have a list:</p>
<pre><code>x=[1,'A',2,'B',3,'C',2,'A',1,'B']
</code></pre>
<p>here in the above list the digits and characters are related as A contains 1,B contains 2, C contains 3 and again A contains 2(total 3) ,B contains 1(total 3)</p>
<p>if I want to find what each character contains finally..how can I do it
I did this-
I found characters in the list x initially like <code>y=['A','B','C']</code> then I used a loop to iterate x and whenever I find A in x I added the previous value based on index and so on...but  its not working sometimes.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do something like this, assuming you want a dictionary as output:</p>
<pre><code>data = [1,'A',2,'B',3,'C',2,'A',1,'B']

result = {}
for number, letter in zip(data[::2], data[1::2]):
    result.setdefault(letter, []).append(number)

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'B': [2, 1], 'C': [3], 'A': [1, 2]}
</code></pre>
<p>If you want only the last <em>contained</em> number, you could use a dictionary comprehension (see the documentation <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">here</a>):</p>
<pre><code>data = [1, 'A', 2, 'B', 3, 'C', 2, 'A', 1, 'B']
result = {letter: number for number, letter in zip(data[::2], data[1::2])}
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'B': 1, 'C': 3, 'A': 2}
</code></pre>
<p>Or if you want the sum of all elements, you can use a combination of both answer above:</p>
<pre><code>data = [1,'A',2,'B',3,'C',2,'A',1,'B']

result = {}
for number, letter in zip(data[::2], data[1::2]):
    result.setdefault(letter, []).append(number)

result = { letter : sum(numbers) for letter, numbers in result.items()}
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'A': 3, 'B': 3, 'C': 3}
</code></pre>
<p><strong>Further</strong></p>
<ol>
<li>Documentation on <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">setdefault</a></li>
<li>Documentation on <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a></li>
</ol>
</div>
<span class="comment-copy">Show us what you have already tried? The code.</span>
<span class="comment-copy">So the numbers are always in not-even positions?</span>
<span class="comment-copy">Sorry, could you explain what you mean be "A contains 1"?</span>
<span class="comment-copy">yes the numbers are in odd positions</span>
<span class="comment-copy">@offeltoffel  something like dictionary key value pair but in the form of a list</span>
<span class="comment-copy">except, instead of append, you can just directly assign a value instead to the key. <code>result[letter] = number</code> As the OP only wants the last value.</span>
<span class="comment-copy">I think OP wanted <code>result[letter] = result.get(letter, 0) + number</code> instead</span>
<span class="comment-copy">ty for the code ...can I know what does zip and setdefault do</span>
<span class="comment-copy">@Ramesh updated the post with links to the documentation, basically zip, joins iterables so you can iterate over them in parallel. And setdefault, sets a default value for the dictionary</span>
<span class="comment-copy">can we write <code>result = { letter : sum(numbers) for letter, numbers in result.items()}</code> as <code>for letter, numbers in result.items() : 	result  = {letter : sum(numbers)}</code> ?</span>
