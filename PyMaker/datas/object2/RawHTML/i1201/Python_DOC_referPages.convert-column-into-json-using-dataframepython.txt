<div class="post-text" itemprop="text">
<p>Python   #datas from API</p>
<pre><code> plan_get = pd.DataFrame(rows, columns=columns) #plan_get return all json data
return Response({"MESSAGE": "FOUND","DATA":json.loads(plan_get.to_json(orient='records'))})
</code></pre>
<p>Actual Output </p>
<pre><code>        [{
                    "customer_name": "ABI2",
                    "location_name": "Cherai2",
                    "employee_name": "ASU2",
                    "Sales_Plan_Details": "[{\"Month\": \"2019-1\", \"Quantity\": 10, \"Product_Gid\": 3}]"

    },
{
                "customer_name": "ABI",
                "location_name": "Cherai",
                "employee_name": "ASU",
                "Sales_Plan_Details": "[{\"Month\": \"2019-1\", \"Quantity\": 10, \"Product_Gid\": 3}]"

}]
</code></pre>
<p>Expected Output:</p>
<pre><code>[{
                        "customer_name": "ABI2",
                        "location_name": "Cherai2",
                        "employee_name": "ASU2",
                        "Sales_Plan_Details": [{"Month": "2019-1", 
                     "Quantity": 10, "Product_Gid": 3}]

        },
    {
                    "customer_name": "ABI",
                    "location_name": "Cherai",
                    "employee_name": "ASU",
                    "Sales_Plan_Details": [{"Month": "2019-1", 
                "Quantity": 10, "Product_Gid": 3}]

    }]
</code></pre>
<p>Here i'm using pandas DataFrame to pass json data. My question is how would i convert  Sales_Plan_Details(column) to json object before returning.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>json.loads</code> or <code>ast.literal_eval</code> for convert <code>string</code>s to <code>list of dicts</code>:</p>
<pre><code>import ast, json

df = pd.DataFrame(rows) 
df['Sales_Plan_Details'] = df['Sales_Plan_Details'].apply(json.loads)
#alternative solution
#df['Sales_Plan_Details'] = df['Sales_Plan_Details'].apply(ast.literal_eval)

j = df.to_json(orient='records')
print (j)
[{"Sales_Plan_Details":[{"Month":"2019-1","Quantity":10,"Product_Gid":3}],
  "customer_name":"ABI2","employee_name":"ASU2","location_name":"Cherai2"},
{"Sales_Plan_Details":[{"Month":"2019-1","Quantity":10,"Product_Gid":3}],
 "customer_name":"ABI","employee_name":"ASU","location_name":"Cherai"}]
</code></pre>
<p>Setup:</p>
<pre><code>rows= [{
                    "customer_name": "ABI2",
                    "location_name": "Cherai2",
                    "employee_name": "ASU2",
                    "Sales_Plan_Details": "[{\"Month\": \"2019-1\", \"Quantity\": 10, \"Product_Gid\": 3}]"

    },
{
                "customer_name": "ABI",
                "location_name": "Cherai",
                "employee_name": "ASU",
                "Sales_Plan_Details": "[{\"Month\": \"2019-1\", \"Quantity\": 10, \"Product_Gid\": 3}]"

}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>You can use <a href="https://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="nofollow noreferrer">list comprehensions</a> to map the <code>Sales_Plan_Details</code> values.</strong></p>
<p>You can use <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json.loads()</a> to deserialize the list value from the string.</p>
<pre><code>import json

dataframe_json = [
    {
                    "customer_name": "ABI2",
                    "location_name": "Cherai2",
                    "employee_name": "ASU2",
                    "Sales_Plan_Details": "[{\"Month\": \"2019-1\", \"Quantity\": 10, \"Product_Gid\": 3}]"

    },
    {
                    "customer_name": "ABI",
                    "location_name": "Cherai",
                    "employee_name": "ASU",
                    "Sales_Plan_Details": "[{\"Month\": \"2019-1\", \"Quantity\": 10, \"Product_Gid\": 3}]"

    }]

# get the "Sales_Plan_Details" key value's from the list
sales_plan_details_nested_list = [sales_plan_details_dict for sales_plan_details_dict in json.loads(item("Sales_Plan_Details")) for item in dataframe_json]

# flatten the list
sales_plan_details_list = [item for sublist in sales_plan_details_nested_list for item in sublist]

# pretty print the list now
print(json.dumps(sales_plan_details_list, indent=True))
</code></pre>
</div>
<span class="comment-copy">what is your desired output? please include that in your question.</span>
<span class="comment-copy">I want Sales_Plan_Details column to json object</span>
<span class="comment-copy">just the keys of <code>Sales_Plan_Details</code> ?</span>
<span class="comment-copy">Yes ,Sales_Plan_Details values</span>
<span class="comment-copy">is the json output you're getting from the statement <code>json.loads(plan_get.to_json(orient='records'))</code></span>
<span class="comment-copy">Brilliant  Thanks @jezrael</span>
<span class="comment-copy">I get error 'str' object has no attribute 'get'</span>
<span class="comment-copy">@selvakumar can you check now?</span>
<span class="comment-copy">Thanks For Your response.. Your code really helped me @kunal</span>
