<div class="post-text" itemprop="text">
<p>I have a list of tuples:</p>
<pre><code>my_list = [(0.12497007846832275, 0.37186527252197266, 0.9681450128555298, 0.5542989373207092), 
           (0.18757864832878113, 0.6171307563781738, 0.8482183218002319, 0.8088157176971436), 
           (0.06923380494117737, 0.2164008915424347, 0.991775393486023, 0.41364166140556335)]
</code></pre>
<p>I want to multiply each odd index element of tuple by 300 thus 1st and 3rd element will be multiplied by 300 and 0th and 2nd element will be multiplied by 200 and save these values at their index. But doing so it gives me below error:</p>
<pre><code>TypeError: 'tuple' object does not support item assignment
</code></pre>
<p>How can I modify these values.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#tuples" rel="nofollow noreferrer">Tuples are immutable</a>, so you will need to create new tuples for your desired result. For array-based manipulations, I would strongly recommend you move to a 3rd party library such as NumPy:</p>
<pre><code>import numpy as np

A = np.array(my_list)
A *= np.tile([200, 300], A.shape[1] // 2)

print(A)

array([[ 24.99401569, 111.55958176, 193.62900257, 166.2896812 ],
       [ 37.51572967, 185.13922691, 169.64366436, 242.64471531],
       [ 13.84676099,  64.92026746, 198.3550787 , 124.09249842]])
</code></pre>
<p>But if you insist on using a list of tuples, you can use a list comprehension with a dictionary mapping and <code>enumerate</code>:</p>
<pre><code>d = {0: 200, 1: 300}

res = [tuple(val * d[idx % 2] for idx, val in enumerate(tup)) for tup in my_list]

print(res)

[(24.99401569366455, 111.5595817565918, 193.62900257110596, 166.28968119621277),
 (37.515729665756226, 185.13922691345215, 169.6436643600464, 242.64471530914307),
 (13.846760988235474, 64.92026746273041, 198.3550786972046, 124.092498421669)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you should to generate new list of tuples</p>
<pre><code>[(el[0]*200, el[1]*300, el[2]*200, el[3]*300) for el in my_list]
</code></pre>
<p>and you can iterate for even and odd indexes</p>
<pre><code>[tuple(el * (200 if idx % 2 == 0 else 300) for idx, el in enumerate(tup)) for tup in my_list]
</code></pre>
</div>
