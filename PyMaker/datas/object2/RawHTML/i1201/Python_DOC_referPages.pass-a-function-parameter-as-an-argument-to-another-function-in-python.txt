<div class="post-text" itemprop="text">
<p>i have two functions in python</p>
<pre><code>class JENKINS_JOB_INFO():
    def __init__(self):
        parser = argparse.ArgumentParser(description='xxxx. e.g., script.py -j jenkins_url -u user -a api')
        parser.add_argument('-j', '--address', dest='address', default="", required=True, action="store")
        parser.add_argument('-u', '--user', dest='user', default="xxxx", required=True, action="store")
        parser.add_argument('-t', '--api_token', dest='api_token', required=True, action="store")
        parsers = parser.parse_args()

        self.base_url = parsers.address.strip()
        self.user = parsers.user.strip()
        self.api_token = parsers.api_token.strip()
    def main(self):
        logger.info("call the function")
        self.get_jobs_state()
    def get_jobs_state(self):
        get_jenkins_json_data(params)

   def get_jenkins_json_data(self, params, base_url):
        url = urljoin(self.base_url, str(params.params))
        r = requests.get(url, auth=HTTPBasicAuth(self.user, self.api_token), verify=False)
</code></pre>
<p>i have a parameter <code>params</code> defined in my function <code>get_jobs_state</code>and i want to pass this param to my other function <code>get_jenkins_json_data</code> so that the complete <code>url</code> inside function <code>get_jenkins_json_data</code> joins to <code>https:&lt;jenkins&gt;/api/json?pretty=true&amp;tree=jobs[name,color]</code></p>
<p>But when i run my code the <code>url</code> is not correct and the value of <code>params</code> inside the function is <code>&lt;__main__.CLASS_NAME instance at 0x7f9adf4c0ab8&gt;</code></p>
<p>here <code>base_url</code> is a parameter that i am passing to my script.</p>
<p>How can i  get rid of this error?</p>
</div>
<div class="post-text" itemprop="text">
<p>In your function <code>get_jobs_state</code> you are passing in self as the argument for the params argument to the <code>get_jenkins_json_data</code>, and self in this case is an instance of a class.</p>
<p>Try something like this:</p>
<pre><code>class Jenkins:

def __init__(self, domain):

    self.user = "user"
    self.api_token = "api_token"
    self.base_domain = domain

def get_jobs_state(self):
    query = "api/json?pretty=true&amp;tree=jobs[name,color]"
    return self.get_jenkins_json_data(query)

def get_jenkins_json_data(self, query):
    url = urljoin(self.base_domain, str(query))
    r = requests.get(url, auth=HTTPBasicAuth(self.user, self.api_token), verify=False)
    return r
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just write <code>params.params</code> instead of <code>params</code>. </p>
<p>The way you do it is extremely confusing because in <code>get_jenkins_josn_data</code>, <code>self</code> will be the <code>params</code> and <code>params</code> will be the <code>base_url</code>. I would advise you no to do that in the future. If you want to send some parameters to the function, send the minimal amount of information that the function needs. Here, for example, you could have sent <code>self.params</code> instead of the whole <code>self</code>. This way you wouldn't encounter this error and the code would be much more readable.</p>
<p>I suggest you to rewrite this function this way.</p>
</div>
<div class="post-text" itemprop="text">
<p>So your solution is a bit confusing. You shouldn't pass the self to the <code>get_jenkins_json_data</code> method. The python will do that for you automatically. You should check out the data model for how <a href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy" rel="nofollow noreferrer">instance methods</a> work. I would refactor your code like this:</p>
<pre><code>def get_jobs_state(self):
    params = "api/json?pretty=true&amp;tree=jobs[name,color]"
    self.get_jenkins_json_data(params)

def get_jenkins_json_data(self, params):
    url = urljoin(self.base_url, params)
    r = requests.get(url, auth=HTTPBasicAuth(self.user, self.api_token), verify=False)
...
</code></pre>
</div>
<span class="comment-copy">Is it on purpose that <code>get_jenkins_json_data</code> is given <code>params</code> yet in arguments for <code>urljoin</code>, <code>self.params</code> is used, over the <code>params</code> given from <code>get_jobs_state</code>?</span>
<span class="comment-copy">it makes no difference whether i use <code>self.params</code> or just <code>params</code> in <code>urljoin</code>, i have to declare <code>self.params = []</code> in <code>def __init__(self):</code>. If i dont do that my script fails with <code>ERROR</code> <code>AttributeError: CLASSNAME instance has no attribute 'params'</code></span>
<span class="comment-copy">You call the method like this <code>self.get_jenkins_json_data(self, params)</code> on purpose? Because this way the <code>self</code> will be the <code>params</code> and <code>params</code> will be the <code>base_url</code>.</span>
<span class="comment-copy">The way @AttilaBognár is better approach else,If you have to use that variable elsewhere then its better to initiate first then use it as in class instance</span>
<span class="comment-copy">@AttilaBognár i am new to this <code>self</code> keyword, so i dont know if calling <code>self.get_jenkins_json_data(self, params)</code> is not correct</span>
<span class="comment-copy">but my BASE_DOMAIN keeps on changing as per requirements, it is not the same for every case</span>
<span class="comment-copy">Updated code. Moved it to the constructor, that way you can create an instance of Jenkins for any domain.</span>
<span class="comment-copy">this code works too. thank you so much for the help :)</span>
<span class="comment-copy">yeah, this works like a charm. Thank you so much for the help..:)</span>
