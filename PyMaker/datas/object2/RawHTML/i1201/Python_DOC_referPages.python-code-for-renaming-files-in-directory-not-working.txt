<div class="post-text" itemprop="text">
<p>I'm looking to rename my files from time to time in numerical order, so for example, 1.png, 2.png., 3.png, etc</p>
<p>I wrote this code in an attempt to do so, I simply ended it with by printing what the files would be named to make sure it was right:</p>
<pre><code>import os

os.chdir('/Users/hasso/Pictures/Digital Art/saved images for vid/1')

for f in os.listdir():

    f_name=1
    f_ext= '.png'

    print('{}{}'.format(f_name, f_ext))
</code></pre>
<p>How would I go by solving this? </p>
</div>
<div class="post-text" itemprop="text">
<p>You keep on getting <code>1.png</code> suggested as the new name because you always set <code>f_name = 1</code> <em>inside</em> the loop. Initialize it with <code>1</code> before the loop, and then increment it as you are renaming each file instead.</p>
<p>A few additional points:</p>
<ol>
<li>You don't need <code>os.chdir</code> because even if the default is <code>.</code> – the current dir –, you can also supply the target path to <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.filelist</code></a>.</li>
<li>When dealing with <code>user</code> home directories, it's nice if you don't have to hardcode it. <a href="https://docs.python.org/3/library/os.path.html?os.path.expanduser#os.path.expanduser" rel="nofollow noreferrer"><code>os.path.expanduser</code></a> retrieves this value for you.</li>
<li>When iterating over lists that you possibly want to change, it's best to make a separate list of <em>only</em> the items that you want to change. So, rather than looping over all files and changing some of them, make it easier by first gathering all items that you want to change. In your case, make a list of <em>only</em> <code>.png</code> files and then loop over this list.</li>
<li>(Rather advanced) <a href="https://docs.python.org/3/library/os.html#os.rename" rel="nofollow noreferrer"><code>os.rename</code></a> will throw an error if you try to rename to an already existing name. What I do below is check if the next name to be used is already in the list, and if it is, increase the <code>f_name</code> number.</li>
</ol>
<p></p>
<pre><code>import os

yourPath = os.path.expanduser('~')+'/Pictures/Digital Art/saved images for vid/1'

filelist = []

for f in os.listdir(yourPath):
    if f.lower().endswith('.png'):
        filelist.append (f)

f_name = 1

for f in filelist:
    while True:
        next_name = str(f_name)+'.png'
        if not next_name in filelist:
            break
        f_name += 1
    print ('Renaming {} to {}'.format(yourPath+'/'+f, next_name))
    # os.rename (yourPath+'/'+f, next_name)
    f_name += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure why you need to use <code>os.chdir()</code> to change directories, when you can just pass the path straight to <code>os.listdir()</code>. To rename files, you can use <a href="https://docs.python.org/3/library/os.html#os.rename" rel="nofollow noreferrer"><code>os.rename()</code></a>. You also need to increment the counter for the file names, since your current code you keep <code>fname</code> equal to <code>1</code> on each iteration. You need to keep the counter outside the loop and increment it within the loop. This is where you can use<a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a>, since you can use indexing instead. </p>
<p><strong>Basic version:</strong></p>
<pre><code>from os import listdir
from os import rename

from os.path import join

path = "path_to_images"

for i, f in enumerate(listdir(path), start=1):
    rename(join(path, f), join(path, str(i) + '.png'))
</code></pre>
<p>You can get the full paths using <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join()</code></a>, since <code>os.listdir()</code> doesn't include the full path of the file. The above code is also not very robust as it renames all files, and doesn't handle renaming already existent <code>.png</code> files.</p>
<p><strong>Advanced version:</strong></p>
<pre><code>from os import listdir
from os import rename

from os.path import join
from os.path import exists

path = "path_to_images"

extension = '.png'

fname = 1
for f in listdir(path):
    if f.endswith(extension):
        while exists(join(path, str(fname) + extension)):
            fname += 1
        rename(join(path, f), join(path, str(fname) + extension))
        fname += 1
</code></pre>
<p>Which uses <a href="https://docs.python.org/3/library/os.path.html#os.path.exists" rel="nofollow noreferrer"><code>os.path.exists()</code></a> to check if the file already exists.</p>
</div>
<div class="post-text" itemprop="text">
<p>use <a href="https://docs.python.org/3/library/os.html#os.rename" rel="nofollow noreferrer">os.rename</a></p>
<pre><code>import os
# following line is only for python 3. For python 2.7 directory should be a string.
# directory = os.fsencode(directory_in_str) 
for filename in os.listdir(directory):
    f_name=1
    f_ext= '.png'
    new_filename = '{}{}'.format(f_name, f_ext)
    os.rename(filename, new_filename)
    f_name += 1
</code></pre>
</div>
<span class="comment-copy">I don't see the code where you rename the file, am I missing something? you can rename it with os.rename if you want.</span>
<span class="comment-copy">You are forgetting to increase <code>fname</code> inside the loop.</span>
<span class="comment-copy">@usr2564301 How would I go by doing so? I'm so lost rn :/</span>
<span class="comment-copy">That ... would be <code>f_name += 1</code>. Maybe you should start with something simpler.</span>
<span class="comment-copy">If you do <code>for index, f in enumerate(os.listdir()):</code> you don't even have to bother with increment. Use <code>index+1</code> (index is 0-based)</span>
<span class="comment-copy">Thank you! I sincerely appreciate your help!</span>
<span class="comment-copy">@usr2564301 Yep I was editing my answer to include <code>os.path.join()</code>. Thanks.</span>
<span class="comment-copy">This will (attempt to) rename <b>all</b> files to <code>1.png</code>. OP also mentioned <i>not</i> doing the actual renaming, and only printing it to see if it <i>will</i> work.</span>
