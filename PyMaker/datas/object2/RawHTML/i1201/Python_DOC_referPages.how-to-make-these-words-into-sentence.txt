<div class="post-text" itemprop="text">
<p>I lemmatised several sentences, and it turns out the results like this,this is for the first two sentences.</p>
<pre><code>['She', 'be', 'start', 'on', 'Levofloxacin', 'but', 'the', 'patient', 'become', 'hypotensive', 'at', 'that', 'point', 'with', 'blood', 'pressure', 'of', '70/45', 'and', 'receive', 'a', 'normal', 'saline', 'bolus', 'to', 'boost', 'her', 'blood', 'pressure', 'to', '99/60', ';', 'however', 'the', 'patient', 'be', 'admit', 'to', 'the', 'Medical', 'Intensive', 'Care', 'Unit', 'for', 'overnight', 'observation', 'because', 'of', 'her', 'somnolence', 'and', 'hypotension', '.', '11', '.', 'History', 'of', 'hemoptysis', ',', 'on', 'Coumadin', '.', 'There', 'be', 'ST', 'scoop', 'in', 'the', 'lateral', 'lead', 'consistent', 'with', 'Dig', 'vs.', 'a', 'question', 'of', 'chronic', 'ischemia', 'change', '.']
</code></pre>
<p>which all the words are generated together like a list. but i need them to be like sentence by sentence, the output format would be better like this:</p>
<pre><code>['She be start on Levofloxacin but the patient become hypotensive at that point with blood pressure of 70/45 and receive a normal saline bolus to boost her blood pressure to 99/60 ; however the patient be admit to the Medical Intensive Care Unit for overnight observation because of her somnolence and hypotension .','11 . History of hemoptysis , on Coumadin .','There be ST scoop in the lateral lead consistent with Dig vs. a question of chronic ischemia change .'] 
</code></pre>
<p>can anyone help me please? thanks a lot </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>words=['She', 'be', 'start', 'on', 'Levofloxacin', 'but', 'the', 'patient', 'become', 'hypotensive', 'at', 'that', 'point', 'with', 'blood', 'pressure', 'of', '70/45', 'and', 'receive', 'a', 'normal', 'saline', 'bolus', 'to', 'boost', 'her', 'blood', 'pressure', 'to', '99/60', ';', 'however', 'the', 'patient', 'be', 'admit', 'to', 'the', 'Medical', 'Intensive', 'Care', 'Unit', 'for', 'overnight', 'observation', 'because', 'of', 'her', 'somnolence', 'and', 'hypotension', '.', '11', '.', 'History', 'of', 'hemoptysis', ',', 'on', 'Coumadin', '.', 'There', 'be', 'ST', 'scoop', 'in', 'the', 'lateral', 'lead', 'consistent', 'with', 'Dig', 'vs.', 'a', 'question', 'of', 'chronic', 'ischemia', 'change', '.']

def Wordify(words,sen_lim):

   Array=[]
   word=""
   sen_len=0

   for w in words:

       word+=w+" "
       if(w.isalnum()):

           sen_len+=1

       if(w=="." and sen_len&gt;sen_lim):

           Array.append(word)
           word=""
           sen_len=0

    return(Array)

print(Wordify(words,5))
</code></pre>
<p>Basically you append the characters to a new string and separate out sentence if there is a period , but also ensure that the current sentence has a minimum number of words. This ensures sentences that like "11." are avoided. </p>
<pre><code>sen_lim
</code></pre>
<p>is a parameter you could tune according to your convenience. </p>
</div>
<div class="post-text" itemprop="text">
<p>Try this code:</p>
<pre><code>final = []
sentence = []
for word in words:
    if word in ['.']: # and whatever other punctuation marks you want to use.
        sentence.append(word)
        final.append(' '.join(sentence))
        sentence = []
    else:
        sentence.append(word)

 print (final)
</code></pre>
<p>Hope this helps! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>A good starting point might be <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">str.join()</a>:</p>
<pre><code>&gt;&gt;&gt; wordsList = ['She', 'be', 'start', 'on', 'Levofloxacin']
&gt;&gt;&gt; ' '.join(wordsList)
'She be start on Levofloxacin'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try string concatenation by looping through the list</p>
<pre><code>list1 = ['She', 'be', 'start', 'on', 'Levofloxacin', 'but', 'the', 
'patient', 'become', 'hypotensive', 'at', 'that', 'point', 'with', 'blood', 
'pressure', 'of', '70/45', 'and', 'receive', 'a', 'normal', 'saline', 
'bolus', 'to', 'boost', 'her', 'blood', 'pressure', 'to', '99/60', ';', 
'however', 'the', 'patient', 'be', 'admit', 'to', 'the', 'Medical', 
'Intensive', 'Care', 'Unit', 'for', 'overnight', 'observation', 'because', 
'of', 'her', 'somnolence', 'and', 'hypotension', '.', '11', '.', 'History', 
'of', 'hemoptysis', ',', 'on', 'Coumadin', '.', 'There', 'be', 'ST', 
'scoop', 'in', 'the', 'lateral', 'lead', 'consistent', 'with', 'Dig', 'vs.', 
'a', 'question', 'of', 'chronic', 'ischemia', 'change', '.']
list2 = []
string = ""
for element in list1:
  if(string == "" or element == "."):
    string = string + element
  else:
    string = string + " " + element
list2.append(string)
print(list2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could try this:</p>
<pre><code># list of words.
words = ['This', 'is', 'a', 'sentence', '.']

def sentence_from_list(words):
    sentence = ""
    # iterate the list and append to the string.
    for word in words:
        sentence += word + " "
    result = [sentence]
    # print the result. 
    print result

sentence_from_list(words)
</code></pre>
<p>You may need to delete the last space, just before the '.' </p>
</div>
<span class="comment-copy">What is the logic behind the sentences?</span>
<span class="comment-copy">output = " ".joint(lemma_sentence)</span>
<span class="comment-copy">hi1 it does helped thanks lot! the only problem is , in my nlp task the "11." is treated as one word, by using your method the '11' and '.' has been separated into 2 words, is there a way to fix it? thx</span>
<span class="comment-copy">No , it does split it into a single word.This was the output I got ['She be start on Levofloxacin but the patient become hypotensive at that point with blood pressure of 70/45 and receive a normal saline bolus to boost her blood pressure to 99/60 ; however the patient be admit to the Medical Intensive Care Unit for overnight observation because of her somnolence and hypotension . ', '11 . History of hemoptysis , on Coumadin . ', 'There be ST scoop in the lateral lead consistent with Dig vs. a question of chronic ischemia change . '] "</span>
<span class="comment-copy">i mean there is a whitespace between '11' and '.'</span>
<span class="comment-copy">sorry i just saw that in my question description I didn't point put this detail. But actually i need no whitespace between '11' and '.'</span>
<span class="comment-copy">Oh , alright. In NLP tasks it helps though :) since each sentence is represented by occuring words. Sentences like "11." , "." are in general meaningless so I tried to generalize.</span>
