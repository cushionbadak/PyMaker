<div class="post-text" itemprop="text">
<p>I am trying to make a script to automatically browse a URL in Tor browser and after a few second terminate the process on the windows.
everything works fine actually, python randomly chooses a line in my URL.text file and open it in Tor browser using an OS command then I added a <code>sleep.time</code> for a short wait before terminating the process, but when I execute the code it waits on "os.system" until I manually close the browser. After that, the rest of the code executes fine.</p>
<p>What is wrong here? I can't find it.</p>
<p>Why does python wait on <code>os.system</code> line until I close the browser? Why doesn't it execute <code>sleep</code> after executing <code>os.system</code> command automatically?</p>
<pre><code>import time
import subprocess
import os
import random

def random_line(afile):
    line = next(afile)
    for num, aline in enumerate(afile, 2):
      if random.randrange(num): continue
      line = aline
    return line
i = 1
while i == 1:
    with open("C:\\Users\\TPK\\PycharmProjects\\MyScripts\\venv\\urls.txt" , "r") as urlfile:
        rndurl = random_line(urlfile)
    tor = "\"C:\\Users\\TPK\\PycharmProjects\\MyScripts\\venv\\TorBrowser\\Start Tor Browser.lnk\" " + rndurl
    os.system(tor)
    time.sleep(5)
    print ("after sleep")
    os.system("taskkill /im firefox.exe")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The way that <code>os.system</code> works is that it does not spawn a new process running in the background. Instead, it waits for the command to finish running and then continues on. In your case, the process finishes when you close the browser window. Rather than using <code>os.system</code>, I would recommend that you use <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess.run</code></a>. Instead of waiting for the process to finish, it spawns it and lets it run in the background. Just note that you will need to separate the command at each space and put it in a list. Like so: <code>subprocess.run(["C:\path\to\Start Tor Browser.lnk", "https://url.to.open"])</code></p>
</div>
<span class="comment-copy">Questions seeking debugging help ("<b>why isn't this code working?</b>") must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it <b>in the question itself</b>. Questions without a <b>clear problem statement</b> are not useful to other readers. See: <a href="https://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">it acts the same way as os.system</span>
<span class="comment-copy">Sorry, it should have been <code>subprocess.Popen</code>. The same arguments are used as with <code>subprocess.run()</code>.</span>
