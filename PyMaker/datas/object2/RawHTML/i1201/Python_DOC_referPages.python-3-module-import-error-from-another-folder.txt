<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/72852/how-to-do-relative-imports-in-python">How to do relative imports in Python?</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/30669474/beyond-top-level-package-error-in-relative-import">beyond top level package error in relative import</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/4383571/importing-files-from-different-folder">Importing files from different folder</a>
<span class="question-originals-answer-count">
                    21 answers
                </span>
</li>
</ul>
</div>
<p>Folder Structure:</p>
<pre><code>  main
   |__ sub1
      |__ __init__.py
   |__ sub2
      |__ test.py
</code></pre>
<p>I need to import inside <code>test.py</code>:</p>
<pre><code>from .. sub1 import SomeClass
</code></pre>
<p>It shows this error :</p>
<blockquote>
<p>ValueError: attempted relative import beyond top-level package.</p>
</blockquote>
<p>Thank you for responses.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a special use case for testing from outside the main source folder. <code>main</code> has no reason to be a package, are there could be reasons for not to make it one.</p>
<p>IMHO, the best way is to start tests from the main directory. As the current directory is always in <code>sys.path</code>, <code>sub1</code> will be directly importable and this would be enough:</p>
<pre><code>from sub1 import SomeClass
</code></pre>
<p>But depending on your dev environment, you may need to launch tests directly from the test directory or any directory other than main. In that case, I am unsure that it is really a best practice, and I only use that for my tests, but a simple trick is to add the parent folder of the test folder to <code>sys.path</code>.</p>
<p>Here is what could be the beginning of <code>test.py</code>:</p>
<pre><code>import os.path
import sys

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from sub1 import SomeClass
...
</code></pre>
<p>Take it for what it is: a <code>sys.path</code> trick that just allows to access the main source folder from the test folder.</p>
</div>
<div class="post-text" itemprop="text">
<p>Neither <code>main</code> nor <code>sub2</code> is a package because neither contains a <code>__init__.py</code>. See <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">the relevant Python docs</a> for more information.</p>
</div>
<span class="comment-copy">from which directory are you running <code>test.py</code>?</span>
<span class="comment-copy">Then how to import a class from this file?</span>
<span class="comment-copy">@Jamshy Try adding <code>__init__.py</code> files. They can be empty.</span>
