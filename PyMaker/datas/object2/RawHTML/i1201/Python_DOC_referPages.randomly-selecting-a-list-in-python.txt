<div class="post-text" itemprop="text">
<p>I am making a hangman game in Python, and I understand how to randomly select an item from a list, but I was wondering if there was a way to randomly select the list in general.</p>
<p>For example, I have two lists, list1 and list2
Is there a way to randomly select between list1 and list2, and then randomly select a word from the randomly selected list.</p>
<p>I hope that makes sense</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/random.html#random.choice" rel="noreferrer">random.choice</a> twice:</p>
<pre><code>import random

first = ['one', 'word']
second = ['two', 'more', 'and']

selected = random.choice(random.choice([first, second]))

print(selected)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>word
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random

# Create a list of your lists
list_of_lists = [lists1, list2, list3]

# Select a random list from your list of lists
random_list = random.choice(list_of_lists)

# Select a random word from the randomly selected list
random_word = random.choice(random_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>random.choice</code> to select a random list, and then use <code>random.choice</code> again to select a value from that list:    </p>
<pre><code>import random

list1 = ['1','2','3']
list2 = ['4','5','6']

word = random.choice(random.choice([list1, list2]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The two list case if covered by other answers. </p>
<p>If you have an arbitrarily nested, possibly irregular list (or sequence), you can write a recursive function.</p>
<pre><code>from collections import Sequence
import random

def go_deeper(x): 
     return (isinstance(x, Sequence) and not 
             isinstance(x, (str, bytes))) # and other sequence types you wish to exclude                                                                          

def select(candidate): 
     if go_deeper(candidate): 
         return select(random.choice(candidate)) 
     return candidate
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; l = ['foo', 'bar']                                                                                                 
&gt;&gt;&gt; select(l)                                                                                                          
'bar'
&gt;&gt;&gt;                                                                                                                    
&gt;&gt;&gt; l = [[[(0,)]]]                                                                                                        
&gt;&gt;&gt; select(l)                                                                                                          
0
&gt;&gt;&gt;                                                                                                                    
&gt;&gt;&gt; l = [1, 2, [3, 4, [5]], [[6, [7, 8]], 9]]                                                                          
&gt;&gt;&gt; select(l)                                                                                                          
9
&gt;&gt;&gt; select(l)                                                                                                          
1
&gt;&gt;&gt; select(l)                                                                                                          
2
</code></pre>
</div>
<span class="comment-copy">make a list that contains both other lists and <code>random.choice()</code> that list</span>
<span class="comment-copy">it is the same as selecting a random element from a list, only the lists are your elements!</span>
