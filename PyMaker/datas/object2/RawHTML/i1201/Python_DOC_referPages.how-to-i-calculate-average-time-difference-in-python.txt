<div class="post-text" itemprop="text">
<p>I have multiple times as a string:</p>
<pre><code>"2018-12-14 11:20:16","2018-12-14 11:14:01","2018-12-14 11:01:58","2018-12-14 10:54:21"
</code></pre>
<p>I want to calculate the average time difference between all these times. The above example would be: </p>
<pre><code>2018-12-14 11:20:16 - 2018-12-14 11:14:01 = 6 minutes 15 seconds
2018-12-14 11:14:01 - 2018-12-14 11:01:58 = 12 minutes 3 seconds
2018-12-14 11:14:01 - 2018-12-14 11:01:58 = 7 minutes 37 seconds
</code></pre>
<p>(375s+723s+457s)/3 = 518.3 seconds = <strong>8 minutes 38.33 seconds</strong> (If my hand math is correct.)</p>
<p>I have all the datestrings in an array. I assume it's easy to convert it to a timestamp, loop over it to calculate the differences and then the average?
I just began to learn python and this is the first program that I want to do for myself.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have a bunch of problems. I'm not going to give you solutions to all of these. Just hints to get you started.</p>
<p>I assume you know...</p>
<ul>
<li>... how to convert a time string to a <code>datetime.datetime</code> object,</li>
<li>... how to calculate the difference between two, i.e., a <code>datetime.timedelta</code>, </li>
<li>... how to compute a mean value (<code>datetime.timedelta</code> supports both addition and division by <code>int</code> or <code>float</code>).</li>
</ul>
<p>So the only complicated step in this task will be, how to calculate the differences between adjacent items in a list. I'm going to show you this.</p>
<p>When you have a list of items, you can <em>slice</em> and <em>zip</em> to produce an iterator to iterate the pairs of adjacent elements in the list.</p>
<p>For example, try this (untested code):</p>
<pre><code>l = range(10)
for i,j in zip(l, l[1:]):
    print(i, j)
</code></pre>
<p>Then build a list to contain the differences, e.g., using a <em>list comprehension</em>:</p>
<pre><code>deltas = [i-j for i,j in zip(l, l[1:])]
</code></pre>
<p>Now <a href="https://stackoverflow.com/q/3617170/1025391">calculate your mean value</a> and you're done.</p>
<p>For reference:</p>
<ul>
<li><a href="https://docs.python.org/3/library/datetime.html#datetime-objects" rel="nofollow noreferrer">https://docs.python.org/3/library/datetime.html#datetime-objects</a></li>
<li><a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer">https://docs.python.org/3/library/datetime.html#timedelta-objects</a></li>
<li><a href="https://stackoverflow.com/questions/509211/understanding-pythons-slice-notation">Understanding Python's slice notation</a></li>
<li><a href="https://stackoverflow.com/q/5434891/1025391">Iterate a list as pair (current, next) in Python</a></li>
<li><a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions</a></li>
<li><a href="https://stackoverflow.com/q/3617170/1025391">Average timedelta in list</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>from datetime import datetime
import numpy as np

ts_list = ["2018-12-14 11:20:16","2018-12-14 11:14:01","2018-12-14 11:01:58","2018-12-14 10:54:21"]
dif_list = []
for i in range(len(ts_list)-1):
    dif_list.append((datetime.strptime(ts_list[i], '%Y-%m-%d %H:%M:%S')-datetime.strptime(ts_list[i+1], '%Y-%m-%d %H:%M:%S' )).total_seconds())
avg = np.mean(dif_list)
print(avg)
</code></pre>
<p>result is 518.3333333333334 seconds.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3096953/how-to-calculate-the-time-interval-between-two-time-strings">How to calculate the time interval between two time strings</a></span>
<span class="comment-copy">If you want it to do yourself..I assume you should try out something..post code of what you tried..where are you getting errors and so on</span>
<span class="comment-copy">The dup target will get you the intervals, I am assuming you can then do the average.</span>
<span class="comment-copy">also, have a look at <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer">itertools.combinations</a></span>
