<div class="post-text" itemprop="text">
<p>new to python here. I am trying to learn how to perform operations on a list that has mixed types:</p>
<pre><code>mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]
</code></pre>
<p>If the item is a str, I want to add it to output_str, and if it is an int I want to sum it. This is what I have tried:</p>
<pre><code>mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]

for x in mylist:
    output_str = ''
    if isinstance(x, str):
        output_str += x
        print(output_str)
    elif isinstance(x, int):
        print(sum(x))
</code></pre>
<p>My expected output:</p>
<pre><code>'jacksnaketumbleweed'
68
</code></pre>
<p>But I get the following error:</p>
<pre><code>TypeErrorTraceback (most recent call last)
&lt;ipython-input-404-926417194c69&gt; in &lt;module&gt;()
      5         output_str += x
      6     elif isinstance(x, int):
----&gt; 7         print(sum(x))
TypeError: 'int' object is not iterable
</code></pre>
<p>I do not understand why this is happening.
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>sum</code> function is intended to sum all the elements in an array, which explains the error you're getting. Also, if you keep <code>output_str</code> being declared inside your <code>for</code> function, everytime if scans a new value from your list, <code>output_str</code> would reset. That's why I am now declaring it only once, before the <code>for</code> even starts.</p>
<p>I also added the variable <code>final</code>, which will be responsible to store the sum of all numbers so far. So what we have is:</p>
<pre><code>mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]
final = 0
output_str = ''

for x in mylist:

    if isinstance(x, str):
        #here, we will concatenate each x value with the current value of output_str
        output_str += x

    elif isinstance(x, int):
        #and here, everytime x is a number, we will sum it to final's current value. This operation is equal to final = final + 1
        final += x

print(output_str)
print(final)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use list comprehension which is faster and more readable and simpler:</p>
<pre><code>mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]

int_sum = sum([i for i in mylist if isinstance(i, int)])
str_join = ' '.join([i for i in mylist if isinstance(i, str)])

print(str_join)
print(int_sum)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>C:\Users\Documents&gt;py test.py
jack snake tumbleweed
68
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't do sum on single element, sum requires iterable input type. You can do that like this:</p>
<p>Code:</p>
<pre><code>mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]

output_str = ''
sum_of_int = 0

for x in mylist:
    if isinstance(x, str):
        output_str += x
    elif isinstance(x, int):
        sum_of_int += x

print(output_str)
print(sum_of_int)
</code></pre>
<p>Output:</p>
<pre><code>jacksnaketumbleweed
68
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also do it like this:</p>
<pre><code>mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]
output_str = ''
sum = 0

for i in mylist:
    if type(i) == str:
        output_str += i   
    elif type(i) == int:
        sum += i
</code></pre>
<p>Now <code>sum</code> will contain the sum of integers in your list, and <code>output_str</code> will contain the concatenation of all of the strings in your list.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum</a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">join</a>:</p>
<pre><code>my_list = ['jack', 12, 'snake', 17, 'tumbleweed', 39]
a, b = sum(e for e in my_list if isinstance(e, int)), ''.join(s for s in my_list if isinstance(s, str))
print(a, b)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>68 jacksnaketumbleweed
</code></pre>
<p>In case the list includes both float and integers you could use <a href="https://docs.python.org/3.7/library/numbers.html#numbers.Number" rel="nofollow noreferrer">Number</a>:</p>
<pre><code>from numbers import Number

my_list = ['jack', 12, 'snake', 17, 'tumbleweed', 39.0]
a, b = sum(e for e in my_list if isinstance(e, Number)), ''.join(s for s in my_list if isinstance(s, str))
print(a, b)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>68.0 jacksnaketumbleweed
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]

total = 0
output_str = ''
for x in mylist:
    if isinstance(x, str):
        output_str = output_str + x
    elif isinstance(x, int):
        total += x
print(output_str)
print(total)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do:</p>
<pre><code>mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]
ints = [str(i).isnumeric() for i in mylist]
ix_int = np.flatnonzero(ints)
np.array(mylist)[ix_int].astype(int).sum()
68
</code></pre>
<p>And for the strings:</p>
<pre><code>ix_str = np.setdiff1d(np.arange(len(mylist)), indices)
''.join(np.array(mylist)[ix_str])
'jacksnaketumbleweed'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum()</a> function expects an iterable. Try this:</p>
<pre><code>from functools import reduce

mylist = ['jack', 12, 'snake', 17, 'tumbleweed', 39]
n, s = reduce(lambda a, x: (a[0] + x, a[1]) if isinstance(x, int) else (a[0], a[1] + x), mylist, (0, ''))
print('n = {}; s = {};'.format(n, s))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>n = 68; s = jacksnaketumbleweed;
</code></pre>
</div>
<span class="comment-copy">What is the expected output?</span>
<span class="comment-copy">What does it mean to sum a single number? A sum is the addition of multiple numbers.</span>
<span class="comment-copy">I edited the post and added my expected output.</span>
<span class="comment-copy"><code>sum</code> requires an iterable, you passed an <code>int</code>.</span>
<span class="comment-copy">Thank you this worked! I will accept when I can.</span>
