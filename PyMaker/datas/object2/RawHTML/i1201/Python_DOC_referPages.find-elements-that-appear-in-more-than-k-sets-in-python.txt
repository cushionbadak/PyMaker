<div class="post-text" itemprop="text">
<p>I am implementing a basic spell-correction system and I have built an inverted index for my domain's language, where every character bigram is mapped to a list of words that contain that bigram. </p>
<p>Now I want to find all words that share more than 3 character bigrams with the given word <code>w</code>. So the main problem is: given a set of lists, how can one efficiently find elements that occur in 3 or more of them? </p>
<p>For example, given sets:</p>
<pre><code>('a', 'b', 'c', 'd') , ('a', 'e', 'f', 'g'), ('e', 'f', 'g', 'h'), ('b', 'c', 'z', 'y'), ('e', 'k', 'a', 'j')
</code></pre>
<p>I like to get the output: </p>
<pre><code>('a', 'e')
</code></pre>
<p>since <code>a</code> and <code>e</code> have each appeared in more than 3 sets.</p>
<p>I would appreciate your ideas.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try using <code>collections.Counter</code>:</p>
<pre><code>from collections import Counter

data = [
    ('a', 'b', 'c', 'd'),
    ('a', 'e', 'f', 'g'),
    ('e', 'f', 'g', 'h'),
    ('b', 'c', 'z', 'y'),
    ('e', 'k', 'a', 'j'),
]
c = Counter()
for e in data:
    c.update(e)

# print(c)
# for k, v in c.items():
#     if v &gt;= 3:
#         print(k, v)
</code></pre>
<p>You get the output by using this (or something similar):</p>
<pre><code>&gt;&gt;&gt; [k for k, v in c.items() if v &gt;= 3]
['a', 'e']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Additional to @Ralf. You can use dicts to construct a histogram</p>
<pre><code>someCollection = [('a', 'b', 'c', 'd') , ('a', 'e', 'f', 'g'), ('e', 'f', 'g', 'h'), ('b', 'c', 'z', 'y'), ('e', 'k', 'a', 'j')]
hist = {}
for collection in someCollection:
    for member in collection:
        hist[member] = hist.get(member, 0) + 1
</code></pre>
<p>Hist now is:</p>
<pre><code>{'a': 3,
 'b': 2,
 'c': 2,
 'd': 1,
 'e': 3,
 'f': 2,
 'g': 2,
 'h': 1,
 'z': 1,
 'y': 1,
 'k': 1,
 'j': 1}
</code></pre>
<p>Which can be sorted with <code>sorted(hist.items(), key = lambda x[1]) # sort along values</code> </p>
</div>
<span class="comment-copy">Show your code and your expected output</span>
<span class="comment-copy">Read about <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer">set</a></span>
<span class="comment-copy">@ycx I added an example.</span>
<span class="comment-copy">@stovfl That didn't help me much.</span>
<span class="comment-copy">Thanks, I used this but I'm not sure it's the most efficient way.</span>
