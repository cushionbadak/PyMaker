<div class="post-text" itemprop="text">
<p>I have text file with this example content:</p>
<pre><code>12/13/18, 14:06 - her:IMG-20181213-WA0005.jpg (file attached)12/13/18, 14:06 - her:PTT-20181213-WA0006.opus (file attached)12/13/18, 14:07 - kristal: its not in the right quality?12/13/18, 14:14 - her:bla bla bla bla12/13/18, 14:43 - kristal: ok for this size12/13/18, 14:43 - kristal: somthing somthing
12/13/18, 14:43 - kristal: rect12/13/18, 14:43 - Enav Sharon-kristal: need square12/13/18, 14:48 - her:sending files12/13/18, 14:49 - Enav Sharon-kristal: ok then
</code></pre>
<p>How do I make a code that reads all the text and divide it to rows (when you see 12 break the line) and save it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Are you sure you want a <code>new line</code> before every <code>12</code>?</p>
<p>I see that it comes from a <em>date</em>, but if you look at:</p>
<pre><code>12/13/18, 14:06 - her:IMG-20181213-WA0005.jpg
</code></pre>
<p>there is a <code>12</code> in the text where you <strong>might not want a new line</strong>.</p>
<p>The solution might be robust if you break before a <strong>date</strong>:</p>
<pre><code>with open('file.txt', 'r') as file: # the file you want to read
    with open('new_file.txt', 'w') as new_file: # the file you want to save
        for line in file.readlines():

            new_line = re.sub('(\d+/\d+/\d+)', '\n\g&lt;1&gt;', line).strip()) # find all dates

            new_file.write('{}\n'.format(new_line)) # save to new file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the preferred output is a list of rows, try <em>split()</em></p>
<pre><code>rows = text.split("12")
</code></pre>
<p>And for joining these rows, use <em>join()</em></p>
<pre><code>linebreaked_text = "/n12".join(rows)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just use the string replace() method to do this:</p>
<pre><code>your_long_string.replace('12', '\n12')
</code></pre>
<p>You can be more specific; maybe you're worried some of the messages contain '12' outside the date:</p>
<pre><code>your_long_string.replace('12/', '\n12/')
</code></pre>
<p>If you need to be even more robust, you need to learn to use regular expressions (that could get a bit complicated; <a href="https://docs.python.org/3/howto/regex.html#regex-howto" rel="nofollow noreferrer">have a look</a>).</p>
<p>You can split this into an array of lines:</p>
<pre><code>your_long_string.replace('12/', '\n12/').splitlines()
</code></pre>
<p>You can loop through each line like this:</p>
<pre><code>for line in your_long_string.replace('12/', '\n12/').splitlines():
    # do whatever
    print(line)
</code></pre>
<p>Or you can just save it back to a text file:</p>
<pre><code>file = open(filename, 'r')
long_string = file.read()
file.close()
with open(filename, 'w') as file:
    file.write(long_string.replace('12/', '\n12/'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is so simple :D</p>
<p>If you want result to be list,</p>
<pre><code>data = string.split(‚Äú12‚Äù)
</code></pre>
<p>or if you want result to be string divided by line,</p>
<pre><code>data = ‚Äú\n‚Äù.join(string.split(‚Äú12‚Äù))
</code></pre>
<p>Python has many good methods üòÅüòÅ</p>
</div>
<span class="comment-copy">@graphicsgraphics glad to help :) If you feel like your question has been answered, feel free to accept an answer.</span>
