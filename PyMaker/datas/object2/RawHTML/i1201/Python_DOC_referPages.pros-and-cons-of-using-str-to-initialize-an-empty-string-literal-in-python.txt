<div class="post-text" itemprop="text">
<p>Unlike in other languages like C#, there is no way to import an empty string from Python standard library. However, there is a built-in function <code>str()</code>, which defaults to an empty string when no argument was supplied.</p>
<p>What would be the pros and cons of using <code>str()</code>--compared to <code>''</code> or <code>empty_str = ''</code>--to denote an empty string? I guess the overhead would be negligible, and it is as readable as <code>''</code> or <code>""</code>. For one thing, it is visually clear that the variable is a <code>str</code> even in Notepad. One obvious disadvantage is that you have to type the keyboard a few more times than <code>''</code> although not as many as <code>empty_str</code>. Can you think of any other merits or demerits?</p>
</div>
<div class="post-text" itemprop="text">
<p>It has exactly the same effect, and <code>''</code> (or <code>""</code>) should be used (similar <code>[]</code> for <code>list</code>, and <code>()</code> for <code>tuple</code>, <code>{}</code> for <code>dict</code>).</p>
<p>And Python will indeed have an internal global cache for small constants (short strings, including the empty string, and small numbers). Check that by <code>id('')</code> or <code>id(0)</code>, it will very likely always return the same. (This is implementation specific, but CPython will behave this way.)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>s = ''</code>.</p>
<p>First, Python itself is not the fastest language in universe, and Python developers are not supposed to make such kind of optimization, like creating global variables for empty constants or optimizing variable initialization with constants. Your code will be considered as not maintainable, because others would not understand your purpose.</p>
<p>Second, any static code analyzer will always understand the type of your variable from a constant. But when function is called, analyzer has to find the declaration and get the return value type. I dont speak about <code>str()</code> - as a builtin, it's return type is well known to analyzers. But in general approach is not good, because in Python programmers not always explicitly define the return value type of functions. </p>
</div>
<span class="comment-copy">From the <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">docs</a> it defaults to returning <code>''</code> so the negligible constant time check to see if <i>object</i> was passed shouldn't matter. I declare empty string variables as <code>var = ''</code> because only assignment needs to occur.</span>
<span class="comment-copy">"For one thing, it is visually clear that the variable is a str even in Notepad" - you really shouldn't be writing your code in Notepad.</span>
<span class="comment-copy">I'm voting to close this question as primarily opinion based since there are no purely technical reasons to choose or the other (even if the general idiom is to use a string literal here).</span>
