<div class="post-text" itemprop="text">
<p>I have this code:</p>
<pre><code>from itertools import groupby
a = [[1,'n'],[2,'n'],[3,'n'],[4,'d'],[5,'n']]
b = [list(group) for key, group in groupby(a, lambda x: x[1] if x[1]=='n' else None)]
print(b)
</code></pre>
<p>Output:</p>
<pre><code>[[[1, 'n'], [2, 'n'], [3, 'n']], [[4, 'd']], [[5, 'n']]]
</code></pre>
<p>Expected output:</p>
<pre><code>[[[1, 'n'], [2, 'n'], [3, 'n']], [[5, 'n']]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You put the <code>if</code> in the wrong place. It should be a filter to the list comprehension, not part of the <code>groupby</code> key function.</p>
<pre><code>&gt;&gt;&gt; [list(group) for key, group in groupby(a, lambda x: x[1]) if key=='n']
[[[1, 'n'], [2, 'n'], [3, 'n']], [[5, 'n']]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This finds the longest group, without knowing <code>'n'</code> to be it:</p>
<pre><code>a = [[1,'n'],[2,'n'],[3,'n'],[4,'d'],[5,'n'],[6,'q'],[6,'q'],[6,'q'],[6,'q'],[6,'q']]

k = max( (list(grp) for key,grp in groupby(a,lambda x:x[1])), key=len)  
print(k)
</code></pre>
<p>Output:</p>
<pre><code>[[6, 'q'], [6, 'q'], [6, 'q'], [6, 'q'], [6, 'q']]
</code></pre>
<p>If there are two groups of same length, the first one (irrespect. of 2nd element) is outputted.</p>
<hr/>
<p>This is a "unrolled" variant spezialized in finding the longest group of elements with <code>'n'</code> as second element - using <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">max()</a>:</p>
<pre><code>a = [[1,'n'],[2,'n'],[3,'n'],[4,'d'],[5,'n']]

result = [[]]
for e in a:
    if e[1] == 'n':             # if 'n' 2nd element, add to list
        result[-1].append(e)
    elif result[-1]:
        result.append([])       # if not, append new sublist

longest = max(result, key=len)  # get the longest one from all lists

print(longest)
</code></pre>
<p>Output:</p>
<pre><code>[[1, 'n'], [2, 'n'], [3, 'n']]
</code></pre>
<p>Doku:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">max(iterable, *[, key, default])</a></li>
</ul>
</div>
<span class="comment-copy">you mean to <i>filter</i> elements, not to group them. where should the other elements go?</span>
<span class="comment-copy">you mean by value? the expected output shows you are filtering by value 'n'.</span>
<span class="comment-copy">filter: <code>b = [x for x in a if x[1]=='n']</code></span>
<span class="comment-copy">yes, by value 'n', the groupby has a key value where I can group the list by the second value, but I want also to group them if the value is 'n'</span>
<span class="comment-copy">You simply want to filter the list?</span>
<span class="comment-copy">That is perfect, Thank you!</span>
<span class="comment-copy">That is not what I mean. I want to find the largest group of 'n' that go one after another:          [[1, 'n'], [2, 'n'], [3, 'n']]</span>
<span class="comment-copy">@IgorDragushhak  - sounds as if that fact is missing from your question - please edit.</span>
<span class="comment-copy">[5, 'n'] can't be in that group as it is divided by [4, 'd']</span>
