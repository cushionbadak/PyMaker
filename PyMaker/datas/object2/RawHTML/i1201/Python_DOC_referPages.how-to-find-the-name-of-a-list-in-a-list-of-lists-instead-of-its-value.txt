<div class="post-text" itemprop="text">
<p>I am trying to find the name of a list in a list of lists (is there a specific name for "list of lists"?).</p>
<p>For example I have the following lists:</p>
<pre><code>x= ["a","b"]
y= ["c","d"]
z= [x,y] 
</code></pre>
<p>If I now want to know what is the name of the first list in list "z" I would try like that:</p>
<pre><code>print(z[0])
</code></pre>
<p>But instead of "x" I get the value of x ("a","b")</p>
<ul>
<li>How can I get the output "x"? </li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You want to use a dictionary instead of a list. Where a list is just an enumeration of values, a dictionary is a key-value data structure.</p>
<p>This is how your example would look as a dictionary literal:</p>
<pre><code>{
    "x": ["a", "b"],
    "y": ["c", "d"],
}
</code></pre>
<p>Unlike a list, a dictionary does not preserve the order of elements however! If you had an application where you needed to preserve order, you can use an <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">OrderedDict</a>. <strong>UPDATE:</strong> This paragraph is no longer true as of Python 3.7.</p>
</div>
<div class="post-text" itemprop="text">
<p>Having the name of variable as your output is not possible, unless you change some strategies in your code, for e.g:</p>
<pre><code>x = ["a", "b"]
y = ["c", "d"]
z = {'x': x, 'y': y}
</code></pre>
<p>using dictionaries <strong>might</strong> be better suited to your problem. You can then search for value ["a", "b"] and reach the name 'x'.</p>
</div>
<div class="post-text" itemprop="text">
<p>a list is a mutable datatype in python. so with</p>
<pre><code>x = ["a", "b"]
</code></pre>
<p>python will allocate some memory and store the adress in x.
so x is internally something like:</p>
<pre><code>&lt;List with data at 0x123456789&gt;
</code></pre>
<p>when you make z, python allocates some memory and stores the adress in z
then, it will store the adresses of x and y in the memory of z.
so z is internally:</p>
<pre><code>[&lt;List with data at 0x123456789&gt;, &lt;List with data at 0x987654321&gt;]
</code></pre>
<p>now you can see that there is no information of the name of the variable which also stores the adress 0x123456789</p>
<p><strong>Summary:</strong> you can't get the variable name of a list object.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe just put the list name at the start of each list and instead use z[0][0] to get the name?</p>
</div>
<span class="comment-copy">You can't. Normally variable names are just for you. If you want that, you should save them in a string.</span>
<span class="comment-copy">To answer your other question, one would often refer to a "list of lists" as a "nested list".</span>
<span class="comment-copy">This is impossible - names know what objects they point to, objects don't know which names point to them. FWIW, this list could have a dozen names pointing to it in different scopes, so even if an object knew which names were pointing to it, it still wouldn't be of any use. Also, consider the case where you rebind <code>x</code> after creating <code>z</code>, what should be "the name" of <code>z[0]</code> then ?</span>
<span class="comment-copy">NB: you definitly want to read this about how python variables work: <a href="https://nedbatchelder.com/text/names.html" rel="nofollow noreferrer">nedbatchelder.com/text/names.html</a></span>
<span class="comment-copy">@bruno desthuilliers Thank you for the link :)</span>
<span class="comment-copy"><i>Prior to Python 3.6</i> a dictionary does not preserve order. In 3.6 it's an implementation detail and in 3.7 order is guaranteed.</span>
<span class="comment-copy">@roganjosh Whoa, thanks for sharing. I'll update my answer.</span>
