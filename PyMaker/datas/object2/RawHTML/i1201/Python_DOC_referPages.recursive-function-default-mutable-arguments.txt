<div class="post-text" itemprop="text">
<p>Let's say you have the function: <code>def f(..., visited= set())</code>. </p>
<p>Inside, you call <code>f()</code> again. </p>
<p>In this recursive call, if you don't pass visited, will create a new visited set()?</p>
</div>
<div class="post-text" itemprop="text">
<p>No. The default argument is processed <strong>only once</strong> when the <code>def</code> statement is first run. So if you don't pass another argument for <code>visited</code>, the same set gets reused and can often lead to unexpected results.</p>
<p>From the <a href="https://docs.python.org/3/tutorial/controlflow.html#default-argument-values" rel="nofollow noreferrer">Python documentation</a>:</p>
<blockquote>
<p>The default values are evaluated <strong>at the point of function definition</strong> in the <em>defining</em> scope, so that ...</p>
</blockquote>
<p>as well as the <strong>Important warning</strong> below.</p>
<blockquote>
<p>The default value is evaluated only once. This makes a difference when the default is a mutable object such as a list, dictionary, or instances of most classes. For example, the following function accumulates the arguments passed to it on subsequent calls:</p>
</blockquote>
</div>
<span class="comment-copy">No, it will keep the same set. This is a common mistake. Just use <code>None</code> as a default and initialize a new empty set if <code>visited is None</code>.</span>
<span class="comment-copy">Do you understand the behaviour in general: <a href="https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument" title="least astonishment and the mutable default argument">stackoverflow.com/questions/1132941/â€¦</a> If so. why would you expect a recursive call to behave any differently from any other function call?</span>
<span class="comment-copy"><code>For example, the following function accumulates the arguments passed to it on subsequent calls:</code> What function?</span>
<span class="comment-copy">@nicholishen Click the link and read the documentation.</span>
