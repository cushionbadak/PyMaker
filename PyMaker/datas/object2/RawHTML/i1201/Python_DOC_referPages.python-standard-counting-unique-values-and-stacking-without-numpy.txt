<div class="post-text" itemprop="text">
<p>I have a my_list which looks like this: </p>
<pre><code>[['root', '151.62.163.222'], ['tergul', '151.62.163.222'], ['root', '201.179.14.4'], ['root', '201.179.14.4'], ['admin', '201.179.14.4'], ['admin', '201.179.14.4'], ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202']]
</code></pre>
<p>Now, I want to count the number of unique IP Adresses and stack them together with their counts. The result should be a list and look like this: </p>
<pre><code>[['151.62.163.222', '2'],['201.179.14.4', '4'],['10.0.0.202', '6']
</code></pre>
<p>I have code that does this with numpy arrays:</p>
<pre><code>  unq, count = np.unique(my_array[:,1], axis=0, return_counts=True)
  failed_per_IP = np.column_stack((unq, count))
</code></pre>
<p>I cannot use numpy as it is not installed on the server I am running it on. How would I do this using Python standard libraries and only lists? </p>
</div>
<div class="post-text" itemprop="text">
<p>This should do the job:</p>
<pre><code>from collections import Counter

lst = [['root', '151.62.163.222'], 
       ['tergul', '151.62.163.222'],
       ['root', '201.179.14.4'],
       ['root', '201.179.14.4'],
       ['admin', '201.179.14.4'],
       ['admin', '201.179.14.4'],
       ['lemming', '10.0.0.202'],
       ['lemming', '10.0.0.202'],
       ['lemming', '10.0.0.202'],
       ['lemming', '10.0.0.202'],
       ['lemming', '10.0.0.202'],
       ['lemming', '10.0.0.202']]
newLst = [t2 for t1, t2 in lst ]
print(Counter(newLst))
Counter({'10.0.0.202': 6, '201.179.14.4': 4, '151.62.163.222': 2})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">collections.Counter</a>:</p>
<pre><code>from collections import Counter

data = [['root', '151.62.163.222'], ['tergul', '151.62.163.222'], ['root', '201.179.14.4'], ['root', '201.179.14.4'],
 ['admin', '201.179.14.4'], ['admin', '201.179.14.4'], ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202'],
 ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202'], ['lemming', '10.0.0.202']]

result = [list(item) for item in Counter(address for _, address in data).items()]

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[['201.179.14.4', 4], ['151.62.163.222', 2], ['10.0.0.202', 6]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Counter is good but if you are interested in a more in depth implementation you can use a dictionary and keep track of the counts as you traverse the IPs.</p>
<p>This is a good exercise but a cleaner approach definitely uses a counter. </p>
</div>
<span class="comment-copy">One of the standard modules has a Counter class or function.</span>
