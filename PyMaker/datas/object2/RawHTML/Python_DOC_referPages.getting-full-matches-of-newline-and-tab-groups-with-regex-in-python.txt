<div class="post-text" itemprop="text">
<p>Code is supposed to extract the <code>\n\t</code> groups. It always starts with <code>\n</code> but <code>\t</code> can be 0 or more, with substrings in between them    </p>
<pre><code>def longestAbsolutePath(string):
...
paths[path] = r'dir\n\tsubdir1\n\t\tfile1'
special = re.search(r'(\\n(\\t)*)',paths[path])
print special
valid = True
if len(special.groups()) &gt; 1:
    # do something
...
return longest
</code></pre>
<p>In the above test string, which is <code>dir\n\tsubdir1\n\t\tfile1</code>, I am expecting to get <code>\n\t</code> and <code>\n\t\t</code> in return.<br/>
I have tried <code>re.search</code> and <code>re.findall</code> but was not able to get 2 full matches, because it is returning <code>None</code> and <code>special</code> is printing:  <code>AttributeError: 'NoneType' object has no attribute 'groups'</code>.<br/>
How can I search the string in question to get 2 expected groups?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>re.search</code> method will return the first match only, you need to use <code>re.findall</code> or <code>re.finditer</code>. Besides, the pattern is better written with a non-capturing group, <code>(?:...)</code>, since you do not use the value afterwards, and it messes up <code>re.findall</code> output if you use this method.</p>
<pre><code>paths[path] = r'dir\n\tsubdir1\n\t\tfile1'
special = re.findall(r'\\n(?:\\t)*', paths[path])
if len(special) &gt; 1:
    # do something
</code></pre>
<p>See the <a href="https://ideone.com/ItfW8W" rel="nofollow noreferrer">Python demo</a></p>
</div>
<span class="comment-copy"><code>...</code> has no place in. A minimal complete verifiable example <a href="http://www.stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a></span>
<span class="comment-copy">thanks, why is that not a default. people usually want a full match</span>
<span class="comment-copy">@RidhwaanShakeel It is actually a very nice feture. I have answered lots of questions and hear people complain there is no method like <code>re.findall</code> in their programming language.</span>
