<div class="post-text" itemprop="text">
<p>On a developer site like PyPI, when a module says it supports Python 3 (like the <a href="https://pypi.python.org/pypi/requests/2.5.0" rel="nofollow"><code>requests</code> package</a>), can I use it with any Python 3 release or is it literally Python 3.0?</p>
<p>If it does mean the latest Python version, how can you be sure that it is true? For example if the project has been untouched for like 1 or 2 years?</p>
</div>
<div class="post-text" itemprop="text">
<p>Supporting Python 3 means supporting Python 3 up to the current point release.</p>
<p>Python point releases are <em>backward compatible</em>. What works on 3.0 should generally work on 3.4. See <a href="https://www.python.org/dev/peps/pep-0387/" rel="nofollow">PEP 387</a> for the general guidelines on this policy. Python 3.4 added some <a href="https://docs.python.org/3/whatsnew/3.4.html#deprecations-in-the-python-api" rel="nofollow">deprecations</a> but none of these will affect packages that were once only written for 3.0, at least until Python 3.5 or 3.6 are released.</p>
<p>Exceptions are more easily made for C extensions. Python 3.3 saw a <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-393-flexible-string-representation" rel="nofollow">new internal Unicode format</a>, but support for the old Unicode C APIs is still present in 3.4. </p>
<p>The 3.4 deprecations are for the most part for code that has been <em>extremely rarely</em> used, if at all. Any code that uses features that are now slated for removal should trigger warning messages.</p>
<p>For future Python 3.x releases, just download the package and use it. If anything were to break, look through the <em>Deprecated</em> entries in recent <a href="https://docs.python.org/3/whatsnew/" rel="nofollow">Python 3 release notes</a> to see if the project may have been using a feature since removed.</p>
<p>In any case, try and check the project documentation; a good project will list exact versions on which they have tested the package. The <a href="http://docs.python-requests.org/en/latest/" rel="nofollow"><code>requests</code> project</a> states:</p>
<blockquote>
<p>Python 2.6â€”3.4</p>
</blockquote>
</div>
<span class="comment-copy">Although the question is not closely related to programming as in producing code, and it should be posted in <a href="http://programmers.stackexchange.com/">programmers.stackexchange.com</a> or something like that, generally I don't see why it is downvoted, it is a legitimate question,.</span>
<span class="comment-copy">I am not sure how to clarify this question further, since someone obviously knew what I was asking directly and answered.</span>
<span class="comment-copy">It is a bad practice to down vote and not leave a comment as to why. No  actual contribution to the quality.</span>
<span class="comment-copy">Not the downvoter, But do Include a line about the OPs second para too.</span>
<span class="comment-copy">@BhargavRao: That does address the second paragraph too. They can be sure because Python 3 hasn't removed anything that has been deprecated anything <i>yet</i>, all 3.x releases are fully backwards compatible.</span>
<span class="comment-copy">I don't get the downvoters, this is a good answer. +1</span>
<span class="comment-copy">Your answer is on point, thank you!</span>
<span class="comment-copy">I think <a href="http://legacy.python.org/dev/peps/pep-0352/#retracted-ideas" rel="nofollow noreferrer">this</a> is an exception ;-) to what you're saying about 3.x always being backward compatible with 3.0. Also, personally I'd be somewhat reluctant about just downloading the package and seeing what breaks.</span>
