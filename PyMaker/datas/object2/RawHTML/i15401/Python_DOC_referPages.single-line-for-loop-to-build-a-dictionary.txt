<div class="post-text" itemprop="text">
<p>I'm constructing a dictionary (which I'll later make into a JSON string). I construct it like this:  </p>
<pre><code>data = {}
for smallItem in bigList:
    data[smallItem] = smallItem
</code></pre>
<p>How can I make that for loop one line?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/reference/expressions.html#dictionary-displays" rel="noreferrer">dict comprehension</a>:</p>
<pre><code>data = {smallItem:smallItem for smallItem in bigList}
</code></pre>
<p>You might also use <a href="https://docs.python.org/3/library/functions.html#func-dict" rel="noreferrer"><code>dict</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="noreferrer">generator expression</a>:</p>
<pre><code>data = dict((smallItem, smallItem) for smallItem in bigList)
</code></pre>
<p>But the dict comprehension will be faster.</p>
<p>As for converting this into a JSON string, you can use <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="noreferrer"><code>json.dumps</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually in this specific case you don't even need a dictionary comprehension since you are using duplicate key/value pairs</p>
<pre><code>&gt;&gt;&gt; bigList = [1, 2, 3, 4, 5]
&gt;&gt;&gt; dict(zip(bigList, bigList))
{1: 1, 2: 2, 3: 3, 4: 4, 5: 5}
</code></pre>
</div>
<span class="comment-copy">This works, thanks!</span>
<span class="comment-copy">The only advantage of <code>dict</code> with a generator expression is that it works with Python2.6 and below which may be important</span>
<span class="comment-copy">Thanks, I'm a newbie to python, and I've been trying to find the name to this feature.</span>
