<div class="post-text" itemprop="text">
<p>I am using this code to export my data into a text file(pl is a list of lists. nested lists have equal length. the columns in the file will be made from the elements of nested lists):</p>
<pre><code>with open("par.txt", "a+") as f:
   f.write("id\ttrans_id\ttype\tstatus\tname\ttrans_type\ttrans_status\ttrans_name\n")

   for lst in pl:
       f.write(("{}\t"*16).format(lst[0].split()[1],lst[1].split()[1],lst[2].split()[1],lst[3].split()[1],lst[4].split()[1],lst[5].split()[1],lst[6].split()[1],lst[7].split()[1]))
</code></pre>
<p>But it gives this error:</p>
<blockquote>
<p>ValueError: zero length field name in format</p>
</blockquote>
<p>Here is a small example of my parent list but instead of 3, I have 16 items in each list. as you see each item has 2 units which are separated by tab. the first unit would be the column names and 2nd one is corresponding value. in the text file, each nested list would be a row(2nd units of each pair)</p>
<pre><code>pl = [[' id "ENS001" ', ' name "EGSB" ', ' Trans "TTP" '], [' id "EN02" ', ' name "EHGT" ', ' Trans "GFT" ']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You must be using an old version of Python; namely 2.6 or 3.0.  In these versions, you need to explicitly number the format fields for <code>str.format</code>:</p>
<pre><code>f.write(("{0}\t"*16).format(
           ^
</code></pre>
<p>As with indexing, counting starts at <code>0</code>.</p>
<p>Note however that this is no longer necessary with modern Python.  Versions 2.7 and 3.1 or greater will automatically number the format fields for you.  For more information, see:</p>
<p><a href="https://docs.python.org/3/whatsnew/3.1.html#other-language-changes" rel="nofollow">https://docs.python.org/3/whatsnew/3.1.html#other-language-changes</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Well I told you in this question, <a href="https://stackoverflow.com/questions/27682012/error-in-writing-a-text-file-in-python/27682033#27682033">error in writing a text file in python</a> ; change it from <em>16</em> to <em>8</em> :</p>
<pre><code>with open("par.txt", "a+") as f:
   f.write("id\ttrans_id\ttype\tstatus\tname\ttrans_type\ttrans_status\ttrans_name\n")

   for lst in pl:
       f.write(("{}\t"*8).format(lst[0].split()[1],lst[1].split()[1],lst[2].split()[1],lst[3].split()[1],lst[4].split()[1],lst[5].split()[1],lst[6].split()[1],lst[7].split()[1]))
</code></pre>
<p>Because we are going to put 8 items into string, as you see there are 8 items in <em>format()</em>.</p>
<blockquote>
<p>And actually, doesnt matter which length of elements, what I mean this, even this one has 100 elements in it, it will going to place by <em>format()</em> method.</p>
</blockquote>
<pre><code>lst[0].split()[1]
</code></pre>
<p>For example this one, doesn't matter what is the length of this element, because its still <strong>an</strong> element in <em>format()</em> function, so <em>format</em> function will place this.</p>
</div>
<span class="comment-copy">You have 16 repetitions of <code>{}</code> in your format string and are passing "only" 8 args to <code>format</code> -- a pretty obvious mistake (I'm sure there are others, as your insistence across Qs in writing the <code>lst</code> index and splitting repetitively, rather than, as I suggested to you elsewhere, <code>*(x.split()[1] for x in list)</code> or the like, suggests likelihood of typos &amp;c -- but, that's the one that immediately springs to the eyes).</span>
