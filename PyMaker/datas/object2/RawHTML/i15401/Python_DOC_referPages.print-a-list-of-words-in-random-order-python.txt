<div class="post-text" itemprop="text">
<p>I have a project to complete from a book which was received as a Christmas present (Python Programming for the Absolute Beginner, Third Edition):</p>
<p><em>Create a program that prints a list of words in random order. The program should print all the words and not repeat any.</em></p>
<p>I have created the following code:</p>
<pre><code>import random

words = ["Please", "Help", "Me", "Merry", "Christmas"]

for i in range(len(words)):
    random_index = random.randrange(len(words))
    print(words[random_index])
    del words[random_index]
</code></pre>
<p>I'd like to check if this code is the most efficient way of doing so, but there is no forum to check against, rather frustratingly!</p>
<p>Is there a better way of doing this? Cheers</p>
</div>
<div class="post-text" itemprop="text">
<p>How about using <a href="https://docs.python.org/3/library/random.html#random.sample" rel="noreferrer"><code>random.sample</code></a>:</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; words = ["Please", "Help", "Me", "Merry", "Christmas"]
&gt;&gt;&gt; random.sample(words, len(words))
['Merry', 'Me', 'Help', 'Please', 'Christmas']
</code></pre>
<p>or <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="noreferrer"><code>random.shuffle</code></a> if it is okay to modify the original list:</p>
<pre><code>&gt;&gt;&gt; random.shuffle(words)
&gt;&gt;&gt; words
['Me', 'Merry', 'Help', 'Please', 'Christmas']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to use only the things the chapter is about, than maybe this could be one solution:</p>
<pre><code>import random

myList = ["create", "a", "program", "that", "prints"]

for i in range(len(myList)):
    randomWord = random.choice(myList)
    print(randomWord)
    myList.remove(randomWord)

input("\nPress enter to exit.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random
random.shuffle(words)
print words
</code></pre>
<p>Random is module which provides you with an inbuilt method called, shuffle() , which can be used to change the elements of the list argument passed in any random order.</p>
</div>
<div class="post-text" itemprop="text">
<p>Other than using Python's <code>sample</code> or <code>shuffle</code> function directly as others have suggested, your solution works just fine, but it has the downside of emptying the original <code>words</code> list, which is probably not desirable.</p>
<p>To that end, the following does both in-place and copy shuffle.  </p>
<pre><code>import random

words = ["Please", "Help", "Me", "Merry", "Christmas"]

# in-place or copy shuffle 
def shuffle(in_words, copy=False):
    in_words = in_words[:] if copy else in_words
    for i in range(len(in_words)):
        pos = random.randrange(len(in_words))
        in_words[i], in_words[pos] = in_words[pos], in_words[i]
    return in_words
# see if it works
print "unshuffled", words
print "shuffled %s (was: %s)" % (shuffle(words, copy=True), words)
print "in-place shuffled", shuffle(words)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>import random</p>
<pre><code>words = ["Please", "Help", "Me", "Merry", "Christmas"]

for i in range(len(words)):
    random_index = random.randrange(len(words))
    print(words.pop(random_index))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random

words = ["Please", "Help", "Me", "Merry", "Christmas"]
wordsUsed = []
print()

while len(wordsUsed) != len(words):
    choice = random.choice(words)
    if choice not in wordsUsed:
        print(choice)
        wordsUsed.append(choice)

input("\nPress the enter key to exit..")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>Random word printer</h1>
<p>import random
WORDS = ["joy","hope","kindness","love","patience","dedication"]
used = []
while WORDS:
    comp_choice = random.choice(WORDS)
    if comp_choice not in used:
        print(comp_choice,end = " ")
    used.append(comp_choice)</p>
</div>
<div class="post-text" itemprop="text">
<p>Not elegant, but it uses only the methods which were mentioned in the book so far. </p>
<pre><code>import random

init_list = ["i", "need", "coffee", "break", "and", "to", "go", "home"]
new_list = []

for i in range(len(init_list)):
    n = random.randint(len(init_list)-1)
    new_list.append(init_list[n])
    del init_list[n]

print(new_list)
input("Press Enter to exit")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list=["hello","bye","good night","welcome"]

new_list=[]

import random


while len(new_list)!=4:

   word=random.choice(list)

   if word not in new_list:

      new_list.append(word)

   else:

      new_word.remove(word)

print(new_list)
</code></pre>
</div>
<span class="comment-copy">Could you please add some explanation and why is it more efficient (e.g. is it faster or just less code, more readable, uses best practices, etc)?</span>
<span class="comment-copy">Hi there - while this answer may be correct, it would be considerable more useful to other users if it <b>explained</b> why it was correct. What does this answer do that other answers did not, and why is it the right thing?</span>
<span class="comment-copy">Please post the code as text, not as image</span>
