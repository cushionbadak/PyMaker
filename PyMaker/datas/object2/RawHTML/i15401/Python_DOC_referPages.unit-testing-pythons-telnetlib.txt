<div class="post-text" itemprop="text">
<p>I'm writing a simple program that talks to a router via telnet and issues some simple commands to it. I want to be able to test these commands, that the program responds correctly to the servers output and sends the commands at the right moments. However i can't figure out a good way to do it. 
Best I've come up with is to create a small telnet server for my unit tests but that seems a bit excessive and i'm hoping there's a simpler way to do it.</p>
<p>Anyone got any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>Best practice in cases like this is to mock the server object. Since you're using python 3, you can simply use <code>unittest.mock</code> to create a mocked server object for use in testing. Docs here: <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow">https://docs.python.org/3/library/unittest.mock.html</a></p>
</div>
<span class="comment-copy">For 2.7 mock is available as external library: <a href="https://pypi.python.org/pypi/mock" rel="nofollow noreferrer">pypi.python.org/pypi/mock</a></span>
<span class="comment-copy">Mocking the telnetlib server is something that i hadn't considered. But i don't think that i can test it properly that way. I can test if it is sending the correct commands but i don't think that i can send replies from the mocked object to see if my code responds correctly. Or am i wrong?</span>
<span class="comment-copy">@GrimurD: Mock frameworks allow you to define the return values of method calls. In your test setup, you need to predefine the results which a real server would send.</span>
