<div class="post-text" itemprop="text">
<p>I've just added Python3 interpreter to Sublime, and the following code stopped working:</p>
<pre><code>for directory in directoryList:
    fileList = os.listdir(directory)
    for filename in fileList:
        filename = os.path.join(directory, filename)
        currentFile = open(filename, 'rt')
        for line in currentFile:               ##Here comes the exception.
            currentLine = line.split(' ')
            for word in currentLine:
                if word.lower() not in bigBagOfWords:
                    bigBagOfWords.append(word.lower())
        currentFile.close()
</code></pre>
<p>I get a following exception:</p>
<pre><code>  File "/Users/Kuba/Desktop/DictionaryCreator.py", line 11, in &lt;module&gt;
    for line in currentFile:
  File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xcc in position 305: ordinal not in range(128)
</code></pre>
<p>I found this rather strange, because as far as I know Python3 is supposed to support utf-8 everywhere. What's more, the same exact code works with no problems on Python2.7. I've read about adding environmental variable <code>PYTHONIOENCODING</code>, but I tried it - to no avail (however, it appears it is not that easy to add an environmental variable in OS X Mavericks, so maybe I did something wrong with adding the variable? I modidified /etc/launchd.conf)</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 <em>decodes</em> text files when reading. The default encoding is taken from <a href="https://docs.python.org/3/library/locale.html#locale.getpreferredencoding" rel="noreferrer"><code>locale.getpreferredencoding(False)</code></a>, which evidently for your setup returns <code>'ASCII'</code>. See the <a href="https://docs.python.org/3/library/functions.html#open" rel="noreferrer"><code>open()</code> function documenation</a>:</p>
<blockquote>
<p>In text mode, if <em>encoding</em> is not specified the encoding used is platform dependent: <code>locale.getpreferredencoding(False)</code> is called to get the current locale encoding.</p>
</blockquote>
<p>Instead of relying on a system setting, you should open your text files using an explicit codec:</p>
<pre><code>currentFile = open(filename, 'rt', encoding='latin1')
</code></pre>
<p>where you set the <code>encoding</code> parameter to match the file you are reading.</p>
<p>Python 3 supports UTF-8 as the default for <em>source code</em>.</p>
<p>The same applies to writing to a writeable text file; data written will be encoded, and if you rely on the system encoding you are liable to get <code>UnicodeEncodingError</code> exceptions unless you explicitly set a suitable codec.</p>
<p>You may want to read up on Python 3 and Unicode in the <a href="https://docs.python.org/3/howto/unicode.html" rel="noreferrer">Unicode HOWTO</a>, which explains both about source code encoding and reading and writing Unicode data.</p>
</div>
<div class="post-text" itemprop="text">
<p>"as far as I know Python3 is supposed to support utf-8 everywhere ..."
Not true. I have python 3.6 and my default encoding is NOT utf-8. 
To change it to utf-8 in my code I use:</p>
<pre><code>import locale
def getpreferredencoding(do_setlocale = True):
   return "utf-8"
locale.getpreferredencoding = getpreferredencoding
</code></pre>
<p>as explained in 
<a href="https://stackoverflow.com/questions/31469707/changing-the-locale-preferred-encoding-in-python-3-in-windows">Changing the “locale preferred encoding” in Python 3 in Windows</a></p>
</div>
<span class="comment-copy">Please do include the <i>full</i> traceback of your exception.</span>
<span class="comment-copy">Well, it works indeed. When i change encoding to 'utf-8' in open it does not run again. Is this fine?</span>
<span class="comment-copy">@Byakuya: then your file is not encoded to UTF-8.</span>
<span class="comment-copy">Clear now, thank you. So only source code is expected to be always utf-8.</span>
<span class="comment-copy">@Byakuya: yes, source code is by default expected to use UTF-8; you can use a <code># codec: ..</code> comment as first or second line to indicate a different encoding for the source file.</span>
<span class="comment-copy">@JIXiang: you could set your locale to UTF-8 before starting Python. However, I find it prudent to set the encoding explicitly, regardless. Explicit is better than implicit.</span>
