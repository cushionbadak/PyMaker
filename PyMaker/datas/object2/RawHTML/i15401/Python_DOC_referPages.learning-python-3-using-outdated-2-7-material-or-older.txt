<div class="post-text" itemprop="text">
<p>I am learning python and running through it. Great language, very easy to learn and very flexible. Here's my issue. I am taking Udacity's Intro to CS course which teaches python 2.7, codecademy's is also 2.7 and I am also taking tree-house which is 3.4. I like 3.4 much better and plan on using it, but I also have about 30 eBooks that are a mixed bag concerning versions. I am running through learning the basics using each site one step at a time, so I can get a really deep understanding into how the language works. This is working well for me, and I immediately noticed the differences in 2/3. Most of my material is sadly 2.7 and below, so far I have only made my rounds through the materials string formatting, booleans and basic functions. </p>
<p>**Is there any reason I shouldn't learn 2.7 and mix learning the two, is there a noticable difference that will affect my coding.</p>
<p>I am not looking for a debate on which version better, or which should I learn. I am just trying to see if it will be bad practice to learn both concurrently. I come from PHP, which has some major changes between versions and can lead to bad practices cross-learning versions.**</p>
</div>
<div class="post-text" itemprop="text">
<p>Some of the Code has changed. The changes cover even basic things like input and output. There are too many changes to list them all out in an answer, but this link covers basic differences: <a href="http://inventwithpython.com/appendixa.html" rel="nofollow">inventwithpython.com/appendixa.html</a> and you can find more in depth information at <a href="http://wiki.python.org/moin/Python2orPython3" rel="nofollow">wiki.python.org/moin/Python2orPython3</a> If you follow the links in the first section of the second link, it covers just about any changes you need to know. Personally I prefer Python 2.7, due to it being a bit faster and having more 3rd party support. If you are going to follow 2.7 tutorials and use 3.x for IDLE, you should at least understand the differences between the two, or you will get errors.</p>
</div>
<div class="post-text" itemprop="text">
<p>The differences aren't significant enough to be a concern for beginners. You should be able to migrate your programs to python3 in few minutes, with many of them not needing any changes.</p>
</div>
<span class="comment-copy">If you're going to be a Python programmer, you'll end up knowing both anyway.</span>
<span class="comment-copy">python3 is not backwards compatible with 2 but from a learning perspective they are both very similar</span>
<span class="comment-copy">I was in the same position and I ultimately decided to write a Python 2.7 app that could run safely and similarly on Python 3 after being run through the 2to3 utility. This helped me learn many of the important differences between the two (most notably the different handling of unicode text). So I'd suggest continuing to learn 2.7 but as you do it consider whether any changes would need to be made to make it run on 3.</span>
<span class="comment-copy">Most of my learning material is 2.7, I only have a handful of videos and ebooks that aren't and so far the changes I seen aren't anything that will affect my coding. I just wanted to make sure its nothing major.</span>
<span class="comment-copy">To understand the difference between Python 2 and 3, see what it takes to support both in a single source: <a href="https://docs.python.org/3/howto/pyporting.html" rel="nofollow noreferrer">Porting Python 2 Code to Python 3</a>.</span>
<span class="comment-copy">so far it looks like basic things like print =&gt; print(), raw_input() =&gt; input()  I just wanted to make sure as I continued it wouldnt be an issue</span>
<span class="comment-copy">Those are two examples yes, there are more like range() works different, and another user commented about Unicode, but just be aware of what is changed.</span>
<span class="comment-copy">Thanks I checked this, as it confirmed my thoughts. This site confuses me though with the voting. This doesn't seem to be a bad question/programming irrelevant and I'm sure others will search it or ask it. It also received all great quality answers, so why is it being mass down-voted? I read somewhere that this site puts off new users and I am just wondering why and how this enforcement system works when it trashes good topics?</span>
<span class="comment-copy">I personally have no problem with questions like this, but some users downvoted presumably because it could attract opinionated answers instead of being purely objective. Again, I feel like this quesion is fine, and useful for many people, but StackOverflow can really be picky.</span>
<span class="comment-copy">Thanks, makes sense! I wasnt really looking for a debate on the two versions, just simple answer if its bad practice to learn both. PHP has some major changes between versions and that where I come from.</span>
