<div class="post-text" itemprop="text">
<p>I'm working on a simple server based guessing game. Part of the client side of things is that there is an ssl secured admin client that can access the server to request information. I am currently trying to add the certificates and stuff to the requests however when running the (admittedly incomplete) file I get a '<code>ValueError: file descriptor cannot be a negative integer (-1)</code>' at line 65 of the following code:</p>
<pre><code>import select
import socket
import ssl
import random

def CreateGame():
    number = random.randrange(1,21,1)
    ##print(number)
    return number

def Greetings():
    member.send("Greetings\r\n".encode())

def Far():
    member.send("Far\r\n".encode())

def Close():
    member.send("Close\r\n".encode())

def Correct():
    member.send("Correct\r\n".encode())

def AdminGreetings():
    member.send("Admin-Greetings\r\n".encode())

def Who():
    responce = ""
    for connection in clientList:
        if connection != member:
            responce += str(clientList[connection])
    member.send((str(responce)).encode())
    member.close()
    reader_list.remove(member)
    del clientList[member]

def GameLogic(mNumber):
    if("Guess: " + str(mNumber) + "\r\n" == guess):
        Correct()
    elif(("Guess: " + str(mNumber-3) + "\r\n" == guess) or
         ("Guess: " + str(mNumber-2) + "\r\n" == guess) or
         ("Guess: " + str(mNumber-1) + "\r\n" == guess) or
         ("Guess: " + str(mNumber+1) + "\r\n" == guess) or
         ("Guess: " + str(mNumber+2) + "\r\n" == guess) or
         ("Guess: " + str(mNumber+3) + "\r\n" == guess) ):
        Close()
    else:
        Far()



#client socket
s1 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s1.bind(('',4000))  
s1.listen(5)
#admin socket
s2 = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s2.bind(('',4001))  
s2.listen(5)

reader_list = [s1,s2]
clientList = {}
mNumber = CreateGame()

while True:
    (read,write,error) = select.select(reader_list,[],[])

    for member in read:
        if member == s1:
            (read,write) = s1.accept()
            reader_list.append(read)
        elif member == s2:
            (read,write) = s2.accept()
            reader_list.append(read)
            sslSocket = ssl.wrap_socket(member,
                                    keyfile="5cc515_server.key",
                                    certfile="5cc515_server.crt",
                                    server_side = True,
                                    cert_reqs = ssl.CERT_REQUIRED,
                                    ca_certs="5cc515_root_ca.crt")
        else:
            try:
                message = member.recv(4092).decode()
                sockAddr = member.getsockname()
                if(message == "Hello\r\n"):
                    addr = str(sockAddr[0]) + " " + str(sockAddr[1]) + "\r\n"
                    clientList[member] = addr
                    if (sockAddr[1] == 4001):#is using port 4000
                        try:
                            ssl_s = ssl.wrap_socket(member,
                                                    keyfile="5cc515_server.key",
                                                    certfile="5cc515_server.crt",
                                                    server_side = True,
                                                    cert_reqs = ssl.CERT_REQUIRED,
                                                    ca_certs="5cc515_root_ca.crt")
                            ##handshake stuff
                            AdminGreetings()
                        except:
                            break
                    else:
                        Greetings()
                elif(message == "Who\r\n"):
                    ##handshake stuff
                    Who()
                else:
                    ##print("try and assign guess")
                    guess = message
                    ##print("game logic")
                    GameLogic(mNumber)
            except:
                print("recv failed")
                member.close()
                reader_list.remove(member)
                del clientList[member]
                break
</code></pre>
<p>I understand that without the crt and key this cant really be debugged, but since nothing is making changes to the reader_list[] i dont see why it goes from 2 to -ve...</p>
<p>anyway here is the other part (the admin client)</p>
<pre><code>import socket
import select
import ssl

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
handshake = False
# send Hello
try:
    while handshake == False:
        print("create ssl socket")
        sslSocket = ssl.wrap_socket(s,
                                    keyfile="100297626.key",
                                    certfile="100297626.crt",
                                    server_side = False,
                                    ca_certs="5cc515_root_ca.crt")
        print("connect")
        sslSocket.connect(("127.0.0.1", 4001))
        print("send hello")
        sslSocket.write("Hello\r\n".encode())
    print("rec hello")
    sslSocket.recv(80).decode()
    sslSocket.send("Who\r\n".encode())
    print(sslSocket.recv(4092).decode())
except:
    print("Server Unavailable")
s.close()
</code></pre>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>As line 65 is:</p>
<pre><code>    (read,write,error) = select.select(reader_list,[],[])
</code></pre>
<p>One must infer that the error comes from passing a socket with a fd of <code>-1</code> to <code>select.select</code> in its read_list. Please run your code again but include the check that:</p>
<pre><code>assert all(s.fileno() != -1 for s in reader_list)
</code></pre>
</div>
<span class="comment-copy">At what OS you running this code?</span>
<span class="comment-copy">@Farseer Windows 7 64bit</span>
<span class="comment-copy">select can't work with streams on Windows</span>
<span class="comment-copy">"Note that on Windows, it only works for sockets;" The <a href="https://docs.python.org/3/library/select.html" rel="nofollow noreferrer">docs</a> seem to suggest that it works for sockets at least.  Can you check if the <code>socket.socket</code> calls returned valid file descriptors?</span>
<span class="comment-copy">-but what causes <code>select.select</code> to fail? -is there any way i can get this to work on windows?</span>
<span class="comment-copy">adding this creates an assertion error, showing that it has something to do with the -1 being passed in by the sslSocket</span>
<span class="comment-copy">This would not help if <code>s.fileno()</code> is <code>-1</code>, it would just change the error to an <code>AssertionError</code>.</span>
<span class="comment-copy">It wouldn't but the issue is that the <code>-1</code> is coming from somewhere. And this would at least help track that down.</span>
