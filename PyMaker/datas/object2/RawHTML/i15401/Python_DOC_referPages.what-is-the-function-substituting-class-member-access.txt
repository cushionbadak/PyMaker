<div class="post-text" itemprop="text">
<p>For example, we have a class:</p>
<pre><code>class A:
    def __init__(self, a):
        self.a = a
</code></pre>
<p>what is the function call to replace:</p>
<pre><code>A.a
</code></pre>
<p>I want to apply it with <code>map</code> function.</p>
</div>
<div class="post-text" itemprop="text">
<p>The functional equivalent of doing  <code>class.attribute</code> is to use <code>getattr(class, 'attribute')</code>:</p>
<pre><code>&gt;&gt;&gt; class A:
...     def __init__(self, a):
...         self.a = a
...
&gt;&gt;&gt; obj = A(1)
&gt;&gt;&gt; obj.a
1
&gt;&gt;&gt; getattr(obj, 'a')
1
&gt;&gt;&gt;
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow">documentation</a>:</p>
<blockquote>
<p><code>getattr(object, name[, default])</code></p>
<p>Return the value of the named attribute of <code>object</code>. <code>name</code> must be a string. If the string is the name of one of the objectâ€™s
  attributes, the result is the value of that attribute. <strong>For example,
  <code>getattr(x, 'foobar')</code> is equivalent to <code>x.foobar</code></strong>. If the named
  attribute does not exist, <code>default</code> is returned if provided, otherwise
  <code>AttributeError</code> is raised.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Your question is not very clear but if you want to change the value of <code>A.a</code> in python it is as simple as</p>
<pre><code>A.a = "New Value"
</code></pre>
<p>From what I've read from the <a href="https://docs.python.org/2/tutorial/classes.html#odds-and-ends" rel="nofollow">python documentation</a>, it seems that you can do that without the need of setter() and getter() function like other languages. I took this example from the link hyperlinked above.</p>
<pre><code>class Employee:
    pass

john = Employee() # Create an empty employee record

# Fill the fields of the record
john.name = 'John Doe'
john.dept = 'computer lab'
john.salary = 1000
</code></pre>
</div>
<span class="comment-copy">Can you be more elobarative?</span>
