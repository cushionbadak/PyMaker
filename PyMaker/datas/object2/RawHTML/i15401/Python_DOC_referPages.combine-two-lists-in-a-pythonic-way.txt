<div class="post-text" itemprop="text">
<p>I have no clue how to search for this, however, I cannot find an obvious solution for my pythonic problem. I would like to combine two lists (one is a manipulated one of the other) and permute them by keeping the length of the lists constant.</p>
<p>An example:</p>
<pre><code>a = ['A','B','C','D']
b = ['a','b','c','d']

combined = [['a','B','C','D'], ['A','b','C','D'], ..., ['a','b','c','d']]
</code></pre>
<p>And then I can permute them using itertools. However, the first step is for me not easy to manage. I don't want nested for-loops and Co.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/functions.html#zip" rel="noreferrer"><code>zip</code></a>, <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="noreferrer"><code>itertools.product</code></a> and <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; a = ['A','B','C','D']
&gt;&gt;&gt; b = ['a','b','c','d']  # [x.lower() for x in a]
&gt;&gt;&gt; [list(x) for x in itertools.product(*zip(a, b))]
[['A', 'B', 'C', 'D'], ['A', 'B', 'C', 'd'], ['A', 'B', 'c', 'D'],
 ['A', 'B', 'c', 'd'], ['A', 'b', 'C', 'D'], ['A', 'b', 'C', 'd'],
 ['A', 'b', 'c', 'D'], ['A', 'b', 'c', 'd'], ['a', 'B', 'C', 'D'],
 ['a', 'B', 'C', 'd'], ['a', 'B', 'c', 'D'], ['a', 'B', 'c', 'd'],
 ['a', 'b', 'C', 'D'], ['a', 'b', 'C', 'd'], ['a', 'b', 'c', 'D'],
 ['a', 'b', 'c', 'd']]
</code></pre>
</div>
<span class="comment-copy">You are my genius! Thanks so much. What does *zip mean?</span>
<span class="comment-copy">@anki, <code>zip(a, b)</code> will return <code>[('A', 'a'), ('B', 'b'), ('C', 'c'), ('D', 'd')]</code> in Python 2.x. (returns a corresponding iterator in Python 3.x). For more information about each functions, please follow the links in the answer.</span>
<span class="comment-copy">Got it, thanks again :)</span>
