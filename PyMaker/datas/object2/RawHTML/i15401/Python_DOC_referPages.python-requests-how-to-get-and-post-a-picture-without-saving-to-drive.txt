<div class="post-text" itemprop="text">
<p>The API I'm working on has a method to send images by POSTing to <code>/api/pictures/</code> with the picture file in the request.</p>
<p>I want to automate some sample images with Python's requests library, but I'm not exactly sure how to do it. I have a list of URLs that point to images.</p>
<pre><code>rv = requests.get('http://api.randomuser.me')
resp = rv.json()
picture_href = resp['results'][0]['user']['picture']['thumbnail']
rv = requests.get(picture_href)
resp = rv.content
rv = requests.post(prefix + '/api/pictures/', data = resp)
</code></pre>
<p><code>rv.content</code> returns bytecode. I get a 400 Bad Request from the server but no error message. I believe I'm either 'getting' the picture wrong when I do <code>rv.content</code> or sending it wrong with <code>data = resp</code>. Am I on the right track? How do I send files?</p>
<p><strong>--Edit--</strong></p>
<p>I changed the last line to </p>
<pre><code>rv = requests.post('myapp.com' + '/api/pictures/', files = {'file': resp})
</code></pre>
<p>Server-side code (Flask):</p>
<pre><code>file = request.files['file'] 
if file and allowed_file(file.filename):
    ...
else:
    abort(400, message = 'Picture must exist and be either png, jpg, or jpeg')
</code></pre>
<p>Server aborts with status code 400 and the message above. I also tried reading <code>resp</code> with BytesIO, didn't help.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is your data is not a file, its a stream of bytes. So it does not have a "filename" and I suspect that is why your server code is failing.</p>
<p>Try sending a valid filename along with the correct mime type with your request:</p>
<pre><code>files = {'file': ('user.gif', resp, 'image/gif', {'Expires': '0'})}
rv = requests.post('myapp.com' + '/api/pictures/', files = files)
</code></pre>
<p>You can use <a href="https://docs.python.org/2/library/imghdr.html" rel="nofollow"><code>imghdr</code></a> to figure out what kind of image you are dealing with (to get the correct mime type):</p>
<pre><code>import imghdr

image_type = imghdr.what(None, resp)
# You should improve this logic, by possibly creating a
# dictionary lookup
mime_type = 'image/{}'.format(image_type)
</code></pre>
</div>
<span class="comment-copy">What is the content of <code>prefix</code>? how is it handling the payload? Are you expecting a file-like object?</span>
<span class="comment-copy"><code>rv.content</code> is correct. I ran <code>open('/tmp/foo', 'wb').write(rv.content)</code> and got a valid JPG of some random person's avi.</span>
<span class="comment-copy">Read the API docs for <code>prefix</code>. You likely need to specify the Content-Type of the data you're uploading.</span>
<span class="comment-copy">Check out help() on requests.get, requests.post and requests.request.  Then study up on file-like objects, EG: <a href="https://docs.python.org/2/library/stringio.html" rel="nofollow noreferrer">docs.python.org/2/library/stringio.html</a> <a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer">docs.python.org/3/library/io.html</a></span>
<span class="comment-copy">prefix is just a variable that I made that is the root of my application. @dstromberg, I will check that out, I need to learn the difference between files and file-like objects.</span>
<span class="comment-copy">I just figured this out as you posted it. It was on the requests docs (<a href="http://docs.python-requests.org/en/latest/user/quickstart/#post-a-multipart-encoded-file" rel="nofollow noreferrer">docs.python-requests.org/en/latest/user/quickstart/â€¦</a>). Thank you!</span>
