<div class="post-text" itemprop="text">
<p>what is the default shebang is none is specified in a python script, Like below.</p>
<pre><code>print "hello world"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no default shebang.</p>
<p>A shebang is not Python syntax, it is a hint used by your <em>shell</em> on Unix (-like) systems, to find an appropriate executable to run the script with if found in the first line and the file is executable. If the line is missing, execution usually fails as the shell <em>may</em> try and execute the file as shell commands instead.</p>
<p>Some operating systems (specifically Windows) have different mechanisms in place to find the executable. For example, they can map the filename extension to the executable. In such cases any shebang lines are ignored.</p>
<p>See <a href="http://en.wikipedia.org/wiki/Shebang_%28Unix%29" rel="nofollow"><em>Shebang (Unix)</em></a> on Wikipedia, and the <a href="https://docs.python.org/2/faq/windows.html" rel="nofollow">Python Windows FAQ</a> for further details. Python 3 has some improved Windows execution support, see <a href="https://docs.python.org/3/using/windows.html" rel="nofollow"><em>Using Python on Windows</em></a>; the <code>py</code> launcher will actually read shebang lines in to dispatch to the right Python interpreter.</p>
</div>
<span class="comment-copy">Execution does not necessarily fail. Assuming the file is executable in bash, the file will be interpreted as shell and each line will be executed as if it were a simple shell script</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/7268437/bash-script-execution-with-and-without-shebang-in-linux-and-bsd">Related: Bash script execution with and without shebang</a></span>
<span class="comment-copy">@Necrolyte2: right, amended this. But it depends on the specific shell if they'll actually try to do this.</span>
<span class="comment-copy">@kojiro: exactly; how the shell behaves when faced with a file without a shebang is dependent on the exact shell. :-) But I suspect the OP is using Windows, hence the Windows-specific info.</span>
<span class="comment-copy">The probability of an arbitrary Python script also being a valid bash script that does anything desirable is pretty low :) Although if you count "outputs a bunch of bash error messages" as a "successful execution" then your chances are much better ;)</span>
