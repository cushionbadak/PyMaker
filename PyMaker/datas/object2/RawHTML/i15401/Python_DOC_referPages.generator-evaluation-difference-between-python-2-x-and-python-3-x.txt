<div class="post-text" itemprop="text">
<p>Test code could be listed below.</p>
<p>In Python 2.7.8, this code below caused my machine crashed.</p>
<pre class="lang-py prettyprint-override"><code>for row, current_char in zip(cycle(chain(pattern, pattern[::-1][1:][:-1])), count()):
    print row, current_char
    if current_char &gt;= 14:
        break
</code></pre>
<p>While in Python 3.2.5.1, the code below works fine.</p>
<pre class="lang-py prettyprint-override"><code>for row, current_char in zip(cycle(chain(pattern, pattern[::-1][1:][:-1])), count()):
    print(row, current_char)
    if current_char &gt;= 14:
        break
</code></pre>
<p>Result is</p>
<pre><code>0 0
1 1
2 2
1 3
0 4
1 5
2 6
1 7
0 8
1 9
2 10
1 11
0 12
1 13
2 14
</code></pre>
<p>Is there anyone knowing the reason? Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p><code>zip</code> returns an iterator in Python 3, but a list in Python 2. <code>itertools.count</code> and <code>itertools.cycle</code> are both infinite generators, thus <code>zip</code>ping them together produces an "infinite" list.</p>
<p>As others already mentioned, you should use <code>itertools.izip</code> instead (Python 2 only).</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, <code>zip</code> like most other "functional" elements in the global namespace, returns a <code>list</code>, meaning it evaluates everything at once. In Python 3 this will be a generator, evaluated on demand and thus needing less memory (although the output you provided doesn't look like memory would be a problem).</p>
</div>
<span class="comment-copy"><code>zip</code> in Python 2 will (try to) build the whole list up-front; use <code>itertools.izip</code> instead. See <a href="https://docs.python.org/3/whatsnew/3.0.html#views-and-iterators-instead-of-lists" rel="nofollow noreferrer">docs.python.org/3/whatsnew/â€¦</a> Also, you can combine your slices: <code>[-2:0:-1]</code>.</span>
<span class="comment-copy">@jonrsharpe thanks a lot, you got my point! :)</span>
<span class="comment-copy">thanks for your answer</span>
<span class="comment-copy">Well you hit first :)</span>
