<div class="post-text" itemprop="text">
<p>I have a text file with 8 columns. The first one is ID and the 8th one is type. In the first column there are many repetitive rows per ID but in the 8th column there many types per ID and one type is H and there is only one H per ID.</p>
<pre><code>ID    type
E0    B
E0    H
E0    S
B4    B
B4    H
</code></pre>
<p>I want to make another file in which there is only one row per ID (only the row which has H in the 8th column). This example would be like this:</p>
<pre><code>ID    type
E0    H
B4    H
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just updated solution of inspectorG4dget for Python 2.7.3:<br/>
Only consider two columns in input csv file which are <code>ID</code> and <code>type</code> separated by <code>\t</code> </p>
<p>Code:</p>
<pre><code>import csv

with open('/home/vivek/Desktop/input.csv', 'rb') as infile, open('/home/vivek/Desktop/output.csv', 'wb') as outfile:
    reader = csv.reader(infile, delimiter='\t')
    writer = csv.writer(outfile, delimiter='\t')
    reader_row = next(reader)
    writer.writerow([reader_row[0], reader_row[1]])
    for row in reader:
        if row[1]=="H":
            writer.writerow(row)
</code></pre>
<p>Output:</p>
<pre><code>ID      type
E0      H
B4      H
</code></pre>
<p>Check following for 2.6.6  I have not tested following code for python 2.6.6 because I have python 2.7.3 on my machine.</p>
<pre><code>with open('/home/vivek/Desktop/input.csv', 'rb') as infile:
    with open('/home/vivek/Desktop/output.csv', 'wb') as outfile:
        reader = csv.reader(infile, delimiter='\t')
        writer = csv.writer(outfile, delimiter='\t')
        reader_row = next(reader)
        writer.writerow([reader_row[0], reader_row[1]])
        for row in reader:
            if row[1]=="H":
                writer.writerow(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming your file is simply a text file with spaces/tabs delimiting columns, and the column containing 'type' is right at the end of the row:</p>
<pre><code>with open('input.txt', 'r') as input_file:
    input_lines = input_file.readlines()

# Take the header line, and all the subsequent lines whose last character is 'H'
output_lines = input_lines[:1] + [line for line in input_lines if line[-2] == 'H'] 

output_string = ''.join(output_lines)
with open('output.txt', 'w') as output_file:
    output_file.write(output_string)
</code></pre>
<p>The above code assumes that the 'type' column ends immediately after the single-character type code.  If there can be whitespace after the data, or if you can have multi-character type codes that might look like 'AH' etc, then substitute the row beneath the comment with the below:</p>
<pre><code>output_lines = input_lines[:1] + [line for line in input_lines if line.split()[-1] == 'H'] 
</code></pre>
<p><strong>Edit:</strong> If your file turns out to be huge and you don't want to load it all into memory and manipulate, you can use a generator expression, which is lazily evaluated:</p>
<pre><code>with open('input.txt', 'r') as input_file:
    output_lines = (line for i, line in enumerate(input_lines)
                    if line[-2] == 'H' or i == 0) 
    with open('output.txt', 'w') as output_file:
        for line in output_lines:
            output_file.write(line)
</code></pre>
</div>
<span class="comment-copy">Are you stuck somewhere?</span>
<span class="comment-copy">What kind of file is it? Is it comma-separated, tab-separated, ...? You may want to look into the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module, or if you're doing heavy-duty work, <a href="http://pandas.pydata.org/" rel="nofollow noreferrer"><code>pandas</code></a>.</span>
<span class="comment-copy">I think OP is <a href="http://stackoverflow.com/questions/27805235/remove-extra-rows-in-a-file-in-python#comment44020081_27805352">using Python 2.6</a>, so you will have to use nested <code>with</code> statements here.</span>
<span class="comment-copy">@AshwiniChaudhary: yes correct, I used nested <code>with</code> statements in office where we are using <code>python 2.6</code></span>
<span class="comment-copy">it gives syntax error here: with open('semi_final_mergedwithGTF1.txt', 'rb') as infile, open('semi_final_mergedwithGTF1_2.txt', 'wb') as outfile:</span>
<span class="comment-copy">yes (Ashwini taking this). What is version of Python on your machine?? 2.6 ??</span>
<span class="comment-copy">version is python 2.6.6. also the type column is 8th column</span>
