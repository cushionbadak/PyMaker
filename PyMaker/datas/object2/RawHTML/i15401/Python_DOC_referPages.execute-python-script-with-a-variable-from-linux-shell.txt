<div class="post-text" itemprop="text">
<p>This might be an easy question but I don't know the name of what I'm trying to do, so I don't know how to search for it.</p>
<p>Basically when I'm in terminal (linux command line) and I type</p>
<pre><code>$ python do_something.py stuff
</code></pre>
<p>I want to get the <code>stuff</code> to mean something for my script. So two questions:</p>
<ol>
<li>How is this called?</li>
<li>How can I do it?</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way is for the <code>do_something.py</code> script to <code>import sys</code> and access the "stuff" command-line argument as <code>sys.argv(1)</code>.  There are many fancier ways, of course.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>What you're asking for is called argument parsing.</strong></p>
<p>To do this the proper way, you should definitively use <strong><a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">argparse</a></strong>.</p>
<p>It's a neat and yet very powerful library to make argument parsing more efficient. Plus, it makes your scripts manage arguments <em>the proper Linux way</em>, by default.</p>
<p><strong>Basic example:</strong></p>
<pre><code>import argparse

parser = argparse.ArgumentParser(description='My argparse program')

parser.add_argument('--verbose',
    action='store_true',
    help='sets output to verbose' )

args = parser.parse_args()

if args.verbose:
    print("~ Verbose!")
else:
    print("~ Not so verbose")
</code></pre>
<p><strong>Then you can do cool stuff like:</strong></p>
<pre><code>$ python3 myscript.py --verbose
~ Verbose!
</code></pre>
<p>And what's even cooler, it provides an automatic <code>--help</code> (or <code>-h</code>) argument:</p>
<pre><code>$ python3 myscript.py --help
usage: myscript.py [-h] [--verbose]

My argparse program

optional arguments:
  -h, --help  show this help message and exit
  --verbose   sets output to verbose
</code></pre>
<p>This is the kind of library that allows you to quite easily do complicated stuff like:</p>
<pre><code>./myscript.py --password=no -c -o --keep_moving --name="Robert"
</code></pre>
<p><strong><a href="https://mkaz.com/2014/07/26/python-argparse-cookbook/" rel="nofollow">Here is a link to a nice tutorial</a></strong> from which the above example has been freely adapted.</p>
</div>
<span class="comment-copy"><code>stuff</code> is called an argument, and python has a module called argparse to deal with various ways of accepting command line arguments. The documentation and examples are here. <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html</a></span>
<span class="comment-copy">and the fancier ways make use of <code>sys.argv[1:]</code> behind the scenes (e.g. <code>optparse</code>, <code>argparse</code>)</span>
<span class="comment-copy">@hpaulj, sure, and they may well be worth the extra fancy when needed, but perhaps not in the OP's case (hard to say as the Q is very concise about that).</span>
