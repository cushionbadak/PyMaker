<div class="post-text" itemprop="text">
<p>I am looking for a simple way of checking if a nested object exists in a list. </p>
<p>For example</p>
<pre><code>example_list = [{'id':1, 'name':'k'}, {'id':2, 'name':'y'}, {'id':3, 'name':'z'}]
</code></pre>
<p>Is there a simple function that will determine if  the dict with <code>id=3</code> is in the <code>example_list</code>? I don't want to use a loop as it seems like overkill.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="nofollow">generator expression</a>:</p>
<pre><code>if any(x['id'] == 3 for x in example_list):
</code></pre>
<p>Of course, this assumes that all dictionaries have an <code>id</code> key.  If not, then you could do:</p>
<pre><code>if any(x.get('id', 0) == 3 for x in example_list):
</code></pre>
<hr/>
<p><strong>Update:</strong></p>
<p>To get the dictionary returned, use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow"><code>next</code></a>:</p>
<pre><code>dct = next((x for x in example_list if x['id'] == 3), None)
</code></pre>
<p>I made <code>None</code> the default value to return if there is no dictionary in the list which meets the criteria.  But you can pick any other value you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want just the first  dict that contains an <code>id ==</code>3` use a regular loop :</p>
<pre><code>for d in example_list:
    if d.get("id") == 3:
        print(d)
        break
</code></pre>
<p>If you want all dicts use a list comp:</p>
<pre><code>[d for  d in example_list if d.get("id") == 3]
</code></pre>
<p>You can use a function and return the dict:</p>
<pre><code>def get_d(l, key, val):
    for d in l:
        if d.get(key) == val:
            return d
</code></pre>
</div>
<span class="comment-copy"><code>If {id:3} in examplelist:</code> should work</span>
<span class="comment-copy">Why not store them in a dictionary keyed by <code>'id'</code>, instead of a list?</span>
<span class="comment-copy">That wont work because the dicts have more properties than just id.. Sorry the example was not clear</span>
<span class="comment-copy">Honestly at this point it makes far more sense to restructure your dictionary such that <code>example_list={1: {'name':'k'},2:{'name':y}}</code> ...etc</span>
<span class="comment-copy">@user2097159, how would that work?</span>
<span class="comment-copy">Nice. How do I return the dict after I have determined that it exists?</span>
<span class="comment-copy">@Jakobovski - See my edit.</span>
<span class="comment-copy">No advantage using a generator expression here really for a single value</span>
<span class="comment-copy">@PadraicCunningham - <code>next</code> only works with iterators (which generator expressions produce).  If I used a list comprehension, I'd need to call <code>iter()</code> on it.</span>
<span class="comment-copy">@iCodez, I meant it would make more sense to not call next and have the option of getting more than one dict if that was required otherwise a normal loop would actually be more efficient.</span>
