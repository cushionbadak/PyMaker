<div class="post-text" itemprop="text">
<p>Where does the variable <code>__spec__</code> come from?</p>
<pre><code>$ brew install python3
$ python3
Python 3.4.2 (default, Jan  5 2015, 11:57:21) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin
Type "help", "copyright", "credits" or "license" for more information.

# Under Python 2.7.x this gives a NameError
&gt;&gt;&gt; None is __spec__
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/reference/import.html#__spec__" rel="noreferrer">the Python Language Reference, Part 5: The Import System</a> (emphasis mine):</p>
<blockquote>
<p>The <code>__spec__</code> attribute must be set to the module spec that was used when importing the module. This is used primarily for introspection and during reloading. Setting <code>__spec__</code> appropriately applies equally to <a href="https://docs.python.org/3/reference/toplevel_components.html#programs" rel="noreferrer">modules initialized during interpreter startup</a>. <strong>The one exception is <code>__main__</code>, where <code>__spec__</code> is set to None in some cases</strong>.</p>
<p><em>New in version 3.4.</em></p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>According to Python 3 <a href="https://docs.python.org/3/reference/import.html#main-spec" rel="nofollow">docs</a>, <code>__spec__</code> is always <code>None</code> if you are using interactive promt:</p>
<blockquote>
<p>When Python is started with the -m option, <code>__spec__</code> is set to the
  module spec of the corresponding module or package. <code>__spec__</code> is also
  populated when the <code>__main__</code> module is loaded as part of executing a
  directory, zipfile or other sys.path entry.</p>
<p>In the remaining cases <code>__main__.__spec__</code> <strong>is set to None</strong>, as the code
  used to populate the <code>__main__</code> does not correspond directly with an
  importable module:</p>
<ul>
<li><strong>interactive prompt</strong></li>
<li>-c switch</li>
<li>running from stdin</li>
<li>running directly from a source or bytecode file</li>
</ul>
</blockquote>
</div>
<span class="comment-copy"><a href="http://bugs.python.org/issue19697" rel="nofollow noreferrer">bugs.python.org/issue19697</a> has more implementation info in case anyone is interested</span>
