<div class="post-text" itemprop="text">
<p>For example, I define a function like </p>
<pre><code>def f(n): return 1+'1'
</code></pre>
<p>and in the unittest, I define test_error: </p>
<pre><code>assertRaises(TypeError,f(1))
</code></pre>
<p>But it just showed that this is a error. But when I define f with no argument like</p>
<pre><code>def f(): return 1+'1'
</code></pre>
<p>and in unittest </p>
<pre><code>assertRaises(TypeError,f)
</code></pre>
<p>it worked just fine. Why is that? How can I deal with function with arguments?</p>
</div>
<div class="post-text" itemprop="text">
<p>You called the first function <em>before</em> handing it to the <code>assertRaises()</code> method. You can give the method additional arguments that it'll then pass on to the function-under-test:</p>
<pre><code>self.assertRaises(TypeError, f, 1)
</code></pre>
<p>The <em>better</em> option would be to use <code>self.assertRaises()</code> as a context manager:</p>
<pre><code>with self.assertRaises(TypeError):
    f(1)
</code></pre>
<p>You call the method 'normally' in that case, which reads a lot more natural.</p>
<p>See the <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises" rel="nofollow"><code>TestCase.assertRaises()</code> documentation</a>:</p>
<blockquote>
<p>Test that an exception is raised when <em>callable</em> is called with any positional or keyword arguments that are also passed to <code>assertRaises()</code>.</p>
</blockquote>
<p>and</p>
<blockquote>
<p>If only the <em>exception</em> and possibly the <em>msg</em> arguments are given, return a context manager so that the code under test can be written inline rather than as a function:</p>
<pre><code>with self.assertRaises(SomeException):
    do_something()
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>This is because you should pass function arguments alongside with it's arguments:</p>
<pre><code>self.assertRaises(TypeError, f, 1)
</code></pre>
<p>FYI, according to the <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises" rel="nofollow">documentation</a>, this is the <code>assertRaises()</code> contract:</p>
<pre><code>assertRaises(exception, callable, *args, **kwds)
</code></pre>
<p>where <code>callable</code> is your <code>f</code> function, <code>*args</code> and <code>**kwds</code> are positional and keyword arguments that you are passing in.</p>
</div>
<span class="comment-copy">Martijn, you should write books, seriously :)</span>
<span class="comment-copy">@alecxe: but then I wouldn't have time to answer questions here! Unless that was your <i>goal all along</i>, of course. :-P</span>
<span class="comment-copy">Okay :( Reporting your "AFK" time intervals would also work for me. Thanks.</span>
<span class="comment-copy">@alecxe: those fluctuate too much; but perhaps if you carefully observe my posting habits you could find some kind of pattern. If you do, could you let me know too?</span>
<span class="comment-copy">Sure, but if I would do that I would not have time answering questions. See, the only solution here is to start writing books :)</span>
<span class="comment-copy">Thank you so much...I didn't know that...</span>
