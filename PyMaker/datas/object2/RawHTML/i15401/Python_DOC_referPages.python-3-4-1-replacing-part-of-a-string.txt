<div class="post-text" itemprop="text">
<p>I found out about the .replace(), but it works in 2.7.8, but I need it (or something similar), to work in 3.4.1. So I have...</p>
<pre><code>message = ("hello")
message.replace("l", "t")
</code></pre>
<p>and I'm looking to get...</p>
<pre><code>message = hetto
</code></pre>
<p>I know when it changes to hetto it makes no sense, but it is an example.</p>
<p>I tried:</p>
<pre><code> message = ("l")
 message.replace("l", "i")
</code></pre>
<p>and I still get:</p>
<pre><code>message = l
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to assign it back to itself to change the original string:</p>
<pre><code>&gt;&gt;&gt; message = message.replace("l", "t")
&gt;&gt;&gt; message
'hetto'
</code></pre>
<p>Strings are immutable in Python. The only way to change a string is to create a new string.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>replace()</code> is a method of class <code>str</code> </p>
<pre><code>&gt;&gt;&gt; 'hello'.replace('l', 't')
'hetto'
</code></pre>
<p><strong>Post Edit</strong></p>
<p>The <code>replace</code> function is not <em>in-place</em> and returns the changed string. So you will have to reassign the value returned</p>
<pre><code>message = "hello"
message = message.replace('l','t')
print(message)
</code></pre>
<p>will print</p>
<pre><code>hetto
</code></pre>
<p>Also refer this <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">document</a></p>
<p>As <a href="https://stackoverflow.com/questions/27564986/python-3-4-1-replacing-part-of-a-string/27565064?noredirect=1#comment43555676_27565064">holdenweb</a> mentioned in a comment, the <code>replace()</code> method works in the same way in both Python 2 and Python 3.</p>
</div>
<span class="comment-copy">Congrats. What is the question?</span>
<span class="comment-copy">But the function work same in both versions ! so whats the problem ?</span>
<span class="comment-copy"><code>message.replace("l", "i")</code> give <code>'i'</code> for me.</span>
<span class="comment-copy"><code>.replace()</code> hasn't changed its behavior between Python 2 and 3 in this regard. You must be using it differently. Please also remove the unnecessary parentheses.</span>
<span class="comment-copy">I've added the explanation on why <code>.replace()</code> is not an inplace operation in Python. Feel free to rollback.</span>
<span class="comment-copy">There is no essential difference between Python 2 and Python 3's replace(). They are both methods of the string classes.</span>
<span class="comment-copy">@holdenweb Yes, who told there is a difference?</span>
<span class="comment-copy">Perhaps my comment would have been better attached to the question.</span>
<span class="comment-copy">@holdenweb I didn't get you, Do kindly edit my answer if there is a major flaw in it.</span>
<span class="comment-copy">No major flaw. I've edited the answer to give my very limited contribution less emphasis. It's simply that the questioner says "it works in 2.7.8, but I need it (or something similar), to work in 3.4.1," so I thought the information that 2 and 3 work the same way should be included with the answer.</span>
