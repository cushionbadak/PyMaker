<div class="post-text" itemprop="text">
<p>Completing an exercise to find the most common letter in a string, excluding punctuation and the result should be in lowercase. So in the example <code>"HHHHello World!!!!!!!!!!"</code> the result should be <code>"h"</code>. </p>
<p>What I have so far is:</p>
<pre><code>text=input('Insert String: ')
def mwl(text):
    import string
    import collections
    for p in text:
        p.lower()
    for l in string.punctuation:
        for x in text:
            if x==l:
                text.replace(x,'')
    collist=collections.Counter(text).most_common(1)
    print(collist[0][0])

mwl(text)
</code></pre>
<p>I would appreciate your help to understand why:</p>
<ol>
<li>The case is not remaining changed to lower in <code>text</code></li>
<li>The punctuation is not being permanently removed from the <code>text</code> string</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<pre><code>text = input('Insert String: ')

from string import punctuation
from collections import Counter
def mwl(text):
    st = set(punctuation)
    # remove all punctuation and make every letter lowercase
    filtered = (ch.lower() for ch in text if ch not in st)
    # make counter dict from remaining letters and return the most common
    return Counter(filtered).most_common()[0][0]
</code></pre>
<p>Or use str.translate to remove the punctuation :</p>
<pre><code>from string import punctuation
from collections import Counter
def mwl(text):
    text = text.lower().translate(str.maketrans(" "*len(punctuation),punctuation))
    return Counter(text).most_common()[0][0]
</code></pre>
<p>Using your own code you need to reassign text to the updated string:</p>
<pre><code>def mwl(text):
    import string
    import collections
    text = text.lower() 
    for l in string.punctuation:
        for x in text:
            if x == l:
                text = text.replace(x,'')
    collist=collections.Counter(text).most_common(1)
    print(collist[0][0])
</code></pre>
<p>Also instead of looping over the text in your code you could just use in:</p>
<pre><code>for l in string.punctuation:
     if l in text:
        text = text.replace(l,'')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are several issues:</p>
<ul>
<li><p>Strings are immutable. This means that functions like <code>lower()</code> and <code>replace()</code> <em>return</em> the results and leave the original string as is. You need to assign that return value somewhere.</p></li>
<li><p><code>lower()</code> can operate on the entire string: <code>text = text.lower()</code>.</p></li>
</ul>
<p>For some ideas on how to remove punctuation characters from a string, see <a href="https://stackoverflow.com/questions/265960/best-way-to-strip-punctuation-from-a-string-in-python">Best way to strip punctuation from a string in Python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>you can try this:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; my_string = "HHHHello World!!!!!!!!!!"
&gt;&gt;&gt; Counter("".join(re.findall("[a-z]+",my_string.lower()))).most_common(1)
[('h', 4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First big issues is you never actually assign anything. </p>
<pre><code> p.lower() 
</code></pre>
<p>just returns a lowercase version of p. It does not set p to the lowercase version. Should be </p>
<pre><code>p = p.lower()
</code></pre>
<p>Same with the text.replace(x,''). It should be 
    text = text.replace(x,'')</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; from string import ascii_letters
&gt;&gt;&gt; tgt="HHHHello World!!!!!!!!!!" 
&gt;&gt;&gt; Counter(c.lower() for c in tgt if c in ascii_letters).most_common(1)
[('h', 4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If input is ascii-only then you could use <code>bytes.translate()</code> to convert it to lowercase and remove punctuation:</p>
<pre><code>#!/usr/bin/env python3
from string import ascii_uppercase, ascii_lowercase, punctuation

table = b''.maketrans(ascii_uppercase.encode(), ascii_lowercase.encode())
def normalize_ascii(text, todelete=punctuation.encode()):
    return text.encode('ascii', 'strict').translate(table, todelete)

s = "HHHHello World!!!!!!!!!!"

count = [0]*256 # number of all possible bytes
for b in normalize_ascii(s): count[b] += 1 # count bytes
# print the most common byte
print(chr(max(range(len(count)), key=count.__getitem__)))
</code></pre>
<p>If you want to count letters in a non-ascii Unicode text then you could use <a href="https://docs.python.org/3/library/stdtypes.html#str.casefold" rel="nofollow noreferrer"><code>.casefold()</code> method</a> (proper caseless comparison) and <a href="https://stackoverflow.com/a/11066687/4279"><code>remove_punctuation()</code> function</a>:</p>
<pre><code>#!/usr/bin/env python3
from collections import Counter
import regex # $ pip install regex

def remove_punctuation(text):
    return regex.sub(r"\p{P}+", "", text)

s = "HHHHello World!!!!!!!!!!"
no_punct = remove_punctuation(s)
characters = (c.casefold() for c in regex.findall(r'\X', no_punct))
print(Counter(characters).most_common(1)[0][0])
</code></pre>
<p><code>r'\X'</code> regex is used to count user-perceived characters instead of mere Unicode codepoints.</p>
</div>
<span class="comment-copy">It should be <code>text = text.replace(x,'')</code> and p.lower() won't change the string as well.</span>
<span class="comment-copy">Strings are <i>immutable</i>, i.e. cannot be changed in-place, so the string methods return <i>a new string object</i>. You need to assign that new object back to the appropriate name, e.g. <code>text = text.lower()</code>.</span>
<span class="comment-copy">You should use a regex to have an result of 'h'/'H'</span>
<span class="comment-copy">@jonrsharpe now I get it! thanks everyone.</span>
<span class="comment-copy">thanks @Padraic. I have also added 'alpha=''.join(sorted(filtered))     alpha=alpha.replace("","")' - is this the best?</span>
<span class="comment-copy">@Dom13, if you are using my <code>filtered</code> you don't need to replace, there will be no punctuation left,<code>if ch not in st</code> removes the punctuation so all you have to do is pass filtered to Counter.</span>
<span class="comment-copy">should have clarified, was trying to strip all white space. Eventually figured 'text=''.join(text.split())'. thanks again.</span>
<span class="comment-copy">ah ok, I see. No problem</span>
<span class="comment-copy">your <code>.translate()</code>-based solution is incorrect (it returns <code>'!'</code> instead of <code>'h'</code>). Python 3 has different interface here compared to Python 2. Though your solution fails on Python 2 too.</span>
<span class="comment-copy">thanks NPE. will get there. the set(punctuation) solution by user below seems easiest. cheers</span>
