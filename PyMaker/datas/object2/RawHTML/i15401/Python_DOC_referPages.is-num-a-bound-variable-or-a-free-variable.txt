<div class="post-text" itemprop="text">
<pre><code>def function()
    num = 1
    num += 1
    return num
</code></pre>
<p>Is num a bound variable or a free variable?</p>
<p>P.S. This code is written in python. There's no former code ahead of this.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/reference/executionmodel.html" rel="nofollow noreferrer">python doc</a> : <em>If a name is bound in a block, it is a local variable of that block, unless declared as nonlocal. If a name is bound at the module level, it is a global variable. (The variables of the module code block are local and global.) If a variable is used in a code block but not defined there, it is a free variable</em>.</p>
<p>Here <code>num</code> is defined in <code>function</code> and as such is bound to it.</p>
<p>You can look to <a href="https://stackoverflow.com/a/12919351/3545273">this other post</a> from SO to have an example of free variable</p>
</div>
<span class="comment-copy">Many argue that python does not have variables.  You might consider the <i>object</i> instead.  There are two objects in use here, 1 and 2.  <code>num</code> is reference to the object, and is scoped within the function.</span>
<span class="comment-copy">You should surely read: <a href="http://eli.thegreenplace.net/2010/09/18/python-internals-symbol-tables-part-1" rel="nofollow noreferrer">Python internals: Symbol tables, part 1</a></span>
<span class="comment-copy">@cdarke One simply cannot sat Python doesn't have variables because it work differently than C when it works almost identical to how variables works in Lisp. Those objects are in fact what the variable <code>num</code> resolves to at different stages but not the variable itself.</span>
<span class="comment-copy">@Sylwester:  I said <i>Many argue</i> that python does not have variables, I don't argue that, but I can see their point.</span>
