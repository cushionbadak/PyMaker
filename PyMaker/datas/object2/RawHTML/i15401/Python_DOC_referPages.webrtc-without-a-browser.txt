<div class="post-text" itemprop="text">
<p>Right now I am using this project <a href="https://github.com/ragulin/face-recognition-server" rel="noreferrer">here</a>. It is a python script that runs a server using webrtc to send the clients/browsers webcam to the server and perform face recognition. What I want to do is do the same thing with a web cam or pi cam hooked up to the pi but without the use of the browser. Is there a way to do it with the current set up or is there a better method to accomplish this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the native library and connect it to the face recognition server. You can use either the <a href="http://www.webrtc.org/native-code" rel="nofollow noreferrer">google implementation of webrtc</a> or a more recent implementation (by Ericsson) called <a href="http://www.openwebrtc.org/" rel="nofollow noreferrer">openWebrtc</a>. The developers of openWebRTC are very proud of running their implementation on various pieces of hardware like raspberry pi and iOS devices.</p>
<p>If you don't what to mess with a native library you can use a nodejs binding for webrtc (for example <a href="https://github.com/js-platform/node-webrtc" rel="nofollow noreferrer">node-webrtc</a> or <a href="http://www.easyrtc.com/" rel="nofollow noreferrer">easyrtc</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want a Python implementation of WebRTC, give <a href="https://github.com/jlaine/aiortc" rel="nofollow noreferrer">aiortc</a> a try. It features support for audio, video and data channels and builds upon Python's <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow noreferrer">asyncio</a> framework.</p>
<p>The <a href="https://github.com/jlaine/aiortc/tree/master/examples/server" rel="nofollow noreferrer">server example</a> illustrates both how to perform image processing on a video stream and how to send video back to the remote party. Aside from signaling there is no actual "server" or "client" role in WebRTC so you can also run aiortc on your raspberry pi and have it send video frames to whatever WebRTC endpoint you want.</p>
</div>
<span class="comment-copy">You will need to use the native API if you do not want to use a browser. Or hack one of the many native MCU servers.</span>
