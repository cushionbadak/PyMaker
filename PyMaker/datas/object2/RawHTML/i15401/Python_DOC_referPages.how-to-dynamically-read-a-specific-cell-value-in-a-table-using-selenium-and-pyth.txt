<div class="post-text" itemprop="text">
<p>I am working on a automation script [using selenium and python] that should do the following</p>
<ol>
<li>Read the table rows and columns dynamically, look for column[this is constant) which has 0 value set in any of the rows and if found click the [assign/unassign] button column in the same row</li>
</ol>
<p>I do not want to hard-code the xpath of the column that has value "0" rather look for it dynamically and proceed .</p>
<p>Below code is what i have written </p>
<pre><code>trows = table1.find_elements_by_xpath("//table[@id='ambassadors-for-assignment']/tbody/tr")
row_count = len(trows)
tcols = trows.find_elements_by_xpath("//table[@id='ambassadors-for-assignment']/tbody/tr/td")
col_count = len(tcols)
first_part = "//table[@id=ambassadors-for-assignment']/tbody/tr["
second_part = "]/td["
third_part = "]"
for i in range(1, len(row_count)):
    for j in range(1, len(col_count)):
          final_xpath = first_part+i+second_part+j+third_part      
</code></pre>
<p>HTML file structure</p>
<pre><code>&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td&gt; james &lt;/td&gt;
    &lt;td&gt; watson &lt;/td&gt;
    &lt;td&gt; 10 | 5 &lt;/td&gt;
    &lt;td&gt;
      &lt;div class="btn-group" role="group"&gt;
         &lt;button class="btn btn-success" type="button"&gt;
             &lt;i class="fa fa-plus"&gt;&lt;/i&gt;
         &lt;/button&gt;
        &lt;button class="btn btn-danger" type="button"&gt;
            &lt;i class="fa fa-minus"&gt;&lt;/i&gt;
        &lt;/button&gt;
      &lt;/div&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
....
</code></pre>
<p>My HTML file has n number of rows with columns as given above. As i mentioned , i would like to read the third column value[i.e 10 | 5] to see whether or not its 0 [consider only the first item in the third column] and then click the button[btn btn-success] in the next column.</p>
<p>Any pointers to proceed further would be appreciated!</p>
<p>I will provide the link to actual HTML file in the comments section </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I do not want to hard-code the xpath of the column that has value "0" </p>
</blockquote>
<pre><code>from selenium import webdriver
import re

driver = webdriver.PhantomJS()
driver.set_window_size(1120, 550) #For bug
driver.get("http://localhost:8000")

pattern = r"""
    \s*         #Match whitespace, 0 or more times, followed by...
    (\d+)       #a digit, one or more times, captured, followed by
    \s*         #whitespace, 0 or more times, followed by...
    [|]         #vertical bar, followed by...
    \s*         #whitespace, 0 or more times, followed by...
    \d+         #a digit, one or more times
"""
regex = re.compile(pattern, re.X)

table = driver.find_element_by_id('ambassadors-for-assignment')
trs = table.find_elements_by_tag_name('tr')

for tr in trs:
    tds = tr.find_elements_by_tag_name('td')

    for td in tds:
        match_obj = re.search(regex, text)

        if match_obj and match_obj.group(1) == '0':
            success_button = tr.find_element_by_css_selector('button.btn-success')
            print success_button.get_attribute('type')
            success_button.click()
</code></pre>
<p>re.match(pattern, string, flags=0)<br/>
If zero or more characters at the beginning of string match the regular expression pattern, return a corresponding match object. Return None if the string does not match the pattern; note that this is different from a zero-length match.</p>
<p>Note that even in MULTILINE mode, re.match() will only match at the beginning of the string and not at the beginning of each line.</p>
<p>If you want to locate a match anywhere in string, use search() instead (see also search() vs. match()).</p>
<p><a href="https://docs.python.org/3/library/re.html#module-re" rel="nofollow">https://docs.python.org/3/library/re.html#module-re</a></p>
<p><strong>======</strong></p>
<p>Here it is with xpath, and I think it better matches what you are trying to do, i.e. given a column, look down the rows for the value 0:</p>
<pre><code>from selenium import webdriver
import re

driver = webdriver.PhantomJS()
driver.set_window_size(1120, 550) #For bug
driver.get("http://localhost:8000")

pattern = r""" 
    \s*         #Match whitespace, 0 or more times, followed by...
    (\d+)       #a digit, one or more times, captured, followed by
    \s*         #whitespace, 0 or more times, followed by...
    [|]         #vertical bar, followed by...
    \s*         #whitespace, 0 or more times, followed by...
    \d+         #a digit, one or more times
"""
regex = re.compile(pattern, re.X)

trs = driver.find_elements_by_xpath('//table[@id="ambassadors-for-assignment"]/tbody/tr')
target_columns = [3, 4]

for target_column in target_columns:
    for tr in trs:
        target_column_xpath = './td[{}]'.format(target_column)  #VARY COLUMN HERE ***
        td = tr.find_element_by_xpath(target_column_xpath)
        match_obj = re.match(regex, td.text)

        if match_obj and match_obj.group(1) == '0':
            button_xpath = './/button[contains(concat(" ", normalize-space(@class), " "), " btn-success ")]' 
            success_button = tr.find_element_by_xpath(button_xpath)
            #success_button.click()

            print "column {}:".format(target_column)
            print match_obj.group(0)
            print success_button.get_attribute('class')
            print
</code></pre>
<p>The output will look like the following, depending on what text you are trying to match with the regex:</p>
<pre><code>column 3:
0 | 5
btn btn-success

column 4:
0 | 61
btn btn-success
</code></pre>
<p>But in my opinion, having to use the following in an xpath:</p>
<pre><code>'[contains(concat(" ", normalize-space(@class), " "), " btn-success ")]'
</code></pre>
<p>to match a class, means that using xpath is NOT the way to do it.  The python method:</p>
<pre><code>find_element_by_csss_selector('button.btn-success')
</code></pre>
<p>...will do the same thing more succinctly and clearly.</p>
</div>
<span class="comment-copy">link to HTML :   <a href="http://jsfiddle.net/gkfqa644/2/" rel="nofollow noreferrer">jsfiddle.net/gkfqa644/2</a></span>
<span class="comment-copy">None of your td's matches your description, i.e. none of the tds looks like <code>0 | 20</code>.</span>
<span class="comment-copy">From your code i understand that using regular expression will help proceed further, thanks for guiding me in the right direction. It did not occur to me that python regular expressions would have helped! Appreciate your help!  I have marked your answer correct, am a newbie here and do not have privileges to upvote yet!</span>
<span class="comment-copy">@KK16, No worries.  I posted another example, which I think more closely matches what you are trying to do.</span>
<span class="comment-copy">will go through the second example too and see which one will help achieve my task better. Thanks for the prompt response!</span>
