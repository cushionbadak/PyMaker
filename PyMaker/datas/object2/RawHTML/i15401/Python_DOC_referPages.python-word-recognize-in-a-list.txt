<div class="post-text" itemprop="text">
<pre><code>def count_words(text, words):
    count = 0
    text.split()
    print text.split()
    for w in words:
        count += 1
    return count


if __name__ == '__main__':
    #These unit tests are only for self-checking and not necessary for auto-testing
    assert count_words(u"How aresjfhdskfhskd you?", {u"how", u"are", u"you", u"hello"}) == 3, "Example"
    assert count_words(u"Bananas, give me bananas!!!", {u"banana", u"bananas"}) == 2, "BANANAS!"
    assert count_words(u"Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",
                   {u"sum", u"hamlet", u"infinity", u"anything"}) == 1, "Weird text"
</code></pre>
<p>Ok I got the following problem the count result is 4 (I don't know how is that possible).</p>
<p>The result should be instead of 4 it should be 3</p>
</div>
<div class="post-text" itemprop="text">
<p>You're code doesn't make much sense, you write lines like:</p>
<pre><code>print text.split(9
</code></pre>
<p>Where you open a bracket and don't close it.</p>
<p>Furthermore your algorithm:</p>
<pre><code>for w in words:
    count += 1
return count
</code></pre>
<p>Doesn't make much sense: you simply count the number of words.</p>
<p>The method you look for is:</p>
<pre><code>def count_words(text, words):
    count = 0
    for w in words:
        if w in text:
            count += 1
    return count
</code></pre>
<p>One thus adds a constraint (in case the search is <strong>case sensitive</strong>):</p>
<pre><code>if w in text
</code></pre>
<p>Which checks whether <code>text</code> <em>contains</em> the word <code>w</code>.</p>
<p>This gives:</p>
<pre><code>&gt;&gt;&gt; count_words(u"How aresjfhdskfhskd you?", {u"how", u"are", u"you", u"hello"})
2
</code></pre>
<p><code>"how"</code> is not counted since <code>"How"</code> is not the same as <code>"how"</code></p>
<p>In case the search should be <strong>case-insensitive</strong>, you can use:</p>
<pre><code>def count_words(text, words):
    count = 0
    text = text.lower()
    for w in words:
        w = w.lower()
        if w in text:
            count += 1
    return count
</code></pre>
<p>which returns you test-case exactly (using <code>python3</code>):</p>
<pre><code>&gt;&gt;&gt; count_words(u"How aresjfhdskfhskd you?", {u"how", u"are", u"you", u"hello"})
3
&gt;&gt;&gt; count_words(u"Bananas, give me bananas!!!", {u"banana", u"bananas"})
2
&gt;&gt;&gt; count_words(u"Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",{u"sum", u"hamlet", u"infinity", u"anything"})
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def count_words(text, words, case_insensitive=False):
    """Returns the number of space-delimited words in `text` that
    appear in some iterable `words`"""

    if case_insensitive:
        text = text.lower()
        words = map(str.lower, words)
    return sum(1 for word in text.split() if word in words)
</code></pre>
<p>Using that kind of generator expression is a very idiomatic way to construct this function. Basically constructing a list full of <code>1</code>s for every word in <code>text.split()</code> that is also in <code>words</code>, then returning the <code>sum</code> of those <code>int</code>s</p>
</div>
<span class="comment-copy">you have typo and bad indentation. pls correct it</span>
<span class="comment-copy">1. The code isn't syntactically valid. 2. You haven't told us what the code is supposed to do.</span>
<span class="comment-copy">how u mean correct it</span>
<span class="comment-copy">The code is supposed to get count up to 3 but I get count up to 3               Look bellow asser results it should recognize the words and add them to count</span>
<span class="comment-copy">Thx man!U are awesome thx for explain</span>
<span class="comment-copy">@qeqweaskjsa: fixed it, replace it by <code>lower()</code>.</span>
<span class="comment-copy">Note in Python3.3 and newer, <a href="https://docs.python.org/3/library/stdtypes.html#str.casefold" rel="nofollow noreferrer"><code>str.casefold</code></a> is probably better than <code>str.lower</code></span>
