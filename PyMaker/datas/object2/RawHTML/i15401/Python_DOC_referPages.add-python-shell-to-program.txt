<div class="post-text" itemprop="text">
<p>I try to make game in python using pygame. It should be learning game, so I want to ask if it is possible to run python shell in game window or I have to program my own parser? </p>
</div>
<div class="post-text" itemprop="text">
<p><code>subprocess.Popen('python')</code> will open a Python interpreter in a new window, similar to typing 'python' on a command line.  But I suspect that this is not what you meant by 'in a game window'.</p>
<p><code>cmd.Cmd</code> creates "A simple framework for writing line-oriented command interpreters" (that use verb object... syntax).  It could be used for writing a text adventure game ('go east', 'open box', 'look room', etc).</p>
<p><code>code.InteractiveInterpreter</code> is specifically for Python interpreters.  It uses <code>compile</code> and <code>exec</code>.  Idle's Shell is based on a subclass thereof defined in idlelib/PyShell.py.  It simulates the Python interactive interpreter in a tkinter window.  There is no need to re-write the parser included in <code>compile</code>; one can tell compile to stop with the abstract syntax tree that is the output of the parser.</p>
</div>
<span class="comment-copy">There are <code>eval()</code>, <code>exec()</code> functions. <code>python3 -midlelib</code> is implemented in Python.</span>
<span class="comment-copy">@J.F.Sebastian please never recommend eval/exec without mentioning their serious security and performance implications; especially to obivious beginners like OP. Comments like yours are probably a contributor to the countless "I want to program a calculator with exec()" questions... OP, your question is too broad - you can embed all kinds of things into your game; as stated you <i>can</i> use exec/eval but that lets the user excecute arbitrary python code. Depending on what you want to do exactly, you could use the <code>cmd</code> module to create an interactive shell, and/or write a small parser for a DSL.</span>
<span class="comment-copy">@l4mpi: OP explicitly asks about "python shell". Not calculator, not coffee machine but about <b>python</b> shell. Look at the author of <a href="http://stackoverflow.com/a/9558001/4279">this answer to "Evaluating a mathematical expression in a string"</a></span>
<span class="comment-copy">@J.F.Sebastian and OP does not make clear that "python shell" means the same thing to them it means to you and me. Why would a "learning game" need the user to enter arbitrary python code? It's unclear if a python shell is really needed, and it's probably far from being the best tool for the job. Also, if OP does not know about exec/eval they also don't know about the security and performance implications (e.g. you <i>can't</i> restrict access to builtins), thus my comment still holds - you should probably default to linking to that excellent answer of yours when recommending eval/exec.</span>
<span class="comment-copy"><code>python3 -midlelib</code> example makes it clear: what type of "python shell" I'm talking about. btw, I don't see security or performance mentioned in <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer">eval/exec docs</a>. You could <a href="https://docs.python.org/devguide/docquality.html" rel="nofollow noreferrer">submit a documentation patch</a> that discusses them (in a separate section with links from the corresponding functions).</span>
