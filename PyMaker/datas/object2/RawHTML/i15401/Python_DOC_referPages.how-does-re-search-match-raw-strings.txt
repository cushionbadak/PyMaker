<div class="post-text" itemprop="text">
<p><code>re.search(r'c\.t', 'c.t abc')</code> matches successfully to <code>c.t</code>. But the pattern being matched is <code>c\.t</code>, how is  <code>c.t</code> matching to <code>c\.t</code>? What happened to the backslash?</p>
</div>
<div class="post-text" itemprop="text">
<p>Inside a regular expression, the dot character has a special meaning, which is that it can match any character at all other than a newline (unless the <code>re.S</code>/<code>re.DOTALL</code> flag is used).  In this case, the backslash has the effect of escaping the dot from its special meaning and letting the regular expression engine interpret it as literally matching only a dot (and no other character).  Consider if the backslash is not there:</p>
<pre><code>&gt;&gt;&gt; re.search(r'c.t', 'c.t abc')
&lt;_sre.SRE_Match object at 0x7fe7378d8370&gt;
</code></pre>
<p>The original string you provided as input still matches.  But now the following will also match:</p>
<pre><code>&gt;&gt;&gt; re.search(r'c.t', 'I saw a cat')
&lt;_sre.SRE_Match object at 0x7fe7378d83d8&gt;
</code></pre>
<p>Because the <code>a</code> in <code>cat</code> qualifies as any non-newline character, which is what <code>.</code> will match if unescaped with a backslash.  You can see that if we add the backslash back in, it no longer matches.</p>
<pre><code>&gt;&gt;&gt; print(re.search(r'c\.t', 'I saw a cat'))
None
</code></pre>
<p>More on Python's implementation of regular expressions here:</p>
<p>Python 2.7.x: <a href="https://docs.python.org/2/library/re.html" rel="nofollow">https://docs.python.org/2/library/re.html</a></p>
<p>Python 3.4.x: <a href="https://docs.python.org/3/library/re.html" rel="nofollow">https://docs.python.org/3/library/re.html</a></p>
<p>Edited to reflect @cdarke's excellent point about newlines</p>
</div>
<span class="comment-copy">What backslash?</span>
<span class="comment-copy">The pattern being matched includes a backslash right? Because it is a raw string.</span>
<span class="comment-copy">@Ankit There's no backslash here..</span>
<span class="comment-copy">The backslash removes the special meaning of . (dot), which otherwise means one occurrence of any character (except \n, depending on flags).  Is that what you mean?</span>
<span class="comment-copy">You changed a comment, are you thinking there is a hidden backslash because of the <code>r""</code>?  There isn't.</span>
<span class="comment-copy">By default . does not match a newline unless the S flag (DOTALL) is used.</span>
<span class="comment-copy">@cdarke Thanks for the excellent catch, answer has been updated to reflect that.</span>
