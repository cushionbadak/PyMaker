<div class="post-text" itemprop="text">
<p>I can't find the answer as why this code for range loop, behaves OK in 2.7 and not in 3.4.</p>
<pre><code>from graphics import *


def main():
    win = GraphWin("Click Me!")
    for i in range(10):
        p = win.getMouse()

        print("you clicked at:", p.getX() , p.getY())


 main()
</code></pre>
<p>output on 2.7 is: <code>"you clicked at: 56 77 "</code>  once I click</p>
<p>output on 3.4 is" <code>"you clicked at:"</code> once I click then, 56 77
                   <code>"you clicked at:</code></p>
<p>Is it range behaving different or print?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>In Python 2 <a href="https://docs.python.org/2.6/reference/simple_stmts.html#print" rel="nofollow"><code>print</code> is a statement</a></strong>, and this:</p>
<pre><code>print("you clicked at:", p.getX() , p.getY())
</code></pre>
<p>prints the tuple <code>("you clicked at:", p.getX() , p.getY())</code>, which my default puts a space between each entry.</p>
<p><strong>In Python 3, <a href="https://docs.python.org/3/library/functions.html?highlight=print#print" rel="nofollow"><code>print</code> is a function</a></strong> and you are calling it with the arguments:</p>
<pre><code>"you clicked at:", p.getX() , p.getY()
</code></pre>
<p>As the documentation shows:</p>
<blockquote>
<p><code>print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False)</code></p>
</blockquote>
<hr/>
<p>Addendum:</p>
<p>After some research on the <code>GraphWin</code>, it appears that you are using the <a href="http://mcsp.wartburg.edu/zelle/python/graphics.py" rel="nofollow">Zelle Graphics library.</a> Which has been updated once since 2011 to correct a small 2-to-3 issue, and some universities appear to be using a much older version.</p>
<p>I didn't delve much deeper in but I think that there is going to be a few incompatibilities in the library so may not be able to do a straight switch to Python 3.</p>
</div>
<span class="comment-copy">This is a pretty straight forward question, that includes code and a clear description of the problem. Its not worth the downvote brigade.</span>
<span class="comment-copy">Perhaps in 3.4 you're getting both a down-click and an up-click event.</span>
<span class="comment-copy">Well it behaves like this one down + up event = half of what i have inside print. one more time and prints p.get(), p.gety() in the same line but also prints the next "you clicked at:" in the next line. Also if you remove the loop and make it work for once it works. But i can't figure out why this behaviour.</span>
<span class="comment-copy">But why when i remove the <code>for i in range(10)</code> in python 3, the output is right in one line?</span>
<span class="comment-copy">I'm not quite sure why that is, but the <code>range</code> function isn't causing your problem, its that you are using <code>print</code> incorrectly.</span>
<span class="comment-copy">I don't think that's the problem: <code>sep</code> and <code>end</code> have to be keyword arguments, don't they? From the docs: <code>All non-keyword arguments are converted to strings like str() does and written to the stream, separated by sep and followed by end.</code></span>
<span class="comment-copy">Good point. Hmmm.</span>
<span class="comment-copy">I understand i did it in python 2, i treated it as a function. But again in Python 3 once i remove the for range loop the output is different and i think print is being used property, like xnx said shouldnt the keyword arguments be preceded by an end and sep?</span>
