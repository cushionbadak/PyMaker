<div class="post-text" itemprop="text">
<p>I am new to python and I am trying to read various configuration files, checking for a hostgroup, service or service group. This script will check if a hostgroup exists based on what the user inputs. If it doesn't exist, then a new config file is created with the hostgroup, service and service group. Right now I can't get my sys.argv to provide me with the user's input where needed whenever a new config file(hostgroup, service, service group) is created. The file and hostgroup names are the same as the user input. Here is the script:</p>
<pre><code>#!/usr/bin/python
import sys
from sys import argv
script, solution_id = argv

from pynag import Model

## This is for the custom nagios module
sys.path.insert(1, '../')
from pynag.Parsers import config

target_host = sys.argv[1]

## Create the plugin option
nc = config('/etc/nagios/nagios.cfg')
nc.parse()


hostgroup = nc.get_hostgroup(target_host)

def addObject():


    # Create hostgroup object
    hg = Model.Hostgroup()

    hg.set_filename('/etc/nagios/objects/solution1/target_host.cfg')

    # Set some attributes
    hg.notification_options = 'n'
    hg.alias = 'target_host'
    hg.hostgroup_name = 'target_host'

    # Save
    hg.save()

    print "hostgroup added"

    # Create service object
    s = Model.Service()

    s.set_filename('/etc/nagios/objects/solution1/target_host.cfg')

    # Set some attributes
    s.notification_options = 'n'
    s.use = 'generic-service'
    s.service_description = 'target_host'
    s.hostgroup_name = 'target_host'

    # Save
    s.save()

    print "service added"

    # Create servicegroup object
    sg = Model.Servicegroup()

    sg.set_filename('/etc/nagios/objects/solution1/target_host.cfg')

    # Set some attributes
    sg.servicegroup_name = 'target_host'
    sg.alias = 'target_host'
    sg.action_url = '/etc/nagios/objects/solution1/target_host.cfg'

    # Save        
    sg.save()

    print "service group added"





#if len(sys.argv) != 2:
    #sys.stderr.write("Usage:  %s 'solution_id'\n" % (sys.argv[0]))
    #sys.exit(2)





if not hostgroup:
    sys.stderr.write("Object not found: %s\n" % sys.argv[1])
    addObject()
    sys.exit(2)

print nc.print_conf(hostgroup)
</code></pre>
<p>Here is the config file that is created when the system calls to create a new file.</p>
<pre><code># Configuration file /etc/nagios/objects/solution1/target_host.cfg
# Edited by PyNag on Mon Jan  5 21:42:12 2015

define hostgroup {
     alias                          target_host                   
     hostgroup_name                 target_host                   
}

# Configuration file /etc/nagios/objects/solution1/target_host.cfg
# Edited by PyNag on Mon Jan  5 21:42:12 2015

define service {
     service_description            target_host                   
     use                            generic-service               
     notification_options           n                             
     hostgroup_name                 target_host                   
}

# Configuration file /etc/nagios/objects/solution1/target_host.cfg
# Edited by PyNag on Mon Jan  5 21:42:12 2015

define servicegroup {
     alias                          target_host                   
     action_url                     /etc/nagios/objects/solution1/target_host.cfg
     servicegroup_name              target_host                   
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sequences of characters within <a href="http://en.wikipedia.org/wiki/String_literal" rel="nofollow"><em>string literals</em></a> do not get magically replaced by the contents of any variables that happen to have the same name--just imagine the chaos that would create! If you want Python to use a variable, you need to actually <em>use the variable.</em> I strongly recommend that you work through <a href="https://docs.python.org/3/tutorial/" rel="nofollow">a tutorial</a> if you have questions about this sort of thing.</p>
<p>Everywhere in your script that you're using the <em>string</em> <code>'target_host'</code> (note the single quotes), you should change it to the <em>variable name</em> <code>target_host</code>, to refer to the variable you set from user input on line 12. For example:</p>
<pre><code>hg.notification_options = 'n'
hg.alias = target_host
hg.hostgroup_name = target_host
</code></pre>
<hr/>
<p>If you also need to insert the user input into the configuration file name, I suggest you use <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><em>string formatting</em></a> to insert the variable into a base string. In the example below, the characters <code>{0}</code> within the format string are replaced by the contents of the <code>target_host</code> variable.</p>
<pre><code>hg.set_filename('/etc/nagios/objects/solution1/{0}.cfg'.format(target_host))
</code></pre>
</div>
<span class="comment-copy">And... what exactly is your question? What about that pile of code &amp; output isn't doing what you expect it to be doing?</span>
<span class="comment-copy">Yes sorry. I can't get my sys.argv, my command argument to show up in a newly created config file where needed. The config file isn't showing the right names from whatever the user inputs on the command line. i.e., if I put ISD-CR-go and that hostgroup doesn't exist, then the script will create a new one for me with the ISD-CR-go as the hostgroup. Wherever you see 'target_host' it's supposed to read what was inputed.</span>
<span class="comment-copy">Yes. this works when I take out the quotes. Thanks. Oh by the way what about the name of the file? I notice that it doesn't change from 'targethost.cfg'.</span>
<span class="comment-copy">@bayernmunich <code>'/etc/nagios/objects/solution1/target_host.cfg'</code> is a string literal just like any other. If you want a string to contain the contents of a variable, you need to insert it yourself. I've edited the answer to add a mention of how to do this, but if you're confused about the distinction between strings and variables, I cannot recommend strongly enough that you go work through a tutorial before you attempt to go any further.</span>
<span class="comment-copy">Thanks. I'm good with this. This answer was very helpful!</span>
