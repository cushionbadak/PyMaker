<div class="post-text" itemprop="text">
<p>I have a string similar to this:</p>
<pre><code>string = '(1:[0,0,0]; 2:[21,0,12])'
</code></pre>
<p>Except my string goes on for thousands of numbers.</p>
<pre><code>... '4214:[9,93,42])'
</code></pre>
<p>How do I select the number, colon, and opening bracket? Like this:</p>
<pre><code>'1:['
'2:['
'2831:['
'4214:['
</code></pre>
<p>I want to select each one of these and replace it with a new string: <code>'('</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/library/re.html" rel="nofollow">regular expression</a>:</p>
<pre><code>new_string = re.replace(r'[0-9]+:\[', r'\(', string)
</code></pre>
<p>This replaces all occurences of <code>&lt;number&gt;:[</code> with <code>(</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your data is already in the form of a dictioanry. Just do the following: </p>
<pre><code>In [35]: xx = eval(string.replace(";", ',').replace('(', '{').replace(')', '}'))
</code></pre>
<p>The result is a dictionary ...</p>
<pre><code>In [36]: xx.keys()
Out[36]: [1, 2]

In [37]: xx[2]
Out[37]: [21, 0, 12]
</code></pre>
</div>
<span class="comment-copy">Where are you getting the string from? There might be a way to convert it directly from the source.</span>
<span class="comment-copy">That string is the source. It's a file that's globally referenced to retrieve data. @Electron</span>
<span class="comment-copy">@Rufflewind's answer is the way I would do it.</span>
<span class="comment-copy">If the string is guaranteed to consist of only numbers inside those lists <code>[1,2,3]</code>, you can convert it to a dictionary by replacing the quotes with curly brackets and semicolons with commas. Then you could use something like <code>exec('variable = ' + formatted_string)</code>. From then on, you can do all kinds of data manipulation with a dictionary like finding all the values and keys.</span>
<span class="comment-copy">You have an extra <code>)</code>, and probably shouldn't be using <code>string</code>.</span>
<span class="comment-copy">It was meant to overwrite <code>string</code> but I realize that might cause confusion.</span>
