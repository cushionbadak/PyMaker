<div class="post-text" itemprop="text">
<p>I'm trying to open file in relative location:</p>
<pre><code>import time, os
day=time.strftime("%Y%m%d")
month=time.strftime("%m")
filename=time.strftime("%Y%m%d")


logs_dir = os.path.dirname('C:\Users\user1\Desktop\folder\main\Logs') 
rel_path = '\'+month+'\'+filename+'.txt'
abs_file_path = os.path.join(script_dir, rel_path)
file = open(abs_file_path, 'r')
</code></pre>
<p>I couldn't get the second line right with variables and backslashes.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>\u</code> has special meaning in a Python string literal; it denotes a Unicode character.  So does <code>\f</code>, which denotes a formfeed.</p>
<p>You will need to use a <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">raw-string</a>:</p>
<pre><code>logs_dir = os.path.dirname(r'C:\Users\user1\Desktop\folder\main\Logs')
</code></pre>
<p>or forwardslashes:</p>
<pre><code>logs_dir = os.path.dirname('C:/Users/user1/Desktop/folder/main/Logs')
</code></pre>
<p>in order to keep Python from interpreting them as such. You could also double every backslash:</p>
<pre><code>logs_dir = os.path.dirname('C:\\Users\\user1\\Desktop\\folder\\main\\Logs')
</code></pre>
<p>but that is rather tedious.</p>
<hr/>
<p>Also, you need to double the backslash for every <code>'\'</code> since string literals cannot end in a single <code>\</code>.  But this is not a very robust solution.  A better approach for building paths is to use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join</code></a>:</p>
<pre><code>rel_path = os.path.join('\\', month, filename + '.txt')
</code></pre>
<p>Then, you can replace every <code>'\\'</code> with <a href="https://docs.python.org/3/library/os.html#os.sep" rel="nofollow"><code>os.sep</code></a> as @helloV said in his answer.  This will ensure that your code creates proper-looking paths on both Windows and *nix systems.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>os.sep</code> instead of '\', to avoid escaping issues.</p>
<p>Try:</p>
<pre><code>abs_file_path = os.path.join(script_dir, month, filename) + '.txt'
</code></pre>
</div>
<span class="comment-copy">You don't need the <code>'\\'</code> between <code>month</code> and <code>filename</code> in the call to <code>os.path.join</code>.</span>
<span class="comment-copy">Thanks, I was just copying the OP's code and missed that.</span>
<span class="comment-copy">Thanks! I had to add a double backslashes at the end <code>logs_dir = os.path.dirname(r'C:\Users\user1\Desktop\folder\main\Logs\\')</code> and all worked perfect!</span>
<span class="comment-copy">Try to avoid forward slashes.  They're OK in this particular context, but not always, and it's a dangerous habit to get into.</span>
<span class="comment-copy">@HarryJohnston, can you give an example of a context where they would not be OK?</span>
