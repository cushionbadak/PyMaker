<div class="post-text" itemprop="text">
<p>So I'm reading from a text file to make a dictionary, however once it's adding \n on to the end of the line... Why is this?</p>
<p>Python</p>
<pre><code>irTable = {}
with open("devices.txt") as file:
        for line in file:
                value = line.split(",")
                label = str(value[0])
                freq = int(value[1])
                state = str(value[2])

                irTable[label] = freq, state
                print(irTable)
</code></pre>
<p>Text file</p>
<pre><code>lamp, 000000, False
tv, 000000, False
bedside, 000000, False
pc, 000000, False
bed tv, 000000, False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>All your lines have the newline; you need to remove it first before processing the line:</p>
<pre><code>value = line.rstrip('\n').split(",")
</code></pre>
<p>Python doesn't remove it for you. The <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow"><code>str.rstrip()</code> method</a> used here will remove any number of <code>\n</code> newline characters from the end of the line; there will never be more than one. You could also extend this to any whitespace, on both ends of the string, by using <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow"><code>str.strip()</code></a> with no arguments.</p>
<p>You already start with strings, so there is no need to use <code>str()</code> calls here. If your lines are comma-separated, you could just use the <code>csv</code> module and have <em>it</em> take care of line endings:</p>
<pre><code>import csv

irTable = {}
with open("devices.txt", newline='') as file:
    for label, freq, state in csv.reader(file, skipinitialspace=True):
        irTable[label] = int(freq), state
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; from io import StringIO
&gt;&gt;&gt; import csv
&gt;&gt;&gt; demofile = StringIO('''\
... lamp, 000000, False
... tv, 000000, False
... bedside, 000000, False
... pc, 000000, False
... bed tv, 000000, False
... ''')
&gt;&gt;&gt; irTable = {}
&gt;&gt;&gt; for label, freq, state in csv.reader(demofile, skipinitialspace=True):
...     irTable[label] = int(freq), state
... 
&gt;&gt;&gt; irTable
{'lamp': (0, 'False'), 'tv': (0, 'False'), 'bedside': (0, 'False'), 'bed tv': (0, 'False'), 'pc': (0, 'False')}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Remove <code>"\n"</code> from line before split by <code>","</code>
e.g.</p>
<pre><code>irTable = {}
with open("111.txt") as file:
    for line in file:
        value = line.strip().split(",")
        irTable[value[0].strip()] = int(value[1]), value[2].strip()
print(irTable)
</code></pre>
<p>Output:</p>
<pre><code>{'tv': (0, 'False'), 'pc': (0, 'False'), 'lamp': (0, 'False'), 'bedside': (0, 'False'), 'bed tv': (0, 'False')}
</code></pre>
</div>
<span class="comment-copy">you can use <code>splitlines()</code> too , as you have 4 line in your file .</span>
<span class="comment-copy">Those <code>str</code> calls are redundant, since the items of <code>value</code> are <b>already</b> strings.  Also: use the <code>csv</code> module of the standard library rather than parsing a comma-separated-variables file yourself.</span>
<span class="comment-copy">@Kasra: that requires that you read the whole file into memory first however. If you want to process the file line by line as the OP is doing, you just strip of the newline.</span>
<span class="comment-copy">@MartijnPieters yes , you are right 100% , just as it have 4 line i suggest it</span>
<span class="comment-copy">It's not "adding" <code>\n</code>. Each line in a file (except the last line) is terminated with a newline.</span>
<span class="comment-copy">Awesome, thanks!</span>
