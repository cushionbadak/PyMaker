<div class="post-text" itemprop="text">
<p>I'm trying to make a function which prints to the command prompt and to a file. I get encoding/decoding errors with the following code:</p>
<pre><code>import os

def pas(stringToProcess): #printAndSave
  print stringToProcess 
  try: f = open('file', 'a')
  except: f = open('file', 'wb')
  print  &gt;&gt; f, stringToProcess
  f.close()

all = {u'title': u'Pi\xf1ata', u'albumname': u'New Clear War {EP}', u'artistname': u'Montgomery'}

pas(all['title'])
</code></pre>
<p>I get the following output:</p>
<pre><code>Piñata
Traceback (most recent call last):
  File "new.py", line 17, in &lt;module&gt;
     pas(all['title'])
  File "new.py", line 11, in pas
    print  &gt;&gt; f, stringToProcess
UnicodeEncodeError: 'ascii' codec can't encode character u'\xf1' in position 2: ordinal not in range(128)
</code></pre>
<p>I've tried all the encode()/decode() permutations I can imagine from similar answers on here, without success. How can this error be solved?</p>
</div>
<div class="post-text" itemprop="text">
<p>As someone commented, you probably just need to specify which codec to use when writing the string.  E.g., this works for me:</p>
<pre><code>def pas(s):
    print(s)
    with open("file", "at") as f:
        f.write("%s\n" % s.encode("utf-8"))

pas(u'Pi\xf1ata')
pas(u'Pi\xf1ata')
</code></pre>
<p>As you can see, I specifically open the file in append/text mode. If the file doesn't exist, it will  be created. I also use <code>with</code> instead of your try-except method. This is merely the style I prefer.</p>
<p>As Bhargav says, you can also set the default encoding. It all depends on how much control you need in your program and both ways are fine.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>sys.setdefaultencoding('utf8')</code> to prevent the error from occuring. </p>
<p>That is</p>
<pre><code>import os,sys
reload(sys)  
sys.setdefaultencoding('utf8')
def pas(stringToProcess): #printAndSave
  print stringToProcess 
  try: f = open('file', 'a')
  except: f = open('file', 'wb')
  print  &gt;&gt; f, stringToProcess
  f.close()

all = {u'title': u'Pi\xf1ata', u'albumname': u'New Clear War {EP}', u'artistname': u'Montgomery'}

pas(all['title'])
</code></pre>
<p>This would print </p>
<pre><code>Piñata
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I've just done this and it works, I read an interesting <a href="https://stackoverflow.com/questions/5096776/unicode-decodeutf-8-ignore-raising-unicodeencodeerror">question</a>.</p>
<p>Encoding is always a bit tricky :</p>
<pre><code>def pas(stringToProcess): #printAndSave
    strtp = stringToProcess.encode('utf-8')
    print stringToProcess
    try: f = open('file.txt', 'a')
    except: f = open('file.txt', 'wb')
    f.write(strtp)
    f.close()

all = {u'title': u'Pi\xf1ata', u'albumname': u'New Clear War {EP}', u'artistname': u'Montgomery'}

pas(all['title'])
</code></pre>
</div>
<span class="comment-copy">Why are you opening the file in textmode when appending, but in binary mode if an exception was thrown? Not that it matters here, you are not writing newlines, and opening the file in append mode will either work or the opening of the file in <code>'wb'</code> mode will fail for the same reasons opening in append mode fails.</span>
<span class="comment-copy">And <code>all['title'].encode('utf8')</code> would work just fine. What <i>did</i> you try?</span>
<span class="comment-copy">I think he might be trying to append to a file if it exists, otherwise create it.</span>
<span class="comment-copy">I tried all sorts of codecs with errors='replace' and errors='ignore' but I think I was encoding strings that were already encoded, as I had these issues earlier. Once I removed all traces of encode/decode apart from the one in the function, it worked. That is correct Burhan Khalid.</span>
<span class="comment-copy">An easier way to do this is is to use <a href="https://docs.python.org/2/library/codecs.html?highlight=open#codecs.open" rel="nofollow noreferrer"><code>'codecs.open()</code></a> because the encoding/decoding of any data written/read is done automatically.</span>
<span class="comment-copy">@martineau I actually didn't know about it! Does it default to UTF-8 the first time the file is created? Thanks.</span>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/codecs.html?highlight=open#codecs.open" rel="nofollow noreferrer">docs</a> don't mention a default encoding, although the argument is optional...so I would assume it doesn't do any encoding for you if it's not specified (although that would make it just like a regular <code>open()</code>).</span>
