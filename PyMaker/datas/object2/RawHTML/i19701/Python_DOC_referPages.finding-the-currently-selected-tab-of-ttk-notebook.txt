<div class="post-text" itemprop="text">
<p>I have a Ttk Notebook widget containing 8 Frames - so, 8 tabs. Each frame contains a Text widget. I have a button outside the Notebook widget, and I want to insert text into the current tabs Text widget when this button is pressed.</p>
<p>This would seem to require working out which widget in the Notebook is currently selected, but I can't seem to find how to do this. How would I find the currently selected tab?</p>
<p>Alternatively, how can I implement what I want to?</p>
<p>If it helps, here's the code for my notebook:</p>
<pre><code>self.nb = Notebook(master)
self.nb.pack(fill='both', expand='yes', padx=10, pady=10)
self.frames = []
self.texts = []
for i in xrange(8):
  self.frames.append(Frame())
  self.nb.add(self.frames[i])
  self.texts.append(Text(self.frames[i]))
  self.texts[i].pack(fill='both')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can retrieve the selected tab through <code>select</code> method. However, this method returns a tab_id which is not much useful as is. <code>index</code> convert it to the number of the selected tab.</p>
<pre><code>&gt;&gt;&gt; nb.select()
'.4299842480.4300630784'
&gt;&gt;&gt; nb.index(nb.select())
2
</code></pre>
<p>Note that you coud also get more information about the selected tab using <code>tab</code></p>
<pre><code>&gt;&gt;&gt; nb.tab(nb.select(), "text")
'mytab2'
</code></pre>
<p>You might look at Notebook reference documentation : <a href="http://docs.python.org/3/library/tkinter.ttk.html#notebook" rel="noreferrer">http://docs.python.org/3/library/tkinter.ttk.html#notebook</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can get currently selected tab using the <code>"current"</code> keyword:</p>
<pre><code>noteBook.index("current")
</code></pre>
<p>Check this website:
<a href="https://docs.python.org/2/library/ttk.html#tab-identifiers" rel="nofollow noreferrer">https://docs.python.org/2/library/ttk.html#tab-identifiers</a>
24.2.5.3. Tab Identifiers</p>
</div>
<div class="post-text" itemprop="text">
<p>I am not a expert at all but hope i can help with some "fresh eyes".
I imagine it could be something involving</p>
<pre><code>def buttonclick():
      somevariablename = focus_get()
      #Print your text into the somevariable notebook could be
      #something like(not sure about the syntax):
      focusednotebook = somevariablename
      focusednotebook.insert('1.0', 'your text here')

yourbutton = Button(parent, text = "button name", command = buttonclick)
yourbutton.pack()
</code></pre>
<p>Hope it works or get you in the right direction.</p>
<p>Please feel free to edit as I am fairly new here amd with python :-)</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two simple ways to see which tab is selected:</p>
<pre><code>nb.select()  # returns the Tab NAME (string) of the current selection
</code></pre>
<p>and</p>
<pre><code>nb.index('current') # returns the Tab INDEX (number) of the current selection
</code></pre>
<p>The <code>.select()</code> method can also be used to select which tab is currently active, via <code>nb.select(tabId)</code>.  Without the arg, it returns the tabId (in "name" form) of the current selection.</p>
<p>The <code>.index(tabId)</code> converts a tabId into a numerical index. It also can take the string "end" which will return the number of tabs. So, <code>nb.index(tkinter.END)</code> is like a <code>len()</code> method for a notebook widget.</p>
<p>When there are no tabs, <code>.select()</code> returns an empty string, but <code>.index('current')</code> throws an exception. So, if you want the index, I would say</p>
<pre><code>if nb.select():
    idx = nb.index('current')
</code></pre>
<p>is the best way to go.</p>
<p>In your particular case, you would probably want to grab the current notebook tab name and then convert that name into the actual child text widget, via the <code>nametowidget()</code> method, for manipulation. So...</p>
<pre><code>tabName = notebook.select()
if tabName:
    textWidget = notebook.nametowidget(tabName) # here, 'notebook' could be any widget
    textWidget.insert(pos, text, tags)
</code></pre>
<p>The <code>nametowidget(name)</code> method maps a Tkinter name to the actual widget. It is a method callable by any actual widget.</p>
</div>
<span class="comment-copy">Ahhh, exactly what I wanted! I was having trouble sifting through the documentation, so I must have missed this. But yes, this is perfect.</span>
<span class="comment-copy">nice and simple!</span>
<span class="comment-copy">Ahhh, yes, this is pretty similar to what I ended up using. Not quite what I'm looking for, but it does what I need it to.</span>
