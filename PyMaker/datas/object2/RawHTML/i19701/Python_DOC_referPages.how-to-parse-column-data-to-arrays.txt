<div class="post-text" itemprop="text">
<p>I have a file as follows:</p>
<pre><code>1 99
2 33
3 90
4 25
5 89
</code></pre>
<p>I want to parse <code>1,2,3,4,5</code> into list <code>x</code> and <code>99, 33, 90, 25, 89</code> into list <code>y</code>, how can I do it?</p>
<p>The part I dont' understand is that I just can readline but don't know how to parse in to two lists, I guess maybe there's a more elegant way to to it except spliting by space and add <code>words[0]</code> to <code>x</code> and <code>word[1]</code> to <code>y</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('number-file') as f:
    x,y = zip(*(map(int, line.split()) for line in f))
</code></pre>
<p>will get you what you want.</p>
<pre><code>with open('number-file') as f:
</code></pre>
<p>opens a file for reading (and closes it once the code is done). You can then simply iterate over it.</p>
<pre><code>(line.split() for line in f)
</code></pre>
<p>is a <a href="http://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="nofollow">generator expression</a> that yields two strings for each line. For each line, <code>map(int, line.split())</code> converts these strings into integers. The result until now looks like</p>
<pre><code>[[1, 99], [2, 33], [3, 90], [4, 25], [5, 89]]
</code></pre>
<p>With <a href="http://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a>, we can join the n-th elements of the sublists in the result lists <code>x</code> and <code>y</code>.</p>
<p>Technically, x and y are <a href="http://docs.python.org/3/library/functions.html#tuple" rel="nofollow">tuples</a>(immutable) instead of lists(can be extended and changed) now. In most cases, tuples should work as well, but if you really need lists, simply add</p>
<pre><code>x,y = list(x), list(y)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>left_column = []
right_column = []
with open('your_file') as f:
  reader = csv.reader(f, delimiter=' ')

  for line in csv_reader:
    left_column.append(line[0])
    right_column.append(line[1])
</code></pre>
</div>
<span class="comment-copy">With which part are you stuck? Opening the file? Reading in the data? Appending to a list? If you can show us your code so far, we should be able to help you on your way.</span>
<span class="comment-copy">Also, Python 2 or 3?</span>
<span class="comment-copy">Splitting by space is perfectly fine. Using <code>csv</code> is the obvious alternative, but you have to decide on the tradeoffs yourself. It's a bit more complicated and verbose, but maybe clearer, and it should give you better exceptions when there's an error in the input file. You could also use a fancier parser, butâ€¦ why bother in this case? If you showed us your actual code, we could show you ways to make it more elegant, but otherwise, all anyone can do is give you generalities, or toss some finished code in your lap.</span>
<span class="comment-copy">thank you so much!!</span>
