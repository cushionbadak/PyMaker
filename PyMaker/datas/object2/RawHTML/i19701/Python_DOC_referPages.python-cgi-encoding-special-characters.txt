<div class="post-text" itemprop="text">
<p>This prints "Test: £17" when run from the local console, but only prints "Test: " when run from the web browser. How can I rectify the issue when loaded through the browser? Thanks!</p>
<pre><code>#!/usr/bin/python3.2
print ("Content-Type: text/html")
print ("")

y = "£17"
print ("Test:", y)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python will encode unicode values to bytes when printing to the console. </p>
<p>Encode explicitly when sending to a browser, by writing directly to <code>sys.stdout</code>:</p>
<pre><code>#!/usr/bin/python3.2
import sys
out = sys.stdout
out.write(b"Content-Type: text/html; charset=utf8\r\n")
out.write(b"\r\n")

y = "£17"
out.write("Test: {0}\r\n".format(y).encode(encoding='utf8'))
</code></pre>
<p>Note that HTTP headers should use a <code>\r\n</code> (carriage return, newline) combo, really. I've also added the encoding used to the <code>Content-Type</code> header so the browser knows how to decode it again.</p>
<p>For HTML, you really want to use <a href="http://www.w3.org/TR/html4/sgml/entities.html" rel="nofollow noreferrer">character entity references</a> instead of Unicode code points:</p>
<pre><code>y = "&amp;pound;17"
out.write("Test: {0}\r\n".format(y).encode(encoding='utf8'))
</code></pre>
<p>at which point you could also just use ASCII as your encoding.</p>
<p>If you really, really, really want to use <code>print()</code>, then re-open <code>stdout</code> with the correct encoding:</p>
<pre><code>utf8stdout = open(1, 'w', encoding='utf-8', closefd=False) # fd 1 is stdout

print("Content-Type: text/html; charset=utf8", end='\r\n', file=utf8stdout)
print("", end='\r\n', file=utf8stdout)

y = "£17"
print("Test:", y, end='\r\n', file=utf8stdout)
</code></pre>
<p>You could simplify that somewhat with <a href="http://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>functools.partial()</code></a>:</p>
<pre><code>from functools import partial
utf8print = partial(print, end='\r\n', file=utf8stdout)
</code></pre>
<p>then use <code>utf8print()</code> without the extra keywords:</p>
<pre><code>utf8print("Content-Type: text/html; charset=utf8")
utf8print("")
# etc.
</code></pre>
<p>Also see the <a href="http://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">Python Unicode HOWTO</a> for details on how Python sets output encoding, as well as <a href="https://stackoverflow.com/questions/3597480/how-to-make-python-3-print-utf8">this question here on Stack Overflow</a> about printing and encoding.</p>
</div>
<span class="comment-copy">what does print(y) only do?</span>
<span class="comment-copy">You need to use HTML escaping - trying printing <code>&amp;pound;17</code></span>
<span class="comment-copy">@JonClements: That's optional, the real problem is that Python <code>print()</code> encodes automatically to the terminal, but for CGI the wrong encoding is used.</span>
<span class="comment-copy">Many thanks! The last option worked for the test case and for what I am working on. I wanted to use the first suggestion but it didn't seem to be working right =/ This has been a huge help, and I learned a bunch too, and is going to impact the way I do several things. Thanks again.</span>
<span class="comment-copy">it seems as if there are output maximums with this method, I'm troubleshooting now. If I use utf8print too much I get a server error.</span>
<span class="comment-copy">@stackity: I doubt that anything maxes out; more likely you made a different error. :-)</span>
<span class="comment-copy">I came back to delete the comment (hoping that no one had responded), you're right, my shared hosting was limiting the amount of threads I could make in comparison to my localhost. My diagnosing was incorrect. Many thanks again!</span>
