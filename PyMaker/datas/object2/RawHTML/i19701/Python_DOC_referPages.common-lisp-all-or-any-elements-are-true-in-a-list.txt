<div class="post-text" itemprop="text">
<p>In Python there are functions <a href="http://docs.python.org/3/library/functions.html#all" rel="nofollow"><code>all</code></a> and <a href="http://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a> they return true if all or some elements of a list are true respectively. Are there equivalent functions in Common Lisp? If not, what is the most succinct and idiomatic way to write them?</p>
<p>Currently i have this:</p>
<pre><code>(defun all (xs)
  (reduce (lambda (x y) (and x y)) xs :initial-value t))

(defun any (xs)
  (reduce (lambda (x y) (or x y)) xs :initial-value nil))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Common Lisp, use <a href="http://www.lispworks.com/documentation/HyperSpec/Body/f_everyc.htm#every" rel="noreferrer">every</a> (that's the equivalent of <code>all</code>) and <a href="http://www.lispworks.com/documentation/HyperSpec/Body/f_everyc.htm#some" rel="noreferrer">some</a> (that's the equivalent of <code>any</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the LOOP macro with <code>ALWAYS</code> and <code>THEREIS</code> clauses like this:</p>
<pre><code>CL-USER 1 &gt; (loop for item in '(nil nil nil) always item)
NIL

CL-USER 2 &gt; (loop for item in '(nil nil t) always item)
NIL

CL-USER 3 &gt; (loop for item in '(t t t) always item)
T

CL-USER 4 &gt; (loop for item in '(nil nil nil) thereis item)
NIL

CL-USER 5 &gt; (loop for item in '(nil nil t) thereis item)
T

CL-USER 6 &gt; (loop for item in '(t t t) thereis item)
T
</code></pre>
</div>
