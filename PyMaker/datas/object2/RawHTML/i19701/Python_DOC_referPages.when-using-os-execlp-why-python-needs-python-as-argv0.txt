<div class="post-text" itemprop="text">
<p>The code is like this:</p>
<pre><code>os.execlp('python', 'python', 'child.py', #other args#)  # this works

os.execlp('python', 'child.py', #other args#)  # this doesn't work
</code></pre>
<p>I read this question: <a href="https://stackoverflow.com/questions/13439938/execlp-in-python">execlp() in python</a></p>
<p>But I'm still confused. The answer said:</p>
<blockquote>
<p>The first argument is the program to execute (found on the PATH). The
  rest are the sys.argv arguments to the program.</p>
</blockquote>
<p>However, if I run: <code>python child.py 1 2 3</code> and  the <code>sys.argv</code> of this process would be <code>["child.py", "1", "2", "3"]</code>, where the <code>python</code> doesn't exist. Then why should I add <code>python</code> as the second parameter of <code>os.execlp</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>When python is executed, it creates <code>sys.argv</code> for you. The values in that list are <em>based</em> on the arguments passed to it by the operating system, but it <em>leaves off</em> the <code>sys.executable</code> value from that list.</p>
<p>In other words, when Python is invoked, it sets <code>sys.argv</code> to everything <em>but it's own executable</em>.</p>
<p>When you invoke a <em>new</em> executable via <code>os.execlp()</code>, you still need to include Python in that as that is what executable that the OS will run. The first two values of what you a pass to <code>os.execlp()</code> are still required, whatever you find in <code>sys.argv</code> later on.</p>
</div>
<div class="post-text" itemprop="text">
<p>The second python is a name for python, it can be any string, but it has to be there. </p>
<p>See the <strong>second paragrph</strong> of <a href="http://docs.python.org/3/library/os.html?highlight=os.exec#process-management" rel="nofollow">http://docs.python.org/3/library/os.html?highlight=os.exec#process-management</a></p>
</div>
<span class="comment-copy">You are confusing <code>sys.argv</code> and the arguments of <code>execlp</code>; they are not necessarily the same. I was wondering why there was a sudden downvote there..</span>
<span class="comment-copy">@MartijnPieters I downvote it... Because you said <code>The rest are the sys.argv arguments to the program.</code>. I checked <code>sys.argv</code> and found <code>sys.argv[0]</code> is not <code>python</code></span>
<span class="comment-copy">The <i>operating system</i> is passed the arguments to <code>os.execlp</code>. Python is free to do with that what it wants to, <code>sys.argv</code> is <i>not the same list</i>. It is derived from what the OS passed it, yes, but don't conflate the two.</span>
<span class="comment-copy">Thanks, Martjin, I understand. I also tried <code>os.execlp('ls',".")</code>. Why does it work without repeating <code>ls</code>?</span>
<span class="comment-copy"><code>ls</code> is special-cased; it <i>detects</i> when you passed in too few arguments; it won't work with <code>echo</code>, for example.</span>
