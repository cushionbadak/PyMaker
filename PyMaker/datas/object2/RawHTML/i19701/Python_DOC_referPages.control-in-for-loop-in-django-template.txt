<div class="post-text" itemprop="text">
<p>I don't know a lot about Django or Python, but I know it's problematic using a simple for loop in a template.</p>
<p>I'm wanting to do the following and wondering my options are - is there a simple way to do this in the template?</p>
<pre><code>{% for image in my_images %}  //only loop through 1-10
</code></pre>
<p>Then: </p>
<pre><code>{% for image in my_images %}  //only loop through 10-20
</code></pre>
<p>Thanks,</p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>my_images</code> is a list, you are looking for <a href="https://docs.djangoproject.com/en/dev/ref/templates/builtins/?from=olddocs#slice" rel="nofollow">the <code>slice</code> filter</a>:</p>
<blockquote>
<pre><code>{{ some_list|slice:":2" }}
</code></pre>
<p>If some_list is <code>['a', 'b', 'c']</code>, the output will be <code>['a', 'b']</code>.</p>
</blockquote>
<p>Of course, on an optimization note, it would generally be better to do this at a view level by not fetching more records than you need.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you need all the data but want to display it in chunks, you can split up your list like this</p>
<pre><code>def Chunks(l, n):
    return [l[i:i+n] for i in range(0, len(l), n)]
</code></pre>
<p>where n=any number, in your case it would be 10</p>
<p>Then all you need to do is loop through the chunked list in the template.</p>
</div>
<span class="comment-copy">right, and {{ some_list|slice:"2:6" }} for subsets.  Wierd that's ok but for loops aren't..Thanks a lot!</span>
<span class="comment-copy">That's a really ugly way to chunk, check the <a href="http://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer"><code>itertools</code> <code>grouper()</code> recipe</a> which works on arbitrary iterables, not just lists, and does so without looping by index.</span>
<span class="comment-copy">Thanks will definitely have a look at those.</span>
