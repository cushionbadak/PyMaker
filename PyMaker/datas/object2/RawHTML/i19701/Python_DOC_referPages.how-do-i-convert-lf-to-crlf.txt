<div class="post-text" itemprop="text">
<p>I found a list of the majority of English words online, but the line breaks are of unix-style (encoded in Unicode: UTF-8). I found it on this website: <a href="http://dreamsteep.com/projects/the-english-open-word-list.html" rel="noreferrer">http://dreamsteep.com/projects/the-english-open-word-list.html</a></p>
<p>How do I convert the line breaks to CRLF so I can iterate over them? The program I will be using them in goes through each line in the file, so the words have to be one per line.</p>
<p>This is a portion of the file: <code>bitbackbitebackbiterbackbitersbackbitesbackbitingbackbittenbackboard</code></p>
<p>It should be:</p>
<pre><code>bit
backbite
backbiter
backbiters
backbites
backbiting
backbitten
backboard
</code></pre>
<p>How can I convert my files to this type? Note: it's 26 files (one per letter) with 80,000 words or so in total (so the program should be very fast).</p>
<p>I don't know where to start because I've never worked with unicode. Thanks in advance!</p>
<p>Using <code>rU</code> as the parameter (as suggested), with this in my code:</p>
<pre><code>with open(my_file_name, 'rU') as my_file:
    for line in my_file:
        new_words.append(str(line))
my_file.close()
</code></pre>
<p>I get this error:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;pyshell#5&gt;", line 1, in &lt;module&gt;
    addWords('B Words')
  File "D:\my_stuff\Google Drive\documents\SCHOOL\Programming\Python\Programming Class\hangman.py", line 138, in addWords
    for line in my_file:
  File "C:\Python3.3\lib\encodings\cp1252.py", line 23, in decode
    return codecs.charmap_decode(input,self.errors,decoding_table)[0]
UnicodeDecodeError: 'charmap' codec can't decode byte 0x8d in position 7488: character maps to &lt;undefined&gt;
</code></pre>
<p>Can anyone help me with this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of converting, you should be able to just open the file using Python's <a href="http://docs.python.org/2/glossary.html#term-universal-newlines" rel="noreferrer">universal newline support</a>:</p>
<pre><code>f = open('words.txt', 'rU')
</code></pre>
<p>(Note the <code>U</code>.)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the replace method of strings. Like  </p>
<pre><code>txt.replace('\n', '\r\n')
</code></pre>
<p>EDIT :<br/>
in your case :</p>
<pre><code>with open('input.txt') as inp, open('output.txt', 'w') as out:
    txt = inp.read()
    txt = txt.replace('\n', '\r\n')
    out.write(txt)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to convert the line endings in the files in order to be able to iterate over them. As suggested by NPE, simply use <a href="http://docs.python.org/3/library/functions.html#open" rel="nofollow" title="python's universal newlines mode">python's universal newlines mode</a>. </p>
<p>The UnicodeDecodeError happens because the files you are processing are encoded as UTF-8 and when you attempt to decode the contents from bytes to a string, via <code>str(line)</code>, Python is using the <code>cp1252</code> encoding to convert the bytes read from the file into a Python 3 string (i.e. a sequence of unicode code points). However, there are bytes in those files that cannot be decoded with the <code>cp1252</code> encoding and that causes a UnicodeDecodeError.</p>
<p>If you change <code>str(line)</code> to <code>line.decode('utf-8')</code> you should no longer get the UnicodeDecodeError. Check out the <a href="http://docs.python.org/3.0/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit" rel="nofollow">Text Vs. Data Instead of Unicode Vs. 8-bit</a> writeup for some more details.</p>
<p>Finally, you might also find <a href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow">The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</a> by Joel Spolsky useful.</p>
</div>
<span class="comment-copy">you could possibly find this <a href="http://stackoverflow.com/questions/3891076/how-to-convert-windows-end-of-line-in-unix-end-of-line-cr-lf-to-lf" title="how to convert windows end of line in unix end of line cr lf to lf">stackoverflow.com/questions/3891076/â€¦</a> helpful</span>
<span class="comment-copy">Can't you make your program able to handle both types of line ending?</span>
<span class="comment-copy">@JamesMcLaughlin I already have a file with a list of words. In addition, I've never used unicode (as stated) so I don't know how to handle those types of endings.</span>
<span class="comment-copy">In unix use the sed command</span>
<span class="comment-copy">it seems this is deprecated now : <a href="https://docs.python.org/3.6/library/functions.html#open" rel="nofollow noreferrer">docs.python.org/3.6/library/functions.html#open</a></span>
<span class="comment-copy">If you want to change all the line endings in the same file without creating a new output file, look at my answer here: <a href="http://stackoverflow.com/a/43678795/3459910">stackoverflow.com/a/43678795/3459910</a></span>
