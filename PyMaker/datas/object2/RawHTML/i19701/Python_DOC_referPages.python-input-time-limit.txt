<div class="post-text" itemprop="text">
<p>I have a homework assignment to do and I really need a solution. I have been trying to do this since yesterday but I do not know how.</p>
<p>Program has to generate and print a letter or a number and then a user has to type it as quickly as possible and press ENTER. The game is over after 30 secs.</p>
<p>Well I do not know how to put time limit to a game. I was searching through stackoverflow and I did not find anything useful. Please help me.</p>
<p>**Here it is what I have done so far. I tried code from the answer by SYSS.STDER, but it does not quite work because when the 30 secs are over, the game should also be over, but here in this code the game is over when I type last character. </p>
<p><strong>LOOP WILL NOT STOP UNTIL IT FINISHES AND WE DISCOVER THAT WE ARE PAST OUR DEADLINE. THE TASK NEEDS TO BE INTERRUPTED IN PROGRESS AS SOON AS THE TIME ELAPSES.</strong></p>
<pre><code>max_time =30
start_time = time.time()  # remember when we started
while (time.time() - start_time) &lt; max_time:

    response = "a"      # the variable that will hold the user's response
    c = "b"             #the variable that will hold the character the user should type
    score = 0
    number = 0

    c = random.choice(string.ascii_lowercase + string.digits)
    print(c)
    number = number + 1

    response = input("Type a letter or a number: ") #get the user's response

    if response == c and (time.time() - start_time) &lt; max_time:
         # if the response from the previous loop matches the character
         # from the previous loop, increase the score.
         score = score + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's my way to do it:</p>
<pre><code>import string
import random 
import time   

response = "a"              # the variable that will hold the user's response
c = "b"                     #the variable that will hold the character the user should type
score = 0                   #the variable that will hold the user's score
start = time.time()         #the variable that holds the starting time
elapsed = 0                 #the variable that holds the number of seconds elapsed.
while elapsed &lt; 30:         #while less than 30 seconds have elapsed  

    if response == c:       #if the response from the previous loop matches the character
        score += 1          #from the previous loop, increase the score.

    #c is a random character
    c = random.choice(string.ascii_lowercase + string.digits)
    print(c)               

    response = input("Type a letter or a number: ") #get the user's response

    elapsed = time.time() - start #update the time elapsed
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you're using Windows you can use the <a href="http://docs.python.org/3/library/msvcrt.html?highlight=msvcrt#msvcrt.kbhit" rel="nofollow"><code>msvcrt.kbhit</code></a> function to check for keypresses inside timing loops:</p>
<pre><code>import msvcrt #### windows only ####
import os
import random
import string
import time

max_time = 15

def readch(echo=True):
    "Get a single character on Windows"
    ch = msvcrt.getch()
    while ch in b'\x00\xe0': # special function key?
        msvcrt.getch()       # get keycode &amp; ignore
        ch = msvcrt.getch()
    if echo:
        msvcrt.putch(ch)
    return ch.decode()

def elapsed_time():
    global start_time
    return time.time() - start_time

number = 0
score = 0
start_time = time.time()  # initialize timer

while elapsed_time() &lt; max_time:
    c = random.choice(string.ascii_lowercase + string.digits)
    print(c, end='')
    number += 1
    print("Type a letter or a number: ", end='')

    while elapsed_time() &lt; max_time:
        if not msvcrt.kbhit():
            time.sleep(0.1) # don't hog processor
        else:
            response = readch(echo=False) # get the user's response
            if response == c:
                print(response) # only print if correct
                score += 1
                break
    else:
        print()

print()
print("Time's up")
print("You go  {} out of {}:".format(score, number))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use "timeit" module available in python for better result.</p>
</div>
<span class="comment-copy">This is now better phrased than <a href="http://stackoverflow.com/q/13893099/923794">the original</a>. Still, since you already brought up the suggestion to try looping, the question remains: What have you tried so far to that regard?</span>
<span class="comment-copy">Can anyone look at my code and help me please?</span>
<span class="comment-copy">So apart from a tiny bit of re-factoring sys.stderr's answer - in the last 21 hours - what have you tried yourself to solve this?</span>
<span class="comment-copy">@ Jon Clements. I am new at python and I need quite a bit of help. Please can you solve this problem I have. I would really apreciate it.</span>
<span class="comment-copy">Keep with this code base. The game will end only when there's a last character because <code>input</code> is blocking, that means it won't return until something is entered - so you could run it and not do anything for a few hours... Don't worry about that (short of using threading/polling you're stuck with it (and that's not homework level techniques). To kludge it - check at the time of incrementing the score that you're still below <code>max_time</code></span>
<span class="comment-copy">The OP's homework assignment is using Python 3, so <code>raw_input</code> has to be <code>input</code> instead, I think.</span>
<span class="comment-copy">I'd have to check that, I'm curently using python 2.7, in which <code>Ã¬nput</code> will evaluate the input whereas <code>raw_input</code> will give you the exact string the user entered. looking that up now.</span>
<span class="comment-copy">You're right, there's no <code>raw_input</code> in python 3. (<a href="http://docs.python.org/release/3.2.3/library/functions.html" rel="nofollow noreferrer">docs.python.org/release/3.2.3/library/functions.html</a>)</span>
