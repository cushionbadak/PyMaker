<div class="post-text" itemprop="text">
<p>I have a string <code>abcdabababcebc</code> How do I get the index of the second-to-last occurrence of <code>b</code>? I searched and found rfind() but that doesn't work since it's the last index and not the second-to-last.</p>
<p>I am using Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way to do it:</p>
<pre><code>&gt;&gt;&gt; def find_second_last(text, pattern):
...   return text.rfind(pattern, 0, text.rfind(pattern))
... 
&gt;&gt;&gt; find_second_last("abracadabra", "a")
7
</code></pre>
<p>This uses the optional start and end parameters to look for the second occurrence after the first occurrence has been found.</p>
<p>Note: This does not do any sort of sanity checking, and will blow up if there are not at least 2 occurrences of pattern in the text.</p>
</div>
<div class="post-text" itemprop="text">
<p>Enumerate all the indices and choose the one you want</p>
<pre><code>In [19]: mystr = "abcdabababcebc"

In [20]: inds = [i for i,c in enumerate(mystr) if c=='b']

In [21]: inds
Out[21]: [1, 5, 7, 9, 12]

In [22]: inds[-2]
Out[22]: 9
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; s = "abcdabababcebc"
&gt;&gt;&gt; s[:s.rfind("b")].rfind("b")
9 
</code></pre>
</div>
<span class="comment-copy">I don't get why this was downvoted.</span>
<span class="comment-copy">Did you look at all three parameters to <a href="http://docs.python.org/3/library/stdtypes.html#str.rfind" rel="nofollow noreferrer"><code>str.rfind</code></a>, or read the description? That's not explaining a downvote (I don't know who downvoted it or why); I'm curious where you "searched and found rfind()" that didn't have that info, because it really should be fixed.</span>
<span class="comment-copy">+1, because I think this is better than copying most of the string just to search the copy (in cases where it matters).</span>
<span class="comment-copy">+1 for being flexible (e.g., what if you want to find the Nth last?), and for it being blatantly obvious how it works. Of course it's not a great solution if <code>mystr</code> is huge and/or has lots of copies of <code>'b'</code> (in which case see MAK's solution), but usually that won't matter.</span>
<span class="comment-copy">@abarnert: Yes, this does use linear space in the worst case</span>
<span class="comment-copy">A better version of your code : <a href="http://pastebin.com/6BA8jsD8" rel="nofollow noreferrer">pastebin.com/6BA8jsD8</a></span>
<span class="comment-copy">@AshwiniChaudhary: that is higher space-complexity</span>
<span class="comment-copy">It's better to operate directly on the string instead of using indexes if possible with things like rfind and find, and sometimes even re.</span>
