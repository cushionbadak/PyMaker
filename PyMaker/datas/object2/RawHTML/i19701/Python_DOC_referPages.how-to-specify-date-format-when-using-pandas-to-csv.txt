<div class="post-text" itemprop="text">
<p>The default output format of <code>to_csv()</code> is:</p>
<pre><code>12/14/2012  12:00:00 AM
</code></pre>
<p>I cannot figure out how to output only the date part with specific format:</p>
<pre><code>20121214
</code></pre>
<p>or date and time in two separate columns in the csv file:</p>
<pre><code>20121214,  084530
</code></pre>
<p>The documentation is too brief to give me any clue as to how to do these. Can anyone help?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="http://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior"><code>strftime</code></a> to save these as separate columns:</p>
<pre><code>df['date'] = df['datetime'].apply(lambda x: x.strftime('%d%m%Y'))
df['time'] = df['datetime'].apply(lambda x: x.strftime('%H%M%S'))
</code></pre>
<p>and then be specific about which columns to export to csv:</p>
<pre><code>df[['date', 'time', ... ]].to_csv('df.csv')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With the new version of Pandas you can use the date_format parameter of the <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html">to_csv</a> method:</p>
<pre><code>df.to_csv(filename, date_format='%Y%m%d')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To export as a timestamp, do this:</p>
<pre><code>df.to_csv(filename, date_format='%s')
</code></pre>
<p>The <code>%s</code> format is <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">not documented in python/pandas</a> but works in this case.</p>
<p>I found the <code>%s</code> from <a href="https://apidock.com/ruby/DateTime/strftime" rel="nofollow noreferrer">the dates formats of ruby</a>. <a href="http://man7.org/linux/man-pages/man3/strftime.3.html" rel="nofollow noreferrer">Strftime doc for C here</a></p>
<p>Note that the timestamp miliseconds format <code>%Q</code> does not work with pandas (you'll have a litteral <code>%Q</code> in the field instead of the date). I caried my sets with python 3.6 and pandas 0.24.1</p>
</div>
<span class="comment-copy">yes but is there a way to store two different Timestamp columns using different formats?  I could convert them to string first, then save, but is there something more elegant?</span>
<span class="comment-copy">upvoted! if I use %s for date_format i have no idea why the timestamp goes 5 hours 30 mins behind the datetime values, my datetime values in the dataframe are already at UTC, how do I convert 2018-06-28 12:15:00+00:00 to unix epoch while writing to csv</span>
<span class="comment-copy">Please do not use phrases like "With the new version".  Instead use "version X.XX.XX onwards".  Otherwise your contribution will become obsolete after a few months from published.</span>
