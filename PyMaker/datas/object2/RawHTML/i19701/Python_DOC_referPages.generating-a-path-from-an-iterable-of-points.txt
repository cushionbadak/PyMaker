<div class="post-text" itemprop="text">
<p>Suppose I have a set <code>{a, b, c, d}</code>. I want to create a "path" from it, which is a generator that yields  <code>(a, b)</code>, then <code>(b, c)</code>, then <code>(c, d)</code> (of course <code>set</code> is unordered, so any other path through the elements is acceptable).</p>
<p>What is the best way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's an example using the <code>pairwise()</code> recipe from <a href="http://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow">http://docs.python.org/3/library/itertools.html#itertools-recipes</a></p>
<pre><code>&gt;&gt;&gt; from itertools import tee
&gt;&gt;&gt; def pairwise(iterable):
...     "s -&gt; (s0,s1), (s1,s2), (s2, s3), ..."
...     a, b = tee(iterable)
...     next(b, None)
...     return zip(a, b)
...
&gt;&gt;&gt; for pair in pairwise({1, 2, 3, 4}):
...     print(pair)
...
(1, 2)
(2, 3)
(3, 4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def gen(seq):
   it = iter(seq)
   a, b = next(it), next(it)
   while True:
     yield (a, b)
     a, b = b, next(it)

print(list(gen({1, 2, 3, 4})))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://stackoverflow.com/q/6822725">Rolling or sliding window iterator in Python</a> solution:</p>
<pre><code>&gt;&gt;&gt; from itertools import islice
&gt;&gt;&gt; def window(seq, n=2):
...     "Returns a sliding window (of width n) over data from the iterable"
...     "   s -&gt; (s0,s1,...s[n-1]), (s1,s2,...,sn), ...                   "
...     it = iter(seq)
...     result = tuple(islice(it, n))
...     if len(result) == n:
...         yield result    
...     for elem in it:
...         result = result[1:] + (elem,)
...         yield result
... 
&gt;&gt;&gt; path = window({1, 2, 3, 4})
&gt;&gt;&gt; for step in gen:
...     print path
(1, 2)
(2, 3)
(3, 4)
</code></pre>
<p>This happens to follow sorted order, because for python integers <code>hash(x) == x</code> and thus the sequence of 1, 2, 3, 4 is inserted in that order into the set.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <code>pairwise</code> <a href="http://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow">itertools recipe</a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import tee
&gt;&gt;&gt; def pairwise(iterable):
        a, b = tee(iterable)
        next(b, None)
        return zip(a, b)

&gt;&gt;&gt; pairwise({1, 2, 3, 4})
&lt;zip object at 0x0000000003B34D88&gt;
&gt;&gt;&gt; list(_)
[(1, 2), (2, 3), (3, 4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Now that I understand the question</p>
<pre>
from itertools import islice
a = {'A','B','C','D'}
zip(a,islice(a,1,None))
#[('A', 'C'), ('C', 'B'), ('B', 'D')]
</pre>
</div>
<span class="comment-copy">I like this recipe, even though it's more general than I need. I wonder why this recipe was replaced with another one in the current <code>itertools</code> documentation?</span>
<span class="comment-copy">@max: It was replaced with the <a href="http://hg.python.org/cpython/rev/ea058504104c" rel="nofollow noreferrer"><code>pairwise</code> recipe to illustrate <code>tee</code></a>. The recipes are there to show off the functions of the module, and <code>tee()</code> was yet to be used on that page.</span>
