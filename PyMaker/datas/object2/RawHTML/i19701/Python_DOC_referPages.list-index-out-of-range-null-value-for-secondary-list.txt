<div class="post-text" itemprop="text">
<p>I'm trying to add a new section to my program that searches for bots on our server and deletes them, but I'm running into a show-stopping issue: Whenever the program gets to the second part (what I've added) the output for 'readFirst' is '[]'. When the next couple of lines run I get a "list index out of range" error for obvious reasons.</p>
<p>I have no idea why this is happening, as the readlines variable shouldn't be shared by both parts of the program.</p>
<p>Here is the code:</p>
<pre><code>while runTimes &gt;= 0:
#Cycles through .php files
openedProg = glob.glob('*.php')
openedProg = openedProg[currentPhp:currentPhp+1]
progInput = ''.join(openedProg)
if progInput != '':
    theBot = open(progInput,'r')

    #Singles out "$output" on this particular line and closes the process
    readFourthFromBottom = theBot.readlines()
    wholeLine = (readFourthFromBottom[-4])
    output = wholeLine[4:11]

    #Singles out "set_time_limit(0)"
    readFirst = theBot.readlines()
    print(readFirst)
    wholeLine2 = (readFirst[0])
    output2 = wholeLine2[7:24]
    print(output2)

    theBot.close()
if progInput == '':
    currentPhp = -1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are reading all the lines the first time you do readlines().</p>
<p>The second time you call readlines, it starts at the end of the file, so there's nothing to read.</p>
<p>The <code>readFirst</code> variable is worthless, you already have all the lines in the poorly named <code>readFourthFromBottom</code> variable.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>readlines()</code> reads all the way to the end of the file stream, which means that the cursor is at the end of the file.  Really, the problem here is that <code>readFourthFromBottom</code> is an inaccurate variable name.  It should be <code>all_lines</code>, because it will contain all the lines from the file in a list.  Then you should just use that instead of trying to re-read the lines in to <code>readFirst</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>readlines</code> will read all lines from the IO object. So any subsequent try to read something from the file will yield EOF and as such the second <code>readlines</code> will never return anything else.</p>
<p>You could <a href="http://docs.python.org/3/library/io.html#io.IOBase.seek" rel="nofollow">seek</a> to the beginning of the file before using <code>readlines</code> again, or even better, just <em>reuse</em> the lines you read once. Unless you modify the <code>readFourthFromBottom</code> (which is a terrible variable name btw.), which you donâ€™t, there is no reason to read the lines <em>again</em>.</p>
</div>
<span class="comment-copy">So I should switch "readFourthFromBottom = theBot.readlines()" (crappy name preserved for consistency) to "readFourthFromBottom = theBot.all_lines()"?  The problem here is that this wrapper doesn't seem to have that attribute.</span>
<span class="comment-copy">Here we go. Just had to take out the second readlines reference. Thank you.</span>
<span class="comment-copy">Now when I run this on the server "output2 = wholeLine2[6:23]", when called later, says it is "not defined". This does not happen in my sandbox. I have the same version of python installed on both.</span>
<span class="comment-copy">Nevermind; Solved it.</span>
