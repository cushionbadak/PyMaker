<div class="post-text" itemprop="text">
<p>I'm new to the site and to python so I hope I'm giving all the required information. I've already searched for this question but none of the solutions seem to work for me.</p>
<p>I'm trying to create a function that reads some text and returns the amount of digits it contains. For example:</p>
<p>"It is 2012" , should return "Text has 4 digits"</p>
<p>If there are no digits, it should return a different message such as:</p>
<p>"It is Monday" , should return "Text does not contain digits"</p>
<p>So I wrote this:</p>
<pre><code>def CountNumbers(txt):
    sum = 0

    for n in txt:
        if n.isdigit() == False:
            print ("Text does not contain digits")

        else:
            sum += 1


    print("Text has", sum, "digit(s)")


txt = str(input("Write some text: "))
(CountNumbers(txt))
</code></pre>
<p>The functions seem to be OK however, the prints turn out wrong, for example:</p>
<pre><code>Write some text: 65
Text has 2 digit(s) #this is ok, but...
</code></pre>
<p>When I only input text:</p>
<pre><code>Write some text: sd 
Text does not contain digits
Text does not contain digits
Text does not contain digits
Text has 0 digit(s)
</code></pre>
<p>When I input text and numbers (but text first):</p>
<pre><code>Write some text: sd 564
Text does not contain digits
Text does not contain digits
Text does not contain digits
Text has 3 digit(s)
</code></pre>
<p>I know my error lies in the blocks, (I think), but I haven't figured out a way because when I use return, it stops before it finished to read the text. I've tried about 20+ different things, please help me !</p>
<p>Thank you !!</p>
<p>P.S. I need this to work as a .py and not just in the IDLE (Python Shell) window, that's why I'm writing the blocks like this.</p>
</div>
<div class="post-text" itemprop="text">
<p>I just solved your codes problems:</p>
<pre><code>def CountNumbers(txt):
    sum = 0

    for n in txt:
        if n.isdigit():
            sum += 1

    if sum:
        print("Text has", sum, "digit(s)")
    else:
        print ("Text does not contain digits")


CountNumbers(input("Write some text: "))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue is you are printing the "Text does not contain digits" message every time you encounter a non-digit character. Try moving that print statement to after the loop when you know how many characters there are:</p>
<pre><code>def CountNumbers(txt):
    sum = 0

    for n in txt:
        if n.isdigit():
            sum += 1

    if sum &gt; 0:   
        print("Text has", sum, "digit(s)")
    else:
        print ("Text does not contain digits")

txt = str(input("Write some text: "))
(CountNumbers(txt))
</code></pre>
<p><strong>Edit:</strong> A couple more points towards good Python code:</p>
<ul>
<li>As noted in the comments of your question, by convention, functions/methods in Python are named in lower case with underscores, i.e., <code>count_numbers</code> not <code>CountNumbers</code>.</li>
<li>Pedantic mode: you are counting the digits in the string, not numbers, so it should really be named <code>count_digits</code> for clarity.</li>
<li>There is a built-in Python function called <a href="http://docs.python.org/3/library/functions.html#sum" rel="nofollow">sum</a>. It is considered bad practice to <em>shadow</em> this function by having a variable of the same name. I'd rename your <code>sum</code> variable to <code>count</code>.</li>
<li>There is no need to surround a function call in parentheses (it doesn't do any harm, apart from making it look bad IMHO).</li>
</ul>
<p>With these changes, your code becomes:</p>
<pre><code>def count_digits(txt):
    count = 0

    for n in txt:
        if n.isdigit():
            count += 1

    if count &gt; 0:   
        print("Text has", count, "digit(s)")
    else:
        print ("Text does not contain digits")

txt = str(input("Write some text: "))
count_digits(txt)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Early returns are quite alright and can greatly simplify the code:</p>
<pre><code>def CountNumbers(txt):
    for n in txt:
        if not n.isdigit():
            print ("Text does not contain digits")
            return

    print("Text has", len(txt), "digit(s)")

txt = str(input("Write some text: "))
(CountNumbers(txt))
</code></pre>
<p>This function returns as soon as a non-digit character appears, or prints the length of the input string (which is made of nothing <em>but</em> digits).</p>
<p>You could also write that with a "generation expression" like:</p>
<pre><code>def CountNumbers(txt):
    if all(char.isdigit() for char in txt):
        print("Text has", len(txt), "digit(s)")
    else:
        print ("Text does not contain digits")

txt = str(input("Write some text: "))
(CountNumbers(txt))
</code></pre>
<p>Now, Python functions more typically return values and let the calling code act on it. This version returns the strings and lets the "main" part of your program print the results. It also renames the function to all lowercase (Python usually uses capitalized names for classes):</p>
<pre><code>def countnumbers(txt):
    if all(char.isdigit() for char in txt):
        return "Text has %d digit(s)" % len(txt)
    else:
        return "Text does not contain digits"

txt = str(input("Write some text: "))
print(countnumbers(txt))
</code></pre>
<p>Hmmm, not too shabby! But Python also has nifty conditional expressions like:</p>
<pre><code>def countnumbers(txt):
    return ("Text has %d digit(s)" % len(txt)
        if all(char.isdigit() for char in txt)
        else "Text does not contain digits")

txt = str(input("Write some text: "))
print(countnumbers(txt))
</code></pre>
<p>Finally, maybe you'll want to make that into a proper module so other code can use it. Wrap the interactive part of your program like this and it will only execute if you're running it like a command line script, but <em>not</em> if your importing it as a module:</p>
<pre><code>def countnumbers(txt):
    return ("Text has %d digit(s)" % len(txt)
        if all(char.isdigit() for char in txt)
        else "Text does not contain digits")

if __name__ == '__main__':
    txt = str(input("Write some text: "))
    print(countnumbers(txt))
</code></pre>
<p>If I were writing that function as part of a production system, that's pretty close to how it'd look. Notice that the <em>logic</em> is identical to your first attempt. The biggest difference is that this version lets Python do most of the work.</p>
</div>
<div class="post-text" itemprop="text">
<p>A slightly more pythonic reworking of the original. Personally, I find the 'list comprehension' form a little easier to read (unless it's nested):</p>
<pre><code>def count_digits(txt):
    count = len([c for c in txt if c.isdigit()])

    if count &gt; 0:
        print ("Text has", count, "digit(s)")
    else:
        print ("Text does not contain digits")
</code></pre>
</div>
<span class="comment-copy">+1 for short self-contained code, and sample input/output. Multiple samples, even! Love it.</span>
<span class="comment-copy">Please remember that according to Python's naming conventions, your function should be named <code>count_numbers()</code> instead of <code>CountNumbers</code>.</span>
<span class="comment-copy">Also, you should not name a variable <code>sum</code>, because that's the name of a built-in function.</span>
<span class="comment-copy">Thank you both so much !... I knew I was very close... this python stuff is really complicated for me hahaha... thanks !</span>
<span class="comment-copy">yeah, I didn't know that cause I'm actually writing code in spanish, so when I translated the code to ask about it in here, the variable suma (spanish for sum) became sum, it was not until after that I realised that sum was also a function... it still works, but I changed it anyway :P</span>
<span class="comment-copy">Your answer was really helpful, thank you A LOT ! ... I wonder, why  you didn't write     if sum &gt; 0:  and just if sum ... they both work, but I wonder why. I'd think that just "if sum:" is not even a condition ! haha</span>
<span class="comment-copy">@user1911059 - if you evaluate a number as a Boolean, it is <code>False</code> if it is zero and <code>True</code> otherwise. So in a statement like <code>if sum:</code>, it is <code>True</code> if <code>sum</code> is more than zero i.e., if there is at least one digit.</span>
<span class="comment-copy">wow this is really interesting, I'm still not familiar with this kind of writing but this does expand my comprehension a lot. Thank you !</span>
<span class="comment-copy">Check comments below - <code>all(char.isdigit() for char in txt)</code> above does not work as expected - should be <code>all([char.isdigit() for char in txt])</code>. Beyond that though, the original question stated that:  '"It is 2012" , should return "Text has 4 digits"'. Wouldn't short-circuiting give the wrong answer in that case?</span>
<span class="comment-copy">In Python 2.4+, you can write that as <code>count = len(c for c in txt if c.isdigit())</code>. That's a "generator expression".</span>
<span class="comment-copy">I had tried that earlier, got <code>'object of type 'generator' has no len()'</code>. Running 2.7.3 in IPython.</span>
<span class="comment-copy">Ignore me. My afternoon coffee hasn't kicked in yet. :-D</span>
