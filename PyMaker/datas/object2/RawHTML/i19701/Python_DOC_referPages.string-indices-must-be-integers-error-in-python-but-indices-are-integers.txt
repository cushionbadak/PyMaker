<div class="post-text" itemprop="text">
<p>I'm writing a program to add two numbers from a single line of input of the form: </p>
<p>number + othernumber</p>
<p>I keep getting a "string indices must be integers" error, but when I call type on all the indices, they all show up as integers.</p>
<p>How do I fix this?
Here's the code</p>
<pre><code>S = input()
for position in range(0, len(S)):
   if '+'== position:
     break
a=int(position)
Sum = (S[0,a])+(S[a, len(S)])
print(Sum)
#print(position)   
#print(type(position))
#print(type(len(S)))
#print(type(0)) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>The immediate issue</h2>
<p>You probably meant to use <code>S[0:a]</code> and <code>S[a:len(S)]</code> (slicing) rather than commas.</p>
<h2>A note about slicing...</h2>
<p>You don't have to specify the leading zero or the trailing <code>len(S)</code> there - they're implicit. So you could just use <code>S[:a]</code> and <code>S[a:]</code> to mean the same thing.</p>
<p>Also note that <code>S[0:a] + S[a:len(S)]</code> is equivalent to <code>S</code>. You probably didn't want to include the <code>+</code> in there, so you'd probably want to use <code>S[a+1:len(S)]</code> instead.</p>
<h2>Another note about finding the position of a character in a string</h2>
<p>You don't need to loop over the indices manually - there's already the <code>.index()</code> method of strings to do this:</p>
<pre><code>&gt;&gt;&gt; "hello".index("e")
1
</code></pre>
<h1>A simpler way to accomplish your overall goal</h1>
<p>You can just use the <code>split()</code> function to get the parts of a string separated by the <code>+</code> character:</p>
<pre><code>S = input()
number_strings = S.split('+')
numbers = [int(n) for n in number_strings]
print sum(numbers)
</code></pre>
<p>As a bonus, this will work for an arbitrary number of numbers - <code>1+2+3</code> would work, as would just <code>4</code>.</p>
<p>The third line uses what's called a <a href="http://www.youtube.com/watch?v=pShL9DCSIUw" rel="nofollow">list comprehension</a> to operate on each of the elements of a list and generate a new one - in this case, taking a list of strings and making a list of integers.</p>
<p>The fourth line takes advantage of Python's build in <code>sum()</code> function, which will automatically return the sum of a sequence of items.</p>
<p>Note that you could also condense the above lines:</p>
<pre><code>print sum(int(n) for n in input().split('+'))
</code></pre>
<p>This is a much tidier form; I just spaced it out above to make it easier to explain.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>0, a</code> is a tuple. Did you mean to <strong>slice</strong> the sequence instead, via <code>S[0:a]</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>you need to modify the , to :</p>
<pre><code>Sum = (S[0:a])+(S[a: len(S)])
</code></pre>
</div>
<span class="comment-copy">When you post on SO, please include the error as it comes from Python - there is more information available there that you have not given us.</span>
<span class="comment-copy">Also note your code doesn't make sense - <code>'+' == position</code> will never evaluated to <code>True</code> as <code>position</code> is a number. Note that what you are trying to do here is better achieved with one of the many <a href="http://docs.python.org/3/library/stdtypes.html#string-methods" rel="nofollow noreferrer">methods on strings</a>.</span>
<span class="comment-copy">but the '+' == position thing seems to work, when I run print(position), it gives back the position of the '+' sign</span>
<span class="comment-copy">The only time I can imagine it working is if <code>'+'</code> is the last character in the string, as when the loop ends, <code>position</code> will always be set to the last value in the range. Take a look at your code and it's clear that it doesn't make sense. You are looping through a range of numbers and comparing them to a string.</span>
<span class="comment-copy">+1, a good answer that gives a lot of important extra information. Note that you might want to explain the the <a href="http://www.youtube.com/watch?v=pShL9DCSIUw" rel="nofollow noreferrer">list comprehension</a>.</span>
<span class="comment-copy">@Lattyware done. :)</span>
<span class="comment-copy">Awesome, I'd +1 again if I could.</span>
<span class="comment-copy">This won't add the numbers, it will concatenate the strings.</span>
