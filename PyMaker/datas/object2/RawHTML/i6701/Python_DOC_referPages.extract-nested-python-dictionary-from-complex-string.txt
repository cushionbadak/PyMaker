<div class="post-text" itemprop="text">
<p>I have a complex string with a nested dictionary in it. This dictionary further has a list of three similar dictionaries inside it. How do I convert this into a Python dictionary? Please help. </p>
<p>Input: <code>'name: "data dict" id: 2\nv6: false\nstats {\n  hosts {\n    cnt1: 256\n    cnt2: 0\n  }\n  groups {\n    cnt1: 1\n    cnt2: 0\n  }\n  main_groups {\n    cnt1: 1\n    cnt2: 0\n  }\n  main_hosts {\n    cnt1: 256\n    cnt2: 0\n  }\n}\n group_id: "None"'
</code></p>
<p>Expected result: <code>{
name: "data dict",
id: 2,
v6: false,
stats: {
    hosts: {
        cnt: 1, cnt: 2
    }
    groups: {
        cnt: 1, cnt: 2
    }
    main: {
        cnt: 1, cnt: 2
    }
  main_hosts: {
    cnt: 1, cnt: 2
    }
}
}
</code></p>
</div>
<div class="post-text" itemprop="text">
<p>As TS mentioned, there are a string with a nested dictionary (first time I interpret it as an implicit reference to validity). If the string content is <strong>valid</strong> JSON you can use <code>json</code> built-in package includes all you need to parse it:</p>
<pre><code>import json
data = json.loads(your_string)
</code></pre>
<p>Read more in <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">JSON package docs</a>.</p>
<p>If not, you can write regular expression or use <a href="http://pyparsing.wikispaces.com/" rel="nofollow noreferrer">pyparsing</a> package to process this string.</p>
</div>
<div class="post-text" itemprop="text">
<p>With some editing of your input, it can be loaded by <code>yaml</code> and the data object is as you have requested it, a set of nested dictionaries.
How was the input string created ?. The specific edits are :</p>
<ul>
<li>change "data dict" id:" to "data dict"\nid:",</li>
<li>change "\n group_id" to  "\ngroup_id"</li>
<li>change all { to : ,</li>
<li>remove all } .</li>
</ul>
</div>
<span class="comment-copy">How did this string come to be??? This looks like it could have been a JSON at some point. Probably easiest to fix whatever is extracting this mess to extract the valid JSON...</span>
<span class="comment-copy">I don't think I'd use a <code>regex</code>. I'm a fan of <a href="http://pyparsing.wikispaces.com/" rel="nofollow noreferrer"><code>pyparsing</code></a> for tasks like this.</span>
<span class="comment-copy">can you show the string formatted, looks like a yaml, then yaml module will do conversion</span>
<span class="comment-copy">you will need massage it into valid  yaml (or json) by inserting semicolons before {, line break between " and space (comma for json) then use yaml (or json) module</span>
<span class="comment-copy">This will not work because the original string is not properly formatted json</span>
<span class="comment-copy">Look again, this will not work... the string is not valid JSON.</span>
<span class="comment-copy">It is not valid JSON. Did you even try it?</span>
<span class="comment-copy">oh, sorry, I miss this thing. I'll correct the answer in a minute</span>
<span class="comment-copy">I've updated this with suggestions that covers both valid JSON or not. Still not sure isn't it better to remove the answer</span>
