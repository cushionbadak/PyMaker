<div class="post-text" itemprop="text">
<p>I have a text file containing:</p>
<pre><code>Madrid
Germany
Iceland
</code></pre>
<p>and a user is required to enter a country from the text file and the program will output the line where the country lies.</p>
<p>Lets say:</p>
<pre><code> enter country: Germany
</code></pre>
<p>output:
     2 #since germany is at line no.2</p>
<p>but I'm testing for cases where the user enters:</p>
<pre><code>enter country: germany
</code></pre>
<p>where its lowercase at start. the program will still recognise it's lowercase representation and will still print the line Germany is at.</p>
<p>I'm looking for a method that recognises both lowercase and uppercase representation. </p>
<pre><code>userinput = input("Enter country:").upper()
</code></pre>
<p>I've seen examples mentioning to convert the input to uppercase at start but the problem arises if my text file consists of letters with a mix of uppercase and lowercase letters.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe</p>
<pre><code>def fixcase(string):
    if len(string) &lt; 2:
        return NotImplemented
    chars = list(string)
    chars[0] = chars[0].upper()
    for i in range(1, len(chars)):
        chars[i] = chars[i].lower()
    return str(chars)
</code></pre>
<p>will solve your problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>When comparing string with unknown casing, but requiring only content of the string to be matched, You can use following code:</p>
<pre><code>userinput = input("Enter country:")
with open(filename) as input_file:
    for line in input_file:
        if userinput.lower() == line.strip().lower():
            do_something()
</code></pre>
<p>You can convert both string to lowercase and compare their content. Note <code>strip()</code> after getting line. If stored in file, line will contain newline character, so we need to get rid of it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.fullmatch()</code> with <code>re.IGNORECASE</code>:</p>
<pre><code># Tested with 3.6.2
import re

search = input("Enter country: ")
file = open('countries.txt', 'r').read().splitlines()

for num, line in enumerate(file, 1):
    if re.fullmatch(line, search, re.IGNORECASE):
        print(num)
</code></pre>
<p>This will only match the complete country name, and will ignore the case of the search term.</p>
<p>You could also use <code>re.match()</code> to check for a match starting at the beginning of the line, or <code>re.search()</code> to check for a match anywhere in the line.</p>
</div>
<div class="post-text" itemprop="text">
<p>We will convert the input to lowercase, strip new lines from the file and convert it lowercase, and compare the input with it.</p>
<p>Haven't used regular expression as you might not have knowledge of it</p>
<p>Have checked this it works: </p>
<pre><code>inputx = input("Enter the country name: ")
inputx = inputx.lower()
file = open("tyt.txt","r")
data = file.read().splitlines()
lena = len(data)
for i in range(lena):
    reada = data[i]
    reada = reada.lower()
    if reada == inputx: 
        print("The line is: "+str(i+1))
</code></pre>
</div>
<span class="comment-copy"><code>str.upper()</code> will  convert every letter to uppercase (not just the first letter). If you store all country names in your text file in full uppercase, there shouldn't be a problem.</span>
<span class="comment-copy">or you can use userinput = input("Enter country:").title()</span>
<span class="comment-copy">you can convert the text from file to uppercase too, in order to compare with the input text</span>
<span class="comment-copy">for modern versions of Python, <code>str</code> has <code>casefold</code> that is a more aggressive version of <code>lower</code> (or <code>upper</code>) specifically for case-insensitive string matching. <code>if userinput.casefold() == line.casefold(): # hooray</code>. <code>str.casefold</code> is <a href="https://docs.python.org/3/whatsnew/3.3.html?highlight=str%20casefold#builtin-functions-and-types" rel="nofollow noreferrer">new in Python 3.3</a></span>
