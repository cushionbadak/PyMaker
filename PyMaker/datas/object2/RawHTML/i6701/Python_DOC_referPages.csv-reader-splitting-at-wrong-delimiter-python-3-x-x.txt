<div class="post-text" itemprop="text">
<p>This is <del>probably</del> <strong>definitely</strong> my fault, but my comma separated value reader seems to be splitting on the wrong delimiter. I'm trying to make it separate time values like "3:00" into a list like <code>["3", "00"]</code> and then compare those numbers to another list the same format. </p>
<h2>CSV Reader:</h2>
<pre><code>    rows = []  
    self.file_name = None  
    if file == "pressure":  
        self.file_name = self.pressure_group 
    if file == "surface":  
        self.file_name = self.surface_interval  
    if file == "repetive": 
        self.file_name = self.rnt_calculator

    with open(self.file_name) as fp:  
        csvreader = csv.reader(fp)  

        for row in csvreader:  
            rows.append(row)  

    index = 0  
    for l in rows[0]:
        index += 1
        if file == "pressure":
            self.pressure_reference[index] = l

        if file == "surface":
            self.surface_reference[index] = l

        if file == "repetive":
            self.repetive_reference[index] = l

    del rows[0]
    if file == "pressure":
        self.pressure_rows = rows

    if file == "surface":
        self.surface_rows = rows

    if file == "repetive":
        self.repetive_rows = rows
</code></pre>
<h2>I then use the <code>self.surface_rows</code> as so:</h2>
<pre><code>             for row in self.surface_rows:
                print(str(time_to_find) + pressure_group)
                if row[0] == pressure_group:
                    for item in row[1]:
                        time_found = item.split(":")
                        if time_found[0] == time_to_find[0]:
                            if time_found[1] &gt;= time_to_find[1]:
                                cprint(str(time_found) + " TIME FOUND", "red", attrs=["bold"])
                        if time_found[0] &gt;= time_to_find[0]:
                            cprint(str(time_found) + " TIME FOUND", "cyan", attrs=["bold"])
</code></pre>
<p><code>time_to_find</code> is taken from s and s is <code>s = input()</code> and then it is split <code>s.split(":")</code></p>
<h2>What I get vs. What I want</h2>
<p>Apparently my <code>time_found</code> is "0" and not "1:30" or "1:25" and so it can't be split anymore and nothing really changes except it's a one item list now (<code>["0"]</code>). Now I want something like <code>time_found</code> to be <code>"1:30"</code> into which it becomes <code>["1", "30"]</code></p>
<h2>My CSV File</h2>
<p>The csv file is stored in a .txt file and can be found <a href="https://pastebin.com/BYe2LYnq" rel="nofollow noreferrer">here</a></p>
<pre><code>BLANK,Z,O,N,M,L,K,J,I,H,G,F,E,D,C,B,A
Z,0:00,0:52,1:44,2:37,3:29,4:21,5:13,6:06,6:58,7:50,8:42,9:34,10:27,11:15,12:53,13:30
O,0:00,0:00,0:52,1:44,2:37,3:29,4:21,5:13,6:06,6:58,7:50,8:42,9:34,10:27,11:15,12:53
N,0:00,0:00,0:00,0:52,1:44,2:37,3:29,4:21,5:13,6:06,6:58,7:50,8:42,9:34,10:27,11:15
M,0:00,0:00,0:00,0:00,0:52,1:44,2:37,3:29,4:21,5:13,6:06,6:58,7:50,8:42,9:34,10:27
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a working example of how you can split it. 
Essentially, you have to convert the strings to ints before comparing.</p>
<pre><code>import tempfile
import csv

input_name = None
with tempfile.NamedTemporaryFile(delete=False) as f:
    input_name = f.name
    f.write("""BLANK,Z,O,N,M,L,K,J,I,H,G,F,E,D,C,B,A
Z,0:00,0:52,1:44,2:37,3:29,4:21,5:13,6:06,6:58,7:50,8:42,9:34,10:27,11:15,12:53,13:30
O,0:00,0:00,0:52,1:44,2:37,3:29,4:21,5:13,6:06,6:58,7:50,8:42,9:34,10:27,11:15,12:53
N,0:00,0:00,0:00,0:52,1:44,2:37,3:29,4:21,5:13,6:06,6:58,7:50,8:42,9:34,10:27,11:15
M,0:00,0:00,0:00,0:00,0:52,1:44,2:37,3:29,4:21,5:13,6:06,6:58,7:50,8:42,9:34,10:27""")

rows = []
with open(input_name, 'r') as fp:
    csvreader = csv.reader(fp)

    for row in csvreader:
        rows.append(row)

    # ingore first row and first column, split the rest
    for row in rows[1:]:
        for col in row[1:]:
            hours, mins =  col.split(':')
            print(int(hours), int(mins))
</code></pre>
<p>This results in:</p>
<pre><code>(0, 0)
(0, 52)
(1, 44)
(2, 37)
(3, 29)
(4, 21)
(5, 13)
(6, 6)
(6, 58)
(7, 50)
(8, 42)
(9, 34)
(10, 27)
...
</code></pre>
</div>
<span class="comment-copy">My csv file is like <a href="https://pastebin.com/BYe2LYnq" rel="nofollow noreferrer">this</a></span>
<span class="comment-copy">There's probably something else going on we can't see.  Your data looks fine to me.  <a href="https://pastebin.com/nLjG4vMX" rel="nofollow noreferrer">pastebin.com/nLjG4vMX</a>  Perhaps the code is misinterpreting the first column ('Z') because as far as I can tell it's the only one that doesn't split.</span>
<span class="comment-copy">Any chance you can make an <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> for us - just write something that demonstrates the essence of what you are trying to do.</span>
<span class="comment-copy">You have too much code here and nothing I can run. But you say "Apparently my time_found is "0" and not "1:30" " but I see <code>time_found = item.split(":")</code> which would say that time_found is a list not a string, so I'm confused. And how does this have anything to do with <code>csv</code> when you are manually doing the <code>split</code> anyway - the title of this entire thing is misleading.</span>
<span class="comment-copy">Have you considered making <a href="https://docs.python.org/3/library/datetime.html#time-objects" rel="nofollow noreferrer">datetime.time</a> objects for comparison instead of splitting into lists?  It really isn't clear what you question is.</span>
