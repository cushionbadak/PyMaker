<div class="post-text" itemprop="text">
<p>Would love some help on the following simple question. How can I iterate through a list of dictionaries? I would only need the keys of each dictionary. EG:</p>
<pre><code>list_ = [{'negative': 'sad'}, {'negative': 'missed'},
         {'positive': 'already :D'},{'negative': 'cry'}, 
         {'negative': 'cheating'}, {'negative': 'worry'},
         {'positive': 'Chilling'},]
</code></pre>
<p>I would need to append the keys in the following list tweet_list</p>
<p>What is wrong with the following code? Apologies for the basic question, but it's mainly the data structure of the list_ that is causing me troubles.</p>
<p>EG:</p>
<pre><code>for key in list_():
    append.tweet_list(key[0])
    print(tweet_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want this list comprehension:</p>
<pre><code>&gt;&gt;&gt; [list(d.keys())[0] for d in list_]
['negative', 'negative', 'positive', 'negative', 'negative', 'negative', 'positive']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Note the different options in Python 2 and 3:</p>
<p><strong>Code</strong></p>
<pre><code>[d.keys()[0] for d in list_]                               # python 2

[next(iter(d.viewkeys())) for d in list_]                  # python 2

[next(iter(d.keys())) for d in list_]                      # python 2/3

[k for d in list_ for k in d]                              # python 2/3
</code></pre>
<p>The middle options leverage <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">dictionary views</a> as opposed to lists.  The last option is most Pythonic (suggested by @Yaroslav Surzhikov).</p>
<hr/>
<p><strong>Timings</strong></p>
<p>Confirmed in Python 3 (wherever possible) via <code>%timeit -n 100000</code>: </p>
<ol>
<li>6.58 µs: <code>[list(d.keys())[0] for d in list_]</code> </li>
<li>3.23 µs: <code>[d.keys()[0] for d in list_]</code> </li>
<li>3.97 µs: <code>[next(iter(d.viewkeys())) for d in list_]</code> </li>
<li>4.52 µs: <code>[next(iter(d.keys())) for d in list_]</code> </li>
<li>1.75 µs: <code>[key for d in list_ for key in d]</code> </li>
</ol>
<p>Contribution by @Yaroslav Surzhikov</p>
</div>
<span class="comment-copy"><code>[key for d in list_ for key in d]</code> - this one is better. On your suggestion - timeit.timeit = 6.885658357000011. On mine = 2.3229932919998646</span>
<span class="comment-copy">Thank you for this great answer. If you want to retrieve the values instead of keys then use this.  <code>[key for d in list_ for key in d.values()]</code></span>
