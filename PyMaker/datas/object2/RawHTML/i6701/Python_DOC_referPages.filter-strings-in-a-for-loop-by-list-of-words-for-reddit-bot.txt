<div class="post-text" itemprop="text">
<p>So I'm trying to write a reddit bot to find articles with certain words in the title.  Here's what I have so far: </p>
<pre><code>top_posts = page.hot(limit=20)
for post in top_posts:
    title = post.title
    if title.lower() in ['word1',  'word2', 'word3']:
        print(title)
</code></pre>
<p>If I replace the last 2 lines with...</p>
<pre><code>    if 'word1' in title.lower():
        print(title)
</code></pre>
<p>then it'll print the titles that have <code>word1</code> in them but when I put it into a list it won't.  I want to use a list to match different spellings of the same word.  What am I doing wrong here?</p>
</div>
<div class="post-text" itemprop="text">
<p>You have the order of the operands wrongly placed and you're not doing it right.</p>
<p>Use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a> to check if <em>any</em> of words in the list is contained in the title:</p>
<pre><code>if any(wd in title.lower() for wd in ['word1',  'word2', 'word3']):
    print(title)
</code></pre>
<p>To check if <em>all</em> of the words are contained in <code>title</code>, use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a> instead.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>title.lower() in ['word1',  'word2', 'word3']
</code></pre>
<p>This checks exactly what it says: Whether <code>title.lower()</code>, the lowercase <code>title</code>, is in the list of words.</p>
<p>This will work in cases where <code>title</code> is a single word, for example:</p>
<pre><code>&gt;&gt;&gt; title = 'Word1'
&gt;&gt;&gt; title.lower() in ['word1', 'word2', 'word3']
True
</code></pre>
<p>But of course, this will not work when <code>title</code> is an actual sentence that contains multiple words. <code>title = 'Word1 foo bar'</code> will never be an element of that single-word list.</p>
<p>So, you do have to have to check for every word from your word list whether it is contained in the <code>title</code> string:</p>
<pre><code>&gt;&gt;&gt; title = 'Word1 foo bar'
&gt;&gt;&gt; 'word1' in title.lower()
True
&gt;&gt;&gt; 'word2' in title.lower()
False
&gt;&gt;&gt; 'word3' in title.lower()
False
</code></pre>
<p>You could do that in a loop and break out of it as soon as you hit a positive result:</p>
<pre><code>&gt;&gt;&gt; def titleContainsWords(title, words):
        for word in words:
            if word in title:
                return True
        return False

&gt;&gt;&gt; wordlist = ['word1', 'word2', 'word3']
&gt;&gt;&gt; titleContainsWords(title.lower(), wordlist)
True
</code></pre>
<p>This is such a common thing, that there is also a shorter way to do the same thing, combining the <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> function with generator expressions:</p>
<pre><code>&gt;&gt;&gt; any(word in title.lower() for word in wordlist)
True
</code></pre>
</div>
<span class="comment-copy"><code>title.lower()</code> isn't in <code>['word1',  'word2', 'word3']</code></span>
<span class="comment-copy">you are my savior moses. thanks!</span>
