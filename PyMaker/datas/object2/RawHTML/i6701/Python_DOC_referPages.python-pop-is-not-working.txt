<div class="post-text" itemprop="text">
<p>I've gotten a little rusty with python. A friend is taking some tests to prepare for his exams and he's given this piece of code: </p>
<pre><code>stack = [3, 4, 5]

stack.append(6)

stack.pop() 
</code></pre>
<p>He's asked what will the screen show and the correct answer is 7. How is it 7? I've even written the code and run it. It is 6. Is it a new version returning the number + 1 or something? Or maybe the answers given by their teacher are just wrong.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>[3,4,5,6].pop()
</code></pre>
<p>Neither Python 2 nor Python 3 return <code>7</code> (both return <code>6</code>).<br/>
The most obvious answer is that it was just a typo by the teacher or your friend when they sent you the example.</p>
<hr/>
<pre><code>[3,4,5,6].pop()
</code></pre>
<p>is equivalent to</p>
<pre><code>[3,4,5,6].pop(-1)
</code></pre>
<p>Both return the last (= top) element of a stack.</p>
<hr/>
<p>With <code>[3,4,5].append(6)</code> <br/>
you append a <code>6</code> to the stack â†’ you push the <code>6</code> on top of the stack.</p>
<p>Therefore if you execute</p>
<pre><code>stack = [3,4,5]
stack.append(6)
stack.pop()       # equ. to stack.pop(-1)
</code></pre>
<p>the result will be <code>6</code> and cannot be <code>7</code>.</p>
<hr/>
<p>For a more detailed explanation of how and why lists in python can be used as various datastructures (stack, queue, ...) consider taking a look at the documentation:<br/>
<a href="https://docs.python.org/2/tutorial/datastructures.html" rel="nofollow noreferrer">https://docs.python.org/2/tutorial/datastructures.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I've running your code here, using CMD and python 3.6.2, and this is the output:</p>
<pre><code>&gt;&gt;&gt; stack = [3,4,5]
&gt;&gt;&gt; stack.append(6)
&gt;&gt;&gt; stack.pop()
6
&gt;&gt;&gt;
</code></pre>
<p>Surely, the correct answer is <code>6</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The answer that is given by the teacher is wrong. </p>
<blockquote>
<p>list.pop([i]) - Remove the item at the given position in the list, and
  return it. If no index is specified, a.pop() removes and returns the
  last item in the list.</p>
</blockquote>
<p>Take a look at <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer">the documentation of pop</a></p>
<pre><code>stack = [3, 4, 5]
stack.append(6)
print(stack.pop())
print(stack)
</code></pre>
<p>Output:</p>
<pre><code>6
[3, 4, 5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This must be a trick question</p>
<pre><code>stack = [3, 4, 5]

stack.append(6)

stack.pop()
</code></pre>
<p>returns </p>
<p><code>6</code></p>
<p>This is because you <code>append</code> 6 to the <code>end</code> or <code>top</code> of the <code>stack / list / array</code>.</p>
<p>A <code>pop</code> command follows the <code>last in first out</code> rule which means when  you <code>pop</code> an item from the <code>stack / list /array</code> you will be taking out the last item.</p>
<p>Therefore with <code>6</code> being the last item appended, when you <code>pop</code> the <code>stack</code> the return will be the last item, in this instance <code>6</code></p>
</div>
<span class="comment-copy">You <code>append(5)</code> and then you <code>pop()</code> it... So it will print <code>6</code>.</span>
<span class="comment-copy">Sounds like something crucial may have been lost in transmission between the original assignment and what you've posted here. What you've posted here would not print 7.</span>
<span class="comment-copy">The answer is accepted as correct but please provide a brief explanation of why pop returns 6 and not 7 :)</span>
<span class="comment-copy">The answer is accepted as correct but please provide a brief explanation of how pop works rather than a link :)</span>
