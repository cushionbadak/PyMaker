<div class="post-text" itemprop="text">
<p>I'm aware I can add it to a particular class or its instance using the <code>setattr</code> method. But in my case I want to dynamically "add" it to say a utilities.py module in a way that every file that does 'import utilities' sees this new function.</p>
</div>
<div class="post-text" itemprop="text">
<p>let's call your "new function" <code>new_func()</code>. I'm not quite sure which of the following you mean:</p>
<ul>
<li><code>import utilities</code> will make <code>utilities.new_func()</code> available  </li>
</ul>
<p>OR</p>
<ul>
<li><code>import utilities</code> will make <code>new_func()</code> available without the <code>utilities</code> prefix.</li>
</ul>
<h3>If it's the former:</h3>
<p>Just put the function inside the module somewhere in that module's top-level namespace. In other words <code>def new_func()</code> should not be indented <strong>at all</strong>.</p>
<h3>If it's the latter:</h3>
<p>You are out of luck; you'll need to change <code>import utilities</code> to <code>from utilities import *</code> which is not recommended and would be just as much work as explicitly importing <code>new_func()</code>.</p>
</div>
<span class="comment-copy">So what's wrong with the <code>setattr</code> approach?</span>
<span class="comment-copy">What's wrong with using your $EDITOR</span>
<span class="comment-copy">@Rawing I believe <code>setattr</code> needs the first input to be a class name. In this case utilities.py has no class definitions.. it's just a module containing helper functions.</span>
<span class="comment-copy">Believing means you didn't <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer">read the docs</a> nor try it out. <code>setattr</code> works with any object.</span>
<span class="comment-copy">You can do <code>import utilities; utilities.new_func = ...</code> in a module (let's call it <code>monkeypatch.py</code>.  Then, if you <code>import monkeypatch</code> in addition to <code>import utilities</code> in a python file, you will have <code>utilities.new_func</code> available.</span>
<span class="comment-copy">Neither: I wanted to dynamically add a function - not define it in the source file. @Rawing's comment solved my issue.</span>
