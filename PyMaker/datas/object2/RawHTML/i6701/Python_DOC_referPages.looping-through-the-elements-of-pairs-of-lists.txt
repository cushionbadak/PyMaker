<div class="post-text" itemprop="text">
<p>I have a list of tuples, which in turn consist of two lists again. For example:</p>
<pre><code>big_list = [
    (["A", "B", "C"], [1, 2]),
    (["X", "Y"], [9, 8, 7]),
    ]
</code></pre>
<p>I'd like to call some function on each combination of (letter, number).
I currently have a big ugly set of three nested for loops, along these lines:</p>
<pre><code>for (letters, numbers) in big_list:
    for letter in letters:
        for number in numbers:
            do_stuff(letter, number)
</code></pre>
<p>That is, I'd like <code>do_stuff</code> to be called once, for each combination of (letter, number) present in my list.</p>
<p>Is it feasible to collapse these three loops into one or two? Preferably in a way that isn't ugly and unPythonic?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think <code>itertools</code> may help:</p>
<pre><code>import itertools

for (letters, numbers) in big_list:
    for (letter, number) in itertools.product(letters, numbers):
        do_stuff(letter, number)
</code></pre>
<p>This saves you a loop, so now you only have one nested loop to deal with. And I think it's bit more Pythonic.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could also combine <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a> with <a href="https://docs.python.org/3/library/itertools.html#itertools.starmap" rel="nofollow noreferrer"><code>starmap</code></a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>chain.from_iterable</code></a>:</p>
<pre><code>from itertools import chain, starmap, product
for l, n in chain.from_iterable(starmap(product, big_list)):
    print(l, n)
</code></pre>
<p>Of course, whether that's more clear is a matter of opinion. Or just use a generator expression:</p>
<pre><code>for l, n in (p for ls, ns in big_list for p in product(ls, ns)):
     print(l ,n)
</code></pre>
<p>Both ways, the result (as <code>list</code>) is <code>[('A', 1), ('A', 2), ('B', 1), ('B', 2), ('C', 1), ('C', 2), ('X', 9), ('X', 8), ('X', 7), ('Y', 9), ('Y', 8), ('Y', 7)]</code>.</p>
</div>
<span class="comment-copy">Nothing wrong with what you've got. It's the most straightforward way to do it.</span>
<span class="comment-copy">@acdr : Please take a look at second answer, I have done it with one loop and a map</span>
