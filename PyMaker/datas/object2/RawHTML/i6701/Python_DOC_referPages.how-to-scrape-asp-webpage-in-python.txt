<div class="post-text" itemprop="text">
<p><a href="https://www.youtube.com/watch?v=drM6zw7QBHQ&amp;feature=youtu.be" rel="nofollow noreferrer">In this video, I give you a look at the dataset I want to scrape/take from the web. Very sorry about the audio, but did the best with what I have.</a> It is hard for me to describe what I am trying to do as I see a page with thousands of pages and obviously has tables, but pd.read_html doesn't work! Until it hit me, this page has a form to be filled out first....</p>
<p><a href="https://opir.fiu.edu/instructor_eval.asp" rel="nofollow noreferrer">https://opir.fiu.edu/instructor_eval.asp</a></p>
<p>Going to this link will allow you to select a semester, and in doing so, will show thousands upon thousands of tables. I attempted to use the URL after selecting a semester hoping to read HTML, but no such luck.. I still don't know what I'm even looking at (like, is it a webpage, or is it ASP? What even IS ASP?). If you follow the video link, you'll see that it gives an ugly error if you select spring semester, copy the link, and put it in the search bar. Some SQL error.
So this is my dilemma. I'm trying to GET this data... All these tables. Last post I made, I did a brute force attempt to get them by just clicking and dragging for 10+ minutes, then pasting into excel. That's an awful way of doing it, and it wasn't even particularly useful when I imported that excel sheet into python because the data was very difficult to work with. Very unstructured. So I thought, hey, why not scrape with bs4? Not that easy either, it seems, as the URL won't work. After filtering to spring semester, the URL just won't work, not for you, and not if you paste it into python for bs4 to use...
So I'm sort of at a loss here of how to reasonably work with this data. I want to scrape it with bs4, and put it into dataframes to be manipulated later. However, as it is ASP or whatever it is, I can't find a way to do so yet :\</p>
</div>
<div class="post-text" itemprop="text">
<p>ASP stands for <a href="https://en.wikipedia.org/wiki/Active_Server_Pages" rel="nofollow noreferrer">Active Server Pages</a> and is a page running a server-side script (usually vbs), so this shouldn't concern you as you want to scrape data from the rendered page.<br/>
In order to get a valid response from <code>/instructor_evals/instr_eval_result.asp</code> you have to submit a POST request with the form data of <code>/instructor_eval.asp</code>, otherwise the page returns an error message.<br/>
If you submit the correct data with <code>urllib</code> you should be able to get the tables with <code>bs4</code>.  </p>
<pre><code>from urllib.request import urlopen, Request
from urllib.parse import urlencode
from bs4 import BeautifulSoup

url = 'https://opir.fiu.edu/instructor_evals/instr_eval_result.asp'
data = {'Term':'1171', 'Coll':'%', 'Dept':'','RefNum':'','Crse':'','Instr':''}
r = urlopen(Request(url, data=urlencode(data).encode()))
html = r.read().decode('utf-8', 'ignore')
soup = BeautifulSoup(html, 'html.parser')
tables = soup.find_all('table')
</code></pre>
<p>By the way this error message is a strong indication that the page is vulnerable to <a href="https://www.owasp.org/index.php/SQL_Injection" rel="nofollow noreferrer">SQL Injection</a> which is a very nasty bug, and i think you should inform the admin about it.  </p>
</div>
<span class="comment-copy">It has nothing to do with the fact that it is a .asp page.  The page is still HTML as you can see by inspecting the first page with the form in it. The problem is that to get a response with the tables from the 2nd page, you actually need to fill in the form fields, and different table information will be returned to you depending on your choices (same URL).  This flow is standard for requests and returns from web forms, regardless of server side language.  What you need to do is incorporate choosing the fields on the first page in your process before you can scrape the 2nd page.</span>
<span class="comment-copy">@ivan7707 the URL does not remain the same. Filter the table, and try copying the URL into another browser. It will give you an error. But in response to the rest of your reply, I know I need to incorporate using a field… But I have absolutely no idea how to do that. How do you facilitate picking a semester or filtering the first part to get to the second?</span>
<span class="comment-copy">Changing college and semester, this is always the results page URL: <a href="https://opir.fiu.edu/instructor_evals/instr_eval_result.asp" rel="nofollow noreferrer">opir.fiu.edu/instructor_evals/instr_eval_result.asp</a>.</span>
<span class="comment-copy">@ivan7707 I can see that. But I don't really understand why/what is happening. All I know is that it does not remain the same as the original page</span>
<span class="comment-copy">That is how web forms and results are usually returned from web pages (without a unique URL), regardless of the server side language.  I would use <a href="http://selenium-python.readthedocs.io/installation.html" rel="nofollow noreferrer">selenium</a> personally to automate the first part</span>
<span class="comment-copy">Who is this "you"? By that, I mean, the OP clearly cld not explain this. So you can't possibly mean them. By saying "you", you — yourself — are abdicating responsibility even though you have claimed security knowledge. Shouldn't the "you" be…well…*you*?</span>
<span class="comment-copy">@hrbrmstr wouldn't you agree that this page is propably vulnerable? I don't have any association with the institution and i hear that some admins are not very friendly about those things, but if you want to investigate and report go ahead.</span>
<span class="comment-copy">Aside from that, the code itself @t.m.adam included doesn't work, so I'm doubtful he tested it. 'UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe9 in position 5779573: invalid continuation byte' whatever this error means. I can't figure this out. Been trying to for the past week or so, researching, but can't understand it.</span>
<span class="comment-copy">@user18139 the <code>read</code> method returns bytes and the <a href="https://docs.python.org/3/library/stdtypes.html#bytes.decode" rel="nofollow noreferrer"><code>decode</code></a> method "Returns a string decoded from the given bytes".  The default value for <code>errors</code> is 'strict', which means encoding errors raise an exception. You can avoid that with 'ignore', see updated code.</span>
