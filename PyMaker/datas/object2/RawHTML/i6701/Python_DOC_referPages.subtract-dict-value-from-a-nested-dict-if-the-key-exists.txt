<div class="post-text" itemprop="text">
<p>Basically I made this request to perform the operation efficiently but I guess the data structure I'm using isn't.</p>
<p>First dict:</p>
<pre><code>f_dict = {'n1':{'x':1,'y':1,'z':3},'n2':{'x':6,'y':0, 'z':1}, ...}
s_dict = {'x':3,'t':2, 'w':6, 'y':8, 'j':0, 'z':1}
</code></pre>
<p>I want to obtain <code>e</code> such that:</p>
<pre><code>e = {'n1':{'x':-2,'y':-7,'z':1},'n2':{'x':3,'y':-8,'z':0}, ...} 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a nested dictionary comprehension and use <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get</code></a> to subtract the value or a default value (in this case 0):</p>
<pre><code>&gt;&gt;&gt; {key: {ikey: ival - s_dict.get(ikey, 0) 
...        for ikey, ival in i_dct.items()} 
...  for key, i_dct in f_dict.items()}
{'n1': {'x': -2, 'y': -7, 'z': 2}, 'n2': {'x': 3, 'y': -8, 'z': 0}}
</code></pre>
<p>Or if you prefer explicit loops:</p>
<pre><code>res = {}
for key, i_dict in f_dict.items():
    newdct = {}
    for ikey, ival in i_dict.items():
        newdct[ikey] = ival - s_dict.get(ikey, 0)
    res[key] = newdct

print(res)
# {'n1': {'x': -2, 'y': -7, 'z': 2}, 'n2': {'x': 3, 'y': -8, 'z': 0}}
</code></pre>
</div>
<span class="comment-copy">Please, rephrase your examples to be actual python dictionaries. BTW, hint: x - 0 == x. You can always check for a value in a dict and give a default <code>s_dict.get('a',0)</code>.</span>
<span class="comment-copy">Thank you very much, the second snippet  works fine!</span>
<span class="comment-copy">@J.Dillinger You're welcome. Please don't forget to <a href="https://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work">accept</a> the most helpful answer. :)</span>
