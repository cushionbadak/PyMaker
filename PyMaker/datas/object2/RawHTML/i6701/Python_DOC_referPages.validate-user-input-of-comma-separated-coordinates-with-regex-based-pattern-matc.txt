<div class="post-text" itemprop="text">
<p>I have a problem where the user can input any number of (x,y) co-ordinates within parentheses. For example, 
User A can input <code>(1,1) (1,2) (1,3)</code></p>
<pre><code>User B : (1,1)
User C : (3,2) (5,5) (6,1)
</code></pre>
<p>I want a generic pattern matching to check if the input entered by the user is valid. Input is valid only if it follows the above format. That is, <code>(x,y)\s(a,b)\s(c,d)</code>. I am new to regex matching and I tried like <code>(\\(\d,\d\\)\s){1,}</code>. This does not seem to work. Also, space should not be there after the last co-ordinate entry. Can someone help me how to get this?</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>I included support for multi-digit numbers, just in case:</p>
<pre><code>pattern = r"(\(\d+,\d+\)\s)*\(\d+,\d+\)$"
re.match(pattern, "(1,1) (1,2) (1,3)")
#&lt;_sre.SRE_Match object; span=(0, 17), match='(1,1) (1,2) (1,3)'&gt;
re.match(pattern, "(1,1)")
#&lt;_sre.SRE_Match object; span=(0, 5), match='(1,1)'&gt;
re.match(pattern, "(1,1) (1,2) (1,3) ") # no match
re.match(pattern, "(1,1) (1,2)(1,3)") # no match
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to validate the whole input, I'd suggest the use of <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a>.</p>
<pre><code>&gt;&gt;&gt; pattern = re.compile('(\(\d+,\d+\)\s*)+$')    
&gt;&gt;&gt; def isValid(string):
...     return bool(pattern.match(string.strip()))
... 
&gt;&gt;&gt; string = '(1,1) (1,2) (1,3)'
&gt;&gt;&gt; isValid(string)
True
</code></pre>
<p>Either the whole string matches, or nothing matches. By default, <code>re.match</code> starts from the beginning, and will return a <code>match</code> object if the string is valid, or <code>None</code> otherwise. The <code>bool</code> result will be used to evaluate the truthiness of this expression.</p>
<p>Note that the whitespace character has been made optional to simplify the expression. if you want a strict matching, I recommend looking at <a href="https://stackoverflow.com/a/46354458/4909087">DYZ' answer</a>.</p>
<hr/>
<p><strong>Regex Details</strong></p>
<pre><code>(        # capturing group 
    \(       # opening paren 
    \d+      # 1 or more digits
    ,        # comma
    \d+      
    \)       # closing paren
    \s*      # 0 or more whitespace chars
)+       # specify repeat 1 or more times
$        # end of string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import re

s = "(1,1) (1,2) (1,3)"
if re.findall("(\(\d+,\d+\)\s)|(\(\d+,\d+\)$)", s):
   pass
</code></pre>
</div>
<span class="comment-copy">Are your coordinates always single-digit integer numbers?</span>
<span class="comment-copy">You're on the right track. You'll want to escape your parenthesis.</span>
<span class="comment-copy">@MoinuddinQuadri Not after I changed '+' to '*'.</span>
<span class="comment-copy">thank you so much! it helped!</span>
<span class="comment-copy">The space between the groups is not optional.</span>
<span class="comment-copy">...But the space at the end should not match.</span>
<span class="comment-copy">@DYZ In that case, your pattern is correct. I've added a note to that. Thanks for pointing it out! (upvoted it too)</span>
<span class="comment-copy">Thanks @COLDSPEED</span>
<span class="comment-copy">I think you want to change <code>\d</code> to <code>\d+</code> since there should be 1 or more digits.  You may also want to allow optional whitespace before and after digits.</span>
<span class="comment-copy">Doesn't work for arbitrary number of groups.</span>
<span class="comment-copy">@DYZ please see my recent edit.</span>
