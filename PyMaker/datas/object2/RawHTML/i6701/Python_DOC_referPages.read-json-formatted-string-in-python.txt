<div class="post-text" itemprop="text">
<p>I have a simple Websockets server in python, it receives messages from Android app clients, I tried to make the message payload from the client in JSON but I felt. It is only working when it is in String.
One solution I found is to keep the message string but with JSON format:</p>
<pre><code>     try {
         json.put("name", "Jack");
         json.put("age", "24");
         message = json.toString(2);
     } catch (JSONException e) {
         e.printStackTrace();
     }
webSocket.send(message);
</code></pre>
<p>Inspired by the Javascript <code>JSON.stringify(message)</code> 
I printed the message on the server and it seems to be formatted
<a href="https://i.stack.imgur.com/BQKkK.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/BQKkK.png"/></a></p>
<p>My question is how can I reverse back it into JSON on the server when it received?</p>
<p>I tried this way: Python:</p>
<pre><code>def on_message(self,message):
    data = json.loads(message)
    self.write_message(data['name'])
</code></pre>
<p>but I got this error:</p>
<pre><code>ERROR:tornado.application:Uncaught exception in /
Traceback (most recent call last):
  File "/usr/local/lib/python3.4/dist-packages/tornado/websocket.py", line 494, in _run_callback
    result = callback(*args, **kwargs)
  File "index.py", line 24, in on_message
    data = json.loads(message)
  File "/usr/lib/python3.4/json/__init__.py", line 318, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.4/json/decoder.py", line 343, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.4/json/decoder.py", line 361, in raw_decode
    raise ValueError(errmsg("Expecting value", s, err.value)) from None
ValueError: Expecting value: line 1 column 1 (char 0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should use the <code>json</code> Python package. To have a JSON, you could simply do <code>import json</code> and <code>json.dumps(message)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a Json package in python</p>
<pre><code>import json
data = json.loads(your_var)
</code></pre>
<p>In data variable you get a json format data</p>
<p>hope this will help you</p>
</div>
<div class="post-text" itemprop="text">
<p>Will something like this work for you?</p>
<pre><code>import json

# assume this is the JSON you receive
text = json.dumps(dict(name='Jack', age='24'))

# show the text to be converted
print(text)
# outputs: {"name": "Jack", "age": "24"}

# load a string and convert to Python object
# see `json` module more for details
obj = json.loads(text) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I tried this way and it worked for me, I converted the message into a dictionary using <code>ast</code> and then used the new message as I wanted:</p>
<pre><code>    formattedMessage = ast.literal_eval(format(message))
    self.write_message(formattedMessage["name"])
</code></pre>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json</code></a> documentation shows examples to encode and decode json, i.e. going from json to string and vice versa</span>
<span class="comment-copy">Printing the value of <code>message</code> given to <code>json.loads()</code> will be very helpful.</span>
<span class="comment-copy">You should really try to print it from within the function. It seems you are calling it with an empty string value for <code>message</code>. For example, <code>json.loads('')</code> gives a very similar error in my installation.</span>
<span class="comment-copy">I tried, but it did not work, I updated the question with the error.</span>
<span class="comment-copy">I tried, but it did not work, I updated the question with the error.</span>
<span class="comment-copy">I tried, but it did not work, I updated the question with the error.</span>
<span class="comment-copy">can you print the value of <code>message</code>?</span>
<span class="comment-copy">I could, and It gives me the message formatted as I send it. But I don't know how to re-parse it again into JSON</span>
<span class="comment-copy">if you could show, it may be easier to spot the issue. Maybe it is some custom formatting or whitespace or something silly like that.</span>
<span class="comment-copy">Ok, just updated the post</span>
<span class="comment-copy">If the source is a <code>json</code> text, this is going to produce very fragile code. I would rather make sure that a proper JSON parser works. <code>simplejson</code> is known to produce more informative error messages, if that helps you.</span>
