<div class="post-text" itemprop="text">
<p>I am new to python 2 and I want to loop through a json generated by a query and return same strings:
This is my json:</p>
<p>"{\"Machine\":{\"0\":\"Mach1\",\"1\":\"Mach2\",\"2\":\"Mach3\",\"3\":\"Mach4\",\"4\":\"Mach5\"}}"</p>
<p>What I don't understand is wich is the key here and how can I loop to get a result like this:</p>
<pre><code>Mach1
Mach2
Mach3
..
</code></pre>
<p>Or even just Mach1. 
I've tried this:</p>
<pre><code>def printDict(dict):
    for key,v, value in d.iteritems():
        if type(v) is dict:
            printDict(v)
        else:
            print "{0} : {1}".
</code></pre>
<p>But doesn't seem to work</p>
</div>
<div class="post-text" itemprop="text">
<p>First mistake:</p>
<pre><code>def printDict(dict):
    ...
    if type(v) is dict:
</code></pre>
<p><code>dict</code> is no longer the built-in dictionary type, you've overwritten it locally. Also <code>type(v) is dict</code> is not a good way to check if something is an instance of something else (it doesn't take inheritance into account).</p>
<p>Second mistake: </p>
<pre><code>for key,v, value in d.iteritems():
</code></pre>
<p><code>.iteritems()</code> method returns a sequence of pairs, not triples. Also <code>d</code> is an undefined local variable.</p>
<p>Finally</p>
<pre><code>print "{0} : {1}".
</code></pre>
<p>is a syntax error.</p>
<p>Is this what you are looking for:</p>
<pre><code>def print_dict(dct):
    for key, value in dct.iteritems():
        if isinstance(value, dict):
            print_dict(value)
        else:
            print '{0} : {1}'.format(key, value)
</code></pre>
<p>Also if you start from raw JSON (i.e. a string) then you have to deserialize it first:</p>
<pre><code>import json
dct = json.loads(my_json)
</code></pre>
</div>
<span class="comment-copy">@Christian should take attention, that line format (as is) incorrect now, he must clean unnecessary symbols before parsing.</span>
<span class="comment-copy">@RomanMindlin you're absolutely right. I removed the unnecessary symbols before parsing but I still got the indexes: "Machine": {"1": "machine1", "0": "Machine2"}, they are in other order because I put grouped them DESC. Should I worry about them?</span>
<span class="comment-copy">The <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">specification</a> for the built-in dictionary type disclaims any preservation of order, it is best to think of a dictionary as an unordered set of <code>key: value</code> pairs</span>
