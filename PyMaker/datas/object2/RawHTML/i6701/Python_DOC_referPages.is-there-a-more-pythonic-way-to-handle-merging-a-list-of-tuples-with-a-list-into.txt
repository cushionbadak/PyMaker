<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3300464/how-can-i-get-dict-from-sqlite-query">How can I get dict from sqlite query?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>I am using Python3, I'm currently trying to refactor some code and this in particular looks a bit sloppy. Right now I have a standard for loop going though the list of tuples and pairing them with hard coded keys. </p>
<pre><code>    values = [
        (1, 'test1', 15.5),
        (2, 'test2', 31.67),
        (3, 'item1', 16.5),
        (4, 'bike1', 15.5),
    ]

    keys = ['id', 'name', 'price']

    items = []

    for row in values:
        items.append({'id': row[0], 'name': row[1], 'price': row[2]})

    return items
</code></pre>
<p>Here is a similar article
<a href="https://stackoverflow.com/questions/39842766/more-efficient-way-to-create-json-from-python">More efficient way to create JSON from Python</a></p>
<p>However I'm having a hard time figuring how how to handle the fact my two sets of data are pretty different</p>
<pre><code>    items = [row for row in result]
    columns = [key[0] for key in cursor.description]

    print([{key: val} for key, val in zip(columns, items)] )
</code></pre>
<p>I cam up with this, which could be condensed into one line theoretically. But since my data isn't 1 for 1 ( i.e. a list vs a list of tupels ) it gives me this...</p>
<pre><code>[{'id': (1, 'bike2', 15.5)}, {'name': (2, 'test', 31.67)}, {'price': (3, 'bike3', 15.5)}]
</code></pre>
<p><code>UPDATE</code></p>
<p>Here was my final solution, thanks Martijn!</p>
<pre><code>items = [dict(zip([key for key in keys], row)) for row in result]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You were almost there; you need to zip individual rows, not all rows at once:</p>
<pre><code>[dict(columns, row) for row in result]
</code></pre>
<p>However, you can simply tell <code>sqlite</code> to produce dictionaries for each row, by setting the <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.row_factory" rel="nofollow noreferrer"><code>row_factory</code></a>:</p>
<pre><code>def dict_factory(cursor, row):
    return {d[0]: col for d, col in zip(cursor.description, row)}

connection.row_factory = dict_factory
</code></pre>
<p>at which point you simply return the cursor results as a list:</p>
<pre><code>return cursor.fetch_all()
</code></pre>
</div>
