<div class="post-text" itemprop="text">
<p>I have a python script which uses <a href="https://github.com/lowerquality/gentle" rel="nofollow noreferrer">gentle</a> to transcribe some audio.</p>
<p>At the moment I have to copy my file into the gentle repo and then I can <code>import gentle</code> and use <code>gentle</code> later in the code as I would like.</p>
<p>However I would prefer not to have to copy my file into the gentle directory. I have tried changing the import to <code>import gentle.gentle</code> but either way I get the following error when running my script from the parent directory:</p>
<pre><code>Traceback (most recent call last):
  File "process_text.py", line 6, in &lt;module&gt;
    import gentle.gentle  # or just import gentle
  File "/usr/local/lib/python2.7/dist-packages/gentle/__init__.py", line 2, in &lt;module&gt;
    from resources import Resources
  File "/usr/local/lib/python2.7/dist-packages/gentle/resources.py", line 4, in &lt;module&gt;
    from util.paths import get_resource, ENV_VAR
ImportError: No module named util.paths
</code></pre>
<p>Is there an easy way to use the module without having to copy my script into its directory? Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>There are many fixes to this issue, see the tutorial page on the docs for more info <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/modules.html</a>.</p>
<p>Basically, if <code>gentle</code> is pip-installable you may want to try to install it using:</p>
<pre><code>pip install --user gentle
</code></pre>
<p>Or you may want to create an environment with either <code>conda</code> or <code>virtualenv</code>.
Alternatively, you could just set your <code>PYTHONPATH</code> environment variable to include the path you need, e.g.</p>
<pre><code>PYTHONPATH="/path/to/lib:$PYTHONPATH" python /path/to/script.py
</code></pre>
</div>
<span class="comment-copy">This question is tricky to answer in a straightforward way, because there's several ways to approach this. But my recommendation would be to properly <b>package</b> your script/project, and then declare <code>gentle</code> as a <b>dependency</b> of it, allowing you to install your own package like you would with other Python packages. Have a look at <a href="https://packaging.python.org" rel="nofollow noreferrer">packaging.python.org</a> - particularly the <a href="https://packaging.python.org/tutorials/distributing-packages/" rel="nofollow noreferrer">Packaging and Distributing Projects</a> section for details on how to create your own Python package.</span>
