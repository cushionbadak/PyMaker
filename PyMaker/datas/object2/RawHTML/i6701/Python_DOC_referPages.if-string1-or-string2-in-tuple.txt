<div class="post-text" itemprop="text">
<p>So I stumbled upon a problem (solved it eventually via experimentation) with checking for the existence of strings inside a tuple.</p>
<pre><code>if 'String1' or 'String2' in tuple:
</code></pre>
<p>evaluated  <code>True</code> even if neither were in tuple.</p>
<pre><code>if 'String1' in tuple or 'String2' in tuple:
</code></pre>
<p>gives me the desired result.</p>
<p>What did the first variant actually evaluate?</p>
<p>Edit:  @Cricket_007 ... the question you pointed to in your dupe report didn't cover the <code>in</code>, therefore I believe this not to be a dupe.</p>
</div>
<div class="post-text" itemprop="text">
<p>The difference is the <code>in</code> container checking,
If you break this statement: <code>if 'String1' or 'String2' in tuple:</code> </p>
<ul>
<li><p><code>'String1'</code> returns True because testing <code>str()</code> returns <code>True</code> as long as the string is not empty</p></li>
<li><p><code>'String2' in tuple</code> returns True only if the string is <strong>contained</strong> in the tuple</p></li>
</ul>
<p>The first condition always returns <strong>True</strong>. </p>
<p>The second line tests both variables for <code>in</code> containment first, and then performing <code>or</code> between the results </p>
</div>
<span class="comment-copy"><code>if ('String1') or ('String2' in tuple):</code></span>
<span class="comment-copy">Go read the Python operator precedence table.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/15112125/how-do-i-test-one-variable-against-multiple-values">How do I test one variable against multiple values?</a></span>
<span class="comment-copy">Consider using any as in <code>any(s in tuple for s in ('String1', 'String2'))</code>. Your issue is <code>'String1'</code> is 'truthy' as you have written it So <code>if True or 'String2' in tuple</code> will be <code>True</code> and is equivalent.</span>
<span class="comment-copy">Thanks for the response, @Vinny, so because 'True' or (string2 in tuple) [which happens to be false] the whole thing is True?</span>
<span class="comment-copy">@tink that's right. python breaks down the tests to <code>String1</code> OR <code>String2 in tuple</code>. The first always returns True</span>
