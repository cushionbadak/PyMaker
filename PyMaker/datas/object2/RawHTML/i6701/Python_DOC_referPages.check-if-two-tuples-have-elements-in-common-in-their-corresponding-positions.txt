<div class="post-text" itemprop="text">
<p>Here is what I want to do:</p>
<pre><code>pair1 = (1,2)
pair2 = (3,3)
pair3 = (3,2)

# Is there a way that I can compare any of these two objects and yields the following:
 def myComp(...):
 #...

myComp(pair1,pair2) gives False 
myComp(pair1,pair3) gives True     #They both have 2 at index 1
myComp(pair1,pair3) gives True     #They both have 3 at index 0
</code></pre>
<p>Any ideas or advice will be greatly appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>There are builtins to do this much more easily than hardcoding the if statement conditions. You can use <code>zip</code> and <code>any</code>:</p>
<pre><code>def myComp(pair1, pair2):
    return any(x == y for x, y in zip(pair1, pair2))
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; myComp(pair1, pair2)
False
&gt;&gt;&gt; myComp(pair2, pair3)
True
&gt;&gt;&gt; myComp(pair1, pair3)
True
</code></pre>
<p>What happens is, the two lists are zipped together using <code>zip</code> which creates a generator of tuples. This is unpacked inside a generator comprehension. <code>any</code> will then test to see if any of the comparisons <code>x == y</code> are <code>True</code>. If yes, the resultant is <code>True</code> and is returned. Else, <code>False</code> is returned.</p>
<p>This approach should work with any arbitrary sized lists, provided they are equal.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your myComp function just needs an if to do comparison so it would be like:</p>
<pre><code>def myComp(pair1,pair2)
   if (pair1[0]==pair2[0] || pair1[1]==pair2[1])
       return true;
return false;
</code></pre>
</div>
<span class="comment-copy">Why should we do your homework?</span>
<span class="comment-copy">Take some time to work your way through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">The Tutorial</a>; practicing the examples given and looking at the docs for things you aren't familiar with.  This should give you an idea of the tools at your disposal and you might start getting ideas for solving your problem - try those ideas out and if you get stuck, come back and ask.  If you haven't had the opportunity yet, please read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">you might as well <code>return (pair1[0]==pair2[0] || pair1[1]==pair2[1])</code> directly.</span>
<span class="comment-copy">Is there any built in function in python that does this?</span>
<span class="comment-copy">I am not sure if any built in function would do that and this is pretty straight forward so you do not need a built in function.</span>
<span class="comment-copy">@HennyManny - you should read through the docs to see if there is a tool in the standard library that will help you.</span>
