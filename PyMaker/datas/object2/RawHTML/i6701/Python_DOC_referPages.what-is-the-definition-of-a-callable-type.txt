<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/questions/46243293/do-static-method-object-and-class-method-object-not-have-callable-types#comment79451819_46243406">Background</a>: I am trying to understand why static and class methods are not callable while being descriptors, while ordinary methods of a class (i.e. methods of a class which are neither static or class methods) and functions which are not attributes of classes are both descriptors and callable. </p>
<p>In Python, what is the definition of a callable type?</p>
<ol>
<li><p>From <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">https://docs.python.org/3/reference/datamodel.html</a></p>
<blockquote>
<p><strong>Callable types</strong> These are the types to which the function call operation (see section Calls) can be applied:</p>
</blockquote>
<p>Is the operator for "the function call operatation" <code>()</code>? So is a
callable type  defined as a type whose instances the function call
operator <code>()</code> can be applied to?</p></li>
<li><p>From <a href="https://docs.python.org/3/reference/expressions.html#calls" rel="nofollow noreferrer">https://docs.python.org/3/reference/expressions.html#calls</a></p>
<blockquote>
<p>The primary must evaluate to a callable object (user-defined functions, built-in functions, methods of built-in objects, class
  objects, methods of class instances, and <strong>all objects having a
  <code>__call__()</code> method</strong> are callable). </p>
</blockquote>
<p>Does it mean that a callable type may or might not have a
<code>__call__()</code> method? If a class has a <code>__call__()</code> method, then it
must be a callable type? If a class doesn't have a <code>__call__()</code>
method, then it might or might not be a callable type?</p>
<p>Do "user-defined functions, built-in functions, methods of built-in
objects, class objects, methods of class instances" not have a
<code>__call__()</code> method? Are they instances of callable types? What
specific types do they have respectively?</p></li>
</ol>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Is the operator for "the function call operatation" <code>()</code>? So is a callable type defined as a type whose instances the function call operator <code>()</code> can be applied to?</p>
</blockquote>
<p>Yes, exactly.</p>
<blockquote>
<p>Does it mean that a callable type may or might not have a <code>__call__()</code> method? If a class has a <code>__call__()</code> method, then it must be a callable type? If a class doesn't have a <code>__call__()</code> method, then it might or might not be a callable type?</p>
</blockquote>
<p>For a given object to be a callable, it must define <code>__call__</code>, functions do, for example:</p>
<pre><code>def foo():
    pass
callable(foo) # True
</code></pre>
<p><code>staticmethod</code>'s or <code>classmethod</code>s (to continue from the previous question), don't define <code>__call__</code>:</p>
<pre><code>s = staticmethod(foo)
callable(s)  # False
</code></pre>
<p>(<code>callable</code> essentially does something like <code>getattr(foo, '__call__', False)</code>)</p>
<blockquote>
<p>Do "user-defined functions, built-in functions, methods of built-in objects, class objects, methods of class instances" not have a <strong>call</strong>() method? Are they instances of callable types? What specific types do they have respectively?</p>
</blockquote>
<ul>
<li><p>User defined functions (<code>function</code> type, like <code>foo</code>) have <code>__call__</code>. </p></li>
<li><p>Built-in functions (e.g <code>max</code>) also have <code>__call__</code>, see <code>callable(max)</code>.</p></li>
<li><p>Methods of built-in objects, yes: <code>callable(str.isupper)</code>.</p></li>
<li><p>Class objects, yes (<code>type</code> defines a <code>__call__</code> for them): </p>
<pre><code>&gt;&gt;&gt; class Spam: pass
&gt;&gt;&gt; callable(Spam) # True
</code></pre></li>
<li><p>Methods of class instances: </p>
<pre><code>&gt;&gt;&gt; class Spam2: 
...     def do_spam(self):
...         return "spam"
...
&gt;&gt;&gt; callable(Spam2().do_spam)  # True
</code></pre></li>
</ul>
<p>They are all callable because they define a <code>__call__</code> special method. That's the only way to make an object callable.</p>
<p>As for staticmethods and classmethods, though they usually wrap callables (which they then expose via the descriptor protocol), they themselves are not callable since they don't define a <code>__call__</code> special method.</p>
</div>
<div class="post-text" itemprop="text">
<p>Check the definition of Callable</p>
<pre><code>from collections import Callable
</code></pre>
<p>the source codes is as follows:</p>
<pre><code>class Callable(metaclass=ABCMeta):

    __slots__ = ()

    @abstractmethod
    def __call__(self, *args, **kwds):
        return False

    @classmethod
    def __subclasshook__(cls, C):
        if cls is Callable:
            if any("__call__" in B.__dict__ for B in C.__mro__):
                return True
        return NotImplemented
</code></pre>
<p>the tricky part is the method of <strong>__subclasshook__</strong>, so any classes who can find a __call__ method could be treated as a subclass of Callable, instead of inheriting from it directly.</p>
<p>PS: not only __subclasshook__ can do this, the register() method can also register another class as a subclass of the base class.</p>
</div>
<span class="comment-copy">Thanks. Are there other objects which wrap callables but are not callables, but may act like callables?</span>
<span class="comment-copy">@Tim not that I know of. Descriptors are special because the language invokes them (their <code>__get__</code>) behind the scenes and returns the callable they wrap.</span>
<span class="comment-copy">Thanks. (1) How do you show the definition of <code>Callable</code> class in Python?   (2) Do you mean a callable type is defined as a type which has an attribute (data attribute or method attribute) named <code>__callable__</code>? (3) Do "user-defined functions, built-in functions, methods of built-in objects, class objects, methods of class instances"  have a <code>__call__()</code> method? Are they  callable? What specific types do they have respectively?</span>
<span class="comment-copy">(1) I use PyCharm as IDE, and clicked into the definition of Callable (you must import first: from collections import Callable); (2)(3) you can define a very simple function named foo, and use dir(foo) to see the attributes, you can see _<i>call_</i> is one of them.</span>
