<div class="post-text" itemprop="text">
<p>New to python and would appreciate a little help.
I would like to go through 10 directories and copy the newest file from each directory back into a single folder. There may be multiple files in each directory.</p>
<p>I can pull a complete listing from each directory, not sure how to narrow this down. Any direction would be appreciated.
inside the STATES directory will be directories for each state (i.e. CA, NY, FL, MI, GA)</p>
<p>**Edited if it is helpful, the directory structure looks like this:
'/dat/users/states/CA/'
'/dat/users/states/NY/'
'/dat/users/states/MI/'</p>
<pre><code>import glob
import os

data_dir = '/dat/users/states/*/'
file_dir_extension = os.path.join(data_dir, '*.csv')

for file_name in glob.glob(file_dir_extension):
    if file_name.endswith('.csv'):
        print (file_name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/os.html?highlight=os%20walk#os.walk" rel="nofollow noreferrer"><code>os.walk()</code></a> instead of <code>glob.glob()</code> to traverse all of your folders. For each folder you get a list of the filename in it. This can be sorted by date using <a href="https://docs.python.org/3/library/os.path.html?highlight=os%20path%20getmtime#os.path.getmtime" rel="nofollow noreferrer"><code>os.path.getmtime()</code></a>. This will result in the newest file being at the start of the list.</p>
<p>Pop the first element off the list and copy this to your target folder. The remaining elements in the list could then be deleted using <code>os.remove()</code> as follows:</p>
<pre><code>import os
import shutil

root = r'/src/folder/'
copy_to = r'/copy to/folder'

for dirpath, dirnames, filenames in os.walk(root):
    # Filter only csv files
    files = [file for file in filenames if os.path.splitext(file)[1].lower() == '.csv']
    # Sort list by file date
    files = sorted(files, key=lambda x: os.path.getmtime(os.path.join(dirpath, x)), reverse=True)

    if files:
        # Copy the newest file
        copy_me = files.pop(0)
        print("Copying '{}'".format(copy_me))
        shutil.copyfile(os.path.join(dirpath, copy_me), os.path.join(copy_to, copy_me))

        # Remove the remaining files
        for file in files:
            src = os.path.join(dirpath, file)
            print("Removing '{}'".format(src))
            #os.remove(src)
</code></pre>
<p><a href="https://docs.python.org/3/library/os.path.html?highlight=os%20path%20join#os.path.join" rel="nofollow noreferrer"><code>os.path.join()</code></a> is used to safely join a path and filename together.</p>
<p>Note: If it is supported on your system, you might need to use something like:</p>
<pre><code>os.stat(os.path.join(dirpath, x)).st_birthtime            
</code></pre>
<p>to sort based on the creation date/time.</p>
</div>
<span class="comment-copy">Will there be / how do you want to handle filename conflicts?</span>
<span class="comment-copy">What do you consider the newest file?</span>
<span class="comment-copy">Which files to do you intend to delete?</span>
<span class="comment-copy">I want to grab the file with the newest CREATION date and delete everything else in the folder. there will be no filename conflicts as every file has unique date/time/seq as part of the file name..</span>
<span class="comment-copy">This worked amazingly! Thank you so much, this was perfect.</span>
<span class="comment-copy">You're welcome! Glad it helped.</span>
