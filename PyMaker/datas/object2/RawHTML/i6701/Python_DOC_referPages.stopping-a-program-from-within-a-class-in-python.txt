<div class="post-text" itemprop="text">
<p>Let's say I have a class:</p>
<pre><code>class A:
   def command(self, input):
       if command == 'test1':
            do something...
       if command == 'quit':
            #stop the program
</code></pre>
<p>and outside the class I initiate a while loop:</p>
<pre><code>if __name__ == "__main__"
    lst = A()
    while True:
        command = input("Enter an option:")
        lst.command(command)
</code></pre>
<p>I'm stuck at the point where if the command is 'quit', I need to stop the whole program from running. The problem I'm facing now is that since I initiated a while loop outside the class, how do I 'False' the loop in order to stop the whole program?</p>
<p>I'm looking for either a break method or perhaps creating another function to quit the program entirely but not the <code>sys()</code> or <code>quit()</code> method which I'm guessing I'm not allowed to do so.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>sys.exit()</code> or a similar "nuclear" function anywhere in a class is usually a bad idea. (And so is having a <code>while True</code> loop.) Instead, let the loop break naturally and gracefully.</p>
<p>First, your <code>command</code> must return a sentinel when it receives a <code>"quit"</code>. The value of the sentinel is application-dependent; let's say it is <code>None</code>:</p>
<pre><code>if command == 'quit': 
    return None
</code></pre>
<p>The loop should watch the returned value and break when the sentinel is returned:</p>
<pre><code>lst = A()
command = input("Enter an option:")
while command is not None:        
    lst.command(command)
    command = input("Enter an option:")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could just move the quit command outside the <code>command</code> function.</p>
<pre><code>class A:
    def command(self, inp):
        pass

if __name__ == "__main__":

    lst = A()
    while True:
        cmd = input("Enter an option: ")
        if cmd.lower() == 'quit':
            break
        else:
            lst.command(cmd)

print('thanks bye!!')
</code></pre>
<p>It's often good to decouple the quit action from other application commands. Your <code>A</code> class need not know about the application quit mechanism (and could therefore be reused in other apps with a different quit mechanism).</p>
<p>I also made it so that it will not be case sensitive. So <code>quit</code>, <code>Quit</code> or <code>QUIT</code> will all trigger the action.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/sys.html#sys.exit" rel="nofollow noreferrer"><code>sys.exit()</code></a></span>
