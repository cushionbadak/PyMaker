<div class="post-text" itemprop="text">
<p>My import of Python modules</p>
<pre><code>import Queue
from threading import Thread
import time
</code></pre>
<p>But when I run code</p>
<pre><code>File "b1.py", line 3, in &lt;module&gt;
    import Queue
ModuleNotFoundError: No module named 'Queue'
</code></pre>
<p>I have seen similar threads on SO,but nothings works for me</p>
<pre><code>/usr/bin/python3 --version
Python 3.5.2
milenko@milenko-System-Product-Name:~$ python --version
Python 3.6.0 :: Anaconda custom (64-bit)
</code></pre>
<p>If I change to </p>
<pre><code>from multiprocessing import Queue
</code></pre>
<p>there is no import problem.But than I have this</p>
<pre><code>AttributeError: 'Queue' object has no attribute 'join'
</code></pre>
<p>What should I try next?</p>
</div>
<div class="post-text" itemprop="text">
<p>On Python 2, the module is named <code>Queue</code>, on Python 3, it <a href="https://www.python.org/dev/peps/pep-3108/#pep-8-violations-done" rel="noreferrer">was renamed</a> to follow <a href="https://www.python.org/dev/peps/pep-0008/#package-and-module-names" rel="noreferrer">PEP8 guidelines</a> (all lowercase for module names), making it <code>queue</code>. The <em>class</em> remains <code>Queue</code> on all versions (following PEP8).</p>
<p>Typically, the way you'd write version portable imports would be to do:</p>
<pre><code>try:
    import queue
except ImportError:
    import Queue as queue
</code></pre>
</div>
<span class="comment-copy">you can try <code>import queue</code></span>
<span class="comment-copy">To explain: On Python 2, the module is named <code>Queue</code>, on Python 3, it was renamed to follow PEP8 guidelines (all lowercase for module names), making it <code>queue</code>. The <i>class</i> remains <code>Queue</code> on all versions (following PEP8).</span>
<span class="comment-copy">@Jean-FrançoisFabre: Unfortunately, the problem described there is best answered by the accepted answer. The <code>requests</code> module already tries importing from <code>queue</code>, then falling back to <code>Queue</code> if that fails. Their problem wasn't about Python version at all. The suggestion to use <code>multiprocessing.Queue</code> is a truly terrible answer (you'd have to monkey-patch <code>requests</code>, and it would involve slowing down everything, and breaking if unpicklable stuff was involved); every answer to that question <i>except</i> the accepted one was posted by people not paying attention to the OP's actual problem.</span>
<span class="comment-copy">@ShadowRanger so you're suggesting reopening? that would fly by me since this particular question is clearer. your comment (with the PEP8 stuff) would make a nice answer.</span>
<span class="comment-copy">@Jean-FrançoisFabre: I guess? That question is kind of a terrible duplicate target; most of the questions targeting it as a duplicate are like this one, not issues with naming personally written modules <code>queue.py</code> (the ultimate problem there), but trying <code>import Queue</code> on Python 3 (the problem here).</span>
<span class="comment-copy">This doesnt work for Python 3.6, since it now throws a <code>ModuleNotFoundError</code> instead of the <code>ImportError</code>. Changing to <code>except ModuleNotFoundError</code> would then again not work for older versions, since this exception type did not exist there. Checkmate :D</span>
<span class="comment-copy">@Jeronimo: It works fine. <a href="https://docs.python.org/3/library/exceptions.html#ModuleNotFoundError" rel="nofollow noreferrer"><code>ModuleNotFoundError</code> is a subclass of <code>ImportError</code></a>, so catching <code>ImportError</code> also catches <code>ModuleNotFoundError</code>. <code>ImportError</code> isn't as fine-grained (e.g. it can't tell you the problem is a name-shadowing module, rather than a lack of a module), but it will work. Also, since I prioritized the Py3 name, the only place <code>ImportError</code> would be raised is Py2, so it's doubly fine.</span>
<span class="comment-copy">Ah ok, you're right. I thought to remember this causing an error in my code recently, but I can't find it right now, so something else must have been the source then...</span>
