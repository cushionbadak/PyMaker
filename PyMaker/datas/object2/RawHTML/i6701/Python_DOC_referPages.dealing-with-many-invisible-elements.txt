<div class="post-text" itemprop="text">
<p>I'm writing a script that automatically gambles for me (I know, it's a project, I don't expect to make any money, it's against T&amp;Cs) and I've decided to use <a href="http://www.bet365.com" rel="nofollow noreferrer">Bet365</a>. I've encountered a lot of <code>ElementNotVisibleException: Message: element not visible</code> errors. The first I encountered when trying to login as it wouldn't let me input a password to the password field. I got around that by sending JavaScript commands:</p>
<pre><code>driver.find_element_by_css_selector("div.hm-Login_UserNameWrapper &gt; input.hm-Login_InputField").send_keys(config.BET365_USERNAME)

driver.execute_script("document.getElementsByClassName('hm-Login_InputField Hidden')[0]"
                      ".setAttribute('value', '" + config.BET365_PASSWORD + "')")

driver.find_element_by_css_selector("body &gt; div:nth-child(1) &gt; div &gt; div:nth-child(1) &gt; div &gt; "
                                    "div.hm-HeaderModule_Primary &gt; div.hm-HeaderModule_UserAdmin &gt; div &gt; "
                                    "div.hm-Login_PasswordWrapper &gt; button").send_keys(Keys.ENTER)
</code></pre>
<p>Once I do this I try to find any offer of 1.33 by doing:</p>
<pre><code>low_odd = driver.find_elements_by_xpath("//*[contains(text(), '1.33')]")[0]
</code></pre>
<p>which does indeed find me an element. When I try then to perform <code>low_odd.click()</code> it gives me an <code>ElementNotVisibleException</code> error.</p>
<p>Is there a way to get the path of this <code>low_odd</code> element so I can send another JavaScipt command to select it on my betslip? Or any other clever way to get past these errors?</p>
</div>
<div class="post-text" itemprop="text">
<p>Selenium will locate elements that are not visible but will not take an action on them (clicks, etc. throw an error). The design is that Selenium will only take actions on an element that a user could, e.g. a user can't click on an invisible element.</p>
<p>You can filter the collection of elements down to only those that are displayed (visible).</p>
<pre><code>low_odd = [e for e in driver.find_elements_by_xpath("//*[contains(., '1.33')]") if e.is_displayed()]
</code></pre>
<p>Then once you have the filtered list, loop through it and click on each one or only the first or whatever you want.</p>
<p>NOTE: The code above is untested and I'm not a python guy so it may not be exactly correct or very python-y. You may need to tweak it a little.</p>
<p>For filtering reference: <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions</a></p>
</div>
<span class="comment-copy">Because it report element not visible, not element not found. means the element exist in the DOM tree. But existence not equivalent to the element had complete the render by browser (you can see the element from page).  so we should keep in mind:  wait page loading when coding, just like you wait page open before you can click/input on someting manually.   Another thing,  selenium complete per operation on page more fast than you think, in general  100-300 milliseconds.   Try add explicity wait after page open / redirect.</span>
