<div class="post-text" itemprop="text">
<p>I've a list like below:</p>
<pre><code>list=[['BMW Z4', 'TEST', 18, '2016-09-26'],
['BMW Z4', 'TEST', 144, '2014-10-30'],
['BMW 335i', 'TEST', 144, '2013-09-26'],
['BMW 335i', 'TEST', 360, '2014-08-31'],
['BMW 335i', 'TEST', 360, '2017-08-31'],
['BMW 550xd', 'TEST', 18, '2016-10-30'],
['BMW 550xd', 'TEST', 36, '2014-10-30']]
</code></pre>
<p>I'm trying create:</p>
<pre><code>list2=[['BMW Z4', 'TEST', 162, '2016-09-26','2014-10-30'],
['BMW 335i', 'TEST', 864, '2017-08-31','2013-09-26'],
['BMW 550xd', 'TEST', 54, '2016-10-30','2014-10-30']]
</code></pre>
<ul>
<li>1) List is grouped by the very first element</li>
<li>2) Quantity is sum(third element)</li>
<li>3) New column is added forth element is newts date    and the fifth
is the oldest one.</li>
</ul>
<p>Do You have any suggestion how I can get table like list2 using Python functions ? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a>:</p>
<pre><code>from itertools import groupby

lst = [['BMW Z4', 'TEST', 18, '2016-09-26'],
       ['BMW Z4', 'TEST', 144, '2014-10-30'],
       ['BMW 335i', 'TEST', 144, '2013-09-26'],
       ['BMW 335i', 'TEST', 360, '2014-08-31'],
       ['BMW 335i', 'TEST', 360, '2017-08-31'],
       ['BMW 550xd', 'TEST', 18, '2016-10-30'],
       ['BMW 550xd', 'TEST', 36, '2014-10-30']]

lst2 = []

for k, g in groupby(lst, lambda x: x[0]):
    g = list(g)
    lst2.append([k, "TEST", sum(x[2] for x in g), max(x[3] for x in g),
                 min(x[3] for x in g)])
print(lst2)
</code></pre>
<p>Output:   </p>
<pre><code>[['BMW Z4', 'TEST', 162, '2016-09-26', '2014-10-30'],
 ['BMW 335i', 'TEST', 864, '2017-08-31', '2013-09-26'],
 ['BMW 550xd', 'TEST', 54, '2016-10-30', '2014-10-30']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use Pandas to do this</p>
<pre><code>import pandas as pd

list1=[['BMW Z4', 'TEST', 18, '2016-09-26'],
       ['BMW Z4', 'TEST', 144, '2014-10-30'],
       ['BMW 335i', 'TEST', 144, '2013-09-26'],
       ['BMW 335i', 'TEST', 360, '2014-08-31'],
       ['BMW 335i', 'TEST', 360, '2017-08-31'],
       ['BMW 550xd', 'TEST', 18, '2016-10-30'],
       ['BMW 550xd', 'TEST', 36, '2014-10-30']]

result = pd.DataFrame(list1).groupby(0, as_index=False).agg({1:'first', 2:'sum', 3:['max', 'min']}).values

print(result)
</code></pre>
<p>Which will give you:</p>
<pre><code>[['BMW 335i' 'TEST' 864 '2017-08-31' '2013-09-26']
 ['BMW 550xd' 'TEST' 54 '2016-10-30' '2014-10-30']
 ['BMW Z4' 'TEST' 162 '2016-09-26' '2014-10-30']]
</code></pre>
<p>(note you shouldn't name your variable 'list', as this overrides the built in type)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>defaultdict</code>:</p>
<pre><code>from collections import defaultdict

data = [
    ['BMW Z4', 'TEST', 18, '2016-09-26'],
    ['BMW Z4', 'TEST', 144, '2014-10-30'],
    ['BMW 335i', 'TEST', 144, '2013-09-26'],
    ['BMW 335i', 'TEST', 360, '2014-08-31'],
    ['BMW 335i', 'TEST', 360, '2017-08-31'],
    ['BMW 550xd', 'TEST', 18, '2016-10-30'],
    ['BMW 550xd', 'TEST', 36, '2014-10-30'],
]

d = defaultdict(lambda: {'sum': 0, 'dates': set()})
for row in data:
    d[row[0]]['sum'] += row[2]
    d[row[0]]['dates'].add(row[3])

result = [
    [key, 'TEST', value['sum']] + sorted(value['dates'], reverse=True)
    for key, value in d.items()
]
</code></pre>
<p>Btw, it's not good to use <code>list</code> as a name of a variable. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <code>pandas</code></p>
<pre><code>import pandas as pd
import numpy as np

df = pd.DataFrame(l)

           0     1    2           3
0     BMW Z4  TEST   18  2016-09-26
1     BMW Z4  TEST  144  2014-10-30
2   BMW 335i  TEST  144  2013-09-26
3   BMW 335i  TEST  360  2014-08-31
4   BMW 335i  TEST  360  2017-08-31
5  BMW 550xd  TEST   18  2016-10-30
6  BMW 550xd  TEST   36  2014-10-30


l2 = df.groupby(0).agg({1: 'first', 2:np.sum, 3: [np.max, np.min]}).reset_index().values.tolist()

l2

[['BMW 335i', 'TEST', 864, '2017-08-31', '2013-09-26'],
 ['BMW 550xd', 'TEST', 54, '2016-10-30', '2014-10-30'],
 ['BMW Z4', 'TEST', 162, '2016-09-26', '2014-10-30']]
</code></pre>
<p>Also, don't call your lists, <code>list</code></p>
</div>
<span class="comment-copy">What is the purpose of the value <code>TEST</code>?</span>
<span class="comment-copy">To avoid having to reset the index, you could just pass <code>as_index=False</code> to <code>groupby</code>.</span>
<span class="comment-copy">@Mitch thanks, I always forget about this option, have made that change</span>
