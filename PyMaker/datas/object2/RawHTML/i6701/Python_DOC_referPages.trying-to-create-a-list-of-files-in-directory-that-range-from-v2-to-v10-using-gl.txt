<div class="post-text" itemprop="text">
<p>I'm trying to create a list of files within a directory that match the version of specific .csv files within the directory. The file names are "NH [V2].csv" and they range from "NH [V2].csv" to "NH [V10].csv". </p>
<p>How can I create a list that only takes the range that goes from 2-10 but excludes all others e.g. "NH [V1].csv"</p>
<p>This is what I have so far, however it's returning an empty list.</p>
<pre><code>nhlist = list(glob.glob('NH [V[2-9]].csv'))
</code></pre>
<p>I'm trying to to then import all those .csv files into a data.frame as one would do in R.</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of wrestling with the limitations of <a href="https://docs.python.org/3/library/glob.html#glob.glob" rel="nofollow noreferrer"><code>glob()</code></a> patterns, you can use <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir()</code></a> and a regular expression to provide the filtered list of file names:</p>
<pre><code>import os
import re

pattern = re.compile(r'NH \[V([2-9]|10)\]\.csv')
nhlist = [filename for filename in os.listdir('.') if pattern.match(filename)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you know exactly the names you want to match, maybe you don't need <code>glob</code> for this job.</p>
<p>A simple comprehension could do the trick :</p>
<pre><code>nhlist = ['NH [V{}].csv'.format(i) for i in range(2,11) ]

&gt;&gt;&gt;['NH [V2].csv', 'NH [V3].csv', 'NH [V4].csv', 'NH [V5].csv', 
    'NH [V6].csv', 'NH [V7].csv', 'NH [V8].csv', 'NH [V9].csv', 'NH [V10].csv']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this one:</p>
<pre><code>list(glob.glob('NH [[]V[2-9][]].csv'))
</code></pre>
<p>Based on <a href="https://stackoverflow.com/a/2595162/8489834">this</a> answer</p>
<p>But still, this won't match V10 as you requested, so you can do something like (assuming that you have multiple V* in nested directories )</p>
<pre><code>list(glob.glob('NH [[]V[2-9][]].csv')) + 
list(glob.glob('NH [[]V10[]].csv'))
</code></pre>
<p>In otherwise if you got only 10 files under current directory - @PRMoureu 's answer would be better suited for that purpose</p>
</div>
<span class="comment-copy">This worked like a charm, and in a way that helps me understand Python a little bit better! I just switched yesterday and I'm trying to rewrite some R stuff into Python just for the sake of it. Thanks a lot!</span>
<span class="comment-copy">Could I ask you to clarify what the "r", "\" stand for in the re.compile line? I'm assuming that ranges go in square brackets, that the | stands for OR as it does in R?</span>
<span class="comment-copy">The "r" signifies a raw string which disables backslash escape sequences. The "`" itself indicates a literal match for the following, so <code>\[</code> matches the literal <code>[</code>. This is required because <code>[</code> is used for a range in the regex pattern, but your filenames contain <code>[</code> so it needed to be escaped. Yes, <code>|</code> means OR, so match either <code>[2-9]</code> or <code>10</code>.</span>
<span class="comment-copy">Check out this: <a href="https://regex101.com/r/UfiaW3/3" rel="nofollow noreferrer">regex101.com/r/UfiaW3/3</a> . See the explanation tab at the right of page for a breakdown of the regex pattern.</span>
<span class="comment-copy">@ManuelMartinez: if you're happy with this answer please consider upvoting it and/or accepting it.</span>
