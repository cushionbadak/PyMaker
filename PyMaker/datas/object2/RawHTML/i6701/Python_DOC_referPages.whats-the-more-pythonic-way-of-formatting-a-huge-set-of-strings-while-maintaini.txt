<div class="post-text" itemprop="text">
<p>I'm working on a Mad Lib project. I have a whole story that I would like to print but I get unwanted indentions whenever I use triple quotes to define my strings. When I try to get over this by removing the tabs and spaces that I use to keep it neat and readable, it just looks unpleasant. I ended up going with the code below but I was thinking that maybe there's a better way to do this. Will there be a more pythonic way of doing formatting this?</p>
<p>The code that I ended up with:</p>
<pre><code>name, place1, place2, adj1, adj2, adj3, pNoun1, pNoun2, pNoun3, pNoun4,
aVerb1, aVerb2, aVerb3, noun = None

print ('Last summer, my mom and dad took me and %s on a trip to %s. ', % name, place1,
       'The weather there is very %s! Northern %s has many %s, and ', % adj1, place1, pNoun1
       'they make %s %s there. Many people also go to %s to %s or see ', % adj2, pNoun2, place2, aVerb1
       'the %s. The people that live there love to eat %s and are very ', % pNoun3, pNoun4
       'proud of their big %s. They also liketo %s in the sun and in the ', % noun, aVerb2
       '%s! It was a really %s trip!' % aVerb3, adj3)
</code></pre>
<p>At first I was doing it like this but it ended up with unwanted new lines and indentions:</p>
<pre><code>print('''Last summer, my mom and dad took me and %s on a trip to %s.
     The weather there is very %s! Northern %s has many %s, and they
     make %s %s there. Many people also go to %s to %s or see the %s.
     The people that live there love to eat %s and are very proud of
     their big %s. They also liketo %s in the sun and in the %s! It 
     was a really %s trip!''' %  (name, place1, adj1, place1, 
     pNoun1,adj2, pNoun2, place2, aVerb1, pNoun3, pNoun4, noun, aVerb2,
     aVerb3, adj3)) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>format</code> with <code>Accessing arguments by name</code>, see the <a href="https://docs.python.org/3.6/library/string.html#format-examples" rel="nofollow noreferrer">documentation</a>.</p>
<p>Try:</p>
<pre><code>infos = {
    'name': 'name',
    'noun': 'noun',
    'adj1': 'adj1',
    'adj2': 'adj2',
    'adj3': 'adj3',
    'aVerb1': 'aVerb1',
    'aVerb2': 'aVerb2',
    'aVerb3': 'aVerb3',
    'place1': 'place1',
    'place2': 'place2',
    'pNoun1': 'pNoun1',
    'pNoun2': 'pNoun2',
    'pNoun3': 'pNoun3',
    'pNoun4': 'pNoun4',
}

print('''Last summer, my mom and dad took me and {name} on a trip to %s.
     The weather there is very {adj1}! Northern {place1} has many {pNoun1}, and they
     make {adj2} {pNoun2} there. Many people also go to {place2} to {aVerb1} or see the {pNoun3}.
     The people that live there love to eat {pNoun4} and are very proud of
     their big {noun}. They also liketo {aVerb2} in the sun and in the {aVerb3}! It 
     was a really {adj3} trip!'''.format(**infos))
</code></pre>
<p>And you can reuse the name argument in format to be more flexible:</p>
<pre><code>print('{pNoun1} {aVerb1} {pNoun1}'.format(**infos))
=&gt; pNoun1 aVerb1 pNoun1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try the new style for formatting using the format() method. Which works like this:</p>
<pre><code>print ("Last summer, my mom and dad took me and {} on a trip to 
{}.".format(name, place1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@CtheSky 's answer is OK, but I prefer using Template from string, it has a method <strong>safe_substitute</strong> which can handle the case if some keys are missing, no exception will be raised.</p>
<pre><code>infos = {
    'name': 'XXX',
    'noun': 'noun',
    'adj1': 'adj1',
    'adj2': 'adj2',
    'adj3': 'adj3',
    'aVerb1': 'aVerb1',
    'aVerb2': 'aVerb2',
    'aVerb3': 'aVerb3',
    'place1': 'place1',
    'place2': 'place2',
    'pNoun1': 'pNoun1',
    'pNoun2': 'pNoun2',
    'pNoun3': 'pNoun3',
    'pNoun4': 'pNoun4',
}

from string import Template

tpl = Template('''Last summer, my mom and dad took me and $name on a trip to %s.
     The weather there is very $adj1! Northern $place1 has many $pNoun1, and they
     make $adj2 $pNoun2 there. Many people also go to $place2 to $aVerb1 or see the $pNoun3.
     The people that live there love to eat $pNoun4 and are very proud of
     their big $noun. They also like to $aVerb2 in the sun and in the $aVerb3! It 
     was a really $adj3 trip!''')

print(tpl.safe_substitute(**infos))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are at least two common ways how to avoid extra indentation in triple quoted text.</p>
<p>Write the text starting from column 0:</p>
<pre><code>def func():
    txt = """\
line1
line2
line3
"""
    pass
</code></pre>
<p>Which is arguably ugly.</p>
<p>Or use <a href="https://docs.python.org/3/library/textwrap.html?highlight=dedent#textwrap.dedent" rel="nofollow noreferrer">dedent</a>. An example is included in the link.</p>
</div>
<span class="comment-copy">For a reference about variations on this method check:  <a href="https://docs.python.org/2/library/string.html#format-string-syntax" rel="nofollow noreferrer">docs.python.org/2/library/string.html#format-string-syntax</a></span>
