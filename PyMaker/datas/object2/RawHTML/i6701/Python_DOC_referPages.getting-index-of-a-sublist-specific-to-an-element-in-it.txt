<div class="post-text" itemprop="text">
<p>How can I get the index of a list inside of another list but, I want to find the index by using an element of that “inside” list in Python? for example I have</p>
<pre><code> [["dead"["brain.txt"],["alive",["grail.txt"]]. 
</code></pre>
<p>Now I want to find the index of the second list but using the element alive. So if I have an input and I write alive, it should give me the index 1, in which alive is stored.p</p>
</div>
<div class="post-text" itemprop="text">
<p>After fixing the syntax of your nested list, here's a way to get the index with <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a>, <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> and a list comprehension:</p>
<pre><code>&gt;&gt;&gt; data = [["dead", ["brain.txt"]],["alive",["grail.txt"]]]
&gt;&gt;&gt; next(i for i, v in enumerate(data) if 'alive' in v)
1
&gt;&gt;&gt; next(i for i, v in enumerate(data) if 'dead' in v)
0
&gt;&gt;&gt; next(i for i, v in enumerate(data) if 'nothere' in v)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
StopIteration
</code></pre>
<p>You can define a default value if no index is found :</p>
<pre><code>&gt;&gt;&gt; next((i for i, v in enumerate(data) if 'nothere' in v), 'NotFound')
'NotFound'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about using a class to this?</p>
<pre><code>lst = [["dead", ["brain.txt"]], ["alive", ["grail.txt"]]]


class MyList(object):
    def __init__(self, lst):
        self._lst = lst

    def __getitem__(self, item):
        for idx, values in enumerate(self._lst):
            if item in values:
                return idx
        return KeyError()


print(MyList(lst)['alive'])
</code></pre>
</div>
<span class="comment-copy">Use a <code>for</code> loop?</span>
<span class="comment-copy">Seems that your "[" and "]" doesn't match. Please correct it</span>
<span class="comment-copy">Generally, <code>list</code>s should be homogeneous. Until you know what you're doing, you should always move to a different data structure if you're mixing types like this.</span>
