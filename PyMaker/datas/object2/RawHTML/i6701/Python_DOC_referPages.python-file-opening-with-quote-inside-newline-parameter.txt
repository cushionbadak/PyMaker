<div class="post-text" itemprop="text">
<p>I have a tsv file with content like:</p>
<pre><code>'"1"\t"2"\t"3"\t"4"\n'
'"5"\t"6\n7"\t"8"\t"9"\n'
</code></pre>
<p>I want to be able to ignore \n symbols inside double quotes, but file's readline() method read it like:</p>
<pre><code>1 2 3 4
5 6
7 8 9
</code></pre>
<p>What I want is:</p>
<pre><code>1 2 3 4
5 6\n7 8 9
</code></pre>
<p>I tried to pass it to the newline parameter:</p>
<pre><code>f = open('file.tsv', newline = '"\n')
f = open('file.tsv', newline = '\"\n')
</code></pre>
<p>But I get</p>
<pre><code>ValueError: illegal newline value: "
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Readline method doesn't parce tsv-like strings, just reads the content as it is. Python provides CSV package to read such files:</p>
<pre><code>import csv
with open('test.csv') as csvfile:
    reader = csv.reader(csvfile, delimiter='\t', quotechar='"')
    for row in reader:
        print(', '.join(row))
</code></pre>
<p>Read more abuot this package <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">in the docs</a>.</p>
<p>BTW, your trick with newline argument throws an error because it can be <code>None</code>, <code>''</code>, <code>'\n'</code>, <code>'\r'</code>, and <code>'\r\n'</code>.</p>
<p>Note that newline only applies to text mode.</p>
<p><strong>UPDATE</strong>:</p>
<p>See the example with topicstarter's data below:</p>
<pre><code>from io import StringIO

file = StringIO("""'"1"\t"2"\t"3"\t"4"'
'"5"\t"6\n7"\t"8"\t"9"'""")
reader =csv.reader(file, delimiter='\t', quotechar='"')
for row in reader:
    print(row)
</code></pre>
<p>Output:    </p>
<pre><code>['\'"1"', '2', '3', "4'"]
['\'"5"', '6\n7', '8', "9'"]
</code></pre>
<p>So it works as expected - splitting cannot be performed right when you open the file, <code>csv.reader</code> working with file object, not with the lines.</p>
</div>
<span class="comment-copy">csv module doesn't deal with this. As I see splitting into the lines happening on the point where I open the file. csv only further parsing lines, which open object gave to it. Your method will still split it into 3 lines.</span>
<span class="comment-copy">@Sht0p0r, see the example with your data in the updated answer. Splitting into the lines happens in <code>csv.reader</code> - <code>open</code> just creates file object. I use StringIO in the example, but just tested it with file - still works fine</span>
