<div class="post-text" itemprop="text">
<p>I take my self repeating a lot this pattern:</p>
<pre><code>with open(fil, 'r') as f:
    data = f.read()
# do something with data
</code></pre>
<p>Anybody knows of any shortcut for this in the standard library? Anything like:</p>
<pre><code>def fdata(fil):
    with open(fil, 'r') as f:
        return f.read()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text" rel="nofollow noreferrer"><code>pathlib</code></a> (3.5 and up):</p>
<pre><code>from pathlib import Path
contents = Path(file_path).read_text()
</code></pre>
<p>For older versions of python, you can install <a href="https://pypi.python.org/pypi/pathlib2/" rel="nofollow noreferrer"><code>pathlib2</code></a>.</p>
<p>Otherwise, you will need to define your own function as per your example.</p>
</div>
<span class="comment-copy">If you're repeating it often enough and what you do with it has a pattern, I recommend that you make a method/class out of it. Like what you said, so that you won't repeat yourself.</span>
<span class="comment-copy">The problem of this is that I have to repeat the definition for each project or create a library with 3 lines. Sticking with the standard library I avoid a lot of code duplication.</span>
<span class="comment-copy">While I agree that @Phydeaux answers the question, his solution is just two lines shorter than writing the <code>fdata</code> function yourself, and it imports a whole module just to do a simple three-line operation. What exactly is the downside of manually writing <code>fdata</code>? Your "code duplication" issue makes little sense; you duplicate the import statement, as opposed to the three lines of code, but now you have an external dependency...</span>
<span class="comment-copy">Not external because it's in the standard library. If the standard library provides one way of doing something with less code I will prefer it.</span>
<span class="comment-copy">Thanks! I'm chasing 3.6 runtime so this is good for me!!!</span>
