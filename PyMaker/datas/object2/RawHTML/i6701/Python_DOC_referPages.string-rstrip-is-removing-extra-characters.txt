<div class="post-text" itemprop="text">
<p>Why does this statement remove the <code>'E'</code> in <code>'PIPELINE'</code>:</p>
<pre><code>In: 'PIPELINE_DEV'.rstrip('_DEV')
Out: 'PIPELIN'
</code></pre>
<p>But this statement does not remove the <code>'S'</code>:</p>
<pre><code>In: 'PIPELINES_DEV'.rstrip('_DEV')
Out: 'PIPELINES'
</code></pre>
<p>This statement removes all of the E's at the end:</p>
<pre><code>In: 'PIPELINEEEEEEEE_DEV'.rstrip('_DEV')
Out: 'PIPELIN'
</code></pre>
<p>When I turn the rstrip into 2 separate statements, it works fine:</p>
<pre><code>In: 'PIPELINE_DEV'.rstrip('DEV').rstrip('_')
Out: 'PIPELINE'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>rstrip</code> removes any trailing instances of the characters you supply from the string you apply it on until it finds something that doesn't match. This is stated in <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer">its documentation</a>:</p>
<blockquote>
<p>The chars argument <em>is not a suffix</em>; rather, <em>all combinations of its values are stripped</em></p>
</blockquote>
<p>Using <code>rstrip('_DEV')</code> it will remove <code>_DEV</code> from the string and then all <code>E</code>s (or <code>'D'</code>s or <code>'V'</code>s or <code>'_'</code>s) since those fall in the character set you've given (and no other character that isn't in that set has been found).</p>
<p>When you use <code>.rstrip('DEV').rstrip('_')</code> the first call to <code>rstrip</code> strips off <code>'DEV'</code> and then stops because <code>'_'</code> isn't in the character set <code>'DEV'</code>. <code>'_'</code> is then removed when the second call to <code>rstrip</code> is made.</p>
</div>
<span class="comment-copy">Why would you expect <code>'PIPELINES_DEV'.rstrip('_DEV')</code> to remove the <code>S</code>?</span>
<span class="comment-copy">A multi-character string passed to <code>.strip()</code> or <code>.rstrip()</code> represents a <i>set of characters to be removed</i> (in any order), NOT a literal string.</span>
<span class="comment-copy">@ZachGates I would not expect <code>'PIPELINES_DEV'.rstrip('_DEV')</code> to remove the <code>S</code>. At the time of this question, I did not understand why it was removing the <code>E</code> in <code>PIPELINE</code> but not the <code>S</code> in <code>PIPELINES</code></span>
