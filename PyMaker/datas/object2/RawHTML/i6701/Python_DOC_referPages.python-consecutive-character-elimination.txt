<div class="post-text" itemprop="text">
<p>In python if I have the list input = ['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', <strong>'&gt;'</strong>, '&lt;', <strong>'&lt;'</strong>] and  I <strong>don't want</strong> to have the <strong>consecutively repeated</strong> elements in the list. 
For example the new list will be <strong>input = ['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&lt;']</strong>
How can I write the code for it?</p>
<p>I have tried for</p>
<pre><code>for i in input:
    if(i == i+1):
        delete(i+1)
</code></pre>
<p>But this code is working for integer values in the list.</p>
<p>Suggestions are appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You were close, but you have to iterate through a <code>range</code>. Working example:</p>
<pre><code>input = ['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&gt;', '&lt;', '&lt;']
indexes_to_delete = []
for i in range(len(input)-1):
    if(input[i] == input[i+1]):
        indexes_to_delete.append(i+1)
for idx in reversed(indexes_to_delete):
    input.pop(idx)
print(input)  # outputs ['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&lt;']
</code></pre>
<p><code>i</code> goes from 0 to the length of <code>input</code> minus one, because the last element doesn't have a following element. <code>indexes_to_delete</code> stores the indexes to delete instead of deleting them directly to avoid altering the iterations through <code>input</code>. Lastly, if the indexes were popped in order, the position of the elements would move and therefore the next indexes to delete would have to move as well; to avoid the hussle, pop in reverse order.</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't modify a list while you're iterating over it. Easiest way to do what you're doing is to copy it to a new list.</p>
<pre><code>output = [input.pop(0)]
while input:
    temp = input.pop(0)
    if not temp == output[-1]:
        output.append(temp)
</code></pre>
<p>This might not be the most performant solution, but you get the idea. Remove the first element from the list, compare it to the last element you removed (the last one in the output list) and if the two are different, add to the output list. Repeat until your original list is empty.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this very easily and concisely with <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>.</p>
<pre><code>&gt;&gt;&gt; data = ['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&gt;', '&lt;', '&lt;']
&gt;&gt;&gt; [x for x, _ in itertools.groupby(data)]
['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&lt;']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about this solution, it's much more concise imo.</p>
<pre><code>import copy
import itertools

l = ['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&gt;', '&lt;', '&lt;']

z = copy.deepcopy(l)[1:]

[elem[0] for elem in itertools.izip_longest(l, z) if elem[0] != elem[1]]

['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&lt;']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With simple loop:</p>
<pre><code>lst = ['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&gt;', '&lt;', '&lt;']
result = [lst[0]]

for i in lst[1:]:
    if i != result[-1]:
        result.append(i)

print(result)
</code></pre>
<p>The output:</p>
<pre><code>['&gt;', '&lt;', '&gt;', '&lt;', '&gt;', '&lt;']
</code></pre>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a></span>
