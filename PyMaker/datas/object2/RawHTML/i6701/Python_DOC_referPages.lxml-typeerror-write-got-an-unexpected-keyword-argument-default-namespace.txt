<div class="post-text" itemprop="text">
<p>Below is a minimal working example. I have tested this with Python 3.4, Python 3.6 32 bit and Python 3.6 64 bit.</p>
<pre><code>import io
from lxml import etree

test_node = etree.fromstring('''
&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://docs.oasis-open.org/ws-sx/ws-trust/200512"&gt;
  &lt;soap:Body&gt;
     &lt;ns1:RequestSecurityToken/&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;''')
output = io.BytesIO(b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;')
test_node.getroottree().write(output,
                         encoding="UTF-8",
                         xml_declaration=None,
                         default_namespace=None,
                         method="c14n",
                         short_empty_elements=False
                         )
output.seek(0)
print(output.read())
</code></pre>
<p>Result:</p>
<pre><code>Traceback (most recent call last):
  File "C:/not_telling/c14n.py", line 16, in &lt;module&gt;
    short_empty_elements=False
  File "lxml.etree.pyx", line 1869, in lxml.etree._ElementTree.write (src\lxml\lxml.etree.c:57004)
TypeError: write() got an unexpected keyword argument 'short_empty_elements'
</code></pre>
<p>I have just upgraded lxml version to 4.0.0. (But the same is the issue with 3.7.)</p>
<p>I need to export with C14N method, and (although not included in the example) I also need to specify a list of namespaces that need to appear in the resulting canonical form. E.g. I must use the inclusive_ns_prefixes parameter too.</p>
<p>UPDATE: actually, it seems to be a problem with Python's built in xml module, not lxml.</p>
<p>Here is the method I'm calling:</p>
<p><a href="https://github.com/python/cpython/blob/master/Lib/xml/etree/ElementTree.py#L721" rel="nofollow noreferrer">https://github.com/python/cpython/blob/master/Lib/xml/etree/ElementTree.py#L721</a></p>
<p>It does have a short_empty_elements parameter, but it does not accept it.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>default_namespace</code> and <code>short_empty_elements</code> parameters are not supported by the <code>_ElementTree.write()</code> method in lxml. See <a href="http://lxml.de/api/lxml.etree._ElementTree-class.html#write" rel="nofollow noreferrer">http://lxml.de/api/lxml.etree._ElementTree-class.html#write</a>.</p>
<p>However, both parameters are available in the <code>ElementTree</code> standard module since Python 3.4. See <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write" rel="nofollow noreferrer">https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write</a>.</p>
</div>
<span class="comment-copy">Remove the parameter short_empty_elements?</span>
<span class="comment-copy"><a href="https://github.com/seveas/python-hpilo/commit/02dca196a1e2640d4ecc8985285dc15a7ec27ded" rel="nofollow noreferrer">fix in 3.9</a></span>
<span class="comment-copy">I do not want to remove the short_empty_elements parameter, because I need to set it to False! And it seems to be a bug in lxml, not in hpilo (sorry I have accidentally mixed up the two projects)</span>
<span class="comment-copy">Successcully mixed up not two, but three projects. Worst question ever... Tracked down the method, updated the question.</span>
<span class="comment-copy">Actually it is not just <code>short_empty_elements</code>, the elementTree write method seems to hate on everything which is an argument, positional or keyword, which comes after the data <code>output</code> itself.</span>
<span class="comment-copy">Yes, but I also need to include specific namespaces. Although it was not included in the question, but I also have to pass exclusive=True and a namespace prefix list for c14n. The standard elementtree does not support these so I cannot use it.</span>
<span class="comment-copy">Updated the question so it is now clear that I must stick to lxml, because c14n method and inclusive_ns_prefixes is only available there.</span>
<span class="comment-copy">The title of the question is "lxml - TypeError: write() got an unexpected keyword argument 'default_namespace'". I have explained why you get that error. I'm sorry that it doesn't really help, but that is what you asked about.</span>
<span class="comment-copy">All right, I'm going to accept your answer and maybe post a new question. Clearly, the wrong question was asked.</span>
