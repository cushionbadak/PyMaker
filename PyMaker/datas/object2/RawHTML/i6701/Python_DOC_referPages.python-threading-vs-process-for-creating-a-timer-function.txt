<div class="post-text" itemprop="text">
<p>I would like to run a definition in the background, and pass an argument into it (how long it should run for), but the following code isn't working:</p>
<pre><code>thread = threading.Thread(target= run_timer, args=timer_time_value) #  Where timer_time_value is taken from user input, and converted into an integer.
thread.daemon = True
thread.start()

def run_timer(time_to_sleep_For):
    time_to_sleep_For = int(time_to_sleep_For)
    time.sleep(time_to_sleep_For)
    Speak("Timer done!")
</code></pre>
<p>If I use process, I replace the first chunk of code with:</p>
<pre><code>p = Process(target= run_timer, args=timer_time_value)
p.start()
p.join()
</code></pre>
<p>However, both return:</p>
<pre><code>TypeError: 'int' object is not iterable
</code></pre>
<p>My question is, which module should I use, and what is the correct way to set it up?</p>
</div>
<div class="post-text" itemprop="text">
<p>As @roganjosh pointed out you need to pass a list or a tuple (see <a href="https://docs.python.org/3/library/threading.html#threading.Thread" rel="nofollow noreferrer">Thread</a>). This is working example:</p>
<pre><code>import threading    
import time

def run_timer(time_to_sleep_for):
  time.sleep(time_to_sleep_for)
  print("Timer done!")


user_time = "3"

try:
  user_time = int(user_time)
except ValueError:
  user_time = 0  # default sleep

thread = threading.Thread(target=run_timer,
                          args=(user_time,))
thread.daemon = True
thread.start()
thread.join()
</code></pre>
<p>For the differences between processes and threads see <a href="https://stackoverflow.com/questions/3044580/multiprocessing-vs-threading-python">this answers</a>.</p>
<p>BTW: It is maybe better to parse the user input outside the thread as shown in the example.</p>
</div>
<span class="comment-copy"><code>args</code> expects an iterable. Pass as <code>args=(timer_time_value,)</code> i.e. a tuple with 1 item in it</span>
<span class="comment-copy">@roganjosh: Thanks for your initial comment. Glad I could help.</span>
