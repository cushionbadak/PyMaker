<div class="post-text" itemprop="text">
<p>I'm trying to find any vowels that comes first from the word. Output should be same with the output of the find() function.</p>
<p>So, for example,</p>
<p>from "python", output should be "4" ("python".find("o") is 4)</p>
<p>from "stock", output should be "2"</p>
<p>from "overflow", output should be "0"</p>
<p>from "styling", output should be "4" ("styling".find("i") is 4)</p>
<p>Actually What I am really trying to do is to remove vowel that comes first,</p>
<pre><code>    while 0 != 1:
     if word[x] in 'aeiou':
       word = word[x]+word[x+2:]
       x = x+1
    else: x = x+1
</code></pre>
<p>This is what I have been trying so far, but it causes "IndexError: string index out of range"</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a solution using a simple <a href="https://wiki.python.org/moin/ForLoop" rel="nofollow noreferrer"><strong>For loop</strong></a> which you might be familiar with and <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><strong>enumerate</strong></a>:</p>
<pre><code>def position_of_first_vowel(word):
  for index, char in enumerate(word):
    if char in 'aeiou':
      return index
  return -1

for case in ["python","stock", "overflow", "styling", "zxc"]:
  print("%s: %d" % (case, position_of_first_vowel(case)))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>python: 4
stock: 2
overflow: 0
styling: 4
zxc: -1
</code></pre>
<p><strong>N.B.</strong> The extra test case of <code>zxc</code> is there to show the returning of <code>-1</code> if a vowel does not occur in the word </p>
</div>
<div class="post-text" itemprop="text">
<p>Here a solution using regex:</p>
<pre><code>import re

VOWEL_REGEX = re.compile(r'[aeiou]')


def first_vowel_index(word):
    match = VOWEL_REGEX.search(word)
    if not match:
        return -1
    return match.start()
</code></pre>
<p>Tested for your examples:</p>
<pre><code>&gt;&gt;&gt; first_vowel_index('python')
4
&gt;&gt;&gt; first_vowel_index('stock')
2
&gt;&gt;&gt; first_vowel_index('overflow')
0
&gt;&gt;&gt; first_vowel_index('styling')
4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should be an easy one liner with <code>next</code> and <code>enumerate</code>.</p>
<pre><code>def foo(string):
    next((i for i, c in enumerate(string) if c in set('aeiou')), -1)
</code></pre>
<hr/>
<pre><code>inputs = ["python", "stock", "overflow", "styling", "pythn"] # note the last string
print([foo(i) for i in inputs])
[4, 2, 0, 4, -1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are just looking for the for the first appearance, you can use the .index() method for strings.</p>
<pre><code>string = "Foo Bar"
vocals = {'a','e','i','o','u'}
def first_index(string, chars):
    try:
        return min(string.index(vocal) for vocal in chars if vocal in string)
    except ValueError:
        return -1
print(first_index(string, vocals))     
</code></pre>
<p>Returns:</p>
<pre><code>1
</code></pre>
</div>
<span class="comment-copy">What did you try so far?</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ <code>next</code> is tricky here: what if there are <i>no</i> vowels? stopiteration exception.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ @Jean-FrançoisFabre You can always use the <code>next(it, default)</code> argument, but I prefer a loop instead of <code>next</code></span>
<span class="comment-copy">@juanpa.arrivillaga To the rescue! It works so nicely, I wish I could write it here, but OP doesn't deserve it :( Maybe I should write a self answered question...</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ Okay I've edited my post and posted what I was working on</span>
<span class="comment-copy">yeah, that is the one I didn't post.</span>
