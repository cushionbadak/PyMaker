<div class="post-text" itemprop="text">
<p>So I found out that the float NaN apparently <a href="https://stackoverflow.com/questions/1565164/what-is-the-rationale-for-all-comparisons-returning-false-for-ieee754-nan-values">doesn't equal itself</a>. My question is how to deal with it. Let's start with a dataframe:</p>
<pre><code>DF = pd.DataFrame({'X':[0, 3, None]})
DF
      X
0   0.0
1   3.0
2   NaN

DF['test1'] = np.where(DF['X'] == np.nan, 1, 0)
DF['test2'] = np.where(DF['X'].isin([np.nan]), 1, 0)
DF
      X test1 test2
0   0.0     0     0
1   3.0     0     0
2   NaN     0     1
</code></pre>
<p>So test1 and test2 aren't the same. Many others have mentioned that we should use <code>pd.isnull()</code>. My question is, is it safe to just use <code>isin()</code>? For example, if I need to create a new column using np.where, can I simply do:</p>
<pre><code>DF['test3'] = np.where(DF['X'].isin([0, np.nan]), 1, 0)
</code></pre>
<p>Or should I always use <code>pd.isnull</code> like so:</p>
<pre><code>DF['test3'] = np.where((DF['X'] == 0) | (pd.isnull(DF['X'])), 1, 0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should always use <code>pd.isnull</code> or <code>np.isnan</code> if you suspect there could be <code>nan</code>s.</p>
<p>For example suppose you have an <code>object</code>-dtype column (unfortunately these aren't uncommon):</p>
<pre><code>     X
0    a
1    3
2  NaN
</code></pre>
<p>Then using <code>isin</code> won't give you correct results:</p>
<pre><code>&gt;&gt;&gt; df['X'].isin([np.nan])
0    False
1    False
2    False
Name: X, dtype: bool
</code></pre>
<p>While <code>isnull</code> still works correctly:</p>
<pre><code>&gt;&gt;&gt; df['X'].isnull()
0    False
1    False
2     True
Name: X, dtype: bool
</code></pre>
<p>Given that <code>NaN</code> support isn't explicitly mentioned in <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.isin.html" rel="nofollow noreferrer"><code>Series.isin</code></a> nor <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.isin.html" rel="nofollow noreferrer"><code>DataFrame.isin</code></a> it might just be an implementation detail that it correctly "finds" NaNs. And implementation details are always bad to rely on. They could change anytime...</p>
<p>Aside from this, it always pays off to be explicit. An explicit <code>isnull</code> or <code>isnan</code> check should be (in my opinion) preferred.</p>
</div>
<span class="comment-copy">Later is marginally fast usually.</span>
<span class="comment-copy">The easiest way to know would be to use <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer"><code>timeit</code></a>. In my contrived case of a DF with 10000 entries, your first method is ~10% faster but it might be affected by several factors specific to your problem.</span>
