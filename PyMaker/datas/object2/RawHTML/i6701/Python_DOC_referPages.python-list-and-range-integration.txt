<div class="post-text" itemprop="text">
<p>Ok, a simple one!
I have a list as follows:</p>
<pre><code>SeqF = []
SeqF = range(0, 8)
SeqF[0] = [1,0,0,0]
SeqF[1] = [1,1,0,0]
SeqF[2] = [0,1,0,0]
SeqF[3] = [0,1,1,0]
SeqF[4] = [0,0,1,0]
SeqF[5] = [0,0,1,1]
SeqF[6] = [0,0,0,1]
SeqF[7] = [1,0,0,1]
</code></pre>
<p>Please can someone explain to me in English what this is?  I get that it is a list, there is a range (0-8), but I can't get my head around it and google is getting fed up with me.</p>
<p>Would a more 'pythonic' way be:</p>
<pre><code>SeqF = [[1,0,0,0],
        [1,1,0,0],
        [0,1,0,0],
        [0,1,1,0],
        [0,0,1,0],
        [0,0,1,1],
        [0,0,0,1],
        [1,0,0,1]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the python3 <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>Rather than being a function, <code>range</code> is actually an immutable sequence type</p>
</blockquote>
<p>Setting items in a range like you showed is not Pythonic, and I'm surprised it actually works.  (EDIT: it would only work in python2, where <code>range</code> returned a <code>list</code>)</p>
<p>The second option you showed is called a <code>list</code> literal, and is definitely the more Pythonic approach.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; SeqF = []
&gt;&gt;&gt; SeqF = range(0, 8)
&gt;&gt;&gt; SeqF[0] = [1,0,0,0]
&gt;&gt;&gt; SeqF[1] = [1,1,0,0]
&gt;&gt;&gt; SeqF[2] = [0,1,0,0]
&gt;&gt;&gt; SeqF[3] = [0,1,1,0]
&gt;&gt;&gt; SeqF[4] = [0,0,1,0]
&gt;&gt;&gt; SeqF[5] = [0,0,1,1]
&gt;&gt;&gt; SeqF[6] = [0,0,0,1]
&gt;&gt;&gt; SeqF[7] = [1,0,0,1]
&gt;&gt;&gt; SeqF
[[1, 0, 0, 0], [1, 1, 0, 0], [0, 1, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 1], [0, 0, 0, 1], [1, 0, 0, 1]]
</code></pre>
<p>You've produced the same thing in the bottom code in one line to that of 10 in the top line. So yes, this is definitely a more efficient and 'pythonic' way.</p>
</div>
<span class="comment-copy">You're just overwriting <code>SeqF</code> a bunch of times, so yes your bottom code is more concise</span>
<span class="comment-copy">what is your question exactly?</span>
<span class="comment-copy">N.B. this doesn't work in Python3, where <code>range</code> gives you a range object, not a list, so your <code>SeqF[0]</code> would throw a <code>TypeError</code> when you try to assign to it</span>
<span class="comment-copy">I know there was limited code here but the full programme is quite lengthy.  It is the cycle of steps for a stepper motor... in a computerised BBQ!!  I now need to work out how to step though it.</span>
<span class="comment-copy">In Py2, <code>range</code> returned a list.</span>
<span class="comment-copy">Ah, that makes sense, thanks.</span>
