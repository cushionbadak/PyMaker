<div class="post-text" itemprop="text">
<p>I'm trying to take the first number from a list and use it as my initial value. When I started doing subtraction, I realized that you actually don't start at 0 as you do with adding number, but you start with first number written in 'for'.<br/>
For example, when you add 0+4+5, then 4+5 is actually the same thing; when subtracting, it's different to do 0-4-5 and 4-5. I'm just starting with Python and programming in general, so I'm wondering if this is even possible.  </p>
<p><strong>My code:</strong></p>
<pre><code>print ("You chose subtraction.")
b = int(input("Enter how many numbers you want to substract."))
c = [int (input( "Number: ")) for _ in range (b)]
result = functools.reduce(operator.sub, c, INIT_VALUE)
print("Your answer is:", result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can get the first number that was entered by accessing <code>c[0]</code> ( or <code>values[0]</code>  in my example ), you also only need to subtract the values after this index so you can use <code>c[1:]</code> ( or <code>values[1:]</code> in my example )</p>
<pre><code>import operator
import functools

print("You chose subtraction.")
total_numbers = int(input("Enter how many numbers you want to substract."))
values = [int(input("Number: ")) for _ in range(total_numbers)]
result = functools.reduce(operator.sub, values[1:], values[0])
print("Your answer is:", result)

&gt;&gt; You chose subtraction.
&gt;&gt; Enter how many numbers you want to substract.
&gt; 5
&gt;&gt; Number: 
&gt; 10
&gt;&gt; Number: 
&gt; 1
&gt;&gt; Number: 
&gt; 1
&gt;&gt; Number: 
&gt; 1
&gt;&gt; Number: 
&gt; 1
&gt;&gt; Your answer is: 6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are a few ways you can do this:</p>
<p>You could get the first number separately:</p>
<pre><code> &gt;&gt;&gt; INIT_VALUE = input('Number: ')
 &gt;&gt;&gt; numbers = [int(input('Number: ')) for _ in range(b - 1)]
 &gt;&gt;&gt; result = reduce(sub, numbers, INIT_VALUE)
</code></pre>
<p>Alternatively, you could use indexing:</p>
<pre><code> &gt;&gt;&gt; INIT_VALUE = c[0]
 &gt;&gt;&gt; rest = c[1:]
 &gt;&gt;&gt; result = reduce(sub, rest, INIT_VALUE)
</code></pre>
<p>Or, if you wanted to use a loop instead of reduce:</p>
<pre><code> &gt;&gt;&gt; result = int(input('Number: '))
 &gt;&gt;&gt; for _ in range(b - 1):
 ...     result -= int(input('Number: '))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do <code>reduce(sub, lst[1:], lst[0])</code>, but you can also skip the inifializer altogether</p>
<pre><code>reduce(sub, lst)
</code></pre>
<p>If you won't provide it, the first value will be taken</p>
<p><a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">https://docs.python.org/3/library/functools.html#functools.reduce</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Another option is <a href="https://docs.python.org/3/library/itertools.html#itertools.accumulate" rel="nofollow noreferrer"><code>itertools.accumulate</code></a> in Python 3.  This allows you see intermediate calculations.</p>
<pre><code>import operator as op
import itertools as it


print("You chose subtraction.")
total_numbers = int(input("Enter how many numbers you want to substract? "))
values = [int(input("Number: ")) for _ in range(total_numbers)]

# You chose subtraction.
# Enter how many numbers you want to substract? 3
# Number: 0
# Number: 5
# Number: 6

results = list(it.accumulate(values, op.sub))
results
# [0, -5, -11]

results[-1]
# -11
</code></pre>
<p>See also this post comparing <a href="https://stackoverflow.com/questions/14132545/itertools-accumulate-versus-functools-reduce"><code>accumulate</code> and <code>reduce</code></a>.</p>
</div>
<span class="comment-copy">Oh yes, that's good to know for later, I'll definitely check it out later, but for now I will stick with basics :D</span>
