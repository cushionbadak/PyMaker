<div class="post-text" itemprop="text">
<p>I have two nested lists in python, for instance:</p>
<pre><code>lst1 = [
       [ [1,2],[3,4] ], [ [5,6,7],[8,9,10] ]
       ]
lst2 = [
       [ [11,12],[13,14] ], [ [15,16,17],[18,19,20] ]
       ]
</code></pre>
<p>I'd like to be able to put in an index corresponding to the flattened version of the lists, and return the "crossed-over" list:</p>
<p>e.g. index is 5, output is the new list</p>
<pre><code>lst3 = [
       [ [1,2],[3,4] ], [ [5,16,17],[18,19,20] ]
       ]
</code></pre>
<p>I can do this by doing a triple nested loop but I know there must be a quicker way in python, likely using the iterator?</p>
<p>EDIT: I am asking how to more efficiently do the following:</p>
<pre><code>lst1 = [
       [ [1,2],[3,4] ], [ [5,6,7],[8,9,10] ]
       ]
lst2 = [
       [ [11,12],[13,14] ], [ [15,16,17],[18,19,20] ]
       ]


lst3 = []

counter = 0
for i in xrange(len(lst1)):
    for j in xrange(len(lst1[i])):
        temp1 = []
        for k in xrange(len(lst1[i][j])):
            temp2 = []
            counter += 1
            if counter &gt; 5:
                temp2.append(lst2[i][j][k])
            else:
                temp2.append(lst1[i][j][k])
            temp1.append(temp2)
        lst3.append(temp1)

print lst1
print lst2
print lst3
</code></pre>
<p>lst3 result:</p>
<pre><code>[[[1], [2]], [[3], [4]], [[5], [16], [17]], [[18], [19], [20]]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not exactly sure what you mean by a "crossed-over" list, but it seems that you're trying to do some sort of <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regex</a> of the list.  But you also mention that you want a <em>flattened</em> list, even though your output is not flattened.</p>
<p>So, I'm not really sure what you're asking for.  But if I use <em>solely</em> the title as a means to guess what you're looking for, then the answer is fairly simple, using <a href="http://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; lst3 = [x for x in [lst1, lst2]]
</code></pre>
<p>This will give the following result:</p>
<pre><code>&gt;&gt;&gt; lst3
[[[[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10]]], [[[11, 12], [13, 14]], [[15, 16, 17], [18, 19, 20]]]]
</code></pre>
<p>which is a combination of the two lists.  Not sure if it's a "combination" in the way that you want, since that can be interpreted many ways and I cannot tell exactly what you want.</p>
</div>
<span class="comment-copy">You're going to have to explain how that input corresponds to that output.</span>
<span class="comment-copy">Work your way through <a href="https://docs.python.org/3/tutorial/index.html#the-python-tutorial" rel="nofollow noreferrer">the Tutorial</a> to get an idea of the tools available to you. Maybe start by writing down on paper, in your <i>natural</i> language, the steps needed to accomplish the task.  Try to turn that into pseudo-code and finally actual code.  If you get stuck with the actual code, come back and ask.  Please read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">The list comprehension is superfluous; <code>[lst1, lst2]</code> produces the same list already.</span>
<span class="comment-copy">true.  It is superfluous.  I'd submitted it in that fashion because it <i>seemed</i> like the OP wanted to do something more with it, such as filter out one of the lists.  That's easier once already in a list comprehension.</span>
