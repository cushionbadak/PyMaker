<div class="post-text" itemprop="text">
<p>I have a list that contains dictionary objects:</p>
<pre><code>a = [{'name':'myname', cat:{id:1, link:'xyz'}}, {...}]
</code></pre>
<p>What I want to do is to extract the <code>id</code> inside <code>cat</code>, and assign it to <code>cat</code> itself, and repeat this for all dictionary items in the list:</p>
<pre><code>a = [{'name':'myname', new_cat:1}, {...}]
</code></pre>
<p>I know I can do this using <code>for loop</code>:</p>
<pre><code>new_a=[]
for item in a:
    x = {'name':item['name'], new_cat:item['cat']['id']}
    new_a.append(x)
</code></pre>
<p>I just wanted to know if there is a more efficient way of doing this. For example, would using comprehension list work better for this?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>a = [{"name": item["name"], "cat": item["cat"]["id"]} for item in a]</code></p>
<p>Is that what you want?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could also use <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer">map</a> and a <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer">lambda</a> (although it's not really any more readable (or any faster) than the list-comp):</p>
<pre><code>a = [{'name':'myname', 'cat':{'id':1, 'link':'xyz'}},{'name':'yourname', 'cat':{'id':2, 'link':'abc'}}]

a = map(lambda x: {'name':x['name'],'new_cat':x['cat']['id']}, a)
print a

&gt;&gt;&gt; [{'name': 'myname', 'new_cat': 1}, {'name': 'yourname', 'new_cat': 2}]
</code></pre>
</div>
<span class="comment-copy">It doesn't look like a correct Python syntax. Is it a json string or a python object? IS it a list or a dict?</span>
<span class="comment-copy">Your expected output is ambiguous. What happens to <code>'id'</code> inside the <code>dict</code> value for the <code>'cat'</code> key?</span>
<span class="comment-copy">@juanpa.arrivillaga the <code>cat</code> dictionary becomes a variable holding the value of the <code>id</code>.</span>
<span class="comment-copy">You say that you can do this using a for-loop. I doubt a comprehension would be more efficient,  but why don't you just show us what you mean?</span>
<span class="comment-copy">@juanpa.arrivillaga does the update make sense? thanks!</span>
<span class="comment-copy">Thanks. I receive this error: <code>TypeError: string indices must be integers</code></span>
<span class="comment-copy">@renakre Please give an simple but complete example. I just suppose your data is like <code>a = [{'name':'myname', 'cat':{'id':1, 'link':'xyz'}}, {...}]</code>. But what do you really mean about <code>cat</code>, <code>id</code>, <code>link</code>? Are they variables or strings?</span>
<span class="comment-copy">does my update make sense? a['name'] returns its value perfectly, but when I use it inside a loop, I receive <code>TypeError: string indices must be integers</code> error.</span>
<span class="comment-copy">@renakre It doesn't make sense. Let's see, <code>a</code> is absolutely a <code>list</code>. So what does <code>a['name']</code> mean? Further, if your for-loop implementation works well, that means <code>cat</code> is a variable but also a string as <code>cat:item['cat']['id']</code> shows you use variable <code>cat</code> as a key of <code>x</code> dict but access to <code>item</code> dict key by string <code>"cat"</code></span>
<span class="comment-copy">yes <code>a</code> is absolutely a list, double-checked. For example, I can use <code>a[0]['name']</code> which will return the value of <code>myname</code>. But, then when I try to assign it to a variable, I receive the error: <code>for item in a: myVal = item['name']</code> whereas this works perfectly: <code>for item in a: print item['name']</code> any ideas?</span>
