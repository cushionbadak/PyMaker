<div class="post-text" itemprop="text">
<p>I am trying to write a data generator, and I would like to inherit the ImageDataGenerator object from Keras. The intention is to use some of the image preprocessing capabilities of the Keras module in my own generator</p>
<pre><code>from keras.preprocessing.image import ImageDataGenerator
</code></pre>
<p>Unfortunately I am still trying to understand how the super classes work and the inheritance thing, so I'm having a hard time debugging my code.</p>
<pre><code>from keras.preprocessing.image import ImageDataGenerator

class dataGenerator(ImageDataGenerator):
    """
    A data generator object that flows data from selected source.
    Initializes with parameters from Keras ImageDataGenerator.
    """
    def __init__(self, *args, **kwargs):
        super(dataGenerator, self).init(*args, **kwargs)
        self.iterator=None
</code></pre>
<p>When I try to create an object I get the following error:</p>
<pre><code>d = dataGenerator()

Traceback (most recent call last):

  File "&lt;ipython-input-10-44bd98315a72&gt;", line 1, in &lt;module&gt;
    d = dataGenerator()

  File "C:/Users/joshu/Documents/Code/Self Driving Car/data_utils.py", line 152, in __init__
    super(dataGenerator, self).init(*args, **kwargs)

AttributeError: 'super' object has no attribute 'init'
</code></pre>
<p>I am referencing a code sample from mratsim on GitHub:</p>
<p>[1]<a href="https://github.com/mratsim/Amazon_Forest_Computer_Vision/blob/master/src/k_dataloader.py" rel="nofollow noreferrer">https://github.com/mratsim/Amazon_Forest_Computer_Vision/blob/master/src/k_dataloader.py</a></p>
<p>where he inherits the same object. I'm guessing it worked for him..</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>__init__</code> method must have the 4 underscores, just like you did in the <code>def</code> part of it. </p>
<p>This is a Python pattern, and the parent class also follows this:</p>
<pre><code>super(dataGenerator,self).__init__(...)
</code></pre>
<hr/>
<p>Off topic: often, class names begin with capitalized letters, to distinguish them from ordinary value vars. So, <code>DataGenerator</code> would be a better name following that recommendation. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from keras.preprocessing.image import ImageDataGenerator

class dataGenerator(ImageDataGenerator):
    """
    A data generator object that flows data from selected source.
    Initializes with parameters from Keras ImageDataGenerator.
    """
    def __init__(self, *args, **kwargs):
        ImageDataGenerator.__init__(self,*args, **kwargs)
        self.iterator=None
</code></pre>
<p>super() works in python 3.x .Probably you are using python 2.x</p>
</div>
<span class="comment-copy">Ah I'm an idiot, I can't believe I didn't see that. Thanks! Okay good advice I'll go with that nomenclature.</span>
<span class="comment-copy">super() is used in python 2 as well (though a less verbose version is supported in python 3).  <a href="https://docs.python.org/2/library/functions.html#super" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#super</a> vs <a href="https://docs.python.org/3/library/functions.html#super" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#super</a></span>
<span class="comment-copy">oh thanx ,few days ago  I encountered the same problem and I searched alot about super but I wasn't able to find it out.So I came with above version</span>
<span class="comment-copy">should I edit or remove my answer?</span>
<span class="comment-copy">Ah I'm an idiot... forgot the underscore for init</span>
