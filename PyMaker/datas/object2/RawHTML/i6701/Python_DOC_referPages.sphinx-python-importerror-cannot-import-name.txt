<div class="post-text" itemprop="text">
<p>I am using <a href="http://www.sphinx-doc.org/en/stable/" rel="nofollow noreferrer">Sphinx</a>. When executing the command <code>make html</code>, my files that define an abstract class or are derived from an abstract class are getting an error.</p>
<h2>Error</h2>
<pre><code>File "/usr/lib/python2.7/dist-packages/sphinx/ext/autodoc.py", line 529 
in import_object
    __import__(self.module)
File "/home/pi/.../abstractNode.py", line 6, in &lt;module&gt;
    from abc import ABC, abstractclassmethod
ImportError: cannot import name ABC
</code></pre>
<h2>Code referenced</h2>
<p>Minimal example:</p>
<p>File: <code>abstractNode.py</code> </p>
<pre><code>from abc import ABC, abstractclassmethod

class abstractNode(ABC):
    '''
    abstract parent
    '''
    @abstractmethod
    def moduleNode(self, parameter=[]):
        '''
        Implement Node Functionality here
        '''
        pass
</code></pre>
<p>File: <code>Node.py</code></p>
<pre><code>from foo.bar import abstractNode

class Node(abstractNode):
    '''
    implementation of abstract parent
    '''

    def moduleNode(self, parameter=[]):
        '''
        implementation written here
        '''
        pass
</code></pre>
<p>The result is that the documentation for those abstract class dependencies are nearly empty, whereas classes not using ABC are fine.</p>
<p>It doesn't have any problem importing any other package.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to <a href="https://stackoverflow.com/users/3327666/pierre-de-buyl">pierre-de-buyl</a> and <a href="https://stackoverflow.com/users/407651/mzjn">mzjn</a>. You indeed identified the problem:</p>
<p>Although ABC and abstract classes are defined in <a href="https://docs.python.org/2.7/library/abc.html" rel="nofollow noreferrer">2.7 documentation</a>, and are present in /usr/lib/python2.7, you must force sphinx to use python 3.x</p>
<p>Unfortunately I have not found an elegant method to do so, but my method descibed below solves the problem:</p>
<ol>
<li>Uninstall sphinx</li>
<li><p>Install sphinx with python3:</p>
<pre><code>sudo apt-get install python3-sphinx
</code></pre>
<p>or</p>
<pre><code>sudo pip3 install sphinx
</code></pre>
<p>(in contrast to <code>python-sphinx</code> or <code>pip install</code>)</p></li>
<li>Create a sphinx documentation the way you are used to </li>
</ol>
<p>(maybe someone has a better idea to force sphinx to use python 3.x?)</p>
</div>
<span class="comment-copy">Where is the <code>abc</code> module relative to <code>foo.py</code>? Could it be a circular import? It's impossible to say without the source code of your package.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/abc.html" rel="nofollow noreferrer">abc</a> is a part of the python standard library, so it's at <code>/usr/lib/python[version]</code> with version being 2.7, 3.5 or any other python version installed, sitting right there with other modules like <code>os</code> or <code>pickle</code> that I'm also using.  That's why I didn't write it in the question and why I'm so puzzled</span>
<span class="comment-copy">The class <code>ABC</code> in the module <code>abc</code> is newer than Python 2.7. It won't work with Python 2, only with Python 3.</span>
<span class="comment-copy">Your code is for Python 3.4 or later (the ABC class was added in 3.4), but you run Sphinx with Python 2.7.</span>
