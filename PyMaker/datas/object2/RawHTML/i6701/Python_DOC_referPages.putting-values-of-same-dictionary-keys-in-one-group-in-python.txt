<div class="post-text" itemprop="text">
<p>I have two lists:   </p>
<p><code>list1=[0,0,0,1,1,2,2,3,3,4,4,5,5,5]</code><br/>
<code>list2=['a','b','c','d','e','f','k','o','n','q','t','z','w','l']</code> </p>
<pre><code>dictionary=dict(zip(list1,list2))
</code></pre>
<p>I would like to output values of the same keys in one for each key such as it will print like this:   </p>
<pre><code> 0 ['a','b','c']  
 1 ['d','e']  
 2 ['f','k']  
 3 ['o','n']  
 4 ['q','t']  
 5 ['z','w','l'] 
</code></pre>
<p>I wrote following code  to do that but it does not work as I think</p>
<pre><code>for k,v in dictionary.items():  

     print (k,v)
</code></pre>
<p>Could you tell me how to fix code so that I can get above intended results, please ?
Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Regarding your code:</p>
<pre><code>dictionary = dict(zip(list1, list2))
</code></pre>
<p>creates the dictionary:</p>
<pre><code>{0: 'c', 1: 'e', 2: 'k', 3: 'n', 4: 't', 5: 'l'}
</code></pre>
<p>which loses all but the last value in each group. You need to process the zipped lists to construct the grouped data. Two ways are with <code>itertools.groupby()</code> or with a <code>defaultdict(list)</code>, shown here.</p>
<p>Use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> of lists to group the items with keys from <code>list1</code> and values from <code>list2</code>. Pair the items from each list with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a>:</p>
<pre><code>from collections import defaultdict

list1=[0,0,0,1,1,2,2,3,3,4,4,5,5,5]
list2=['a','b','c','d','e','f','k','o','n','q','t','z','w','l']

d = defaultdict(list)

for k,v in zip(list1, list2):
    d[k].append(v)

for k in sorted(d):
    print('{} {!r}'.format(k, d[k]))
</code></pre>
<p>Output:</p>
<pre>
0 ['a', 'b', 'c']
1 ['d', 'e']
2 ['f', 'k']
3 ['o', 'n']
4 ['q', 't']
5 ['z', 'w', 'l']
</pre>
<p>Since items in a dictionary are unordered, the output is sorted by key.</p>
</div>
<div class="post-text" itemprop="text">
<p>The code you've shown does not look anything like what you described.</p>
<p>That aside, you can group values of the same key together by first zipping the lists and then grouping values of the same key using a <code>collections.defaultdict</code>:</p>
<pre><code>from collections import defaultdict

d = defaultdict(list)
for k, v in zip(list1, list2):
    d[k].append(v)
print(d)
# defaultdict(&lt;type 'list'&gt;, {0: ['a', 'b', 'c'], 1: ['d', 'e'], 2: ['f', 'k'], 3: ['o', 'n'], 4: ['q', 't'], 5: ['z', 'w', 'l']})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertool.groupby</code> for a concise, one line solution:</p>
<pre><code>import itertools
list1=[0,0,0,1,1,2,2,3,3,4,4,5,5,5]
list2=['a','b','c','d','e','f','k','o','n','q','t','z','w','l']
final_list = {a:[i[-1] for i in list(b)] for a, b in itertools.groupby(zip(list1, list2), key=lambda x: x[0])}
for a, b in final_list.items():
    print(a, b)
</code></pre>
<p>Output:</p>
<pre><code>0 ['a', 'b', 'c']
1 ['d', 'e']
2 ['f', 'k']
3 ['o', 'n']
4 ['q', 't']
5 ['z', 'w', 'l']
</code></pre>
</div>
<span class="comment-copy">What is <code>dictionary</code>?</span>
<span class="comment-copy">could you show where you create your dictionary?</span>
<span class="comment-copy">Sorry, I forgot it in the first time, I have updated my code @Legman</span>
