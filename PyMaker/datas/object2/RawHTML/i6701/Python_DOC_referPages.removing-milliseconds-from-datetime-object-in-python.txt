<div class="post-text" itemprop="text">
<p>I am trying to remove the milliseconds(28109) from this string <code>2017-09-12 22:33:55.28109</code> in Python. </p>
<p>code:</p>
<pre><code>import datetime as dt
from datetime import date,datetime

created_date = datetime.fromtimestamp(ctime)
d=datetime.strptime(created_date, "%Y-%m-%d %H:%M:%S.%fZ")
created_date = datetime.strftime(d, "%m/%d/%Y %I:%M:%S %p")
print(created_date)
</code></pre>
<p>Error:</p>
<pre><code>`d=datetime.strptime(created_date, "%Y-%m-%d %H:%M:%S.%fZ")`
</code></pre>
<p><code>TypeError: must be str, not datetime.datetime</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You <em>already have a <code>datetime</code> object</em>, you do not need to parse it again. The <code>datetime.fromtimestamp()</code> call was enough.</p>
<p>Remove the <code>datetime.strptime()</code> line. </p>
<pre><code>created_date = datetime.fromtimestamp(ctime)
created_date = created_date.strftime("%m/%d/%Y %I:%M:%S %p")
print(created_date)
</code></pre>
<p>I also changed your <code>strftime()</code> call, it is a method, you just call it on the <code>datetime</code> object you have.</p>
<p>I suspect that you printed the return value of the <code>datetime.fromtimestamp()</code> call, and got confused. The <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.__str__" rel="nofollow noreferrer"><code>str()</code> conversion of a <code>datetime()</code> instance</a> formats the value as a <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.isoformat" rel="nofollow noreferrer">ISO 8601 string</a>. Note that even if you <strong>did</strong> have a string, you used the wrong format (there is no timezone in that string, so <code>%Z</code> does not apply).</p>
<p>If you needed a <code>datetime</code> object, rather than a formatted string, you could also just have converted your timestamp to an integer; the microseconds are captured in the decimal portion of the timestamp:</p>
<pre><code>&gt;&gt;&gt; ctime = 1505252035.28109
&gt;&gt;&gt; datetime.fromtimestamp(ctime)
datetime.datetime(2017, 9, 12, 22, 33, 55, 281090)
&gt;&gt;&gt; datetime.fromtimestamp(int(ctime))
datetime.datetime(2017, 9, 12, 22, 33, 55)
&gt;&gt;&gt; print(_)
2017-09-12 22:33:55
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>time</code> as well to achieve what you want.</p>
<pre><code>import time
ctime = "2017-09-12 22:33:55.28109"
x = time.strptime(ctime.split('.')[0],'%Y-%m-%d %H:%M:%S')
x = time.strftime('%m/%d/%Y %I:%M:%S %p', x)
print (x)
</code></pre>
<p>'09/12/2017 10:33:55 PM'</p>
</div>
<span class="comment-copy"><code>created_date</code> is already a datetime, why are you passing it to <code>datetime.strptime</code>?</span>
<span class="comment-copy">Awesome. Now I have understood. Many thanks for the explanation and it worked.</span>
