<div class="post-text" itemprop="text">
<p>I have a txt file that contains rows of JSON objects.
I'm parsing this file in Python, and I'm writing a file that every row in it will be a record (Comma separated) I've built from the JSON object.</p>
<p>Now, when I'm building this file - some of the values can be Null (or None in Python). So this is what I write:</p>
<pre><code>a = 'abc'
b = None
str = a + "," + b
file.write(str+\n)
</code></pre>
<p>But I keep getting this error: 
<code>TypeError: coercing to Unicode: need string or buffer, NoneType found</code></p>
<p>So my question is - How can I write "Null" values into the file, in a string, so when I load the file into the table - the value in that position will actually be Null?
How can I keep this value in a file?</p>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>If it's Ok for you to have an empty string when you have <code>None</code> value, you can write:</p>
<pre><code>a = 'abc'
b = None
row = a + "," + (b or "")
file.write(row + "\n")
</code></pre>
<p><em>Please, don't use <code>str</code> as a variable name because you shadow a built-in function/class</em></p>
<p>Or more generally, if you have a list of items:</p>
<pre><code>items = ['abc', None]
row = [(item or "") for item in items]
file.write(",".join(row) + "\n")
</code></pre>
<p>Or use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">CSV</a> module. </p>
<p>With JSON, you could also have integers, <code>list</code> and <code>dict</code>. To convert that in string for a serialization in CSV, you could use:</p>
<pre><code>def to_string(obj):
    if obj is None:
        return ""
    elif isinstance(obj, (list, dict)):
        raise TypeError(repr(type(obj)))
    else:
        return str(obj)

row = [to_string(item) for item in items]
file.write(",".join(row) + "\n")
</code></pre>
<p><em>Here, <code>list</code> and <code>dict</code> serialization is prohibited.</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>str.format</code>. </p>
<pre><code>a = 'abc'
b = None
file.write("{},{}\n".format(a, b))
</code></pre>
<p>The error you get is in the line above <code>file.write</code>. When concatenating items to form a string, <em>all</em> items being concatenated <em>must</em> also be a string. This would mean, you'd need to do something along the lines of:</p>
<pre><code>string = a + ',' + str(b)
file.write(string + '\n')
</code></pre>
<p>It is worth noting that you shouldn't use <code>str</code>, <code>dict</code>, or <code>list</code> to name variables as it shadows the inbuilt classes with the same name.</p>
<hr/>
<p>You might also consider using <code>NaN</code>, or, as <a href="https://stackoverflow.com/questions/46269059/writing-none-value-in-a-file-python#comment79500730_46269059">mentioned</a> just have an empty string <code>""</code> instead of <code>None</code>. Furthermore, look into the <code>csv</code> module on how to write to a CSV file. Here's an example from the <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer"><code>csv</code> documentation</a>:</p>
<pre><code>import csv
with open('eggs.csv', 'w', newline='') as csvfile:
    spamwriter = csv.writer(csvfile, delimiter=',')
    spamwriter.writerow(['Spam'] * 5 + ['Baked Beans'])
    spamwriter.writerow(['Spam', 'Lovely Spam', 'Wonderful Spam'])
</code></pre>
</div>
<span class="comment-copy">You can only handle strings in CSV files. So, <code>None</code> should be replaced by an empty string. Is is OK for you to have "" instead of <code>None</code>?</span>
<span class="comment-copy">You can only accept one answer, did you accept the right one? (I was notified you accepted mine first)</span>
<span class="comment-copy">The CSV file helped me handle this - so I checked you both... Thanks!</span>
