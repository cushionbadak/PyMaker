<div class="post-text" itemprop="text">
<p>I have a function that returns a list of integers.</p>
<pre><code>def my_function(param: int)-&gt;list:
    do_sth...
    return list
</code></pre>
<p>In another module i have a for loop that iterates trough the returned list of that function.
Now my Question is:</p>
<pre><code>for x in my_function(x):
   do_sth...
</code></pre>
<p>does the for-loop call this function every loop or only one time at the begin?</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually the answer is invoke only once, when you do the following things:</p>
<pre><code>for x in my_function(x):
    do_sth...
</code></pre>
<p>my_function(x) will be evaluated first, and then it return a list, so the statement is like this:</p>
<pre><code>for x in [...]:
    do_sth...
</code></pre>
<p>you can add a print function in <em>my_function</em> body, and you will see that the print function is invoked only once.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is indeed a duplicate of <a href="https://stackoverflow.com/questions/24470072/how-many-times-does-a-for-loop-evaluate-its-expression-list">this question</a>. However, for the sake of a clearer explanation (credit @Nathan) without getting into technical jargon, here is an example:</p>
<pre><code>&gt;&gt;&gt; def a():
...     print("a() was called")
...     return [1, 2, 3, 4, 5]
...
&gt;&gt;&gt; for i in a():
...     print(i)
... 
a() was called
1
2
3
4
5
</code></pre>
<p>As you can see here, the function <code>a()</code> was only called once when the for loop was run.</p>
<p>Hope this helped!</p>
</div>
<span class="comment-copy">Add a global counter in your function (or a print) and you will have your answer. However, I find your call weird as your use x both times in <code>for x in my_function(x)</code></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/24470072/how-many-times-does-a-for-loop-evaluate-its-expression-list">How many times does a for loop evaluate its expression list?</a></span>
<span class="comment-copy"><i><a href="https://docs.python.org/3/reference/compound_stmts.html#for" rel="nofollow noreferrer">“The expression list is evaluated once; it should yield an iterable object.”</a></i></span>
<span class="comment-copy">Note that if <code>my_function</code> used <code>yield</code> instead of <code>return</code>, then it'd be a generator, and it would be called repeatedly by the for loop until it stopped yielding new values (still only once as there'd be only one yield there). So you're on to something, but as it stands it's not a very useful question.</span>
<span class="comment-copy">Or, use a debugger to check how many time the function is executed. The answer is: only once. BTW, you may write <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">a generator</a> instead of returning a full list.</span>
