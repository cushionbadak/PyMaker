<div class="post-text" itemprop="text">
<p>I just tried a list comprehension like this</p>
<pre><code>[i if i==0 else i+100for i in range(0,3)]
</code></pre>
<p>and it worked, but when I tried a similar dict comprehension, it throws an error:</p>
<pre><code>d={3:3}
{d[i]:0 if i==3 else d[i]:True for i in range(0,4) }
</code></pre>
<p>What could be the reason? How can I use dict comprehension using <code>if else</code>?</p>
<p>The error this produces:</p>
<pre><code>    {d[i]:0 if i==3 else d[i]:True for i in range(0,4) }
                             ^
SyntaxError: invalid syntax
</code></pre>
<p>Note: The example I used here is just a random one, not my actual code.
I can do this with alternative an solution, but I'm only looking at dict comprehensions now to learn.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using a <a href="https://docs.python.org/3/reference/expressions.html#conditional-expressions" rel="noreferrer"><em>conditional expression</em></a>. It can only be used in places that accept expressions. </p>
<p>In a dictionary comprehension, the key and value parts are <strong>separate</strong> expressions, separated by the <code>:</code> (so the <code>:</code> character is <em>not</em> part of the expressions). You can use a conditional expression in each one of these, but you can't use one for both.</p>
<p>You only need to use it in the value part here:</p>
<pre><code>{d[i]: 0 if i == 3 else True for i in range(4)}
</code></pre>
<p>However, you'll get a <code>KeyError</code> exception because the <code>d</code> dictionary has no <code>0</code>, <code>1</code>, and <code>2</code> keys.</p>
<p>See the <a href="https://docs.python.org/3/reference/expressions.html#dictionary-displays" rel="noreferrer"><em>Dictionary displays</em> section</a> of the expression reference documentation:</p>
<blockquote>
<pre><code>dict_display       ::=  “{” [key_datum_list | dict_comprehension] “}”
[...]
dict_comprehension ::=  expression “:” expression comp_for
</code></pre>
<p>[...]</p>
<p>A dict comprehension, in contrast to list and set comprehensions, needs two expressions separated with a colon followed by the usual “for” and “if” clauses.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Another solution for <em>dict comprehension with <code>if-else</code></em> problem:</p>
<pre><code>dict((x, x ** 2) if x &gt; 0 else (x, -x ** 2) for x in range(-4, 5))
</code></pre>
</div>
<span class="comment-copy">Thanks @Martijn</span>
<span class="comment-copy">But So I can't use list comprehension if my declared dict dont have the keys? like you mentioned  "However, you'll get a KeyError exception because the d dictionary has no 0, 1, and 2 keys" ?</span>
<span class="comment-copy">@syam: what has this got to do with a list comprehension?  You have an expression defining the key, <code>d[i]</code>. That expression will fail for <code>i = 0</code>, there is no <code>d[0]</code>. Only <code>d[3]</code> exists.</span>
<span class="comment-copy">Compare this to a regular <code>for</code> loop: first <code>result = {}</code>, then <code>for i in range(4):</code>, and in the loop body <code>key = d[i]</code>, <code>value = 0 if i == 3 else True</code>, <code>result[key] = value</code>. That's exactly what the dict comprehension does, but without the names <code>result</code>, <code>key</code> and <code>value</code> actually being used. <code>key = d[i]</code> fails because there is no <code>d[0]</code>.</span>
<span class="comment-copy">Thanks Buddy!. well explanation</span>
