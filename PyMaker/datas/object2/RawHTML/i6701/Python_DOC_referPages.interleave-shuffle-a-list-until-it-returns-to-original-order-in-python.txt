<div class="post-text" itemprop="text">
<p>I am trying to interleave shuffle a deck of cards. For example [1,2,3,4,5,6] gets cut in half into [1,2,3] and [4,5,6] and then shuffled to become [1,4,2,5,3,6]. To accomplish this I have:</p>
<pre><code>listA = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]
listLen = len(listA)/2
listB = listA[:listLen]
listC = listA[listLen:]
listD = []
num = 0

while num &lt; listLen:
    if len(listB) &gt;= num:
        listD.append(listB[num])
        listD.append(listC[num])
    num += 1
if len(listA)%2 != 0:
    listD.append(listC[num])
print listD
</code></pre>
<p>Now my question is, how can I take listD (the shuffled cards) and repeat this process until I get back to the original order (1,2,3,4...)? And print out the amount of shuffles that occurred. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>listA = [1,2,3,4...]

while ListD!=ListA:
    while num &lt; listLen:
    if len(listB) &gt;= num:
        listD.append(listB[num])
        listD.append(listC[num])
    num += 1
    if len(listA)%2 != 0:
    listD.append(listC[num])
    print listD
</code></pre>
<p>Just throw all of the code into a while loop that checks when ListD equals ListA. (when it stops they will be the same)</p>
</div>
<div class="post-text" itemprop="text">
<p>How about using a <a href="https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types" rel="nofollow noreferrer">list slice assignment</a>?</p>
<pre><code>def shuf(cards):
    half = len(cards) // 2
    res = cards[:]
    res[::2] = cards[:half]
    res[1::2] = cards[half:]
    return res
</code></pre>
<p>First we create a shallow copy (with <code>cards[:]</code>) of the original list (just to get a "writable" list of the same size). Then we assign the lower half of the initial list to even indices of the result list (<code>res[::2]</code>), and the upper half to the odd indices (<code>res[1::2]</code>).</p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; x = range(1,7); x
[1, 2, 3, 4, 5, 6]
&gt;&gt;&gt; x = shuf(x); x
[1, 4, 2, 5, 3, 6]
&gt;&gt;&gt; x = shuf(x); x
[1, 5, 4, 3, 2, 6]
&gt;&gt;&gt; x = shuf(x); x
[1, 3, 5, 2, 4, 6]
&gt;&gt;&gt; x = shuf(x); x
[1, 2, 3, 4, 5, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The Complete solution . </p>
<pre><code>listA = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]

listE = listA
listD = []
amountOfShuffles = 0
while listE != listD:
    num = 0
    listD = []
    listLen = len(listA)/2
    listB = listA[:listLen]
    listC = listA[listLen:]
    while num &lt; listLen:
        if len(listB) &gt;= num:
            listD.append(listB[num])
            listD.append(listC[num])
        num += 1
    if len(listA)%2 != 0:
        listD.append(listC[num])
    listA = listD
    amountOfShuffles += 1

print 'No of shuffles :',amountOfShuffles
</code></pre>
</div>
<span class="comment-copy">As usual, if you want to repeat something until a condition is satisfied, use a while loop.</span>
<span class="comment-copy">The problem I was having with using a while loop is that it would keep appending to listD so the list just kept getting larger.</span>
