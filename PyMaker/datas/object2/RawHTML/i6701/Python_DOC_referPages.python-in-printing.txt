<div class="post-text" itemprop="text">
<p>So here I have the code:</p>
<pre><code>people = ['Amy','Tom','DeShawn','Catherine']
for i, f enumerate(people):
   print("%r: The person's name is %s" %(i,f))
</code></pre>
<p>and my results are</p>
<pre><code>0: The person's name is Amy 
1: The person's name is Tom
2: The person's name is DeShawn
3: The person's name is Catherine
</code></pre>
<p>Can someone explain how does the "%r" and "%s" work in my print function. Also if any other values can be used to replace the r and s value. </p>
</div>
<div class="post-text" itemprop="text">
<p>The new style for formatting is using the <code>format()</code> method. Which works like this:</p>
<pre><code>&gt;&gt;&gt; people = ['Amy','Tom','DeShawn','Catherine']
&gt;&gt;&gt; for i, f in enumerate(people):
...     print ("{}: The person's name is {}".format(i, f)) 
</code></pre>
<p>For more info, see <a href="https://docs.python.org/3/library/string.html#string-formatting" rel="nofollow noreferrer">https://docs.python.org/3/library/string.html#string-formatting</a></p>
</div>
<span class="comment-copy"><code>r</code> uses <code>repr</code> whereas <code>s</code> uses <code>str</code>. See <a href="https://docs.python.org/2/library/stdtypes.html#string-formatting-operations" rel="nofollow noreferrer">the documentation</a>.</span>
<span class="comment-copy">The %s specifier converts the object using str(), and %r converts it using repr().  For some objects such as integers, they yield the same result, but repr() is special in that (for types where this is possible) it conventionally returns a result that is valid Python syntax, which could be used to unambiguously recreate the object it represents.</span>
<span class="comment-copy">Its about repr and str as well</span>
