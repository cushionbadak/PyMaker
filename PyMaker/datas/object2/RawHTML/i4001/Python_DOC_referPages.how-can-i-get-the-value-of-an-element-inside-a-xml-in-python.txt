<div class="post-text" itemprop="text">
<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;bookstore name="Libreria Pastor"&gt;
    &lt;book category="COOKING"&gt;
        &lt;title lang="en"&gt;Everyday Italian&lt;/title&gt;
        &lt;author&gt;
            &lt;writer&gt;Giada De Laurentiis&lt;/writer&gt;
            &lt;resumer&gt;Pepe Lopez&lt;/resumer&gt;
        &lt;/author&gt;
        &lt;year&gt;2005&lt;/year&gt;
        &lt;price&gt;30.00&lt;/price&gt;
    &lt;/book&gt;
    &lt;book category="CHILDREN"&gt;
        &lt;title lang="en"&gt;Harry Potter&lt;/title&gt;
        &lt;author&gt;
            &lt;writer&gt;J K. Rowling&lt;/writer&gt;
            &lt;resumer&gt;Ana Martinez&lt;/resumer&gt;
        &lt;/author&gt;
        &lt;year&gt;2005&lt;/year&gt;
        &lt;price&gt;29.99&lt;/price&gt;
    &lt;/book&gt;
    &lt;book category="PROGRAMMING"&gt;
        &lt;title lang="en"&gt;Python for All&lt;/title&gt;
        &lt;author&gt;
            &lt;writer&gt;M.L. Jobs&lt;/writer&gt;
            &lt;resumer&gt;Delton Jones&lt;/resumer&gt;
        &lt;/author&gt;
        &lt;year&gt;2015&lt;/year&gt;
        &lt;price&gt;39.99&lt;/price&gt;
    &lt;/book&gt;
&lt;/bookstore&gt;


from xml.dom import minidom
arbol_dom = minidom.parse('C:\\Users\\MiguelRG\\Desktop\\sge\\Pythons\\e3.xml')

listaBibliotecas = arbol_dom.getElementsByTagName("bookstore");
listaLibros = arbol_dom.getElementsByTagName("book");
listaAutores = arbol_dom.getElementsByTagName("author");

for biblioteca in listaBibliotecas: 
    print(biblioteca.tagName); 
    print("Nombre : " +biblioteca.getAttribute("name")); 
    print("Tiene hijos:"+str(biblioteca.hasChildNodes())); 
    for l in listaLibros:
        print("Tipo: "+l.tagName);
        print("Categoria: "+l.getAttribute("category")); 
        print("Titulo : " +l.childNodes[0].nodeValue);   
        print("Lenguaje : "+l.getAttribute("lang"));
        for a in listaAutores:
            **print("Escritor : " + str(a.childNodes[0].nodeValue));** 
            **print("Resumen por : "+str(a.childNodes[1].nodeValue));**
            break;
</code></pre>
<p>I want to read that xml with that program or something alike but I cant get the information inside the titles and the price and stuff, i need to print the information of the bookstore first, then the information of every book and then the information of the authors.</p>
<p>Any help will be apreciated </p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are a lot of nodes in an xml document. For instance, with </p>
<pre><code>&lt;book&gt;
    &lt;title&gt;I Am The Very Model&lt;/title&gt;
&lt;/book&gt;
</code></pre>
<p><code>title</code> is not <code>childNodes[0]</code>. That one is a text node with the newline and spaces between <code>&lt;book&gt;</code> and <code>&lt;title&gt;</code>. You need to search child nodes for the title element and the easiest way to do that is with <code>getElementsByTagName</code>. Once you get the right element, there may be multiple nodes holding text. You need to enumerate all of them to find the text you want. You also need to decide which bits of white space around a node can be stripped or you risk having odd gaps in your output.</p>
<p>One reason to move to <code>ElementTree</code> or <code>lxml</code> is that they tend to tidy this up and give you an easier API.</p>
<p>You also need to be careful where you call <code>getElementsByTagName</code>. When you did <code>listaAutores = arbol_dom.getElementsByTagName("author");</code> you got all of the authors in the document, when you really just wanted the author for a given book. </p>
<p>As an aside, get rid of the extra semicolons at the end of the line. They are unneeded and drive python programmers nuts!</p>
<p>As another aside, <code>print</code> adds spaces and converts objects to strings. Just use its functionality instead of string concatenation so that your code has a consistent look and feel.</p>
<pre><code>from xml.dom import minidom
arbol_dom = minidom.parse('test.xml')

def get_elem_text(elem):
    """join text in all immediate child text nodes"""
    return ''.join(node.data for node in elem.childNodes
        if node.nodeType == node.TEXT_NODE)

for biblioteca in arbol_dom.getElementsByTagName("bookstore"): 
    print(biblioteca.tagName) 
    print("Nombre :", biblioteca.getAttribute("name")) 
    print("Tiene hijos:", biblioteca.hasChildNodes()) 
    for l in biblioteca.getElementsByTagName("book"):
        print("Tipo:", l.tagName)
        print("Categoria:", l.getAttribute("category")) 
        print("Titulo :", get_elem_text(l.getElementsByTagName("title")[0]))   
        print("Lenguaje :", l.getAttribute("lang"))
        for a in l.getElementsByTagName("author"):
            print("Escritor :",
                get_elem_text(a.getElementsByTagName("writer")[0])) 
            print("Resumen por :",
                get_elem_text(a.getElementsByTagName("resumer")[0]))
            break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest using <code>xmltodict</code>.</p>
<pre><code>import xmltodict

xml = None
with open('test.xml', 'r') as xmlfile:
    xml = xmlfile.read()
data = xmltodict.parse(xml)

books = data['bookstore']['book']

for book in books:
    print('\n-------------')
    print(book['title']['#text'])
    print(book['author']['writer'])
    print(book['price'])
    print(book['year'])
</code></pre>
<p>The output would look like this:</p>
<pre><code>-------------
Everyday Italian
Giada De Laurentiis
30.00
2005

-------------
Harry Potter
J K. Rowling
29.99
2005

-------------
Python for All
M.L. Jobs
39.99
2015
</code></pre>
<p>You can install it with pip.</p>
<p><code>pip install xmltodict</code></p>
<p>Then you can access all the information in a standard dict.</p>
</div>
<span class="comment-copy">Did you try using <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree" rel="nofollow noreferrer">ElementTree</a>?</span>
<span class="comment-copy">You are looking for an "XML Parser". Do some research for that.</span>
<span class="comment-copy">Thank you for the explanations, i used the semicolon because i ussually programm in java, and its a habit hahaha but I'll try my best with the explanation you gave me and then tell you if it worked. Thank you all again.</span>
<span class="comment-copy">Okay it worked!</span>
