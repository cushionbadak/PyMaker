<div class="post-text" itemprop="text">
<p>I have a question regarding extracting data from <code>.txt</code> file in python. </p>
<p>My data.txt file looks like this</p>
<pre><code>data 2018/05/37
time 5:5:55
1.234 5.241 6.284 .....
</code></pre>
<p>It has some strings followed by 44388 float numbers.</p>
<p>I use the lines below to extract it:</p>
<pre><code>mylist=[]
with open('folderpath' + 'filenameA.txt') as f:
    mylist.append(re.findall('\d*?\.\d+', f.read()))
f.close
</code></pre>
<p>however, instead of getting 44388 float numbers in mylist, I end up having 44383 float numbers when I Read file A, 44378 float numbers when I read file B and 44388 float numbers when I read file C. The only difference is the last letter in the filename and the numbers are all float numbers which are from my lab testing result. </p>
<p>I don't know if the problem comes from the regex, or anywhere else. </p>
<p>Could anywone help me with this? thank you very much!</p>
</div>
<div class="post-text" itemprop="text">
<p>Whats wrong with your code-sample:</p>
<ul>
<li>Your <code>open()</code> command parameters do not work as given. </li>
<li>Your <code>f.close</code>
<ul>
<li>lacks a <code>()</code> </li>
<li>is fully obsolete due to the <code>with open(...)</code> statement</li>
</ul></li>
<li><a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer">re.findall()</a> returns a list, no need to append it, simply set <code>mylist = re.findall(...)</code>. </li>
</ul>
<p>Your regex will not match interger values without a <code>.</code>, see <a href="https://regex101.com/r/BPsUNP/1" rel="nofollow noreferrer">regex101</a> - so for </p>
<pre><code>1.234 135.241 6.284 .372   2   3.2
</code></pre>
<p>you only match</p>
<pre><code>1.234 135.241 6.284 .372        3.2
</code></pre>
<hr/>
<p>If your files always start with 2 lines you want to discard and are followed by floats, you can do:</p>
<pre><code>import re
data = """data 2018/05/37 
time 5:5:55 
1.234 5.241 6.284
11.234 15.241 16.284
21.234 25.241 26.284
31.234 35.241 36.284
1 2 3
"""

fn = "data.txt"
with open(fn,"w") as f:
    f.write(data)

with open(fn,"r") as f:
    dateData = f.readline()
    timeData = f.readline()
    mylist = re.findall('((?:\d*?\.\d+)|(?:\d+?))', f.read()) # also works for ints
    # mylist = [x for x in f.read().replace("\n"," ").split(" ") if x]

print(mylist)
</code></pre>
<p>If you still have different number counts, and each float has indeed a <code>.</code> in it, use a text editor to count the number of <code>.</code> in your file. Most probably A,B and C simply have different amount of test results in them.</p>
</div>
<span class="comment-copy">This sounds like a problem with your data, where maybe the regex is failing and giving unpredictable results.</span>
<span class="comment-copy">Float values without decimal point omitted?</span>
<span class="comment-copy">hi Tim thank you for your comment. all the data in the file is float numbers and what confuses me is it can pick all float numbers in one file but fails at two others. Could there be some other reasons? Thank you!</span>
<span class="comment-copy">hi Mika72 thank you could you elaborate a little? do you mean that I could be missing some values like 10.000?</span>
<span class="comment-copy">If it is <i>some string</i> followed by float numbers and <i>some string</i> can be anything, this may be the path to follow. But if it is 2 lines followed by float numbers, then skip those lines and just split what follows.</span>
<span class="comment-copy">hi thank you for your answer! I updated the f.close and remove the .append. my testing results only have float numbers therefore I was not planning on collecting any integer and there is no integers in the data file either. And this problem is still there. Could it be some other reasons? Thank you!!</span>
<span class="comment-copy">@GIJOE edited. Count your dots, see if you have different amount of test results in your files.</span>
