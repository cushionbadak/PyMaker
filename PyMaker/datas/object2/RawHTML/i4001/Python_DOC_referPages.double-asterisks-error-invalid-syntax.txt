<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/questions/50033119/how-to-sum-the-quantity-grouped-by-more-than-one-field">Original Question here</a></p>
<p>I want to sum the [qty] based on [pid][dbid][eid][sid].</p>
<p>this code works on v3.6.4 but when i migrate to v3.4, then i got an error message:</p>
<pre><code>new_d =  [ [{'pid': 146, 'dbid': 1, 'eid': 6212, 'qty': 10, 'sid': 6}, {'pid': 146, 'dbid': 1, 'eid': 6212, 'qty': 20, 'sid': 6}],
           [{'pid': 232, 'dbid': 1, 'eid': 6212, 'qty': 1, 'sid': 56}, {'pid': 232, 'dbid': 1, 'eid': 6212, 'qty': 1, 'sid': 56}],
           [{'pid': 146, 'dbid': 1, 'eid': 6212, 'qty': 100, 'sid': 56}, {'pid': 146, 'dbid': 1, 'eid': 6212, 'qty': 100, 'sid': 56}]]

final_result = [{**i[0], **{'qty':sum(b['qty'] for b in i)}} for i in new_d]
                  ^
       SyntaxError: invalid syntax
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>**</code> can be used to unpack dictionaries into keyword arguments in function calls. Beginning with python 3.5, <a href="https://www.python.org/dev/peps/pep-0448/" rel="nofollow noreferrer">PEP 448 -- Additional Unpacking Generalizations</a> was added to the language. This expands the places where you can unpack tuples (<code>*some_tuple</code>) and dictionaries (<code>**some_dict</code>).  </p>
<p>In</p>
<pre><code>{**i[0], **{'qty':sum(b['qty'] for b in i)}}
</code></pre>
<p><code>i[0]</code> is the first <code>dict</code> in the list and <code>{'qty':sum(b['qty'] for b in i)}</code> is a <code>dict</code> with one key that sums the <code>'qty'</code> values in the list. The <code>**</code> operator unpacks both dictionaries and since the dictionary constructor now supports an arbitrary number of unpackings, the two dictionaries are merged into one.</p>
<p>This can all be done with a function for python 3.4 and earlier</p>
<pre><code>def d_summary(d_list):
    summary = d_list[0].copy()
    summary['qty'] = sum(b['qty'] for b in d_list)
    return summary

final_result = [d_summary(i) for i in new_d]
</code></pre>
</div>
<span class="comment-copy">That syntax doesn't exist in Python 3.4. You may want to consider using Pandas or some other library to simplify operations on table-like structures if you're going to be doing many of them.</span>
<span class="comment-copy">Thanks, would you know how to rewrite this? sorry i didn't write this line of code, someone helped me. I don't do this type of operations very often.</span>
<span class="comment-copy">Just for information on when it was introduced: <a href="https://www.python.org/dev/peps/pep-0448/" rel="nofollow noreferrer">python.org/dev/peps/pep-0448</a></span>
<span class="comment-copy">For reference, it was added in version 3.5 <a href="https://docs.python.org/3/whatsnew/3.5.html#pep-448-additional-unpacking-generalizations" rel="nofollow noreferrer">Additional Unpacking Generalizatoins</a></span>
