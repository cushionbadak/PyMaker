<div class="post-text" itemprop="text">
<p>I have a nested list:</p>
<pre><code>[['spam', 'eggs'],
['spam', 'eggs', '111'],
['spam', 'eggs', 'foo'],
['spam', 'eggs', '111', 'bar'],
['spam', 'eggs', 'foo', 'bar']]
</code></pre>
<p>What I need is an algorithm to get indexes of shorter sublists, all elements of which are contained in longer ones. In this example algorithm should return:</p>
<pre><code>[0, 1, 2]
</code></pre>
<p>Any help would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>One way may be to use double <code>for</code> loop in same list and check with <code>.issubset</code> for those when not equal <code>index</code>:</p>
<pre><code>my_list = [['spam', 'eggs'],
            ['spam', 'eggs', '111'],
            ['spam', 'eggs', 'foo'],
            ['spam', 'eggs', '111', 'bar'],
            ['spam', 'eggs', 'foo', 'bar']]

indexes = []
for index1, item1 in enumerate(my_list):
    for index2, item2 in enumerate(my_list):
        if index1 != index2:
            if set(item1).issubset(item2):
                indexes.append(index1)
                break

print(indexes)
</code></pre>
<p>Result:</p>
<pre><code>[0, 1, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can convert each sublist to a set, and use the helpful <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.issubset" rel="nofollow noreferrer"><code>issubset</code></a> method.  This will <em>not</em> work if you have duplicate elements in your lists that you need to preserve.</p>
<pre><code>x = [set(i) for i in x]

x = [i
 for i, e in enumerate(x)
 if any(e.issubset(j) and i != k
        for k, j in enumerate(x))
 ]

# [0, 1, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>out_index = [i for i in range(len(my_list)) 
             if any(set(my_list[i]) &lt; m 
             for m in [set(j) for j in my_list])]
</code></pre>
</div>
<span class="comment-copy">Can the individual lists contain duplicate values? If so, is a list that contains the same element three times considered a "sub-list" of a longer one, that contains that element only once? And how do you count "longer" - by number of elements, or of distinct elements? (Also - apparently you don't care about the ORDER of the elements in a list; right?)</span>
<span class="comment-copy">Thanks, it works!</span>
<span class="comment-copy">Great! <code>Happy Coding</code>.</span>
<span class="comment-copy">I'm running it on your sample and getting <code>[0, 1, 2]</code>, did you remember the <code>and i != k</code>? If you forget that, sets will be considered subsets of themselves.</span>
<span class="comment-copy">Thanks, it works!</span>
