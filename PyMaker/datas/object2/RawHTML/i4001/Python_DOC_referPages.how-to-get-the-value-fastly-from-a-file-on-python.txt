<div class="post-text" itemprop="text">
<p>I want to store a dict and read it with other script fastly.</p>
<p>the data stored in a dict like {1:a,2:b,3:c,...}.I stored the dict on disk  using code：</p>
<pre><code>with open(filename+,'w') as f:
     f.write(str(dict1))
</code></pre>
<p>then I want to get the value with the key like [3,7,9...] in the other python script.</p>
<p>Does it must read the whole file？it wastes a lot of time. </p>
<p>I find <code>mmap</code>,but I don't know how to use it.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to read in single items from an object stored on disk (rather than the whole dictionary), you need a <strong>database</strong> of some sort.</p>
<p>The <a href="https://docs.python.org/3/library/shelve.html#module-shelve" rel="nofollow noreferrer">shelve</a> module is an easy database tool built into Python for dictionaries.  Here's an example from the docs:</p>
<pre><code>import shelve

d = shelve.open(filename)  # open -- file may get suffix added by low-level
                           # library

d[key] = data              # store data at key (overwrites old data if
                           # using an existing key)
data = d[key]              # retrieve a COPY of data at key (raise KeyError
                           # if no such key)
del d[key]                 # delete data stored at key (raises KeyError
                           # if no such key)

flag = key in d            # true if the key exists
klist = list(d.keys())     # a list of all existing keys (slow!)

# as d was opened WITHOUT writeback=True, beware:
d['xx'] = [0, 1, 2]        # this works as expected, but...
d['xx'].append(3)          # *this doesn't!* -- d['xx'] is STILL [0, 1, 2]!

# having opened d without writeback=True, you need to code carefully:
temp = d['xx']             # extracts the copy
temp.append(5)             # mutates the copy
d['xx'] = temp             # stores the copy right back, to persist it

# or, d=shelve.open(filename,writeback=True) would let you just code
# d['xx'].append(5) and have it work as expected, BUT it would also
# consume more memory and make the d.close() operation slower.

d.close()                  # close it
</code></pre>
</div>
<span class="comment-copy">You shouldn't use <code>str(dict)</code> to dump to a file, nor should you name your dictionaries <code>dict</code></span>
<span class="comment-copy">To elaborate on @chrisz's comment: the reason you do not want to name your dictionaries <code>dict</code> is because of name clashing. You instantiate dicts using the name <code>dict()</code>.</span>
<span class="comment-copy">@XiaXuehai why don't you <code>import</code> the other script into your original script?</span>
<span class="comment-copy">I test the shelve.but it is too slow.it takes 1.4 seconds to open it.</span>
