<div class="post-text" itemprop="text">
<p>I have a little snippet which I'm profiling, however the <code>list comprehension</code> is listed as one item in the calls</p>
<pre><code>import fileinput
import cProfile

pr = cProfile.Profile()
pr.enable()
x = [float(i) for i in range(0, 10**8)]
pr.disable()
pr.print_stats(sort='time')
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>     2 function calls in 19.769 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1   19.769   19.769   19.769   19.769 sandboxMinimalCProfile.py:6(&lt;listcomp&gt;)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
</code></pre>
<p>Is it possible to get for example what the cost was to convert to <code>float</code> ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue here is that <code>float</code> is a builtin, so they don't count as calls for the profiler.</p>
<p>You can try to workaround it; however, the profiler is not designed for micro-benchmarks in any case. Instead, try the <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer"><code>timeit</code> standard module</a>:</p>
<pre><code>$ python3 -m timeit 'float(1000000)'
10000000 loops, best of 3: 0.118 usec per loop
</code></pre>
</div>
<span class="comment-copy">I'm not sure about <code>cProfiler</code>, but you can use <a href="https://github.com/rkern/line_profiler" rel="nofollow noreferrer"><code>line_profiler</code></a> for this kind of thing.</span>
<span class="comment-copy">Although actually, I don't think it will do single calls in a list comprehension. You could use <code>timeit</code> for things like that? And for a single aggregated time, you'd just divide the whole time by <code>10**8</code>?</span>
