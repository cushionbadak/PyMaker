<div class="post-text" itemprop="text">
<p>I wonder how to check if two lists of numbers are the same except exactly 2 numbers</p>
<pre><code>if list1 == list2: # + except 2 numbers
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If order of list elements is important, you can use something like this:</p>
<pre><code>if sum(i != j for i, j in zip(list1, list2)) == 2:
    # the two lists are equal except two elements
</code></pre>
<p>If order is not important, and repeated elements do not matter, you could also use set intersection (<code>&amp;</code>) and compare length:</p>
<pre><code>if len(set(list1) &amp; set(list2)) == len(list1) - 2:
    # the two list are equal except two elements
</code></pre>
<p>If order is not important, but repeated elements matter, use the same approach, but with <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>:</p>
<pre><code>from collections import Counter
if len(Counter(list1) &amp; Counter(list2)) == len(list1) - 2:
    # the two list are equal except two elements
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def differ_by_two(l1, l2):
    return sum(1 for i,j in zip(l1, l2) if i!=j) == 2
</code></pre>
<p>Example</p>
<pre><code>&gt;&gt;&gt; differ_by_two([1,2,3],[1,4,5])
True
&gt;&gt;&gt; differ_by_two([1,2,3,4,5],[6,7,8,9,10])
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def SameBarTwo(l1, l2):
    a = len(l2)
    for i in range(len(l2)):
        if l2[i] in l1:
            l1.remove(l2[i])
            a -= 1
    return a == 2
</code></pre>
<p>This will make accommodations for duplicate values, order is not taken into account.</p>
</div>
<span class="comment-copy">What do you mean "except two numbers"? The lists only vary by two?</span>
<span class="comment-copy">Can you provide an example?</span>
<span class="comment-copy">for example, it will be true if first list will have 1,2,3,4,5 and the second 1,2,3,6,7</span>
<span class="comment-copy">You can try this: <code>result = len([i for i in list1 if i not in list2]) == 2</code></span>
<span class="comment-copy">Can <code>list1</code> and <code>list2</code> contain duplicates?</span>
<span class="comment-copy">You could also use set union, although I'm not sure if it would be any faster.<code>if len(set(list1) | set(list2)) == len(list1) + 2:</code></span>
<span class="comment-copy">Actually, the solutions using set would not work, since OP clarified that there can be repeated elements. You would have to use something like C++'s multiset, but I don't think Python has that by default.</span>
<span class="comment-copy">@Helium_1s2 python's multiset is <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>, however OP hasn't clarified if order is important or not</span>
<span class="comment-copy">op has clarified that there can be repeated elements, so regular sets won't work in those cases. I'm saying you need to use a multiset for the case where order is not important.</span>
<span class="comment-copy">@Helium_1s2 yes, I agree. I just wanted to point out that in either case (set or Counter) the order of elements would be disregarded.</span>
