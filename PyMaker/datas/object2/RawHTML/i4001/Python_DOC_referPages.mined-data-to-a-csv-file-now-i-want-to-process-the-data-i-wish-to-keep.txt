<div class="post-text" itemprop="text">
<p>To start, I mined data from Twitter, and had it record straight to a CSV file. This part went smoothly, but as some of you know already, when you mine twitter data, you get a lot more information than you need. In the "code" below I have mapped out the logic of what I want to keep in the CSV file, and what I wish to throw out. <strong>I am very, very new to python</strong>, and just started a week ago with no traditional training. I have learned what I know through random searches to help me figure out how to write what I need to do. For the processing of the data I mined, I do not know the syntax I will need to fulfill the logic I listed below. The data was recorded in rows, as in all the information gathered from 1 tweet gets listed in 1 row, each column being the different data gathered (column 1 = "created at time", column 2 = ID,... and so on). What I want to do is have the program begin reading from square 1 of the CSV file, and go through each block and check if it meets the requirements I listed below. If the block contains any of the text in the conditions, keep it the way it is and move on to the next one, if the box currently being read by the program does not have any of the declared text conditions, then delete the box for me. </p>
<p>I know that what I have below is not correct syntax, or code, it is simply me mapping out the logic I want to execute before I get started.</p>
<p>I am looking for any help on syntax, or structure. Any feedback, suggestions, or questions are welcome. Hopefully, this can help others as well who are trying to process data they receive.</p>
<p>import csv
    import json</p>
<pre><code>f = open('csvdata.csv', 'r+')

for line in f:

    try:

        f.readlines()

        if box contains 'created_at':
            continue (keep box)

        elif box contains 'id:':
            continue (keep box)

        elif box contains 'text:':
            continue (keep box)

        elif box starts with '':
            continue (keep box)

        elif box contains 'source:':
            continue (keep box)

        elif box contains 'user:{':
            continue (keep box)

        elif box contains 'name:':
            continue (keep box)

        elif box contains 'screen_name:':
            continue (keep box)

        elif box contains 'location:':
            continue (keep box)

        elif box contains 'url:':
            continue (keep box)

        elif box contains 'description':
            continue (keep box)

        elif box contains 'translator_type:':
            continue (keep box)

        elif box contains 'protected':
            continue (keep box)

        elif box contains 'verified':
            continue (keep box)

        elif box contains 'followers':
            continue (keep box)

        elif box contains 'friends':
            continue (keep box)

        elif box contains 'listed':
            continue (keep box)

        elif box contains 'favourites':
            continue (keep box)

        elif box contains 'statuses':
            continue (keep box)

        elif box contains 'time':
            continue (keep box)

        elif box contains 'lang:':
            continue (keep box)

        elif box contains 'is_translator':
            continue (keep box)

        elif box contains 'default_profile':
            continue (keep box)

        elif box contains 'notification':
            continue (keep box)

        elif box contains 'geo:':
            continue (keep box)

        elif box contains 'coordinates:':
            continue (keep box)

        elif box contains 'place:':
            continue (keep box)

        elif box contains 'contributors:':
            continue (keep box)

        elif box contains 'quoted_status':
            continue (keep box)

        elif box contains 'retweeted_status':
            continue (keep box)

        else:
            (delete box)

    except:
        continue
</code></pre>
<p>(Edit) - I would prefer to have the program process the data within current CSV file and edit the pre-existing file or create an entirely new CSV file and write the information I wish to save to that. The second process, however, would require setting variables that count as items are written into the new file so that the program would know when to put the second tweet in row 2, and not just dump all the info from separate tweets into 1 row.</p>
</div>
<div class="post-text" itemprop="text">
<p>I see you're using python's csv library. Within the documentation, they have some great examples of how to read in data!</p>
<p><a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">Here is some documentation on the topic!</a></p>
<p>It seems like you just want to read in the data, and load certain types of data into what seems like a dictionary. I recommend a dictionary, so you can easily retrieve data such as "lang" or "place". </p>
<p>Here is an example from the csv library documentation</p>
<pre><code>    &gt;&gt;&gt; import csv
&gt;&gt;&gt; with open('names.csv') as csvfile:
...     reader = csv.DictReader(csvfile)
...     for row in reader:
...         print(row['first_name'], row['last_name'])
</code></pre>
<p>To edit this example, I would read into a dictionary instead of print out each row. </p>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">Here is dictionary documentation in python!</a> (it's a ways down the page)</p>
<p>Hopefully this helps shed some light on the subject, working with unstructured csv's at times is quite difficult.</p>
</div>
<span class="comment-copy">Both of these links were quite helpful, thank you. All the reading I can do helps for future projects as well.</span>
