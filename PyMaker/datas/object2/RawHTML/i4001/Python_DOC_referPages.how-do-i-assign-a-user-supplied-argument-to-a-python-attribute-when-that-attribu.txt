<div class="post-text" itemprop="text">
<p>I may be doing all of this completely wrong, but I'm a google taugh python programmer, so there's that.</p>
<p>I have a created a class called "create" that builds an object.  Properties of that object are instances of another class (settings)</p>
<pre><code>class setting:
   def __init__(self,name,value,IsRequired):
       self.name=name
       self.IsRequired=IsRequired
      self.value=value

class create:
filter=setting("filter","filter_name",True)   
consumer=setting("consumer","","True")
def __init__(self, name):
    self.name=name


&gt;&gt;&gt;a=create("test")
&gt;&gt;&gt;a.name
'test'
&gt;&gt;&gt; a.filter.IsRequired
True
&gt;&gt;&gt; a.filter.value
'filter_name'
</code></pre>
<p>This lets me call the complex properties of each of my objects settings individually.  For example, see if a setting (filter) is required for execution by checking a.filter.IsRequired</p>
<p>To adjust the settings, specifically 'value' I am taking input from the user.<br/>
I can reference the overall object with a string by using eval.</p>
<pre><code>&gt;&gt;&gt;one="a"
&gt;&gt;&gt;eval(one).filter.IsRequired
True
&gt;&gt;&gt;eval(one).filter.value="NewValue"
&gt;&gt;&gt;a.filter.value
'NewValue'
</code></pre>
<p>Now the issue.  I'm trying to change 'filter' based on user supplied input.</p>
<pre><code>var1="a"
var2="filter"
&gt;&gt;&gt; eval(var1).eval(var2).value
Traceback (most recent call last):
File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: create instance has no attribute 'eval'
</code></pre>
<p>How can I assign a user supplied variable to the 'value' of 'filter' in this example?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you mean by <code>eval(var1).eval(var2).value</code> is:</p>
<pre><code>getattr(eval(var1), var2).value
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your weird class style aside (you should read on class inheritance in Python), you should not use <code>eval()</code> for pretty much anything (read <a href="https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html" rel="nofollow noreferrer">Eval really is dangerous</a>) - if you need to access a variable by name from the global namespace use <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer"><code>globals()</code></a>:</p>
<pre><code>var1 = "a"
a_value = globals()[var1]
</code></pre>
<p>Second, if you want to access an attribute of an object by name, use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr()</code></a>, so:</p>
<pre><code>var1 = "a"
var2 = "filter"
a_filter_value = getattr(globals()[var1], var2).value
</code></pre>
</div>
<span class="comment-copy">Thanks.  I actually just got there.  Turns out walking away for a minute was what I needed.      inner=getattr(eval(var1), var2)     setattr(var2, "filter","newvalue)  This ended up working</span>
<span class="comment-copy">Thanks, i'll read up on it.  I know eval is dangerous for a number of reasons.  I am being careful not to eval() anything the user supplies.</span>
<span class="comment-copy">@NathanGrosse - Besides being dangerous from the security/stability point of view, <code>eval()</code> is also excruciatingly slow. Apart from some very specific edge cases there really is no reason to use <code>eval()</code>.</span>
