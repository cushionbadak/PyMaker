<div class="post-text" itemprop="text">
<p>i have a mysql sample data resulting like below table</p>
<pre><code>main_cat| sub_cat | number | org_id
Career  | school  | 5      | A
Career  | college | 3      | A
Career  | higher  | 4      | A 
Job     | Blr     | 6      | A
Job     | Hyd     | 11     | A
Job     | Chennai | 12     | A 
Career  | school  | 15     | B
Career  | college | 30     | B
Career  | higher  | 5      | B 
Job     | Blr     | 5      | B
Career  | college | 8      | C
Job     | Chennai | 4      | C 
</code></pre>
<p>I want to print top 2 <code>main_cat</code> for every organization. For every top 2 <code>main_cat</code>, I want to print top 2 <code>sub_cat</code> for every organization. So every organization should have 4 or less records with top 2 <code>main_cat</code> and top 2 <code>sub_cat</code> for each <code>main_cat</code></p>
<p>Please help me.</p>
</div>
<div class="post-text" itemprop="text">
<p>For grouping python provides <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a>, which groups <strong>sorted</strong> input by a given key function.</p>
<p>In this case the input needs to be sorted first by <code>org_id</code>, then by <code>main_cat</code> then by <code>number</code> in descending order, e.g. if your data as a list looks like this:</p>
<pre><code>data = [
 ['Career', 'school', 5, 'A'],
 ['Career', 'college', 3, 'A'],
 ['Career', 'higher', 4, 'A'],
 ['Job', 'Blr', 6, 'A'],
 ['Job', 'Hyd', 11, 'A'],
 ['Job', 'Chennai', 12, 'A'],
 ['Career', 'school', 15, 'B'],
 ['Career', 'college', 30, 'B'],
 ['Career', 'higher', 5, 'B'],
 ['Job', 'Blr', 5, 'B'],
 ['Career', 'college', 8, 'C'],
 ['Job', 'Chennai', 4, 'C']
]
</code></pre>
<p>then you'd sort it like this:</p>
<pre><code>data.sort(key = lambda x: (x[3], x[0], -x[2]))
</code></pre>
<p>or by altering your sql statement to include <code>ORDER BY main_cat, sub_cat, number DESC</code>, then you'll aready get it in the right order from the database.</p>
<p>Now you can use <code>groupby</code> to group, and <code>islice</code> to limit the number of results per grouped category:</p>
<pre><code>from itertools import groupby, islice
from operator import itemgetter

# already sorted data
data = [
 ['Career', 'school', 5, 'A'],
 ['Career', 'higher', 4, 'A'],
 ['Career', 'college', 3, 'A'],
 ['Job', 'Chennai', 12, 'A'],
 ['Job', 'Hyd', 11, 'A'],
 ['Job', 'Blr', 6, 'A'],
 ['Career', 'college', 30, 'B'],
 ['Career', 'school', 15, 'B'],
 ['Career', 'higher', 5, 'B'],
 ['Job', 'Blr', 5, 'B'],
 ['Career', 'college', 8, 'C'],
 ['Job', 'Chennai', 4, 'C']
]

data.sort(key = lambda x: (x[3], x[0], -x[2]))

for org, by_org in groupby(data, key=itemgetter(3)):
    print("org:", org)
    for cat, by_cat in islice(groupby(by_org, key=itemgetter(0)), 2):
        print("  cat:", cat)
        for subcat, by_subcat in islice(groupby(by_cat, key=itemgetter(1)), 2):
            print("    subcat:", subcat, " = ", list(by_subcat))
</code></pre>
<p>Output:</p>
<pre>
org: A
  cat: Career
    subcat: school  =  [['Career', 'school', 5, 'A']]
    subcat: higher  =  [['Career', 'higher', 4, 'A']]
  cat: Job
    subcat: Chennai  =  [['Job', 'Chennai', 12, 'A']]
    subcat: Hyd  =  [['Job', 'Hyd', 11, 'A']]
org: B
  cat: Career
    subcat: college  =  [['Career', 'college', 30, 'B']]
    subcat: school  =  [['Career', 'school', 15, 'B']]
  cat: Job
    subcat: Blr  =  [['Job', 'Blr', 5, 'B']]
org: C
  cat: Career
    subcat: college  =  [['Career', 'college', 8, 'C']]
  cat: Job
    subcat: Chennai  =  [['Job', 'Chennai', 4, 'C']]
</pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use pandas to process your query into dataframe with <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_sql.html" rel="nofollow noreferrer">read_sql</a>:</p>
<pre><code>import pandas as pd
df = pd.read_sql(connection,query)
result = df.groupby(['org_id', 'main_cat', 'sub_cat'])['number'].head(2)
</code></pre>
<p>Variable <code>connection</code> is your connection to db and <code>query</code> is your <code>SELECT</code> string.</p>
</div>
<span class="comment-copy">How is this table defined? Is it a result from <code>cursor.execute()</code> or something else?</span>
