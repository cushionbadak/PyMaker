<div class="post-text" itemprop="text">
<p>I would like to run ssh with print of python.
The followings are my test code.</p>
<pre><code>import subprocess

# case1:
command_str = "\"print(\'test\')\""

# case 2:
# command_str = "\\\"print(\'test\')\\\""

ssh_command = ['ssh', 'USER_X@localhost', 'python', '-c']
ssh_command.append(command_str)
process = subprocess.run(ssh_command, stdout=subprocess.PIPE)
print(process.stdout)
</code></pre>
<p>case 1 and case 2 did not work.
The outputs are followings,</p>
<p>case 1:</p>
<pre><code>bash: -c: line 0: syntax error near unexpected token `('
bash: -c: line 0: `python -c print('test')'
b''
</code></pre>
<p>case 2:</p>
<pre><code>bash: -c: line 0: syntax error near unexpected token `('
bash: -c: line 0: `python -c \"print('test')\"'
b''
</code></pre>
<p>Please let me know how it works.</p>
</div>
<div class="post-text" itemprop="text">
<p>It should work with</p>
<pre><code>command_str = "'print(\"test\")'"
</code></pre>
<p>or equivalently</p>
<pre><code>command_str = '\'print("test")\''
</code></pre>
<h1>Explanation</h1>
<p>The outermost quotes and the escaping are for the local Python. So in either case, the local Python string will be <code>'print("test")'</code>.</p>
<p>There is no quoting or escaping required for the local shell, as <code>subcommand.run(...)</code> won't invoke it unless <code>shell=True</code> is passed.</p>
<p>Thus the single quotes within the python string are for the remote shell (presumably <code>bash</code> or other <code>sh</code>-compatible shell). The argument passed to the remote Python is thus <code>print("test")</code>. (And the double quotes in there are to signify the string literal to print to the remote python.)</p>
<h1>Can we do without escaping (without <code>\</code>)?</h1>
<p>As there are three levels involved (local Python, remote shell, remote Python), I don't think so.</p>
<h1>Can we do with a single type of quotes?</h1>
<p>Yes, with a bit more escaping. Let's build this from behind (or inside-out).</p>
<p>We want to print</p>
<pre><code>test
</code></pre>
<p>This needs to be escaped for the remote Python (to form a string literal instead of an identifier):</p>
<pre><code>"test"
</code></pre>
<p>Call this with the <code>print()</code> function:</p>
<pre><code>print("test")
</code></pre>
<p>Quite familiar so far.</p>
<p>Now we want to pass this as an argument to <code>python -c</code> on a <code>sh</code>-like shell. To protect the <code>(</code> and <code>)</code> to be interpreted by that, we quote the whole thing. For the already present <code>"</code> not to terminate the quotation, we escape them:</p>
<pre class="lang-sh prettyprint-override"><code>"print(\"test\")"
</code></pre>
<p>You can try this in a terminal:</p>
<pre class="lang-sh prettyprint-override"><code>$&gt; echo "print(\"test\")"
print("test")
</code></pre>
<p>Perfect!</p>
<p>Now we have to represent the whole thing in (the local) Python. We wrap another layer of quotes around it, have to escape the four(!) existing quotation marks as well as the two backslashes:</p>
<pre><code>"\"print(\\\"test\\\")\""
</code></pre>
<p>(Done. This can also be used as <code>command_str</code>.)</p>
<h1>Can we do with only single quotes (<code>'</code>) and escaping?</h1>
<p>I don't know, but at least not as easily. Why? Because, other than to Python, double and single quotes aren't interchangeable to <code>sh</code> and <code>bash</code>: Within single quotes, these shells assume a raw string <em>without escaping</em> until the closing <code>'</code> occurs.</p>
<h1>My brain hurts!</h1>
<p>If literally, go see a doctor. If figuratively, yeah, mine too. And your code's future readers (including yourself) will probably feel the same, when they try to untangle that quoting-escaping-forest.</p>
<p>But there's a <a href="https://docs.python.org/3/library/shlex.html#shlex.split" rel="nofollow noreferrer">painless alternative</a> in our beloved Python standard library!</p>
<pre><code>import shlex

command_str = shlex.quote('print("test")')
</code></pre>
<p>This is much easier to understand. The inner quotes (double quotes here, but doesn't really matter: <code>shlex.quote("print('test')")</code> works just as fine) are for the remote Python. The outer quotes are obviously for the local Python. And all the quoting and escaping beyond that for the remote shell is taken care of by this utility function.</p>
</div>
<div class="post-text" itemprop="text">
<p>The correct syntax for <code>python</code> <strong>2</strong> and <strong>3</strong> is:</p>
<pre><code>python -c 'print("test")'
</code></pre>
<hr/>
<p><a href="https://i.stack.imgur.com/wsysE.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/wsysE.jpg"/></a></p>
</div>
<span class="comment-copy">:thank you for educational answer and the lovely solution, shlex.quote. I love it.</span>
