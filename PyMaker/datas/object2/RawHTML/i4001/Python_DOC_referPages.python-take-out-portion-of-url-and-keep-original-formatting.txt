<div class="post-text" itemprop="text">
<p>Lets say i have the following URL:</p>
<pre><code> https://espn.com/1234/44/222/mlb/standings
</code></pre>
<p>And i wanted to extract the <code>/1234/44/222</code> as is. I understand that <code>split('/')[3:5]</code> would extract that , but it would lose the / formatting. </p>
</div>
<div class="post-text" itemprop="text">
<p>If your urls follow the above format, and you want the text between <code>.com</code> and <code>/mlb</code>, you can use the following regular expression:</p>
<p><a href="https://regex101.com/r/vWUR3f/2" rel="nofollow noreferrer"><code>.com([\/\d]+)\/mlb</code></a></p>
<p>In action:</p>
<pre><code>&gt;&gt;&gt; s = 'https://espn.com/1234/44/222/mlb/standings'
&gt;&gt;&gt; re.findall(r'.com([\/\d]+)\/mlb', s)
['/1234/44/222']
</code></pre>
<p>You could also use <code>join</code> with <code>split</code>:</p>
<pre><code>&gt;&gt;&gt; '/'.join(s.split('/')[3:6])
1234/44/222
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.findall</code>:</p>
<pre><code>import re
s = "https://espn.com/1234/44/222/mlb/standings"
new_s = '/'.join(re.findall("\d+", s))
</code></pre>
<p>Output:</p>
<pre><code>'1234/44/222'
</code></pre>
</div>
<span class="comment-copy">is there a way to do this without hardcoding the .com and mlb values as they might not be 100% consistent?</span>
<span class="comment-copy">@skimchi1993 see my update.  It grabs regions of the url based on of indices, and maintains <code>/</code></span>
<span class="comment-copy">Perfect! i wish i could upvote haha.</span>
<span class="comment-copy">Glad to help, if this answered your question, check out <a href="https://stackoverflow.com/help/someone-answers">What to do if someone answers my question</a>?</span>
<span class="comment-copy">is there a way to do this without hardcoding the .com and mlb values as they might not be 100% consistent?</span>
<span class="comment-copy">@skimchi1993 Please see my recent edit.</span>
<span class="comment-copy">still a little confused on who the "\d+" knows to only grab the integers?</span>
<span class="comment-copy">@skimchi1993 It is part of the Python Regex <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">compiler process</a>.</span>
<span class="comment-copy">ah so you have to set to only digits. i was more interested in finding something that extracted a portion based off on index.</span>
