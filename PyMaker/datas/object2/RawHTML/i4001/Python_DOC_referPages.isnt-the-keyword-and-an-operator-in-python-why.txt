<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/19186564/why-is-operator-module-missing-and-and-or">Why is operator module missing `and` and `or`?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I couldn't find the official glossary of python operators but at least it seems that <a href="https://docs.python.org/3/library/operator.html" rel="nofollow noreferrer">operator library of python</a> doesn't include <code>and</code> or <code>or</code> keyword. They do have <code>operator.and_</code>, but it's for bitwise and operator(<code>&amp;</code>). What makes me more confused is that they do include <code>is</code> or <code>not</code> keywords as operators.</p>
<p>In short, isn't <code>and</code>(and <code>or</code>) an operator? If it isn't, what is the standard of being an operator in Python? I though I'm pretty familiar with python but this problem confuses me a lot at the moment.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, it's an operator. But it's not like the other operators in the <code>operator</code> module.</p>
<p><code>and</code> short-circuits (i.e., it evaluates its second argument only if necessary). <code>or</code> is similar. Therefore, neither can be written as a function, because arguments to functions are always fully evaluated before the function is called. In some cases this would make no real difference, but when the second argument contains a function call with side effects (such as I/O), or a lengthy calculation, <code>and</code>'s behavior is very different from that of a function call.</p>
<p>You <em>could</em> implement it by passing at least the second argument as a function:</p>
<pre><code>def logical_and(a, b):
    if not a:
       return a
    return b()
</code></pre>
<p>Then you could call it as follows:</p>
<pre><code>logical_and(x, lambda: y)
</code></pre>
<p>But this is a rather unorthodox function call, and doesn't match the way the other operators work, so I'm not surprised the Python developers didn't include it.</p>
</div>
<span class="comment-copy"><code>and</code> and <code>or</code> are operators, but they are not overridable in the way that some other operators are.</span>
<span class="comment-copy">See also <a href="https://stackoverflow.com/questions/471546/any-way-to-override-the-and-operator-in-python" title="any way to override the and operator in python">stackoverflow.com/questions/471546/â€¦</a></span>
<span class="comment-copy">Thank you so much. Now I see your point. Just to clarify, we can say <code>and</code> and <code>or</code> are operators in python, right?</span>
<span class="comment-copy">Yes, they definitely are operators.</span>
<span class="comment-copy">@DerekKim In the Python console, call <code>help()</code> enter <code>OPERATORS</code> and you'll see them listed there, if you are still with doubts.</span>
<span class="comment-copy">@progmatico Wow. Thank you, too.</span>
