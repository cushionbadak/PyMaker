<div class="post-text" itemprop="text">
<p>This function receives a string as input and should return the number of syllables in the string.</p>
<p>This function has following conditions:<br/>
1. Number of syllables is equal to the number of vowels<br/>
2. Two or more consecutive vowels count only as one.<br/>
3. One or more vowels at the end of the word are not counted. </p>
<p>This is what I've so far but clearly I'm still missing a lot. I'm not sure how to continue here, so I hope you guys can help.</p>
<pre><code>def syllables(word):

    vowels = ['a','e','i','o','u','y']

    # Delete ending vowel of the word since they don't count in number of syllables
    # I've no idea how to remove all ending vowels though
    word = word[:-1]

    # List with vowels that appear in the word
    vowelsList = [x for x in vocals if x in word]

    N = []
    for i in word:
        if i in vowels:
            N += i
    N = len(N)

    return N

print(syllables("bureau"))
# Should print "1" but prints "3" instead
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I suggest you the following simple code:  </p>
<pre><code>def syllables(word):

    vowels = ['a', 'e', 'i', 'o', 'u', 'y']

    N = 0
    previousLetterIsAVowel = False

    # Perform a loop on each letter of the word
    for i in word.lower():
        if i in vowels:
            # Here it is a vowel
            # Indicate for the next letter that it is preceded by a vowel
            # (Don't count it now as a syllab, because it could belong to a group a vowels ending the word)
            previousLetterIsAVowel = True
        else:
            # Here: it is not a vowel
            if previousLetterIsAVowel:
                # Here it is preceded by a vowel, so it ends a group a vowels, which is considered as a syllab
                N += 1
            # Indicate for the next letter that it is not preceded by a vowel
            previousLetterIsAVowel = False

    return N

print(syllables("bureau"))      # it prints 1
print(syllables("papier"))      # it prints 2
print(syllables("ordinateur"))  # it prints 4
print(syllables("India"))       # it prints 1
</code></pre>
<p>I also provide a one-line style solution using regex, easily readable too if you know a little bit about regex. It simply counts the number of groups of consecutive vowels that are followed by a consonant:  </p>
<pre><code>import re

def syllables(word):
    return len(re.findall('[aeiouy]+[bcdfghjklmnpqrstvwxz]', word.lower()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To check the last vowel you can try something like this (I wouldn't iterate as you're going to loose whole syllables): -&gt; EX: Italian word "Aia" (threshing floor)</p>
<pre><code>if word[-1] in vocals:  
 word=word[:-1]  
</code></pre>
<p>-- sorry but I didn't manage to put 'code' into comments so a posted an answer</p>
</div>
<div class="post-text" itemprop="text">
<p>I would go for:</p>
<pre><code>def syllables(word):
    def isVowel(c):
        return c.lower() in ['a','e','i','o','u','y']

    # Delete ending vowel of the word since they don't count in number of syllables  
    while word and isVowel(word[-1]):
        word = word[:-1]

    lastWasVowel = False
    counter = 0

    for c in word:
        isV = isVowel(c)
        # skip multiple vowels after another
        if lastWasVowel and isV:
            continue
        if isV:
            # found one
            counter += 1
            lastWasVowel = True
        else:
            # reset vowel memory
            lastWasVowel = False


    return counter
</code></pre>
<p>Stolen from LaurentH:            </p>
<pre><code>print(syllables("bureau"))      # prints 1
print(syllables("papier"))      # prints 2
print(syllables("ordinateur"))  # prints 4
print(syllables("I"))           # prints 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think we have return 1 if there is previousLetterIsAVowel and N returns 0. Example word Bee.</p>
<p>In Addition to Laurent H. answer</p>
<pre><code>if N == 0 and previousLetterIsAVowel:
    return 1
else:
    return N
</code></pre>
</div>
<span class="comment-copy">You are removing the last character - not only a vowel - you may still end with a voweld at end that way</span>
<span class="comment-copy">I know that, but I've no clue how to do it. The function should work for all words so word[:-3] is not an option.</span>
<span class="comment-copy">To check the last vowel you can try something like this:       if word[-1] in vocals:       word=word[:-1]  sorry but I can't figure out how to post code in comments</span>
<span class="comment-copy">we lll .. test the last one, remove if vowel, test again if still vowel remove etc until you happen to have a non-vowel or the word is empty. try <code>while word and word[-1] in vowel: word = word[:-1]</code></span>
<span class="comment-copy">You may also find the <a href="https://docs.python.org/3/library/stdtypes.html#str.endswith" rel="nofollow noreferrer"><code>endswith()</code></a> function to be useful. It can take a tuple as an input (not a list). <code>word.endswith(tuple(vowels))</code></span>
<span class="comment-copy">nice one - should capture capital vowels as well <code>India</code> f.e. produces 0 - should be 1?</span>
<span class="comment-copy">You're right, sir ! I have just updated my answer to fix this problem.</span>
<span class="comment-copy">Do you mind explaining the last part after "else:"  I have a hard time grasping the concept  Besides I don't quite understand how two consecutive vowels only count as one in this function but apparently it works.</span>
<span class="comment-copy">I added comments in my code. I also added a one-line style solution.</span>
<span class="comment-copy">Cool, thanks a lot!</span>
<span class="comment-copy">I have read carefully the question, and in the case of "Bee", it should return 0...</span>
<span class="comment-copy">Yes you are correct @Laurent.</span>
