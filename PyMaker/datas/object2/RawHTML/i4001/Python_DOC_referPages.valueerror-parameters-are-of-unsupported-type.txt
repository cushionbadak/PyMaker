<div class="post-text" itemprop="text">
<p>This is my code:</p>
<pre><code>import sqlite3
connector = sqlite3.connect("Database_tester.db")
cursor = connector.cursor()
def Table_making():
    cursor.execute("CREATE TABLE IF NOT EXISTS Tester(Roll_numbers TEXT, Names TEXT)")
def data_entry():
    data = ((i,) for i in range(1, 11))
    inputy = ((input(x),) for x in range(1,11))
    cursor.executemany("INSERT INTO Tester (Roll_numbers, Names) VALUES (?, ?)", (data, inputy))
    connector.commit()
    cursor.close()
    connector.close()
Table_making()
data_entry()
</code></pre>
<p>My code is continuously giving me this error:</p>
<pre><code>ValueError: parameters are of unsupported type
</code></pre>
<p>I have no idea how this error is occurring and I want to know a way of fixing it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can see from the documentation at <a href="https://docs.python.org/2/library/sqlite3.html" rel="nofollow noreferrer">https://docs.python.org/2/library/sqlite3.html</a> that the second parameter in <code>cursor.executemany()</code> is a list of tuples where each tuple is one row. You seem to be passing in a tuple of tuples where each of the inner tuple is a column. Using <code>zip</code> as Tom mentioned above should fix it.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.executemany" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a>. I think you might need to <code>zip</code> your two generators together to produce the <i>pairs</i> of values that you want here?</span>
<span class="comment-copy">Using the zip doesn't fix the error, but it gives a new error:                                  sqlite3.ProgrammingError: Incorrect number of bindings supplied. The current statement uses 2, and there are 1 supplied.</span>
<span class="comment-copy">Did you make sure you are actually passing in a list of tuples where each tuple is one row?        <code>data = tuple(range(1, 11))      inputy = (input(x) for x in range(1,11))      cursor.executemany("INSERT INTO Tester (Roll_numbers, Names) VALUES (?, ?)", zip(data, inputy))</code></span>
