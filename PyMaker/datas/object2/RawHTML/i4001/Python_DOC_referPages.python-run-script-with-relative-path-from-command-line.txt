<div class="post-text" itemprop="text">
<p><strong>TL;DR</strong></p>
<p>What are the options on Windows 10 to run from command line a python script specified by a relative path? Can environment variables be changed to do so? How can this be done?</p>
<p><strong>LONG</strong></p>
<p>I am using Windows 10. When I follow <a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md" rel="nofollow noreferrer">this</a> installation guide (written for Linux), everything is fine until I need to perform the following on Windows</p>
<pre><code># From tensorflow/models/research/
export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim
</code></pre>
<p>On Windows, I added the two paths (the entire, absolute, path) to PYTHONPATH. When I execute the following; I see the extra two paths added.</p>
<pre><code>C:\User\me&gt;    python -c "import sys; print(sys.path)"
</code></pre>
<p>However, if I create a simple <em>test.py</em> script</p>
<pre><code>print("Relative path works")
</code></pre>
<p>and run it from the command line:</p>
<pre><code>C:\User\me&gt; python test.py
</code></pre>
<p>it works if the test.py file is saved in C:\User\me\, but NOT when it is saved in the folders of PYTHONPATH.</p>
<p><a href="https://stackoverflow.com/questions/12829680/cannot-run-python-script-file-using-windows-prompt">This SO Q&amp;A</a> says that </p>
<blockquote>
<p>PYTHONPATH is used by the python interpreter. It is not the same as
  Windows' PATH environment variable. You can't use it as a search path
  for passing files to the interpreter on the command line.</p>
</blockquote>
<p>But I could not find how I can achieve what I need, using relative path of script to run it from command line. Please note that using the absolute path is not an option, because the instalation guide requires 2 folders are added to the PYTHONPATH, in order for the task to work.</p>
<p>It should be possible but I did not find any answer - <a href="https://docs.python.org/3/using/cmdline.html" rel="nofollow noreferrer">Python 3 documentation</a> describes Command line option for running script with relative path:</p>
<blockquote>
<p>Execute the Python code contained in script, which must be a
  filesystem path (absolute or relative) referring to either a Python
  file...</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>These lines from the install guide are intended to be run after a <code>cd .../tensorflow/models/research/</code> and thus are absolute paths:</p>
<blockquote>
<pre><code># From tensorflow/models/research/
export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim
</code></pre>
</blockquote>
<p>You will likely need to do something similar on Windows.  The equivalent would likely be to add the absolute paths to the libraries to <code>PYTHONPATH</code> environment variable.</p>
</div>
<div class="post-text" itemprop="text">
<p>I haven't tested this but as mentioned in <a href="https://docs.python.org/3/using/windows.html" rel="nofollow noreferrer">here</a>, 
this &gt;&gt;&gt; export PYTHONPATH=$PYTHONPATH:<code>pwd</code>:<code>pwd</code>/slim should be used as</p>
<blockquote>
<blockquote>
<blockquote>
<p>set PYTHONPATH=%PYTHONPATH%;%cd%;%cd%\slim </p>
</blockquote>
</blockquote>
</blockquote>
</div>
<span class="comment-copy"><code>PYTHONPATH</code> has nothing to do with finding a regular script run from the command line. It adds directories to <code>sys.path</code> for use with <code>import</code> statements. It's only relevant to command-line usage with the <code>-m</code> option that runs an imported module as a script or <code>-c</code> option that runs a command-line script.</span>
<span class="comment-copy">I should have been clearer - I added absolute paths to the PYTHONPATH environment variable. But as described above, it still not work.</span>
<span class="comment-copy">That adapts the linked tensorflow setup for Windows. However, the OP's question implies a deep misunderstanding of what <code>PYTHONPATH</code> is for. The given "test.py" script is just a <code>print</code> call that has nothing to do with tensorflow, and the OP seems to mistakenly think that Python will search <code>sys.path</code> for this script.</span>
<span class="comment-copy">correct, the test.py has nothing to do with tensor flow. It is only to test if I can run a simple script with relative path. Is there a way to do it? Can some setting of environment variables achieve that?</span>
<span class="comment-copy">there are two options: 1) install the directory in a [development mode] (<a href="https://packaging.python.org/tutorials/distributing-packages/#working-in-development-mode" rel="nofollow noreferrer">packaging.python.org/tutorials/distributing-packages/â€¦</a>). 2) when executing &gt;&gt;&gt; python scriptName.py... if you supply directory instead of a file, the directory will be added to sys.path and --main--.py (- symbol used instead of _) file is executed as __main__&gt;&gt;&gt; python dirName ...should do the job if you have a script named  --main-- .py (- symbol used instead of _) in your directory. Refer [here] (<a href="https://docs.python.org/3/using/cmdline.html" rel="nofollow noreferrer">docs.python.org/3/using/cmdline.html</a>)</span>
