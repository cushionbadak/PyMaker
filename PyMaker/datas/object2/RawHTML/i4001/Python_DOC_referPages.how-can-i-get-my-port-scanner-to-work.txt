<div class="post-text" itemprop="text">
<p>I am trying to make a port scanner that searches a port that is input against all odd numbered IP address in the range of 10-255.</p>
<p>My current code isn't working, and I am receiving this error;</p>
<pre><code>error  str, bytes or bytearray expected, not int
</code></pre>
<p>I thought  <code>s.connect((int(ipaddress.ip_address(my_net[i])), port))</code> would fix this but it did not.</p>
<p>Am I missing something? </p>
<p>My current code is below:</p>
<pre><code>import socket
import ipaddress
import subprocess
import sys
from datetime import datetime
#define the subnet to scan
subnet=input("which subnet are you scanning, please enter in x.x.x ")

my_net =[]
count =0
for i in range(11,255):  
    if i%2!=0:
        my_net.insert(count,(subnet+"." +str(i)))

print("Your selected network is " , subnet , "below are the usable Ip addresses")
#the user is to select the port that will be scanned as a part of the test
port = input("Enter the number of the port you would like to scan ")
# Print a banner with information on which host we are about to scan
print ("-" * 60)
print ("Please wait, scanning network" , subnet ,".0/24")
print ("-" * 60)
#check time now#
t1 = datetime.now()
#output. Confirm if the port is open or closed

for i in range(len(my_net)):
        try:
            socket.setdefaulttimeout (2)
            s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((int(ipaddress.ip_address(my_net[i])), port))
            banner=s.recv(1024)
            print(banner)
        except Exception as e:
            print("error " , e)

# Checking the time again
t2 = datetime.now()
# Calculates the difference of time, to see how long it took to run the script
total =  t2 - t1
print ('Scanning Completed in: ', total)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you'll find that the ip address has to be a string. For instance '127.0.0.1' not an int, the port is an int though.  </p>
</div>
<span class="comment-copy">What you are trying to achieve with <code>int(ipaddress.ip_address(my_net[i]))</code> in the first place. Why not just use <code>s.connect((my_net[i],port))</code> since `my_net[i] is already the IP address you want to use.</span>
<span class="comment-copy">The reason I was trying to use ipmodule is because I received error when changing code to: s.connect((int(my_net[i]), port))  error  invalid literal for int() with base 10: '192.168.1.53'</span>
<span class="comment-copy">What makes you think that it should be <code>s.connect(int(ip,port))</code> in the first place? It should be <code>s.connect((ip,port))</code>, i.e. without any kind of <code>int</code>. I recommend to actually have a look at the documentation.</span>
<span class="comment-copy">Thanks @SteffenUllrich that was the first way that I tried it. The error says that it needed to receive an integer. I will keep trying. Thanks for taking time to read my post.</span>
<span class="comment-copy">it is probably because your port is a str (as returned by <code>input</code>) but you need an <code>int</code> there, i.e. <code>port = int(input(....))</code></span>
<span class="comment-copy">If I change the code to; s.connect((int(ipaddress.ip_address(my_net[i])), port)) I get error; error  an integer is required (got type str)</span>
<span class="comment-copy">Yeah as with the commenter below your question I am deeply puzzled about your use of 'ipaddress.ip_address' which  is superfluous at best and the source of your problems at worst. supplying my_net[i] as the parameter should work. If you look at the examples here <a href="https://docs.python.org/3/howto/sockets.html" rel="nofollow noreferrer">docs.python.org/3/howto/sockets.html</a> you will see that all of them give a str for host.</span>
<span class="comment-copy">By the way port does need to be integer.</span>
<span class="comment-copy">This was helpful I have formatted port input as int and appears to have made progress.   port = int(input("Enter the number of the port you would like to scan ")) I had already removed the IP module as per Steffen Thanks for your time Paula. Sorry for my puzzling question, I have only been coding for a few weeks.</span>
<span class="comment-copy">You might also benefit from using my_net.append(subnet+"." +str(i)) to get the full list of ip addresses you are targetting instead of just the last one. Personally, I never use insert but if you do you will need to update the counter. Also, you could use range(11,256,2) which will give you 11,13..,255, additionally you may like to know that range only returns numbers less than its upper limit, so range(0,n) will return 0,1,,2...,n-1. Hope this is helpful.</span>
