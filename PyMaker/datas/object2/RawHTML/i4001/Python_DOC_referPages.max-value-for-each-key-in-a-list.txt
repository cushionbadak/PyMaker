<div class="post-text" itemprop="text">
<p>Given:</p>
<pre><code>scooby = [1, 4, 1, 4, 1, 4, 1, 1, 4]
snacks = [6,28,14, 3, 9, 8,18, 6, 7]
scoobysnacks = zip(scooby,snacks)
</code></pre>
<p>How do I run <code>max(scoobysnacks)</code> to get:</p>
<pre><code>(1,18)
(4,28)
</code></pre>
<p>The logic being that <em>18</em> is the max value associated to a <em>1</em> and <em>28</em> the max value associated to a <em>4</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a solution that traverses the lists only once, keeping track of the best pairs with a <code>dict</code>.</p>
<pre><code>scooby = [1, 4, 1, 4, 1, 4, 1, 1, 4]
snacks = [6,28,14, 3, 9, 8,18, 6, 7]

pairs= {}
for x, y in zip(scooby, snacks):
    pairs[x] = max(pairs.get(x, y), y)

output = list(pairs.items())

output  # [(1, 18), (4, 28)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list(dict(sorted(zip(scooby, snacks))).items())

[(1, 18), (4, 28)]
</code></pre>
<hr/>
<h2>Crappy one-liner in O(n)</h2>
<pre><code>[
    (k, max(v)) for k, v in 
    (lambda d, x=defaultdict(list): ([x[k].append(v) for k, v in d], x))
    (zip(scooby, snacks))[1].items()
]
</code></pre>
</div>
<span class="comment-copy">What is the logic behind the output?</span>
<span class="comment-copy">Welcome to SO. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links found on that page.  Invest some time with the <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">Python Tutorial</a>, practicing the examples - it will give you an idea of the tools Python has to help you solve your problem.</span>
<span class="comment-copy">Strictly speaking, you don't, because that's not what <code>max</code> does.</span>
<span class="comment-copy">Oh I get it! Here is what you want: <code>scoobysnacks = list(zip(scooby, snacks)); print([(x, max(j for i, j in scoobysnacks if i == x)) for x in set(scooby)]);</code></span>
<span class="comment-copy">Use pandas, <code>import pandas as pd</code> <code>pd.DataFrame({'scooby':scooby,'snacks':snacks}).groupby('scooby',as_index=False)['snacks'].max().apply(tuple, 1).tolist()</code></span>
<span class="comment-copy">I had no idea you could enumerate and embed an "if" in the max function... fantastic!  Where do I learn more?  Also, how would the function change if the lists were ordered by scooby? scooby = [1, 1, 1, 1, 1, 4, 4, 4, 4] snacks = [6, 14, 9, 18, 6, 28,3, 8, 7]</span>
<span class="comment-copy">It'd probably be simpler to use <code>zip(scooby, snacks)</code> instead of <code>enumerate</code>.</span>
<span class="comment-copy">Second solution is much better. Could opt for a <code>defaultdict</code> too.</span>
<span class="comment-copy">@user2357112 you are right</span>
<span class="comment-copy">@miradulo that would be the case only if we know the values are positive</span>
