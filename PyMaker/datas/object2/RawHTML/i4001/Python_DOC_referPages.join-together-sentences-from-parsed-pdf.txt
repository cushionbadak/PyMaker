<div class="post-text" itemprop="text">
<p>I have some text scraped from pdfs and I have parsed out the text and currently have everything as strings in a list. I would like to join together sentences that were returned as separate strings because of breaks on the pdf page. For example, </p>
<pre><code>list = ['I am a ', 'sentence.', 'Please join me toge-', 'ther. Thanks for your help.'] 
</code></pre>
<p>I would like to have:</p>
<pre><code>list = ['I am a sentence.', 'Please join me together. Thanks for your help.'] 
</code></pre>
<p>I currently have the following code which joins some sentences but the second sub sentence that joined to the first is still returned. I am aware this is due to indexing but am not sure how to fix the issue. </p>
<pre><code>new = []

def cleanlist(dictlist):
    for i in range(len(dictlist)):

    if i&gt;0:

        if dictlist[i-1][-1:] != ('.') or dictlist[i-1][-1:] != ('. '):
            new.append(dictlist[i-1]+dictlist[i])

        elif dictlist[i-1][-1:] == '-':
            new.append(dictlist[i-1]+dictlist[i])

        else:
            new.append[dict_list[i]] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a generator approach:</p>
<pre><code>def cleanlist(dictlist):
    current = []
    for line in dictlist:
        if line.endswith("-"):
            current.append(line[:-1])
        elif line.endswith(" "):
            current.append(line)
        else:
            current.append(line)
            yield "".join(current)
            current = []
</code></pre>
<p>Use it like this:</p>
<pre><code>dictlist = ['I am a ', 'sentence.', 'Please join me toge-', 'ther. Thanks for your help.']
print(list(cleanlist(dictlist)))
# ['I am a sentence.', 'Please join me together. Thanks for your help.']
</code></pre>
</div>
<span class="comment-copy">Why do you want the last two sentences to be joined together, and not separate entries in your list?</span>
<span class="comment-copy">This was just a simplified example, but the reason is that I want to retain paragraph structures from the text.</span>
<span class="comment-copy">This works but could you explain the lines under the else statement?</span>
<span class="comment-copy">@SusanChen: If you are confused by the <code>yield</code>, you should look up <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generators</a>. It basically hands this value to the outside. And <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join</code></a> joins an iterable using a string (here the empty string, so it is just a concatenation).</span>
