<div class="post-text" itemprop="text">
<p>I am using python flask framework for an object detection task. I have set <code>threaded=True</code>and multiple requests are handled well. As the detection process uses more processing power and time, I need to control the number of background threads to a certain limit. As of my knowledge, OS can manage the number of threads. But I need to limit the thread count to 4 or 5 and provide a server busy result if the request is overloaded. How can I achieve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>When using threaded true, the number of threads will be depend on the system configuration. You need to use any production environment like gunicorn for this as flask is not supporting production environment officially. Limiting of thread count using flask is also very hard to execute. </p>
</div>
<span class="comment-copy">Use a WSGI frontend for your Flask app (<a href="http://gunicorn.org/" rel="nofollow noreferrer"><code>Gunicorn</code></a> for example), then you can precisely control how many processes/threads are spawned and what should happen when all <i>workers</i> are busy. <code>app.run(threaded=True)</code> is intended only for development purposes and should not be used in production.</span>
<span class="comment-copy">Thanks for the quick answer. But is it possible to control the number of threads from flask app itself.</span>
<span class="comment-copy">Not really, at least not easily - Flask itself uses <a href="https://github.com/pallets/werkzeug" rel="nofollow noreferrer"><code>werkzeug</code></a> when acting as its own WSGI server, which in turn uses <a href="https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn" rel="nofollow noreferrer"><code>socketserver.ThreadingMixIn</code></a> or <a href="https://docs.python.org/3/library/socketserver.html#socketserver.ForkingMixIn" rel="nofollow noreferrer"><code>socketserver.ForkingMixIn</code></a> which in turn doesn't leave much in form of control on how many threads/workers to spawn. You could probably do it with enough digging but it's just not worth it.</span>
<span class="comment-copy">Thanks for the information. It really helps</span>
