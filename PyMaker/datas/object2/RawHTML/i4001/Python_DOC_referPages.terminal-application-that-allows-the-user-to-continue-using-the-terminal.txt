<div class="post-text" itemprop="text">
<p>How would one go about creating an piece of software that shows a status bar (e.g. with a news ticker) within the terminal window while allowing the user to continue using the terminal normally?</p>
<p>Is it simply impossible to have an application run and display information while returning control to the user, or could you hypothetically accept input from the user, relay it to the system, and relay any output to the user?</p>
<p>Are there any (python or JS) libraries that would help in the creation of such applications?</p>
</div>
<div class="post-text" itemprop="text">
<p>What have you tried? What method are you using to display data in the terminal? What research have you done? I suggest reading up on <a href="https://docs.python.org/3/howto/curses.html" rel="nofollow noreferrer">curses</a> and using <code>os.system()</code> to run your commands, but I cannot be more specific without understanding more about the problem.</p>
<p>Edit: if you're okay with having a script in the background that prints a status update periodically, then it's much simpler.</p>
<p>It depends on whether you're using Windows or a UNIX-like OS. Assuming UNIX, this <a href="https://askubuntu.com/questions/88091/how-to-run-a-shell-script-in-background#88092">link</a> will tell you how to run a script in the background. To summarise : just add <code>&amp;</code> to the end of the command.</p>
</div>
<span class="comment-copy">if you downvote, I think you should add an explanation so I can avoid such terrible mishaps in the future.</span>
<span class="comment-copy">In the Unix world it may be possible to do what you want using <code>curses</code>. Otherwise you will need to write a GUI application that provides a terminal emulator window, which is not quite as easy as it sounds.</span>
<span class="comment-copy">So far I've just tried to run something across the terminal with <code>sys.stdout.write()</code> and a carriage return. But I can't find information on how to return control to the user while this is running.</span>
<span class="comment-copy">Well, if you want a status bar(overlay) in the Terminal you can't use <code>sys.stdout.write</code>. Like I said, you'll have to use curses or a similar library to keep the overlay at the same place on the screen when you modify it. Why do you need to do this?</span>
<span class="comment-copy">I don't "need" to, but I'm tinkering away and I thought it'd be nice to have a way to read updates on this or that while you're working in the terminal (or when no gui is available)</span>
<span class="comment-copy">Would having a script running in the background which prints a status update every now and then be fine? If so, please edit the question to ask that rather than how to create an overlay.</span>
<span class="comment-copy">not really, I do want to create an overlay which is always visible in the same position. I'll fish around in the curses library, thanks for pointing the way!</span>
