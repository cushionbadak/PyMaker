<div class="post-text" itemprop="text">
<p>Sorry about the title, I'm a little unsure how to exactly ask this.</p>
<p>I have a dataset of game review information. The info is separated by commas, however some of the info, like titles or genres, have commas within them. These are all inside quotations. I want to convert this to a list but keep anything within quotes as a single index, rather than two. Here's an example. This is the raw data:</p>
<pre><code>14,Amazing,Mark of the Ninja,PC,9.0,"Action, Adventure",Y,2012,9,7
</code></pre>
<p>I use <code>.rstrip().split(',')</code> to get: </p>
<pre><code>[14, Amazing, Mark of the Ninga, PC, 9.0, "Action, Adventure", Y, 2012, 9, 7]
</code></pre>
<p>but <code>"Action, Adventure"</code> results in two indices. I want this as a single index, but I'm not sure how to go about it.</p>
<p>I don't have too much experience with regular expressions but I'm guessing that's the solution I'm looking for.</p>
<p>Any suggestions on the best way to go about this problem? </p>
</div>
<div class="post-text" itemprop="text">
<p>The builtin <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> module will handle this, with the only wrinkle being that that library is really designed to consume files, so the documentation may be a little unhelpful for your case, where you have a string. But the reader object can consume lists, so instead of a file, you can just pass in a list of CSV-formatted strings:</p>
<pre><code>import csv
print(list(csv.reader(["""14,Amazing,Mark of the Ninja,PC,9.0,"Action, Adventure",Y,2012,9,7"""])))
# [['14', 'Amazing', 'Mark of the Ninja', 'PC', '9.0', 'Action, Adventure', 'Y', '2012', '9', '7']]
</code></pre>
</div>
<span class="comment-copy">Oh, looks like it's CSV (comma-separated values), which uses quotations to differentiate separator commas and content commas. The builtin <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module will parse this correctly: <code>list(csv.reader(["""14,Amazing,Mark of the Ninja,PC,9.0,"Action, Adventure",Y,2012,9,7"""]))</code>.</span>
<span class="comment-copy"><b><i>I have a dataset of game review information</i></b> please share it. What's the source format? csv?</span>
<span class="comment-copy">oh, thank you! it is a CSV, i didn't realize it stood for that. pretty obvious now lol. cheers mate</span>
<span class="comment-copy">@PedroLobito sorry I didn't include the file extension, but I did example the exact format</span>
<span class="comment-copy">it actually is a file, almost 19000 lines. looking at the documentation for cvs.reader I'm a little confused why they also specify space as a delimiter. aren't the commas just the delimiter? i'm also a little confused about the quotechar parameter -- what is doing exactly?</span>
<span class="comment-copy">CSV is a very crazy anti-standard—there are all kinds of dialects, including, as the documentation hints, ones with spaces as delimiters and perhaps <code>'</code> (single quote) as grouping quotations. The fact that using spaces as separators would make it a SSV file doesn't prevent the module from being called <code>csv</code>. (I personally frequently use TSV, tab-separated values, but I still use the <code>csv</code> module to parse those…)</span>
<span class="comment-copy">okay, i get it now. i'm gonna just remember csv as "character separated values." i think that makes it a lot clearer to me</span>
