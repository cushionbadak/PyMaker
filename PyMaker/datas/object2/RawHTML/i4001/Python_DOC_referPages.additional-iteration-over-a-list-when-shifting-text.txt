<div class="post-text" itemprop="text">
<p>I've encountered a small problem with a simple shift deciphering.</p>
<pre><code>N,K = [int(s) for s in input().split()]
myres = []
alph = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
myalph = [a for a in alph]
for i in range(N):
  s = input()
  mylist = [d for d in str(s)]
  for b in range(len(mylist)):
    for c in range(len(myalph)):
      if mylist[b] ==  myalph[c]:
            mylist[b] = myalph[c-K]
            print(myalph[c-K], c-K, b, c)
  myres = myres + mylist
Res = [str(i) for i in myres]
print("".join(Res))
</code></pre>
<p>The idea is for every character of my input string to be replaced with a different character from the alphabet that's been shifted by a given key (K).</p>
<p>The problem occurs when <code>c-K</code> &lt; 0 and the replacing key is taken from the back of the list. Then the loop is being iterated twice.</p>
<p>If the key is <code>3</code> and I input <code>A</code> instead of getting <code>X</code>, I'm getting <code>U</code> as the first iteration gives <code>X</code> but then <code>X</code> is also iterated and becomes <code>U</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your mistake is looping over all the letters in <code>alph</code>:</p>
<ul>
<li>The <code>for</code> loop tests all the letters of the alphabet, in order, and <code>'A'</code> is matched. You set <code>mylist[b]</code> to <code>'X'</code> (<code>0 - 3</code> is <code>-3</code> and <code>myalph[-3]</code> is <code>'X'</code>.</li>
<li>The loop then continues to test all the other letters of the alphabet against <code>mylist[b]</code>, so eventually it gets to <code>'X'</code>, sees that the letter matches and sets <code>mylist[b]</code> to <code>'U'</code>.</li>
<li>The loop continues to test the remaining letters of the alphabet against <code>mylist[b]</code>, and reaches the end without further matches.</li>
</ul>
<p>At the very least you need to <em>break out of the loop</em> when you have shifted a letter.</p>
<p>But rather than loop, you could use the <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer"><code>str.find()</code> method</a> (directly on the <code>alph</code> string) to find a matching index for the letter; it'll be set to <code>-1</code> if the letter is not found at all:</p>
<pre><code>for b in range(len(mylist)):
    c = alph.find(s[b])
    if c &gt; -1:  # the letter exists
        s[b] = alph[c - K]
</code></pre>
<p>Aside from that, there are some other improvements you could make:</p>
<ul>
<li>You can loop over and index into strings directly, there is no need to turn <code>alph</code> into a list here. When you do need to to turn a string into a list of individual characters, you should use <code>list(stringobject)</code>. So <code>mylist = list(s)</code> would suffice.</li>
<li><code>myres</code> is already a list of strings, there is no need to convert each to a string again.</li>
<li>Rather than put all the letters from <code>s</code> into a list, then adding the whole <code>mylist</code> list to <code>res</code> to <code>myres</code>, you could just directly append each letter you processed to <code>myres</code>; that also removes the need to alter <code>myres</code>.</li>
<li>Python variable names do not need to be limited to single characters. Use more descriptive names so that it is easier to understand what your code does when you return to it later.</li>
</ul>
<p>Taken together, that'd lead to:</p>
<pre><code>alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

parts, key = [int(s) for s in input().split()]
results = []

for part in range(parts):
    characters = input()
    for character in enumerate(characters):
        letter_idx = alphabet.index(character)
        if letter_idx &gt; -1:
            # this is a letter in the alphabet, shift it with the key
            character = alphabet[letter_idx - key]
        results.append(character)

print("".join(results))
</code></pre>
</div>
<span class="comment-copy">Please provide your expected output.</span>
<span class="comment-copy">@MihaiAlexandru-Ionut: they did. When entering <code>A</code> they expected <code>X</code> but get <code>U</code> instead.</span>
<span class="comment-copy">However, the first line asks for <b>two</b> integers as input, separated by whitespace. What do you input there?</span>
<span class="comment-copy">Side-note: to turn a string into a list of characters, you can just use <code>list(stringobject)</code>, no need to use a list comprehension. <code>input()</code> already returns a string, so the <code>str()</code> call is redundant too. And last but not least, you don't need to turn <code>alph</code> into the <code>myalph</code> list, because you can do the indexing everything directly on the <code>alph</code> string. <code>myres</code> consists only of single-character strings, so the <code>str()</code> call there too is not needed.</span>
<span class="comment-copy">Thank very much. I've thrown a break after the shift and it seems to be working. But why was it doing it twice before doing that break?</span>
<span class="comment-copy">@LigaAdrian: because your <code>for</code> loop would continue to test all the other letters. The loop finds <code>A</code>, sets <code>s[b]</code> to <code>X</code>, then continues on until it gets to <code>X</code>, so it then sets <code>s[b]</code> to <code>U</code>.</span>
