<div class="post-text" itemprop="text">
<p>I am trying to add a window and a text in this window with curses using <a href="https://docs.python.org/3/howto/curses.html#windows-and-pads" rel="nofollow noreferrer">this</a> and this:</p>
<pre><code>window.addstr("This is a text in a window")
</code></pre>
<p>Code:</p>
<pre><code>class View:
    def __init__(self, ):
        self.stdscr = curses.initscr()
        curses.noecho()
        curses.cbreak()
        self.stdscr.keypad(True)
        # -----------------
        self.add_window_and_str()
        self.add_str()
        # -----------------
        self.stdscr.getkey()
        curses.endwin()

    def add_str(self): #just text in standart screen
        self.stdscr.addstr("test")
        self.stdscr.refresh()

    def add_window_and_str(self):
        scr_limits = self.stdscr.getmaxyx()
        win = curses.newwin(scr_limits[0] - 10, scr_limits[1] - 10, 5, 5)
        win.addstr("Example String")
        win.refresh()
        self.stdscr.refresh()
</code></pre>
<p>The text added with <code>self.add_str</code> is visible but the "Example String" is not.
How can i manipulate windows to make that text visible?</p>
</div>
<div class="post-text" itemprop="text">
<p>On initialization, the standard screen has a pending update (to clear the screen).  The <code>refresh</code> call at the end of <code>add_window_and_str</code> does that, overwriting the <code>win.addstr</code> output.  You could move that call <em>before</em> the first call to <code>add_window_and_str</code>.  After that, the changes to <code>stdscr</code> would be in parts of the screen outside your window.</p>
<p>There's another problem: calling <code>getch</code> refreshes the associated window. Usually programs are organized so that <code>getch</code> is associated with whatever window you would like to keep "on top", so that their updates will not be obscured by other windows.  If you return the <code>win</code> variable from <code>add_window_and_str</code>, you can use that window with <code>getch</code>.</p>
</div>
<span class="comment-copy">I guess, i need to use panels to make two different things show up together.</span>
<span class="comment-copy">That makes it simpler, but if you keep in mind the way refreshing works in curses, you can make the windows behave as you want, for simple 2-window configurations (adding windows makes it harder).</span>
