<div class="post-text" itemprop="text">
<p>I am trying to concatenate CSV files from a folder in my desktop: </p>
<pre class="lang-none prettyprint-override"><code>C:\\Users\\Vincentc\\Desktop\\W1 
</code></pre>
<p>and output the final CSV to:</p>
<pre class="lang-none prettyprint-override"><code>C:\\Users\\Vincentc\\Desktop\\W2\\conca.csv
</code></pre>
<p>The CSV files don't have header. However, nothing come out when I run my script, and no error message. I'm a beginner, can someone have a look at my code below, Thanks a lot!</p>
<pre><code>import os
import glob
import pandas

def concatenate(indir="C:\\Users\\Vincentc\\Desktop\\W1",outfile="C:\\Users\\Vincentc\\Desktop\\W2\\conca.csv"):
    os.chdir(indir)
    fileList=glob.glob("indir")
    dfList=[]
    for filename in fileList:
        print(filename)
        df=pandas.read_csv(filename,header=None)
        dfList.append(df)
    concaDf=pandas.concat(dfList,axis=0)
    concaDf.to_csv(outfile,index=None)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Loading csv files into <code>pandas</code> only for concatenation purposes is inefficient. See <a href="https://stackoverflow.com/questions/2512386/how-to-merge-200-csv-files-in-python">this answer</a> for a more direct alternative.</p>
<p>If you insist on using <code>pandas</code>, the 3rd party library <code>dask</code> provides an intuitive interface:</p>
<pre><code>import dask.dataframe as dd

df = dd.read_csv('*.csv')  # read all csv files in directory lazily
df.compute().to_csv('out.csv', index=False)  # convert to pandas and save as csv
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/glob.html?highlight=glob%20glob#glob.glob" rel="nofollow noreferrer"><code>glob.glob()</code></a> needs a wildcard to match all the files in the folder you have given. Without it, you might just get the folder name returned, and none of the files inside it. Try the following:</p>
<pre><code>import os
import glob
import pandas

def concatenate(indir=r"C:\Users\Vincentc\Desktop\W1\*", outfile=r"C:\Users\Vincentc\Desktop\W2\conca.csv"):
    os.chdir(indir)
    fileList = glob.glob(indir)
    dfList = []

    for filename in fileList:
        print(filename)
        df = pandas.read_csv(filename, header=None)
        dfList.append(df)

    concaDf = pandas.concat(dfList, axis=0)
    concaDf.to_csv(outfile, index=None)
</code></pre>
<p>Also you can avoid the need for adding <code>\\</code> by either using <code>/</code> or by prefixing the strings with <code>r</code>. This has the effect of disabling the backslash escaping on the string.</p>
</div>
<span class="comment-copy">you are not calling the <code>indir</code> variable, but a string  <code>fileList=glob.glob(indir)</code></span>
<span class="comment-copy">Thank you! I changed the "indir" back to fileList=glob.glob(indir), but  still, when I do print(filename) , no filename output.</span>
<span class="comment-copy">Try adding <code>\\*</code> to the end of <code>indir</code></span>
<span class="comment-copy">Did one of the answers below help? If so, consider <a href="https://stackoverflow.com/help/someone-answers">accepting</a> (green tick on left), or ask for clarification.</span>
