<div class="post-text" itemprop="text">
<p>I'm trying to create a program where if you input a word, it will print out each letter of the word and how many times the letter appears in that word.</p>
<p>Eg; when I input "aaaarggh", the output should be "a 4 r 1 g 2 h 1".</p>
<pre><code>def compressed (word):
    count = 0
    index = 0
    while index &lt; len(word):
        letter = word[index]
        for letter in word:
            index = index + 1
            count = count + 1
            print(letter, count)
        break

print("Enter a word:")
word = input()
compressed(word)
</code></pre>
<p>So far it just prints out each letter and position in the word. 
Any help appreciated, thank you!</p>
<p>(no using dict method)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a="aaaarggh"
d={}
for char in set(a):
    d[char]=a.count(char)
print(d)
</code></pre>
<p>output</p>
<pre><code>{'a': 4, 'h': 1, 'r': 1, 'g': 2}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just type (for Python 2.7+):</p>
<pre><code>import collections
dict(collections.Counter('aaaarggh'))
</code></pre>
<p>having:</p>
<pre><code>{'a': 4, 'g': 2, 'h': 1, 'r': 1}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this, You can use counter it will return dict type</p>
<pre><code>from collections import Counter
print(Counter("aaaarggh"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way of implementing it using a <code>dict</code>:</p>
<pre><code>def compressed(word):
    letters = dict()
    for c in word:
        letters[c] = letters.get(c, 0) + 1
    for key, value in letters.items():
        print(f'{value}{key}', end=' ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As others have suggested, you can do this easily with a <code>dict</code> !</p>
<pre><code>test_input = "aaaarggh"

def compressed (word):
  letter_dict = {}
  for letter in test_input:
    if letter not in letter_dict:
      letter_dict[letter] = 1
    else:
      letter_dict[letter] = letter_dict[letter]+1
  return letter_dict

print(compressed(test_input))
</code></pre>
<p>Outputs:</p>
<pre><code>{'a': 4, 'r': 1, 'g': 2, 'h': 1}
</code></pre>
</div>
<span class="comment-copy">Can you use <code>collections.Counter</code>? Because it does exactly what you want! (<code>from collections import Counter; Counter("aaaarggh")</code>)</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/10806866/counting-each-letters-frequency-in-a-string">Counting each letter's frequency in a string</a></span>
<span class="comment-copy">As an aside - <a href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy" rel="nofollow noreferrer"><code>str</code>'s are sequences</a> and can be iterated - <code>for character in word: ...</code></span>
<span class="comment-copy">What exactly is a dict? I'm still a student so the skills we are taught are quite limited</span>
<span class="comment-copy">A <code>dict</code> (or dictionary) is a data structure that holds key-value pairs - you can see more about it here: <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html#dictionaries</a> . They are pretty useful! Happy learning :)</span>
