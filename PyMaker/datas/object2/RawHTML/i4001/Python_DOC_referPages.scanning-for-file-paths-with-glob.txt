<div class="post-text" itemprop="text">
<p>I am searching for all .csv's located in a subfolder with <code>glob</code> like so:</p>
<pre><code>def scan_for_files(path):
    file_list = []
    for path, dirs, files in os.walk(path):
        for d in dirs:
            for f in glob.iglob(os.path.join(path, d, '*.csv')):
                file_list.append(f)
    return file_list
</code></pre>
<p>If I call:</p>
<p><code>path = r'/data/realtimedata/trades/bitfinex/'
scan_for_files(path)</code></p>
<p>I get the correct recursive list of files:</p>
<pre><code>['/data/realtimedata/trades/bitfinex/btcusd/bitfinex_btcusd_trades_2018_05_12.csv',
 '/data/realtimedata/trades/bitfinex/btcusd/bitfinex_btcusd_trades_2018_05_13.csv',
 '/data/realtimedata/trades/bitfinex/btcusd/bitfinex_btcusd_trades_2018_05_15.csv',
 '/data/realtimedata/trades/bitfinex/btcusd/bitfinex_btcusd_trades_2018_05_11.csv',
 '/data/realtimedata/trades/bitfinex/btcusd/bitfinex_btcusd_trades_2018_05_09.csv',
 '/data/realtimedata/trades/bitfinex/btcusd/bitfinex_btcusd_trades_2018_05_10.csv',
 '/data/realtimedata/trades/bitfinex/btcusd/bitfinex_btcusd_trades_2018_05_08.csv',
 '/data/realtimedata/trades/bitfinex/btcusd/bitfinex_btcusd_trades_2018_05_14.csv',
 '/data/realtimedata/trades/bitfinex/ethusd/bitfinex_ethusd_trades_2018_05_14.csv',
 '/data/realtimedata/trades/bitfinex/ethusd/bitfinex_ethusd_trades_2018_05_12.csv',
 '/data/realtimedata/trades/bitfinex/ethusd/bitfinex_ethusd_trades_2018_05_10.csv',
 '/data/realtimedata/trades/bitfinex/ethusd/bitfinex_ethusd_trades_2018_05_08.csv',
 '/data/realtimedata/trades/bitfinex/ethusd/bitfinex_ethusd_trades_2018_05_09.csv',
 '/data/realtimedata/trades/bitfinex/ethusd/bitfinex_ethusd_trades_2018_05_15.csv',
 '/data/realtimedata/trades/bitfinex/ethusd/bitfinex_ethusd_trades_2018_05_11.csv',
 '/data/realtimedata/trades/bitfinex/ethusd/bitfinex_ethusd_trades_2018_05_13.csv']
</code></pre>
<p>However when using the actual sub-directory containing the files I want - it returns an empty list. Any idea why this is happening? Thanks.</p>
<p><code>path = r'/data/realtimedata/trades/bitfinex/btcusd/'
scan_for_files(path)</code>
returns: <code>[]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like <code>btcusd</code> is a bottom-level directory. That means that when you call <code>os.walk</code> with the <code>r'/data/realtimedata/trades/bitfinex/btcusd/'</code> path, the <code>dirs</code> variable will be an empty list <code>[]</code>, so the inner loop <code>for d in dirs:</code> does not execute at all.</p>
<p>My advice would be to re-write your function to iterate over the files directly, and not the directories... don't worry, you'll get there eventually, that's the nature of a directory <em>tree</em>.</p>
<pre><code>def scan_for_files(path):
    file_list = []
    for path, _, files in os.walk(path):
        for f in files:
            file_list.extend(glob.iglob(os.path.join(path, f, '*.csv'))

    return file_list
</code></pre>
<p>However, on more recent versions of python (3.5+), you can use recursive glob:</p>
<pre><code>def scan_for_files(path):
    return glob.glob(os.path.join(path, '**', '*.csv'), recursive=True)
</code></pre>
<p><a href="https://stackoverflow.com/questions/2186525/use-a-glob-to-find-files-recursively-in-python">Source</a>.</p>
</div>
<span class="comment-copy">use <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">docs.python.org/3/library/os.html#os.walk</a></span>
<span class="comment-copy">If you're on Python 3.5+, one liner like so glob.glob(path, recursive=True) would do the trick. For more complete answer and older Python versions, see here: <a href="https://stackoverflow.com/questions/2186525/use-a-glob-to-find-files-recursively-in-python" title="use a glob to find files recursively in python">stackoverflow.com/questions/2186525/â€¦</a></span>
<span class="comment-copy">@LukaszTracewski Thanks, forgot that existed. Nice suggestion.</span>
