<div class="post-text" itemprop="text">
<p>I'm new to python and having some issues with blocking.   I have a script that I'm calling with options.  I'm able to see the arguments come in, however, I have been unable to get the program to work correctly.  In the code sample below, I'm trying to grab the arguments and then run the piece of code after the "#if ip address is not defined qpid-route will not work" comment.  If I change the indentation after the comment, I get expected indentation or unexpected indentation errors.</p>
<p>The problem is that the way the code currently is it will run the elif opt in ("-i", "--ipaddress"): code and then will continue and run the code through to the bottom and then come back and run the -s loop code and then rerun the code to the bottom.   </p>
<p>To fix this, I tried a break or continue command and all I get is indentation errors on this no matter which level I align it with.  Can someone help me format this correctly such that I can pull the ipaddress and scac values that I'm grabbing from the arguments and then run the code after the "#if ip address is not defined qpid-route will not work" comment as a separate block.</p>
<pre><code>import re
import os
import sys
import getopt
import pdb

ipaddress = ""
scac = ''

def main(argv):
    #print argv
    ipaddress = ""
    scac = ''
    pdb.set_trace()
    try:
        opts, args = getopt.getopt(argv,"hi:s:",["ipaddress=","scac="])
        if not opts: # if no option given 
            print 'usage test.py -i &lt;ipaddress&gt; -s &lt;scac&gt;'
            sys.exit(2)
    except getopt.GetoptError:
        print 'test.py -i &lt;ipaddress&gt; -s &lt;scac&gt;'
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-h':
            print 'FedConnectStatus.py -i &lt;iobipaddress&gt; -s &lt;scac&gt;'
            sys.exit() # it should be on level of if
        elif opt in ("-i", "--ipaddress"):
            ipaddress = arg
            #break
            #continue
        elif opt in ("-s", "--scac"):
            scac = arg

    #if ip address is not defined qpid-route will not work
    if not ipaddress:
        print 'ip address needed'
    else:        
          print(os.getcwd())
        #If no scac is given grab every federated connection and report  
    if not scac:
           # open file to read
            f = file('qpid.txt', 'r')
            nameList = []
            statusList = []
            #skip first 4 lines
            for i in range(3): f.next() # skip first four lines
            # iterate over the lines in the file
            for line in f:
                    # split the line into a list of column values
                    columns = line.split(None, 5)
                    # clean any whitespace off the items
                    columns = [col.strip() for col in columns]
                    # ensure the column has at least one value before printing
                    if columns:
                        #print "Name", columns[0]  # print the first column
                        #print "Status", columns[4] # print the last column
                        nameList.append(columns[0])
                        statusList.append(columns[4])
                        #print name
                        #print status
        #else:

    print nameList
    print statusList

#if __name__ == "__main__":
main(sys.argv[1:])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This statement <code>if not scac:</code> on line 40 and below has indentation different to that of the rest of the code. </p>
<p>You'll see line 38 also doesn't match the indenting of the above if. </p>
</div>
<span class="comment-copy">Every indention should be exactly 4 spaces. You might want to verify that you aren't mixing tabs and spaces. This caused me problems with I first started using python. Depending on what editor you're using you may be able to set how many spaces or tabs are used when you press the tab button.</span>
<span class="comment-copy">Consider using  the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a> module if you need to process multiple arguments, it'll make things easier.</span>
