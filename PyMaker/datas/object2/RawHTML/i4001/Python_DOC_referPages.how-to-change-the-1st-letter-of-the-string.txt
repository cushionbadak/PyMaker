<div class="post-text" itemprop="text">
<p>Change the 1st letter of the world Hello which is "H" to "X"</p>
<pre><code>astring = ("Hello World")
</code></pre>
<p>result:</p>
<pre><code>astring = ("Xello World")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>astring = "X" + astring[1:]
</code></pre>
<p>This slices the string and adds the new start in the desired position </p>
<p>More info on slicing can be found <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">here</a> </p>
<p>And you can just think of strings as immutable lists </p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, strings are immutable. "Immutable" means that they cannot be changed once they are assigned, only deleted.</p>
<p>You must make a new string. If the new string variable has the same name as the old string variable, it will be overwritten.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>astring = ("Hello World")
astring = "X" + astring[1:]
</code></pre>
</div>
<span class="comment-copy">Cut the string in two parts, then join the second part to an <code>'X'</code>.</span>
<span class="comment-copy">Why the parentheses around the string?</span>
<span class="comment-copy">You can't say if the string will be overwritten, that's an implementation detail.  It might not even be garbage collected if there is another reference to the same string object, for example.  About all you can say is if the same name is used to refer to the new object then the reference count on the old object will be decremented.</span>
<span class="comment-copy">When I said that the name would be overwritten, I meant that the string variable would now point to a different object in memory. Whether the string object itself is removed is of course up to how garbage collection is handled. Should have been a bit clearer, sorry about that!  That said, the concept of the nature of the variable, and its relation to the object in memory is too low level for a question where OP is clearly still a beginner. It's a lot better here to just use the abstraction that the string is overwritten, and let the OP learn what's actually going on under the hood later.</span>
<span class="comment-copy">Why the parentheses around the string?</span>
<span class="comment-copy">It is not necessary but I am used to it.</span>
