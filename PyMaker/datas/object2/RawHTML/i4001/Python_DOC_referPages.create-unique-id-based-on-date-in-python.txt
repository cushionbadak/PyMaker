<div class="post-text" itemprop="text">
<p>In MongoDb the automatically assigned id (ObjectId) for new documents is unique and contains within itself the timestamp of its creation. </p>
<p>Without using any library (other than built-in libs of Python), how can I create this type of concise unique ids that also somehow holds its timestamp of creation?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have a multithreaded or multi-machine scenario, all bets are off and you should not rely on any "extra level of unique assurance" if using timestamp only. Read more from <a href="https://stackoverflow.com/a/26883012/3594865">this excellent answer from deceze</a>. </p>
<p>Similar to above answers, another option is to concatenate timestamp and uuid:</p>
<pre><code>from datetime import datetime
from uuid import uuid4

eventid = datetime.now().strftime('%Y%m-%d%H-%M%S-') + str(uuid4())
eventid
&gt;&gt;&gt; '201902-0309-0347-3de72c98-4004-45ab-980f-658ab800ec5d'
</code></pre>
<p><code>eventid</code> contains 56 characters which may or may not be an issue for you. However, it holds timestamp of creation and is sortable all of which could be advantageous in a database allowing you to query <code>eventid</code>s between two timestamps, say.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using an epoch timestamp with a sufficient amount of precision might just be enough for you. Combine this with a simple user id and you'll have yourself a unique ID with a timestamp embedded into it:   </p>
<pre><code>import time
epoch = time.time()
user_id = 42 # this could be incremental or even a uuid
unique_id = "%s_%d" % (user_id, epoch)
</code></pre>
<p><code>unique_id</code> will now have a value similar to <code>42_1526466157</code>. You can take this value and split it by the <code>_</code> character - now you have the original epoch of creation time (1526466157).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">datetime</a> to create current timestamp:</p>
<pre><code>import datetime
datetime.datetime.now().strftime('%Y%m%d%H%M%S')
</code></pre>
<p>Now you can concatenate that with anything you want.</p>
<p>If you want to add microseconds to make sure it is unique just add <code>%f</code> to the end:</p>
<pre><code>datetime.datetime.now().strftime('%Y%m%d%H%M%S%f')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3.2/library/uuid.html?highlight=uuid#uuid.uuid4" rel="nofollow noreferrer">UUID</a>, built in to the standard library. Specifically you can use a <code>uuid4</code> just for a little extra security because it doesn't encode the computer's network address.</p>
<pre><code>import uuid

print(uuid.uuid4()) #56d36372-b5ec-4321-93b8-939ee7d780aa
</code></pre>
</div>
<span class="comment-copy">Concatenation of some unique data and the timestamp? For example, user_id + some other info + timestamp of creation?</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/534839/how-to-create-a-guid-uuid-in-python" title="how to create a guid uuid in python">stackoverflow.com/questions/534839/â€¦</a></span>
<span class="comment-copy">Or do you also mean creation of timestamp without using any library</span>
<span class="comment-copy">I like the idea of being able to have the timestamp human readable +1! I think that adding the microseconds is a must though to add an extra level of unique assurance.</span>
<span class="comment-copy">Where is the timestamp here? Please take another look at the OP's requirements - they need an id based on time</span>
<span class="comment-copy">Is it possible to extract the timestamp from the id generated with this method?</span>
