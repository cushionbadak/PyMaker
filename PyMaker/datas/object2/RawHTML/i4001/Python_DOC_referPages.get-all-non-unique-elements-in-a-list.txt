<div class="post-text" itemprop="text">
<p>I am trying to build a code that returns me a list with non-unique values, such as <code>[1,2,2,3]</code> =&gt; <code>[2,2]</code> and the function isn't case-sensitive, such as: <code>['p','P','a','b',1,5,6]</code> =&gt; <code>['p','P']</code>.</p>
<p>This is what I have come up with so far:</p>
<pre><code>def non_unique(*data):
    tempLst = [x for x in data if (data.count(x) &gt; 1 if (ord('a') &lt;= ord(x) &lt;= ord('z') or ord('A') &lt;= ord(x) &lt;= ord('Z')) and (data.count(x.upper()) + data.count(x.lower()) &gt; 1)]
    return tempLst
</code></pre>
<p>These are the test examples:</p>
<pre><code>if __name__ == "__main__":
    assert isinstance(non_unique([1]), list)
    assert non_unique([1, 2, 3, 1, 3]) == [1, 3, 1, 3]
    assert non_unique([1, 2, 3, 4, 5]) == []
    assert non_unique([5, 5, 5, 5, 5]) == [5, 5, 5, 5, 5]
    assert non_unique([10, 9, 10, 10, 9, 8]) == [10, 9, 10, 10, 9]


    assert non_unique(['P', 7, 'j', 'A', 'P', 'N', 'Z', 'i',
                   'A', 'X', 'j', 'L', 'y', 's', 'K', 'g',
                   'p', 'r', 7, 'b']) == ['P', 7, 'j', 'A', 'P', 'A', 'j', 'p', 7]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="noreferrer">Counter</a> from <a href="https://docs.python.org/3/library/collections.html" rel="noreferrer">collections</a>:</p>
<pre><code>from collections import Counter

def non_unique(l):
    def low(x):
        return x.lower() if isinstance(x, str) else x
    c = Counter(map(low, l))
    return [x for x in l if c[low(x)] &gt; 1]
</code></pre>
<p>Tests:</p>
<pre><code>&gt;&gt;&gt; non_unique([1, 2, 3, 1, 3])
[1, 3, 1, 3]
&gt;&gt;&gt; non_unique([1, 2, 3, 4, 5])
[]
&gt;&gt;&gt; non_unique([5, 5, 5, 5, 5])
[5, 5, 5, 5, 5]
&gt;&gt;&gt; non_unique([10, 9, 10, 10, 9, 8])
[10, 9, 10, 10, 9]
&gt;&gt;&gt; non_unique(['P', 7, 'j', 'A', 'P', 'N', 'Z', 'i',
...                    'A', 'X', 'j', 'L', 'y', 's', 'K', 'g',
...                    'p', 'r', 7, 'b'])
['P', 7, 'j', 'A', 'P', 'A', 'j', 'p', 7]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So I havd come up with an answer:</p>
<pre><code>def non_unique(data):
    tempLst = []
    for letter in data:
        if type(letter) == type('a'):
            if letter.lower() in tempLst or letter.upper() in tempLst:
                tempLst.append(letter)
            elif data.count(letter.lower()) + data.count(letter.upper()) &gt; 1:
                tempLst.append(letter)
        else:
            if data.count(letter) &gt; 1:
                tempLst.append(letter)
    return tempLst
</code></pre>
<p>If anyone has a shorter version please comment :)</p>
</div>
<span class="comment-copy">You forgot to ask a question</span>
<span class="comment-copy">my x for x isnt working, somewhere in the debug it crashes</span>
<span class="comment-copy">So what's the full traceback you see?</span>
<span class="comment-copy">Currently, your attempt has a syntax error in it.</span>
<span class="comment-copy">i see that my attempt stops at a number tries evaluate as a string</span>
<span class="comment-copy">Right, you do need to track the count, because you need all non-unique copies.</span>
