<div class="post-text" itemprop="text">
<p>From a set of files, I'm creating a tar file and, from the tar file, a tar.gz file (using python).</p>
<p>The creation of the compressed file could take time, so:</p>
<p>I'd like to know if there is a way to know that the "process to create a compressed file" is "on-going".</p>
<p>Maybe checking by some temp file or similar?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>you could use python to create your <code>gzip</code> file (possibly in another thread) so you can know when the file is created (and even get a progress indicator)</p>
<p>Write in chunks and a progress report since you get control everytime you write a chunk of the file to the compressed output (there are fancier progress bars out there, I'll do a simple print):</p>
<pre><code>import gzip,shutil,os

input_file = "input.tar"
input_size = os.path.getsize(input_file)
chunk_size = 100000
written = 0

with open(input_file,"rb") as fr,gzip.open(input_file+".gz","wb") as fw:
    chunk = fr.read(chunk_size)
    fw.write(chunk)
    written += chunk.size()
    print("Progress {} bytes out of {}".format(written,input_size))
</code></pre>
<p>another solution would be to use the gzip output mode of the <code>tarfile</code> library and use a progress bar on the files being written / left to write (knowing that it won't be exact if the files are of very different sizes)</p>
</div>
<span class="comment-copy">you can create a tar.gz directly with the <code>tarfile</code> library: <a href="https://docs.python.org/3/library/tarfile.html" rel="nofollow noreferrer">docs.python.org/3/library/tarfile.html</a></span>
<span class="comment-copy">So, you have some <code>foo.tar.gz</code> file on disk but you are unsure of whether its still open and the compression stage is still in progress?</span>
<span class="comment-copy">@tdelaney right, so imagine that a compressed file takes 5 minutes to be done, how can I check that the process is still on-going</span>
<span class="comment-copy">I don't know of a clean way to do that. On windows you'll likely get a sharing violation. Its common to compress into a temp file but that is completely implementation dependent. If you control the implementation of the compressor... do that, then its easy. Just wait for the renamed file (poll or inotify or something).</span>
<span class="comment-copy">you can use block write on the compressed output stream, so you can print a progress</span>
