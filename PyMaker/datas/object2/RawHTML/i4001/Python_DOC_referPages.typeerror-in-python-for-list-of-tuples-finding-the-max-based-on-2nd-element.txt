<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; a = [1,2,3,4,5]
</code></pre>
<p>Max function gives <code>TypeError: 'int' object is not callable</code></p>
<pre><code>&gt;&gt;&gt; max(a)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'int' object is not callable
&gt;&gt;&gt; max(1, 2)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'int' object is not callable
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error is clear: you have redefined max to be an int in your code. Or you use someone else's code that does that.
So you probably have something like this somewhere</p>
<pre><code>max = 4
</code></pre>
<p>This is why it is seen as very bad practice to use built-in names as variable names. Python allows you to do it, but it's error prone.</p>
<p>Prefer the use of <code>maximum</code> or <code>max_</code> if you really want something close to <code>max</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It works:</p>
<pre><code>In [1]: a = [1,2,3,4,5]

In [2]: max(a)
Out[2]: 5
</code></pre>
<p>If you have not shadowed <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow"><code>max</code></a> somewhere, everything works as expected.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have somewhere in your code defined a variable named <code>max</code> </p>
<pre><code>max = something
</code></pre>
<p>Because:</p>
<pre><code>a = [1,2,3,4,5]
print max(a)
</code></pre>
<p>Outputs <code>5</code> and works perfectly.</p>
</div>
<span class="comment-copy">My bet is that you have defined a variable called <code>max</code> before.</span>
<span class="comment-copy">check this <code>1()</code> you will get the same error. Because max is shadowed by a int variable you created as bereal stated.</span>
<span class="comment-copy">Exactly. Works fine. I had another variable named max.  My bad. This is embarrasing</span>
