<div class="post-text" itemprop="text">
<p>I only want to run a piece of code if the time is between specific minutes in an hour but I can't figure out how to get the hour number in Python.</p>
<p>The equivalent code in PHP is:</p>
<pre><code>if (intval(date('i', time())) &gt; 15 &amp;&amp; intval(date('i', time())) &lt; 32) {
    // any time from hour:16 to hour:33, inclusive
} else {
    // any time until hour:15 or from hour:32
}
</code></pre>
<p>In Python it would be something like this:</p>
<pre><code>import time
from datetime import date
if date.fromtimestamp(time.time()):
   run_my_code()
else:
   print('Not running my code')
</code></pre>
<p>I'd typically use cron but this is running inside a Lambda and I want to make absolutely sure this code does NOT get run all the time.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is one wasy of doing it.</p>
<pre><code>import datetime

# Get date time and convert to a string
time_now = datetime.datetime.now().strftime("%S")    
mins = int(time_now)

# run the if statement
if mins &gt; 10 and mins &lt; 50:
    print(mins, 'In Range')
else:
    print(mins, 'Out of Range')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>datetime</code></a> class has attributes that you can use. You are interested in the <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.minute" rel="nofollow noreferrer"><code>minute</code> attribute</a>.</p>
<p>For example:</p>
<pre><code>from datetime import datetime

minute = datetime.now().minute

if minute &gt; 15 and minute &lt; 32:
    run_my_code()
else:
    print('Not running my code')
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/30071886/how-to-get-current-time-in-python-and-break-up-into-year-month-day-hour-minu">How to get current time in python and break up into year, month, day, hour, minute?</a></span>
<span class="comment-copy">This is quite an inefficient method of getting the 'minutes' field - 1) format time as a string - HH-MM-SS, 2) retrieve a substring containing only the minutes - why specify the others if you don't want them? 3) parse the string and convert to integer.</span>
<span class="comment-copy">True.  Unnecessary.;. I have edited my answer..</span>
