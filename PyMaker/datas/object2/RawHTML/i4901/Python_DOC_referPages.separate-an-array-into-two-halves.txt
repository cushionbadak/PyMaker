<div class="post-text" itemprop="text">
<p>I like to split an array into first half and its second half. I tried following code, but it does not work:</p>
<pre><code>A = [1,2,3,4,5,6]
B = A[:len(A)/2]
C = A[len(A)/2:]
</code></pre>
<p>The error message says:</p>
<pre><code>TypeError: slice indices must be integers or None or have an __index__ method
</code></pre>
<p>Supposedly, I should get </p>
<pre><code>B = [0,1,2]

C = [3,4,5]
</code></pre>
<p>I am wondering how I should do it? Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You are doing float-math - use integer division:</p>
<pre><code>A = [1,2,3,4,5,6]
B = A[:len(A)//2]
C = A[len(A)//2:]

print(A,B,C)
</code></pre>
<p>Output:</p>
<pre><code>([1, 2, 3, 4, 5, 6], [1, 2, 3], [4, 5, 6])
</code></pre>
<p>Have a look at the operators here:  <a href="https://docs.python.org/3/library/stdtypes.html?highlight=floor%20division#numeric-types-int-float-complex" rel="nofollow noreferrer">numeric-types-int-float-complex</a></p>
</div>
<div class="post-text" itemprop="text">
<p>try this</p>
<pre><code>A = [1,2,3,4,5,6]
half = len(A)//2
B = A[:half]
C = A[half:]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error message states that you should be using integers. Your division by 2 currently results in a float. You can cast it into an integer using <code>int()</code>:</p>
<pre><code>A = [1,2,3,4,5,6]
B = A[:int(len(A)/2)]
C = A[int(len(A)/2):]

print(B)
print(C)
</code></pre>
<p>Out:</p>
<pre><code>[1, 2, 3]
[4, 5, 6]
</code></pre>
</div>
<span class="comment-copy">Since you're using the half of the list twice it's always a good practice to save the result of the midway calc in a variable. It's way faster. Maybe this part of the code will be called thousands of times  inside a function inside a loop. But if this code will run only once or fewer times you can use the expression inside the list separator</span>
<span class="comment-copy">cast to int ? use <code>//</code></span>
<span class="comment-copy">@PatrickArtner Sure, I suppose thats more pythonic. To me the <code>int()</code> is a bit more explicit and clear, but I can see many people disagreeing with that. This answer will still work in cases where the <code>2</code> is provided externally (and might be <code>2.0</code>) instead of as a magic number. This will also work for a multiplication by <code>0.5</code> instead of division by <code>2</code>.</span>
