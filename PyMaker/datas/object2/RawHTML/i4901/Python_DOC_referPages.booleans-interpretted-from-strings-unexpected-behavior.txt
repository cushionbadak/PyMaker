<div class="post-text" itemprop="text">
<p>Can anyone explain this behaviour in Python (2.7 and 3)</p>
<pre><code>&gt;&gt;&gt; a = "Monday" and "tuesday"
&gt;&gt;&gt; a
'tuesday'             # I expected this to be True
&gt;&gt;&gt; a == True
False                 # I expected this to be True
&gt;&gt;&gt; a is True
False                 # I expected this to be True
&gt;&gt;&gt; a = "Monday" or "tuesday"
&gt;&gt;&gt; a
'Monday'              # I expected this to be True
&gt;&gt;&gt; a == True
False                 # I expected this to be True
&gt;&gt;&gt; a is True
False                 # I expected this to be True
</code></pre>
<p>I would expect that because I am using logic operators <code>and</code> and <code>or</code>, the statements would be evaluated as <code>a = bool("Monday") and bool("tuesday")</code>.</p>
<p>So what is happening here?</p>
</div>
<div class="post-text" itemprop="text">
<p>As explained <a href="https://stackoverflow.com/a/19213583/3512538">here</a> using <code>and / or</code> on strings will yield the following result:</p>
<ul>
<li><code>a or b</code> returns a if a is True, else returns b.</li>
<li><code>a and b</code> returns b if a is True, else returns a.</li>
</ul>
<p><em>This behavior is called <a href="https://en.wikipedia.org/wiki/Short-circuit_evaluation" rel="nofollow noreferrer">Short-circuit_evaluation</a> and it applies for both <code>and, or</code> as can be seen <a href="https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow noreferrer">here</a>.</em> </p>
<p>This explains why <code>a == 'tuesday'</code> in the <em>1st</em> case and <code>'Monday'</code> in the <em>2nd</em>.</p>
<p>As for checking <code>a == True</code>, <code>a is True</code>, using logical operators on strings yields a specific result (as explained in above), and it is not the same as <code>bool("some_string")</code>.</p>
</div>
<span class="comment-copy"><a href="https://www.geeksforgeeks.org/g-fact-43-logical-operators-on-string-in-python/" rel="nofollow noreferrer">geeksforgeeks.org/â€¦</a> this may help you</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/19213535/using-and-and-or-operator-with-python-strings">Using "and" and "or" operator with Python strings</a></span>
<span class="comment-copy">The <code>and</code> and <code>or</code> operators do not return <code>boolean</code> objects, they return either of their arguments (which could be anything)</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/2580136/does-python-support-short-circuiting">Does Python support short-circuiting?</a></span>
<span class="comment-copy">@juanpa.arrivillaga, it appears you are right. It just seems so unintuitive... To me, <code>and</code> and <code>or</code> are functions that take 2 <code>bools</code> and return a <code>bool</code>. But I guess I had the wrong intuition. Thanks!</span>
<span class="comment-copy">I expected the result of <code>"monday" and "tuesday"</code> to be a <code>bool</code>, In my mind (and I guess whoever wrote most of the other languages) <code>and</code> is an (overloaded) operator that returns a <code>bool</code>. Thanks for the explanation</span>
