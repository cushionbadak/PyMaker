<div class="post-text" itemprop="text">
<p>I've got a file that has a ton of text in it.  Some of it looks like this:</p>
<pre><code>X-DSPAM-Processed: Fri Jan  4 18:10:48 2008
X-DSPAM-Confidence: 0.6178
X-DSPAM-Probability: 0.0000

Details: http://source.sakaiproject.org/viewsvn/?view=rev&amp;rev=39771

Author: louis@media.berkeley.edu
Date: 2008-01-04 18:08:50 -0500 (Fri, 04 Jan 2008)
New Revision: 39771

Modified:
bspace/site-manage/sakai_2-4-x/site-manage-tool/tool/src/bundle/sitesetupgeneric.properties
bspace/site-manage/sakai_2-4-x/site-manage-tool/tool/src/java/org/sakaiproject/site/tool/SiteAction.java
Log:
BSP-1415 New (Guest) user Notification
</code></pre>
<p>I need to pull out only dates that follow this pattern:</p>
<p>2008-01-04 18:08:50 -0500</p>
<p>Here's what I tried:</p>
<pre><code>import re

text = open('mbox-short.txt')
for line in text:
    dates = re.compile('\d{4}(?P&lt;sep&gt;[-/])\d{2}(?P=sep)\d{2}\s\d{2}:\d{2}:]\d{2}\s[-/]\d{4}')
    print(dates)

text.close()
</code></pre>
<p>The return I got was hundreds of:</p>
<pre><code>\d{4}(?P&lt;sep&gt;[-/])\d{2}(?P=sep)\d{2}\s\d{2}:\d{2}:]\d{2}\s[-/]\d{4}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Two things:</p>
<p>First, the regex itself:</p>
<pre><code>regex = re.compile(r'\b\d{4}[-/]\d{2}[-/]\d{2}\s\d{2}:\d{2}:\d{2}\s[-+]\d{4}\b')
</code></pre>
<p>Secondly, you need to call <code>regex.findall(file)</code> where <code>file</code> is a string:</p>
<pre><code>&gt;&gt;&gt; regex.findall(file)
['2008-01-04 18:08:50 -0500']
</code></pre>
<p><a href="https://docs.python.org/3/howto/regex.html#using-regular-expressions" rel="nofollow noreferrer"><code>re.compile()</code> produces a compiled regular expression object</a>.  <code>findall</code> is one of several <em>methods</em> of this object that let you do the actual searching/matching/finding.</p>
<p>Lastly: you're currently using named capturing groups.  (<code>(?P&lt;sep&gt;[-/])</code>)  From your question, "I need to pull out only dates that follow this pattern," it doesn't seem like you need these.  You want to extract the entire expression, not capture the "separators," which is what capturing groups are designed for.</p>
<p>Full code block:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; regex = re.compile(r'\b\d{4}[-/]\d{2}[-/]\d{2}\s\d{2}:\d{2}:\d{2}\s[-+]\d{4}\b')
&gt;&gt;&gt; with open('mbox-short.txt') as f:
...     print(regex.findall(f.read()))
...     
['2008-01-04 18:08:50 -0500']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's another solution. </p>
<pre><code>import re
numberExtractRegex = re.compile(r'(\d\d\d\d[-]\d\d[-]\d\d\s\d\d[:]\d\d[:]\d\d\s[-]\d\d\d\d)')
print(numberExtractRegex.findall('Date: 2008-01-04 18:08:50 -0500 (Fri, 04 Jan 2008), Date: 2010-01-04 18:08:50 -0500 (Fri, 04 Jan 2010)'))
</code></pre>
</div>
<span class="comment-copy">re.compile only compiles pattern, to search use dates.search(line)</span>
<span class="comment-copy">That didn't seem to work, or I'm not sure what to replace.  I'm a beginner in programming, taking a Python class where they don't teach, they just have us "do."  I need the output to just be the date strings in a list.</span>
<span class="comment-copy">@ArchivistG. Do all such such dates appear on lines that begin with "Date:"? Because if they do, there is no need to use regexps at all: simple string manipulation is adequate.</span>
<span class="comment-copy">@ArchivistG. In fact, an even better solution would be to use the <a href="https://docs.python.org/3.6/library/mailbox.html#mbox" rel="nofollow noreferrer">mailbox</a> module, which can parse mbox files. No point trying to reinvent the wheel.</span>
<span class="comment-copy">Done.  Without asking another formal question, how can I print the outcome, but also store the result into a list for later use?</span>
<span class="comment-copy">Sure--if you want to just store it for use in the same Python session, just use <code>my_variable = regex.findall(f.read())</code>, because <code>findall()</code> returns a list.  To make it accessible in another session, check out the <a href="https://stackoverflow.com/questions/25464295/how-to-pickle-a-list">pickle module</a>.</span>
<span class="comment-copy">Allowing a minus sign or a <i>slash</i> before the time zone is almost certainly wrong. You want to allow plus or minus; <code>[-+]</code>. I realize you simply copied this from the OP's code but since this is now the accepted answer, it should probably correct this error, too.</span>
<span class="comment-copy">RFC5322 defines the <code>Date:</code> header format and a few more standard headers.</span>
<span class="comment-copy">The unidiomatic parts by themselves are not worth a downvote, but this regex only permits negative UTC offsets in the time zone. The use of character classes where they are not necessary should also dissuade anyone from trusting that this does what it's supposed to.</span>
