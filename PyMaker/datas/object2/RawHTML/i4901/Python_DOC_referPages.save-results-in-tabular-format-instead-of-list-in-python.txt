<div class="post-text" itemprop="text">
<p>I have a small ml model , based on the predictions it makes, I'm calculating its performance metrics and appending them to a list as follows:  </p>
<pre><code>results_to_save = [] 
results_to_save.append(('Filename:', required_filename,'Accuracy:',accuracy, 'Specificity:',specificity,'Precision',precision, 'Recall:',recall,'F-Score:',f_score)) 

with open('./metrics/results.txt', 'a') as outfile: 
    json.dump(results_to_save, outfile)   
    outfile.write("\n\n")    
    logger.info("SAVED METRICS ")    
</code></pre>
<p>So if the model predicts on three files, then the above code block gets executed thrice and 
the output from ^ ( is rather nasty) saves to txt file and it looks like this: </p>
<pre><code>[["Filename:", "ab", "Accuracy:", 0.6662763466042154, "Specificity:", 0.8047138047138047, "Precision", 0.7075630252100841, "Recall:", 0.5152998776009792, "F-Score:", 0.5963172804532577]]

[["Filename:", "abc", "Accuracy:", 0.9545746535743783, "Specificity:", 0.9743440233236151, "Precision", 0.5875, "Recall:", 0.6194398682042833, "F-Score:", 0.603047313552526]]

[["Filename:", "abcd", "Accuracy:", 0.8568113251334416, "Specificity:", 0.9985740767146728, "Precision", 0.9744245524296675, "Recall:", 0.23738317757009345, "F-Score:", 0.3817635270541082]]
</code></pre>
<p>So if I want to compare two such files, it is becoming very time consuming.  </p>
<p>Is there any way to save the results into a structured tabular form like an R dataframe or something, but in Python?<br/>
so that results would be saved in a more readable format like this: </p>
<pre><code>filename | param1 | param2 | param3 | param4 
...         ...       ...       ...      ...
...         ...       ...       ...      ...
</code></pre>
<p>i.e each row would belong to a particular file</p>
<p>thank you. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use Pandas, or the csv module, which will do this for you. And in fact for this, I'd recommend you use csv.<br/>
The more general answer though is that what you really want to do is format the string before you write it to the file. Something like this:</p>
<pre><code>with open(output_path, "w") as fh:
    for result in results:
        parts = [part.replace("|", "\|") for part in results]
        line = "|".join(parts)
        fh.write(line)  
</code></pre>
<p>This will take each of results, replace each escape each of the pipe characters (Always make you escape your separating characters), join the parts into one line, and then write that to the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Or you could write to a <a href="https://en.wikipedia.org/wiki/Tab-separated_values" rel="nofollow noreferrer">tab-separated values</a> (TSV) format without any modules. For example, like this:</p>
<pre><code>results_to_save = [] 
results_to_save.append(('Filename:', 'ab', 'Accuracy:', 0.6662763466042154, 'Specificity:', 0.8047138047138047, 'Precision', 0.7075630252100841, 'Recall:', 0.5152998776009792, 'F-Score:', 0.5963172804532577))
results_to_save.append(('Filename:', 'abc', 'Accuracy:', 0.9545746535743783, 'Specificity:', 0.9743440233236151, 'Precision', 0.5875, 'Recall:', 0.6194398682042833, 'F-Score:', 0.603047313552526))
results_to_save.append(('Filename:', 'abcd', 'Accuracy:', 0.8568113251334416, 'Specificity:', 0.9985740767146728, 'Precision', 0.9744245524296675, 'Recall:', 0.23738317757009345, 'F-Score:', 0.3817635270541082))

with open('./metrics/results.tsv', 'a') as outfile: 
    # Print the column headers
    first = results_to_save[0]
    keys = [first[i].rstrip(':') for i in range(0,len(first),2)]
    outfile.write('\t'.join(keys)+'\n')
    # Print data for each row
    for row in results_to_save:
        values = [row[i] for i in range(1,len(row),2)]
        outfile.write('\t'.join(map(str,values))+'\n')        
    logger.info("SAVED METRICS ") 
</code></pre>
</div>
<span class="comment-copy">You can use pandas.dataFrame in Python similar to dataframes in R. See: <a href="https://pandas.pydata.org/pandas-docs/stable/api.html#id4" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/api.html#id4</a></span>
<span class="comment-copy">You can use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module from the standard library, or use pandas to do this.</span>
<span class="comment-copy">thank you for the resources. I'll go through them now.</span>
<span class="comment-copy">sorry I should have clarified that I am not looking for the pipe '|' between column names, I just used it to show that the name + params would be distinct, basically I want the results saved one row at a time to the csv or text file, so that when comparing two text files it will be easier to get an idea.</span>
<span class="comment-copy">So swap the pipe for a tab character: <code>\t</code>. The principle is the same.</span>
