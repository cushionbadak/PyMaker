<div class="post-text" itemprop="text">
<p>I have a short but perhaps not simple question.</p>
<p>How would I format this code to avoid error?</p>
<pre><code>def __str__(self):
    return  "\nTeam name is " + 
            self.teamName + 
            "\nTheir regular season record was " + self.record +
            "\nTheir win streak is " + self.winStreak +
            "\nTheir scoring percentage is " +
             self.scoringPercentage +
            "\nTheir average rebounds are " + 
            self.rebounds +
            "\nTheir passing is " + self.passing +
            "\nTheir turnovers are " + self.turnovers
</code></pre>
<p>The IDLE gave a syntax error.</p>
</div>
<div class="post-text" itemprop="text">
<p>I didn't see an <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="nofollow noreferrer">fstring</a> example given yet (Python 3.6+):</p>
<pre><code>&gt;&gt;&gt; from textwrap import dedent
... 
... 
... class Hmm:
...     def __init__(self):
...         self.team_name = 'TEAM'
...         self.record = 'RECORD'
...         self.win_streak = 'WINSTREAK'
...         self.scoring_percentage = 'SCORING_PERCENTAGE'
...         self.passing = 'PASSING'
...         self.rebounds = 'REBOUNDS'
...         self.turnovers = 'TURNOVERS'
... 
...     def __str__(self):
...         return dedent(f"""
...             Team name is {self.team_name}
...             Their regular season record was {self.record}
...             Their win streak is {self.win_streak}
...             Their scoring percentage is {self.scoring_percentage}
...             Their average rebounds are {self.rebounds}
...             Their passing is {self.passing}
...             Their turnovers are {self.turnovers}""")
... 
&gt;&gt;&gt; print(Hmm())

Team name is TEAM
Their regular season record was RECORD
Their win streak is WINSTREAK
Their scoring percentage is SCORING_PERCENTAGE
Their average rebounds are REBOUNDS
Their passing is PASSING
Their turnovers are TURNOVERS
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>We should try to avoid using <code>+</code> operator with string as much as we can, since each <code>+</code> may create one intermediate string.
Use <code>"""</code> (double quote) or <code>'''</code> (single quote) for multiline string or use <code>\</code> for seperating them.</p>
<p>NOTE: <code>"""</code> and <code>'''</code> should be used with care otherwise it may print too many spaces in between two lines.</p>
<p>Use format or similar concepts to format the string.</p>
<pre><code>def __str__(self):
    return  "Team name is {0}\n"\
            "Their regular season record was {1}\n"\
            "Their win streak is {2}\n"\
            "heir scoring percentage is {3}\n"\
            "Their average rebounds are {4}\n"\
            "Their passing is {5}\n"\
            "Their turnovers are {6}".format( self.teamName,
            self.record, self.winStreak, 
            self.scoringPercentage,self.rebounds,
            self.passing, self.turnovers )
</code></pre>
<p>Use <code>"""</code></p>
<pre><code>def __str__(self):
        return  """Team name is {0}
Their regular season record was {1}
Their win streak is {2}
Their scoring percentage is {3}
Their average rebounds are {4}
Their passing is {5}
Their turnovers are {6}""".format( self.teamName,
self.record, self.winStreak, self.scoringPercentage, self.rebounds,self.passing, self.turnovers ) 
</code></pre>
<p>Use format with keyword arguments.           </p>
<pre><code>def __str__(self):
        return  """Team name is {name}
Their regular season record was {record}
Their win streak is {streak}
Their scoring percentage is {score}
Their average rebounds are {rebounds}
Their passing is {passing}
Their turnovers are {turnovers}""".format( name=self.teamName,
record=self.record, streak=self.winStreak, score=self.scoringPercentage,
rebounds=self.rebounds,passing=self.passing, turnovers=self.turnovers ) 
</code></pre>
<p>Use string format style like C/C++.</p>
<pre><code>    def __str__(self):
       return  """Team name is %s
Their regular season record was %.2f
Their win streak is %s
Their scoring percentage is %s
Their average rebounds are %s
Their passing is %s
Their turnovers are %s"""%( self.teamName,
   self.record, self.winStreak, self.scoringPercentage, 
   self.rebounds,self.passing, self.turnovers )
</code></pre>
<p><a href="https://ideone.com/xJ31fN" rel="nofollow noreferrer">https://ideone.com/xJ31fN</a></p>
</div>
<div class="post-text" itemprop="text">
<p>An option that works in Python 2 and 3 is to use the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">join()</a> function</p>
<pre><code>def __str__(self):
    out = ['\nTeam name is ' + self.teamName]
    out.append('Their regular season record was ' + self.record)
    out.append('Their win streak is ' + self.winStreak)
    out.append('Their scoring percentage is ' + self.scoringPercentage)
    out.append('Their average rebounds are ' + self.rebounds)
    out.append('Their passing is ' + self.passing)
    out.append('Their turnovers are ' + self.turnovers)
    return '\n'.join(out)
</code></pre>
</div>
<span class="comment-copy">Please format properly using the code directive.</span>
<span class="comment-copy">You did not say what error you are experiencing.</span>
<span class="comment-copy">Your <code>"""</code> example has each line starting with <code>"</code> and will be over-indented compared to the original. Also, isn't one of the points of multi-line strings in python to get rid of the newline characters at the end of the lines?</span>
<span class="comment-copy"><a href="http://pep8.org/#maximum-line-length" rel="nofollow noreferrer">"Long lines can be broken over multiple lines by wrapping expressions in parentheses. These should be used in preference to using a backslash for line continuation."</a></span>
<span class="comment-copy">All your triple-quote examples introduce a ton of whitespace and quotation marks into the string that shouldn't be there.</span>
<span class="comment-copy">@user2357112 you're right. But this is for illustration.</span>
<span class="comment-copy">@SonuKumar "Code without tests is broken by design"</span>
