<div class="post-text" itemprop="text">
<p>A program outputs a file with lines of the following format</p>
<pre><code>{Foo} Bar Bacon {Egg}
</code></pre>
<p>where <code>Foo</code> and <code>Egg</code> could, but do not have to, be made up of several words. <code>Bar</code> and <code>Bacon</code> always are a single word.</p>
<p>I need to get <code>Bar</code> in a variable for my further code. I imagine that this would work if I split the sting at a matching regular expression. This would return a list of the four elements and thus I could easily get out the second element with <code>list[1]</code>.</p>
<p>How would I write such a regular expression?</p>
<p>I need to split the sting on single spaces <code>' '</code>, but only if that single space is not surrounded by text in curly braces.</p>
<p><code>\s(?=[a-zA-Z{}])</code> gives me all the spaces and thus behaves exactly like <code>' '</code>. How can I exclude the spaces in the curly braces?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try <code>{[^}]*}\s(\w+)</code></p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; print re.search(r'{[^}]*}\s(\w+)', '{Foo} Bar Bacon {Egg}').group(1)
Bar
</code></pre>
<p><a href="https://regex101.com/r/NPJa6r/1/" rel="nofollow noreferrer">Demo</a></p>
<p>Explanation:</p>
<ul>
<li><code>{[^}]*}</code> first you match the first section inside curly braces</li>
<li><code>\s</code> then a whitespace</li>
<li><code>(\w+)</code> then the second section; you put it in a capturing group, so it's available in search results as <code>group(1)</code> </li>
</ul>
<blockquote>
<p><code>re.search(pattern, string, flags=0)</code></p>
<p>Scan through string looking for the first location where the regular expression pattern produces a match, and return a corresponding match object. Return None if no position in the string matches the pattern; note that this is different from finding a zero-length match at some point in the string.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#re.search</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This might help.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; line = '{Foo} Bar Bacon {Egg}'
&gt;&gt;&gt; m = re.search(r'}\s+(\S+)\s+', line)
&gt;&gt;&gt; m.group(1)
'Bar'
&gt;&gt;&gt; 
</code></pre>
<p>I just searched for any word that follows a close-brace. I used <code>()</code> to group that word so that I could access it later with <code>m.group()</code></p>
<p>If you really want all four elements, try <code>re.findall()</code>:</p>
<pre><code>&gt;&gt;&gt; line = '{Foo Goo} Bar Bacon {Egg Foo}'
&gt;&gt;&gt; re.findall(r'{.*?}|\S+', line)
['{Foo Goo}', 'Bar', 'Bacon', '{Egg Foo}']
</code></pre>
</div>
<span class="comment-copy">Try <code>re.search(r'(?&lt;=} )\S+', str).group()</code></span>
