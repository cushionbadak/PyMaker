<div class="post-text" itemprop="text">
<p>I have 3 lists :</p>
<pre><code>Names=["Jack","Jeni","Monsa","Mehus","Kuis","Tim","Tony","Yestgf","Pere"]
Years=[17,20,26,40,67,88,96,99,37]
Order=[1,2,3,4,5,6,7,8,9]
</code></pre>
<p>I'm trying to extract names from <code>Names</code> list using the order in <code>Order</code> list, it starts from Jack Jack and the 2nd set starts from Jeni Jeni (its not duplicate entry here , just to show that the entry starts from its own)</p>
<pre><code>Jack Jack
Jack Jeni
Jack Monsa
Jack Mehus
Jack Kuis
Jack Tim
Jack Tony
Jack Yestgf
Jack Pere
Jeni Jeni
Jeni Monsa
Jeni Mehus
Jeni Kuis
Jeni Tim
Jeni Tony
Jeni Yestgf
Jeni Pere
Jeni Jack 
</code></pre>
<p>I have written code as:</p>
<pre><code>Names=["Jack","Jeni","Monsa","Mehus","Kuis","Tim","Tony","Yestgf","Pere"]
Years=[17,20,26,40,67,88,96,99,37]
Order=[1,2,3,4,5,6,7,8,9]
for names,years,orders in zip(Names,Years,Order):
   for i in range(1,(len(Order)+1)):
       for j in range(i,i+len(Order)):
           jdisplay = Names[j % len(Order)] if (j % len(Order)) else Names[j]
           print(names,Names[j])
</code></pre>
<p>I am getting the following error:</p>
<pre><code>Traceback (most recent call last):
Jack Jeni
File "C:/Users/Administrator/PycharmProjects/Tesrt/forumsquestion.py", line 7, in &lt;module&gt;
Jack Monsa
Jack Mehus
Jack Kuis
Jack Tim
Jack Tony
Jack Yestgf
Jack Pere
jdisplay = Names[j % len(Order)] if (j % len(Order)) else Names[j]
IndexError: list index out of range

Process finished with exit code 1
</code></pre>
<p>I'm lost somewhere, is this right way of extracting the data from zipped lists?</p>
<p><strong>Update:</strong>
The code given by William Feirie is working fine, however the 4th level entry seems to be going weird </p>
<pre><code>Names=["Jack","Jeni","Monsa","Mehus","Kuis","Tim","Tony","Yestgf","Pere"]
Years=[17,20,26,40,67,88,96,99,37]
Order=[1,2,3,4,5,6,7,8,9]
print(len(Names),len(Years),len(Order))
for idx,name in enumerate(Names):
    for idx in range(idx,idx+len(Names)):
        for idy in range(idx,idx+len(Names)):
            for idz in range(idx,idx+len(Names)):
                print(name,Names[idx%len(Names)],Names[idy%len(Names)],Names[idz%len(Names)])
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Jack Jack Jack Jack
Jack Jack Jack Jeni
Jack Jack Jack Monsa
Jack Jack Jack Mehus
Jack Jack Jack Kuis
Jack Jack Jack Tim
Jack Jack Jack Tony
Jack Jack Jack Yestgf
Jack Jack Jack Pere
Jack Jack **Jeni Jack**
Jack Jack **Jeni Jeni**
</code></pre>
<p>The last 2 lines should be </p>
<pre><code>Jack Jack Jeni Jeni
Jack Jack Jeni Jack
</code></pre>
<p>But it is coming differently and from there on till the end this continues, anything missing in the code?</p>
</div>
<div class="post-text" itemprop="text">
<p>Are you looking for something like this?</p>
<pre><code>Names=["Jack","Jeni","Monsa","Mehus","Kuis","Tim","Tony","Yestgf","Pere"]
Years=[17,20,26,40,67,88,96,99,37]
Order=[1,2,3,4,5,6,7,8,9]
print(len(Names),len(Years),len(Order))
for idx,name in enumerate(Names):
    for idx in range(idx,idx+len(Names)):
        print(name,Names[idx%len(Names)])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Can you just use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations_with_replacement" rel="nofollow noreferrer"><code>itertools.combinations_with_replacement()</code></a>?</p>
<h3>Code:</h3>
<pre><code>Names = ["Jack", "Jeni", "Monsa", "Mehus", "Kuis", "Tim", "Tony", "Yestgf",
         "Pere"]
Years = [17, 20, 26, 40, 67, 88, 96, 99, 37]
Order = [1, 2, 3, 4, 5, 6, 7, 8, 9]

import itertools as it
for i in it.combinations_with_replacement(Names, 2):
    print(i)
</code></pre>
<h3>Results:</h3>
<pre><code>('Jack', 'Jack')
('Jack', 'Jeni')
('Jack', 'Monsa')
('Jack', 'Mehus')
('Jack', 'Kuis')
('Jack', 'Tim')
('Jack', 'Tony')
('Jack', 'Yestgf')
('Jack', 'Pere')
('Jeni', 'Jeni')
('Jeni', 'Monsa')
('Jeni', 'Mehus')
('Jeni', 'Kuis')
('Jeni', 'Tim')
('Jeni', 'Tony')
('Jeni', 'Yestgf')
('Jeni', 'Pere')
('Monsa', 'Monsa')
('Monsa', 'Mehus')
('Monsa', 'Kuis')
('Monsa', 'Tim')
('Monsa', 'Tony')
('Monsa', 'Yestgf')
('Monsa', 'Pere')
('Mehus', 'Mehus')
('Mehus', 'Kuis')
('Mehus', 'Tim')
('Mehus', 'Tony')
('Mehus', 'Yestgf')
('Mehus', 'Pere')
('Kuis', 'Kuis')
('Kuis', 'Tim')
('Kuis', 'Tony')
('Kuis', 'Yestgf')
('Kuis', 'Pere')
('Tim', 'Tim')
('Tim', 'Tony')
('Tim', 'Yestgf')
('Tim', 'Pere')
('Tony', 'Tony')
('Tony', 'Yestgf')
('Tony', 'Pere')
('Yestgf', 'Yestgf')
('Yestgf', 'Pere')
('Pere', 'Pere')
</code></pre>
</div>
<span class="comment-copy">Yes it is, we dont need to use zip to get this done? and what if i need to go to the next level of iteration</span>
<span class="comment-copy">This is the best solution for the question, thanks William Feirie. How can we use this for next level ? i.e Jack Jack Jack ,  Jack Jack Jeni , Jack Jack Monsa and so on</span>
<span class="comment-copy">I need this to follow an order as mentioned it starts from Jack Jack Jack Jeni Jack Monsa and the second set starts from Jeni Jeni Jeni Monsa and so on.</span>
<span class="comment-copy">The edited answer is fine, but it again misses an important part of not getting the last element right</span>
