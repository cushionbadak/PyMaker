<div class="post-text" itemprop="text">
<p>I have the need to accept a large string through a message broker (I am using RabbitMQ) and parse the string to figure out the details of the request. It would be very useful if I can do argparse-like processing on that string. Is there a way to do it or are there more elegant approaches to achieve this? My requirement is to do some detailed parsing of a string that looks like:</p>
<pre><code>&lt;module&gt; &lt;command&gt; &lt;command-specific-info&gt;
</code></pre>
<ul>
<li>module is a key-word from a pre-defined list of possible values.</li>
<li>command is a key-word from a pre-defined list of possible values for the chosen module</li>
<li>command-specific-info is a free-form text-input expressed as a sequence of comma-separated key=value pairs</li>
</ul>
<p>Example:</p>
<pre><code>news headlines keyword=trump, date=mm-dd-yyyy
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe something like this:</p>
<pre><code>In[2]: from argparse import ArgumentParser
  ...: 
  ...: parser = ArgumentParser()
  ...: parser.add_argument('module')
  ...: parser.add_argument('command')
  ...: parser.add_argument('--keyword')
  ...: parser.add_argument('--date')
  ...: 
  ...: example = 'news headlines keyword=trump, date=mm-dd-yyyy'
  ...: clean = []
  ...: for arg in example.split():
  ...:     if '=' in arg:
  ...:         clean.append('--{}'.format(arg.rstrip(',')))
  ...:     else:
  ...:         clean.append(arg)
  ...: 
  ...: args = parser.parse_args(clean)
In[3]: vars(args)
Out[3]: 
{'command': 'headlines',
 'date': 'mm-dd-yyyy',
 'keyword': 'trump',
 'module': 'news'}
</code></pre>
</div>
<span class="comment-copy">Yes, you can use <a href="https://docs.python.org/3/howto/argparse.html" rel="nofollow noreferrer">argparse</a></span>
<span class="comment-copy">You can pass a string to <code>parser.parse_args</code> in <code>argparse</code> instead of using the cmd line. Alternatively look at the <code>shlex</code> module.</span>
<span class="comment-copy">Delirious Lettuce, brilliant! Thanks a lot. Works exactly as I wanted. Will spend more time on ArgumentParser. Quick questions:  1. Is it possible to automatically generate a help string? 2. Is it possible to define a hierarchical structure for the parser instead of a flat-list of parameters?</span>
<span class="comment-copy">Thanks @"Delirious Lettuce". No rush....</span>
<span class="comment-copy">Hi Delirious Lettuce. Pls do send me the links that you were talking about - specifically, on nested structure as well as help-string generation. Thanks</span>
<span class="comment-copy">@DiscoveringJoyOfCodingAgain Sorry for the delay, I was just referring to the Python docs: <a href="https://docs.python.org/3/library/argparse.html#usage" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html#usage</a> and <a href="https://docs.python.org/3/library/argparse.html#sub-commands" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html#sub-commands</a>  You can just use <code>-h</code> and it will print the automated help message (or you can customize it) and I think sub-commands are what you meant by nested structure. Although <code>argparse</code> can accomplish these things quite well, you might want to look into <a href="http://click.pocoo.org/6/" rel="nofollow noreferrer"><code>click</code></a> as another option (if third-party is ok)</span>
<span class="comment-copy">Thanks DeliriousLettuce. The sub-commands section answers all my questions except one (prefer that to click because I am not that comfortable with decorators-based usage yet). I have not yet figured out (from the documentation) how to capture the help string in a string (that I can send in a message) instead of getting it printed</span>
