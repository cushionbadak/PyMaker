<div class="post-text" itemprop="text">
<p>Let's say we have a list list_a = [a,b,C,.,/,!,d,E,f,]</p>
<p>i want to append to a new list only the letters of the alphabet.</p>
<p>So the new list will be list_b = [a,b,C,d,E,f].
So far i have tried doing it like that way:</p>
<pre><code>list_b = []
for elements in list_a:
    try:
        if elements == str(elements):
            list_b.append(elements)
    except ValueError: #Catches the Error when the element is not a letter
        continue
</code></pre>
<p>However, when i print the list_b it has all the elements of list_a , it doesn't do the job i expected.
Any ideas ?</p>
<p>PS: comma in the specific example brings Error too.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import string
for item in list_a:
    if item in string.ascii_letters:
        list_b.append(item)
</code></pre>
<p>Also, check out the <a href="https://docs.python.org/3/library/string.html" rel="nofollow noreferrer">string</a> module. It has a lot of additional methods that can help you, should you wish to work with strings. Do note that this works only with ascii characters. If you want to check for every character in an alphabet, then you can via the <code>isalpha()</code> method, as the others have noted above.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/2/library/stdtypes.html#str.isalpha" rel="nofollow noreferrer"><code>.isalpha()</code></a> method of the string type.</p>
<pre><code>In [1]: list_a = ['a','b','C','.','/','!','d','E','f']

In [2]: list_b = [i for i in list_a if i.isalpha()]

In [3]: list_b
Out[3]: ['a', 'b', 'C', 'd', 'E', 'f']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try checking if the character is an alphabet by using the .isalpha() function.</p>
<pre><code>list_b = []
for elements in list_a:
   if elements.isalpha():
        list_b.append(elements)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are missing the fact that the str() function does not return the "str" elements you think it does, just an str representation of them. 
Try creating a list with you dictionary [a-zA-Z] (not very pythonic but simple to grasp) and check if your character exists in it.
I suggest writing your own code from scratch instead of copy/pasting, that is the only way to really understand the problem....</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, it is basically the same logic of using <code>isalpha()</code> method, but you can do this by using <code>filter</code>:</p>
<pre><code>list_a = ['a','b','C','.','/','!','d','E','f']

list_b = list(filter(lambda i: i.isalpha(), list_a))

print(list_b)
</code></pre>
<p>Output:</p>
<pre><code>['a', 'b', 'C', 'd', 'E', 'f']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>string</code> or <code>re</code> package to do this</p>
<pre><code>import re
new_list = [c for c in old_list if re.match(r'[a-zA-Z]', c)]
</code></pre>
<p>Or with <code>string</code></p>
<pre><code>import string
new_list = [c for c in old_list if c in string.ascii_letters]
</code></pre>
</div>
<span class="comment-copy">Does <a href="https://stackoverflow.com/questions/3640359/regular-expressions-search-in-list">this answer</a> help?</span>
<span class="comment-copy">Can you explain why you think this code would work? I'm not understanding your logic.</span>
<span class="comment-copy">Simple.If the element of the list is a letter/character it gets appended in a new list else the for loop goes on.What do you not understand ?</span>
<span class="comment-copy">I can't understand why you would think that <code>str('.')</code> does not equal <code>'.'</code>, or what would raise a ValueError.</span>
<span class="comment-copy">You are right.str( 3 ) is not equal ' 3 '.Allthough this works for numbers it doesn't works for commas , questionmarks etc.I am new to Pytho sorry..</span>
<span class="comment-copy">Sorry. Got confused with Java</span>
<span class="comment-copy">Thanks for letting me know my mistake.I will keep that in mind!</span>
<span class="comment-copy">This seems unnecessarily complex.</span>
<span class="comment-copy">@DanielRoseman They're single line statements with a single if test, I'm not sure how much simpler they can get.</span>
<span class="comment-copy">Why re? for such a small thing.</span>
<span class="comment-copy">stick to KISS rule</span>
<span class="comment-copy">Works fine.However kerk12's answer is much simpler and faster.Thanks anyway !</span>
