<div class="post-text" itemprop="text">
<p>Let's say I have a nested list like:</p>
<pre><code>my_list = [[1, 1, "c1"], [1, 2, "c1"], [5, 1, "c2"], [5, 2, "c2"], [6, 1, "c3"], [6, 2, "c3"], [2, 1, "c4"], [2, 2, "c4"], [3, 1, "c5"], [3, 2, "c5"], [4, 1, "c6"], [4, 2, "c6"]]
</code></pre>
<p>I also have another list holding the position based on which sorting is needed to be performed on each element of <code>my_list</code> list. Let's say it is defined as:</p>
<pre><code>ordering = [2, 1]
</code></pre>
<p>Now I want to sort list by multiple arguments. First, I want to sort by the list <code>ordering</code>, which should order the items in <code>ma_list</code> at index [1], and after that I want to sort by the items in list at index [0]. Summing up, what I want to have in the end is:</p>
<pre><code>list = [[1, 2, "c1"], [2, 2, "c4"], [3, 2, "c5"], [4, 2, "c6"], [5, 2, "c2"], [6, 2, "c3"], [[1, 1, "c1"], [2, 1, "c4"], [3, 1, "c5"], [4, 1, "c6"], [5, 1, "c2"], [6, 1, "c3"]
</code></pre>
<p>Is there any (preferable Pythonic) way to do this? Suggestions welcome!</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Using Lambda Expression</strong></p>
<p>You may use <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted()</code></a> function with the below lambda expression as <code>key</code> to achieve it:</p>
<pre><code>#             v  'i-1' since your `ordering` list is holding
#             v   position instead of `index`
lambda x: [x[i-1] for i in ordering]
</code></pre>
<p>This lambda expression will return list of values for each element in the <code>my_list</code> list based on the indexes present in the <code>ordering</code> list. Based on the returned list, sorting will be performed. </p>
<p>Sample Run:</p>
<pre><code>&gt;&gt;&gt; my_list = [[1, 1, "c1"], [1, 2, "c1"], [5, 1, "c2"], [5, 2, "c2"], [6, 1, "c3"], [6, 2, "c3"], [2, 1, "c4"], [2, 2, "c4"], [3, 1, "c5"], [3, 2, "c5"], [4, 1, "c6"], [4, 2, "c6"]]
&gt;&gt;&gt; ordering = [2, 1]

&gt;&gt;&gt; sorted(my_list, key=lambda x: [x[i-1] for i in ordering])
[[1, 1, 'c1'], [2, 1, 'c4'], [3, 1, 'c5'], [4, 1, 'c6'], [5, 1, 'c2'], [6, 1, 'c3'], [1, 2, 'c1'], [2, 2, 'c4'], [3, 2, 'c5'], [4, 2, 'c6'], [5, 2, 'c2'], [6, 2, 'c3']]
</code></pre>
<p><strong>Using <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter</code></a></strong></p>
<p>Even better to do it using <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter()</code></a> as:</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter

&gt;&gt;&gt; sorted(my_list, key=itemgetter(*[i-1 for i in ordering]))
[[1, 1, 'c1'], [2, 1, 'c4'], [3, 1, 'c5'], [4, 1, 'c6'], [5, 1, 'c2'], [6, 1, 'c3'], [1, 2, 'c1'], [2, 2, 'c4'], [3, 2, 'c5'], [4, 2, 'c6'], [5, 2, 'c2'], [6, 2, 'c3']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To sort based off of <code>ordering</code>, you can try this:</p>
<pre><code>l = [[1, 1, "c1"], [1, 2, "c1"], [5, 1, "c2"], [5, 2, "c2"], [6, 1, "c3"], [6, 2, "c3"], [2, 1, "c4"], [2, 2, "c4"], [3, 1, "c5"], [3, 2, "c5"], [4, 1, "c6"], [4, 2, "c6"]]
ordering = [2, 1]
new_l = sorted(l, key=lambda x:[x[ordering[0]-1], x[ordering[1]-1]])
</code></pre>
<p>Output:</p>
<pre><code>[[1, 1, 'c1'], [2, 1, 'c4'], [3, 1, 'c5'], [4, 1, 'c6'], [5, 1, 'c2'], [6, 1, 'c3'], [1, 2, 'c1'], [2, 2, 'c4'], [3, 2, 'c5'], [4, 2, 'c6'], [5, 2, 'c2'], [6, 2, 'c3']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use itemgetter from the operator module to construct the key for sorted.</p>
<pre><code>from operator import itemgetter
l =  [[1, 1, "c1"], [1, 2, "c1"], [5, 1, "c2"], [5, 2, "c2"], [6, 1, "c3"], [6, 2, "c3"], [2, 1, "c4"], [2, 2, "c4"], [3, 1, "c5"], [3, 2, "c5"], [4, 1, "c6"], [4, 2, "c6"]]
ordering = [1, 0]
new_l = sorted(l, key=itemgetter(*order))
</code></pre>
</div>
<span class="comment-copy">any tries yet ?</span>
<span class="comment-copy">Edited my question slightly. Answers do not yield desired output now.</span>
<span class="comment-copy">Do not respec questions after they got answers. You got several solutions for your first problem, now figure out how to adapt the answers to your new problem. If you can't, do reasearch and maybe create a new question. SO is no rapid code prototyping service that delivers solutions to your problem, <code>problem1</code>, <code>problem2</code>, <code>problem3</code>, <code>problem4</code> - for that, hire an agile team of coders.</span>
