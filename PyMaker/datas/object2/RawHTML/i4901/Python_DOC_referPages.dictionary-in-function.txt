<div class="post-text" itemprop="text">
<pre><code>def build_profile(first, last, **user_info):  

    profile = {}   
    profile['first_name'] = first 
    profile['last_name'] = last

    for key, value in user_info.items():
        profile[key] = value

    return profile

user_profile = build_profile('albert', 'einstein',
location='princeton',field='physics')
print(user_profile)
</code></pre>
<p>Hello guys! Just started studying python a week ago from the book "Python Crash Course", I have a little question about this program.</p>
<p>Why in the <code>build_profile</code> they write <code>location='princeton'</code> and not <code>'location' = 'princeton'</code></p>
</div>
<div class="post-text" itemprop="text">
<p>What is happening is <code>location</code> and <code>field</code> both become part of <code>**kwargs</code> or, in this case <code>**user_info</code>. <code>kwargs</code> stands for <code>keyword arguments</code> and thus Python recognizes that the user can enter a number of keyword parameters, and will happily accept them.</p>
<p>What is happening at a deeper level is a dictionary is passed to build profile that looks something like this:</p>
<pre><code>user_info = {'location':'princeton', 'field':'physics'}
</code></pre>
<p>This means that it is possible to pass a dictionary to any <code>**kwargs</code> argument. In the case of supplying keywords instead, Python will, in essence, build the dictionary automatically.</p>
</div>
<div class="post-text" itemprop="text">
<p>Those are not actually a dictionary that you are passing into your function, they are <a href="https://docs.python.org/3/tutorial/controlflow.html#keyword-arguments" rel="nofollow noreferrer">keyword arguments</a> which you can read about in the Python documentation linked.</p>
<p>Keyword arguments have a lot of uses which are too many to enumerate here.</p>
<p>In your function definition ** means (and some additional keyword arguments) which allows the user to provide any keyword arguments they want. Try adding <code>random_key="test"</code> for example</p>
</div>
<div class="post-text" itemprop="text">
<p>you should read up on this question 
<a href="https://stackoverflow.com/questions/1769403/understanding-kwargs-in-python">Understanding kwargs in Python</a> to understand what you are doing, but that **user_info is described as keyword argument (and is usually written as **kwargs). When calling that funciton, since it includes a **kwargs input, you can write in any additional fields you might want. Then, this function: <br/><code>
for key, value in user_info.items():
        profile[key] = value
</code></p>
<p>Creates those variables in the profile dict</p>
</div>
<span class="comment-copy">Because that's how Python syntax works for keyword arguments.</span>
