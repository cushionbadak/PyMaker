<div class="post-text" itemprop="text">
<p>I have a string that looks like this, </p>
<pre><code>b'2018-02-27 11:42:40:b\'{"EventID":"65605751","Priority":"Lav Emerg","PriorityColor":"16725041","SortLevel":"7","VStationID":"1002","accepted_flag":"0","ack":"0","bedid":"42","elapseTimeInSeconds":"9","eventTimedOut":"0","failedname":" ","iconindex":"7","location":"1021","operating_mode":"0","pfunction_id":"8","priority_hw_id":"7","priorityindex":"2"}\''
</code></pre>
<p>I would like to load this data into a dictionary that looks like this,</p>
<pre><code>{"EventID":"65605751","Priority":"Lav Emerg","PriorityColor":"16725041","SortLevel":"7","VStationID":"1002","accepted_flag":"0","ack":"0","bedid":"42","elapseTimeInSeconds":"9","eventTimedOut":"0","failedname":" ","iconindex":"7","location":"1021","operating_mode":"0","pfunction_id":"8","priority_hw_id":"7","priorityindex":"2"}
</code></pre>
<p>Can someone please tell me how to do this on Win7 Python 3.4? Please note that string length can be variable. But Date, time, '{ both in the beginning and end is going to be there for sure. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>ast.literal_eval</code>. This method assumes that the dictionary follows everything after and including the first occurrence of <code>{</code>.</p>
<pre><code>import ast

mystr = """2018-02-27 11:42:40:b'{"EventID":"65605751","Priority":"Lav Emerg","PriorityColor":"16725041","SortLevel":"7","VStationID":"1002","accepted_flag":"0","ack":"0","bedid":"42","elapseTimeInSeconds":"9","eventTimedOut":"0","failedname":" ","iconindex":"7","location":"1021","operating_mode":"0","pfunction_id":"8","priority_hw_id":"7","priorityindex":"2"}"""

ast.literal_eval(mystr[mystr.index('{'):])

# {'EventID': '65605751',
#  'Priority': 'Lav Emerg',
#  'PriorityColor': '16725041',
#  'SortLevel': '7',
#  'VStationID': '1002',
#  'accepted_flag': '0',
#  'ack': '0',
#  'bedid': '42',
#  'elapseTimeInSeconds': '9',
#  'eventTimedOut': '0',
#  'failedname': ' ',
#  'iconindex': '7',
#  'location': '1021',
#  'operating_mode': '0',
#  'pfunction_id': '8',
#  'priority_hw_id': '7',
#  'priorityindex': '2'}
</code></pre>
<p>For your second string:</p>
<pre><code>mystr = """b'2018-02-27 11:42:40:b\'{"EventID":"65605751","Priority":"Lav Emerg","PriorityColor":"16725041","SortLevel":"7","VStationID":"1002","accepted_flag":"0","ack":"0","bedid":"42","elapseTimeInSeconds":"9","eventTimedOut":"0","failedname":" ","iconindex":"7","location":"1021","operating_mode":"0","pfunction_id":"8","priority_hw_id":"7","priorityindex":"2"}\''"""

ast.literal_eval(mystr[mystr.index('{'):mystr.index('}')+1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that the leading date, time, and <code>:b'</code>, and the trailing <code>'</code> are always present in the string and are of constant size, then you could <a href="https://docs.python.org/3/reference/expressions.html#slicings" rel="nofollow noreferrer">slice</a> the string to extract the data. Then, assuming that the data is JSON, you can use the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json module</a> to decode the data into a dictionary.</p>
<pre><code>import json

s = '2018-02-27 11:42:40:b\'{"EventID":"65605751","Priority":"Lav Emerg","PriorityColor":"16725041","SortLevel":"7","VStationID":"1002","accepted_flag":"0","ack":"0","bedid":"42","elapseTimeInSeconds":"9","eventTimedOut":"0","failedname":" ","iconindex":"7","location":"1021","operating_mode":"0","pfunction_id":"8","priority_hw_id":"7","priorityindex":"2"}\''

print(json.loads(s[22:-1]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from pprint import pprint
str = """2018-02-27 11:42:40:b'{"EventID":"65605751","Priority":"Lav Emerg","PriorityColor":"16725041","SortLevel":"7","VStationID":"1002","accepted_flag":"0","ack":"0","bedid":"42","elapseTimeInSeconds":"9","eventTimedOut":"0","failedname":" ","iconindex":"7","location":"1021","operating_mode":"0","pfunction_id":"8","priority_hw_id":"7","priorityindex":"2"}'"""

mydict = json.loads(str[str.find('{'):1+str.find('}')])
mydict = {unicode(k).encode("utf-8"): unicode(v).encode("utf-8") for k,v in mydict.iteritems()}
pprint(mydict)
</code></pre>
<p><strong>Output</strong>:<br/></p>
<pre><code>{'EventID': '65605751',
 'Priority': 'Lav Emerg',
 'PriorityColor': '16725041',
 'SortLevel': '7',
 'VStationID': '1002',
 'accepted_flag': '0',
 'ack': '0',
 'bedid': '42',
 'elapseTimeInSeconds': '9',
 'eventTimedOut': '0',
 'failedname': ' ',
 'iconindex': '7',
 'location': '1021',
 'operating_mode': '0',
 'pfunction_id': '8',
 'priority_hw_id': '7',
 'priorityindex': '2'}
</code></pre>
</div>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regexps</a> to identify the <code>{...}</code> sequence and the json library to parse it in a dict.</span>
<span class="comment-copy">My string looks slightly different than what I mentioned on the post. I updated the post. Would you be able to tell me what needs to be changed in your code due to this?</span>
<span class="comment-copy">@usustarr, see update.</span>
