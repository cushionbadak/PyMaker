<div class="post-text" itemprop="text">
<p>I need to return the top 20 word counts. However, I'm only able to return the no.1 word count and not the rest.</p>
<pre><code>def print_top(all_text, top = 20):
    dict2 ={}
    word_d =  word_dict(all_text)
    items = sorted(word_d.items(), key=get_count, reverse=True)
    for amounts in items[:20]:
        dict2 = (amounts[0], amounts[1])
        return dict2 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/a/49045272/7505395">Rakeshs answer</a> shows you why yours only returns 1 result. </p>
<p>You can accomplish your task with a 1-liner using <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> and it's <a href="https://docs.python.org/3/library/collections.html#collections.Counter.most_common" rel="nofollow noreferrer"><code>most_common(n)</code> function</a>:</p>
<pre><code>dic = Counter(wordList).most_common(20)
</code></pre>
<p>Example:</p>
<pre><code>from collections import Counter
from pprint import pprint

data = """Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod 
tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos 
et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata 
sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing 
elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, 
sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita 
kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor 
sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore 
et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo 
dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum 
dolor sit amet.   

Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, 
vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio 
dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla 
facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy 
nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat."""

words = [x.strip(",.!?") for x in data.split() if x.rstrip()]

dic = Counter(words).most_common(20)

pprint(dic)
</code></pre>
<p>Output:</p>
<pre><code>[('et', 14),
 ('dolor', 8),
 ('Lorem', 7),
 ('ipsum', 7),
 ('sit', 7),
 ('amet', 7),
 ('sed', 7),
 ('diam', 7),
 ('dolore', 6),
 ('ut', 4),
 ('magna', 4),
 ('erat', 4),
 ('vero', 4),
 ('consetetur', 3),
 ('sadipscing', 3),
 ('elitr', 3),
 ('nonumy', 3),
 ('eirmod', 3),
 ('tempor', 3),
 ('invidunt', 3)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should help. Your return statement is inside the loop. so after the first element the value is returned. try the below snippet.</p>
<pre><code>def print_top(all_text, top = 20):
    word_d =  word_dict(all_text)
    items = sorted(word_d.items(), key=get_count, reverse=True)
    dict2 = {}  #Output Dict
    for amounts in items[:20]:
        dict2[amounts[0]] = amounts[1]
    return dict2  #-- &gt; Outside the loop
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's some dubious-looking Python code, which relies on a <code>Counter</code> class, about which I provide no details, to help solve this problem:</p>
<pre><code>def print_top(text1, top = 20):

    word_d =  word_dict(text1)

    items = sorted(word_d.items(), key=get_count, reverse=True)

    dict2 = {}  

    for amounts in items:
        dict2 = Counter(word_d).most_common(top)
    return dict2
</code></pre>
</div>
<span class="comment-copy">What does your input look like? What does your output look like now? How do you want it to look?</span>
