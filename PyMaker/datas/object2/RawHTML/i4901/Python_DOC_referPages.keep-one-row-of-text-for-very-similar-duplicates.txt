<div class="post-text" itemprop="text">
<p><strong>Goal</strong>: Keep one row for very similar "duplicates" </p>
<p><strong>Background</strong>:
The <code>df</code> below shows that  <code>ID</code> <code>0</code> and <code>ID</code> <code>1</code> are "duplicates" of each other (<code>"hey there https://abc"</code> and <code>"hey there https://efg"</code> ). The text is nearly identical except for the <code>abc</code> and <code>efg</code> at the ends of each.</p>
<pre><code>import pandas as pd    
df = pd.DataFrame(dict(ID=[1,2,3,4], Text=["hey there https://abc", "hey there https://efg", "hello", "hi"]))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>    ID  Text
0   1   hey there https://abc
1   2   hey there https://efg
2   3   hello
3   4   hi
</code></pre>
<p>I can drop duplicates using the following code:</p>
<pre><code>df.drop_duplicates(subset=['Text'], keep="first")
</code></pre>
<p>But since <code>ID</code> <code>1</code> and <code>ID</code> <code>2</code> aren't exact duplicates the code above will not work.</p>
<p><strong>Question</strong>: How do I get the following output?</p>
<pre><code>    ID Text
0   1   hey there https://abc
1   3   hello
2   4   hi
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am not entirely sure what you want to do but how about this:</p>
<pre><code>import pandas as pd
import numpy as np                                      
df = pd.DataFrame(dict(ID=[1,2,3,4], Text=["hey there https://abc", "hey there https://efg", "hello", "hi"]))

df['idx']=df['Text'].str.contains('hey there https://')
first=np.where(df['idx']==True)[0][0] 
rep=df['Text'].values[first] 
df['Text'][df['idx']]=rep
df.drop_duplicates(subset=['Text'], keep="first")
df.drop('idx',axis=1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>#convert column into list of strings
dfList = df['Text'].tolist()

output:
['hey there https://abc', 'hey there https://efg', 'hello', 'hi']


#split strings on https
split = [i.split('https:', 1)[0] for i in dfList]

output:
['hey there ', 'hey there ', 'hello', 'hi']



#put list back in df
df['Split_Text'] = split

output:

    ID  Text                    Split_Text
0   1   hey there https://abc   hey there
1   2   hey there https://efg   hey there
2   3   hello                   hello
3   4   hi                      hi


#keep one duplicate row
Nodup_df = df.drop_duplicates(subset=['Split_Text'], keep="first")


output:
    ID  Text                    Split_Text
0   1   hey there https://abc   hey there
2   3   hello                   hello
3   4   hi                      hi


#eliminate Split_Text column
Nodup_df.iloc[:, 0:2]

output:

    ID  Text
0   1   hey there https://abc
2   3   hello
3   4   hi
</code></pre>
</div>
<span class="comment-copy">You'd first have to define 'duplicates'. You can use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow noreferrer"><code>urllib.parse.urlparse</code></a> to parse website links, if needed.</span>
