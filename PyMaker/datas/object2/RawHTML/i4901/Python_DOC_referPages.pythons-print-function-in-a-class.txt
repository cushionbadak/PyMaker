<div class="post-text" itemprop="text">
<p>I can't execute <code>print</code> function in the class:</p>
<pre><code>#!/usr/bin/python
import sys

class MyClass:
    def print(self):
        print 'MyClass'

a = MyClass()
a.print()
</code></pre>
<p>I'm getting the following error:</p>
<pre><code>File "./start.py", line 9
    a.print()
          ^
SyntaxError: invalid syntax
</code></pre>
<p>Why is it happening?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, <code>print</code> is a <a href="https://docs.python.org/2/reference/lexical_analysis.html#keywords" rel="nofollow noreferrer">keyword</a>. It can only be used for its intended purpose. I can't be the name of a variable or a function.</p>
<p>In Python 3, <code>print</code> is a <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">built-in function</a>, not a keyword. So methods, for example, can have the name <code>print</code>.</p>
<p>If you are using Python 2 and want to override its default behavior, you can import Python 3's behavior from <a href="https://docs.python.org/2/reference/simple_stmts.html#future" rel="nofollow noreferrer"><code>__future__</code></a>:</p>
<pre><code>from __future__ import print_function
class MyClass:
    def print(self):
        print ('MyClass')

a = MyClass()
a.print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are using Python 2 (which you really shouldn't, unless you have a very good reason).</p>
<p>In Python 2, <code>print</code> is a statement, so <code>print</code> is actually a reserved word. Indeed, a SyntaxError <em>should</em> have been thrown when you tried to define a function with the name <code>print</code>, i.e.:</p>
<pre><code>In [1]: class MyClass:
   ...:     def print(self):
   ...:         print 'MyClass'
   ...:
   ...: a = MyClass()
   ...: a.print()
  File "&lt;ipython-input-1-15822827e600&gt;", line 2
    def print(self):
            ^
SyntaxError: invalid syntax
</code></pre>
<p>So, I'm curious as to what exact version of Python 2 you are using. the above output was from a Python 2.7.13 session...</p>
<p>So note, in Python 3:</p>
<pre><code>&gt;&gt;&gt; class A:
...    def print(self):
...       print('A')
...
&gt;&gt;&gt; A().print()
A
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I tried your code on Python 3 like this:</p>
<pre><code>class MyClass:
    def print(self):
        print ('MyClass')

a = MyClass()
a.print()
</code></pre>
<p>It worked !!</p>
<p>Output:</p>
<pre><code>MyClass
</code></pre>
<p>Running your code as is gives me Syntax Error. Because of missing parenthesis in print. Also, note that print is a reserved keyword in Python 2 but a built-in-function in Python 3.</p>
</div>
<span class="comment-copy">@erip It could be (in Python 2).</span>
<span class="comment-copy">print is a reserved word (at least in python2)</span>
<span class="comment-copy">What version of Python 2 are you using?</span>
<span class="comment-copy">That error is surprising. I'd have expected Python2 to have complained at <code>def print(self)</code>, as <code>print</code> is a reserved word, and Python3 to have complained at <code>print 'MyClass'</code> as in Python3 <code>print</code> is a function.</span>
<span class="comment-copy">@juanpa.arrivillaga - I just installed 2.7.12 (aside: <a href="https://github.com/pyenv/pyenv" rel="nofollow noreferrer">pyenv</a> rocks) and I get syntax error on line 5, <code>def print(self):</code>, as expected. I don't believe that OP's code gets OP's error message.</span>
<span class="comment-copy">On Python 3.5.2, it works even without <code>from __future__ import print_function</code></span>
<span class="comment-copy">Yes. Hopefully my recent edit makes that more clear.</span>
