<div class="post-text" itemprop="text">
<p>I've a pandas data frame which looks like below:</p>
<p><strong>S.No</strong>     <strong>Name1</strong>     <strong>Name2</strong>     <strong>Size</strong></p>
<p>1              ABC           XYZ            12</p>
<p>2              BCA           XCZ            15</p>
<p>3              DAB            ZXM            20</p>
<p>How do I make a hierarcial column for all unique values in Name1 column, followed by column with all unique values in Name2 , which would make the dataframe look like below:</p>
<p>                               ABC                              BCA                       DAB</p>
<p>S.NO
            XYZ  XCZ  ZXM      
XYZ  XCZ  ZXM      
XYZ  XCZ  ZXM</p>
<p>1                    12     N/A    N/A</p>
<p>2                                                     N/A    15     N/A</p>
<p>3                                                                                       N/A    N/A    20</p>
</div>
<div class="post-text" itemprop="text">
<p>Consider filling in empty rows with a <code>merge</code> on a helper dataframe which is created from unique cartesian product of values (all possible combinations of <em>S.No</em>, <em>Name1</em>, <em>Name2</em>) using <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a>:</p>
<pre><code>from io import StringIO
from itertools import product
import pandas as pd

txt = '''S.No    Name1     Name2     Size    
1           ABC         XYZ         12    
2           BCA         XCZ         15    
3           DAB         ZXM         20'''

df = pd.read_table(StringIO(txt), sep="\s+")

fill_df = pd.DataFrame(list(product(df['S.No'].unique(), df['Name1'].unique(), df['Name2'].unique())), 
                                    columns=['S.No', 'Name1', 'Name2'])

df = df.merge(fill_df, on=['S.No', 'Name1', 'Name2'], how='right')

pvtdf = df.pivot_table(index='S.No', columns=['Name1', 'Name2'], 
                       values='Size', aggfunc='max', dropna=False)\
                       .rename_axis([None, None], axis="columns")    
print(pvtdf)
#      ABC             BCA         DAB          
#      XCZ   XYZ ZXM   XCZ XYZ ZXM XCZ XYZ   ZXM
# S.No                                          
# 1    NaN  12.0 NaN   NaN NaN NaN NaN NaN   NaN
# 2    NaN   NaN NaN  15.0 NaN NaN NaN NaN   NaN
# 3    NaN   NaN NaN   NaN NaN NaN NaN NaN  20.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>.unstack</code> also to get the desired multiindex format.</p>
<p>Let's say <code>df</code> is your data frame. Do this:</p>
<pre><code>df = df.set_index(['S.No','Name1','Name2'])['Size'].unstack(level=-2).unstack(level=-1)
df.columns.names = [None, None]
df = df.reindex(columns=['XYZ', 'XCZ', 'ZXM'], level = 1)
df.fillna('', inplace=True) # if you want to replace NAs with blanks

print(df)

       ABC          BCA          DAB
       XYZ XCZ ZXM  XYZ XCZ ZXM  XYZ XCZ ZXM
S.No                                    
1      12                           
2                       15                  
3                                        20
</code></pre>
</div>
