<div class="post-text" itemprop="text">
<p>What can be the best to check if var is having str, unicode or None; but not anything else?</p>
<p>I tried with</p>
<pre><code>if not isinstance(ads['number'], (str, unicode, None)):
    ....
</code></pre>
<p>but got below exception:</p>
<pre><code>TypeError: isinstance() arg 2 must be a class, type, or tuple of classes and types
</code></pre>
<p>`</p>
</div>
<div class="post-text" itemprop="text">
<p>You have the right idea, but <a href="https://docs.python.org/3/library/constants.html#None" rel="nofollow noreferrer"><code>None</code></a> is not a class. It's type is <code>NoneType</code>, or alternatively <code>type(None)</code>. The latter works out of the box in both Python 2 and 3. The former requires an import: <code>from types import NoneType</code> and only works in Python 2.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can use</p>
<pre><code>if not isinstance(a, (str, unicode, type(None))):
    ....
</code></pre>
<p>and in python 2 (which you seem to be using) this also works:</p>
<pre><code>from types import NoneType
if not isinstance(a, (str, unicode, NoneType)):
    ....
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <strong>type</strong> to find the method and check that in a list</p>
<p><strong>Ex:</strong></p>
<pre><code>if type(None) in [str, unicode, type(None)]:
    print "ok"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In complement to the other answers (which are correct), I would add a comment on the <em>typology of cases</em> where one would need such a test.</p>
<h3>Distinguishing between a string and a scalar type</h3>
<p>If the question is distinguishing between a string and a number, then <strong>asking for forgiveness instead of permission</strong> works just as well:</p>
<pre><code>a = 1
try:
    b = a.upper()
except AttributeError:
    ...
</code></pre>
<p>Since that's the mindset of Python, it often makes things simpler, and <strong>it also takes care of the case where a is None</strong>. If one is trying to prevent such an error, then it might be easier to let it instead happen and then catch it. It could also be more reliable, because it could also take care of cases one had not thought of.</p>
<h3>Distinguishing between a string and other iterables</h3>
<p>One case where it won't work, however, is when one wants <strong>to distinguish between a string and a <em>list</em></strong> (several libraries do that with function arguments). The problem is that both a string and a list are iterables, so the string might happily run through the code for the list without any error... except that now you have your string cut into pieces of one character.</p>
<pre><code>&gt;&gt;&gt; for el in a: print(el.upper())
...
H
E
L
L
O
</code></pre>
<p>(And if the code fails, the error could be confusing.) To avoid that effect:</p>
<pre><code>a = "hello"
if isinstance(a, str):
    ...
else:
    ...
</code></pre>
<p>In my experience, it's the only case where it's really advisable to use a test with <code>isinstance(x, (str,...))</code>. I am curious to know whether someone knows others?</p>
</div>
<span class="comment-copy"><code>NameError: global name 'NoneType' is not defined</code> ... This is new error when I use <code>NoneType</code> ... but worked with <code>type(None)</code>  .... accepting ans.</span>
<span class="comment-copy">@Bhuro. You have to do <code>from types import NoneType</code>. I'll mention that.</span>
<span class="comment-copy">What about Python 3?</span>
<span class="comment-copy">@MadPhysicist the first version works in python 3. but <code>unicode</code> is not python 3, that's why i did not mention it explicitely.</span>
<span class="comment-copy">If the first option is working in both python 2 &amp; 3, why we should use an extra import for just python 2? Is there any specific advantage of <code>option 2 over option 1</code> for python 2 only? just for curiosity...</span>
<span class="comment-copy">@Bhuro <code>NoneType</code> just avoids a call to <code>type</code> which i prefer (if you mind the import you could also assign <code>NoneType = type(None)</code> to avoid the function call.</span>
<span class="comment-copy">None is not a type</span>
<span class="comment-copy">Worked ... Code consistency will be changed ..as I have used most of places with <code>isinstance</code> ... so any more possible solutions..</span>
<span class="comment-copy">Updated snippet to check None</span>
<span class="comment-copy"><code>if type(None)...</code>? You sure?</span>
<span class="comment-copy">He might be intended to use <code>var</code> and used <code>type(None)</code> instead in if condition.....</span>
<span class="comment-copy">Good one .... !</span>
