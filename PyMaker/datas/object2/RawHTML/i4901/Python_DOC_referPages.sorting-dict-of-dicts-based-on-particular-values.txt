<div class="post-text" itemprop="text">
<p>I do have a dict of ditcs; 
This needs to get sorted in a way FAIL group appears first in the dict followed by pass (even if there is one "FAIL" condition they should be grouped together).</p>
<p>To add more details
if I were to sort in alphabetical order of the values I would do like </p>
<pre><code>sorted_d1=collections.OrderedDict(d1.items(),lambda x:x[1])
</code></pre>
<p>but if I were to find for "FAIL" string in the values and group them, how am I supposed to do that? Kindly help on this</p>
<pre><code>d1 = 
{
    'test1':{'condition1':'PASS','condition2':'FAIL','condition3':'-'},
    'test2':{'condition1':'PASS','condition2':'PASS','condition3':'-'},
    'test3':{'condition1':'-'   ,'condition2':'PASS','condition3':'-'},
    'test4':{'condition1':'PASS','condition2':'-'   ,'condition3':'-'},
    'test5':{'condition1':'-'   ,'condition2':'FAIL','condition3':'-'},
    'test6':{'condition1':'FAIL','condition2':'PASS','condition3':'-'},
    'test7':{'condition1':'FAIL','condition2':'-'   ,'condition3':'-'}
}

sorted_d1 =  
{  
    'test1':{'condition1':'PASS','condition2':'**FAIL**','condition3':'-'},
    'test5':{'condition1':'-'   ,'condition2':'**FAIL**','condition3':'-'},
    'test6':{'condition1':'**FAIL**','condition2':'PASS','condition3':'-'},
    'test7':{'condition1':'**FAIL**','condition2':'-'   ,'condition3':'-'},
    'test2':{'condition1':'PASS','condition2':'PASS','condition3':'-'},
    'test3':{'condition1':'-'   ,'condition2':'PASS','condition3':'-'},
    'test4':{'condition1':'PASS','condition2':'-'   ,'condition3':'-'}
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not a big fan of ordering dicts, so here's a list of keys:</p>
<pre><code>result = []
for key, my_dict in d1.items():
    if 'FAIL' in my_dict.values():
        result.insert(0, key)
    else:
        result.append(key)

print(result)
</code></pre>
<p>The keys that contain 'FAIL' come first. Other than that, there's no particular order. If you need to differentiate between 'FAIL and not 'FAIL' and keep the original order (which is signified by the key, I assume), you could make two lists, one with 'FAIL' and one without and just sort those.</p>
</div>
<span class="comment-copy"><code>dicts</code> are unordered in <code>python2.7</code></span>
<span class="comment-copy">actually till python3.6 its unordered. In 3.7 its ordered</span>
<span class="comment-copy">Any references for ordered dict in 3.7? Otherwise there is a <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">OrderedDict</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/72899/how-do-i-sort-a-list-of-dictionaries-by-values-of-the-dictionary-in-python">How do I sort a list of dictionaries by values of the dictionary in Python?</a></span>
<span class="comment-copy">In a hurry I have badly presented the question .. Extremely sorry for that.. if I were to sort in alphabetical order of the values I would do like  sorted_d1=collections.OrderedDict(d1.items(),lambda x:x[1])  but if I were to grep for "FAIL" in the values and order it, how am I supposed to do that?</span>
<span class="comment-copy">cool thanks a lot. This was the thing I was looking for "'FAIL' in my_dict.values()". Since I'm a newbie in this I don't have the clarity in expressing my requirements. sorry for the obscurity in the problem statement @uwain12345</span>
