<div class="post-text" itemprop="text">
<p>So now I have a variable which is x = 1001.0010101</p>
<p>From this x, I wanna separate into two parts:</p>
<pre><code>x = 1001.0010101
val_int = int(x)                         #get val_int   = 1001
val_fract = {0:.5f}".format(a - val_int) #get val_fract = 0.00101
</code></pre>
<p>Is it possible to use for loop to iterate the val_fract to be like: (ignore the int part and decimal point)</p>
<pre><code>0 
0 
1 
0 
1
</code></pre>
<p>I have tried so many times and I couldn't get it done and the system told me </p>
<pre><code>Traceback (most recent call last):
  File "python", line 46, in &lt;module&gt;
TypeError: 'float' object is not iterable
</code></pre>
<p>Thanks for your help, much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>math</code> module in python to separate decimal and integer part</p>
<pre><code>import math 
x = 1001.0010101
math.modf(x)
#output:(0.0010101000000304339, 1001.0)
</code></pre>
<p>Iterate as you want</p>
<p>Have doubt about extra numbers in end of decimal read <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer">docs</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>x = 1001.0010101
x = "{0:.5f}".format(x)
for i in str(x).split(".")[1]:
    print(i)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>0
0
1
0
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't know, why you suggest in your comment that leading zeros are missing:</p>
<pre><code>x = 1001.0010101
#separate fractional from integer part
frac = str(x).split(".")

for digit in frac[1]:
    print(digit)
</code></pre>
<p>Alternatively, you can transform both parts into lists of integers:</p>
<pre><code>#integer digits
x_int = list(map(int, frac[0]))
#fractional digits
x_frac = list(map(int, frac[1]))
</code></pre>
</div>
<span class="comment-copy">You might want to convert the variable into a string object and then use regular expressions to get what you want.</span>
<span class="comment-copy">I just tried using a split method to separate two parts. However, the decimal part has not been fully split, what I meant is the second part would only take 10101 and **00**(these two zeros)10101 are missing.</span>
<span class="comment-copy">What is your code for the split appraoch, can you append it to your question?</span>
<span class="comment-copy">Can you explain more what this is for? It's an odd thing to be doing, and I suspect there's a better way to solve whatever the underlying problem is. Note that the value <code>1001.0010101</code> <i>can't be represented</i> in a Python <code>float</code>. The best you can get is <code>1001.001010100000030433875508606433868408203125</code> instead. Do you want to see all those digits in the fractional part? If not, what's your criterion for truncating them?</span>
<span class="comment-copy">Then you definitely shouldn't be storing <code>1001.0010101</code> in a Python <code>float</code>. You should be representing it as a string, not a number.</span>
<span class="comment-copy">This answer has not fulfilled my wish! Haha, it's ok I got something new! Thanks!</span>
<span class="comment-copy">Thanks! It worked fine!</span>
<span class="comment-copy">You are welcome. Please accept ans if it solved your problem. Thanks</span>
<span class="comment-copy">Thanks man! Works fine! Because I was just like converting the decimal part using  <code>num = 123.456 split_num = str(num).split('.') int_part = int(split_num[0]) decimal_part = int(split_num[1])</code> Please refer to <a href="https://stackoverflow.com/questions/6681743/splitting-a-number-into-the-integer-and-decimal-parts-in-python" title="splitting a number into the integer and decimal parts in python">stackoverflow.com/questions/6681743/â€¦</a> It just has its disadvantages using this method.</span>
