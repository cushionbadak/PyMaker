<div class="post-text" itemprop="text">
<p>Hi my conversion finished stops arriving on the client side once the code execution takes too long.</p>
<p>This works:</p>
<pre><code>@socketio.on('nifti_conversion')
def handle_message(message):
    elehelper.send_status({'code': 201, 'message':'conversion started!'})
    sleep(5)
    elehelper.send_status({'code': 202, 'message':'conversion finished!'})
</code></pre>
<p>while the following fails:</p>
<pre><code>@socketio.on('nifti_conversion')
def handle_message(message):
    elehelper.send_status({'code': 201, 'message':'conversion started!'})
    sleep(120)
    elehelper.send_status({'code': 202, 'message':'conversion finished!'})
</code></pre>
<p>also note that this works:</p>
<pre><code>@socketio.on('nifti_conversion')
def handle_message(message):
    elehelper.send_status({'code': 201, 'message':'conversion started!'})
    socketio.sleep(120)
    elehelper.send_status({'code': 202, 'message':'conversion finished!'})
</code></pre>
<p>First I expected some kind of timeout but the disconnect happened after varying times..so far I observed 90, 94, 100, 104 seconds.</p>
<p>On the client side the console looks like following.</p>
<p>Working 5 seconds case:
<a href="https://i.stack.imgur.com/WyDdu.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/WyDdu.png"/></a></p>
<p>Failing 120 seconds case:</p>
<p><a href="https://i.stack.imgur.com/oEitC.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/oEitC.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>There is ping_timeout parameter for <a href="https://flask-socketio.readthedocs.io/en/latest/" rel="nofollow noreferrer">SocketIO</a> that has default value 60 seconds. You can play with it to adjust wait time.</p>
<p>However for executing any long operations, it is recommended not to block current thread since it is blocking next requests.</p>
<p>Consider any of next approaches for your implementation:</p>
<ol>
<li>Async execution using threads or separate processes <a href="https://docs.python.org/3/library/concurrent.futures.html" rel="nofollow noreferrer">https://docs.python.org/3/library/concurrent.futures.html</a></li>
<li>Celery based background tasks <a href="http://flask.pocoo.org/docs/0.12/patterns/celery" rel="nofollow noreferrer">http://flask.pocoo.org/docs/0.12/patterns/celery</a></li>
<li>Asyncio's coroutine <a href="http://flask-aiohttp.readthedocs.io/en/latest/coroutine.html" rel="nofollow noreferrer">http://flask-aiohttp.readthedocs.io/en/latest/coroutine.html</a></li>
</ol>
</div>
<span class="comment-copy">Thank you this is extremely helpful. On what parameters should I base my choice for one of the three suggested approaches?  My application has only one client and is served on localhost so it would be acceptable if the thread is blocked as there are no further requests, but still it would be good to learn about these async approaches.</span>
<span class="comment-copy">Setting a higher timeout solved it!</span>
