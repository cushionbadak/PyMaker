<div class="post-text" itemprop="text">
<p>I read from <a href="https://stackoverflow.com/questions/11990105/rangelenlist-or-enumeratelist">range(len(list)) or enumerate(list)?</a> that using <code>range(len(s))</code> is not very good way to write Python. How one can write for loops in alternative way if we do not need to loop <code>len(s)</code> times but for example <code>len(s)//3</code> times or <code>len(s)-5</code> times? Is it possible to convert those loops to use <code>enumerate</code>?</p>
<p>For example, I had a project where I had a list of 3n elements 's[0], s[1],...,s[3n-1]' and I needed to print them in a nx3 table. I wrote the code something like</p>
<pre><code>for i in range(len(s)//3):
    row = str(s[3*i]) + " " + str(s[3*i+1]) + " " + str(s[3*i+2])
    print(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're iterating over an entire list:</p>
<pre><code>for x in lst:
    print(x)
</code></pre>
<p>If you're iterating over an entire list, but you only need the index:</p>
<pre><code>for i, _ in enumerate(lst):
    print(i)
</code></pre>
<p>If you're iterating over an entire list, but you don't need the index or the data:</p>
<pre><code>for _ in lst:
    print("hello")
</code></pre>
<p>If you're iterating over part of a list:</p>
<pre><code>for x in lst[:-5]:
    print(x)
</code></pre>
<p>And so on.</p>
<p>I'm not sure why you want to iterate over <em>part</em> of a list though, that seems strange.  I'd be interested to hear your use case, as it could probably be improved.</p>
<p>Looking over the code you've now posted, @Metareven has a good solution - iterating over the list in chunks of the size you want to process.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code doesn't look that bad, but if you want to iterate over 3 elements at a time I would make a for loop that increments the <code>i</code> variable by 3 instead of one, like so:</p>
<pre><code>for i in range(0,len(s),3):
  row = str(s[i]) + " " + str(s[i+1]) + " " + str(s[i+2])
  print(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seams you want to go through your collection with some sort of sliding window. In that case, I would suggest using <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer"><code>itertools.islice</code></a>.</p>
<pre><code>&gt;&gt;&gt; from itertools import islice
&gt;&gt;&gt; 
&gt;&gt;&gt; s = [i for i in range(10)] # Or whatever iterable you have
&gt;&gt;&gt; 
&gt;&gt;&gt; iter1 = islice(s, 1, None)
&gt;&gt;&gt; iter2 = islice(s, 2, None)
&gt;&gt;&gt; 
&gt;&gt;&gt; for a, b, c in zip(s, iter1, iter2):
...     print('[{}, {}, {}]'.format(a, b, c))
... 
[0, 1, 2]
[1, 2, 3]
[2, 3, 4]
[3, 4, 5]
[4, 5, 6]
[5, 6, 7]
[6, 7, 8]
[7, 8, 9]
</code></pre>
<p>If you don't mind making copies of your data, you could use the traditional slicing notation:</p>
<pre><code>&gt;&gt;&gt; s = [i for i in range(10)] # Again, this could be any iterable
&gt;&gt;&gt; 
&gt;&gt;&gt; for a, b, c in zip(s, s[1:], s[2:]):
...     print('[{}, {}, {}]'.format(a, b, c))
... 
[0, 1, 2]
[1, 2, 3]
[2, 3, 4]
[3, 4, 5]
[4, 5, 6]
[5, 6, 7]
[6, 7, 8]
[7, 8, 9]
</code></pre>
</div>
<span class="comment-copy">Can you give a more concrete example of exactly what you want to do?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/11901081/only-index-needed-enumerate-or-xrange">Only index needed: enumerate or (x)range?</a></span>
<span class="comment-copy">Not quite a duplicate, as this question also asks about iterating over <i>part</i> of a list.</span>
<span class="comment-copy">"using <code>range(len(s))</code> is not very good way to write Python" not sure where you got that idea, from that question or otherwise. It is perfectly ok Python. What is not advised is to iterate over indices and then get the element within the loop; then <code>enumerate</code> is preferred.</span>
<span class="comment-copy">@user2219896 Yes, so the point is that you <i>generally</i> don't want to use <code>range(len(l))</code> when you want to iterate <b>the elements</b> of a list (although there may still be cases where it makes sense). But if you only want to iterate through a sequence of numbers, be it up to <code>len(l)</code> or any other number, it is the right way to do it (in fact, it is the very purpose of <code>range</code>/<code>xrange</code>). Imo using <code>enumerate</code> in that case and ignoring the list element is unnecessary and, most importantly, slightly less explicit about the fact that you are <i>not</i> using the list element.</span>
