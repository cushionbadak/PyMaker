<div class="post-text" itemprop="text">
<p>How can I remove the <code>data</code> key from this dictionary and convert it to this
using a python function recursively?</p>
<pre><code>request = {"data":{"a":[{"data": {"b": {"data": {"c": "d"}}}}]}}

response = {"a": [{"b":{"c": "d"}}]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can do this recursively, if all you have is lists and dictionaries, then that is pretty trivial. Test for the object type, and for containers, recurse:</p>
<pre><code>def unwrap_data(obj):
    if isinstance(obj, dict):
        if 'data' in obj:
            obj = obj['data']
        return {key: unwrap_data(value) for key, value in obj.items()}

    if isinstance(obj, list):
        return [unwrap_data(value) for value in obj]

    return obj
</code></pre>
<p>Personally, I like using <a href="https://docs.python.org/3/library/functools.html#functools.singledispatch" rel="nofollow noreferrer">the <code>@functools.singledispatch()</code> decorator</a> to create per-type functions to do the same work:</p>
<pre><code>from functools import singledispatch

@singledispatch
def unwrap_data(obj):
    return obj

@unwrap_data.register(dict)
def _handle_dict(obj):
    if 'data' in obj:
        obj = obj['data']
    return {key: unwrap_data(value) for key, value in obj.items()}

@unwrap_data.register(list)
def _handle_list(obj):
    return [unwrap_data(value) for value in obj]
</code></pre>
<p>This makes it a little easier to add additional types to handle later on.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; request = {"data":{"a":[{"data": {"b": {"data": {"c": "d"}}}}]}}
&gt;&gt;&gt; unwrap_data(request)
{'a': [{'b': {'c': 'd'}}]}
</code></pre>
</div>
<span class="comment-copy">Can you please show us what you have tried so far and why is not working so we can help you?</span>
<span class="comment-copy">Your description has problem, what if there is a "data" key but also another key, how to do for this level ?</span>
<span class="comment-copy">I would need to ignore other keys, I am only concerned with "data" key and its value types are either list or dict.</span>
