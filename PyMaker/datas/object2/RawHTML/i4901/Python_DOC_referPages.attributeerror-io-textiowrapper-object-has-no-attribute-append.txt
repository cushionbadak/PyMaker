<div class="post-text" itemprop="text">
<h1>print to ask user for their name</h1>
<pre><code>name = input("what is your name ")

file_name = str(input("What do you want to name this .txt file\n&gt; "))
if file_name[-4:] != ".txt":
    file_name += ".txt"
</code></pre>
<h1>greet them</h1>
<p>asking for there name and employee names</p>
<pre><code>print("Why hello",name,"now lets caculate that employee's next pay check")
def employees():
    emplist = []
    while True:
        names = input('What is the name of the employee')
        if names == 'done':
            break
        else:
            emplist += [names]
            print(emplist)
    pay(emplist)
</code></pre>
<h1>ask for hourly pay</h1>
<pre><code>    def pay(emplist):


for person in emplist:
        print("now i need hourly pay of",person,)
        pay = float(input("&gt; "))
</code></pre>
<h1>ask for the hours they worked</h1>
<pre><code>print("now i need the hours worked by",person,)
    hours = float(input("&gt; "))
</code></pre>
<h1>calculate the pay</h1>
<p>doing math</p>
<pre><code>if hours &gt; 40:
        over = 1.50
        overtimeR = over * pay
        overtime = overtimeR * (hours-40)
        hours += 40
    else:
        overtime = 0
</code></pre>
<h1>make them different responses</h1>
<p>not complete yet</p>
<pre><code>if overtime &gt; 0:
        hours2 = 40
        totalpay = (pay * hours2) + overtime
        pay_without_overtime = pay * hours2

else:
    totalpay = (pay * hours) + overtime

person_2 = ""

person_2 += person

info = ("Employee: "+str(person_2)+"\nTotal Hours: "+str(hours))




with open(file_name, 'a+')as file_data_2:
    file_data_2.append(info)





employees()
</code></pre>
<h1>But IT gives me error</h1>
<p>how do i fix this</p>
<pre><code>AttributeError: '_io.TextIOWrapper' object has no attribute 'append'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you open a file with <code>with open(file_name, 'a+') as file_data_2:</code> the variable <code>file_data_2</code> becomes an instance of a class <a href="https://docs.python.org/3/library/io.html#io.TextIOWrapper" rel="nofollow noreferrer">_io.TextIOWrapper</a> which indeed does not have such attribute. If you want to see what attributes/methods are available for any variable that you create you can easily do that in the interactive mode of Python. Open terminal, run your Python (Python 3 in my case):</p>
<pre><code>$ python3
</code></pre>
<p>First, open your file and store it in a variable similarly to what you did in your code:</p>
<pre><code>&gt;&gt;&gt; file = open("sample.txt", 'a+')
</code></pre>
<p>The variable <code>file</code> is now an instance of the <code>_io.TextIOWrapper</code> class. You can check the available methods for the class with the command:</p>
<pre><code>&gt;&gt;&gt; dir(file)
</code></pre>
<p>And this is the output:</p>
<pre><code>['_CHUNK_SIZE', '__class__', '__del__', '__delattr__', '__dict__', 
'__dir__', '__doc__', '__enter__', '__eq__', '__exit__', '__format__', 
'__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', 
'__init__', '__iter__', '__le__', '__lt__', '__ne__', '__new__', 
'__next__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', 
'__sizeof__', '__str__', '__subclasshook__', '_checkClosed', 
'_checkReadable', '_checkSeekable', '_checkWritable', '_finalizing', 
'buffer', 'close', 'closed', 'detach', 'encoding', 'errors', 'fileno', 
'flush', 'isatty', 'line_buffering', 'mode', 'name', 'newlines', 
'read', 'readable', 'readline', 'readlines', 'seek', 'seekable', 
'tell', 'truncate', 'writable', 'write', 'writelines']
</code></pre>
<p>As you see, there is no 'append' method. However, there is 'write' and I suppose that is what you need.</p>
</div>
<span class="comment-copy">You don't <code>append</code> to a file. You <code>write</code> to it. See <a href="https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/2/tutorial/â€¦</a> for more details.</span>
