<div class="post-text" itemprop="text">
<p>Basically I have a list where each element is a series and the list is arbitrarily long. I would like to know how to iterate through the list in such a way that I can create a variable <code>matches = listerino[0] | listerino[1] | ... | listerino[len(listerino)]</code>.</p>
<p>So far the closest I have come to anything like the above is:</p>
<pre><code>matches = pd.Series()       
for t in range(0, len(listerino)-1, 2):
      x = listerino[t] | listerino[t+1]
      matches = matches | x
</code></pre>
<p>However, as you can probably see, this will only work the way I want it for an even length list as it misses off the last element for odd length lists. Also, I've had to messily define matches to first be equal to an empty series and then append on x, is there a better way of doing this? </p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>This operation you're trying to perform is commonly called a "reduction", and can be done with <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>functools.reduce</code></a>:</p>
<pre><code>import functools
import operator

matches = functools.reduce(operator.or_, listerino)
</code></pre>
<p>The <a href="https://docs.python.org/3/library/operator.html" rel="nofollow noreferrer"><code>operator</code> module</a> conveniently defines the <a href="https://docs.python.org/3.5/library/operator.html#operator.or_" rel="nofollow noreferrer"><code>operator.or_</code></a> function, which takes two inputs and returns <code>x | y</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Why not use the <code>|=</code> operator?</p>
<pre><code>matches = None
for series in listerino:
    # base case:
    if matches is None:
        matches = series
    else:
        matches |= series
</code></pre>
<p>This is equivalent to <code>matches = matches | series</code></p>
</div>
<span class="comment-copy">Yes thanks, this works well too</span>
