<div class="post-text" itemprop="text">
<p>How can I remove all the empty rows from my printed text using BS and Python?
I'm still new, I think what I'm talking about maybe called whitespace? </p>
<p>Current output:</p>
<pre><code>02:00 - 05:00 NHL: Columbus Blue Jackets at San Jose Sharks

 - Channel 60







02:30 - 04:30 NCAAB: Quinnipiac vs Fairfield

 - Channel 04







03:00 - 05:00 MLS: Portland Timbers at Los Angeles Galaxy

 - Channel 05
</code></pre>
<p>Desired Output:</p>
<pre><code>02:00 - 05:00 NHL: Columbus Blue Jackets at San Jose Sharks - Channel 60
02:30 - 04:30 NCAAB: Quinnipiac vs Fairfield - Channel 04 
03:00 - 05:00 MLS: Portland Timbers at Los Angeles Galaxy - Channel 05
</code></pre>
<p>Code: </p>
<pre><code>import urllib, urllib2, re, HTMLParser, os
from bs4 import BeautifulSoup
import os

pg_source = ''
req = urllib2.Request('http://rushmore.tv/schedule')
req.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36')

try:
    response = urllib2.urlopen(req)
    pg_source = response.read().decode('utf-8' , 'ignore')
    response.close()
except:
    pass

content = []
soup = BeautifulSoup(pg_source)
content = BeautifulSoup(soup.find('ul', { 'id' : 'myUL' }).prettify())

print (content.text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With a bit of <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>, <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>.split()</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>.strip()</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>.join()</code></a> you can build that output like:</p>
<h3>Code:</h3>
<pre><code>text = [l.strip() for l in content.text.split('\n') if l.strip()]
print('\n'.join(' '.join(l) for l in zip(text[::2], text[1::2])))
</code></pre>
<h3>Test Code:</h3>
<pre><code>import urllib, urllib2, re, HTMLParser, os
from bs4 import BeautifulSoup
import os

pg_source = ''
req = urllib2.Request('http://rushmore.tv/schedule')
req.add_header('User-Agent',
               'Mozilla/5.0 (Windows NT 6.3) AppleWebKit/537.36 '
               '(KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36')

try:
    response = urllib2.urlopen(req)
    pg_source = response.read().decode('utf-8', 'ignore')
    response.close()
except:
    pass

content = []
soup = BeautifulSoup(pg_source)
content = BeautifulSoup(soup.find('ul', {'id': 'myUL'}).prettify())

text = [l.strip() for l in content.text.split('\n') if l.strip()]
print('\n'.join(' '.join(l) for l in zip(text[::2], text[1::2])))
</code></pre>
<h3>Results:</h3>
<pre><code>21:00 - 23:00 NCAAB:    Pepperdine vs Saint Mary's - Channel 03
21:30 - 00:00 AFL: Gold Coast vs. Geelong - Channel 47
22:00 - 00:00 A-League: Western Sydney Wanderers vs Perth Glory - BT Sport 1
22:45 - 03:00 Ski Classic: Mora - Channel 93
23:00 - 00:30 Freestyle Skiing WC: Ski Cross - Channel 106
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A very easy way to achieve the same results but less code is using requests module.</p>
<p>Here is the code.</p>
<pre><code>import requests
from bs4 import BeautifulSoup

html = requests.get('http://rushmore.tv/schedule').text

soup = BeautifulSoup(html,'lxml')

ul = soup.find('ul', { 'id' : 'myUL' })

for content in ul.find_all('li'):
    print(content.text)
</code></pre>
<p>Just try this. It's working fine with me.</p>
</div>
<span class="comment-copy">Use strip() function with string</span>
<span class="comment-copy">That works for me, but is there an alternative to the print method? As when I'm printing this I do not use the print funtion. I am using xbmc.gui and to print using that I have to print the string.</span>
<span class="comment-copy"><code>print</code> is but a function that takes a string.  You can do anything you want with that string.</span>
<span class="comment-copy">But the print on this includes "('\n'.join(' '.join(l) for l in zip(text[::2], text[1::2])))" How could I change that to something more simple like "print (string)"  I will not be using the print function as I will be using this script on kodi and need to supply a simple string. Sorry for my ignorance, I'm still new to Python. Thanks.</span>
<span class="comment-copy">Everything between the <code>()</code> of the print function builds a string.  You can simply assign that to a variable. like: <code>mystring = "\n".joi....</code></span>
<span class="comment-copy">That's very kind of you, it would be perfect but Kodi does not use lxml (asthis script will be used in Kodi). I'm reading of ElementTree. Do you know if i would be able to use that instead of lxml? Thank you.</span>
<span class="comment-copy">Ok, so I have used html.parser instead. I am now facing a problem on Kodi that I need to now fix.</span>
