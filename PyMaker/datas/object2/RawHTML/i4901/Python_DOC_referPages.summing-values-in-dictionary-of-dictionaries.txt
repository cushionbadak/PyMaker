<div class="post-text" itemprop="text">
<p>I got something like this:</p>
<pre><code>&gt; d1 = {'System tests': {'failed': 5, 'passed': 0, 'total': 5},
       'Func tests': {'failed': 5, 'passed': 0, 'total': 5}}

&gt; d2 = {'System tests': {'failed': 1, 'passed': 1, 'total': 2}, 
        'Func tests': {'failed': 3, 'passed': 2, 'total': 5}}

&gt; d3 = {'System tests': {'failed': 0, 'passed': 0, 'total': 0}, 
        'Func tests': {'failed': 1, 'passed': 0, 'total': 1}}
</code></pre>
<p>I would like to sum values 'failed', passed and total into one dictionary</p>
<p>so the output should be like this:</p>
<pre><code>d4 = {'System tests': {'failed': 6, 'passed': 1, 'total': 7}, 
       'Func tests': {'failed': 9, 'passed': 2, 'total': 11}
</code></pre>
<p>What is the easiest solution to do such thing?</p>
<p><strong>I can use basic libraries, except collections.</strong></p>
<p>The solution must be generic, for example if some other dictionaries would appear in the future</p>
</div>
<div class="post-text" itemprop="text">
<p>This will give you the output you are looking for, with no libraries.</p>
<pre><code>d4 = {}

for d in d1, d2, d3:
    for test, results in d.items():
        if test not in d4:
            d4[test] = {}
        for key, value in results.items():
            if key in d4[test]:
                d4[test][key] += value
            else:
                d4[test][key] = value
</code></pre>
<p>Result:</p>
<pre><code>{'System tests': {'failed': 6, 'passed': 1, 'total': 7}, 'Func tests': {'failed': 9, 'passed': 2, 'total': 11}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>input:</p>
<pre><code>d1 = {'a': 100, 'b': 200, 'c':300}
d2 = {'a': 300, 'b': 200, 'd':400}
d = {k : d1.get(k, 0) + d2.get(k,0) for k in set(d1.keys()) | set(d2.keys())}
</code></pre>
<p>Output:</p>
<pre><code>{'a': 400, 'b': 400, 'c': 300, 'd': 400}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> and <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> that is fairly straight forward like:</p>
<h3>Code:</h3>
<pre><code>d4 = defaultdict(Counter)
for d in d1, d2, d3:
    for k, subd in d.items():
        d4[k].update(subd)
</code></pre>
<h3>Test Code:</h3>
<pre><code>d1 = {'System tests': {'failed': 5, 'passed': 0, 'total': 5},
        'Func tests': {'failed': 5, 'passed': 0, 'total': 5}}

d2 = {'System tests': {'failed': 1, 'passed': 1, 'total': 2},
        'Func tests': {'failed': 3, 'passed': 2, 'total': 5}}

d3 = {'System tests': {'failed': 0, 'passed': 0, 'total': 0},
        'Func tests': {'failed': 1, 'passed': 0, 'total': 1}}

from collections import Counter, defaultdict

d4 = defaultdict(Counter)
for d in d1, d2, d3:
    for k, subd in d.items():
        d4[k].update(subd)
print(d4)
</code></pre>
<h3>Results:</h3>
<pre><code>defaultdict(&lt;class 'collections.Counter'&gt;, {
    'System tests': Counter({'total': 7, 'failed': 6, 'passed': 1}), 
    'Func tests': Counter({'total': 11, 'failed': 9, 'passed': 2})
})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you cannot use <code>collections.Counter</code>, another solution is to use <code>reduce</code></p>
<pre><code>from functools import reduce # reduce was moved here in Python3

def add_dicts(dict_list):

    def add(fst, snd):
        return {k: fst[k] + snd[k] for k in fst}

    return reduce(add, dict_list[1:], dict_list[0])
</code></pre>
<p>Using this in your code would look like this.</p>
<pre><code>dict_list = [d1, d2, d3]

d4 = {}

for k in dict_list[0]:
    d4[k] = add_dicts([d[k] for d in dict_list])
</code></pre>
<p>Although, this assumes all your <code>dict</code> are correctly formated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>zip</code> along with <code>dict.items</code>:</p>
<pre><code>d1 = {'System tests': {'failed': 5, 'passed': 0, 'total': 5},
   'Func tests': {'failed': 5, 'passed': 0, 'total': 5}}
d2 = {'System tests': {'failed': 1, 'passed': 1, 'total': 2}, 
    'Func tests': {'failed': 3, 'passed': 2, 'total': 5}}
d3 = {'System tests': {'failed': 0, 'passed': 0, 'total': 0}, 
    'Func tests': {'failed': 1, 'passed': 0, 'total': 1}}

def combine_dicts(*d):
   return {a:{i:sum(h[i] for h in [b, c, d]) for i in ['failed', 'passed', 'total']} for [a, b], [_, c], [_, d] in zip(*d)}

print(combine_dicts(d1.items(), d2.items(), d3.items()))
</code></pre>
<p>Output:</p>
<pre><code>{'System tests': {'failed': 6, 'total': 7, 'passed': 1}, 'Func tests': {'failed': 9, 'total': 11, 'passed': 2}}
</code></pre>
</div>
<span class="comment-copy">welcome to stackoverflow! please take the <a href="http://stackoverflow.com/tour">tour</a>, read up on <a href="https://stackoverflow.com/help/asking">how to ask a question</a> and provide a <a href="https://stackoverflow.com/help/mcve">minimal, complete and verifiable example</a> that reproduces your problem.</span>
<span class="comment-copy">That is exactly what I needed!</span>
<span class="comment-copy">I cant use 'Counter' and 'defaultdict. Only basic libraries..</span>
