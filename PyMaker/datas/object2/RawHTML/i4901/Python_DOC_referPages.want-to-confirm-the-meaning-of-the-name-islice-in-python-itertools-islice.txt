<div class="post-text" itemprop="text">
<p>I'm new in Python and I'm not an English native speaker. Today I learned some functions in the itertools module. There is a function called islice. Does it stand for <code>infinitive slice</code>? As I understand it can be used to slice infinitive sequence of objects and is commonly used with <code>itertools.count()</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>I presume it stands for "iterable slice", since it takes the same arguments as the <code>slice</code> built-in but generates a sequence of results rather than returning a list.</p>
<p>You may be suffering from some slight misunderstanding of "infinitive," which is a part of speech (in English, "to fall" is the infinitive of the verb "fall"). You perhaps mean "infinite," which is never-ending or uncountable.</p>
<p>If so, you have correctly observed that one advantage of the functions in <code>itertools</code> is that they can be applied to infinite sequences. This is because they return iterators that yield results on demand, rather than functions that return lists.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>slice</code> is a built-in class.  The prefix 'i' for 'iterator' is added to avoid confusion and a name clash if one does <code>from itertools import *</code>.</p>
<p>In Python 2, itertools also had <code>imap</code> and <code>ifilter</code>, to avoid clashing with the old versions of <code>map</code> and <code>filter</code>.  In Python 3, <code>imap</code> and <code>ifilter</code> became the new versions of <code>map</code> and <code>filter</code> and were hence removed from <code>itertools</code>.</p>
</div>
<span class="comment-copy">I think it stands for "iterable slice", because it returns a slice from the provided <code>iterable</code></span>
<span class="comment-copy">It isn't always infinite. Depends on the input given <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools.islice</a></span>
<span class="comment-copy">Oh yes, thanks for pointing that out. I mean "infinite".</span>
<span class="comment-copy"><code>islice</code> returns an <i>iterator</i>.</span>
<span class="comment-copy">'iterable' seems correct: the islice docs use the word. The objects returned by itertools (islice, taskwhile, etc.) are iterators though: generators additionally implement <code>close(), send()</code> and <code>throw()</code> methods.</span>
<span class="comment-copy"><code>islice</code> does indeed return an iterator, and I have modified my answer. The derivation I suggested came from the fact that the main argument is an iterable. islice slices iterables, hence iterable slice.</span>
