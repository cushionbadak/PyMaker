<div class="post-text" itemprop="text">
<pre><code>`# Convert string column to integer
def str_column_to_int(dataset, column):
      class_values = [row[column] for row in dataset]
      unique = set(class_values)
      lookup = dict()
      for i, value in enumerate(unique):
        lookup[value] = i
      for row in dataset:
        row[column] = lookup[row[column]]
    return lookup`
</code></pre>
<p>The above code is the most basic machine learning snippet to convert a column of string to integers(or one hot encoding).However I am having difficulty understanding the code esp. <code>class_values = [row[column] for row in dataset]
unique = set(class_values)</code> what does these two lines do that makes it to do one hot encoding?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; dataset = [
...     [1, 2],
...     [1, 2],
...     [1, 2]
... ]
&gt;&gt;&gt; column = 1
&gt;&gt;&gt; class_values = [row[column] for row in dataset]
&gt;&gt;&gt; class_values
[2, 2, 2]
&gt;&gt;&gt; unique = set(class_values)
&gt;&gt;&gt; unique
{2}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So <code>class_values = [row[column] for row in dataset]</code> is what is called a list comprehension. It is shorthand way to create a list in python. This statement is the equivalent of saying:</p>
<pre><code>class_values = []
for row in dataset:
    class_values.append(row[column])
</code></pre>
<p>These are extremely common in Python, so definitely read about them and practice with them. They make your code cleaner and save time.</p>
<p>Set can be ready about here: <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">Sets</a></p>
<p>In short, they are a grouping that is unique. So if you make a set of a list you get an object with all the unique values from the list</p>
</div>
<span class="comment-copy">Sets are a type of <i>unordered collection</i> too. So they're not index. They also have an average lookup time of O(1). Important additional statements</span>
