<div class="post-text" itemprop="text">
<p>How can I get param from URL after #?</p>
<p>Example:</p>
<pre><code>http://localhost/addAccount/#code=qwerty
</code></pre>
<p>I tried use <code>url = request.path</code> and <code>url.spit('/')</code> but it isn't working becasuse <code>request.path</code> don't read string after # in url.</p>
</div>
<div class="post-text" itemprop="text">
<p>In a URL, what travels after # is known as hash. In an HTTP request that reaches a server (server side) this data does not travel to the server. Therefore, on the server side, it is not possible to retrieve it (web browsers do not send this data in the HTTP request).</p>
<p>However, on the client side it is possible. In Javascript you could do:</p>
<p>window. location. hash</p>
</div>
<div class="post-text" itemprop="text">
<p>dont try to parse urls manually - use the stdlib <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow noreferrer"><code>urllib.parse.urlparse</code></a><br/>
function (<a href="https://docs.python.org/2/library/urlparse.html" rel="nofollow noreferrer"><code>urlparse.urlparse</code></a> on python2):</p>
<pre><code>from urllib.parse import urlparse  # from urlparse import urlparse on py2
scheme = urlparse('http://localhost/addAccount/#code=qwerty')
print(scheme.fragment)
</code></pre>
<p>prints out:</p>
<pre><code>code=qwerty
</code></pre>
<p>Unfortunately you cannot get from the server-side the <a href="https://en.wikipedia.org/wiki/Fragment_identifier" rel="nofollow noreferrer">fragement</a> of the url (data after the #). AFAIK all browsers wont send the fragement to the server (the fragement can be used only on client side code (e.g. javascript).</p>
<p>Quoting <a href="https://en.wikipedia.org/wiki/Fragment_identifier#Basics" rel="nofollow noreferrer">Wikipedia</a>:</p>
<blockquote>
<p>When an agent (such as a Web browser) requests a web resource from a Web server, the agent sends the URI to the server, but does not send the fragment. Instead, the agent waits for the server to send the resource, and then the agent processes the resource according to the document type and fragment value.[2]</p>
</blockquote>
</div>
<span class="comment-copy">The # is for html ids and therefore client side, I don't think they are sent with requests.</span>
<span class="comment-copy">Most common browsers? It should be <i>all</i> browsers, since they're not supposed to send the hash.</span>
<span class="comment-copy">one can send a request to a web server containing <code>#</code> in the url and the http spec for url dont disallow <code>#</code> AFAIK inside a url. but it seems more right</span>
