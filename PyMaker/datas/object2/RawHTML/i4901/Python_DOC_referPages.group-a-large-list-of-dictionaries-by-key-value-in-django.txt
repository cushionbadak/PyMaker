<div class="post-text" itemprop="text">
<p>I have a list of dictionaries as follows</p>
<pre><code>[{'grade': '1', 'past_student_sum': 1611}, 
 {'grade': '2', 'past_student_sum': 1631}, 
 {'grade': '3', 'past_student_sum': 1598}, 
 {'grade': '1', 'current_student_sum': 1611}, 
 {'grade': '2', 'current_student_sum': 1631}, 
 {'grade': '3', 'current_student_sum': 1598}]
</code></pre>
<p>I got this list by combining 2 query sets in the following fashion:</p>
<pre><code>grade_list = list(past_enrollments) + list(current_enrollments)
</code></pre>
<p>Is there a better alternatives to combine these in such a way to get a list that looks like this:</p>
<pre><code>[{'grade': '1', 'past_student_sum': 1611, 'current_student_sum': 1621},
 {'grade': '2', 'past_student_sum': 1511, 'current_student_sum': 1521}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of building a list of dictionaries from <code>past_enrollments</code> and <code>current_enrollments</code>, I would instead build  another dictionary using the <code>grade</code> value as a key.  The easiest way to do this would probably be with a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="noreferrer"><code>defaultdict</code></a></p>
<pre><code>from collections import defaultdict
from itertools import chain

grades = defaultdict(dict)

for d in chain(past_enrollments, current_enrollments):
    grades[d['grade']].update(d)
</code></pre>
<p>Then our finished dictionaries are just the values of that dictionary</p>
<pre><code>grades = list(grades.values())
print(grades)
# [{'grade': '1', 'past_student_sum': 1611, 'current_student_sum': 1611}, 
#  {'grade': '2', 'past_student_sum': 1631, 'current_student_sum': 1631}, 
#  {'grade': '3', 'past_student_sum': 1598, 'current_student_sum': 1598}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one solution using a dict to group and merge the records by <code>grade</code>:</p>
<pre><code>from collections import defaultdict

grade_map = defaultdict(dict)
for grade_info in grade_list:
    grade_map[grade_info['grade']].update(grade_info)
print(list(grade_map.values()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This might help.</p>
<pre><code># -*- coding: utf-8 -*-

d = [{'grade': '1', 'past_student_sum': 1611},
 {'grade': '2', 'past_student_sum': 1631},
 {'grade': '3', 'past_student_sum': 1598},
 {'grade': '1', 'current_student_sum': 1611},
 {'grade': '2', 'current_student_sum': 1631},
 {'grade': '3', 'current_student_sum': 1598}]

e = {}
for i in d:
    if i["grade"] not in e:
        e[i["grade"]] = i
    else:
        if i.get("current_student_sum", None):
            e[i["grade"]].update({"current_student_sum": i["current_student_sum"]})

print [i[1] for i in e.items()]
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>[{'grade': '1', 'current_student_sum': 1611, 'past_student_sum': 1611}, {'grade': '3', 'current_student_sum': 1598, 'past_student_sum': 1598}, {'grade': '2', 'current_student_sum': 1631, 'past_student_sum': 1631}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This could help you.</p>
<pre><code>your_list = [
             {'grade': '1', 'past_student_sum': 1611},
             {'grade': '2', 'past_student_sum': 1631},
             {'grade': '3', 'past_student_sum': 1598},
             {'grade': '1', 'current_student_sum': 1611},
             {'grade': '2', 'current_student_sum': 1631},
             {'grade': '3', 'current_student_sum': 1598}
             ]



from itertools import groupby

result = []
key_func = lambda x: x['grade']

for i, j in groupby(sorted(your_list, key=key_func), key=key_func):
    group = {}
    for k in j:
        group.update(k)
    result.append(group)

print(result)
# [{'grade': '1', 'current_student_sum': 1611, 'past_student_sum': 1611}, {'grade': '2', 'current_student_sum': 1631, 'past_student_sum': 1631}, {'grade': '3', 'current_student_sum': 1598, 'past_student_sum': 1598}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I prefer <a href="https://stackoverflow.com/a/49053663/778533">the answer by Patrick</a> myself. Are you allowed to use pandas? Then you can use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.group_by.html" rel="nofollow noreferrer">groupby</a> and <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_dict.html" rel="nofollow noreferrer">to_dict</a>. Also needed are <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sum.html" rel="nofollow noreferrer">sum</a> and <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.reset_index.html" rel="nofollow noreferrer">reset_index</a>.</p>
<pre><code>import pandas as pd
df = pd.DataFrame(grade_list).groupby('grade').sum().reset_index().to_dict('records')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import itertools

/////


i = 0
for item1, item2 in itertools.izip_longest(listone,listtwo):
    listthree[i] = dict(item1, **item2)
    i += 1
</code></pre>
<p>I'd recommend having a look at itertools though as there are more efficient ways of doing this and there may be a method for this.</p>
<p>Also this is assuming the lists are the same size.</p>
<p>See the answer below for more on iterating</p>
<p><a href="https://stackoverflow.com/questions/1663807/how-to-iterate-through-two-lists-in-parallel">How to iterate through two lists in parallel?</a></p>
<p><a href="https://stackoverflow.com/a/1663826/5990760">https://stackoverflow.com/a/1663826/5990760</a></p>
</div>
<span class="comment-copy">is it a coincidence that the <code>'past_student_sum'</code> and <code>'current_student_sum'</code> <b>always</b> have the same value for corresponding grades?</span>
<span class="comment-copy">Yes. This is just dummy data. But in reality sometimes they will be the same, other times they will be different.</span>
<span class="comment-copy">what are <code>past_enrollments</code> and <code>current_enrollments</code> in your snippet?</span>
<span class="comment-copy">@Ev.Kounis Whatever they are in the question?  Some iterables containing dictionaries, presumably.</span>
<span class="comment-copy">Oh, I missed that. In that case, this is my favorite answer! Nice</span>
<span class="comment-copy">Did you get the desired result when you tried running this?</span>
<span class="comment-copy">Nah, I just realized this is not enough</span>
<span class="comment-copy">Updated the example now</span>
