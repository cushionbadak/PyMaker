<div class="post-text" itemprop="text">
<p>I tested this simple code and find something confuses me. Run the following code in Python 3.6 and both statements returns True. Why?</p>
<pre><code>import typing
print(issubclass(list, typing.List))  # print True
print(issubclass(typing.List, list))  # print True
</code></pre>
<p>Can someone give me some explanation on this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Strictly speaking, <code>list</code> is not a subclass of <code>typing.List</code>. To see what <code>list</code> is actually a subclass of, you can take a look at its <a href="https://www.python.org/download/releases/2.3/mro/" rel="nofollow noreferrer">MRO</a>:</p>
<pre><code>&gt;&gt;&gt; list.__mro__
(&lt;class 'list'&gt;, &lt;class 'object'&gt;)
</code></pre>
<p>On the other hand, the MRO of <code>typing.List</code> shows that it actually is a subclass of <code>list</code>, as well as of many other classes:</p>
<pre><code>&gt;&gt;&gt; typing.List.__mro__
(typing.List, &lt;class 'list'&gt;, typing.MutableSequence, &lt;class 'collections.abc.MutableSequence'&gt;, typing.Sequence, &lt;class 'collections.abc.Sequence'&gt;, typing.Reversible, &lt;class 'collections.abc.Reversible'&gt;, typing.Collection, &lt;class 'collections.abc.Collection'&gt;, &lt;class 'collections.abc.Sized'&gt;, typing.Iterable, &lt;class 'collections.abc.Iterable'&gt;, typing.Container, &lt;class 'collections.abc.Container'&gt;, typing.Generic, &lt;class 'object'&gt;)
</code></pre>
<h2>So, why does Python say that <code>list</code> is a subclass of <code>typing.List</code>?</h2>
<p>Well, that is the whole point of <code>typing.List</code>. To pretend to be a base class of <code>list</code>.</p>
<h2>How is it done?</h2>
<p>Using <em>Abstract Base Classes</em>. See what <a href="https://docs.python.org/3/glossary.html#term-abstract-base-class" rel="nofollow noreferrer">Python doc</a> says about them:</p>
<blockquote>
<p>ABCs introduce virtual subclasses, which are classes that donâ€™t
  inherit from a class but are still recognized by isinstance() and
  issubclass(); see the <a href="https://docs.python.org/3/library/abc.html#module-abc" rel="nofollow noreferrer">abc</a> module documentation.</p>
</blockquote>
<p>You can see from its MRO that <code>typing.List</code> inherits from many ABC's, which list recognizes as its base classes, e.g.:</p>
<pre><code>&gt;&gt;&gt; issubclass(list, collections.abc.MutableSequence)
True
&gt;&gt;&gt; issubclass(list, collections.abc.Collection)
True
&gt;&gt;&gt; issubclass(list, collections.abc.Container)
True
</code></pre>
</div>
<span class="comment-copy">I think both are same classes. Typing.list and list both are same classes</span>
