<div class="post-text" itemprop="text">
<p>I have a string called "strtosearch2" like this:</p>
<pre><code>[02112017 072755 332][1][ERROR]&gt; ----Message : IDC_NO_MEDIA
[02112017 072755 332][1][INFO]&gt; ----              
[02112017 104502 724][1][ERROR]&gt; ----Message : DEV_NOT_READY
[02112017 104502 724][1][INFO]&gt; ----              
[02112017 104503 331][1][ERROR]&gt; ----Message : DEV_NOT_READY
[02112017 104503 331][1][INFO]&gt; ----  
</code></pre>
<p>I want to extract the dates which are having the lines "ERROR" only. I wrote my regex as follows:</p>
<pre><code>down2Date= re.findall(r'\[(.*?)\s\d{6}\s\d{3}\]\[\d\]\[ERROR\]',strtosearch2,re.DOTALL)
</code></pre>
<p>output as follows:</p>
<pre><code>02112017
02112017 072755 332][1][INFO]&gt; ----              
[02112017
02112017 104502 724][1][INFO]&gt; ----              
[02112017
</code></pre>
<p>My target output:</p>
<pre><code>02112017
02112017
02112017
</code></pre>
<p>How can I fix this ?. Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>You may anchor the pattern at the start of the line/string and <strong>remove</strong> the <code>re.DOTALL</code> modifier:</p>
<pre><code>re.findall(r'(?m)^\[(.*?)\s\d{6}\s\d{3}]\[\d]\[ERROR]', s)
</code></pre>
<p>See the <a href="https://regex101.com/r/3mSxAv/1" rel="nofollow noreferrer">regex demo</a></p>
<p>With <code>re.DOTALL</code>, the <code>.</code> matched any char <em>including</em> line break chars.</p>
<p>With <code>(?m)</code>, <code>^</code> matches the start of each line, not only the start of the whole string.</p>
<p>Also, <code>\s</code> can match line break chars, so you might want to use <code>[^\S\r\n]</code> instead of it to only match horizontal whitespace.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>down2Date = re.findall(r'^\[\d+\s\d+\s\d+\]\[\d\]\[ERROR\]', strtosearch2)
</code></pre>
</div>
<span class="comment-copy">Remove <code>re.DOTALL</code>.</span>
<span class="comment-copy">suggestion: sometimes you don't need to define exact input pattern.. for given sample, <code>re.findall(r'(?m)^\[(\d+).*ERROR', strtosearch2)</code> would work too..  if not, try to add relevant sample when asking :)</span>
<span class="comment-copy">Great, Thanks for added details</span>
<span class="comment-copy">can anyone specify what does this <code>re.DOTALL</code> had affected?</span>
<span class="comment-copy">@Sanket See my answer.</span>
<span class="comment-copy">If the DOTALL flag has been specified, this matches any character including a newline. Details <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">here</a></span>
