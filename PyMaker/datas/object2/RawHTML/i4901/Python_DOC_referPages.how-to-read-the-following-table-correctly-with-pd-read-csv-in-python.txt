<div class="post-text" itemprop="text">
<p>I read a file as </p>
<pre><code>  1  [ 1s 1/2-1/2]+    0.83   -66.379    -1.0000000     
  2  [ 1s 1/2 1/2]+    0.83   -66.379    -1.0000000
  3  [ 1s 1/2-1/2]+    0.82   -61.930     1.0000000
  4  [ 1s 1/2 1/2]+    0.82   -61.930     1.0000000
  5  [ 1p 3/2-1/2]-    0.73   -40.210    -1.0000000
  6  [ 1p 3/2 1/2]-    0.77   -40.210    -1.0000000
  7  [ 1p 3/2-3/2]-    0.76   -40.210    -1.0000000
  8  [ 1p 3/2 3/2]-    0.64   -40.210    -1.0000000
</code></pre>
<p>in the following way:</p>
<pre><code>spe=pd.read_csv("spe.dat",delimiter='s\+',skiprows=[0,1])
spe.columns=['index','label','weight','ee','tz']
</code></pre>
<p>I got the error message:</p>
<pre><code>ValueError: Length mismatch: Expected axis has 1 elements, new values have 5 elements
</code></pre>
<p>I realized that the second column such as <code>'[ 1s 1/2-1/2]+'</code> was read as three columns. Is there any way to read the whole <code>'[ 1s 1/2-1/2]+'</code> as one column? Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are not separating the columns properly when you read the DataFrame. I recommend reading <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">the Python regex tutorial</a> to understand how to use regular expressions for the separator.</p>
<pre><code>columns = ['index','label','weight','ee','tz']
pd.read_csv('spe.dat', sep='\s{2,}', names=columns, index_col=0, skiprows=[0, 1])
</code></pre>
<p>returns</p>
<pre><code>                label  weight      ee   tz
index                                     
1      [ 1s 1/2-1/2]+    0.83 -66.379 -1.0
2      [ 1s 1/2 1/2]+    0.83 -66.379 -1.0
3      [ 1s 1/2-1/2]+    0.82 -61.930  1.0
4      [ 1s 1/2 1/2]+    0.82 -61.930  1.0
5      [ 1p 3/2-1/2]-    0.73 -40.210 -1.0
6      [ 1p 3/2 1/2]-    0.77 -40.210 -1.0
7      [ 1p 3/2-3/2]-    0.76 -40.210 -1.0
8      [ 1p 3/2 3/2]-    0.64 -40.210 -1.0
</code></pre>
</div>
<span class="comment-copy">Is your data in a fixed width format?  If so, use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_fwf.html" rel="nofollow noreferrer"><code>pd.read_fwf()</code></a>.</span>
<span class="comment-copy">Thanks. It works.</span>
<span class="comment-copy">With your suggestion, I was able to read the file correctly with some additional efforts.                               spe=pd.read_fwf("spe.dat",skiprows=[0,1])  spe.columns=['index','label1','label2','label3','weight','ee','tz']                             label=spe.label1 + spe.label2 + spe.label3 droplist=['label1','label2','label3'] spe.drop(droplist, axis=1, inplace=True) spe['label']=label</span>
<span class="comment-copy">This is good, but I'm a bit concerned if the index gets to two or three digits whether that two or more spaces rule will hold up.  If it's a fixed-width file it may not.</span>
<span class="comment-copy">@StevenRumbalski Agreed but I would assume so... Otherwise once the index got to 4 digits it would be overwriting the first column!</span>
<span class="comment-copy">Or perhaps six digits.  When I added formatting to the original text question the each row started space-space-digit-space-space-bracket.  So maybe there was five spaces if the digit was centered.</span>
<span class="comment-copy">Thanks. It works better. Could you explain the meaning of "sep='\s{2,}' "? Why using it makes it work?</span>
<span class="comment-copy">@JimmyYao Checkout the regex tutorial I linked in the answer. The first two sections address that question better than I can in a comment.</span>
