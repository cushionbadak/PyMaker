<div class="post-text" itemprop="text">
<p>I'm working on a project that requires me to show a grid on an image, but my code keeps erroring saying 'numpy.ndarray' object has no attribute 'load'. The error is happening at the line <code>draw = ImageDraw.Draw(cv_img)</code>. Why is this happening?
`   </p>
<pre><code>import Tkinter
import cv2
from PIL import Image, ImageTk, ImageDraw
# Creates window
window = Tkinter.Tk()

# Load an image using OpenCV
cv_img = cv2.imread("P:\OneSky\United States.png", cv2.COLOR_BGR2RGB)
window.title("United States Map")

# Get the image dimensions (OpenCV stores image data as NumPy ndarray)
height, width, no_channels = cv_img.shape

# Create a canvas that can fit the above image
canvas = Tkinter.Canvas(window, width = width, height = height)
canvas.pack()

# Use PIL (Pillow) to convert the NumPy ndarray to a PhotoImage
photo = ImageTk.PhotoImage(image = Image.fromarray(cv_img))

# Add a PhotoImage to the Canvas
canvas.create_image(0, 0, image=photo, anchor=Tkinter.NW)

# Draws lines on map
draw = ImageDraw.Draw(cv_img)
x = cv_img.width/2
y_start = 0
y_end = cv_img.height
line = ((x,y_start), (x, y_end))
draw.line(line, fill=128)
del draw

# Run the window loop
window.mainloop()`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't think you need opencv, try something like this instead:</p>
<pre><code>from PIL import Image, ImageDraw, ImageTk
import tkinter as tk

def main():
    root = tk.Tk()
    root.title("United States Map")
    steps = 25
    img = Image.open('P:\OneSky\United States.png').convert('RGB')

    draw = ImageDraw.Draw(img)
    y_start = 0
    y_end = img.height
    step_size = int(img.width / steps)

    for x in range(0, img.width, step_size):
        line = ((x, y_start), (x, y_end))
        draw.line(line, fill=128)

    x_start = 0
    x_end = img.width

    for y in range(0, img.height, step_size):
        line = ((x_start, y), (x_end, y))
        draw.line(line, fill=128)

    del draw
    display = ImageTk.PhotoImage(img)
    label = tk.Label(root, image=display)
    label.pack()
    root.mainloop()


if __name__ == '__main__':
    main()
</code></pre>
<p>I got the idea for how to step the grid from <a href="https://randomgeekery.org/2017/11/24/drawing-grids-with-python-and-pillow/" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy">Have you tried including numpy ?</span>
<span class="comment-copy">Try using <code>draw = ImageDraw.Draw(photo)</code>. <code>cv_img</code> is <code>numpy.ndarray</code> object, not a PIL image.</span>
<span class="comment-copy">The parameter required by <code>ImageDraw.Draw()</code> should be the output of <code>Image.fromarray(cv_img)</code>.  Also you should do all the drawings before creating <code>photo</code>.</span>
<span class="comment-copy">Works perfectly, thank you.</span>
