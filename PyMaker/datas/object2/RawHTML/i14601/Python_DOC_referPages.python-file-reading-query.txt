<div class="post-text" itemprop="text">
<p>I have text file as follows,</p>
<pre><code>3 4
parkinson 5 0.13
['nn', 'tr', 'ss', 'nk', 'ae']
[0.31, 0.88, 0.74, 0.23, 0.29]
[0.76, 0.08, 0.32, 0.65, 0.74]
celiac 6 0.17
['ab', 'cd', 'ef', 'gh', 'i', 'jk']
[0.78, 0.72, 0.65, 0.68, 0.26, 0.69]
[0.29, 0.22, 0.45, 0.32, 0.78, 0.32]
ALS 5 0.14
['tw', 'cr', 'st', 'slu', 'no']
[0.42, 0.67, 0.76, 0.81, 0.23]
[0.26, 0.42, 0.34, 0.09, 0.83]
</code></pre>
<p>depending upon the first value of the first line I want to read the next four four lines.how can I achieve this in python.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, this is a really bad format. If you wrote the code that generated it, or otherwise have control over it, you should change it to use a format that's intended for data interchange, rather than just dumping out everything in human-readable format and then trying to figure out how to parse human-readable data.</p>
<p>But, assuming you can't change that...</p>
<p>First, you need to open the file:</p>
<pre><code>with open('my text file.txt') as f:
</code></pre>
<p>Now, to do anything with the first line, you need to read it:</p>
<pre><code>    first_line = next(f)
</code></pre>
<p>Or, if you prefer (they mean the same thing, if <code>f</code> is a file):</p>
<pre><code>    first_line = f.readline()
</code></pre>
<p>But this is a string, like <code>'3 4\n'</code>; you presumably want it as two numbers. So, you have to <code>split</code> it, then convert the parts to numbers. (I'm guessing integers.)</p>
<pre><code>    first, second = first_line.split()
    first, second = int(first), int(second)
</code></pre>
<p>Now, apparently that <code>3 4</code> means you want 3 chunks of 4 lines each. So, let's give them better names:</p>
<pre><code>    chunks, chunklen = int(first), int(second)
</code></pre>
<p>Now, we can just loop <code>chunks</code> times:</p>
<pre><code>    for chunknum in range(chunks):
</code></pre>
<p>Then, we can read 4 lines:</p>
<pre><code>        for linenum in range(chunklen):
            line = next(f)
            # do something with line
</code></pre>
<p>I'm not sure what you actually want to <em>do</em> with each line. My guess is that you're going to want to parse them into, say, a header line, plus a list of the rest of them as lists of values?</p>
<p>You can parse that <code>header</code> again with <code>split</code> and calling <code>int</code> and <code>float</code> on the parts, but what about the <code>stuff</code>? Those look a lot like someone just calling <code>print</code> on a Python <code>list</code>. If that's what happened, the <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow"><code>literal_eval</code></a> function does exactly the same thing Python itself would do with a string that looks like a Python literal. When you print a list whose values are all int, str, float, or list, <code>literal_eval</code> can reverse it. (Although there may be rounding errors if there are floats.) So, instead of that last loop:</p>
<pre><code>    for chunknum in range(chunks):
        header = next(f).split()
        stuff = [ast.literal_eval(next(f)) for _ in range(chunklen-1)]
        # do something with header and stuff
</code></pre>
<p>For example, one thing you can do is this:</p>
<pre><code>&gt;&gt;&gt; print(stuff[1][2])
0.88
</code></pre>
</div>
<span class="comment-copy">What you mean by <code>next four four</code>? and what  you have tried so far?</span>
<span class="comment-copy">This is a pretty bad file format—in fact, it looks like someone just <code>print</code>ed a bunch of their variables, without any thought to how you'd parse them back. If you have any control over the code that generates the file, you should probably change it to something actually designed for data interchange, instead of trying to figure out how to parse the human-readable information.</span>
<span class="comment-copy">Thank you for your help.Actually I was not able to format it."depending upon the first value of the first line I want to read the next four four lines",I want a total 3 chunks of 4 lines  each</span>
<span class="comment-copy">@codemaster001: OK, then you need one loop over <code>first</code> and one loop over <code>second</code>. Still just as easy. Let me edit the answer.</span>
<span class="comment-copy">Thank you so much</span>
<span class="comment-copy">How will we iterate int?? chunks is an int here right?</span>
<span class="comment-copy">@codemaster001: Sorry, I missed the <code>range(…)</code> on some of the loops. Should be fixed now. (<code>for i in range(3)</code> iterates 0, 1, 2.)</span>
