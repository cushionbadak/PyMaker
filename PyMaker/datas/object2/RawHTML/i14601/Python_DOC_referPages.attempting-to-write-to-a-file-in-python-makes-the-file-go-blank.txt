<div class="post-text" itemprop="text">
<p>I'm relatively new to Python, and I'm trying to create a piece of code in Python that looks through each line of a text file for a certain value, inputted by the user, then replaces a line with a new one created by the code. However, when I try the code, the file goes blank. I've got an <code>f.close()</code> but the code still won't write.</p>
<p>Here is my code:</p>
<pre><code>import fileinput

f = open("task3.txt", "w+")

name = input("What is your name?")

lines = f.readlines()
print(lines)

for i in lines:
    splitlines = i.split(":")
    print(splitlines)
    splitnums = splitlines[1].split(", ")
    print(splitnums)
    for i in splitnums:
        i = int(i)
    edit = input('Would you like to edit this entry?')
    if edit == "Yes":
        valueNew = input("Which new value would you like to add?")
        del(splitnums[2])
        splitnums.append(splitnums[1] + "\n")
        splitnums[1] = splitnums[0] + ", "
        splitnums[0] = valueNew + ", "
        print(splitnums)
        numstring = ''.join(splitnums)
        splitlines[1] = ": "
        splitlines.append(numstring)
        newval = ''.join(splitlines)
        print(newval)
        f.write(newval)
    else:
        print("Okay.")

f.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You will have to read the entire file, then change the content before writing again, as <code>w</code> clears the file contents. If appending to (adding to the end of) the file suffices, you can change the <code>mode</code> argument to <code>a</code> to open the file in append mode.</p>
<p>You should also consider using <code>with</code> instead of manually closing the file:</p>
<pre><code>with open('file.txt', 'w') as f:
    ...
</code></pre>
<p>, as this closes the file and cleans up regardless of errors thrown etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>Mode <code>w+</code> means "open the file for writing, truncating it first, and also let me read it"</p>
<p>So, it's doing exactly what you asked.</p>
<p>If you want to open the file for reading, but also let you write it, that's spelled <code>r+</code>. Or, in Python 3.0+, you can also just use plain <code>+</code>.</p>
<p>The docs for <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open</code></a> even include examples of different modes that explain exactly what you're asking:</p>
<blockquote>
<p>The default mode is 'r' (open for reading text, synonym of 'rt'). For binary read-write access, the mode 'w+b' opens and truncates the file to 0 bytes. 'r+b' opens the file without truncation.</p>
</blockquote>
<p>Or, for <a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow">the 2.x version</a>:</p>
<blockquote>
<p>Modes 'r+', 'w+' and 'a+' open the file for updating (reading and writing); note that 'w+' truncates the file.</p>
</blockquote>
<p>That's the difference between <code>r+</code> and <code>w+</code> (or <code>r+b</code> and <code>w+b</code>): use the <code>r</code> one when you don't want truncation.</p>
</div>
<span class="comment-copy">You need to open the file in append mode <code>f = open("task3.txt", "r+")</code> I'm not sure that <code>w+</code> is a valid mode</span>
<span class="comment-copy">From <a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow noreferrer">open()</a> <code>w+</code> truncates the file, meaning it empties the contents before reading or writing.</span>
<span class="comment-copy">@EdChum: It's perfectly valid, and it means exactly what he's seeing: open the file for both reading and writing, creating or truncating it first.</span>
<span class="comment-copy">@abarnert I wasn't sure as I've not seen that combo before and it wasn't mentioned in the <a href="https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs</a> which was why I questioned it, good to know the semantic difference though, thanks</span>
<span class="comment-copy">@EdChum: The tutorial typically only mentions things that are widely useful (although it does go on some weird tangentsâ€¦); to get the full details, look at the library reference docs for the <code>open</code> method (<a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">3.x</a>/<a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow noreferrer">2.x</a>). (In 2.x, the docs punt to "whatever your OS's C library does" in some cases; in 3.x, they're fully specified for all OSes. But that's because in CPython 2.x, <code>open</code> just uses the C library, in 3.x, and other 2.x implementations, it does it all manually.)</span>
<span class="comment-copy">You probably don't want <code>a</code> here. That starts the file pointer at the end, which isn't very useful for reading, and depending on the platform it may or may not jump the file pointer back to the end after every write.</span>
