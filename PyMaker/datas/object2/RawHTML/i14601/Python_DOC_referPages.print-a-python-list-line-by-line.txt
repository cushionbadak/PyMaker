<div class="post-text" itemprop="text">
<p>How can I get the results of my print onto new lines? The list being printed is a first name, surname and email address, so I want each one on a new line.</p>
<pre><code>import csv

f = open('attendees1.csv')
csv_f = csv.reader(f)

attendee_details = []

for row in csv_f:
    attendee_details.append(row[0:4])



sortedlist =[sorted(attendee_details, key=lambda x:x[0])]

print (sortedlist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>print('\n'.join(map(str, sortedlist)))
</code></pre>
<p>This will work for all lists. If the list already consists of strings, the <code>map</code> is not needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you're using Python 3, you can also do this:</p>
<pre><code>print(*sortedlist, sep='\n')
</code></pre>
<p>This unpacks the list and sends each element as an argument to <code>print()</code>, with <code>'\n'</code> as a separator.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a for loop. ie, replace the last two lines with this</p>
<pre><code>for i in sorted(attendee_details, key=lambda x:x[0]):
    print(i)
</code></pre>
<p>Note that </p>
<pre><code>sortedlist =[sorted(attendee_details, key=lambda x:x[0])]
</code></pre>
<p>line of code will create list of list.</p>
</div>
<div class="post-text" itemprop="text">
<p>The Simplest way would be as follows:</p>
<pre><code>print(*sorted(runnerup), sep='\n')
</code></pre>
</div>
<span class="comment-copy">Perhaps use <code>print('\n'.join(sortedlist))</code></span>
<span class="comment-copy">use <code>for i in sortedList: print i</code></span>
<span class="comment-copy">@RafaelCardoso: print(i), OP might be using python3, see last line</span>
<span class="comment-copy">@pytonbeginner post the contents of <code>sortedlist</code> variable. And also post your expected output.</span>
<span class="comment-copy">As an aside, if the first row of the line contains the column name, you might want to use <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer">csv.DictReader</a> instead of <code>csv.reader</code>. I find that in most cases, the datasets have the column name, and it's more readable code when we write <code>row['first_name']</code> than <code>row[0]</code>.</span>
