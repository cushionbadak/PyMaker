<div class="post-text" itemprop="text">
<p>I'm using <code>subprocess.Popen</code> and <code>stdout</code> to write the output of a <code>curl</code> from Backendless (BaaS).</p>
<p>What's written to the output file is a long single line of data, separated by commas. Here's a small portion of it.</p>
<pre><code>{"APIEndpoint":"asdfaasdfa","created":1429550024000,"updated":null,"objectId":"EE51537D-A9AC-721C-FF33-F4B258931E00"...}
</code></pre>
<p>The value I need from this output file is the 37-character string following "objectID":". I've read many similar questions but haven't been able to find a solution to this specific one. I've tried something like:</p>
<pre><code>objectid = 37
searchfile open('backendless.txt', 'r')
for line in searchfile:
    if "\"objectId\":\"" in line:
        print(right[:objectidd])
</code></pre>
<p>which returns nothing. Please correct me if I'm using <code>line</code> incorrectly. I'm very new to this. Also, is there a way to achieve the same result without saving it to the text file first and instead performing the <code>curl</code> with <code>PIPE</code> and <code>communicate</code>?</p>
<p>I'm using Python 3.4. Thank you.</p>
<p><strong>EDIT/SOLUTION:</strong></p>
<pre><code>from subprocess import *
baascurl = Popen(['curl', '-H', appid, '-H', secretkey, '-H', apptype, '-H', contenttype, '-X', 'GET', '-v', 'https://api.backendless.com/v1/data/Latency/last'], stdout=PIPE).communicate()[0]
objidbytes = baascurl.decode(encoding='utf-8')
objid = json.loads(objidbytes)["objectId"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your data looks pretty much like JSON, so maybe you can use Python's <a href="https://docs.python.org/3/library/json.html" rel="nofollow"><code>json</code></a> module:</p>
<pre><code>import json
objid = json.loads(datastring)["objectId"]
</code></pre>
<p>If you want to stay on the text level, the right tool for this job are regular expressions. Look into Python's <a href="https://docs.python.org/3/library/re.html" rel="nofollow"><code>re</code></a> module.</p>
<pre><code>import re
m = re.search(r'"objectId":"([^"]+)"', datastring, re.IGNORECASE)
if m:
    objid = m.group(1)
</code></pre>
</div>
<span class="comment-copy">You were absolutely right, the data is JSON. I was getting <code>TypeError: the JSON object must be str, not 'bytes'</code> but after searching, I discovered how to convert the output to a string. Everything works perfectly. @ChristianAichinger Thank you so much for your help. I will add the final code to my original question for future reference.</span>
