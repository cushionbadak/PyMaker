<div class="post-text" itemprop="text">
<p>Root logger doesn't log when (I think) it should:</p>
<pre><code>import logging

# NOTE: I make sure to set the root logger level to logging.DEBUG
logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)

logging.debug('This is a debugging test.')
</code></pre>
<p>From my understanding this should log something but it does nothing.
Quick Google searches didn't help me to figure this issue out, neither did the <a href="https://docs.python.org/3/library/logging.html" rel="nofollow">official documentation</a>.</p>
<p>In the other hand, if I use <code>logging.warning</code> instead of <code>logging.debug</code>, it does work.</p>
<p>What am I doing wrong?</p>
<p><strong>EDIT:</strong> </p>
<p>Checking the current level with <code>logging.getLogger().getEffectiveLevel()</code> indicates me that the level is still at <code>30</code>, like before the call of <code>logging.basicConfig</code>.</p>
<p>Checking <code>logging.getLogger().isEnabledFor(logging.DEBUG)</code> effectively tells me that the root logger level isn't enabled for <code>logging.DEBUG</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>EDIT:</strong> Turned out OP's (me) trouble was due to already calling <code>logging.debug</code> before <code>logging.basicConfig</code>, thus settings the config to defaults and the call to <code>logging.basicConfig</code> was ignored as pointed out by @SmCaterpillar.</p>
<p><em>Although</em>, this alternative solution allows you to "force" root logger level after a <code>basicConfig</code> has already been set, could still be useful!</p>
<hr/>
<p>Found a "solution":</p>
<pre><code># [â€¦] Previous code

# Sets the root logger level
logging.getLogger().setLevel(logging.DEBUG)

logging.debug('Test')  # Displays 'DEBUG:root:Test'
</code></pre>
<p>But it doesn't carry out the format I gave in in <code>logging.basicConfig</code>.</p>
<p>That said I'm already satisfied: It is already some kind of progress. Logging even with not exactly the format I expected is always better than no logging at all.</p>
</div>
<span class="comment-copy">Your code snippet works. Could it be that you called <code>logging.debug('some text')</code> already somehwere else before in your real code? This automatically configures the root logger and your <code>basicConfig</code> will be ignored.</span>
<span class="comment-copy">@SmCaterpillar Brillant sir! I did read something about that but I didn't understand it quite well, so that was it! Feel free to post it as an answer as well!</span>
<span class="comment-copy">You're welcome, since your answer already mentions the solutions, there's really no need for another one :-)</span>
