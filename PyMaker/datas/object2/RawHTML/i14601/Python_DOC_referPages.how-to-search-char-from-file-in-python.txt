<div class="post-text" itemprop="text">
<p>Actually i am coming from C++ and i am new here as well, I am having iteration problem.I am using python 2.7.8 and unable to solve which is what i am wanting. I have a file name called "foo.txt". Through code i am trying to find using how many "a e i o u" are in the file. I have created array: vowel[] = {'a','e','i','o',u} and my code should shd give me the combine count of all vowels. But i am facing </p>
<p>error:</p>
<pre><code>TypeError: list indices must be integers, not str
</code></pre>
<p><strong>file foo.txt</strong></p>
<pre><code>Chronobiology might sound a little futuristic – like something from a science fiction novel, perhaps – but it’s actually a field of study that concerns one of the oldest processes life on this planet has ever known: short-term rhythms of time and their effect on flora and fauna.

This can take many forms. Marine life, for example, is influenced by tidal patterns. Animals tend to be active or inactive depending on the position of the sun or moon. Numerous creatures, humans included, are largely diurnal – that is, they like to come out during the hours of sunlight. Nocturnal animals, such as bats and possums, prefer to forage by night. A third group are known as crepuscular: they thrive in the low-light of dawn and dusk and remain inactive at other hours.

When it comes to humans, chronobiologists are interested in what is known as the circadian rhythm. This is the complete cycle our bodies are naturally geared to undergo within the passage of a twenty-four hour day. Aside from sleeping at night and waking during the day, each cycle involves many other factors such as changes in blood pressure and body temperature. Not everyone has an identical circadian rhythm. ‘Night people’, for example, often describe how they find it very hard to operate during the morning, but become alert and focused by evening. This is a benign variation within circadian rhythms known as a chronotype.
</code></pre>
<p>my code:</p>
<pre><code>fo = open("foo.txt", "r")
count = 0
for i in fo:
    word = i
    vowels = ['a','e','i','o','u','y']
    word = word.lower().strip(".:;?!")
#print word 
for j in word: # wanting that loop shd iterate till the end of file
    for k in vowels: # wanting to index string array until **vowels.length()**
        if (vowels[k] == word[j]):
            count +=1


#print word[0]    
print count
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Do in range(len()) instead, because if you use <code>for k in vowels</code> , k will be 'a' then 'b' then 'c'... etc. However, the syntax for getting objects via indexes is vowels[index_number], not vowels[content]. So, you have to iterate over the length of the array, and use vowels[0] to get 'a', then vowels[1]' to get 'b' etc.</p>
<pre><code>fo = open("foo.txt", "r")
count = 0
for i in fo:
    word = i
    vowels = ['a','e','i','o','u','y']
    word = word.lower().strip(".:;?!")
#print word 

    for j in range(len(word)): # wanting that loop shd iterate till the end of file
        if (word[j] in vowels):
                count +=1


#print word[0]    
print count
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has a wonderful module called <code>collections</code> with a function <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow">Counter</a>. You can use it like this:</p>
<pre><code>import collections
with open('foo.txt') as f:
    letters = collections.Counter(f.read())
vowels = ['a','e','i','o','u','y']
## you just want the sum
print(sum(letters[vowel] for vowel in vowels))
</code></pre>
<p>You can also do it without <code>collections.Counter()</code>:</p>
<pre><code>import itertools
vowels = {'a','e','i','o','u','y'}
with open("foo.txt") as f:
    print(sum(1 for char in  itertools.chain.from_iterable(f) if char in vowels))
</code></pre>
<p>Please note that the time complexity of a set <code>{}</code> lookup is <code>O(1)</code>, whereas the time complexity for a list <code>[]</code> lookup is <code>O(n)</code> according to <a href="https://wiki.python.org/moin/TimeComplexity" rel="nofollow">this page on wiki.python.org</a>.</p>
<p>I tested both methods with the module <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow"><code>timeit</code></a> and as expected the first method using <code>collections.Counter()</code> is slightly faster:</p>
<pre><code>0.13573385099880397
0.16710168996360153
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python prides itself on its abstraction and standard library data structures. Check out <code>collections.Counter</code>. It takes an iterable and returns a dict of value -&gt; frequency.</p>
<pre><code>with open('foo.txt') as f:
    string = f.read()

counter = collections.Counter(string)  # a string is an iterable of characters
vowel_counts = {vowel: counter[vowel] for vowel in "aeiou"} 
</code></pre>
</div>
<span class="comment-copy">There is almost never a reason to index into a string in a for loop in Python -- you can just iterate over them directly. I.e.: <code>for character in word:</code>.</span>
<span class="comment-copy">Here <code>word</code> is a line and not a word from the file <code>foo.txt</code>.</span>
<span class="comment-copy">thanks but i am getting lesser count that is 206 and actual counts are more than 400. Any idea?</span>
<span class="comment-copy">is it file reading problem?</span>
<span class="comment-copy">Is the identation correct? I corrected the code for you to check if it is.</span>
<span class="comment-copy">Here <code>word</code> is a line and not a word from the file <code>foo.txt</code>.</span>
<span class="comment-copy">thanks it did but i also tried to find consonants and by following you it gave me error TypeError: unhashable type: 'list'  import collections with open('foo.txt') as f:     letters = collections.Counter(f.read()) vowels = ['a','e','i','o','u'] consonants = ['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z'] ## you just want the sum print(sum(letters[vowel] for vowel in vowels))  print consonants print(sum(letters[consonants] for v in consonants))</span>
<span class="comment-copy">You need to do <code>print(sum(letters[v] for v in consonants))</code></span>
