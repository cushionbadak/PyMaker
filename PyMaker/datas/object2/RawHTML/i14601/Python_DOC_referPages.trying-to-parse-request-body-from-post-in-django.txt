<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/29514077/get-request-body-as-string-in-django">Get request body as string in Django</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>For some reason I cannot figure out why Django isn't handling my <code>request.body</code> content correctly.</p>
<p>It is being sent in <code>JSON</code> format, and looking at the <code>Network</code> tab in Dev Tools shows this as the request payload:</p>
<pre><code>{creator: "creatorname", content: "postcontent", date: "04/21/2015"}
</code></pre>
<p>which is exactly how I want it to be sent to my API.</p>
<p>In Django I have a view that accepts this request as a parameter and just for my testing purposes, should print <code>request.body["content"]</code> to the console. </p>
<p>Of course, nothing is being printed out, but when I print <code>request.body</code> I get this:</p>
<pre><code>b'{"creator":"creatorname","content":"postcontent","date":"04/21/2015"}'
</code></pre>
<p>so I know that I <em>do</em> have a body being sent.</p>
<p>I've tried using <code>json = json.loads(request.body)</code> to no avail either. Printing <code>json</code> after setting that variable also returns nothing.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.0 to Python 3.5.x, <code>json.loads()</code> will only accept a unicode string, so you must decode <code>request.body</code> (which is a byte string) before passing it to <code>json.loads()</code>.</p>
<pre><code>body_unicode = request.body.decode('utf-8')
body = json.loads(body_unicode)
content = body['content']
</code></pre>
<p>In Python 3.6, <a href="https://docs.python.org/3/library/json.html#json.loads" rel="noreferrer"><code>json.loads()</code> accepts bytes or bytearrays</a>. Therefore you shouldn't need to decode <code>request.body</code> (assuming it's encoded in UTF-8, UTF-16 or UTF-32).</p>
</div>
<span class="comment-copy">This solved my problem! And accessing the elements works like <code>body['keyname']</code>. Thank you very much.</span>
<span class="comment-copy">This was very insightfull after countless nights</span>
