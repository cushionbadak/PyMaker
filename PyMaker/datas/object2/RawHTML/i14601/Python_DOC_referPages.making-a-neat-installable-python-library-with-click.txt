<div class="post-text" itemprop="text">
<p>I'm trying to make a command line tool with Click in Python, and I can't seem to find any documentation on packaging up the library into something that's installable. Is there any way to do this? At the moment I'm just using a virtual environment and installing it for testing using the commands listed in the docs: (<a href="http://click.pocoo.org/4/setuptools/#testing-the-script" rel="nofollow">http://click.pocoo.org/4/setuptools/#testing-the-script</a>)</p>
<pre><code>$ virtualenv venv
$ . venv/bin/activate
$ pip install --editable .
</code></pre>
<p>I'm relatively new to Click so forgive me if I'm missing something painfully obvious.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you've followed the <a href="http://click.pocoo.org/4/setuptools/" rel="nofollow">Setuptools Integration</a> steps in the article you linked to, you're most of the way there. Try installing the package as if it came from pip (maybe in a different virtualenv):</p>
<pre><code>$ virtualenv deploy
$ source deploy/bin/activate
$ pip install .
</code></pre>
<p>Then you can invoke your command as normal - it'll be installed under the <code>bin</code> directory in the virtualenv. It's a good idea to try testing the command from somewhere else to make sure you don't have a dependency on being inside the project directory (like you've probably been doing during testing).</p>
<p>Once you're happy that it installs correctly and all the imports work as expected, you can proceed to register your package with PyPI (the Package Index). You can read about this in the <a href="https://docs.python.org/3/distutils/packageindex.html#package-index" rel="nofollow">Python Docs</a></p>
<p>That's about it really - setuptools/Click does most of the heavy lifting.</p>
</div>
<span class="comment-copy">When you say "packaging" - do you mean as a python package (installable through pip, for example) or an OS-package, like a <code>.deb</code> or <code>.rpm</code> file?</span>
<span class="comment-copy">I mean a package installable through pip..</span>
<span class="comment-copy">Thank you so much! This is exactly what I needed!</span>
