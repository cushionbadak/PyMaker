<div class="post-text" itemprop="text">
<p>Consider the below situation. I have a list:</p>
<pre><code>feature_dict = vectorizer.get_feature_names()
</code></pre>
<p>Which just have some strings, all of which are a kind of internal identifiers, completely meaningless. I also have a dictionary (it is filled in different part of code):</p>
<pre><code> phoneDict = dict()
</code></pre>
<p>This dictionary has mentioned identifiers as keys, and values assigned to them are, well, good values which mean something.</p>
<p>I want to create a new list <strong>preserving the order of original list</strong> (this is crucial) but replacing each element with the value from dictionary. So I thought about creating new list by applying a function to each element of list but with no luck.</p>
<p>I tried to create a fuction:</p>
<pre><code>def fastMap(x):
    return phoneDict[x]
</code></pre>
<p>And then map it:</p>
<pre><code>map(fastMap, feature_dict)
</code></pre>
<p>It just returns me  </p>
<pre><code>map object at 0x0000000017DFBD30. 
</code></pre>
<p>Nothing else</p>
<p>Anyone tried to solve similar problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just convert the result to list:</p>
<pre><code>list(map(fastMap, feature_dict))
</code></pre>
<p>Why? <code>map()</code> returns an iterator, see <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow">https://docs.python.org/3/library/functions.html#map</a>:</p>
<blockquote>
<p>map(function, iterable, ...) </p>
<p>Return an iterator that applies function
  to every item of iterable, yielding the results. If additional
  iterable arguments are passed, function must take that many arguments
  and is applied to the items from all iterables in parallel. With
  multiple iterables, the iterator stops when the shortest iterable is
  exhausted. For cases where the function inputs are already arranged
  into argument tuples, see itertools.starmap().</p>
</blockquote>
<p>which you can convert to a list with <code>list()</code></p>
<p>Note: in python 2, <code>map()</code> returns a list, but this was changed in python 3 to return an iterator</p>
</div>
<span class="comment-copy"><code>list(map(fastMap, feature_dict))</code></span>
<span class="comment-copy">@TimCastelijns lol, that works. Why?</span>
<span class="comment-copy">The <code>list()</code> converts the generator returned from map into a real list.</span>
<span class="comment-copy">@MaximHaytovich map returns an iterator in python3.</span>
<span class="comment-copy">Alternate: <code>[phoneDict[f] for f in feature_list]</code></span>
