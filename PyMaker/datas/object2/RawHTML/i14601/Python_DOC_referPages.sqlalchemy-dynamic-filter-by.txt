<div class="post-text" itemprop="text">
<p>I know you can build dynamic filters for queries for SQLAlchemy by supplying <code>**kwargs</code> to <code>filter_by</code>. </p>
<p>For example  </p>
<pre><code>    filters = {'id': '123456', 'amount': '232'}
    db.session.query(Transaction).filter_by(**filters)
</code></pre>
<p>Below is my question:</p>
<p>What if I need to query by "greater than" or "less than" clauses?
For example (raw SQL):</p>
<pre><code> select * from transaction t 
 where t.amount &gt; 10 and t.amount &lt; 100;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using <code>filter_by</code> I would recommend using <code>filter</code>, it gives you a lot more options.</p>
<p>For example (from the manual):</p>
<pre><code>db.session.query(MyClass).filter(
    MyClass.name == 'some name',
    MyClass.id &gt; 5,
)
</code></pre>
<p>In relation to your case:</p>
<pre><code>filters = (
    Transaction.amount &gt; 10,
    Transaction.amount &lt; 100,
)
db.session.query(Transaction).filter(*filters)
</code></pre>
</div>
<span class="comment-copy">That worked. Thank you!</span>
<span class="comment-copy">Do we have and opportunity to make list of filters such you mentioned but that operators will be filled in dynamically with placeholders, I.e something like:   <code>op = "&gt;=" value=10 filter1 =  "f{Transaction.amount}  {op} {value}"  filters =( filter1) db.session.query(Transaction).filter(*filters)</code></span>
<span class="comment-copy">@Wolph: I will appreciate you answer too</span>
<span class="comment-copy">@JavaSa all operators are available through the <a href="https://docs.python.org/3/library/operator.html" rel="nofollow noreferrer">operator</a> module in Python as well. So instead of <code>a &gt;= b</code> you can also use <code>operator.ge(a, b)</code></span>
