<div class="post-text" itemprop="text">
<p>I am trying to convert a url like <code>"www.example.com/images/dog.png"</code> into directories from the current directory.</p>
<p>So I get a folder named <code>"www.example.com"</code>, inside that <code>"images"</code> and finally inside that the file saved as <code>"dog.png"</code></p>
<p>I've tried using <code>urllib.url2pathname(path)</code> but it keeps appending <code>P:\</code> to the start of it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>os.makedirs()</code> to create the directory tree, but that will fail if the final directory already exists. So you can test if it exists before attempting to create the directory tree, or use <code>try: ... except OSError:</code>. In Python 3 you can supply an <code>exist_ok</code> parameter to over-ride this behaviour, see the Python docs of <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="nofollow">os.makedirs</a> for further info.</p>
<pre><code>#!/usr/bin/env python

import os

cwd = os.getcwd()

url = "www.example.com/images/dog.png"

fullname = os.path.join(cwd, url)
path, basename = os.path.split(fullname)
if not os.path.exists(path):
    os.makedirs(path)

with open(fullname, 'w') as f:
    f.write('test\n')
</code></pre>
<hr/>
<p>If your system doesn't support directory names containing periods you can translate them to another character, eg <code>_</code>, like this:</p>
<pre><code>fullname = fullname.replace('.', '_')
</code></pre>
<p>(just insert this after the <code>fullname = os.path.join(cwd, url)</code> line).</p>
<p>And as jwilner mentions in the comments, it's more efficient to use</p>
<pre><code>path = os.path.dirname
</code></pre>
<p>than <code>path, basename = os.path.split(fullname)</code> if you don't need the base component of the file name (in this example <code>"dog.png"</code>).</p>
</div>
<span class="comment-copy">I use it like url2pathname("www.google.com") and it returns "P:\www.google.com"</span>
<span class="comment-copy">Just tested <code>urllib.url2pathname(path)</code> and got the correct result on Python 2.7.13. result: <code>www.example.com\images\dog.png</code></span>
<span class="comment-copy">This doesn't work because the url is not in the same format as a path directory</span>
<span class="comment-copy">That url is a valid path on unix systems at least.</span>
<span class="comment-copy">@Shifty: It works for me (on Linux on an ext3 filesystem) with that URL. Are you using an OS or filesystem that doesn't permit periods in pathnames? If so, you should have mentioned that in your question. And that can be easily fixed with, eg <code>fullname = fullname.replace('.', '_')</code></span>
<span class="comment-copy">I would suggest that you use <code>os.path.dirname</code> instead of <code>os.path.split</code> -- you have no need for the <code>basename</code> component, and <code>os.path.dirname</code> is more explicit. Also, the <code>os.path.exists</code> call is unnecessary -- <code>os.makedirs</code> only makes directories which do not exist.</span>
<span class="comment-copy">@jwilner OTOH, the <code>os.makedirs</code> issue is a little complicated. In <a href="https://docs.python.org/2/library/os.html#os.makedirs" rel="nofollow noreferrer">Python 2</a> "Raises an error exception [<code>OSError</code>] if the leaf directory already exists or cannot be created". In <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="nofollow noreferrer">Python 3</a> there's an <code>exist_ok</code> parameter: "If <code>exist_ok</code> is <code>False</code> (the default), an <code>OSError</code> is raised if the target directory already exists."</span>
