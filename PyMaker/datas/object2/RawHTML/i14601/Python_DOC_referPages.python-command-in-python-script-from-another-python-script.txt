<div class="post-text" itemprop="text">
<p>I read already this <a href="https://stackoverflow.com/questions/1186789/what-is-the-best-way-to-call-a-python-script-from-another-python-script">What is the best way to call a Python script from another Python script?</a></p>
<p>In my case I don't want to call another python script in a python script, but I want to call for example the ssylze.py with the specific options </p>
<pre><code>$ python sslyze.py --regular www.target1.com
</code></pre>
<p>like consider in <a href="https://code.google.com/p/sslyze/wiki/QuickStart" rel="nofollow noreferrer">https://code.google.com/p/sslyze/wiki/QuickStart</a></p>
<p>So I have script test1.py and in that script I would like to use </p>
<pre><code>sslyze.py --regular www.target1.com
</code></pre>
<p>how I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>Not sure if I've unscrambled the code from your comment ok and whether this is what you are trying to do. As I don't know what sslyze.py is doing I haven't tested it. However your problem might be due to not waiting for each subprocess to terminate:</p>
<pre><code>import subprocess 
with open("ip.txt", "r") as file_in:
  fname = "scan.txt" 
  with open("scan.txt","w") as file_out:
    for line in file_in: 
      process = subprocess.Popen(["python", "sslyze.py", "--regular", line], stdout=subprocess.PIPE) 
      file_out.write(process.communicate()) # you might need to append \n to whatever you write
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">argparse module</a>:</p>
<pre><code>import argparse
parser = argparse.ArgumentParser()
parser.add_argument("-r", "--regular", action="store")
args = parser.parse_args()
print vars(args)["regular"]
</code></pre>
<p>Running the above snippet (asd.py) with <code>python asd.py --regular www.target1.com</code> will print "www.target1.com". Hope this provides enough of an example to be helpful.</p>
</div>
<span class="comment-copy">argparse module</span>
<span class="comment-copy">subprocess.Popen(["python", "sslyze.py", "--regular", "www.target1.com"])</span>
<span class="comment-copy">Why don't you just <code>import sslyze</code> and call whatever entry point function the command line call would? If it's sensibly structured, this will be trivial.</span>
<span class="comment-copy">@paddyg the subprocess works fine, but I have two problems. for the "www.target1.com" I want to use a variable, so that I can make for-loop and read form txt different ips (but it didn't work out), and the second one is that I don't want that this command print the information on the console, but that it print this in a new file.</span>
<span class="comment-copy">import subprocess   file_in = open("ip.txt", "r") fname = "scan.txt"  file_out = open("scan.txt","w") i = 1 for line in file_in:     print line     process = subprocess.Popen(["python", "sslyze.py", "--regular", line], stdout=subprocess.PIPE)     print process.stdout.read()     i = i + 1 file_out.close() file_in.close()  the problem is that it only can scan the last ip, at the others ips it says "=&gt; WARNING: Could not resolve hostname; discarding corresponding tasks."</span>
<span class="comment-copy">if I do it like that - I get the following exception: "File "SHA1Scanner.py", line 38, in &lt;module&gt;     file_out.write(process.communicate()) TypeError: expected a character buffer object"</span>
<span class="comment-copy">process.wait() was missing , that was my problem. but thanks for the indirect tip with the "with" command - it is much better that I did ;)</span>
<span class="comment-copy">it is not my intention to print the domain or I understand you wrong.</span>
