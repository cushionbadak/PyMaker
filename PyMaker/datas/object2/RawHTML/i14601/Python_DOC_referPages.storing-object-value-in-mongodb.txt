<div class="post-text" itemprop="text">
<p>I am getting some object values in python which I want to store in mongodb for later use, but with no luck</p>
<pre><code>def callPylink(self):
    from pylinkgrammar.linkgrammar import Parser
    import sys
    p = Parser()
    linkage = p.parse_sent("When was Gandhi born")
    try:
        print "Linkage 0 ", linkage[0]
    except:
        print "error"
    self.collection.insert(linkage[0].__dict__)
</code></pre>
<p>at insert line:</p>
<pre><code>Linkage 0 &lt;pylinkgrammar.linkgrammar.Linkage object at 0x92db84c&gt;

Traceback (most recent call last):
  File "objmongo.py", line 28, in &lt;module&gt;
    data = obj.callPylink()
  File "objmongo.py", line 23, in callPylink
    self.collection.insert(linkage[0].__dict__)
  File "/usr/local/lib/python2.7/dist-packages/pymongo/collection.py", line 409, in insert
    gen(), check_keys, self.uuid_subtype, client)
bson.errors.InvalidDocument: Cannot encode object: &lt;S: When, was&gt;
</code></pre>
<p>what is other way to store python object in mongo.</p>
<p><strong>update</strong></p>
<pre><code>    pickled = pickle.dumps(linkage[0])
    self.collection.insert(pickled)
</code></pre>
<p>gives error:</p>
<pre><code>  File "objmongo.py", line 30, in &lt;module&gt;
    data = obj.callPylink()
  File "objmongo.py", line 25, in callPylink
    self.collection.insert(pickled)
  File "/usr/local/lib/python2.7/dist-packages/pymongo/collection.py", line 409, in insert
    gen(), check_keys, self.uuid_subtype, client)
  File "/usr/local/lib/python2.7/dist-packages/pymongo/collection.py", line 386, in gen
    doc['_id'] = ObjectId()
TypeError: 'str' object does not support item assignment
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To store a dictionary in mongodb, your dictionary can only contain string keys and those types of values that mongodb can serialize (encode). This is not the case here.</p>
<p>You can serialize complex object trees into byte strings and deserialize them back using the <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow"><code>pickle</code></a> module, use <code>pickle.dumps(obj)</code> to serialize an object into a bytestring, and <code>pickle.loads(bytestring)</code> to deserialize the object</p>
<p>Example: given the following class and instance</p>
<pre><code>&gt;&gt;&gt; class OurClass():
...     def __init__(self, arg):
...         self.arg = arg
... 
&gt;&gt;&gt; instance = OurClass(42)
</code></pre>
<p>we import the pickle module</p>
<pre><code>&gt;&gt;&gt; import pickle
&gt;&gt;&gt; pickled = pickle.dumps(y)
&gt;&gt;&gt; pickled
b'\x80\x03c__main__\nX\nq\x00)\x81q\x01}q\x02X\x03\x00\x00\x00argq\x03K*sb.'
</code></pre>
<p>the <code>pickled</code> is the value to store into database <em>in a field of a document</em>, like:</p>
<pre><code>my_doc = { 'linkage': pickled }
self.collection.insert(my_doc)
</code></pre>
<p>Now you can restore the original value with <code>pickle.loads</code></p>
<pre><code>&gt;&gt;&gt; restored = pickle.loads(pickled)
&gt;&gt;&gt; restored
&lt;__main__.OurClass object at 0x7fc91cb35cf8&gt;
&gt;&gt;&gt; restored.arg
42
</code></pre>
</div>
<span class="comment-copy">what does <code>linkage[0]</code> return?</span>
<span class="comment-copy">@Michael: it return pylink object as given in result\</span>
<span class="comment-copy">thanks, but getting different error, can you please check update</span>
<span class="comment-copy">@nlper please provide <i>full</i> stack traceback <b>always</b></span>
<span class="comment-copy">yeah sure, please see update</span>
<span class="comment-copy">yes because the result is a string that is not possible to use as a mongodb <i>document</i>, only a field.</span>
