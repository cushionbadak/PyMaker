<div class="post-text" itemprop="text">
<pre><code>entrada = str(input().lower())

replace = "mem".lower()
find = entrada.lower()
count = 0
while (entrada.find(replace) != -1):
   entrada = entrada.replace(replace, "", 1)
   count +=1

print(count) 
</code></pre>
<p>No count,list or lambda can be used.
I'm suposed to make a program that receives a lower string from the user then finds, counts and print the number of times a substring appeared.
But I'm having problems with overlapping strings.</p>
<p>example: string is memem, the expected exit is 2</p>
</div>
<div class="post-text" itemprop="text">
<p>One way to do this is to use the second argument of <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow">str.find</a> which indicates an optional index to start searching for the substring within a string.</p>
<p>From the <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow">docs</a>:</p>
<blockquote>
<p>str.find(sub[, start[, end]])Â¶ Return the lowest index in the string
  where substring sub is found, such that sub is contained in the slice
  s[start:end]. Optional arguments start and end are interpreted as in
  slice notation. Return -1 if sub is not found.</p>
</blockquote>
<p>So if we keep track of the <code>last_index</code> found in a variable, we can simply start the search for the substring again in the next possible index. Expressed in code, this is the expression 
<code>last_index + 1</code>. If <code>last_index</code> is ever -1, we stop searching for the substring and output our count:</p>
<pre><code>mystr = 'memem'
mysubstr = 'mem'
count = 0
last_index = -1
while True:
    last_index = mystr.find(mysubstr, last_index + 1)
    if last_index == -1:
        break
    count += 1

print(count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use</p>
<pre><code>i = 0
while True:
    i = entrada.find(replace, i) + 1
    if i:
         count += 1
    else:
        break
</code></pre>
<p>This will then find <code>replace</code> in <code>entrada</code>, increment the count, find <code>replace</code> in <code>entrada[i+1:]</code> where <code>i</code> is the start of the previous match, increment the count, and repeat forever.</p>
</div>
<span class="comment-copy">First I'm not sure why you're casting to string after lower. if input is not string, lower will most likely throw an <code>AttributeError</code>. Also my question - the user provides both the substring and string?</span>
<span class="comment-copy">Only string and it has to be lower</span>
<span class="comment-copy">have you tried <a href="http://stackoverflow.com/a/29850431/4637583">my approach</a> from your other thread?  oops, Sorry that wasn't you.</span>
