<div class="post-text" itemprop="text">
<p>I have an issue with my Django 1.8/Python 3.4 setup.
When running </p>
<pre><code>python -Wall ./manage.py runserver
</code></pre>
<p>I get the following warning:</p>
<pre><code>/lib/python3.4/logging/config.py:763: 
ResourceWarning: unclosed file &lt;_io.TextIOWrapper name='/Users/furins/logs/test-project.log' mode='a' encoding='UTF-8'&gt;
  for h in logger.handlers[:]:
</code></pre>
<p>these are the settings in <code>settings.py</code> related to logging:
</p>
<pre><code>LOGGING_LEVEL = 'DEBUG'

LOG_DATE_FORMAT = '%d %b %Y %H:%M:%S'

LOG_FORMATTER = logging.Formatter(
    '%(asctime)s | %(levelname)-7s | %(name)s | %(message)s',
    datefmt=LOG_DATE_FORMAT)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'standard': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': LOG_DATE_FORMAT
        },
    },
    'handlers': {
        'logfile': {
            'level': LOGGING_LEVEL,
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': PROJECT_DIR / 'logs/test-project.log',
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
            'formatter': 'standard',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'null': {
            'level': 'DEBUG',
            'class': 'django.utils.log.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'logfile'],
            'propagate': True,
            'level': 'DEBUG',
        },
        'django.db.backends': {
            'handlers': ['console', 'logfile'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.request': {
            'handlers': ['console', 'mail_admins', 'logfile'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'eurogielle': {
            'handlers': ['console', 'logfile', 'mail_admins'],
            'level': LOGGING_LEVEL,
            'propagate': True
        },
        'eurogielle2': {
            'handlers': ['console', 'logfile', 'mail_admins'],
            'level': LOGGING_LEVEL,
            'propagate': True
        },
        'eurogielle_management': {
            'handlers': ['console', 'logfile', 'mail_admins'],
            'level': LOGGING_LEVEL,
            'propagate': True
        },
        'eurogielle_prodotti': {
            'handlers': ['console', 'logfile', 'mail_admins'],
            'level': LOGGING_LEVEL,
            'propagate': True
        },
    }
}
</code></pre>
<p>I've tried to search on Google and SO for a similar issue without luck. I know how to silence this warning, of course, but I would like to know if this warning is referring to something that may leak resources in production and if there is a way to "close the file". </p>
<p>Did Any Stackoverflow Django ninja had the same issue?</p>
</div>
<div class="post-text" itemprop="text">
<p>After further search I've found <a href="http://bugs.python.org/issue23010" rel="noreferrer">a potentially related issue</a> and <a href="http://codeinthehole.com/writing/a-deferred-logging-file-handler-for-django/" rel="noreferrer">a blog post</a> that drove my to the right direction. </p>
<p>It was really simple, indeed. I'd just had to add a <code>'delay': True</code> to the configuration:</p>
<pre><code>    'logfile': {
        'level': LOGGING_LEVEL,
        'class': 'logging.handlers.RotatingFileHandler',
        'filename': PROJECT_DIR / 'logs/test-project.log',
        'maxBytes': 1024 * 1024 * 5,  # 5 MB
        'backupCount': 5,
        'formatter': 'standard',

        'delay': True  // &lt;- this line solved the problem!

    },
</code></pre>
<p>and the warning was gone! 
For further reference the property is explained <a href="https://docs.python.org/3/library/logging.handlers.html#rotatingfilehandler" rel="noreferrer">in python docs</a>:</p>
<blockquote>
<p>If delay is true, then file opening is deferred until the first call to emit().</p>
</blockquote>
</div>
