<div class="post-text" itemprop="text">
<p>I have a CSV file I'd like to read into a dictionary for subsequent insertion into a MongoDB collection entitled projects.</p>
<p>I accomplished this with the following:</p>
<pre><code>with open('opendata_projects.csv') as f:
    records = csv.DictReader(f)
    projects.insert(records)
</code></pre>
<p>However, I found my poor sandbox account couldn't hold all the data. In turn, I'd like to read in the first <em>n</em> lines so I can play around with the data and get used to working with MongoDB.</p>
<p>First I checked the docs for the <code>csv.DictReader</code> function:</p>
<blockquote>
<p>class csv.DictReader(csvfile, fieldnames=None, restkey=None, restval=None, dialect='excel', *args, **kwds)</p>
</blockquote>
<p>But the function doesn't seem to allow for entering in the number of rows I'd like as a parameter.</p>
<p>So I attempted to do so by writing the following code:</p>
<pre><code>with open('opendata_projects.csv') as f:
    records = csv.DictReader(f)
    for i in records:
        if i &lt;= 100:
            projects.insert(i)
</code></pre>
<p>Which was followed by the error:</p>
<pre><code>TypeError: unorderable types: dict() &lt;= int()
</code></pre>
<p>This prompted me to look into dictionaries further, and I found they are unordered. Nevertheless, it seems an example from the Python <a href="https://docs.python.org/2/library/csv.html#csv-fmt-params" rel="nofollow">csv docs</a> suggests I can iterate with <code>csv.DictReader</code>:</p>
<pre><code>with open('names.csv') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        print(row['first_name'], row['last_name'])
</code></pre>
<p>Is there a way to accomplish what I'd like to do by using these functions?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice"><code>itertools.islice</code></a>, like this</p>
<pre><code>import csv, itertools

with open('names.csv') as csvfile:
    for row in itertools.islice(csv.DictReader(csvfile), 100):
        print(row['first_name'], row['last_name'])
</code></pre>
<p><code>islice</code> will create an iterator from the iterable object you pass and it will allow you iterate till the limit, you pass as the second parameter.</p>
<hr/>
<p>Apart from that, if you want to count yourself, you can use <a href="https://docs.python.org/3/library/functions.html#enumerate"><code>enumerate</code></a> function, like this</p>
<pre><code>for index, row in enumerate(csv.DictReader(csvfile)):
    if index &gt;= 100:
        break
    print(row['first_name'], row['last_name'])
</code></pre>
</div>
