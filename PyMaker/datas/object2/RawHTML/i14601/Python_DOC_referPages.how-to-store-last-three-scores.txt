<div class="post-text" itemprop="text">
<p>I have been doing a school project recently which which is about a school maths quiz. I successfully done two of the three tasks of my project. However the third task is seeming quite difficult.</p>
<p>I'm currently trying to store the last three scores of that student. However I can't quite get it to work. I did have a look at this thread: <a href="https://stackoverflow.com/questions/28785780/displaying-only-the-highest-of-a-persons-3-most-recent-scores-saved-in-a-txt">Displaying only the highest of a person's 3 most recent scores, saved in a .txt file</a>. However I am having an error in my code for the for:</p>
<pre><code>scores = file.readlines()
</code></pre>
<p>Which gives me an error saying that it's not readable. So unfortunately I couldn't get that code to work.</p>
<p>So what I'm trying to do is score the last three scores of the student. Then if there is more then 3, then I want to delete the least recent score.</p>
<p>This is my code:</p>
<pre><code>import random
import csv
import operator
import os.path
import sys

user_scores = {}

validclass = "No"
classfile = "Class"
studentteacher = "None"

while studentteacher == "None":
    studentteacherinput = input("Are you a Teacher or a Student?")

if studentteacherinput == "Teacher":
        studentteacher = "Teacher"
        print(studentteacher)
    elif studentteacherinput == "Student":
        studentteacher = "Student"
        print(studentteacher)
    else:
        print("Please enter the one applicable ' Student ' or ' Teacher '.")

while validclass == "No":

    pupilclass = input("What class are you in or what class would you like to see??")
    print(pupilclass)

    if pupilclass == "1":
        if os.path.exists("class1scores.txt") and studentteacher == "Teacher":
            file = open("class1scores.txt", "r")
            validclass = "Yes"
        elif os.path.exists("class1scores.txt") and studentteacher == "Student":
            file = open("class1scores.txt", "a")
            classfile = "class1scores.txt"
            validclass = "Yes"
        else:
            file = open("class1scores.txt", "w")
            validclass = "Yes"

    elif pupilclass == "2":
        if os.path.exists("class2scores.txt") and studentteacher == "Teacher":
            file = open("class2scores.txt", "r")
            validclass = "Yes"
        elif os.path.exists("class2scores.txt") and studentteacher == "Student":
            file = open("class2scores.txt", "a")
            classfile = "class2scores.txt"
            validclass = "Yes"
        else:
            file = open("class1scores.txt", "w")
            validclass = "Yes"

    elif pupilclass == "3":
        if os.path.exists("class3scores.txt") and studentteacher == "Teacher":
            file = open("class3scores.txt", "r")
            validclass = "Yes"
        elif os.path.exists("class3scores.txt") and studentteacher == "Student":
            file = open("class3scores.txt", "a")
            classfile = "class3scores.txt"
            validclass = "Yes"
        else:
            file = open("class1scores.txt", "w")
            validclass = "Yes"

file.seek(0)
scores = file.readline()

if studentteacher == "Teacher":
    teacherinput = input("How would you like to sort the list? ' Alphabetically ' to sort it alphabetically with the students highest score, ' Highest ' for the highest scores with highest to lowest or ' Average ' for average scores with highest to lowest")

    if teacherinput == "Alphabetically":
        print("alphabetically")
        csv1 = csv.reader(file, delimiter = ",")
        sort = sorted(csv1, key = operator.itemgetter(0))

        for eachline in sort:
            print(eachline)

        sys.exit()

    if teacherinput == "Highest":
        print("Highest")

    if teacherinput == "Average":
        print("Average")

namecheck = "invalid"

while namecheck == "invalid":
    name = input("Please enter your name?")
    if name.isalpha():
        print("Your name is valid.")
        namecheck = "valid"
        #file.write(name + ",")
    else:
        print("Please enter a valid name, only containing letters.")

operation = input("Hello %s! Would you like to do Addition, Subtraction or Multiplication" % (name))

score = 0

if operation == "Addition":
    for i in range(0, 10):
        number1 = random.randint(1, 20)
        number2 = random.randint(1, 20)
        answer = number1 + number2
        question = input("What is " + str(number1) + " + " + str(number2))

        if question.isdigit() == True:
            int(question)
        else:
            question = input("Please enter a answer with digits only. What is " + str(number1) + " + " + str(number2))

        if int(question) == answer:
            score += 1
            print("Correct!")
        else:
            print("Wrong!")

elif operation == "Subtraction":
    for i in range(0, 10):
        number1 = random.randint(1, 20)
        number2 = random.randint(1, 20)
        answer = number1 - number2
        if number2 &gt;= number1:
            answer = number2 - number1
            question = input("What is " + str(number2) + " - " + str(number1))
        else:
            question = input("What is " + str(number1) + " - " + str(number2))

        if question.isdigit() == True:
            int(question)
        else:
            if number2 &gt;= number1:
                answer = number2 - number1
                question = input("Please enter a positive answer with digits only. What is " + str(number2) + " - " + str(number1))
            else:
                question = input("Please enter a positive answer with digits only. What is " + str(number1) + " - " + str(number2))

        if int(question) == answer:
            score += 1
            print("Correct!")
        else:
            print("Wrong!")

elif operation == "Multiplication":
    for i in range(0, 10):
        number1 = random.randint(1, 20)
        number2 = random.randint(1, 20)
        answer = number1 * number2
        question = input("What is " + str(number1) + " x " + str(number2))

        if question.isdigit() == True:
            int(question)
        else:
            question = input("Please enter a answer with digits only. What is " + str(number1) + " + " + str(number2))

        if int(question) == answer:
            score += 1
            print("Correct!")
        else:
            print("Wrong!")



print("Your final score is %s/10, Well Done!" % (score))
#file.write(str(score) + "\n")

#This is the code which I was trying to use to get the last 3 scores.
user_scores = {}
for line in scores:
    name, score = line.rstrip('\n').split(',')
    score = int(score)
    if name not in user_scores:
        user_scores[name] = []       # Initialize score list
    user_scores[name].append(score)  # Add the most recent score
    if len(user_scores[name]) &gt; 3:
        user_scores[name].pop(0)     # If we've stored more than 3, get rid of the oldest

file.close()
</code></pre>
<p>Sorry for the inefficient method, but it's just the way I like to think. And thanks for your time.</p>
<pre><code>#This is the code which I was trying to use to get the last 3 scores.
user_scores = {}
for line in scores:
    name, score = line.rstrip('\n').split(',')
    score = int(score)
    if name not in user_scores:
        user_scores[name] = []       # Initialize score list
    user_scores[name].append(score)  # Add the most recent score
    if len(user_scores[name]) &gt; 3:
        user_scores[name].pop(0)     # If we've stored more than 3, get rid of the oldest
</code></pre>
<p>So I took that from the link mentioned above. My aim is to try and only get three scores, and not above 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Implement a queue - <a href="https://docs.python.org/2/library/collections.html#collections.deque" rel="nofollow">https://docs.python.org/2/library/collections.html#collections.deque</a></p>
<pre><code>from collections import deque

for line in scores:
    name, score = line.rstrip('\n').split(',')
    score = int(score)
    if name not in user_scores:
        user_scores[name] = deque(maxlen=3)
    temp_q = user_scores[name]
    temp_q.append(str(score))
    user_scores[name] = temp_q
</code></pre>
<p>Now user scores is a dict with key as name, and values as a deque object with just 3 scores. You need to iterate through them, cast the queue to list and join the elements to write them to file. </p>
<pre><code>filehandle = open('outputfile.csv' ,'w')
for key, values in user_scores.iteritems():
    filehandle.write(name + ',')
    filehandle.write(','.join(list(values)) + '\n')

filehandle.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you seem to know, there are different modes you can <code>open()</code>(<a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow">2</a>/<a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow">3</a>) a file in. If you use <code>"a"</code> or <code>"w"</code>, you can't read from the file. You can add a <code>"+"</code>, to allow reading, too, though:</p>
<pre><code>open("file.txt","a+")
</code></pre>
<p>Also, I'm not sure what version of Python you're using, but <a href="https://docs.python.org/2/library/functions.html#file" rel="nofollow"><code>file()</code></a> is a built-in type and function in Python 2, so you shouldn't use it as a variable name if that's the version you're using.</p>
</div>
<span class="comment-copy">Can you reduce your code example to something that only highlights the problem? Check out <a href="https://stackoverflow.com/help/mcve">how to write a minimal, complete and verifiable example</a>.</span>
<span class="comment-copy">Are you by any chance giving the options (when asked for all those inputs) that would lead to one of the <code>file = open(somefile, 'w')</code> lines? You cannot read from a file that is opened just for writing.</span>
<span class="comment-copy">Also you can't read from a file if the file's permissions does not allow it for the OTHERS group. When I was at school my teachers gave us some files with these properties locked.</span>
<span class="comment-copy">You should really learn about functions... Your code might be more or less kind-of "working", but it's a big ball of mudd.</span>
<span class="comment-copy">That error comes from trying to execute the <code>readline()</code> method on a file that wasn't opened for <i>reading</i>. I am still making a (fairly educated) guess here, but you are probably feeding your script that you're a "Student", in which case you end up in an <code>open(..., 'a')</code> case. Then calling <code>readline</code> will fail. Try it.</span>
<span class="comment-copy">So I added this code, and I'm getting this error: file.write(str(score) + "\n") I have these two in my code: file.write(name + ",") and file.write(str(score) + "\n") before the code. @Rcynic</span>
<span class="comment-copy">I've edited the answer to show the full picture - which should address the error you're getting.</span>
<span class="comment-copy">Thanks for that @Rcynic. I just needed to change one part which was .iteritems() as it's not supported in Python 3 anymore. I removed the iter to make it .items() and it worked. Found this out from: <a href="http://stackoverflow.com/questions/20444340/iter-values-item-in-dictionary-does-not-work" title="iter values item in dictionary does not work">stackoverflow.com/questions/20444340/…</a>.</span>
<span class="comment-copy">I get this error: name, score = line.rstrip('\n').split(',') ValueError: need more than 1 value to unpack @Rcynic</span>
<span class="comment-copy">Check your input file - maybe you have more columns?</span>
