<div class="post-text" itemprop="text">
<p>I have a dictionary of the form <code>{'a': [1, 2, 3], 'b': [1, 2, 3, 4], 'c': [13. 11]}</code>. I want to find the length of the longest value in the dict. In this case that will be 4. I know how to do this with an array as follows:</p>
<pre><code>maxSoFar = 0;
for key in dict.keys():
  if dict[key] &gt; maxSoFar :
    maxSoFar = len(dict[key])
</code></pre>
<p>My question is, is there a magic one liner to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, using <a href="https://docs.python.org/3/library/functions.html?highlight=max#max" rel="nofollow"><code>max</code> function</a></p>
<pre><code>max(len(l) for l in dict.values()) # 4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here:</p>
<pre><code>max(map(len, dict.values()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about</p>
<pre><code>max(dict.values(), key=len)
</code></pre>
</div>
<span class="comment-copy">With so many answers, can we have a comparison on speed?</span>
<span class="comment-copy">Sounds like premature optimization.</span>
<span class="comment-copy">This will return <code>[1, 2, 3, 4]</code>, not 4.</span>
<span class="comment-copy">This is nice because it will give you the list itself.</span>
<span class="comment-copy">@vaultah I thought that is what the OP wanted - see the question again</span>
<span class="comment-copy">Just did - <i>I want to find the length of the longest value in the dict</i></span>
<span class="comment-copy">The question and the example code are contradictory</span>
