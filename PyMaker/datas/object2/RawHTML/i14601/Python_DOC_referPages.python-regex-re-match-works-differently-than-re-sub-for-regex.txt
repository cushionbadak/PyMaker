<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7616998/python-regex-string-matching">Python regex string matching?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to check if my string contains some regular expression.</p>
<p>The strange thing is is, that while <code>re.sub()</code> would find the regex and will replace it, <code>re.match()</code> does not return any results...</p>
<p>Here is my usage:</p>
<p><strong>re.match()</strong>: - trying to match the pattern <code>,\s*param2</code> - nothing is returned</p>
<pre><code>&gt;&gt;&gt; str = 'func(param1, param2)'
&gt;&gt;&gt; str
'func(param1, param2)'
&gt;&gt;&gt; results = re.match(r',\s*param2', str)
&gt;&gt;&gt; print(results)
None
</code></pre>
<p><strong>re.sub()</strong>: - Successfully replacing the same pattern <code>,\s*param2</code> by " hello"</p>
<pre><code>&gt;&gt;&gt; str = 'func(param1, param2)'
&gt;&gt;&gt; str
'func(param1, param2)'
&gt;&gt;&gt; new_str = re.sub(r',\s*param2', ' hello', str)
&gt;&gt;&gt; new_str
'func(param1 hello)'
</code></pre>
<p>How can I match the pattern <code>,\s*param2</code> without substituting it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Note that <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow"><code>re.match</code></a> matches from the beginning of the string. You are probably looking for <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow"><code>re.search</code></a>. See <a href="https://docs.python.org/3/library/re.html#search-vs-match" rel="nofollow">search vs. match</a> for some details.</p>
<pre><code>&gt;&gt;&gt; str = 'func(param1, param2)'
&gt;&gt;&gt; re.match(r',\s*param2', str)
&gt;&gt;&gt; re.search(r',\s*param2', str)
&lt;_sre.SRE_Match object at 0x7f16b72b83d8&gt;
</code></pre>
</div>
<span class="comment-copy"><code>re.match</code> matches from the beginning of the string. Have you tried <code>re.search</code>?</span>
<span class="comment-copy">Is <code>re.search</code> the same as <code>re.match</code> except for the "beginning" thing?</span>
<span class="comment-copy">Works! Thank you! I</span>
<span class="comment-copy">I agree that the problem itself is the same, but it is not really the same question. I don't know... You decide.. If you think it should be marked as duplicate, mark it</span>
<span class="comment-copy">This is exactly what I needed! Thank you!</span>
