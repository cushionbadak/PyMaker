<div class="post-text" itemprop="text">
<p>I have an ip address 1.2.3.4 with a subnet mask 255.255.255.0</p>
<p>I want to convert this to cidr notation
1.2.3.4/24</p>
<p>How do I do this in Python3?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/howto/ipaddress.html#ipaddress-howto" rel="nofollow"><code>ipaddress</code></a> module in the standard library.</p>
<hr/>
<p>An address plus a netmask is either a network or an interface, not an address. Given that you've got some of the host bits set (it's 1.2.3.4, not 1.2.3.0), either you've got an interface, or you've got a non-canonical name for a network; I'll assume it's an interface, so use <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.ip_interface" rel="nofollow"><code>ip_interface</code></a>:</p>
<pre><code>&gt;&gt;&gt; i = ipaddress.ip_interface('1.2.3.4/255.255.255.0')
</code></pre>
<p>Or, if you want to make sure it's explicitly IPv4 not IPv6:</p>
<pre><code>&gt;&gt;&gt; i = ipaddress.IPv4Interface('1.2.3.4/255.255.255.0')
</code></pre>
<p>Or you can compose it out of an address and a network, instead of out of a combined string. It depends on what format you have this information in and what makes sense to you.</p>
<hr/>
<p>To get the CIDR format, use the <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Interface.with_prefixlen" rel="nofollow"><code>with_prefixlen</code></a> accessor:</p>
<pre><code>&gt;&gt;&gt; i.with_prefixlen
'1.2.3.4/24'
</code></pre>
<hr/>
<p>You can also do all kinds of other nifty thingsâ€”extract the address (<code>1.2.3.4</code>) as <code>i.address</code>, or the network (<code>1.2.3.0/24</code>) as <code>i.network</code>, or enumerate all the addresses on the network by treating <code>i.network</code> as a sequence, etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://github.com/autocracy/python-ipy/" rel="nofollow">IPy</a> library to do this. If you scroll down to the documentation you can see the string conversions it can do. The one we're after is <code>strNormal(1)</code></p>
<pre><code>IP("1.2.3.4/255.255.255.0").strNormal(1)
</code></pre>
</div>
<span class="comment-copy">from the command line.</span>
<span class="comment-copy">sum([bin(int(x)).count('1') for x in '255.255.255.0'.split('.')])</span>
<span class="comment-copy">@PadraicCunningham: What format what comes in? I assume he just has two strings <code>'1.2.3.4'</code> and <code>'255.255.255.0'</code>. (I suppose it's <i>possible</i> that he has, say, two 32-bit integers 16909060 and 4294967040, but I'd think he would have mentioned it if so.)</span>
