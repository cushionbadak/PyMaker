<div class="post-text" itemprop="text">
<p>I have this list of strings:</p>
<pre><code>x = ['+27', '05', '1995 F']
</code></pre>
<p>I want some code that outputs this:</p>
<pre><code>['+', '27', '05', '1995', 'F']
</code></pre>
<p>I was thinking about using the <code>.split()</code> function on the last element so I wrote this code:</p>
<pre><code>x=['+27', '05', '1995 F']
x[2]=x[2].split()
</code></pre>
<p>This outputs:</p>
<pre><code>['+27', '05', ['1995', 'F']]
</code></pre>
<p>How do ensure the 2nd element is not a sub-list, and instead output this?</p>
<pre><code>['+27', '05','1995','F']
</code></pre>
<p>Should I use <code>insert</code> and <code>del</code>?</p>
<p>I wrote this for the first element using <code>insert</code> and <code>del</code>:</p>
<pre><code>x=x.split("/")
x.insert(0,x[0][0])
x.insert(1,x[1][1:])
del x[2]
</code></pre>
<p>This outputs:</p>
<pre><code>['+', '27', '05', '1995 F']
</code></pre>
<p>Is there a better way?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a solution using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby()</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow"><code>str.isdigit()</code></a> in a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import groupby
&gt;&gt;&gt; x=['+27', '05', '1995 F']
&gt;&gt;&gt; [''.join(g).strip() for s in x for k, g in groupby(s, str.isdigit)]
['+', '27', '05', '1995', 'F']
</code></pre>
<p>This works by splitting each string in <code>x</code> into groups of characters based on whether they're digits or not, then joining those groups back into strings, and finally stripping whitespace from the resulting strings.</p>
<p>As you can see, unlike the other solutions presented so far, it splits '+27' into '+' and '27' (as your question says you want).</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>x = ['+27', '05', '1995 F']
l = []
[l.extend(e.split()) for e in x]
print l
</code></pre>
<p>and checkout this for the fancier one <a href="https://stackoverflow.com/questions/2158395/flatten-an-irregular-list-of-lists-in-python">Flatten (an irregular) list of lists</a></p>
</div>
<div class="post-text" itemprop="text">
<p>"How do ensure the 2nd element is not a sub-list output this?"
Use <code>extend</code> for that:</p>
<pre><code>In [32]: result = []

In [34]: inp = ['+27', '05', '1995 F']

In [35]: [result.extend(i.split()) for i in inp]
Out[35]: [None, None, None]

In [36]: result
Out[36]: ['+27', '05', '1995', 'F']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is one quick solution:</p>
<pre><code>x=['+27', '05', '1995 F']
finlist=[]
for element in x:
    for val in element.split(" "):
        finlist.append(val)
print finlist
</code></pre>
<p>Or: </p>
<pre><code>x=['+27', '05', '1995 F']
finlist=[]
for element in x:
    finlist.extend(element.split(" "))
print finlist
</code></pre>
</div>
<span class="comment-copy">I fixed a <b>lot</b> of capitalization, indentation, spelling and formatting errors in your post. Please take a bit more effort for future questions to keep quality high.</span>
<span class="comment-copy">whoops I missed the + 27 part.  confusing question</span>
