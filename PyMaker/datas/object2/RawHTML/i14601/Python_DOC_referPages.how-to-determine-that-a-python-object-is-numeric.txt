<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11204789/how-to-properly-use-pythons-isinstance-to-check-if-a-variable-is-a-number">How to properly use python's isinstance() to check if a variable is a number?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>What is the best way to determine if a Python object is numeric?
I'm using the following test</p>
<pre><code>type(o) in [int, long, float, complex]
</code></pre>
<p>But I wonder if there is another way.</p>
</div>
<div class="post-text" itemprop="text">
<p>The preferred approach is to use <a href="https://docs.python.org/3/library/numbers.html#numbers.Number" rel="nofollow"><code>numbers.Number</code></a>, which is</p>
<blockquote>
<p>The root of the numeric hierarchy. If you just want to check if an
  argument <em>x</em> is a number, without caring what kind, use <em>isinstance(x,
  Number</em>)</p>
</blockquote>
<p>as shown below</p>
<pre><code>In [1]: import numbers

In [2]: isinstance(1, numbers.Number)
Out[2]: True

In [3]: isinstance(1.0, numbers.Number)
Out[3]: True

In [4]: isinstance(1j, numbers.Number)
Out[4]: True
</code></pre>
<p>Also, <code>type(o) in [int, long, float, complex]</code> can be rewritten as</p>
<pre><code>isinstance(o, (int, long, float, complex))
</code></pre>
<p>to make it more robust, as in able to detect subclasses of <em>int</em>, <em>long</em>, <em>float</em> and <em>complex</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try the <a href="https://docs.python.org/2/library/functions.html#isinstance" rel="nofollow"><code>isinstance</code></a> function.</p>
<blockquote>
<p>Return true if the object argument is an instance of the classinfo argument, or of a (direct, indirect or virtual) subclass thereof</p>
</blockquote>
<p>Sample Usage</p>
<pre><code>isinstance(o, (int, long, float, complex))
</code></pre>
</div>
<span class="comment-copy">Sometimes you <i>do</i> need such explicit tests, but it's nice to avoid them when possible so that you get the full benefits of <a href="http://en.wikipedia.org/wiki/Duck_typing" rel="nofollow noreferrer">duck typing</a>.</span>
<span class="comment-copy">And of course <code>isinstance(o, numbers.Number)</code> is generally superior to <code>isinstance(o, (int, long, float, complex))</code> since it means that any object which claims to be some kind of number will pass the test.</span>
