<div class="post-text" itemprop="text">
<p>I have a string format let's say  where A = alphanumeric and N = Integer so the template is "AAAAAA-NNNN" now the user sometimes will ommit the dash, and sometimes the "NNNN" is only three digits in which case I need it to pad a 0. The first digit of "NNNN" has to be 0, thus if it is a number is is the last digit of the "AAAAAA" as opposed to the first digit of "NNNN". So in essence if I have the following inputs I want the following results:</p>
<p><strong>Sample Inputs:</strong></p>
<pre><code>"SAMPLE0001"
"SAMPL1-0002"
"SAMPL3003"
"SAMPLE-004"
</code></pre>
<p><strong>Desired Outputs:</strong></p>
<pre><code>"SAMPLE-0001"
"SAMPL1-0002"
"SAMPL3-0003"
"SAMPLE-0004"
</code></pre>
<p>I know how to check for this using regular expressions but essentially I want to do the opposite.  I was wondering if there is a easy way to do this other than doing a nested conditional checking for all these variations.  I am using python and pandas but either will suffice.  </p>
<p>The regex pattern would be:</p>
<pre><code>"[a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9][a-zA-Z0-9]-\d\d\d\d"
</code></pre>
<p>or in abbreviated form:</p>
<pre><code>"[a-zA-Z0-9]{6}-[\d]{4}"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It would be possible through two <code>re.sub</code> functions.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = '''SAMPLE0001
SAMPL1-0002
SAMPL3003
SAMPLE-004'''
&gt;&gt;&gt; print(re.sub(r'(?m)(?&lt;=-)(?=\d{3}$)', '0', re.sub(r'(?m)(?&lt;=^[A-Z\d]{6})(?!-)', '-', s)))
SAMPLE-0001
SAMPL1-0002
SAMPL3-0003
SAMPLE-0004
</code></pre>
<p>Explanation:</p>
<ul>
<li><p><code>re.sub(r'(?m)(?&lt;=^[A-Z\d]{6})(?!-)', '-', s)</code> would be processed at first. It just places a hyphen after the 6th character from the beginning only if the following character is not a hyphen.</p></li>
<li><p><code>re.sub(r'(?m)(?&lt;=-)(?=\d{3}$)', '0', re.sub(r'(?m)(?&lt;=^[A-Z\d]{6})(?!-)', '-', s))</code> By taking the above command's output as input, this would add a digit <code>0</code> after to the hyphen and the characters following must be exactly 3.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>An alternative solution, it uses <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow">str.join</a>:</p>
<pre><code>import re
inputs = ['SAMPLE0001', 'SAMPL1-0002', 'SAMPL3003','SAMPLE-004']
outputs = []
for input_ in inputs:
    m = re.match(r'(\w{6})-?\d?(\d{3})', input_)
    outputs.append('-0'.join(m.groups()))
print(outputs)
# ['SAMPLE-0001', 'SAMPL1-0002', 'SAMPL3-0003', 'SAMPLE-0004']
</code></pre>
<p>We are matching the regex <code>(\w{6})-?\d?(\d{3})</code> against the input strings and joining the captured groups with the string <code>'-0'</code>. This is very simple and fast.</p>
<p>Let me know if you need a more in-depth explanation of the regex itself.</p>
</div>
<span class="comment-copy">FYI... you can simplify that regex at the bottom like this <code>[a-zA-Z]{6}-[\d]{4}</code></span>
<span class="comment-copy">how the above regex would convert <code>SAMPLE003</code> to <code>SAMPLE-0003</code> ?</span>
<span class="comment-copy">it wouldn't, that's the problem I am trying to solve</span>
<span class="comment-copy">@aensm it won't match the second case.</span>
<span class="comment-copy">thanks aensm for the abbreviated syntax</span>
<span class="comment-copy">what are you the regex king?  SO is making me wait another minute to accept the answer!</span>
<span class="comment-copy">now I just need to figure out what this all means :) but it works!</span>
