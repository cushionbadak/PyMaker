<div class="post-text" itemprop="text">
<p>I am searching for pythonic way of getting first N element from a DefaultDict. I searched for it in few forums. Couldn't find any useful solution. I tried the following but this doesn't stop the execution as expected.</p>
<p>Code:</p>
<pre><code>d_2 = defaultdict(list)
i = -1

for x,y in sorted(d_2.items(), reverse = True):
            i = i + 1
            if i &lt;= 20:
                print ("%d, %s" %(i,x))
                most_used_val_bar.add(str(x),y)
            else:
                break
most_used_val_bar.render_to_file(directory + "/most_used_values.svg")
</code></pre>
<p>But this code doesn't break when i goes over 20, I am using this for loop to plot using <strong>Pygal Plotting Library</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>If you're actually looking for the first 20 items in a <code>defaultdict</code>, that's meaningless; the items in a <code>defaultdict</code>, as with a normal <code>dict</code>, are in arbitrary order, so there are no "firsts".</p>
<p>But from your code, I suspect you may be looking for the first 20 items in the iterator you got from sorting the dict's items. In that case, the answer is easy. It doesn't matter that the values originally came from a <code>defaultdict</code>; you've got an iterable, you want to slice it to the first 20 items, you call <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow"><code>islice</code></a>:</p>
<pre><code>for x, y in itertools.islice(sorted(d_2.items(), reverse=True), 20):
</code></pre>
<p>That being said, it may be clearer (and will be more space-efficient) to just build a list of the top 20 in the first place, instead of building a sorted list and then taking the top 20:</p>
<pre><code>for x, y in heapq.nsmallest(20, d_2.items()):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Iterate over a slice of the first 20 elements of your sorted dictionary item list:</p>
<pre><code>for x,y in sorted(d_2.items(), reverse = True)[:20]:
</code></pre>
</div>
<span class="comment-copy">There is no such thing as "first N elements" in a <code>defaultdict</code>, because, as with a plain <code>dict</code>, the elements are in arbitrary order.</span>
<span class="comment-copy">Also, your <code>d_2</code> here is empty, so it doesn't have <i>any</i> elements.</span>
