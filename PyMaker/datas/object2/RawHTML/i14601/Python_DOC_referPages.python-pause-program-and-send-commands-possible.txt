<div class="post-text" itemprop="text">
<p>Is there a way to pause a Python program and be able to send commands from the prompt during the pause before resuming the code ?</p>
<p>The only way I found to do a pause is to ask for a keyboard entry (like press enter for example) but you can't type commands while it's waiting for you to press enter. 
Is there a way to really pause the code? have access to all variables and possibly modify them in the prompt before resuming?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to use this for debugging, check out <code>pdb</code>, the <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow">Python debugger</a>. You can start you script under <code>pdb</code>, set a breakpoint on the line you want, and then run your script.</p>
<pre><code>python -m pdb script.py
b 15                       # &lt;-- Set breakpoint on line 15
c                          # "continue" -&gt; run your program
# will break on line 15
</code></pre>
<p>You can then inspect your variables and call functions. Since Python 3.2, you can also use the <code>interact</code> command inside <code>pdb</code> to get a regular Python shell at the current execution point!</p>
<p>You can also include the following line directly in your program to stop at that line end drop into pdb:</p>
<pre><code>import pdb; pdb.set_trace()
</code></pre>
<p>Then you won't even have to use <code>-m pdb</code> on the commandline.</p>
</div>
<span class="comment-copy"><code>pdb.set_trace</code> is probably what you want.</span>
<span class="comment-copy">If it's not an issue of debugging like @Kevin says, maybe you are looking for an Input loop. which is the same as your 'readline' solution only in a While True: segment with a break operation. Then you can exec() some input and wait for a 'continue' command to break the loop.</span>
<span class="comment-copy">well I have interpolated data that I compare to the original data. But since the interpolation can be bad sometimes I wanted to pause and check the plot to possibly correct the interpolated data to whatever offset may have appeared before continuing to use it. So far I just set break points in the program and then run it from the start after I did the correction, I just wanted a pause that allows you to make modifications and then keep executing the code where it was paused.</span>
<span class="comment-copy">Well then, have your work done in another thread, testing after each iteration for a pause flag. In your main thread - have an Input loop, on a pause command set the pause flag - go to the exec() mode, until you get a continue command - reset the flag restart the thread.</span>
<span class="comment-copy">I've found <a href="https://pypi.python.org/pypi/pudb" rel="nofollow noreferrer">pudb</a> (a graphical debugger) to be a nice tool for debugging too. Completely optional, of course.</span>
<span class="comment-copy">Nice, didn't know about that! The world knows Python needs a better console debugger. Wanted to hack on ipdb a bit, but didn't find the time yet.</span>
