<div class="post-text" itemprop="text">
<p>I have a file.json and I load in python in this way:</p>
<pre><code>fd = open('originalfile.json' 'r', encoding='utf8')
</code></pre>
<p>Then I do some modifications and one more time I write a new file in this way</p>
<pre><code>with open("newfile.json", "w", encoding="utf-8") as outfile:
    outfile.write('[\n')
    for i in result:
        json.dump(i, outfile, indent=8)
        outfile.write(',\n')
    outfile.write(']')
</code></pre>
<p>But in my originalfile.json I have text in spanish for example "Bater√≠as" and when I write newfile.json this happened "Bater\u00edas" How can I write in the normal way?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just formalising the comment made by Javier as an answer to make it easier to find for others. You need to specify the <code>ensure_ascii</code> argument to <code>json.dump</code>:</p>
<pre><code>with open("newfile.json", "w", encoding="utf-8") as outfile:
    outfile.write('[\n')
    for i in result:
        json.dump(i, outfile, indent=8, ensure_ascii=False)
        outfile.write(',\n')
    outfile.write(']')
</code></pre>
<p>Ref: <a href="https://docs.python.org/2/library/json.html#json.dump" rel="nofollow">https://docs.python.org/2/library/json.html#json.dump</a></p>
</div>
<span class="comment-copy">That is the normal way. If you want it to have un-escaped UTF-8, use ensure_ascii=False.</span>
<span class="comment-copy">can you explain me how please?</span>
<span class="comment-copy">json.dump(i, outfile, ensure_ascii=False, indent=8)</span>
<span class="comment-copy">It's all here: <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">docs.python.org/3/library/json.html</a></span>
<span class="comment-copy">Also, why do you <i>care</i> which one you have? According to the <a href="http://www.json.org/" rel="nofollow noreferrer">JSON specification</a>, the two are both representations of the exact same string. The standard libraries in JS, Python, etc., and most if not all popular third-party libraries for languages that don't have JSON built in, will treat them the same.</span>
