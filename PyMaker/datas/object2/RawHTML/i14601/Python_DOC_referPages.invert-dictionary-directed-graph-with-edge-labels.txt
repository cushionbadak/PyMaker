<div class="post-text" itemprop="text">
<p>I would like to invert for example this dictionary:</p>
<pre><code>{1: {1: '[]', 2: '[1]'}, 2: {1: '[]', 3: '[1]'}, 3: {1: '[]'}}
</code></pre>
<p>Imagine that this is a directed graph with vertices <code>1, 2, 3</code> and labelled edges like <code>1 -&gt; 1</code> with label <code>'[]'</code>, represented in dictionary form by <code>1: {1: '[]'</code>. The labels don't have to be strings, they can just be lists.</p>
<p>I want to reverse the edges and keep the labels as they are.
The output i want is:</p>
<pre><code>{1: {1:'[]', 2:'[]', 3:'[]'}, 2: {1:'[1]'}, 3:{2:'[1]'}}
</code></pre>
<p>I saw some methods like <a href="https://stackoverflow.com/questions/483666/python-reverse-inverse-a-mapping">Python reverse / invert a mapping</a> but they all work for simpler dictionaries having no "labels". </p>
</div>
<div class="post-text" itemprop="text">
<p>Just iterate the sub-dictionaries and the keys in those and add them to a new dictionary with first and second key reversed.</p>
<pre><code>d = {1: {1: '[]', 2: '[1]'}, 2: {1: '[]', 3: '[1]'}, 3: {1: '[]'}}
p = {}
for from_, subdict in d.iteritems():
    for to, value in subdict.iteritems():
        p.setdefault(to, {})
        p[to][from_] = value
print p
</code></pre>
<p>Or use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a>, i.e. <code>p = collections.defaultdict(dict)</code>, then you don't need the <code>p.setdefault(to, {})</code> line.</p>
<p>Afterwards, <code>p</code> is <code>{1: {1: '[]', 2: '[]', 3: '[]'}, 2: {1: '[1]'}, 3: {2: '[1]'}}</code></p>
</div>
<span class="comment-copy">What is the desired output? What have you tried? Dies it work?</span>
<span class="comment-copy">Be little bit more specific what you want as a output. write down the output for the example mentioned by you.</span>
<span class="comment-copy">Edit: now there is the output I want. I invert the edges of the labelled graph and I keep the labels as before.</span>
<span class="comment-copy">Shouldn't the output be <code>{1: {1: '[]', 2: '[]', 3: '[]'}, 2: {1: '[1]'}, 3: {2: '[1]'}}</code>? Note the <code>2</code> in the last sub-dict.</span>
<span class="comment-copy">@tobias_k Completely right! Edited, now it is correct.</span>
