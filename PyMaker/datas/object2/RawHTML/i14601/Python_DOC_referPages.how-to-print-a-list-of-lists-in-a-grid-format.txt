<div class="post-text" itemprop="text">
<p>If I have a list of lists like ([1,2,3,4,5],[2,4,6,8,10],[3,6,9,12,15])
How can I print it on the screen in a grid format? Just like:</p>
<pre><code>1 2 3 4 5
2 4 6 8 10
3 6 9 12 15
</code></pre>
<p>My code is like </p>
<pre><code>def print_table(listx):
    """returns a grid of a list of lists of numbers

    list of list -&gt; grid"""
    for lists in listx:
        for i in lists:
            print(i,end='\t')
</code></pre>
<p>But I don't know how to make each list in a single row like example above.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe just adding an empty print on the main for:</p>
<pre><code>def print_table(listx):
    """returns a grid of a list of lists of numbers

    list of list -&gt; grid"""
    for lists in listx:
        for i in lists:
            print(i,end='\t')
        print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the width of your elements varies more than tab width, you can use fixed width columns (filled by spaces):</p>
<pre><code>&gt;&gt;&gt; for x in listx:
...     for y in x:
...         print('{0:&lt;10}'.format(y), end='')
...     print()
...
1         2         3         4         5
2         4         6         8         10
3         6         9         12        15
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My solution creates string with space-separated numbers in rows and <code>\n</code>-separated rows. It's using <a href="https://docs.python.org/3/library/stdtypes.html#str.center" rel="nofollow">str.center</a> method and generator-expressions.</p>
<blockquote>
<p><code>str.center(width[, fillchar])</code></p>
<p>Return centered in a string of length width. Padding is done using the specified fillchar (default is an ASCII space). The original
  string is returned if width is less than or equal to len(s).</p>
</blockquote>
<pre><code>def as_string(seq_of_rows):
    return '\n'.join(''.join(str(i).center(5) for i in row) for row in seq_of_rows)
l = ([1,2,3,4,5],[2,4,6,8,10],[3,6,9,12,15])
print as_string(l)
</code></pre>
<p>Output:</p>
<pre><code>  1    2    3    4    5  
  2    4    6    8    10 
  3    6    9    12   15
</code></pre>
<p>Let's break it up:</p>
<pre><code>str(i).center(5) for i in row
</code></pre>
<p>It iterates over row, converts values to strings and calls <code>center</code> method. Result is space-padded values.</p>
<pre><code>''.join(sequence_above)
</code></pre>
<p>It creates single string from values. So now, string contains whole row.</p>
<pre><code>'\n'.join(processed_row row in seq_of_rows)
</code></pre>
<p>It takes processed rows (strings)from previous step and joins them using newline character, so result is <code>row1\nron2\nrow3</code>. </p>
</div>
<span class="comment-copy"><code>" ".join(i)</code> should work</span>
<span class="comment-copy">@Udy agreed for "production" code, but probably this is from a course introducing control flow and variables so it's good to show how the sausage is made</span>
<span class="comment-copy">I add print('\n') at the place that you do. But when I run it, there is a 'None' in my last row, just like 1,2,3,4,5 in row 1 and so on. And at the end row, there shows a 'None'. Why this shows out?</span>
<span class="comment-copy">I added the '\n' in the print, and all it did was add a blank line between the printed numbers, the None didn't came up. How are you running this code?</span>
