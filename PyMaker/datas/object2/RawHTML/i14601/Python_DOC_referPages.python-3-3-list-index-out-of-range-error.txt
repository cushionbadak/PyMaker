<div class="post-text" itemprop="text">
<p>My  task was to encrypt a random message using a list of 7,3,19,5. Here is my code for this task:</p>
<pre><code>def k():
    m=input ("Please enter a message: ")
    x=""
    w = [7,3,19,5]
    g=0
    for ch in m:
        en = chr(ord(ch)+ w[g])#encryption
        x = (x+en)#adding
        print(str(x))#output
        g=g+1
k()
</code></pre>
<p>My output is this:</p>
<pre><code>Please enter a message: hello world
o
oh
oh
ohq
Traceback (most recent call last):
   File "&lt;pyshell#0&gt;", line 1, in &lt;module&gt;
 k()
File "H:\t2test.py", line 7, in k
   en = chr(ord(ch)+ w[g])#encryption
IndexError: list index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to modify your list if you know about the modulo operator <code>%</code> (division remainder).</p>
<p>You also don't need to keep count manually (there's <a href="http://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate()</code></a> for that), and you should be using better variable names:</p>
<pre><code>def encrypt():
    message = input("Please enter a message: ")
    encrypted = ""
    offsets = [7,3,19,5]
    lenoff = len(offsets)
    for index, char in enumerate(message):
        encrypted += chr(ord(char)+ offsets[index % lenoff]) #encryption
        print(encrypted) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The length of string is variable and list has got fixed elements.So modify your list.</p>
<p>Modify your list <code>w = [7,3,19,5]*len(m)</code></p>
<pre><code>def k():
    m=input ("Please enter a message: ")
    x=""
    w = [7,3,19,5]*len(m)
    g=0
    for ch in m:

        en = chr(ord(ch)+ w[g])#encryption
        x = (x+en)#adding
        print(str(x))#output
        g=g+1
k()
</code></pre>
<p>output:</p>
<pre><code>Please enter a message: hello world
o
oh
oh
ohq
ohqv
ohqv#
ohqv#
ohqv#t
ohqv#ty
ohqv#tyo
ohqv#tyow
</code></pre>
<p>Instead you can use random numbers.</p>
<p>For the above function you can import random</p>
<pre><code>w=[]
for i in range(len(m)):
    w.append(random.randrange(len(m)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>resetting the g value when it reaches the length of w will also work.</p>
<pre><code>def k():
m=input("Please enter a message: ")
x=""
w = [7,3,19,5]
g=0
for ch in m:
    en = chr(ord(ch)+ w[g])#encryption
    x = (x+en)#adding
    print(str(x))#output
    g=g+1
    if (g==len(w)):
        g=0
k()
</code></pre>
</div>
<span class="comment-copy">See what happens if g is incremented 4 times. What would w[4] be?</span>
<span class="comment-copy">Thats what I'm trying to solve right now but i have to reuse the list until the encryption is completed. For example my message is :Computer and my list is [7,3,19,5]  so this is how it should go: c + 7, o +3, m + 19, p + 5 and it repeats the encryption with the rest of the letters until the encryption is complete.</span>
<span class="comment-copy">@professor  random numbers would be  more useful i guess</span>
<span class="comment-copy">Well, that's unrelated to the OP's question. Apart from that, why should the range of random numbers be constrained to the length of the message?</span>
<span class="comment-copy">yes sir..that's not necessary but just a quick fix for OP's code..but your ans is the better one</span>
<span class="comment-copy">Thank you so much it worked :D made my day! :)</span>
<span class="comment-copy">@ChipZ If this worked Consider accepting this as answer</span>
<span class="comment-copy">Why would you need a list of length 44 to encrypt a message with 11 characters? Especially since there's no need to elongate the list at all.</span>
