<div class="post-text" itemprop="text">
<p>I have a pretty standard Django test case setup (I think)</p>
<pre><code>api-name
    manage.py
    api-name
        __init__.py
        settings.py
        wsgi.py
    v0
        project
            stuff.py
            tests
                test_stuff.py
</code></pre>
<p><strong>manage.py</strong></p>
<pre><code>#!/usr/bin/env python
import os
import sys

if __name__ == "__main__":
    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "api-name.settings")

    from django.core.management import execute_from_command_line

    execute_from_command_line(sys.argv)
</code></pre>
<p><strong>wsgi.py</strong></p>
<pre><code>import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(__file__)))
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "api-name.settings")

from django.core.wsgi import get_wsgi_application
application = get_wsgi_application()
</code></pre>
<p><strong>test_stuff.py</strong></p>
<pre><code>from django.test import TestCase
from v0.project.stuff import *


class ProjectTestCase(TestCase):
    def setUp(self):
        # set stuff up

    def test_project_stuff(self):
        # test stuff

    def test_other_stuff(self):
        # test stuff
</code></pre>
<p>Here's what happens when I execute tests:</p>
<pre><code>[cwilbur api-name]$ ./manage.py test
Creating test database for alias 'default'...
..
----------------------------------------------------------------------
Ran 2 tests in 0.014s

OK
Destroying test database for alias 'default'...
[cwilbur api-name]$ cd ..
[cwilbur source]$ ./api-name/manage.py test
Creating test database for alias 'default'...

----------------------------------------------------------------------
Ran 0 tests in 0.000s

OK
Destroying test database for alias 'default'...
</code></pre>
<p>Is this (tests run from the project's root directory, but not from elsewhere) expected behavior? Is there a way to change things so that it will work (I want to execute my tests from a pre-commit hook in a different directory)?</p>
<p>I tried adding <code>from tests import *</code> from <a href="https://stackoverflow.com/a/12413069/99640">this answer</a>, but it didn't help. I also tried moving the <code>sys.path.append</code> line from wsgi.py to manage.py, but that didn't help either.</p>
<p>Any other ideas out there I can try?</p>
</div>
<div class="post-text" itemprop="text">
<p>Late in answering this question. But hope this helps someone:</p>
<p><code>python &lt;project_path&gt;/manage.py test &lt;your_project_dir&gt;</code></p>
<p><a href="https://i.stack.imgur.com/qRJo3.png" rel="nofollow noreferrer"><img alt="Running Django tests from another directory" src="https://i.stack.imgur.com/qRJo3.png"/></a></p>
<p>From Django documentation:</p>
<blockquote>
<p>You can also provide a path to a directory to discover tests below that directory:</p>
<pre><code>$ ./manage.py test animals/
</code></pre>
</blockquote>
<p>References:</p>
<ol>
<li><a href="https://docs.djangoproject.com/en/dev/topics/testing/overview/#running-tests" rel="nofollow noreferrer">https://docs.djangoproject.com/en/dev/topics/testing/overview/#running-tests</a></li>
<li><a href="https://docs.python.org/3/library/unittest.html#test-discovery" rel="nofollow noreferrer">https://docs.python.org/3/library/unittest.html#test-discovery</a></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Based on the comments from @dizballanze and feedback from review of the code, I wound up doing this:</p>
<pre><code>(cd /somedir &amp;&amp; python manage.py test)
</code></pre>
<p>I'm still curious as to whether it's possible to run the tests without cding into the root directory of the project, though.</p>
</div>
<span class="comment-copy">You could just add <code>cd</code> command to your pre-commit hook.</span>
<span class="comment-copy">@dizballanze That has the disadvantage that I have to add another cd at the end of the command and before any intervening exits to get back to where I started and have no side effects. Don't get me wrong, I'll do it if there's no other way.</span>
<span class="comment-copy">If you use bash, you can try run manage.py in subshell like this: <code>(cd /somedir; ./manage.py test)</code> this will not create any side effects.</span>
<span class="comment-copy">Thanks! This is really useful if you are running tests from a Makefile located outside your app directory.</span>
