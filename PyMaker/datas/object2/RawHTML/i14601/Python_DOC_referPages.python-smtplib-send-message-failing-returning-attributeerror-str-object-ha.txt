<div class="post-text" itemprop="text">
<p>I'm working on an project where I have to use the smtplib and email modules in Python 3.4 to send an email. </p>
<p>I'm able to create the email itself and I'm able to connect to the server, but then it returns this Exception:</p>
<pre><code>reply: b'235 2.7.0 Accepted\r\n'
reply: retcode (235); Msg: b'2.7.0 Accepted'
send: 'QUIT\r\n'
reply: b'221 2.0.0 closing connection s66sm8304113yhp.2 - gsmtp\r\n'
reply: retcode (221); Msg: b'2.0.0 closing connection s66sm8304113yhp.2 - gsmtp'
Traceback (most recent call last):
  File "base.py", line 108, in &lt;module&gt;
    send(fromaddr, toaddrs, msg)
  File "base.py", line 61, in send
    server.send_message(fromaddr, toaddrs, msg)
  File "/usr/lib/python3.4/smtplib.py", line 829, in send_message
    resent = msg.get_all('Resent-Date')
AttributeError: 'str' object has no attribute 'get_all'
</code></pre>
<p>The code (troublesome line linked directly to) is available <a href="https://github.com/RPiAwesomeness/Keyboard-Mail-Desktop/blob/HTML-MIME/MIME-base.py#L63" rel="nofollow">here</a>. Strangely enough, the code actually sends QUIT prior to actually sending any of the email body - not sure if that's something that would affect this.</p>
<p>Does anyone know what is causing this error?</p>
<p><strong>EDIT</strong> Turns out that part of my issue was that I was using the incorrect format. send_message() requires the variables in the order of <code>Message, From, To</code>, while my code was sending it in the order of <code>From, To, Message</code>.</p>
<p>However, I'm now getting this error:</p>
<pre><code>reply: b'235 2.7.0 Accepted\r\n'
reply: retcode (235); Msg: b'2.7.0 Accepted'
send: 'QUIT\r\n'
reply: b'221 2.0.0 closing connection s66sm8443316yhp.2 - gsmtp\r\n'
reply: retcode (221); Msg: b'2.0.0 closing connection s66sm8443316yhp.2 - gsmtp'
Traceback (most recent call last):
  File "MIME-base.py", line 108, in &lt;module&gt;
    send(fromaddr, toaddrs, msg)
  File "MIME-base.py", line 61, in send
    server.send_message(msg, fromaddr, toaddrs)
  File "/usr/lib/python3.4/smtplib.py", line 839, in send_message
    g.flatten(msg_copy, linesep='\r\n')
  File "/usr/lib/python3.4/email/generator.py", line 109, in flatten
    self._write(msg)
  File "/usr/lib/python3.4/email/generator.py", line 189, in _write
    self._write_headers(msg)
  File "/usr/lib/python3.4/email/generator.py", line 416, in _write_headers
    self._fp.write(self.policy.fold_binary(h, v))
  File "/usr/lib/python3.4/email/_policybase.py", line 325, in fold_binary
    folded = self._fold(name, value, sanitize=self.cte_type=='7bit')
  File "/usr/lib/python3.4/email/_policybase.py", line 352, in _fold
    parts.append(h.encode(linesep=self.linesep,
AttributeError: 'list' object has no attribute 'encode'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The signature for <a href="https://docs.python.org/3/library/smtplib.html?highlight=send_message#smtplib.SMTP.send_message" rel="noreferrer"><code>SMTP.send_message</code></a> is not the same as <a href="https://docs.python.org/3.4/library/smtplib.html?highlight=send_message#smtplib.SMTP.sendmail" rel="noreferrer"><code>SMTP.sendmail</code></a>. So try:</p>
<pre><code>    server.send_message(msg, fromaddr, toaddrs)
</code></pre>
<p><strong>EDIT</strong>:</p>
<p>You also need to add the <code>To:</code> headers separately, rather than as a list:</p>
<pre><code>    for item in input("To: ").split():
        msg['To'] = item
</code></pre>
</div>
<span class="comment-copy">Thanks for pointing that out, I had missed the difference. I'm not getting that error any more, but I'm now getting this error: <code>AttributeError: 'list' object has no attribute 'encode'</code>. I'll update my question with the full traceback.</span>
<span class="comment-copy">Never mind, just figured out the new error on my own. It was caused by the <code>msg['To'] = input().split()</code> line, since that takes the input and makes a list. Thanks, accepting your answer.</span>
<span class="comment-copy">@RPiAwesomeness. Yes: you need to add each item separately (I already updated my answer).</span>
<span class="comment-copy">This saved me. I really wish this had been called out explicitly somewhere. Thanks @ekhumoro!</span>
