<div class="post-text" itemprop="text">
<p>I am not sure why I am getting this <code>ImportError</code>. <code>queue.Queue()</code> is in the documentation.</p>
<p><a href="https://docs.python.org/3/library/queue.html?highlight=queue#queue.Queue" rel="noreferrer">https://docs.python.org/3/library/queue.html?highlight=queue#queue.Queue</a></p>
<p>I am using it in a function like so:</p>
<p><code>node_queue = queue.Queue()</code></p>
<p>error:</p>
<pre><code>Traceback (most recent call last):
  File "./test_jabba.py", line 15, in &lt;module&gt;
    from utils import gopher, jsonstream, datagen, event_gen, tree_diff, postal
  File "/Users/bli1/Development/QE/TrinityTestFramework/poc/utils/tree_diff.py", line 5, in &lt;module&gt;
    import queue
ImportError: No module named queue
</code></pre>
<p>Line 5 is <code>import queue</code>:</p>
<pre><code>#!/usr/bin/env python3
import sys                      # access to basic things like sys.argv
import os                       # access pathname utilities
import argparse                 # for command-line options parsing
import queue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A kinda standard cross py2-py3 compatible version:</p>
<pre><code>try: 
    import queue
except ImportError:
    import Queue as queue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another way to avoid version problems is:</p>
<pre><code>import sys
is_py2 = sys.version[0] == '2'
if is_py2:
    import Queue as queue
else:
    import queue as queue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>for <em>ImportError: No module named 'Queue'</em> in Python3, just replace the sentence "<em>import Queue</em>" with "<em>import queue as Queue</em>".</p>
</div>
<div class="post-text" itemprop="text">
<p>Replace <code>#!/usr/bin/env python3</code> with <code>#!/usr/bin/python3</code></p>
<p>If your env isn't set up correctly then <code>#!/usr/bin/env python3</code> may not work. If <code>#!/usr/bin/python3</code> gives the same error then try running <code>/usr/bin/python3 --version</code> in your shell as a sanity check.</p>
<p>If you don't get a sensible output from <code>/usr/bin/python3 --version</code> then you have odd installation of python 3 and I suggest installing it using your package manager (<code>apt-get</code>, <code>yum</code>, <code>homebrew</code> or whatever you prefer - this will probably fix the <code>!#/usr/bin/env</code> issue).</p>
</div>
<span class="comment-copy">Do you have a vanilla python implementation?  Where/how did you download/install it?</span>
<span class="comment-copy">Also, can you run <code>python --version</code>?  Its possible you're actually running Python 2.x, in which case the <code>queue</code> module was named <code>Queue</code></span>
<span class="comment-copy">@Dannnno the command gave me 2.7.6. I thought if I had the <code>#!/usr/bin/env python3</code>  on top it wouldn't matter?</span>
<span class="comment-copy">I'm not an expert on shebang lines so I'm not positive exactly how those work.  From a cursory google search what you have should work though.  I'm assuming you're running this on a Linux machine?</span>
<span class="comment-copy">How are you invoking your script? If you say <code>python tree_diff.py</code>, the shebang won't matter. It's only inspected if you execute the file directly, like <code>./tree_diff.py</code>.</span>
<span class="comment-copy">There is a simplified solution <a href="https://stackoverflow.com/a/53021998/99834">stackoverflow.com/a/53021998/99834</a> -- less code, does the same, no side effects.</span>
<span class="comment-copy">@sorin: what do you mean by "no side effects"? you are importing module, catching exception, those are statements with side effects</span>
<span class="comment-copy">importing sys, which was not needed. anyway what one would use is matter of personal preference, both approaches do work.</span>
<span class="comment-copy">Thank you for the attempt but it did not work =/</span>
<span class="comment-copy">What happens when you type <code>/usr/bin/python3 --version</code> ?</span>
<span class="comment-copy">I get a no such directory or file</span>
<span class="comment-copy">OK - what happens when you type <code>/usr/bin/env python3</code></span>
<span class="comment-copy">same output. However I did this:  <code>mtvl1289dd026:bin bli1$ python3 --version Python 3.4.2 mtvl1289dd026:bin bli1$ pwd /usr/bin </code></span>
