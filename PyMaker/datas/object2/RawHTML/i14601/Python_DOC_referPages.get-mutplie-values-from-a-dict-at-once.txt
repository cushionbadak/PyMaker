<div class="post-text" itemprop="text">
<p>I have dictionary that contains values that I need in my function. </p>
<p>Currently, I extract the values one by one and store them in local variable for further processing. like so:</p>
<pre><code>def func(the_dict):
    a=the_dict['a']
    b=the_dict['b']
    b=the_dict['c']
</code></pre>
<p>the problem is that its a bit verbose, is there a way to extract the variable in a more concise way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use map and unpack:</p>
<pre><code>a, b, c = map(the_dict.get,("a","b","c"))
print(a,b,c)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow"><code>operator.itemgetter</code></a> to get multiple values at once:</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; the_dict = {'a':1, 'b':2, 'c':3}
&gt;&gt;&gt; a, b, c = itemgetter('a', 'b', 'c')(the_dict)
&gt;&gt;&gt; a
1
&gt;&gt;&gt; b
2
&gt;&gt;&gt; c
3
</code></pre>
</div>
<span class="comment-copy">Why not just refer to them in the dictionary instead of assigning them to new references?</span>
<span class="comment-copy">Do you need all the values in the dict or just specific ones?</span>
<span class="comment-copy">Before someone tries to suggest <code>locals().update(the_dict)</code>: no. That doesn't actually work.</span>
<span class="comment-copy">@Mo H: i need a small subset of the values</span>
<span class="comment-copy">@user2357112: You sure?</span>
<span class="comment-copy">nice.is there any way to avoid specifing the variable name twice?</span>
<span class="comment-copy">@yigal, not sure I understand, if you want to create variable you need to use a,b,c = , if you want specific values you need to pass the keys.</span>
