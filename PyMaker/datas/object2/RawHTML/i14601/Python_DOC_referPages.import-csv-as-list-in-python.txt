<div class="post-text" itemprop="text">
<p>I am trying to import a csv file as a list:</p>
<pre><code>file = open('curr.csv', 'rt')
f = file.read()
f = f.split(',')

print(f)
</code></pre>
<p>The csv file is only 'GBP, USD' so I want the list ['GBP', 'USD'].
However the result I get is:</p>
<pre><code>['GBP', 'USD\n']
</code></pre>
<p>How do I stop \n from appearing on the last value?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to strip your lines,but as a pythonic way you can use <a href="https://docs.python.org/2/library/csv.html" rel="nofollow"><code>csv</code> module</a> for dealing with <code>csv</code> files : </p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; with open('curr.csv', 'rb') as csvfile:
...     spamreader = csv.reader(csvfile, delimiter=',')
...     print list(spamreader)
</code></pre>
<p>Note that this will return a nested list of your <code>csv</code> file rows if you just want the firs row in a list you can use <code>next()</code> method of <code>reader</code> object :</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; with open('curr.csv', 'rb') as csvfile:
...     spamreader = csv.reader(csvfile, delimiter=',')
...     print spamreader.next() 
</code></pre>
<p>And if you want the whole of your rows within a list you can use a nested list comprehension :</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; with open('curr.csv', 'rb') as csvfile:
...     spamreader = csv.reader(csvfile, delimiter=',')
...     print [j for i in spamreader for j in i]
</code></pre>
</div>
<span class="comment-copy">Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module.</span>
<span class="comment-copy">A valid answer, but seems a bit overkill for such a simple file.</span>
<span class="comment-copy">@TheBlackCat Its the correct way for dealing with <code>csv</code> files. note that we are not here to just give a temporary solution to OP!</span>
<span class="comment-copy">I agree with Kasra. Splitting around the string wouldn't be much shorter than 3 lines either while being a lot more fragile.</span>
<span class="comment-copy">@Kasra There are various "correct ways" of dealing with <code>csv</code> files depending on the circumstances.  In this case, dealing with the <code>csv</code> module adds additional complexity around dealing with multiple lines.  Your answer, for example, gives <code>[['GBP', ' USD']]</code>, which isn't what the question asked for.  So in this case using a simpler approach can avoid some confusion.</span>
<span class="comment-copy">@TheBlackCat Yeah i noted that. i gonna to edit the answer! thanks for attention!</span>
