<div class="post-text" itemprop="text">
<p>I am try to convet this function by creating it as a for or while loop, but having trouble.</p>
<pre><code>def fact(n):
   if n&lt;= 1:
       return 1
   else:
       return (n)*(fact(n-1))
</code></pre>
<p>this is what I attempted:</p>
<pre><code>def fact(n):
   while n &lt;= 1:
       return 1
   else:
       return (n)*(fact(n-1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Converting the above recursive program to use loops is not as simple as changing an <code>if</code> to a <code>while</code>.</p>
<pre><code>def fact(n):
    result = 1
    while n &gt;= 1:
        result = result * n
        n = n - 1
    return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're using a loop, you shouldn't be recursing, you should just multiply within the loop.</p>
<pre><code>def fact(n):
    result = 1
    while n &gt; 1:
        result *= n
        n = n - 1
    return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using a for-loop:</p>
<pre><code>result = 1
for v in xrange(1, n + 1):
    result *= v
return result
</code></pre>
<p>Using comprehension:</p>
<pre><code>from operator import mul
return reduce(mul, xrange(1, n + 1), 1)
</code></pre>
</div>
<span class="comment-copy">Please see <a href="http://stackoverflow.com/q/28475637/4014959">what is wrong with my factorial code in python</a> for a variety of ways to compute factorials in Python. <a href="http://stackoverflow.com/a/28477818/4014959">My answer</a> to that question provides timing stats for the various approaches.</span>
<span class="comment-copy">There is no decrement operator in python (<code>--</code>). Change this to <code>n -= 1</code>.</span>
<span class="comment-copy">You <b>can</b> have an <code>else:</code> on a <code>while</code> loop in Python!  It's not used much, and is only useful if you have a <code>break</code>.</span>
<span class="comment-copy">You <i>can</i> have an <code>else</code> clause on a <code>while</code> block, but it's not required here. See <a href="https://docs.python.org/3/reference/compound_stmts.html#the-while-statement" rel="nofollow noreferrer">The while statement</a> in the Python docs.</span>
