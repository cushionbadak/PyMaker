<div class="post-text" itemprop="text">
<p>So given the following:</p>
<pre><code>def inorder(t):
    if t:
        inorder(t.left)
        yield t.key
        inorder(t.right)

x = [ n for n in inorder(r) ]
</code></pre>
<p><code>x</code> only contains the root node, why?</p>
<p>Here's the full code; note that the BST implementation is correct, it's the <code>inorder()</code> implementation with generators that is somehow wrong.</p>
<pre><code>class STree(object):
    def __init__(self, value):
        self.key = value
        self.left = None
        self.right = None

def insert(r, node):
    if node.key &lt; r.key:
        if r.left is None:
            r.left = node
        else:
            insert(r.left, node)
    else:
        if r.right is None:
            r.right = node
        else:
            insert(r.right, node)

def inorder(t):
    if t:
        inorder(t.left)
        yield t.key
        inorder(t.right)


r = STree(10)
insert(r, STree(12))
insert(r, STree(5))
insert(r, STree(99))
insert(r, STree(1))

tree = [ n for n in inorder(r) ]
print tree
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>inorder(t.left)</code> only creates the generator object, it doesn't actually run it. You need to iterate and yield the values produced by each of the subgenerators:</p>
<pre><code># Python 2
def inorder(t):
    if t:
        for key in inorder(t.left):
            yield key
        yield t.key
        for key in inorder(t.right):
            yield key
</code></pre>
<p>This becomes a lot cleaner with the introduction of <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-380" rel="nofollow noreferrer">new syntax</a> in Python 3.3+:</p>
<pre><code># Python 3
def inorder(t):
    if t:
        yield from inorder(t.left)
        yield t.key
        yield from inorder(t.right)
</code></pre>
</div>
<span class="comment-copy">Are you using python 2 or 3?</span>
<span class="comment-copy">See the 3rd answer <a href="http://stackoverflow.com/questions/21175923/inorder-traversal-in-python">here</a>. You are only actually yielding one value. If you are using python 3.3 onwards you can use <code>yield from</code>.</span>
<span class="comment-copy">I fixed a mistake on the py2 example; anyway thanks for the explanation, it makes much more sense now.</span>
<span class="comment-copy">@laurids saw that, nice catch! and yw!</span>
<span class="comment-copy">@tzaman getting an invalid syntax.</span>
<span class="comment-copy">@Prerit both python2 and 3 versions work fine for me, your error must be somewhere else.</span>
<span class="comment-copy">@tzaman It was python version. Leetcode has python version &lt; 3.3 .</span>
