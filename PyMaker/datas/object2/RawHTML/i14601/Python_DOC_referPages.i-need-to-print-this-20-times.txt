<div class="post-text" itemprop="text">
<p>So basically I have my code here which prints a random Shakespearean insult through 3 lists. To submit this code, I have to print 20 insults and I know there is a faster way than writing the final print statement 20 times. This is probably remedial but I can't remember how to do it. Here's my code thanks guys:</p>
<pre><code>import random

list1 = ["Artless", "Bawdy", "Bootless", "Churlish", "Clouted"]
list2 = ["Base-court", "Bat-fowling", "Beetle-headed", "Clay-brained" ]
list3 = ["Apple-john", "Baggage", "Bladder", "Boar-pig", "Coxcomb"]

def nurd1():
  return (random.choice(list1))

def nurd2():
   return (random.choice(list2))

def nurd3(): 
    return (random.choice(list3))

print ("Thou" + " " + nurd1() + " " +  nurd2() + " " + nurd3() )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random

words = [
["Thou"],
["Artless", "Bawdy", "Bootless", "Churlish", "Clouted"],
["Base-court", "Bat-fowling", "Beetle-headed", "Clay-brained" ],
["Apple-john", "Baggage", "Bladder", "Boar-pig", "Coxcomb"]
]

print(*(' '.join([random.choice(l) for l in words]) for r in range(20)), sep='\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from random import choice
list =[
 ["Artless", "Bawdy", "Bootless", "Churlish", "Clouted"],
 ["Base-court", "Bat-fowling", "Beetle-headed", "Clay-brained" ],
 ["Apple-john", "Baggage", "Bladder", "Boar-pig", "Coxcomb"]
]
for i in range(20):
    print '\nThou ',
    for j in range(len(list)):
        print choice(list[j]),
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simple while loop</p>
<pre><code>loop = 0

while(loop &lt;= 19):
    print ("Thou" + " " + nurd1() + " " +  nurd2() + " " + nurd3() )
    loop += 1
</code></pre>
<p>tho' it'll print 20 different lines!</p>
</div>
<span class="comment-copy">looping rings a bell ?</span>
<span class="comment-copy"><a href="https://docs.python.org/2/tutorial/datastructures.html?highlight=loop#looping-techniques" rel="nofollow noreferrer">docs.python.org/2/tutorial/â€¦</a></span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html#defining-functions</a></span>
<span class="comment-copy">@TigerhawkT3 meh, it can be one lined</span>
<span class="comment-copy">Since all those functions do is <code>return</code> a randomly-selected element from a list, and <code>random.choice()</code> already does exactly that, I think the only point to those functions is to learn how to use functions... in which case they're being poorly defined (the best definition is the one that <code>random.choice()</code> uses, with a parameter).</span>
<span class="comment-copy">This is as basic as it gets.  I hope this helps</span>
<span class="comment-copy">This shadows the built-in list type. The newline character is not necessary and I suspect OP is using Python 3.x in which print is a function instead of a statement.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#func-range</a></span>
<span class="comment-copy">I would also like to know what the semicolon on the first line is doing there.</span>
<span class="comment-copy">Ahaha whoops, was doing some javascript a minute ago, my bad!</span>
