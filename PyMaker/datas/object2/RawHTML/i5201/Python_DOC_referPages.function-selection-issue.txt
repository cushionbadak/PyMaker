<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20002503/why-does-a-b-or-c-or-d-always-evaluate-to-true">Why does `a == b or c or d` always evaluate to True? [duplicate]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/15112125/how-to-test-multiple-variables-against-a-value">How to test multiple variables against a value?</a>
<span class="question-originals-answer-count">
                    21 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to create a simple game of roulette and as a beginner in python i am having a few issues.</p>
<p>So far, i have the code below, and have created a few functions in an attempt to make the users input activate different functions. I have created some test statements in the red/black and odd/even functions, however, no matter what the input is i only get the output from the red/black functions (10 if i input red or 20 for any other input). Any help appreciated !</p>
<pre><code>import random, time


# the spin and result of the roulette wheel
def spin():
    print("Wheel is spinning...")
    time.sleep(3)
    land_number = random.randint(0,36)
    print (land_number)

def number_chosen(x):
    pass

def red_black_chosen(chosen_bet):
if chosen_bet == 'red':
    red = 10
    print(red)
else:
    black = 20
    print(black)

def odd_even_chosen(chosen_bet):
   if chosen_bet == 'odd':
       odd = 'qwe'
       print(odd)
   else:
       even = 'abc'
       print(even)

def high_low_chosen(chosen_bet):
    pass

def dozen_chosen(chosen_bet):
    pass

#choice of bet
def betters_choice():
    print("""How would you like to bet? \n
             Choose a number
             Choose red or black
             Choose odd or even
             Choose low(1-18) or high(19-36
             Choose 1st dozen(1-12), 2nd dozen(13-24) or 3rd dozen(25-
36)""")
    global chosen_bet
    chosen_bet = input()
    if type(chosen_bet) == int:
        if chosen_bet &lt; 0:
            print("Bet must be between 0 and 36")
        elif chosen_bet &gt; 36:
            print("Bet must be between 0 and 36")
        else:
           number_chosen(chosen_bet)
    elif chosen_bet == 'red' or 'black':
        red_black_chosen(chosen_bet)
    elif chosen_bet == 'odd' or 'even':        
        odd_even_chosen(chosen_bet)
    elif chosen_bet == 'low' or 'high':
        high_low_chosen(chosen_bet)
    elif chosen_bet in ['1st dozen', '2nd dozen', '3rd dozen']:
        dozen_chosen(chosen_bet)
    else:
        print("Incorrect bet chosen")
        betters_choice()

betters_choice()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>chosen_bet</code> is always going to be of type <code>str</code> because <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">input</a> always returns strings. </p>
<p>Try calling <code>isdigit()</code> on <code>chosen_bet</code> first.</p>
<pre><code>if chosen_bet.isdigit():
    # then check values and such
    if int(chosen_bet) &lt; 0:
elif chosen_bet == 'red' or chosen_bet == 'black'
    # rest of your code
</code></pre>
<p>I also fixed the error in your <code>elif</code> statement. you need to do a comparison of <code>chosen_bet</code> on both sides of the <code>or</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>That is because the if function doesn't accept multiple conditions like that. They should be stated separately like this:</p>
<pre><code>import random, time


# the spin and result of the roulette wheel
def spin():
    print("Wheel is spinning...")
    time.sleep(3)
    land_number = random.randint(0,36)
    print (land_number)

def number_chosen(x):
    pass

def red_black_chosen(chosen_bet):
    if chosen_bet == 'red':
        red = 10
        print(red)
    else:
        black = 20
        print(black)

def odd_even_chosen(chosen_bet):
    if chosen_bet == 'odd':
        odd = 'qwe'
        print(odd)
    else:
        even = 'abc'
        print(even)

def high_low_chosen(chosen_bet):
    pass

def dozen_chosen(chosen_bet):
    pass

#choice of bet
def betters_choice():
    print("""How would you like to bet? \n
             Choose a number
             Choose red or black
             Choose odd or even
             Choose low(1-18) or high(19-36
             Choose 1st dozen(1-12), 2nd dozen(13-24) or 3rd dozen(25-
36)""")
    global chosen_bet
    chosen_bet = input()
    if type(chosen_bet) == int:
        if chosen_bet &lt; 0:
            print("Bet must be between 0 and 36")
        elif chosen_bet &gt; 36:
            print("Bet must be between 0 and 36")
        else:
            number_chosen(chosen_bet)
    elif chosen_bet == 'red' or chosen_bet =='black':
        red_black_chosen(chosen_bet)
    elif chosen_bet == 'odd' or chosen_bet =='even':        
        odd_even_chosen(chosen_bet)
    elif chosen_bet == 'low' or chosen_bet =='high':
        high_low_chosen(chosen_bet)
    elif chosen_bet in ['1st dozen', '2nd dozen', '3rd dozen']:
        dozen_chosen(chosen_bet)
    else:
        print("Incorrect bet chosen")
        betters_choice()

betters_choice()
</code></pre>
</div>
