<div class="post-text" itemprop="text">
<p>I want to accept an argument with an equals sign in it:</p>
<pre><code>my_nintendo_news = Website('https://mynintendonews.com', href = re.compile('https://mynintendonews.com/2018/'), "C:/Users/charl/Pictures/toad_small_60x60.png", "C:/Users/charl/Pictures/toad_small_60x60_bw.png" )
</code></pre>
<p>but I keep getting</p>
<pre><code>SyntaxError: positional argument follows keyword argument
</code></pre>
<p>how can I avoid this? I need to use</p>
<pre><code>href = re.compile('https://mynintendonews.com/2018/')
</code></pre>
<p>as an argument in another function, and I can't do that as a string (and I've heard using eval() is bad?)</p>
</div>
<div class="post-text" itemprop="text">
<p>You will need to pass optional arguments in the end and required arguments at the start.</p>
<p>In this case, I think <strong>href</strong> will be required argument, so here if you want to pass with argument name(in your case href) then you will need to pass all arguments with name and not one of them like "href ='example.com' ""</p>
<p>for e.g.</p>
<pre><code>def test_method(a, b, c, d=0, e=0):
    return a + b + c + d + e
</code></pre>
<p>for above method <strong>test_method</strong>,  you cant call this function as <strong>test_method(1,b=2,3)</strong> , you will need to call it as <strong>test_method(1,2,3)</strong> or <strong>test_method(a=1, b=2, c=3)</strong></p>
<p>But as "<strong>e</strong>" argument is optional argument you can call it as <strong>test_method(1,2,3, e=5)</strong> without bothering about value of <strong>d</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Have a look at the actual error message:</p>
<pre><code>SyntaxError: positional argument follows keyword argument
</code></pre>
<p>You are calling <code>Website</code> and pass a positional argument, followed by a keyword argument, followed by two more positional arguments. Python does not allow this. Have a look at the <a href="https://docs.python.org/3/glossary.html" rel="nofollow noreferrer">Python Glossary</a> for the explanation of positional and keyword arguments.</p>
<p>What you need to do is, either replace all positional arguments with keyword arguments or remove all keyword arguments (in your case: <code>href=</code>).</p>
<p>I'm not familiar with the code that you're using, so I'll make up some keyword arguments. This would be the case using only keyword arguments:</p>
<pre><code>my_nintendo_news = Website(url='https://mynintendonews.com', href=re.compile('https://mynintendonews.com/2018/'), path1="C:/Users/charl/Pictures/toad_small_60x60.png", path2="C:/Users/charl/Pictures/toad_small_60x60_bw.png")
</code></pre>
<p>What you could also do is:</p>
<pre><code>my_nintendo_news = Website(url='https://mynintendonews.com', href=re.compile('https://mynintendonews.com/2018/'), "C:/Users/charl/Pictures/toad_small_60x60.png", "C:/Users/charl/Pictures/toad_small_60x60_bw.png")
</code></pre>
<p>Here the last keyword argument<code>href</code> is followed by two more positional arguments.</p>
</div>
<span class="comment-copy">What do you expect for the function to receive? Are you actually looking for <code>lambda</code>?</span>
<span class="comment-copy">An assignation is not an expression in Python. <code>a = (b = c)</code> is already a syntax error. How do you what to pass something that is not an expression as a parameter to a function??? Said differently: what are you <i>actually</i> trying to achieve?</span>
