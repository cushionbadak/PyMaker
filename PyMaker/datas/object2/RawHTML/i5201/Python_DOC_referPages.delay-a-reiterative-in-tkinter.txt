<div class="post-text" itemprop="text">
<p>I am trying to make a module that generates a tkinter window and then packs a question with a set of answers. My issue is getting the algorithm to produce the sets of question and answers one after the other. What I mean by this is that the algorithm currently only packs the answer sets and doesn't wait until after the player has answered to refresh and produce a new set. I have been thinking about this for ages and I am new to tkinter so I don't know what I am doing. My code is below:</p>
<p>This is my code for checking if an answer is correct or not</p>
<pre><code>score = IntVar(window, 0)
score.set(0)

def check_answer(answer):
    global r
    global order
    if answer in order:
        global score
        s = score.get() + 1
        score.set(s)
        lbl.config(window, textvariable=score)
    else:
        lbl.config(text="Wrong")
</code></pre>
<p>This is my code that produces the answer sets and packs them into the window:</p>
<pre><code>r = len(questions)
order= []
question = StringVar()

for i in range(r):

    question.set(questions[i])
    selected=tkinter.Label(window, textvariable=question.get())
    selected.config(textvariable=question.get())
    selected.pack()
    for j in answers[i]:
        if j != answers[i][0]:
            answer = tkinter.Button(window, text=j, command=lambda answer=j: check_answer(answer))
            answer.pack()
            order.append(i)
    lbl = tkinter.Label(window,textvariable=score.get())
    lbl.pack()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure understanding what you want but i guess it is something like :</p>
<ul>
<li>when the user start the programm -&gt; Display one question and some anwsers</li>
<li>when the user clic on an anwser -&gt; Display one other question and some other anwsers</li>
</ul>
<p>So you must call the code that display the set of question inside your check_answer function.</p>
<p>e.g. :</p>
<pre><code>def display_question(i):
    # your code to display question i
    # ...
    for j in answers[i]:
        # ...
        answer = tkinter.Button(window, text=j, command=lambda : check_answer(j, i))

def check_answer(answer, question):
    # your code for checking what you want and counting score
    # ...
    if answer in order:
        # ....
        display_question(question + 1)

# and at the beginind :
display_question(0)
</code></pre>
</div>
<span class="comment-copy">Maybe you can have a look at <a href="https://docs.python.org/3/library/time.html#time.sleep" rel="nofollow noreferrer">sleep</a></span>
<span class="comment-copy">I think the reason is how Tkinter runs its window. It runs the code in a loop continuously to keep the window active. Maybe if you try putting the event checking inside a function, it could work.</span>
<span class="comment-copy">I think you should create a question frame class and call one after another using button commands like in <a href="https://stackoverflow.com/a/7557028/7032856">here</a>.</span>
<span class="comment-copy">Welcome to <a href="https://stackoverflow.com">Stack Overflow</a>! Please provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> to the problem you're having as opposed to some sections of your actual code.</span>
