<div class="post-text" itemprop="text">
<p>I have a file which contains in it several lines of problematic syntax, I'd like to do find all occurrences of it and replace it with acceptable syntax.</p>
<p>Example:</p>
<pre><code>&lt;field id="someId" type="xs:decimal" bind="someId"&gt;
    &lt;description/&gt;
    &lt;region id="Calc.R_315.`0" page="1"/&gt;
    &lt;region id="Calc.R_315.`1" page="1"/&gt;
&lt;/field&gt;
</code></pre>
<p>I'd like to a string replacement of all occurrences of </p>
<pre><code>&lt;dot&gt;&lt;tick&gt;&lt;number&gt; i.e. .`0 or .`1 or .`2 et cetera
</code></pre>
<p>with </p>
<pre><code>&lt;dash&gt;&lt;number&gt; i.e. -1 or -2 or -3
</code></pre>
<p>Notice it begins at 1 instead of 0.</p>
<p>I have the following python code which performs an inline replacement of however it starts at 0, I'd like it to start at 1. </p>
<pre><code>with fileinput.input(files="file.xml", inplace=True, backup='.original.bak', mode='r') as f:
    for line in f:
        pattern = "\.`(\d+)"
        result = re.sub(pattern, lambda exp: "-{}".format(exp.groups()[0]), line)
        print(result, end='')
</code></pre>
<p>How to accomplish my goal? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import re
s = """
&lt;field id="someId" type="xs:decimal" bind="someId"&gt;
   &lt;description/&gt;
   &lt;region id="Calc.R_315.`0" page="1"/&gt;
   &lt;region id="Calc.R_315.`1" page="1"/&gt;
&lt;/field&gt;
"""
new_s = re.sub('\.`\d+', '{}', s).format(*map(lambda x:'-{}'.format(int(x)+1), re.findall('(?&lt;=\.`)\d+(?=")', s)))
print(new_s)
</code></pre>
<p>Output:</p>
<pre><code>&lt;field id="someId" type="xs:decimal" bind="someId"&gt;
  &lt;description/&gt;
  &lt;region id="Calc.R_315-1" page="1"/&gt;
  &lt;region id="Calc.R_315-2" page="1"/&gt;
&lt;/field&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are almost at the solution yourself!</p>
<p>The only thing remaining is to convert the captured number into an <code>int</code>, and add 1 to it. Simple!</p>
<p>So the relevant line of code becomes:</p>
<pre><code>result = re.sub(pattern, lambda exp: "-{}".format(int(exp.groups()[0]) + 1), line)
</code></pre>
<p><br/>
Another slight modification that can be made is to change <code>.groups()[0]</code> to <code>.group(1)</code>. You can learn more about <code>group</code> and its usage in the <a href="https://docs.python.org/3/library/re.html#re.match.group" rel="nofollow noreferrer">documentation</a>.
<br/><br/>
One last thing: It is always better to define your regex pattern as a raw string so as to avoid any future headaches.</p>
</div>
<span class="comment-copy">Why doesn't adding 1 to the argument in the <code>format()</code> function work?</span>
