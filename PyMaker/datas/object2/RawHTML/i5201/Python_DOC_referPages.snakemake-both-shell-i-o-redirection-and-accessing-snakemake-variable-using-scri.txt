<div class="post-text" itemprop="text">
<p>The problem is very simple: <br/>
I want to call a script from a rule and I would like that rule to both:</p>
<ul>
<li>Perform stdout and stderr redirection</li>
<li>Access the snakemake variables from the script(variable can be both lists and literals)</li>
</ul>
<p>If I use the <code>shell:</code> then, I can perform the I/O redirection but I cannot use the <code>snakemake</code> variable inside the script. <br/>
Note: Of course it is possible to pass the variables to the script as arguments from the shell. However by doing so, the script cannot distinguish a literal and a list variable.
<br/>
If I instead use <code>script:</code> then, I can access my snakemake variables but I cannot perform I/O redirection and many other shell facilities.</p>
<hr/>
<p>An example to illustrate the question: <br/>
1) Using the <code>shell:</code></p>
<pre><code>rule create_hdf5:
    input:
        genes_file = OUTPUT_PATH+'/{sample}/outs/genes.tsv'
    params:
        # frequencies is a list!!!
        frequencies = config['X_var']['freqs']
    output:
        HDF5_OUTPUT+'/{sample}.h5'
    log:
        out = LOG_FILES+'/create_hdf5/sample_{sample}.out',
        err = LOG_FILES+'/create_hdf5/sample_{sample}.err'
    shell:
        'python scripts/create_hdf5.py {input.genes_file} {params.frequencies} {output} {threads} 2&gt; {log.err} 1&gt; {log.out} '
</code></pre>
<p>Problem with 1): Naturally, the python script thinks that each element in the frequencies list is a new argument. Yet, the script cannot access the <code>snakemake</code> variable.</p>
<p>2) Using the <code>script:</code></p>
<pre><code>rule create_hdf5:
    input:
        genes_file = OUTPUT_PATH+'/{sample}/outs/genes.tsv'
    params:
        # frequencies is a list!!!
        frequencies = config['X_var']['freqs']
    output:
        HDF5_OUTPUT+'/{sample}.h5'
    log:
        out = LOG_FILES+'/create_hdf5/sample_{sample}.out',
        err = LOG_FILES+'/create_hdf5/sample_{sample}.err'
    script:
        'scripts/create_hdf5.py'
</code></pre>
<p>Problem with 2): I can access the snakemake variable inside the script. But now I cannot use the bash facilities such as I/O redirection.</p>
<p>I wonder if there is a way of achieving both (perhaps I am missing something from the snakemake documentation)?
Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>If possible, I suggest you use the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a> module to parse the input of your script, so that it can parse a list of arguments as such, using the <code>nargs="*"</code> option:</p>
<pre class="lang-python prettyprint-override"><code>def main():
    """Main function of the program."""
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument(
        "-g", "--genes_file",
        required=True,
        help="Path to a file containing the genes.")
    parser.add_argument(
        "-o", "--output_file",
        required=True,
        help="Path to the output file.")
    parser.add_argument(
        "-f", "--frequencies",
        nargs="*",
        help="Space-separated list of frequencies.")
    parser.add_argument(
        "-t", "--threads",
        type=int,
        default=1,
        help="Number of threads to use.")
    args = parser.parse_args()
    # then use args.gene_file as a file name and args.frequencies as a list, etc.
</code></pre>
<p>And you would call this as follows:</p>
<pre class="lang-python prettyprint-override"><code>shell:
    """
    python scripts/create_hdf5.py \\
        -g {input.genes_file} -f {params.frequencies} \\
        -o {output} -t {threads} 2&gt; {log.err} 1&gt; {log.out}
    """
</code></pre>
</div>
<span class="comment-copy">I can seriealize the list into JSON then pass it to the script as an argument and deserialize it inside the script. Is there a more elegant way of achieving it than this?</span>
<span class="comment-copy">Right, it is a good practice to use the argparse overall. Thanks for the answer, I am modifying all of my scripts in this way. Meanwhile, I noticed there is also an R implementation for argparse: <a href="https://cran.r-project.org/web/packages/argparse/index.html" rel="nofollow noreferrer">cran.r-project.org/web/packages/argparse/index.html</a></span>
