<div class="post-text" itemprop="text">
<p>What I need is a Python 3 function (or whatever) that would take a text stream (like <code>sys.stdin</code> or like that returned by <code>open(file_name, "rt")</code>) and return a text stream to be consumed by some other function but remove all the spaces, replace all tabs with commas and convert all the letters to lowercase on the fly (the "lazy" way) as the data is read by the consumer code.</p>
<p>I assume there is a reasonably easy way to do this in Python 3 like something similar to list comprehensions but don't know what exactly might it be so far.</p>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure this is what you mean,  but the easiest way i can think of is to inherit from file (the type returned from open) and override the read method to do all the things you want after reading the data. A simple implementation would be:</p>
<pre><code>class MyFile(file):
    def read(*args, **kwargs):
         data = super().read(*args,**kwargs)
         # process data eg. data.replace(' ',' ').replace('\t', ',').lower()
         return data
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe what you are looking for is the <a href="https://docs.python.org/3/library/io.html#overview" rel="nofollow noreferrer"><code>io</code></a> module, more specifically a <a href="https://docs.python.org/3/library/io.html#text-i-o" rel="nofollow noreferrer"><code>io.StringIO</code></a>.</p>
<p>You can then use the <code>open()</code> method to get the initial data and modify, then pass it around:</p>
<pre><code>with open(file_name, 'rt') as f:
    stream = io.StringIO(f.read().replace(' ','').replace('\t',',').lower())
</code></pre>
</div>
<span class="comment-copy"><code>(e.replace(" ",'').replace("\t",',').lower() for e in file)</code> generator might work. It does things the "lazy" way</span>
