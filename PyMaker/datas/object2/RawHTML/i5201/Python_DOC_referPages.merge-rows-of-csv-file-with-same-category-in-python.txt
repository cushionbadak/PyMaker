<div class="post-text" itemprop="text">
<p>I am familiar with basic concepts of reading and writing a csv file in python. But I am stuck to make a logic for this problem. I think GROUP BY can solve my problem but how one can do in python </p>
<pre><code>Category         Data
A                Once upon a time.
A                There was a king.
A                who ruled a great and glorious nation.
B                He loved each of them dearly. 
B                One day, when the young ladies were of age to be married. 
B                terrible, three-headed dragon laid. 
C                It is so difficult to deny 
C                the reality
</code></pre>
<p>I want to make logic for such an output that data with category A merges to one row and same for category B and C like this.</p>
<pre><code>Category         Data
    A                Once upon a time. There was a king. who ruled a great and glorious nation.
    B                He loved each of them dearly. One day, when the young ladies were of age to be married. terrible, three-headed dragon laid. 
    C                It is so difficult to deny the reality
</code></pre>
<p>Please if anyone of you can help me out with this logic I would appreciate his effort.</p>
</div>
<div class="post-text" itemprop="text">
<p>With <code>pandas</code> library you can use <code>groupby</code> and make a custom aggregate function that just concatenates each category's <code>Data</code></p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; data = [['A', 'Once upon a time.'], ['A', 'There was a king.'], ['A', 'who ruled a great and glorious nation.'], ['B', 'He loved each of them dearly. '], ['B', 'One day, when the young ladies were of age to be married. '], ['B', 'terrible, three-headed dragon laid. '], ['C', 'It is so difficult to deny '], ['C', 'the reality']]
&gt;&gt;&gt; df = pd.DataFrame(data=data, columns=['Category','Data'])
&gt;&gt;&gt; df
  Category                                               Data
0        A                                  Once upon a time.
1        A                                  There was a king.
2        A             who ruled a great and glorious nation.
3        B                     He loved each of them dearly.
4        B  One day, when the young ladies were of age to ...
5        B               terrible, three-headed dragon laid.
6        C                        It is so difficult to deny
7        C                                        the reality
&gt;&gt;&gt; df.groupby('Category').agg({'Data': lambda x : ' '.join(x)})
                                                       Data
Category
A         Once upon a time. There was a king. who ruled ...
B         He loved each of them dearly.  One day, when t...
C                   It is so difficult to deny  the reality
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/itertools.html?highlight=itertools%20groupby#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> can help (assuming the letters in your first row are ordered):</p>
<pre><code>from itertools import groupby
from io import StringIO

text = '''Category         Data
A                Once upon a time.
A                There was a king.
A                who ruled a great and glorious nation.
B                He loved each of them dearly.
B                One day, when the young ladies were of age to be married.
B                terrible, three-headed dragon laid.
C                It is so difficult to deny
C                the reality
'''

with StringIO(text) as file:
    next(file)  # skip header
    rows = (row.split('                ') for row in file)
    for key, items in groupby(rows, key=lambda x: x[0]):
        phrases = (item[1].strip() for item in items)
        print(key, ' '.join(phrases))
</code></pre>
<p>which gives:</p>
<pre><code>A Once upon a time. There was a king. who ruled a great and glorious nation.
B He loved each of them dearly. One day, when the young ladies were of age to be married. terrible, three-headed dragon laid.
C It is so difficult to deny the reality
</code></pre>
<p>if your data is in a file, you have to replace the <code>with StringIO(text) as file:</code> above with:</p>
<pre><code>with('textfile.txt') as file:
    # do stuff as above with file
</code></pre>
</div>
<span class="comment-copy">Given the initial list of category-data, you can use Python's <code>groupby</code>: <a href="https://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">docs.python.org/2/library/itertools.html#itertools.groupby</a>, to group on the <code>category</code>. Use that to concatenate the data, and create a new csv.</span>
<span class="comment-copy">Are the other columns in the csv also distinct? Meaning if a second column <code>Data2</code> were in your csv are the records for each <code>Category</code> the same or different on every line?</span>
