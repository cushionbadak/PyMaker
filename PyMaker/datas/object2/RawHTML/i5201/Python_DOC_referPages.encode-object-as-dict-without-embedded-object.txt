<div class="post-text" itemprop="text">
<p>I have an object (objectname) that I am currently trying to get a dict representation of using objectname. _ _ dict _ _</p>
<p>The object has another object embedded in it and as a result I get a "Cannot encode object error" - which makes sense </p>
<p>I don't want this embedded object to appear in the encoded dict as it's not relevent to that output, but I do want to retain it in the object being encoded as it has use throughout the life-cycle of the object.</p>
<p>Is there a good way to do this without deleting the sub object first?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>class MyClass(object):
    def encode(self):
        # this is called a dict comprehension
        return {k: v for k, v in self.__dict__.items()
                if k != 'thing'}

o = MyClass()
o.x = 1
o.y = 2
o.thing = object()

print(o.encode())  # {'x': 1, 'y': 2}
</code></pre>
</div>
<span class="comment-copy">just printing the <code>_dict__</code> throws that error? When I make a class with an attribute set to another class, I can print this without issue. What code causes the error?</span>
<span class="comment-copy">To clarify the request from @JacobIRR, without showing the code that is causing the error it will be challenging to provide any assistance.</span>
<span class="comment-copy">If the issue is cyclic references (an <code>A</code> has an attribute of type <code>B</code>, which directly or indirectly includes the original <code>A</code> as an attribute, which causes the <code>repr</code> to recurse infinitely), you might want to look at <a href="https://docs.python.org/3/library/reprlib.html#reprlib.recursive_repr" rel="nofollow noreferrer">the <code>reprlib.recursive_repr</code> decorator</a> for defining your types' <code>__repr__</code> methods.</span>
<span class="comment-copy">That'll do the job thanks, posted this question at the end of a very long week and just couldn't see this as a solution, but then could hardly see my monitors by that point also :D</span>
