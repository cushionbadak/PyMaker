<div class="post-text" itemprop="text">
<p>Here is the code snippet I have initialized jinja2 template</p>
<pre><code>from jinja2 import Template

templ = Template("{{foo}} to {{bar}}")
</code></pre>
<p>And I am willing to extract the template string variable keys from the template obj as below.</p>
<pre><code>templ.keys() == ["foo", "bar"]
</code></pre>
<p>Is there any API to make it work? I have searched for a long while but got nothing work.</p>
</div>
<div class="post-text" itemprop="text">
<p>using <a href="http://jinja.pocoo.org/docs/2.10/api/#the-meta-api" rel="nofollow noreferrer"><code>jinja2.meta</code></a> you could:</p>
<pre><code>from jinja2 import Environment, meta

templ_str = "{{foo}} to {{bar}}"
env = Environment()
ast = env.parse(templ_str)
print(meta.find_undeclared_variables(ast))  # {'bar', 'foo'}
</code></pre>
<p>which returns the <code>set</code> of the undeclared variables.</p>
<hr/>
<p>you could also use the <a href="https://docs.python.org/3/library/re.html?highlight=re#module-re" rel="nofollow noreferrer"><code>re</code></a>gex module to find the variable names in your template string:</p>
<pre><code>from jinja2 import Template
import re

rgx = re.compile('{{(?P&lt;name&gt;[^{}]+)}}')
templ_str = "{{foo}} to {{bar}}"
templ = Template(templ_str)

variable_names = {match.group('name') for match in rgx.finditer(templ_str)}
print(variable_names)  # {'foo', 'bar'}
</code></pre>
<p>the regex (could probably be better...) matches <code>{{</code> followed by anything that is not a curly bracket until <code>}}</code> is encountered.</p>
</div>
<span class="comment-copy">Any other builtin methods or API could do the job like your answer?</span>
<span class="comment-copy">Cool, Awesome job. That is exactly what i want. Thanks a lot.</span>
