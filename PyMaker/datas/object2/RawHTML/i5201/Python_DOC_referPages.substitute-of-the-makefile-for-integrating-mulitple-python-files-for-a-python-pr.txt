<div class="post-text" itemprop="text">
<p>In C/C++ we write a makefile for a project installation/execution. How do we create a makefile or equivalent for a python project?</p>
<p>If python is a scripting language and we don't need a makefile. How do we integrate a python project with multiple python files (.py files)?</p>
<p>There is another thread with a similar question 
<a href="https://stackoverflow.com/questions/20309456/call-a-function-from-another-file-in-python">Call a function from another file in Python</a>. But my question is different from the one asked in that thread. One solution of my question may be possible by calling a function from another file. But I wanted a better solution as described by the <a href="https://stackoverflow.com/users/8372104/simon">Simon</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python is a scripting language this means that there is no compiling/recompiling is necessary and errors are reported when you run the script.  This removes one of the greatest assets of using <code>make</code>. </p>
<p>Although you can use makefiles for replacing long commands in the command line or controlling dictionaries/files, it is unlikely you will really need this.  </p>
<p>If you are using C/C++ in with your Python project then it is highly recommendable.</p>
<hr/>
<p>You mention intergrating. makefiles are unlikely to be the tools you want.  You need to build a <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">module</a> at the very least.</p>
<p>Modules allow you to use functions from other python files as if they were in that file.  You need to import them and that's pretty much it.</p>
<p>If you want to install on other PCs use <a href="https://docs.python.org/3/distutils/setupscript.html" rel="nofollow noreferrer">setup.py script</a> to create a package.  This allows you to make your project installable and then the project can be used just like an extension to Python.</p>
<hr/>
<p>Python is not like C or C++.  Just knowing where to find the files together is fine for Python and when they are turned into modules you will just have to import them once and you will be able to use the functions they provide </p>
</div>
<div class="post-text" itemprop="text">
<p>The c/c++ makefile is mainly used for compiling the project,  which is not needed with python as it is a a script language (not compiled). What kind of operations do you require from your makefile? For package management you can read about pip (a common python package manager) </p>
</div>
<div class="post-text" itemprop="text">
<p>Arrange your project of several python files into a package.
Package can mean to put several files together for others to use your code by means of an <code>import package</code>, or actually to distribute your app for others to use.</p>
<p>For the first just create a folder with the py files in it, and an empty <code>__init__.py</code> inside that folder. For the first and the second scenario also read the documentation <a href="https://packaging.python.org/tutorials/distributing-packages/" rel="nofollow noreferrer">here</a>, and maybe <a href="https://docs.python.org/3/library/distribution.html?highlight=packages" rel="nofollow noreferrer">here</a> too.</p>
</div>
<div class="post-text" itemprop="text">
<p>The best analog is a shell script that executes your file. It could include taking care of any complicated arguments, setting environmental variables if necessary. To include other .py files, you can probably just import them into your main python file. But if you have more advanced needs I would recommend a second question </p>
</div>
<span class="comment-copy">python is a scripting language, there's no need for a makefile.</span>
<span class="comment-copy">@TheDude If python is a scripting language and we don't need a makefile. How do we integrate a python project with multiple python files (.py files)?</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/20309456/call-a-function-from-another-file-in-python" title="call a function from another file in python">stackoverflow.com/questions/20309456/â€¦</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/20309456/call-a-function-from-another-file-in-python">Call a function from another file in Python</a></span>
<span class="comment-copy">But my question is different from the one asked in that thread. One solution of my question may be possible by calling a function from another file. But I wanted a better solution as described by the @Simon.</span>
<span class="comment-copy">makefiles are not useless in Python or any other language. <code>make</code> is a tool, and you can run makefiles with recipes to automate frequent tasks on the command line, in many scenarios. I agree with you that of course, you aren't in this case building a target by compiling files.</span>
<span class="comment-copy">@progmatico  I will edit please give me a minute</span>
<span class="comment-copy">@Simon If python is a scripting language and we don't need a makefile. How do we integrate a python project with multiple python files (.py files)?</span>
<span class="comment-copy">@thesukantadey  See my updated answer.  If you have further questions please say so.</span>
<span class="comment-copy">If python is a scripting language and we don't need a makefile. How do we integrate a python project with multiple python files (.py files)?</span>
<span class="comment-copy">What do you mean by integrate? You usually have a main/some other entry point, which uses the other modules (import them). There is no need for any other integration but that.  Maybe you can share your code example so the question would be clearer</span>
