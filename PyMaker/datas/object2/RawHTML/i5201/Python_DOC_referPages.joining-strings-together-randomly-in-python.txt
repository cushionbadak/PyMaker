<div class="post-text" itemprop="text">
<p>I'm looking for the words in the list to be joined together in different combinations, but it's only returning single word results. I'm looking for strings like 'whywho' 'whatwhywhen' 'howwhywhatwho' etc.</p>
<pre><code>import random, sys
words = ['why', 'who', 'what', 'why', 'when', 'how']

for i in range(100):
    print ''.join(random.choice(words[:randint(1, 4)]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use <code>sample</code> function from random package.</p>
<pre><code>import random
words = ['why', 'who', 'what', 'why', 'when', 'how']

for i in range(100):
    print ''.join(random.sample(words, random.randint(1,4)))
</code></pre>
<p><strong>EDIT</strong></p>
<p>If you don't care which element to be repeated,</p>
<pre><code>for i in range(100):
    arr = random.sample(words, random.randint(1,4))
    # select a random element from arr and append to self     
    arr.append(random.choice(words))
    print ''.join(arr)
</code></pre>
<p>if you don't want this operation to be repeated if repetitions are already there,</p>
<pre><code>    arr = random.sample(words, random.randint(1,4))
    # first check if array contains repetetive elements or not 
    # if contains, go and join the list, otherwise select a random element
    # from array and add to that array again  
    if not [el for el in arr if arr.count(l) &gt; 1]:
        arr.append(random.choice(words))                
    print ''.join(arr)
</code></pre>
<p>you might also want to use <code>insert</code> method defined for lists, which simply inserts an element to desired index in list. </p>
<pre><code>arr = random.sample(words, random.randint(1,4))
if not [el for el in arr if arr.count(el) &gt; 1]:
    r = random.choice(arr)
    index_of_r = arr.index(r)
    arr.insert(index_of_r, r)
print ''.join(arr)
</code></pre>
<p>Check <a href="https://repl.it/@marmeladze1/WingedAuthenticAmurminnow" rel="nofollow noreferrer">this</a> for last one. </p>
</div>
<div class="post-text" itemprop="text">
<p>You are very close to the answer!</p>
<p><code>random.choice</code> returns <strong>one</strong> random element from the input sequence. What <em>you</em> are doing is that you are generating a slice of random size from the <code>words</code> list, from which you are choosing a single element.</p>
<p>The following does what you want:</p>
<pre><code>''.join(random.choices(words, k=random.randint(1, 4)))
</code></pre>
<p><code>random.choices</code> returns a <code>k</code> sized list of random elements from the input sequence. These elements are chosen <em>with replacement</em>, meaning that you may have more than one occurrence of an element from <code>words</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this out. Just find a random index and <code>join</code> it with a random list. To count the number of times a word was produced use the <code>Counter</code> object from the <code>collections</code> namespace.</p>
<pre><code>import random as rand
import sys
from collections import Counter
words = ['why', 'who', 'what', 'why', 'when', 'how']
list = []

for i in range(100):
    # print(words[rand.randint(1, 4)].join(words[:rand.randint(1, 4)]))
    # print(rand.sample(words, rand.randint(1, 4))) Prints out a 'list' of current combination
    list += rand.sample(words, rand.randint(1, 4))

c = Counter(list)

print(c) # Counter({'why': 93, 'who': 48, 'what': 46, 'how': 46, 'when': 35})
</code></pre>
</div>
<span class="comment-copy">What's the purpose of the <code>random.choice</code>?</span>
<span class="comment-copy">I think this will help: <a href="https://stackoverflow.com/questions/1456617/return-a-random-word-from-a-word-list-in-python" title="return a random word from a word list in python">stackoverflow.com/questions/1456617/â€¦</a></span>
<span class="comment-copy">I would generate a random word from the list, put it into a second list, then append all of the indices in the second list.</span>
<span class="comment-copy">To randomize the strings that are outputted... an attempt anyways</span>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow noreferrer">docs for <code>random.choice</code></a> says that it will return a single random element from a sequence. You should switch to Python version 3.6+ while you are still learning ... <a href="https://pythonclock.org/" rel="nofollow noreferrer">pythonclock.org</a></span>
<span class="comment-copy">Is there a way to make this spit out results that repeat words from the list?</span>
<span class="comment-copy">i didn't understand your last question. isn't that what you were asking for? selecting random sublists from given list and join them?</span>
<span class="comment-copy">Sorry, I guess that was badly phrased. Is there a chance that two words from the list would be repeated like 'whywhywhat'?</span>
<span class="comment-copy">or course. i'm updating my answer.</span>
<span class="comment-copy">But if the randomly selected words are, for example, "who" and "why", then joining them will give you <code>'wwhohwhoy'</code>. <code>join</code> is not the same thing as concatenation.</span>
<span class="comment-copy">@Kevin I thought so too at first, but that's not what this code does - it calls join on <code>words[:rand.randint(1, 4)]</code>, which is a list.</span>
<span class="comment-copy">That said, it's certainly very hard to read. This would benefit from some variables to store intermediate results.</span>
<span class="comment-copy">Oh, my bad, I didn't see the colon.</span>
