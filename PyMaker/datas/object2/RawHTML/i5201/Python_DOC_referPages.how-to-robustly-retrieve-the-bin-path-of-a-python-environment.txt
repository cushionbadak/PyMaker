<div class="post-text" itemprop="text">
<p>I already figured out how one can retrieve the include and site-package paths of a python environment. For instance the following is <a href="https://stackoverflow.com/questions/122327/">one of multiple possibilities</a>:</p>
<pre><code>from distutils.sysconfig import get_python_lib, get_python_inc
print(get_python_lib()) # Prints the location of site-packages
print(get_python_inc()) #Â Prints the location of the include dir
</code></pre>
<p>However, I was not able to find a robust method to retrieve the bin folder of a python environment, that is, the folder where python itself and tools like pip, pyinstaller, easy_install, etc., typically reside. Does anyone know how I can get this path from within python?</p>
<p>Some may want to suggest <code>binpath = os.path.dirname(sys.executable)</code>. On Mac however, this does not work if python was installed as a Framework (<code>binpath</code> would point at: <code>/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS</code>)</p>
<p>What could I use instead that works cross-platform?</p>
</div>
<div class="post-text" itemprop="text">
<p>An installer could literally put the binaries anywhere on the filesystem (given permission).  But since the majority of packages are presumably installed with <code>pip</code> these days, a cross-platform approach will be to use where <code>pip</code> itself uses when installing distributions:</p>
<pre><code>from pip.locations import bin_py
</code></pre>
<p>Note that <code>pip</code> is included with current versions of Python, so this should work everywhere.  One other thing to mention is that distributions installed in the user site will put their console scripts etc into the user site instead, however you have an attribute for finding the user bin too:</p>
<pre><code>pip.locations.bin_user
</code></pre>
<p><strong><em>edit:</em></strong> Today I've found a stdlib way to get this info with <a href="https://docs.python.org/3/library/sysconfig.html" rel="nofollow noreferrer"><code>sysconfig</code></a> module. Works on 2.7 and 3.3+.</p>
<pre><code>&gt;&gt;&gt; from sysconfig import get_paths
&gt;&gt;&gt; get_paths()['scripts']
'/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/bin'
</code></pre>
</div>
<span class="comment-copy">Nice, this works! I was just about to object regarding the availability of pip, but you already answered this as well. Thx!</span>
<span class="comment-copy">Note that this works only for pip versions lower than 10.0! :(</span>
<span class="comment-copy">@normanius  The path changed (now in <code>pip._internal.locations</code>)</span>
