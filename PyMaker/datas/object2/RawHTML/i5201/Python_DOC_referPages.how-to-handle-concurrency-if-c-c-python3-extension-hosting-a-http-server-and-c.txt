<div class="post-text" itemprop="text">
<p>I try to create a Python extension which will host a HTTP server. When a particular request coming in, the extension calling a Python code from the extension consumer to handle the request. Since HTTP server is by-nature multi-thread, the controller/Python-code will be called in parallel.</p>
<p>According to <a href="https://docs.python.org/3/c-api/init.html#non-python-created-threads" rel="nofollow noreferrer">Python Document</a>, I try to do something like below (removed all error handling code branch to make it simpler) </p>
<pre><code>static string CallingPythonFunc(string input)
{
    PyGILState_STATE gstate;
    gstate = PyGILState_Ensure();

    PyObject *arglist;
    PyObject *result;

    /* Time to call the callback */

    PyGILState_Release(gstate);
    return output;
}
</code></pre>
<p>The <code>my_python_func</code> could be very simple like below:</p>
<pre><code>def foo(input):
    return input+"123"
</code></pre>
<p>but apparently if there are two requests coming in at the same time, above code will deadlock. </p>
<p>I also found some other <a href="https://gist.github.com/liuyu81/3473376" rel="nofollow noreferrer">sample1</a>,
 <a href="https://gist.github.com/zed/3471699" rel="nofollow noreferrer">sample2</a> and StackOverflow <a href="https://stackoverflow.com/questions/12432471/calling-python-code-from-a-c-thread">answer1</a>, <a href="https://stackoverflow.com/questions/15470367/pyeval-initthreads-in-python-3-how-when-to-call-it-the-saga-continues-ad-naus">answer2</a>. But seems both sample code create thread by itself, my case the thread is created by the http server. Two StackOverflow answers make feel confused. I thought my code above should wait for GIL available and then run the python call-back code, then get out from the critical section. But seems what I show above is not the case.</p>
</div>
<div class="post-text" itemprop="text">
<p>Eventually, I got the solution by talking to some guru of Python: I need to call <code>PyEval_InitThreads()</code> and wrap the code which creating non-Python threads with <code>Py_BEGIN_ALLOW_THREADS</code> and <code>Py_END_ALLOW_THREADS</code>.</p>
</div>
<span class="comment-copy">What is the Python source for <code>my_python_func</code>?</span>
<span class="comment-copy">@Kevin, thanks for asking! I have updated the question with the sample of <code>my_python_func</code>.</span>
<span class="comment-copy">Thank you @CÅ“ur for cleaning up!</span>
<span class="comment-copy">Once you reach 2000 reputation, you can do the same and freely improve Stack Overflow database. :)</span>
