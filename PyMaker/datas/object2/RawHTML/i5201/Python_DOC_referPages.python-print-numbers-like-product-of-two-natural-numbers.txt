<div class="post-text" itemprop="text">
<p>Sorry noob here.
I would like to have a function which, for a given natural number, will printout all possible pairs of 2 natural numbers whose product makes the input.</p>
<p>I think it could be like this, but still can't figured out how to write it properly: </p>
<p>(the last output line is missing in my code output)</p>
<pre><code>def print_products(n):
    for i in range(1, n):
        if n % i == 0:
            print(n, "=", i, "*", int((n/i)))
</code></pre>
<p>And output should be like this:</p>
<pre><code>print(print_products(36))

36 = 1 * 36
36 = 2 * 18
36 = 3 * 12
36 = 4 * 9
36 = 6 * 6
36 = 9 * 4
36 = 12 * 3
36 = 18 * 2
36 = 36 * 1
</code></pre>
<p>Thanks for the help and possible explanation</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>range()</code> function does not include the end (stop) value so <code>i</code> is never actually <code>n</code>. This is easy to correct with a <code>+1</code>. You should also use integer division (<code>//</code>) as it is neater than passing a <code>float</code> into <code>int()</code>.</p>
<p>Making your function:</p>
<pre><code>def print_products(n):
    for i in range(1, n+1):
        if n % i == 0:
            print(n, "=", i, "*", n//i)
</code></pre>
<p>and it now works:</p>
<pre><code>36 = 1 * 36
36 = 2 * 18
36 = 3 * 12
36 = 4 * 9
36 = 6 * 6
36 = 9 * 4
36 = 12 * 3
36 = 18 * 2
36 = 36 * 1
</code></pre>
<hr/>
<p>We can see from the <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer">documentation</a> that <code>range()</code> does not include the <code>stop</code> parameter:</p>
<blockquote>
<p>For a positive step, the contents of a range <code>r</code> are determined by the formula <code>r[i] = start + step*i</code> where <code>i &gt;= 0</code> and <code>r[i] &lt; stop</code>.</p>
</blockquote>
<p>The proper terminology is to say that <code>i</code> <em>does not <strong>attain</strong></em> the upper bound (<code>stop</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use <code>n+1</code> in the range function:</p>
<pre><code>def print_products(n):
    for i in range(1, n + 1):
        if n % i == 0:
            print(n, "=", i, "*", (n/i))
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#typesseq-range" rel="nofollow noreferrer"><code>range</code></a> stops at, but does not include, <code>n</code></span>
<span class="comment-copy">Use <code>range(1, n+1)</code>, see if it works as you intend.</span>
<span class="comment-copy">This is a simple off-by-one-error. Your for loop is stopping one short. Just add one to your upper range bound like others have said</span>
<span class="comment-copy">Is there a reason you'ved tagged this question with both <code>python-3.x</code> and <code>python2.7</code>?</span>
<span class="comment-copy">@Lurker in Python 3, <code>print</code> is a function. Indeed, if one is writing new Python 2 code one should import and use this function fro. <code>__future__</code> . To be fair, OP tagged this <i>both</i> 2 and 3...</span>
<span class="comment-copy">wow, that was fast, thanks a lot. üëç</span>
<span class="comment-copy">@Hrabƒõ Please accept (grey --&gt; green tick) to show your appreciation! Thank you</span>
