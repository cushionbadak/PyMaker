<div class="post-text" itemprop="text">
<p>I am trying to group the list of days according to month, for example day 1 to 31 is January, and so on. Here is some input data:</p>
<pre><code>Day 1: -109.743833
Day 2: -59.743030
Day 3: -149.539798
Day 4: -134.004097
Day 5: -101.911757
Day 6: -64.655886
Day 7: 38.683420
Day 8: 14.493554
Day 9: -52.823889
Day 10: -16.754896
Day 11: 27.648000
Day 12: -8.978296
Day 13: 3.077756
Day 14: 8.925626
Day 15: -13.099969
Day 16: 36.508620
Day 17: -20.888302
Day 18: 2.014708
Day 19: 52.070549
Day 20: 14.389047
Day 21: 46.281278
Day 22: 6.589799
Day 23: 14.849905
Day 24: 21.924614
Day 25: -19.006338
Day 26: -16.249006
Day 27: 41.147836
Day 28: 25.397426
Day 29: 45.358489
Day 30: 129.366465
Day 31: 129.377892
Day 32: -16.628081
Day 33: 56.484472
Day 34: 73.509385
Day 35: 119.484387
Day 36: -21.506795
Day 37: -16.499800
Day 38: -17.491308
Day 39: 140.532548
Day 40: -8.470736
Day 41: 203.523499
</code></pre>
<p>I am tring to sum up its total grouped by month. This is the code where I printed out the above:</p>
<pre><code>print('Day %d: %f' % (day, inverted))
</code></pre>
<p>I am thinking to manually do an if else statement to sum them up but I do not think that's a good idea. Is there any better way of doing this?</p>
<p>Thanks!</p>
<p><strong>Edit</strong></p>
<pre><code>dataset = list()
for yhat in forecast
    print('Day %d: %f' % (day, inverted))
    temp = str(day) + ':' + str(inverted)
    dataset.append(temp)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Convert day to month based on a given year, and then group by month using dictionary:</p>
<pre><code>from datetime import datetime
from datetime import timedelta
from collections import defaultdict

year = 2018
data = [
    (32, -16.628081),
    (33, 56.484472),
    ...
]

base = datetime(year, 1, 1)
res = defaultdict(float)
for month, val in (((base + timedelta(day - 1)).month, inverted) for day, inverted in data):
    res[month] += val

print(res)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let's say your input is in a dictionary, with the integer day as the keys.</p>
<pre><code>{1: -109.743833, 2: -59.743030, ...}
</code></pre>
<p>We can use those keys to build date strings, then use the <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>datetime.strptime</code></a> method to interpret them.  We can then extract the month from the <code>datetime</code> object</p>
<pre><code>from collections import defaultdict
from datetime import datetime    

month_groups = defaultdict(list)
year = 2018

for day, value in day_dict.items():
    month = datetime.strptime('{:0&gt;3}-{}'.format(day, year), '%j-%Y').month
    month_groups[month].append(value)
</code></pre>
<p>I would not be surprised if there is some better way of doing this, so you might want to double check in the <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>datetime</code></a> and <a href="https://docs.python.org/3/library/calendar.html#module-calendar" rel="nofollow noreferrer"><code>calendar</code></a> modules to see if you can find something I missed</p>
</div>
<span class="comment-copy">Do you know the year?  That would be important for leap days</span>
<span class="comment-copy">@PatrickHaugh Year is set to the current year!</span>
<span class="comment-copy">How are you doing this? Pandas?</span>
<span class="comment-copy">Hey any ideas how to populate the day and inverted variables from edited portion into your format?</span>
<span class="comment-copy">@guest176969 Is your input an iterable containing strings like <code>Day 35: 119.484387</code>?</span>
<span class="comment-copy">it is just like the day and inverted variable like this: print('Day %d: %f' % (day, inverted))</span>
<span class="comment-copy">@guest176969 Then <code>data</code> is just in your input format.</span>
<span class="comment-copy">@guest176969 You can change <code>Day 1</code> to <code>1</code> using <code>split</code>. <code>'{:0&gt;3}-{}'.format(day.split()[-1], year)</code></span>
<span class="comment-copy">Hey I managed to execute the solution above after some slight modification. But when I tried to print out the sorted list by using print(month_groups), it prints out a lot values. Is there any way to print out only the total for each of the month?</span>
<span class="comment-copy">Each of the values in <code>month_groups</code> will be a list of the values for that month. So you could just do something like <code>sum(month_groups[1])</code> to get the total for January.</span>
<span class="comment-copy">Hmm I tried with sum(month_groups[1]), sum(month_groups[2]) and so on but all printed out the same value though</span>
<span class="comment-copy">I just noticed a mistake in the code above. I forgot to include the <code>.month</code> after the call to <code>strptime</code>.  Try again with that change, it should help (I bet the value you were getting was 0)</span>
