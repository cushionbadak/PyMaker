<div class="post-text" itemprop="text">
<p>Already looked at Google and past questions in here and couldn't find a simple and well-explained answer.</p>
<p><strong>How to loop through a large number in python?</strong></p>
<p>e.g. I would like to check how long it will take to loop between 1 and 1.2e+34 and print the final result.</p>
<p>Not sure how to write for look/while loop for this and I have no idea how to write 1.2e+34 in python language <strong>(For i = 1 to i = ?)</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python understands <code>1.2e34</code>, as a float, but you can cast it to an int. <code>int(1.2e34)</code>.</p>
<p>If you want to loop between 1 and <code>n</code> inclusive, you would normally use <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer"><code>range(1, n+1)</code></a>.</p>
<p>Thus, in Python 3:</p>
<pre><code>for i in range(1, int(1.2e34)+1):
    print(i)   # or do whatever you want
</code></pre>
<p>--</p>
<p>As FHTMitchell pointed out, in Python 2, the value is too large for <code>range</code> or <code>xrange</code>. You could use a <code>while</code> loop instead.</p>
<pre><code>i = 1
while i &lt;= 1.2e34:
    print i    # or do whatever you want
    i += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ok so you have an answer as to <em>how</em> you'd do it, but you really need to think about if you <em>should</em> do it. On my, not slow machine, this code in iPython (py 3.6):</p>
<pre><code>def f(n):
   for i in range(10 ** n):
      pass

%timeit f(6)
</code></pre>
<p>produces</p>
<pre><code>10 loops, best of 3: 20.4 ms per loop
</code></pre>
<p>So if you want to loop between <code>1</code> and <code>1.2e34</code> that will take 1.2e34 / 0.0204 = 5.77e35 seconds or roughly <a href="https://www.wolframalpha.com/input/?i=5.77e35%20seconds%20%2F%20%5Buniverse%20age%5D" rel="nofollow noreferrer">10^18 times the age of the universe</a>. </p>
<p>I don't think you want to be doing that...</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe you can try something like this:</p>
<pre><code>i = 1L
while True:
    i += 1
    if i == int(1.2e34):
        print(i)
        break
</code></pre>
</div>
<span class="comment-copy">Why do you think that enumerating through a "large" number would be any different than through a "small" number?</span>
<span class="comment-copy">Perhaps you think that enumerating through a large number is different than through a small number because you tried <code>range(1, 1.2e34)</code> and got <code>TypeError: 'float' object cannot be interpreted as an integer</code>. Or perhaps not. We can't tell because you didn't tell us. Sharing your unsuccessful approaches is usually useful.</span>
<span class="comment-copy">I was trying for i in xrange(1, int(1.2e34)+1): in python 2.7 and was getting error</span>
<span class="comment-copy"><code>for i in xrange(1, int(1.2e34)+1):</code> fails in python 2 because <code>xrange</code> accepts <code>int</code>s only, not <code>long</code>s, which <code>int(1.2e34)</code> is. I think you'd have to do the old <code>i = 0L; while i &lt; 1.2e43: stuff(); i += 1</code> trick. Or upgrade to python 3 ;)</span>
<span class="comment-copy">@FHTMitchell Aha. Good point.</span>
