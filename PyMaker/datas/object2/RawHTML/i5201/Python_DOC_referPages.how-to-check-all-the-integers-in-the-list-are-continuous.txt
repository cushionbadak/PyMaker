<div class="post-text" itemprop="text">
<p>I am trying to write a program which will print "YES" if all the numbers in the <code>list</code> are continuous and should return "NO" if the numbers are not continuous. By continuous I mean every number in the list should be greater than one from the previous element.</p>
<p>For example:</p>
<ul>
<li><p>It should print "YES" for inputs: <code>[3, 4, 5]</code>, <code>[7, 8, 9]</code>, <code>[1, 2, 3]</code>, <code>[0, 1, 2, 3, 4, 5]</code>.. etc</p></li>
<li><p>It should print "NO" for inputs: <code>[9, 1, 0]</code>, <code>[3, 2, 4]</code>, <code>[5, 5]</code>, <code>[9, 8, 2, 3, 7]</code>.. etc</p></li>
</ul>
<p>I used <code>enumerate</code> for this purpose.</p>
<p>Here's my code:</p>
<pre><code>    inp=[1,2,3,4,5]
    flag=0
    for index,e in enumerate(inp): 
        if index!=len(inp)-1:    
            if inp[index+1]==inp[index]+1:
                flag=1
    if flag==1:
        print ("YES")
    else:
        print ("NO")
</code></pre>
<p>The code works fine but i find it redundant.<br/>
Is there a better way to do it using enumerate or without using enumerate?</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need <code>enumerate</code> in order to check the elements of your lists are continuous. You can simply achieve it via creating a function using <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><strong><code>zip</code></strong></a> and <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><strong><code>all</code></strong></a> as:</p>
<pre><code>def check_continuity(my_list):
    return all(a+1==b for a, b in zip(my_list, my_list[1:]))
</code></pre>
<p>Same result can be achieved by <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><strong><code>any</code></strong></a> with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><strong><code>zip</code></strong></a> as <em>(similar to <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a> but with <code>not</code> and <code>!=</code> for comparision)</em>:</p>
<pre><code>def check_continuity(my_list):
    return not any(a+1!=b for a, b in zip(my_list, my_list[1:]))
</code></pre>
<p>Above functions will return <code>True</code>/<code>False</code> depending upon whether your list is continuous or not.</p>
<p>Sample run:</p>
<pre><code># Continuous Lists
&gt;&gt;&gt; check_continuity([3, 4, 5])
True
&gt;&gt;&gt; check_continuity([7, 8, 9])
True
&gt;&gt;&gt; check_continuity([1, 2, 3])
True

# Non Continuous Lists
&gt;&gt;&gt; check_continuity([9, 1, 0])
False
&gt;&gt;&gt; check_continuity([3, 2, 4])
False
&gt;&gt;&gt; check_continuity([5, 5])
False
</code></pre>
<p>In order to print "YES"/"NO", you may make a simple <code>if..else</code>check outside the function call as:</p>
<pre><code>&gt;&gt;&gt; "YES" if check_continuity([1, 2, 3]) else "NO"
'YES'

# OR update the return statement in your function to
#    return "NO" if any(a+1!=b for a, b in zip(my_list, my_list[1:])) else "YES"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't see why you need <code>enumerate</code> at all, given that you never use <code>e</code>. Try using the <code>for...else</code> block:</p>
<pre><code>inp = [1, 2, 3]

for idx in range(len(inp) - 1):
    if inp[idx + 1] - inp[idx] != 1:
        print("NO")
        break
else:
    print("YES")
</code></pre>
<p>You can also <code>zip</code> the list with its copy shifted by one (but that, well, makes a copy):</p>
<pre><code>for x, y in zip(inp, inp[1:]):
    if y - x != 1:
        print("NO")
        break
else:
    print("YES")
</code></pre>
<p>Or make this into a function:</p>
<pre><code>def increasing_by_one(inp):
    for x, y in zip(inp, inp[1:]):
        if y - x != 1:
            return False
    return True

print('YES' if increasing_by_one(inp) else 'NO')
</code></pre>
</div>
<span class="comment-copy">Your example says it should say "YES" for <code>[345,789,123,567,012345]</code>, but I doubt your code does that</span>
<span class="comment-copy">@MoinuddinQuadri I think OP meant "YES" for <code>[3,4,5]</code>, <code>[7,8,9]</code> and so on.</span>
<span class="comment-copy">yes, I meant [3,4,5], [7,8,9],etc . Ill edit it</span>
