<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11210104/check-if-a-program-exists-from-a-python-script">Check if a program exists from a python script [duplicate]</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I have a python code that call a gpg command with <code>os.system()</code> to decrypt some files as part of a larger file management pipeline.  However, on my MacOS 10.11.6, I have a version of gpg2 that I use to decrypt files.</p>
<p>So Iâ€™d like to add in the script some check of whether gpg or gpg2 are present on the machine. </p>
<p>I tried to test a call for gpg and catch a possible OSError with:</p>
<pre><code>try:
    os.system("gpg --version")
except OSError:
    print("gpg not found")
</code></pre>
<p>But this doesn't work even if gpg is not present and the output of the <code>os.system()</code> call is:</p>
<pre><code>sh: gpg: command not found
32512
</code></pre>
<p>Any idea of how I can do this?</p>
<p>(PS: I have no clue what the 32512 is...)</p>
</div>
<div class="post-text" itemprop="text">
<p>Like the <code>os.system()</code> documentation has been telling you for I think 10+ years now, use <code>subprocess</code> instead.</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; subprocess.check_output(['gpg', '--version'])
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/subprocess.py", line 629, in check_output
    **kwargs).stdout
  File "/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/subprocess.py", line 696, in run
    with Popen(*popenargs, **kwargs) as process:
  File "/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/subprocess.py", line 950, in __init__
    restore_signals, start_new_session)
  File "/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/subprocess.py", line 1544, in _execute_child
    raise child_exception_type(errno_num, err_msg)
FileNotFoundError: [Errno 2] No such file or directory: 'gpg'
</code></pre>
<p>In recent versions of Python, you probably want to prefer <code>subprocess.run()</code> over the somewhat clunky legacy API functions.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/2/library/os.html#os.system" rel="nofollow noreferrer">python docs</a> about <code>os.system()</code>:</p>
<blockquote>
<p>Execute the command (a string) in a subshell. This is implemented by calling the Standard C function system(), and has the same limitations. Changes to sys.stdin, etc. are not reflected in the environment of the executed command.</p>
</blockquote>
<p>So this is not the command to use. You should use os.popen which is now deprecated and substituted by <a href="https://docs.python.org/2/library/subprocess.html#module-subprocess" rel="nofollow noreferrer">subprocess module</a>.</p>
<p><a href="https://stackoverflow.com/a/3503909/4575505">This answer</a> is a valid example of what you're looking for.</p>
</div>
<span class="comment-copy"><code>32512</code> in hex is <code>0x7F00</code>.  <code>7F</code> is <code>127</code>, which is the exit code for "command not found".  I don't know why it's being presented this way.</span>
<span class="comment-copy">@PatrickHaugh just wow</span>
<span class="comment-copy">Actually, I've done some more looking into it, and it's explained in <a href="https://docs.python.org/3/library/os.html#os.wait" rel="nofollow noreferrer">the documentation</a>. The exit status indication is: "a 16-bit number, whose low byte is the signal number that killed the process, and whose high byte is the exit status (if the signal number is zero); the high bit of the low byte is set if a core file was produced."</span>
