<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11427138/python-wildcard-search-in-string">Python wildcard search in string</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/3348753/search-for-a-file-using-a-wildcard">Search for a file using a wildcard</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I am learning as I go and came across a little snag. I'm trying to search an inputted string in a dictionary. </p>
<p>example: I want to pull up all episodes of a single season of a show with this search "S*1*Show title". I want it to show S.01 E.01 Show Title S.01 E.02 Show Title ...S.01 E.10 Show Title.</p>
<p>I can get it to show all titles by just putting in "Show title" but this also brings up Season 2, Season 3 and extras. </p>
<pre><code>@app.route('/title', methods=['GET', 'POST'])
def showIPTitle():
    savelist = []
    savelen = str(len(savelist))
    savedlist = [ipheader]
    if request.method=='POST':
        catTitle=request.form['title'].lower()
        savedOp=request.form['titlesaveOp']
        saveloc = saveLocat+'title'+catTitle+'.'+timeString+'.csv'

        if len(catTitle) &gt; 3:
            for k, v in Content.items():
                if re.search(catTitle,str(v['assetName'].lower())):
                    asstitle = str(v['assetName'])
                    assstart = (v['LicenseWindowStart'])[8:18]
                    assend = (v['LicenseWindowEnd'])[8:18]
                    providerid = (v['ProviderID'])
                    asssetid = (v['AssetID'].upper())
                    categories = (v['categories'])
                    savelist.append([asssetid,providerid,asstitle,categories,assstart,assend])
                    savedlist.append([asssetid,providerid,asstitle,categories,assstart,assend])
                    savelen = str(len(savelist))
                    if savelen &gt; 1:
                        if savedOp== 'yesSave':
                            savedfile = open(saveloc, 'w')
                            swriter = csv.writer(savedfile, delimiter = '|')
                            swriter.writerows(savedlist)
                            savedfile.close()
                        else:
                            savedOp =="no"
                else:
                    onstorefront = 'No'
                    asstitle = 'NOT FOUND'
                    assstart = 'NOT FOUND'
                    assend = 'NOT FOUND'
                    providerid = 'NOT FOUND'
                    categories = 'NOT FOUND'
            return render_template('Title.html',selected='search',
            savedloc=saveloc,
            saveOp=savedOp,
            savelist=savelist,
            savelen=savelen,
            enteredID=catTitle,
            header=header,
            asstitle=asstitle,
            assstart=assstart,
            assend=assend,
            providerid=providerid,
            categories=categories,
            method=request.method)
        else:
            return render_template('ipvodTitle.html',selected='search',savelen=savelen, savelist=savelist,header =header)
    else:
        print(6)
        return render_template('ipvodTitle.html',selected='search',savelen=savelen, savelist=savelist,header =header)   
</code></pre>
<p>I believe the issue is here in the code</p>
<pre><code>if re.search(catTitle,str(v['assetName'].lower())):
</code></pre>
<p>I've also tried </p>
<pre><code>if catTitle.lower() in v['assetName'].lower():
</code></pre>
<p>but I get the same results. "show title" brings up all episodes and extras and "S*1*show title" brings up nothing</p>
</div>
<div class="post-text" itemprop="text">
<p>Ok, to be honest, I've not really read your code, too much stuff here, but let's focus on what I think to be your actual question: <strong>How to use wildcard search with Python</strong>.</p>
<p>The only way I know is <a href="https://docs.python.org/3/library/fnmatch.html" rel="nofollow noreferrer"><code>fnmatch</code></a>:</p>
<pre><code>import fnmatch

data = ['foo', 'foobar', 'foo-bar', 'foo-oo-bar', 'foo-foo', 'foo-oo-foo']

for item in data:
    print('{}: {}'.format(
        item,
        fnmatch.fnmatch(item, 'foo*bar')
    ))
</code></pre>
<p>Output:</p>
<pre><code>foo: False
foobar: True
foo-bar: True
foo-oo-bar: True
foo-foo: False
foo-oo-foo: False
</code></pre>
<hr/>
<p>Please, not that wildcard is really not the same thing than Regex. Don't except to use wildcard via any Regex method.</p>
</div>
<span class="comment-copy">I was just trying everything I saw online before posting the question :)</span>
<span class="comment-copy">This works! Thank you so Much!</span>
