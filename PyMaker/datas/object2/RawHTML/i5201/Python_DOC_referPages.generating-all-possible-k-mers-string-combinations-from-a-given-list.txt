<div class="post-text" itemprop="text">
<p>I have a string <code>S</code> that is composed of 20 characters: </p>
<pre class="lang-python prettyprint-override"><code>S='ARNDCEQGHILKMFPSTWYV'
</code></pre>
<p>I need to generate all possible k-mer combinations from a given input k.</p>
<p>When <code>k == 3</code>, then there are 8000 combinations (<code>20*20*20</code>) and the output list looks like this:</p>
<pre class="lang-python prettyprint-override"><code>output = ['AAA', 'AAR', ..., 'AVV', ..., 'VVV'] #len(output)=8000
</code></pre>
<p>When <code>k == 2</code>, then there are 400 combinations (<code>20*20</code>) and the output list looks like this: </p>
<pre class="lang-python prettyprint-override"><code>output = ['AA', 'AR', 'AN', ..., 'VV'] #len(output)=400
</code></pre>
<p>When <code>k == 1</code>, then there are only 20 combinations:</p>
<pre class="lang-python prettyprint-override"><code>output =['A', 'R', 'N', ..., 'Y', 'V'] #len(output)=20
</code></pre>
<p>I know how to do this if the number <code>k</code> is fixed, like if <code>k == 3</code>, then I can do this: </p>
<pre class="lang-python prettyprint-override"><code>for a in S:
   for b in S:
      for c in S:
         output.append(a+b+c)
#then len(output)=8000
</code></pre>
<p>But the number <code>k</code> is chosen randomly.
I tried to use permutations, but it does not given me strings with repeated letters like <code>'AAA'</code>, but maybe it can and I'm just doing it wrong. </p>
</div>
<div class="post-text" itemprop="text">
<p>What you are looking for is <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">itertools.product()</a>. You can use <code>repeat</code> argument for the number of <code>k</code>'s in your algorithm.</p>
<pre><code>from itertools import product
...
list(product('ARNDCEQGHILKMFPSTWYV', repeat=2)) # len = 400
list(product('ARNDCEQGHILKMFPSTWYV', repeat=3)) # len = 8000
</code></pre>
<p>Bear in mind it returns tuples of characters as default, if you want strings instead, you can join using list comprehensions as below:</p>
<pre><code>[''.join(c) for c in product('ARNDCEQGHILKMFPSTWYV', repeat=3)]
# ['AAA', 'AAR', ..., 'AVV', ..., 'VVV']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools.product</code> and generate the random value for <code>k</code>:</p>
<pre><code>import itertools
import random
S = 'ARNDCEQGHILKMFPSTWYV'
final_results = map(''.join, itertools.product(*[S]*random.randint(1, 10)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just generate random integer V in range <code>0..L^k-1</code> where L is string length and k is length of k-mer.</p>
<p>Then build corresponding combination</p>
<pre><code>V = Random(L**k)
for i in range(k):
    C[i] = A[V % L]       ///i-th letter using integer modulo
    V = V // L            ///integer division
</code></pre>
</div>
