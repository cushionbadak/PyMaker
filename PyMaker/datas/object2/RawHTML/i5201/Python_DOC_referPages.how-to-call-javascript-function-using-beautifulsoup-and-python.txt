<div class="post-text" itemprop="text">
<p>I am performing web scrapping to grab data from a website as part of my project. I can make the request and grab the data which is present in the dom. However, some data is getting rendered on javascript onClick function. </p>
<p>One way could be, using the selenium to click on the link (which calls the javascript function) and grab the rendered data, but this process is time-consuming, and I don't want to open the browser. </p>
<p>Is there any way other than selenium to achieve this?   </p>
<p>Website: <a href="http://catalog.fullerton.edu/preview_entity.php?catoid=16&amp;ent_oid=1849" rel="nofollow noreferrer">http://catalog.fullerton.edu/preview_entity.php?catoid=16&amp;ent_oid=1849</a></p>
<p>In the <em>courses</em> section of this webpage, all the courses are hyperlinks, and as soon as someone clicks on the courses, a javascript method gets called. I need the data which gets rendered after the javascript function call.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't. If you want to run JavaScript, you'll need to use a headless browser. Otherwise, you'll have to disassemble the JavaScript and see what it does.</p>
<p>Click on the element while your browser's developer tools are open in the Network tab:</p>
<p><a href="https://i.stack.imgur.com/713v4.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/713v4.png"/></a></p>
<p>You can now see that the JavaScript downloads new HTML from that URL. You can easily send the same request with urllib.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't do this using BeautifulSoup alone.  This module was created to scrape HTML (Hyper Text Markup Language) not JavaScript, CSS or any other web language.  </p>
<p>It can extract between <code>&lt;script&gt;&lt;/script&gt;</code> tags (which will be quite useful) but beyond this BeautifulSoup is not what you need.</p>
<p>To call a JavaScript functions you will need a <a href="https://en.wikipedia.org/wiki/Headless_browser" rel="nofollow noreferrer">headless browser</a> such as <a href="http://phantomjs.org/" rel="nofollow noreferrer">PhantomJS</a> or <a href="http://selenium-python.readthedocs.io/" rel="nofollow noreferrer">Selenium</a>.  There have also been attempts to parse JavaScript as well as using <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regex</a> (which is <strong>not a good idea</strong>) and using other methods (recommended) some methods are described in <a href="https://stackoverflow.com/questions/390992/javascript-parser-in-python">this question</a> and may be useful. </p>
</div>
