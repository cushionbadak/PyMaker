<div class="post-text" itemprop="text">
<p>I have written a program for a homework assignment, that should function as a mock grocery list that will calculate how much the items should cost as well. </p>
<pre><code>grocery_item = {}
grocery_history=[{'name': 'milk', 'number': int(1), 'price': float(2.99)},
{'name': 'eggs', 'number': 2, 'price': 3.99},
{'name': 'onions', 'number': 4, 'price': 0.79}]


stop = 'go'
item_name = "Item name"
quantity = "Quantity purchased"
cost = "Price per item" 
print ("Item name:")  
print ("Quantity purchased:")
print ("Price per item:")
cont = 'c'

while cont != 'q':      
  item_name = "milk"
  quantity = "Quantity purchased"
  quantity = 2
  cost = "Price per item"
  cost = 2.99
  grocery_history.append(item_name)
  grocery_history.append(quantity)
  grocery_history.append(cost)
  grocery_item['name'] = item_name
  grocery_item['number'] = quantity
  grocery_item['price'] = cost
  print("Would you like to enter another item?\nType 'c' for continue or 'q'     to quit:\n")
  cont = 'c'
  item_name = "eggs"
  quantity = "Quantity purchased"
  quantity = 1
  cost = "Price per item"
  cost = 3.99
  grocery_history.append(item_name)
  grocery_history.append(quantity)
  grocery_history.append(cost)
  grocery_item['name'] = item_name
  grocery_item['number'] = quantity
  grocery_item['price'] = cost
  "Would you like to enter another item?\nType 'c' for continue or 'q' to quit:\n"
  cont = 'c'  
  item_name = "onions"
  quantity = "Quantity purchased"
  quantity = 4
  cost = "Price per item"
  cost = 0.79
  "Would you like to enter another item?\nType 'c' for continue or 'q' to quit:\n"
  cont = 'q'
  grand_total = []

  number = grocery_item['number']
  price = grocery_item['price']

 for grocery_history in grocery_item:    
   item_total = number*price
   grand_total.append(item_total)
print (grocery_item['number'] + ['name'] + "@" + ['price'] + "ea" + ['item_total'])  

item_total = 0

print (grand_total)
</code></pre>
<p>This is the error I get:</p>
<blockquote>
<pre><code>print (grocery_item['number'] + ['name'] + "@" + ['price'] + "ea" + ['item_total'])
TypeError: unsupported operand type(s) for +: 'int' and 'list'
</code></pre>
</blockquote>
<p>There are multiple problems with this code.</p>
<ol>
<li>I am supposed to use the <code>%.2f</code> to get the price in dollar form, but I have no idea how, and the things I've tried haven't worked. </li>
<li>There are syntax errors in my <code>print(grocery_item)</code> statement. </li>
<li>The code doesn't run through the list <code>grocery_history</code>, and just repeats with the same input over and over.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>To get a formatted print with the fields from the <code>dict</code> you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>.format()</code></a> like:</p>
<pre><code>print('{number} {name} @ {price:.2f} ea'.format(**grocery_item))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have an error because you are adding string to floats. Python does not know how to do that.</p>
<p>As @Stephen Rauch showed, you can do it in one line with a very pythonic structure. If you want you can use the syntax 
<code>'%s\t%s\t...'%(my_variable1, my_variable2)</code>
Which works great as well.</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume you wanted to add items to already existing <code>grocery_history</code> and then calculate the grand total of all your groceries (using Stephen Rauch's printing answer).</p>
<pre><code>grocery_history=[{'name': 'milk', 'number': int(1), 'price': float(2.99)},
{'name': 'eggs', 'number': 2, 'price': 3.99},
{'name': 'onions', 'number': 4, 'price': 0.79}]

cont = 'c'
grand_total = 0

while cont != 'q':
    num = input("How many bottles of milk do you want to buy? ")   
    grocery_history[0]['number'] += num

    num = input("How many eggs do you want to buy? ")   
    grocery_history[1]['number'] += num

    num = input("How many onions do you want to buy? ")   
    grocery_history[2]['number'] += num

    cont = raw_input("Enter c to continue or q to quit: ")
    while cont not in ['c', 'q']:
        cont = raw_input("Wrong choice, enter your choice again: ")

for grocery_item in grocery_history:    
    item_total = grocery_item['number'] * grocery_item['price']
    grand_total += item_total
    print('${:.2f} for {number} {name} @ {price:.2f} ea'.format(item_total, **grocery_item))

print ("Grand total is ${:.2f}".format(grand_total))
</code></pre>
<p><strong>Some of what went wrong:</strong></p>
<p>You weren't actually asking the user to enter <code>c</code> or <code>q</code>, so you just went once over the list and exited in the end because of <code>cont = 'q'</code>.</p>
<p>You were constantly overwriting your variables, for example:</p>
<pre><code>  quantity = "Quantity purchased"
  quantity = 2
</code></pre>
<p>First line assigns string and the second - integer. You can operate directly on dict values, provided you know how to access them. </p>
<p>This part:</p>
<pre><code>  number = grocery_item['number']
  price = grocery_item['price']
</code></pre>
<p>assigned the last actually updated <code>grocery_item</code> (eggs) and you did all your calculations in <code>for</code> loop with these two values.</p>
<p>Here:</p>
<pre><code>  grocery_history.append(item_name)
  grocery_history.append(quantity)
  grocery_history.append(cost)
</code></pre>
<p>you were appending strings and numbers to a list of dictionaries.</p>
</div>
<span class="comment-copy">Please post any error messages you are getting, including the complete traceback</span>
<span class="comment-copy">You are trying to concatenate a list of strings and number. Python does not know how to do that. You have to convert everything to strings first.</span>
<span class="comment-copy">miThe while loop run through the same input  because your define <code>item_name</code> inside it so each time you start a new loop it will put <code>item_name = 'milk'</code></span>
<span class="comment-copy">also, where is your for loop? inside the while loop or outside? It seems here that you have 3 levels of indentation..</span>
<span class="comment-copy">outside the while loop, i will fix the indentaion</span>
