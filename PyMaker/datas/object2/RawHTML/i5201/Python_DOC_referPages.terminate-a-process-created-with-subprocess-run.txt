<div class="post-text" itemprop="text">
<p>How can I terminate a process created with <code>subprocess.run</code> in Python 3?</p>
<p>The documentation of <code>subprocess.run</code> is <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer">here</a>, but it doesn't specify it.</p>
<p>The documentation of the return-value is <a href="https://docs.python.org/3/library/subprocess.html#subprocess.CompletedProcess" rel="nofollow noreferrer">here</a>, but there's no hint for it in there either.</p>
<p>With <code>subprocess.Popen</code> it's easy:</p>
<pre><code>p = subprocess.Popen(...)
...
p.terminate()
</code></pre>
<p>Do you have any idea how to do the same when using <code>subprocess.run</code>?</p>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>you cannot, since the process returns to python interpreter only once it has ended.</p>
<p>You could try to get hold of the PID while running in a thread and kill it, but...</p>
<p>For those cases, <code>Popen</code> is the best solution as you can control input/output &amp; end of your process.</p>
<p>From the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>The underlying process creation and management in this module is handled by the Popen class. It offers a lot of flexibility so that developers are able to handle the less common cases not covered by the convenience functions.</p>
</blockquote>
<p>Note that the documentation starts by describing <code>run</code>, then <code>Popen</code>, then the now deprecated <code>check_call</code>, <code>check_output</code> ... calls</p>
</div>
<span class="comment-copy">OK, thanks. With <code>Popen</code>, I'm having problem calling Windows <code>cmd ...</code> properly. But given your answer, I'll focus on solving that instead of struggling with <code>run</code>.</span>
<span class="comment-copy">you could edit your question or create another one to explain why youre struggling with <code>Popen</code>. Everything that can be done with <code>run</code> can be done with <code>Popen</code>, and more...</span>
<span class="comment-copy">You're right, I'm taking it back. I was creating two processes, 2nd process depending on the 1st process, then terminated the 1st without waiting for the 2nd to finish. This of course gave me errors on the 2nd process, which I have now resolved. Thanks again!!!</span>
