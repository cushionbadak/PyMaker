<div class="post-text" itemprop="text">
<p>I have an array of multiple even and odd numbers, how can i make this array to an arrary of odd elements, for example:
odd elements ignored but even elements plus 1;</p>
<pre><code>Input_array = [3,67,2,34,55,73,96,21,13,15,16]
Output_array = [3,67,3,35,55,73,97,21,13,15,17]
</code></pre>
<p>this is my code :</p>
<pre><code>Output_array = [(x+1) for x in Input_array if x%2 == 0]
</code></pre>
<p>but this <code>Output_array</code> contains (even elements + 1) not all elements, only <code>[3, 35, 97, 17]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Just set their 1-bit:</p>
<pre><code>[x | 1 for x in a]
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; a = [3,67,2,34,55,73,96,21,13,15,16]
&gt;&gt;&gt; [x | 1 for x in a]
[3, 67, 3, 35, 55, 73, 97, 21, 13, 15, 17]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you've correctly observed, you can convert a list of even and odd elements to only odd elements by adding <code>1</code> to the even elements. You also know this can be done with a list comprehension. Your code is close, but not quite right. Right now, all you're doing is <em>filtering out any odd numbers</em> from your new list. If the current element <em>is not</em> even, you need to <em>add it</em> to the new list:</p>
<pre><code>[x + 1 if x % 2 == 0 else x for x in Input_array]
</code></pre>
<p>Here is what the above list comprehension produces:</p>
<pre><code>&gt;&gt;&gt; Input_array = [3,67,2,34,55,73,96,21,13,15,16]
&gt;&gt;&gt; [x + 1 if x % 2 == 0 else x for x in Input_array]
[3, 67, 3, 35, 55, 73, 97, 21, 13, 15, 17]
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use:</p>
<pre><code>[x<b>+(not x % 2)</b> for x in Input_array]</code></pre>
<p>This works as follows, with the condition <code>not x % 2</code>, we check if the number is even (<code>True</code> if is even, <code>False</code> otherwise). Since <code>True</code> is as an integer <code>1</code>, and <code>False</code> as an integer is <code>0</code>, we thus add <code>1</code> to the value, given the number is even.</p>
<p>This gives us:</p>
<pre><code>&gt;&gt;&gt; [x+(not x % 2) for x in Input_array]
[3, 67, 3, 35, 55, 73, 97, 21, 13, 15, 17]
</code></pre>
<p>Or we can use bitwise operations:</p>
<pre><code>[x<b>-(x&amp;1)+1</b> for x in Input_array]</code></pre>
<p>The result is again:</p>
<pre><code>&gt;&gt;&gt; [x-(x&amp;1)+1 for x in Input_array]
[3, 67, 3, 35, 55, 73, 97, 21, 13, 15, 17]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason your statement <code>Output_array = [(x+1) for x in Input_array if x%2 == 0]</code> does not work is: you are filtering the list and only use elements that are even - to those you add 1.</p>
<pre><code>[x+1 if x%2 == 0 else x for x in Input_array] 
</code></pre>
<p>processes all elements of Input_array and adds 1 to the even ones, leaves the odd ones as is.</p>
<p><strike><code>[x+1 if x%2 == 0 for x in Input_array</code> </strike></p>
<p>processes all elements of Input_array and adds 1 to the even ones, ignoreing all odd ones.</p></div>
<span class="comment-copy">You could just pull each value out of the array in a for loop, check if it's even or odd, do stuff and then add to output array.</span>
<span class="comment-copy"><code>[x +1 if x % 2 == 0 else x for x in Input_array]</code></span>
<span class="comment-copy">BTW, please don't call a <a href="https://docs.python.org/3/library/stdtypes.html#list" rel="nofollow noreferrer"><code>list</code></a> an <a href="https://docs.python.org/3/library/array.html#array.array" rel="nofollow noreferrer"><code>array</code></a>. Those two are different things.</span>
<span class="comment-copy"><code>[x + 1 - x % 2 for x in Input_array]</code></span>
<span class="comment-copy">Yep, this is much better than my solution. Very nice. +1</span>
<span class="comment-copy">Points for creativity :-) +1</span>
<span class="comment-copy">For the bitwise solution @StefanPochmann shows it more simply with <code>x | 1</code> instead of <code>x-(x&amp;1)+1</code>.  Unfortunately, the clarity of the bitwise solution is limited to those who twiddle bits.  Using the integer nature of booleans I think also makes some readers pause.  So while both of your answers are smart, but I prefer the straightforwardness of <code>x + 1 if x % 2 == 0 else x</code> while simultaneously disliking its verbosity.   I'm somewhat fond of <code>x + 1 - x%2</code>, but it also lacks clarity so I don't have a better answer.</span>
<span class="comment-copy">@StevenRumbalski: I'm not a huge fan of bithacks either, if you do not really work with bits. But it is more <i>spielerei</i> :).</span>
<span class="comment-copy">The second attempt is invalid syntax.</span>
<span class="comment-copy">@WillemVanOnsem thanks for the pointer.</span>
