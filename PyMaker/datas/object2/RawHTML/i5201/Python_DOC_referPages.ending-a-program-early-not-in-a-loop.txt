<div class="post-text" itemprop="text">
<p>I'm attempting to make a short program that will return the factorial of a number, which works fine. The only problem I am having is getting the program to end if the user inputs a non-integer value. </p>
<pre><code>num = input("input your number to be factorialised here!: ")

try:
    num1 = int(num)
except ValueError:
    print("That's not a number!")



if num1 &lt; 0:
    print("You can't factorialise a negative number")
elif num1 == 0:
    print("the factorial of 0 is 1")
else:
        for i in range(1,num1+1):
            ans = ans * i
        print("the factorial of", num, "is", ans)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h3>Solution</h3>
<p>There are better ways of doing this but given your code structure you can use <code>else</code>. See <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">the docs</a>.</p>
<pre><code>num = input("input your number to be factorialised here!: ")

try:
    num1 = int(num)
except ValueError:
    print("That's not a number!")
else:
    if num1 &lt; 0:
        print("You can't factorialise a negative number")
    elif num1 == 0:
        print("the factorial of 0 is 1")
    else:
        ans = 1
        for i in range(1,num1+1):
            ans = ans * i
        print("the factorial of", num, "is", ans)
</code></pre>
<p>The <code>else</code> clause only executes if no exceptions are thrown.</p>
<h3>Suggestions</h3>
<p>So as not to give away answers to your homework, here are a couple suggestions that you should take a look at to clean up your code:</p>
<ol>
<li>Can you use <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">range</a> more efficiently? Hint: you can iterate over decreasing numbers by setting the <code>step</code> to a negative integer.</li>
<li>Can you find a way to get rid of the check <code>num1 == 0</code>?</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>The OP is actually asking how to terminate the current script execution prematurely. The straightforward way to implement your idea is to use <code>sys.exit()</code> like</p>
<pre><code>try:
    num1 = int(num)
except ValueError:
    sys.exit()
</code></pre>
<p>For more details, see this <a href="https://stackoverflow.com/questions/179369/how-do-i-abort-the-execution-of-a-python-script">thread</a>.</p>
</div>
<span class="comment-copy">You need to define <code>ans</code></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/5424716/how-to-check-if-string-input-is-a-number">How to check if string input is a number?</a></span>
<span class="comment-copy">why are you asking such questions before previously researching here itself? it has been answer too many times: <a href="https://stackoverflow.com/questions/5424716/how-to-check-if-string-input-is-a-number" title="how to check if string input is a number">stackoverflow.com/questions/5424716/…</a>, <a href="https://stackoverflow.com/questions/19440952/how-do-i-check-if-raw-input-is-integer-in-python-2-7" title="how do i check if raw input is integer in python 2 7">stackoverflow.com/questions/19440952/…</a>, <a href="http://www.101computing.net/number-only/" rel="nofollow noreferrer">101computing.net/number-only</a> --&gt; this is not a homework solving tool.</span>
<span class="comment-copy">You could use regex too.</span>
<span class="comment-copy">It's a fairly trivial point, but using a non-zero exit status here might be slightly more proper.</span>
<span class="comment-copy">I agree this causes the program to exit, but adding an <code>else</code> clause (or some other form of error handling) is the proper way to handle this.</span>
