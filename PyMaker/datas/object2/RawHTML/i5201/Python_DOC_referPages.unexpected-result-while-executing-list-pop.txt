<div class="post-text" itemprop="text">
<p>I'm trying to assign a = x and b = x.pop(); Albeit I'm getting unexpected assignments. Could you explain this?</p>
<pre><code>&gt;&gt;&gt; x = [10, 11, 12, 13]
&gt;&gt;&gt; a, b = x, x.pop(2)
&gt;&gt;&gt; print a
[10, 11, 13] # Shouldn't I get a = [10, 11, 12, 13]?
&gt;&gt;&gt; print b
12
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You will get a = [10,11,13], b = 12.</p>
<p>A value of x pops out after you execute 'b = x.pop()' and x changes forever i.e for the rest of the program after executing value 'b' </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Since you're referring direct list, it's popping and assigning what
  left in list. If you have list as copy then try this:-</p>
</blockquote>
<pre><code>x = [10, 11, 12, 13]
a,b = x.copy(),x.pop(2)
print(a) # your expected output
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you say <em>a=x</em>, both <em>a</em> and <em>x</em> are pointing to the same list, therefore modifying <em>a</em> will also modify <em>x</em>. If you say <em>a</em>=list(<em>x</em>)
then <em>a</em> will be a separate copy of the list <em>x</em>.</p>
</div>
<span class="comment-copy"><code>x</code> is mutable.  <code>a = x</code>, <code>x</code> changed, and therefore so did <code>a</code> since they point to the same thing.</span>
<span class="comment-copy">This is the correct result</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/8056130/immutable-vs-mutable-types">Immutable vs Mutable types</a></span>
<span class="comment-copy">@StephenRauch I am fairly beginner in python. I didn't know about mutable and immutable objects. The other questioner seems to know about that already</span>
<span class="comment-copy">Sequences can be copied by slicing instead of x.copy(), so it can be done by x[:]. Python FAQ [<a href="https://docs.python.org/3/faq/programming.html#how-do-i-copy-an-object-in-python]" rel="nofollow noreferrer">docs.python.org/3/faq/â€¦</a></span>
<span class="comment-copy">@Matt.St agreed</span>
