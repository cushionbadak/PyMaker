<div class="post-text" itemprop="text">
<p>I am trying to print the common letters from two different user inputs <strong>using a <code>for</code> loop</strong>. (I need to do it using a for loop.) I am running into two problems: 1. My statement "If char not in output..." is not pulling unique values. 2. The output is giving me a list of individual letters rather than a single string.  I tried the split the output but split ran into a type error. </p>
<pre><code>wrd = 'one'
sec_wrd = 'toe'

def unique_letters(x): 
    output =[]
    for char in x: 
        if char not in output and char != " ": 
            output.append(char)
    return output

final_output = (unique_letters(wrd) + unique_letters(sec_wrd))

print(sorted(final_output))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to perform the <a href="https://en.wikipedia.org/wiki/Intersection_(set_theory)" rel="nofollow noreferrer">Set Intersection</a>. Python has <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.intersection" rel="nofollow noreferrer"><strong><code>set.intersection</code></strong></a> method for the same. You can use it for your use-case as:</p>
<pre><code>&gt;&gt;&gt; word_1 = 'one'
&gt;&gt;&gt; word_2 = 'toe'

#    v join the intersection of `set`s to get back the string
#    v                             v  No need to type-cast it to `set`.
#    v                             v  Python takes care of it
&gt;&gt;&gt; ''.join(set(word_1).intersection(word_2))
'oe'
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#func-set" rel="nofollow noreferrer"><code>set</code></a> will return the unique characters in your string. <code>set.intersection</code> method will return the characters which are common in both the sets.</p>
<hr/>
<p>If <code>for</code> loop is must for you, then you may use a <em>list comprehension</em> as:</p>
<pre><code>&gt;&gt;&gt; unique_1 = [w for w in set(word_1) if w in word_2]
# OR
# &gt;&gt;&gt; unique_2 = [w for w in set(word_2) if w in word_1]

&gt;&gt;&gt; ''.join(unique_1)  # Or, ''.join(unique_2)
'oe'
</code></pre>
<p>Above result could also be achieved with explicit <code>for</code> loop as:</p>
<pre><code>my_str = ''
for w in set(word_1):
    if w in word_2:
        my_str += w

# where `my_str` will hold `'oe'`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For this kind of problem, you're probably better off using sets:</p>
<pre><code>wrd = 'one'
sec_wrd = 'toe'
wrd = set(wrd)
sec_wrd = set(sec_wrd)

print(''.join(sorted(wrd.intersection(sec_wrd))))
</code></pre>
</div>
<span class="comment-copy">what  is your expected result for above code?</span>
<span class="comment-copy">unique_letters(wrd) returning unique letters ? how is it not working?</span>
<span class="comment-copy">@JessMatthews, and why <code>n</code> and <code>t</code> are thrown away as non-unique?</span>
<span class="comment-copy">You are looking for letters that are in both strings?</span>
<span class="comment-copy">@JessMatthews, perhaps, change your title and question to: "find common items between 2 lists"</span>
<span class="comment-copy">Great!  When I convert the inputs using .lower (to avoid user input errors) I am getting an error in the list comprehension line.  Any idea why?</span>
<span class="comment-copy">@JessMatthews Do you mean <code>.lower()</code> ??</span>
<span class="comment-copy">I appreciate it.  I need to use a for loop.  I have tried to use intersection in the loop, but haven't gotten that to work.</span>
