<div class="post-text" itemprop="text">
<p>I have a dictionary of lists that includes keys with very similar names that I need to merge together; for example,</p>
<pre><code>new_dict = {
    'a0':['hello', 'how'],
    'a1':['are'],
    'a2':['you'],
    'b0':['fine'],
    'b1':['thanks']
}
</code></pre>
<p>And I want something like this:</p>
<pre><code>desired = {
    'a':['hello', 'how', 'are', 'you'],
    'b':['fine', 'thanks']
}
</code></pre>
<p>I though that I could change the key as if it was a list element, like this:</p>
<pre><code>for key in new_dict.keys():
    if 'a' in key:
        key == 'a'
</code></pre>
<p>But this obviously doesn't work. What's the best way to do it? Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is one way:</p>
<pre><code>from collections import defaultdict
d = defaultdict(list)

for k, v in new_dict.items():
    d[k[0]].extend(v)

# defaultdict(list,
#             {'a': ['hello', 'how', 'are', 'you'], 'b': ['fine', 'thanks']})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a>:</p>
<pre><code>from collections import defaultdict

desired = defaultdict(list)

for key, val in new_dict.items():
    desired[key[0]] += val
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As pointed out in other comments, defaultdictionary eliminates the need for the if else statements.</p>
<pre><code>new_new_dict={}
for k,v in new_dict.items():
    k1 = k[0]
    if k1 in new_new_dict:
        new_new_dict[k1].extend(v) 
    else:
        new_new_dict[k1]=v
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools.groubpy</code>:</p>
<pre><code>import itertools
import re
new_dict = {
'a0':['hello', 'how'],
'a1':['are'],
'a2':['you'],
'b0':['fine'],
'b1':['thanks']
}
final_data = {a:[i for b in map(lambda x:x[-1], list(b)) for i in b] for a, b in itertools.groupby(sorted(new_dict.items(), key=lambda x:re.findall('^[a-zA-Z]+', x[0])[0]), key=lambda x:re.findall('^[a-zA-Z]+', x[0])[0])}
</code></pre>
<p>Output:</p>
<pre><code>{'a': ['are', 'hello', 'how', 'you'], 'b': ['fine', 'thanks']}
</code></pre>
</div>
<span class="comment-copy"><code>desired = {}  for key, value in new_dict.items():     desired.setdefault(key[0], []).extend(value)</code></span>
