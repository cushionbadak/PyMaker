<div class="post-text" itemprop="text">
<p>I'm trying to create a <code>DataFrame</code> object from a json string (not a file):</p>
<pre><code>json_string = "[{'code': '8', 'name': 'Human'}, {'code': '11', 'name': 'Orc'}]"
df = pd.read_json(json_string)
</code></pre>
<p>but this approach causes the following error:</p>
<pre><code>ValueError: Expected object or value
</code></pre>
<p>The <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_json.html" rel="nofollow noreferrer">documentation</a> makes it sound like this would be possible:</p>
<blockquote>
<p>pandas.<strong>read_json</strong>(<em>path_or_buf=None, orient=None, typ='frame', dtype=True, convert_axes=True, convert_dates=True, keep_default_dates=True, numpy=False, precise_float=False, date_unit=None, encoding=None, lines=False, chunksize=None, compression='infer'</em>)</p>
<p>Convert a JSON string to pandas object</p>
<ul>
<li><strong>path_or_buf</strong> : a valid JSON string or file-like, default: <em>None</em>
  The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. For instance, a local file could be file://localhost/path/to/table.json</li>
</ul>
</blockquote>
<p>I've already tried calling the method with several combinations of <code>orient</code> and none succeeded. Any tips on how to accomplish this? </p>
<p>I really don't want the overhead of saving my string to a file to be able to use <code>read_json()</code> successfully.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval</code></a> to evaluate the string to dict and then pass directly to <code>DataFrame</code> constructor.</p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; pd.DataFrame(eval("[{'code': '8', 'name': 'Human'}, {'code': '11', 'name': 'Orc'}]"))

    code   name
0   8      Human
1   11     Orc
</code></pre>
<p>Similarly you can also use <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> in place of <code>eval</code></p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; pd.DataFrame(ast.literal_eval("[{'code': '8', 'name': 'Human'}, {'code': '11', 'name': 'Orc'}]"))

    code   name
0   8      Human
1   11     Orc
</code></pre>
</div>
<span class="comment-copy">JSON object <code>keys</code> and <code>values</code> should be enclosed with double quotes not single.</span>
<span class="comment-copy">I know and if I could change that, I would. But in this case is <i>no-can't-do</i>.</span>
<span class="comment-copy">Then use <code>eval</code> to convert it to <code>list</code> of <code>dict</code></span>
<span class="comment-copy">@karlphillip, if you can't change the quotation marks, could you at least add a preprocessing line before reading the json? <code>json_string = json_string.replace('\'', '\"')</code></span>
<span class="comment-copy">You are the man, Mr. @Garbage Collector.</span>
<span class="comment-copy">Compare <code>eval('print("delete root")')</code> to <code>ast.literal_eval('print("delete root")')</code>. I would stick with the second option.</span>
