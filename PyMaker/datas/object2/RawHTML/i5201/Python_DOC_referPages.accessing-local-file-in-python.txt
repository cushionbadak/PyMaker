<div class="post-text" itemprop="text">
<p>I am using python 3.6. I want to access the file <code>E:\all_study\python\Bearing_fault.mat</code>. This is not in the home directory. I have tried <code>open("\E:\all_study\python\Bearing_fault.mat","r")</code> command, but it is not working!</p>
</div>
<div class="post-text" itemprop="text">
<p>Escape the backslashes, because its a special character. and remove the backslash before E</p>
<pre><code>open("E:\\all_study\\python\\Bearing_fault.mat","r")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try pathlib, it'll help with trouble shooting. Note the forward slashes in this example. That'll work with open() as well.</p>
<pre><code>from pathlib import Path

p = Path('E:/all_study/python/Bearing_fault.mat')

print(p.exists())
print(p.is_file())
print(p.read_text())

with p.open() as f:
    f.read_line()
</code></pre>
<p>Alternatively, prefixing the string with r disables escaping allowing direct pasting of the path.</p>
<pre><code>p = Path(r'E:\all_study\python\Bearing_fault.mat')
</code></pre>
<p>But here's the main reason for pathlib. If the file is in the same directory as the script, leverage that to improve portability and reliability. (Could easily be adapted to support scenario where the file is in a different directory to python script)  </p>
<pre><code>p = Path(__file__).with_name('Bearing_fault.mat')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; print("\E:\all_study\python\Bearing_fault.mat")
\E:ll_study\python\Bearing_fault.mat
</code></pre>
<p>It's no surprise that path doesn't exist! Every backslash in the <a href="https://docs.python.org/3/reference/lexical_analysis.html#literals" rel="nofollow noreferrer">string literal</a> is being parsed for escape sequences, such as <code>\a</code> for alert which produces a <a href="https://en.wikipedia.org/wiki/Bell_character" rel="nofollow noreferrer">bell character</a>. In addition, you don't put backslashes in front of drive letters. You can disable the escape sequences for a particular literal using <em>raw strings</em>: </p>
<pre><code>&gt;&gt;&gt; print(r"E:\all_study\python\Bearing_fault.mat")
E:\all_study\python\Bearing_fault.mat
</code></pre>
</div>
<span class="comment-copy">There is no backslash before the drive letter "E." All other backslashes must be escaped: "E:\\all_study\\python\Bearing_fault.mat"</span>
<span class="comment-copy">Still I am not getting the output</span>
<span class="comment-copy">I assume you are in Windows. What output do you get?</span>
