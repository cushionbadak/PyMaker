<div class="post-text" itemprop="text">
<p>What is the proper and fail-safe way to open non py file from not current directory?</p>
<hr/>
<p>To be more specific, I have a method, which validates API response with JSON schema, contained in file <em>schema.json</em>:</p>
<pre><code>def foo():
    json_data = collect_json_data()
    schema = json.load(open('./schema/schema.json'))
    jsonschema.validate(json_data, schema)
</code></pre>
<p>And got the following project structure:</p>
<pre><code>D:\projects\project-pytest\.  
│   .gitignore
│   LICENSE
│   README.md
│   requirenments.txt
│   runner_01.cmd
│   structure.txt
│   
├───tests
│   │   runner_02.cmd
│   │   file_with_tests.py
│   │     
│   ├───schema
│   │       schema.json
</code></pre>
<p>My goal is to run tests not only from the directory <code>project-pytest\tests\</code> by exectuting command <code>python -m pytest file_with_tests.py</code>, but also from parent directory, by executing <code>runner_01.cmd</code>, with command <code>python -m pytest -v .\tests\file_with_tests.py</code> inside.  </p>
<p>Now the second way fails with <code>FileNotFoundError: [Errno 2] No such file or directory: './schema/schema.json'</code>.</p>
<p>I tried using <code>import os</code>:</p>
<pre><code>schema_path = os.path.abspath('schema.json')  
schema = json.load(open(schema_path))  
</code></pre>
<p>but in this case absolute path ignores <code>schema.json</code> parent directory - <code>FileNotFoundError: [Errno 2] No such file or directory: 'D:\\Git\\testarea-pytest\\schema.json'</code>.</p>
<hr/>
<p>How should I open my <code>schema.json</code> placed in different sub-directory and be able to run commands:<br/>
<code>python -m pytest -v .\tests\file_with_tests.py</code> from <code>project-pytest</code> folder<br/>
and<br/>
<code>python -m pytest -v file_with_tests.py</code> from <code>project-pytest\tests\</code> folder<br/>
without failing test because of <code>FileNotFoundError</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are happy in making your project a package, <code>pkgutil.get_data()</code> can help abstracting from the resource location in the filesystem.</p>
<p>See <a href="https://docs.python.org/3/library/pkgutil.html?highlight=pkgutil%20get_data#pkgutil.get_data" rel="nofollow noreferrer">here.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Fixed problem to achieve my goals from the other side - I changed my <code>runner_01.cmd</code> from this:  </p>
<pre><code>python -m pytest -v file_with_tests.py 
</code></pre>
<p>to this:  </p>
<pre><code>cd ./tests/
python -m pytest -v file_with_tests.py
</code></pre>
<p>Now tests can be runned from project folder and also from the tests folder by simple cmd script runners. Can't definetely say is this a kludge or not, but users are happy.</p>
</div>
<span class="comment-copy">Try and open your schema.json using the absolute path? You can find an absolute path when running any script using a solution like this one: <a href="https://stackoverflow.com/questions/5137497/find-current-directory-and-files-directory" title="find current directory and files directory">stackoverflow.com/questions/5137497/…</a>. So you can either hard code the path or find it by using the solution in the stackoverflow post.</span>
<span class="comment-copy">@RobertMilletich my goal is exaclty to avoid any hardcode and make fail-safe solution. I also tried trick <code>schema_path = os.path.join(os.getcwd(), 'schema', 'schema.json')</code>, but it outputs same error <code>FileNotFoundError: [Errno 2] No such file or directory: 'D:\\Git\\testarea-pytest\\schema\\schema.json'</code>, if I run command from root project folder. However it works, if I run comand from ./tests/ folder. But I need solution, that fits both ways.</span>
<span class="comment-copy">Your current working directory in the tests folder would be the tests folder, which is why the script works when you run it from that directory. What I would do it define the absolute path to schema.json at runtime. For example, when you run something like python (absolute path to) file_with_tests.py from any directory, you should be able to get the absolute path of the test directory using dir_path = os.path.dirname(os.path.realpath(_<i>file_</i>)). From here, define the absolute path to schema.json using path_to_json = os.path.join(dir_path, os.path.join('schema', 'schema.json')).</span>
<span class="comment-copy">@RobertMilletich, I tried <code>schema_path = os.path.join(os.path.dirname('schema.json'), 'schema', 'schema.json')</code>, and got same result as described above - <code>FileNotFoundError: [Errno 2] No such file or directory: 'D:\\Git\\testarea-pytest\\schema\\schema.json'</code>, if I run command from root project folder. However it works, if I run comand from <code>./tests/</code> folder.</span>
