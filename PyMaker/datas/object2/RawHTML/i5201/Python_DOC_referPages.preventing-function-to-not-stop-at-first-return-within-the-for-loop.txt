<div class="post-text" itemprop="text">
<p>I have a function to check for the "negative", "positive" and "zero" value in the list. Below is my function:</p>
<pre><code>def posnegzero(nulist):
    for x in nulist:
        if x &gt; 0:
            return "positive"
        elif x &lt; 0:
            return "negative"
        else:
            return "zero"
</code></pre>
<p>But when I run this function, it stops after checking the value of the first number in the list. For example:</p>
<pre><code>&gt;&gt;&gt; posnegzero([-20, 1, 2, -3, -5, 0, 100, -123])
"negative"
</code></pre>
<p>I want it to continue for the entire list. In the above function, if I change every instance of <code>return</code> to <code>print</code>, then it does what it should but now I don't want it to say <code>None</code> when the function is complete. Any ideas of where I went wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/simple_stmts.html#return" rel="nofollow noreferrer"><code>return</code></a> stops the control flow of your function and returns back the flow. You may use <a href="https://docs.python.org/3/reference/simple_stmts.html#yield" rel="nofollow noreferrer"><code>yield</code></a> here which will convert your function into a <a href="https://docs.python.org/3/glossary.html#term-generator" rel="nofollow noreferrer"><em>generator</em></a>. For example:</p>
<pre><code>def posnegzero(nulist):
    for x in nulist:
        if x &gt; 0:
            yield "positive"
        elif x &lt; 0:
            yield "negative"
        else:
            yield "zero"
</code></pre>
<p>It will yield the next result every time <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a> is called on the returned object:</p>
<pre><code>&gt;&gt;&gt; result = posnegzero([-20, 1, 2, -3, -5, 0, 100, -123])
&gt;&gt;&gt; next(result)
'negative'
&gt;&gt;&gt; next(result)
'positive'
&gt;&gt;&gt; next(result)
'positive'
</code></pre>
<p>Or you may get all the result at once as:</p>
<pre><code>&gt;&gt;&gt; result = posnegzero([-20, 1, 2, -3, -5, 0, 100, -123])
&gt;&gt;&gt; list(result)
['negative', 'positive', 'positive', 'negative', 'negative', 'zero', 'positive', 'negative']
</code></pre>
<p>You can also iterate it using <code>for</code> loop. <code>for</code> loop repeatedly calls the <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a> method until it receives a <a href="https://docs.python.org/3/library/exceptions.html#StopIteration" rel="nofollow noreferrer"><code>StopIteration</code></a> exception. For example:</p>
<pre><code>for result in posnegzero([-20, 1, 2, -3, -5, 0, 100, -123]):
    print(result)

# which will print
negative
positive
positive
negative
negative
zero
positive
negative
</code></pre>
<p>For more information on <code>yield</code>, please refer: <a href="https://stackoverflow.com/q/231767/2063361"><em>What does the “yield” keyword do?</em></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Your issue is returning immediately on the first list element </p>
<p>Personally, I would do like this - define the function for a value only. Not a list. Run the function over each value of the list </p>
<p>(Python 3)</p>
<pre><code>def posnegzero(x):
    if x &gt; 0:
        return "positive"
    elif x &lt; 0:
        return "negative"
    else:
        return "zero"

print(list(map(posnegzero, [-20, 1, 2, -3, -5, 0, 100, -123]))) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could always just build your results in a list:</p>
<pre><code>def posnegzero(lst):
    result = []

    for x in lst:
        if x &gt; 0:
            result.append("positive")
        elif x &lt; 0:
            result.append("negative")
        else:
            result.append("zero")

    return result
</code></pre>
<p>Which works as follows:</p>
<pre><code>&gt;&gt;&gt; posnegzero([-20, 1, 2, -3, -5, 0, 100, -123])
['negative', 'positive', 'positive', 'negative', 'negative', 'zero', 'positive', 'negative']
</code></pre>
<p>Or even with a conditional list comprehension:</p>
<pre><code>def posnegzero(lst):
    return ["positive" if x &gt; 0 else "negative" if x &lt; 0 else "zero" for x in lst]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>d=["pos" if i&gt;0  else "neg"if i&lt;0  else "zero" for i in [-20, 1, 2, -3, -5, 0, 100, -123]]
</code></pre>
<p>output</p>
<blockquote>
<p>['neg', 'pos', 'pos', 'neg', 'neg', 'zero', 'pos', 'neg']</p>
</blockquote>
</div>
<span class="comment-copy">your indentations are wrong.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/7664779/what-is-the-formal-difference-between-print-and-return">What is the formal difference between "print" and "return"?</a></span>
<span class="comment-copy">Aren't you expected to build a list and return it? Search "list comprehension"</span>
<span class="comment-copy">The difference between <code>print</code> and <code>return</code> is quite significant. You should be clearer what you want to achieve with the output.</span>
<span class="comment-copy">You forgot zero condition, which is not negative</span>
