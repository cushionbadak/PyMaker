<div class="post-text" itemprop="text">
<p>I'm wondering how, in Python, I could convert strings like:</p>
<ul>
<li>"(True &amp; False) | True"  </li>
<li>"((False | False) &amp; (True | False)) &amp; (False | True)"</li>
</ul>
<p>To a boolean answer:</p>
<ul>
<li>True</li>
<li>False</li>
</ul>
<p>The bool() function doesn't seem to work.</p>
<p>Thanks,</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval</code></a> these expressions as they are valid Python</p>
<pre><code>&gt;&gt;&gt; eval("(True &amp; False) | True")
True
&gt;&gt;&gt; eval("((False | False) &amp; (True | False)) &amp; (False | True)")
False
</code></pre>
</div>
<span class="comment-copy">Be careful with eval. It evaluates the expression before validity and should be used with caution: <a href="https://stackoverflow.com/questions/15197673/using-pythons-eval-vs-ast-literal-eval" title="using pythons eval vs ast literal eval">stackoverflow.com/questions/15197673/â€¦</a></span>
<span class="comment-copy">Thanks for the help @CoryKramer and @"Notice Me Senpai"!</span>
<span class="comment-copy">If you have any doubt that a string that you're offering to <code>eval</code> might have unwanted characters in it, in your case, you can use the following code: <code>import re;s = "((False | False) &amp; (True | False)) &amp; (False | True)";if not re.sub(r'[\(\)\|&amp;TrueFals ]*', '', s):eval(s)</code>. This strips out everything other than True, False, etc. If anything remains then the <code>eval</code> would not be executed.</span>
