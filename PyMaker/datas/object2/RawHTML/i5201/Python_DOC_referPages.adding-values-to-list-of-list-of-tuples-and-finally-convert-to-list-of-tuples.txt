<div class="post-text" itemprop="text">
<p>I want to add unique values to every tuple in a list of lists. The list looks like below:</p>
<pre><code>    [[('While', 'IN', 'Entity'),
  ('applying', 'VBG', 'O'),
  ('opacity', 'NN', 'Entity'),
  ('to', 'TO', 'Entity'),
  ('a', 'DT', 'Entity'),
  ('form', 'NN', 'Entity'),
  ('should', 'MD', 'O'),
  ('we', 'PRP', 'O'),
  ('use', 'VB', 'Entity'),
  ('a', 'DT', 'Entity'),
  ('decimal', 'NN', 'Entity'),
  ('or', 'CC', 'Entity'),
  ('double', 'JJ', 'Entity'),
  ('value', 'NN', 'Entity'),
  ('?', '.', 'O')],
 [('I', 'PRP', 'O'),
  ('want', 'VBP', 'O'),
  ('to', 'TO', 'Entity'),
  ('use', 'VB', 'Entity'),
  ('a', 'DT', 'Entity'),
  ('trackbar', 'NN', 'O'),
  ('to', 'TO', 'Entity'),
  ('change', 'VB', 'Entity'),
  ('a', 'DT', 'Entity'),
  ('forms', 'JJ', 'Entity'),
  ('opacity', 'NN', 'Entity'),
  ('.', '.', 'O')]]
</code></pre>
<p>I trying to get the below output:</p>
<pre><code>c = [(1, 'While', 'IN', 'Entity'),
  (1, 'applying', 'VBG', 'O'),
  (1, 'opacity', 'NN', 'Entity'),
  (1, 'to', 'TO', 'Entity'),
  (1, 'a', 'DT', 'Entity'),
  (1, 'form', 'NN', 'Entity'),
  (1, 'should', 'MD', 'O'),
  (1, 'we', 'PRP', 'O'),
  (1, 'use', 'VB', 'Entity'),
  (1, 'a', 'DT', 'Entity'),
  (1, 'decimal', 'NN', 'Entity'),
  (1, 'or', 'CC', 'Entity'),
  (1, 'double', 'JJ', 'Entity'),
  (1, 'value', 'NN', 'Entity'),
  (1, '?', '.', 'O'),
  (2, 'I', 'PRP', 'O'),
  (2, 'want', 'VBP', 'O'),
  (2, 'to', 'TO', 'Entity'),
  (2, 'use', 'VB', 'Entity'),
  (2, 'a', 'DT', 'Entity'),
  (2, 'trackbar', 'NN', 'O'),
  (2, 'to', 'TO', 'Entity'),
  (2, 'change', 'VB', 'Entity'),
  (2, 'a', 'DT', 'Entity'),
  (2, 'forms', 'JJ', 'Entity'),
  (2, 'opacity', 'NN', 'Entity'),
  (2, '.', '.', 'O')]
</code></pre>
<p>The number increment should be happened for every list (number should remain same for tuples belonging to a list) and should finally output as the above list of tuples. </p>
<p>By doing this, I would be able to achieve the following:</p>
<pre><code>pd.DataFrame.from_records(c, columns = ['a','b','c','d']) 


    a   b        c  d
0   1   While   IN  Entity
1   1   applying    VBG O
2   1   opacity NN  Entity
3   1   to  TO  Entity
4   1   a   DT  Entity
5   1   form    NN  Entity
6   1   should  MD  O
7   1   we  PRP O
8   1   use VB  Entity
9   1   a   DT  Entity
10  1   decimal NN  Entity
11  1   or  CC  Entity
12  1   double  JJ  Entity
13  1   value   NN  Entity
14  1   ?   .   O
15  2   I   PRP O
16  2   want    VBP O
17  2   to  TO  Entity
18  2   use VB  Entity
19  2   a   DT  Entity
20  2   trackbar    NN  O
21  2   to  TO  Entity
22  2   change  VB  Entity
23  2   a   DT  Entity
24  2   forms   JJ  Entity
25  2   opacity NN  Entity
26  2   .   .   O
</code></pre>
<p>I'm trying to do with list-zip functions:</p>
<pre><code>list(zip(range(len(a)),a))
</code></pre>
<p>which is giving me the following result:</p>
<pre><code>[(0,
  [('While', 'IN', 'Entity'),
   ('applying', 'VBG', 'O'),
   ('opacity', 'NN', 'Entity'),
   ('to', 'TO', 'Entity'),
   ('a', 'DT', 'Entity'),
   ('form', 'NN', 'Entity'),
   ('should', 'MD', 'O'),
   ('we', 'PRP', 'O'),
   ('use', 'VB', 'Entity'),
   ('a', 'DT', 'Entity'),
   ('decimal', 'NN', 'Entity'),
   ('or', 'CC', 'Entity'),
   ('double', 'JJ', 'Entity'),
   ('value', 'NN', 'Entity'),
   ('?', '.', 'O')]),
 (1,
  [('I', 'PRP', 'O'),
   ('want', 'VBP', 'O'),
   ('to', 'TO', 'Entity'),
   ('use', 'VB', 'Entity'),
   ('a', 'DT', 'Entity'),
   ('trackbar', 'NN', 'O'),
   ('to', 'TO', 'Entity'),
   ('change', 'VB', 'Entity'),
   ('a', 'DT', 'Entity'),
   ('forms', 'JJ', 'Entity'),
   ('opacity', 'NN', 'Entity'),
   ('.', '.', 'O')])]
</code></pre>
<p>But unable to proceed further with this approach. </p>
</div>
<div class="post-text" itemprop="text">
<p>Using a for loop and the <strong><a href="https://docs.python.org/2/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate method</a></strong> you can iterate over the list of tuples and get the desired output.</p>
<p><strong>Ex:</strong></p>
<pre><code>a =  [[('While', 'IN', 'Entity'),
  ('applying', 'VBG', 'O'),
  ('opacity', 'NN', 'Entity'),
  ('to', 'TO', 'Entity'),
  ('a', 'DT', 'Entity'),
  ('form', 'NN', 'Entity'),
  ('should', 'MD', 'O'),
  ('we', 'PRP', 'O'),
  ('use', 'VB', 'Entity'),
  ('a', 'DT', 'Entity'),
  ('decimal', 'NN', 'Entity'),
  ('or', 'CC', 'Entity'),
  ('double', 'JJ', 'Entity'),
  ('value', 'NN', 'Entity'),
  ('?', '.', 'O')],
 [('I', 'PRP', 'O'),
  ('want', 'VBP', 'O'),
  ('to', 'TO', 'Entity'),
  ('use', 'VB', 'Entity'),
  ('a', 'DT', 'Entity'),
  ('trackbar', 'NN', 'O'),
  ('to', 'TO', 'Entity'),
  ('change', 'VB', 'Entity'),
  ('a', 'DT', 'Entity'),
  ('forms', 'JJ', 'Entity'),
  ('opacity', 'NN', 'Entity'),
  ('.', '.', 'O')]]

res = []
for i, v in enumerate(a):
    for j in v:
        res.append(tuple([i+1] + list(j)))

print res
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[(1, 'While', 'IN', 'Entity'), (1, 'applying', 'VBG', 'O'), (1, 'opacity', 'NN', 'Entity'), (1, 'to', 'TO', 'Entity'), (1, 'a', 'DT', 'Entity'), (1, 'form', 'NN', 'Entity'), (1, 'should', 'MD', 'O'), (1, 'we', 'PRP', 'O'), (1, 'use', 'VB', 'Entity'), (1, 'a', 'DT', 'Entity'), (1, 'decimal', 'NN', 'Entity'), (1, 'or', 'CC', 'Entity'), (1, 'double', 'JJ', 'Entity'), (1, 'value', 'NN', 'Entity'), (1, '?', '.', 'O'), (2, 'I', 'PRP', 'O'), (2, 'want', 'VBP', 'O'), (2, 'to', 'TO', 'Entity'), (2, 'use', 'VB', 'Entity'), (2, 'a', 'DT', 'Entity'), (2, 'trackbar', 'NN', 'O'), (2, 'to', 'TO', 'Entity'), (2, 'change', 'VB', 'Entity'), (2, 'a', 'DT', 'Entity'), (2, 'forms', 'JJ', 'Entity'), (2, 'opacity', 'NN', 'Entity'), (2, '.', '.', 'O')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all, you can't <em>change</em> tuples, you can only create new.</p>
<p>You should iterate over existing list, creating new tuple with index prepended to old data, and append resulting tuple to new list.</p>
<pre><code>result = []
for index, inner_list in enumerate(lst, 1):
    for inner_tuple in inner_list:
        result.append((index, *inner_tuple))
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> gives you ability to iterate over sequence, and have indexes at the same time. Optional "start" arg will help simplify logic.</p>
<p><code>((index, *inner_tuple))</code> creates new tuple with <code>index</code> and everything from <code>inner_tuple</code> expanded. This works in python 3 only, tho.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this with a double <code>for</code> loop in a list comprehension, using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> to produce the indices.</p>
<pre><code>data = [
    [
        ('While', 'IN', 'Entity'),
        ('applying', 'VBG', 'O'),
        ('opacity', 'NN', 'Entity'),
        ('to', 'TO', 'Entity'),
        ('a', 'DT', 'Entity'),
        ('form', 'NN', 'Entity'),
        ('should', 'MD', 'O'),
        ('we', 'PRP', 'O'),
        ('use', 'VB', 'Entity'),
        ('a', 'DT', 'Entity'),
        ('decimal', 'NN', 'Entity'),
        ('or', 'CC', 'Entity'),
        ('double', 'JJ', 'Entity'),
        ('value', 'NN', 'Entity'),
        ('?', '.', 'O')
    ],
    [
        ('I', 'PRP', 'O'),
        ('want', 'VBP', 'O'),
        ('to', 'TO', 'Entity'),
        ('use', 'VB', 'Entity'),
        ('a', 'DT', 'Entity'),
        ('trackbar', 'NN', 'O'),
        ('to', 'TO', 'Entity'),
        ('change', 'VB', 'Entity'),
        ('a', 'DT', 'Entity'),
        ('forms', 'JJ', 'Entity'),
        ('opacity', 'NN', 'Entity'),
        ('.', '.', 'O')
    ]
]

newdata = [(i,) + tup for i, lst in enumerate(data, 1) for tup in lst]
for row in newdata:
    print(row)
</code></pre>
<p><strong>output</strong></p>
<pre><code>(1, 'While', 'IN', 'Entity')
(1, 'applying', 'VBG', 'O')
(1, 'opacity', 'NN', 'Entity')
(1, 'to', 'TO', 'Entity')
(1, 'a', 'DT', 'Entity')
(1, 'form', 'NN', 'Entity')
(1, 'should', 'MD', 'O')
(1, 'we', 'PRP', 'O')
(1, 'use', 'VB', 'Entity')
(1, 'a', 'DT', 'Entity')
(1, 'decimal', 'NN', 'Entity')
(1, 'or', 'CC', 'Entity')
(1, 'double', 'JJ', 'Entity')
(1, 'value', 'NN', 'Entity')
(1, '?', '.', 'O')
(2, 'I', 'PRP', 'O')
(2, 'want', 'VBP', 'O')
(2, 'to', 'TO', 'Entity')
(2, 'use', 'VB', 'Entity')
(2, 'a', 'DT', 'Entity')
(2, 'trackbar', 'NN', 'O')
(2, 'to', 'TO', 'Entity')
(2, 'change', 'VB', 'Entity')
(2, 'a', 'DT', 'Entity')
(2, 'forms', 'JJ', 'Entity')
(2, 'opacity', 'NN', 'Entity')
(2, '.', '.', 'O')
</code></pre>
</div>
