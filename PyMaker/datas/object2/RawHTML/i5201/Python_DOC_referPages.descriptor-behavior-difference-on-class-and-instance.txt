<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/36932396/python-data-descriptor-did-not-work-as-instance-variable">Python data descriptor did not work as instance variable? [duplicate]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/23309698/why-is-the-descriptor-not-getting-called-when-defined-as-instance-attribute">Why is the Descriptor not getting called when defined as instance attribute?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I am trying to understand descriptors in python, and one thing I noticed is the following:</p>
<pre><code>In [1]: class descriptor:                  
   ...:     def __init__(self):            
   ...:         pass                       
   ...:     def __get__(self, instance, owner):                                        
   ...:         print ("__get__ called")   
   ...:         return 0                   
   ...:     def __set__(self, obj, value): 
   ...:         print ("__set__ called")   

In [2]: class Foo:                         
   ...:     y = descriptor()               
   ...:     def __init__(self):            
   ...:         self.x = descriptor()      

In [3]: Foo.y                              
__get__ called                             
Out[3]: 0                                  

In [4]: f = Foo()                          

In [5]: f.x                                
Out[5]: &lt;__main__.descriptor at 0x1099dd588&gt;
</code></pre>
<p>As you can see, on the class attribute, descriptor's <code>__get__</code> is being correctly called, but on instance attribute it is not calling the required method. I tried reading <a href="https://docs.python.org/3/howto/descriptor.html#id3" rel="nofollow noreferrer">this</a>, but it is not immediately obvious what part of that page applies over here.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Descriptors are only supported on the class, <strong>never</strong> on an instance.</p>
<p>See the <a href="https://docs.python.org/3/reference/datamodel.html#invoking-descriptors" rel="nofollow noreferrer"><em>Invoking Descriptors</em> section</a> of the reference datamodel documentation:</p>
<blockquote>
<p>The following methods only apply when an instance of the class containing the method (a so-called descriptor class) appears in an owner class (<strong>the descriptor must be in either the ownerâ€™s class dictionary or in the class dictionary for one of its parents</strong>).</p>
</blockquote>
<p>Bold emphasis mine. Here, <em>owner class</em> is the class of the instance you accessed the attribute on, or in case of accessing the attribute on the class, the class itself is the <em>owner class</em>.</p>
</div>
<span class="comment-copy">I see. Do you know what is the rationale of this? And why we have these complicated rules for lookup in python? (coming from c++ background)</span>
<span class="comment-copy">@skgbanga: because descriptors are meant to be reusable objects that are discovered on the type and then are bound to the instance. If you need to alter behaviour per instance, have the descriptor alter its behaviour based on instance data, don't set descriptors on an instance. That'd be pointless.</span>
