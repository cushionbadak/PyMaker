<div class="post-text" itemprop="text">
<p>I have a list of list like below</p>
<pre><code>[['H1','L', '1']
['H1','S', '1']
['H2','L', '1']
['H2','L', '1']]
</code></pre>
<p>And want grouping based on column1 and column2. Does python provide anything in lists that i can get the below result</p>
<pre><code>H1 L 1
H1 S 1
H2 L 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>, and the sum up the last column of each group.</p>
<pre><code>from itertools import groupby

out = []
for k, v in groupby(l, key=lambda x: x[:2]):
    s = sum([int(x[-1]) for x in v])
    out.append(k + [s])

print (out)
# [['H1', 'L', 1], ['H1', 'S', 1], ['H2', 'L', 2]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> along with <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter</code></a> to achieve your desired results</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; from itertools import groupby

&gt;&gt;&gt; items = [['H1','L', '1'], ['H1','S', '1'], ['H2','L', '1'], ['H2','L', '1']]
&gt;&gt;&gt; [(*k,sum([int(itemgetter(2)(i)) for i in list(g)])) for k,g in groupby(items,key=itemgetter(0,1))]
&gt;&gt;&gt; [('H1', 'L', 1), ('H1', 'S', 1), ('H2', 'L', 2)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another option is to use pandas:</p>
<pre><code>import pandas as pd
df = pd.DataFrame([['H1','L', 1],['H1','S', 1],['H2','L', 1],['H2','L', 1]],columns=['H','LS','1'])
df.groupby(['H','LS']).sum()
</code></pre>
<p>returning</p>
<pre><code>       1
H  LS
H1 L   1
   S   1
H2 L   2
</code></pre>
<p>or</p>
<pre><code>&gt;&gt;&gt; df.groupby(['H','LS']).sum().reset_index()
    H LS  1
0  H1  L  1
1  H1  S  1
2  H2  L  2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools groupby</code></a> with a custom key taking the columns you need:</p>
<pre><code>groupby(l, key = lambda x: (x[0], x[1]) )
</code></pre>
<p>Here you have a <a href="https://repl.it/repls/ThistleBetterAfricanwildcat" rel="nofollow noreferrer">live example</a> corresponding to this code:</p>
<pre><code>l = [
  ['H1','L', '1'],
  ['H1','S', '1'],
  ['H2','L', '1'],
  ['H2','L', '1']
]

import itertools as it 


for k, v in it.groupby(l, key = lambda x: (x[0], x[1]) ):
  print(list(v)[0])
</code></pre>
<p>result:</p>
<pre><code>['H1', 'L', '1']
['H1', 'S', '1']
['H2', 'L', '1']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Following code works,</p>
<pre><code>items = [['H1','L', '1'],
['H1','S', '1'],
['H2','L', '1'],
['H2','L', '1']]

from collections import defaultdict

dictionary = defaultdict(int)

for item in items:
  dictionary[tuple(item[:2])]+=int(item[2])

for key in dictionary:
  print(key[0], key[1], dictionary[key])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use hash object to store and look-up. This should be fast.</p>
<pre><code>test=[['H1','L', '1'],
['H1','S', '1'],
['H2','L', '1'],
['H2','L', '1']]

d = {}
for x, y, z in test:
  d[(x, y)] = d.get((x,y), 0) + 1

print(d)
# -&gt; {('H1', 'L'): 1, ('H1', 'S'): 1, ('H2', 'L'): 2}
</code></pre>
</div>
<span class="comment-copy">python <code>itertools.groupby</code></span>
<span class="comment-copy">your result does not match with what OP wants.</span>
