<div class="post-text" itemprop="text">
<p>Recently I'm learing python and has encountered a problem with unicode escape literal in python 3.</p>
<p>It seems that like Java, the \u escape is interpreted as UTF-16 code point which Java uses, but here comes the problem:</p>
<p>For example, if I try to put a 3 bytes utf-8 char like "♬" (<a href="https://unicode-table.com/en/266C/" rel="nofollow noreferrer">https://unicode-table.com/en/266C/</a>) or even supplementary unicode char like "𠜎" (<a href="https://unicode-table.com/en/2070E/" rel="nofollow noreferrer">https://unicode-table.com/en/2070E/</a>) by the format of \uXXXX or \UXXXXXXXX in a normal string as followed:</p>
<pre><code>print('\u00E2\u99AC')  # UTF-8, messy code for sure
print('\U00E299AC')    # UTF-8, with 8 bytes \U, (unicode error) for sure
print('\u266C')        # UTF-16 BE, music note appeares
# from which I suppose \u and \U function the same way they should do in Java
# (may be a little different since they function like macro in Java, and can be useed in comments)

# However, while print('\u266C') gives me '♬'，'\u266C' == '♬' is equal to false
# which is true in Java semantics.
# Further more, print('\UD841DF0E') didn't give me '𠜎' : (unicode error) 'unicodeescape' codec can't decode bytes in position 0-9: illegal Unicode character
# which I suppose it should be, so it appears to me that I may get it wrong
# Here again : print('\uD841\uDF0E')  # Error, 'utf-8' codec can't encode characters in position 0-1: surrogates not allowed

print('\xD8\x41\xDF\x0E')  # also tried this, messy code
# maybe UTF-16 LE?
print('\u41D8\u0EDF')  # messy code
print('\U41D80EDF')  # error
</code></pre>
<p>So, I could see that python "doesn't support supplementary escape literal", and its behavior is also weird.</p>
<p>Well, I already know that the correct way to decode and encode such characters:</p>
<pre><code>s_decoded = '\\xe2\\x99\\xac'.encode().decode('unicode-escape')\
               .encode('latin-1').decode('utf-8')
print(b'\xf0\xa0\x9c\x8e'.decode('utf-8'))
print(b'\xd8\x41\xdf\x0e'.decode('utf-16 be'))
assert s_decoded == '♬'
</code></pre>
<p>But still don't get how to do it right using \u &amp; \U escape literal. Hopefully someone could point it out what I'm doing wrong and how it differs from Java's way, thanks! </p>
<p>By the way, my environment is PyCharm win, python 3.6.1, source code is encoded as UTF-8</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.6.3:</p>
<pre><code>&gt;&gt;&gt; print('\u266c') # U+266C
♬
&gt;&gt;&gt; print('\U0002070E') # U+2070E.  Python is not Java
𠜎
&gt;&gt;&gt; '\u266c' == '♬'
True
&gt;&gt;&gt; '\U0002070E' == '𠜎'
True
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">docs.python.org/3/howto/unicode.html</a></span>
<span class="comment-copy">I see, thanks a lot</span>
