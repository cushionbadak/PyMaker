<div class="post-text" itemprop="text">
<p>I could see a space popping up by default if I use '\n' in python 3x. Could someone please help me in removing it?</p>
<p>Appreciate your help in advance!</p>
<p><strong>sample code:</strong></p>
<pre><code>a='How are you?'
print("Hello, World.\n",a)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>Hello, World.
 How are you?
</code></pre>
<p><strong>Explanation</strong></p>
<p>The second line of the output starts with a space. Why is this happening?</p>
</div>
<div class="post-text" itemprop="text">
<p>As stated in the Python3 documentation, the <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer">print()</a> function does as follows:</p>
<blockquote>
<p>Print objects to the text stream file, separated by sep and followed by end. sep, &gt;end, file and flush, if present, must be given as keyword arguments.</p>
</blockquote>
<p>Therefore, there's a number of ways to solve your issue:<br/>
1. Use the <em>sep</em> keyword argument, removing the default space separator.</p>
<pre><code>a='How are you?'
print("Hello, World.\n", a, sep='')
</code></pre>
<p>2. Use the .format() function.</p>
<pre><code>a='How are you?'
print("Hello, World.\n{}".format(a))
</code></pre>
<p>3. Use two print statements.</p>
<pre><code>a='How are you?'
print("Hello, World.")
print(a)
</code></pre>
<p>All of these options will output:</p>
<pre><code>Hello, World.
How are you?
</code></pre>
<p>Although all three are valid implementations, I'd personally choose option two as I feel it's a cleaner and more logical solution.  </p>
<p>Hope this helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>By consulting the documentation: <a href="https://docs.python.org/3.0/whatsnew/3.0.html#print-is-a-function" rel="nofollow noreferrer">https://docs.python.org/3.0/whatsnew/3.0.html#print-is-a-function</a></p>
<p>You can see that in Python3 the <code>print</code> function uses a space separator to print the arguments passed to it.</p>
<p>To change this behavior you can use <code>print</code> as:</p>
<pre><code>print("Hello, World.\n", a, sep="")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The comma adds in the space. There is a difference in-between:</p>
<pre><code>print(a, b)
</code></pre>
<p>and</p>
<pre><code>print(a+b)
</code></pre>
<p>Cheers,
Sebastian</p>
</div>
<div class="post-text" itemprop="text">
<p><code>print</code>separates its arguments by spaces. You may use two prints and omit the explicit newline <code>\n</code>:</p>
<pre><code>print("Hello, World.")
print(a)
</code></pre>
<p>or you concatenate the strings:</p>
<pre><code>print("Hello, World.\n" + a)
</code></pre>
<p>or you use a format</p>
<pre><code>print("Hello, World.\n%s" % a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Comma is creating space replce it as</p>
<pre><code>a='How are you?'
print("Hello, World.\n"+a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The comma is causing the space. Use the <code>+</code> sign to concatenate like this:</p>
<pre><code>a='How are you?'
print("Hello, World.\n" + a)
</code></pre>
<p>outputs:</p>
<pre><code>Hello, World.
How are you?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are using a comma separator between variables. (<code>"string1","string2"</code>) which by default has a space separator. The recommended ways would be:</p>
<ol>
<li><p>Use <code>sep</code>: <code>print("Hello, World.\n", a, sep="")</code></p></li>
<li><p>Use <code>+</code> instead of <code>,</code>: <code>print("Hello, World.\n" + a)</code></p></li>
</ol>
</div>
<span class="comment-copy">Why is python-2.7 tagged?</span>
<span class="comment-copy">Whoever downvoted, I'd appreciate a comment to tell me why if possible! :)</span>
<span class="comment-copy">Actually it's not the comma, but the default value of the <code>sep</code> keyword argument.</span>
<span class="comment-copy">@Szabolcs True, it is because the comma is making the string and <code>a</code> to be two different entities which are then concatenated by print. While when using the <code>+</code> operator the two strings are already concatenated before print fires. Or yes, you could set the default value of the separator to <code>""</code> and still use commas like you pointed out above.</span>
<span class="comment-copy">Whoever downvoted - Please give a reason as to the downvote. Just giving a downvote with no information doesn't end up as constructive criticism and is of no use the those who write them.</span>
