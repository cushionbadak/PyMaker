<div class="post-text" itemprop="text">
<p>I've created a dictionary instance without any key: value pairs, standard </p>
<pre><code>dict = {}
</code></pre>
<p>I'm then returning back some information from an API to be added to this dictionary dependent on some variables <strong>name</strong>.</p>
<pre><code>some_variables_name1 = str(some_variable1)

dict[some_variables_name1] += [{ 'key1': value1 }]

some_variables_name2 = str(some_variable2)

dict[some_variables_name2] += [{ 'key2': value2 }]
</code></pre>
<p>However, I seem to be getting an error similar to this *Assuming that str(some_variable1) is equal to <code>'foo'</code>:</p>
<pre><code>KeyError: 'foo'
</code></pre>
<p>Any pro tips?</p>
</div>
<div class="post-text" itemprop="text">
<p>Other answers already adressed why this fails, here is a convenient solution that sets a default for if the key is not already present, such that your appending does not fail. 
The way I read it, you want a dictionary with lists of other dictionaries as values. Imagining a situation such as</p>
<pre><code>somedict = {}
somevar = 0
somevar_name = str(somevar)

key1 = "oh"
value1 = 1
</code></pre>
<p>You can do </p>
<pre><code>somedict.setdefault(somevar_name,[]).append({key1,value1})
</code></pre>
<p>This will evaluate to </p>
<blockquote>
<p>{'0': [{'oh', 1}]}</p>
</blockquote>
<p>In other words, change lines of this sort</p>
<pre><code>somedict[some_variables_name] += [{ 'somekey': somevalue }]
</code></pre>
<p>Into:</p>
<pre><code>somedict.setdefault(some_variables_name,[]).append({'somekey':somevalue})
</code></pre>
<p>I hope this answers your question.</p>
</div>
<div class="post-text" itemprop="text">
<p>you have to first check is "foo" present in <code>dictionary</code> as a key.</p>
<p>You can try:</p>
<pre><code>if "foo" in dict_name:
    dict_name.append("new_append")
else:
    dict_name["foo"] = ["first entry"]
</code></pre>
<p><strong>Small suggestion:</strong> do not use <code>dict</code> as dictionary variable as it is <strong>keyword</strong> in Python</p>
</div>
<div class="post-text" itemprop="text">
<p>@Harsha is right.</p>
<p>This:</p>
<pre><code>dict[some_variables_name1] += [{ 'key1': value1 }]
</code></pre>
<p>Will do:</p>
<pre><code>dict[some_variables_name1] = dict[some_variables_name1] + [{ 'key1': value1 }]
</code></pre>
<p>Right-Hand-Side needs to be evaluated first so, it will try to lookup:</p>
<pre><code>dict[some_variables_name1]
</code></pre>
<p>Which will fail.</p>
</div>
<div class="post-text" itemprop="text">
<p>The pythonic solution is to set default values for your dictionary. In my opinion, <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> is the best option for this.</p>
<p>Also, please do not use variables names which are also classes. I have called the dictionary <code>d</code> below.</p>
<pre><code>from collections import defaultdict

d = defaultdict(list)

some_variables_name1 = str(some_variable1)
d[some_variables_name1].append({'key1': value1})

some_variables_name2 = str(some_variable2)
d[some_variables_name2].append({'key2': value2})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>to create a new dictionary use:</p>
<pre><code>dict = dict()
</code></pre>
<p>When you try to add something you use:</p>
<pre><code>+=
</code></pre>
<p>There is nothing to add. you have to first create the value</p>
<pre><code>dict[some_variables_name1] = [{ 'key1': value1 }]
</code></pre>
<p>As also suggested do not use <code>dict</code>.. a simple <code>d</code> that means dict is the way forward.</p>
</div>
<span class="comment-copy">you can directly give like this : <code>dict[some_variables_name1] = value1</code> right ?</span>
<span class="comment-copy">@VikasDamodar Yeh, and I want <code>value1</code> to be a further nesting of data...</span>
<span class="comment-copy">So can you mention any sample o/p you are expecting ?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/24089383/python-dictionary-key-error-when-assigning-how-do-i-get-around-this">Python dictionary key error when assigning - how do I get around this?</a></span>
<span class="comment-copy">You can define your <code>dict = defaultdict(list)</code> instead of <code>dict = {}</code></span>
<span class="comment-copy">more pythonic way... :)</span>
<span class="comment-copy">Yeh I was just using that as an example placeholder for the purposes of the question.</span>
<span class="comment-copy">ok... Try the solution.</span>
<span class="comment-copy">@johnashu Hi, yeh didn't quite work. Thank you tho (I didn't downvote)</span>
<span class="comment-copy">@johnashu Your amending suggestion worked. Of course, it doesn't exist so can't <code>+=</code> to it just need to set it with <code>=</code>. Stupid! Will accept as correct answer when I can. Thank you.</span>
