<div class="post-text" itemprop="text">
<p>I need to get infomation about my machine's disk and i'am using psutil to do that. But the result not so friendly. So i decide to handle it but my code look so silly.</p>
<pre><code>oldstr = str(psutil.disk_partitions())
oldstr = oldstr.replace("sdiskpart(", "")
oldstr = oldstr.replace(")", "")
oldstr = oldstr[1:-1]
oldstr = oldstr.split(",")
</code></pre>
<p>And the result look like below :</p>
<pre><code>["device='C:\\\\'", " mountpoint='C:\\\\'", " fstype='NTFS'", " opts='rw", "fixed'", " device='D:\\\\'", " mountpoint='D:\\\\'", " fstype='NTFS'", " opts='rw", "fixed'"]
</code></pre>
<p>The most result i expect is like this :</p>
<pre><code>["C:\\", "C:\\", "NTFS", "rw, fixed", "D:\\", "D:\\", "NTFS", "rw, fixed"]
</code></pre>
<p>Does anybody have a better idea ?
Please share with me your idea.
Many thanks,
Quang</p>
</div>
<div class="post-text" itemprop="text">
<p>You ideally shouldn't be converting the result from <code>psutil.disk_partitions()</code> to a string and then parsing it. Instead what it returns is an object of <code>sdiskpart()</code> with the members being <code>['device','mountpoint','fstype','opts']</code></p>
<p>Here's a naive solution:</p>
<pre><code>final_result = []
part_results = psutil.disk_partitions()
for disk in part_results:
    final_result.append(disk.device)
    final_result.append(disk.mountpoint)
    final_result.append(disk.fstype)
    final_result.append(disk.opts)

# Some of these results could be '' (Empty Strings)
# Strip them out as required.
print final_result
</code></pre>
<p>You'll now have the result you expected</p>
<pre><code>["C:\\", "C:\\", "NTFS", "rw, fixed", "D:\\", "D:\\", "NTFS", "rw, fixed"]
</code></pre>
<hr/>
<p>A alternative is as follows which returns a list of <code>OrderedDict</code>:</p>
<pre><code>part_results = [part.__dict__ for part in psutil.disk_partitions()]
</code></pre>
<p>You can then loop among the key, value pairs and append them to an array as required. Here's a sample output for the above line of code.</p>
<pre><code>[OrderedDict([('device', 'C:\\'), ('mountpoint', 'C:\\'), ('fstype', 'NTFS'), ('opts', 'rw,fixed')]),
OrderedDict([('device', 'D:\\'), ('mountpoint', 'D:\\'), ('fstype', 'NTFS'), ('opts', 'rw,fixed')])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about adding: </p>
<pre><code>oldstr = [i.split('=') for i in oldstr]
oldstr = [x[1] if len(x) == 2 else x[0] for x in oldstr]
</code></pre>
<p>then resut will look like:</p>
<pre><code>["'C:\\\\'", "'C:\\\\'", "'NTFS'", "'rw", "fixed'", "'D:\\\\'", 
"'D:\\\\'", "'NTFS'", "'rw", "fixed'"]
</code></pre>
</div>
<span class="comment-copy">Why are you converting it to a string? You can do <code>partitions = psutil.disk_partitions()</code>. And then access the values like <code>partitions[0].device</code>. Take a look at the <a href="http://psutil.readthedocs.io/en/latest/#psutil.disk_partitions" rel="nofollow noreferrer">documentation</a>.</span>
<span class="comment-copy">If i do as you say, each values will look like th√≠s <b>sdiskpart(device='C:\\', mountpoint='C:\\', fstype='NTFS', opts='rw,fixed')</b> but i don't need "sdiskpart(". I just want the values between ' ' or device='C:\\' for example.</span>
<span class="comment-copy">Had you even try it? I mean, if you access <code>partitions[0].device</code> you will get <code>'C:\\'</code>. Look at the documentation posted in the previous comment and <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer">this</a>. I don't have a Windows machine to see the exact output, but I've just tried it in Linux and it works.</span>
<span class="comment-copy">Sorry Jose A, i haven't try it. I just guess and i don't read your answer carefully. Sorry for that and Thanks for your answer too,</span>
<span class="comment-copy">Thanks Sudheesh Singanamalla, good days sir !</span>
<span class="comment-copy">This is not correct in Python 3.6.3, psutil 5.4.0. <code>AttributeError: 'sdiskpart' object has no attribute '__dict__'</code>. This can be achieved with <code>part_results = [part._asdict() for part in psutil.disk_partitions()]</code></span>
<span class="comment-copy">Jose A, Agreed. but the Question says <code>Python 2</code> in the header. In either case, would you like to make an edit in the answer for <code>Py3</code>. I'd be more than happy to accept it?</span>
<span class="comment-copy">This is not a recommended approach. The result is an object and should be processed using the members of the object than by converting them to strings and performing string manipulation operations.</span>
