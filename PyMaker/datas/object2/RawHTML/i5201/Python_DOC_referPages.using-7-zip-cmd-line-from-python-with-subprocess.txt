<div class="post-text" itemprop="text">
<p>I am trying to run 7zip through a command line code from a Python script using subprocess library.</p>
<p>The code below works fine when I use it directly in the command line. However, I am not capable to make it run with subprocess.</p>
<pre><code>set path="C:\Program Files\7-Zip\";%path%
7z x C:\\Users\\ferro\\Desktop\\teste.zip -pabc123 -oC:\\Users\\ferro\\Desktop -aos -y
</code></pre>
<p>The current code I am trying to execute is the following.</p>
<pre><code>    import subprocess
    import os

    os.system('set path="C:\Program Files\7-Zip\";%path%')
    command01 = ['7z', 'x', 'C:\\Users\\ferro\\Desktop\\teste.zip', '-p', 'abc123', '-o', 'C:\\Users\\ferro\\Desktop', '-aos', '-y']

    subprocess.call(command01)
</code></pre>
<p>The error message is "<strong><em>FileNotFoundError: [WinError 2]</em></strong>"</p>
<p>Does anyone know where is my mistake?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your environment settings (including the PATH variable) will not be passed to the subprocess. You could copy, edit and pass them like this: </p>
<pre><code>myenv = os.environ.copy()
myenv['PATH'] = '&lt;path&gt;;' + myenv['PATH']
subprocess.call(..., env=myenv)
</code></pre>
<p>But why don't you just call 7-zip with it's full path instead of fiddling with the PATH variable?</p>
<pre><code>command01 = [r'C:\Program Files\7-Zip\7z.exe', ...]
subprocess.call(command01)
</code></pre>
<p>BTW, you can also provide the full command as a single string (on Windows, conversion to string is <a href="https://docs.python.org/3/library/subprocess.html#converting-argument-sequence" rel="nofollow noreferrer">done anyway</a> under the hood):</p>
<pre><code>command02 = r'C:\Program Files\7-Zip\7z.exe ...'
subprocess.call(command02)
</code></pre>
</div>
<span class="comment-copy">You have to be careful with backslashes in strings. That can indicate a control character in some cases. Would you please try doing the following?: <code>os.system(r'set path="C:\Program Files\7-Zip\";%path%')</code></span>
<span class="comment-copy">Hi, bernie. Thank you for the explanation. I tried your suggestion but unfortunately I had the same result.</span>
<span class="comment-copy">Does <code>subprocess</code> need the executable extension specified? <code>'C:\\Program Files\\7-Zip\\7z.exe'</code></span>
<span class="comment-copy">@lit No, it doesn't require the extension. But it doesn't do harm either and might make things a bit clearer, so I will add it.</span>
<span class="comment-copy">Thank you, amain. I used complete PATH directly in the code and I also fixed some syntax mistakes in the subprocess command and it's working now. For record, the error I had made was to split <code>-p</code> from the password and <code>-o</code> from the output directory. The final code is <code>command01 = ['C:\\Program Files\\7-Zip\\7z', 'x', 'C:\\Users\\ferro\\Desktop\\teste.zip', '-pabc123', '-oC:\\Users\\ferro\\Desktop\\', '-aoa', '-y']</code></span>
