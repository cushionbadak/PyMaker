<div class="post-text" itemprop="text">
<p>My apologies for basic question. I am completely new to AWS as well as Python. 
I am trying to do sample code given below:</p>
<pre><code>import boto3
from botocore.exceptions import ClientError

def lambda_handler(event, context): 
    try:
        ec2 = boto3.resource('ec2')
        instance=ec2.create_instances(ImageId='ami-d834aba1', MinCount=1, MaxCount=1)
    except ClientError as e:
        print(e)
    else:
        print(instance)
</code></pre>
<p>This is a sample code for creating an ec2 instance. I copied the same from boto3 docs.
Can anyone explain me about <strong>try</strong> and <strong>except</strong> functions .
I need to get a clear understanding about the full code. </p>
</div>
<div class="post-text" itemprop="text">
<p>Try and Except are Python's built-in exception handling checks.  Try means "attempt to do this" and your exception is catching anything irregular that would otherwise cause your program to stall/error out.  </p>
<p>Usually, exceptions are used to "handle" situations where you don't want your program to stop executing.  People add these exceptions to make their programs do different things in different error scenarios.  Let's comment out your code:</p>
<pre><code>def lambda_handler(event, context): 
   try: #do this first
      ec2 = boto3.resource('ec2')
      instance=ec2.create_instances(ImageId='ami-d834aba1', MinCount=1, MaxCount=1)
   except ClientError as e: #if you see a ClientError, catch it as e
      print(e) #print the client error info to console
   else: #if everything goes as expected
      print(instance) #print my successful instance info
</code></pre>
<p>More commonly, I see people using try except blocks like this:</p>
<pre><code>def make_breakfast(ingredients):
   try:
      if ingredients contain "bacon":
         breakfast = cook(bacon)
         return breakfast
   except NoBaconInIngredients:
         ingredients.append("bacon")
         make_breakfast(ingredients)
</code></pre>
<p>If you want to dive deep on this, the Python documentation is super helpful.  Check out this link: <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/errors.html</a></p>
</div>
<span class="comment-copy">so the code is working fine , you just want know the logic right ?</span>
