<div class="post-text" itemprop="text">
<p>I'm trying to create a snakemake pipeline whose outputs are determined by the set of sequencing files present in a particular folder. The structure of my filepath here is something like:</p>
<pre><code>project_dir
&gt;    Snakefile
&gt;    code
&gt;        python_scripts
&gt;            ab1_to_fastq.py
&gt;    data
&gt;        1.ab1_files
&gt;            A.ab1
&gt;            B.ab1
&gt;            C.ab1
&gt;        2.fastq_files
</code></pre>
<p>Here's the code for my actual Snakefile</p>
<pre><code>import glob
import os

def collect_reads():
    ab1_files = glob.glob("data/1.ab1_files/*.ab1")
    ab1_files.sort()
    ab1_reads = [ab1_file.split('/')[-1].replace('.ab1', '') for ab1_file in ab1_files]
    return ab1_reads

READS = collect_reads()
print(expand("data/2.fastq_files/{read}.fastq", read=READS))

rule convert_ab1_to_fastq:
    input:
        ab1="data/1.ab1_files/{read}.ab1"
    output:
        fastq="data/2.fastq_files/{read}.fastq"
    shell:
        "python code/python_scripts/ab1_to_fastq.py --ab1 {input.ab1} --fastq {output.fastq}"

rule all:
    input:
        fastq=expand("data/2.fastq_files/{read}.fastq", read=READS)
</code></pre>
<p>My understanding is that <code>all</code> should be my target rule, and that the input variable of fastq in that rule evaluates to</p>
<pre><code>['data/2.fastq_files/A.fastq', 'data/2.fastq_files/B.fastq', 'data/2.fastq_files/C.fastq']
</code></pre>
<p>And this seems to be confirmed by the print output in the pipeline when I run my script. However, I get the error <code>WorkflowError: Target rules may not contain wildcards. Please specify concrete files or a rule without wildcards.</code> whenever I run this script. </p>
<p>Strangely, I can copy one of the paths from the list generated by expand to call snakemake directly, e.g. <code>snakemake data/2.fastq_files/A.fastq</code> and the pipeline completes successfully. </p>
<p>What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>It could be that snakemake thinks your target rule is <code>convert_ab1_to_fastq</code> and not <code>all</code>. By default, snakemake takes the first rule as target rule. Declare <code>all</code> first, and see whether this solves your problem.</p>
</div>
<span class="comment-copy">Unrelated to your question, but seeing some parts of your code, you might be interested in <code>os.path.basename</code>, <code>os.path.splitext</code> and possibly other functions provided in <code>os.path</code> (<a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer">docs.python.org/3/library/os.path.html</a>).</span>
<span class="comment-copy">@bli will check those out, I've got scripts littered with similar code to break down filepaths &amp; filenames</span>
<span class="comment-copy">That fixed it! I thought top down execution was a theoretical statement, not literal!</span>
<span class="comment-copy">It is. But, as with Make, the first rule is the default target. It is not looking for the special name all.</span>
