<div class="post-text" itemprop="text">
<p>I scraped several e-commerce websites (more than 5) and the data is stored in a large json file as a <strong>list of dictionaries</strong>, like this:</p>
<pre><code>{
  "url": "https://www.amazon.com/category/product_1", 
  "price": 539, 
  "product_code": ["x123"], 
  "page_title": "Smartphone Samsung Galaxy S7", 
  "h1": "Smartphone Samsung Galaxy S7, 2.3GHz / 1.6GHz,QHD Super AMOLED"
 }
</code></pre>
<p>The list is composed of more than 11k dictionaries. </p>
<p>Given that all the data is standardized, how can I search through it for best results?</p>
<p>Is it better to <strong>use Regex</strong> or to index the json file with something like <strong>Whoosh</strong>?</p>
<p>For example, when somebody is looking for <strong><em>galaxy s7 case</em></strong> I want to return the relevant data. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Small nitpick:  Those are JSON "objects", not "dictionaries".  They'll turn into dictionaries when you do <code>json.loads(...)</code>.</p>
<p>As for your question - try it!  You can cut down the list to, say, 10,000 items, then test each implementation, regex, list comprehension, Whoosh, haystack, etc., and see how fast they are, with the <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer">timeit</a> module.</p>
<p>As what you're trying to do is a search over a large amount of products, I'd suggest looking into a search engine.  Some good ones I've used are <a href="http://lucene.apache.org/solr/" rel="nofollow noreferrer">solr</a> and <a href="https://xapian.org/" rel="nofollow noreferrer">xapian</a>, though if you're already familiar with Whoosh, it certainly sounds like the best option you proposed.</p>
</div>
<span class="comment-copy">Sorry, yes they are JSON objects.</span>
