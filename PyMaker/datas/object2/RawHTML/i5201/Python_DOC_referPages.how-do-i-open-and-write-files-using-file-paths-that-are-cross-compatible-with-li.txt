<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18084554/why-do-i-get-a-syntaxerror-for-a-unicode-escape-in-my-file-path">Why do I get a SyntaxError for a Unicode escape in my file path?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>How do I open and write files using file paths that are cross-compatible with Linux, Mac, and Windows in Python 3?</p>
<p>I made an function that opens an input_file containing the following line, "Hello World." The functions then opens an output_file and writes that line to the output_file. The output file should now have the line, "Hello World."</p>
<p>However, I get a UnicodeError when trying to use the absolute file paths.</p>
<pre><code>SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape
</code></pre>
<p>I tried using os.chdir, os.path, forward slashes for the file paths, double slashes for the file path, and raw strings but none of this worked.</p>
<p>After looking at previous answers to the question <a href="https://stackoverflow.com/questions/18084554/why-do-i-get-a-syntaxerror-for-a-unicode-escape-in-my-file-path">Why do I get a SyntaxError for a Unicode escape in my file path?</a>, using os.chdir gives me the error:</p>
<pre><code>NotADirectoryError: [WinError 267] The directory name is invalid
</code></pre>
<p>Furthermore, those answers will only work for Windows machines, not Linux or Mac machines.</p>
<p>What should I do to make sure that my function can open any file and write to any file on Linux, Mac, and Windows machines?</p>
<pre><code>    def example_function(input_file_path, output_file_path)
        with open(input_file_path) as input_file:
              with open(output_file_path) as output_file:
                    for line in input_file:
                         output.write(line)

    example_function("C:\Users\Name\InputFolder\TextFolder\input.txt","C:\Users\Name\OutputFolder\DataFolder\output.txt")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Always use forward slashes so that you don't accidentally introduce invalid escape sequences such as "\Users".</p>
<pre><code>C:/Users/Name/InputFolder/TextFolder/input.txt
</code></pre>
</div>
<span class="comment-copy">Use a package like <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code></a></span>
<span class="comment-copy">Python has both the <code>os.path</code> and the <code>pathlib</code> modules to handle paths in cross-platform-friendly ways. Your problem is with using <code>\U</code> in a string literal, which is a syntax issue.</span>
<span class="comment-copy">As mentioned in my post, "I tried using os.chdir, os.path, forward slashes for the file paths, double slashes for the file path, and raw strings but none of this worked."</span>
<span class="comment-copy">You haven't explained how they didn't work.</span>
<span class="comment-copy">It's generally ok to use forward slashes. However, do not use forward slashes with "\\?\" extended paths. Also, it's best to use backslash when passing paths on the command line, since some programs reserve forward slash for command-line options.</span>
