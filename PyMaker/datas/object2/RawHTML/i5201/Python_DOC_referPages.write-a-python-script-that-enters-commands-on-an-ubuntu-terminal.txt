<div class="post-text" itemprop="text">
<p>I am using spyder on ubuntu 16.04.  I want to write a script that will execute several commands in the same linux terminal.</p>
<p>First I want to open a terminal, then ssh into another computer, then enter my password, then continuing entering commands.</p>
<p>I have tried <code>os.system(command)</code> but this does not open a new terminal for me nor run the command I want.</p>
<p><code>os.system("gnome-terminal -e 'bash -c \"ssh blah blah blah; exec bash\"'")</code>
 works but I am stuck when trying to enter my password.</p>
<p>How can I enter commands with a Python script in this context?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're looking to automatically connect &amp; login to an ssh server with a password, you can use <code>sshpass</code> to enter the password, but it'd be better to use an SSH key. Github has a good tutorial on how to generate a key <a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" rel="nofollow noreferrer">here</a>.</p>
<p>If you're looking to execute commands after SSHing into your server, you can do so with: <code>os.system("ssh user@host 'command1 &amp;&amp; command2'")</code></p>
</div>
<div class="post-text" itemprop="text">
<p>For executing commands on a terminal you can use python's subprocess module. There's already a question <a href="https://stackoverflow.com/questions/17742789/running-multiple-bash-commands-with-subprocess">here</a> on how to execute multiple commands using a single terminal with subprocess.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a> module along with the <a href="https://www.systutorials.com/docs/linux/man/1-gnome-terminal/" rel="nofollow noreferrer"><code>gnome-terminal</code></a> command if you're using Gnome.</p>
<p>The idea is to spawn a GUI terminal, and to execute a script into it through the <code>-e</code> option.
Here is a very simple example, on how to execute a shell script in a new terminal.</p>
<p><em><code>myscript.sh</code></em></p>
<pre><code>#!/bin/bash

pwd
ls
cat
</code></pre>
<p><em><code>spawn_and_run.py</code></em></p>
<pre><code>import subprocess

subprocess.Popen(["gnome-terminal", "-e", "myscript.sh"])
</code></pre>
<p>Running <code>python spawn_and_run.py</code> will spawn a new terminal, print the working directory (<code>pwd</code>), print the content of that directory (<code>ls</code>), and then echo the input from <code>stdin</code> (<code>cat</code> without arguments).</p>
</div>
<span class="comment-copy">Try to make the SSH connection using the paramiko library - but as currently stated your question is likely to be closed as too broad.</span>
<span class="comment-copy">Possibly a dupe of <a href="https://stackoverflow.com/questions/3586106/perform-commands-over-ssh-with-python" title="perform commands over ssh with python">stackoverflow.com/questions/3586106/â€¦</a></span>
<span class="comment-copy">You might find useful the answer I gave <a href="https://stackoverflow.com/a/48372732/7051394">there</a></span>
<span class="comment-copy">Thankyou! this has been working great for me so far</span>
<span class="comment-copy">@Robot12341 Glad it helped! Don't hesitate to give a +1, to accept an answer, or simply to provide feedback, we're all learning here :)</span>
