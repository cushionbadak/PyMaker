<div class="post-text" itemprop="text">
<p>What is the equivalent of this class in python? <a href="https://gist.github.com/2594962" rel="nofollow">https://gist.github.com/2594962</a></p>
<p>In PHP, it allows you to zip a string.</p>
<p>I'm trying to find the equivaelnt in the following languages: Python, Ruby on Rails and ASP.</p>
<p>I'm hoping there are built in functions for these languages. I couldn't find one in PHP.</p>
<h2>Update</h2>
<p>When I say Zip, I am referring to the standard algorithm that windows uses. Not in the sense of an archive. I currently use that class to zip a string, base64 encode it and send it as a request to an internal API.</p>
</div>
<div class="post-text" itemprop="text">
<p>Under Python, you are looking for <a href="http://docs.python.org/library/zipfile.html" rel="nofollow">the <code>zipfile</code> module</a> - specifically <a href="http://docs.python.org/library/zipfile.html#zipfile.ZipFile.writestr" rel="nofollow"><code>ZipFile.writestr()</code></a>.</p>
<p>I'd note that in general, <a href="http://docs.python.org/library/zlib.html#module-zlib" rel="nofollow"><code>zlib</code></a> is used a lot more for the kind of uses you are talking about.</p>
</div>
<div class="post-text" itemprop="text">
<p>To compress a string using the same method used in <code>.zip</code> archives, just use the <a href="https://docs.python.org/3/library/zlib.html" rel="nofollow noreferrer"><code>zlib</code></a> module directly (which is what Python's <a href="https://docs.python.org/3/library/zipfile.html#module-zipfile" rel="nofollow noreferrer"><code>zipfile</code></a> module <a href="https://github.com/python/cpython/blob/3.7/Lib/zipfile.py" rel="nofollow noreferrer">does</a>). Here's a simple example:</p>
<pre><code>import zlib

teststr = """Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus
pretium justo eget elit eleifend, et dignissim quam eleifend. Nam vehicula nisl
posuere velit volutpat, vitae scelerisque nisl imperdiet. Phasellus dignissim,
dolor amet."""

cmpstr = zlib.compress(teststr.encode('utf-8'))
uncmpstr = zlib.decompress(cmpstr)

fmt = '{:&gt;8}: (length {}) {!r}'
print(fmt.format('teststr', len(teststr), teststr))
print(fmt.format('cmpstr', len(cmpstr), cmpstr))
print(fmt.format('uncmpstr', len(uncmpstr), uncmpstr))
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code> teststr: (length 237) 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\npretium justo eget elit eleifend, et dignissim quam eleifend. Nam vehicula nisl\nposuere velit volutpat, vitae scelerisque nisl imperdiet. Phasellus dignissim,\ndolor amet.'
  cmpstr: (length 157) 'x\x9cMO[\x0e\xc30\x08\xfb\xef)8@\xd5\x93L\xd3\xae\x10%^\xcb\x94W\x03\xf4\xfc\xa3\x9d\xb4\xed\x07\tcc\xfb\xd6\x06\nq\x17+\x94Zn\x83\x84\x95B\x81\xce\x14[\x15D\x85\xda\xa0\x90\xb8\xb3D\xae+!\xb3.\xf4\xd8\x82 g\x93\xa9\x0f(\xbb\xfce\xa2\x8d\xb0B/\x8a\x0f\xf0\x135\xcd\xe4H\xe2\xb5\xb2\x08\x17\xda-\x94\xefm\xa1\xbbo\x076\x8e\x96\x039%O\xbd\x89a\xc0\xd1\xf3\xcb\xd1\xb2i\x0f\x1e\xe7`\r \x89\xae\x1d,\xbb\xe1\xa2\x13\x97\x8e\x91\x18\xff\x99~v\xf3\xf4iu6Z\xde\xf8\xa6X\r'
uncmpstr: (length 237) 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\npretium justo eget elit eleifend, et dignissim quam eleifend. Nam vehicula nisl\nposuere velit volutpat, vitae scelerisque nisl imperdiet. Phasellus dignissim,\ndolor amet.'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has a <code>zipfile</code> module which allows you to read/write zip archives.</p>
<p>The <code>zipfile.ZipFile</code> class has a <code>writestr()</code> method that can create a "file" in the archive directly from a string.</p>
<p>So no, you don't have to write your string to a file before archiving it.</p>
<p><strong>Update after question edit</strong></p>
<p>You say you don't want an archive but the linked PHP code does just that -- creates a PK-Zip archive. In Python you do the same with <code>zipfile</code>. Here's an example that creates a zip and adds one file to it -- all in-memory, without physical files.</p>
<pre><code>import zipfile
from cStringIO import StringIO

f = StringIO()
z = zipfile.ZipFile(f, 'w', zipfile.ZIP_DEFLATED)
z.writestr('name', 'some_bytes_to_compress')
z.close()

output_string = f.getvalue()
</code></pre>
<p><code>output_string</code> will be the compressed content in PK-Zip format.</p>
<p>If you control both sending and receiving side and you don't need to send multiple compressed files in one chunk of data, using PK-Zip is overkill. Instead, you could just use the <code>zlib</code> module which implements the compression for PK-Zip.</p>
<pre><code>import zlib

output_string = zlib.compress('some_bytes_to_compress')
</code></pre>
<p>And then you can decompress it (assuming Python):</p>
<pre><code>decompressed_string = zlib.decompress(output_string)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't know it exactly what you need but you might find this interesting. I use here the zipfile module with a string-file-like object </p>
<pre><code>import zipfile
import StringIO

s = StringIO.StringIO()  # s is a file like object
z = zipfile.ZipFile(s, 'w')  # this is a zip archive
z.writestr('file1.txt', 'Hello, world') # create a "file" inside the archive called 'file1.txt' and write 'hello world' into it
z.close() # close the archive

print s.getvalue()  # this is the content of the string
s.close()  # close the string file-like object
</code></pre>
<p>Watch the PK start inside the string</p>
</div>
<span class="comment-copy">What do you mean by <code>zip</code> here?</span>
<span class="comment-copy">"zip a string"? That doesn't really mean anything to me. Could you try a few examples?</span>
<span class="comment-copy">The standard windows zip.</span>
<span class="comment-copy">PHP has a built-in <a href="http://php.net/manual/en/class.ziparchive.php" rel="nofollow noreferrer"><code>ZipArchive</code></a> class.</span>
<span class="comment-copy">So, to clarify, you mean compress in a zip archive?</span>
<span class="comment-copy">When you print s, is that the compressed version of the string?</span>
<span class="comment-copy">By default, <code>ZipFile</code> doesn't compress. You have to use the <code>ZIP_DEFLATED</code> argument. See the docs.</span>
<span class="comment-copy">@Abs: <code>s</code> is a <code>StringIO</code> object which is a memory-resident file-like object, so while it will contain the compressed string, it also has a number of other things that make up the format of a <code>.zip</code> file (such as a header), as well as who-knows-what type of internal stuff that is used to maintain the data in memory.</span>
