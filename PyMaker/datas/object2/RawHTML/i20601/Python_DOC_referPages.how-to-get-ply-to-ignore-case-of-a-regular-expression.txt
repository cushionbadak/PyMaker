<div class="post-text" itemprop="text">
<p>I'm working on a simple translator from SQL INSERT statements to a dataset XML file to be used with <a href="http://www.dbunit.org" rel="nofollow">DbUnit</a>.</p>
<p>My current definition looks like this:</p>
<pre><code>def t_INSERT(token):
    r'INSERT\s+INTO'
    return token
</code></pre>
<p>Now, I want to support case insensitive commands of SQL, for example, accept all of <code>INSERT INTO</code>, <code>Insert Into</code>, <code>insert into</code> and <code>iNsErT inTO</code> as the same thing.</p>
<p>I wonder if there is a way to PLY use <code>re.I</code> so that it will ignore the case, or yet another alternative to write the rule that I'm not familiar with.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can inject flags into regexp using <code>(?)</code> syntax. Try <code>'(?i)INSERT\s+INTO'</code>, it adds the flag to ignore case.</p>
</div>
<div class="post-text" itemprop="text">
<p>Internally, <code>lex.py</code> uses the <code>re</code> module to do its pattern matching. <br/>
If you need to supply optional flags to the re.compile() function, use the reflags option to lex. For example:</p>
<pre><code>lex.lex(reflags=re.UNICODE)
</code></pre>
<p>This information is extracted from <a href="http://www.dabeaz.com/ply/ply.html" rel="nofollow noreferrer">documentation</a> sections 4.3 and 4.20
<br/>
In your case, you can pass <a href="https://docs.python.org/3/library/re.html#re.IGNORECASE" rel="nofollow noreferrer">re.IGNORECASE</a> to lexer: <br/></p>
<pre><code>import re
lex.lex(reflags=re.IGNORECASE) 
</code></pre>
</div>
<span class="comment-copy">Thanks, that's nice to know!</span>
