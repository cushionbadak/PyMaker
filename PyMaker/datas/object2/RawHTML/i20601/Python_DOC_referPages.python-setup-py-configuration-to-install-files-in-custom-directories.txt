<div class="post-text" itemprop="text">
<p>I want to create a setup.py which would install my files into custom directories. I have a certain prefix, where I would like to get the following result:</p>
<pre><code>/my/prefix/
  bin/
    script.sh
  libexec/
    one.py
    two.py
    ...
  lib/pythonX.Y/site-packages/
    package/...
</code></pre>
<p>My initial project is following:</p>
<pre><code>/
  script.sh
  one.py
  two.py
  ...
  setup.py
  package/...
    __init__.py
    ...
</code></pre>
<p>What would be the best way to achieve that? I would like to be able to install it later with something like:</p>
<pre><code>python setup.py install --prefix=/my/prefix
</code></pre>
<p>I can get "package" nicely installed in the correct directory as lib/pythonX.Y/site-packages under --prefix is the default location. But is there a clean way to get script.sh into "bin" and other python files into "libexec"? The only way I see to achieve that would be to manually copy those files in my setup.py script. May-be there is a cleaner and more standard way to do that?</p>
<p>(edit)</p>
<p><strong>Solution</strong></p>
<p>I ended up with setup.py like that:</p>
<pre><code>setup(name='mylib',
  scripts=['script.sh'],
  data_files=[('libexec', ['one.py', 'two.py'])]
)
</code></pre>
<p>Of course, you could iterate over all python files for libexec, but I only have 2-3 python files I need there.</p>
<p>(edit2)</p>
<p>Additionally, I can have setup.cfg with the following:</p>
<pre><code>[install]
prefix=/my/prefix
</code></pre>
<p>and instead of <code>python setup.py install --prefix=/my/prefix</code> I can just do:</p>
<pre><code>python setup.py install
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The scripts are handled by use of the <code>scripts</code> parameter to the setup function. For libexec you can treat them as data files and use a data options.</p>
<pre><code>setup(...
    scripts=glob("bin/*"),
    data_files=[(os.path.join(sys.prefix, 'libexec', 'mypackage'), glob("libexec/*"))],
    ...
)
</code></pre>
<p>I'm not sure how that would work with a <code>--prefix</code> option, I've never tried that. </p>
</div>
<span class="comment-copy">There's some useful docs on this here: <a href="https://docs.python.org/2/install/index.html#alternate-installation-unix-the-prefix-scheme" rel="nofollow noreferrer">docs.python.org/2/install/â€¦</a> and here <a href="https://docs.python.org/3/distutils/introduction.html" rel="nofollow noreferrer">docs.python.org/3/distutils/introduction.html</a></span>
<span class="comment-copy">Thanks! data_files did it for me. Another question, can I have a default "prefix"? If the user doesn't specify one, I would like to use my own (instead of the python default).</span>
<span class="comment-copy">You can make option defaults in the setup.cfg file. It's in .ini style option file with sections and name-value pairs. Command line options directly translate to options there (remove <code>--</code>, etc).</span>
<span class="comment-copy">works like a charm, thanks!</span>
