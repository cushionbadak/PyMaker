<div class="post-text" itemprop="text">
<pre><code>import time
t = time.ctime()
</code></pre>
<p>For me at the moment, <code>t</code> is <code>'Sat Apr 21 11:58:02 2012'</code>. I have more data like this.</p>
<p><strong>My question is:</strong> </p>
<ul>
<li>How to convert <code>t</code> to <code>datetime</code> in Python? Are there any modules to to it?</li>
</ul>
<p>I tried to make a time <code>dict</code> and then convert <code>t</code>, but feel like thatâ€™s not the best way to do it in Python. </p>
<p><strong>Details:</strong> </p>
<ul>
<li>I have a <code>ctime</code> list (like <code>['Sat Apr 21 11:56:48 2012', 'Sat Apr 21 11:56:48 2012']</code>). </li>
<li>I want to convert the contents to <code>datetime</code>, then store that in a <code>db</code> with <code>timestamp</code>.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You should use <a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer"><code>strptime</code></a>: this function parses a string representing a time according to a format. The return value is a <a href="https://docs.python.org/3/library/time.html#time.struct_time" rel="nofollow noreferrer">struct_time</a>.</p>
<p>The <a href="https://docs.python.org/3/library/time.html#time.strptime" rel="nofollow noreferrer">format parameter defaults to <code>%a %b %d %H:%M:%S %Y</code></a> which matches the formatting returned by ctime().</p>
<p>So in your case just try the following line, since the default format is the one from ctime:</p>
<pre class="lang-py prettyprint-override"><code>import datetime
import time

datetime.datetime.strptime(time.ctime(), "%a %b %d %H:%M:%S %Y")
</code></pre>
<p>Returns: <code>datetime.datetime(2012, 4, 21, 4, 22, 00)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Try <code>datetime.strptime()</code>.</p>
<p><strong>See:</strong> <a href="http://docs.python.org/library/datetime.html#datetime.datetime.strptime" rel="nofollow">http://docs.python.org/library/datetime.html#datetime.datetime.strptime</a></p>
</div>
<div class="post-text" itemprop="text">
<h1>The Short. No.</h1>
<blockquote>
<p><a href="https://docs.python.org/3/library/time.html#time.ctime" rel="nofollow noreferrer">Locale information is not used by ctime().</a></p>
<p>Note: When using <code>time.ctime()</code> &amp; <code>datetime.fromtimestamp()</code> you might run into a historical issue when converting local timezones too. as stated in the comments of these answers <a href="https://stackoverflow.com/a/3682808/1896134">here</a> and <a href="https://stackoverflow.com/a/3683166/1896134">here</a></p>
</blockquote>
<h1>The Long.</h1>
<p>Alternatively, If you need a "Date &amp; Time" that you can format there are many ways using <a href="https://stackoverflow.com/a/3682808/1896134"><code>datetime</code></a>, <a href="https://stackoverflow.com/a/12400584/1896134">time.strftime</a>, also, even using python <a href="https://stackoverflow.com/a/3683166/1896134"><code>pandas</code></a>, and here <a href="https://stackoverflow.com/a/37188257/1896134">posix_time</a>, and lastly as mention on the other answers here <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>datetime.strptime</code></a>.</p>
<h2>Known Date Differences</h2>
<p>If you are not worried about <a href="http://unicode.org/repos/cldr/trunk/common/supplemental/windowsZones.xml" rel="nofollow noreferrer">timezones</a> or the <a href="https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar#Difference_between_Julian_and_proleptic_Gregorian_calendar_dates" rel="nofollow noreferrer">Julian Calendar</a>, <a href="https://www.python.org/dev/peps/pep-0431/#ambiguous-times" rel="nofollow noreferrer">Ambiguous Times</a> or <a href="http://pytz.sourceforge.net/#problems-with-localtime" rel="nofollow noreferrer">converting to localtime</a> using <a href="http://unixtimestamp.50x.eu/about.php" rel="nofollow noreferrer">UNIXTIMESTAMP</a>, looking to use EPOCH Time, be sure to specify <a href="https://en.wikipedia.org/wiki/Epoch_(reference_date)#Notable_epoch_dates_in_computing" rel="nofollow noreferrer">Notable epoch dates in computing</a> and this for <a href="https://en.wikipedia.org/wiki/Unix_time" rel="nofollow noreferrer">unix</a> </p>
<blockquote>
<p>Which <a href="https://stackoverflow.com/q/12400256/1896134">I thank Matt on this thread</a> for the </p>
<blockquote>
<p>"Please stop calling it "epoch time" when you mean Unix Time".......</p>
</blockquote>
</blockquote>
<h2>My usage</h2>
<p>Now as crazy as all that was, its not that bad.  I have worked with many companies before, and this usually never comes up in the work place, as it usually has been dealt with.</p>
<p>So, aside from all that...This is My Personal Favorite:</p>
<p>I use this for my own stuff: <a href="https://docs.python.org/3/library/time.html#time.strftime" rel="nofollow noreferrer">time.strftime</a> </p>
<pre class="lang-py prettyprint-override"><code>from time import strftime

print(strftime('%Y%m%d_%H%M%S'))
</code></pre>
<p>Which I Return: <strong>Year, Month, Day, _, Hour, Minute, Second</strong></p>
<pre><code>20180827_021106
</code></pre>
<p>Which I use in a function:</p>
<pre class="lang-py prettyprint-override"><code>def _now():
    """The Module Reports A Formatted Time."""
    ymd = (strftime('%Y%m%d_%H%M%S'))
    return ymd
</code></pre>
<p>Just something simple that keeps my logs in order.</p>
</div>
<span class="comment-copy">Why not just do <code>from datetime import datetime</code> <code>datetime.now()</code></span>
<span class="comment-copy">exactly, i have a string: 'Sat Apr 21 11:58:02 2012', and i want to convert it to datetime.</span>
<span class="comment-copy">Converting from strings like that is less than ideal, but this question gets that answer.</span>
<span class="comment-copy">I try that way for hours, but still can't convert  'Sat Apr 21 11:58:02 2012' to datetime correctly.</span>
<span class="comment-copy">@flreey just fixed it, this should work fine now.</span>
<span class="comment-copy">thank you, it's my fault, I put the wrong parameters.datetime.strptime(time.ctime(), '%a %b %d %H:%M:%S %Y') works</span>
<span class="comment-copy">sorry, i don't know how to close my question? may be you can tell me?</span>
<span class="comment-copy">@flreey to the left of each answer to your question, there is a little "V" sign that you can click. When your problem is solved, you usually click on it so other can see the good answer, and you gain a couple reputation points, and the answer that is accepted as well. It is just under the number of votes to the left of each answer. You should do it on all your questions.</span>
<span class="comment-copy">i've try strptime, but it can't work correctly. So i ask question here</span>
<span class="comment-copy">What do you mean it can't work correctly?</span>
<span class="comment-copy">I mean i can't convert  'Sat Apr 21 11:58:02 2012' to datetime using that method.</span>
<span class="comment-copy">Perhaps try showing us your code where you're attempting to use datetime.strptime(), and show us the incorrect output that your code gives.</span>
<span class="comment-copy">thanks, I using the methond incorrect. datetime.strptime(time.ctime(), '%a %b %d %H:%M:%S %Y') work</span>
