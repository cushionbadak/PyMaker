<div class="post-text" itemprop="text">
<p>What is the best way to parse data out of a URL query string (for instance, data appended to the URL by a form) in python?  My goal is to accept form data and display it on the same page.  I've researched several methods that aren't quite what I'm looking for. </p>
<p>I'm creating a simple web server with the goal of learning about sockets.  This web server won't be used for anything but testing purposes.</p>
<pre><code>GET /?1pm=sample&amp;2pm=&amp;3pm=&amp;4pm=&amp;5pm= HTTP/1.1
Host: localhost:50000
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:11.0) Gecko/20100101 Firefox/11.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Referer: http://localhost:50000/?1pm=sample&amp;2pm=&amp;3pm=&amp;4pm=&amp;5pm=
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The urllib.parse module is your friend: <a href="https://docs.python.org/3/library/urllib.parse.html" rel="noreferrer">https://docs.python.org/3/library/urllib.parse.html</a></p>
<p>Check out <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="noreferrer">urllib.parse.parse_qs</a> (parsing a query-string, i.e. form data sent to server by GET or form data posted by POST, at least for non-multipart data). There's also <a href="http://docs.python.org/library/cgi.html" rel="noreferrer">cgi.FieldStorage</a> for interpreting multipart-data.</p>
<p>For parsing the rest of an HTTP interaction, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616.html" rel="noreferrer">RFC2616</a>, which is the HTTP/1.1 protocol specification.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is an example using python3 <code>urllib.parse</code>:</p>
<pre><code>from urllib.parse import urlparse, parse_qs
URL='https://someurl.com/with/query_string?i=main&amp;mode=front&amp;sid=12ab&amp;enc=+Hello'
parsed_url = urlparse(URL)
parse_qs(parsed_url.query)
</code></pre>
<p>output:</p>
<pre><code>{'i': ['main'], 'enc': [' Hello '], 'mode': ['front'], 'sid': ['12ab']}
</code></pre>
<p>Note for python2: <code>from urlparse import urlparse, parse_qs</code></p>
<p>SEE: <a href="https://pythonhosted.org/six/#module-six.moves.urllib.parse" rel="nofollow noreferrer">https://pythonhosted.org/six/#module-six.moves.urllib.parse</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you need unique key from query string, use <code>dict()</code> with <code>parse_qsl()</code></p>
<pre><code>import urllib.parse
urllib.parse.urlparse('https://someurl.com/with/query_string?a=1&amp;b=2&amp;b=3').query
    a=1&amp;b=2&amp;b=3
urllib.parse.parse_qs('a=1&amp;b=2&amp;b=3');
    {'a': ['1'], 'b': ['2','3']}
urllib.parse.parse_qsl('a=1&amp;b=2&amp;b=3')
    [('a', '1'), ('b', '2'), ('b', '3')]
dict(urllib.parse.parse_qsl('a=1&amp;b=2&amp;b=3'))
    {'a': '1', 'b': '3'}
</code></pre>
</div>
<span class="comment-copy">Are you looking to write the parsing from scratch, or what?</span>
<span class="comment-copy">What's wrong with <a href="http://stackoverflow.com/questions/1349367/parse-an-http-request-authorization-header-with-python" title="parse an http request authorization header with python">stackoverflow.com/questions/1349367/…</a> or <a href="http://stackoverflow.com/questions/4685217/parse-raw-http-headers" title="parse raw http headers">stackoverflow.com/questions/4685217/parse-raw-http-headers</a>.  You haven't given us enough info about what other approaches are lacking.  Do you have an example header or two?</span>
<span class="comment-copy">Nothing is 'wrong' with either of these posts.  Based on the programming experiences I've head in the past, I'm inclined to do something similar like a regex expression in the second link.  However, I wanted to ask and see if there is a simpler way to do it since this is my first python program.</span>
<span class="comment-copy">Looks to me like you're talking about URL query strings, not HTTP headers. You might want to update your question to reflect this.</span>
<span class="comment-copy">Thanks I think I will.</span>
<span class="comment-copy">This is good, but nothing like a complete solution.</span>
<span class="comment-copy">I'm not writing the script for him. He specifically asked how to parse query data, at least that's what I read between the lines, even though those are not actually HTTP headers. But I didn't bother commenting on that.</span>
<span class="comment-copy">I'm not suggesting that you should write the script for him, but urlparse is only a tiny piece of this puzzle.</span>
<span class="comment-copy">For the amount of information he gave, that's all there is to say. Specifically, if you're actually referring to HTTP headers: is he using a webserver which actually allows you to get HTTP headers uninterpreted (via some stream)? Is he using WSGI (where HTTP-headers are interpreted by the framework)? Plain-old CGI, where you have to interpret the environment and hope for the best? Whatever.</span>
<span class="comment-copy">urlparse looks like a great resource.  The header is pretty simple and I've added it to the original question.  As I'm sure you can guess, my initial idea is to parse the get line into an array of strings.</span>
<span class="comment-copy">And why are the values like this <code>['value']</code> ? <code>dic['enc']</code> gets <code>['Hello']</code>  - how to get 'Hello'? with split?</span>
<span class="comment-copy">@Suisse see <a href="https://stackoverflow.com/questions/11447391/ajax-why-jquery-replaces-with-a-space" title="ajax why jquery replaces with a space">stackoverflow.com/questions/11447391/…</a> the values are in a list because multiple values can be encoded see : <a href="https://stackoverflow.com/questions/2571145/urlencode-an-array-of-values" title="urlencode an array of values">stackoverflow.com/questions/2571145/…</a> hope it helps</span>
