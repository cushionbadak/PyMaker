<div class="post-text" itemprop="text">
<p>I have tried every online formatter, I could find and every which way to indent but I continuously am getting an error on <code>from data.find_pending_records</code>. Here is my code:</p>
<pre><code>"""Start Point"""

from data.find_pending_records
import FindPendingRecords
from vital.vital_entry
import VitalEntry

if __name__ == "__main__":
    try:
        # Instantiates FindPendingRecords then gets records to process
        for PENDING_RECORDS = FindPendingRecords().get_excel_data()

    # Reads excel to map data from excel to vital
    MAP_DATA = FindPendingRecords().get_mapping_data()

    # Configures Driver
    for vital
    VITAL_ENTRY = VitalEntry()

    # Start chrome and navigate to vital website
    VITAL_ENTRY.instantiate_chrome()

    # Begin processing Records
    VITAL_ENTRY.process_records(PENDING_RECORDS, MAP_DATA)

    print(PENDING_RECORDS)
    print("All done")
except Exception as exc:
    print(exc)  
</code></pre>
<p>The error in the Anaconda prompt isn't very informative. It's just giving:</p>
<pre><code>SyntaxError: invalid syntax

(base) C:\Python&gt;python main.py
  File "main.py", line 4
    from data.find_pending_records
</code></pre>
<p>Also, in Visual Studio Code it's just a red squiggly line under the same <code>from</code>, no details either.</p>
<p>Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>import</code> needs to go on the same line as the <code>from</code>:</p>
<pre><code>from data.find_pending_records import FindPendingRecords
from vital.vital_entry import VitalEntry
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Indicating that the line is not terminated you could use <code>\</code></p>
<pre><code>from data.find_pending_records \
import FindPendingRecords
</code></pre>
<p>You could also indent to make it more readable</p>
<pre><code>from data.find_pending_records \
    import FindPendingRecords
</code></pre>
</div>
<span class="comment-copy">what actually is  <code>data</code></span>
<span class="comment-copy">The <code>import</code> statement is expected in the same line I believe</span>
<span class="comment-copy">Yes, this also works. The point is that the <code>from</code> part can't stand on its own without a corresponding <code>import</code> part. In my opinion this version is harder to read and less clear than the one line version, but it's valid.</span>
<span class="comment-copy">At the very least the second line should be indented to make it clear that itâ€™s a continuation of the previous line.</span>
<span class="comment-copy">@Chris Everything has pros and cons. If you have limited number of imports then I will prefer your method as it is readable and crisp. But, if you have lets say 100 imports from a single module then it will be a mess while trying to write everything in a single line. What you could do is indent the lines following the <code>from</code> statement. Will update the answer</span>
<span class="comment-copy">If you have 100 imports from a single module a common idiom is to put the first import on the same line as the <code>from</code> and wrap the list of imports in parentheses. I don't see a good reason to breaking after <code>from</code>, this idiom doesn't appear in the official style guide, and it forces you to add extra syntax just to be valid. IMO it's not a good choice for many reasons but, as I said before, it's valid. I did upvote this answer, for what it's worth. I just don't recommend using it.</span>
<span class="comment-copy">Note that one statement giving 100 imports from a single module would have only one <code>import</code>. It makes a lot more sense to keep the single <code>import</code> with the single <code>from</code> rather than with the n-ary list of imported names. (I.e., what would the next line look like if you're importing two things from <code>data.find_printing_records</code>?)</span>
