<div class="post-text" itemprop="text">
<p>I've started learning F#, and one thing I've run into is I don't know any way to express the equivalent of the <code>range</code> function in Python. I know <code>[1..12]</code> is the equivalent of range(1,13). But what I want to be able to do is <code>range(3, 20, 2)</code> (I know Haskell has <code>[3,5..19]</code>). How can I express this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>seq { 3 .. 2 .. 20 }
</code></pre>
<p>results in</p>
<pre><code>3 5 7 9 11 13 15 17 19
</code></pre>
<p><a href="https://msdn.microsoft.com/en-us/library/dd233209.aspx" rel="noreferrer">https://msdn.microsoft.com/en-us/library/dd233209.aspx</a></p>
</div>
<div class="post-text" itemprop="text">
<p>While the F# <a href="https://msdn.microsoft.com/en-us/library/dd233209.aspx" rel="nofollow">sequence expression</a> <code>seq { 3 .. 2 .. 20 }</code> is comparable in functionality if you have ever converted Python to F# you will find that the  </p>
<ul>
<li>Python 2 <a href="https://docs.python.org/2/library/functions.html#range" rel="nofollow">range</a> method returns a Python <a href="https://docs.python.org/2/tutorial/datastructures.html" rel="nofollow">list</a> which is mutable.   </li>
<li>Python 3 <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow">range</a> method returns a Python <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-range" rel="nofollow">range type</a> which represents an immutable sequence of numbers.   </li>
<li>F# sequence expression returns an <code>IEnumerable&lt;T&gt;</code> which is immutable.</li>
</ul>
<p>The better way to interpret a Python range with regards to F# is to look at how it is often used. As the Python 2 documentation states</p>
<blockquote>
<p>It is most often used in for loops. </p>
</blockquote>
<p>and the Python 3 documentation states</p>
<blockquote>
<p>is commonly used for looping a specific number of times in for loops.</p>
</blockquote>
<p>and the Python 2 <a href="https://wiki.python.org/moin/ForLoop" rel="nofollow">for</a> </p>
<pre><code>for x in range(0, 3):
    print "We're on time %d" % (x)
</code></pre>
<p>and the Python 3 <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow">for</a></p>
<pre><code>for i in range(5):
...     print(i)
</code></pre>
<p>The closest F# is <a href="https://msdn.microsoft.com/en-us/library/dd233227.aspx" rel="nofollow">for in</a>:</p>
<pre><code>for i in 10 .. -1 .. 1 do
    printf "%d " i
</code></pre>
</div>
<span class="comment-copy"><a href="https://www.google.com/search?q=f%23+range+with+step" rel="nofollow noreferrer">Google</a> seems to <a href="https://msdn.microsoft.com/en-us/library/dd233227.aspx" rel="nofollow noreferrer">indicate</a> that it's <code>3..2..20</code>. I'm not an F# guy, so I'm not sure.</span>
<span class="comment-copy">@GuyCoder <code>range</code> returns a list in Python 2.x; in Python 3 it returns a <code>range</code> object,</span>
<span class="comment-copy">Ranges are immutable in Python 3.</span>
<span class="comment-copy">@JaredGoguen Thanks. I updated my answer.</span>
<span class="comment-copy">As a second hint, in Python 2 <code>xrange</code> is the preferred efficient <code>range</code> object that has the same immutable qualities. The fact that it's preferred, but not obvious, was presumably a drive for the Python 3.X implementation. There were a lot of other similar changes the <code>map</code> function returning a <code>map</code> object would be a great example. Also, <code>reduce</code> was moved back to the <code>functools</code> standard library package.</span>
<span class="comment-copy">What would you do in F# if you wanted a different step size? Equivalent to Python Range(0,10,2) as an example</span>
<span class="comment-copy">@Nulle That is answered in both answers; e.g. <code>seq { 3 .. 2 .. 20 }</code> or <code>for i in 10 .. -1 .. 1 do</code></span>
