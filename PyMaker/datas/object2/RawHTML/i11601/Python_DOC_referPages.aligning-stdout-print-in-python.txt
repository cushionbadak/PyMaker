<div class="post-text" itemprop="text">
<p>I have the following program that uses a deque that I copied from the web.</p>
<pre><code>from collections import Counter,deque
import re
import time
import my_ds

num = 100000

def append(c):
    for i in range(num):
        c.append(i)

def appendleft(c):
    if isinstance(c, deque):
        for i in range(num):
            c.appendleft(i)
    else:
        for i in range(num):
            c.insert(0,i)

def pop(c):
    for i in range(num):
        c.pop()

def popleft(c):
    if isinstance(c,deque):
        for i in range(num):
            c.popleft()
    else:
        for i in range(num):
            c.pop(0)


for container in [deque, list]:
    for operation in [append, appendleft, pop, popleft]:
        c = container(range(num))
        start = time.time()
        operation(c)
        elapsed = time.time() - start
        print('Completed {0}/{1}       in {2} seconds: {3} ops/sec'.format(container.__name__,operation.__name__, elapsed, num/elapsed))
</code></pre>
<p>The output looks like below.</p>
<pre><code>Completed deque/append       in 0.011004447937011719 seconds: 9087234.595718866 ops/sec
Completed deque/appendleft       in 0.00800323486328125 seconds: 12494947.56911344 ops/sec
Completed deque/pop       in 0.00800323486328125 seconds: 12494947.56911344 ops/sec
Completed deque/popleft       in 0.009003400802612305 seconds: 11106914.175250906 ops/sec
Completed list/append       in 0.011004447937011719 seconds: 9087234.595718866 ops/sec
Completed list/appendleft       in 8.727489709854126 seconds: 11458.048456601553 ops/sec
Completed list/pop       in 0.01900768280029297 seconds: 5261030.555416185 ops/sec
Completed list/popleft       in 1.781712532043457 seconds: 56125.776858800775 ops/sec
</code></pre>
<p>I am looking for a nice way to align the numbers <code>seconds</code> and <code>ops/second</code>.How is this done in python</p>
</div>
<div class="post-text" itemprop="text">
<p>If you need it in more places than just this one, you could also use the <a href="https://pypi.python.org/pypi/tabulate" rel="nofollow">tabulate</a> module which will format it nicely for you and doesn't require guessing the lengths upfront.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to align <code>Completed deque/append</code> part as well for the rest of columns to be aligned. Try this:</p>
<pre><code>print('Completed {0}/{1:&lt;11} in {2:&lt;20} seconds: {3:&lt;18} ops/sec'.format(container.__name__,operation.__name__, elapsed, num/elapsed))

Completed deque/append      in 0.009192228317260742 seconds: 10878755.025288548 ops/sec
Completed deque/appendleft  in 0.008057117462158203 seconds: 12411386.636681067 ops/sec
Completed deque/pop         in 0.009001970291137695 seconds: 11108679.18531663  ops/sec
Completed deque/popleft     in 0.008355855941772461 seconds: 11967654.863469055 ops/sec
Completed  list/append      in 0.009819984436035156 seconds: 10183315.528794795 ops/sec
Completed  list/appendleft  in 5.856244802474976    seconds: 17075.78890106128  ops/sec
Completed  list/pop         in 0.012813091278076172 seconds: 7804517.8817312345 ops/sec
Completed  list/popleft     in 1.437035083770752    seconds: 69587.72345181856  ops/sec
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the &lt; and &gt; alignment operators of the format() string method. Look at the documentation here:</p>
<p><a href="https://docs.python.org/3.5/library/string.html#format-string-syntax" rel="nofollow">https://docs.python.org/3.5/library/string.html#format-string-syntax</a></p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; a='deque'
&gt;&gt;&gt; b='append'
&gt;&gt;&gt; c=0.000102301230102
&gt;&gt;&gt; d=0.1242344213
&gt;&gt;&gt; print('Completed {0}/{1}       in {2:&lt;15} seconds: {3:&lt;15} ops/sec'.format(a, b, c, d))
Completed deque/append       in 0.000102301230102 seconds: 0.1242344213    ops/sec
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals" rel="nofollow noreferrer">f-strings</a> with format spec. Basically It's just like str.format. For example, you can use</p>
<pre><code>a = 2
f'length:{a:&lt;5}cm'
</code></pre>
<p>and it will output</p>
<pre><code>length:2    cm
</code></pre>
<p>but the point is you can set the alignment length programmatically like this</p>
<pre><code>a = 2
f'length:{a:&lt;{a+3}}cm'
</code></pre>
<p>and I get result</p>
<pre><code>length:2    cm
</code></pre>
<p>f-string is new in Python 3.6 and I'm using Python 3.7.1</p>
<p><a href="https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals" rel="nofollow noreferrer">https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals</a></p>
</div>
<span class="comment-copy">I tried this approach. But I am getting an error - `Type Error: 'float' object is not iterable.</span>
<span class="comment-copy">@liv2hak You'd have to post the actual code you're using.</span>
<span class="comment-copy">Thanks :) Please see <a href="http://stackoverflow.com/questions/36878944/tabulate-package-typeerror-float-object-is-not-iterable" title="tabulate package typeerror float object is not iterable">stackoverflow.com/questions/36878944/â€¦</a></span>
<span class="comment-copy">that's not going to work for aligning several lines</span>
