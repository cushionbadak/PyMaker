<div class="post-text" itemprop="text">
<p>Is there a way to discover the potential keyword arguments for a function in python from the command line? without looking at the source or docs. Sometimes the source is to c lib even that isn't visible</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>inspect</code> module. In 3.3+, this is easy by using <a href="https://docs.python.org/3/library/inspect.html#inspect.signature" rel="nofollow"><code>inspect.signature</code></a></p>
<pre><code>import inspect

def foo(bar=None, baz=None):
    pass

&gt;&gt;&gt; print(inspect.signature(foo))
(bar=None, baz=None)
</code></pre>
<p>Immediately underneath the linked doc is an <a href="https://docs.python.org/3/library/inspect.html#inspect.Parameter" rel="nofollow">example</a> that pulls out only the names of the keyword-only arguments, which may be worth reading too!</p>
<p>Of course if you're looking to deep inspect the source code to try and find anything that is pulled out of a <code>**kwargs</code> argument, you're probably out of luck. Something like:</p>
<pre><code>def foo(**kwargs):
    if kwargs.get("isawesome"):
        print("Dang you're awesome")

&gt;&gt;&gt; some_magic(foo)
isawesome
</code></pre>
<p>is probably going to be hard to find.</p>
</div>
<span class="comment-copy"><code>help(whatever_function)</code>?</span>
<span class="comment-copy">By definition every possible key value pair is a potential keyword argument if you use kwargs</span>
<span class="comment-copy">Note also that this won't work for all builtin functions written in C, which don't usually have named arguments at all: E.g., try <code>inspect.signature(sum)</code> and you'll get an error.</span>
<span class="comment-copy">A good point! I don't know if there's any way to inspect the signature of a function that's not written in Python.</span>
