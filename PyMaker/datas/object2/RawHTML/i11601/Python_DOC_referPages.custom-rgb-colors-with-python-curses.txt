<div class="post-text" itemprop="text">
<p>I'm writing a program in Python using the <code>curses</code> module in the standard library.</p>
<p>I want my program to just exit if it can't use custom colors I specify with RGB triples.</p>
<p>So I have some starter code that looks like:</p>
<pre><code>import curses

def main(stdscr):
  if not curses.can_change_color():
    raise Exception('Cannot change color')

  curses.init_color(curses.COLOR_BLACK, 999,   0,   0)
  curses.init_pair(1, curses.COLOR_BLACK, curses.COLOR_WHITE)
  curses.init_pair(2, curses.COLOR_WHITE, curses.COLOR_BLACK)
  stdscr.addstr('hello', curses.color_pair(1))
  stdscr.addstr(' world', curses.color_pair(2))
  stdscr.getch()

curses.wrapper(main)
</code></pre>
<p>And the result I get is:</p>
<p><a href="https://i.stack.imgur.com/hs7xY.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/hs7xY.png"/></a></p>
<p>I expected the black to be replaced by red.</p>
<p>Am I misunderstanding the <a href="https://docs.python.org/3/library/curses.html#curses.init_color" rel="nofollow noreferrer">docs</a>? How can I get <code>curses</code> to respect custom RGB colors I want to use? Or at least fail and tell me that the terminal doesn't support it?</p>
<p>The docs for curses <a href="http://linux.die.net/man/3/init_color" rel="nofollow noreferrer">here</a> seem to suggest that on failure it will return an error, and the CPython source seems to <a href="https://github.com/python/cpython/blob/2d264235f6e066611b412f7c2e1603866e0f7f1b/Modules/_cursesmodule.c" rel="nofollow noreferrer">propagate curses errors</a> pretty faithfully.</p>
<p>In case it is relevant, I'm on OS X 10.11, and I'm testing on Python3 I installed with Homebrew. But I get the same effect with OS X's builtin Python interpreter as well.</p>
<p>EDIT:</p>
<p>Slightly modified sample code to display color content:</p>
<pre><code>import curses

def main(stdscr):
  if not curses.can_change_color():
    raise Exception('Cannot change color')

  stdscr.addstr(1, 0, repr(curses.color_content(curses.COLOR_BLACK)))
  curses.init_color(curses.COLOR_BLACK, 999,   0,   0)
  curses.init_pair(1, curses.COLOR_BLACK, curses.COLOR_WHITE)
  curses.init_pair(2, curses.COLOR_WHITE, curses.COLOR_BLACK)
  stdscr.addstr(0, 0, 'hello', curses.color_pair(1))
  stdscr.addstr(' world', curses.color_pair(2))
  stdscr.addstr(2, 0, repr(curses.color_content(curses.COLOR_BLACK)))
  stdscr.getch()

curses.wrapper(main)
</code></pre>
<p>The result this time is:
<a href="https://i.stack.imgur.com/zNSJi.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/zNSJi.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>The screenshot may be of Terminal.app; in a quick check it does not honor the escape sequences used for changing color.  On the other hand, iTerm2 does use those escape sequences.</p>
<p>If you're using Terminal.app, setting <code>TERM</code> to xterm-256color is pointless, due to the large number of differences versus xterm.  There's <a href="http://invisible-island.net/ncurses/terminfo.src.html#toc-_Apple__Terminal_app" rel="nofollow">discussion</a> in the terminal database as commentary that you may find something interesting.</p>
</div>
<span class="comment-copy">Can you check a before/after with <a href="https://docs.python.org/3/library/curses.html#curses.color_content" rel="nofollow noreferrer"><code>curses.color_content</code></a>?</span>
<span class="comment-copy">@RadLexus The color content seems to be updated, it's set to (0, 0, 0) before, and when checked again is set to (999, 0, 0)</span>
<span class="comment-copy">Isn't <code>curses</code> supposed to only support, like, 16 basic colors like terminals did when it was designed?</span>
<span class="comment-copy">@ivan_pozdeev: <code>curses</code> is just a wrapper around ncurses these days, which is much more capable.</span>
<span class="comment-copy">@ivan_pozdeev Im using the default one that comes installed when you install Python on a Mac. The source for it lives in the CPython repo. Not sure if every standard lib module comes by default in Linux distros tho</span>
<span class="comment-copy">I'm outside at the moment so will test it when I get back, but if I remember the docs right, I think wrapper calls start_color if it is supported in the current env</span>
