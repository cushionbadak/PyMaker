<div class="post-text" itemprop="text">
<p>I am currently going through Ryan Mitchell's Web Scraping with Python. In the first chapter, when he talks about handling errors, he says :</p>
<blockquote>
<p>If the server is not found at all (if say, site was down, or the URL
  was mistyped), <code>urlopen</code> returns a <code>None</code> object.</p>
</blockquote>
<p>So to test this, I created the following snippet. </p>
<pre><code>from urllib.request import urlopen
from urllib.error import HTTPError
from bs4 import BeautifulSoup as bs

def getTitle(url):

    try:
        html = urlopen(url).read()
    except HTTPError:
        return None

    try:
        bsObj = bs(html)
    except AttributeError:
        return None
    return bsObj

title = getTitle('http://www.wunderlst.com')
print(title)
</code></pre>
<p>In the second last line of this code, I have intentionally mistyped the URL name (actual URL is <code>http://www.wunderlist.com</code>). I hoped that now I would get <code>None</code> printed on my screen. However, I get a long list of errors. Below I am giving a last part of the error message:</p>
<pre><code>During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "ex4.py", line 18, in &lt;module&gt;
    title = getTitle('http://www.wunderlst.com')
  File "ex4.py", line 8, in getTitle
    html = urlopen(url).read()
  File "/usr/lib/python3.4/urllib/request.py", line 161, in urlopen
    return opener.open(url, data, timeout)
  File "/usr/lib/python3.4/urllib/request.py", line 463, in open
    response = self._open(req, data)
  File "/usr/lib/python3.4/urllib/request.py", line 481, in _open
    '_open', req)
  File "/usr/lib/python3.4/urllib/request.py", line 441, in _call_chain
    result = func(*args)
  File "/usr/lib/python3.4/urllib/request.py", line 1210, in http_open
    return self.do_open(http.client.HTTPConnection, req)
  File "/usr/lib/python3.4/urllib/request.py", line 1184, in do_open
    raise URLError(err)
urllib.error.URLError: &lt;urlopen error [Errno -2] Name or service not known&gt;
</code></pre>
<p>Now, if I correct the URL name, but write some nonexistent page in front of the website, for example:</p>
<pre><code>title = getTitle('http://www.wunderlist.com/something')
</code></pre>
<p>Then I get <code>None</code> printed on the screen. I am really confused about this. Can anybody kindly explain me what is actually happening? Thanks in advance. </p>
</div>
<div class="post-text" itemprop="text">
<p>I think the problem is you're catching only <code>HTTPError</code> (and returning None). Try to also treat/catch the <code>URLError</code> exception.</p>
<p>Replace<br/>
<code>from urllib.error import HTTPError</code><br/>
with<br/>
<code>from urllib.error import HTTPError, URLError</code>.</p>
<p>Replace<br/>
<code>except HTTPError:</code><br/>
with<br/>
<code>except (HTTPError, URLError):</code></p>
<p>This will give you the behavior that you wanted (returning <code>None</code> in both cases).
But I would suggest treating these errors separately (move the first <code>try</code> block to another method, stop scraping on error, etc).</p>
</div>
<div class="post-text" itemprop="text">
<p>Often, URLError is raised because there is no network connection (no route to the specified server), or the specified server doesnâ€™t exist.</p>
<p>'<a href="http://www.wunderlst.com" rel="nofollow">http://www.wunderlst.com</a>' is not exist thats why error raise.</p>
<p>check the following link to get more details.</p>
<p><a href="https://docs.python.org/3.1/howto/urllib2.html#handling-exceptions" rel="nofollow">https://docs.python.org/3.1/howto/urllib2.html#handling-exceptions</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The book/article you're referring to is either wrong or out of date. In the <a href="https://docs.python.org/2/library/urllib.html" rel="nofollow">urllib documentation</a> you can read</p>
<blockquote>
<p>If the connection cannot be made the IOError exception is raised.</p>
</blockquote>
<p>If the host name can't be resolved, obviously no connection can be made so an <code>IOError</code> has to be raised according to documentation. <code>URLError</code> is a subclass of <code>IOError</code> in older Pythons, newer versions of urllib don't seem to have the <code>urlopen</code> function from what I can tell from a cursory glance.</p>
<hr/>
<p>As mentioned in the comments, I got the library wrong (urllib instead of urllib.request); You'll find a similar line saying</p>
<blockquote>
<p>Raises URLError on errors.</p>
</blockquote>
<p>In there though. Presumably a HTTP error like a 404 isn't considered an error for urlopen, which would be why it doesn't raise an exception if the path is wrong, but does throw an error if the host name can't be resolved.</p>
</div>
<span class="comment-copy">This is useful. I don't understand why the book doesn't mention <code>URLError</code>.</span>
<span class="comment-copy">This is clearly Python 3, from the imports and the traceback; as <a href="https://docs.python.org/3/library/urllib.error.html#urllib.error.URLError" rel="nofollow noreferrer">the docs</a> state, urllib.request.urlopen raises URLError, which is what is shown in the error message.</span>
<span class="comment-copy">@Cubic : I think you are referring to Python2 documentation. I am not sure whether what you say answers my question.</span>
<span class="comment-copy">@SnehalShekatkar Python3 documentation is similar, but less detailed about when it throws an exception. Updated with that.</span>
<span class="comment-copy">Sure. But then does that mean that what my book is telling me is wrong?</span>
