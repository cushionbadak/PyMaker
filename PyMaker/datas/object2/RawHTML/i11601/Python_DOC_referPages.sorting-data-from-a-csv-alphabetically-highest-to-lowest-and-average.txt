<div class="post-text" itemprop="text">
<p>This is the next step in my <a href="https://stackoverflow.com/questions/36957360/replacing-specific-data-in-a-csv-file">currently unresolved question</a> in which I am attempting to sort the scores from 3 different teams. I have very limited knowledge of python because I am new to programming so my problem solving of this current project is quite difficult. </p>
<p>To begin I will need the example data (shown below) which are split over two cells to be sorted alphabetically according to the names, I will have this for 3 different teams in 3 different files. I am also trying to sort it out from highest to lowest depending on the score, this has proven of much difficulty to me so far. </p>
<pre><code>Jake,5
Jake,3
Jake,7
Jeff,6
Jeff,4
Fred,5
</code></pre>
<p>The third and final way to sort I am trying to do is by average. For this I had attempted to make it so if the user had there name 2 or 3 times (as the program will store the last 3 scores for each user, this is a <a href="https://stackoverflow.com/questions/36957360/replacing-specific-data-in-a-csv-file">currently unresolved</a> problem) then it would add their scores then divide by how many of them it had there. Unfortunately this was very difficult for me and i struggled to be able to get any output, though I had an idea that this will print their average scores to a separate file then re-read the scores.</p>
<p>The current layout I have so far is shown below:</p>
<pre><code>admin_data = []
team_choice = input("Choose a team to sort")
if team_choice == 'Team 1':
    path = 'team1scores.csv'

elif team_choice == 'Team 2':
    path = 'team2scores.csv'

elif team_choice == 'Team 3':
    path = 'team3scores.csv'

else:
    print("--Error Defining File Path--")

print("As an admin you have access to sorting the data")
print("1 - Alpahbetical")
print("2 - Highest to Lowest")
print("3 - Average Score")

admin_int = int(input("Choose either 1, 2 or 3?"))

if sort_int == 1 and team_choice == 'Team 1':
    do things

elif sort_int == 2 and team_choice == 'Team 1':
    do things

elif sort_int == 3 and team_choice == 'Team 1':
    do things
</code></pre>
<p>This part of the program will be used for each file, but  have had no luck producing any solutions for each of the different sorting ways I need. I will also appreciate if the answer for the <a href="https://stackoverflow.com/questions/36957360/replacing-specific-data-in-a-csv-file">first part</a> of my project is answered too. </p>
<p><strong>EDIT</strong> (16:43):
I have managed to complete the highest to lowest part of the program but is printing:</p>
<pre><code>[['Fred', '9'], ['George', '7'], ['Jake', '5'], ['Jake', '4'], ['Derek', '4'], ['Jake', '2']]
</code></pre>
<p>So if this is the formatting I read the data as, how will I be able to read the file for duplicate names and add the scores if they are in arrays like this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The first step would be to break down the problem into small steps:</p>
<ol>
<li><a href="https://docs.python.org/3.5/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">How to open and handle the file</a> (using the <code>with</code> statement at the bottom of that section)</li>
<li><a href="https://docs.python.org/3.5/library/csv.html#csv.reader" rel="nofollow noreferrer">How to traverse a csv file</a></li>
<li><a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer">How to sort the entries</a></li>
<li><a href="https://stackoverflow.com/questions/10695139/sort-a-list-of-tuples-by-2nd-item-integer-value">How to sort by the second value of each row</a></li>
<li><a href="https://stackoverflow.com/questions/6167731/printing-list-elements-on-separated-lines-in-python">How to print each element of a list on a separate line</a></li>
<li><a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">How to count total scores</a></li>
</ol>
<p>Expanding on the last one you can total up the scores as well as the number of entries for each name like this:</p>
<pre><code>import csv
import collections
...
with open(path) as f:
    entries = collections.Counter()
    total_scores = collections.Counter()
    for name,score in csv.reader(f):
        total_scores[name] += int(score)
        entries[name] += 1
</code></pre>
<p>Then you can calculate the average score for each person with <code>total_scores[name] / entries[name]</code></p>
<pre><code>for name in sorted(entries):
    ave_score = total_scores[name] / entries[name]
    print(name,ave_score) #sep=", ")
</code></pre>
<p>the other two actions are quite simple with a few of the steps listed above.</p>
<pre><code>import csv
import collections
from operator import itemgetter

...

if sort_int == 1:
    with open(path) as f:
        reader = csv.reader(f)
        for name, score in sorted(reader):
            print(name,score)

elif sort_int == 2:
    with open(path) as f:
        entries = sorted(csv.reader(f), 
                         key=itemgetter(1), 
                         reverse=True)
        for name,score in entries:
            print(name,score)

elif sort_int == 3:
    with open(path) as f:
        entries = collections.Counter()
        total_scores = collections.Counter()
        for name,score in csv.reader(f):
            score = int(score)
            total_scores[name] += score
            entries[name] += 1

        for name in sorted(entries):
            ave_score = total_scores[name] / entries[name]
            print(name,ave_score)
</code></pre>
<p>If you want to apply the highest to lowest to the average scores then you will need to make a reference to all the averages such as a <code>dict</code>:</p>
<pre><code>ave_scores = {}
for name in sorted(entries):
    ave_score = total_scores[name] / entries[name]
    ave_scores[name] = ave_score

for name,ave_score in sorted(ave_scores.items(), key = itemgetter(1), reversed=True):
    print(name,ave_score)
</code></pre>
</div>
<span class="comment-copy">Sorting highest to lowest can be solved by <a href="http://stackoverflow.com/questions/10695139/sort-a-list-of-tuples-by-2nd-item-integer-value">this answer</a> and apply <code>reverse=True</code> to <code>sorted</code> so that it goes highest to lowest.  What is suppose to happen when when the user chooses <code>Average Score</code>, would it calculate the average or do sorting?</span>
<span class="comment-copy">It should read the file and if a name is there more than once it will add them together and divide by the number of them there. My idea afterwards was to write the new results to another file then do the sorting from highest to lowest. Does that make much sense?</span>
<span class="comment-copy">The first two work but there is an issue with the average part: Traceback (most recent call last):   File "C:/Users/Jake/Downloads/Task 1 (1).py", line 182, in &lt;module&gt;     for name, score in csv.reader(f): TypeError: argument 1 must be an iterator</span>
<span class="comment-copy">My bad. I hadn't indented correctly.</span>
<span class="comment-copy">How would I add the highest to lowest to the end of the average part?</span>
<span class="comment-copy">I added to the answer @JakeKalcher.</span>
