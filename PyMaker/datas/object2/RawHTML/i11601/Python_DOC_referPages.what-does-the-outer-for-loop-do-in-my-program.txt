<div class="post-text" itemprop="text">
<p>Can somebody please tell me what is the functionality of the outer <code>for</code> loop in the program below:</p>
<pre><code>Mylist = [4,67,3,7,65,3,56,] 
maxLengthList = 7

print ('The all Number for Buble Sort is:', Mylist)

for i in range(len(Mylist)-1,0,-1):
    for j in range(i):
        if Mylist[j]&gt;Mylist[j+1]:
            temp = Mylist[j]
            Mylist[j] = Mylist[j+1]
            Mylist[j+1] = temp


print('After Buble Sort the Number are:',Mylist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The for loop will <code>step</code> backward (<code>-1</code>) starting at 6 (<code>len(Mylist)-1</code>) and stopping at 1, the last value before stop (<code>0</code>). See <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow">range</a> documentation <code>range(start, stop, step)</code> </p>
<pre><code>&gt;&gt;&gt; range(len(Mylist)-1, 0, -1)
[6, 5, 4, 3, 2, 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>in the <code>for i in range(len(Mylist)-1,0,-1):</code> line, there are three arguments to the range function. <code>len(Mylist)-1</code> tells us the upper value for our range. the <code>0</code> tells us the lower value for our range. the -1 is the size of the increments, meaning that instead of increasing by 1 each time we enter the loop, we are going to subtract one. </p>
<p>So we will start at the second to the last value in the loop. The <code>len(Mylist)-1</code>. We will subtract 1, The <code>-1</code> part, each time we go through the for loop until we end up at <code>0</code></p>
<p>And for reference the documentation states.</p>
<blockquote>
<p>range(stop) </p>
<p>range(start, stop[, step])</p>
<p>This is a versatile function to
  create lists containing arithmetic progressions. It is most often used
  in for loops. The arguments must be plain integers. If the step
  argument is omitted, it defaults to <code>1</code>. If the start argument is
  omitted, it defaults to <code>0</code>. The full form returns a list of plain
  integers <code>[start, start + step, start + 2 * step, ...]</code>. If step is
  positive, the last element is the largest <code>start + i * step</code> less than
  stop; if step is negative, the last element is the smallest <code>start + i &gt; * step</code> greater than stop. step must not be zero (or else ValueError is raised). </p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt;
&gt;&gt;&gt; range(10)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
&gt;&gt;&gt; range(1, 11)
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
&gt;&gt;&gt; range(0, 30, 5)
[0, 5, 10, 15, 20, 25]
&gt;&gt;&gt; range(0, 10, 3)
[0, 3, 6, 9]
&gt;&gt;&gt; range(0, -10, -1)
[0, -1, -2, -3, -4, -5, -6, -7, -8, -9]
&gt;&gt;&gt; range(0)
[]
&gt;&gt;&gt; range(1, 0)
[]
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Can't understand what exactly? Also, did you try <a href="https://en.wikipedia.org/wiki/Bubble_sort" rel="nofollow noreferrer">Wikipedia</a>?</span>
<span class="comment-copy">One of the buttons when you are writing the post is for formatting code. If you could edit your answer so that the code is formatted, then it will look normal and readable to all of us.</span>
<span class="comment-copy">Can't understand why the outer loop initialising,range and increment is like this:     for i in range(len(Mylist)-1,0,-1).........The program is for bubble sorting</span>
<span class="comment-copy">Thank you very much! I understood now! Are there any good sites where there are these basics for beginners?</span>
<span class="comment-copy">Thank you very much! I just have one question.Why can't we use lower range starting from 0 and upper range till the last value i.e starting from 0 to the last value of the list.</span>
<span class="comment-copy">It's not necessary to do it that way because of the way the bubble sort algorithm works. After going through the loop <code>len(Mylist)-1</code> times the list will already be sorted. If you analyze what happens with a tiny list, you'll see the list is sorted after the <code>len(Mylist)-1</code> iteration.</span>
