<div class="post-text" itemprop="text">
<p>I'm trying to download BVLC-trained model and I'm stuck with this error</p>
<pre><code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 110: invalid start byte
</code></pre>
<p>I think it's because of the following function (<a href="https://github.com/BVLC/caffe/blob/master/scripts/download_model_binary.py" rel="noreferrer">complete code</a>)</p>
<pre><code>  # Closure-d function for checking SHA1.
  def model_checks_out(filename=model_filename, sha1=frontmatter['sha1']):
      with open(filename, 'r') as f:
          return hashlib.sha1(f.read()).hexdigest() == sha1
</code></pre>
<p>Any idea how to fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are opening a file that is not UTF-8 encoded, while the default encoding for your system is set to UTF-8. </p>
<p>Since you are calculating a SHA1 hash, you should read the data as <em>binary</em> instead. The <code>hashlib</code> functions require you pass in bytes:</p>
<pre><code>with open(filename, 'rb') as f:
    return hashlib.sha1(f.read()).hexdigest() == sha1
</code></pre>
<p>Note the addition of <code>b</code> in the file mode.</p>
<p>See the <a href="https://docs.python.org/3/library/functions.html#open" rel="noreferrer"><code>open()</code> documentation</a>:</p>
<blockquote>
<p><em>mode</em> is an optional string that specifies the mode in which the file is opened. It defaults to <code>'r'</code> which means open for reading in text mode. <em>[...]</em> In text mode, if <em>encoding</em> is not specified the encoding used is platform dependent: <code>locale.getpreferredencoding(False)</code> is called to get the current locale encoding. (For reading and writing raw bytes use binary mode and leave <em>encoding</em> unspecified.)</p>
</blockquote>
<p>and from the <a href="https://docs.python.org/3/library/hashlib.html#hash-algorithms" rel="noreferrer"><code>hashlib</code> module documentation</a>:</p>
<blockquote>
<p>You can now feed this object with bytes-like objects (normally bytes) using the update() method.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You didn't specify to open the file in binary mode, so <code>f.read()</code> is trying to read the file as a UTF-8-encoded text file, which doesn't seem to be working.  But since we take the hash of <em>bytes</em>, not of <em>strings</em>, it doesn't matter what the encoding is, or even whether the file is text at all: just open it, and then read it, as a binary file.</p>
<pre><code>&gt;&gt;&gt; with open("test.h5.bz2","r") as f: print(hashlib.sha1(f.read()).hexdigest())
Traceback (most recent call last):
  File "&lt;ipython-input-3-fdba09d5390b&gt;", line 1, in &lt;module&gt;
    with open("test.h5.bz2","r") as f: print(hashlib.sha1(f.read()).hexdigest())
  File "/home/dsm/sys/pys/Python-3.5.1-bin/lib/python3.5/codecs.py", line 321, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb8 in position 10: invalid start byte
</code></pre>
<p>but</p>
<pre><code>&gt;&gt;&gt; with open("test.h5.bz2","rb") as f: print(hashlib.sha1(f.read()).hexdigest())
21bd89480061c80f347e34594e71c6943ca11325
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since there is not a single hint in the documentation nor src code, I have no clue why, but using the b char (i guess for binary) totally works (tf-version: 1.1.0):</p>
<pre><code>image_data = tf.gfile.FastGFile(filename, 'rb').read()
</code></pre>
<p><a href="https://github.com/tensorflow/tensorflow/blob/a0d784bdd31b27e013a7eac58a86ba62e86db299/tensorflow/python/platform/gfile.py#L54" rel="nofollow noreferrer">For more information, check out: gfile</a></p>
</div>
<span class="comment-copy">The error message is quite clear. Either your file is not UTF8 at all, or it is damaged.</span>
<span class="comment-copy">That is what I got when I try to print <code>f</code> <code>&lt;_io.TextIOWrapper name='models/bvlc_reference_caffenet/bvlc_reference_caffenet.caffemodel' mode='r' encoding='utf8'&gt;</code></span>
<span class="comment-copy">Interesting. So what happens when you specify the file encoding explicitly?  Something like <code>open(filename, 'r', encoding='utf8')</code>  ?</span>
<span class="comment-copy">I have tried to modify the 2nd line with this <code>with open(filename, 'r', encoding='utf8') as f:</code> but I got the same err</span>
<span class="comment-copy">No, do <i>not</i> tell Python it is UTF8. Unless you are sure it ought to be - but Python is telling you it is <i>not</i> valid UTF8, but something else. Open the file with a good code editor and see what's inside.</span>
<span class="comment-copy">thanks DSM, the <code>b</code> solved it.</span>
<span class="comment-copy">After so many tryouts, it was that <code>b</code>.</span>
