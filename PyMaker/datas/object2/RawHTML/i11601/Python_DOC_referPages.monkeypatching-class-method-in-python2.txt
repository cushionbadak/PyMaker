<div class="post-text" itemprop="text">
<p>I have module named <code>square.py</code>:</p>
<pre><code>import math

class Square(object):
    def __init__(radius):
        self.radius = radius

    def calculate_area(self):
        return math.sqrt(self.radius) * math.pi 
</code></pre>
<p>And I have written test for this using <code>py.test</code>:</p>
<pre><code>from square import Square


def test_mocking_class_methods(monkeypatch):
    monkeypatch.setattr('test_class_pytest.Square.calculate_area', lambda: 1)
    assert Square.calculate_area() ==  1
</code></pre>
<p>Running this test in python 2 gives me the following output:</p>
<pre><code>&gt;       assert Square.calculate_area() ==  1
E       TypeError: unbound method &lt;lambda&gt;() must be called with Square instance as first argument (got nothing instead)
</code></pre>
<p>But the same test in python 3 passes. Do you know why is that and how can I fix this test to work with python 2?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to call <code>calculate_area()</code> on an instane, but you called it on the <code>Square</code> class. You never created a square to calculate the area of.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 2 ensures that a method on a class is always called with the first argument being an instance of that class (Usually called <code>self</code>).</p>
<p>So, it is expecting something like this:</p>
<pre><code>Square().calculate_area()
# Whih is equivalent to
Square.calculate_area(Square())
</code></pre>
<p>But this will also throw an error, as it is an unexpected argument (<code>TypeError: &lt;lambda&gt;() takes no arguments (1 given)</code>)</p>
<p>To prevent checking for the <code>self</code> parameter, use the <a href="https://docs.python.org/3/library/functions.html#staticmethod" rel="nofollow noreferrer"><code>staticmethod</code></a> decorator:</p>
<pre><code>monkeypatch.setattr('test_class_pytest.Square.calculate_area', staticmethod(lambda: 1))
</code></pre>
</div>
