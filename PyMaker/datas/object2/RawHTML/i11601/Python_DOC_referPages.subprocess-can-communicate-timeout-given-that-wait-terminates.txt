<div class="post-text" itemprop="text">
<p>Is it possible for <code>Popen.communicate(timeout=2)</code> to raise <code>TimeoutExpired</code>, even though I am asserting that <code>Popen.poll() is not None</code> and <code>Popen.wait(2)</code> does <em>not</em> throw an exception?</p>
<p>Edit: The <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow">docs</a> suggest to use the following snippet:</p>
<pre><code>proc = subprocess.Popen(...)
try:
    outs, errs = proc.communicate(timeout=15)
except TimeoutExpired:
    proc.kill()
    outs, errs = proc.communicate()
</code></pre>
<p>but this will just raise <code>ProcessLookupError: [Errno 3] No such process</code>. Which makes sense because I've already terminated the process via <code>poll</code> and <code>wait</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes. It is possible if the child spawns its own subprocesses. <code>Popen.communicate()</code> may return much later than <code>Popen.wait()</code> which waits only for the child. See <a href="https://stackoverflow.com/q/36169571/4279">Python subprocess' <code>check_call()</code> vs <code>check_output()</code></a>.</p>
<p>Note: <code>proc.kill()</code> might not kill the whole process tree. See <a href="https://stackoverflow.com/q/4789837/4279">How to terminate a python subprocess launched with <code>shell=True</code></a>.</p>
</div>
