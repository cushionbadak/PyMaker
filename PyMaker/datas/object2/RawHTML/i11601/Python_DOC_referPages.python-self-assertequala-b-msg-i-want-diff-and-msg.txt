<div class="post-text" itemprop="text">
<p>If I call it like this, I see a nice diff:</p>
<pre><code>self.assertEqual(a, b)
</code></pre>
<p>If I call it like this, I see the msg only:</p>
<pre><code>self.assertEqual(a, b, msg)
</code></pre>
<p>Is there an easy way to show the diff AND the msg?</p>
<p>Implementing <code>assertEqual()</code> myself would work, but I ask myself if this is really the best way.</p>
<p>Plattform: Python2.7 and pytest 2.6.2.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you set <a href="https://docs.python.org/2/library/unittest.html#unittest.TestCase.longMessage" rel="nofollow"><code>longMessage</code> attribute</a> <code>True</code>, you will see both message.</p>
<p>Example:</p>
<pre><code>class TestFoo(unittest.TestCase):

    longMessage = True  # &lt;--

    def test_foo(self):
        self.assertEqual(1+2, 2, 'custom message')
</code></pre>
<p>output:</p>
<pre><code>F
======================================================================
FAIL: test_foo (__main__.TestFoo)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "t.py", line 6, in test_foo
    self.assertEqual(1+2, 2, 'custom message')
AssertionError: 3 != 2 : custom message

----------------------------------------------------------------------
Ran 1 test in 0.000s
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you're using pytest, you could also use pytest's plain assertions instead of the unittest compatibility:</p>
<pre><code>def test_foo():
    assert "abcdefg" == "abcde", "My message"
</code></pre>
<p>Output:</p>
<pre><code>====================== FAILURES ======================
______________________ test_foo ______________________

    def test_foo():
&gt;       assert "abcdefg" == "abcde", "My message"
E       AssertionError: My message
E       assert 'abcdefg' == 'abcde'
E         - abcdefg
E         ?      --
E         + abcde
</code></pre>
</div>
<span class="comment-copy">pytest does this, I think..</span>
<span class="comment-copy">Wow, that was fast. Thank you, it works like a charm. I am happy :-)</span>
<span class="comment-copy">For Python3 the default of longMessage has changed to the better default True: <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.longMessage" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">Yes, I could do this. I have to discuss this with my team. Up to now we use self.assertFOO() methods.</span>
