<div class="post-text" itemprop="text">
<p>Given a list:</p>
<pre><code>&gt;&gt;&gt; l = ['x', 'x', 'y', 'y', 'x']
</code></pre>
<p>I could get the count of the list by using <code>collections.Counter</code>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; Counter(l)
Counter({'x': 3, 'y': 2})
</code></pre>
<p><strong>How can I count contiguous items instead of the global count of the elements in the list?</strong> E.g.</p>
<pre><code>&gt;&gt;&gt; l = ['x', 'x', 'y', 'y', 'x']
&gt;&gt;&gt; ContiguousCounter(l)
[('x',2), ('y',2), ('x', 1)]

&gt;&gt;&gt; l = ['x', 'x', 'y', 'y', 'x', 'x', 'x', 'y']
&gt;&gt;&gt; ContiguousCounter(l)
[('x',2), ('y',2), ('x', 3), ('y', 1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use built-in <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby"><code>itertools.groupby</code></a> function:</p>
<pre><code>In [3]: from itertools import groupby

In [4]: l = ['x', 'x', 'y', 'y', 'x']

In [5]: list(groupby(l))
Out[5]: 
[('x', &lt;itertools._grouper at 0x7fd94716f1d0&gt;),
 ('y', &lt;itertools._grouper at 0x7fd94716f208&gt;),
 ('x', &lt;itertools._grouper at 0x7fd94716f240&gt;)]

In [6]: [(x, len(list(g))) for x, g in groupby(l)]
Out[6]: [('x', 2), ('y', 2), ('x', 1)]
</code></pre>
</div>
