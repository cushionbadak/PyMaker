<div class="post-text" itemprop="text">
<p>I have Python Code that runs fine with Python 2.7 but when i run it with Python 3 it doesn't work properly:</p>
<pre><code>import sys, os, hashlib

dir_name = sys.argv[1]

# Get the total number of args passed to the crawler.py and set default
# directory
def check_arguments():
    global dir_name
    total = len(sys.argv)
    if total &gt; 2:
        print("Bitte geben Sie nur ein Argument als Startverzeichnis an.")
        sys.exit()
    elif total == 2:
        try:
            os.listdir(dir_name)
            print("Startverzeichnis " + dir_name + " wird verwendet.")
        except:
            print("Geben Sie ein g√ºltiges Startverzeichnis an.")
            sys.exit()
    else:
        print("Startverzeichnis /tmp wird verwendet.")
        dir_name = '/tmp'

def create_MD5(dir_name):
    file_list = []
    hash_list = []
    for file in os.listdir(dir_name):
        try:
            if os.path.isfile(os.path.join(dir_name, file)):
                print("Folgende Datei gefunden: " , os.path.join(dir_name, file))
                file_list.append(file)
                hash = hashlib.md5.new()
                f = open(os.path.join(dir_name, file),'rb')
                hash.update(f.read())
                f.close()
                hash_list.append(hash.digest())

            elif os.path.isdir(os.path.join(dir_name, file)):
                print("Folgendes Verzeichnis gefunden:", os.path.join(dir_name, file))
                #print_files()
                fl, hl = create_MD5(os.path.join(dir_name, file))
                for i in fl:
                    file_list.append(i)
                for i in hl:
                    hash_list.append(i)
            else:
                pass
        except:
            print("Fehlende Zugriffsrechte")

    return file_list, hash_list

def print_MD5():
    fl, hl = create_MD5(dir_name)
    for i in range(len(fl)):
        print(os.path.join("Die Datei ", '%-22s  hat folgenden MD5-Hash: %s' % (fl[i], hl[i])))

check_arguments()
print_MD5()
</code></pre>
<p>in the console i got:</p>
<pre><code>Traceback (most recent call last):
  File "crawler.py", line 77, in &lt;module&gt;
    print_MD5()
  File "crawler.py", line 74, in print_MD5
    print(os.path.join("Die Datei ", '%-22s  hat folgenden MD5-Hash: %s' % (fl[i], hl[i])))
IndexError: list index out of range
</code></pre>
<p>How can i change the code so that it runs with Python 3, too?</p>
</div>
<div class="post-text" itemprop="text">
<p>The line:</p>
<pre><code>hashlib.md5.new()
</code></pre>
<p>is incorrect and should be:</p>
<pre><code>hashlib.md5()
</code></pre>
<p>This is throwing an error which your exception eating code is eating. This is why a general <code>except:</code> that simply continues regardless is a bad idea, especially in a case such as yours where this potentially leaves the program in a bad state.</p>
<p>Why this works on 2.7 I do not know but I have suspicion it may not be doing what you think it is doing.</p>
<p>Also since hashlib in 3.x reseeds the hash when it it created you would be better off creating a single instance with known hash.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your 'f1' list is longer than your 'h1' list.</p>
<p>How it reached that state is hard to tell from the code. My guess is that some point after calling file_list.append(), you hit an exception before calling hash_list.append. Possibly in the 'f = open(...)' line.</p>
<p>Refactor the create_MD5 code to ensure no exceptions happen between the two appends and it should be fixed.</p>
<p><strong>Edit</strong>
As to the reason this works in 2.7 and not 3.5. My guess is it's related to the following from the <a href="https://docs.python.org/3/whatsnew/3.0.html" rel="nofollow">Python 3 'Whatsnew'</a> </p>
<blockquote>
<p>Files opened as text files (still the default mode for open()) always use an encoding to map between strings (in memory) and bytes (on disk). Binary files (opened with a b in the mode argument) always use bytes in memory. This means that if a file is opened using an incorrect mode or encoding, I/O will likely fail loudly, instead of silently producing incorrect data</p>
</blockquote>
<p>Or, more likely - see Jack's answer.</p>
</div>
<span class="comment-copy">Is that stack trace the only output your program produces? In particular, does it ever print "Fehlende Zugriffsrechte" before that point?</span>
<span class="comment-copy"><code>print_MD5</code> uses the global <code>dir_name</code> but does not declare it as such.</span>
<span class="comment-copy">Can you add the lines <code>print(fl)</code> and <code>print(hl)</code> before the <code>for</code> loop in <code>print_MD5()</code> to see which list is causing the problem?</span>
<span class="comment-copy">@ScottHunter, that's all right. The <code>global</code> statement is only necessary if you want to assign something to the global name.</span>
<span class="comment-copy"><code>hl</code> appears to be shorter than <code>fl</code></span>
<span class="comment-copy">I agree that this is the most likely cause of the problem, but I'm curious why it only happens in 3.5 and not in 2.7.</span>
<span class="comment-copy">in 2.7 i used md5 and for 3 i removed the import md5</span>
