<div class="post-text" itemprop="text">
<p>I wrote a program in Tcl that could get a spinbox to spin dates in YYYY/MM/DD format, like this:</p>
<pre><code>proc datespin {way w} {
    set datoa [$w get] ; # current date from spinbox
    set oldsecs [clock scan $datoa -format {%Y/%m/%d}]
    if {$way eq "up"} {
        set newsecs [clock add $oldsecs 1 day]
    } else {
        set newsecs [clock add $oldsecs "-1" day]
    }
    set datoa [clock format $newsecs -format {%Y/%m/%d}]
    $w delete 0 end
    $w insert 0 $datoa ; # new date
}
</code></pre>
<p>Now I'm trying to rewrite the program in Python with tkinter, but I haven't yet found a simple Python equivalent of the Tcl <code>clock add</code> command. Is there one? Kind of? I've looked at the <code>time</code> and <code>datetime</code> module documentation, but I'm still new to Python and a bit lost. Please help!</p>
</div>
<div class="post-text" itemprop="text">
<p>You may be looking for <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta" rel="nofollow"><code>datetime.timedelta</code></a>.</p>
<pre><code>&gt;&gt;&gt; from datetime import date, timedelta
&gt;&gt;&gt; 
&gt;&gt;&gt; current_date = date(year=2000, month=1, day=1)
&gt;&gt;&gt; current_date.isoformat()
'2000-01-01'
&gt;&gt;&gt; 
&gt;&gt;&gt; next_date = current_date + timedelta(days=1)
&gt;&gt;&gt; next_date.isoformat()
'2000-01-02'
&gt;&gt;&gt; 
&gt;&gt;&gt; previous_date = current_date - timedelta(days=1)
&gt;&gt;&gt; previous_date.isoformat()
'1999-12-31'
</code></pre>
<p>You can get the system date using <a href="https://docs.python.org/3/library/datetime.html#datetime.date.today" rel="nofollow"><code>datetime.date.today</code></a>, and format dates using <a href="https://docs.python.org/3/library/datetime.html#datetime.date.strftime" rel="nofollow"><code>datetime.date.strftime</code></a>. For example:</p>
<pre><code>&gt;&gt;&gt; from datetime import date
&gt;&gt;&gt; date.today().strftime('%Y/%m/%d')
</code></pre>
</div>
<span class="comment-copy">That looks promising, but I need to start with the actual current date from the system clock, not an arbitrary one like 2000-01-01. I know about <code>datetime.now()</code>, but when I <code>isoformat</code> it, it gives me the time which I don't need in addition to the date which I do, e.g.: <code>'2016-04-26T06:07:19.473467'</code>. With <code>timedelta</code> I do get, e.g., <code>'2016-04-27T06:07:19.473467'</code> for the next day. I guess I could hack out the part of the string beginning with <code>T</code>, but is there a more elegant and Pythonic way to do the same thing?</span>
<span class="comment-copy">You can get the system date using <a href="https://docs.python.org/3/library/datetime.html#datetime.date.today" rel="nofollow noreferrer"><code>datetime.date.today</code></a>, and format dates using <a href="https://docs.python.org/3/library/datetime.html#datetime.date.strftime" rel="nofollow noreferrer"><code>datetime.date.strftime</code></a>. For example: <code>datetime.date.today().strftime('%Y/%m/%d')</code></span>
