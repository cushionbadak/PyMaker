<div class="post-text" itemprop="text">
<p>What do I need to do with <code>p1</code> for FFT to work?</p>
<pre><code>from numpy.fft import fft  
p1 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)   
p1.recvfrom(1040)  
mat = fft(p1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can unpack a byte stream into a Python data structure with the <a href="https://docs.python.org/3/library/struct.html" rel="nofollow">struct</a> library. You'll need to represent the incoming stream using the format characters that correspond with the C data types in the data. For example, if you knew that your input stream was a series of 5 unsigned ints represented as 4 bytes, you could use</p>
<pre><code>struct.unpack('hhhhh', p1[0])
</code></pre>
<p>(the <a href="https://docs.python.org/2/library/socket.html#socket.socket.recvfrom" rel="nofollow">recvfrom</a> documentation says that it returns a tuple of (string, address), where string is the data received).</p>
<p>This would return a tuple of 5 integers. From my understanding, a list of tuples is valid input for <code>numpy.fft</code>, but of course you can preprocess the tuples however you need to before you feed it to numpy.</p>
</div>
<span class="comment-copy">You need to start by reading the documentation for the UDP based protocol you are using to figure out how the data is formatted.</span>
<span class="comment-copy">@Krumelur If i know what byte carries what information, how can i separate them, and arrange them in matrix?</span>
<span class="comment-copy">Well, any answer to that question would depend knowing that. How is the data serialized? Raw binary? JSON? Protobuf? XML?</span>
<span class="comment-copy">@Krumelur It is raw binary in this case.</span>
