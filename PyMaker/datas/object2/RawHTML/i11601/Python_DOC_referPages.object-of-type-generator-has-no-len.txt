<div class="post-text" itemprop="text">
<p>I have just started to learn python.I want to write a program in NLTK that breaks a text into unigrams, bigrams. 
For example if the input text is: </p>
<p>"I am feeling sad and disappointed due to errors"</p>
<p>Function should generate text like:</p>
<p>I am--&gt;am feeling--&gt;feeling sad--&gt;sad and--&gt;and disappointed--&gt;disppointed due--&gt;due to--&gt;to errors</p>
<p>I have written code to input text into the program. Here's the function I'm trying:</p>
<pre><code>def gen_bigrams(text):
    token = nltk.word_tokenize(review)
    bigrams = ngrams(token, 2)
    #print Counter(bigrams)
    bigram_list = ""
    for x in range(0, len(bigrams)):
        words = bigrams[x]
        bigram_list = bigram_list + words[0]+ " " + words[1]+"--&gt;"
    return bigram_list
</code></pre>
<p>The error I'm getting is... </p>
<pre><code>for x in range(0, len(bigrams)):
TypeError: object of type 'generator' has no len()
</code></pre>
<p>As the ngram function returns a generator, I tried using <code>len(list(bigrams))</code> but it returns 0 value, so I'm getting the same error. I have referred to other questions on stackexchange but I am still not getting round how to resolve this. I am stuck at this error. Any workaround, suggestion?.</p>
</div>
<div class="post-text" itemprop="text">
<p>Constructing strings by concatenating values separated by a separator is best done by <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>str.join</code></a>:</p>
<pre><code>def gen_bigrams(text):
    token = nltk.word_tokenize(text)
    bigrams = nltk.ngrams(token, 2)
    # instead of " ".join also "{} {}".format would work in the map
    return "--&gt;".join(map(" ".join, bigrams))
</code></pre>
<p>Note that there'll be no trailing "--&gt;", so add that, if it's necessary. This way you don't even have to think about the length of the iterable you're using. In general in python that is almost always the case. If you want to iterate through an iterable, use <code>for x in iterable:</code>. If you do need the indexes, use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a>:</p>
<pre><code>for i, x in enumerate(iterable):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>bigrams is a generator function and bigrams.next() is what gives you the tuple of your tokens.
You can do len() on bigrams.next() but not on the generator function. Following is more sophisticated code to do what you are trying to achieve.</p>
<pre><code>&gt;&gt;&gt; review = "i am feeling sad and disappointed due to errors"
&gt;&gt;&gt; token = nltk.word_tokenize(review)
&gt;&gt;&gt; bigrams = nltk.ngrams(token, 2)
&gt;&gt;&gt; output = ""
&gt;&gt;&gt; try:
...   while True:
...     temp = bigrams.next()
...     output += "%s %s--&gt;" % (temp[0], temp[1])
... except StopIteration:
...   pass
... 
&gt;&gt;&gt; output
'i am--&gt;am feeling--&gt;feeling sad--&gt;sad and--&gt;and disappointed--&gt;disappointed due--&gt;due to--&gt;to errors--&gt;'
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">If <code>len(list(bigrams))</code> returns <code>0</code>, then that's presumably the issue... you probably need to figure out why <code>ngrams(token, 2)</code> isn't returning any values.</span>
<span class="comment-copy">... and update the question title and text accordingly; at the moment the title is misleading</span>
<span class="comment-copy"><code>for x in bigrams</code> should work. Then no need for <code>words = bigrams[x]</code>. Why? <code>x</code> will be your <code>words</code></span>
<span class="comment-copy">"tried calling a list function on it to extract the content and then using len(list(bigrams))" is (one of) your problem(s), if I understand you correctly. You first exhaust the generator with <code>list</code> and then try to call <code>len(list(gen))</code> on it again. As the generator is already exhausted, it'll result in an empty list.</span>
<span class="comment-copy">@VishalKharde, Welcome. BTW. bigram_list is not a list, but string. Should it be? For string you can use: <code>bigram_list += words[0]+ " " + words[1]+"--&gt;"</code></span>
<span class="comment-copy">This should be just <code>for w1, w2 in bigrams:</code> or <code>next(bigrams)</code>, if manually fetching values from an iterator (to get a sentinel value instead, for example). <code>except StopIteration:</code> is almost always a sign that something is amiss.</span>
