<div class="post-text" itemprop="text">
<p>Lets say I have a dictionary:</p>
<pre><code>dict1 = {'a': 3, 'b': 1.2, 'c': 1.6, 'd': 3.88, 'e': 0.72}
</code></pre>
<p>I need to be able to sort this by min and max value and call on them using this function I am still writing (note: 'occurences,' 'avg_scores' and 'std_dev' are all dictionaries and 'words' are the dictionary's keys.):</p>
<pre><code>def sort(words, occurrences, avg_scores, std_dev):
    '''sorts and prints the output'''
    menu = menu_validate("You must choose one of the valid choices of 1, 2, 3, 4 \n        Sort Options\n    1. Sort by Avg Ascending\n    2. Sort by Avg Descending\n    3. Sort by Std Deviation Ascending\n    4. Sort by Std Deviation Descending", 1, 4)
    print ("{}{}{}{}\n{}".format("Word", "Occurence", "Avg. Score", "Std. Dev.", "="*51))
    if menu == 1:
        for i in range (len(word_list)):
            print ("{}{}{}{}".format(cnt_list.sorted[i],)
</code></pre>
<p>I'm sure I am making this way more difficult on myself than necessary and any help would be appreciated. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't sort a dict, only it's representation.
But, you can use an <a href="https://docs.python.org/3/library/collections.html" rel="nofollow">ordereddict</a> instead.</p>
<pre><code>from collections import OrderedDict

dictionnary = OrderedDict(
    sorted(
        {'a': 3, 'b': 1.2, 'c': 1.6, 'd': 3.88, 'e': 0.72
         }.items(), key=lambda x:x[1], reverse=True))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can sort the keys based on the associated value. For instance:</p>
<pre><code>&gt;&gt;&gt; dict1 = {'a': 3, 'b': 1.2, 'c': 1.6, 'd': 3.88, 'e': 0.72}
&gt;&gt;&gt; for k in sorted(dict1, key=dict1.get):
...   print k, dict1[k]
...
e 0.72
b 1.2
c 1.6
a 3
d 3.88    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>min</code> and <code>max</code> with key:</p>
<pre><code>dict1 = {'a': 3, 'b': 1.2, 'c': 1.6, 'd': 3.88, 'e': 0.72}

min_v = min(dict1.items(), key=lambda x: x[1])
max_v = max(dict1.items(), key=lambda x: x[1])

print min_v, max_v
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/613183/sort-a-python-dictionary-by-value">Sort a Python dictionary by value</a></span>
<span class="comment-copy">when user312016 says "You can't sort a dict". You can iterate over or create a list of the dictionary values in a sorted manner using the sorted function, but the order of the values in a dictionary is not guaranteed. So what's in there is not sorted, but we can sort it as we are retrieving the values</span>
