<div class="post-text" itemprop="text">
<p>I need to convert a structure like this:</p>
<pre><code>(1, 2, 3, 4, 5, 6)
</code></pre>
<p>To a dictionnary like this:</p>
<pre><code>{1: 2, 3: 4, 5: 6}
</code></pre>
<p>How would you proceed ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The idea is to <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> together two slices of the tuple with step 2 - first one starting with the 0th element and the second - with the 1st element, and then pass the result to the <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer"><code>dict()</code></a> constructor:</p>
<pre><code>&gt;&gt;&gt; t = (1, 2, 3, 4, 5, 6)
&gt;&gt;&gt; dict(zip(t[::2], t[1::2]))
{1: 2, 3: 4, 5: 6}
</code></pre>
<p>Just to expand that, here are the intermediate values:</p>
<pre><code>&gt;&gt;&gt; t[::2]
(1, 3, 5)
&gt;&gt;&gt; t[1::2]
(2, 4, 6)
</code></pre>
<p>Now the <code>zip()</code> would aggregate the elements together, group by position:</p>
<pre><code>&gt;&gt;&gt; zip(t[::2], t[1::2])
[(1, 2), (3, 4), (5, 6)]
</code></pre>
<p>Then, the <code>dict()</code> would make a dictionary out of the list of pairs using first elements of the items as keys and second elements as values.</p>
<p>Note that the downside of this approach is that there would be two extra lists created in memory as opposed to <a href="https://stackoverflow.com/a/36846851/771848">@Martijn's proposal</a>. Though, this approach is arguably simpler and more readable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Pair up the elements 2 by two and pass the result to <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer"><code>dict()</code></a>:</p>
<pre><code>result = dict(zip(*[iter(values)] * 2))
</code></pre>
<p>By using <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter()</code></a> here you avoid creating two in-memory list objects the way <code>[::2]</code> and <code>[1::2]</code> slicing would. See <a href="https://stackoverflow.com/questions/5389507/iterating-over-every-two-elements-in-a-list/5389547#5389547">Iterating over every two elements in a list</a> as to why this works.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; values = (1, 2, 3, 4, 5, 6)
&gt;&gt;&gt; dict(zip(*[iter(values)] * 2))
{1: 2, 3: 4, 5: 6}
</code></pre>
</div>
