<div class="post-text" itemprop="text">
<p>In PHP, I can named element in a list like:</p>
<pre><code>&lt;?php
    list($name,$address,$home) = array("Alex","Taiwan","Vietnam");
    echo $address."\n";
?&gt;
</code></pre>
<p>Output: Taiwan</p>
<p>Can it work the same in Python? I am tired of doing like:</p>
<pre><code>list = ["Alex","Taiwan","Vietnam"]
print list[1] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use unpacking.</p>
<pre><code>name, city, country = ["Alex","Taiwan","Vietnam"]
print name
</code></pre>
<p>In Python3, you can do much more using the <code>*</code> operator.</p>
<pre><code>a, *b, c = [1, 2, 3, 4, 5] # a = 1, b = [2, 3, 4], c = 5
</code></pre>
<p>Refer <a href="https://www.python.org/dev/peps/pep-0448/" rel="noreferrer">PEP 448 -- Additional Unpacking Generalizations</a> for more generalizations.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>name tuple</strong> in module <code>collections</code> is also helpful:</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; Data = collections.namedtuple("Data", "name address home")
&gt;&gt;&gt; Data('Alex', 'Taiwan', 'Vietnam')
&gt;&gt;&gt; d = Data('Alex', 'Taiwan', 'Vietnam')
&gt;&gt;&gt; d.name
'Alex'
&gt;&gt;&gt; d.address
'Taiwan'
&gt;&gt;&gt; d.home
'Vietnam'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create a custom <code>namedtuple</code> data type:</p>
<pre><code>from collections import namedtuple

# create a new data type (internally it defines a class ContactData):
ContactData = namedtuple("ContactData", ["name", "city", "state"])

# create an object as instance of our new data type
alex = ContactData("Alex", "Taiwan", "Vietnam")

# access our new object
print(alex)             # output: ContactData(name='Alex', city='Taiwan', state='Vietnam')
print(alex.city)        # output: Taiwan
print(alex[1])          # output: Taiwan
alex[0] = "Alexander"   # set new value
print(alex.name)        # output: Alexander
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you actually want a dictionary:</p>
<pre><code>d = {'name': 'Alex', 'address': 'Taiwan', 'home': 'Vietnam'}
print d['address']
</code></pre>
<p>If you need the ordered list you can make an ordered dict and call values() on it.</p>
<pre><code>import collections
d = collections.OrderedDict({'name': 'Alex', 'address': 'Taiwan', 'home': 'Vietnam'})
d.values()
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer">namedtuple</a></span>
<span class="comment-copy">beat me to it by a couple min :-)</span>
<span class="comment-copy">Thank you so much</span>
