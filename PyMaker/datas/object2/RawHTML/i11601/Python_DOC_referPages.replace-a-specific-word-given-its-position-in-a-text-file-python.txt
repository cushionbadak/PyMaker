<div class="post-text" itemprop="text">
<p>I have a list of tuples, each on contains a word-to-be-replaced, its line and column number positions from a given text file. I want to go through the text file and <strong>replace that specific word of that specific position with a character</strong> (e.g. <code>[('word1', 1, 1), ('word2', 1, 9), ... ]</code>).</p>
<p>In other words, given a specific word, its line and column numbers inside a text file I am trying to find and replace that word with a character, for example:</p>
<p>given that the text file contains the following (<em>assuming its position is as it is displayed -not written- here</em>)</p>
<blockquote>
<p>Excited him now natural saw passage offices you minuter. At by stack
  being court hopes. Farther so friends am to detract. Forbade concern
  do private be. Offending residence but men engrossed shy. Pretend am
  <strong>stack</strong> earnest arrived company so on. Felicity informed yet had to is
  admitted strictly how stack you.</p>
</blockquote>
<p>and given that the word to replace is <code>stack</code> with position in the text to be line <code>3</code> and column <code>16</code>, to replace it with the character <code>*</code>,</p>
<p>so, after the replace takes place, the text file would now have the contents:</p>
<blockquote>
<p>Excited him now natural saw passage offices you minuter. At by stack
  being court hopes. Farther so friends am to detract. Forbade concern
  do private be. Offending residence but men engrossed shy. Pretend am
  * earnest arrived company so on. Felicity informed yet had to is
  admitted strictly how stack you.</p>
</blockquote>
<p>I have considered <a href="https://docs.python.org/3/library/linecache.html" rel="nofollow noreferrer">linecache</a> but it seems very inefficient for large text files. Also, given the fact that I already have the line and column numbers, I hoped there was a way to go directly to that position and perform the replace.</p>
<p>Does anyone know a way to do this in Python?</p>
<p><strong>EDIT</strong></p>
<p>The initial solution proposed using numpy's <code>genfromtxt</code> is (most likely) not suitable following the discussion in the follow-up <a href="https://stackoverflow.com/questions/36895533/replace-a-specific-word-given-its-position-in-a-text-file-python">issue</a> since there is a need for every line of the text file to be present and not skipped (e.g. empty lines, strings beginning with 'w' and strings inside '/*.. /').</p>
</div>
<div class="post-text" itemprop="text">
<p>Try a recipe like this:</p>
<pre><code>import numpy as np
import os

def changethis(pos):
    # Notice file is in global scope
    appex = file[pos[1]-1][:pos[2]] + '*' + file[pos[1]-1][pos[2]+len(pos[0]):]
    file[pos[1]-1] = appex

pos = ('stack', 3, 16)
file = np.array([i for i in open('in.txt','r')]) #BEFORE EDIT: np.genfromtxt('in.txt',dtype='str',delimiter=os.linesep)
changethis(pos)
print(file)
</code></pre>
<p>The result is this:</p>
<pre><code>[ 'Excited him now natural saw passage offices you minuter. At by stack being court hopes. Farther'
 'so friends am to detract. Forbade concern do private be. Offending residence but men engrossed'
 'shy. Pretend am * earnest arrived company so on. Felicity informed yet had to is admitted'
 'strictly how stack you.']
</code></pre>
<p>Notice this is a bit of an hack to put a bunch of long strings into a <code>numpy</code> array, and somehow change them, but it should be efficient when inserting in a longer loop for position tuples.</p>
<p><strong>EDIT:</strong> As @user2357112 made me realize the choice for file reader was not the most appropriate (although it worked for the exercise in question), so I've edited this answer to provide the same solution given in <a href="https://stackoverflow.com/questions/36924519/python-numpy-ndarray-skipping-lines-from-text/">the follow up question</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Consider a single line:</p>
<blockquote>
<p>word1 a word2 a word3 a word4</p>
</blockquote>
<p>If you have these changes:</p>
<pre><code>[('word1', 1, 1), ('word2', 1, 9), ... ]
</code></pre>
<p>And you process them in order:</p>
<blockquote>
<p>* a word2 a word3 a word4</p>
</blockquote>
<p>You will fail, because you are changing the positions of the words when you replace 'word1' with '*', a shorter string.</p>
<p>Instead, you will have to sort the list of changes by line, reversed by column:</p>
<pre><code>changes = sorted(changes, key=lambda t: (t[1], -t[2]))
</code></pre>
<p>You can then process the changes as you iterate through the file, shown in the link referenced by @JRajan:</p>
<pre><code>with open("file", "r") as fp:
    fpline_text = enumerate(fp)
    fpline,text = next(fpline_text)

    for edit in changes:
        word,line,offset = edit
        line -=1  # 0 based

        while fpline &lt; line:
            print(text)
            fpline,text = next(fpline_text)

        offset -= 1    # 0-based
        cand = text[offset:offset+len(word)]

        if cand != word:
            print("OOPS! Word '{}' not found at ({}, {})".format(*edit))
        else:
            text = text[0:offset]+'*'+text[offset+len(word):]

    # Rest of file
    try:
        while True:
            print(text)
            fpline,text = next(fpline_text)
    except StopIteration:
        pass
</code></pre>
</div>
<span class="comment-copy">Take a look at this <a href="http://stackoverflow.com/questions/2081836/reading-specific-lines-only-python/2081880#2081880">answer</a> It can help you with reading specific lines but you'll have to traverse the whole file.</span>
<span class="comment-copy">Struggling to understand what this does; could you please explain the <code>changethis</code> method?</span>
<span class="comment-copy">@hask.duk That function is reading the position you give and break the string in two: everything before the word, and everything after the word (those indexations with positions are for that). Than it builds a new string join both those parts and with a ´*´ in the middle. After that the element is completely replaced in the numpy array.</span>
<span class="comment-copy">If you are interested, please take a look in this <a href="http://stackoverflow.com/questions/36924519/python-numpy-ndarray-skipping-lines-from-text">follow-up question</a></span>
<span class="comment-copy">@hask.duk Sorry for the use of genfromtxt. I just tried to give a solution based on the exercise you have provided in the question. In any case I've noticed the other question got a lot of attention. I'll do a follow up of this solution (somehow numpy based) in case you might be interested.</span>
<span class="comment-copy">Thanks for looking at this again. I should have been more explicit in my description to begin with.</span>
<span class="comment-copy">Having trouble implementing the sorting part: <code>changes = [('word1', 1, 1), ('word2', 1, 9), ('word2', 1, 12)]</code>  and  <code>changes = sorted(changes, key=lambda t: return (t[0], t[1], -t[2]))</code> gives me <code>return outside of function error</code>. Am I doing something wrong?</span>
<span class="comment-copy">Suggested an edit to handle a code error and and modification to match the intended description.</span>
<span class="comment-copy">I modified the example. The lambda should just contain an expression, not a return: lambda t: (t[1],-t[2])</span>
