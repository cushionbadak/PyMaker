<div class="post-text" itemprop="text">
<p>I am trying to get all of the absolute files into a list called https. However, when I run my code, and try to return https it returns an empty list. Could someone help me? </p>
<pre><code>def getWebInfo(url):
    infile=urlopen(url)
    content=infile.read().decode()
    infile.close()
    https=[]

    def handle_starttag(tag, attrs):
        if tag.lower() == 'a':
             for attr in attrs:
                 if attr[0]=='href':
                     absolute=urljoin(url, attr[1])
                     if absolute[:7]=='http://':
                         https.append(absolute)
    parser=HTMLParser()
    parser.feed(content)

    print('ALL ABSOLUTE LINKS ON THE WEB PAGE')
    print('--------------------------------------')
    return https

getWebInfo('https://python.readthedocs.io/en/v2.7.2/library/htmlparser.html')
</code></pre>
<p>returns: </p>
<h2>ALL ABSOLUTE LINKS ON THE WEB PAGE</h2>
<p>[]</p>
<p>I want to be able to run the code so that when I input any url it returns the absolute links found on that webpage. I don't really want to use BeautifulSoup.. Can anyone help me </p>
<p><strong>EDITED</strong>
I called handle_starttag within my code, and now I get this error:<br/>
if attr[0] == 'href':
TypeError: 'HTTPResponse' object does not support indexing</p>
</div>
<div class="post-text" itemprop="text">
<p>The HTMLParser class isn't designed to be used out of the box.  The idea is that you make your own class that inherits from HTMLParser and override the methods that you want to use.  In practice this means adding your 'handle_starttag' function to a class, like this:</p>
<pre><code>class MyParser(HTMLParser):   # &lt;- new class is a subclass of HTMLParser

    def handle_starttag(self, tag, attrs):  # &lt;- methods need a self argument
        if tag.lower() == 'a':
             for attr in attrs:
                 if attr[0]=='href':
                     absolute=urljoin(url, attr[1])
                     if absolute[:7]=='http://':
                         https.append(absolute)
</code></pre>
<p>There's a problem with handle_starttag though: now that it's inside a class, the names <code>https</code> and <code>url</code> are not defined.  You can fix this by making them attributes of your parser after you've created it, like this:</p>
<pre><code>parser = MyParser()
parser.https = https
parser.url = url
</code></pre>
<p>and prefix them in the handle_starttags method with <code>self.</code>, so that the Python interpreter looks for these attributes in your parser.  So your code should end up looking like this:</p>
<pre><code>class MyParser(HTMLParser):

    def handle_starttag(self, tag, attrs):
        if tag.lower() == 'a':
             for attr in attrs:
                 if attr[0]=='href':
                     absolute=urljoin(self.url, attr[1])
                     if absolute[:7]=='http://':
                         self.https.append(absolute)


def getWebInfo(url):
    infile=urlopen(url)
    content=infile.read().decode()
    infile.close()
    https=[]

    parser=MyParser()
    parser.https = https
    parser.url = url
    parser.feed(content)

    print('ALL ABSOLUTE LINKS ON THE WEB PAGE')
    print('--------------------------------------')
    return https

links = getWebInfo('https://python.readthedocs.io/en/v2.7.2/library/htmlparser.html')


for link in links:
    print(link)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem here is that you are never modifying your <code>https</code> list. You define the <code>handle_starttag</code> function - which appends to the list - but then never call it. </p>
</div>
<span class="comment-copy">Can you post your full code where you actually call this function?</span>
<span class="comment-copy">@DonRhummy below the code, where it has getWebInfo('<a href="https://python.readthedocs.io/en/v2.7.2/library/htmlparser.html'" rel="nofollow noreferrer">python.readthedocs.io/en/v2.7.2/library/htmlparser.html'</a>) is where i call the function</span>
<span class="comment-copy">Thank you!! So I think I know the answer to my next question, but I just want to make sure... If I want to add something to my code, like returning all the of pictures or something, I would add the additional code to the class MyParser() and then call it in getWebInfo(), right?</span>
<span class="comment-copy">Yes - in most cases you'll just add more to handle_starttag but the <a href="https://docs.python.org/3/library/html.parser.html#example-html-parser-application" rel="nofollow noreferrer">docs</a> describe all the methods that you can override.</span>
<span class="comment-copy">so how would I call handle_starttag so that it returns all the absolute links? I tried using HTMLParser.handle_starttag('a', [('href', '<a href="http://www.cdm.depaul.edu/')]" rel="nofollow noreferrer">cdm.depaul.edu/')]</a>) but then it came back with the error: TypeError: handle_starttag() missing 1 required positional argument: 'attrs'</span>
