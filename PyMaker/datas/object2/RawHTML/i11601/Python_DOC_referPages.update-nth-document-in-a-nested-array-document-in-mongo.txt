<div class="post-text" itemprop="text">
<p>I need to update a document in an array inside another document in Mongo DB.</p>
<pre><code>{
        "_id" : ObjectId("51cff693d342704b5047e6d8"),
        "author" : "test",
        "body" : "sdfkj dsfhk asdfjad ",
        "comments" : [
                {
                        "author" : "test",
                        "body" : "sdfkjdj\r\nasdjgkfdfj",
                        "email" : "test@tes.com"
                },
                {
                        "author" : "hola",
                        "body" : "sdfl\r\nhola \r\nwork here"
                }
        ],
        "date" : ISODate("2013-06-30T09:12:51.629Z"),
        "permalink" : "mxwnnnqafl",
        "tags" : [
                "ab"
        ],
        "title" : "cd"
}
</code></pre>
<p>If I try to update first document in comments array by below command, it works.</p>
<pre><code>db.posts.update({'permalink':"cxzdzjkztkqraoqlgcru"},{'$inc': {"comments.0.num_likes": 1}})
</code></pre>
<p>But if I put the same in python code like below, I am getting Write error, that it can't traverse the element. I am not understanding what is missing!!
Can anyone help me out please.</p>
<pre><code>    post = self.posts.find_one({'permalink': permalink})       
    response = self.posts.update({'permalink': permalink},
                                 {'$inc':"comments.comment_ordinal.num_likes": 1}})

WriteError: cannot use the part (comments of comments.comment_ordinal.num_likes) to traverse the element
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>comment_ordinal</em> should be a substitution, not the index itself. You're treating it like an integer that can be mapped to an ordinal number. I mean you should do something like:</p>
<pre><code>updated_field = "comments." + str(comment_ordinal) + ".num_likes"

response = self.posts.update({'permalink': permalink}, {'$inc': {updated_field: 1}})
</code></pre>
<p>Hope this helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are doing it wrong you need to build your query dynamically and the best way to do that is using the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format</code></a> method.</p>
<pre><code>response = self.posts.update_one(
    {'permalink': permalink},
    {'$inc': {"comments.{}.num_likes".format(comment_ordinal): 1}}
)
</code></pre>
<p>Also you should consider to use the <a href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update_one" rel="nofollow"><code>update_one</code></a> method for single update and <a href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update_many" rel="nofollow"><code>update_many</code></a> if you need to update multiple documents because <a href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update" rel="nofollow"><code>update</code></a> is deprecated. </p>
</div>
<span class="comment-copy">Thanks a lot. I missed it that it is integer and should be changed.</span>
<span class="comment-copy">string concatenation using <code>+</code> is not recommended see <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP 0008</a></span>
<span class="comment-copy">@user3100115 Please be more descriptive when making a suggestion instead of sharing the whole pep8 rules :) I agree that most of the cases using format is the safest choice but I don't see a problem using "+" for string concatenation if you know what you're doing. Especially if you're writing a short script as I believe this is such an example.</span>
<span class="comment-copy">No specific link. Search "string concatenation" in that page.:).</span>
<span class="comment-copy">@user3100115 I didn't ask for a link and I already know about suggestions. I suggested you to support your claim with your ideas and explanation. :)</span>
<span class="comment-copy">Upvoted for the use of the format function.</span>
