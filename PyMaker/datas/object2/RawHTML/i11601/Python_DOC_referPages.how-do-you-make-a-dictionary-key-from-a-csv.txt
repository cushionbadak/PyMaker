<div class="post-text" itemprop="text">
<p>I'm having issues creating a dictionary key using a csvreader.  I want to create a dictionary, which contains the location column where the data was found, so that I can write it out to a new location later. I haven't included the write function, because I want to understand how to do the create the keys first. </p>
<p>For example, this data point 123-123-1234 was found in row[0]. </p>
<pre><code>input_file_column_modification = ''
myData = []
primary_key_list = {}

if os.path.isfile(filename):
  input_file_column_modification = open(filename)
  myData = [item for item in csv.reader(input_file_column_modification)]

for row in myData:
  primary_key_pattern_match = re.search('\d{3}-\d{3}-\d{4}, row[0], re.I)
  if primary_key_pattern_match is not None:
  ** QUESTION: How do I keep track of the row/columns were the data is being found?
  primary_key_list.append(primary_key_pattern_match.group(0))
</code></pre>
<hr/>
<p><strong>Current input being read in</strong>
Note that 2 entries have no pattern to match.  </p>
<hr/>
<p>Info,Address,City,ZipCode,Last Updated</p>
<p>Lorem ipsum dolor sit amet, consectetur (123-123-1234)adipiscing elita,100 some address,cityname,"zipcode",03/24/2016</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,200 some address, cityname,zipcode,03/24/2016</p>
<p>Lorem ipsum dolor sit amet, consectetur (345-345-3456) adipiscing elit,300 some address,cityname,zipcode,03/24/2016</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit,400 some address, cityname,zipcode,03/24/2016  </p>
<p>Lorem ipsum dolor sit amet, consectetur (567-567-5678) adipiscing elit,500 some address,cityname,zipcode,03/24/2016</p>
</div>
<div class="post-text" itemprop="text">
<p>One way of doing it would be via <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a> which gives you both the index or "iteration counter" and the value of an iterable as you loop through it:</p>
<pre><code>for row_num, row in enumerate(myData):
    primary_key_pattern_match = re.search('\d{3}-\d{3}-\d{4}, row[0]', re.I)
    if primary_key_pattern_match is not None:
        row_num_and_row_data = (row_num, row)
        # You now have a tuple whose 1st element is the row number
        # and whose 2nd element is the row (a tuple or list).

        # You can also skip making a tuple and add the row 
        # to a dictionary immediately (declare it before the loop): 
        row_dict[row_num] = row

        # or to add the results of the regex:
        row_dict[row_num] = primary_key_pattern_match.group(0)
</code></pre>
</div>
