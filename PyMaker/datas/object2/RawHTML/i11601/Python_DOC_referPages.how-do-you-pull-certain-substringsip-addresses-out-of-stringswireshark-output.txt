<div class="post-text" itemprop="text">
<p>I am reading the contents of a wireshark dump from a text file, line by line.  One of the things I can pick out easily is the protocol used in that specific line of the wireshark output(as shown in the code below).  The problem I'm running into is pulling out the ip addressess from the line.  As you can see in the sample output below, and my code, it was fairly easy to pull out the protocol because it was always capitialized and there was a space on either side of it.  The ip addresses however, aren't as uniform and I'm not quite sure how to pull them out as well.  This is mostly due to the fact that I'm not quite sure how all the parts of the <code>re.match()</code> work.  Can somebody help me out in this, and possibly explain how the <code>re.match()</code> parameters work?</p>
<pre><code>file = open('tcpdump.txt', 'r');
     for line in file:
          matchObj = re.match(r'(.*) TCP (.*?) .*', line, re.M)
</code></pre>
<p>Sample Wireshark Output: </p>
<p><code>604 1820.381625 10.200.59.77 -&gt; 114.113.226.43 TCP 54 ssh &gt; 47820 [FIN, ACK] Seq=1848 Ack=522 Win=16616 Len=0</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The first regex group is <code>greedy</code> <code>(.*)</code> and is matching everything, you can make it <code>non-greedy</code> by adding <code>?</code>, i.e.:</p>
<pre><code>file = open('tcpdump.txt', 'r');
     for line in file:
          matchObj = re.match(r"-&gt;\s(.*?)\s(\w+)\s(.*?)\s", line, re.M)
</code></pre>
<hr/>
<p>The above example is will capture <strong>3 groups</strong> containing the remote address <code>114.113.226.43</code>, protocol <code>TCP</code> and port <code>54</code> respectively.</p>
<hr/>
<p><a href="https://regex101.com/r/bG9zT0/2" rel="nofollow">Regex101 Demo</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Start by look at the regex documentation, for python it is here:</p>
<p><a href="https://docs.python.org/3/library/re.html" rel="nofollow">https://docs.python.org/3/library/re.html</a></p>
<p>There are also many sites that have good tutorials, samples and interactive testers such as:</p>
<p><a href="http://regexr.com/" rel="nofollow">http://regexr.com/</a></p>
<p>I don't know the output format of wireshark, but I would imagine it is documented somewhere.</p>
<p>This should get your ip addresses:</p>
<pre><code>\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As people have already responded, <a href="https://docs.python.org/3/library/re.html" rel="nofollow">regex</a> is the way to go. A sample code for the purpose</p>
<pre><code>import unittest
import re
from collections import namedtuple

protocol = namedtuple('Protocol', ['source', 'destination', 'protocol'])


def parse_wireshark(input):
  pat = re.findall(r"(\d+\.\d+\.\d+\.\d+) -&gt; (\d+\.\d+\.\d+\.\d+) (\w+)", input)[0]
  return protocol(source=pat[0], destination=pat[1], protocol=pat[2])

class TestWireShark(unittest.TestCase):

  def test_sample(self):
    self.assertEqual(parse_wireshark("604 1820.381625 10.200.59.77 -&gt; 114.113.226.43 TCP 54 ssh &gt; 47820 [FIN, ACK] Seq=1848 Ack=522 Win=16616 Len=0"),
                     protocol(source='10.200.59.77',
                              destination='114.113.226.43',
                              protocol='TCP'))
if __name__ == '__main__':
   unittest.main()
</code></pre>
</div>
<span class="comment-copy">So would I impliment that like this: <code>matchObj2 = re.match(\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b', line)</code> if I understand it correctly?</span>
<span class="comment-copy">place it in a raw string r'\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b' and use it in match like you did previously. You can chain a bunch of things together into a single match.... just use a regex tester to play with it. Take a sample of your output and try some regexs on it.</span>
