<div class="post-text" itemprop="text">
<p>How would I go about printing only 10 items per row on python. For example, with this line of code: </p>
<pre><code>for index, item in enumerate (list1):
    if item == 'P':
        print (index, end=' ')
</code></pre>
<p>I am getting the result to print horizontally, not vertically with "end=' ', but I need to get it to print up to 10 characters per line, to get a result that will look something like this: </p>
<pre><code>2 3 5 7 11 13 17 19 23 29
31 37 41 43 47 53 59 61 67 71 
73 79 83 89 97 
</code></pre>
<p>Any help would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>You could chunk the items:</p>
<pre><code>from itertools import chain, islice

def chunk(iterable, size=10):
    """Yield chunks of given size from iterable."""
    iterator = iter(iterable)
    for i in iterator:
        yield chain((i,), islice(iterator, size-1))

pitems = (i for i, v in enumerate(list1) if v == 'P')
for chk in chunk(pitems):
    print(' '.join(str(n) for n in chk))
</code></pre>
<p>The <code>chunk</code> function splits an iterable into groups of a given size (in this case 10). The <code>pitems = (...)</code> line filters for the items you want the index of. We then take the filtered items, split them into groups of 10 using <code>chunk</code> and print each group.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can break it up into 10-item sublists and then print those.</p>
<pre><code>from itertools import islice

sublists = [islice(list1, i*10, (i+1)*10) for i in range(len(list1)/10 +1)]
for sublist in sublists:
    print ' '.join(map(str, sublist))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use <code>%</code></p>
<pre><code>printed = 0
for index, item in enumerate(list1):
    if item == 'P':
        print(index, end=' ')
        if printed % 10 == 0 and printed != 0:
            print('\n')
        printed += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is actually documented in the Python <a href="https://docs.python.org/3/library/functions.html?highlight=zip#zip" rel="nofollow"><code>zip</code> docs</a>. In your case, since you want the trailing bits, you'll want to use <code>itertools.zip_longest</code>:</p>
<pre><code>primes = [i for i,v in enumerate(list1) if v == 'P']

from itertools import zip_longest
for group in zip_longest(*[iter(primes)]*10):
    print(group)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can have a counter set at 10 to start with and decrease it by 1 every time you print.  When you have printed 10 your counter would be zero.  At that time print a new line and reset the counter to 10.</p>
<pre><code>item_cnt_in_line = 10
for index, item in enumerate (list1):
    if item == 'P':
        if item_cnt_in_line == 0:
            print()
            item_cnt_in_line = 10

        print (index, end=' ')
        item_cnt_in_line -= 1
</code></pre>
</div>
