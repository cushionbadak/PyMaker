<div class="post-text" itemprop="text">
<p>I have done a math quiz as practice. Part of Task 3 is to organise a CSV file containing names and scores into alphabetical order. I have done some code, but I would like to know how to make it work like I expect it to. I'm not really sure what I have done, so please can you keep explanations simple.</p>
<pre><code>data = input('How would you like the data? a for alphabetically, b for highest score  to lowest and c for average score highest to lowest. press q to exit: ')
if 'a':
    score_file = open('scorefile.csv')
    for x in sorted (score_file, key=str.lower):
        print (x)
</code></pre>
<p>This is what it looks like when it is run:
<a href="https://i.stack.imgur.com/XyjdK.png" rel="nofollow noreferrer"><img alt="code running" src="https://i.stack.imgur.com/XyjdK.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>See what's going on here?</p>
<pre><code>&gt;&gt;&gt; if "a":
...     print ("True!")
... else:
...     print("False!")
... 
True!
&gt;&gt;&gt; 
&gt;&gt;&gt; if "aadasgabherbasdvc23d3wv":
...     print ("True!")
... else:
...     print("False!")
... 
True!
&gt;&gt;&gt; 
&gt;&gt;&gt; if "":
...     print ("True!")
... else:
...     print("False!")
... 
False!
&gt;&gt;&gt; 
&gt;&gt;&gt; if None:
...     print ("True!")
... else:
...     print("False!")
... 
False!
&gt;&gt;&gt; 
</code></pre>
<p>Any non-empty string will evaluate to <code>True</code>. Empty strings and the keyword <code>None</code> evaluate to <code>False</code> (there are probably more examples). 
This means that no matter what you enter, the code nested under <code>if 'a'</code> will be executed. If/when you write the code for user inputs "b" and "c", you'll see this.</p>
<p>If you want to compare user input to the string <code>'a'</code>, you'd do:</p>
<pre><code>data = input('How would you like the data? a for alphabetically, b for highest score  to lowest and c for average score highest to lowest. press q to exit: ')
if data == 'a':
    # do something  
</code></pre>
<p>Regarding the rest of the code... Python has a <code>csv</code> module. You can easily split a csv file manually since it should be comma-delimited but the <code>csv</code> module handles it in a slightly more sophisticated way (I'm not sure but I think it understands values with commas in them, for instance).</p>
<p>When you use <code>open()</code>, don't forget to call <code>close()</code> afterwards. You can avoid this <code>open/close</code> business altogether by using <code>with</code> (which is called a context manager btw.). You can then do </p>
<pre><code>import csv

with open('scorefile.csv', 'r') as csv_file:
    rows = csv.reader(csv_file)
</code></pre>
<p>or</p>
<pre><code>with open('scorefile.csv', 'r') as csv_file:
    for line in csv_file:
       ...
</code></pre>
<p>or whatever you want to do with the file. The key point is that using <code>with</code> takes care of closing the file automatically once you're done reading the data. That way, you don't have to remember to call <code>close()</code>.</p>
</div>
<span class="comment-copy">Does your code work? <code>score_file</code> is not a list you can sort, you will have to read the lines first.</span>
<span class="comment-copy">@DisplayName how could I change it to make it better?</span>
<span class="comment-copy">Maybe have a look at this: <a href="https://docs.python.org/3/library/csv.html?highlight=csv#csv.reader" rel="nofollow noreferrer">docs.python.org/3/library/csv.html?highlight=csv#csv.reader</a> A csv reader that can probably be of help</span>
<span class="comment-copy">@jDO I added a picture of the running code above</span>
<span class="comment-copy">@DisplayName I added a picture of the running code above</span>
<span class="comment-copy">thankyou so much this has been such a great help!! ðŸ˜Š</span>
<span class="comment-copy">@ClareJordan I'm glad :) You're welcome</span>
