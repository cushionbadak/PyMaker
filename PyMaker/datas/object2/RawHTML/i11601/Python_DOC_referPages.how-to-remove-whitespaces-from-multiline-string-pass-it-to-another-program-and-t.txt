<div class="post-text" itemprop="text">
<h3>Summary</h3>
<p>I need to detect indentation level of the first line in multiline string passed to a script. Store it. Remove this indent from other lines. Pass the multiline string with removed indent level to another program (that I've figured how to do) add back indent to all lines in multiline string and print it to stdout (that I also know how to do).</p>
<hr/>
<p>To be specific I have a problem with vim and Python formatter YAPF.
The way yapf works is that if python file is incorrect formatting would result in error.</p>
<p>So imagine this</p>
<pre><code>def f():
   # imagine some very very long lines here that we want to reformat
</code></pre>
<p>If I would select this imagined lines in vim and then press <code>gq</code> (I've <code>set formatprg=yapf</code>) vim would substitute this lines with a traceback of yapf which is no good of course. But If I would select the whole function it would do the job perfectly.</p>
<p>You can test this with</p>
<pre><code>echo '   fooo = 1' | yapf
</code></pre>
<p>This would result in <code>IndentationError</code>
While <code>echo 'fooo = 1' | yapf</code> would work</p>
<p>So what I think is a very nice workaround is to remove indentation store the indent level of the first line, pass string without indentation to yapf somehow and then add indent to the result. The problem with this is I'd like this to be a one liner or close to that so that it could be stored directly in my vimrc. So python isn't a good match for that because I would need at least to import re package etc.</p>
<p>So I thought about perl.</p>
<p>The only problem is that I don't know perl much.</p>
<p>So for now my experiment looks like this</p>
<pre><code>$a = "    foo = 1\n    bar = '1'";
my ($indent, $text) = $a =~ m/^(\s+)(.*)$/m;
$command = "echo " . $text;
$out = `$command`;
print "$out\n";
print "$text\n";
</code></pre>
<p>I will be glad for any help. Maybe there is more easy way to do this, I don't know.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you seem to be familiar with Python already I would recommend using its <a href="https://docs.python.org/3/library/textwrap.html#module-textwrap" rel="nofollow"><code>textwrap</code></a> module, which contains <code>dedent</code> and (in version 3.3 and later) <code>indent</code> functions that can do most of the job for you:</p>
<pre><code>import re
from textwrap import dedent, indent

whitespace = re.compile('\s+')

test_string = '''    while True:
        pass'''

leading_whitespace = whitespace.match(test_string)

dedented_text = dedent(test_string)

# Do whatever you want with dedented_text

indented_text = indent(dedented_text, leading_whitespace.group(0))
</code></pre>
</div>
<span class="comment-copy">Does your current code fail, or are you just looking for a code review?</span>
<span class="comment-copy">It doesn't fail, it plainly doesn't do what I want</span>
<span class="comment-copy">@ThisSuitIsBlackNot first of all I don't know how to remove indentation of the first line from all lines. Than I don't know how to store it while doing so.</span>
<span class="comment-copy">@ThisSuitIsBlackNot another problem is I don't know how to get the string that was input of the script.</span>
<span class="comment-copy">have you tried using the escape sequence tab instead? \t in a string is equivalent to a tab</span>
<span class="comment-copy">Oh, really good solution!</span>
<span class="comment-copy">Could you help also with how I should get the multiline string passed to script?</span>
<span class="comment-copy">To pass to script, you could specify the multiline string as the first argument; then process it as <code>sys.argv[1]</code>. <code>dedent</code> and <code>indent</code> are available in version 3.4.</span>
<span class="comment-copy">@ccf, the <code>textwrap</code> module <a href="https://docs.python.org/2/library/textwrap.html#module-textwrap" rel="nofollow noreferrer">seems to have been introduced in Python 2.3</a> and as far as I can tell it has always included <code>dedent</code> (though version 2.5 fixed an important bug with it). I'm interested to learn that the <code>indent</code> function <a href="https://docs.python.org/3/library/textwrap.html#textwrap.indent" rel="nofollow noreferrer">wasn't introduced until Python 3.3</a>. Thanks for that!</span>
<span class="comment-copy">'cause I tried it with my python 2.7, but got ImportError.</span>
