<div class="post-text" itemprop="text">
<p>I am having some trouble with this.
I am trying to write this JSON to DataFrame. I feel like my issue is how i am formatting the JSON. When i write each tweet. However not able to narrow it down. Any insight would be awesome. Attached is my raw_tweets.json and 2nd code blow below is how i am writing it, seperating by comma i.e join (',')</p>
<p><strong>HERE is the</strong> <a href="http://pastebin.com/2nUzAjAZ" rel="nofollow">LINK TO raw_tweets.json</a></p>
<pre><code> i get a raise JSONDecodeError("Extra data", s, end)

 JSONDecodeError: Extra data
</code></pre>
<p>#JSON to DataFrame</p>
<pre><code>class tweet2dframe(object):

    def __init__(self, text="", location=""):
    self.text = text
    self.location = location

def getText(self):

    return self.text

def getLocation(self):

    return self.location



# import json package to load json file
 with open('raw_tweets.json',encoding="utf8") as jsonFile:
     polls_json = json.loads(jsonFile.read())




tweets_list = [polls(i["location"], i["text"]) for i in polls_json['text']]

colNames = ("Text", "location")
dict_list = []


for i in tweets_list:
    dict_list.append(dict(zip(colNames , [i.getText(), i.getLocation()])))


tweets_df = pd.DataFrame(dict_list)
tweets_df.head()
</code></pre>
<p>THE way I write my tweets to JSON</p>
<pre><code>saveFile = io.open('raw_tweets.json', 'w', encoding='utf-8')
saveFile.write(','.join(self.tweet_data))
saveFile.close()
exit()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>raw_tweets.json</code> contains invalid JSON. It contains JSON snippets separated by commas. To make the whole text a valid <a href="http://www.json.org/" rel="nofollow">JSON array</a>, place brackets <code>[...]</code> 
around the contents:</p>
<pre><code>with open('raw_tweets.json', encoding="utf8") as jsonFile:
    polls_json = json.loads('[{}]'.format(jsonFile.read()))
</code></pre>
<hr/>
<p>For example,</p>
<pre><code>import pandas as pd
import json

with open('raw_tweets.json', encoding="utf8") as jsonFile:
    polls_json = json.loads('[{}]'.format(jsonFile.read()))

tweets_list = [(dct['user']['location'], dct["text"]) for dct in polls_json]
colNames = ("location", "text")
tweets_df = pd.DataFrame(tweets_list, columns=colNames)
print(tweets_df.head())
</code></pre>
<p>yields</p>
<pre><code>        location                                               text
0           None  RT @webseriestoday: Democracy Now: Noam Chomsk...
1  Pittsburgh PA  "The tuxedo was an invention of the Koch broth...
2           None  RT @webseriestoday: Democracy Now: Noam Chomsk...
3           None  RT @webseriestoday: Democracy Now: Noam Chomsk...
</code></pre>
<hr/>
<p>Another, better way to fix the problem would be to write valid JSON in <code>raw_tweets.json</code>. After all, if you wanted to send the file to someone else, you'll make their life easier if the file contained valid JSON. We'd need to see more of your code to suggest exactly how to fix it, but in general you would want to use <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow"><code>json.dump</code></a> to write a list of dicts as JSON to a file instead of "manually" writing JSON snippets with <code>saveFile.write(','.join(self.tweet_data))</code>:</p>
<pre><code>tweets = []
for i in loop:
    tweets.append(tweet_dict)
with io.open('raw_tweets.json', 'w', encoding='utf-8') as saveFile:
    json.dump(tweets, saveFile)
</code></pre>
<p>If <code>raw_tweets.json</code> contained valid JSON then you could load it into a Python list of dicts using:</p>
<pre><code>with open('raw_tweets.json', encoding="utf8") as jsonFile:
    polls_json = json.load(jsonFile)
</code></pre>
<p>The rest of the code, to load the desired parts into a DataFrame would remain the same.</p>
<hr/>
<p><em>How was this line of code constructed</em>:</p>
<pre><code>tweets_list = [(dct['user']['location'], dct["text"]) for dct in polls_json]
</code></pre>
<p>In an interactive Python session I inspected one dict in <code>polls_json</code>:</p>
<pre><code>In [114]: import pandas as pd
In [115]: import json
In [116]: with open('raw_tweets.json', encoding="utf8") as jsonFile:
    polls_json = json.loads('[{}]'.format(jsonFile.read()))
In [117]: dct = polls_json[1]
In [118]: dct
Out[118]: 
{'contributors': None,
 'coordinates': None,
 ...
  'text': "Like the old Soviet leaders, Bernie refused to wear a tux at last night's black-tie dinner.",
  'truncated': False,
  'user': {'contributors_enabled': False,
  ...
   'location': 'Washington DC',}}
</code></pre>
<p>It is quite large, so I've omitted parts of it here to make the result more readable.
Assuming that I correctly guessed the <code>text</code> and <code>location</code> values you are looking for, 
we can see that given this dict, <code>dct</code>, we can access the desired <code>text</code> value using <code>dct['text']</code>. But the <code>location'</code> key is inside the <em>nested dict</em>, <code>dct['user']</code>. Therefore, we need to use <code>dct['user']['location']</code> to extract the location value.</p>
<p>By the way, Pandas provides a convenient method for reading JSON into a DataFrame, <code>pd.read_json</code>, but it relies on the JSON data being "flat". Because the data we desire is in nested dicts, I used custom code, the list comprehension</p>
<pre><code>tweets_list = [(dct['user']['location'], dct["text"]) for dct in polls_json]
</code></pre>
<p>to extract the values instead of <code>pd.read_json</code>.</p>
</div>
<span class="comment-copy">wow this is great, please verify that text and location labels in data frame are correct i edited them but please verify</span>
<span class="comment-copy">Oops, I should switch the order of the column labels. Fixing...</span>
<span class="comment-copy">can you please explain this line plz? tweets_list = [(dct['user']['location'], dct["text"]) for dct in polls_json]  I am little but confused why 'user is included and why location and text in quotes are places where they are</span>
<span class="comment-copy">Best post I've ever had on StackOverflow, crystal clear sir thank you!</span>
<span class="comment-copy">hi @unutbu, i got this error would :/    File "C:/Users/DS/tweet_extraction.py", line 63, in &lt;listcomp&gt;     tweets_list = [(dct['user']['location'], dct["text"]) for dct in polls_json]  TypeError: list indices must be integers or slices, not str</span>
