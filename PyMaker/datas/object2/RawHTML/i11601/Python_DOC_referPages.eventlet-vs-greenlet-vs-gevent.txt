<div class="post-text" itemprop="text">
<p>I'm trying to create a GUI framework that will have an event-loop. some threads to handle the UI and some for event handling. I've searched a little bit and found these three libraries and I'm wondering which one is better to use? what are the pros and cons?</p>
<p>I could use one of these three library or even create create something for myself by using python <strong>threads</strong>, or <strong>concurrent</strong> library.</p>
<p>I would appreciate sharing any kind of experience, benchmark and comparison.</p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>You definitely don't want greenlet for this purpose, because it's a low level library on top of which you can create light thread libraries (like Eventlet and Gevent).</li>
<li>Eventlet, Gevent and more similar libraries provide excellent toolset for IO-bound tasks (waiting for read/write on file, network).</li>
<li>Likely, most of your GUI code will wait for other threads (at this point green/light/OS thread is irrelevant) to finish, which is a perfect target for above mentioned libraries.</li>
<li>All green thread libraries are mostly the same. Try all and decide which one suits your project best.</li>
<li>But also it's possible that you'll need to extract some things into a separate OS thread due to requirements of OS level GUI layer.</li>
<li>Considering that and better implementation of thread lock in Python3 you may want to just stick with native <code>threading</code> module if your application doesn't need hundreds or more threads.</li>
</ul>
</div>
<span class="comment-copy">reading this blog post very carefully might help <a href="https://blog.gevent.org/2010/02/27/why-gevent/" rel="nofollow noreferrer">blog.gevent.org/2010/02/27/why-gevent</a></span>
<span class="comment-copy">So much for "There should be one-- and preferably only one --obvious way to do it.". I'd use <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer"><code>multiprocessing</code></a>.</span>
