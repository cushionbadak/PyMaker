<div class="post-text" itemprop="text">
<p>I have a Python script that prints out a randomly generated password, then prints prints it to a text file, adding a new row every time it is called. For example:</p>
<pre><code>PSWD = (str(pswd01)) + (str(pswd02)) + (str(pswd03)) + (str(pswd04))
# Note, variables pswd01, pswd02 etc are randomly created earier in the script. 

print(PSWD)


with open('PSWD_output.txt','a') as f:
    f.write(PSWD + '\n')
f.close()
</code></pre>
<p>Note, the variable PSWD contains lower case, upper case, and numbers.</p>
<p>I then want to read the file and count the number of individual characters, and print a report to a different text file, but not sure how I can do this. I have asked a similar question <a href="https://stackoverflow.com/questions/36772368/python-count-letters-in-random-strings/36772777#36772777">here</a>, which answers how to print a character report to the console.</p>
<p>Any idea how I can read PSWD_output.txt, and count each different character, writing the result to a separate text file? </p>
<p>Any help appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use dictionaries to count characters repeat as below:</p>
<pre><code>my_dictionary = {}

f =  open('PSWD_output.txt','r')
line = f.readline()
while(line):
    for letter in line:
        if letter in my_dictionary:
            my_dictionary[letter] +=1
        else:
            my_dictionary[letter] = 1
    line = f.readline()

print my_dictionary
</code></pre>
<p>For a text file containing:</p>
<pre><code>salam
asjf
asjg;
asdkj
14kj'asdf

5
</code></pre>
<p>returns:</p>
<pre><code>&gt;&gt;&gt; ================================ RESTART ================================
&gt;&gt;&gt; 
{'a': 6, 'j': 4, 'd': 2, 'g': 1, 'f': 2, 'k': 2, '\n': 6, 'm': 1, 'l': 1, "'": 1, '1': 1, 's': 5, '5': 1, '4': 1, ';': 1}
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow">Counter</a>. It takes an iterable (and strings are iterable: iterate over the characters) and stores the result as a dictionary</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; c = Counter("foobarbaz")
&gt;&gt;&gt; c
Counter({'o': 2, 'a': 2, 'b': 2, 'z': 1, 'f': 1, 'r': 1})
&gt;&gt;&gt; c.most_common(2)
[('o', 2), ('a', 2)]
</code></pre>
</div>
<span class="comment-copy">This was pretty much exactly what I was looking for, thanks very much! I now save this dictionary to a separate output file, however want it in a more user-friendly format.  Is there anyway to format the dictionary before printing/writing to file?  Alternatively, my other option would be to then read the file once again (after writing dictionary to it) and try and format it this way, but unsure how to do either.   Any ideas? Thanks!</span>
