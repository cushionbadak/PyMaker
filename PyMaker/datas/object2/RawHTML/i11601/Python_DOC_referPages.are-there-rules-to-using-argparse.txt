<div class="post-text" itemprop="text">
<p>When using <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">argparse</a>, how do I decide if something should be a positional argument, an optional argument, or a subcommand?</p>
</div>
<div class="post-text" itemprop="text">
<p>A <strong>positional</strong> argument is typically <em>required</em>.  For example, if your program always needs to be passed a file to read, that file would be a <strong>positional</strong> argument.</p>
<p>An <strong>optional</strong> argument is, unsurprisingly, <em>optional</em>.  This might be an argument that can have a sane default (ie your program defaults to running on port <code>8080</code> but can accept other ports) or it might be a flag to turn on optional behavior (ie a <code>verbose</code> flag).</p>
<p>A <strong>subparser</strong> is typically used when you want to add a whole suite of different commands to a single script.  Perhaps your script can either read or write files, and the <code>read</code> and <code>write</code> operations expect various flags that don't overlap.  In this case, it would make sense to have a subparser for the <code>read</code> operation and a subparser for the <code>write</code> operation to simplify the parsing of those flags.</p>
<p>Most simple programs will want to stick with positional and optional arguments: you'll typically know when you actually need to use a subparser.</p>
<p>Here's a (very contrived) example program that uses all three:</p>
<pre><code>import argparse

def parse_args():
    p = argparse.ArgumentParser()
    p.add_argument("filename", help="Filename to interact with")
    p.add_argument("-v", "--verbose", action="store_true", help="Turn on verbose mode")

    subparsers = p.add_subparsers(title="Commands", dest="command")

    read_p = subparsers.add_parser("read", help="read from FILENAME")

    load_p = subparsers.add_parser("load", help="load from FILENAME")
    return p.parse_args()

if __name__ == "__main__":
    args = parse_args()
</code></pre>
<p>And here's its help text:</p>
<pre><code>usage: foo.py [-h] [-v] filename {read,load} ...

positional arguments:
  filename       Filename to interact with

optional arguments:
  -h, --help     show this help message and exit
  -v, --verbose  Turn on verbose mode

Commands:
  {read,load}
    read         read from FILENAME
    load         load from FILENAME
</code></pre>
</div>
<span class="comment-copy">First, you decide what you want.  Next, you use <code>argparse</code>.  It's all up to you.</span>
<span class="comment-copy">are there rules or best practices or something?</span>
<span class="comment-copy">Use positional arguments for things that are required.  Use optional arguments for things that are not required.  Unfortunately, I don't know what you mean by "subcommand".</span>
<span class="comment-copy">There aren't any rules.  But there are lots of examples, both in the <code>argparse</code> documentation (also the tutorial), and other SO questions.</span>
<span class="comment-copy">Is there a usage first then code to produce that usage tutorial? Because I am getting confused when looking at the code first and not seeing a lot of examples of how the usage rules look.</span>
