<div class="post-text" itemprop="text">
<p>I am trying to make a simple code in python 3 that shows you the day when you enter the month year and day. This is the code:</p>
<pre><code>from datetime import date
s = date(2016, 4, 29).weekday()

if s == 0:
    print ("mon")
if s == 1:
    print ("tue")
if s == 2:
    print ("wed")
if s == 3:
    print ("thurs")
if s == 4:
    print ("fri")
if s == 5:
    print ("sat")
if s == 6:
    print ("sun")
</code></pre>
<p>The above code works, but I tried to do</p>
<pre><code>from datetime import date
s = date(int(input())).weekday()
if s == 0:
    print ("mon")
if s == 1:
    print ("tue")
if s == 2:
    print ("wed")
if s == 3:
    print ("thurs")
if s == 4:
    print ("fri")
if s == 5:
    print ("sat")
if s == 6:
    print ("sun")
</code></pre>
<p>so I could let users enter their own day, but it gives me the following error:</p>
<pre><code>Traceback (most recent call last): 
  File "..\Playground\", line 2, in &lt;module&gt; 
    s = date(int(input())).weekday() 
ValueError: invalid literal for int() with base 10: '2016,' 
</code></pre>
<p>I used the input 2016, 4, 29 if it helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do:</p>
<pre><code>from datetime import date

usr_date = [int(x) for x in input().split(",")]
d = date(usr_date[0], usr_date[1], usr_date[2]).weekday()
print (d)
</code></pre>
<p><code>datetime.date()</code> expects 3 integers but <code>input()</code> returns a string. This means that we have to:</p>
<ul>
<li>split the string returned by <code>input()</code> by comma to get three parts</li>
<li>convert each part to an integer</li>
<li>feed these parts to <code>datetime.date()</code></li>
</ul>
<p>This makes more sense, if you ask me:</p>
<pre><code>from datetime import datetime

d = datetime.strptime(input(), '%Y,%m,%d').weekday()
print(d)
</code></pre>
<p><code>datetime.strptime()</code> takes a string as input which is convenient because <code>input()</code> happens to return a string. This means that the splitting and casting/converting isn't necessary. You can find all the different date formats supported by <code>strptime()</code> in the <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow">datetime docs</a>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/1841565/valueerror-invalid-literal-for-int-with-base-10">ValueError: invalid literal for int() with base 10: ''</a></span>
<span class="comment-copy"><code>2016, 4, 29</code> is not a valid integer.</span>
