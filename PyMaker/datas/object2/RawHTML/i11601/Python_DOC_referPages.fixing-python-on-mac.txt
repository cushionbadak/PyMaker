<div class="post-text" itemprop="text">
<p>Getting Python right on Mac seems a constant challenge.  I'm working with a Homebrew implementation, and now have difficulty running Jupyter except with sudo:</p>
<pre><code>$ which python
/usr/local/bin/python
$ which pip
/Users/username/bin/pip
$ which jupyter
/usr/local/bin/jupyter
$ jupyter notebook
Traceback (most recent call last):
  File "/usr/local/bin/jupyter", line 7, in &lt;module&gt;
    from jupyter_core.command import main
ImportError: No module named jupyter_core.command
$ sudo jupyter notebook
The Jupyter Notebook is running at: http://localhost:8888/
</code></pre>
<p>Once running, Jupyter fails to import pandas (installed via <code>pip install pandas</code>):</p>
<pre><code>import pandas
ImportError                               Traceback (most recent call last)
&lt;ipython-input-18-d6ac987968b6&gt; in &lt;module&gt;()
----&gt; 1 import pandas
ImportError: No module named pandas
</code></pre>
<p>.. even though pandas is available (<code>python -s 'import pandas'</code> works fine).  Guessing its path isn't available to root.</p>
<p>I'm wondering if Jupyter is <a href="https://github.com/jupyterhub/jupyterhub/wiki/Using-sudo-to-run-JupyterHub-without-root-privileges" rel="nofollow">particularly problematic</a> or if this is just my setup..?</p>
<p>Grateful for assistance as this is becoming very tiresome.  Any guidance on wiping python and reinstalling 'properly' from scratch would be handy.</p>
<hr/>
<p>Edit:</p>
<pre><code>$ which virtualenv
/usr/local/bin/virtualenv
21:16 $ virtualenv
Traceback (most recent call last):
  File "/usr/local/bin/virtualenv", line 7, in &lt;module&gt;
    from virtualenv import main
ImportError: No module named virtualenv
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What python is in the shebang (<code>#!</code>) line on <code>pip</code> and <code>jupyter</code>?  You may have installed <code>jupyter</code> with a <code>pip</code> that was using <code>/usr/bin/python</code>.  Which means it's not there in the libraries installed for Homebrew's <code>/usr/local/bin/python</code>.  </p>
<p>You should be able to resolve this with something like this:</p>
<pre><code>/usr/local/bin/python $(type -p pip) install jupyter
</code></pre>
<p>But in general I second @Ray's suggestion of using <code>pyenv</code> to manage a personal set of Python installations that you can switch between, independently of what's on the system.  (I likewise use <code>rbenv</code> for Ruby and <code>perlbrew</code> for Perl.)</p>
</div>
<div class="post-text" itemprop="text">
<p>Stop using python via native install on OSX or via homebrew right now!!!</p>
<ul>
<li>First learn to use <code>pyenv</code> to control your version of python being used.  Pyenv allows you to safely switch between any version of python you want at any time without messing up the natively installed python (which may be needed by the system): <a href="https://amaral.northwestern.edu/resources/guides/pyenv-tutorial" rel="nofollow">https://amaral.northwestern.edu/resources/guides/pyenv-tutorial</a> </li>
<li>Second learn how to use virtual environments (<code>pyvenv</code>) to sandbox your projects.  Virtual environments will allow you to have different sets of libraries installed by pip and such available as needed: <a href="https://robinwinslow.uk/2013/12/26/python-3-4-virtual-environment/" rel="nofollow">https://robinwinslow.uk/2013/12/26/python-3-4-virtual-environment/</a> </li>
</ul>
<p>With these two technologies in your toolbox you will never have the issue you are experiencing again. </p>
<p>Please note <code>pyvenv</code> and <code>pyenv</code> are two seperate technologies used to enable similar goals (to control/sandbox environments) with unfortunately VERY similar names.   One thing to note is you'll see older references to <code>virtualenv</code> if you google around a bit.  This is the same thing as <code>pyvenv</code>.</p>
<p>Someone put together a good overview of using these with Jupyter: <a href="http://www.alfredo.motta.name/create-isolated-jupyter-ipython-kernels-with-pyenv-and-virtualenv/" rel="nofollow">http://www.alfredo.motta.name/create-isolated-jupyter-ipython-kernels-with-pyenv-and-virtualenv/</a>.</p>
<p>The other option is to do everything in virtual machines (with say virtualbox) or better still Docker containers, but this a whole other ball of fun best left to after you master virtual environments (you'll want them when you build your docker images anyhow).</p>
</div>
<span class="comment-copy">Ah that must be it.  pip's was <code>#!/usr/local/opt/python/bin/python2.7</code> and jupyter's was <code>#!/usr/bin/python</code>.</span>
<span class="comment-copy">Thanks Ray. Tried installing virtualenv and hit error above.  Any idea?</span>
<span class="comment-copy">@geotheory Don't use <code>virtualenv</code> if you're in python3 , use <code>pyvenv</code> it does the same thing.  <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">docs.python.org/3/library/venv.html</a></span>
<span class="comment-copy">Does this work for Python 2.7 on Mac?  <code>pip install pyvenv</code> returns <code>Could not find a version that satisfies the requirement pyvenv (from versions: ) No matching distribution found for pyvenv</code>...</span>
<span class="comment-copy"><a href="http://pastebin.com/raw/G7QZAqpw" rel="nofollow noreferrer">Full log..</a></span>
<span class="comment-copy">@geotheory as far as I know, <code>pyvenv</code> only works with python3, <code>virtualenv</code> is needed for python 2.7.  You need install it with <code>pip install virtualenv</code> after you install <code>pyenv</code> and select python2.7 as your running python.</span>
