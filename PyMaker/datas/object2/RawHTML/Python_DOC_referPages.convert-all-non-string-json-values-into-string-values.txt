<div class="post-text" itemprop="text">
<p>In python I have JSON in which all the values have to be changed to string. The values may be a number, boolean, null or anything.</p>
<pre><code>{
  "obj1": [
    {
      "n1": "n",
      "n2": 1,
      "n3": true
    },
    {
      "n1": "n",
      "n2": 1,
      "n3": null
    }
  ]
}
</code></pre>
<p>The expected result is all the values should be formatted as a string.</p>
<p>Example:</p>
<pre><code>{
  "obj1": [
    {
      "n1": "n",
      "n2": "1",
      "n3": "true"
    },
    {
      "n1": "n",
      "n2": "1",
      "n3": "null"
    }
  ]
}
</code></pre>
<p>Thank you !!!</p>
</div>
<div class="post-text" itemprop="text">
<p>I have an answer for you here. The following script will take a JSON object in the format that you have specified, iterate through it and create a new json object where non-string values are converted to strings with <code>json.dumps</code>.</p>
<p>This scripts takes a JSON object - if you are starting out with a string - then you will need to convert it to an object with <code>json.loads(myString);</code></p>
<pre class="lang-py prettyprint-override"><code>import json;

myJSONObj = {"obj1": [{"n1": "n", "n2": 1, "n3": True}, {"n1": "n", "n2": 1, "n3": None}]};

newJSON = {};

for obj in myJSONObj:
    newJSON[obj] = [];
    for item in myJSONObj[obj]:
        newJSONArrayObj = {};
        for key, value in item.items():
            if not isinstance(value, str):
                newJSONArrayObj[key] = json.dumps(value);
            else:
                newJSONArrayObj[key] = value;
        newJSON[obj].append(newJSONArrayObj);

newJSONString = json.dumps(newJSON);
print(newJSONString);
</code></pre>
<p>Here's the same code with comments:</p>
<pre><code>import json;

# assigning the source json object
myJSONObj = {"obj1": [{"n1": "n", "n2": 1, "n3": True}, {"n1": "n", "n2": 1, "n3": None}]};

# creating a new target json object, empty
newJSON = {};

# enter the obj1 object
for obj in myJSONObj:
    # create the key from the existing obj1 object, and assign an empty array
    newJSON[obj] = [];
    # loop through all the array items in the source obj1 array
    for item in myJSONObj[obj]:
        # for each, create a new empty json object
        newJSONArrayObj = {};
        # for each of the key-value pairs in the object in the array
        for key, value in item.items():
            # in case that the value is not a string, dump it to the new object as a string with its original key
            if not isinstance(value, str):
                newJSONArrayObj[key] = json.dumps(value);
            # otherwise, just assign the string to the key in the new object
            else:
                newJSONArrayObj[key] = value;
        # finally push the new object into the array
        newJSON[obj].append(newJSONArrayObj);

# converting the new JSON object to a string and printing it
newJSONString = json.dumps(newJSON);
print(newJSONString);
</code></pre>
<p>Let me know if that works for you.</p>
</div>
<span class="comment-copy">Why not iterate your objects and <code>str()</code> the values?</span>
<span class="comment-copy">I added an answer here, please let me know if this solves your issue? Otherwise add some information and I will see if I can help.</span>
<span class="comment-copy">Yes that helps a lot, thank you!</span>
