<div class="post-text" itemprop="text">
<p>So I need to make a calculator that converts strings into floats then calculate.
The problem is I need to make error messages whenever:</p>
<ol>
<li>the user enters a string that does not contain operands and/or an operator.</li>
<li>the user does not enter anything (the user simply pressed the Enter key).</li>
<li>the user only enters an operand.</li>
<li>the user only enters an operator.</li>
<li>the user enters two operands.</li>
<li>the user enters an operand and an operator.</li>
<li>the user is trying to divide a number by 0.</li>
<li>the user did not put a space in between the operands and the operator.</li>
</ol>
<p>This is how the code looks like without error messages</p>
<pre><code># Interface
print ("Equation Calculator")
print (" ")
print ("My Equation Calculator is able to")
print ("     Add: +")
print ("     Subtract: -")
print ("     Multiply: *")
print ("     Divide: /")
print (" ")
print ("The equation you enter must follow this syntax:")
print (" &lt;openrand&gt;&lt;speace&gt;&lt;operator&gt;&lt;space&gt;&lt;operand&gt;.")
print ("An &lt;operand&gt; is any float number.")
print ("An &lt;operator&gt; is any is any of the operators mentioned above.")
print ("A &lt;space&gt; is an empty space.")

#  Enter the equation
equation = input ("Enter your equation: ")

# Split the equation into Operand 1,2 and Operator
operand1,operator,operand2 = equation.split(" ")


# Show the user the equation
print ("Here is the equation you have entered: " + equation)

#  Addition, Converting strings (operand 1 and 2) into float
if (operator == "+"):
    answer = float(operand1) + float(operand2)

#  Subtraction, Converting strings (operand 1 and 2) into float
if (operator == "-"):
    answer = float(operand1) - float(operand2)

#  Multiplication, Converting strings (operand 1 and 2) into float
if (operator == "*"):
    answer = float(operand1) * float(operand2)

#  DIvision, Converting strings (operand 1 and 2) into float
if (operator == "/"):
    answer = float(operand1) / float(operand2)

# Display the answer
print ("The answer is: ",answer )
</code></pre>
<p>So for 7 and 8th errors I did this</p>
<pre><code># Error for not having a space
if (equation.find(" ") == False):
    print ("Error #1: Please check if there is a space in between the two operands and the operator.")

# Error for dividing by 0
if (operand2 == "0"):
    print ("Error #7: You cannot divide by 0.")
</code></pre>
<p>However python just bypasses this and still crashes. 
What is the problem with above code?
How can I make it so the code prints error messages in above 8 situations?
Also I cannot use the built-in functions eval( ) or exec(), break or continue or pass or sys.exit( ).
I am very new to programming in general.
Please help and thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have some set requirements on the incoming data, it is usually a good idea to check beforehand, if the data match this requirements.
So I would test if the string given matches your requirements:
The general structure could be tested with regular expressions:</p>
<p>I assume only integers are used, if not you need to replace the \ds with floating pointg matching, which should be googleable.</p>
<pre><code>\d+ [+\/\-*] \d+
</code></pre>
<p>This regex matches any digit, followed by a space,followed by one of the operator +/*- and a digit.</p>
<p>Please not that would cause a very generic error message - like "your input does not look like the required input", so you might be better of to test the parts separately, to give a better user experience.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a structure like this:</p>
<pre><code>if bad_condition:
    print "error"
else:
    # do whatever
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>try:
    assert condition, "Error Message"
except AssertionError, e:
    raise Exception(e.args)
</code></pre>
<p>for example:</p>
<pre><code># Error for not having a space
try:
    assert (equation.find(" ")), "Error #1: Please check if there is a space in between the two operands and the operator."
except AssertionError, e:
    raise Exception(e.args)
</code></pre>
</div>
<span class="comment-copy">use <code>else</code> statements</span>
<span class="comment-copy">You could do <code>try:</code> <code>operand1,operator,operand2 = equation.split("")</code> <code>except ValueError:</code> to make sure you get 3 strings in <code>equation</code>. You can do a similar thing to catch <code>ValueError</code> to make sure the operand strings can be converted to floats: <code>try:</code> <code>operand1=float(operand1)</code> <code>except ValueError:</code>. See <a href="https://docs.python.org/3/tutorial/errors.html#exceptions" rel="nofollow noreferrer">Exceptions</a> in the tutorial for details.</span>
