<div class="post-text" itemprop="text">
<p>I have been trying to run my program, but every time I do, I get this:</p>
<pre><code>Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\GURNHH\AppData\Local\Programs\Python\Python35-32\lib\tkinter\__init__.py", line 1550, in __call__
    return self.func(*args)
  File "C:\Users\GURNHH\AppData\Local\Programs\Python\Python35-32\lib\turtle.py", line 686, in eventfun
    fun()
  File "C:/Users/GURNHH/OneDrive - Rugby School/ICT/Python/bored.py", line 22, in k1
    badpos.remove((int(turtle.xcor()), int(turtle.ycor())))
KeyError: (0, 0)
</code></pre>
<p>I don't know what it means by key error in this case, because, unlike lots of other people, I haven't used dict.
My program is supposed to make the turtle return to the centre after 50 moves, but not count 0,0 in the set badpos. My program is:</p>
<pre><code>from turtle import Turtle, Screen
    from math import *
    from random import *

    random = 0

    """def add():
        random = random + 1
    def check():
        if random &gt; 4:
            random = 0"""

    def k1():
        global random
        turtle.forward(10)
        random = random + 1

        if random &gt; 5:
            turtle.goto(0,0)
            badpos.remove((int(turtle.xcor()), int(turtle.ycor())))


        position = (int(turtle.xcor()), int(turtle.ycor()))

        if position in badpos:
            turtle.color("red")
            screen.bye()


    def k2():
        turtle.left(90)

    def k3():
        turtle.right(90)

    turtle = Turtle(shape="turtle")

    badpos = set()

    screen = Screen()
    screen.setup(1200, 700)
    screen.title("Turtle-Snaky Thing")

    screen.onkey(k1, "Up")
    screen.onkey(k2, "Left")
    screen.onkey(k3, "Right")

    screen.listen()

    screen.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm impressed how you can take a working piece of code and completely mess it up.  Here's a rework of my original example with your 50 move constraint added:</p>
<pre><code>from turtle import Turtle, Screen

def k1():
    global move_count

    turtle.forward(10)

    move_count += 1

    if move_count % 50 == 0:
        turtle.home()

    position = (int(turtle.xcor()), int(turtle.ycor()))

    if position != (0, 0) and position in badpos:
        turtle.color("red")
        screen.bye()

    badpos.add(position)

def k2():
    turtle.left(90)

def k3():
    turtle.right(90)

turtle = Turtle(shape="turtle")

move_count = 0
badpos = set()

screen = Screen()
screen.setup(1200, 700)
screen.title("Turtle-Snakey Thing")

screen.onkey(k1, "Up")
screen.onkey(k2, "Left")
screen.onkey(k3, "Right")

screen.listen()

screen.mainloop()
</code></pre>
<p>I'm less impressed by you incorporating my example wholesale but not accepting my prior answer.  This new variation is trickier to use as there's only so many times you can restart from home, at 90 degree angles, and not step on a previous line, even with the origin excluded:</p>
<p><a href="https://i.stack.imgur.com/03ntL.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/03ntL.png"/></a></p>
<p>Perhaps making turns 60 or 30 degrees might give you more mobility for getting away from home.</p>
<p>PS. you aren't using a <code>dict()</code> in this program.  It's a <code>set()</code>.</p>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/stdtypes.html#set.remove" rel="nofollow noreferrer">set</a> documentation states that <code>remove()</code> raises a <code>KeyError</code> if the thing you're trying to remove isn't there.</span>
<span class="comment-copy">thanks, how do I save a turtle picture as a pdf?</span>
<span class="comment-copy">@Gurneyguy, there are at least a couple of ways.  The  easy way would be to use a separate tool to do  a screen capture and save that in the format you desire -- that's what I usually do.  The trickier way, from within Python, is to get ahold of the tkinter canvas object from the turtle screen via <code>turtle.Screen().getcanvas()</code> and then call the <code>postscript()</code> method on the canvas to generate a PostScript file.  Then you need to convert the PostScript file to PDF (they are both Adobe formats.)  Read the tkinter documentation for the details of the arguments to the <code>postscript()</code> method.</span>
<span class="comment-copy">could you give me an example of the code? I've just started python so I have no clue what I'm doing, I tried this: from turtle import Turtle, Screen screen.onkey(k100, "o") #save picture def k100():         bob = Turtle()         ts = bob.getscreen()         name = input("what would you like to call your masterpiece? ")         ts.getcanvas().postscript(file=(name, '.png'), colormode='color')</span>
