<div class="post-text" itemprop="text">
<p>I want to delete files and folders but leave directory structure intact.</p>
<p>But also I need to keep name of files in their current path. Something like, leaving behind a empty text with same name of file instead of that file itself.</p>
<p>My drive format is NTFS.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>os.walk</code> to browse your directory structure and remplace each file with an empty one (overwrite the file:</p>
<pre><code>import io
import os

work_dir = '.'
for root, dirnames, filenames in os.walk(work_dir):
    for filename in filenames:
        path = os.path.join(root, filename)
        io.open(path, mode='w').close()
</code></pre>
<p>See the documentation: <a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer">https://docs.python.org/3/library/os.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>In Bash 4+ you can do the following to zero out all the files under a certain path:</p>
<pre class="lang-bash prettyprint-override"><code>shopt -s globstar
for file in /mnt/c/path/to/clean/**; do
    [[ -f $file ]] &amp;&amp; : &gt; "$file"
done
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For a windows <code>cmd</code> solution</p>
<pre class="lang-dos prettyprint-override"><code>for /r "x:\path\to\clean" %a in (*) do "&gt;%a" type nul
</code></pre>
<p>To run it from a batch file, percent signs need to be escaped (doubling them)</p>
<pre><code>for /r "x:\path\to\clean" %%a in (*) do "&gt;%%a" type nul
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Windows <a class="post-tag" href="/questions/tagged/cmd" rel="tag" title="show questions tagged 'cmd'">cmd</a>, you might want to use the <a href="http://ss64.com/nt/robocopy.html" rel="nofollow noreferrer" title="ROBOCOPY.exe"><code>robocopy</code> command</a>:</p>
<pre class="lang-cmd prettyprint-override"><code>rem // Create copy with zero-length files at temporary location:
robocopy "\path\to\your\dir" "\path\to\temp\dir" *.* /E /CREATE
rem // Move tree at temporary location onto original location:
robocopy "\path\to\temp\dir" "\path\to\your\dir" *.* /E /MOVE /IS
</code></pre>
</div>
<span class="comment-copy">If you delete folders, the directory structure won't be intact. Or did I misunderstand something?</span>
<span class="comment-copy">You may not have access to all files, so the script should handle an <code>IOError</code> exception (Python 3 <code>OSError</code>, but <code>IOError</code> is aliased) by logging the files that it fails to overwrite. For example,  it could fail with access denied if the file permissions don't grant write access. On Windows, it could fail with a sharing violation (winerror 32) if the file is already open without write sharing, or it could fail with access denied (winerror 5) if the file is flagged to be unlinked (deleted) from the directory.</span>
<span class="comment-copy">@eryksun yes, the OP should be aware of that. He can add an exception manager. Thank for your advice. He can also add a backup feature like the recycle bin.</span>
<span class="comment-copy">and If you don't have bash 4 installed:      find /mnt/c/path/to/clean/ -type f | xargs -n 1 -P 100 -I {} "bash -c ': &gt; {}'"</span>
<span class="comment-copy">@MosheZada: please explain to me why xargs is better than <code>-exec cp /dev/null {} \;</code>.</span>
<span class="comment-copy">Note that the <code>:</code> should be removed when you are really sure you want to perform the action.</span>
<span class="comment-copy">@WalterA  If you are refering to the <code>:</code> before the  <code>&gt; "$file"</code> redirection in the proposed answer, it is a noop and, while not required, it does not prevent overwriting the file to the best of my knowledge.</span>
<span class="comment-copy">@Fred Yes, you are right...</span>
