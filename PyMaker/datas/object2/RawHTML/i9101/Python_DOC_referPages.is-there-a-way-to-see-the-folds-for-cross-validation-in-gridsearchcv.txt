<div class="post-text" itemprop="text">
<p>I'm currently doing a 3-fold cv using GridSearchCV in Python to optimize hyperparameters. I'm just wondering if there is any way to see the indices of training and testing data in the cv used in GridSearchCV?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can if you don't want to shuffle the samples before folding during the CV-stage. You can pass an instance of <code>KFold</code> (or another CV-class) to the <code>GridSearchCV</code> constructor and access it's folds like this:</p>
<pre><code>import pandas as pd
import numpy as np
from sklearn.model_selection import GridSearchCV
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import KFold

params = {'penalty' : ['l1', 'l2'], 'C' : [1,2,3]}
grid = GridSearchCV(LogisticRegression(), params, cv=KFold(n_splits=3))

X = np.array([[1, 2], [3, 4], [1, 2], [3, 4], [5, 6], [7, 8]])

for train, test in grid.cv.split(X):
    print('TRAIN: ', train, ' TEST: ', test)
</code></pre>
<p>which prints:</p>
<pre><code>TRAIN:  [2 3 4 5]  TEST:  [0 1]
TRAIN:  [0 1 4 5]  TEST:  [2 3]
TRAIN:  [0 1 2 3]  TEST:  [4 5]
</code></pre>
<p>For non-shuffled CV, the folds are always the same, so you can be sure that these are the folds that get used during the grid-search.</p>
<p>If you want to shuffle the samples prior to folding, it is a little more complicated, because every call to <code>cv.split()</code> generates a different split. I can think of two ways:</p>
<ol>
<li><p>You can provide the CV-object with a fixed random_state, e.g. <code>KFold(n_splits=3, shuffle=True, random_state=42)</code>.</p></li>
<li><p>Before creating the <code>GridSearchCV</code> object, create a list from the <code>KFold</code> iterator.</p></li>
</ol>
<p>So, for the second approach, do:</p>
<pre><code>grid = GridSearchCV(LogisticRegression(), params, 
                    cv=list(KFold(n_splits=3, shuffle=True).split(X)))
</code></pre>
<p>Other than an iterator, a list is a fixed object and unless you manipulate it manually, it will keep the same values over all GridSearch iterations.</p>
</div>
<span class="comment-copy">Thank you so much for your help. It works with sklearn v0.18, but unfortunately I'm currently using v0.17. Is there any way to do this in v0.17?</span>
<span class="comment-copy">It should work the same, just keep in mind that you need to import <code>GridSearchCV</code>and <code>KFold</code> from <code>sklearn.grid_search</code> and <code>sklearn.cross_validation</code> respectively instead of from <code>model_selection</code>. There was a change in how the modules are organized in 0.18</span>
<span class="comment-copy">@Toterich - I am a bit surprised that your second way "Before creating the GridSearchCV object, create a list from the KFold iterator." works since according to the documentation (<a href="http://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html" rel="nofollow noreferrer">scikit-learn.org/stable/modules/generated/â€¦</a>) cv should be a None, int, generator, or iterable. Should passing a list to this be obvious given the documentation, or is this undocumented?</span>
<span class="comment-copy">Lists are iterables, as they implement <code>__iter__()</code>.  See <a href="https://docs.python.org/3/glossary.html" rel="nofollow noreferrer">here under "iterable"</a></span>
