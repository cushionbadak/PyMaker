<div class="post-text" itemprop="text">
<p>When I parse source code with the <code>ast</code> module, why is the <code>lineno</code> attribute of a <code>Name</code> inside a <code>FormattedValue</code> set to 1, even when the f-string isn't on line 1?</p>
<p>I'm trying to see which lines of the source code are included in a function definition, so I'm walking the abstract syntax tree nodes below the <code>FunctionDef</code> node. I collect all the <code>lineno</code> attributes into a set, and that tells me which lines are part of the function definition.</p>
<p>However, when <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">f-strings</a> appeared in Python 3.6, they somehow broke this technique. Here's an example of the problem:</p>
<pre><code>import ast

code = """\

f'x{y}'
"""

tree = ast.parse(code)

print(ast.dump(tree, include_attributes=True))
</code></pre>
<p>Here's the output from that script:</p>
<pre><code>Module(body=[Expr(value=JoinedStr(values=[Str(s='x', lineno=2, col_offset=0), FormattedValue(value=Name(id='y', ctx=Load(), lineno=1, col_offset=1), conversion=-1, format_spec=None, lineno=2, col_offset=0)], lineno=2, col_offset=0), lineno=2, col_offset=0)])
</code></pre>
<p>I know that's pretty unreadable, so here's the same output with some extra whitespace:</p>
<pre><code>Module(body=[Expr(value=JoinedStr(values=[
    Str(s='x', lineno=2, col_offset=0), 
    FormattedValue(value=Name(id='y',
                              ctx=Load(),
                              lineno=1,
                              col_offset=1),
                   conversion=-1,
                   format_spec=None,
                   lineno=2,
                   col_offset=0)], lineno=2, col_offset=0), lineno=2, col_offset=0)])
</code></pre>
<p>The only source code was on line 2, so what's with this part of the output?</p>
<pre><code>Name(id='y',
     ctx=Load(),
     lineno=1,
     col_offset=1)
</code></pre>
<p>I thought it might be the line number <em>within</em> the string, but when I try this, it still reports <code>lineno=1</code>.</p>
<pre><code>code = """\

f'''

x{y}'''
"""
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>After some research, it seems that f-strings are more powerful than I realized. Each set of braces isn't just a dictionary key as in previous versions of Python, it's a complete block of Python code. That means you can write Python expressions in the braces like this:</p>
<pre><code>f'x{y + z}'
</code></pre>
<p>With that understanding, it makes sense that the <code>lineno</code> value is the line number <em>within the braces</em>, not within the string or within the whole file. To test that theory, I tried this code, and the <code>lineno</code> changed to 3.</p>
<pre><code>code = """\

f'''x{

y}'''
"""
</code></pre>
<p>If I just ignore line numbers from <code>FormattedValue</code> nodes, my code works again.</p>
</div>
