<div class="post-text" itemprop="text">
<p>I have the following string <code>"2017-03-30 08:25:00CET"</code> which I want to convert to a datetime tz-aware object.</p>
<p>According <a href="https://stackoverflow.com/questions/13182075/how-to-convert-a-timezone-aware-string-to-datetime-in-python-without-dateutil">this SO question</a>, from python 3.2 it can be done using only <code>datetime</code> module. In addition, from the <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">documentation</a>, I see</p>
<blockquote>
<pre><code>%z |  UTC offset in the form +HHMM or -HHMM (empty string if the object is naive). |  (empty), +0000, -0400, +1030
%Z |  Time zone name (empty string if the object is naive).                        |  (empty), UTC, EST, CST
</code></pre>
</blockquote>
<p>So I try the following</p>
<pre><code>datetime.strptime(dep_dt, '%Y-%m-%d %H:%M:%S%Z')
</code></pre>
<p>I do not get any error, but then the object I get is not tz-aware</p>
<pre><code>datetime.datetime(2017, 3, 30, 8, 25)
</code></pre>
<p>On the other hand, if I convert my string to <code>"2017-03-30 08:25:00+0200"</code> and then convert it to an object with </p>
<p><code>datetime.strptime(dep_dt, '%Y-%m-%d %H:%M:%S%z')</code></p>
<p>I do get a tz-aware datetime:</p>
<pre><code>datetime.datetime(2017, 3, 30, 8, 25, tzinfo=datetime.timezone(datetime.timedelta(0, 7200)))
</code></pre>
<p>Any ideas of why it works with <code>%z</code> but not with <code>%Z</code>? What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Judging from the information given by <a href="https://docs.python.org/3.6/library/datetime.html#tzinfo-objects" rel="nofollow noreferrer">tzinfo</a>, the <code>%Z</code> does not work the way that you feed in a string like <code>"UTC"</code> and it will return a datetime instance with the correct timezone. </p>
<p><a href="http://pytz.sourceforge.net/" rel="nofollow noreferrer">pytz</a> provides a possible solution to your problem. However, the documentation says, that there is no guarentee that your timezone will be recognized by datetime and recommends working with UTC as long as possible. </p>
<p>Solution using <code>pytz</code>:</p>
<pre><code>from datetime import datetime
from pytz import timezone
dep_dt = '2017-03-30 08:25:00CET'
dt = datetime.strptime(dep_dt, '%Y-%m-%d %H:%M:%S%Z')
timezone(dep_dt[19:]).localize(dt)
</code></pre>
<p>Out:</p>
<pre><code>datetime.datetime(2017, 3, 30, 8, 25, tzinfo=&lt;DstTzInfo 'CET' CEST+2:00:00 DST&gt;)
</code></pre>
</div>
<span class="comment-copy">Relevant for you: <a href="http://stackoverflow.com/questions/1703546/parsing-date-time-string-with-timezone-abbreviated-name-in-python" title="parsing date time string with timezone abbreviated name in python">stackoverflow.com/questions/1703546/…</a> <a href="http://stackoverflow.com/questions/3305413/python-strptime-and-timezones" title="python strptime and timezones">stackoverflow.com/questions/3305413/…</a>.  Timezone names (such as <code>cet</code>) are ambiguous.  Your second example works because you specifically give the timezone offset <code>+0200</code>. use the parser within dateutil, or manually specify your timezone using tzinfo().</span>
<span class="comment-copy">Using Python 3.6, I get a <code>ValueError: time data '2017-03-30 08:25:00CET' does not match format '%Y-%m-%d %H:%M:%S%Z'</code> from executing <code>datetime.strptime("2017-03-30 08:25:00CET", '%Y-%m-%d %H:%M:%S%Z')</code>, which differs from what you say.</span>
<span class="comment-copy">@CharlesMorris , thanks for the links. I found the 2nd specially interesting. To me it does not make sense that in the documentation the possibility of using timezone names is given, but then it does not work because it is ambiguous.</span>
<span class="comment-copy"><a href="http://bugs.python.org/issue22377" rel="nofollow noreferrer">bugs.python.org/issue22377</a></span>
<span class="comment-copy">This is a known bug described here:  <a href="http://bugs.python.org/issue22377" rel="nofollow noreferrer">bugs.python.org/issue22377</a></span>
<span class="comment-copy">Does that mean that the documentation from <code>datetime</code> is just wrong?</span>
<span class="comment-copy">At least it is not very clear. There is a note explaining the behavior, but this does not make it clear either in my opinon: "%Z      If tzname() returns None, %Z is replaced by an empty string. Otherwise %Z is replaced by the returned value, which must be a string.  Changed in version 3.2: When the %z directive is provided to the strptime() method, an aware datetime object will be produced. The tzinfo of the result will be set to a timezone instance"</span>
<span class="comment-copy">I added a solution using pytz now.</span>
