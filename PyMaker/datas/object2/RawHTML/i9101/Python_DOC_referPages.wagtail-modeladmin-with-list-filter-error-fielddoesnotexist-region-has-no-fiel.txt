<div class="post-text" itemprop="text">
<p>I've got a model I'm exposing through Wagtail's <code>modeladmin</code> that works until I try to apply a <code>list_filter</code> including a ForeignKey. I've got a self-referencing model (to store Counties, Cities, and Towns) called Region that I'd like to be able to create a filter on by the <code>Parent</code> level.</p>
<p>I'm running Wagtail 1.8.1 on Django 1.10. Here's the model:</p>
<pre><code>class Region(models.Model):
    """
    Tree of regions and sub-regions.
    """

    name = models.CharField(max_length=255)
    parent = models.ForeignKey(
        'Region',
        blank=True,
        null=True,
    )

    class Meta:
        unique_together = ('name', 'parent')

    def __str__(self):
        return '{0}'.format(
            self.name,
        )
</code></pre>
<p>And the <code>ModelAdmin</code> from <code>wagtail_hooks.py</code>:</p>
<pre><code>class RegionAdmin(ModelAdmin):
    model = Region
    menu_icon = 'doc-full-inverse'
    empty_value_display = 'ROOT'
    list_display = ('parent', 'name')
    list_filter = ('parent')


modeladmin_register(RegionAdmin)
</code></pre>
<p>It works fine if I comment out the <code>list_filter</code> line in the class <code>RegionAdmin</code>. The documentation says it can take a <code>ForeignKey</code> in the list. Am I missing something obvious? Stack trace is here:</p>
<pre><code>Traceback (most recent call last):
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/core/handlers/exception.py", line 39, in inner
    response = get_response(request)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/views/decorators/cache.py", line 43, in _cache_controlled
    response = viewfunc(request, *args, **kw)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/wagtail/wagtailadmin/decorators.py", line 24, in decorated_view
    return view_func(request, *args, **kwargs)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/wagtail/contrib/modeladmin/options.py", line 350, in index_view
    return view_class.as_view(**kwargs)(request)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/utils/decorators.py", line 67, in _wrapper
    return bound_func(*args, **kwargs)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/contrib/auth/decorators.py", line 23, in _wrapped_view
    return view_func(request, *args, **kwargs)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/utils/decorators.py", line 63, in bound_func
    return func.__get__(self, type(self))(*args2, **kwargs2)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/wagtail/contrib/modeladmin/views.py", line 249, in dispatch
    self.queryset = self.get_queryset(request)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/wagtail/contrib/modeladmin/views.py", line 554, in get_queryset
    filters_use_distinct) = self.get_filters(request)
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/wagtail/contrib/modeladmin/views.py", line 381, in get_filters
    field_path)[-1]
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/contrib/admin/utils.py", line 485, in get_fields_from_path
    fields.append(parent._meta.get_field(piece))
  File "/home/vagrant/.virtualenvs/sepia/lib/python3.5/site-packages/django/db/models/options.py", line 619, in get_field
    raise FieldDoesNotExist('%s has no field named %r' % (self.object_name, field_name))
django.core.exceptions.FieldDoesNotExist: Region has no field named 'p'
</code></pre>
<p>Thanks for any help or ideas!</p>
</div>
<div class="post-text" itemprop="text">
<p>You are missing a comma:</p>
<pre><code>list_filter = ('parent',)
</code></pre>
<p>Without the comma, the parentheses are ignored and django will be iterating the string, and not a tuple (because there is no tuple!), hence the attempt to access field <code>p</code>.</p>
<p>From the <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>a tuple with one item is constructed by following a value with a comma (it is not sufficient to enclose a single value in parentheses). Ugly, but effective. </p>
</blockquote>
</div>
<span class="comment-copy">Excuse me while I go kick myself for about an hour! Thank you.</span>
<span class="comment-copy">Excused, Sir! ;-) Be gentle!</span>
