<div class="post-text" itemprop="text">
<p>I am trying to run the ffmpeg command to record the screen using the <code>subprocess</code> module. Everything is fine with this line:</p>
<pre><code>subprocess.Popen(["ffmpeg", "-video_size", GivenSizeOfScreen, "-framerate", GivenRateOfFrames, "-f", "x11grab", "-i", ":0.0", "-q", GivenQuality, GivenPathAndName])
</code></pre>
<p><code>GivenPathAndName</code> is something like <code>file:///home/user/Videos/test.mp4</code>. As I said, it's working. (It is in this form because I am getting the folder URI from a GTK widget).</p>
<p>However, the problem is when I select a folder with a white spaces. Like <code>file:///home/user/Documents/New Folder</code>. This will give me the following error in terminal:</p>
<pre><code>file:///home/user/Documents/New%20Folder/test.mp4: No such file or directory
</code></pre>
<p>I know that this is because of bash misinterpreting the whitespace. And that I can actually run it with putting <code>\</code> before the whitespace to solve it. However, I couldn't manage to find a way to do that from Python sending it to Bash.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is nothing about the bash or python in cooperation with the bash. Here is a little example that shows that:</p>
<pre><code>import sys
import os

for arg in sys.argv:  
    print arg
</code></pre>
<p>Starting this little script with the bash it'll give you the following:</p>
<pre><code>$ ./arg_test.py this\ is\ a\ test
./arg_test.py
this is a test

$ ./arg_test.py "this is a test"
./arg_test.py
this is a test
</code></pre>
<p>And to be sure about the <code>file://</code>.</p>
<pre><code>$ ./arg_test.py "file:///test test/"
./arg_test.py
file:///test test/
</code></pre>
<p>So the problem must be with how you get <code>GivenPathAndName</code> from your script or other parts of the program. In order to decode this url encoding use <code>urllib.parse.unquote()</code> for Python3 or <code>urllib.unquote()</code> for Python2.</p>
<pre><code>import urllib
subprocess.Popen([
    "ffmpeg", 
    "-video_size", GivenSizeOfScreen, 
    "-framerate", GivenRateOfFrames, 
    "-f", "x11grab", 
    "-i", ":0.0", 
    "-q", GivenQuality, 
    urllib.parse.unquote(GivenPathAndName)
])
</code></pre>
</div>
<span class="comment-copy">not sure it's bash since you didn't set <code>shell=True</code>. Can you try without the <code>file://</code> prefix? I don't see why it wouldn't work.</span>
<span class="comment-copy">It looks like ffmpeg is accepting URLs, but that support is buggy.  Bash isn't involved here at all; the process is directly started by Python without an intermediate shell.</span>
<span class="comment-copy">@Jean-Fran√ßoisFabre I didn't want to use shell=True because it's a security danger. Removing / putting file:// didn't change anything.</span>
<span class="comment-copy">Try calling <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.unquote" rel="nofollow noreferrer"><code>urllib.parse.unquote()</code></a> before passing the file name to ffmpeg.  (Or the corresponding function if you are on Python 2.)</span>
<span class="comment-copy">@MHS Can you just rename that folder as <code>NewFolder</code>? :)</span>
