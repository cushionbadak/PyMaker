<div class="post-text" itemprop="text">
<p>I wish to have a list like this:</p>
<pre><code>[1,5,9,13,17,21,25,29,33,37,…]
</code></pre>
<blockquote>
<p>(1) How to quickly declare it?</p>
<p>(2) How to do it with “yield”?</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>maybe you can try this:</p>
<pre><code>def generate_list(size, interval):
    flag = 0
    number = 0
    while True:
        if flag &gt;= size:
            break
        number += 1
        if number % interval == 1:
            flag += 1
            yield number


def print_list():
    for i in generate_list(100, 4):
        print i


print_list()
</code></pre>
<p>if you don't wanna use key word <code>yield</code>, you can use this line program:</p>
<pre><code>print list(range(1,401,4))
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#func-range</a></span>
<span class="comment-copy">You can use <code>list(range(1,401,4))</code>. range returns a generator, but you can write your own generator by using <code>yield</code>.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/42059247/python-how-to-calculate-a-summary-of-a-list-without-creating-this-whole-list-fi">Python: how to calculate a summary of a list without creating this whole list first?</a></span>
