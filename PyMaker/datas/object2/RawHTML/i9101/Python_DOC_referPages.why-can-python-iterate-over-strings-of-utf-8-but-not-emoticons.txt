<div class="post-text" itemprop="text">
<p>In Python 2.7:</p>
<pre><code>In [2]: utf8_str = '\xf0\x9f\x91\x8d'
In [3]: print(utf8_str)
üëç
In [4]: unicode_str = utf8_str.decode('utf-8')
In [5]: print(unicode_str)
üëç 
In [6]: unicode_str
Out[6]: u'\U0001f44d'
In [7]: len(unicode_str)
Out[7]: 2
</code></pre>
<p>Since <code>unicode_str</code> only contains a single unicode code point (0x0001f44d), why does <code>len(unicode_str)</code> return 2 instead of 1?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your Python binary was compiled with UCS-2 support (a <em>narrow</em> build) and internally anything outside of the BMP (Basic Multilingual Plane) is represented using a <a href="https://en.wikipedia.org/wiki/UTF-16#U.2B10000_to_U.2B10FFFF" rel="noreferrer">surrogate pair</a>.</p>
<p>That means such codepoints show up as 2 characters when asking for the length.</p>
<p>You'll have to recompile your Python binary to use UCS-4 instead if this matters (<code>./configure --enable-unicode=ucs4</code> will enable it), or upgrade to Python 3.3 or newer, where <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-393" rel="noreferrer">Python's Unicode support was overhauled</a> to use a variable-width Unicode type that switches between ASCII, UCS-2 and UCS-4 as required by the codepoints contained.</p>
<p>On Python versions 2.7 and 3.0 - 3.2, you can detect what kind of build you have by inspecting the <a href="https://docs.python.org/2/library/sys.html#sys.maxunicode" rel="noreferrer"><code>sys.maxunicode</code> value</a>; it'll be <code>2^16-1 == 65535 == 0xFFFF</code> for a narrow UCS-2 build, <code>1114111 == 0x10FFFF</code> for a wide UCS-4 build. In Python 3.3 and up it is always set to 1114111.</p>
<p>Demo:</p>
<pre class="lang-sh prettyprint-override"><code># Narrow build
$ bin/python -c 'import sys; print sys.maxunicode, len(u"\U0001f44d"), list(u"\U0001f44d")'
65535 2 [u'\ud83d', u'\udc4d']
# Wide build
$ python -c 'import sys; print sys.maxunicode, len(u"\U0001f44d"), list(u"\U0001f44d")'
1114111 1 [u'\U0001f44d']
</code></pre>
</div>
<span class="comment-copy">you can use <code>sys.maxunicode</code> on Python 3 too. It is implied but it is worth pointing out it explicitly that <code>len(u'\U0001f44d') == 1</code> on Python 3.3+ (or a wide Python 2 build)</span>
<span class="comment-copy">@J.F.Sebastian: sure, but as of 3.3 it is a constant there, as Python 3.3 and up transparently switch between ASCII, UCS-2 an UCS-4 storage for strings as required. And you really don't want to use Python &lt; 3.3 anyway.</span>
<span class="comment-copy">There is no narrow/wide distinction on Python 3.3+ (the internal representation is not exposed -- you don't care what python uses internally). The point that you could use <code>sys.maxunicode</code> regardless of the version.</span>
<span class="comment-copy">I never said there was such a distinction.</span>
<span class="comment-copy">Yes, that is why <code>narrow_mode = (sys.maxunicode &lt; 0x10ffff)</code> could be used on any version (both Python 2 and 3).</span>
