<div class="post-text" itemprop="text">
<p>I have a column with strings that look like below. They are combination of IP Address and system name. 
I want to strip the IP address part of the string, which is everything before the first hyphen. </p>
<pre><code>str = "12.345.678.9-abcd1_0-def-ghi-4567"
</code></pre>
<p>So far, I've tried below,</p>
<pre><code>str.replace('\D+', '') 
str.lstrip('\D+', '')
str.rstrip('\D+', '') 
</code></pre>
<p>'I want to delete everything until the first hyphen.' This sounds like a simple task but I'm experiencing a learning curve. Please help! </p>
</div>
<div class="post-text" itemprop="text">
<p>If all your strings are formatted in that same way, you could just split the string on the hyphen using the <code>str.split()</code> method, remove the first item of the resulting list, and then use the <code>str.join()</code> method to combine it again like so:</p>
<pre><code>string = "12.345.678.9-abcd1_0-def-ghi-4567".split("-")[1:]
&gt;&gt;&gt; ['abcd1_0', 'def', 'ghi', '4567']
joined_str = "-".join(string)
&gt;&gt;&gt; abcd1_0-def-ghi-4567
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer"><code>find()</code></a> the first <code>'-'</code> and then take a slice from that point on:</p>
<pre><code>&gt;&gt;&gt; s = '12.345.678.9-abcd1_0-def-ghi-4567'
&gt;&gt;&gt; s[s.find('-')+1:]
'abcd1_0-def-ghi-4567'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A regex-based solution to the collection:</p>
<pre><code>re.findall(r'[^-]+-(.+)',s)[0]
#'abcd1_0-def-ghi-4567'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:
    import re
    m = re.search('\d+-(.*)', s).group(1)</p>
<p>You get
    'abcd1_0-def-ghi-4567'</p>
</div>
<span class="comment-copy">Worked pretty well with str.split() method. Below is what I used. df['ID'].str.split('-',1).str[1]  Other option was, df['ID']=df['ID'].apply(lambda x: pd.Series(x.lstrip('0123456789.-')))</span>
