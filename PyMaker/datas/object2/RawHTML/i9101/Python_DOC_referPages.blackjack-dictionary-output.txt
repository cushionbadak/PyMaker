<div class="post-text" itemprop="text">
<pre><code>def get_card_value(s):
    s = ' '
    cards ={'A':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'10':10,'J':10,'Q':10,'K':10}
    for s in cards.keys():
        return cards.values(s)
    else:
        raise ValueError("No card found")

get_card_value(A)
</code></pre>
<p>I am making a blackjack game and am stuck on the first part where I need to define a function that gets the integer points for the card <code>s</code>. So input is the string value of card and the output should be the integer score of the card. </p>
<p>Can anyone help with what I've written?</p>
</div>
<div class="post-text" itemprop="text">
<p>Accessing values in a dictionary is not done via the <code>values()</code> method, but rather via bracket-notation (eg. <code>my_dictionary[key]</code>). See <a href="https://docs.python.org/3/library/stdtypes.html#typesmapping" rel="nofollow noreferrer"><code>d[key]</code> in the documentation</a>.</p>
<hr/>
<p>Additionally, you could try just making a <code>dict</code> instead of a full-blown function:</p>
<pre><code>&gt;&gt;&gt; card_points = {'A': 1, '2': 2, '3': 3, '4': 4, '5':5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 10, 'J': 10, 'Q': 10, 'K': 10}
&gt;&gt;&gt; card_points['A']
1
&gt;&gt;&gt; card_points['5']
5
</code></pre>
<p>If you <em>need</em> it to be a function you can easily wrap this dictionary:</p>
<pre><code>def get_card_value(s):
    card_points = {'A': 1, '2': 2, '3': 3, '4': 4, '5':5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 10, 'J': 10, 'Q': 10, 'K': 10}
    try:
        return card_points[s]
    except KeyError:
        raise ValueError("No card found")
</code></pre>
<p>Note: <code>KeyError</code> is the exception raised when trying to access a non-existent key in a dictionary, so if we encounter one of those, we can choose to instead raise our custom <code>ValueError</code> exception.</p>
<hr/>
<p>Or if you want to get fancy (read: save some keystrokes):</p>
<pre><code>&gt;&gt;&gt; card_points = dict({str(i): i for i in range(2, 11)}, A=1, J=10, Q=10, K=10)
</code></pre>
<p>In the snippet above, <code>{str(i): i for i in range(2, 11)}</code> uses a <a href="https://stackoverflow.com/questions/14507591/python-dictionary-comprehension">dictionary comprehension</a> to create a dictionary mapping string values for the integers 2-10 to their numeric values. For the non-numeric cards, I pass them in as <a href="https://stackoverflow.com/questions/1769403/understanding-kwargs-in-python">keyword arguments</a>. Luckily, <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer">python's built-in <code>dict</code> constructor</a> can handle both of these at once! </p>
<p>So if you are just beginning you might want to use the first form rather than leverages a bunch of python's advanced features :)</p>
</div>
<div class="post-text" itemprop="text">
<p>I recommend writing a dictionary outside the function but if you want it inside try this</p>
<pre><code>def get_card_value(s): 
    cards = {'A':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'10':10,'J':10,'Q':10,'K':10} 
    if s in cards:
        return cards[s]
    else: 
        raise ValueError("No card found")
</code></pre>
<p>and then try it like this</p>
<pre><code>print(get_card_value("4"))
print(get_card_value("Y"))
</code></pre>
<p>Keys in dictionary are strings so you have to use function get_card_value using strings</p>
</div>
<span class="comment-copy">I'd take a close look at all the <a href="https://docs.python.org/3/library/stdtypes.html#typesmapping" rel="nofollow noreferrer">different operations dictionaries support</a>. Compare those with what you've written. Do you see anything in those operations that might work better for what you are trying to do?</span>
<span class="comment-copy">One thing to consider is that you are overwriting the value of <code>s</code> by assigning it an empty string.</span>
<span class="comment-copy">@José: Actually it's assigning a string with one space character in it to <code>s</code>—but otherwise the point you make is accurate. In addition, the card rank argument passed to the function should be a string: i.e. <code>get_card_value('A')</code> and the membership test should just be <code>for s in cards:</code>.</span>
<span class="comment-copy">Hint: what's <code>cards['A']</code> going to equal in the function?</span>
<span class="comment-copy">It says name 'A' is not defined</span>
<span class="comment-copy">You method is great but I want to make a function that does this...</span>
<span class="comment-copy">@Cindy see the <code>get_card_values</code> code block for how to wrap it in a function</span>
