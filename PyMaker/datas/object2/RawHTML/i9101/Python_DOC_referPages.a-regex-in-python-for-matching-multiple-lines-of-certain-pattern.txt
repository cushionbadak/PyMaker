<div class="post-text" itemprop="text">
<p>Hi I am trying to build a multiline regex to group a line followed by lines beginning with at least one white space.  For example</p>
<pre><code>interface Ethernet 1/1

      ip address &lt;&gt;
      mtu &lt;&gt;

ip tcp path-mtu-discovery

router bgp 100

     network 1.1.1.0
</code></pre>
<p>How to build a regex that would group "interface ethertnet 1/1" and its subconfig into one group, and "ip tcp path-mtu-discovery" into another group
and the bgp and it's subcommands into another group.  In other words, a line beginning with non-whitespace character should get grouped with, if it is followed by, lines beginning with whitespaces.  Two lines beginning with non-whitespace character should be two different groups.</p>
<p>I tried some of the regex already discussed, but that doesn't help.</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; lines = '''interface Ethernet 1/1
...
...       ip address &lt;&gt;
...       mtu &lt;&gt;
...
... ip tcp path-mtu-discovery
...
... router bgp 100
...
...      network 1.1.1.0
... '''
&gt;&gt;&gt; for x in re.findall(r'^\S.*(?:\n(?:[ \t].*|$))*', lines, flags=re.MULTILINE):
...     print(repr(x))
...
'interface Ethernet 1/1\n\n      ip address &lt;&gt;\n      mtu &lt;&gt;\n'
'ip tcp path-mtu-discovery\n'
'router bgp 100\n\n     network 1.1.1.0\n'
</code></pre>
<ul>
<li><code>^\S.+</code>: matches lines that start with non-space character.</li>
<li><code>\n[ \t].*</code>: matches lines start with space character.</li>
<li><code>\n$</code>: matches empty line</li>
<li><code>\n(?:[ \t].*|$)</code>: matches lines start with space or (<code>|</code>), empty line</li>
</ul>
<hr/>
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>lines = '''interface Ethernet 1/1

      ip address &lt;&gt;
      mtu &lt;&gt;

ip tcp path-mtu-discovery

router bgp 100

     network 1.1.1.0
'''

class LineState:
    def __init__(self):
        self.state = 0
    def __call__(self, line):
        # According to the return value of this
        # method, lines are grouped; lines of same values are
        # grouped together.
        if line and not line[0].isspace():
            # Change state on new config section
            self.state += 1
        return self.state

import itertools
for _, group in itertools.groupby(lines.splitlines(), key=LineState()):
    print(list(group))
</code></pre>
<p>prints:</p>
<pre><code>['interface Ethernet 1/1', '', '      ip address &lt;&gt;', '      mtu &lt;&gt;', '']
['ip tcp path-mtu-discovery', '']
['router bgp 100', '', '     network 1.1.1.0']
</code></pre>
</div>
<span class="comment-copy">maybe try do it without regex - line by line.</span>
<span class="comment-copy">Thanks a million, exactly what I have been looking for.</span>
