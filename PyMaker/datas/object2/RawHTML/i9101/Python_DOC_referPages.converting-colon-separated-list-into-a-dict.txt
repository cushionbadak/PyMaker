<div class="post-text" itemprop="text">
<p>I wrote something like this to convert comma separated list to a dict.</p>
<pre><code>def list_to_dict( rlist ) :
    rdict = {}
    i = len (rlist)
    while i:
        i = i - 1
        try :
            rdict[rlist[i].split(":")[0].strip()] = rlist[i].split(":")[1].strip()
        except :
            print rlist[i] + ' Not a key value pair'
            continue


    return rdict
</code></pre>
<p>Isn't there a way to </p>
<pre><code>for i, row = enumerate rlist
    rdict = tuple ( row ) 
</code></pre>
<p>or something?</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your requirements correctly, then you can use the following one-liner.</p>
<pre><code>def list_to_dict(rlist):
    return dict(map(lambda s : s.split(':'), rlist))
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; list_to_dict(['alpha:1', 'beta:2', 'gamma:3'])
{'alpha': '1', 'beta': '2', 'gamma': '3'}
</code></pre>
<p>You might want to <code>strip()</code> the keys and values after splitting in order to trim white-space.</p>
<pre><code>return dict(map(lambda s : map(str.strip, s.split(':')), rlist))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do:</p>
<pre><code>&gt;&gt;&gt; li=['a:1', 'b:2', 'c:3']
&gt;&gt;&gt; dict(e.split(':') for e in li)
{'a': '1', 'c': '3', 'b': '2'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You mention both colons and commas so perhaps you have a string with key/values pairs separated by commas, and with the key and value in turn separated by colons, so:</p>
<pre><code>def list_to_dict(rlist):
    return {k.strip():v.strip() for k,v in (pair.split(':') for pair in rlist.split(','))}

&gt;&gt;&gt; list_to_dict('a:1,b:10,c:20')
{'a': '1', 'c': '20', 'b': '10'}
&gt;&gt;&gt; list_to_dict('a:1, b:10, c:20')
{'a': '1', 'c': '20', 'b': '10'}
&gt;&gt;&gt; list_to_dict('a   :    1       , b:    10, c:20')
{'a': '1', 'c': '20', 'b': '10'}
</code></pre>
<p>This uses a dictionary comprehension iterating over a generator expression to create a dictionary containing the key/value pairs extracted from the string. <code>strip()</code> is called on the keys and values so that whitespace will be handled.</p>
</div>
<span class="comment-copy">Can you give example of the input and expected output? A colon separated list doesn't make a lot of sense, lists are separated by being a collection of distinct elements, they do not need a delimiter.</span>
<span class="comment-copy"><code>{item.split(":") for item in rlist if ":" in item}</code>. If that doesn't work maybe put <code>tuple(item.split(":"))</code>. If not this is a lazy slow way<code>{item.split(":")[0]: item.split(":")[1] for item in rlist}</code> Also since this is converting a string to a dictionary look into <code>ast.literaleval</code> and json.</span>
<span class="comment-copy">â€¦or perhaps you are attempting to read a CSV-formatted file, in which case using the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a> is probably a better way.</span>
<span class="comment-copy">what is ur input ?</span>
<span class="comment-copy">how to strip with that split ?</span>
<span class="comment-copy">@Victor There is more than one way to do it but personally, I'd just apply another <code>map()</code>. I've edited my answer accordingly.</span>
