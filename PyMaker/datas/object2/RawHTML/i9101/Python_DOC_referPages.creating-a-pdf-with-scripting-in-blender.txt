<div class="post-text" itemprop="text">
<p>I am an all around newbie here (new to Blender, new to Python, and new to coding in general) so please bear with me.</p>
<p>I have a Blender script that generates a specific geometry and then renders an image. In the same script, I would then like to create a PDF file containing that image.</p>
<p>I have two different pdf generation scripts that work perfectly fine outside of Blender (I am using Spyder) but if I run the same code in Blender, I run into problems.</p>
<p>Here is the first one:</p>
<pre><code>import datetime
from reportlab.lib.enums import TA_JUSTIFY
from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Image
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import mm
import os.path

formatted_date = datetime.date.today()
date_str = str(formatted_date)
full_name = "Nachname, Vorname"

fpath = "I:/MedTech_Projekte/NAM/Studenten/WenokorRebecca_SA/Spyder Scripts/"

fname = full_name + "_" + date_str
fcount = 0
fcounts = fname + "_" + str(fcount) + ".pdf"
while os.path.isfile(fcounts)==True:
    fcount += 1
    fcounts = fname + "_" + str(fcount) + ".pdf"
    print(fcounts)
fname = fcounts


doc = SimpleDocTemplate(fpath + fname,pagesize=letter,
                        rightMargin=72,leftMargin=72,
                        topMargin=72,bottomMargin=18)
Story=[]

KRIlogo = fpath + "Klinikum_rechts_der_Isar_logo.png" 
lg_res_x = 1920
lg_res_y = 1080
lg_w = 50
lg_h = lg_w * lg_res_y/lg_res_x
lg = Image(KRIlogo, lg_w*mm, lg_h*mm)
lg.hAlign = 'RIGHT'
Story.append(lg)

wireIm = fpath + "20170102_red_20170207-092526.png"
bl_res_x = 1920
bl_res_y = 1080
im_w = 60
im_h = im_w * bl_res_y/bl_res_x
im = Image(wireIm, im_w*mm, im_h*mm)
im.hAlign = 'LEFT'
Story.append(im)

styles=getSampleStyleSheet()
styles.add(ParagraphStyle(name='Justify', alignment=TA_JUSTIFY))
ntext = '&lt;font size=12&gt;%s&lt;/font&gt;' % full_name
dtext = '&lt;font size=12&gt;%s&lt;/font&gt;' % date_str

Story.append(Paragraph(ntext, styles["Normal"]))
Story.append(Spacer(1, 12))
Story.append(Paragraph(dtext, styles["Normal"]))
Story.append(Spacer(1, 12)) 

doc.build(Story)
</code></pre>
<p>Here is the second one:</p>
<pre><code>import datetime
from reportlab.pdfgen import canvas
from reportlab.lib.units import mm
from reportlab.lib.utils import ImageReader
import os.path

formatted_date = datetime.date.today()
date_str = str(formatted_date)
full_name = "Nachname, Vorname"

fpath = "I:/MedTech_Projekte/NAM/Studenten/WenokorRebecca_SA/Spyder Scripts/"

fname = full_name + "_" + date_str
fcount = 0
fcounts = fname + "_" + str(fcount) + ".pdf"
while os.path.isfile(fcounts)==True:
    fcount += 1
    fcounts = fname + "_" + str(fcount) + ".pdf"
    print(fcounts)
fname = fcounts

wireIm = fpath + "20170102_red_20170207-092526.png"
bl_res_x = 1920
bl_res_y = 1080
im_w = 60
im_h = im_w * bl_res_y/bl_res_x

WireImage = ImageReader(wireIm)

c = canvas.Canvas(fname)
c.drawImage(WireImage, 10, 10, width=60*mm)
c.showPage()
c.save()
</code></pre>
<p>Both scripts give me pretty much the same error: </p>
<pre><code>Traceback (most recent call last):
  File "I:\MedTech_Projekte\NAM\Studenten\WenokorRebecca_SA\BLENDER CODE\2016121
9 - Present\20170109 Face Align.blend\Text.002", line 58, in &lt;module&gt;
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\platypus\doctemplate.py", line 1200, in build
    BaseDocTemplate.build(self,flowables, canvasmaker=canvasmaker)
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\platypus\doctemplate.py", line 956, in build
    self.handle_flowable(flowables)
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\platypus\doctemplate.py", line 821, in handle_flowable
    if frame.add(f, canv, trySplit=self.allowSplitting):
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\platypus\frames.py", line 167, in _add
    w, h = flowable.wrap(aW, h)
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\platypus\flowables.py", line 484, in wrap
    return self.drawWidth, self.drawHeight
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\platypus\flowables.py", line 478, in __getattr__
    self._setup_inner()
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\platypus\flowables.py", line 442, in _setup_inner
    img = self._img
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\platypus\flowables.py", line 472, in __getattr__
    self._img = ImageReader(self._file)
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\lib\utils.py", line 807, in __init__
    annotateException('\nfileName=%r identity=%s'%(fileName,self.identity()))
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\lib\utils.py", line 1387, in annotateException
    rl_reraise(t,v,b)
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\lib\utils.py", line 144, in rl_reraise
    raise v
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\lib\utils.py", line 801, in __init__
    annotateException('\nImaging Library not available, unable to import bitmaps
 only jpegs\nfileName=%r identity=%s'%(fileName,self.identity()))
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\lib\utils.py", line 1387, in annotateException
    rl_reraise(t,v,b)
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\lib\utils.py", line 144, in rl_reraise
    raise v
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\lib\utils.py", line 799, in __init__
    self._width,self._height,c=readJPEGInfo(self.fp)
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\pdfbase\pdfutils.py", line 243, in readJPEGInfo
    x = struct.unpack('B', image.read(1))
struct.error: unpack requires a bytes object of length 1
Imaging Library not available, unable to import bitmaps only jpegs
fileName='I:/MedTech_Projekte/NAM/Studenten/WenokorRebecca_SA/Spyder Scripts/Kli
nikum_rechts_der_Isar_logo.png' identity=[ImageReader@0xac09ef0 filename='I:/Med
Tech_Projekte/NAM/Studenten/WenokorRebecca_SA/Spyder Scripts/Klinikum_rechts_der
_Isar_logo.png']
fileName='I:/MedTech_Projekte/NAM/Studenten/WenokorRebecca_SA/Spyder Scripts/Kli
nikum_rechts_der_Isar_logo.png' identity=[ImageReader@0xac09ef0 filename='I:/Med
Tech_Projekte/NAM/Studenten/WenokorRebecca_SA/Spyder Scripts/Klinikum_rechts_der
_Isar_logo.png']
Error: Python script fail, look in the console for now...
</code></pre>
<p>When I use jpeg instead of png, I get the following:</p>
<pre><code>Bibliotheken/Dokumente/Spyder Scripts/20170102_red_20170207-092526.jpeg
Traceback (most recent call last):
  File "I:\MedTech_Projekte\NAM\Studenten\WenokorRebecca_SA\BLENDER CODE\2016121
9 - Present\20170109 Face Align.blend\Text.001", line 37, in &lt;module&gt;
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\pdfgen\canvas.py", line 1237, in save
    self._doc.SaveToFile(self._filename, self)
  File "C:\Program Files\Blender Foundation\Blender\2.78\python\lib\site-package
s\reportlab\pdfbase\pdfdoc.py", line 218, in SaveToFile
    f = open(filename, "wb")
PermissionError: [Errno 13] Permission denied: 'Nachname, Vorname_2017-02-10_0.p
df'
Error: Python script fail, look in the console for now...
</code></pre>
<p>A lot of online forums mention the need for PIL and/or pillow when working with images. I don't fully understand how I would use those libraries in my code, but if the code works without them in Spyder, I don't see why it would all of a sudden need them in Blender. </p>
<p>Any help is very much appreciated!!! Feel free to ask for more information if my question is not clear :)</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Python provides an environment that allows you to run python code, the standard install contains the ability to read files and print text to the console running the python script, among a variety of other things.</p>
<p>To use functionality that isn't included with the standard python install we can install and use third party modules, the <a href="https://pypi.python.org/pypi/reportlab/3.3.0" rel="nofollow noreferrer">reportlab</a> module that you are using to create pdf's is an example of a third party module. The reportlab module knows how to create a pdf file, if you want it to add an image to the pdf then it will use another module that knows how to read image files. If a module used to read images is not available then it can't get the image information needed to add the image to the pdf but it can still create pdf's without images.</p>
<p>When you install python, the main program and the various modules are installed into specific places that can be found when needed. An installation of blender contains it's own copy of python and it's standard library, which isn't setup to use any normal installation of python that you may have. As you have found, you can manually add items to blender's version of python but the failure within blender of a script that works in spyder (which is using the standard installation of python) indicates you have missed something.</p>
<p>The second error is due to permissions that prevent a normal user writing to the applications folder, this happens as you are only specifying a filename which leads to trying to create the file in the current directory. You should be able to fix this error by using a full path to the target file instead of just the filename.</p>
<p>You may want to look at the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">subprocess module</a> to run your pdf creation script externally from blender, passing the location of the image created with blender as an argument. This will let you run your python script to automate the tasks in blender, and do the pdf generation in the same setup that you are using within spyder.</p>
</div>
<div class="post-text" itemprop="text">
<p>In your terminal type</p>
<pre><code>sudo gnome-terminal
</code></pre>
<p>This will give you root access and then try running the code</p>
</div>
<span class="comment-copy">Can you post your full <code>Traceback</code> here ?</span>
<span class="comment-copy">Just post the full error message and we will trim it down if necessary</span>
<span class="comment-copy">added the error message :)</span>
<span class="comment-copy">When you tried to open a file with write permission there.  Please check the permission of the file, <code>Nachname, Vorname_2017-02-10_0.p df</code>.</span>
<span class="comment-copy">@RahulKP I just tried changing the permission and unfortunately it did not change anything</span>
<span class="comment-copy">Thank you! I had no idea the subprocess module existed and I think it will be very helpful</span>
<span class="comment-copy">However, I'm not having much luck using it. As I have a very large amount of code in Blender, and only a small portion that I want to run outside of Blender, I am trying to open Spyder and run a script.</span>
<span class="comment-copy">Sorry for all the comments, I keep pressing enter...anyway, when I use subprocess.Popen([path_to_spyder, path_to_file]) or subprocess.run([path_to_spyder, path_to_file]), Spyder opens, but the file does not open or run.</span>
<span class="comment-copy">Correction: The file opens, but does not run</span>
<span class="comment-copy">Also, I don't have to use Spyder, it's just the only other environment I'm used to working in. If another environment is simpler/better in this case, I'm open to suggestions</span>
