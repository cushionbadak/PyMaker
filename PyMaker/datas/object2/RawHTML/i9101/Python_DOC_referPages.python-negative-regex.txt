<div class="post-text" itemprop="text">
<p>I have a string such as:</p>
<pre><code>s = "The code for the product is A8H4DKE3SP93W6J and you can buy it here."
</code></pre>
<p>The text in this string will not always be in the same format, it will be dynamic, so I can't do a simple find and replace to obtain the product code.</p>
<p>I can see that:</p>
<pre><code>re.sub(r'A[0-9a-zA-Z_]{14} ', '', s)
</code></pre>
<p>will get ride of the product code. How do I go about doing the opposite of this, i.e. deleting all of the text, apart from the product code? The product code will always be a 15 character string, starting with the letter A.</p>
<p>I have been racking my brain and Googling to find a solution, but can't seem to figure it out.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of substituting the rest of the string, use <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search()</code></a> to search for the product number:</p>
<pre><code>In [1]: import re

In [2]: s = "The code for the product is A8H4DKE3SP93W6J and you can buy it here."

In [3]: re.search(r"A[0-9a-zA-Z_]{14}", s).group()
Out[3]: 'A8H4DKE3SP93W6J'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In regex, you can match on the portion you want to keep for substituting by using braces around the pattern and then referring to it in the sub-pattern with backslash followed by the index for that matching portion. In the code below, "(A[0-9A-Za-z_]{14})" is the portion you want to match, and you can substitute in the resulting string using "\1".</p>
<pre><code>re.sub(r'.*(A[0-9A-Za-z_]{14}).*', r'\1', s)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3.1/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code></a></span>
<span class="comment-copy">Just extract what you want to keep and discard the rest of the string.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/7752551/python-regex-findall">Python regex findall</a></span>
<span class="comment-copy">Yup, that's sorted it out, thanks!!</span>
