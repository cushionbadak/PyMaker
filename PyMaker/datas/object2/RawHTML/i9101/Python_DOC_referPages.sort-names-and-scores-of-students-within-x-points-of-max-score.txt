<div class="post-text" itemprop="text">
<p>I have a csv file with this format that contains one column with last names, another column with first names, and another column with averages.</p>
<pre><code>Word1       Word2        Points
World       Hello        85
Test1       Test1        81
Test2       Test2        91 (etc.)
</code></pre>
<p>I want the program to find and print the word1, word2, and points of the students within 5 points of the maximum score. (So if the maximum score is 91, then all names and all scores starting from 86(included) to 91 would be listed.</p>
<p>So far I have this:</p>
<pre><code>import csv
row = []
in = open("scoreaverage.csv", "r")
reading = csv.reader(in)
for line in reading:
    if reading.line_num &gt; 1:  #to skip the header of the csv
        row.append(line)
        ###not sure with the logic from here out to sort all the rows within 5 points of the maximum score
</code></pre>
<p>I'm an amateur so any help is greatly appreciated! (Can't use pandas or any of those cool shortcuts)</p>
</div>
<div class="post-text" itemprop="text">
<p>The first step you want is to get the maximum score.  You have a list of rows, so you can scan through these.  (I'm renaming your <code>row</code> to <code>rows</code>, because it is a list of rows, rather than a single row):</p>
<pre><code>from functools import reduce
# ... other code
max_score = reduce(lambda best_score, curr_row: max(float(curr_row[2]), best_score), rows, float('-inf')) 
</code></pre>
<p>Now you want to filter based on whether the score is within 5 points of the max:</p>
<pre><code>cutoff = 5
result = list(filter(lambda row: float(row[2]) &gt;= max_grade - cutoff, rows))
</code></pre>
<p>I, personally, prefer the functional style of Python, but you can do similar things with loops, etc., of course.</p>
<p>Another approach for the <code>max_score</code>:</p>
<pre><code>max_score = max([row[2] for row in rows])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a short example of how to sort the rows by third column using <a href="https://docs.python.org/3.6/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a>:</p>
<pre><code>import csv

with open('test.csv') as f:
    reader = csv.reader(f, delimiter='\t')
    next(reader)    # Skip column names
    rows = sorted(reader, key=lambda x: int(x[2]), reverse=True)
    print(*rows, sep='\n')
</code></pre>
<p>Output:</p>
<pre><code>['Test2', 'Test2', '91']
['World', 'Hello', '85']
['Test1', 'Test1', '81']
</code></pre>
<p>First parameter of <code>sorted</code> is an iterable that is going to be sorted. Conveniently <code>reader</code> is an iterable so we can pass that as an argument once we have removed the first row containing column names. </p>
<p>Second parameter is key function which takes an element from iterable as an argument and returns key to be used in sorting. Since we want to sort by third column we return that once we have converted it to <code>int</code>. If we would skip the conversion student with score 9 would be listed before student with score of 89 since <code>'9'</code> is greater than <code>'89'</code> in alphabetical ordering.</p>
<p>Third parameter is just a flag telling that we want the result in reverse order, greatest items first.</p>
</div>
<span class="comment-copy">CSV has commas between fields. The example file you show above doesn't. Which is it? This affects the solution.</span>
<span class="comment-copy">It is a csv file for sure. there is commas between the fields. I was just trying to display it like how you would see it in excel.</span>
<span class="comment-copy">Add the remaining code as well. <code>max = rows[0][2]</code>, <code>desired_rows = filter(lambda x: x &gt;= max-5, rows)</code></span>
<span class="comment-copy">@MYGz This looks like a school assignment so I just wanted to help with the specific part that was the problem, sorting rows by third column.</span>
<span class="comment-copy">Aight. The csv isn't valid as well. Delimiter doesn't appears constant. Is there a way to use a regex delimiter in csv module?</span>
<span class="comment-copy">@MYGz Regex can't be used, you can see the options from <a href="https://docs.python.org/3/library/csv.html#dialects-and-formatting-parameters" rel="nofollow noreferrer">Python docs</a>. My guess is that delimiters were originally tabs than got converted to spaces in somewhere between.</span>
