<div class="post-text" itemprop="text">
<p>I have a list of words. </p>
<pre><code>mylist = ["aus","ausser","bei","mit","noch","seit","von","zu"]
</code></pre>
<p>I want to turn each element in the list into a sublist and add to each a number so that each entry is indexed. So it should output</p>
<pre><code>[[1, 'aus'], [2, 'ausser'], [3, 'bei'], [4, 'mit'], [5, 'noch'], [6, 'seit'], [7, 'von'], [8, 'zu']]
</code></pre>
<p>I know how to do such a thing with a <code>while</code> loop</p>
<pre><code>mylist = ["aus","ausser","bei","mit","noch","seit","von","zu","aus","ausser","bei","mit","noch","seit","von","zu","aus","ausser","bei","mit","noch","seit","von","zu"]

mylist2

i=0

while i &lt;= 10:
    mylist2.append([i,mylist[i]])
    i = i +1

print(mylist2)
</code></pre>
<p>But I want to use the following kind of structure with a <code>for</code>-loop: </p>
<pre><code>mylist = ["aus","ausser","bei","mit","noch","seit","von","zu"]

outlist =[[1,word] for word in mylist]
print(outlist)
</code></pre>
<p>I'm not sure how to do that with a <code>for</code>-loop. Can someone explain how to do this? </p>
</div>
<div class="post-text" itemprop="text">
<p>If you want the inner parts to be lists then you can cast the <code>enumerate</code> result to a list inside a list comprehension:</p>
<pre><code>&gt;&gt;&gt; mylist = ["aus","ausser","bei","mit","noch","seit","von","zu"]
&gt;&gt;&gt; [[idx, item] for idx, item in enumerate(mylist, 1)]
[[1, 'aus'],
 [2, 'ausser'],
 [3, 'bei'],
 [4, 'mit'],
 [5, 'noch'],
 [6, 'seit'],
 [7, 'von'],
 [8, 'zu']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a></p>
<pre><code>&gt;&gt;&gt; mylist = ["aus","ausser","bei","mit","noch","seit","von","zu"]
&gt;&gt;&gt; list(enumerate(mylist, 1))

[(1, 'aus'),
 (2, 'ausser'),
 (3, 'bei'),
 (4, 'mit'),
 (5, 'noch'),
 (6, 'seit'),
 (7, 'von'),
 (8, 'zu')]
</code></pre>
<p>If you need a list of lists instead of tuples, you can do </p>
<p><code>list(map(list(enumerate(mylist, 1))))</code> </p>
<p>or </p>
<p><code>[[number, word] for number, word in enumerate(mylist, 1)]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Use enumerate:</p>
<pre><code>[list(element) for element in list(enumerate(mylist, 1))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is the method I think you are looking for.</p>
<pre><code>list1 = ["aus","ausser","bei","mit","noch","seit","von","zu"]
list2 = []
for i in range(len(list1)):
    list2 += [[i+1, list1[i]]]
print (list2)
</code></pre>
<p>Uses a for loop to go through each item in list 1 and the indexes in list 1 and the adds 1 to the index so that it doesn't start with 0.</p>
</div>
<span class="comment-copy">You could use enumerate: <code>list(enumerate(mylist, 1))</code></span>
<span class="comment-copy">There is a reason people keep removing tags from your titles. Please stop writing them. Also don't use quote formatting for things that aren't quotes.</span>
<span class="comment-copy">change ```  list(enumerate(mylist, 1) ``` to ``` list(enumerate(mylist, 1))```</span>
<span class="comment-copy">You don't need the <code>list</code> in <code>list(enumerate(mylist, 1))</code>.</span>
