<div class="post-text" itemprop="text">
<p>I have some data which is formated by year and week.  Here is a small sample</p>
<pre><code>    week    cases
0   192801  7647
1   192802  11427
2   192803  11970
3   192804  12920
4   192805  14660
</code></pre>
<p>The week data looks as if it is formated like <code>%Y%W</code>, but when I try to convert it to datetime via <code>pd.to_datetime(df.week, format = '%Y%W)</code> I receive the first day of the first month of each year.</p>
<pre><code>0   1928-01-01
1   1928-01-01
2   1928-01-01
3   1928-01-01
4   1928-01-01
</code></pre>
<p>What is going on?  How can I format the week data correctly?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://stackoverflow.com/questions/17087314/get-date-from-week-number">this thread</a>, it seems that just the week number is not sufficient to infer the date. You need the day of the week as well. (I'm really not sure why it doesn't just default to 0/Sunday)</p>
<p>So the following seems to do what you want:</p>
<pre><code>pd.to_datetime(df.week.map(lambda x: str(x)+'-0'), format="%Y%W-%w")
</code></pre>
<p>We first ensure the data is a <code>str</code>, then attach a '-0' to the end (which means Sunday).<br/>
Then grab the 'day of the week' using an additional <code>%w</code> in the format.</p>
<p>Note:<br/>
Found a note in the datetime docs, which explains the behavior.<br/>
<a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">Section 8.1.8 -&gt; Notes -&gt; Bullet-point #7</a></p>
<blockquote>
<p>When used with the strptime() method, %U and %W are only used in
  calculations when the day of the week and the calendar year (%Y) are
  specified.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>After converting to datetime (which I believe requires a day in the date), you can format the date using dt.strftime on the Series object like so:</p>
<pre><code>pd.to_datetime(df.week, format = '%Y%W').dt.strftime('%Y-%W')
</code></pre>
</div>
<span class="comment-copy">I think you'll need to subtract 1 from the week and you don't need <code>map</code>  and just vectorize it. <code>pd.to_datetime(df.week.sub(1).astype(str).add('-0'), format="%Y%W-%w")</code></span>
