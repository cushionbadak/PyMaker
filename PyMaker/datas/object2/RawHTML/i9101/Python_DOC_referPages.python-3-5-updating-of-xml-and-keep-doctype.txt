<div class="post-text" itemprop="text">
<p>I have XML starts with following:</p>
<pre><code>&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;!DOCTYPE       ispXCF  SYSTEM  "IspXCF.dtd" &gt;
&lt;ispXCF version="3.7.0"&gt;
    &lt;Comment&gt;&lt;/Comment&gt;
    &lt;Chain&gt;
        &lt;Comm&gt;JTAG&lt;/Comm&gt;
        &lt;Device&gt;
        ....
</code></pre>
<p>And I am using <code>xml.etree.ElementTree</code> parser. But this parser deletes the second line starting with <code>&lt;!DOCTYPE</code></p>
<p>I am using the following arguments in the <code>write</code> method:</p>
<pre><code>tree.write("data.xml", encoding="utf-8", xml_declaration=True, short_empty_elements=None)
</code></pre>
<p>but it only keeps <code>&lt;?xml version='1.0' encoding='utf-8'?&gt;</code></p>
<p>Is there some way how to not delete <code>&lt;!DOCTYPE</code> line? Or will I have to use some other XML parser?</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer"><code>xml.etree.ElementTree</code></a> has very poor support for doctype declarations.</p>
<p>You can <em>create</em> them for new XML with <code>TreeBuilder</code> objects, but not <em>read</em> them from <code>Element</code> or <code>ElementTree</code> objects created from existing XML. </p>
<p>As <a href="https://stackoverflow.com/a/8868551/1085062">answered here</a>, you'd have to manually copy paste the doctype declaration...pretty fugly IMHO. </p>
<p>So, in all, it would seem best to <a href="https://stackoverflow.com/a/8868608/1085062">switch to <code>lxml</code></a>.</p>
</div>
<span class="comment-copy">Related: <a href="http://stackoverflow.com/questions/8868248/how-to-create-doctype-with-pythons-celementtree" title="how to create doctype with pythons celementtree">stackoverflow.com/questions/8868248/â€¦</a></span>
<span class="comment-copy">Lxml seems to be fine but i want to keep using of standart python libraries only.</span>
<span class="comment-copy">I understand, but what you want is simply not possible with <code>xml.etree.ElementTree</code> without the ugly hack mentioned...That seems to be something you'll have to throw into your trade-off: (1) use non-standard <code>lxml</code> and be faster, prettier, more versatile, etc., or (2) use <code>xml.etree.ElementTree</code> and be more portable. The choice is yours.</span>
<span class="comment-copy">I will have to use mentioned "hack" because my app has to work on standard python newbie installation :)</span>
<span class="comment-copy">I don't think it is that ugly an hack - after all, all human interation with doct-typed xml's will involve "copy-pasting" the doctype anyways. The fact it is not automatic rendered from an internal data-structure for that seens quite lesser.</span>
<span class="comment-copy">@jsbueno the fact that you have no way to copy the original doctype just makes it much less versatile. Sure, you can parameterize the new, desired doctype, that sure beats hard coding it (as is done in the answer I linked to). But to what should that doctype default? <i>The original</i>, obviously. There's no way to do <b>the obvious</b> without <a href="http://stackoverflow.com/a/1732454/1085062">resorting to regular expressions</a>, and that's what makes this so ugly. But beauty is in the eye of the beholder, of course.</span>
