<div class="post-text" itemprop="text">
<p>I have a bunch of python scripts and simply want to structure them by putting most of them into subdirectories. However, when I try to load scripts from subdirectories, python gives me different error messages, depending on how I try to import the subdirectory scripts.</p>
<p>My subdir looks like this:</p>
<pre><code>io
├── dataset_creator.py
└── read_data.py
</code></pre>
<p>In my script from the parent dir, when I do</p>
<pre><code>from io import dataset_creator
</code></pre>
<p>this error occurs:</p>
<pre><code>ImportError: cannot import name 'dataset_creator'
</code></pre>
<p>When I do</p>
<pre><code>import io.dataset_creator
</code></pre>
<p>this error occurs:</p>
<pre><code>ImportError: No module named 'io.dataset_creator'; 'io' is not a package
</code></pre>
<p>I also touched <code>__init__.py</code> into io/ but it didn't help at all, as well as preceeding a dot to io/, but no luck. The python docs say I should add the <code>__init__.py</code> and then everything should work, basically (as far as I interpreted it).</p>
<p>Can anyone help me here? If I left out some important info, please tell me and I'll add it.</p>
<p>Cheers,
Jakob</p>
<p>EDIT:</p>
<p>As many of you stated, io is already another package in python, so renaming my io/ to something different fixed the problem (while also having the <code>__init__.py</code>). Thank you very much! 
I know there have been multiple correct answers, however, I could just mark one as correct, sorry.</p>
</div>
<div class="post-text" itemprop="text">
<p>The name <code>io</code> is already being used by <a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer">a standard library module</a>. Since it's one of the very basic modules used by the interpreter, it gets loaded during the startup process, before any of your code runs. This means that by the time Python sees your request to import <code>io.dataset_creator</code>, it's already got an <code>io</code> module in <code>sys.modules</code>. Since that module is not a package, it won't try loading the other submodule you've written in your <code>io</code> package (even if you had a module search path set up so that your package came ahead of the standard library).</p>
<p>You should rename your <code>io</code> package. One option is to put it inside another package (<code>mypackage.io.dataset_creator</code> should work fine). You could also just replace the name <code>io</code> with something more specific (e.g. <code>myproject_io</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>It's possible that that it's failing because <code>io</code> is already a <a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer">built-in module</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I have answered a similar question here <a href="https://stackoverflow.com/questions/42100723/using-exec-on-a-file-in-a-different-directory-causes-module-import-errors/42100851#42100851">Using exec on a file in a different directory causes module import errors</a></p>
<p>Append your parent path to Pythonpath:
 <code>import sys
 sys.path.append("/path/to/parentfolder")</code></p>
<p>You can use <code>os.path.dirname(__file__)</code> to get file's absolute path other than hardcoded path.</p>
<p>Add __init__.py to your parent folder and io folder, make the it as python package other than directory.</p>
<p>import the module:
<code>import io.dataset_creator as dcreator</code></p>
<pre><code>parent/
  -- app.py
  -- io/
      --dataset_creator.py
      --read_data.py
</code></pre>
<p>In you app.py:</p>
<pre><code>import sys
sys.path.append(os.path.abspath(os.path.dirname(__file__)))
import io.dataset_creator as dcreator
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This happened to me as well on Python 3.5.1 when I tested it. </p>
<p>Renaming the directory <code>io</code> to something else (I used <code>my_io</code>) fixed the problem. Here was my test case:</p>
<pre><code>main.py
my_io
├── module.py
└── something.py
</code></pre>
<p>Both modules imported correctly when I changed the directory's name. I suggest you change your <code>io</code> directory to something similar to avoid this.</p>
<p>I think this must be to do with some internal Python module called <code>io</code> which was conflicting somehow.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Recreating the problem:</strong></p>
<pre><code>mkdir io
touch dataset_creator.py
touch read_data.py
python3 -c 'from io import dataset_creator'
python3 -c 'import io.dataset_creator'
</code></pre>
<p>Gives the error messages.</p>
<p><strong>Solution:</strong></p>
<ol>
<li>Create another sub-directory called "io" and put the files there.</li>
<li>Use a name different than "io", as a module by that name already exists.</li>
</ol>
<p><strong>Explanation:</strong></p>
<p>You are already in the io dir, so you don't need to specify the "io". You can simply do:</p>
<pre><code>python3 -c 'import dataset_creator'
python3 -c 'import read_data'
</code></pre>
<p>And once you add a function or class in your python files:</p>
<pre><code>def hello_world():
    print("hello world")
</code></pre>
<p>You can import like this:</p>
<pre><code>python3 -c 'from read_data import hello_world'
</code></pre>
<p>To organise your code under an io module umbrella, create another io directory as follows and use it to store your python code:</p>
<pre><code>ia (parent dir where you do the import)
├── ia
│   ├── dataset_creator.py
│   └── read_data.py
├── .gitignore
├── requirements.txt
├── setup.py
└── README.md

python3 -c 'import ia.dataset_creator'
</code></pre>
<p>Note I renamed the directory to "ia" as well as there is already an "io" module that exists (<a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer">ref</a>).</p>
</div>
<span class="comment-copy"><code>'io' is not a package</code>....Hint: In Python, what is a package?</span>
<span class="comment-copy">missing <code>__init__.py</code>?</span>
<span class="comment-copy">my folder's name is io</span>
<span class="comment-copy">Edited my message because <code>__init__</code> was not displayed correctly</span>
<span class="comment-copy">From what directory are you trying to <code>import io.dataset_creator</code>?</span>
