<div class="post-text" itemprop="text">
<p>I want to turn every hashtag in the <code>comment</code> textfield to url so that it will be clickable.</p>
<p>For example, a user submit,</p>
<pre><code>s = "I can't get enough of #SO because #developers are very #supportive"
</code></pre>
<p>I want it to return like this in template,</p>
<pre><code>I can't get enough of #SO because #developers are very #supportive
</code></pre>
<p>Where whole text will display and all hashtag will be clickable by embedding {hashtag}.</p>
<p>I tried the below templatetags code but it won't return the hashtags with the text. It will only return this,</p>
<pre><code>&lt;a href='http://example.com/tags/SO'&gt;SO&lt;/a&gt; 
</code></pre>
<p>app_extras.py</p>
<pre><code>import re

register = template.Library()

@register.filter(name='hashchange')
def hashchange(value):
    vx=re.findall(r"#(\w+)", value)
    for n in vx:
        pm="&lt;a href='http://example.com/tags/{0}'&gt;{0}&lt;/a&gt;".format(n)
        return pm
</code></pre>
<p>In the template, I did,</p>
<pre><code>{{object.comment|safe|hashchange}}
</code></pre>
<p>What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>You will need to use <a href="https://docs.djangoproject.com/en/1.10/ref/utils/#django.utils.safestring.mark_safe" rel="nofollow noreferrer"><code>mark_safe</code></a> to mark your return value as html.  Keep in mind that since you are marking it as safe, you must <a href="https://docs.djangoproject.com/en/1.10/ref/utils/#django.utils.html.escape" rel="nofollow noreferrer">escape</a> it first.  <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub()</code></a> is what you were looking for:</p>
<pre><code>import re
from django import template
from django.utils.html import escape
from django.utils.safestring import mark_safe

register = template.Library()

def create_hashtag_link(tag):
    url = "/tags/{}/".format(tag)
    # or: url = reverse("hashtag", args=(tag,))
    return '&lt;a href="{}"&gt;#{}&lt;/a&gt;'.format(url, tag)


@register.filter()
def hashtag_links(value):
    return mark_safe(
        re.sub(r"#(\w+)", lambda m: create_hashtag_link(m.group(1)),
               escape(value)))
</code></pre>
<p>Note:  We assume that <code>value</code> is text (unescaped), and <code>create_hashtag_link(tag)</code> assumes <code>tag</code> is a word (<code>\w+</code>) and does not need escaping.  For creating links to other fragments of text, use <a href="https://docs.djangoproject.com/en/1.10/ref/utils/#django.utils.html.format_html" rel="nofollow noreferrer"><code>format_html()</code></a> instead of <code>.format()</code></p>
</div>
<span class="comment-copy">There is probably some JS library that is meant to do this.</span>
<span class="comment-copy">can yu recommend a library for me?</span>
<span class="comment-copy">Some regex in JS could also do: <a href="http://stackoverflow.com/questions/13655333/how-do-i-use-javascript-to-replace-hash-tags-with-links-from-a-jquery-data-attri" title="how do i use javascript to replace hash tags with links from a jquery data attri">stackoverflow.com/questions/13655333/â€¦</a></span>
<span class="comment-copy">I suggest using <code>conditional_escape</code> instead of <code>escape</code> to avoid double-escaping</span>
<span class="comment-copy">Thanks Udi. You rock!</span>
<span class="comment-copy">@DanielHepper : If it is already html, stuff like <code>&lt;a href="#abc"&gt;</code> can already be present, and would require to parse the input value.  Let's keep the input value text and the solution simple...</span>
