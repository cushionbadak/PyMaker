<div class="post-text" itemprop="text">
<p>I am currently generating different figures with a scientific notation for the y-axis leading to ticks like 2 or 6 on some plots, but 2.5 or 8.9 on some others. I would like to always have ticks with one decimal on the y-axis, even if it adds a zero. Here is an example</p>
<pre><code>import matplotlib.pyplot as plt
import numpy as np

plt.plot(np.arange(1, 10), np.arange(1, 10)**5)
ax = plt.gca()
plt.ticklabel_format(axis='y', style='sci')
ax.yaxis.major.formatter.set_powerlimits((0,0))
plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/2s6Gk.png" rel="nofollow noreferrer"><img alt="Figure generated" src="https://i.stack.imgur.com/2s6Gk.png"/></a></p>
<p>What could I add to force to plot ticks 1.0, 2.0, etc. <strong>on the y-axis</strong>?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>ScalarFormatter</code> does not currently support custom formats for the ticks, such as setting numbers of decimals. However you can extend the class, so to force it to use a format that you specify. Here is an example:</p>
<pre><code>import matplotlib.pyplot as plt
import numpy as np
from matplotlib.ticker import ScalarFormatter

class ScalarFormatterForceFormat(ScalarFormatter):
    def _set_format(self):  # Override function that finds format to use.
        self.format = "%1.1f"  # Give format here

plt.plot(np.arange(1, 10), np.arange(1, 10)**5)
ax = plt.gca()
yfmt = ScalarFormatterForceFormat()
yfmt.set_powerlimits((0,0))
gca().yaxis.set_major_formatter(yfmt)
plt.show()
</code></pre>
<p>Here is how it will look.</p>
<p><a href="https://i.stack.imgur.com/4vOaS.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/4vOaS.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can get the ticks and <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">format</a> it like you want.</p>
<pre><code>plt.plot(np.arange(1, 10), np.arange(1, 10)**5)
ax = plt.gca()
plt.ticklabel_format(axis='y', style='sci')
ax.yaxis.major.formatter.set_powerlimits((0,0))

xx, locs = plt.xticks()
ll = ['%.1f' % a for a in xx]
plt.xticks(xx, ll)
plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/9iQbw.png" rel="nofollow noreferrer"><img alt="formating ticks" src="https://i.stack.imgur.com/9iQbw.png"/></a></p>
</div>
<span class="comment-copy">I acutally needed to overload _set_format(self, vmin, vmax). Maybe Matplotlib 2? But I managed to make it work for me. Thanks!</span>
<span class="comment-copy">I actually want this, but on the y-axis. If I do as you suggested, I lose the scientific notation.</span>
