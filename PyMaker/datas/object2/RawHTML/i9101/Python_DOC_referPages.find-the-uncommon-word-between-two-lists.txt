<div class="post-text" itemprop="text">
<p>I have 2 lists such as this:</p>
<pre><code>&gt;&gt;&gt;first = ['hello', 'hey', 'hi', 'hey']
&gt;&gt;&gt;second = ['hey', 'hi', 'hello']
</code></pre>
<p>I want a new list that contains the word that is not included in the second list. In this case:</p>
<pre><code>odd_word = ['hey']
</code></pre>
<p>What is the quickest way of doing this? Thank you.</p>
<p>I tried using the method shown here: <a href="https://stackoverflow.com/questions/3462143/get-difference-between-two-lists">Get difference between two lists</a>, but it gives me a blank list.</p>
<pre><code>&gt;&gt;&gt; odd = list(set(first) - set(second))
&gt;&gt;&gt; odd
[]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; first = ['hello', 'hey', 'hi', 'hey']
&gt;&gt;&gt; second = ['hey', 'hi', 'hello']
&gt;&gt;&gt; odd_word = list((Counter(first) - Counter(second)).elements())
&gt;&gt;&gt; print(odd_word)
['hey']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Do this.</p>
<pre><code>odd_word = [s for s in first if s not in second]
</code></pre>
<p>This will give you duplicates if there are duplicate words in <code>first</code> that aren't in <code>second</code>.  If you don't want the duplicates, do this instead.</p>
<pre><code>odd_word = list({s for s in first if s not in second})
</code></pre>
</div>
<span class="comment-copy">you mean the duplicate? because "hey" is in both lists</span>
<span class="comment-copy">Thank you it worked.</span>
<span class="comment-copy">I dont think this works to find duplicates. It uses <code>in</code>, so if theres 1 or if theres 100 instances of the string it returns true. It doesnt do any kind of counting.</span>
<span class="comment-copy">I'm talking about duplicates in <code>first</code>, not duplicates in <code>second</code>.</span>
<span class="comment-copy"><a href="http://ideone.com/XOCglf" rel="nofollow noreferrer">ideone.com/XOCglf</a> I get an empty list. I'd expect <code>['hey']</code>. I don't think it matters which way round, all the strings are in both lists at least once, so <code>in</code> is not a valid way to find dupes, or am I missing something?</span>
<span class="comment-copy">Words appearing in <code>second</code> should not appear in the result as specified in the question.  I'm talking about words appearing more than once in <code>first</code> and not at all in <code>second</code>.</span>
<span class="comment-copy">In the OP's example there are no strings that are in first but not in seconds, unless you are counting the number of times each string appears, I admit the question is ambiguous on this point. I gave an example where it doesn't appear to work correctly but anyway I won't to press the point.</span>
