<div class="post-text" itemprop="text">
<pre><code> PriceStr=group[2]
 price=Decimal(sub(r'[^\d.]', '', PriceStr))
</code></pre>
<p>In this part of code, a variable string for money is being converted into Decimal.
What does the second line of this code actually mean?
Why is the 'sub', the 'r', the apostrophes, the '^' etc. needed?</p>
</div>
<div class="post-text" itemprop="text">
<p>They delete all symbols from the string except numbers and dots, </p>
<p>for example
'$1,346.9 total' is converted to '1346.9'</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python <code>r'string'</code> means <em>raw string</em>, i.e. string where escape sequences are not valid. Compare for example:</p>
<pre><code>print(r'foo bar\n')
print('foo bar\n')
</code></pre>
<p>In the second case <code>\n</code> interpreted as a notation for new line, while at the raw string it is just a slash and a letter <code>n</code>. Find out more about raw strings for example <a href="https://stackoverflow.com/questions/2081640/what-exactly-do-u-and-r-string-flags-do-in-python-and-what-are-raw-string-l">here</a>.</p>
<p>The method <code>sub</code> has been imported from module <code>re</code>. At the top of your code you likely will find this line:</p>
<pre><code>from re import sub # (or `from re import *`)
</code></pre>
<p>In my opinion it is better to <code>import re</code> and after access <code>sub</code> as <code>re.sub</code>, this way it is unambiguous.</p>
<p>The first argument of <code>sub</code> is a regular expression. Regular expressions (regex) are a big topic, you can find excellent resources to understand them <a href="http://www.regular-expressions.info/" rel="nofollow noreferrer">here</a> or and <a href="http://www.rexegg.com/" rel="nofollow noreferrer">here</a>. What this particular regex does:</p>
<ul>
<li>defines a character class (between square brackets <code>[</code> and <code>]</code>)</li>
<li>tells that this character is not a digit (<code>\d</code> means digit, same as <code>0-9</code>), and <code>^</code> means negation (not)</li>
<li>then it tells that this character can be anything (dot <code>.</code> in regex means any character</li>
</ul>
<p>The so called regex engine will look for matches of this one character pattern, for example in <code>abc123</code> it will have 3 matches: <code>a</code>, <code>b</code> and <code>c</code>. The second argument of <code>sub</code> tells what to replace these matches with. Here you tell replace with nothing (empty string, i.e. nothing between 2 quote marks: <code>''</code>). The third argument of <code>sub</code> provides the string you want to do this operation on. Then the result is passed to a method or class called <code>Decimal</code>, you can look this up in your code and find out what it does.</p>
<p><em>Not part of the answer, but general advices how to handle better similar cases:</em></p>
<p>If you want to understand a basic code like this, you can import its methods and try them one-by-one, or temporarily add <code>print()</code> statements, reload the module and call the methods. For example let's say your module is called <code>pricecalculator</code>, and is in a directory with the same name or in a file <code>pricecalculator.py</code>, then you go to that directory, open a Python shell, and type:</p>
<pre><code>import imp
import pricecalculator
from pricecalculator import *
</code></pre>
<p>Then you can call any method from this module. Let's say you are wondering what is the variable <code>group</code>, and what is its third element? Then add the line <code>print('group: ', group)</code> or <code>print('type of group: ', type(group))</code> above the lines in your post, and reload the module:</p>
<pre><code>imp.reload(pricecalculator)
from pricecalculator import *
</code></pre>
<p>Then you call the method where the code takes place, and you will see the content of the variable printed.</p>
<p>Also if you see a method and you are wondering what it does, try to find out where does it come from, which module, and look up the documentation of the method. For example:</p>
<pre><code>import re
# see the documentation:
help(re.sub) # press `q` to return to shell

from re import *
# find the module for a method:
sub.__module__
</code></pre>
<p>And try to experiment directly with the methods directly in the shell, read the docs, try things and understand the error messages. <a href="https://www.tutorialspoint.com/python/standard_exceptions.htm" rel="nofollow noreferrer">Here is a guide</a> what each types of errors mean.</p>
<p>Finally, before asking a question here, always think: is there a chance that the answers will help someone else? Try to formulate the title and the question accordingly.</p>
</div>
<span class="comment-copy">sub was probably imported from <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">docs.python.org/3/library/re.html#re.sub</a></span>
