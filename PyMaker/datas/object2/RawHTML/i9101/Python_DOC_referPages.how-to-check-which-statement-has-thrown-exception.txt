<div class="post-text" itemprop="text">
<p>I have a statement like this.</p>
<p>I just want to know which of the two assert statement has thrown the exception.</p>
<pre><code>try:
    assert re.search("xyz", statement)
    assert re.search("abc", statement)
except AssertionError:
    print "AssertionError : Expected Error message not found"
</code></pre>
<p>Thanks for the answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in <a href="https://docs.python.org/2/reference/simple_stmts.html#the-assert-statement" rel="nofollow noreferrer">The assert statement</a> docs, you can give an expression after the assertion test expression; that second expression will be passed in the AssertionError. Here's a simple demo:</p>
<pre><code>for n in (-5, 10, 20):
    try:
        assert 0 &lt;= n, '%d is too low' % n
        assert n &lt;= 10, '%d is too high' % n
        print('%d is ok' % n)
    except AssertionError as err:
        print "AssertionError:", err
</code></pre>
<p><strong>output</strong></p>
<pre><code>AssertionError: -5 is too low                                                                                                                  
10 is ok                                                                                                                                       
AssertionError: 20 is too high     
</code></pre>
<hr/>
<p>That second expression doesn't have to be a string, it can be anything. Since assertions should only be used to verify program logic, not to validate user data, I generally don't bother passing a nicely-formatted string, I just pass a tuple containing the relevant values, and maybe an identifying string. Eg,</p>
<pre><code>assert (a * b &gt; c), ('Bad product', a, b, c)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use functions from the <a href="https://docs.python.org/3/library/traceback.html" rel="nofollow noreferrer"><code>traceback</code></a> module. For example, <a href="https://docs.python.org/3/library/traceback.html#traceback.extract_tb" rel="nofollow noreferrer"><code>extract_tb</code></a> returns a list of tuples (named tuples in Python 3.5 and newer) representing the stack trace entries. Each tuple contains a line number as well as the source text line (if available).</p>
<pre><code>import traceback

try:
    assert 1
    assert None
except AssertionError as e:
    for x in traceback.extract_tb(e.__traceback__, limit=-1):
        print(x.lineno, repr(x.line)) # Prints 5 'assert None'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are able to print the last raised exception with <code>traceback.print_exc()</code>. An example:</p>
<pre><code>&gt;&gt;&gt; import traceback
&gt;&gt;&gt; try:
...    a = 1 / 0
... except:
...    traceback.print_exc()
... 
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 2, in &lt;module&gt;
ZeroDivisionError: integer division or modulo by zero
</code></pre>
<p>There is also <code>traceback.format_exc()</code> in case you don't want to print.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe you want to differ the exceptions?Then <a href="https://stackoverflow.com/questions/15887038/getting-exception-details-in-python">Getting exception details in Python</a> can help you.
Copying the answer here:</p>
<pre><code>import sys
try:
   assert re.search("xyz", statement)
   assert re.search("abc", statement)
except  AssertionError:
   type, value, traceback = sys.exc_info()
</code></pre>
<p>Then you can print out the info.</p>
</div>
<span class="comment-copy">If you want to distinguish between the two, use separate <code>try/except</code> blocks for each statement.</span>
<span class="comment-copy">The most simple solution is to remove the <code>try</code> / <code>expect</code>.</span>
<span class="comment-copy">@KlausD. Fair comment, but perhaps Logesh wishes to continue execution after any <code>AssertionError</code>s in that block are raised; of course, that's generally not a safe strategy, but it's sometimes useful, as in my demo.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/traceback.html" rel="nofollow noreferrer"><code>traceback</code></a> library in python provides many utilities to extract more information of the raised exception</span>
