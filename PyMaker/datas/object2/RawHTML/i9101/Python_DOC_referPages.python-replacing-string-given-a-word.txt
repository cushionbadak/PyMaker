<div class="post-text" itemprop="text">
<p>Hi does anyone know how to make a function that replaces every alphabetic character in a string with a character from a given word (repeated indefinitely). If a character is not alphabetic it should stay where it is. Also this has to be done without importing anything.</p>
<pre><code>def replace_string(string,word)
'''
&gt;&gt;&gt;replace_string('my name is','abc')
'ab cabc ab'
</code></pre>
<p>So far i come up with:</p>
<pre><code>def replace_string(string,word):
    new=''
    for i in string:
        if i.isalpha():
            new=new+word
        else: new=new+i
    print(new)
</code></pre>
<p>but, this function just prints 'abcabc abcabcabcabc abcabc' instead of 'ab cabc ab'</p>
</div>
<div class="post-text" itemprop="text">
<p>Change as follows:</p>
<pre><code>def replace(string, word):
    new, pos = '', 0
    for c in string:
        if c.isalpha():
            new += word[pos%len(word)]  # rotate through replacement string
            pos += 1  # increment position in current word
        else: 
            new += c
            pos = 0  # reset position in current word
    return new

&gt;&gt;&gt; replace('my name is greg', 'hi')
'hi hihi hi hihi'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you can't use the <a href="http://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code> module</a>, first create a generator function that will cycle through your replacement word indefinitely:</p>
<pre><code>def cycle(string):
    while True:
        for c in string:
            yield c
</code></pre>
<p>Then, adjust your existing function just a little bit:</p>
<pre><code>def replace_string(string,word):
    new=''
    repl = cycle(word)
    for i in string:
        if i.isalpha():
            new = new + next(repl)
        else: 
            new = new+i
    return new
</code></pre>
<p>Output:</p>
<pre><code>&gt;&gt;&gt; replace_string("Hello, I'm Greg, are you ok?", "hi")
"hihih, i'h ihih, ihi hih ih?"
</code></pre>
<p>Another way to write this (but I think the first version is more readable and therefore better):</p>
<pre><code>def replace_string(string,word):
    return ''.join(next(cycle(word)) if c.isalpha() else c for c in string)
</code></pre>
</div>
<span class="comment-copy">i need to replace every alphabetic character in the string with a given word</span>
<span class="comment-copy">Should a three-letter word be turned into <code>'hih'</code>?</span>
<span class="comment-copy">yes it should be</span>
<span class="comment-copy">not sure we understand the question</span>
<span class="comment-copy">what do you not understand</span>
<span class="comment-copy">@James: Please clarify your question, then. There was no mention in it how to handle punctuation, least of all to silently remove it.</span>
<span class="comment-copy">anything thats not alphabetic should remain where it is, and the alphabets should be replaced as shown above</span>
<span class="comment-copy">@James: So why are you expecting <code>"hi hihi hi hihi"</code> as output from <code>replace("m'y nam'e is greg", 'hi')</code>, then? You're contradicting yourself here.</span>
<span class="comment-copy">yes you are right, thats the typo, the correct should 'h'i hih'i hi hihi</span>
<span class="comment-copy">im not allowed to import anything</span>
<span class="comment-copy">Why didn't you say so in your question? Please edit your question to add all relevant details/constraints to it. Don't spread crucial information through the comments.</span>
<span class="comment-copy">i have been adjusting the main question</span>
