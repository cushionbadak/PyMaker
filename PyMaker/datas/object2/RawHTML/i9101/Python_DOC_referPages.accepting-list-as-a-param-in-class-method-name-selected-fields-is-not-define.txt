<div class="post-text" itemprop="text">
<p>I have a class <code>Database</code> that looks like:
<strong>UPDATED</strong></p>
<pre><code>    class Database():
        query_stmt_list = ['SELECT','INSERT','UPDATE','DELETE','FROM','WHERE']

        def db_select(self, *selected_fields, **kwargs):
            self.selected_fields = selected_fields = list(selected_fields)
            self.table = (kwargs['table']
                          if 'table' in kwargs 
                          else selected_fields.pop())
            self.where_field = (kwargs['where_field']
                                if 'where_field' in kwargs
                                else selected_fields.pop())
            try:
                with db.cursor() as cursor:
                    sql_tld_id_query = self.query_stmt_list[0]+ selected_fields + self.query_stmt_list[4] + table + self.query_stmt_list[5] + where_field + '=' + 'www.website.com'    
            except Exception as gatherid_err:
                print("exception was {}".format(gatherid_err))
                db.rollback()
</code></pre>
<p>I've invoking this via:</p>
<pre><code>dbclass = Database()
dbclass.db_select(*selected_fields, table='tld', where_field='name')
</code></pre>
<p>But I get an error of:</p>
<pre><code>  line 51, in &lt;module&gt;
    dbclass.db_select(*selected_fields, table='tld', where_field='name')
NameError: name 'selected_fields' is not defined
</code></pre>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to unpack the "<code>selected_fields</code>" variable like <code>dbclass.db_select(*selected_fields, 'tld', 'name')</code> did, you'd better:</p>
<ol>
<li><p>Have Python 3.5/3.6 installed. The syntax like this function call was wrong in Python 3.4 and before. The new feature introduced by 3.5 was called "Additional Unpacking Generalizations" and it allows user to put the variable that decorated by iterable unpacking operator, aka the single asterisk "<code>*</code>", <a href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448" rel="nofollow noreferrer">before other variables</a>.</p></li>
<li><p>Modify your <code>db_select</code> method to apply a trick that can accept two extra parameters after the <code>*selected_fields</code> like this:</p>
<pre><code>def db_select(self, *args):
    self.selected_fields = selected_fields = list(args)
    self.where_field = selected_fields.pop()
    self.table = selected_fields.pop()
    ...
</code></pre></li>
</ol>
<p>If you want the <code>db_select</code> method to accept named parameters too, for example <code>dbclass.db_select(*selected_fields, table='tld', where_field='name')</code>, it can be done like this:</p>
<pre><code>    def db_select(self, *args, **kwargs):
        self.selected_fields = selected_fields = list(args)
        self.where_field = (kwargs['where_field']
                            if 'where_field' in kwargs
                            else selected_fields.pop())
        self.table = (kwargs['table']
                      if 'table' in kwargs
                      else selected_fields.pop())
        ...
</code></pre>
</div>
<span class="comment-copy">You're trying to splat a variable called <code>selected_fields</code> which isn't defined. I fail to see where the complexity is.</span>
<span class="comment-copy">You haven't defined <code>selected_fields</code> outside of the function. Also, you probably don't want the <code>*</code> when calling it.</span>
<span class="comment-copy">@Goodies - if i invoke it via <code>dbclass.db_select('somefield','someotherfield', 'tld', 'name')</code> does <b>NOT</b> see 'somefield', 'someotherfield' as part of <code>selected_fields</code> param</span>
<span class="comment-copy"><code>dbclass.db_select(['somefield','someotherfield'], 'tld', 'name')</code>.</span>
<span class="comment-copy">this looks awesome. I tried it, but its throwing an error of `    dbclass.db_select(*selected_fields, table='tld', where_field='name') NameError: name 'selected_fields' is not defined` . Can you see my updated code?</span>
<span class="comment-copy">@Jshee: As @kindall said, you need to define the variable <code>selected_fields</code> before you call <code>dbclass.db_select</code>.</span>
<span class="comment-copy">@Philp - did you see the updated code and error? I'd greatly appreciate the help</span>
<span class="comment-copy">@Philp - do you mean: <code>selected_fields=['col1',col12']</code> then <code>dbclass.dbselect(*selected_fields, table='tld', where_field='name')</code> ?</span>
<span class="comment-copy">@Jshee: Yes.......</span>
