<div class="post-text" itemprop="text">
<p>A list of original strings:</p>
<pre><code>Originals = ["nice apple", "orange", "pear sweet", "red ape"]
</code></pre>
<p>A list of strings to remove:</p>
<pre><code>To_remove = ["nice ", " sweet"]
</code></pre>
<p>What I want to achieve is to remove the strings needed to be removed in each elements in the original words</p>
<pre><code>result: ["apple", "orange", "pear", "red ape"]
</code></pre>
<p>I do following but it doesn’t produce a good result.</p>
<pre><code>for t in To_remove:
    for o in Originals:
        print o.replace(t, "")
</code></pre>
<p>what would be the right way? Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Strings are immutable. Hence, none of the methods you can call on a string does an in-place modification. They all return a new string, so you have to reassign the string returned by <a href="https://docs.python.org/2/library/string.html#string.replace" rel="nofollow noreferrer"><code>replace</code></a>:</p>
<pre><code>for t in To_remove:
    for i in range(len(Originals)):
        Originals[i] = Originals[i].replace(t, "")
</code></pre>
<p>You can check out this <a href="https://stackoverflow.com/questions/6116978/python-replace-multiple-strings">question</a> for how to merge the replacement of multiple patterns.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because string is immutable, you have to reassign the list element. </p>
<pre><code>for t in To_remove:
    for i, o in enumerate(Originals):
        Originals[i] = o.replace(t, "")

print Originals 
</code></pre>
<p>hope this helps. </p>
</div>
<div class="post-text" itemprop="text">
<p>You are printing the results of the replacement, but do not change the list contents. If you have a closer look on the <a href="https://www.tutorialspoint.com/python/string_replace.htm" rel="nofollow noreferrer">replace method</a> (for <em>string</em>s(!)), you'll see that you are not only not changing the list but also not changing the strings you are getting <code>for o in Originals</code>. I omit including a working example, since <a href="https://stackoverflow.com/a/42020241/2932052">schwobaseggl</a> and <a href="https://stackoverflow.com/a/42020223/2932052">thangtn</a> <sup>[1]</sup> already provide it.</p>
<hr/>
<p><sup>[1]</sup> Who was really first? The SO timestamps contradict my personal experience.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>Originals = ["nice apple", "orange", "pear sweet", "red ape"]
To_remove = ["nice ", " sweet"]
result = []

for o in Originals:
    for t in To_remove:
        result.append(o.replace(t, ""))

print result
</code></pre>
<p>Is that what you need?</p>
</div>
<span class="comment-copy"><i><code>but it doesn’t produce a good result</code></i> -- <b>What do you see</b>? Please show us!</span>
<span class="comment-copy">Your questions title is quite confusing, maybe you should reword it to match your actual need.</span>
<span class="comment-copy">Suggestion for a catching title: <b>Howto "censor" a string list in python?</b> :-)</span>
<span class="comment-copy">And for just a tip and in case to use PEP8 standards: use snake case.</span>
<span class="comment-copy">@Wencakisa see OP (concerning <i><code>snake case</code></i>)</span>
<span class="comment-copy">@schwobaseggl, thank you!</span>
<span class="comment-copy"><i><code>the return value</code></i> -- better use the <i>result of the replace operation</i> or something like this, to make clear <b>what</b> you mean.</span>
<span class="comment-copy">@Wolf I added some clarification.</span>
<span class="comment-copy">thank you for the teaching. very good! hope you don't mind I choose the first answered for answer...</span>
<span class="comment-copy">I like the <i><code>print Originals</code></i> idea, this part is missing in the OP</span>
<span class="comment-copy">thank you for the knowledge..</span>
<span class="comment-copy">BTW: the <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">official docs</a> are very sparse, maybe this is the reason you have so bad Google results for it.</span>
<span class="comment-copy">thank you for the help.</span>
<span class="comment-copy">Some more text may help to understand the purpose of the repetition of the already known.</span>
<span class="comment-copy">...I have to correct myself about this (concerning <i>'repetition'</i>) you don't an in-place replacement. A valid option.</span>
