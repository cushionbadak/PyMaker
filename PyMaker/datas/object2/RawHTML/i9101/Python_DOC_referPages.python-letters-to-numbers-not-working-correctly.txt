<div class="post-text" itemprop="text">
<p>So I have this project for school and I am so close to finishing it but there is one that I just cant seem to get to work properly. One of the functions I have is:</p>
<pre><code>vowels = "aeiou"
consonants = "bcdfghjklmnpqrstvwyz"

def alphapinDecode(tone):
   s = tone.lower()
   pin = ''

   for ch in s:
       if ch in consonants:
           idx = consonants.find(ch)
       elif ch in vowels:
           idx2 = vowels.find(ch)

           pin = str(pin) + str(idx*5 + idx2)




   print(pin)

   return None
</code></pre>
<p>For the most part the function runs exactly how I want it to. I take a string and it returns numbers as a string.</p>
<p>For example: </p>
<pre><code>&gt;&gt;&gt; alphapinDecode('bomelela')
3464140
</code></pre>
<p>But when I do this one:</p>
<pre><code>&gt;&gt;&gt;&gt; alphapinDecode('bomeluco')
</code></pre>
<p>it returns 346448 instead of the 3464408 like it is supposed to do (according to my assignment). Now I know the function is giving me the correct answer based on the code, but what am I missing to have it include the 0 before the 8? </p>
<p>EDIT:</p>
<p>Function is supposed to take the string that you pass(tone) and break it up into 2 letter chunks(vowel/consonant pair). With the pair, it is supposed to use the pair and index them with vowels/consonants and return a number. &gt;&gt;&gt;alphapinDecode('hi') returns 27 because consonants[h] gives idx = 5 while vowels[i] gives idx2 = 2</p>
</div>
<div class="post-text" itemprop="text">
<p>I think your lecture trying to test students coding adaptability.
If really want achieve some output like that please try like below</p>
<pre><code>vowels = "aeiou"
consonants = "bcdfghjklmnpqrstvwyz"

def alphapinDecode(tone):
    s = tone.lower()
    pin = ''

for ch in s:
   if ch in consonants:
       idx = consonants.find(ch)
   elif ch in vowels:
       idx2 = vowels.find(ch)

       num = '%02d' % int((idx*5) + idx2) #python 2
       num = "{0:0=2d}".format((idx*5) + idx2) #python 3 more verbose
       pin = pin + str(num)

   print(int(pin))

   return None

alphapinDecode('bomeluco') # 3464408

alphapinDecode('bomelela') # 3464140
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your approach is perhaps awkward - I would iterate two characters at a time:</p>
<pre><code>def alphapinDecode(tone):
   s = tone.lower()
   pin = ''

   # Step over the string two characters at a time
   for i in range(0, len(s), 2):
       ch1 = s[i]
       ch2 = s[i+1]
       if ch1 in consonants and ch2 in vowels:
           idx1 = consonants.find(ch1)
           idx2 = vowels.find(ch2)
           this_pair = idx1*5 + idx2
           # For debugging
           print(this_pair)
           pin = pin + str(this_pair)

   # We need to print without leading zeroes
   print(int(pin))

   # Returning the pin as an integer is better, IMO
   return int(pin)
</code></pre>
<p>OK, now we have the code looking a bit better, we can see, I hope, that for the <code>co</code> pair in your second text, the value is <code>1*5 + 3</code>, which equals <code>8</code>, of course, but you really want <code>08</code>. There's a number of ways to do this, but since you're a beginner I'll illustrate the easiest way.</p>
<pre><code>this_pair = idx1*5 + idx2
if this_pair &lt; 10:
    # If the pair is less than ten, prepend a leading zero
    this_pair_pin = '0' + str(this_pair)
else
    this_pair_pin = str(this_pair)
pin = pin + this_pair_pin
</code></pre>
<p><strong>EDIT</strong>: Let's forget about accumulating the answer in a string as we can simplify the code:</p>
<pre><code>pin = 0
#...
        this_pair = idx1*5 + idx2
        pin = pin * 100 + this_pair

print(pin)
</code></pre>
</div>
<span class="comment-copy">It would help if you explained what exactly your function is supposed to do, and how.</span>
<span class="comment-copy">Sorry I thought I did...but its supposed to take the string that you pass(tone) and break it up into 2 letter chunks(vowel/consonant pair). With the pair, it is supposed to use the pair and index them with vowels/consonants and return a number.  &gt;&gt;&gt;alphapinDecode('hi')  returns 27 because consonants[h] gives idx = 5 while vowels[i] gives idx2 = 2</span>
<span class="comment-copy">Please update your questions, then, so that other users know what to answer.</span>
<span class="comment-copy">are u sure the indentation of pin = str(pin) + str(idx*5 + idx2) is correct? What are u trying to do with the idx*5 can u explain?</span>
<span class="comment-copy">idx*5 is just the formula my class uses in the project. Regarding the indentation, I explained it up above just now.</span>
<span class="comment-copy">What is the '%02d' %?</span>
<span class="comment-copy">@user2951723 <b>'%02d'</b> formats an integer 'd' to a field of minimum width 2, with zero-padding on the left(leading), the <b>second '%'</b> operator is called  <a href="https://docs.python.org/3/library/stdtypes.html#string-formatting" rel="nofollow noreferrer">string formatting</a> operator when used with a string on the left side.</span>
<span class="comment-copy">Wouldnt this add a 0 in front of 3 though? So it ends up being 03464408</span>
<span class="comment-copy">@user2951723 Ah, you are right, and I was wrong in a comment I deleted...</span>
