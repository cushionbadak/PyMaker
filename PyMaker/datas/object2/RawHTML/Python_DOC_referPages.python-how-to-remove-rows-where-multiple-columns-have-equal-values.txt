<div class="post-text" itemprop="text">
<p>I want to remove rows where multiple columns have the same values. I read <a href="https://stackoverflow.com/questions/54009788/remove-rows-where-value-in-one-column-equals-value-in-another">this question</a> about two columns and tried to extend to multiple columns, however I get an error.</p>
<p>Here is some sample data, similar to my dataframe:</p>
<pre><code>import pandas as pd
data = [['table1',10,8,7],['table2',3,3,3],['table3',3,8,11],['table4',12,12,12],['table5',13,15,5]]
df = pd.DataFrame(data,columns=['table_name','Attr1','Attr2','Attr3'])
</code></pre>
<p>and my desired result</p>
<pre><code>res = [['table1',10,8,7],['table3',3,8,11],['table5',13,15,5]]
result = pd.DataFrame(res,columns=['table_name','Attr1','Attr2','Attr3'])
</code></pre>
<p>I tried </p>
<pre><code>[df[df['Attr1'] != df['Attr2'] | df['Attr1'] != df['Attr3'] | df['Attr2'] != df['Attr3']]]
</code></pre>
<p>which retrieves the error</p>
<pre><code>ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
</code></pre>
<p>Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.ne.html" rel="nofollow noreferrer"><code>DataFrame.ne</code></a> for compare all values by <code>Attr1</code> column and test if at least one <code>True</code> per row by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.any.html" rel="nofollow noreferrer"><code>DataFrame.any</code></a>, last filter by <a href="http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#boolean-indexing" rel="nofollow noreferrer"><code>boolean indexing</code></a>:</p>
<pre><code>df = df[df[['Attr1','Attr2','Attr3']].ne(df['Attr1'], axis=0).any(axis=1)]
print (df)
  table_name  Attr1  Attr2  Attr3
0     table1     10      8      7
2     table3      3      8     11
4     table5     13     15      5
</code></pre>
<p><strong>Details</strong>:</p>
<pre><code>print (df[['Attr1','Attr2','Attr3']].ne(df['Attr1'], axis=0))
   Attr1  Attr2  Attr3
0  False   True   True
1  False  False  False
2  False   True   True
3  False  False  False
4  False   True   True

print (df[['Attr1','Attr2','Attr3']].ne(df['Attr1'], axis=0).any(axis=1))
0     True
1    False
2     True
3    False
4     True
dtype: bool
</code></pre>
<p>Another solution is test number of unique values by <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.nunique.html" rel="nofollow noreferrer"><code>DataFrame.nunique</code></a>:</p>
<pre><code>df = df[df[['Attr1','Attr2','Attr3']].nunique(axis=1).ne(1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create conditions for each and then perform your comparison:</p>
<pre><code>c1 = df['Attr1'].ne(df['Attr2'])
c2 = df['Attr1'].ne(df['Attr3'])
c3 = df['Attr2'].ne(df['Attr3'])
&gt;&gt;&gt; df[c1 | c2 | c3]
  table_name  Attr1  Attr2  Attr3
0     table1     10      8      7
2     table3      3      8     11
4     table5     13     15      5
</code></pre>
<p>Each condition will be a series indicating whether or not the inequality holds, e.g.</p>
<pre><code>&gt;&gt;&gt; c1
0     True
1    False
2     True
3    False
4     True
dtype: bool

&gt;&gt;&gt; c1 | c2 | c3
0     True
1    False
2     True
3    False
4     True
dtype: bool
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Boolean index with the condition being that the number of unique values across axis 1, must be equal to the width of the <code>DataFrame</code>:</p>
<pre><code>df = df[df.nunique(axis=1).eq(df.shape[1])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use df.query:</p>
<pre><code>df = df.query("Attr1 != Attr2 != Attr3")
</code></pre>
</div>
<span class="comment-copy">This works only if <code>Attr1</code> is one of the duplicates. Consider the case where Attr1-3  is <code>[10, 8, 8]</code> ?</span>
<span class="comment-copy">@ChrisA - Then is possible use <code>df = df[df[['Attr1','Attr2','Attr3']].nunique(axis=1).ne(2)]</code></span>
<span class="comment-copy">No, that still doesnt work</span>
<span class="comment-copy">@ChrisA - So you think get rows if all values are unique? Like <code>df = df[df[['Attr1','Attr2','Attr3']].nunique(axis=1).eq(3)]</code> ?</span>
<span class="comment-copy">That should do it yeah</span>
