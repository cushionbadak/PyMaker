<div class="post-text" itemprop="text">
<p>ok i am trying to split a cell in a csv and take the second half of the information and append it to another cells data. i can split the cell but then the data i want just vanishes. </p>
<p>this code works to split the cells </p>
<pre><code>import pandas as pd

data = pd.read_csv("/root/v-unit/calendar_data.csv")


data["Start"]= data["Start"].str.split("T",n =1, expand = True)
data["End"]= data["End"].str.split("T",n =1, expand = True)

print data
csvOut = "/root/v-unit/test-data.csv"
f=open(csvOut, 'a')
data[:65534].to_csv(f, index=False, header=True)
</code></pre>
<p>so the format for the date is 2019-03-04T00:00:00 i split the column at the T for the time. i then want to take the time stamp and append it to another row which contains the task so it would show up as: some task 12:00 1:00 in one cell then the dates in the other cells (which they already do when i run the above code but the time stamp vanishes so i cant merge it) </p>
</div>
<div class="post-text" itemprop="text">
<p>Almost the same like you did, but when you split with expand, it returns 2 columns, so you need to have 2 columns in assignment as well (like <code>data[['StartDate', 'StartTime']] = ...</code>):</p>
<pre><code>data = pd.DataFrame({'Start': ['2019-03-04T00:00:00'],
                     'End':   ['2019-03-04T10:00:00']})

data[['Start', 'StartTime']] = data["Start"].str.split("T", n=1, expand = True)
data[['End', 'EndTime']] = data["End"].str.split("T", n=1, expand = True)

print(data)
</code></pre>
<p>Output:</p>
<pre><code>        Start         End StartTime   EndTime
0  2019-03-04  2019-03-04  00:00:00  10:00:00
</code></pre>
<p><strong>Note:</strong> if you just want to add start and end times to your task name, you don't even need to split the dates. You can instead convert them with <code>pd.to_datetime</code> and then format with <code>strftime</code> as <code>'%H:%M'</code> (for <code>hours:minutes</code>):</p>
<pre><code>data = pd.DataFrame({'Task': 'task 1',
                     'Start': ['2019-03-04T00:00:00'],
                     'End':   ['2019-03-04T10:00:00']})

data['Task'] += ' ' + \
    pd.to_datetime(data['Start']).dt.strftime('%H:%M').astype(str) + ' ' + \
    pd.to_datetime(data['End']).dt.strftime('%H:%M').astype(str)

print(data)
</code></pre>
<p>Output:</p>
<pre><code>                 Task                Start                  End
0  task 1 00:00 10:00  2019-03-04T00:00:00  2019-03-04T10:00:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to select just the second column, and can do so efficiently like this:</p>
<pre><code>import pandas as pd

data = pd.DataFrame({'Start': ['2019-03-04T00:00:00'],
                     'End': ['2019-03-04T01:00:00']})

data['Start'] = data['Start'].str.split('T').str[-1] 
data['End'] = data['End'].str.split('T').str[-1] 

print(data)

&gt;       Start       End
&gt; 0  00:00:00  01:00:00
</code></pre>
</div>
<span class="comment-copy">that did the trick! thanks so much !</span>
<span class="comment-copy">sorry to be a bother is there a way to set the timezone? its displaying as UTC and some users dont want that as the output.</span>
<span class="comment-copy">Sure, the easiest would be to convert the 'Start' and 'End' columns from UTC to your timezone with something like <code>data['Start'] = pd.to_datetime(df['Start']).dt.tz_localize('UTC').dt.tz_convert('America/New_York')</code>. See for example <a href="https://stackoverflow.com/questions/42826388/using-time-zone-in-pandas-to-datetime" title="using time zone in pandas to datetime">stackoverflow.com/questions/42826388/â€¦</a> for more info</span>
<span class="comment-copy">This is assuming your dates are in UTC and you need to convert to your local timezone. If your dates are already in your timezone and you just need to display it, then you just <code>tz_localize(...</code> it to your timezone, no need to <code>tz_convert(...</code> it. Hope that helps</span>
<span class="comment-copy">ah that was it! thanks again! you are a life saver!</span>
