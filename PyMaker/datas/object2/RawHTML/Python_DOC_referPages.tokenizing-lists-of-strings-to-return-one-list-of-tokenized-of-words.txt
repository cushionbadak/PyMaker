<div class="post-text" itemprop="text">
<p>Good day,</p>
<p>I have a function that should have the ability to lower and tokenize text and returns tokens. 
Here is the function below:</p>
<pre><code>def preprocess_text(text):
""" A function to lower and tokenize text data """ 
# Lower the text
lower_text = text.lower()

# tokenize the text into a list of words
 tokens = nltk.tokenize.word_tokenize(lower_text)

return tokens
</code></pre>
<p>I then wish to apply the function to my actual text data called <code>data</code> which is a list with strings within it. I want to iterate over each string within <code>data</code> and apply the function to lower and tokenize the text data. </p>
<p>Finally, I wish to append the tokenized words to a final list called <code>tokenized_final</code> which should be the final list containing the tokenized words. 
Here is the next bit of code below: </p>
<pre><code># Final list with tokenized words
tokenized_final = []

# Iterating over each string in data
for x in data:
    # Calliing preprocess text function
    token = preprocess_text(x)

    tokenized_final.append(token)  
</code></pre>
<p>However, when I do all this and print the list <code>tokenized_final</code>. It outputs a big list containing lists within it. </p>
<pre><code>print (tokeninized_final)

Output:
 [['pfe', 'bulls', 'have', 'reasons', 'on'],
 ['to', 'pay', 'more', 'attention'],
 ['there', 'is', 'still']]
</code></pre>
<p>When my desired output for <code>tokenized_final</code> is to be like this in one list: </p>
<pre><code>['pfe', 'bulls', 'have', 'reasons', 'on','to', 'pay','more', 'attention','there','is', 'still']
</code></pre>
<p>Is there any way to rectify the preprocess function and apply it to the data to get the desired output. Or is there any way to do this?...
Help would truly be appreciated here. 
Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You just need to flatten the resulting list:</p>
<pre><code># Final list with tokenized words
tokenized_final = []

# Iterating over each string in data
for x in data:
    # Calliing preprocess text function
    token = preprocess_text(x)

    tokenized_final.append(token) 

flattened_tokeninized_final = [i for j in tokeninized_final for i in j]
</code></pre>
</div>
<span class="comment-copy">Hey thanks for the reply. when do I do this after applying the preprocess function to each string? Please show me the stage where! @Andrey Lukyanenko</span>
<span class="comment-copy">my bad I got it !</span>
<span class="comment-copy">I edited the post to show where this line should be.</span>
