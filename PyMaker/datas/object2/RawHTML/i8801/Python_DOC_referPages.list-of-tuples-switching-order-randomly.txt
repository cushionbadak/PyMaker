<div class="post-text" itemprop="text">
<p>So when constructing a list of tuples, the order within some of the tuples seems to mix up. The content within <code>each_file[2]</code> will be before the content <code>each_file[1]</code> randomly.</p>
<p>Example output from printing filelist:</p>
<pre><code>[{ef1, ef2}, {ef1, ef2} {ef2, ef1}, {ef1, ef2} ....]
</code></pre>
<p>Information about about the code below:<br/>
projectDict is a list of pandas.dataframe objects</p>
<pre><code>filelist = []
for each_dict in projectDict:
    currentDataFrame = projectDict[each_dict]

    for each_file in currentDataFrame.itertuples(): 
        important_terms = { each_file[1], 
                            each_file[2]}
        filelist.append(important_terms)
</code></pre>
<p><strong>Is this a result of using itertuples, or is there another glaring error within my code?</strong> I used iterrows and had the same issue. I also have verified that the data is not structured in the way of the output.</p>
</div>
<div class="post-text" itemprop="text">
<p>You write:</p>
<pre><code>important_terms = <b>{</b>each_file[1],each_file[2]<b>}</b>
#                 ^     curly brackets      ^</code></pre>
<p>Now the syntax <strong><code>{a,b,...,z}</code> is a <code>set</code></strong>. In a <a href="https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer"><code>set</code></a>, an <strong>element occurs at most once</strong> and the <strong>order is undetermined</strong>. Like is written in the <a href="https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>A <code>set</code> object is an <strong>unordered collection</strong> of <strong>distinct</strong> hashable
  objects. Common uses include membership testing, removing duplicates
  from a sequence, and computing mathematical operations such as
  intersection, union, difference, and symmetric difference.</p>
</blockquote>
<p>The <strong>syntax for a <a href="https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" rel="nofollow noreferrer"><code>tuple</code></a> is <code>(a,b,...,z)</code></strong>. So you should change the line to:</p>
<pre><code>important_terms = <b>(</b>each_file[1],each_file[2]<b>)</b>
#                 ^     round brackets      ^</code></pre>
<p>Or - as <a href="https://stackoverflow.com/questions/42673269/list-of-tuples-switching-order-randomly/42673336?noredirect=1#comment72472831_42673336">@Matthias</a> says - you can even omit the rounded brackets and only use the comma:</p>
<pre><code>important_terms = each_file[1],each_file[2]
#                 ^       no brackets     ^</code></pre>
<p>Nevertheless, you can here <strong>use slicing</strong>, since <code>each_file</code> is already a tuple:</p>
<pre><code>important_terms = each_file<b>[1:3]</b></code></pre>
<p>Here you slice from index <code>1</code> (inclusive) to index <code>3</code> (exclusive).</p>
<p>Finally you can use <em>list comprehension</em> to turn your <em>entire program</em> into a <em>one liner</em>:</p>
<pre><code>filelist = <b>[</b>each_file[1:3] for each_dict in projectDict
                           for each_file in projectDict[each_dict].itertuples()<b>]</b></code></pre>
<p>or even more elegantly:</p>
<pre><code>filelist = <b>[</b>each_file[1:3] for each_dict in projectDict<b>.values()</b>
                           for each_file in <b>each_dict</b>.itertuples()<b>]</b></code></pre>
</div>
<span class="comment-copy"><code>important_items</code> is a set, sets are unordered.</span>
<span class="comment-copy">Those are <b>not</b> tuples, but <b>sets</b> and the order of a <b>set is undetermined</b>.</span>
<span class="comment-copy">Thanks so much, that was pretty dumb error!</span>
<span class="comment-copy">You don't even need the round brackets. <code>important_terms = each_file[1], each_file[2]</code> is enough, but the parentheses can be added as a visual help.</span>
<span class="comment-copy">@Matthias: agreed. Nevertheless I think it can be useful. But I will add a note to the answer.</span>
