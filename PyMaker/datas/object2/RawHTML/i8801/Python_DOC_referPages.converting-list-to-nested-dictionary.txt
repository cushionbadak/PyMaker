<div class="post-text" itemprop="text">
<p>How can I convert a <code>list</code> into nested `dictionary'?</p>
<p>For example:</p>
<pre><code>l = [1, 2, 3, 4] 
</code></pre>
<p>I'd like to convert it to a dictionary that looks like this:</p>
<pre><code>{1: {2: {3: {4: {}}}}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For that reverse the list, then start creating the empty dictionary element.</p>
<pre><code>l = [1, 2, 3, 4]
d = {}
for i in reversed(l):
    d = {i: d}

&gt;&gt;&gt; print(d)
{1: {2: {3: {4: {}}}}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also use <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>functools.reduce</code></a> for this. </p>
<pre><code>reduce(lambda cur, k: {k: cur}, reversed(l), {})
</code></pre>
<p><strong>Demo</strong></p>
<pre><code>&gt;&gt;&gt; from functools import reduce
&gt;&gt;&gt; l = [1, 2, 3, 4]

&gt;&gt;&gt; reduce(lambda cur, k: {k: cur}, reversed(l), {})
{1: {2: {3: {4: {}}}}}
</code></pre>
<hr/>
<p>The flow of construction looks something like </p>
<pre><code><b>{4: {}}</b> -&gt; <b>{3: {4: {}}</b> -&gt; <b>{2: {3: {4: {}}}}</b> -&gt; <b>{1: {2: {3: {4: {}}}}}</b></code></pre>
<p>as <code>reduce</code> traverses the reverse iterator making a new single-element dict. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can do something like this:</p>
<pre><code>l = [1,2,3,4]
d = {}

for i in l[::-1]:
    d = {i: d}

print(d)
</code></pre>
<blockquote>
<p>{1: {2: {3: {4: {}}}}} [Finished in 0.4s]</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Here is an abstraction.  Uses for <code>setdefault</code> are typically overshadowed by <code>defaultdict</code>, but here is an interesting application if you have one or more lists (iterables):</p>
<pre><code>def make_nested_dict(*iterables):
    """Return a nested dictionary."""
    d = {}
    for it in iterables:
        temp = d
        for i in it:
            temp = temp.setdefault(i, {})
    return d

make_nested_dict([1, 2, 3, 4])
# {1: {2: {3: {4: {}}}}}

make_nested_dict([1, 2, 3, 4], [5, 6])
# {1: {2: {3: {4: {}}}}, 5: {6: {}}}
</code></pre>
<hr/>
<p><strong>Nested Branches</strong></p>
<p>Unlike <code>defaultdict</code>, this technique accepts duplicate keys by appending to existing "branches".  For example, we will append a new <code>7 → 8</code> branch at the third level of the first (A) branch:</p>
<pre><code>                       A         B           C            
make_nested_dict([1, 2, 3, 4], [5, 6], [1, 2, 7, 8])
# {1: {2: {3: {4: {}}, 7: {8: {}}}}, 5: {6: {}}}
</code></pre>
<p>Visually:</p>
<pre><code>1 → 2 → 3 → 4   (A)            5 → 6   (B)
       \ 
        7 → 8   (C)
</code></pre>
</div>
<span class="comment-copy">can you show me the code so that i can review it ..</span>
<span class="comment-copy">for i in rl: 	d={i:d}    here rl=l[-1:] where l is a list and d is dictionary</span>
<span class="comment-copy">d={}  for i in rl: d={i:d}</span>
<span class="comment-copy">i forgot how to reverse .. just check the screen shot</span>
