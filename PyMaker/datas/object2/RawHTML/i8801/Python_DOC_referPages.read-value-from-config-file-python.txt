<div class="post-text" itemprop="text">
<p>I have a file <code>.env</code> file contain 5 lines</p>
<pre><code>DB_HOST=http://localhost/
DB_DATABASE=bheng-local
DB_USERNAME=root
DB_PASSWORD=1234567890
UNIX_SOCKET=/tmp/mysql.sock
</code></pre>
<p>I want to write python to grab the value of <strong>DB_DATABASE</strong>
I want this <code>bheng-local</code></p>
<hr/>
<p>I would have use </p>
<pre><code>import linecache
print linecache.getline('.env', 2)
</code></pre>
<p>But some people might change the order of the cofigs, that's why linecache is not my option. </p>
<hr/>
<p>I am not sure how to check for only some strings match but all the entire line, and grab the value after the <code>=</code>.</p>
<p>I'm kind of stuck here : </p>
<pre><code>file = open('.env', "r")
read = file.read()
my_line = ""

for line in read.splitlines():
    if line == "DB_DATABASE=":
        my_line = line
        break
print my_line
</code></pre>
<p>Can someone please give me a little push here ? </p>
</div>
<div class="post-text" itemprop="text">
<p>Have a look at the config parser:
<a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer">https://docs.python.org/3/library/configparser.html</a></p>
<p>It's more elegant than a self-made solution</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work for you</p>
<pre><code>#!/usr/local/bin/python
file = open('test.env', "r")
read = file.read()

for line in read.splitlines():
    if 'DB_DATABASE=' in line:
        print line.split('=',1)[1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Modify your .env to</p>
<pre><code>[DB]
DB_HOST=http://localhost/
DB_DATABASE=bheng-local
DB_USERNAME=root
DB_PASSWORD=1234567890
UNIX_SOCKET=/tmp/mysql.sock
</code></pre>
<p>Python code</p>
<pre><code>#!/usr/local/bin/python
import ConfigParser
config = ConfigParser.ConfigParser()
config.read('test.env')
print config.get('DB','DB_DATABASE')
</code></pre>
<p>Output:</p>
<blockquote>
<p>bheng-local</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>#!/usr/local/bin/python

from configobj import ConfigObj
conf = ConfigObj('test.env')
print conf['DB_DATABASE']
</code></pre>
</div>
<span class="comment-copy">the <code>startwith</code> may be of assistance.</span>
<span class="comment-copy">I like the idea of using the parser, but it require me to add more texts on top of my configs file. I don't mind if I am the only one that has it. This config file s is deployed to thousand people already. :( Is there a simple way to grab it base on DB_DATABASE which is the string of file ?</span>
<span class="comment-copy">There are some hacks to go around it, you can find them <a href="http://stackoverflow.com/questions/2819696/parsing-properties-file-in-python/">here</a>:  The shortest is probably <a href="http://stackoverflow.com/a/25493615/3022712">this one</a> , for Python 3.2+ and <a href="http://stackoverflow.com/a/8657601/3022712">this one</a> for earlier versions. The most elegant probably <a href="http://stackoverflow.com/a/2819788/3022712">this one</a>.</span>
<span class="comment-copy">I like the idea of using the parser, but it require me to add more texts on top of my configs file. I don't mind if I am the only one that has it. This config file s is deployed to thousand people already. :( Is there a simple way to grab it base on DB_DATABASE which is the string of file ?</span>
<span class="comment-copy">Using ConfigObj, we do not need to add anything like section header at the start of the .env file to read the variable values from it.</span>
