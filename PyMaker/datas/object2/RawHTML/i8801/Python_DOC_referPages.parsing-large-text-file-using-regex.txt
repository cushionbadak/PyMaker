<div class="post-text" itemprop="text">
<p>I have a large text file (60Mb) that looks like the following:</p>
<pre><code>:VPN ()
:add_adtr_rule (true)
:additional_products ()
:addr_type_indication (IPv4)
:certificates ()
:color (black)
:comments ()
:connectra (false)
:connectra_settings ()
:cp_products_installed (false)
:data_source (not-installed)
:data_source_settings ()
:edges ()
:enforce_gtp_rate_limit (false)
:firewall (not-installed)
:floodgate (not-installed)
:gtp_rate_limit (2048)
:interfaces ()
:ipaddr (10.19.45.18)
</code></pre>
<p>for every instance in which :add_adtr_rule is true, there are thousands of ':add_adtr_rule (false)' entries, I need the value of the ipaddr - so in this instance I would need the 10.19.45.18. How can I use a regex to extract this information. </p>
<p>I have tried the following code, that returns an empty list:</p>
<pre><code>import re

with open("objects_5_0_C-Mod.txt", "r") as f:
    text = f.read()

ip=re.findall(r':add_adtr_rule [\(]true[\)]\s+.*\s+.*\s+.*\s+.*\s+:ipaddr\s+[\(](.*)[\)]', text)
print(ip) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following <em>regex</em> should do it :</p>
<pre><code>(?s)(?:add_adtr_rule\s\(true\)).*?:ipaddr\s\((.*?)\)
</code></pre>
<p><em>see <strong><a href="https://regex101.com/r/c22Kxm/2" rel="nofollow noreferrer">regex demo / explanation</a></strong></em></p></div>
<div class="post-text" itemprop="text">
<p>You might want to add anchors to speed up things. Consider the following example with <code>MULTILINE</code> and <code>VERBOSE</code> turned on:</p>
<pre><code>^:add_adtr_rule\ \(true\)   # start of line, followed by :add_ ...
[\s\S]+?                    # everything else afterwards, lazily          
^:ipaddr\ \((?P&lt;ip&gt;[^)]+)\) # start of line, ip and group "ip" between ()
</code></pre>
<p>See <a href="https://regex101.com/r/xZvE1E/2" rel="nofollow noreferrer"><strong>a demo on regex101.com</strong></a>.
<hr/>
With your given code this comes down to:</p>
<pre><code>import re

rx = re.compile(r'''
        ^:add_adtr_rule\ \(true\)
        [\s\S]+?
        ^:ipaddr\ \((?P&lt;ip&gt;[^)]+)\) 
        ''', re.MULTILINE | re.VERBOSE)

with open("objects_5_0_C-Mod.txt", "r") as f:
    text = f.read()

ips = [match.group('ip') for match in rx.finditer(text)]
print(ips) 
</code></pre>
</div>
<span class="comment-copy">Assuming that the file consists of repeated blocks like the above, and given that I am not a regex expert, I would have started by writing a generator yielding one block at a time.  This would be generically useful for querying the file.  I would have then tested for the 'true' and extracted or ignored depending.  But siam's regex looks good for a one-off job.</span>
<span class="comment-copy">Nice.  By working the your regex with the manual, <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">docs.python.org/3/library/re.html#regular-expression-syntax</a>, I learned some new features.</span>
<span class="comment-copy">Works like a charm, thank you Siam!</span>
<span class="comment-copy">@Clyde Glad it worked! BTW, an accept would be much appreciated tho :-)</span>
<span class="comment-copy">@Siam - What do you mean by accept? Sorry I'm fairly new to this site.</span>
