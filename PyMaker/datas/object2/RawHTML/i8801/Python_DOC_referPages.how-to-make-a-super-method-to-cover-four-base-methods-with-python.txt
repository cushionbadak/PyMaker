<div class="post-text" itemprop="text">
<p>The code below is written by me, however I find the method is not suitable sometimes. I don't know how to make a good <code>super</code> method to cover four base selenium web-driver methods.</p>
<pre><code>def keymouse(url, operation , elementxpath):
    driver = webdriver.Chrome()
    driver.get(url)
    time.sleep(1)
    driver.maximize_window()
    time.sleep(1)
    operation_by = operation.split('.')[1]

    if operation_by == "context_click()":
        result = ActionChains(driver).context_click(driver.find_element_by_xpath(elementxpath)).perform()
    if operation_by == "double_click()":
        result = ActionChains(driver).double_click(driver.find_element_by_xpath(elementxpath)).perform()
    if operation_by == "drag_and_drop()":
        result = ActionChains(driver).drag_and_drop(driver.find_element_by_xpath(elementxpath), driver.find_element_by_xpath(elementxpath)).perform()
    if operation_by == "click_and_hold()":
        result = ActionChains(driver).click_and_hold(driver.find_element_by_xpath(elementxpath)).perform()
    else:
        time.sleep(3)
</code></pre>
<p>This is the instance to use the above method:</p>
<pre><code>from method.key_mouse import *
#driver = webdriver.Chrome()

keymouse("https://www.baidu.com", "operation.context_click()", "//*[@id='kw']")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A good way would be to use the <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer">enum</a> module.</p>
<pre><code>from enum import Enum
# Create your desired operations
class KeyMouseOperation(Enum):
    CONTEXT_CLICK = 1
    DOUBLE_CLICK = 2
    DRAG_AND_DROP = 3
    CLICK_AND_HOLD = 4

from method.key_mouse import *
#driver = webdriver.Chrome()

keymouse("https://www.baidu.com", KeyMouseOperation.CONTEXT_CLICK, "//*[@id='kw']")

def keymouse(url, operation , elementxpath):
    driver = webdriver.Chrome()
    driver.get(url)
    time.sleep(1)
    driver.maximize_window()
    time.sleep(1)

    if operation_by == KeyMouseOperation.CONTEXT_CLICK:
        result = ActionChains(driver).context_click(driver.find_element_by_xpath(elementxpath)).perform()
    if operation_by == KeyMouseOperation.DOUBLE_CLICK:
        result = ActionChains(driver).double_click(driver.find_element_by_xpath(elementxpath)).perform()
    if operation_by == KeyMouseOperation.DRAG_AND_DROP:
        result = ActionChains(driver).drag_and_drop(driver.find_element_by_xpath(elementxpath), driver.find_element_by_xpath(elementxpath)).perform()
    if operation_by == KeyMouseOperation.CLICK_AND_HOLD:
        result = ActionChains(driver).click_and_hold(driver.find_element_by_xpath(elementxpath)).perform()
    else:
        time.sleep(3)
</code></pre>
</div>
