<div class="post-text" itemprop="text">
<p>i've just written some code:</p>
<pre><code>    hasher = hashlib.sha1()
    inputFile = open(inputPath, 'r')

    hasher.update(inputFile.read().encode('utf-8'))
    oldHash = hasher.hexdigest()
    newHash = ''

    while True:

        hasher.update(inputFile.read().encode('utf-8'))
        newHash = hasher.hexdigest()

        if newHash != oldHash:
            print('xd')

        oldHash = newHash
</code></pre>
<p>I need to quickly write sass compiler and that how I'm checking if user made any changes in file.It works but only when I add something to file, when I delete any word or char it doesn't detect it.</p>
<p>Do you have any idea why?</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of immediately checking the hash, you could just check the last modified time using <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer"><code>os.path.getmtime(path)</code></a>.</p>
<p>Considering:</p>
<pre><code>in_path = "" # The sass/scss input file
out_path = "" # The css output file
</code></pre>
<p>Then checking if the file was changed simply do:</p>
<pre><code>if not os.path.exists(out_path) or os.path.getmtime(in_path) &gt; os.path.getmtime(out_path):
    print("Modified")
else:
    print("Not Modified")
</code></pre>
<p>After you've checked if the file was modified, you can then check the hash:</p>
<pre><code>import hashlib

def hash_file(filename, block_size=2**20):
    md5 = hashlib.md5()
    with open(filename, "rb") as f:
        while True:
            data = f.read(block_size)
            if not data:
                break
            md5.update(data)
    return md5.digest()

if not os.path.exists(out_path) or hash_file(in_path) != hash_file(out_path):
    print("Modified")
else:
    print("Not Modified")
</code></pre>
<p>In total you can combine the if statement like this:</p>
<pre><code>if not os.path.exists(out_path) \
        or os.path.getmtime(in_path) &gt; os.path.getmtime(out_path) \
        or hash_file(in_path) != hash_file(out_path):
    print("Modified")
else:
    print("Not Modified")
</code></pre>
</div>
<span class="comment-copy">Please take some time to create a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></span>
<span class="comment-copy">You can't <code>read()</code> the same file twice. You have to re-open it.</span>
<span class="comment-copy">Thanks a lot, that's was really helpful :)</span>
<span class="comment-copy">@KacperCzy≈º You're welcome! If it helped solve your question, then feel free to accept the answer :)</span>
