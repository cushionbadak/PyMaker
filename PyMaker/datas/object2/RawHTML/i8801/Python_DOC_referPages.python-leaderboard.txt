<div class="post-text" itemprop="text">
<p>I have been asked to design a leader board,</p>
<p>This is what I tried </p>
<pre><code>def leader():

    file = open ("res.txt","r")
    reader = csv.reader(file)
    print (("{:20s}{:20s}{:20s}{:20s}".format("\nPlayer","Matches played","Won","Lost")))
    won = 100

    for r in reader:
        won = won-1
        if r[2] == str(won):
           print (("{:20s}{:20s}{:20s}{:20s}".format(r[0],r[1],r[2],r[3])))



    file.close()
</code></pre>
<p>My csv file looks like this</p>
<pre><code>Leeroy,19,7,12
Jenkins,19,8,11
Tyler,19,0,19
Napoleon Wilson,19,7,12
Big Boss,19,7,12
Game Dude,19,5,14
Macho Man,19,3,16
Space Pirate,19,6,13
Billy Casper,19,7,12
Otacon,19,7,12
Big Brother,19,7,12
Ingsoc,19,5,14
Ripley,19,5,14
M'lady,19,4,15
Einstein100,19,8,11
Dennis,19,5,14
Esports,19,8,11
RNGesus,19,7,12
Kes,19,9,10
Magnitude,19,6,13
</code></pre>
<p>I wish for it to display the person with the most wins first, can you help?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try slurping the file into a list:</p>
<pre><code>all_rows = list(reader)
</code></pre>
<p>Then sort all the rows on the key of most wins:</p>
<pre><code>sorted_rows = sorted(all_rows, key=(lambda row: row[2]), reverse=True)
</code></pre>
<p>You might want to stack several sorts, or define a more complex key, so that you can enforce ordering within equal numbers of wins (for example, 7 wins of 8 plays is better than 7 wins of 100 plays).</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>keys = ["Player","Matches played","Won","Lost"]

# read file
with open("res.txt") as f:
    content = f.readlines()
# you may also want to remove whitespace characters like `\n` at the end of each line and 
# split it by ',' then form a dictionary out of it 
content = [dict(zip(keys,x.strip().split(','))) for x in content]
# sort the above list of dicts in decreasing orde.
final_result = sorted(content, key=lambda k: k['Won'], reverse=True)

print final_result# sorted By score
# first element is the one with highest Won value
print final_result[0] # highest Won
</code></pre>
</div>
<span class="comment-copy">You can try reading the whole file into memory first in the form of a list and then apply <code>sorted()</code> on it with appropriate parameters.</span>
<span class="comment-copy">What does key = lambda do?</span>
<span class="comment-copy">A <a href="https://docs.python.org/3/tutorial/controlflow.html?highlight=lambda#lambda-expressions" rel="nofollow noreferrer"><i>lambda expression</i></a> is basically an in-line function definition. It creates a function that returns whatever expression comes after the <code>lambda</code> keyword.</span>
<span class="comment-copy">reason for negative vote?</span>
