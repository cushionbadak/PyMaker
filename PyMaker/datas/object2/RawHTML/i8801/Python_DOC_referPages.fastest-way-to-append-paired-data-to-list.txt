<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1663807/how-to-iterate-through-two-lists-in-parallel">How to iterate through two lists in parallel?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I have a list of data called <code>ID</code>, and another list called <code>Dates</code>. They are paired data, and the lists are of equal lengths, approximately 800,000 items long each. I want to pair each item from each list, put them into a tuple, and append these tuples into another list. I.e.:</p>
<pre><code>ID = [1,2,3,4,...]
Dates = [2012-04-05, 2012-04-07, 2012-04-08, 2012-04-09,...]

ID_Datetime = [(1,2012-04-05), (2,2012-04-07), (3,2012-04-08), (4,2012-04-09)...]
</code></pre>
<p>Here's my try. It seems like it works, but when I tried to use it on the actual lists, my computer crashed because it couldn't handle the data. </p>
<pre><code>def list_combine():
    for i in ID:
           for j in Dates:
               ID_Datetime.append((i, j))
</code></pre>
<p>Any tips on a faster way to do this? </p>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> function, which will return (in Python 3) a zip object that you can iterate through:</p>
<pre><code>&gt;&gt;&gt; ID = [1,2,3,4]
&gt;&gt;&gt; DateTime = ['2012-04-05', '2012-04-07', '2012-04-08', '2012-04-09']
&gt;&gt;&gt; zip(ID, DateTime)
&lt;zip object at 0x012EC828&gt;
</code></pre>
<p>You can also call <code>list</code> on the object if you want the full list:</p>
<pre><code>&gt;&gt;&gt; list(zip(ID, DateTime))
[(1, '2012-04-05'), (2, '2012-04-07'), (3, '2012-04-08'), (4, '2012-04-09')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use izip from the itertools module. This creates an iterator from your lists instead of building another one and this way saves memory.</p>
<hr/>
</div>
<span class="comment-copy">Note, your nested for-loop isn't doing what you want anyway. Think about it. Try printing out <code>for i in range(5): for j in 'abc': print(i, j)</code></span>
<span class="comment-copy">@Mitch I am almost certain the OP wants <code>zip</code>, and is erroneously producing the cartesian product (which is why it's crashing his computer).</span>
<span class="comment-copy">@juanpa.arrivillaga Yeah, agreed actually.</span>
<span class="comment-copy">If you think it's due to out of memory, you would better to use lazy evaluation with generator for saving your memory. <code>zip</code> returns generator.</span>
