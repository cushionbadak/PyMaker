<div class="post-text" itemprop="text">
<p>I've created this code to analyse an input sentence to allow for the user to search for a certain word within it. However, I can't seem to figure out how to make it so all the punctuation in the input sentence is disregarded. I need this because, if a sentence such as "hello there, friend" is input, the word "there" is counted as "there," and so if the user is searching for "there" it says it is not in the sentence. Please help me. I'm really new to python.</p>
<pre><code>print("Please enter a sentence")
sentence=input()
lowersen=(sentence.lower())
print(lowersen)
splitlowersen=(lowersen.split())
print (splitlowersen)
print("Enter word")
word=input()
lword=(word.lower())
if lword in splitlowersen:
    print(lword, "is in sentence")
    for i, j in enumerate (splitlowersen):
        if j==lword:
            print(""+lword+"","is in position", i+1)    

if lword not in splitlowersen:
    print (lword, "is not in sentence")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>print("Please enter a sentence")
sentence=input()
lowersen=(sentence.lower())
print(lowersen)
splitlowersen=(lowersen.strip())
#to remove punctuations
splitlowersen = "".join(c for c in splitlowersen if c not in ('!','.',':'))
print("Enter word")
word=input()
lword=(word.lower())
if lword in splitlowersen:
    print(lword, "is in sentence")
    for i, j in enumerate (splitlowersen):
        if j==lword:
            print(""+lword+"","is in position", i+1)

if lword not in splitlowersen:
    print (lword, "is not in sentence")
</code></pre>
<p>Output:</p>
<pre><code>Please enter a sentence
hello, friend
hello, friend
Enter word
hello
hello is in sentence
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could split the string on all punctuation marks:</p>
<pre><code>s = "This, is a line."
f = s.split(".,!?")
&gt;&gt;&gt;&gt; f = ["This", "is", "a", "line"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a little long winded maybe but in python3.</p>
<pre><code># This will remove all non letter characters and spaces from the sentence
sentence = ''.join(filter(lambda x: x.isalpha() or x == ' ', sentence)
# the rest of your code will work after this.
</code></pre>
<p>There are a couple of advanced concepts in here.</p>
<p>Filter will take a function and an iterible returning a generator with the items that don't return true from the function
<a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#filter</a></p>
<p>Lambda will create an anonymous function that will check each letter for us.
<a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow noreferrer">https://docs.python.org/3/reference/expressions.html#lambda</a></p>
<p>x.isalpha() will check that the letter in question is actually a letter. 
followed by x == ' ' to see it it could be a space.
<a href="https://docs.python.org/3.6/library/stdtypes.html?highlight=isalpha#str.isalpha" rel="nofollow noreferrer">https://docs.python.org/3.6/library/stdtypes.html?highlight=isalpha#str.isalpha</a></p>
<p>''.join will take the results of the filter and put it back into a string for you.
<a href="https://docs.python.org/3.6/library/stdtypes.html?highlight=isalpha#str.join" rel="nofollow noreferrer">https://docs.python.org/3.6/library/stdtypes.html?highlight=isalpha#str.join</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Or you could use <a href="http://www.nltk.org/api/nltk.tokenize.html" rel="nofollow noreferrer" title="Natural Language Text Processing"><code>nltk</code></a> package for tokenizing your text which does the sentence tokenization as you would be expecting and it also avoids the common pitfalls of punctuation as 'Mr.' --&gt; This will not be broken down based on the punctuation.</p>
<pre><code>from nltk.tokenize import word_tokenize
string = "Hello there, friend"
words = word_tokenize(string)
print(words)
</code></pre>
<p><code>OUTPUT</code></p>
<pre><code>['Hello', 'there', ',', 'friend']
</code></pre>
<p>So I guess you should try using <code>nltk</code> package and see if it works.</p>
<p>Click this link <a href="https://stackoverflow.com/questions/15057945/how-do-i-tokenize-a-string-sentence-in-nltk">here</a> for better understanding. </p>
<p>Hope this helps :)</p>
</div>
<span class="comment-copy">Thank you so much!</span>
