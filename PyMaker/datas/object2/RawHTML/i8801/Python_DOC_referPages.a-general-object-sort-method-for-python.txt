<div class="post-text" itemprop="text">
<p>I want to generate something like hash for almost every object. It is currently implemented as:</p>
<pre><code>hashlib.sha256(pickle.dumps(something))
</code></pre>
<p>.</p>
<p>However, it generates different hash for <code>something = {"a": 1, "b": 2}</code> and <code>something={"b":2, "a":1}</code>. I really want the generated hash to be identical for them. Thus I want a function that sorts a <em>general</em> object (maybe something contains a dictionary as an attribute) and make sure <code>{"a": 1, "b": 2}</code> and <code>something={"b":2, "a":1}</code> pickle to the same bytes.</p>
<p>Is this possible?</p>
<p>Or is there a better way to generate such hash?</p>
<p>Edit:
I don't care if data types are altered. For example, <code>sorted(something.items())</code> can do the job for a dictionary. But I want a more general method.</p>
</div>
<div class="post-text" itemprop="text">
<p>Look at OrderedDict object in collections <a href="https://docs.python.org/3/library/collections.html" rel="nofollow noreferrer">https://docs.python.org/3/library/collections.html</a></p>
</div>
<span class="comment-copy">Dictionary can't be sorted anyway, as it has no order. Unless you convert it to a different data structure like list of tuple or OrderedDict , you can't sort it.</span>
<span class="comment-copy">No. The input object is not in my control and may be an ordinary dictionary.</span>
<span class="comment-copy">So ? You can cast it into OrderedDict. Implicitly, {"a": 1, "b": 2} and {"b": 2, "a": 1} will be transform into the same OrderedDict</span>
