<div class="post-text" itemprop="text">
<p>I've been trying unsuccessfully to extract words up to the numeric chars from the below:</p>
<pre><code>&lt;div class="text"&gt;hello there 234 44&lt;/div&gt;
</code></pre>
<p>Here is what I am doing:</p>
<pre><code>regex_name = re.compile(r'&lt;div class="text"&gt;([^\d].+)&lt;/div&gt;')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may wanna use a <em><a href="http://www.regular-expressions.info/lookaround.html" rel="nofollow noreferrer">positive look-behind</a></em> assertion</p>
<pre><code>(?&lt;="&gt;)[^\d]+
^^^^^^^
</code></pre>
<p>see <strong><a href="https://regex101.com/r/3fmGmi/1" rel="nofollow noreferrer">regex demo</a></strong></p>
<p><strong>python</strong> ( <a href="https://ideone.com/anF0wl" rel="nofollow noreferrer">demo</a> )</p>
<pre><code>import re

s = """&lt;div class="text"&gt;A hawking party 64 x 48 1/2in (163 x 123.3cm)&lt;/div&gt;"""
r = r"(?&lt;=\"&gt;)[^\d]+"
o = re.findall(r, s)
print o
# ['A hawking party ']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As a starting point, I'd use <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer"><code>BeautifulSoup</code> HTML parser</a> to find the desired element in the HTML input and extract the element's text.</p>
<p>Then, I'd use <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow noreferrer"><code>itertools.takewhile()</code></a> to get all the characters in a string until a digit is met:</p>
<pre><code>In [1]: from itertools import takewhile

In [2]: from bs4 import BeautifulSoup

In [3]: data = """&lt;div class="text"&gt;hello there 234 44&lt;/div&gt;"""

In [4]: soup = BeautifulSoup(data, "html.parser")

In [5]: text = soup.find("div", class_="text").get_text()

In [6]: ''.join(takewhile(lambda x: not x.isdigit(), text))
Out[6]: u'hello there '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>data = '&lt;div class="text"&gt;A hawking party 64 x 48 1/2in (163 x 123.3cm)&lt;/div&gt;'
final =''
for i in data.replace('&lt;div class="text"&gt;','').replace('&lt;/div&gt;',''):
    if not i.isdigit():
        final+= i
    else:
        break
print final
</code></pre>
<p>results in</p>
<pre><code>A hawking party 
</code></pre>
</div>
<span class="comment-copy">are you scraping a site? If so there are tools to find the information without regex.</span>
<span class="comment-copy">This looks dangerously like using <a href="http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags">regex to parse html</a>. Try <a href="https://www.crummy.com/software/BeautifulSoup/" rel="nofollow noreferrer">beautifulsoup</a> instead as a starting point?</span>
<span class="comment-copy">Suppose I want to learn how to do it in regex :)</span>
<span class="comment-copy">Suppose that it's not possible in a general case.</span>
<span class="comment-copy">HTML is not regular.</span>
<span class="comment-copy">Awesome!! Now I understand:)</span>
<span class="comment-copy">without itertools data = '&lt;div class="text"&gt;hello there 234 44&lt;/div&gt;' from bs4 import BeautifulSoup ('').join([i for i in BeautifulSoup(data,'html').get_text() if not i.isdigit()])</span>
