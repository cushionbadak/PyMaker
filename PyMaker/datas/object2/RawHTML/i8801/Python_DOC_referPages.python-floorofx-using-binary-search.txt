<div class="post-text" itemprop="text">
<p>How do I write the code by using binary search:</p>
<pre><code>def floorofx(L, x):
    pass
</code></pre>
<p>Like define low, high, middle for each of element. As,</p>
<pre><code>Input: L = [11, 12, 13, 14, 15, 20, 27, 28], x = 17
Output: 15
</code></pre>
<p>15 is the largest element in <code>L</code> smaller than 17.</p>
<pre><code>Input: L = [11, 12, 13, 14, 15, 16, 19], x = 20
Output: 19
</code></pre>
<p>19 is the largest element in <code>L</code> smaller than 20.</p>
<pre><code>Input: L = [1, 2, 8, 10, 10, 12, 19], x = 0
Output: -1
</code></pre>
<p>Since floor doesn't exist, output is -1.</p>
<p>Can someone help me with it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use the <a href="https://docs.python.org/3/library/bisect.html#module-bisect" rel="nofollow noreferrer"><code>bisect</code></a> module and decrement the obtained index.</p>
<pre><code><b>from bisect import bisect_right</b>

def floorofx(L, x):
    idx = <b>bisect_right(L,x)</b>
    return L[idx-1] if idx &gt; 0 else -1</code></pre>
<p>This generates the following results (for your given sample input):</p>
<pre><code>&gt;&gt;&gt; floorofx(L = [11, 12, 13, 14, 15, 20, 27, 28], x = 17)
15
&gt;&gt;&gt; floorofx(L = [11, 12, 13, 14, 15, 16, 19], x = 20)
19
&gt;&gt;&gt; floorofx(L = [1, 2, 8, 10, 10, 12, 19], x = 0)
-1
</code></pre>
<p>Mind that <strong><code>L</code> must be sorted</strong>, and that in case <strong><code>-1</code> is an element of <code>L</code></strong>, you cannot make the <strong>distinction between "not found" and -1 as a result</strong>. Since we use <em>binary search</em>, the algorithm runs in <em>O(log n)</em>.</p>
</div>
<span class="comment-copy">What if <code>-1</code> is an element of <code>L</code>?</span>
<span class="comment-copy">It returns -1 instead of 0    In this case     L = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110]         self.assertEqual(floorofx(L, 0), 0)</span>
<span class="comment-copy">@WentaoHu: and this is fixed one second ago.</span>
