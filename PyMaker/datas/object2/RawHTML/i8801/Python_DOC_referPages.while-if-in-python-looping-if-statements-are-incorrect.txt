<div class="post-text" itemprop="text">
<p>Having some difficulty using a While function alongside an IF so that if an INPUT hasn't been met, the same question would be repeatedly asked until the outcome was correct.</p>
<pre><code>county = input(str("County London/Kent/Essex: ")).upper()
while county != ("LONDON") and county != ("KENT") and county != ("ESSEX"):
    if county == ("LONDON"):
        county = ("LONDON")
    elif county == ("KENT"):
        county = ("KENT")
    elif county == ("ESSEX"):
        county = ("ESSEX")
    else:
        county = input(str("Invalid - Please enter an accepted county: ")).upper()
</code></pre>
<p>If the user doesn't enter London, Kent or Essex, the input message would be asked until one of these are entered.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try something like this:</p>
<pre><code>counties = ["London", "Kent", "Essex"] # list of counties
prompt = "County " + "/".join(counties) + ": " # prompt of the input

while True:
    county = raw_input(prompt).title() # using str.title to format the input
    if county in counties: # the input is part of the list
        county = county.upper()
        break
    else: # the input is invalid, try again 
        print "Invalid - Please enter an accepted county."
</code></pre>
<p>Note: I used <code>raw_input()</code> instead of <code>input()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If you can use Python 3 instead of 2, the code runs smoothly as is.</p>
<p>They changed <code>input()</code> not to evaluate the input as a python expression in 3.4, to work like the old <code>raw_input()</code>.</p>
<p>Here's the docs for <a href="https://docs.python.org/2/library/functions.html#input" rel="nofollow noreferrer">python 2</a>:</p>
<blockquote>
<p>input([prompt])</p>
<p>Equivalent to eval(raw_input(prompt)).</p>
<p>This function does not catch user errors. If the input is not syntactically valid, a SyntaxError will be raised. Other exceptions
  may be raised if there is an error during evaluation.</p>
<p>If the readline module was loaded, then input() will use it to provide elaborate line editing and history features.</p>
<p>Consider using the raw_input() function for general input from users.</p>
</blockquote>
<p>and <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">python 3</a>:</p>
<blockquote>
<p>input([prompt])</p>
<p>If the prompt argument is present, it is written to standard output without a trailing newline. The function then reads a line from
  input, converts it to a string (stripping a trailing newline), and
  returns that. When EOF is read, EOFError is raised. Example:</p>
<pre><code>&gt;&gt;&gt; s = input('--&gt; ')  
--&gt; Monty Python's Flying Circus
&gt;&gt;&gt; s  
"Monty Python's Flying Circus"
</code></pre>
<p>If the readline module was loaded, then input() will use it to provide elaborate line editing and history features.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Let me guess. You are getting an error like</p>
<pre><code>NameError: name 'London' is not defined
</code></pre>
<p>The reason for that is the following: <code>input</code> treats what it reads as Python expression, not as string; so when you enter <code>London</code> it tries to interpret it as the variable name named <code>London</code>. Try to enter string instead: <code>"London"</code> -- and it will work.</p>
<p>Example of what <code>input</code> does:</p>
<pre><code>&gt;&gt;&gt; print input("-&gt; ")
-&gt; [1, 2, 3][0] + 4
5
</code></pre>
<p>It's 5 because <code>input</code> treats what it reads as Python exrpession. In this case it sees the list of three numbers, takes the first one and adds 4 to it.</p>
<p>You really should not use <code>input()</code>. Do the following:</p>
<pre><code>import sys
...
...
else:
    print "some prompt goes here"
    line = sys.stdin.readline().strip().upper()
</code></pre>
<p><strong>Edit:</strong> as mentioned in the comment, it's even better to use <code>raw_input()</code> instead of <code>sys.stdin.readline()</code>. Completely forgot about it; did not write programs which read from terminal from quite some time :)</p>
</div>
<span class="comment-copy">As a side suggestion, you can use <code>while county not in ["LONDON","KENT","ESSEX"]:</code></span>
<span class="comment-copy">For performance while <code>county not in ("LONDON","KENT","ESSEX"):</code> is slightly better ;)</span>
<span class="comment-copy">what are you asking? I ran your code and it worked as you would think. The loop keeps prompting and exits once one of the three places are input.</span>
<span class="comment-copy"><code>county = ("ESSEX")</code> evaluates into <code>county = "ESSEX"</code> without brackets. Do ypu need to make a tuple? If yes, use <code>county = ("ESSEX", )</code></span>
<span class="comment-copy"><a href="http://stackoverflow.com/q/23294658/953482">Asking the user for input until they give a valid response</a> may be of interest to you. (Not voting to close as duplicate since your question is more "why isn't this specific code working?" than "what's a good way to do this?")</span>
<span class="comment-copy"><code>raw_input("some prompt goes here")</code> would be the first choice before <code>sys.stdin.readline()</code>.</span>
<span class="comment-copy">Indeed. Will add a note to the answer now.</span>
