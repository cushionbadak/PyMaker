<div class="post-text" itemprop="text">
<p>I'm ssh'd into a remote server, and there I created to python files as a test: one to create a database, and one to read data from it. </p>
<p>The script that creates the database</p>
<pre><code>import os
import sqlite3

# set up database
conn = sqlite3.connect('Materials.db')
c = conn.cursor()

def createTable():
        c.execute("DROP TABLE IF EXISTS images")
        c.execute("CREATE TABLE images(ID TEXT, url TEXT)")
createTable()

path = os.getcwd()

imagepath = "/home/rootadmin/1080_images"
imagedir = os.listdir(imagepath)
for image in range(0,len(imagedir)):
        c.execute('INSERT INTO images(ID, url) VALUES(?,?)',(imagedir[image],'www.google.com'))
        print(imagedir[image])
</code></pre>
<p>Here the print commands the data that is required, e.g. it prins the ID's of the images. </p>
<p>In my script to read the data from the db:</p>
<pre><code>import sqlite3

conn = sqlite3.connect('Materials.db')
c = conn.cursor()

c.execute('SELECT ID FROM images')
objectId = c.fetchall()
print(objectId)
</code></pre>
<p>I have a limited knowledge of sqlite3, but I would expect the print command in the second script to print the ID's found in the images table, from the Materials.db, yet it returns an empty array. </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to commit your transaction when inserting:</p>
<pre><code>for image in range(0,len(imagedir)):
    c.execute('INSERT INTO images(ID, url) VALUES(?,?)',(imagedir[image],'www.google.com'))
    print(imagedir[image])
conn.commit()
</code></pre>
<p>or <a href="https://docs.python.org/3/library/sqlite3.html#using-the-connection-as-a-context-manager" rel="nofollow noreferrer">use the connection as a context manager</a> to auto-commit when the context exits:</p>
<pre><code>with conn:
    for image in range(0,len(imagedir)):
        c.execute('INSERT INTO images(ID, url) VALUES(?,?)',(imagedir[image],'www.google.com'))
        print(imagedir[image])
</code></pre>
<p>This also ensures that the transaction is explicitly rolled back if there was an exception.</p>
</div>
<span class="comment-copy">your <code>for</code> loops could also be improved btw. do <code>for item in imagedir:</code> and in the loop use the new variable <code>item</code> instead of <code>imagedir[image]</code></span>
<span class="comment-copy">This works, thank you. Could you elaborate on using connection as a context manager?</span>
<span class="comment-copy">@MitchellvanZuylen: I linked to the relevant documentation section.</span>
<span class="comment-copy">@MitchellvanZuylen: for details on what context managers do, see the <a href="https://docs.python.org/3/reference/datamodel.html#with-statement-context-managers" rel="nofollow noreferrer">reference documentation</a>.</span>
