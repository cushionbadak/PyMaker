<div class="post-text" itemprop="text">
<p>one question regarding repeating pattern</p>
<p>I have:</p>
<pre><code>import re

a = ['123', '121', '136']
pattern_variable = '[1-9][1-9][1-9]'

for i in a:
    match = re.match(pattern_variable,i)
    if match != None:
        print(i)
</code></pre>
<p>Now let's assume I want to get only 121 from a list or 535 or 737 whatever has first and third position the same. Do you have any idea how would i define this with pattern variable?</p>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a capturing group and a <a href="http://www.regular-expressions.info/backref.html" rel="nofollow noreferrer">backreference</a>:</p>
<pre><code>r'([1-9])[1-9]\1'
</code></pre>
<p>If you want to make sure it's the whole string :</p>
<pre><code>r'\A([1-9])[1-9]\1\Z'
</code></pre>
<p>Or that the 3 digits form one single number :</p>
<pre><code>r'\b([1-9])[1-9]\1\b'
</code></pre>
<p>The last 2 regexen would prevent <code>4121</code> from matching <code>121</code>.</p>
<h1>Update</h1>
<p>If you want to match <code>121</code> but not <code>111</code>, you could use a <a href="http://www.regular-expressions.info/lookaround.html" rel="nofollow noreferrer">negative lookahead</a> :</p>
<pre><code>import re

a = ['123', '121', '136', '1232', '111', '1a1']
pattern_variable = r'\b([1-9])(?!\1)[1-9]\1\b'

for i in a:
    match = re.match(pattern_variable,i)
    if match != None:
        print(i)

#=&gt; 121
</code></pre>
<p>It means : a word boundary, a digit not followed by itself, another digit, the same digit as the first one and a word boundary :) </p>
</div>
<div class="post-text" itemprop="text">
<p>Use a backreference:</p>
<pre><code>pattern_variable = r'([1-9])[1-9]\1'
</code></pre>
<p>Note you need to use a raw string literal, or you'd have to escape the <code>1</code> twice.</p>
<p>Besides, if you want to match the <em>whole</em> string, you need to add <code>$</code> at the end of the pattern since <code>re.match()</code> only anchors the match at the <em>start</em> of the string. Or, if you use Python 3.4 and newer, you may use <code>pattern_variable</code> regex with the <a href="https://docs.python.org/3/library/re.html#re.fullmatch" rel="nofollow noreferrer"><code>re.fullmatch()</code></a> method.</p>
</div>
<span class="comment-copy"><code>([1-9])[1-9]\1</code></span>
<span class="comment-copy">Hi, thank you. May I just ask one more thing. You pattern match 121, but does match 111 as well. How could i match anythin that has on first position 1 and 1 on third but anything than 1 in second? thanks</span>
<span class="comment-copy">@Testingman Updated. That was a fun one.</span>
<span class="comment-copy">Thank you Eric, very interesting. I appreciate it.</span>
