<div class="post-text" itemprop="text">
<p>How to convert string in ISO8601 time format to python3 datetime.
Here is my time: </p>
<p><div class="snippet" data-babel="false" data-console="true" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>2017-03-03T11:30:00+04:00</code></pre>
</div>
</div>
</p>
<p>And the way I try:</p>
<p><div class="snippet" data-babel="false" data-console="true" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-js lang-js prettyprint-override"><code>datetime.strptime(appointment['datetime'], '%Y-%m-%dT%H:%M:%S%z')</code></pre>
</div>
</div>
</p>
<p>The problem here, is that I don't know how to represent +4:00 timezone in format parameter of .strptime method.</p>
</div>
<div class="post-text" itemprop="text">
<p>Notice that <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="noreferrer"><code>%z</code></a> in python datetime doesn't include a colon:</p>
<blockquote>
<p><strong>%z</strong>:   UTC offset in the form +HHMM or -HHMM (empty string if the object is naive) e.g. +0000, -0400, +1030</p>
</blockquote>
<p>However, the date string in the example does have a colon e.g. <code>+04:00</code>. Just by not including that colon you can parse the date.</p>
<pre><code>&gt;&gt;&gt; s = "2017-03-03T11:30:00+04:00"
&gt;&gt;&gt; datetime.strptime(s[:len(s)-3] + s[len(s)-2:], '%Y-%m-%dT%H:%M:%S%z')
datetime.datetime(2017, 3, 3, 11, 30, tzinfo=datetime.timezone(datetime.timedelta(0, 14400)))
</code></pre>
<hr/>
<p>I would suggest that you use this powerful library <a href="https://dateutil.readthedocs.io/en/stable/index.html" rel="noreferrer"><code>python-dateutil</code></a>:</p>
<pre><code>&gt;&gt;&gt; from dateutil import parser
&gt;&gt;&gt; parser.parse("2017-03-03T11:30:00+04:00")
datetime.datetime(2017, 3, 3, 11, 30, tzinfo=tzoffset(None, 14400))
</code></pre>
</div>
<span class="comment-copy">please refer this link <a href="http://stackoverflow.com/questions/127803/how-to-parse-an-iso-8601-formatted-date" title="how to parse an iso 8601 formatted date">stackoverflow.com/questions/127803/…</a> . I think this will be helpful parser class of dateutil library of python will do fine.</span>
<span class="comment-copy"><code>dateutil.parser</code> is too wide, such as <code>parse("Thu, 25 Sep 2003 10:49:41 -0300")</code> can also work. How to limit the format of the time only to ISO-8601 with timezone？</span>
