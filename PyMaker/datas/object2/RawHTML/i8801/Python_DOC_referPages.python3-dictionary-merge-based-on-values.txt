<div class="post-text" itemprop="text">
<p>I have a dictionary composed of <code>{key: value}</code>.</p>
<p>I select a set of keys from this dictionary.</p>
<p>I'd like to build a new dictionary with <code>{keyA: set of all keys wich have the same value as keyA}</code>.</p>
<p>I already have a solution: Is there a faster way to do it?</p>
<p>It seems very slow to me, and I imagine I'm not the only one in this case!</p>
<pre><code>for key1 in selectedkeys:
    if key1 not in seen:
        seen.add(key1)
        equal[key1] = set([key1])#egual to itself
        for key2 in selectedkeys:
            if key2 not in seen and dico[key1] == dico[key2]:
                equal[key1].add(key2)
        seen.update(equal[key1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So you want to create a dictionary that maps <code>key</code> to "the set of all keys which have the same value as <code>key</code>" for each selected key in a given source dictionary.</p>
<p>Thus, if the source dictionary is:</p>
<pre><code>{'a': 1, 'b': 2, 'c': 1, 'd': 2, 'e': 3, 'f': 1, 'g': 3)
</code></pre>
<p>and the selected keys are <code>a</code>, <code>b</code>, and <code>e</code>, the result should be:</p>
<pre><code>{'a': {'a', 'c', 'f'}, 'e': {'g', 'e'}, 'b': {'b', 'd'}}
</code></pre>
<p>One way to achieve this would be to use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a> to build a value to key table, and then use that to build the required result from the specified keys:</p>
<pre><code>from collections import defaultdict

def value_map(source, keys):
    table = defaultdict(set)
    for key, value in source.items():
        table[value].add(key)
    return {key: table[source[key]] for key in keys}

source = {'a': 1, 'b': 2, 'c': 1, 'd': 2, 'e': 3, 'f': 1, 'g': 3)

print(value_map(source, ['a', 'b', 'e']))
</code></pre>
<p>Output:</p>
<pre><code>{'a': {'a', 'c', 'f'}, 'e': {'g', 'e'}, 'b': {'b', 'd'}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this </p>
<pre><code>&gt;&gt;&gt; a = {1:1, 2:1, 3:2, 4:2}
&gt;&gt;&gt; ret_val = {}
&gt;&gt;&gt; for k, v in a.iteritems():
...     ret_val.setdefault(v, []).append(k)
...
&gt;&gt;&gt; ret_val
{1: [1, 2], 2: [3, 4]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def convert(d):
    result = {}
    for k, v in d.items():  # or d.iteritems() if using python 2
        if v not in result:
            result[v] = set()
        result[v].add(k)
    return result
</code></pre>
<p>or just use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict(set)</code></a> if you are careful enough not to access any non key later :-)</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you select a set of keys from the original dictionary. We can modify @Nilesh solution for your purpose.</p>
<pre><code>a = {1:1, 2:1, 3:2, 4:2}
keys = [1, 3]  # lets say this is the list of keys
ret_val = {}
for i in keys:
  for k,v  in a.items():
    if a[i]==v:
      ret_val.setdefault(i, []).append(k)
print (ret_val)

{1: [1, 2], 3: [3, 4]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This was sort of stated in the comments by @Patrick Haugh:</p>
<pre><code>d=your dictionary
s=set(d.values())
d2={i:[] for i in s}
for k in d:
    d2[d[k]].append(k)
</code></pre>
</div>
<span class="comment-copy">Can you give an example input, output?</span>
<span class="comment-copy">It would probably be faster to build a dictionary that maps <code>{value: set(keys)}</code>.</span>
<span class="comment-copy">this is much faster than what I did. I thought there would be an option using something like Counter libraries which are quit fast!</span>
<span class="comment-copy">I think the correct one is <code>result[v].add(k)</code> likewise for the line above...</span>
