<div class="post-text" itemprop="text">
<p>Is there an alternate method to read a text file in python apart from using <code>open()</code>? I am using the below code, but I want to know if there's any alternative method to do it. Thanks.</p>
<pre><code>data = open("thefile.txt","r")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to read line by line you can do this. </p>
<pre><code> with open('filename' ,'r') as f:
      for line in f:
           print line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use a context manager like this:</p>
<pre><code>with open('filename', 'r') as textfile:
    textfile.read()
</code></pre>
<p>In your example you simply open the file, you do not read anything yet. For basic questions like this you should refer to the official python tutorial at python.org.</p>
</div>
<span class="comment-copy">why do you want an alternative?</span>
<span class="comment-copy">Not really alternative way, but you can use <code>with</code> with open. <a href="https://docs.python.org/2/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">docs.python.org/2/tutorial/â€¦</a></span>
<span class="comment-copy">@sangheestyle - He should...</span>
<span class="comment-copy">one can always use the <a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer"><code>io</code></a> module directly. And sometimes the file is in a generally known format (<code>csv</code>, <code>yaml</code>, ...) then there are various specialized libraries for that.</span>
<span class="comment-copy">its failing in pytest so was checking for alternative</span>
<span class="comment-copy">But its failing in pytest</span>
<span class="comment-copy">@AnuraagKumar "But its failing in pytest" is <b>supremely</b> unhelpful.  What is failing? What is the error you get? Are you sure it is the call to <code>open</code>? <i>If you ask people for help, you need to give them enough information so that they can help you.</i> Remember, these are <i>volunteers</i> trying to assist you with your question. No one is paid to do this, so please do not assume someone will try to dig and replicate your issue without you giving enough information to replicate it or understand the problem fully.</span>
<span class="comment-copy">When doing unittests, as I suppose you do with pytest, you usually do not rely on the existance of external files. Read about "mocking" instead. If you tested what was read from the file it will of course fail, because you just OPENED it as I said above. You have to read the content after that.</span>
