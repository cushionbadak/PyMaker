<div class="post-text" itemprop="text">
<pre><code>import parsedatetime as pdt

c = pdt.Constants()
p = pdt.Calendar(c)
p.parseDateText('28 Feb 17') #Current date at runtime is Mar 7 2017
</code></pre>
<p><strong>RETURNS:</strong></p>
<pre><code>(2018, 2, 17, 21, 51, 22, 1, 66, 0)
</code></pre>
<p>So I built a webscraper to go get calendar events posted to several websites of interest and they have their dates in various non-standard formats. I am using <code>parsedatetime</code> to convert the free text dates into something more usable in a calendar. The problem I just realized I am facing is for events that I scrape that have already occurred. I narrowed the problem down to starting when the month of the date to be parsed is at least one month prior to the current date, as demonstrated above in the code. </p>
<p>What can I do to either correctly parse these dates (they aren't all in the format as depicted above) or otherwise catch them so they don't get added erroneously to my google calendar? </p>
</div>
<div class="post-text" itemprop="text">
<p>I would recommmend using the <a href="https://github.com/scrapinghub/dateparser" rel="nofollow noreferrer"><code>dateparser</code></a> library:</p>
<pre><code>$ pip install dateparser
</code></pre>
<p>example:</p>
<pre><code>&gt;&gt;&gt; import dateparser
&gt;&gt;&gt; dateparser.parse('28 Feb 17')
datetime.datetime(2017, 2, 28, 0, 0)
</code></pre>
</div>
<span class="comment-copy">If the result you want is <code>(28, 2, 2017)</code> you need to explicitly say where year, month, day is to the datetime parser. You can use <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">datetime.strptime</a> (string parse time) for that. If it is something else that is wrong, I couldn't understand clearly.</span>
