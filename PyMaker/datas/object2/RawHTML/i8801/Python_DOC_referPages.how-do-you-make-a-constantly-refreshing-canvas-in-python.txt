<div class="post-text" itemprop="text">
<p>I am currently trying to code a basic smartmirror for my coding II class in high school with Python. One thing I'm trying to do is create a welcome text that updates based on what button you press. I am reading the string for the canvas' text from a <code>.txt</code> document that changes depending what user I select. Is there any way to get this to automatically refresh when I change the document's text?</p>
<p>The code I am using to display the message is:</p>
<pre><code>text2 = Canvas(tk, width=500, height=100)
welcometext = text2.create_text(200, 50, text=string, font=('Helvetica', 20, 'italic'))
text2.pack(side=TOP, anchor=Center)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The basic way to do this is have a loop. And every cycle of the loop you should check for user input and redraw. Make sure you break everything up into functions so your loop is clean. Something like this -</p>
<pre><code>canvas = Canvas(tk, width=500, height=500)
text = ''

while(True) {
    getUserInput(text)
    draw(canvas, text)
}
</code></pre>
<p>You can use python's built in <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">input</a> function to get the user input in your <code>getUserInput</code> function.</p>
<p>As an aside, this is a naive approach, because the loop will wait for user input every time before redrawing. The proper way to do this would be to use <a href="https://docs.python.org/3.6/library/threading.html" rel="nofollow noreferrer">threading</a>. You could have a thread to capture user input while your main loop does other things. This can get complicated really fast though, due to data synchronization issues. I'd just stick with the naive approach for now.</p>
<p>Also, the variable <code>text2</code> is misleading. Always try to name your variables to be exactly what they are. In this case, it's a <code>Canvas</code> object, so call it <code>canvas</code>.</p>
</div>
