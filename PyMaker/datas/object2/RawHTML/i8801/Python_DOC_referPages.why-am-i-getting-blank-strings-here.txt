<div class="post-text" itemprop="text">
<p>I want to split a string by individual newlines or groups of spaces. I got the result, except for <code>''</code> strings. How do I eliminate those?</p>
<p>Edit: I need the output to retain whitespace groups and split on each newline. The only unwanted things are the <code>''</code>.</p>
<pre><code>In [208]: re.split('(\n|\ +)', 'many   fancy word \n\n    hello    \t   hi')
Out[208]: 
['many',
 '   ',
 'fancy',
 ' ',
 'word',
 ' ',
 '',
 '\n',
 '',
 '\n',
 '',
 '    ',
 'hello',
 '    ',
 '\t',
 '   ',
 'hi']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the pattern include capturing group, those separators are included in the result list.</p>
<p>If you don't use the capturing group or replacing the capturing group (<code>(...)</code>) with non-capturing group (<code>(?:...)</code>), the separators are not included.</p>
<pre><code># Not using group at all
&gt;&gt;&gt; re.split('\n|\ +', 'many   fancy word \n\n    hello    \t   hi')
['many', 'fancy', 'word', '', '', '', 'hello', '\t', 'hi']


# Using non-capturing group
&gt;&gt;&gt; re.split('(?:\n|\ +)', 'many   fancy word \n\n    hello    \t   hi')
['many', 'fancy', 'word', '', '', '', 'hello', '\t', 'hi']
</code></pre>
<p>Quoting <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer"><code>re.split</code> document</a>:</p>
<blockquote>
<p>Split string by the occurrences of pattern. <strong>If capturing parentheses
  are used in pattern, then the text of all groups in the pattern are
  also returned as part of the resulting list.</strong> If maxsplit is nonzero,
  at most maxsplit splits occur, and the remainder of the string is
  returned as the final element of the list.</p>
</blockquote>
<hr/>
<p><strong>UPDATE</strong> According to question edit:</p>
<p>You can filter empty string out using <code>filter(None, ..)</code>:</p>
<pre><code>list(filter(None, re.split('(\n|\ +)', 'many fancy word \n\n hello \t hi')))
</code></pre>
<p>or using <code>re.findall</code> with modified pattern:</p>
<pre><code>re.findall('\n|\ +|[^\n ]+', 'many fancy word \n\n hello \t hi')
# `[^\n ]` matches any character that is not a newline nor a space.
</code></pre>
</div>
<span class="comment-copy">Because <code>()</code> is a <i>capture group</i>. Define it as a <i>non capture group</i> with <code>(?:\n|\ +)</code>.</span>
<span class="comment-copy">@WillemVanOnsem Sorry I didnt make my requirement clear. Please see update.</span>
<span class="comment-copy">See <a href="https://ideone.com/MB5TQ3" rel="nofollow noreferrer">ideone.com/MB5TQ3</a>, use <code>[x for x in re.split('(\n| +)', 'many   fancy word \n\n    hello    \t   hi') if x]</code></span>
<span class="comment-copy">Sorry I didnt make my requirement clear. Please see update.</span>
<span class="comment-copy">@aitchnyu, <code>filter(None, re.split('(\n|\ +)', 'many   fancy word \n\n    hello    \t   hi'))</code> give you what you want? (Wrap the result with <code>list(..)</code> if you are using python 3.x)</span>
<span class="comment-copy">I think you need to only wrap the space matching pattern in a capturing group.</span>
<span class="comment-copy">yes, it would. I do want a regex result that does not generate <code>''</code> though.</span>
<span class="comment-copy">@aitchnyu, Or using <code>re.findall</code>: <code>re.findall('\n|\ +|[^\n ]+', 'many   fancy word \n\n    hello    \t   hi')</code></span>
