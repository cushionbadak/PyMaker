<div class="post-text" itemprop="text">
<p>Having following file <code>handler.py</code></p>
<pre><code>import job

def worker():
   return job()
</code></pre>
<p>And following test <code>test_handler.py</code></p>
<pre><code>import subprocess

def test_worker():
     subprocess.Popen(['./handler.py'], stderr=subprocess.PIPE)        
</code></pre>
<p>How can I mock <code>job</code> function, taking into account that <code>handler.py</code> is called in <code>subprocess</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This isn't the best approach to test this feature.</p>
<p>Since it is a unit test, you should test the worker and check it's value.</p>
<p><strong>handler.py</strong></p>
<pre><code>import job

def worker():
    return job()
</code></pre>
<p><strong>test_handler.py</strong></p>
<pre><code>import unittest
from handler import worker

class TestHandlerCase(unittest.TestCase):

    def test_worker(self):
        """Test call worker should succeed."""
        self.assertEqual(worker(), True)

if __name__ == '__main__':
    unittest.main()
</code></pre>
<p>Check if the result of method is equal to the expected. And so, adjust the method/test.</p>
<p>Anyway, this is an example, based on you question code.</p>
</div>
<span class="comment-copy">What about <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mock</a>?</span>
<span class="comment-copy">Edited question, this is needed in subprocess</span>
<span class="comment-copy">Definitely, mock could help you! :-)</span>
<span class="comment-copy">@MauroBaraldi, you mean that I can mock something in parent process and expect it to be mocked in child process?</span>
<span class="comment-copy">Since, you want to test <code>my_func</code>, any external call could be mocked and handle with results.</span>
