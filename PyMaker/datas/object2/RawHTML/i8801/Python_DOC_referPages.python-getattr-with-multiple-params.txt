<div class="post-text" itemprop="text">
<p>Construction <code>getattr(obj, 'attr1.attr2', None)</code> does not work.
What are the best practices to replace this construction?
Divide that into two getattr statements?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/operator.html#operator.attrgetter" rel="noreferrer"><code>operator.attrgetter()</code></a> in order to get multiple attributes at once:</p>
<pre><code>from operator import attrgetter

my_attrs = attrgetter(attr1, attr2)(obj)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As stated in <a href="https://stackoverflow.com/a/11975810/9813264">this answer</a>, the most straightforward solution would be to use <a href="https://docs.python.org/2/library/operator.html#operator.attrgetter" rel="nofollow noreferrer">operator.attrgetter</a> (more info in <a href="https://docs.python.org/2/library/operator.html#operator.attrgetter" rel="nofollow noreferrer">this python docs page</a>).</p>
<p>If for some reason, this solution doesn't make you happy, you could use this code snippet:</p>
<pre><code>def multi_getattr(obj, attr, default = None):
"""
Get a named attribute from an object; multi_getattr(x, 'a.b.c.d') is
equivalent to x.a.b.c.d. When a default argument is given, it is
returned when any attribute in the chain doesn't exist; without
it, an exception is raised when a missing attribute is encountered.

"""
attributes = attr.split(".")
for i in attributes:
    try:
        obj = getattr(obj, i)
    except AttributeError:
        if default:
            return default
        else:
            raise
return obj

# Example usage
obj  = [1,2,3]
attr = "append.__doc__.capitalize.__doc__"

multi_getattr(obj, attr) #Will return the docstring for the
                         #capitalize method of the builtin string
                         #object
</code></pre>
<p>from <a href="http://code.activestate.com/recipes/577346-getattr-with-arbitrary-depth/" rel="nofollow noreferrer">this page</a>, which does work. I tested and used it.</p>
</div>
<span class="comment-copy">I think OP wants <code>my_attrs = ('attr1.attr2')(obj)</code></span>
<span class="comment-copy">The title says something different though.</span>
<span class="comment-copy">@elena yes, the title makes this ambiguous.</span>
<span class="comment-copy">Sorry. I want to get <code>obj.attr1.attr2</code> using getattr or another method.</span>
