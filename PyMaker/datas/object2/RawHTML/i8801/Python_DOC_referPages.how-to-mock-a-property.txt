<div class="post-text" itemprop="text">
<p>I'm asking how to mock a class property in a unit test using Python3. I've tried the following, which makes sense for me following the docs, but it doesn't work:</p>
<p><em>foo.py:</em></p>
<pre><code>class Foo():

    @property
    def bar(self):
        return 'foobar'


def test_foo_bar(mocker):
    foo = Foo()
    mocker.patch.object(foo, 'bar', new_callable=mocker.PropertyMock)
    print(foo.bar)
</code></pre>
<p>I've installed <code>pytest</code> and <code>pytest_mock</code> and run the test like this:</p>
<pre><code>py.test foo.py
</code></pre>
<p>I got the following error:</p>
<pre><code>&gt;       setattr(self.target, self.attribute, new_attr)
E       AttributeError: can't set attribute

/usr/lib/python3.5/unittest/mock.py:1312: AttributeError
</code></pre>
<p>My expectation would be that the test runs without an error.</p>
</div>
<div class="post-text" itemprop="text">
<p>The property mechanism depends relies on the property attribute being defined on the object's class. You can't create a "property like" method or attribute on a single instance of a class (for a better understanding, read about Python's <a href="https://docs.python.org/3/reference/datamodel.html#implementing-descriptors" rel="noreferrer">descriptor protocol</a>) </p>
<p>Therefore you have to apply the patch to your class - you can use the <code>with</code> statement so that the class is properly restored after your test:</p>
<pre><code>def test_foo_bar(mock):
    foo = Foo()
    with mock.patch(__name__ + "Foo.bar", new=mocker.PropertyMock)
        print(foo.bar)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are missing a <code>@bar.setter</code>.</p>
<pre><code>@bar.setter
def bar(self, foo):
    self.__bar = foo
</code></pre>
</div>
<span class="comment-copy">Sure - I had it working the way you say - I've just pasted a later trial that failed.</span>
<span class="comment-copy">I've edited the answer - this is what actually worked for me.</span>
<span class="comment-copy">That works! Also thanks for the link about the descriptor protocol. Indeed, I don't understand how properties are implemented under the hood so far. Will go through that.</span>
<span class="comment-copy">This will change the error, but won't make one accessing <code>foo.bar</code> to get the Mock object.</span>
