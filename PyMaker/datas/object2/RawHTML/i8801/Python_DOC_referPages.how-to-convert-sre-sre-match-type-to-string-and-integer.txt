<div class="post-text" itemprop="text">
<p>I am trying to parse regular expression in Python and am assigning the value of the parsed string to 2 variables.</p>
<p>For instance if I have a string</p>
<pre><code>&lt;tr align="right"&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;Michael&lt;/td&gt;&lt;td&gt;Jessica&lt;/td&gt;
</code></pre>
<p>I want to assign value 1 to an integer variable called rank and values[Michael, Jessica] to an array called name.</p>
<p>When I parse using <code>re.search()</code> and assign value using <code>.group()</code> function the type of the variables assigned is _sre.SRE_Match . Can you please help me on how to convert it to integer and string formats respectively.</p>
</div>
<div class="post-text" itemprop="text">
<p>The following line:</p>
<pre><code>rank = re.search('(\d)+', line)
</code></pre>
<p>should be replaced with:</p>
<pre><code>rank = re.search(r'\d+', line).group()   # (..) is not needed
</code></pre>
<p>to get a string.</p>
<p>If you want <code>int</code> object, use <code>int</code>:</p>
<pre><code>rank = int(re.search(r'\d+', line).group())
</code></pre>
<hr/>
<p>BTW, using <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code></a>, your program can be simplified.</p>
<pre><code>import re

def extract_rankname(line):
    groups = re.findall('&lt;td&gt;(.*?)&lt;/td&gt;', line)
    try:
        rank = groups[0]   # int(groups[0])
        return {rank: groups[1:]}
    except ValueError:
        return {}  # return None

extract_rankname('&lt;tr align="right"&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;Michael&lt;/td&gt;&lt;td&gt;Jessica&lt;/td&gt;')
# =&gt; {'1': ['Michael', 'Jessica']}
</code></pre>
<hr/>
<p>Alternatively, instead of using regular expression, when parsing HTML, it's better to use library like BeatufiulSoup, lxml.</p>
<pre><code>&gt;&gt;&gt; from bs4 import BeautifulSoup
&gt;&gt;&gt; soup = BeautifulSoup('&lt;tr align="right"&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;Michael&lt;/td&gt;&lt;td&gt;Jessica&lt;/td&gt;', 'lxml')
&gt;&gt;&gt; [td.text for td in soup.find_all('td')]
[u'1', u'Michael', u'Jessica']
&gt;&gt;&gt; tds = [td.text for td in soup.find_all('td')]
&gt;&gt;&gt; tds[0], tds[1:]
(u'1', [u'Michael', u'Jessica'])
&gt;&gt;&gt; print(tds[0])  # rank
1
&gt;&gt;&gt; tds[1:]  # names
[u'Michael', u'Jessica']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this :</p>
<pre><code>&lt;td&gt;(\w+)&lt;\/td&gt;
</code></pre>
<p><a href="https://regex101.com/r/L0T2GJ/1" rel="nofollow noreferrer">Demo</a></p>
<p>Then iterate through the matches and assigned to array or variable ...</p>
<p>Sample Code (<a href="http://ideone.com/eKaeH5" rel="nofollow noreferrer">Run it here</a>):</p>
<pre><code>import re    
regex = r"&lt;td&gt;(\w+)&lt;\/td&gt;"    
test_str = "&lt;tr align=\"right\"&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;Michael&lt;/td&gt;&lt;td&gt;Jessica&lt;/td&gt;"
values=[]   
matches = re.finditer(regex, test_str)    
for match in matches:
  if match.group(1).isdigit():
    rank = int(match.group(1))
  else:
    values.append(match.group(1))

print(rank)
print(values)
</code></pre>
</div>
<span class="comment-copy"><code>.group()</code> should return a string. Could you show the pattern you used?</span>
<span class="comment-copy">This is the function i had created for extraction:    ` def extract_rankname(line):     name=[]     rank=re.search('(\d)+',line)     male_name=re.search('(\d)+&lt;/td&gt;&lt;td&gt;([\w]+)',line)     female_name=re.search('(\d)+&lt;/td&gt;&lt;td&gt;([\w]+)&lt;/td&gt;&lt;td&gt;([\w]+)',line)     name.append(male_name.group(2))     name.append(female_name.group(3))     rankname={rank:name}     <code>return(rankname)</code></span>
<span class="comment-copy">Thank you.. That solves the issue.</span>
<span class="comment-copy">Your code doesn't consider the ordering... if the order of number and the names are in different order then it will fail... and the op wanted the rank to be as integer ... which you commented out in your answer</span>
<span class="comment-copy">Even if you put int(rank) then it will through error if there is no number assigned... and for input like : extract_rankname('&lt;tr align="right"&gt;mogu&lt;td&gt;dfdf&lt;/td&gt;&lt;td&gt;Michael&lt;/td&gt;&lt;td&gt;Jessica&lt;/td&gt;')   If you cast int then you should also check if it is int before you cast... this is regular practice</span>
<span class="comment-copy">Why downvote ? would like know</span>
<span class="comment-copy">I thought the enumerate was not doing the world of bad!!!!, anyway I have removed the enumeration ... moreover, as the op didn't mark it as python 2.7 therefore going by the python tag description, it is ok if I answer in python 3.x</span>
<span class="comment-copy">yes that could have been used... edited the answer</span>
<span class="comment-copy">@falstrue is there anything wrong with my answer now ?</span>
<span class="comment-copy">I Will address :)</span>
