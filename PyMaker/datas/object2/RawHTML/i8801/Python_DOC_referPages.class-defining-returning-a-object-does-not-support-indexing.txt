<div class="post-text" itemprop="text">
<p>This is my first attempt at defining a class.  My intention is to provide dimensions of sprites and totals of frames in a sprite page and have the class calculate start and stop points for all of the frames.  Then, it would add them to a tuple containing all of the completed math so it can blit the sprite at the correct time and location to create the animation.  It works if I manually add all of the frame locations to the tuple in the main game program in this way:</p>
<pre><code>    ninjaImg = pygame.image.load('mainp32.png')
    playerImg[0]=(ninjaImg.subsurface((0,0,32,32)))
    playerImg[1]=(ninjaImg.subsurface((32,0,32,32)))
    #and so on....
</code></pre>
<p>But the above code is gonna get cluttered very quickly and I'd like to use this same class to pull animation frames for other characters later in the game.</p>
<p>I think the math is solid, but I suspect there is something I don't know about lists / tuples that is causing this error.  Any help would be greatly appreciated.  I've read 4 tutorials on lists/tuples, and it just isn't helping me...   </p>
<p>Here is my code:</p>
<pre><code>import pygame

class sprite32 (pygame.sprite.Sprite):
    def __init__( self , sprite_sheet_name , x , y , x_total , y_total ):
        #sprite_sheet_name = original PNG sprite file
        #x = width of a single sprite frame
        #y = height of a single sprite frame
        #x_total = number of sprites columns (width)
        #y_total = number of sprites rows (height)
        #self = variable name
        self = []
        sprite_sheet_convert = pygame.image.load(sprite_sheet_name)
        for i in range(x_total - 1):
            t = i
            for i in range(y_total - 1):
                self.append(sprite_sheet_convert.subsurface((t,i,x,y)))
</code></pre>
<p>and error message:</p>
<pre><code>C:\Python31&gt;w.py
Traceback (most recent call last):
  File "C:\Python31\w.py", line 200, in &lt;module&gt;
    DISPLAYSURF.blit(playerImg[playerspriteframe],(playerx,playery))
TypeError: 'sprite32' object does not support indexing
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to access your custom class as a list you must implement <a href="http://blog.teamtreehouse.com/operator-overloading-python" rel="nofollow noreferrer">operator overloading</a>, especially <a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow noreferrer">__getitem__</a>:</p>
<p>Sample code: (I implemented a list <code>items</code> to store the items)</p>
<pre><code>import pygame

class sprite32 (pygame.sprite.Sprite):
    items = []

    def __init__( self , sprite_sheet_name , x , y , x_total , y_total ):
        #sprite_sheet_name = original PNG sprite file
        #x = width of a single sprite frame
        #y = height of a single sprite frame
        #x_total = number of sprites columns (width)
        #y_total = number of sprites rows (height)
        #self = variable name
        sprite_sheet_convert = pygame.image.load(sprite_sheet_name)
        for i in range(x_total - 1):
            t = i
            for i in range(y_total - 1):
                self.items.append(sprite_sheet_convert.subsurface((t,i,x,y)))

    def __getitem__(self, key):
        return self.items[key]
</code></pre>
</div>
<span class="comment-copy">If <code>self</code> is a class, it is unlikely you can "convert" it into a list with this statement: <code>self = []</code>, but it would help if you told us exactly which line number 200 is.</span>
<span class="comment-copy">Sorry :)  Line 200 is the line listed in the error code        DISPLAYSURF.blit(playerImg[playerspriteframe],(playerx,playery))  It comes from the master program trying to call the class</span>
<span class="comment-copy">right on man.  This is what i needed.  Thanks a ton!</span>
