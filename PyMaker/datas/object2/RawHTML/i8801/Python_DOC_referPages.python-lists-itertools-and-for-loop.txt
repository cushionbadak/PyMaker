<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1663807/how-to-iterate-through-two-lists-in-parallel">How to iterate through two lists in parallel?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I have 2 lists of the same size. </p>
<pre><code>list1 = [start1,start2,start3, start4]
list2 = [end1, end2, end3, end4]
</code></pre>
<p><code>startn</code> in <code>list1</code> corresponds to <code>endn</code> in <code>list2</code>.</p>
<p>I want to use both the lists in a single <code>for</code> loop for further calculations.
Problem being: I want to use a combination of 2 elements from each list in the <code>for</code> loop. For example:
I want to extract <code>start1</code>, <code>start3</code> from <code>list1</code> and <code>end1</code>, <code>end3</code> from <code>list2</code> and use these 4 values in a <code>for</code> loop. </p>
<p>For a single list, to extract a combination of 2 elements, I know it's the following code:</p>
<pre><code>import itertools
for a, b in itertools.combinations(mylist, 2):    
</code></pre>
<p>But how do I extract 2 values from <code>list1</code> and the same corresponding values from <code>list2</code> and use in a <code>for</code> loop?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can <code>zip</code> the two lists and then use <code>combination</code> to pull out the values:</p>
<pre><code>list1 = ['a', 'b', 'c', 'd']
list2 = [1,2,3,4]

from itertools import combinations
for x1, x2 in combinations(zip(list1, list2), 2):
    print(x1, x2)

#(('a', 1), ('b', 2))
#(('a', 1), ('c', 3))
#(('a', 1), ('d', 4))
#(('b', 2), ('c', 3))
#(('b', 2), ('d', 4))
#(('c', 3), ('d', 4))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html?highlight=zip#zip" rel="nofollow noreferrer"><code>zip</code></a> to combine the start and end lists together into a bunch of tuples: (s1, e1), (s2, e2), etc. Then do combinations of that:</p>
<pre><code>import itertools

starts = 'start1 start2 start3 start4'.split()
ends   = 'end1 end2 end3 end4'.split()

se_pairs = zip(starts, ends)

for a,b in itertools.combinations(se_pairs, 2):
    a_start, a_end = a
    b_start, b_end = b

    print("a: (", a_start, ",", a_end, ")", "b: (", b_start, ",", b_end, ")")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's probably a more Pythonic way but try this:</p>
<pre><code>from itertools import combinations

for i, j in combinations(range(4), 2):
    list1_1, list1_2, list2_1, list2_2 = list1[i], list1[j], list2[i], list2[j]
</code></pre>
<p>Edit: on second thoughts this is the Pythonic way. I see other people have the same idea though.</p>
<pre><code>for (list1_1, list1_2), (list2_1, list2_2) in combinations(zip(list1, list2), 2):
</code></pre>
</div>
