<div class="post-text" itemprop="text">
<p>This is async python, but won't work when I sending requests to it and use time.sleep(5) for test of parallel, but it's sequential and requests executed sequentially:</p>
<pre><code>def main(*args):    
    loop = get_event_loop()

    coro = asyncio.start_server(handle_echo, '127.0.0.1', 50008,loop=loop)
    srv = loop.run_until_complete(coro)   
def handle_echo(reader, writer):
    data = yield from reader.read(500)
    message = data.decode(encoding='utf-8')            

    nameindex=('name="calculator2"' in message)
    if nameindex:
        time.sleep(5)
        writer.write("Content-Length: 1\r\n\r\n2".encode())
        yield from writer.drain()
    else:
        writer.write("Content-Length: 1\r\n\r\n1".encode())
        yield from writer.drain()

    print("Close the client socket")
    writer.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>replace: </p>
<pre><code>time.sleep(5)
</code></pre>
<p>with:</p>
<pre><code>await asyncio.sleep(5)
</code></pre>
</div>
<span class="comment-copy">@udi this is my new code</span>
<span class="comment-copy">Don't use <code>time.sleep</code> in a coroutine, use <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.sleep" rel="nofollow noreferrer">asyncio.sleep</a> instead.</span>
<span class="comment-copy">@uid ok, I'll test it and inform you. Tnx</span>
<span class="comment-copy">Thanks.I did that with this code and it worked: yield from asyncio.sleep(5)</span>
<span class="comment-copy">await is in python 3.5- I use python 3.4 for my project and I did that like previous comment</span>
