<div class="post-text" itemprop="text">
<pre><code>LIST=['insert_job: aaa', 'box_name: bbb', 'insert_job: ccc', 
      'box_name: ddd', 'insert_job: eee', 'insert_job: fff', 
      'box_name: ggg'] 
</code></pre>
<p>In above list if there are 2 continous <code>insert_job: ('insert_job: eee', 'insert_job: fff')</code> then I want to print first <code>insert_job:</code> which in this case will be <code>insert_job: eee</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can achieve this using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a></p>
<pre><code>from itertools import groupby

LIST = ['insert_job: aaa', 'box_name: bbb', 'insert_job: ccc',
        'box_name: ddd', 'insert_job: eee', 'insert_job: fff',
        'box_name: ggg']

for k, g in groupby(LIST, lambda s: s.split(':')[0]):
    if k == 'insert_job':
        items = list(g)
        if len(items) &gt; 1:
            print(*items[:-1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>since you need the order of items, you don't need a dictionary. Try something as follows</p>
<pre><code>seen = 0
for i in LIST:
    if i.startswith("insert_job"):
        if seen:
            continue
        else: 
            seen = 1
            print i
    else: 
         seen=0
         # print i
</code></pre>
</div>
<span class="comment-copy">Use a dictionary</span>
<span class="comment-copy">already a dictionary named <code>LIST</code></span>
<span class="comment-copy">@Gang Um, it is a list.</span>
<span class="comment-copy">a dictionary is {} and [] is a list!</span>
<span class="comment-copy">Use <code>itertools.groupby</code>. What should happen if there are 3 continuous?</span>
<span class="comment-copy">Thanks ShadowRanger, I don't know why for the life of me I did it that way.</span>
<span class="comment-copy">Why the downvote?</span>
<span class="comment-copy">@- Steven Summers - I am new here and still getting used to with available options, i didn't realize that i made down vote, it was by mistake, i am trying to change it now but its not working.But i really appreciate your quick answer for this and this is exactly what i needed.</span>
<span class="comment-copy">@Frank That's alright, you should be able to do it now.</span>
<span class="comment-copy">Mutating lists during iteration will not behave correctly in many circumstances, and repeated calls to <code>remove</code> mean <code>O(n**2)</code> work when this is trivially solvable in <code>O(n)</code>. This also destroys data from the original <code>list</code> when the OP's stated goal is filtering output, with no indication that the data should be discarded.</span>
<span class="comment-copy">correct he doesn't need to remove items</span>
<span class="comment-copy">I agree, push to a new list is not the best solution, but more clear</span>
<span class="comment-copy">do you need to only print if insert_job is repeated, or all except repeated ones ?</span>
<span class="comment-copy">If insert_job is repeated lets say 5 times then it should print 1st 4 insert_job with values</span>
