<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/31416282/how-does-join-work-in-python">How does .join work in Python?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/2050637/appending-the-same-string-to-a-list-of-strings-in-python">Appending the same string to a list of strings in Python</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/1876191/what-exactly-does-the-join-method-do">What exactly does the .join() method do?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/37875274/how-does-pythons-join-work">How does Python's .join work?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Here's a simple example: </p>
<pre><code>In [155]: exampleArray = bytearray([0xc0, 0xff, 0x01])
In [156]: exampleArray
Out[156]: bytearray(b'\xc0\xff\x01')
In [157]: print ' 0x'.join('{:02x}'.format(x) for x in exampleArray)
c0 0xff 0x01
</code></pre>
<p>but what I want is 
0xc0 0xff 0x01</p>
</div>
<div class="post-text" itemprop="text">
<p>As you can read in the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=join#str.join" rel="nofollow noreferrer">documentation of <code>str.join</code></a>:</p>
<blockquote>
<p>Return a string which is the concatenation of the strings in the iterable iterable. A <code>TypeError</code> will be raised if there are any non-string values in iterable, including bytes objects. The <strong>separator</strong> between elements is the string providing this method.</p>
</blockquote>
<p>So the <code>' 0x'</code> is a <strong>separator</strong> that is put <strong>between the strings</strong>. You can however easily solve this with:</p>
<pre><code>print <b>' '</b>.join('<b>0x</b>{:02x}'.format(x) for x in exampleArray)</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>str.join()</code> only places the joiner <strong>between</strong> the joined elements. From the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code> documentation</a>:</p>
<blockquote>
<p><strong>The separator between elements</strong> is the string providing this method.</p>
</blockquote>
<p>(<em>Bold emphasis mine</em>).</p>
<p>Join on a space instead, and change the format to include the <code>0x</code> prefix:</p>
<pre><code>' '.join('{:#04x}'.format(x) for x in exampleArray)
</code></pre>
<p>The <code>#</code> changes the format to include the <code>0x</code> prefix for you; do take into account that you need to adjust the field width to take the extra 2 characters into account (each field now takes up 4 characters, including the <code>0x</code> prefix).</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; exampleArray = bytearray([0xc0, 0xff, 0x01])
&gt;&gt;&gt; print ' '.join('{:#04x}'.format(x) for x in exampleArray)
0xc0 0xff 0x01
</code></pre>
</div>
<span class="comment-copy">Joins writes the <code>' 0x'</code> <b>between</b> the elements.</span>
<span class="comment-copy">try <code>print(' '.join('0x{:02x}'.format(x) for x in exampleArray))</code></span>
<span class="comment-copy">That was it! Thanks @Jean-Fran√ßoisFabre!!! If you make an answer, I'll mark it</span>
