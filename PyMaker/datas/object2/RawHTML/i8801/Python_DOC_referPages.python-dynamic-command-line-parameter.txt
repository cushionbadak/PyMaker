<div class="post-text" itemprop="text">
<p>I need to specify command line parameters depending on another parameter.
So the first specified parameter should specify the action and the following the arguments for that action.</p>
<pre><code>python test.py create -d what -s size -t type
python test.py delete -d what -a now
python test.py status -x something
</code></pre>
<p>Is there a framwork/library with which this can easily be done?
I have looked into <code>argparse</code> so far but couldn't find anything that could do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a> is absolutely gigantic and I guess that's why you couldn't find it easily, but if you had read through the entire documentation (or knew the terms to look for) you would find that the concept of <a href="https://docs.python.org/3/library/argparse.html#sub-commands" rel="nofollow noreferrer">subcommands</a> will probably achieve what you want to do.  Here is a very quick and simple example:</p>
<pre><code>import argparse

parser = argparse.ArgumentParser(prog='PROG')
subparsers = parser.add_subparsers(dest='command', help='sub-command help')
parser_create = subparsers.add_parser('create')
parser_create.add_argument('-d')
parser_create.add_argument('-s')
parser_create.add_argument('-t')

parser_delete = subparsers.add_parser('delete')
parser_delete.add_argument('-d')
parser_delete.add_argument('-a')

parser_status = subparsers.add_parser('status')
parser_status.add_argument('-x')
</code></pre>
<p>A simple usage:</p>
<pre><code>&gt;&gt;&gt; p = parser.parse_args(['create', '-d', 'what', '-s', 'size', '-t', 'type'])
&gt;&gt;&gt; p.command
'create'
&gt;&gt;&gt; p.d
'what'

&gt;&gt;&gt; p = parser.parse_args(['delete', '-d', 'what', '-a' 'now'])
&gt;&gt;&gt; p.command
'delete'
&gt;&gt;&gt; p.a
'now'
</code></pre>
<p>Of course, check out the documentation for all the details, like using <code>dest</code> to give it more meaningful names (which you can see being used with the <code>add_subparsers</code> call in the example).</p>
</div>
