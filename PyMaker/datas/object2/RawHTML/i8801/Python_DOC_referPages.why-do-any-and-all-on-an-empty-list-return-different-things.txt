<div class="post-text" itemprop="text">
<p>In chapter 2 of <em><a href="https://smile.amazon.com/Data-Science-Scratch-Principles-Python/dp/149190142X?sa-no-redirect=1" rel="nofollow noreferrer">Data Science from Scratch</a></em> by Joel Grus, the following examples are provided:</p>
<pre><code>all([ ]) # True, no falsy elements in the list

any([ ]) # False, no truthy elements in the list
</code></pre>
<p>According to Grus, Python treats <code>[]</code> (an empty list) as a "falsey" argument. So why do we get different results based on whether the <code>all()</code> or <code>any()</code> argument is applied to an empty list?</p>
</div>
<div class="post-text" itemprop="text">
<p>Per <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">the documentation of <code>all</code></a>:</p>
<blockquote>
<p><strong><code>all(iterable)</code></strong></p>
<p>Return <code>True</code> if all elements of the iterable are true <strong>(or if the iterable is empty)</strong>.</p>
</blockquote>
<p>And the <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">documentation for <code>any</code></a>:</p>
<blockquote>
<p><strong><code>any(iterable)</code></strong></p>
<p>Return <code>True</code> if any element of the iterable is true. <strong>If the iterable is empty, return <code>False</code>.</strong></p>
</blockquote>
<p>An empty iterable <code>[]</code> is falsey, but it doesn't matter as the return value is just by implementation. </p>
<hr/>
<p>If you're wondering <em>why</em> this happens, it's just a consequence of the implementation. If you look at the equivalent code for <code>all</code> from the documentation:</p>
<blockquote>
<pre><code>def all(iterable):
    for element in iterable:
        if not element:
            return False
    return True
</code></pre>
</blockquote>
<p>Because of this specific implementation, if the iterable is empty, the <code>for</code> loop is skipped completely as there are no elements. Thus, it returns <code>True</code>. For <code>any</code>, the documentation provides the equivalent code:</p>
<blockquote>
<pre><code>def any(iterable):
    for element in iterable:
        if element:
            return True
    return False
</code></pre>
</blockquote>
<p>The reason it returns <code>False</code> for an empty iterable is the same reason <code>all</code> return <code>True</code>. Since there are no elements in the list, the <code>for</code> loop is skipped and it returns <code>False</code>. </p>
<p>This implementation does have a reasoning, since empty set logic makes <code>all</code> return true, see <a href="https://math.stackexchange.com/questions/202452/why-is-predicate-all-as-in-allset-true-if-the-set-is-empty">this Math.SE post</a> and <a href="https://stackoverflow.com/questions/2195289/why-does-iqueryable-all-return-true-on-an-empty-collection">this SO answer</a>. <code>all</code> can be thought of as "there are as many true elements as elements". Since an empty set has no true elements and no elements, it returns true because 0 equals 0. <code>any</code> can be thought of as "there's at least one...", and since the set is empty, there's not at least one because there is not even one element. Thus <code>all</code> returns true for an empty set, and <code>any</code> returns false for an empty set.</p>
</div>
<div class="post-text" itemprop="text">
<p>The logical reasoning behind this definition is as follows:</p>
<p><code>any</code> is related to the <strong>existential quantifier</strong> while <code>all</code> is related to the <strong>universal quantifier</strong> and follows their logical norms.</p>
<p>Translate <code>any</code> as <strong>there is at least one</strong>: At least one element of <code>[]</code> evaluates to true &lt;-- NO. </p>
<p>See <a href="https://math.stackexchange.com/questions/281735/quantification-over-the-empty-set">https://math.stackexchange.com/questions/281735/quantification-over-the-empty-set</a> or <a href="https://math.stackexchange.com/questions/202452/why-is-predicate-all-as-in-allset-true-if-the-set-is-empty">https://math.stackexchange.com/questions/202452/why-is-predicate-all-as-in-allset-true-if-the-set-is-empty</a> - </p>
</div>
