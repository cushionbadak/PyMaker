<div class="post-text" itemprop="text">
<p>Please consider this dummy code.</p>
<pre><code>$ cat dummy.py 
import logging
import time

from boto3.session import Session

# Logging Configuration
fmt = '%(asctime)s [%(levelname)s] [%(module)s] - %(message)s'
logging.basicConfig(level='INFO', format=fmt, datefmt='%m/%d/%Y %I:%M:%S')
logger = logging.getLogger()

def main():
    session = Session(region_name='us-west-2')
    client = session.client('ec2')
    response = client.describe_instances(InstanceIds=['i-11111111111111111'])

    logger.info('The instnace size is: %s', response[
                'Reservations'][0]['Instances'][0]['InstanceType'])

if __name__ == '__main__':
    main()
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>$ python3 dummy.py 
03/03/2017 08:47:00 [INFO] [credentials] - Found credentials in shared credentials file: ~/.aws/credentials
03/03/2017 08:47:01 [INFO] [connectionpool] - Starting new HTTPS connection (1): ec2.us-west-2.amazonaws.com
03/03/2017 08:47:02 [INFO] [dummy] - The instnace size is: t2.micro
</code></pre>
<p><strong>Question:</strong> 
How to avoid below lines from being printed? </p>
<pre><code>03/03/2017 08:47:00 [INFO] [credentials] - Found credentials in shared credentials file: ~/.aws/credentials
03/03/2017 08:47:01 [INFO] [connectionpool] - Starting new HTTPS connection (1): ec2.us-west-2.amazonaws.com
</code></pre>
<p>If I change <code>logging.basicConfig(level='INFO',...</code> to <code>logging.basicConfig(level='WARNING',...</code> then Those messages are not printed, but then all my messages get logged with <code>WARNING</code> severity. </p>
<p>I just want the <code>logging</code> module to print the messages that I explicitly write using <code>logger.info ....</code> and nothing else. Hence I need any pointers on how to avoid the unnecessary messages from being printed.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Solution:</strong></p>
<pre><code>import logging
import time

from boto3.session import Session

# Logging Configuration
fmt = '%(asctime)s [%(levelname)s] [%(module)s] - %(message)s'
logging.basicConfig(format=fmt, datefmt='%m/%d/%Y %I:%M:%S')
logger = logging.getLogger('LUCIFER')
logger.setLevel(logging.INFO)


def main():
    COUNTER = 3
    session = Session(region_name='us-west-2')
    client = session.client('ec2')
    response = client.describe_instances(InstanceIds=['i-0a912622af142b510'])

    logger.info('The instnace size is: %s', response[
                'Reservations'][0]['Instances'][0]['InstanceType'])

if __name__ == '__main__':
    main()
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>$ python3 dummy.py 
03/03/2017 10:30:15 [INFO] [dummy] - The instnace size is: t2.micro
</code></pre>
<p><strong>Explanation:</strong>
Earlier, I set the  <code>INFO</code> level on root logger. Hence, all other loggers who do not have a level set, get this level <code>propagated</code> and start logging. In the  solution, I am specifically enabling this level on a logger <code>LUCIFER</code>.</p>
<p><strong>Reference:</strong>
from: <a href="https://docs.python.org/3/howto/logging.html" rel="nofollow noreferrer">https://docs.python.org/3/howto/logging.html</a></p>
<p>Child loggers propagate messages up to the handlers associated with their ancestor loggers. Because of this, it is unnecessary to define and configure handlers for all the loggers an application uses. It is sufficient to configure handlers for a top-level logger and create child loggers as needed. (You can, however, turn off propagation by setting the propagate attribute of a logger to False.)</p>
<p>AND</p>
<p>In addition to any handlers directly associated with a logger, all handlers associated with all ancestors of the logger are called to dispatch the message (unless the propagate flag for a logger is set to a false value, at which point the passing to ancestor handlers stops).</p>
</div>
<span class="comment-copy">Can you not just apply a filter for yourself?</span>
<span class="comment-copy">While maybe not an exact duplicate, you should be able to find what you're looking for in <a href="http://stackoverflow.com/questions/11029717/how-do-i-disable-log-messages-from-the-requests-library">this question</a>.</span>
<span class="comment-copy">@glibdud, the question you referred is not a solution/workaround for me and I have already mentioned about it in my post. Thanks for your Time.</span>
<span class="comment-copy">The linked question shows you how to access other modules' loggers (e.g. <code>credentials</code>, <code>connectionpool</code>) and set them to a different log level. I don't see anywhere in your question where you address that.</span>
<span class="comment-copy">@glibdud, I have resolved. this. I will post the answer soon.</span>
