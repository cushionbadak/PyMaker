<div class="post-text" itemprop="text">
<p>I have the following, very basic code that throws; TypeError: the JSON object must be str, not 'bytes'</p>
<pre><code>import requests
import json

url = 'my url'
user = 'my user'
pwd = 'my password'

response = requests.get(url, auth=(user, pwd))

if(myResponse.ok):
    Data = json.loads(myResponse.content)
</code></pre>
<p>I try to set decode to the Data variable, as follows but it throws the same error;  <code>jData = json.loads(myResponse.content).decode('utf-8')</code></p>
<p>Any suggestions? </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>json.loads(myResponse.content.decode('utf-8'))
</code></pre>
<p>You just put it in the wrong order, innocent mistake.</p>
<hr/>
<p>(In-depth answer).  As courteously pointed out by wim, in some rare cases, they could opt for UTF-16 or UTF-32.  These cases will be less common as the developers, in that scenario would be consciously deciding to throw away valuable bandwidth. So, if you run into encoding issues, you can change utf-8 to 16, 32, etc.</p>
<p>There are a couple of solutions for this.  You could use request's built-in <code>.json()</code> function:</p>
<pre><code>myResponse.json()
</code></pre>
<p>Or, you could opt for character detection via <code>chardet</code>.  Chardet is a library developed based on a study.  The library has one function: <code>detect</code>.  Detect can detect most common encodings and then use them to encode your string with.</p>
<pre><code>import chardet
json.loads(myResponse.content.decode(chardet.detect(myResponse.content)["encoding"]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let requests decode it for you:</p>
<pre><code>data = response.json()
</code></pre>
<p>This will check headers (Content-Type) and response encoding, auto-detecting how to decode the content correctly.</p>
</div>
<div class="post-text" itemprop="text">
<p>python3.6+ does this automatically.so your code shouldn't return error in python3.6+</p>
<p><a href="https://docs.python.org/3/whatsnew/3.6.html#json" rel="nofollow noreferrer">what's new in python3.6</a></p>
</div>
<span class="comment-copy">Note that <a href="https://docs.python.org/3/whatsnew/3.6.html#json" rel="nofollow noreferrer">since python 3.6 this is no longer an issue</a></span>
<span class="comment-copy">I am trying your method but i am getting error: 'InMemoryUploadedFile' object has no attribute 'json', this is from request.FILES['file'].json()</span>
