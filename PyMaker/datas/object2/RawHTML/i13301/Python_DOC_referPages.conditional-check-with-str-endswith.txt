<div class="post-text" itemprop="text">
<p>I have the following string</p>
<pre><code>mystr = "foo.tsv"
</code></pre>
<p>or</p>
<pre><code>mystr = "foo.csv"
</code></pre>
<p>Given this condition, I expect the two strings above to always print "OK".
But why it fails?</p>
<pre><code>if not mystr.endswith('.tsv') or not mystr.endswith(".csv"):
    print "ERROR"
else:
    print "OK"
</code></pre>
<p>What's the right way to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>It is failing because <code>mystr</code> cannot end with both <code>.csv</code> as well as <code>.tsv</code> at the same time.</p>
<p>So one of the conditions amounts to False, and when you use <code>not</code> in that it becomes <code>True</code> and hence you get <code>ERROR</code>. What you really want is -</p>
<pre><code>if not (mystr.endswith('.tsv') or mystr.endswith(".csv")):
</code></pre>
<p>Or you can use the <code>and</code> version using <a href="https://en.wikipedia.org/wiki/De_Morgan%27s_laws">De-Morgan's law</a> , which makes <code>not (A or B)</code> into <code>(not A) and (not B)</code></p>
<hr/>
<p>Also, as noted in the comments in the question, <a href="https://docs.python.org/3/library/stdtypes.html#str.endswith"><code>str.endswith()</code></a> accepts a tuple of suffixes to check for (so you do not even need the <code>or</code> condition). Example -</p>
<pre><code>if not mystr.endswith(('.tsv', ".csv")):
</code></pre>
</div>
<span class="comment-copy">Note that <code>endswith()</code> also accepts a tuple: <code>if not mystr.endswith(('.tsv', ".csv")):</code></span>
