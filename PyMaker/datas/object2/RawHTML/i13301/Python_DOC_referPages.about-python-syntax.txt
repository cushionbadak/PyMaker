<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20449427/how-can-i-read-inputs-as-numbers">How can I read inputs as numbers?</a>
<span class="question-originals-answer-count">
                    19 answers
                </span>
</li>
</ul>
</div>
<pre><code>def get_input():

    '''
    Continually prompt the user for a number, 1,2 or 3 until
    the user provides a good input. You will need a type conversion.
    :return: The users chosen number as an integer
    '''
    #pass # REPLACE THIS WITH YOUR CODE

    n = input ("Enter the number 1,2 and 3? ")

    while n &gt; 0 and n &lt; 4:
        print("Invalid Input, give the  number between 1 to 3")
        n = input ("Enter the number 1,2 or 3? ")
    return (n)


get_input()
</code></pre>
<p>I am not getting the answer and it's just not working, I am looking for answer like this, </p>
<pre><code>Give me one of 1,2 or 3: sid
Invalid input!
Give me one of 1,2 or 3: 34
Invalid input!
Give me one of 1,2 or 3: -7
Invalid input!
Give me one of 1,2 or 3: 0
Invalid input!
Give me one of 1,2 or 3: 2

Process finished with exit code 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input()</code></a> built-in function returns a value of type <code>str</code>. </p>
<p>As is specified in the (doc)string right after the declaration of function <code>get_input()</code>:</p>
<blockquote>
<p>You will need a type conversion.</p>
</blockquote>
<p>So, you must wrap it in an <code>int()</code> to convert it to an integer <code>int</code>.</p>
<pre><code>n = int(input("Enter the number 1,2 or 3? "))
</code></pre>
<p>Then you can use comparison operators to evaluate if it is <code>in</code> the qualified range of accepted values :</p>
<pre><code>   # Your comparisons are mixed.
   # You can use the in operator which is intuitive and expressive
   while n not in [1, 2, 3]:
        print("Invalid Input, give the  number between 1 to 3")

        # remember to wrap it in an int() call again
        n = int(input ("Enter the number 1,2 or 3? "))
    return (n)
</code></pre>
<p>If you supply numbers this works perfectly:</p>
<pre><code>Enter the number 1,2 and 3? 10
Invalid Input, give the  number between 1 to 3
Enter the number 1,2 and 3? -1
Invalid Input, give the  number between 1 to 3
Enter the number 1,2 and 3? 15
Invalid Input, give the  number between 1 to 3
Enter the number 1,2 and 3? 104
Invalid Input, give the  number between 1 to 3
</code></pre>
<p>But if you supply a single character or a string (type <code>str</code>), you'll get an error:    </p>
<pre><code>Enter the number 1,2 and 3? a

ValueError: invalid literal for int() with base 10: 'a'
</code></pre>
<p>This is beyond the scope of the question but you might <a href="https://stackoverflow.com/questions/16742432/python-error-valueerror-invalid-literal-for-int-with-base-10-stop">want to look into it</a>.</p>
<p>Anyway, your while condition is setting me off..</p>
<hr/>
<p>It seems that you might be using <code>Python 2</code> with the <code>print_function</code> imported through <code>__future__</code>. (or else the comparison between different types would raise a <code>TypeError</code> in the <code>while</code> statement). </p>
<p>Check your version of python <code>python -V</code> [in the command line] and:</p>
<p>If using python 2 instead of <code>input()</code> use <code>raw_input()</code>:</p>
<pre><code>n = int(raw_input("Enter the number 1, 2, 3: ")
</code></pre>
<p>If I am wrong and you are indeed using <code>Python 3.x</code>, use <code>int(input())</code> as explained.</p>
</div>
<span class="comment-copy">Your code would have spit out an error <code>TypeError: unorderable types...</code>, when you ask a question include the error and the traceback, <i>it's just not working</i> is usually not very informative,  even if you cast your code will crash if a user enters a string that cannot be cast to an int, you should use a try/except</span>
<span class="comment-copy">its Python 3.3, and thanks man. Let me check if it works,</span>
<span class="comment-copy">Ah, not really sure about the behavior of these in <code>3.3</code>. You should probably get the newest version so you don't get all confused.</span>
<span class="comment-copy">its working fine, except the fact that it does not work for,,                                                   Give me one of 1,2 or 3: sid Invalid input!</span>
<span class="comment-copy">Yup, you need to perform some <a href="https://docs.python.org/3.3/tutorial/errors.html?highlight=exception" rel="nofollow noreferrer">exception handling</a> for cases where you enter a string.</span>
