<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1373164/how-do-i-create-a-variable-number-of-variables">How do I create a variable number of variables?</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
</ul>
</div>
<p>Let's say I have to loop over something and keep counters of various characteristics as the loop progresses. Before the loop, I could create these various counter variables with initial values.</p>
<pre><code>count1 = 0
count2 = 0

for index in range(0, 10):
    count1 += 1
    count2 += 2

print count1, count2
</code></pre>
<p>Alternatively, I could create the counter variable when it is first actually used by using a conditional statement in the loop that creates the variable if it doesn't exist and then the variable is incremented.</p>
<pre><code>for index in range(0, 10):
    if "count1" not in locals():
        count1 = 0
    if "count2" not in locals():
        count2 = 0        
    count1 += 1
    count2 += 2

print count1, count2
</code></pre>
<p>Is there a more compact or efficient way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't bother.  If you need a variable, define it.  It's going to happen one way or another.</p>
<hr/>
<p>You can use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a>, and then just increment various keys on the dict.  The keys will be initialized for you.  This is preferable to creating "variable variables".</p>
<pre><code>from collections import defaultdict
counts = defaultdict(int)
counts[1] += 1
counts[2] += 2
</code></pre>
<hr/>
<p>If you want to count something as you iterate over it, use <a href="https://docs.python.org/3/" rel="nofollow noreferrer"><code>enumerate</code></a>.</p>
<pre><code>for i, item in enumerate(data):
    print(i)
</code></pre>
<p>Both your counter examples could be easily derived from a single count this way.  (They could also just be derived from the length of the data).</p>
</div>
<span class="comment-copy">Well, in the cases you list above, you could do <code>count1 = sum(1 for _ in range(10)</code> and <code>count2 = sum(2 for _ in range(10)</code>.</span>
<span class="comment-copy">You can put them on one line if you want: <code>count1, count2 = 0, 0</code></span>
<span class="comment-copy">or count1 = count2 = 0</span>
<span class="comment-copy">@MorganThrapp My variables are intended to be representative examples; I'm counting many things in the loop. The point of the two counters was to show that they are not both trivial and that there are multiple counters.</span>
<span class="comment-copy">Then have a dictionary or list of counters, rather than separate names. It will make factoring out repetition much easier.</span>
