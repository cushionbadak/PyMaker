<div class="post-text" itemprop="text">
<p>I have some code in Python:</p>
<pre><code>repost_pid = row[0]
repost_permalink = row[1]
repost_domain = row[2]
repost_title = row[3]
repost_submitter = row[4]
</code></pre>
<p>Is there a one-liner way to assign these variables?</p>
<p>Also, what would I do if I wanted to skip a value?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes you can separate each variable with a <code>,</code> to perform <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow">unpacking</a></p>
<pre><code>repost_pid, repost_permalink, repost_domain, repost_title, repost_submitter = row
</code></pre>
<p>If there is a particular value that you are not concerned about, <a href="https://stackoverflow.com/questions/5893163/what-is-the-purpose-of-the-single-underscore-variable-in-python">the convention is to assign it to an underscore variable</a>, e.g.</p>
<pre><code>repost_pid, repost_permalink, _, repost_title, repost_submitter = row
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>repost_pid,repost_permalink, repost_domain, repost_title, repost_submitter = row[0], row[1], row[2], row[3], row[4]
</code></pre>
<p>but it won't be readable</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to skip a value in sequence unpacking, you can do:</p>
<pre><code>&gt;&gt;&gt; row
[0, 1, 2, 3]
&gt;&gt;&gt; r0,r1,r3=row[0:2]+[row[3]]
&gt;&gt;&gt; r0,r1,r3
(0, 1, 3)
</code></pre>
</div>
<span class="comment-copy">Great! Suppose I want to skip a value (i.e. I dont want row[2]), what would I put for its value?</span>
<span class="comment-copy">Note that this assumes there are no further entries in <code>row</code>.</span>
<span class="comment-copy">@Bijan you need to mention that in your question.</span>
<span class="comment-copy">@Bijan a <code>_</code>, by convention: <code>foo, _, bar = [1, 2, 3]</code>.</span>
<span class="comment-copy">@Bijan: Anything but <code>_</code>.  While some people use that as a convention, it's not a good idea.</span>
