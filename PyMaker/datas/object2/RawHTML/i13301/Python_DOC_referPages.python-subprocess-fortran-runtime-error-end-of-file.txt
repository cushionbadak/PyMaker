<div class="post-text" itemprop="text">
<p>I'm trying to run a few commands in a <a href="http://web.mit.edu/drela/Public/web/avl/" rel="nofollow">Athena Vortex Lattice</a> using Python subprocess, but it keeps throwing errors:</p>
<pre><code>C:\Users\Myself\AppData\Local\Programs\Python\Python35\python.exe C:/Users/Myself/Documents/aerodynamics/analyze_cases.py
Root:  C:\Users\Myself\Documents\aerodynamics
At line 145 of file ../src/userio.f (unit = 5, file = 'stdin')
Fortran runtime error: End of file
Traceback (most recent call last):
  File "C:/Users/Myself/Documents/aerodynamics/analyze_cases.py", line 31, in &lt;module&gt;
    process.communicate(b'\n')
  File "C:\Users\Myself\AppData\Local\Programs\Python\Python35\lib\subprocess.py", line 1043, in communicate
Loaded
    raise ValueError("Cannot send input after starting communication")
ValueError: Cannot send input after starting communication

Process finished with exit code 1
</code></pre>
<p>This is the code used:</p>
<pre><code>import time
import subprocess
import os

root = os.getcwd()
print("Root: ", root)

# Start AVL Program
process = subprocess.Popen([root+r"/avl.exe "], shell = True, stdin=subprocess.PIPE, bufsize=1,  stdout=subprocess.PIPE)

time.sleep(2)

# Start program with LOAD and filename:    
process.communicate(input=b"LOAD "+root.encode()+b"\input_cases\sample.avl \n")

time.sleep(2)
print("Loaded")

process.communicate(b'\n')
time.sleep(5)

print("Leaving")
# process.communicate(b'\n')
process.communicate(b'\n')
time.sleep(0.5)
process.communicate(b'QUIT')

process.kill()
</code></pre>
<p>My thoughts: It appears at the first communicate statement already (before <code>Loaded</code>) and crashes when it tries to fire off the second command to a now nonexistent process.</p>
<p>My Theory: Judging from the log there may be something going on with <code>unit = 5, file = 'stdin'</code> (why is file equal to stdin?) but I don't have a clue how to solve that.</p>
<p><em>There are a few similar questions around here, and I've tried the following hacks:</em></p>
<ul>
<li>shell true/false</li>
<li>encode() and bitstring stuff</li>
<li>subprocess communicate instead of stdin.write</li>
<li>Same issue appears with wine on Mac. Program runs nominally with identical commands directly command line outside Python.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Here's a code example where some issues in your code are fixed. You should consider whether you could get rid of <code>time.sleep()</code> too:</p>
<pre><code>#!/usr/bin/env python3
import os
import time
from subprocess import Popen, PIPE, DEVNULL

# start AVL Program
with Popen(os.path.abspath("avl.exe"), stdin=PIPE, stdout=DEVNULL, bufsize=1,
           universal_newlines=True) as process:
    time.sleep(2)
    # start program with LOAD and filename:    
    print("LOAD " + os.path.abspath(r"input_cases\sample.avl"), file=process.stdin)
    time.sleep(2)
    print(file=process.stdin) # send newline
    time.sleep(5)
    print(file=process.stdin) # send newline
    time.sleep(0.5)
    print("QUIT", file=process.stdin)
</code></pre>
</div>
<span class="comment-copy">Try <code>print</code>ing the stdout of the first communicate. this might give you a clue.</span>
<span class="comment-copy">avoid cargo cult programming. (1) <a href="http://stackoverflow.com/q/2400878/4279">Understand when you should or should not use <code>shell=True</code></a> (2)  know <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow noreferrer">what <code>.communicate()</code> does</a> (it should be obvious that it is pointless to call <code>.communicate()</code> more than once). Unrelated: use <code>universal_newlines=True</code> to enable the text mode (to avoid sprinkling the code with bytes literals <code>b''</code>).</span>
