<div class="post-text" itemprop="text">
<p>I want to replace dashes which appear between letters with a space using regex. For example to replace <code>ab-cd</code> with <code>ab cd</code> </p>
<p>The following matches the character-character sequence, however also replaces the characters  [i.e. <code>ab-cd</code> results in <code>a d</code>, rather than <code>ab cd</code> as i desire]</p>
<pre><code> new_term = re.sub(r"[A-z]\-[A-z]", " ", original_term)
</code></pre>
<p>How i adapt the above to only replace the <code>-</code> part?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to capture the characters <strong>before</strong> and <strong>after</strong> the <code>-</code> to a group and use them for replacement, i.e.:</p>
<pre><code>import re
subject = "ab-cd"
subject = re.sub(r"([a-z])\-([a-z])", r"\1 \2", subject , 0, re.IGNORECASE)
print subject
#ab cd
</code></pre>
<hr/>
<p><strong>DEMO</strong></p>
<p><a href="http://ideone.com/LAYQWT" rel="noreferrer">http://ideone.com/LAYQWT</a></p>
<hr/>
<p><strong>REGEX EXPLANATION</strong></p>
<pre><code>([A-z])\-([A-z])

Match the regex below and capture its match into backreference number 1 «([A-z])»
   Match a single character in the range between “A” and “z” «[A-z]»
Match the character “-” literally «\-»
Match the regex below and capture its match into backreference number 2 «([A-z])»
   Match a single character in the range between “A” and “z” «[A-z]»

\1 \2

Insert the text that was last matched by capturing group number 1 «\1»
Insert the character “ ” literally « »
Insert the text that was last matched by capturing group number 2 «\2»
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use references to capturing groups:</p>
<pre><code>&gt;&gt;&gt; original_term = 'ab-cd'
&gt;&gt;&gt; re.sub(r"([A-z])\-([A-z])", r"\1 \2", original_term)
'ab cd'
</code></pre>
<p>This assumes, of course, that you can't just do <code>original_term.replace('-', ' ')</code> for whatever reason. Perhaps your text uses hyphens where it should use en dashes or something.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>re.sub()</code> always replaces the whole matched sequence with the replacement.</p>
<p>A solution to only replace the dash are <em>lookahead</em> and <em>lookbehind</em> assertions. They don't count to the matched sequence.</p>
<pre><code>new_term = re.sub(r"(?&lt;=[A-z])\-(?=[A-z])", " ", original_term)
</code></pre>
<p>The syntax is explained in the <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">Python documentation for the <code>re</code> module</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use look-arounds:</p>
<pre><code> new_term = re.sub(r"(?i)(?&lt;=[A-Z])-(?=[A-Z])", " ", original_term)
</code></pre>
<p>Or capturing groups:</p>
<pre><code> new_term = re.sub(r"(?i)([A-Z])-([A-Z])", r"\1 \2", original_term)
</code></pre>
<p>See <a href="http://ideone.com/gkYC63" rel="nofollow">IDEONE demo</a></p>
<p>Note that <code>[A-z]</code> also matches some non-letters (namely <code>[</code>, <code>\</code>, <code>]</code>, <code>^</code>, <code>_</code>, and <code>`</code>), thus, I suggest replacing it with <code>[A-Z]</code> and use a case-insensitive modifier <code>(?i)</code>.</p>
<p>Note that you do not have to escape a hyphen outside a character class.</p>
</div>
<span class="comment-copy">Can you do this by simple replacing <code>-</code> with a space in the given string? Is using regex necessary?</span>
<span class="comment-copy">@JeffBridgman  yes - i only want to replace when the dash occurs between characters, and not when between space. i.e. to replace <code>ab-cd</code>, but not to change <code>ab - cd</code> - [<code>replace</code> doesn't have that control].</span>
<span class="comment-copy">You shouldn't use <code>[A-z]</code> since regex ranges uses ascii table index. For this specific range you will match <code>A-Z[\]^_`a-z</code>. However, you can use <code>(?i)</code> if you want to use <code>a-z</code> as key insensitive. For instance, you can have <code>(?i)([a-z])\-([a-z])</code>. Anyway, I know OP original regex is that... but just saying.</span>
