<div class="post-text" itemprop="text">
<p>While running code I got an output,</p>
<pre><code>vivek

Hello World!
</code></pre>
<p>There is a line break between "vivek" and "hello World", but I want an output without a line break</p>
<pre><code>vivek
Hello World
</code></pre>
<p>like above</p>
<pre><code># Hello World program in Python
arr =['vivek\n','singh\n']
arr[0].replace('\n','')
print arr[0]
print "Hello World!"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just replace the line</p>
<pre><code>arr[0].replace('\n','')
</code></pre>
<p>by</p>
<pre><code>arr[0] = arr[0].replace('\n', '')
</code></pre>
<p>as <code>str.replace</code> does only return a modified copy and not modify the original. See <a href="https://docs.python.org/2/library/stdtypes.html#str.replace" rel="nofollow"><code>str.replace</code> documentation</a>.</p>
<h2>Other suggestions</h2>
<p>You could also use <a href="https://docs.python.org/2/library/stdtypes.html#str.strip" rel="nofollow"><code>str.strip</code></a> to remove surrounding whitespaces. A neat way to remove all surrounding whitespaces for a list is</p>
<pre><code>yourlist = [strelement.strip() for strelement in yourlist]
</code></pre>
<p>This is called a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>.</p>
<p>You might also want to use <code>print</code> as a function instead of a statement. So you use <code>print("whatever")</code> instead of <code>print "whatever"</code>. The print function works with Python 2 and Python 3, whereas the statement works only in Python 2.</p>
<p>Then you might want to take a look at <a href="http://pep8online.com/" rel="nofollow">http://pep8online.com/</a> and <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow">https://www.python.org/dev/peps/pep-0008/</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Because attr[0] is a string, string.replace just return a copy of updated string, but not change original string.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can also remove using Regular Expression:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; result = re.sub(u"\u005cn", r"", "vivek\n Hello World!")
&gt;&gt;&gt; result
'Vivek Hello World!'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also do split and join that will remove the new line from the list:</p>
<pre><code>arr = ['vivek\n', 'singh\n']
arr = ''.join(arr).split('\n')
print(arr[0] + " Hello World!")
</code></pre>
<p>or</p>
<pre><code>print(arr[0])
print(" Hello World!")
</code></pre>
<p>The question is about removing the new line from the strings in the list. <a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow"><code>split</code></a> and <a href="https://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow"><code>join</code></a> is the most pythonic way available to do so.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/re.html" rel="nofollow"> regular expressions</a> to filter out unwanted characters from your string.</p>
<pre><code>import re
s = "hello\nworld"
print re.sub(r'\n',' ',s)
</code></pre>
<p>will return : "hello world"</p>
<p>So you need to just do</p>
<pre><code>print re.sub(r'\n','',arr[0])
</code></pre>
</div>
<span class="comment-copy"><code>\n</code> is due to <code>print</code></span>
<span class="comment-copy"><code>from future import print; print (arr[0],end="")</code></span>
<span class="comment-copy">Why not just <code>print arr[0], 'Hello World!'</code>?</span>
<span class="comment-copy">i want ouput like above i mentioned</span>
<span class="comment-copy">So what's the matter? Does your code work?</span>
<span class="comment-copy">@KevinGuan Sure, I've just edited the question to do so. But thank you for the suggestion :-)</span>
<span class="comment-copy">Why do you think it is more pythonic to join and split again? This is different from what Vivek Singh originally did (he only removed the newline from one of the strings). It also creates the list <code>['vivek', 'singh', '']</code> which is probably not what he wants (because of the last element <code>''</code>).</span>
<span class="comment-copy"><code>r'[\n]'</code> is just <code>r'\n'</code>.</span>
