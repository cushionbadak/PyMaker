<div class="post-text" itemprop="text">
<p>Suppose multiple python processes/clients attempt to do something like this at uncontrollable times. </p>
<pre><code>cache.set("GLOBAL_KEY", Value)
</code></pre>
<p>Is it this safe or there's a chance to obtain corrupted values ?</p>
<p>Provided this is not safe ,what techniques are available for protecting values against clients concurrent access ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since this question is tagged as <code>multiprocessing</code> I'm only referring to these type of parallel process.</p>
<p>That said, there are <a href="https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes" rel="nofollow">a couple of ways</a> to share a value or a <em>state</em>:</p>
<pre><code>from multiprocessing import Process, Value, Array, Lock

def f(n, a, l):
    n.value = 3.1415927
    for i in range(len(a)):
        l.acquire(()
        try:
          a[i] = -a[i]
        finally:
            l.release()

if __name__ == '__main__':
    num = Value('d', 0.0)
    arr = Array('i', range(10))
    lock = Lock()

    p = Process(target=f, args=(num, arr, lock))
    p.start()
    p.join()

    print(num.value)
    print(arr[:])
</code></pre>
<p>Do mind that you need to share value and to <a href="https://docs.python.org/3/library/multiprocessing.html#synchronization-between-processes" rel="nofollow">control concurrent access</a>.</p>
</div>
