<div class="post-text" itemprop="text">
<p>I have a json file that contains about 100,000 lines in the following format:</p>
<pre><code>{
"00-0000045": {
    "birthdate": "5/18/1975",
    "college": "Michigan State",
    "first_name": "Flozell",
    "full_name": "Flozell Adams",
    "gsis_id": "00-0000045",
    "gsis_name": "F.Adams",
    "height": 79,
    "last_name": "Adams",
    "profile_id": 2499355,
    "profile_url": "http://www.nfl.com/player/flozelladams/2499355/profile",
    "weight": 338,
    "years_pro": 13
},
"00-0000108": {
    "birthdate": "12/9/1974",
    "college": "Louisville",
    "first_name": "David",
    "full_name": "David Akers",
    "gsis_id": "00-0000108",
    "gsis_name": "D.Akers",
    "height": 70,
    "last_name": "Akers",
    "number": 2,
    "profile_id": 2499370,
    "profile_url": "http://www.nfl.com/player/davidakers/2499370/profile",
    "weight": 200,
    "years_pro": 16
    }
}
</code></pre>
<p>I am trying to delete all the items that do not have a <code>gsis_name</code> property. So far I have this python code, but it does not delete any values (note: I do not want to overwrite the original file)</p>
<pre><code>import json

with open("players.json") as json_file:
    json_data = json.load(json_file)
    for x in json_data:
        if 'gsis_name' not in x:
            del x
print json_data
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're deleting x, but x is a copy of the original element in json_data; deleting x won't actually delete it from the object that it was drawn from.</p>
<p>In Python, if you want to filter some items out of a collection your best bet is to copy the items you do want into a new collection.</p>
<pre><code>clean_data =  {k: v for k, v in json_data.items() if 'gsis_name' in v}
</code></pre>
<p>and then write <code>clean_data</code> to a file with <code>json.dump</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you say <code>del x</code>, you are unassigning the name <code>x</code> from your current scope (in this case, global scope, since the delete is not in a class or function).</p>
<p>You need to delete it from the object <code>json_data</code>. <a href="https://docs.python.org/3/library/json.html#json.load" rel="nofollow"><code>json.load</code></a> returns a dict because your main object is an associative array / map / Javascript object. When you iterate a dict, you are iterating over the keys, so <code>x</code> is a key (e.g. "00-0000108"). This is a bug: You want to check whether the <em>value</em> has the key <code>gsis_name</code>.</p>
<p>The documentation for <code>dict</code> shows you how to delete from a dict using the key: <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow">https://docs.python.org/3/library/stdtypes.html#mapping-types-dict</a></p>
<blockquote>
<p><em><code>del d[key]</code></em></p>
<p>Remove <code>d[key]</code> from <em>d</em>. Raises a <code>KeyError</code> if <em>key</em> is not in the map.</p>
</blockquote>
<p>But as the other answers say, it's better to create a new dict with the objects you want, rather than removing the objects you don't want.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just create new dict without unwanted elements:</p>
<pre><code>res = dict((k, v) for k, v in json_data.iteritems() if 'gsis_name' in json_data[k])
</code></pre>
<p>Since Python 2.7 you could use a dict comprehension.</p>
</div>
<span class="comment-copy">Note that in Python 3, you would use <code>json_data.items()</code> instead of <code>json_data.iteritems()</code>.</span>
