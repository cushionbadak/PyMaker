<div class="post-text" itemprop="text">
<p>Is there a way to avoid "expected indent block" errors in Python without adding pass to a function?</p>
<pre><code>def exclamation(s):
 # s += "!!!"
 # return s

print exclamation("The indented horror")
</code></pre>
<p>The above code results in an error on line 5. Yes, remove the comments and the code works fine. However, in debugging stuff I often find myself in a similar situation. Is this just a hang-up of the off-side rule and something I need to get used to or are there ways around this?</p>
</div>
<div class="post-text" itemprop="text">
<p>There has to be something within your function definition to avoid a <code>SyntaxError</code>. </p>
<p>The issue is that the interpreter will <a href="https://docs.python.org/3/reference/lexical_analysis.html#comments" rel="nofollow">effectively ignore comments during parsing</a>, and so while to a <em>human</em> it might look like something is there, to the <em>parser</em> it is empty.</p>
<p>As jonrsharpe has pointed out in a comment, you can use docstrings to "comment out" your code and have it still work. This is because the docstring is, in effect, a normal string. As such this will be parsed and won't cause a <code>SyntaxError</code>. To take your example code it would look like:</p>
<pre><code>def exclamation(s):
  '''s += "!!!"
  return s'''

# This should print None as nothing is now returned from the func
print(exclamation("The indented horror"))
</code></pre>
</div>
<span class="comment-copy">Note that the "something" can be a docstring, so if you <i>"comment out the body"</i> with <code>"""</code> then the function will compile.</span>
