<div class="post-text" itemprop="text">
<p>I have a script that runs for days, and inside it there's a counter. The counter gets written to a file periodically, is it possible to find out the value that the counter is set from either another python script, linux command, or even java?</p>
<p>Example of simple python counter:</p>
<pre><code>import time
import random

a = 0
while True:
    a +=1
    time.sleep(random.random())
</code></pre>
<p>I'm interested in the value of <code>a</code> at a given time.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you could use any <a href="https://en.wikipedia.org/wiki/Inter-process_communication" rel="nofollow">IPC method</a> e.g., you could <a href="https://docs.python.org/3/library/socketserver.html#socketserver-tcpserver-example" rel="nofollow">send the counter over a socket</a>:</p>
<pre><code>self.request.sendall(json.dumps(dict(counter=a)).encode('ascii'))
</code></pre>
<hr/>
<p>If you want to get the value from an already running process that you can't modify then you could try to <a href="https://wiki.python.org/moin/DebuggingWithGdb" rel="nofollow">attach a debugger</a>:</p>
<pre><code>$ sudo gdb python &lt;pid of running process&gt;
</code></pre>
<p>To enable python-specific helper commands, add to your <code>~/.gdbinit</code>:</p>
<pre><code>add-auto-load-safe-path /path/to/python-gdb.py
</code></pre>
<p>The example gdb session could look like:</p>
<pre><code>&gt;&gt;&gt; thread apply all py-list

Thread 1 (Thread 0x7f68ff397700 (LWP 9807)):
   2    import random
   3    
   4    a = 0
   5    while True:
   6        a +=1
  &gt;7        time.sleep(random.random())
&gt;&gt;&gt; py-print a
global 'a' = 83
</code></pre>
<p>From another Python script, you could run gdb in the batch mode:</p>
<pre><code>#!/usr/bin/env python
import shlex
import subprocess

cmd = shlex.split("sudo gdb --batch -ex 'py-print a' python") + [str(pid)]
output = subprocess.check_output(cmd, stderr=subprocess.DEVNULL,
                                 cwd=path_to_python_gdb)
a = int(output.rsplit(b'\n', 2)[-2].rpartition(b' ')[2])
</code></pre>
</div>
<span class="comment-copy">I'm assuming it is, but is it harder to read from memory, if so how complicated will that be. Main reason is that the script has been running for a while now.</span>
<span class="comment-copy">@Leb: do you mean that you have a running process that you can't modify?  I've added a solution for a running process.</span>
<span class="comment-copy">Yes the debugger seem closer to what I'm looking for. I tried looking at the commands through <code>help</code>, but how can I retrieve that variable?</span>
<span class="comment-copy">@Leb: I've added an example gdb session.</span>
<span class="comment-copy">What is <code>py-list</code> referring to? I'm getting <code>Undefined command:</code> for it</span>
