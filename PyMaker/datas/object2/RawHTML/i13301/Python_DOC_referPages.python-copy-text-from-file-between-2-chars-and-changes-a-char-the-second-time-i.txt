<div class="post-text" itemprop="text">
<p>what I'm trying to do is: find a string between 2 periods(.), check if it has 2 commas (,) and change the 2nd time the comma occurs to a semicolon(;). The line breaks are preserved. I've tried with my code, but for one or another reason it doesn't write the text to the other file.</p>
<p><strong>My code:</strong></p>
<pre><code>__author__ = 'jonathan'
import sys
read = sys.argv[1]
write = sys.argv[2]
g = False
if(len(sys.argv) &gt; 3 or len(sys.argv) &lt; 2):
    print("ERROR")
    exit()
infile = open(read)
outfile = open(write, 'w')

text = ""
i = 0
while True:
    words = infile.readline()
    if(len(words) == 0):
     break
    x = 0
    g = False
    punt = 0
    for j in range(len(words)):
        x = words.find(",")
        x = words.find(",",x+1)
        dot = words.find(".")
        dot2 = words.find(".", dot+1)
        if(j == x):
            text += ";"
        if(j &lt;= dot2):
            text += words[dot + j]
    print(text)
    print(dot)
    print(dot2)
    print(words)
    outfile.write(text)
    i += 1
infile.close()
outfile.close()
</code></pre>
<p>if someone could tell me how to solve this and explain why? thanks alot</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a solution using a regular expression and <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow"><code>re.sub()</code></a> to replace the 2nd comma with a semicolon if the line matches the regex.</p>
<p>Explanation is in the code comments.</p>
<p><strong>transform.py</strong></p>
<pre><code>import sys, re

if len(sys.argv) != 3:
    print("Usage: python {} &lt;input file&gt; &lt;output file&gt;".format(sys.argv[0]))
    sys.exit(1)

inputarg = sys.argv[1]
outputarg = sys.argv[2]

# Regex to lazily match 0 or more chars followed by a period, 
# 0 or more chars followed by 2 commas,
# and 0 or more chars followed by a period.
# Capture group 1 = everything before 2nd comma
# Capture group 2 = 2nd comma
# Capture group 3 = everything after 2nd comma
dotcomma = re.compile(r'(\..*?,.*?)(,)(.*?\.)')
with open(inputarg, 'rU') as infile:
    with open(outputarg, 'w') as outfile:
        for line in infile:
            # If regex matches the line, replace the matched text with
            # original contents of capture group 1
            # followed by a semicolon replacing the 2nd comma
            # followed by original contents of capture group 3.
            # If the regex doesn't match, return the line unchanged.
            outline = dotcomma.sub(r'\1;\3', line.strip('\n'))
            # Write the line out to a file
            print(outline, file=outfile)
</code></pre>
<p><strong>input.txt</strong></p>
<pre><code>This is line 1. For now, let's try, for a semi-colon. Continuing on...
This is line 2. However, there is only one comma here. And next
We have line 3. There are no commas on this line.
Line 4 here. We have, 2 commas, but only one period
Line 5 and we have no commas or periods
Line 6. Let's, make sure, this replacement happens here. And finally.
Line 7. Lets, make, three, commas and 2 periods. Evaluate lazily
</code></pre>
<p><strong>results</strong></p>
<pre><code>(replacecomma)macbook:replacecomma joeyoung$ python transform.py input.txt output.txt

(replacecomma)macbook:replacecomma joeyoung$ cat output.txt 
This is line 1. For now, let's try; for a semi-colon. Continuing on...
This is line 2. However, there is only one comma here. And next
We have line 3. There are no commas on this line.
Line 4 here. We have, 2 commas, but only one period
Line 5 and we have no commas or periods
Line 6. Let's, make sure; this replacement happens here. And finally.
Line 7. Lets, make; three, commas and 2 periods. Evaluate lazily
</code></pre>
</div>
