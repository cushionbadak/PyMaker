<div class="post-text" itemprop="text">
<p>1) How do I convert a variable with a string like <code>"wdzi\xc4\x99czno\xc5\x9bci"</code> into <code>"wdzięczności"</code>?</p>
<p>2) Also how do I convert string variable with characters like <code>"Â±", "Ä™", "Ä†"</code> into correct letters?</p>
<p>I emphasise "variable" because all I've got from googling was examples with " u'some string' " and the like and I can't get anything like that to work.</p>
<p>I use <code>"# -*-</code> coding: <code>utf-8 -*-</code>" in second line of my script and I still crash into these problems.</p>
<p>Also I was said that simple print should output correctly - but it does not.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2.7 IDLE, I get this output:</p>
<pre><code>&gt;&gt;&gt; print "wdzi\xc4\x99czno\xc5\x9bci".decode('utf-8')
wdzięczności
</code></pre>
<p>Your first string appears to be a UTF-8 byte string, so all that's necessary is to decode it into a Unicode string. When Python prints that string, it will encode it back to the proper encoding based on your environment.</p>
<p>If you're using Python 3 then you have a string that has been decoded improperly and will need a little more work to fix the damage.</p>
<pre><code>&gt;&gt;&gt; print("wdzi\xc4\x99czno\xc5\x9bci".encode('iso-8859-1').decode('utf-8'))
wdzięczności
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/4020539/process-escape-sequences-in-a-string-in-python">Process escape sequences in a string in Python</a></span>
<span class="comment-copy">This simple example did work, thanks. But I'm still geting errors like this in the script itself: <code>UnicodeEncodeError: 'latin-1' codec can't encode character '\u0119' in position 187: ordinal not in range(256)</code>  Edit: Also I just noticed that now I have "wdzi\xc4\x99czno\xc2\xb6ci" in the output that with your decoding prints "wdzięczno¶ci" or <code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb1 in position 88: invalid start byte</code> Tried encoding in windows-1250, still errors. Any ideas?</span>
<span class="comment-copy">@dyer if you're using Python 3, the strings you create within the program should be valid Unicode strings already that need no fixing. <code>'\u0119'</code> for example is <a href="http://www.fileformat.info/info/unicode/char/0119/index.htm" rel="nofollow noreferrer">LATIN SMALL LETTER E WITH OGONEK <code>ę</code></a>. My advice is <i>only</i> for strings that you received from outside the program that have been mangled, it's called Mojibake. The best solution is to prevent that from happening in the first place, but your question doesn't have enough info to tackle that problem.</span>
<span class="comment-copy">@dyer You should have some understanding of the difference between a byte string and a Unicode text string → see <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">Unicode howto</a>. If you end up with strings like <code>"Â±"</code> you might have opened a file using the wrong encoding, eg. use <code>open(path, encoding='utf-8')</code> instead of <code>open(path)</code>.</span>
<span class="comment-copy">@roeland But is there a way to convert that to what it should be? How do I encode/decode that? That's improperly encoded character, right?  I'm trying everything with string like "Obowi±zki wdziêczno¶ci" and I can't get it to work.</span>
<span class="comment-copy">@roeland Also (can't edit now) I'm using BeutifulSoup and I have there "soup = bs4.BeautifulSoup(openfile.read(), "html.parser", from_encoding='utf-8')" but it still outputs it like that, so I'm trying to work on converting that output.</span>
