<div class="post-text" itemprop="text">
<p>This is my current code:</p>
<pre><code>words = []
word = input('Word: ')
while word != '':
  words.append(word)
  word = input('Word: ')
print("You know "+ str(len(words)), "unique word(s)!")
</code></pre>
<p>This is what I need:</p>
<blockquote>
<p>Word: Chat</p>
<p>Word: Chien</p>
<p>Word: Chat</p>
<p>Word: Escargot</p>
<p>Word: </p>
<p>You know 3 unique word(s)!</p>
</blockquote>
<p>It is not supposed to count any duplicate words. I'm not sure how to avoid this. Because I have done everything else except this. Is there an easy way, but a simple one?</p>
</div>
<div class="post-text" itemprop="text">
<p>Check if the word is already in the <code>words</code> list using the <code>in</code> operator:</p>
<pre><code>words = []
word = input('Word: ')
while word != '':
    if word not in words:
        words.append(word)
    word = input('Word: ')
print("You know "+ str(len(words)), "unique word(s)!")
</code></pre>
<p>This will work well but membership testing is <em>O(n)</em> for lists.
Consider using <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow"><code>set</code></a>s for faster lookup.</p>
<p>It'll be performed implicitly by the <code>set.add</code> method ("<em>Add an element to a set. This has no effect if the element is already present.</em>")
:</p>
<pre><code>words = set()
word = input('Word: ')
while word != '':
    words.add(word)
    word = input('Word: ')
print("You know "+ str(len(words)), "unique word(s)!")
</code></pre>
<hr/>
<p>Note that string formatting is better (and easier) way to format the output:</p>
<pre><code>print("You know "+ str(len(words)), "unique word(s)!")
</code></pre>
<p>can be</p>
<pre><code>print("You know {} unique word(s)!".format(len(words)))
</code></pre>
</div>
<span class="comment-copy">Do you want to use <a href="https://docs.python.org/2/library/sets.html" rel="nofollow noreferrer"><code>set()</code></a>?</span>
<span class="comment-copy">A fairly clear question but I think is probably asked elsewhere too.</span>
<span class="comment-copy">@RFlack I think so: <a href="http://stackoverflow.com/questions/7961363/python-removing-duplicates-in-lists" title="python removing duplicates in lists">stackoverflow.com/questions/7961363/â€¦</a></span>
<span class="comment-copy">unrelated: <code>print('You know', len(set(iter(lambda: input('Word: '), ''))), 'unique word(s)')</code></span>
<span class="comment-copy">@Kevin Guan (I'm still finding my way in this place) ... I guess my point is, with no disrespect to the OP, what aren't the Duplicate Police on this one.   Im not at all sure how that works.</span>
