<div class="post-text" itemprop="text">
<p>I have a python program defined by a function <code>myFunc(m,n)</code></p>
<p>Basically, the function contains two for loops.</p>
<pre><code>def myFunc(m, n) : 
    for i in range(m) : 
        for j in range(n) : 
            # do it ...
    return 
</code></pre>
<p>I would like to calculate the time elapsed for <code>m,n=20,20</code></p>
<p>I do it like this:</p>
<pre><code>start_time = time.time()
b = myFunc(m,n)
elapsed_time = time.time() - start_time
print elapsed_time
</code></pre>
<p>The result is 0.0 almost always. Why?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/time.html#time.time" rel="nofollow noreferrer">Per the <code>time.time</code> docs</a>, </p>
<blockquote>
<p>even though the time is always returned as a floating point number, not all systems provide time with a better precision than 1 second.</p>
</blockquote>
<p>So if <code>myFunc</code> takes less than a second and you are using such an OS, then the difference between two calls of <code>time.time</code> could be 0.0.</p>
<p>You could use <code>timeit.default_timer</code> instead of <code>time.time</code>. <code>timeit.default_timer</code> will choose the best timer (<code>time.time</code>, <code>time.clock</code> or <code>time.perf_counter</code>) for your system.</p>
<p>Also note that <a href="https://stackoverflow.com/q/8220801/190597">the timeit module</a> offers more accurate ways to test the performance of code snippets.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because <code>time.time() - time.time()</code> will be <code>0.0</code> when <code>myFunc</code> doesn't take very long.</p>
</div>
<span class="comment-copy">20 loops are too short. Try to make it artificially large.</span>
<span class="comment-copy">It is rarely <code>0.0009</code> and almost always <code>0.0</code>.</span>
<span class="comment-copy">LOL for the downvotes.</span>
<span class="comment-copy">Thank you. I appreciate it.</span>
<span class="comment-copy">Thank you. I got it.</span>
