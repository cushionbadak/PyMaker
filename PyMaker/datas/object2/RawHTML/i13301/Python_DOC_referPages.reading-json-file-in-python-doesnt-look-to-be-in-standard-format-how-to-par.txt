<div class="post-text" itemprop="text">
<p>I don't think this is in the standard <code>json</code> format. I don't see the colons that I've seen in other examples. For example, you can see the first line shows Florida (FL). So I would have thought I would see something like 'State':'FL'. The headers aren't shown here but when I look at the web page results the headers are shown. Are the colons required in order to parse this effectively? Ultimately I'd like to get this into CSV format so that I can load it into Excel. The below is a sample of the file.</p>
<pre><code>{  
   'aaData':[  
      [  
         [  
            '99.04,99.08,99.08,99.12,99.08,99.11,99.12,99.13,99.11,99.11,99.12,99.13,99.11,99.10,99.09,99.06,99.09,99.11,99.09,99.13,99.11,99.07,98.96,98.38,98.66,99.11,99.10,98.70',
            '2961916',
            '4'
         ],
         '**FL**',
         'Atmore',
         'WALNUT HILL',
         'JAKES ROAD',
         'WLHLFL',
         'EquipmentType',
         '.',
         '1-1-2-1',
         '.',
         '2015-09-10',
         '2015-10-07',
         None,
         '6.14',
         '99.13',
         '908',
         '345',
         '448',
         '971',
         '24.00',
         '2672',
         '0',
         '0',
         '0',
         'Critical',
         '2672',
         '2015-10-09 12:57:50'
      ],
      [  
         [  
            '98.31,98.06,97.55,96.10,97.62,98.20,97.18,97.26,97.74,96.94,97.61,98.03,98.66,97.69,98.17,97.61,98.23,96.98,97.97,97.84,97.62,98.16,97.05,98.05,98.11,97.40,96.72,95.87',
            '3133016',
            '4'
         ],
         'FL',
         'Atmore',
         'MOLINO',
         'QUINTETTE',
         'MOLNFL',
         'EquipmentType',
         '.',
         '1-1-2-1',
         '.',
         '2015-09-10',
         '2015-10-07',
         None,
         '3.07',
         '98.66',
         '1017',
         '338',
         '416',
         '916',
         '31.39',
         '2687',
         '0',
         '0',
         '0',
         'Critical',
         '2687',
         2015-10         -09         12:57:50
      ]
   ]
</code></pre>
<p>Current Code</p>
<pre><code>from urllib.request import urlopen
import json

url_fl = 'http://corporate.server.private/server/scripts/other /get_json_bw_report.php?tType=Port&amp;sList=&amp;bList=%274%27,%273%27,%272%27,%271%27&amp;stList=%27FL%27'

str_response = urlopen(url_fl).read().decode('utf-8')
obj = json.loads(str_response)
print(obj)
</code></pre>
<p>EDIT</p>
<p>Adding this code gets me to the data I want to extract:</p>
<pre><code>list1 = obj['aaData'][0][1:]
print(list1)

list2 = obj['aaData'][1][1:]
print(list2)

list3 = obj['aaData'][2][1:]
print(list3)
</code></pre>
<p>Result:</p>
<pre><code>['FL', 'Atmore', 'WALNUT HILL', 'JAKES ROAD', 'WLHLFL', 'EquipmentType', '.', '1-1-2-1', '.', '2015-09-11', '2015-10-08', None, '6.14', '99.13', '916', '357', '430', '969', '24.00', '2672', '0', '0', '0', 'Critical', '2672', '2015-10-10 09:02:28']
['FL', 'Atmore', 'MOLINO', 'QUINTETTE', 'MOLNFL', 'EquipmentType', '.', '1-1-2-1', '.', '2015-09-11', '2015-10-08', None, '3.07', '98.66', '1027', '341', '412', '907', '31.39', '2687', '0', '0', '0', 'Critical', '2687', '2015-10-10 09:02:28']
['FL', 'Atmore', 'WALNUT HILL', 'BAY SPRINGS', 'WLHLFL', 'EquipmentType', '.', '1-1-2-1', '.', '2015-09-11', '2015-10-08', None, '6.14', '99.13', '1062', '428', '438', '760', '31.53', '2688', '0', '0', '0', 'Critical', '2688', '2015-10-10 09:02:28']
</code></pre>
<p>But these needs to iterate through the file and find each instance. The pattern is <code>['aaData'][0][1:]</code>, <code>['aaData'][1][1:]</code>, <code>['aaData'][2][1:]</code>. The file can have many like this. How can I iterate or loop through the file and print each of these?</p>
<p>EDIT - final code that works</p>
<pre><code>from urllib.request import urlopen
import json
import csv

url_fl = 'http://company.server.org'

url_response = urlopen(url_fl).read().decode('utf-8')
obj = json.loads(url_response)
obj_parse = obj['aaData']

with open('test.csv', 'w', newline='') as fp:
    data = csv.writer(fp, delimiter=',')
    for row in obj_parse:
        data.writerows([row[1:]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you have realized by now, the JSON is correct and you correctly parsed it in Python.  Now you have a data structure to process.</p>
<p>In Python, you can process a list using a <code>for</code> loop:</p>
<pre><code>for row in obj['aaData']:
    print( row[1:] )
</code></pre>
<p>You'll want to use the <a href="https://docs.python.org/3/library/csv.html#writer-objects" rel="nofollow"><code>csv</code></a> module to encode the data structure you produce (namely the list of data you want in your file) correctly according to the CSV respresentation.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from urllib.request import urlopen
import json
import csv

url_fl = 'http://company.server.org'

url_response = urlopen(url_fl).read().decode('utf-8')
obj = json.loads(url_response)
obj_parse = obj['aaData']

with open('test.csv', 'w', newline='') as fp:
    data = csv.writer(fp, delimiter=',')
    for row in obj_parse:
        data.writerows([row[1:]])
</code></pre>
</div>
<span class="comment-copy">Where did you obtain that file from?</span>
<span class="comment-copy">Do you get an exception when you run your code? Colons are only required where they belong; your data has arrays and array notation does not contain a colon in it.</span>
<span class="comment-copy">This has a colon. There is one name <code>aadata</code> and a nested arrays as the value portion of that name/value pair.</span>
<span class="comment-copy">I inspected the web page and obtain the URL. On the web page you select region, state etc and click search. The results show up on the web page with columns. I have to do this for numerous states and exchanges.</span>
<span class="comment-copy">@shavar I thought that was the input you were showing, not the output of your code.  The answer, then, is that you read the JSON correctly. The JSON is standard, it is valid, and you parsed it. You just need to process the data structure now. Just a note: JSON does not have headers. I recommend researching what JSON actually is to better understand it.  As another note, most likely the web site you obtained this from is using <a href="https://datatables.net/" rel="nofollow noreferrer">DataTables.net</a> based on the presence of the <code>aaData</code> attribute of the returned object.</span>
<span class="comment-copy">Thanks for your follow-up. I actually did figure how to iterate over the object to extract just the [1:]. I was able to write this to a file as well. Of course everything printed to the first line. Your mention of the csv module got me to the latest edit. Please see the code I'm at now. This almost works. If I remove the [1:] portion from the last line it prints out the JSON data on a separate line but includes the first [0:] which I don't want. With [1:] it clears the file content (no error).</span>
<span class="comment-copy">I got it. It's data.writerows([row[1:]]). Thanks for your help.</span>
