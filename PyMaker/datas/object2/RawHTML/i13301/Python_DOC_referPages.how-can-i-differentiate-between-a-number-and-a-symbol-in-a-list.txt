<div class="post-text" itemprop="text">
<p>I need to make two different error messages: one if the user inputs a number, one if they input an operand (it's for an equation calculator). 
My code so far is below:  </p>
<pre><code>#If user just presses enter:
if len(theParts) == 0 :
    print("You have not entered an equation. Please, try again!")

# If input is a word:
elif equation.isalpha():
    print("You have entered a word instead of an equation!")

elif len(theParts) == 1 :
    print("You have only entered an operand/operator. Please, try again!") 

elif len(theParts) == 2 :
    print("You have not entered a complete equation. Please, try again!")
</code></pre>
<p>I also tried doing equation.isnumeric() but that includes symbols as well. Is there a way to differentiate the numbers and symbols, or do I have to do something like this for each operand:  </p>
<pre><code>elif '*' in theParts and len(theParts) == 1:
    print("error")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I see two ways to do this:</p>
<h3>1. Remove allowed non-digit characters and use <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow"><code>str.isdigit()</code></a>.</h3>
<pre class="lang-python prettyprint-override"><code>"12345".isdigit()                   # true
"123.45".replace('.', '').isdigit() # true
"12*4.3".isdigit()                  # false
</code></pre>
<h3>2. Define your own set of allowed characters</h3>
<pre class="lang-python prettyprint-override"><code>def is_good_number(s):
    for char in s:
        if not char in '1234567890.':
            return False
    return True

is_good_number("12345")  # true
is_good_number("123.45") # true
is_good_number("12*4.3") # false
</code></pre>
</div>
<span class="comment-copy">Essentially you need to create tokens then analyse those tokens. Writing a parser is a tough task so I'd recommend looking into something like pyparsing to help you get this done.</span>
<span class="comment-copy">I'm trying <code>isnumeric()</code> right now and it isn't accepting symbols like <code>*</code>, <code>.</code>, <code>/</code>, and <code>+</code>.</span>
<span class="comment-copy">you can use tokenizers</span>
<span class="comment-copy">read through <a href="https://docs.python.org/2/library/string.html" rel="nofollow noreferrer">string</a></span>
<span class="comment-copy">My issue is that it needs to detect numbers with decimals too. In my code in general, I'll get the error message working for if the user enters just a symbol, but then if they enter a number they'll get the error saying they entered a symbol.</span>
