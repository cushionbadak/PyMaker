<div class="post-text" itemprop="text">
<p>The script runs up until the 'takenotes' function is called and then just stops when it should run the function. There isn't any errors it just stops. Why is this?</p>
<pre><code># Please note that this only works in integer values, since there is no change in pence
notes = (1,5,10,20,50) #Value of notes
quantities = [10,8,5,5,1] #Quantities of notes
# Defining variables
notesout = []
total = 0
x = -1
payment = []
# This loop works out the total amount of cash in the cash register
while (x &lt; 4):
        x += 1
        calc = notes[x]*quantities[x]
        total += calc
mon_nd = 70 # Money needed
def takenotes():
        print("Please input each notes value, when finished type \"stop\"")
        # If input is an int then add to payment list, if not then work out the change
        payment = [20,20,20,20]
        main()

def main():
        # Finds the value of the cash given
        paymentV = sum(payment)
        changeT = paymentV - mon_nd
        # Change the quantities of the 'quantities' variable
        for i in payment:
                quantities[notes.index(i)] = quantities[notes.index(i)] + 1
        while(changeT &lt; 0):
                # Works out what amount of change should be given
                for i in reversed(notes):
                        if (changeT - i &gt;= 0):
                                notesout.append(i)
                                quantities[notes.index(i)] = quantities[notes.index(i)]-1
                                changeT -= i
                        else:
                                return True
        print(notesout)
takenotes()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It doesn't "just stop". <code>takenotes</code> calls <code>main</code>; it gets to the for loop inside the while loop; the first time round, <code>changeT - i</code> is not greater than 0, so it returns True. Since you do not do anything with the return value from <code>main</code>, nothing is printed, and the program ends.</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, you need a <code>global</code> statement to change any global variable (like <code>payment</code>).</p>
<pre><code>payment = []

def takenotes():
    global payment
    payment = [20, 20, 20, 20]
</code></pre>
<p>You also have no <code>input()</code> function in your code. See <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow">the docs</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This script run correctly. It call the takenotes() function and then execute it normally (display message, set <strong>local</strong> payment array and then execute main() function).
You could check this on <a href="https://repl.it/BMz8" rel="nofollow noreferrer">this online Python interpreter</a>. Also you could execute it step by step <a href="http://goo.gl/x6M3uI" rel="nofollow noreferrer">here</a> to see what your script exactly do.</p>
<p>Also when you want to edit a global variable you must use the global statement. Read answer for <a href="https://stackoverflow.com/questions/423379/using-global-variables-in-a-function-other-than-the-one-that-created-them">this SO question</a> for more info.</p>
</div>
<span class="comment-copy"><code>payment = [20, 20, 20, 20]</code> does not modify the global variable, use <code>global</code> or better pass the value to the function <code>main()</code>.</span>
<span class="comment-copy">actually @imaluengo that's wrong. Code Review is a site for <b>working</b> code, not for failing code. This means: Code must not only run, it must produce correct results, as such this question is off-ropic for <a href="https://codereview.stackexchange.com">Code Review</a>. For more information, please see: <a href="https://meta.stackoverflow.com/questions/253975/be-careful-when-recommending-code-review-to-askers?s=1|1.0000" title="be careful when recommending code review to askers">meta.stackoverflow.com/questions/253975/â€¦</a></span>
<span class="comment-copy">@Vogel612 Ouch! Didn't know about that, sorry. Completely thought <code>CodeReview</code> actually was to review code and find bugs (as your linked question states, I'm one of those who didn't read CodeReview's help, but I just learnt a good lesson). Thanks! I will think twice before recommending codereview again! :P</span>
