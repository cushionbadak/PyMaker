<div class="post-text" itemprop="text">
<p>I am serializing the instance of a model in the following way.</p>
<pre><code>serialized_object = serializers.serialize ('json', [track,])
</code></pre>
<p>output</p>
<pre><code>   [{"model": "blog.track", "pk": null, "fields": {"album": null, "name": "Song 1", "lyrics": "", "song": "Z.mp3", "url_download": null, "length": "00:00:12"}}]
</code></pre>
<p>Then I save the serialized object, so that at the end of some tasks I can save it in the database. My question is how do I re-build the instance of the model from the serialized model. And how can I get the fields of the serialized model in the view?</p>
<p>Investigating a little more and reading the Django documentation that can be deserialized and saved in this way</p>
<pre><code>for obj in serializers.deserialize("json", serialized_object):
    print(obj.name)
    obj.save ()
</code></pre>
<p>however I would like to obtain the values of that object but when trying it the following error occurs</p>
<pre><code>AttributeError: 'DeserializedObject' object has no attribute 'name'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are getting this error because the documentation indicates that your object is wrapped in a DeserializedObject, so make the following change.</p>
<pre><code>print (obj.object.name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are using django rest framework then you dont need to convert back to object. you can use <code>create</code> or <code>update</code> method on serializer class as mentioned <a href="https://www.django-rest-framework.org/api-guide/serializers/#saving-instances" rel="nofollow noreferrer">here</a> to create or update in db</p>
</div>
<span class="comment-copy">from <a href="https://docs.djangoproject.com/en/2.1/topics/serialization/" rel="nofollow noreferrer">the docs</a>: <i>The Django object itself can be inspected as <code>deserialized_object.object</code>. If fields in the serialized data do not exist on a model, a <code>DeserializationError</code> will be raised unless the <code>ignorenonexistent</code> argument is passed in as True</i></span>
<span class="comment-copy">This  work for me. Thanks</span>
