<div class="post-text" itemprop="text">
<p>How can I make directory &amp; put image in the directory?
I wrote the following code in <code>data.py</code>:</p>
<pre><code>import os
import cv2
import argparse
import numpy as np
import math

parser = argparse.ArgumentParser(description='')
parser.add_argument('input_dir' ,help='input directory')
parser.add_argument('output_dir' ,help='out directory')

args = parser.parse_args()

def find_all_files(directory):
    for root, dirs, files in os.walk(directory):

        for file in files:
            p=os.path.join(root, file)
            p=p.split("/")[len(p.split("/"))-2]
            name, ext = os.path.splitext(p)

            yield os.path.join(root, file)

dirname=args.output_dir
if not os.path.exists(dirname):
    os.mkdir(dirname)


folder_img = find_all_files(args.input_dir)
im =cv2.imread(folder_img)
cv2.imwrite(args.output_dir ,im)
</code></pre>
<p>Now when I run command <code>python data.py ./photo ./copy_photo</code>, find a writer for the specified extension in function <code>imwrite</code> error happens. I want to make a directory <code>copy_photo</code> and put images made by this code in the directory. The <code>copy_photo</code> folder is made, so what is wrong in my code? How should I fix this? Am I wrong to write the way of putting images in the <code>copy_photo</code> folder?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>find_all_files</code> is a generator. The variable <code>folder_img</code> will be bound to that generator. Calling <code>cv2.imread()</code> on that generator is not going to work because <code>imread()</code> expects an image file, not a generator.</p>
<p>You need to <em>iterate</em> over the generator to copy each file one by one. Something like this:</p>
<pre><code>folder_img = find_all_files(args.input_dir)
for filename in find_all_files(args.input_dir):
    im = cv2.imread(filename)
    cv2.imwrite(os.path.join(args.output_dir, os.path.basename(filename)), im)
</code></pre>
<p>Note also that <code>args.output_dir</code> is a string that represents the desination directory name. You need to specify the path of the file including the directory. Use <code>os.path.join()</code> and <code>os.path.basename()</code> to do that.</p>
<p>If all you are wanting to do is to copy the files from one directory to another then you should perhaps use <a href="https://docs.python.org/3/library/shutil.html#shutil.copytree" rel="nofollow noreferrer"><code>shutil.copytree</code></a> as there is no point in opening the image files and then writing them back out. Also, your <code>find_all_files()</code> generator function will pass back all files, including directories, so you need to add some logic to detect image files and filter out those that are unwanted.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.opencv.org/3.0-beta/modules/imgcodecs/doc/reading_and_writing_images.html#Mat%20imread(const%20String&amp;%20filename,%20int%20flags)" rel="nofollow noreferrer"><code>cv2.imread()</code></a> accepts a single file name, but you are calling it with a (generator returning a) list of files.</p>
<p>Try this:</p>
<pre><code>def find_all_files(directory):
    for root, dirs, files in os.walk(directory):

        for file in files:
            # Comment out dead code
            '''
            p=os.path.join(root, file)
            p=p.split("/")[len(p.split("/"))-2]
            name, ext = os.path.splitext(p)
            '''

            # Changed this to return a tuple
            yield root, file

for dirname, imagefile in find_all_files(args.input_dir):
    im =cv2.imread(os.path.join(dirname, imagefile))
    cv2.imwrite(os.path.join(args.output_dir, imagefile), im)
</code></pre>
<p>Because <code>imwrite()</code> needs to receive a filename parameter, I changed <code>find_all_files</code> to return a tuple, so you can use the same filename for the output, and choose which directory name you add in front.</p>
<p>Rewriting the images seems like a very inefficient way to do this, though. Why don't you simply copy the files?</p>
</div>
<span class="comment-copy">Please <a href="https://stackoverflow.com/posts/48537503/edit">edit</a> your question to include the precise traceback you get from Python. Your problem description isn't clear.</span>
