<div class="post-text" itemprop="text">
<p>Write a function that determines whether or not a password is good. We
will define a good password to be a one that is at least 8 characters long and
contains at least one uppercase letter, at least one lowercase letter, and at least one number.</p>
<pre><code>import string
num = [i for i in range(0,10)]
letdown = list(string.ascii_lowercase)
letup = list(string.ascii_uppercase)
def good_password(password):
    l1=[]
    l2=[]
    l3=[]
    for char in password:
          if char in num:
              l1.append(char)
          elif char in letdown:
              l2.append(char)
          elif char in letup:
              l3.append(char)
    if len(l1)&gt;=1 and len(l2) &gt;=1 and len(l3) &gt;=1 and len(password) &gt;=8:
        return True
    else:
        return False
</code></pre>
<p>This is the code that I've come up with. However, it doesn't seems to work and I cannot tell why. Can anyone explain me? I am still a novice in programming. </p>
</div>
<div class="post-text" itemprop="text">
<p>I would looking into using pythons built in functions of <code>.isdigit(), .isupper(), and .islower()</code> this could save you some lines to check the passwords for those conditions.</p>
<p>Also you should replace your <code>elif</code>'s with <code>if</code>'s. The way your code is now, once one if condition is met it doesn't check the rest. So if you want all conditions to be met you need to check if each of those is true.</p>
<p><strong>EDIT:</strong> As Fred noted below the second part of this is not technically correct. Although the statement about <code>if</code> vs. <code>elif</code> is true, it need not be used in your code, for the very reason Fred mentioned.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to convert '<strong>num</strong>' list of int to a list of string. Because you cannot compare int and str </p>
<pre><code>&gt;&gt;&gt; '1' == 1
False
&gt;&gt;&gt; '1' in [1,2]
False
</code></pre>
<p><strong>Change</strong></p>
<pre><code>num = [i for i in range(0,10)]
</code></pre>
<p><strong>to</strong></p>
<pre><code>num = map(str, [i for i in range(0,10)])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>After doing some running and some test, I came into a simple solution, as the other users said, a str is not equals as a num, meaning 0 != "0", so, you can convert the first list into a list of str that contain numbers by doing this:</p>
<pre><code>num = [str(i) for i in range(0,10)]
</code></pre>
<p>now your list is:</p>
<pre><code>=&gt; ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
</code></pre>
<p>finally when you try your code:</p>
<p>(I change a little the name to make calre it to myself)</p>
<p>import string
num = [str(i) for i in range(0,10)]
letdown = list(string.ascii_lowercase)
letup = list(string.ascii_uppercase)</p>
<pre><code>def good_password(password):
    hasNum=False
    hasUp=False
    hasDown=False
    for char in password:
      if char in num:
          hasNum = True
      if char in letdown:
          hasDown = True
      if char in letup:
          hasUp = True
    return hasNum and hasDown and hasUp and (len(password) &gt;= 8)

   good_password("Hoooooola1")
=&gt; True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe it will be better to use "any" method: </p>
<pre><code>any(_.islower() for _ in passwrod)  # checks that at least 1 character is in lowercase
any(_.isupper() for _ in passwrod)  # checks that at least 1 character is in uppercase
any(_.isdigit() for _ in passwrod)  # checks that at least 1 character is a number
</code></pre>
</div>
<span class="comment-copy">Hint: <code>"5" in num</code> will evaluate to False. Why might this be?</span>
<span class="comment-copy">What do you mean it's not working? What happens when you try a good password, or a bad password?</span>
<span class="comment-copy">"it doesn't seems to work" is not an adequate problem statement.</span>
<span class="comment-copy">BTW, pet peeve of mine: <code>if &lt;Boolean expression&gt;: return True else: return False</code> can (and should) always be replaced with <code>return &lt;Boolean Expression&gt;</code>.</span>
<span class="comment-copy">in your code, <code>num</code> is the list of integers [0, 1 ... 9] whereas it should be either the string "0123456789" or the list of characters ['0','1' ... '9'].</span>
<span class="comment-copy">Absolutely right, I like your answer, using built in is also clever! check my answer if you want</span>
<span class="comment-copy">I'd say more than just clever, it's pretty much the <a href="https://www.python.org/dev/peps/pep-0020/" rel="nofollow noreferrer">"one ... obvious way to do it."</a></span>
<span class="comment-copy">I like the first part of this answer. But since a character cannot be a digit, uppercase letter, and lowercase letter at the same time, the second part is incorrect.</span>
<span class="comment-copy">A better idea would be to use <a href="https://docs.python.org/3/library/string.html#string-constants" rel="nofollow noreferrer"><code>string.digits</code></a> or <a href="https://docs.python.org/3/library/stdtypes.html#string-methods" rel="nofollow noreferrer"><code>.isdigit()</code></a>.</span>
