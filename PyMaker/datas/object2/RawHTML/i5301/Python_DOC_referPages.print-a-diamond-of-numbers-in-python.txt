<div class="post-text" itemprop="text">
<pre><code>      1
     121
    12321
   1234321
  123454321
   1234321
    12321
     121
      1
</code></pre>
<p>I can only print stars but have no logic for numbers.</p>
<pre><code>userInput = int(input("Please input side length of diamond: "))

if userInput &gt; 0:
    for i in range(userInput):
        for s in range(userInput -3, -2, -1):
            print(" ", end="")
        for j in range(i * 2 -1):
            print("*", end="")
        print()
    for i in range(userInput, -1, -1):
        for j in range(i * 2 -1):
            print("*", end="")
        print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are some utils you should use like <a href="https://docs.python.org/3/library/stdtypes.html#str.center" rel="nofollow noreferrer"><code>str.center</code></a>, <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join</code></a>, <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a>:</p>
<pre><code>from itertools import chain

def up_and_down(n):  # 1,2, ..., n, ..., 2, 1
    return chain(range(1, n), range(n, 0, -1))

def diamond(n):
    for i in up_and_down(n):
        print((n-i)*' ', *up_and_down(i), sep='') 
        # or more performant
        # print(''.join(map(str, up_and_down(i))).center(2*n-1))

&gt;&gt;&gt; diamond(5)
    1    
   121   
  12321  
 1234321 
123454321
 1234321 
  12321  
   121   
    1    
</code></pre>
</div>
<span class="comment-copy">format your code please, is not readable like that</span>
<span class="comment-copy">@PM2Ring Maybe the OP meant "<b>star</b>s" (asterisks)</span>
<span class="comment-copy">@iBug Probably, but I'd like the OP to confirm that.</span>
<span class="comment-copy">@PM2Ring Instead of simply rejecting the edit, you should have rejected/improved it, or provided a more clear reject reason, like: Changing starts to stars may change the question. OP should provide this edit.</span>
<span class="comment-copy">@FrankerZ Yes, I should have. I rejected it because I mistakenly thought that pault had provided indentation that was originally absent; somehow I was looking at the "side-by-side" view instead of the "side-by-side markdown" view. Sorry about that.</span>
<span class="comment-copy">thank you its working perfectly</span>
<span class="comment-copy">Prints unnecessary extra spaces at the end of the lines, though. Alternative idea for <code>up_and_down</code>: <code>return (*range(1, n), *range(n, 0, -1))</code></span>
<span class="comment-copy">Good idea to use <code>.center</code>. But I suspect that this is an exercise in learning how to use <code>for</code> loops, so <code>chain</code> and <code>map</code> might be a bit too advanced at this stage of the OP's learning.</span>
<span class="comment-copy">@StefanPochmann You are right about the spaces, but I will leave it as is for simplicity. The alternative <code>up_and_down</code> would require qualification wrt to the Python version and would build an unnecessary tuple.</span>
<span class="comment-copy">@PM2Ring Probably true. I remember having to do these things in bloody java, and I still have callouses on my finger tips from typing them loops ;)</span>
