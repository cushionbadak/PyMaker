<div class="post-text" itemprop="text">
<p>My homework question is worded as follows:</p>
<blockquote>
<p>An attempt to manipulate a turtle whose window has been closed raises an error.<br/>
  True<br/>
  False</p>
</blockquote>
<p>My book is worded as "raises an exception."  So is there a difference between the two wordings.  I feel like this is a trick question.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://www.python.org/dev/peps/pep-0008/#exception-names" rel="nofollow noreferrer">Pep8</a></p>
<p><em>Because exceptions should be classes, the class naming convention applies here. However, you should use the suffix "Error" on your exception names (if the exception actually is an error).</em> </p>
<p>Thus, "Error" is a naming convention for exceptions. However, you will find in the wild that not all Exceptions end with "Error". </p>
</div>
<div class="post-text" itemprop="text">
<p>There's history to the terminology of exception vs error, but if we are talking purely Python (from <a href="https://docs.python.org/2/library/exceptions.html#exception-hierarchy" rel="nofollow noreferrer">https://docs.python.org/2/library/exceptions.html#exception-hierarchy</a>):</p>
<pre><code>BaseException
 +-- SystemExit
 +-- KeyboardInterrupt
 +-- GeneratorExit
 +-- Exception
      +-- StopIteration
      +-- StandardError
      |    +-- BufferError
      |    +-- ArithmeticError
      |    |    +-- FloatingPointError
      |    |    +-- OverflowError
      |    |    +-- ZeroDivisionError
      |    +-- AssertionError
      |    +-- AttributeError
      |    +-- EnvironmentError
      |    |    +-- IOError
      |    |    +-- OSError
      |    |         +-- WindowsError (Windows)
      |    |         +-- VMSError (VMS)
      |    +-- EOFError
      |    +-- ImportError
      |    +-- LookupError
      |    |    +-- IndexError
      |    |    +-- KeyError
      |    +-- MemoryError
      |    +-- NameError
      |    |    +-- UnboundLocalError
      |    +-- ReferenceError
      |    +-- RuntimeError
      |    |    +-- NotImplementedError
      |    +-- SyntaxError
      |    |    +-- IndentationError
      |    |         +-- TabError
      |    +-- SystemError
      |    +-- TypeError
      |    +-- ValueError
      |         +-- UnicodeError
      |              +-- UnicodeDecodeError
      |              +-- UnicodeEncodeError
      |              +-- UnicodeTranslateError
      +-- Warning
           +-- DeprecationWarning
           +-- PendingDeprecationWarning
           +-- RuntimeWarning
           +-- SyntaxWarning
           +-- UserWarning
           +-- FutureWarning
       +-- ImportWarning
       +-- UnicodeWarning
       +-- BytesWarning
</code></pre>
<p>You can see that all "Errors" inherit from <code>StandardError</code>, which itself is a type of <code>Exception</code></p>
<p>I would take the benefit of the doubt on this question, and assume it would raise an Error of some sort (maybe OSError?)</p>
</div>
<div class="post-text" itemprop="text">
<p>Be pedantic.  The object actually being raised is an exception, whether or not the circumstance is an error.</p>
</div>
<span class="comment-copy">Have you taken the time to Google your question? <a href="https://stackoverflow.com/q/43605512/8881141">stackoverflow.com/q/43605512/8881141</a></span>
<span class="comment-copy">See <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/errors.html</a> for an explanation of the difference.</span>
<span class="comment-copy">@jp_data_analysis as far as I can tell, that doesn't make a distinction between "error" and "exception"</span>
<span class="comment-copy">Yes, I have googled it, and I'm still not sure of the answer.    Also... I've checked the docs beforehand as well.  Everything says that exception is an error, thus my confusion.</span>
<span class="comment-copy">Short version of @jp_data_analysis 's link: Exceptions are errors raised at runtime (so you can write code to handle them), and in Python, that basically means every error is an exception, aside from syntax errors (which can be raised at runtime in certain dynamic code execution contexts, but that's irrelevant to this case, and as a general rule, if you have actual syntax errors, your code will fail to run with no possibility of handling the problem).</span>
<span class="comment-copy">Thank you, I was leaning toward answering as true.  It's not due yet, so I am going to wait and see if anyone else chimes in.  I just feel like since it uses different wording than how it is written in the book, that it may be a trick and actually be false.</span>
