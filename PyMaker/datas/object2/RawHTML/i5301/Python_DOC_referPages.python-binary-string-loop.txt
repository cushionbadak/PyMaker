<div class="post-text" itemprop="text">
<p>The question on my assignment is as follows:</p>
<blockquote>
<p>Write a function that takes, as an argument, a string, identified by the variable <code>aString</code>. If the string only contains digits 0 and 1, return the string formed by concatenating the argument with the string "is a binary string." Otherwise, return a string indicating the length of the argument, as specified in the examples that follow. Name this function <code>AmIBinary(aString)</code>. </p>
</blockquote>
<p>I am having trouble figuring out how to form a loop which searches through a string and determines whether or not the string is a binary string. I understand how to get the length of a string, I just don't understand how to figure out if it is a binary string. </p>
</div>
<div class="post-text" itemprop="text">
<p>Try this !</p>
<pre><code>import re
def AmIBinary(aString):
    #test_str='Vijay'
    if re.match("[01]+",aString):
        print('Binary string')
    else:
        print(len(test_str))

#AmIBinary("Vijay")
AmIBinary('010101')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a for loop through a string the same way you can use with a list of numbers.</p>
<p>For example:</p>
<pre><code>numbers = [1, 2, 3, 4]
</code></pre>
<p>You can use:</p>
<pre><code>for number in numbers:
    # Do something
</code></pre>
<p>In your case, you just need to switch the number list by the string you receive as an argument like this:</p>
<pre><code>aString = '100100100'

for number in aString:
    # Check if there's a different number than '0' and '1'
</code></pre>
<p>Look that in this case you need to compare it with the string version of the number, because you're iterating a string, so each value you receive from the for loop will be a string too.</p>
<p>In the end, you'll probably have something like this:</p>
<pre><code>def AmIBinary(aString):
    for number in aString:
        if number != '0' and number != '1':
            return len(aString)
    aString += 'is a binary string'
    return aString
</code></pre>
<p>As you can see I am iterating through the string to check if any element of it is different than '1' and '0', if it is, I just return the length of the string, otherwise, if I checked every value in the string and everything is fine, I concatenate 'is a binary string' to the original string and return it.</p>
<p>I hope this helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try the build-in function remix without use loop.</p>
<pre><code>def AmIBin(s):
    try:    
       if s.startswith('0b'):
           int(s, 2)
       else:   
           int('0b{}'.format(s), 2)
    except: 
        return False
    else:   
        return True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A binary string has been defined as a string that only contains "0" or "1". So, how about checking each 'character' in the string, and if it's not a "0" or "1" you will know that the string is not a binary string.</p>
</div>
<span class="comment-copy"><code>re.match("[01]+",test_string)</code></span>
<span class="comment-copy">Use a <code>for</code> loop.  Something like <code>for char in aString:</code>.   You should also take some time to go through the <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow noreferrer">python tutorial</a></span>
<span class="comment-copy"><code>if number not in '10':</code> would be a lot more readable/pythonic in my opinion.</span>
<span class="comment-copy">@PatrickHaugh you're right, however I think that it's clearer to write this way for someone who is starting and that could use this example for other languages.</span>
