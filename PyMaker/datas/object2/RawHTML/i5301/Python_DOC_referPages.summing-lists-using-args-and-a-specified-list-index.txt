<div class="post-text" itemprop="text">
<p>I previously posted a question on Stack Overflow asking how to combine lists made of integer values, while also summing the values at the respective indexes (<a href="https://stackoverflow.com/questions/47401701/summing-lists-of-different-lengths-in-python-beginning-at-a-specified-index-usin">Summing lists of different lengths in Python beginning at a specified index using a function</a>). I got a good answer from @pault, but now I am wondering if I can use <code>*args</code> in a function to add an arbitrary amount of lists.</p>
<p>For example, I can have 4 lists (or any amount): </p>
<pre><code>a = [0, 1, 2, 3, 4, 5, 6, 7]
b = [2, 4, 6, 8, 10, 12]
c = [1, 1, 1, 1, 1]
d = [2, 2, 2, 2, 2]
</code></pre>
<p>I would like to insert lists <code>b</code>, <code>c</code>, and <code>d</code>, into specified indexes within <code>a</code>. So I could say, insert list <code>b</code> at <code>a[2]</code>, <code>c</code> at <code>a[2]</code> and <code>d</code> at <code>a[5]</code>. The result would be <code>[0 1 5 8 11 16 19 21]</code>.</p>
<p>This is the code I am currently using (credit to @pault):</p>
<pre><code>a = [0, 0, 0, 0, 0, 0, 0, 0, 0]
b = [1, 1, 1, 1, 1, 1, 1, 1, 1]
c = [5, 2]

def combine(lista, listb, index_in_list_a_to_start_insert):

    newb = [0]*index_in_list_a_to_start_insert + listb
    max_len = max(len(lista), len(newb))
    newa = lista if len(lista) &gt;= max_len else lista + [0]*(max_len-len(lista))
    newb = newb if len(newb) &gt;= max_len else newb + [0]*(max_len-len(newb))

    return [a + b for a, b in zip(newa,newb)][0:len(a)]
</code></pre>
<p>The main points would be adding any number of lists into <code>a</code> at any index while keeping the length of <code>a</code> the same, so for example if I added list <code>b</code> at <code>a[6]</code>, the result would be <code>[0, 1, 2, 3, 4, 5, 8, 11]</code>. I think my biggest issue is associating a list with the index I want it to be inserted into, so for example having list <code>b</code> going into <code>a[3]</code> and specifying list <code>c</code> to go into <code>a[4]</code>, etc. while keeping the length of list <code>a</code> the same, so maybe there has to be some pairing with <code>**kwargs</code>? Something like, <code>{'list': 'index'}</code>? I really do not know how to go about this. I am using Python 3.4.3. </p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your question correctly, what you effectively need to do is make <code>listb</code> into a list of lists.</p>
<p>To make the least amount of changes to <code>combine</code>, iterate over each item of <code>listb</code> and each index using <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a>, both of which should now be a lists of lists:</p>
<pre><code>def combine(lista, listb, index_in_list_a_to_start_insert):
    if isinstance(listb[0], list):  # check if the first item in listb
                                    # is a list; check for empty lists
        for actual_list_b, actual_insert_index in zip(listb, index_in_list_a_to_start_insert):
            lista = combine(lista, actual_list_b, actual_insert_index)
        return lista

    newb = [0]*index_in_list_a_to_start_insert + listb
    max_len = max(len(lista), len(newb))
    newa = lista if len(lista) &gt;= max_len else lista + [0]*(max_len-len(lista))
    newb = newb if len(newb) &gt;= max_len else newb + [0]*(max_len-len(newb))

    return [a + b for a, b in zip(newa,newb)][0:len(a)]
</code></pre>
<p>And using your example lists above:</p>
<pre><code>&gt;&gt;&gt; a = [0, 1, 2, 3, 4, 5, 6, 7]
&gt;&gt;&gt; b = [2, 4, 6, 8, 10, 12]
&gt;&gt;&gt; c = [1, 1, 1, 1, 1]
&gt;&gt;&gt; d = [2, 2, 2, 2, 2]
&gt;&gt;&gt;
&gt;&gt;&gt; combine(a, [b, c], [3, 4])
[0, 1, 2, 5, 9, 12, 15, 18]
&gt;&gt;&gt;
</code></pre>
<p>You'll need to add more isinstance() checks for both listb and the list of indexes, to ensure that either both are lists or neither are lists and both of the same length, with shortest one determining the result of the <code>zip</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I made this function, as requested. But I did not use <code>*args</code> because I simply think It would make the code less clear in this use-case. Here, we have clear naming, and the code seems to do what you asked.</p>
<pre><code>def combine(refList, listsToAdd, indexes):
    lenRef = len(refList)

    #   Navigating through lists you want to add.
    for listToAdd, startIndex in zip(listsToAdd, indexes):
        #   We'll need a break point later.
        lenToAdd = len(listToAdd)

        #   Setting index of the list to add numbers from.
        count = 0

        #   Going from the start index, until the end of our original list.
        for refIdx in range(startIndex, lenRef):
            #   If we reach the end of our toAdd list... break.
            if count &gt;= lenToAdd:
                break
            refList[refIdx] += listToAdd[count]
            count += 1

    return refList

if __name__ == '__main__':
    a = [0, 1, 2, 3, 4, 5, 6, 7]
    b = [2, 4, 6, 8, 10, 12]
    c = [1, 1, 1, 1, 1]
    d = [2, 2, 2, 2, 2]

    newList = combine(a, listsToAdd=[b, c, d], indexes=[2, 2, 5])
    print newList
    # outputs : [0, 1, 5, 8, 11, 16, 19, 21]
</code></pre>
</div>
