<div class="post-text" itemprop="text">
<p>I'm trying to create a function that will convert a given list into a given dictionary (where I can specify/assign values if I want). </p>
<p>So for instance, if I have a list </p>
<pre><code>['a', 'b', 'c', ..., 'z']
</code></pre>
<p>and I want to convert to a dictionary like this </p>
<pre><code>{1: 'a', 2: 'b', 3: 'c', ..., 26: 'z'}
</code></pre>
<p>I know how to do this using a dictionary comprehension </p>
<pre><code>{num : chr(96 + num) for num in range(1, 26)}
</code></pre>
<p>but I can't figure out how to make this into a more generalized function that would be able to turn any list into a dictionary. What's the best approach here?</p>
</div>
<div class="post-text" itemprop="text">
<p>Pass <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerated</code></a> list to <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer"><code>dict</code></a> constructor</p>
<pre><code>&gt;&gt;&gt; items = ['a','b','c']
&gt;&gt;&gt; dict(enumerate(items, 1))
&gt;&gt;&gt; {1: 'a', 2: 'b', 3: 'c'}
</code></pre>
<p>Here <code>enumerate(items, 1)</code> will yield <code>tuple</code>s of element and its index. Indices will start from <code>1</code> (<strong>note</strong> the second argument of <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>). Using this expression you can define a function inline like:</p>
<pre><code>&gt;&gt;&gt; func = lambda x: dict(enumerate(x, 1))
</code></pre>
<p>Invoke it like:</p>
<pre><code>&gt;&gt;&gt; func(items)
&gt;&gt;&gt; {1: 'a', 2: 'b', 3: 'c'}
</code></pre>
<p>Or a regular function</p>
<pre><code>&gt;&gt;&gt; def create_dict(items):
        return dict(enumerate(items, 1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the keys are just the index of the element in the <code>list</code>, as in your example:</p>
<pre><code>{i+1: x for i, x in enumerate(mylist)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Iterate through the list and assign every value to a number (starting from <code>1</code>).</p>
<pre><code>def list_to_dict(items):
    return {n + 1: items[n] for n in range(len(items))}
</code></pre>
<p>Replace <code>n + 1</code> with <code>n</code> if you want the dictionary to start from zero.</p>
</div>
<span class="comment-copy">What's the rule to <i><b>turn any list into a dictionary</b></i>?</span>
<span class="comment-copy">Where do the keys of the dictionary come from?</span>
<span class="comment-copy">@aircraft using ints for dictionary keys is perfectly valid.</span>
<span class="comment-copy">this is really good, thank you for your help here. I was going down the entirely wrong path but this is super helpful and informative. much appreciated!</span>
<span class="comment-copy">if my list was something like l = ['abcd'] and I wanted to add in commas to make the output look like a, b, c, d where would I add that into your code? Would I have to add a .split() somewhere in there?</span>
<span class="comment-copy">Not entirely sure about this one but you can try <code>list(l[0])</code>, where <code>l</code> is <code>['abcd']</code></span>
<span class="comment-copy">also, is there a way to call the values/keys when creating a dictionary this way?</span>
<span class="comment-copy">@David all normal <code>dict</code> operations can be done on resulting dict. Can you provide an example of your problem?</span>
