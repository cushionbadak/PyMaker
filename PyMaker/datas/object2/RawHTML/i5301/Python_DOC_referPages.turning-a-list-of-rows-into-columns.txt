<div class="post-text" itemprop="text">
<pre><code>foo = ['123','123','123]
</code></pre>
<p>I am attempting to turn <code>foo</code> into:</p>
<pre><code>revisedfoo = ['111', '222', '333']
</code></pre>
<p>This in effect is turning the "rows" into "columns":</p>
<pre><code>111
222
333
</code></pre>
<p>I have attempted something along these lines:</p>
<pre><code>    for j in range(len(foo)):
        for i in range(len(foo)):
            revisedfoo.append(foo[i][j])
</code></pre>
<p>But it leaves me with:</p>
<pre><code>revisedfoo = ['1','1','1','2','2','2','3','3','3']
</code></pre>
<p>Any help would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>With <code>zip()</code> and the star operator:</p>
<pre><code>&gt;&gt;&gt; [''.join(i) for i in zip(*foo)]
['111', '222', '333']
</code></pre>
<h3>Explanation</h3>
<hr/>
<p><code>zip(*foo)</code> <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">"unzips" foo</a>, e.g.:</p>
<pre><code>&gt;&gt;&gt; x = [1, 2, 3]
&gt;&gt;&gt; y = [4, 5, 6]
&gt;&gt;&gt; zipped = zip(x, y)
&gt;&gt;&gt; list(zipped)
[(1, 4), (2, 5), (3, 6)]
&gt;&gt;&gt; x2, y2 = zip(*zip(x, y))
&gt;&gt;&gt; x == list(x2) and y == list(y2)
True
</code></pre>
<p>So in this case:</p>
<pre><code># You need to call `list()`, because `zip()` returns
#     an iterator in Python 3.x
&gt;&gt;&gt; list(zip(*foo))
[('1', '1', '1'), ('2', '2', '2'), ('3', '3', '3')]
</code></pre>
<p>Then on each of these sub-elements (tuples), we want to join the individual elements into one string.  <code>''.join(seq)</code> is the standard way to go about this.</p>
</div>
