<div class="post-text" itemprop="text">
<p>I have a variable of list, <code>airMod</code>, consisting of different types of data: <em>char, uint32, and float</em>. Here is how it looks like in my visual studio code debug mode:</p>
<p><a href="https://i.stack.imgur.com/OgBFe.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/OgBFe.jpg"/></a></p>
<p>Now I'd like to save it in a binary file(raw buffer. I will use C++ to process it byte by byte). I am wondering how I should do it. I searched how it should be done, but mostly the solution of save a list containing same data type (ex. <code>bytearray</code>, <code>to_byte</code>.....). </p>
<p>I would like to save the data, then process it in C++ ((<code>fseek, tellg, ifstream</code>, etc. ).Thanks a lot.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the built-in <code>struct</code> module, described here: <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">https://docs.python.org/3/library/struct.html</a></p>
<p>You can use it to serialize a set of objects (often numbers) to bytes.  For example:</p>
<pre><code>import struct

with open('outfile', 'wb') as out:
    out.write(struct.pack('&lt;if', 123, 456.789))
</code></pre>
<p>That will write an 8 byte file which can be interpreted using a C or C++ struct like this, assuming you're on a little-endian machine like x86:</p>
<pre><code>struct MyRecord {
    int32_t x;
    float y;
};
</code></pre>
<p>When defining such a struct in C or C++, you must take care about the alignment, padding, and endianness of the fields.  <code>__attribute__((packed))__</code> is useful if you use GCC or Clang and might have unaligned fields.</p>
<p>Another option in Python is to use a NumPy "structured array".  You can create one like this:</p>
<pre><code>import numpy as np
rec = np.array([100, 456.789], [('x', 'i4'), ('y', 'f4')])
with open('outfile', 'wb') as out:
    out.write(rec.tobytes())
</code></pre>
</div>
<span class="comment-copy">What do you mean by "binary file"?</span>
<span class="comment-copy">What do you mean by "binary file"? If you're thinking "you know, something stored on the hard drive as ones and zeroes", all files are stored that way.</span>
<span class="comment-copy">@Roseman: raw buffer. in Bytes.</span>
<span class="comment-copy">Thanks. I am trying to use NumPy like this: <code>vec = np.array(airMod) with open(file, 'wb') as out:     out.write(vec.tobytes())</code>  However, it says "'list' object has no attribute 'tobytes' "</span>
<span class="comment-copy">@NickXTsui: You must be running some other code, because the code you wrote in that comment works fine.  <code>vec</code> is NOT a list, perhaps you are running different code where <code>vec</code> is a list.</span>
