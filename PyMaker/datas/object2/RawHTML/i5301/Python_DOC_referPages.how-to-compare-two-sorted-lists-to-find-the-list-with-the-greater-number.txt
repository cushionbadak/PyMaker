<div class="post-text" itemprop="text">
<p>I am trying to compare elements in two lists. Both of the lists contain numbers and are sorted from greatest to least. I want to find the list with the highest number. If they contain the same highest number, I want to look at the next highest number, etc. </p>
<p>So if I had a list: <code>[14, 5, 4, 3, 2]</code></p>
<p>And I was comparing it to: <code>[14, 7, 4, 3, 2]</code></p>
<p>The second list would be bigger because the next highest number is a 7. </p>
<p>Likewise, if I had a list: <code>[13, 12, 9, 7, 3]</code></p>
<p>And: <code>[13, 12, 9, 8, 2]</code> </p>
<p>The second would again be the larger of the two. </p>
<p>Any help would be appreciated!</p>
<p>I tried one of these suggestions: </p>
<p>def compare_high_card(hand_a,hand_b):
    '''
    Determines which hand has the highest high-card,
    returns 1 if hand_a has higher card, -1 if hand_b has higher_card
    :param hand_a: The first hand to compare
    :param hand_b: The second hand to compare
    :return: 1 if hand_a has higher card, -1 if hand_b has higher_card
    '''</p>
<pre><code>hand_a = sort_hand_by_value(hand_a)
hand_b = sort_hand_by_value(hand_b)

hand_length = 5

for index in range(hand_length):

    if hand_a[index] &gt; hand_b[index]:
        higher_hand =  1
        break
    elif hand_b[index] &gt; hand_a[index]:
        higher_hand = -1
        break
    else:
        higher_hand = 0

return higher_hand
</code></pre>
<p>hand_a = [14, 9, 4, 3, 2]
hand_b = [14, 8, 5, 3, 2]</p>
<p>This code only prints out -1. </p>
</div>
<div class="post-text" itemprop="text">
<p>If the lists are sorted, simply do:</p>
<pre><code>a = [14, 5, 4, 3, 2]
b = [14, 7, 4, 3, 2]

print(a &gt; b)
</code></pre>
<p>Ref: <a href="https://docs.python.org/3/tutorial/datastructures.html#comparing-sequences-and-other-types" rel="nofollow noreferrer">Comparing Sequences and Other Types</a>:</p>
<blockquote>
<p>"Sequence objects may be compared to other objects with the same
  sequence type. The comparison uses lexicographical ordering: first the
  first two items are compared, and if they differ this determines the
  outcome of the comparison; if they are equal, the next two items are
  compared, and so on, until either sequence is exhausted"</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>any</code>:</p>
<pre><code>a = [14, 5, 4, 3, 2]
b = [14, 7, 4, 3, 2]
print(any(i &gt; c for i, c in zip(a, b)) #checking if a &gt; b
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>A=[14, 5, 4, 3, 2]
B=[14, 7, 4, 3, 2]

for x in range(0,len(A)):
    if A[x]&gt;B[x]:
      print("A is bigger")
      break
    elif A[x]&lt;B[x]:
      print("B is bigger")
      break
    elif x==len(A)-1:
      print("The arrays are equal")
</code></pre>
<p>Edit: Straightforward way:</p>
<pre><code>A=[14, 5, 4, 3, 2]
B=[14, 7, 4, 3, 2]

if a&gt;b:
    print("A is bigger")
elif a&lt;b: 
    print("B is bigger")
else:
    print("Both are the same")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For unsorted lists:</p>
<pre><code>testListA = [13, 12, 9, 7, 3, 30]
testListB = [13, 12, 9, 8, 2]


def getbiggerlist(list_a: list, list_b: list):
    return sorted(list_a) &gt; sorted(list_b)


print(getbiggerlist(testListA, testListB))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is recursive approach:</p>
<pre><code>data1=[13, 12, 9, 7, 3]

data2=[13, 12, 9, 8, 2]


def comapre(lst1,lst2):
    vb=sorted(lst1,reverse=True)
    rb=sorted(lst2,reverse=True)


    ss=max(vb)
    pp=max(rb)
    if ss==pp:

        return comapre(vb[1:],rb[1:])
    elif ss&gt;pp:
        return data1
    else:
        return data2
print(comapre(data1,data2))
</code></pre>
<p>output:</p>
<pre><code>[13, 12, 9, 8, 2]
</code></pre>
</div>
<span class="comment-copy">While not precisely the same question, this should help: <a href="https://stackoverflow.com/q/13052857/9209546">stackoverflow.com/q/13052857/9209546</a></span>
<span class="comment-copy">seems a bit too complicated....</span>
<span class="comment-copy">total overkill! (for sorted lists)  and not 'pythonic' simply do : a = [13, 12, 9, 7, 3, 30] b = [13, 12, 9, 8, 2] b &gt; a</span>
<span class="comment-copy">Oh python.. corrected it for unsorted lists...</span>
<span class="comment-copy">Also my first version assumed that he wanted the bigger list to be returned by the method.</span>
<span class="comment-copy">simply comparing works with unequal length lists....</span>
