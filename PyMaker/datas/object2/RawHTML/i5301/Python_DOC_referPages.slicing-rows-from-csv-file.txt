<div class="post-text" itemprop="text">
<p>I'm trying to read a csv file in python and build a data frame from it. 
Here is an example of a row from my csv file:</p>
<p>|ab/5 (cd ef 6| text1/123 (lala| ghj) lal/1234/567|   </p>
<p>I would like to slice the row and assign each element to a column.
The row should look sit in the data frame like so:</p>
<pre><code>col1 |  col2                     | col3
ab/5 | (cd ef 6| text1/123 (lala | ghj)
</code></pre>
<p>Setting up a distributor while opening the file in excel is pointless because sometimes '|' appears in place, in which case it should not be split.
For the first element ab/5 I was trying to do it like this:</p>
<pre><code>with open('actions2.csv', 'r') as csvfile_actions2:
    reader = csv.reader(csvfile_actions2)
    for row in reader:
        row2=row[0:23].split('|')
        print(row2)
</code></pre>
<p>However, an error occurred:</p>
<pre><code>AttributeError: 'list' object has no attribute 'split'
</code></pre>
<p>Does anyone have an idea how to solve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no point to use the <code>csv.reader</code> function if you intend to delimitate manually. You can instead use <code>open</code> and split the line at the first instance of '|' as shown below:</p>
<pre><code>with open('actions2.csv', 'r') as csvfile_actions2:
    for row in csvfile_actions2:
        row2 = row[0:23].split('|',1)
        print(row2)
</code></pre>
<p>The <code>split('|',1)</code> function will split the string only at the first '|' character. If you wish to remove the whitespace, you can also add <code>.replace(' ','')</code> before <code>split</code>.</p>
<p>Alternatively, if your csv file is only 3 columns and the extra '|' characters only appear in column 2 as shown in your example, then you can recombine them after using <code>csv.reader</code></p>
<pre><code>with open('actions2.csv', 'r') as csvfile_actions2:
    reader = csv.reader(csvfile_actions2, delimiter='|')
    for row in reader:
        if len(row) == 4:
            row = [row[0], row[1] + '|' + row[2], row[3]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is wrong way to implement split.</p>
<p>You should do "cell" parsing while you're reading csv, not after. For python <code>csv</code> module, dialects support <a href="https://docs.python.org/3/library/csv.html#csv.Dialect.delimiter" rel="nofollow noreferrer">custom delimiters</a>. So, you can just do</p>
<pre><code>with open('actions2.csv', 'r') as csvfile_actions2:
    reader = csv.reader(csvfile_actions2, delimiter='|')
</code></pre>
<p><code>csv.reader</code> will do all parsing and splitting for you, and you will iterate over parsed lists</p>
<p>Look for more <a href="https://docs.python.org/3/library/csv.html#examples" rel="nofollow noreferrer">examples and recipes</a> in docs</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Try this:-</strong></p>
<pre><code>with open('actions2.csv') as f:
    content = f.read()
    comp_list = content.split("\n")[0:23]
    for i in comp_list:
        new_list = i.split("|")
        print (new_list)
</code></pre>
</div>
<span class="comment-copy">you need to convert to string first. so str(row[0:23]).split(|)</span>
<span class="comment-copy">Unfortunately, this could be only done with regex expressions, beacuse | and || are in differnt places in various rows.</span>
<span class="comment-copy">this is the correct way of using <code>csv</code> module</span>
