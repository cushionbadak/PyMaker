<div class="post-text" itemprop="text">
<p>I have written the following code:</p>
<pre><code>dict = {"hello" : 3, "dog" : 5, "cat" : 5, "fish" : 1}

biggestKey = max([[dict[key],key] for key in dict])[1]

print(biggestKey)
</code></pre>
<p>From this I get the result: </p>
<blockquote>
<p>dog</p>
</blockquote>
<p>Whereas I actually want to get:</p>
<blockquote>
<p>dog;cat</p>
</blockquote>
<p>How can I fix the code? </p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to find all the keys which have the same maximum value, you can do:</p>
<pre><code>&gt;&gt;&gt; D = {"hello" : 3, "dog" : 5, "cat" : 5, "fish" : 1}
&gt;&gt;&gt; maxval = max(D.values())
&gt;&gt;&gt; [k for k, v in D.items() if v == maxval]
['cat', 'dog']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way is to use list comprehension:</p>
<pre><code>my_dict = {"hello" : 3, "dog" : 5, "cat" : 5, "fish" : 1}

my_keys = [k for k in my_dict if my_dict[k] == max(my_dict.values())]

# returns ['dog', 'cat']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just filter out the keys that have the max value:</p>
<pre><code>&gt;&gt;&gt; d = {"hello" : 3, "dog" : 5, "cat" : 5, "fish" : 1}
&gt;&gt;&gt; print([k for k, v in d.items() if v == max(d.values())})
['dog', 'cat']
</code></pre>
<p>Or even with a <code>collections.defaultdict</code>:</p>
<pre><code>from collections import defaultdict
from operator import itemgetter

d = {"hello" : 3, "dog" : 5, "cat" : 5, "fish" : 1}

dic = defaultdict(list)
for key, value in d.items():
    dic[value].append(key)

print(max(dic.items(), key = itemgetter(0))[1])
# ['dog', 'cat']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>d = {}</p>
<p>This will do the trick: <code>max(d, key=d.get)</code></p>
<p>Also: <code>max(d.values())</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Try this :</p>
<pre><code>dict_1 = {"hello" : 3, "dog" : 5, "cat" : 5, "fish" : 1}

from collections import defaultdict

d=defaultdict(list)

for j,i in dict_1.items():
    d[i].append(j)

print(d.get(max(d)))
</code></pre>
<p>output:</p>
<pre><code>['cat', 'dog']
</code></pre>
</div>
<span class="comment-copy">don't use built in function name <code>dict</code></span>
<span class="comment-copy">Use elias or RoadRunner's (equivalent) solution, as their list comprehensions only iterate the dictionary once.</span>
<span class="comment-copy">The solution from elias is the most efficient as it calculates the max outside the list comprehension.</span>
<span class="comment-copy">thank you, it works perfectly</span>
<span class="comment-copy">How is this syntax you're using called? I'd like to read up on it.</span>
<span class="comment-copy">@JustinasMarozas it's called a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a></span>
<span class="comment-copy">@MooingRawr , thank you!</span>
<span class="comment-copy">@JustinasMarozas Yep its a list comprehension. Do note that anything written with a list comprehension can be transformed into nested loops.</span>
<span class="comment-copy">Please avoid to use built in function name <code>dict</code> it over write dict object</span>
<span class="comment-copy">Fixed that, thank you :)</span>
