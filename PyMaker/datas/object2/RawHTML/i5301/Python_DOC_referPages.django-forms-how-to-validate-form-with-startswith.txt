<div class="post-text" itemprop="text">
<p>I am trying to work out how to get the following bit of code working so that everything that starts with the tuple is valid, e.g. if the postcode 'GU15 56L' is entered it permits the postcode. Currently only the GU15 part is working (for this example). Something like start with but not sure where to start. </p>
<pre><code>class PostCodeForm (forms.Form):
    pcode = forms.CharField()

    def clean_pcode(self):
        permitted = {'GU15','GF34','FG34','BT25'}
        pcode = self.cleaned_data['pcode'].lower()
        if not pcode in (permitted):
            raise forms.ValidationError("Apologies, but does not currently deliver to you postcode.")
        return pcode
</code></pre>
<p>Thanks for your help in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply check if the first 4 characters are permitted:</p>
<pre><code>if not pcode[:4] in permitted:
    raise forms.ValidationError("Apologies, but does not currently deliver to you postcode.")
</code></pre>
<p>or</p>
<pre><code>if any([pcode.startswith(code) for code in permitted]) is False:
    raise forms.ValidationError("Apologies, but does not currently deliver to you postcode.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if not pcode.startswith(tuple(permitted)):
    raise ValueError()
</code></pre>
<p>But you use <code>self.cleaned_data['pcode'].lower()</code> and your set contains all upper-cased words. Try with <code>self.cleaned_data['pcode'].upper()</code></p>
</div>
<span class="comment-copy"><code>if not pcode in (permitted)</code> should not allow GU15 56L. your code looks fine.</span>
<span class="comment-copy">Thanks that first code snippet did the trick [:4]. Sometimes, its the simple things!</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.startswith</a></span>
