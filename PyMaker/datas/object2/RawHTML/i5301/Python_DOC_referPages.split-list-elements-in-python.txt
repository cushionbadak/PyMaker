<div class="post-text" itemprop="text">
<p>I have a list,</p>
<pre><code>['t', 'p', 'k', 'F', 'p', 'l', 'v', 'F']
</code></pre>
<p>and I want to group the elements by the 'F', where the 'F' is the end of the group, so it <code>splits</code> the list into separate groups.</p>
<p>Like this:</p>
<pre><code>['t', 'p', 'k'] ['p', 'l', 'v']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This program assumes that your list elements are always single characters.  If that isn't true, you would need to work directly on the list.  I convert to a string to use the convenient str.split method, then convert each substring back into a list.</p>
<pre><code>inp = ['t', 'p', 'k', 'F', 'p', 'l', 'v', 'F']
print(inp)
groups_as_strings = "".join(inp).split("F")
out = [list(g) for g in groups_as_strings if g]
print(out)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a> with a <code>key</code> function:</p>
<pre><code>from itertools import groupby

l = ['t', 'p', 'k', 'F', 'p', 'l', 'v', 'F']

result = [list(g) for k, g in groupby(l, key=lambda x: x != 'F') if k]
&gt;&gt;&gt; result
[['t', 'p', 'k'], ['p', 'l', 'v']]
</code></pre>
<p>Another way is with string operations:</p>
<pre><code>result = [list(x) for x in ''.join(l).split('F') if x]
&gt;&gt;&gt; result
[['t', 'p', 'k'], ['p', 'l', 'v']]
</code></pre>
<p>Note that both solutions above will include any trailing items that follow the final <code>'F'</code>. Not sure if that is what you want?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is one way.</p>
<pre><code>lst = ['t', 'p', 'k', 'F', 'p', 'l', 'v', 'F']

list(map(list, ''.join(lst).split('F')[:-1]))

# [['t', 'p', 'k'], ['p', 'l', 'v']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simple but easy to follow solution:</p>
<pre><code>new_list = []
tmp_list = []
for i in letter_list:
  if i == 'F':
    if tmp_list:
      new_list.append(tmp_list)
      tmp_list = []
    continue
  tmp_list.append(i)

print(new_list)
</code></pre>
<p>Note that this assumes empty lists (consecutive F's) should be ignored, but that's easy to remove.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/15357830/python-spliting-a-list-based-on-a-delimiter-word">Python spliting a list based on a delimiter word</a></span>
<span class="comment-copy">More explicit: <code>[list(i) for i in ''.join(LL).split('F') if i]</code></span>
<span class="comment-copy">What if the elements are more than single character?</span>
<span class="comment-copy">@PeterWood, choose another solution :)</span>
