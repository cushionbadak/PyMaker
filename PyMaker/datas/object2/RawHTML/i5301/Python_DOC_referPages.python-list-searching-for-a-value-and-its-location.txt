<div class="post-text" itemprop="text">
<p>I'm looking for the greatest number out of a list to then obtain the element 1 location before If anyone knows how to do this it would be very much appreciated. </p>
<pre><code>my_list = ['room', 10, 'chamber', 23, 'kitchen', 8]

pos = my_list.aMethodToGetTheGreatestValuePosition()

print('The biggest room is ' + my_list[pos-1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way. Note this requires structure, i.e. room, then size sequentially. I don't think that's a bad idea, since you should be using a dictionary or list of tuples anyway.</p>
<pre><code>my_list = ['room', 10, 'chamber', 23, 'kitchen', 8]

pos = my_list.index(max(my_list[1::2]))  # 23

print('The biggest room is ' + my_list[pos-1])  # chamber
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will do it without having to traverse the list multiple times:</p>
<pre><code>my_list = ['room', 10, 'chamber', 23, 'kitchen', 8]

pos = max(enumerate(my_list[1::2]), key=lambda x: x[1])[0]

print('The biggest room is ' + my_list[2*pos])
</code></pre>
<p>This uses <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> to get the indexes of <code>my_list</code> at the same time it is searching for the max.</p>
<p>Or you can be slightly clever with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a>:</p>
<pre><code>print('The biggest room is ' +  max(zip(*[iter(my_list)]*2), key=lambda x: x[1])[0])
</code></pre>
<p>which relies upon using the same iterator over <code>my_list</code> to feed successive values to <code>zip</code> (borrowed from another <a href="https://stackoverflow.com/questions/4356329/how-to-create-a-dictionary-from-a-line-of-text/4356415#4356415">excellent answer</a>). This essentially turns your flat list into a list of tuples which would be a nicer way of storing the original data, if you have that option:</p>
<pre><code>&gt;&gt;&gt; list(zip(*[iter(my_list)]*2))
[('room', 10), ('chamber', 23), ('kitchen', 8)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>my_list = ['room', 10, 'chamber', 23, 'kitchen', 8]

my_list[my_list.index(max(filter(lambda x: isinstance(x, int), my_list)))-1]
</code></pre>
<p>Say there are 2 equal maximum numbers in the input list, it will take the first one. That will be a limitation to the solution</p>
</div>
<div class="post-text" itemprop="text">
<p>How about:</p>
<pre><code>my_list = ['room', 10, 'chamber', 23, 'kitchen', 8]

max_index = max(range(len(mylist)),
                key=lambda i: my_list[i] if isinstance(my_list[i], int) else float('-inf'))
max_name = my_list[max_index-1]
</code></pre>
<p>I'd recommend changing your data format though, if you can. A dictionary mapping number to name would (or name to number) would be a lot more natural. Even a list of lists might be easier to deal with.</p>
</div>
<span class="comment-copy">Does that answer your question? (I don't think so)</span>
<span class="comment-copy">I reopened it because the question is not exactly a duplicate as it is a unique case (has mixed strings and ints)</span>
<span class="comment-copy">I like this one</span>
<span class="comment-copy">Only thing I will note is that <code>str(...)</code> is useless</span>
<span class="comment-copy">@jamylak Agreed &amp; amended</span>
<span class="comment-copy">That <code>index</code> call means you have to traverse the list twice.</span>
<span class="comment-copy">No problem, i just thought it seemed like people were downvoting for this reason alone so decided to address it in general</span>
<span class="comment-copy">I'm interested in what you're proposing at the moment, can you give me a link to one of the data format structure so I can learn it myself ? Otherwise, thank you for your time</span>
<span class="comment-copy">Dictionaries are pretty fundamental to Python. Read about them <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">in the official Python tutorial</a> (I linked to the dictionary section in particular, but the whole page is probably good for you to read). You could use <code>{'room': 10, 'chamber': 23, 'kitchen': 8}</code> or something similar. Much easier to deal with than your interleaved list.</span>
