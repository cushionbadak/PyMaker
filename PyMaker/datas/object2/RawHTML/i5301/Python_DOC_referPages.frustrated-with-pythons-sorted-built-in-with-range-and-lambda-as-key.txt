<div class="post-text" itemprop="text">
<p>I encountered something that makes no sense to me. See this use of <code>sorted</code> with <code>range</code> and <code>lambda</code>:</p>
<pre><code>sorted(range(-5, 6), key=lambda x: x * x)
</code></pre>
<p>Which outputs this in the Python shell:</p>
<pre><code>[0, -1, 1, -2, 2, -3, 3, -4, 4, -5, 5]
</code></pre>
<p>Now, for the life of me, I don't get this! I've been playing around with <code>sorted</code>, <code>lambda</code>, and <code>range</code>, and it doesn't make sense. For example, if you run the <code>range</code> bit in a for loop, you get something like this:</p>
<pre><code>&gt;&gt;&gt; for i in range(-5, 6):
...     print(i)
-5
-4
...
0
...
4
5
</code></pre>
<p>And the <code>lambda</code> bit:</p>
<pre><code>&gt;&gt;&gt; (lambda x: x * x)(-5)
25
</code></pre>
<p>But putting it all together... I don't understand how using the <code>key</code> this way makes the order independent of the sign.</p>
<p>But this makes sense to me:</p>
<pre><code>&gt;&gt;&gt; sorted(range(-5, 6), key=lambda x: abs(x))
[0, -1, 1, -2, 2, -3, 3, -4, 4, -5, 5]
</code></pre>
<p>Can someone shed some light on this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Let's go through this step by step:</p>
<ul>
<li><p>The sequence you're sorting is <code>range(-5, 6)</code>, which is <code>[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]</code>.</p></li>
<li><p>The elements of this sequence with their corresponding keys are:</p>
<pre><code>  x | x * x
----|-------
 -5 | 25
 -4 | 16
 -3 |  9
 -2 |  4
 -1 |  1
  0 |  0
  1 |  1
  2 |  4
  3 |  9
  4 | 16
  5 | 25
</code></pre></li>
<li><p>Now let's sort this table by key:</p>
<pre><code>         x | x * x
-----------|-------
         0 |  0
  -1 and 1 |  1
  -2 and 2 |  4
  -3 and 3 |  9
  -4 and 4 | 16
  -5 and 5 | 25
</code></pre>
<p>This means that the output of <code>sorted()</code> will be <code>0</code>, then <code>-1</code> and <code>1</code> in some order, then <code>-2</code> and <code>2</code> in some order, etc.  <a href="https://docs.python.org/3/library/functions.html#sorted" rel="noreferrer"><code>sorted()</code> performs a stable sort</a>, so any input elements with the same key will be output in the same order that they appear in the input; since the negatives occur before the positives in <code>range(-5, 6)</code>, this means that <code>sorted()</code> will output <code>-1</code> before <code>1</code>, <code>-2</code> before <code>2</code>, etc.</p></li>
<li><p>Thus, the final output is <code>[0, -1, 1, -2, 2, -3, 3, -4, 4, -5, 5]</code>.</p></li>
</ul>
</div>
<span class="comment-copy">For the purposes of a sorting key, squaring a number and taking it's absolute value are the same thing. What exactly is it that you don't get? Because squaring a number makes every (real) number positive. It has the same effect, in that sense, as taking the absolute value.</span>
<span class="comment-copy">Why do you think <code>x^2</code> and <code>abs(x)</code> would sort differently?</span>
<span class="comment-copy"><code>n^2 == (-n)^2</code></span>
<span class="comment-copy">I suspect lambda is really a distraction.</span>
<span class="comment-copy">@nicorellius well, for every real number x, (x)^2 == (-x)^2. Think of the graph of a parabola, it's a mirror image across the y - axis... Or perhaps:(-x)^2 == (-x)*(-x) == (-1*x)(-1*x) == (-1)(-1)(x)(x) == (1)(x)(x) == (x)^2 ... this really is more of a math question. again, just <a href="http://www.wolframalpha.com/input/?i=x%5E2" rel="nofollow noreferrer">look at the graph</a></span>
<span class="comment-copy">This is great.  A key line from the documentation I find is this: <i><a href="https://docs.python.org/3/howto/sorting.html#key-functions" rel="nofollow noreferrer">The value of the key parameter should be a function that takes a single argument and returns a key to use for sorting purposes.</a></i>  So in a way it's like creating an ordered dictionary with keys sorted based on returned values from the function (<code>x*x</code>), and <code>sorted()</code>return only the values in order from this dictionary as a list.  This makes a lot of sense to me.</span>
<span class="comment-copy">Thanks for this answer... I'm starting to see how this works. With your second bullet, if you use the <code>x * x</code> column as the sorting order, going out from the middle or the zero, you get <code>0, 1, 1, . . . 25, 25</code> (like @Sanju commented above). If you apply this to the column from the <code>range(-5, 6)</code>, you get <code>0, -1 or 1, -2 or 2, . . . -5 or 5</code>. From here it's a matter of the rule Python follows, eg, <code>sorted()</code> outputting <code>-1</code> before <code>1</code> and you're done! Thanks! This helped a lot.</span>
<span class="comment-copy">@Idlehands or, really, it might be better to think of sorting a list of pairs of the form <code>(keyfunc(x), x)</code>, i.e. the "schwartzian transform" <a href="https://en.wikipedia.org/wiki/Schwartzian_transform" rel="nofollow noreferrer">en.wikipedia.org/wiki/Schwartzian_transform</a></span>
<span class="comment-copy">@nicorellius The reason -1 comes before 1 is because python's sorting algorithm (tim sort I believe) is <a href="https://en.wikipedia.org/wiki/Sorting_algorithm#Stability" rel="nofollow noreferrer">stable</a>. That is, two otherwise equal elements (according  to the key) will have their order maintained. Ergo, -1 comes before 1 because they have equal keys and -1 came before 1 in the original input</span>
