<div class="post-text" itemprop="text">
<p>I wish to access values from the <code>timing</code> section of the response.</p>
<p>I have the following JSON response.</p>
<pre><code>    {
        "method": "Network.responseReceived",
        "params": {
            "frameId": "(297304CB88DA6BF7ED17760594B93F3E)",
            "loaderId": "9976.1",
            "requestId": "9976.6",
            "response": {
                "connectionId": 84,
                "connectionReused": false,
                "encodedDataLength": 453,
                "fromDiskCache": false,
                "fromServiceWorker": false,
                "headers": {
                    "Cache-Control": "max-age=2592000",
                    "Connection": "keep-alive",
                    "Content-Encoding": "gzip",
                    "Content-Type": "text/css",
                    "Date": "Thu, 25 Jan 2018 19:47:50 GMT",
                    "Expires": "Sat, 24 Feb 2018 19:47:50 GMT",
                    "Last-Modified": "Fri, 20 Oct 2017 22:53:18 GMT",
                    "Pragma": "public",
                    "Server": "nginx",
                    "Transfer-Encoding": "chunked",
                    "Vary": "Accept-Encoding",
                    "X-Content-Type-Options": "nosniff",
                    "X-Nginx-Cache-Status": "HIT",
                    "X-Server-Powered-By": "Engintron",
                    "X-XSS-Protection": "1; mode=block"
                },
                "headersText": "HTTP/1.1 200 OK\r\nServer: nginx\r\nDate: Thu, 25 Jan 2018 19:47:50 GMT\r\nContent-Type: text/css\r\nTransfer-Encoding: chunked\r\nConnection: keep-alive\r\nVary: Accept-Encoding\r\nLast-Modified: Fri, 20 Oct 2017 22:53:18 GMT\r\nExpires: Sat, 24 Feb 2018 19:47:50 GMT\r\nCache-Control: max-age=2592000\r\nX-XSS-Protection: 1; mode=block\r\nX-Content-Type-Options: nosniff\r\nX-Nginx-Cache-Status: HIT\r\nX-Server-Powered-By: Engintron\r\nPragma: public\r\nContent-Encoding: gzip\r\n\r\n",
                "mimeType": "text/css",
                "protocol": "http/1.1",
                "remoteIPAddress": "213.251.187.58",
                "remotePort": 80,
                "requestHeaders": {
                    "Accept": "text/css,*/*;q=0.1",
                    "Accept-Encoding": "gzip, deflate",
                    "Accept-Language": "en-US,en;q=0.9",
                    "Connection": "keep-alive",
                    "Host": "www.oostcircle.nl",
                    "Referer": "http://example",
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
                },
                "requestHeadersText": "GET /static/personal/css/style.min.css HTTP/1.1\r\nHost: example.com\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36\r\nAccept: text/css,*/*;q=0.1\r\nReferer: http://example.com/\r\nAccept-Encoding: gzip, deflate\r\nAccept-Language: en-US,en;q=0.9\r\n",
                "securityState": "neutral",
                "status": 200,
                "statusText": "OK",
                "timing": {
                    "connectEnd": 25.7599998731166,
                    "connectStart": 13.7589999940246,
                    "dnsEnd": 13.7589999940246,
                    "dnsStart": 3.55999986641109,
                    "proxyEnd": -1,
                    "proxyStart": -1,
                    "pushEnd": 0,
                    "pushStart": 0,
                    "receiveHeadersEnd": 45.4459998290986,
                    "requestTime": 1296269.240561,
                    "sendEnd": 26.484000030905,
                    "sendStart": 26.1399999726564,
                    "sslEnd": -1,
                    "sslStart": -1,
                    "workerReady": -1,
                    "workerStart": -1
                },
                "url": "http://www.example.com/static/personal/css/style.min.css"
            },
            "timestamp": 1296269.289171,
            "type": "Stylesheet"
        }
    },    
</code></pre>
<p>I have successfully extracted the <code>type</code> and <code>url</code> values but when i try to extract the timings using:</p>
<pre><code>with open(file_) as json_file:  
    data = json.load(json_file, parse_int=Decimal, parse_float=Decimal)
    for p in data:
        if "Network.responseReceived" in p['method']:

            print('URL: ' + p['params']['response']['timing']['pushEnd'])
</code></pre>
<p>Using the Decimal Parser as specified in the Python Docs <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">https://docs.python.org/3/library/json.html</a> </p>
<p>I get the error:</p>
<pre><code>TypeError: must be str, not decimal.Decimal
</code></pre>
<p>Without the parser I get:</p>
<pre><code>TypeError: must be str, not int
</code></pre>
<p>I have tried using <code>[str('pushEnd')]</code> and I get the same error.</p>
<p>How can I access and return Integers and Floats from the JSON</p>
<p>Full Traceback is:</p>
<pre><code>Traceback (most recent call last):
  File "e:/calc_time.py", line 17, in &lt;module&gt;
     print('URL: ' + p['params']['response']['timing'][str('pushEnd')])
TypeError: must be str, not int
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I mentioned, I don't understand at all why you want to parse ints and floats as decimals. But either way, that is not at all the cause of the problem you are having, since you get errors both with and without.</p>
<p>The error traceback shows exactly what is wrong: you are trying to concatenate a string with an int or a decimal. Python doesn't let you do that; you can only concatenate strings with other strings. </p>
<p>There are various ways you could fix this, but the best is <em>not to concatenate</em>. Use string interpolation instead.</p>
<pre><code>print('URL: {}'.format(p['params']['response']['timing']['pushEnd']))
</code></pre>
<p>(Note, your attempt to fix this by doing <code>p...[str('pushEnd')]</code> is not the right thing at all; it's not the key, "pushEnd", that is the problem, and anyway that's already a string; it's the value, ie the <em>result</em> of that lookup, that is an int. So you could do <code>str(p....['pushEnd'])</code>, but as I say using interpolation is better.)</p>
</div>
<span class="comment-copy"><i>Why</i> are you using Decimal to parse ints and floats? What's wrong with the defaults? And you must show the full traceback of your errors.</span>
<span class="comment-copy">I tried the defaults first... that did not work so i tried using decimal as specified in the Python Documentation <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">docs.python.org/3/library/json.html</a>.. Selenium was just the source of the data</span>
<span class="comment-copy">I wish to get all values, some are decimals and some are integers.  The Python documentation suggested that so i tried.. Obviously that was not the problem but i mentioned it as i tried it.. thanks for your answer. Yes  its in the traceback.. yes i feel dumb :)</span>
