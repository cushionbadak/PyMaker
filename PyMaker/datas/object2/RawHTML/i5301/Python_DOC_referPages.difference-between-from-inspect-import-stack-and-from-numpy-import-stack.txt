<div class="post-text" itemprop="text">
<p>While implementing stack I get two import option and I was unable to get what is the difference between them?</p>
<pre><code>from inspect import stack
s = stack()

l = [1, 2, 3, 45, 5]
sum = 0
for i in l:
    s.append(i)
    sum = sum + i

avg = sum / len(s)
s.append(avg)
for i in s:
    print(i)
</code></pre>
<p>Getting output:</p>
<pre><code>FrameInfo(frame=&lt;frame object at 0x7fb51436d828&gt;, filename='/home/alok/PycharmProjects/New/StackImp.py', lineno=2, function='&lt;module&gt;', code_context=['s = stack()\n'], index=0)
1
2
3
45
5
9.333333333333334
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>TL;DR</strong>: They have nothing in common.</p>
<h3><a href="https://docs.scipy.org/doc/numpy-1.12.0/reference/generated/numpy.stack.html" rel="nofollow noreferrer">numpy.stack</a>:</h3>
<p>A function that <em>stacks</em> one array on top of another.</p>
<h3><a href="https://docs.python.org/2/library/inspect.html#inspect.stack" rel="nofollow noreferrer">inspect.stack</a>:</h3>
<p>A function that gives you access to the <em>call stack</em> of the function being executed.</p>
<h3><a href="https://docs.python.org/3/tutorial/datastructures.html#using-lists-as-stacks" rel="nofollow noreferrer">Actual stack data structure</a>:</h3>
<p>In python, you can use a list as a stack (as shown in the linked document) by using <code>list.append()</code> and <code>list.pop()</code> methods of the <code>list</code> type.</p>
<p><strong>Recapping</strong>: These three things have nothing in common, they apply to entirely different use-cases.</p>
</div>
<span class="comment-copy">Read <a href="https://docs.python.org/3.5/library/inspect.html#inspect.stack" rel="nofollow noreferrer">the docs</a>. And <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.stack.html" rel="nofollow noreferrer">these</a>. Hint: You don't want to use either one of those functions.</span>
