<div class="post-text" itemprop="text">
<p>I want to create a script that'd work as a basic graphic interface for postgres database. I'm using psycopg2 library. I have a problem with a function that'd create tables.</p>
<p>So far I have a function:</p>
<pre><code>def create_table(dbname,user,password,table_name,column_name,column_type,constraint):
   conn = connect(dbname, user, password)
   cur = conn.cursor()
   cur.execute("""CREATE TABLE %s(%s %s %s)""" % (table_name,column_name,column_type,constraint))
</code></pre>
<p>And I'm able to create a table with one column. I'd like to be able to create a table with as many columns as the user wants to ("table_name","column"name","column_type","constraint" are taken from the keyboard). I don't know how to construct such function, though. I predict it needs some kind of a loop.</p>
<p>To clarify, I want something like that:</p>
<p>in the command line it should print:</p>
<p>table name: (user writes, name is given)</p>
<p>column name:</p>
<p>column type:</p>
<p>constraint:</p>
<p><strong>It's already working in my script</strong></p>
<p>But then, I'd like to have just:</p>
<p>column name (again):</p>
<p>column type (again):</p>
<p>constraint (again):</p>
<p>So more columns could be added.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could create a loop that asks the user whether to continue each time, where in each iteration, information for a new column, i.e. the column name, type and constraint, is appended to a list of columns.</p>
<p>After the user chooses to stop adding columns, you have to construct your query. Possibly with, in the new <a href="https://docs.python.org/3.4/library/string.html#formatstrings" rel="nofollow noreferrer">format string</a> syntax, <code>'CREATE TABLE {} ({})'.format(table_name, columns)</code>. I'm not going to spell out in code how to construct <code>columns</code>, but you could first create a string for each column, again using string formatting, and then <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">join</a> them with commas. In the end, <code>columns</code> should look something like this: "customer_id INTEGER UNIQUE, customer_name VARCHAR(50), phone CHAR(8)".</p>
<p>There are probably less error-prone ways to accomplish this. You could check that each type and constraint, for instance, is valid.</p>
</div>
<span class="comment-copy">You need <code>for</code> or <code>while</code> - these are pretty simple python concepts, so I'd suggest reading up on them and coming back if you get stuck.</span>
