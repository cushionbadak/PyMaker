<div class="post-text" itemprop="text">
<p>Im a beginner in python and Im doing a example that needs to use functions with arguments. </p>
<p>I  want to create a functin "findElement" that receives an element and a tuple and return a list with the indexes of the positions that the element is in the tuple. For this Im trying to create a function like:</p>
<pre><code> def findElement(elm=1, tup1= (1,2,3,4,1)):

   for i in tup1:
    if i == elm:
        print(i)
</code></pre>
<p>The "1" is the element and (1,2,3,4,1) is the tuple but is appearing a error. Do you know why?</p>
</div>
<div class="post-text" itemprop="text">
<p>A few methods are below, in my order of preference. The second uses a <a href="https://docs.python.org/3/howto/functional.html#generators" rel="nofollow noreferrer">generator</a>.</p>
<p>List comprehension:</p>
<pre><code>tup = (1, 2, 3, 4, 1)

[x for x in range(len(tup)) if tup[x]==1]  # [0, 4]
</code></pre>
<p>Functional method with generator:</p>
<pre><code>def findel(el, tup):
    for i in range(len(tup)):
        if tup[i] == el:
            yield i

list(findel(1, (1, 2, 3, 4, 1)))  # [0, 4]
</code></pre>
<p>Functional method without generator:</p>
<pre><code>def findel(el, tup):
    result = []
    for i in range(len(tup)):
        if tup[i] == el:
            result.append(i)
    return result

findel(1, (1, 2, 3, 4, 1))  # [0, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would use <code>for i in range(len(tup1)):</code> in order to get the index of the currently read element.</p>
<pre><code>def findElement(elm=1, tup1=(1,2,3,4,1)):
   """
   Return the indexes where the element is present
   """

   # We initiate the variable that will contain the list of index
   result = [] 

   # i will give us here the index of currently read element (tup1)
   for i in range(len(tup1)):
      if tup1[i] == elm:
          result.append(i)

   return result
</code></pre>
</div>
<span class="comment-copy">What does the error say?</span>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation.  <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a> applies here.  We cannot effectively help you until you post your MCVE code and accurately describe the problem. We should be able to paste your posted code into a text file and reproduce the problem you described. The code you posted defines a function and finishes without error.  I supplied a trivial main program, and it runs nicely to  completion -- giving the wrong answer per your logic, but it completes.</span>
<span class="comment-copy">Thanks, but how to put the element and the tuple as arguments? That part is not working.</span>
<span class="comment-copy">@johnkw please see update</span>
<span class="comment-copy">Thanks, do you know if with that method is possible to ask the element and the tuple to the user as arguments?</span>
<span class="comment-copy">Like this is not working: def findel(el, tup):     result = []     for i in range(len(tup)):         if tup[i] == el:             result.append(i)     return result    if <b>name</b> == '<b>main</b>':     elm = input("Enter an element:")     tuple = input("Enter a tuple:1")     findel(elm,tuple)</span>
<span class="comment-copy">@johnkw, i'm afraid i can't read your unformatted code here. can you ask as a separate question, or add to existing question?</span>
