<div class="post-text" itemprop="text">
<p>I have <code>myprj</code> project, and files are as below.</p>
<pre><code>$ tree myprj/
myprj/
├── prj
│   ├── __init__.py
│   ├── config.py
│   ├── my_logger.py
│   ├── my_module.py
│   └── tests
│       ├── __init__.py
│       ├── conftest.py
│       └── unit
│           ├── __init__.py
│           └── test_my_module.py
├── setup.py
└── tox.ini
</code></pre>
<p><strong>config.py</strong></p>
<pre><code>LOG_FILE='/path/exists/on/production/prj.log'
</code></pre>
<p><strong>my_logger.py</strong></p>
<pre><code>from prj import config
import logging

class MyLogger():
    def __init__(self):
        self.setup_logger()

    def setup_logger(self):
        logFilename = config.LOG_FILE

        file_hdlr = logging.FileHandler(logFilename)
</code></pre>
<p><strong>my_module.py</strong></p>
<pre><code>from prj import my_logger

myLogger = my_logger.MyLogger()


def my_method():
    return 1
</code></pre>
<p><strong>test_my_module.py</strong></p>
<pre><code>from prj import my_module

def test_my_method():
    assert 1 == my_module.my_method()
</code></pre>
<p><strong>setup.py</strong></p>
<pre><code>from setuptools import setup

setup(name="Tox Testing")
</code></pre>
<p><strong>tox.ini</strong></p>
<pre><code>[tox]
envlist = py35

[testenv]
deps=pytest
commands=py.test
</code></pre>
<p>When I run <code>tox</code> it fails with <code>path not exists</code> for log file.</p>
<pre><code>GLOB sdist-make: /private/tmp/myprj/setup.py
py35 inst-nodeps: /private/tmp/myprj/.tox/dist/Tox Testing-0.0.0.zip
py35 installed: attrs==17.4.0,pluggy==0.6.0,py==1.5.2,pytest==3.3.2,six==1.11.0,Tox-Testing==0.0.0
py35 runtests: PYTHONHASHSEED='2231398989'
py35 runtests: commands[0] | py.test
========================================================================================================= test session starts =========================================================================================================
platform darwin -- Python 3.5.2, pytest-3.3.2, py-1.5.2, pluggy-0.6.0
rootdir: /private/tmp/myprj, inifile:
collected 0 items / 1 errors

=============================================================================================================== ERRORS ================================================================================================================
__________________________________________________________________________________________ ERROR collecting prj/tests/unit/test_my_module.py __________________________________________________________________________________________
prj/tests/unit/test_my_module.py:1: in &lt;module&gt;
    from prj import my_module
prj/my_module.py:3: in &lt;module&gt;
    myLogger = my_logger.MyLogger()
prj/my_logger.py:6: in __init__
    self.setup_logger()
prj/my_logger.py:11: in setup_logger
    file_hdlr = logging.FileHandler(logFilename)
/Users/nile2691/.pyenv/versions/3.5.2/lib/python3.5/logging/__init__.py:1008: in __init__
    StreamHandler.__init__(self, self._open())
/Users/nile2691/.pyenv/versions/3.5.2/lib/python3.5/logging/__init__.py:1037: in _open
    return open(self.baseFilename, self.mode, encoding=self.encoding)
E   FileNotFoundError: [Errno 2] No such file or directory: '/path/exists/on/production/prj.log'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
======================================================================================================= 1 error in 0.36 seconds =======================================================================================================
ERROR: InvocationError: '/private/tmp/myprj/.tox/py35/bin/py.test'
_______________________________________________________________________________________________________________ summary _______________________________________________________________________________________________________________
ERROR:   py35: commands failed
</code></pre>
<p>I get that, log file path is not exists in my local system, and it gives error.</p>
<p>I tried to set the <code>LOG_FILE</code> variable in <code>config.py</code> using <code>conftest.py</code> fixture.</p>
<p><strong>conftest.py</strong></p>
<pre><code>import pytest
from prj import config


@pytest.fixture(scope="session", autouse=True)
def set_config():
    config.LOG_FILE = '/tmp/prj.log'
</code></pre>
<p>But still it return same error. If I am able to invoke something before start the test execution, like, <code>py.test</code>'s first execution step, then I can set the <code>LOG_FILE</code> and it would not raise error.</p>
</div>
<div class="post-text" itemprop="text">
<p>In the global scope of <code>my_module.py</code>, you create an instance <code>my_logger.MyLogger()</code> and in <code>MyLogger.__init__</code> logging handlers are set up.  </p>
<p><strong>Your problem is the anti-pattern of setting up logging handlers at import time</strong>.  Don't do that.  </p>
<p>For apps, logging handlers should be configured at runtime (done by <code>main()</code> or whatever).  For libraries, logging handlers should not be configured at all (with the exception of <a href="https://docs.python.org/3/howto/logging.html#configuring-logging-for-a-library" rel="nofollow noreferrer">possibly adding a <code>NullHandler</code></a>) - it is up to the user of your library to decide how they want handlers configured.  </p>
<p>Note that pytest does not require logging handlers in order to test the records logged.</p>
</div>
<span class="comment-copy">Thanks wim, I get it at first time, that setting <code>MyLogger</code> is issue, but I cant change it easily, I have plan to change that, but before that, I have make my test running. Is there any way to do this ?</span>
<span class="comment-copy">No, there is no good way to do it, because the damage has already been done by the time your code is imported (the line <code>from prj import config</code> in <code>conftest.py</code> has configured already, so it's too late for the <code>set_config</code> fixture to change anything).  It's necessary to refactor how you setup the logging.</span>
