<div class="post-text" itemprop="text">
<p>Python code for Data Aqusition using NI-DAQ. 
Had downloaded NI-driver</p>
<h1>Error</h1>
<pre><code>Traceback (most recent call last):
    File "C:\Users\icon\Desktop\DAQ 1.0.py", line 68, in &lt;module&gt;
     chan = ctypes.create_string_buffer('Dev1/ai0')
    File "C:\Python34\lib\ctypes\__init__.py", line 63, in 
create_string_buffer
     raise TypeError(init)
    TypeError: Dev1/ai0
</code></pre>
<h1>I am a student. I was trying to code a program in Python to acquire data from NI-DAQ it raised the above error.</h1>
<h1>this is the code</h1>
<h1>imported all libraries required</h1>
<pre><code>nidaq = ctypes.windll.nicaiu  
int32 = ctypes.c_long
uInt32 = ctypes.c_ulong
uInt64 = ctypes.c_ulonglong
float64 = ctypes.c_double
TaskHandle = uInt32
written = int32()
pointsRead = uInt32()    
DAQmx_Val_Volts = 10348
DAQmx_Val_Rising = 10280
DAQmx_Val_Cfg_Default = int32(-1)
DAQmx_Val_ContSamps = 10123
DAQmx_Val_ChanForAllLines = 1
DAQmx_Val_RSE = 10083
DAQmx_Val_Volts = 10348
DAQmx_Val_GroupByScanNumber = 1
DAQmx_Val_FiniteSamps = 10178
DAQmx_Val_GroupByChannel = 0
taskHandle = TaskHandle(0)
min1 = float64(-10.0) 
max1 = float64(10.0)
timeout = float64(10.0)
bufferSize = uInt32(10)
pointsToRead = bufferSize
pointsRead = uInt32()
sampleRate = float64(200.0)
samplesPerChan = uInt64(100)
#specifiy the channels
chan = ctypes.create_string_buffer('Dev1/ai0')
clockSource = ctypes.create_string_buffer('OnboardClock')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="https://docs.python.org/3/library/ctypes.html#ctypes.create_string_buffer" rel="nofollow noreferrer">[Python]: ctypes.<strong>create_string_buffer</strong>(<em>init_or_size, size=None</em>)</a>:</p>
<blockquote>
<p><em>init_or_size</em> must be an <strong>integer</strong> which specifies the size of the array, or a <strong>bytes object</strong> which will be used to initialize the array items.</p>
</blockquote>
<p>So, for your case, the simplest way to bypass <strong>this</strong> error would be to pass the <code>bytes</code> object to <code>create_string_buffer</code>. Note that passing a string doesn't work in <em>Python3</em>, because the "<em>string</em>" semantics have changed from <em>Python2</em> (where it works).</p>
<p><strong>Example</strong>:</p>
<blockquote>
<pre><code>&gt;&gt;&gt; import sys, ctypes
&gt;&gt;&gt; print("Python {:s} on {:s}".format(sys.version, sys.platform))
Python 3.4.4 (v3.4.4:737efcadf5a6, Dec 20 2015, 20:20:57) [MSC v.1600 64 bit (AMD64)] on win32
&gt;&gt;&gt; device_str = "Dev1/ai0"
&gt;&gt;&gt;
&gt;&gt;&gt; chan = ctypes.create_string_buffer(device_str)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "c:\Install\x64\Python\Python\3.4\Lib\ctypes\__init__.py", line 63, in create_string_buffer
    raise TypeError(init)
TypeError: Dev1/ai0
&gt;&gt;&gt;
&gt;&gt;&gt; device_bytes = b"Dev1/ai0"  # Use bytes literal directly
&gt;&gt;&gt; chan = ctypes.create_string_buffer(device_bytes)
&gt;&gt;&gt; chan, chan.value
(&lt;ctypes.c_char_Array_9 object at 0x00000000058E0DC8&gt;, b'Dev1/ai0')
&gt;&gt;&gt;
&gt;&gt;&gt; chan = ctypes.create_string_buffer(device_str.encode())  # Use string's encode to convert it to bytes
&gt;&gt;&gt; chan, chan.value
(&lt;ctypes.c_char_Array_9 object at 0x00000000058E0E48&gt;, b'Dev1/ai0')
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Please read the <a href="/help/how-to-ask">how to ask</a> section and provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> of your code.</span>
<span class="comment-copy">@Idlehands plese answer this</span>
<span class="comment-copy">thanks Cristi . it workrd</span>
<span class="comment-copy">Please, mark it as an answer, then.</span>
<span class="comment-copy">I have another problem can you help me?</span>
<span class="comment-copy">ctypes.ArgumentError: argument 2: &lt;class 'TypeError'&gt;: Don't know how to convert parameter 2</span>
<span class="comment-copy">Technically, that would qualify for another question. But either way, without the line(s) of code that generates the error it's hard to figure out. Anyway, when adding info please edit the question instead of posting comments.</span>
