<div class="post-text" itemprop="text">
<p>Let's say I have a string</p>
<pre><code>s = 'ab@cD!.2e.cp'
</code></pre>
<p>I want to extract only <code>ab@cD!.2e</code> out of it. I am trying this:</p>
<pre><code>print(re.search(r'^(.*?)\.cp',s).group())
</code></pre>
<p>But still getting the output as <code>ab@cD!.2e.cp</code>. Can someone please tell me where I am doing it wrong and what should be the correct <code>regex</code> for this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of <code>re.search</code>, use <code>re.findall</code>:</p>
<pre><code>import re
s = 'ab@cD!.2e.cp'
print(re.findall(r'^(.*?)\.cp',s)[0])
</code></pre>
<p>Output:</p>
<pre><code>ab@cD!.2e
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You probably meant to add 1 as parameter to group:</p>
<pre><code>import re
s = 'ab@cD!.2e.cp'
re.search(r'^(.*?)\.cp',s).group()      # 'ab@cD!.2e.cp'
re.search(r'^(.*?)\.cp',s).group(0)     # 'ab@cD!.2e.cp'
re.search(r'^(.*?)\.cp',s).group(1)     # 'ab@cD!.2e'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If it is really just about extracting everything before a certain string - as your title suggests - you don't need a regex at all but a simple <code>split</code> will do:</p>
<pre><code>res = s.split('.cp')[0]
</code></pre>
<p>yields</p>
<pre><code>'ab@cD!.2e'
</code></pre>
<p>Please be aware that this will return the original string if <code>.cp</code> was not found:</p>
<pre><code>s = 'foo'
s.split('.cp')[0]
</code></pre>
<p>will return</p>
<pre><code>'foo'
</code></pre>
</div>
<span class="comment-copy">Why not just <code>s.split('.cp')[0]</code>?</span>
<span class="comment-copy">or just <code>s.rstrip('.cp')</code></span>
<span class="comment-copy">@Idlehands Try that with <code>s = 'desktop.pc'</code>.</span>
<span class="comment-copy">@StefanPochmann interesting, didn't know that <a href="https://docs.python.org/3/library/stdtypes.html?highlight=rstrip#str.rstrip" rel="nofollow noreferrer"><code>strip()</code> functions</a> remove <i>all combinations</i> of the chars.  Was wondering why it would return 'deskto'.  Thanks for enlightening me!</span>
<span class="comment-copy">Yes that's working. Can you tell me why <code>re.search</code> was not working?</span>
<span class="comment-copy">@PushanSharma <code>re.findall</code> will extract the exact groups found in the string (<code>(.*?)</code>) bounded by the non-group regex. <code>re.search</code>, however, scan and find the first location of a match, and return the match object. See seb's answer above for proper use of <code>re.search</code> in this case.</span>
<span class="comment-copy">@StefanPochmann: Could you elaborate on why this is an inappropriate tool and what the appropriate would be?</span>
<span class="comment-copy">It might be worth mentioning that this throws an <code>IndexError</code> if the string was not found.</span>
<span class="comment-copy">It might be worth mentioning that this throws an <code>AttributeError</code> if the string was not found.</span>
<span class="comment-copy">That's what I was doing wrong!! Ishould have used <code>.group(1)</code>..</span>
