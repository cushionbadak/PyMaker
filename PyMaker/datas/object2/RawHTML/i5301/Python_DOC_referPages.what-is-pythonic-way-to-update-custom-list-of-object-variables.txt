<div class="post-text" itemprop="text">
<p>Cannot clearly understand right way to create CRUD interface for entity.<br/>
For example: 
I've got entity <code>Event</code> with variables <code>date</code>, <code>place</code> and <code>name</code>.
I've got basic constructor for this entity with default (nullablle) values. </p>
<pre><code>class Event:
    def __init__(self, date=None, name=None, place=None):
        self.date = date
        self.name = name
        self.place = place
</code></pre>
<p>Trying to figure out pythonic way to create update handler for this entity, which allows me to update custom number of entity fields (<em>for example: update name and place, without specifying date</em>). </p>
<p>How I see this:<br/>
Use list of custom attributes in update method like <code>update_event(**kwargs)</code>, then parse <code>**kwargs</code> list and match them with entity using <code>.hasattr()</code> or <code>.getattr()</code> functions.<br/>
Its seems working (and able to find actual diff between entities, which is useful too), but looking pretty harsh.<br/>
Basic version with setting all values from kwargs looks like this:</p>
<pre><code>def update_event(self, **kwargs):
    for key, value in kwargs.items():
        self.__setattr__(key, value)
    return self
</code></pre>
<p>If we need to check if for diff, we already got: </p>
<pre><code>def update_event(self, **kwargs):
    for key, value in kwargs.items():
        if self.__getattribute__(key) != value:
            # We got diff
            self.__setattr__(key, value)
        else:
            # We got same value stored already
    return self 
</code></pre>
<p>Maybe im missing something and there are more elegant and simple solutions to this problem, or some design patterns to look for? </p>
<p>Tnx for answers and sorry for dummy questions. </p>
<p><strong>UPD</strong>: One more point I see: simple <code>__setattr__</code> doesn't check that such variable exists. So, if <code>**kwargs</code> contains invalid argument name I get Attribute Error.<br/>
The obvious fix for that is to create check for <code>.hasattr()</code> but as I see it will return False if variable declared but has <code>None</code> value.</p>
</div>
<div class="post-text" itemprop="text">
<p>To check that you are only overwriting existing attributes:</p>
<pre><code>def update_event(self, **kwargs):
    for key, value in kwargs.items():
        if hasattr(self, key):
            setattr(self, key, value)
    return self

def __repr__(self):
    return 'Event: ' + str(self.date)

f=Event()
print(f)
f.update_event(date=1)
print(f)
</code></pre>
<p>Output:</p>
<pre><code>Event: None
Event: 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>View this documentation <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer">link</a>
try to use it this way, I may be wrong, but I think it's better.</p>
<pre><code>def update_event(self, **kwargs):
    for key, value in kwargs.items():
        setattr(self, key, value)
    return self
</code></pre>
</div>
<span class="comment-copy">Please show your code for: <i>Its seems working (and able to find actual diff between entities, which is useful too), but looking pretty harsh.</i>.</span>
<span class="comment-copy">Perhaps you could update your question with an attempt at this <code>update_event()</code> method, using <code>.hasattr()</code> etc.</span>
<span class="comment-copy">Tnx for feedback, guys. Added <code>update_event() </code> code to the topic.</span>
<span class="comment-copy">How general of an answer are you looking for? Should it work with any class? Or do you want something that will work only with <code>Event</code>.</span>
<span class="comment-copy">I want use it to specific entity\model (Event for example), but if it possible to create something more universal - it will be fine :D</span>
<span class="comment-copy">Thanks, i ve generally came to same code while writing this post.  Is far i can see, it doesnt work if variable declared but doesnt has value (setted to <code>None</code>).</span>
<span class="comment-copy">Hmm, works for me. See update.</span>
<span class="comment-copy">Sorry, thats my bad, i was using <code>.__getattr__</code> instead <code>hasattr()</code>, and its expectedly return None.</span>
