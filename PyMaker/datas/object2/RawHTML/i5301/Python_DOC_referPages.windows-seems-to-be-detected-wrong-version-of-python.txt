<div class="post-text" itemprop="text">
<p>So I think there is a problem with my system not identifying python3 correctly. I am using windows 10 and the Bash on Ubuntu on Windows Terminal. My program is trying to run parallel processes and when I use: </p>
<pre><code>closeInput = input("Press ENTER to exit.")
</code></pre>
<p>my terminal responses with: </p>
<pre><code>File "string&gt;", line 0

SyntaxError: unexpected EOF while parsing 
</code></pre>
<p>I call the program on my terminal using:</p>
<pre><code>python3 calling_process.py
</code></pre>
<p>So I know Python 2.7 uses <code>raw_input()</code> and that was done away with in python3+ which now uses <code>input()</code>. But I wanted to test some stuff out, so I replaced     <code>input()</code> with <code>raw_input</code> as follows:</p>
<pre><code>closeInput = raw_input("Press ENTER to exit.")
</code></pre>
<p>and used the same command:</p>
<pre><code>python3 calling_process.py
</code></pre>
<p>And it worked with no error. Can anyone provide any insight why this may be happening although I am explicitly using <code>python3</code> in my command line? </p>
<p>! side note when I type in  <code>python3 --version</code> it returns <code>version 3.5.2</code></p>
<p>I have included a screenshot of my <a href="https://i.stack.imgur.com/V9MuM.jpg" rel="nofollow noreferrer">terminal window</a>.</p>
<p><a href="https://i.stack.imgur.com/6nPth.jpg" rel="nofollow noreferrer">calling_process.py</a></p>
<p><a href="https://i.stack.imgur.com/ZATbR.jpg" rel="nofollow noreferrer">called_pocess.py</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like for whatever reason your script is only getting run with python 2, not python 3. <code>raw_input</code> doesn't even <em>exist</em> in python 3 - you should see a <code>NameError</code> if you try to use it:</p>
<pre><code>Python 3.5.3 (default, Jul 16 2017, 23:50:50)
[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; t = raw_input()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'raw_input' is not defined
</code></pre>
<p>But <code>input</code> in python 2 can produce exactly the error you get:</p>
<pre><code>Python 2.7.13 (default, May  9 2017, 12:06:13)
[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; t = input()

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;string&gt;", line 0

    ^
SyntaxError: unexpected EOF while parsing
</code></pre>
<p>That's because in python 2, <code>input</code> attempts to parse what you type in - and if you type nothing, well, it raises this <code>SyntaxError</code>. The reason that's happening is that you can't read from stdin from a process spawned by multiprocessing. This is to prevent subprocesses from stealing input from your main process.</p>
<p>The reason you're getting python 2 instead of python 3 is the way you're calling your subprocess:</p>
<pre><code>program = "python"
arguments = ["called_process.py"]
os.execvp(program, (program,) + tuple(arguments))
</code></pre>
<p>You're execing <code>python</code>, not <code>python3</code>! This means you'll get the default python, which must be python 2. If you change this to <code>program = "python3"</code>, this will get you past your error.</p>
</div>
<span class="comment-copy">are you missing some closing parentheses somewhere. How are you using this closeInput. This is from PEP31111: <code>raw_input()</code> was renamed to <code>input()</code>. That is, the new <code>input()</code> function reads a line from <code>sys.stdin</code> and returns it with the trailing newline stripped. It raises <code>EOFError</code> if the input is terminated prematurely. To get the old behavior of <code>input()</code>, use <code>eval(input())</code>. Link: <a href="https://docs.python.org/3/whatsnew/3.0.html" rel="nofollow noreferrer">docs.python.org/3/whatsnew/3.0.html</a></span>
<span class="comment-copy">Yes i am aware. i am more asking the question about why my system is reverting back to an older version of python although i am explicitly calling python3 in my terminal.</span>
<span class="comment-copy">Ah, I see maybe I didn't read your post correctly at first, so - I'm pretty sure you're right that you're getting python 2 instead of python 3. What we need to know is why! Exactly how are you starting the subprocess?</span>
<span class="comment-copy">Yes! I included the two new screenshots but im unsure why my system is converting back to python2 when im explicitly writing out python3. in the terminal screenshot, it shows from the moment i open up my terminal until execution of my program!</span>
<span class="comment-copy">I see the problem now - I've edited the answer to reflect it. (Last paragraph)</span>
<span class="comment-copy">As a side note - if you're trying to run parallel processes, I think you'll want the multiprocessing module rather than the various <code>os.exec...</code> functions - they all replace the current running process rather than creating a new process. They also fork the current process, so there's no question of getting different versions of python mixed up.</span>
<span class="comment-copy">Thank you so much! That worked. I will look into the multiprocessing module!</span>
