<div class="post-text" itemprop="text">
<p>If I have python code that requires indenting (<code>for</code>, <code>with</code>, function, etc), will a single line comment end potentially the context of the construct if I place it incorrectly? For example, presuming <code>step1</code>, <code>step2</code> and <code>step3</code> are functions already defined, will:</p>
<pre><code>def myFunc():
    step1()
#   step2()
    step3()
</code></pre>
<p>(unintentionally) reduce the scope of <code>myFunc()</code> so that it only contains <code>step1</code>? If I only want to remove <code>step2</code> from the 3-step sequence, must I place the <code>#</code> at the same level of indentation as the statements within the scope of the construct? All the code I have seen so far suggests this is a requirement, but it might just be a coding habit.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try it out:</p>
<pre><code>def myFunc():
    print(1)
#   print(2)
    print(3)
myFunc()
</code></pre>
<p>which outputs:</p>
<pre><code>1
3
</code></pre>
<p>So yeah, the answer is "Line comments don't need to match indentation". That said, <a href="https://www.python.org/dev/peps/pep-0008/#block-comments" rel="nofollow noreferrer">PEP8 really prefers that they do, just for readability</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Syntax-wise, blank lines are ignored. Blank lines include lines that have any amount of white space followed by a comment. 
<a href="https://docs.python.org/2/reference/lexical_analysis.html#blank-lines" rel="nofollow noreferrer">https://docs.python.org/2/reference/lexical_analysis.html#blank-lines</a>
Indenting a comment the way you show in your example does not change the block of code included in your function.</p>
<p>Convention-wise, PEP8 calls for comments indented to the same indentation as code.</p>
</div>
<div class="post-text" itemprop="text">
<p>It doesn't really matter where you place the <code>#</code></p>
<p>Either in the first identation level or close to the instruction, everything underneath it is going to be executed.</p>
<p>I suggest you to play with the code below and You'll figure it out yourself. </p>
<pre><code>a = 1
b = 10
c = 100
d = 1000

if (a == 1):
    result = a+b
#   result = result + c
    result = result + d

    print(result)
</code></pre>
</div>
<span class="comment-copy">As per <a href="https://www.python.org/dev/peps/pep-0008/#block-comments" rel="nofollow noreferrer">pep-8 block comments</a>: "indented to the same level as that code". You should probably enable Anaconda -&gt; pep8</span>
<span class="comment-copy">Have you considered testing this?</span>
<span class="comment-copy">Of course. But I would not have received the insights about PEP8 and other contributions below. And people like me would not have had the first (or second) clue to find that inside half an hour.</span>
<span class="comment-copy">The 2.0 reference docs are a tad out of date; they apply here, but I'd never trust them to apply reliably to 2.7 code (which has changed in small ways repeatedly). <a href="https://docs.python.org/2/reference/lexical_analysis.html#blank-lines" rel="nofollow noreferrer">The modern 2.x docs</a> are probably a better resource, if not <a href="https://docs.python.org/3/reference/lexical_analysis.html#blank-lines" rel="nofollow noreferrer">the 3.x docs</a>.</span>
<span class="comment-copy">@ShadowRanger Thanks! I edited the link to point to the more current docs.</span>
