<div class="post-text" itemprop="text">
<p>I have a text file with all of them currently having the same end character (N), which is being used to identify progress the system makes. I want to change the end character to "Y" in case the program ends via an error or other interruptions so that upon restarting the program will search until a line has the end character "N" and begin working from there. Below is my code as well as a sample from the text file.</p>
<p>UPDATED CODE:</p>
<pre><code>def GeoCode():
    f = open("geocodeLongLat.txt", "a")
    with open("CstoGC.txt",'r') as file:
        print("Geocoding...")
        new_lines = []
        for line in file.readlines():
            check = line.split('~')
            print(check)
            if 'N' in check[-1]:
                geolocator = Nominatim()
                dot_number, entry_name, PHY_STREET,PHY_CITY,PHY_STATE,PHY_ZIP = check[0],check[1],check[2],check[3],check[4],check[5] 
                address = PHY_STREET + " " + PHY_CITY + " " + PHY_STATE + " " + PHY_ZIP
                f.write(dot_number + '\n')
                try:
                    location = geolocator.geocode(address)
                    f.write(dot_number + "," + entry_name + "," + str(location.longitude) + "," + str(location.latitude) + "\n")
                except AttributeError:
                    try:
                        address = PHY_CITY + " " + PHY_STATE + " " + PHY_ZIP
                        location = geolocator.geocode(address)
                        f.write(dot_number + "," + entry_name + "," + str(location.longitude) + "," + str(location.latitude) + "\n")
                    except AttributeError:
                        print("Cannot Geocode")
            check[-1] = check[-1].replace('N','Y')
        new_lines.append('~'.join(check))

    with open('CstoGC.txt','r+') as file: # IMPORTANT to open as 'r+' mode as 'w/w+' will truncate your file!
        for line in new_lines:
            file.writelines(line)        

    f.close()
</code></pre>
<p>Output:</p>
<pre><code>2967377~DARIN COLE~22112 TWP RD 209~ALVADA~OH~44802~Y
WAY 64 SUITE 100~EADS~TN~38028~N
384767~MILLER FARMS TRANS LLC~1103 COURT ST~BEDFORD~IA~50833~N
986150~R G S TRUCKING LTD~1765 LOMBARDIE DRIVE~QUESNEL~BC~V2J 4A8~N
1012987~DONALD LARRY KIVETT~4509 LANSBURY RD~GREENSBORO~NC~27406-4509~N
735308~ALZEY EXPRESS INC~2244  SOUTH GREEN STREET~HENDERSON~KY~42420~N
870337~RIES FARMS~1613 255TH AVENUE~EARLVILLE~IA~52057~N
148428~P R MASON &amp; SON LLC~HWY 70 EAST~WILLISTON~NC~28589~N
220940~TEXAS MOVING CO INC~908 N BOWSER RD~RICHARDSON~TX~75081-2869~N
854042~ARMANDO ORTEGA~6590 CHERIMOYA AVENUE~FONTANA~CA~92337~N
940587~DIAMOND A TRUCKING INC~192285 E COUNTY ROAD 55~HARMON~OK~73832~N
1032455~INTEGRITY EXPRESS LLC~380 OLMSTEAD AVENUE~DEPEW~NY~14043~N
889931~DUNSON INC~33 CR 3581~FLORA VISTA~NM~87415~N
143608~LARRY A PETERSON &amp; DONNA M PETERSON~W6359 450TH AVE~ELLSWORTH~WI~54011~N
635528~JAMES E WEBB~3926 GREEN ROAD~SPRINGFIELD~TN~37172~N
805496~WAYNE MLADY~22272 135TH ST~CRESCO~IA~52136~N
704996~SAVINA C MUNIZ~814 W LA QUINTA DR~PHARR~TX~78577~N
893169~BINDEWALD MAINTENANCE INC~213 CAMDEN DR~SLIDELL~LA~70459~N
948130~LOGISTICIZE LTD~861 E PERRY ST~PAULDING~OH~45879~N
438760~SMOOTH OPERATORS INC~W8861 CREEK ROAD~DARIEN~WI~53114~N
518872~A B C RELOCATION SERVICES INC~12 BOCKES ROAD~HUDSON~NH~03051~N
576143~E B D ENTERPRISES INC~29 ROY ROCHE DRIVE~WINNIPEG~MB~R3C 2E6~N
968264~BRIAN REDDEMANN~706 WESTGOR STREET~STORDEN~MN~56174-0220~N
721468~QUALITY LOGISTICS INC~645 LEONARD RD~DUNCAN~SC~29334~N
</code></pre>
<p>As you can see I am already keeping track of which line I am at just by using x. Should I use something like file.readlines()?</p>
<p>Sample of text document:</p>
<pre><code>570772~CORPORATE BANK TRANSIT OF KENTUCKY INC~3157 HIGHWAY 64 SUITE 100~EADS~TN~38028~N
384767~MILLER FARMS TRANS LLC~1103 COURT ST~BEDFORD~IA~50833~N
986150~R G S TRUCKING LTD~1765 LOMBARDIE DRIVE~QUESNEL~BC~V2J 4A8~N
1012987~DONALD LARRY KIVETT~4509 LANSBURY RD~GREENSBORO~NC~27406-4509~N
735308~ALZEY EXPRESS INC~2244  SOUTH GREEN STREET~HENDERSON~KY~42420~N
870337~RIES FARMS~1613 255TH AVENUE~EARLVILLE~IA~52057~N
148428~P R MASON &amp; SON LLC~HWY 70 EAST~WILLISTON~NC~28589~N
220940~TEXAS MOVING CO INC~908 N BOWSER RD~RICHARDSON~TX~75081-2869~N
854042~ARMANDO ORTEGA~6590 CHERIMOYA AVENUE~FONTANA~CA~92337~N
940587~DIAMOND A TRUCKING INC~192285 E COUNTY ROAD 55~HARMON~OK~73832~N
1032455~INTEGRITY EXPRESS LLC~380 OLMSTEAD AVENUE~DEPEW~NY~14043~N
889931~DUNSON INC~33 CR 3581~FLORA VISTA~NM~87415~N
</code></pre>
<p>Thank you!</p>
<p>Edit: updated code thanks to @idlehands</p>
</div>
<div class="post-text" itemprop="text">
<p>There are a few ways to do this.</p>
<h1>Option #1</h1>
<p>My original thought was to use the <code>tell()</code> and <code>seek()</code> method to go back a few steps but it quickly shows that you cannot do this conveniently when you're not opening the file in <code>bytes</code> and definitely not in a <code>for</code> loop of <code>readlines()</code>.  You can see the reference threads here:</p>
<p><a href="https://stackoverflow.com/questions/5453267/is-it-possible-to-modify-lines-in-a-file-in-place">Is it possible to modify lines in a file in-place?</a><br/>
<a href="https://stackoverflow.com/questions/29618936/how-to-solve-oserror-telling-position-disabled-by-next-call">How to solve "OSError: telling position disabled by next() call"</a></p>
<p>The investigation led to this piece of code:</p>
<pre><code>with open('file.txt','rb+') as file:
    line = file.readline() # initiate the loop
    while line: # continue while line is not None
        print(line)
        check = line.split(b'~')[-1]
        if check.startswith(b'N'): # carriage return is expected for each line, strip it

            # ... do stuff ... #

            file.seek(-len(check), 1) # place the buffer at the check point
            file.write(check.replace(b'N', b'Y')) # replace "N" with "Y"
        line = file.readline() # read next line
</code></pre>
<p>In the first referenced thread one of the answers mentioned this could lead you to potential problems, and directly modifying the bytes on the buffer while reading it is probably considered a bad ideaâ„¢.  A lot of pros probably will scold me for even suggesting it.</p>
<h1>Option #2a</h1>
<p><em>(if file size is not horrendously huge)</em></p>
<pre><code>with open('file.txt','r') as file:
    new_lines = []
    for line in file.readlines():
        check = line.split('~')
        if 'N' in check[-1]:

            # ... do stuff ... #

            check[-1] = check[-1].replace('N','Y')
        new_lines.append('~'.join(check))

with open('file.txt','r+') as file: # IMPORTANT to open as 'r+' mode as 'w/w+' will truncate your file!
    for line in new_lines:
        file.writelines(line)
</code></pre>
<p>This approach loads all the lines into memory first, so you do the modification in memory but leave the buffer alone.  Then you reload the file and write the lines that were changed.  The caveat is that technically you are rewriting the entire file line by line - not just the string <code>N</code> even though it was the only thing changed.</p>
<h1>Option #2b</h1>
<p>Technically you <em>could</em> open the file as <code>r+</code> mode from the onset and then after the iterations have completed do this (still within the <code>with</code> block but outside of the loop):</p>
<pre><code># ... new_lines.append('~'.join(check)) #
    file.seek(0)
    for line in new_lines: 
        file.writelines(line)
</code></pre>
<p>I'm not sure what distinguishes this from Option #1 since you're still reading and modifying the file in the same go.  If someone more proficient in IO/buffer/memory management wants to chime in please do.</p>
<p>The disadvantage for Option 2a/b is that you always end up storing and rewriting the lines in the file even if you are only left with a few lines that needs to be updated from 'N' to 'Y'.</p>
<h1>Results (for all solutions):</h1>
<blockquote>
<pre><code>570772~CORPORATE BANK TRANSIT OF KENTUCKY INC~3157 HIGHWAY 64 SUITE 100~EADS~TN~38028~Y
384767~MILLER FARMS TRANS LLC~1103 COURT ST~BEDFORD~IA~50833~Y
986150~R G S TRUCKING LTD~1765 LOMBARDIE DRIVE~QUESNEL~BC~V2J 4A8~Y
1012987~DONALD LARRY KIVETT~4509 LANSBURY RD~GREENSBORO~NC~27406-4509~Y
735308~ALZEY EXPRESS INC~2244  SOUTH GREEN STREET~HENDERSON~KY~42420~Y
870337~RIES FARMS~1613 255TH AVENUE~EARLVILLE~IA~52057~Y
148428~P R MASON &amp; SON LLC~HWY 70 EAST~WILLISTON~NC~28589~Y
220940~TEXAS MOVING CO INC~908 N BOWSER RD~RICHARDSON~TX~75081-2869~Y
854042~ARMANDO ORTEGA~6590 CHERIMOYA AVENUE~FONTANA~CA~92337~Y
940587~DIAMOND A TRUCKING INC~192285 E COUNTY ROAD 55~HARMON~OK~73832~Y
1032455~INTEGRITY EXPRESS LLC~380 OLMSTEAD AVENUE~DEPEW~NY~14043~Y
889931~DUNSON INC~33 CR 3581~FLORA VISTA~NM~87415~Y
</code></pre>
</blockquote>
<p>And if you were to say, encountered a break at the line starting with <code>220940</code>, the file would become:</p>
<blockquote>
<pre><code>570772~CORPORATE BANK TRANSIT OF KENTUCKY INC~3157 HIGHWAY 64 SUITE 100~EADS~TN~38028~Y
384767~MILLER FARMS TRANS LLC~1103 COURT ST~BEDFORD~IA~50833~Y
986150~R G S TRUCKING LTD~1765 LOMBARDIE DRIVE~QUESNEL~BC~V2J 4A8~Y
1012987~DONALD LARRY KIVETT~4509 LANSBURY RD~GREENSBORO~NC~27406-4509~Y
735308~ALZEY EXPRESS INC~2244  SOUTH GREEN STREET~HENDERSON~KY~42420~Y
870337~RIES FARMS~1613 255TH AVENUE~EARLVILLE~IA~52057~Y
148428~P R MASON &amp; SON LLC~HWY 70 EAST~WILLISTON~NC~28589~Y
220940~TEXAS MOVING CO INC~908 N BOWSER RD~RICHARDSON~TX~75081-2869~N
854042~ARMANDO ORTEGA~6590 CHERIMOYA AVENUE~FONTANA~CA~92337~N
940587~DIAMOND A TRUCKING INC~192285 E COUNTY ROAD 55~HARMON~OK~73832~N
1032455~INTEGRITY EXPRESS LLC~380 OLMSTEAD AVENUE~DEPEW~NY~14043~N
889931~DUNSON INC~33 CR 3581~FLORA VISTA~NM~87415~N
</code></pre>
</blockquote>
<p>There are pros and cons to these approaches.  Try and see which one fits your use case the best.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would read the entire input file into a list and .pop() the lines off one at a time.  In case of an error, append the popped item to the list and write overwrite the input file.  This way it will always be up to date and you won't need any other logic.</p>
</div>
<span class="comment-copy">You could gain a lot of readability if you use str.format(). Read up on it, it's worth it :)</span>
<span class="comment-copy">This is a pretty broad question. It would probably be best to read up on <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">file methods</a> and try some things out. You might be looking for something like a <a href="https://docs.python.org/3.5/library/functions.html#zip" rel="nofollow noreferrer">zip</a> of <code>f.readlines()</code> and a range object. What you have now should work fine too.</span>
<span class="comment-copy">You cannot replace anything in a file open for appending. You cannot read it either.</span>
<span class="comment-copy">Also you are talking about one file but your code uses two.</span>
<span class="comment-copy">@Goyo, the one file just adds longitude and lattitude</span>
<span class="comment-copy">I tried doing your option 2a and it did not edit the text document at all</span>
<span class="comment-copy">How are you implementing it? It works fine on my end.</span>
<span class="comment-copy">I'll edit my original post to show</span>
<span class="comment-copy">unindent your <code>new_lines.append('~'.join(check))</code> by one level.  It should be outside your <code>if 'N' in check[-1]:</code> condition but within your <code>for</code> loop so that it appends the line regardless if the condition was met.</span>
<span class="comment-copy">Not sure what's going on. I get a time out error for my GeoCode (the interruption I was talking about) and the text file still is wrong. I'm thinking it might be easier to append a character to the end of each entry after it is processed/geocoded and just check for that end character each time.</span>
