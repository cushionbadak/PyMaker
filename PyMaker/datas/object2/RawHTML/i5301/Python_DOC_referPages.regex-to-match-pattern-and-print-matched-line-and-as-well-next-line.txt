<div class="post-text" itemprop="text">
<p>Am trying to match a pattern(date) lines from a huge file and I need to get next line if pattern matched. so, far I was able to us re module and use findall but I still not able to get how to print next line after match found.</p>
<p>Sample file contents :</p>
<pre><code>&lt;gi2i.1.Conversion.Process.Connection4: Warning: Mon 22/01/2018 - 16:44:11&gt;
Invalid parameter. Remove unused parameter number 4
&lt;END&gt;

&lt;gi2i.1.Conversion.Process.Connection5: Error: Mon 22/01/2018 - 16:44:11&gt;
Invalid parameter. Remove unused parameter number 5
&lt;END&gt;

&lt;gi2i.1.Conversion.Process.Connection6: Warning: Mon 22/01/2018 - 16:44:11&gt;
Invalid parameter. Remove unused parameter number 6
&lt;END&gt;

&lt;gi2i.1.Conversion.Process.Connection7: Warning: Mon 22/01/2018 - 16:44:11&gt;
Invalid parameter. Remove unused parameter number 7
&lt;END&gt;

&lt;gi2i.1.Conversion.Process.Connection8: Warning: Mon 22/01/2018 - 16:44:11&gt;
Invalid parameter. Remove unused parameter number 8
&lt;END&gt;
</code></pre>
<p>Pattern looking for is : 22/01/2018</p>
<p>expected output :</p>
<pre><code>Warning: Mon 22/01/2018 - 16:44:11&gt; Invalid parameter. Remove unused parameter number 4
Error: Mon 22/01/2018 - 16:44:11&gt; Invalid parameter. Remove unused parameter number 5
Warning: Mon 22/01/2018 - 16:44:11&gt; Invalid parameter. Remove unused parameter number 6
Warning: Mon 22/01/2018 - 16:44:11&gt; Invalid parameter. Remove unused parameter number 7
Warning: Mon 22/01/2018 - 16:44:11&gt; Invalid parameter. Remove unused parameter number 8
</code></pre>
<p>so far I tried this :</p>
<pre><code>print(re.findall("24/01/2018", open('C:\\sample.log_00.txt').read()))
</code></pre>
<p>reason why am trying make use of findall and regex because : 1. file is huge (so don't want to read each line and then look for pattern. it will take more processing time)
2. oneline code and regex makes it look easier approach</p>
</div>
<div class="post-text" itemprop="text">
<p>say your text is in variable <code>log</code>:
This - </p>
<pre><code>matches = [match[0] + ' ' + match[1] for match in re.findall("[^\n]+?: ([^\n]+22/01/2018[^\n]+)\n([^\n]+)", log)]
</code></pre>
<p>will put in <code>matches</code> a list of matches formatted as in your expected output.</p>
<h2>for anyone coming here from googling how to also match next line, here is an explanation to help you apply this to your specific case:</h2>
<p>so this is the idea of the regex used above:</p>
<pre><code>"&lt;regex for what you're looking for&gt;[^\n]+\n[^\n]+"
</code></pre>
<p>where you replace <code>"&lt;regex for what you're looking for&gt;"</code> with your regex, and then, the first <code>[^\n]+</code> is to match until the end of the line, then the <code>\n</code> to match the line break, and than <code>[^\n]+</code> to match until the end of the next line.</p>
<p>Also, I wrapped only the parts of the regex that I want to get in my results in parentheses. You can notice that in this case, the start of the first line and the line break between the matching line and the next line are not inside parentheses.</p>
<p>The <code>findall</code> function returns a list of matches. If the regex included more than one "choosing" pair of parentheses, every match will be returned as a tuple, in which every item in the tuple is a part that was chosen in a parentheses. If the regex only has one part, the match will just be returned as a string. </p>
<p>I than wrapped it all up in a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>, where for each match, the variable <code>match</code> will be in this case a tuple. For each match the list comprehension puts a string in the list, which I formatted using the items of <code>match</code> (<code>match[0]</code>, <code>match[1]</code>) which are the chosen parts of the regex. </p>
</div>
<span class="comment-copy"><i>"file is huge (so don't want to read each line and then look for pattern. it will take more processing time)"</i> Are you sure about that?</span>
<span class="comment-copy">Are you sure the expected output should have <code>Warning</code> at the start of the second line and not <code>Error</code>? What about using <a href="https://regex101.com/r/K9XOjf/1" rel="nofollow noreferrer"><code>^[^:\n]*:\s*|(?:&lt;END)?&gt;\n*</code></a>?</span>
<span class="comment-copy">I bet you'll find <code>for line in file: if date in line: print(line + next(file))</code> to be at least as fast as a regex solution.</span>
<span class="comment-copy">@ctwheels, thanks for pointing the expected output on line 2. it was indeed should be "Error". copy/paste issue from my end and I forgot to update the line. now I have. regarding using the regex which you have said, can I use them in re.findall ?</span>
<span class="comment-copy">when I tried to use that regex, i get an error before complie saying "Lexical error at line 1 column 23. Encountered: "n"(110), after:"\\"!  print(re.findall(^[^:\n]*:\s*|(?:&lt;END)?&gt;\n*, open('C:\\sample.log_00.txt').read()))</span>
