<div class="post-text" itemprop="text">
<p>I have such <code>LOGGING</code> setup for my django, but I realized using <code>DEBUG</code> level, it shows TOO much especially the template <code>variableDoesNotExist</code> <code>debug</code> is quite annoying.</p>
<p>I have this as my current setup</p>
<pre><code>LOGGING = {
'version': 1,
'disable_existing_loggers': False,
'formatters': {
    'simple_time': {
        # simple_time, that just outputs the log level name (e.g., DEBUG) plus time and the log message.
        'format': '%(levelname)s %(asctime)s %(message)s'
    },
},
'handlers': {
    'debug_file': {
        'class': 'logging.FileHandler',
        'filename': os.path.join(BASE_DIR) + '/debug.log',
        'formatter': 'simple_time'
    },
},
'loggers': {
    'django': {
        'handlers': ['debug_file'],
        'level': 'DEBUG',
        'propagate': True,
    },
},
</code></pre>
<p>}</p>
<p>I am wondering if I change the <code>level</code> to <code>INFO</code> will it just show <code>INFO</code> and not show <code>ERROR</code> level if any?</p>
<p>Else, is it possible to split different levels into different files?</p>
<p>I tried something like this, but not sure if it'll work properly</p>
<pre><code>'handlers': {
    'debug_file': {
        'class': 'logging.FileHandler',
        'filename': os.path.join(BASE_DIR) + '/debug.log',
        'formatter': 'simple_time'
    },
    'info_file': {
        'class': 'logging.FileHandler',
        'filename': os.path.join(BASE_DIR) + '/info.log',
        'formatter': 'simple_time'
    },
},
'loggers': {
    'django_debug': {
        'handlers': ['debug_file'],
        'level': 'DEBUG',
        'propagate': True,
    },
    'django_info': {
        'handlers': ['info_file'],
        'level': 'INFO',
        'propagate': True,
    },
},
</code></pre>
<p>Thanks in advance for any suggestions</p>
</div>
<div class="post-text" itemprop="text">
<p>Setting a log level always means to show anything at that level or higher.</p>
<p>As you can see from <a href="https://docs.python.org/3/library/logging.html#logging-levels" rel="nofollow noreferrer">the docs</a>, ERROR is higher than INFO, so setting the level to INFO will show both - as well as WARNING and CRITICAL, which is the highest level.</p>
<p>However, you certainly can set up two different loggers for different levels.</p>
</div>
<span class="comment-copy">thanks a lot but then as the bottom of my post, is that how I can set up different logger on different levels? I set it up but not sure what I can do to make the error happen so I can check if it's done properly</span>
