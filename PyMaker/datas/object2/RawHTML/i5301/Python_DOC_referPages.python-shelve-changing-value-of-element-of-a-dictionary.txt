<div class="post-text" itemprop="text">
<p>This one has me stumped so I thought I would challenge others.
I am trying to change one element of a dictionary in a shelve and it is being stubborn. </p>
<p>Here is a demo:</p>
<pre><code>db = shelve.open('/tmp/somefile','c')
db['bob'] = {'shoesize':42, 'gender':'m'}
db['bob']
{'shoesize': 42, 'gender': 'm'}
db['bob']['gender'] = 'u'
db['bob']
{'shoesize': 42, 'gender': 'm'}
db['bob'] = {'shoesize': 42, 'gender': 'u'}
db['bob']
{'shoesize': 42, 'gender': 'u'}
</code></pre>
<p>This is happening on Python 3.6.1 on a RHEL 7 host.
Having upgraded from an earlier RHEL and Python 2 I understand that the underlying libraries have more to do with how shelves function but this is a bit of weird one.</p>
<p>Appologies to 'bob'</p>
</div>
<div class="post-text" itemprop="text">
<p>From the Python <a href="https://docs.python.org/3/library/shelve.html#shelve.open" rel="nofollow noreferrer">docs</a> for <code>shelf</code>,</p>
<blockquote>
<p>Because of Python semantics, a shelf cannot know when a mutable persistent-dictionary entry is modified. By default modified objects are written only when assigned to the shelf</p>
</blockquote>
<p>Your first try, <code>db['bob']['gender'] = 'u'</code>, doesn't work since it's not an assignment to the shelf itself (it's an assignment to the <code>dict</code> <code>db['bob']['gender']</code>). Your second try does work since it is assignment to a key of the shelf  itself. The <a href="https://docs.python.org/3/library/shelve.html#example" rel="nofollow noreferrer">examples</a> in the docs will further hammer in this point.</p>
<p>If you were to open with <code>writeback=True</code>, you would be able to code normally. However, as the docs note "it would also consume more memory and make the d.close() operation slower."</p>
</div>
<span class="comment-copy">what is <code>db</code>?..</span>
<span class="comment-copy">Great answer Sushain and thanks.</span>
