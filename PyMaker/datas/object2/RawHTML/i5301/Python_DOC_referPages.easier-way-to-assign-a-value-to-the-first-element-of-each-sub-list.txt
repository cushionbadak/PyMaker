<div class="post-text" itemprop="text">
<p>I defined a nested list like this:</p>
<pre><code> T=[[0 for i in range(4)] for i in range(4)]
</code></pre>
<p>Now a value is to be assigned to the first element of each sub-list, say <code>10</code>.
I tried this: <code>T[:][0] = 10</code>, but it doesn't work. I know that this can be done using a loop, but is there an easier way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the ternary <code>x if y else z</code> operator in the comprehension:</p>
<pre><code>T = [[0 if i else 10 for i in range(4)] for _ in range(4)]
</code></pre>
<p>And since <code>int</code> is immutable, you can also do:</p>
<pre><code>T = [[10] + [0] * 3  for _ in range(4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use builtin <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> function to assign <code>10</code> at start of each sublist.</p>
<pre><code>&gt;&gt;&gt; l = [[0 for i in range(4)] for i in range(4)]
&gt;&gt;&gt; list(map(lambda x, y: x+y[1:], [[10]]*len(l), l))
&gt;&gt;&gt; [[10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To store <code>10</code>, you can use list concatenation:</p>
<pre><code>T=[[10]+[0 for i in range(3)] for i in range(4)]
</code></pre>
<p>Output:</p>
<pre><code>[[10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0]]
</code></pre>
<p>Or, in Python3, you can use the somewhat cleaner list unpacking <code>*</code>:</p>
<pre><code>T=[[10, *[0 for _ in range(3)]] for i in range(4)]
</code></pre>
<p>Output:</p>
<pre><code>[[10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try with lambda :</p>
<pre><code>list(map(lambda x:x.__setitem__(0,10),T))
print(T)
</code></pre>
<p>output:</p>
<pre><code>[[10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0]]
</code></pre>
</div>
<span class="comment-copy">Thank you very much Schwobaseggl</span>
<span class="comment-copy">Thank you very much Mr. Collector</span>
<span class="comment-copy">Thank you very much Ajax</span>
<span class="comment-copy">Thank you very much Netplay</span>
