<div class="post-text" itemprop="text">
<p>I have a list made of lists and strings. I want to find the index position of every element in the list which is a string. The problem is that the strings are identical to <code>'Error'</code>. I tried with the following code:</p>
<pre><code>err = [bayesian_prices.index(i) for i in bayesian_prices if i == 'Error']
</code></pre>
<p>Unfortunately, from the initial list composed by 252 elements, the output is the following:</p>
<pre><code>[39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 
39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 
39, 39, 39, 39]
</code></pre>
<p>This is exactly the position of the first element which is not a list, but a string. Then the other string positions are registered with the same index number. Probably is due to the fact that all the strings are equal. How it is possible to obtain the correct index numbers?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a> builtin function to get the index value of every string in a list. Here is an example:</p>
<pre><code>lists_and_strings = [[1, 2, 3], 'hello', [3, 4], 'error', [4, 5, 6]]

for index, element in enumerate(lists_and_strings):
    if type(element) is str:
        print(index)
</code></pre>
<p>This will print the index of every string element in <code>lists_and_strings</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>For variety here is another way:  </p>
<pre><code>lists_and_strings = [[1, 2, 3], 'hello', [3, 4], 'error', [4, 5, 6]]

str_indices = [i for i, j in enumerate(map(type, lists_and_strings)) if j is str]
</code></pre>
</div>
<span class="comment-copy">Simpler than expected. Thanks!</span>
<span class="comment-copy">@Alexbrini - No problem!</span>
<span class="comment-copy">Thank you too for it. It could be useful in another cases</span>
