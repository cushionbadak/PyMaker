<div class="post-text" itemprop="text">
<p>Consider three different runs of a program:</p>
<pre><code>python3 prog.py
python3 prog.py --x
python3 prog.py --x 2
</code></pre>
<p>Is it possible to use <code>argparse</code> such that, for example, in the first case, <code>x==None</code>, in the second case, <code>x==1</code>, and in the third, <code>x==2</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>nargs'?'</code> with a <code>const</code> parameter handles this 3-way input nicely..</p>
<pre><code>In [2]: parser = argparse.ArgumentParser()
In [3]: parser.add_argument('-x','--x', nargs='?', type=int, const=1)
...
In [4]: parser.parse_args([])
Out[4]: Namespace(x=None)
In [5]: parser.parse_args(['-x'])
Out[5]: Namespace(x=1)
In [6]: parser.parse_args(['-x','2'])
Out[6]: Namespace(x=2)
</code></pre>
<p>I could have also given it a <code>default</code> parameter.</p>
<p><a href="https://stackoverflow.com/questions/44745588/how-to-add-multiple-argument-options-in-python-using-argparse">how to add multiple argument options in python using argparse?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you are happy to do a little post-processing, you can get it:</p>
<pre><code>sentinel = object()
parser.add_argument('--x', nargs='?', type=int, default=sentinel)
args = parser.parse_args()
if args.x is sentinel:
    args.x = None
elif args.x is None:
    args.x = 1
</code></pre>
<p>However, it is bending the tool in a bit of a strange way.  You may want to consider instead the <a href="https://docs.python.org/3/library/argparse.html#action" rel="nofollow noreferrer">count</a> action, which is commonly used to specify verbosity levels, for example  (-v, -vv, -vvv).  </p>
</div>
<span class="comment-copy">+1  I did not know about this usage of <code>const</code>.  I'd give away the check-mark if I could, hopefully OP will see this and change their accepted answer.</span>
