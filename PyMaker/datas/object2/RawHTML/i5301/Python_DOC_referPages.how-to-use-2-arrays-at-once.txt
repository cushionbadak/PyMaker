<div class="post-text" itemprop="text">
<p>Sorry, I am not sure if I am using the correct terminology.  I have a program that cycles through the "myConnect" array of server names.  It creates a connection to each server name and runs a query.  This works fine.  </p>
<p>But what if I have several database names on each server as well?  What is the best way to go about cycling through a list of database names as well as the server names?  Here is my working code for just server names:</p>
<pre><code>import os
import pypyodbc

def func1(connections, firstname, lastname, uname):

        try:
            connection = pypyodbc.connect('Driver={SQL Server};Server=' + connections + ';Database=Database1;Trusted_Connection=yes;')
        except pypyodbc.Error as ex:
            sqlstate = ex.args[0]
            if sqlstate == '28000':
                print("You do not have access.") 
        cursor = connection.cursor() 
        SQLCommand = ("SELECT Active, UserName, FirstName, LastName "      
            "FROM dbo.My_Table "   # table name
            "(nolock)"
            "WHERE FirstName LIKE ? AND LastName LIKE ? AND UserName LIKE ?")
        Values = [firstname + '%', lastname + '%', '%' + uname + '%']
        cursor.execute(SQLCommand,Values)
        results = cursor.fetchone()
        if results:
            print(connections + " " + str(results[0]) + " " + str(results[1]) + " " + str(results[2]) + " " + str(results[3])) # enters results in entry
            connection.close()
        else:
            print(connections + " - NO")
            connection.close()

def start():

    os.system('cls' if os.name == 'nt' else 'clear')
    print (" ")
    while True:
        print("\nPress Ctrl + c to exit.")
        firstname = input('Type the first name: ')
        lastname = input('Type the last name: ') 
        myConnect = ['server1', 'server2', 'server3']  
        for connections in myConnect:
            func1(connections, firstname, lastname, uname)

start()
</code></pre>
<p>Should I just create another database array under myConnect?  Is there a way to group them together?  Maybe something like this?</p>
<pre><code>import os
import pypyodbc

def func1(connections, names, firstname, lastname, uname):

        try:
            connection = pypyodbc.connect('Driver={SQL Server};Server=' + connections + ';Database=' + names + ';Trusted_Connection=yes;')
        except pypyodbc.Error as ex:
            sqlstate = ex.args[0]
            if sqlstate == '28000':
                print("You do not have access.") 
        cursor = connection.cursor() 
        SQLCommand = ("SELECT Active, UserName, FirstName, LastName "      
            "FROM dbo.My_Table "   # table name
            "(nolock)"
            "WHERE FirstName LIKE ? AND LastName LIKE ? AND UserName LIKE ?")
        Values = [firstname + '%', lastname + '%', '%' + uname + '%']
        cursor.execute(SQLCommand,Values)
        results = cursor.fetchone()
        if results:
            print(connections + " " + str(results[0]) + " " + str(results[1]) + " " + str(results[2]) + " " + str(results[3])) # enters results in entry
            connection.close()
        else:
            print(connections + " - NO")
            connection.close()

def start():

    os.system('cls' if os.name == 'nt' else 'clear')
    print (" ")
    while True:
        print("\nPress Ctrl + c to exit.")
        firstname = input('Type the first name: ')
        lastname = input('Type the last name: ') 
        myConnect = ['server1', 'server1', 'server2', 'server2',  'server3']
        databases = ['Database1', 'Database2', 'Database3', 'Database4', 'Database5']
        for connections in myConnect:
            for names in databases:
                func1(connections, names, firstname, lastname, uname)

start()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>serverDB = {"server1": ['Database1', 'Database2'], 
            "server2": ['Database3', 'Database4'], 
            "Server3": ['Database5']}

for server in serverDB:
    print("connecting to server: " + server)
    for db in serverDB[server]:
        print ( "querying db: " + db)
</code></pre>
<p>Output:</p>
<pre><code>connecting to server: server1
querying db: Database1
querying db: Database2
connecting to server: server2
querying db: Database3
querying db: Database4
connecting to server: Server3
querying db: Database5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Are you looking to iterate over myConnect and databases at the same time? If so then it might be <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a>.  Or are you looking to iterate over and use something like the <a href="https://docs.python.org/3.6/library/itertools.html#itertools.product" rel="nofollow noreferrer">product</a> of the two? </p>
<pre><code>&gt;&gt;&gt; myConnect = ['server1', 'server1', 'server2', 'server2',  'server3']
&gt;&gt;&gt; databases = ['Database1', 'Database2', 'Database3', 'Database4', 'Database5']
&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; for server, db in zip(myConnect, databases):
...     print(server, db)
...
server1 Database1
server1 Database2
server2 Database3
server2 Database4
server3 Database5
&gt;&gt;&gt; for server, db in product(myConnect, databases):
...     print(server, db)
...
server1 Database1
server1 Database2
server1 Database3
server1 Database4
server1 Database5
server1 Database1
server1 Database2
server1 Database3
server1 Database4
server1 Database5
server2 Database1
server2 Database2
server2 Database3
server2 Database4
server2 Database5
server2 Database1
server2 Database2
server2 Database3
server2 Database4
server2 Database5
server3 Database1
server3 Database2
server3 Database3
server3 Database4
server3 Database5
</code></pre>
</div>
<span class="comment-copy">How much of this code is actually relevant to the question? Please read our page on <a href="https://stackoverflow.com/help/mcve">MCVE</a> here</span>
<span class="comment-copy">use a dict with servernames as keys and databasenamelist as value, iterate over keys, check vvalues</span>
<span class="comment-copy">Exactly what I needed.  What is the term for this array or list?  I need to do some reading.</span>
<span class="comment-copy">@KadeWilliams <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html#dictionaries</a> - you find lists, sets and tuples on the same page</span>
<span class="comment-copy">Sorry I can delete my response if that's better. I wanted to type out the example so he can see it. I can't do that in a comment.</span>
<span class="comment-copy">now it makes more sense as answer. its zip, the other one would produce too much duplicates to warrant his sql code.</span>
