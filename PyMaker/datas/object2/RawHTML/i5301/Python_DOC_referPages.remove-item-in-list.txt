<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/26766587/removing-item-from-list-causes-the-list-to-become-nonetype">Removing item from list causes the list to become nonetype</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>For an assignment, I want to remove all undesirable items in a list. This is an example of code that should remove all 1's from a list; however, when I run it, it returns None. Why is this?</p>
<pre><code>v=[1,2,1,3,1,4,5,55,1]

for i in v:
    if i==1:
        result=v.remove(1)
    else:
        continue
print (result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>list.remove()</code> mutates the list <em>in-place</em>.  The <a href="https://www.tutorialspoint.com/python/list_remove.htm" rel="nofollow noreferrer">method itself returns <code>None</code></a>.  Print <code>v</code> to see results.</p>
<p>From <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer">the docs</a>:</p>
<blockquote>
<p>You might have noticed that methods like <code>insert</code>, <code>remove</code> or <code>sort</code> that only modify the list have no return value printed – they return the default <code>None</code>. <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer">1</a> This is a design principle for all mutable data structures in Python.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>you can filter your list: </p>
<p>Python 2:</p>
<pre><code>v = filter(lambda x: x != 1, v)
</code></pre>
<p>Python 3:</p>
<pre><code>v = filter((1).__ne__, v)
</code></pre>
<p>The code snippet in the question is basically equivalent to:</p>
<pre><code>while 1 in v: 
    v.remove(1)
</code></pre>
</div>
<span class="comment-copy">It happens in place.  print <code>v</code></span>
<span class="comment-copy">you can also do: <code>while 1 in v: v.remove(1)</code></span>
<span class="comment-copy">Take a look at <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html</a>  (<code>list.remove(x)</code>) (as @pylang secified).</span>
<span class="comment-copy">Dup of : <a href="https://stackoverflow.com/questions/1207406/remove-items-from-a-list-while-iterating" title="remove items from a list while iterating">stackoverflow.com/questions/1207406/…</a>. Dont know HTF did I miss it the 1st time...</span>
