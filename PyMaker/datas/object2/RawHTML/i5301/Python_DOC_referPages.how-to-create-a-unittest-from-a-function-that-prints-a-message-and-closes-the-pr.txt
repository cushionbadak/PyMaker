<div class="post-text" itemprop="text">
<p>I have the following function that prints an error message and closes the program:  </p>
<pre><code>def show_error_message(error_message):
    print(error_message)
    sys.exit()  # Close Program
</code></pre>
<p>Now I'm creating the unittest and found <a href="https://stackoverflow.com/questions/15672151/is-it-possible-for-a-unit-test-to-assert-that-a-method-calls-sys-exit">this topic</a> about testing the <code>sys.exit()</code> but it doesn't work. I suppose that it's because it prints before closing the message.  </p>
<p>How can I test this? Is there something in Python Standard Library that I can use anytime in my project to do the same thing as this function?</p>
<p>What I tried to test was like this:</p>
<pre><code>    def test_function_runs(self):
        """Basic smoke test: does the function run."""
        with self.assertRaises(SystemExit) as cm:
            show_error_message('message')
        self.assertEqual(cm.exception.code, 1)
</code></pre>
<p>The erro I get is this:</p>
<pre><code>Traceback (most recent call last):
File ".test_dynamic_message.py", line 14, in test_function_runs
self.assertEqual(cm.exception.code, 1)
AssertionError: None != 1
</code></pre>
<p>I'm still new to python so I hope someone could help me.<br/>
Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/library/exceptions.html#SystemExit" rel="nofollow noreferrer">the python docs</a></p>
<blockquote>
<p>If the value is an integer, it specifies the system exit status (passed
  to C’s exit() function); if it is None, the exit status is zero; if it
  has another type (such as a string), the object’s value is printed and
  the exit status is one.</p>
</blockquote>
<p>The function you're testing exits with a default exit code of 0.<br/>
Your test assumes the exit code in the exception will be 1, when you should expect it to be <code>None</code> per the documentation.</p>
</div>
<div class="post-text" itemprop="text">
<p>In this case, it's the code that is wrong.  <strong>Your test is correct and needs no changes</strong>.</p>
<p>What you have exits with success (return code 0):</p>
<pre><code>def show_error_message(error_message):
    print(error_message)
    sys.exit()  # Close Program
</code></pre>
<p>To print the error message to stderr and exit with failure (return code 1) you want this:</p>
<pre><code>def show_error_message_and_quit(error_message):
    sys.exit(error_message)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The attributes of exception could be code, message, args and more.</p>
<pre><code>class TestExit(unittest.TestCase):

    def test_sys_exit_exception(self):
        with self.assertRaises(SystemExit) as e:
            sys.exit('exit_with_err')
        self.assertTrue(isinstance(e.exception, SystemExit))
        self.assertEqual(e.exception.code, 'exit_with_err')
        self.assertEqual(e.exception.message, 'exit_with_err')
        self.assertEqual(e.exception.args, ('exit_with_err',))


    def test_show_error_msg_exception(self):
        # Test the exception type
        with self.assertRaises(SystemExit) as e:
            show_error_message('test but not mock exit')
        self.assertTrue(isinstance(e.exception, SystemExit))
</code></pre>
</div>
<span class="comment-copy">Per <a href="https://docs.python.org/3/library/exceptions.html#SystemExit" rel="nofollow noreferrer">docs.python.org/3/library/exceptions.html#SystemExit</a>, the SystemExit exception doesn't have a <code>message</code> attribute, only a <code>code</code> attribute.</span>
<span class="comment-copy">Which you can also see by calling <code>str(exception)</code> where <code>exception</code> is your <code>SystemExit</code> exception.</span>
<span class="comment-copy">So just replace your <code>exception.message</code> with <code>exception.code</code>.</span>
<span class="comment-copy">You are right! Thank you so much. I read the link and it totally cleared for me. Thanks!</span>
<span class="comment-copy">the explanation is good.</span>
<span class="comment-copy">I tried to compare with <code>None</code> and gave me the same error but saying that <code>None != None</code> ... :/</span>
<span class="comment-copy">Well that makes no sense, obviously. Can you show me the stacktrace?</span>
<span class="comment-copy">Hey Charles, I don't know why now it just keeps showing the <code>message != None</code> only. But the link you gave about the exception really helped so I was able to understand and fix my code. Thank you!</span>
<span class="comment-copy">I tested, you are right. Thanks!</span>
<span class="comment-copy">Thanks! I tried it but the test didn't work. I edited the post with the errors. Would love if you could help :)</span>
<span class="comment-copy">Now you've changed the test to check the message instead of checking the return code.  It's a completely different question now.  Don't do that, just ask a new question.</span>
<span class="comment-copy">Sorry, I'm still new here but I will do it next time. Thanks for the tip!</span>
<span class="comment-copy">I don't think you understand how <code>self.assertRaises</code> works.  Your assertions are skipped.</span>
<span class="comment-copy">You are right, the extra 4 spaces made it out of the scope, I updated the code.</span>
<span class="comment-copy">Thanks! I tried it changing the code to the one @wim said but only one worked. I edited the post with the errors. Would love if you could help :)</span>
<span class="comment-copy">It was only the message part. Already got it, thanks!</span>
