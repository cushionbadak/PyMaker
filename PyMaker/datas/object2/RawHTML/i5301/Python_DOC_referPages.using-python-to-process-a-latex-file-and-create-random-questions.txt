<div class="post-text" itemprop="text">
<p>I am using python to pre-process a LaTeX file before running it through the LaTeX compiler. I have a python script which reads a <code>.def</code> file. The <code>.def</code> file contains some python code at the top which helps to initialize problems with randomization. Below the python code I have LaTeX code for the problem. For each variable in the LaTeX code, I use the symbol <code>@</code> to signify that it should be randomized and replaced before compiling. For example, I may write <code>@a</code> to be a random integer between 1 and 10.</p>
<p>There may be larger issues with what I'm trying to do, but so far it's working mostly as I need it to. Here is a sample <code>.def</code> file:</p>
<pre><code>a = random.choice(range(-3,2))
b = random.choice(range(-6,1))
x1 = random.choice(range(a-3,a))
x2 = x1+3
m = 2*x1 - 2*a + 3
y1 = (x1-a)**2+b
y2 = (x2-a)**2+b
xmin = a - 5
xmax = a + 5
ymin = b-1
ymax = b+10
varNames = [["@a", str(a)],["@b", str(b)], ["@x1",str(x1)], ["@x2",str(x2)], ["@m", str(m)], ["@y1",str(y1)], ["@y2",str(y2)], ["@xmin", str(xmin)], ["@xmax", str(xmax)], ["@ymin", str(ymin)], ["@ymax", str(ymax)]]
#####
    \question The graph of $f(x) = (x-@a)^2+@b$ is shown below along with a secant line between the points $(@x1,@y1)$ and $(@x2,@y2)$.
    \begin{center}
      \begin{wc_graph}[xmin=@xmin, xmax=@xmax, ymin=@ymin, ymax=@ymax, scale=.75]
        \draw[domain=@a-3.16:@a + 3.16, smooth] plot ({\x}, {(\x-@a)^2+@b});
        \draw (@x1,@y1) to (@x2,@y2);
        \pic at (@x1,@y1) {closed};
        \pic at (@x2,@y2) {closed};
      \end{wc_graph}
    \end{center}
    \begin{parts}
      \part What does the slope of the secant line represent?
      \vfill
      \part Compute the slope of the secant line.
      \vfill
    \end{parts}
    \newpage
</code></pre>
<p>As you can see, removing the <code>@a</code> and replacing it with the actual value of <code>a</code> is starting to become tedious. In my python script, I just replace all of the <code>@</code>ed things in my <code>latexCode</code> string.</p>
<pre><code>for x in varNames:
    latexCode = latexCode.replace(x[0],x[1])
</code></pre>
<p>which seems to work okay. However, it seems obnoxious and ugly. </p>
<p><strong>My Question:</strong> Is there a better way of working between the variable identifier and the string version of the identifier? It would be great if I could simply make a python list of variable names I'm using in the .def file, and then run a simple command to update the LaTeX code. What I've done is cumbersome and painful. Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes either <code>eval (name)</code> or <code>getattr (obj, name)</code> or <code>globals () [name]</code>. In this case I'd say <code>globals [name]</code>.</p>
<p>Also <code>vars</code> would work:</p>
<p><a href="https://docs.python.org/3/library/functions.html#vars" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#vars</a></p>
<p>In the following fragment it's e.g used to make objects know their own name:</p>
<pre><code>def _setPublicElementNames (self):
    for var in vars (self):
        if not var.startswith ('_'):
            getattr (self, var) ._name = var
</code></pre>
<p>Yet another, unnecessary complicated, solution would be to generate a .py file with the right replace statements from your .def file.</p>
</div>
<span class="comment-copy">This is just what I needed! I just replaced my code with <code>latexCode = latexCode.replace("@" + x, str(eval(x)))</code> and I changed my list to look like <code>varList = ["a", "b"]</code> for example.</span>
