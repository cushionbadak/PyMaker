<div class="post-text" itemprop="text">
<p>I've created a new form for comments the articles on a website. When I add the new comment from django admin everything works ok, but when I try to add the new comment directly from detail page nothings happen and I'am redirecting to the page with list of articles.
here are my files
models.py:</p>
<pre><code>class Komentarz(models.Model):
    post = models.ForeignKey(Wpisy, related_name="komentarze", verbose_name="Komentarze do artykułu", on_delete=models.CASCADE)
    name = models.CharField(max_length=80, verbose_name="Imię")
    email = models.EmailField(verbose_name="Email")
    content = models.TextField(verbose_name="Treść komentarza")
    created_date = models.DateTimeField(verbose_name="Utworzono", auto_now_add=True)
    active = models.BooleanField(verbose_name="Aktywny?", default=True)

    class Meta:
        ordering = ('created_date',)
        verbose_name="Komentarz"
        verbose_name_plural="Komentarze"

    def __str__(self):
        return 'Komentarz dodany przez {} dla strony {}'.format(self.name, self.post)
</code></pre>
<p>vies.py with the function of details</p>
<pre><code>from django.shortcuts import render, get_object_or_404
from .models import Wpisy, Komentarz
from .forms import KomentarzeForma
....
def detale_bajki(request, slug, ):
    detale_bajki = get_object_or_404(Wpisy, slug=slug)
    komentarze = detale_bajki.komentarze.filter(active=True)
    if request.method == 'POST':
        formularz_komentarza = KomentarzeForma(data=request.POST)
        if formularz_komentarza.is_valid():
            nowy_komentarz = formularz_komentarza.save(commit=False)
            nowy_komentarz.detale_bajki = detale_bajki
            nowy_komentarz.save()
    else:
        formularz_komentarza = KomentarzeForma()
        return render(request, 'bajki/detale_bajki.html', {'detale_bajki': detale_bajki, 'komentarze': komentarze, 'formularz_komentarza': formularz_komentarza})
</code></pre>
<p>forms.py</p>
<pre><code>from .models import Komentarz
from django import forms


class KomentarzeForma(forms.ModelForm):
    class Meta:
        model = Komentarz
        fields = ('name', 'email', 'content')
</code></pre>
<p>and detail.html</p>
<pre><code>...
                {% with komentarze.count as total_komentarze %}
                &lt;h2&gt;
                {{ total_komentarze }} komentarz{{ total_komentarze|pluralize:"y" }}
                &lt;/h2&gt;
                {% endwith %}

                {% for komentarz in komentarze %}
                Komentarz dodany przez &lt;strong&gt;{{komentarz.name}}&lt;/strong&gt;
                {{komentarz.created_date}}
                &lt;p&gt;
                {{ komentarz.content|linebreaks }}&lt;br&gt;
                {% empty %}
                &lt;p&gt;Nie dodano jeszcze żadnych komentarzy&lt;/p&gt;
                {% endfor %}

                {% if nowy_komentarz %}
                &lt;h2&gt;Twój komentarz został dodany&lt;/h2&gt;
                {% else %}
                &lt;h2&gt;Dodaj nowy komentarz&lt;/h2&gt;
                &lt;form action="." method="post"&gt;
                {{formularz_komentarza.as_p}}
                {% csrf_token %}
                &lt;p&gt;&lt;input type="submit" value="Dodaj komentarz"&gt;&lt;/p&gt;
                &lt;/form&gt;
                {% endif %}
</code></pre>
<p>clas Wpisy in models.py</p>
<pre><code>class Wpisy(models.Model):
    title = models.CharField(max_length=400, verbose_name="Tytuł")
    slug = models.SlugField(unique=True, max_length=400,verbose_name="Przyjazny adres url")
    content = models.TextField()
    status_audio = models.BooleanField(default=False, verbose_name="Czy dostępny będzie plik audio?")
    audio_file = models.FileField(upload_to='uploads/',verbose_name="Plik audio")
    created_date = models.DateTimeField(blank=True, null=True, verbose_name="Data utworzenia")
    category = models.ForeignKey(Kategorie, verbose_name="Kategoria", on_delete=models.CASCADE)

    class Meta:
        verbose_name="Wpis"
        verbose_name_plural="Wpisy"


    def __str__(self):
        return self.title
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your url pattern is</p>
<pre><code>path('bajki/&lt;slug&gt;', views.detale_bajki, name='detale_bajki')
</code></pre>
<p>Note that it doesn't have a trailing slash. Your form's action is <code>"."</code></p>
<pre><code>&lt;form action="." method="post"&gt;
</code></pre>
<p>That means you are submitting to <code>/bajki/</code>, which is the wrong URL.</p>
<p>You could fix this by adding a trailing slash to the url (which is common in Django URLs)</p>
<pre><code>path('bajki/&lt;slug&gt;/', views.detale_bajki, name='detale_bajki')
</code></pre>
<p>Or you could change the form action to <code>""</code> instead of <code>"."</code>. In the comments it looks like you fixed the issue by changing the form action to <code>{{ detale_bajki.slug }}</code>.</p>
<p>However these changes to the form action are fragile, and could break if you change your URL patterns again. The best approach is to use the <code>{% url %}</code> tag to reverse the correct URL.</p>
<pre><code>&lt;form action="{% url 'detale_bajki' detale_bajki.slug %}" method="post"&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try out:</p>
<pre><code>nowy_komentarz.post = detale_bajki
...
return render(request, 'html page', {'key': 'what you want to return to your context'}) # don't fornget to add some return to your view.
</code></pre>
</div>
<span class="comment-copy">Your <code>detale_bajki</code> view isn't returning a response after calling <code>nowy_komentarz.save()</code>. Check your indentation. Please show your urls as well.</span>
<span class="comment-copy">In you <code>detail.html</code> the form does not pass the <code>slug</code> which is an argument in <code>views.detale_bajki</code>.</span>
<span class="comment-copy">I have try to change how You wrote. But still nothing :(</span>
<span class="comment-copy">Sorry Eliakim but I think I don't understand You. What does it mean "im" ?</span>
<span class="comment-copy">tbh I'm trying to guess what's the solution. You can debug it by yourself using pdb:  &lt;!-- language: Python --&gt;      # at the start of the view     import pdb     pdb.set_trace()  Take a look at <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">docs.python.org/3/library/pdb.html</a>  I bet that your form is not passing by is_valid() method.</span>
<span class="comment-copy">Ok i added line import pdb; pdb.set_trace()and now in console I have only this: &gt; c:\projekty\public_python\bajki\views.py(2)&lt;module&gt;() -&gt; from django.shortcuts import render, get_object_or_404 (Pdb). How to check the errors? Of course  localhost stop working when I implement pdb</span>
<span class="comment-copy">Just presses 'n' and 'enter' for every line and check in which line your code breaks. It's just to visualize the flow of your code.</span>
