<div class="post-text" itemprop="text">
<p>I am trying to write a regex that can match any word in the following or similar words. <code>*</code> in these strings are exact <code>*</code> and not any character.</p>
<pre><code>Jump
J**p
J*m*
J***
***p
J***ing
J***ed
****ed
</code></pre>
<p>I want to keeo the length fixed.  </p>
<pre><code>1. Any string of lenght 4 that matches the string 'jump' 
2. Any string of length 6 that matches 'jumped' 
3. Any string of length 7 that matches 'jumping' 
</code></pre>
<p>I was using the following statements but for some reason, i am not able to to the correct translation. It accepts other strings as well. </p>
<pre><code>p = re.compile('j|\*)(u|\*)(m|\*)...)
bool(p.match('******g'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a fairly straightforward regex. We want to match a word, but allow each character to be an asterisk. The regex is therefore a sequence of character groups of the form <code>[x*]</code>:</p>
<pre><code>[Jj*][u*][m*][p*](?:[i*][n*][g*]|[e*][d*])?
</code></pre>
<p><a href="https://regex101.com/r/bOoGpW/2" rel="noreferrer">See it in action at regex101.</a></p>
<p>If you only want to match these exact words, make sure to use the pattern with <a href="https://docs.python.org/3/library/re.html#re.fullmatch" rel="noreferrer"><code>re.fullmatch</code></a>.</p>
</div>
<span class="comment-copy">How about <code>"Jump|J\*\*p|J\*m\*|...|J\*\*\*ed"</code>.</span>
<span class="comment-copy">Try going here: <a href="http://regexstorm.net/tester" rel="nofollow noreferrer">regexstorm.net/tester</a> or to another testing website, put all the strings that should match and some that shouldn't, and then test your regex.  When you write <code>*</code>, I think you might mean <code>.</code> (any single character).   You might even mean <code>\w</code> (any word character).  Maybe start with <code>(J\w\wp|J\wm\w)</code></span>
<span class="comment-copy">Does your "*" represent <i>any single character</i>? If so, then it must be a ".".</span>
<span class="comment-copy">sorry, <code>*</code> is exact charcter</span>
<span class="comment-copy">Nice!  And <code>*</code> doesn't require escaping because of the enclosing <code>[]</code>, I assume?</span>
<span class="comment-copy">Should <code>****</code>, <code>******</code>, and <code>*******</code> be considered valid matches?</span>
<span class="comment-copy">@zzxyz Correct. Most characters lose their special meaning inside a character class.</span>
