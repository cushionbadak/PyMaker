<div class="post-text" itemprop="text">
<p>Below is my code:</p>
<pre><code>import re
str = "?CNTN_CD=A0002400127&amp;PAGE_CD=ET00_1&amp;BLCK_NO=1&amp;CMPT_CD=T0016&amp;TEXT=한글패러미터"
pattern = re.compile("[a-zA-Z0-9?=&amp;\-_]+")
result = pattern.search(str)
print(result)
</code></pre>
<p>This is the result:</p>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 65), match='?CNTN_CD=A0002400127&amp;PAGE_CD=ET00_1&amp;BLCK_NO=1&amp;CMP&gt;
</code></pre>
<p>But I expect this result:</p>
<pre><code>&lt;_sre.SRE_Match object; span=(0, 65), match='?CNTN_CD=A0002400127&amp;PAGE_CD=ET00_1&amp;BLCK_NO=1&amp;CMPT_CD=T0016&amp;TEXT=&gt;
</code></pre>
<p>I can't find reason for that result. Please give me advice.</p>
<p>Thanks you very much.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; 
&gt;&gt;&gt; import re
&gt;&gt;&gt; str3 = "?CNTN_CD=A0002400127&amp;PAGE_CD=ET00_1&amp;BLCK_NO=1&amp;CMPT_CD=T0016&amp;TEXT=한글패러미터"
&gt;&gt;&gt; pattern = re.compile("[a-zA-Z0-9?=&amp;\-_]+")
&gt;&gt;&gt; result = pattern.search(str3)
&gt;&gt;&gt; print(result.group(0))
?CNTN_CD=A0002400127&amp;PAGE_CD=ET00_1&amp;BLCK_NO=1&amp;CMPT_CD=T0016&amp;TEXT=
&gt;&gt;&gt; 
</code></pre>
<p>i test your code, it works as your expect, my python is v2.7</p>
</div>
<div class="post-text" itemprop="text">
<p>You are printing the string representation of the <code>_sre.SRE_Match</code> and it does not guarantee to print all matched characters. I have looked at the CPython source code and found the following <a href="https://github.com/python/cpython/blob/fbb490fd2f38bd817d99c20c05121ad0168a38ee/Modules/_sre.c#L2314" rel="nofollow noreferrer">implementation</a>:</p>
<pre><code>static PyObject *
match_repr(MatchObject *self)
{
    PyObject *result;
    PyObject *group0 = match_getslice_by_index(self, 0, Py_None);
    if (group0 == NULL)
        return NULL;
    result = PyUnicode_FromFormat(
            "&lt;%s object; span=(%d, %d), match=%.50R&gt;",
            Py_TYPE(self)-&gt;tp_name,
            self-&gt;mark[0], self-&gt;mark[1], group0);
    Py_DECREF(group0);
    return result;
}
</code></pre>
<p>As you can see, it outputs only 50 first characters of the group.</p>
<p>You may check it with the following regexes:</p>
<pre><code>In [52]: print(re.compile('.*').search('a' * 48))
&lt;_sre.SRE_Match object; span=(0, 48), match='aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'&gt;

In [53]: print(re.compile('.*').search('a' * 49))
&lt;_sre.SRE_Match object; span=(0, 49), match='aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&gt;

In [54]: print(re.compile('.*').search('a' * 50))
&lt;_sre.SRE_Match object; span=(0, 50), match='aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&gt;
</code></pre>
<p>As you can see, <code>match</code> is always less or equal to 50 characters.</p>
<p>To get the actual matched string you can use <code>group</code> method:</p>
<pre><code>In [55]: print(re.compile('.*').search('a' * 50).group(0))
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

In [56]: print(len(re.compile('.*').search('a' * 50).group(0)))
50
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use this:</p>
<pre><code>[\u0000-\u007F]+
</code></pre>
<p><a href="https://regex101.com/r/9idExf/1" rel="nofollow noreferrer">Demo</a></p>
<p>Sample source: ( <a href="https://ideone.com/wxC7Lb" rel="nofollow noreferrer">run here</a> )</p>
<pre><code>import re
str = "?CNTN_CD=A0002400127&amp;PAGE_CD=ET00_1&amp;BLCK_NO=1&amp;CMPT_CD=T0016&amp;TEXT=한글패러미터"
pattern = re.compile(r"[\u0000-\u007F]+")
result = pattern.search(str)
print(result.group(0))
</code></pre>
</div>
<span class="comment-copy">your string variable is str or str3?</span>
<span class="comment-copy">I'm sorry. It's str.</span>
<span class="comment-copy">avoid using <code>str</code> as variable name... it is a keyword <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">docs.python.org/3/library/functions.html</a></span>
<span class="comment-copy">Thank you. Your advice is very helpful. print(result.group(0)) was the correct answer. I got it.</span>
<span class="comment-copy">@gottaluvflower, welcome</span>
<span class="comment-copy">Thank you very much. It's very helpful.</span>
<span class="comment-copy">@gottaluvflower did the solution solved your problem ? If so, then it is always good to accept the answer. <a href="https://stackoverflow.com/help/someone-answers">How TO</a></span>
