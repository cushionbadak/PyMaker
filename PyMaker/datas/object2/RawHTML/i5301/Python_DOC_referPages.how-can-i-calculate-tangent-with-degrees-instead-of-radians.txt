<div class="post-text" itemprop="text">
<p>I am trying to make a basic tool to make my everyday easier, solving some assignments for me. Unfortunately, I can't figure out how to make it calculate in degrees when tangent is being used.</p>
<p>My code:</p>
<pre><code>import math


class Astro():
    def start(self):
        velocity = input("What is the galaxy's velocity? (m/s) \n")
        peculiar = (float(velocity) - 938600) ** 2
        mass = (3 * float(peculiar) * (10 ** 11) * 50 * (10 ** 6) * (8 * (180 / math.pi))
                * 9.46 * (10 ** 15)) / (2 * 6.67 * (10 ** -11))
        print("The galaxy's mass is " + str(mass) + " kg. \n")


if __name__ == '__main__':
    sup = Astro()
    sup.start()
</code></pre>
<p>EDIT: Sorry for the lack of context; this is about calculating the masses of galaxies using 2 functions, the first one, line 7 to get the peculiar velocity, and the second one in lines 8-9 to get the actual mass of the considered galaxy.</p>
<p>SOLVED: math.tan(8 * pi / 180)</p>
<p>Thank you for all your help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Computers work in radians. Try</p>
<pre><code>answer = tan(angle * pi / 180)
</code></pre>
<p>to use your angle in degrees into a trig function. Or try  </p>
<pre><code>answer = atan(number) * 180 / pi  
</code></pre>
<p>to get answer in degrees.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>math</code> package has the functions <a href="https://docs.python.org/3/library/math.html" rel="nofollow noreferrer"><code>radians</code> and <code>degrees</code></a> but under the hood these are just:</p>
<pre><code>def radians(deg):
    return deg * pi / 180

def degrees(rad):
    return rad * 180 / pi
</code></pre>
<p>Here is a wrapper you can use to make degree-using trig functions (just had it lying around somewhere, although I use <code>numpy</code> instead of <code>math</code>)</p>
<pre><code>import math
import itertools
import functools

def _use_deg(f, arc = False):
    if not arc:
        def df(*args):
            args = list(args)
            for index, value in enumerate(args):
                try:
                    args[index] = math.radians(value)
                except TypeError:
                    pass
            return f(*args)
    else:
        def df(*args):
            return math.degrees(f(*args))
    return functools.wraps(f)(df)


sind = _use_deg(math.sin)
cosd = _use_deg(math.cos)
tand = _use_deg(math.tan)
arcsind = _use_deg(math.asin, True)
arccosd = _use_deg(math.acos, True)
arctand = _use_deg(math.atan, True)
arctan2d = _use_deg(math.atan2, True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't want to get in a fight with the math library. Let the math library give you an answer in radians, then multiply it's answer by <code>180/math.pi</code> to get degrees.</p>
</div>
<span class="comment-copy">It looks like you have an error in your code, masse should be mass on line 10.</span>
<span class="comment-copy">Please update the question with all the information as text in the question. Links to other sites are not a sustainable way to build Stackoverflow.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/math.html#angular-conversion" rel="nofollow noreferrer">docs.python.org/3/library/math.html#angular-conversion</a></span>
