<div class="post-text" itemprop="text">
<p>I came across some <code>urwid</code> <a href="http://urwid.org/tutorial/index.html" rel="nofollow noreferrer">tutorial</a>, which included an example with code such as this:</p>
<pre><code>...
main = urwid.Padding(menu(u'Pythons', choices), left=2, right=2)
top = urwid.Overlay(main, urwid.SolidFill(u'\N{MEDIUM SHADE}'),
    align='center', width=('relative', 60),
    valign='middle', height=('relative', 60),
    min_width=20, min_height=9)
urwid.MainLoop(top, palette=[('reversed', 'standout', '')]).run()
</code></pre>
<p>That <code>u'\N{MEDIUM SHADE}'</code> string literal drove me nuts for almost the entire day until I found out it was included — as comments! — in files under <code>/usr/lib/python3.5/encodings/</code>... But nowhere did I find any hint as to using such a notation. I browsed Python documentation and could find nothing. </p>
<p>Out of curiosity I ran in my python interpreter:</p>
<pre><code>print(u'\N{LOWER ONE QUARTER BLOCK}')
</code></pre>
<p>and I got</p>
<pre><code>▂
</code></pre>
<p>Where does that kind of black magic come from? I mean, where is it explained one can use that... notation (?) to print out special characters using their friendly names? Does Python hide any other surprises like this one?</p>
</div>
<div class="post-text" itemprop="text">
<p>Towards the end of <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="noreferrer">https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals</a>:</p>
<blockquote>
<p>\N{name} - Character named <em>name</em> in the Unicode database</p>
</blockquote>
</div>
<span class="comment-copy">Unicode characters have long names like that</span>
<span class="comment-copy">See <a href="https://docs.python.org/2/library/unicodedata.html" rel="nofollow noreferrer"><b><code>unicodedata</code></b></a>, e.g. <code>print(unicodedata.lookup('MEDIUM SHADE')</code> gives ▒.</span>
<span class="comment-copy">@PeterWood Thanks! It's now mentally bookmarked for life :-) .</span>
<span class="comment-copy">Oh dear... I feel even more embarassed! It seems I overlooked that part of Python documentation about string literals. Thanks a whole bunch.</span>
<span class="comment-copy">@Nasha It was only <a href="https://docs.python.org/3/reference/lexical_analysis.html#id10" rel="nofollow noreferrer">added in 3.3</a>, don't feel so bad.</span>
