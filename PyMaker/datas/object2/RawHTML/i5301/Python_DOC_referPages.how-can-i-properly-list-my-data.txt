<div class="post-text" itemprop="text">
<pre><code>['10', '0', '1915', '387', '1933', '402']
['10', '0', '3350', '387', '3407', '391']
['10', '0', '842', '505', '863', '521']
['2', '29', '2986', '282', '3112', '300']
['2', '29', '2753', '286', '2809', '297']
</code></pre>
<p>My data is a file full of these strings. The first 2 elements, let's take 10 and 0, are the characteristics of a sample, for example 10-1 is a different sample.</p>
<p>What I want is a dictionary where these 2 elements, in this case 10 and 0, are the name under that format 10-0 and 10-0 being a list explained below:</p>
<pre><code>10-0 = [
    [1915, 387, 1933, 402],
    [3350, 387, 3407, 391],
    [842, 505, 863, 521],
 ]
</code></pre>
<p>Same for 2-29 it would be another element of that dictionary containing 2 lists. I referred to <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html</a> but what I have to do is much more complex than their documentation. </p>
</div>
<div class="post-text" itemprop="text">
<p>Consider:</p>
<pre><code>from collections import defaultdict
from pprint import pprint

str_map = str.maketrans("","", " []'\n")  # Eliminate characters ' ', '[',  ']', ''' and '\n'.
my_complicated_data = []
with open("path/to/my_complicated_file.txt", "r") as my_complicated_file:
    for line in my_complicated_file:
        line = line.translate(str_map)
        line = line.split(",")
        my_complicated_data.append(line)

my_dict = defaultdict(list)
for row in my_complicated_data:
    my_dict["-".join(row[:2])].append(row[2:])
pprint(my_dict)
</code></pre>
<p>Output:</p>
<pre><code>defaultdict(&lt;class 'list'&gt;,
        {'10-0': [['1915', '387', '1933', '402'],
                  ['3350', '387', '3407', '391'],
                  ['842', '505', '863', '521']],
         '2-29': [['2986', '282', '3112', '300'],
                  ['2753', '286', '2809', '297']]})
</code></pre>
<p>A defaultdict is a dictionary which default value is executed by the function passed in its creation, so for example if you create a <code>d = defaultdict(int)</code>, <code>d[5]</code> will output <code>0</code>. In case of using <code>list</code> the value is an empty list <code>[]</code>. For a more complex example if you write <code>d = dafaultdict(lambda: [0 ,0])</code> the default value will be a list of length 2 with 2 <code>0</code> in it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this one:</p>
<p>t.txt</p>
<pre><code>['10', '0', '1915', '387', '1933', '402']
['10', '0', '3350', '387', '3407', '391']
['10', '0', '842', '505', '863', '521']
['2', '29', '2986', '282', '3112', '300']
['2', '29', '2753', '286', '2809', '297']
</code></pre>
<p>Program:</p>
<pre><code>file = open('t.txt','r')

l = []
for line in file:
   l += [ eval(line) ]

d = {}

for i in l:
    dkey = str(i[0]) + "-" + str(i[1])
    dValue = i[2:]
    if dkey in d:
        cList = []
        for i in d[dkey]:
            cList.append(i)
        cList.append(dValue)
        d[dkey] = cList
    else:
        d[dkey] = []
        d[dkey].append(dValue)
print(d)
</code></pre>
<p>Outputs:</p>
<pre><code>{'10-0': [['1915', '387', '1933', '402'], ['3350', '387', '3407', '391'], ['842', '505', '863', '521']], '2-29': [['2986', '282', '3112', '300'], ['2753', '286', '2809', '297']]}
</code></pre>
<p>See it in action <a href="https://repl.it/repls/GleefulWindingCurlew" rel="nofollow noreferrer">here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use something like this but before using eval() <a href="https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html" rel="nofollow noreferrer">read this</a> :</p>
<pre><code>import ast
import itertools
final_=[]
with open('lifeu','r') as f:
    for line in f:
        final_.append(ast.literal_eval(line))


final__={}
for j,i in itertools.groupby(sorted(final_),lambda x:(x[0],x[1])):
    final__[j]=list(map(lambda x:x[2:],list(i)))

print(final__)
</code></pre>
<p>output:</p>
<pre><code>{('10', '0'): [['1915', '387', '1933', '402'], ['3350', '387', '3407', '391'], ['842', '505', '863', '521']], ('2', '29'): [['2753', '286', '2809', '297'], ['2986', '282', '3112', '300']]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do something like this</p>
<pre><code>data = [
        ['10', '0', '1915', '387', '1933', '402'],
        ['10', '0', '3350', '387', '3407', '391'],
        ['10', '0', '842', '505', '863', '521'],
        ['2', '29', '2986', '282', '3112', '300'],
        ['2', '29', '2753', '286', '2809', '297'],
        ]


output = dict()

for d in data:
  key = str(d[0]) + "-" + str(d[1])

  if key not in output:
    output[key] = list()

  output[key].append(d[2:])

print(output)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Is this what you want to do?
<strong>Edited</strong></p>
<pre><code>def get_input():
   with open('input.txt','r') as file_input:
      lines = file_input.read().split('\n')

   result = []
   for line in lines:
      # check whether the line is not empty
      if len(line)&gt;0:
         # for a personal script it's ok, but be carefull with this
         result += [ eval(line) ]

   return result

def format_input(lists_input):
   result = {}

   for data in lists_input:
      if len(data)&gt;1:
         key = data[0]+'-'+data[1]
         if not key in result:
            result[ key ] = []
         result[ key ] += [ data[2:] ]

   return result

lists_input = get_input()
print format_input(lists_input)
</code></pre>
</div>
<span class="comment-copy">Of course your real case is more complex than the documentation, it will also cover multiple sections (read from file, parse content, build string key, ...). You learn the basics, then you figure out the specifics. But SO isn't a code-writing or tutorial service, so without a specific problem you don't have a valid question.</span>
<span class="comment-copy">If each row you showed is a string, why not use <code>split()</code> with comma delimiter which creates a list, then use the first two indexes to build the dict. key, and set values? What have you tried so far?</span>
<span class="comment-copy">@jonrsharpe couldn't agree more, but at least some guidance from my first shared data to the second section <code>10-0</code> can be pretty helpful .</span>
<span class="comment-copy">Apparently you <i>could</i> agree more, because <i>"some guidance"</i> is still not a specific problem. Please learn <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and then <a href="https://stackoverflow.com/posts/48457570/edit">edit</a> the question accordingly.</span>
<span class="comment-copy">@StefanPochmann <i>facepalm</i></span>
<span class="comment-copy">Can the answer be adjusted to my first specific issue which is transforming the lines i read in a file to values in the variable <code>my_complited_data</code> the lines are exactly the same as shared in the top of my question.</span>
<span class="comment-copy">@user9266899 Well, you didn't really explain yourself. I'll edit the answer tho.</span>
<span class="comment-copy">@user9266899 There you go. The file I used is exactly your 5 lines, copy and paste. And BTW, I don't understand the downvoting.</span>
<span class="comment-copy">Same, i'll test and accept if it works out.</span>
<span class="comment-copy">Previously just because SO isn't a code writing service and it's not helpful to let people treat it as one, but now also because of the bad parsing.</span>
<span class="comment-copy">Can the answer be adjusted to my first specific issue which is transforming the lines i read in a file to values in the variable <code>l</code> the lines are exactly the same as shared in the top of my question.</span>
