<div class="post-text" itemprop="text">
<p>I have these lines to get filenames in a folder.</p>
<pre><code># -*- coding: utf8 -*-

import os, sys

reload(sys)  
sys.setdefaultencoding('utf8')

file_folder = "C:\\tem\\"

root, dirs, files = os.walk(file_folder).next()

for path, subdirs, files in os.walk(root):
    for f in files:
        print file_folder + f
</code></pre>
<p>It doesn’t work when the folder contains .xlsb files. (Excel Binary Workbook file)</p>
<p>The error returned is:</p>
<pre class="lang-none prettyprint-override"><code>[Decode error - output not utf-8]
</code></pre>
<p>I tried changed the last line to encode/decode to make them work but still can’t.</p>
<p>How can I have them displayed properly?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your output terminal doesn't handle the Unicode characters in some of your filenames.  The easiest solution is to write the output to a UTF-8-encoded file and then read the result with a Unicode-capable editor using a font that supports the Unicode characters used.  Another solution where you can still use <code>print</code> is to get a UTF-8-capable IDE.</p>
<pre><code>#!python2
import os,io

root = u'C:\\tem'  # Use a Unicode root with os.walk() to get Unicode filenames.

with io.open('files.txt','w',encoding='utf8') as out:
    for path, subdirs, files in os.walk(root):
        for f in files:
            out.write(os.path.join(path,f) + u'\n')
</code></pre>
<p>Notes:</p>
<ul>
<li><code>#coding:utf8</code> only declares the encoding of the <em>source file</em>.  If your source is all ASCII characters it doesn't do anything.</li>
<li><a href="https://anonbadger.wordpress.com/2015/06/16/why-sys-setdefaultencoding-will-break-code/" rel="nofollow noreferrer">https://anonbadger.wordpress.com/2015/06/16/why-sys-setdefaultencoding-will-break-code/</a></li>
</ul>
</div>
<span class="comment-copy">I don't think it's because of the file extension but rather the file name.  What are the full path + file name to the files that failed?  Or maybe just don't set the system default encoding at all.</span>
<span class="comment-copy">@Idlehands, you are right, it's not about the file extension. actually the problem lies in file names. let me delete this question in 10 minutes. anyway if the file names contains non utf-8 characters, the lines shall be working...</span>
<span class="comment-copy">check out the answer here <a href="https://stackoverflow.com/questions/2276200/changing-default-encoding-of-python#17628350" title="changing default encoding of python%2317628350">stackoverflow.com/questions/2276200/…</a>  Python 3 is the fix.  but if you absolutely need python2 then try print(u"{}".format(file_folder + f))  it could help.</span>
<span class="comment-copy">@Back2Basics, thank you for the link and the line. tried print(u"{}".format(file_folder + f)) and it still cann't. the reason being some file names contains a dash.</span>
<span class="comment-copy">I suggest using <a href="https://docs.python.org/3/library/glob.html#module-glob" rel="nofollow noreferrer"><code>glob</code></a> in the standard library.</span>
<span class="comment-copy">thank you. i follow the same and it still gives "UnicodeDecodeError: 'ascii' codec can't decode byte 0xa8 in position 68: ordinal not in range(128)". it works fine if the folder doesn't contain the files of names contain the look like dash.</span>
<span class="comment-copy">@MarkK  you used the <i>exact</i> code above?  That particular error only occurs if you mix byte strings and Unicode strings.</span>
<span class="comment-copy">superb! excuse mine carelessness. the u' matters for the root path. if there's no u', it doesn't work. with the u', it works perfectly!</span>
