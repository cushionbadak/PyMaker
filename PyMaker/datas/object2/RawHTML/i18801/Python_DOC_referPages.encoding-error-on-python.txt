<div class="post-text" itemprop="text">
<p>I am executing the following code on Python:</p>
<pre><code>from csv import reader, writer


def my_function(file1, file2, output, xs, stringL = 'k', delim = ','):

    with open(file1, 'r') as text, open(file2, 'r') as src, open(output, 'w') as dst:
        for l in text:
            for x in xs:
                if stringL in l:
                    print("found!")

        my_reader = reader(src, delimiter = delim)
        my_writer = writer(dst, delimiter = delim)

        columnNumber = 0
        for column in zip(*my_reader):
            print(column, columnNumber)
            columnNumber += 1


if __name__ == '__main__':
        from sys import argv
    if len(argv) == 5:
        my_function(argv[1], argv[2], argv[3], argv[4])
    elif len(argv) == 6:
        my_function(argv[1], argv[2], argv[3], argv[4], argv[5])
    elif len(argv) == 7:
        my_function(argv[1], argv[2], argv[3], argv[4], argv[5], argv[6])
    else:
        print("Invalid number of arguments")
    print("Done")
</code></pre>
<p>file1 is a text file like:</p>
<pre><code>a
k
k
a
k
k
a
a
a
z

a
a
a
</code></pre>
<p>file2 is any csv file</p>
<p>I encounter the error:</p>
<pre><code>  File "error.py", line 16, in my_function
  for column in zip(*my_reader):
  File "/usr/lib/python3.2/codecs.py", line 300, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xde in position 12: invalid continuation byte
</code></pre>
<p>I found the same error <a href="https://stackoverflow.com/questions/12468179/unicodedecodeerror-utf8-codec-cant-decode-byte-0x9c">here</a> with a solution to it.
However, I have trouble adapting this solution to my code... I tried several things like </p>
<pre><code>column = unicode(column, errors = 'replace')
</code></pre>
<p>but it still doesn't work.</p>
<p>Could you please help me?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 opens text files by default as UTF-8 to decode to Unicode values. Your inputfile is <em>not</em> UTF-8 however, and decoding fails.</p>
<p>It is impossible to deduce from the error message or your post what the correct encoding is, but you need to find out and specify it when opening the file:</p>
<pre><code>open(file2, 'r', encoding='*correct encoding for file2*', newline='') as src
</code></pre>
<p>Note the <code>newline=''</code> as well; see the <a href="http://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow"><code>csv.reader()</code> documentation</a>.</p>
<p>Your <code>sys.argv</code> handling is overly verbose, just use:</p>
<pre><code>if __name__ == '__main__':
    from sys import argv
    if 5 &lt;= len(argv) &lt;=7:
        my_function(*argv[1:])
    else:
        print("Invalid number of arguments")
    print("Done")
</code></pre>
</div>
<span class="comment-copy">You can call a function with a list as separate arguments with the <code>*expression</code> syntax:  <code>my_function(*argv[1:])</code>. That saves you a lot of code in the <code>__main__</code> block there.</span>
<span class="comment-copy">Hi Martijn, thanks for the answer. I tried several encodings (ascii, utf-16, latin-1). For ascii and utf-16, I got the same error. But for latin-1 (iso-8859-1), I have the following:         for column in zip(*my_reader): _csv.Error: line contains NULL byte Does that mean that this is the correct encoding but I have another problem?</span>
<span class="comment-copy">@bigTree: Sounds like you got closer. NULL bytes are used in UTF-16 and UTF-32, but it sounds like it might be a different encoding still.  For what it is worth, the <code>\xde</code> byte is a <code>Ãž</code> character (LATIN CAPITAL LETTER THORN ) in Latin 1. Probably not what you were expecting to find..</span>
<span class="comment-copy">What is \xde? I think the encoding is Latin 1 (I tried another code on my file and it worked:  <code>str_decode = lambda x: x.decode('ISO-8859-1')   def columns_average(fr,deli=";"):     average = list()     func = lambda x: str_decode(x).isnumeric()     for column in izip(*reader(fr, delimiter=deli)):         strength = [float(x) for x in ifilter(func, column)]         s, n = fsum(strength), len(strength)         average.append( s/n if n!=0 else 0.0 )     fr.seek(0)     return map(str,average)</code> But I didn't have this error (about NULL Byte...)</span>
<span class="comment-copy">Sorry, without seeing the files it is impossible to say.</span>
<span class="comment-copy">Here is an extract of the file:  <a href="http://dl.free.fr/eH5pewquP" rel="nofollow noreferrer">dl.free.fr/eH5pewquP</a></span>
