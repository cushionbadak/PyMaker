<div class="post-text" itemprop="text">
<p>I am trying to send a file from a server to client but get errors. Please let me know where I am doing wrong.</p>
<p>This is my server code:</p>
<pre><code>if msg in data.keys():
 print("Requested file exists", msg)
     f=open(msg,"rb")
     datam= f.read(1024)

     while (datam):

      if(s.send(datam)):

         print "sending data"

         datam = f.read(1024)



      s.close()

      f.close
else:
     print("File Not found",msg)
     print("File Not found",data.keys())
     c.close()                # Close the connection
</code></pre>
<p>where msg contains the path address where file exists
c=client socket   s=server socket
I want to read that file and send it to client but I get this error</p>
<pre><code>Got connection from ('127.0.0.1', 42330)
('Requested file exists', '/home/beenish/Pictures/pew.txt')
Traceback (most recent call last):
File "server.py", line 41, in &lt;module&gt;
if(s.send(datam)):
socket.error: [Errno 32] Broken pipe
</code></pre>
<p>On client side, I have written this code to recieve that file</p>
<pre><code>s.listen(15)
f = open('\home\beenish\pictures\lol.txt', 'wb')
data = s.recv(1024)

while(data):


 f.write(data)

 data=s.recv(1024)

  f.close()
  s.close                     # Close the socket when done
</code></pre>
<p>where s is the client socket</p>
<p>Here I get this error</p>
<pre><code>Traceback (most recent call last):
 File "client.py", line 26, in &lt;module&gt;
 s.listen(15)
 File "/usr/lib/python2.7/socket.py", line 224, in meth
 return getattr(self._sock,name)(*args)
 socket.error: [Errno 22] Invalid argument
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>On the client side you have an error on this line:</p>
<pre><code>s.listen(15)
</code></pre>
<p>And the <a href="http://docs.python.org/3/library/socket.html" rel="nofollow">Python docs</a> say that the argument has a system dependant maximum, usually 5. So try finding out the maximum for your system of just use a lower value and see what happen.</p>
<p>The server side error could be a side effect of the client side failure.</p>
</div>
<div class="post-text" itemprop="text">
<p>That is the kind of error you get when you call <a href="http://docs.python.org/2/library/socket.html#socket.socket.listen" rel="nofollow"><code>socket.listen</code></a> before calling <a href="http://docs.python.org/2/library/socket.html#socket.socket.bind" rel="nofollow"><code>socket.bind</code></a>. Keep in mind that a server always has to follow the sequence <code>socket()</code>, <code>bind()</code>, <code>listen()</code> and <code>accept()</code> in that specific order.</p>
</div>
<span class="comment-copy">It's good practice to put the send/reception into a try/catch/finally block : when the communication goes sour, you just close cleanly the socket and prevent your program from blowing up.</span>
<span class="comment-copy">On server side I am already following this same sequence. I think there is some problem with send method in while loop at server side but I am not sure...</span>
<span class="comment-copy">@Zara I've checked it out again, and now I see something else: You are calling <code>bind</code> on the client, while you should only call to <code>socket()</code> and <code>connect()</code>.</span>
<span class="comment-copy">Can you please elaborate... I don't get it</span>
<span class="comment-copy">@Zara You only call <code>bind</code> on the code for the server, not the client. Check out <a href="http://docs.python.org/2/library/socket.html#example" rel="nofollow noreferrer">this example</a> to see the needed calls for a server and for a client.</span>
