<div class="post-text" itemprop="text">
<p>I have been working with PHP for about 7 months now, been in Object oriented for half year, and I find it quite easy.</p>
<p>Python's syntax isn't that hard, aswell.</p>
<p>I've been getting intersted in learning python, I started learning java 3 days ago, and got a bit boring (Since I used to work with websites all the time, I am not really interested in software programming).</p>
<p>A few questions about Python:</p>
<ul>
<li>Python is not only used for webs, but also used for computer softwares. Is that correct?</li>
<li>Python is usually only used on huge systems such as Twitter, Google, and more, but is faster and more stable than PHP?</li>
<li>Is there a full tutorial, on how to set-up Python on XAMPP? I've never installed such things, just Xampp and MySQL. EDIT: How to start making websites with Python, I mean how do I install it?</li>
<li>In PHP, you simple make <code>&lt;? ?&gt;</code> tags or <code>&lt;?php ?&gt;</code>, do you do that in Python? if not, is that correct that you have to include HTML in python, the same way you do in a echo in PHP? <code>echo "&lt;span&gt;hey&lt;/span&gt;"</code>?</li>
</ul>
<p>That's all I wanted to know.
Thank you! I hope you can answer these questions for me.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Python is not only used for webs, but also used for computer softwares. Is that correct?</p>
</blockquote>
<p>Definitely true. I have seen Python used for most types of computer software where you would also expect to find Java, C#, C, Matlab and so on.</p>
<blockquote>
<p>Python is usually only used on huge systems such as Twitter, Google, and more, but is faster and more stable than PHP?</p>
</blockquote>
<p>We use Python for some very large scale, 24x7 systems for a billions-of-dollars industry. But Python is also my language of choice when doing some quick-and-dirty evening hack for some hobby project.</p>
<p>I would not say that it is faster and/or more stable than PHP (I simply don't know), but for me, it makes me focus more on writing high quality code than any other dynamic language I've used. I think every language has a reason why it exists, and almost no language is better in all cases. For me, Python is the language of choice for web projects (unless I have to use Java for some external reason).</p>
<blockquote>
<p>Is there a full tutorial, on how to set-up Python on XAMPP? I've never installed such things, just Xampp and MySQL.</p>
</blockquote>
<p>I have no experience with <a href="http://www.apachefriends.org/en/xampp.html" rel="nofollow">XAMPP</a>, but it seems a bit redundant in the Python world. I strongly recommend you to check out <a href="https://www.djangoproject.com" rel="nofollow">Django</a> for web applications. In most production applications, I tie Django with <a href="http://nginx.org" rel="nofollow">NginX</a> or <a href="http://www.lighttpd.net" rel="nofollow">lighty</a> using <a href="https://code.djangoproject.com/wiki/DjangoAndNginx" rel="nofollow">FastCGI or the like</a>. It is efficient and quick to set up.</p>
<blockquote>
<p>In PHP, you simple make tags or , do you do that in Python? if not, is that correct that you have to include HTML in python, the same way you do in a echo in PHP? echo "hey"?</p>
</blockquote>
<p>If you do check out Django, check out its <a href="https://docs.djangoproject.com/en/dev/topics/templates/" rel="nofollow">template engine</a>. It is really powerful while still simple (at least compared to ASP.Net which is the only major web template engine I've used before).</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://www.learnpython.org/" rel="nofollow">This</a> is one of my favorite beginner guides, because it gets you started so quickly</p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>Yes.</li>
<li>This is a subjective question. Following best practices, using efficient data structures, and using efficient algorithms will impact performance far more than any language differences. See <a href="https://stackoverflow.com/questions/62333/python-vs-php-python-runs-slower">this question</a> for more details on "benchmarks," which again, do not really prove anything.</li>
<li>I would suggest <a href="http://www.leonardaustin.com/technical/install-python-and-django-with-xampp-on-windows-7" rel="nofollow noreferrer">this tutorial</a>, it has you use <code>mod_wsgi</code> instead of executing Python scripts with CGI. You do not have to use the Django framework.</li>
<li>Most Python web frameworks will separate views and logic. Some templating engines will still allow you to use logic in templates. See <a href="http://wiki.python.org/moin/Templating" rel="nofollow noreferrer">this list</a> for more information on templating engines.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>Yes. Python can be used in a similar manner to PHP using <a href="https://www.djangoproject.com" rel="nofollow">Django</a> and other such web frameworks, and it of course inherently can be used for any computing task, being turing complete and whatnot.</li>
<li>Python usually does most things faster than PHP, but stability and performance are affected more by the developer's skill than by the language choice.</li>
<li>I wouldn't know.</li>
<li>Yes, I believe that's how Django works, and other web frameworks ought to work the same. I'm not sure about inline code, because I think that's considered poor practice - you tend to make calls to external Python code, I believe. You typically do not write HTML in your Python code, although there might be libraries which build HTML from inside Python. (I wouldn't know, since I haven't done any web programming with Python.)</li>
</ul>
<p>I'd also like to recommend you take the Python course at <a href="http://www.codecademy.com" rel="nofollow">Codeacademy</a>. It'll take you through the syntax, data structures, and neat features of Python; it's a step-by-step, interactive learning approach. It's basic, but a nice start which gives you feedback on your progress.</p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>Python is used for large software projects yes. That is because you can easily link it to C and C++ but also because it is easy to do abstraction in Onject Oriented Style and because it has <a href="http://docs.python.org/3/library/index.html" rel="nofollow">"Batteries included": e.g. a large STL.</a></li>
<li>By it self Python is not always the fastest, but because you can link it to C and C++ you gain performance. See <a href="http://benchmarksgame.alioth.debian.org/u64q/benchmark.php?test=all&amp;lang=python3&amp;lang2=php&amp;data=u64q" rel="nofollow">comparison between PHP and Python and Java</a>.</li>
<li><strong>You should not start mixing Python and HTML</strong>. Instead you should <a href="https://docs.djangoproject.com/en/1.5/intro/tutorial01/" rel="nofollow">learn a Python Webframework like Django</a>. It will also save you the need to set up LAMP for the beginning, since Django has a built in HTTP server. </li>
</ul>
<p>For getting starting with Python: <a href="http://learnpythonthehardway.org/" rel="nofollow">http://learnpythonthehardway.org/</a></p>
<p>You should also get to know <a href="http://ipython.org/" rel="nofollow">IPYTHON</a> and <a href="https://pypi.python.org/pypi/pip" rel="nofollow">python's packages</a>. The former will help you inspecting objects and getting help quickly. The later is more then the Batteries included ...</p>
</div>
<div class="post-text" itemprop="text">
<p>1) Python is a general purpose language, like Java, C++, perl, ruby, etc. </p>
<p>2) Python is a general purpose language and can be applied to any problem.  php is optimized for web programming, so it might be faster than python.  </p>
<p>3) The first thing you want to do is just install the latest version of python on your system, and start messing around with writing short programs.  You want to do that before you get involved in a more complicated setting, like web programming, where there are a lot of moving parts.  </p>
<p>4) Python doesn't use script tags like php. Not to worry, many people consider mixing code and html to be bad practice.</p>
<p>I suggest you start with some simple cgi scripts.   And then you can explore the many <code>web frameworks</code> for python.  A web framework is usually a complex system, which you use to program your website.  Read this overview of python and the web:</p>
<p><a href="http://docs.python.org/2/howto/webservers.html" rel="nofollow">http://docs.python.org/2/howto/webservers.html</a></p>
</div>
<span class="comment-copy">Looking forward to the answers without any rant on this on :-)</span>
<span class="comment-copy">although I respect your thirst of knowledge and ambition, writing <code>been in Object oriented for half year, and I find it quite easy.</code> could seem a bit arrogant at least... Anyway you question is actually 4 questions and some are very broad, so not for SO I think.</span>
<span class="comment-copy">@FredrikPihl inb4 question closed</span>
<span class="comment-copy">Go through the <a href="http://docs.python.org/2.7/tutorial/index.html" rel="nofollow noreferrer">official tutorial</a>, then get back here if you have some additional questions</span>
<span class="comment-copy">You aren't supposed to ask more than one question on SO, at least, not in this broad sense. It's reasonable to ask "why does my code throw this exception, and how can I fix it?" Or something of that sort. Still, I'll answer your question.</span>
