<div class="post-text" itemprop="text">
<p>I'm learning python, and I have a novice question about initializing sets.  Through testing, I've discovered that a set can be initialized like so:</p>
<pre><code>my_set = {'foo', 'bar', 'baz'}
</code></pre>
<p>Are there any disadvantages of doing it this way, as opposed to the standard way of:</p>
<pre><code>my_set = set(['foo', 'bar', 'baz'])
</code></pre>
<p>or is it just a question of style?</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two obvious issues with the set literal syntax:</p>
<pre><code>my_set = {'foo', 'bar', 'baz'}
</code></pre>
<ol>
<li><p>It's not available before Python 2.7</p></li>
<li><p>There's no way to express an empty set using that syntax (using <code>{}</code> creates an empty dict)</p></li>
</ol>
<p>Those may or may not be important to you.</p>
<p>The section of the docs outlining this syntax is <a href="http://docs.python.org/2/reference/expressions.html#set-displays">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Compare also the difference between <code>{}</code> and <code>set()</code> with a single word argument.</p>
<pre><code>&gt;&gt;&gt; a = set('aardvark')
&gt;&gt;&gt; a
{'d', 'v', 'a', 'r', 'k'} 
&gt;&gt;&gt; b = {'aardvark'}
&gt;&gt;&gt; b
{'aardvark'}
</code></pre>
<p>but both <code>a</code> and <code>b</code> are sets of course.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="http://docs.python.org/3/tutorial/datastructures.html#sets" rel="noreferrer">Python 3 documentation</a> (<strong>the same holds for python 2.7</strong>):</p>
<blockquote>
<p>Curly braces or the set() function can be used to create sets. Note:
  to create an empty set you have to use set(), not {}; the latter
  creates an empty dictionary, a data structure that we discuss in the
  next section.</p>
</blockquote>
<p>in python 2.7:</p>
<pre><code>&gt;&gt;&gt; my_set = {'foo', 'bar', 'baz', 'baz', 'foo'}
&gt;&gt;&gt; my_set
set(['bar', 'foo', 'baz'])
</code></pre>
<p>Be aware that <code>{}</code> is also used for <code>map</code>/<code>dict</code>:</p>
<pre><code>&gt;&gt;&gt; m = {'a':2,3:'d'}
&gt;&gt;&gt; m[3]
'd'
&gt;&gt;&gt; m={}
&gt;&gt;&gt; type(m)
&lt;type 'dict'&gt; 
</code></pre>
<p>One can also use comprehensive syntax to initialize sets:</p>
<pre><code>&gt;&gt;&gt; a = {x for x in """didn't know about {} and sets """ if x not in 'set' }
&gt;&gt;&gt; a
set(['a', ' ', 'b', 'd', "'", 'i', 'k', 'o', 'n', 'u', 'w', '{', '}'])
</code></pre>
</div>
<span class="comment-copy">The documentation does mention it, just not there. Note that that's the documentation for an deprecated module, the <i>real</i> sets are now builtin. It's in the "Whatâ€™s New in Python 2.7" document, and the language reference briefly describes it: <a href="http://docs.python.org/2/reference/expressions.html#set-displays" rel="nofollow noreferrer">docs.python.org/2/reference/expressions.html#set-displays</a></span>
<span class="comment-copy">@delnan I use python 2.7, so I didn't think to look in the python 3 docs.  The link I posted is for 2.7, but it strangely doesn't mention this.</span>
<span class="comment-copy">I since edited my comment, the 2.7 docs also mention this. The link you posted is outdated, a relic of the past, wrong, deprecated. Forget that it exists and use what it itself tells you to use instead: <a href="http://docs.python.org/2/library/stdtypes.html#set" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#set</a> and <a href="http://docs.python.org/2/library/stdtypes.html#frozenset" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#frozenset</a></span>
<span class="comment-copy">@delnan Thanks for helping me out.  I edited the question so that I no longer say there is no documentation for it (although there are few examples mentioning this online).</span>
<span class="comment-copy">For passer by: Pycharm warns against using a function call when one can use a literal - there may be performance reasons - so do prefer the set literal way in new code</span>
<span class="comment-copy">that's why I like to remind myself the set constructor as <code>set([])</code> rather than just <code>set()</code>.</span>
<span class="comment-copy"><code>set()</code> always take a single argument. A single iterable.</span>
<span class="comment-copy">@GeorgeKettleborough a single <i>or no</i> arguments, the latter to create an empty set.</span>
