<div class="post-text" itemprop="text">
<p>My today's task is to create a Python script (say <strong>A.py</strong>) which can do the following things:</p>
<ul>
<li>Start a C program (say <strong>CProg</strong>) passing some params</li>
<li>Start another Python script (say <strong>B.py</strong>) passing other params</li>
<li>Join/Wait until <strong>B.py</strong> has finished</li>
<li>Send a SIGINT to <strong>CProg</strong></li>
<li>Iterate (this won't be a problem at all I think :P)</li>
</ul>
<p>Since I'm pretty new in developing Python scripts and my mind is quite full of C/C++ thread/join/execve/... I'd like to ask you if there's a proper way to accomplish my task. I've read some related topics on SO (some talk about PIPEs or Execl) but I'm not sure what to use yet.</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/3/library/subprocess.html" rel="nofollow">subprocess</a> module.</p>
<pre><code>import os
import signal
import subprocess
import sys

params = [...]
for param for params:
    proc = subprocess.Popen(['/path/to/CProg', param.., param..])
    subprocess.call([sys.executable, 'B.py', param.., param...])
    os.kill(proc.pid, signal.SIGINT)
    proc.wait()
</code></pre>
</div>
<span class="comment-copy">LOL ... have you given A.py an attempt at all? if you are used to threads in C the principles are the same in any language... <a href="http://stackoverflow.com/questions/2846653/python-multithreading-for-dummies" title="python multithreading for dummies">stackoverflow.com/questions/2846653/â€¦</a> has a bunch of starting point answers for you</span>
