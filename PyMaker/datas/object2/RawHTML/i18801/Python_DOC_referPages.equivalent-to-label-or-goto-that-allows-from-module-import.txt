<div class="post-text" itemprop="text">
<p>I've developed a simple multilingual console-based set of calculators, my problem is, in the first execution when the user chooses his language he'll get two times the software's header.</p>
<pre><code>------------------------------------------------------
Trooper Math Suite - ver. 0.1.5.1
------------------------------------------------------
Choose your default language:
------------------------------------------------------
1. English
2. Português Brasileiro
3. Español
------------------------------------------------------
You: 1
------------------------------------------------------
Trooper Math Suite - ver. 0.1.5.1
------------------------------------------------------
Select the calculator:
------------------------------------------------------
1. Biquadratic Equations Calculator
2. Pythagorean Theorem Calculator
------------------------------------------------------
You: 
</code></pre>
<p>The launcher's code is:</p>
<pre><code># tms.py - launcher

ver = "0.1.5.1"
sep = "-" * 54

print(sep)
print("Trooper Math Suite - ver. {0}".format(ver))
print(sep)

try:
    from config import *

    if default_lang == "1":
        print("""Select the calculator:\n{0}
1. Biquadratic Equations Calculator
2. Pythagorean Theorem Calculator\n{0}""".format(sep))
        go = input("You: ")
        print(sep)
        if go == "1": import bc
        elif go =="2": import pc

    if default_lang == "2":
        print("""Selecione a calculadora:\n{0}
1. Calculadora de Equações Biquadradas
2. Calculadora do Teorema de Pitágoras\n{0}""".format(sep))
        go = input("You: ")
        print(sep)
        if go == "1": import bc
        elif go =="2": import pc

    if default_lang == "3":
        print("""Seleccione la calculadora:\n{0}
1. Calculadora de Ecuaciones Bicuadráticas
2. Calculadora de Teorema de Pitágoras\n{0}""".format(sep))
        go = input("You: ")
        print(sep)
        if go == "1": import bc
        elif go =="2": import pc

except:
    print("""Choose your default language:\n{0}
1. English
2. Português Brasileiro
3. Español\n{0}""".format(sep))
    language=input("You: ")

    while language != "1" and language != "2" and language != "3":
        print(sep)
        print("You must choose between 1, 2 or 3.")
        print(sep)
        language=input("You: ")

    file = open("config.py", "w")
    file.write('default_lang = "{0}"\n'.format(language))
    file.close()
    import tms
</code></pre>
<p>I've googled and people suggest to use functions like def lang() but I can't do that because:</p>
<pre><code>SyntaxError: import * only allowed at module level
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The best solution is not to use <code>import *</code> at all. Instead, leave the module namespace in-tact, and just use <code>import config</code> and <code>config.some_object</code> where you need things from it.</p>
<p>Arguably, even better would be to use another format for your configuration files like <a href="http://docs.python.org/3/library/json.html" rel="nofollow">JSON</a>. This will make working with config files easier, and avoid the possibility of malicious config files.</p>
</div>
<span class="comment-copy">Note that when you are working with files, you should always use <a href="http://www.youtube.com/watch?v=lRaKmobSXF4" rel="nofollow noreferrer">the <code>with</code> statement</a> to avoid bugs and increase readability.</span>
<span class="comment-copy">If you want to obtain maintainability in your application, I highly suggest looking into properly incorporating internationalization (aka i18n).  Documentation can be found <a href="http://docs.python.org/3.3/library/i18n.html" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">I've used <code>import config</code> and placed the try/except inside lang(), then I called it. Now I'm getting the following error: <code>NameError: name 'language' is not defined</code> It seems I can't declare <code>language</code> inside a definition.</span>
<span class="comment-copy">If you define a variable in a function, you need too either return that value (potentially inside a data structure) to use it, or use globals (which is generally a bad idea) or a class and attributes. I suggest reading some basic tutorials on functions in Python.</span>
