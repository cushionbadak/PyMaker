<div class="post-text" itemprop="text">
<p>I have some code as shown below, but the timezone %Z is returning: 01:04:48 GMT Daylight Time</p>
<p>I need it return: 01:04:48 GMT</p>
<pre><code>import time

timenew = time.strftime('%H:%M:%S %Z')
print timenew
</code></pre>
<p>Anyone have any idea how I can fix/do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Lazy way:</p>
<pre><code>time.strftime('%H:%M:%S %Z')[:13]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <code>%Z</code> isn't <a href="http://docs.python.org/3/library/time.html#time.strftime" rel="nofollow">documented</a> to give you any specific format at all; it just gives you:</p>
<blockquote>
<p>Time zone name (no characters if no time zone exists).</p>
</blockquote>
<p>With CPython 2.7 or 3.3 on POSIX platforms, it will <em>usually</em> give you something in the format <code>EST</code>/<code>EDT</code> for the major US timezones, but it may give you something in the format <code>GMT</code>/<code>GMT Daylight Time</code> (or <code>British Summer Time</code> or <code>GMT Summer Time</code>) for the major EU timezones, but that isn't guaranteed anywhere at all, and what you get elsewhere is hard to predict.</p>
<p>So, if you only care about your specific platform, and only about the major US and EU timezones, and you know that it's giving you <code>GMT Daylight Time</code> (rather than, say, <code>British Summer Time</code>, which you presumably don't want to truncate to <code>Bri</code>), you can do something like this:</p>
<pre><code>tz = time.strftime('%Z')[:3]
if tz.endswith('DT'): tz = tz[0] + 'ST'
timenow = time.strftime(''%H:%M:%S ') + tz
</code></pre>
<hr/>
<p>If you look at <a href="http://hg.python.org/cpython/file/2.7/Modules/timemodule.c#l390" rel="nofollow">the source</a>, you can see that <code>time.strftime</code> ultimately just calls your platform's <code>strftime</code>. On POSIX platforms, <a href="http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html" rel="nofollow">the standard</a> defines %Z as:</p>
<blockquote>
<p>Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [tm_isdst]</p>
</blockquote>
<p>Although it isn't stated very clearly on that page, ultimately, what you get is the value of the extern variable <a href="http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html" rel="nofollow"><code>tzname</code></a>[0] or <code>tzname</code>[1] depending on isdst, and Python exposes <a href="http://docs.python.org/2/library/time.html#time.tzset" rel="nofollow"><code>tzset</code></a>, so you can do something like this:</p>
<pre><code>os.environ['TZ'] = 'GMT'
time.tzset()
</code></pre>
<p>And now, '%Z' is guaranteed to return <code>GMT</code>. Or you can leave Daylight/Summer Time support in, but just give both the same name:</p>
<pre><code>os.environ['TZ'] = 'GMT+00GMT'
</code></pre>
<p>Or, ideally, you can feed in the right DST rules for the active timezone, just replacing the name.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can force it to GMT using the gmtime:</p>
<pre><code>In [11]: time.strftime('%H:%M:%S %z', time.gmtime())
Out[11]: '00:13:17 +0000'
</code></pre>
<p>However, it's now 00:13 GMT (rather than 1:13 DST).</p>
</div>
<div class="post-text" itemprop="text">
<p>GMT does not adjust for daylight savings time. You can hear it from the horse's mouth on <a href="http://wwp.greenwichmeantime.com/what-is-gmt/" rel="nofollow">this</a> web site. "%Z" just means:</p>
<blockquote>
<p>Time zone name (no characters if no time zone exists).</p>
</blockquote>
<p>So you can just strip off the string.</p>
</div>
<span class="comment-copy">I doubt <code>%z</code> is actually giving you <code>GMT Daylight Time</code>. Depending on your platform and version, it's almost certainly going to give you either a numeric offset (like <code>+0100</code>) or an error. Did you mean <code>%Z</code>?</span>
<span class="comment-copy">Yes, my bad. I'll edit (this was just an example)</span>
<span class="comment-copy">This smells like a bit of an <a href="http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a>. Why do you want to do this?</span>
<span class="comment-copy">As @AndyHayden points out elsewhere, "GMT Daylight Time" isn't a real timezone—and, if it's what your platform calls "British Summer Time" or some equivalent, 01:04:48 local is actually going to be 00:04:48 GMT, not 01:04:48 GMT.</span>
<span class="comment-copy">Exactly what I need, the other's are overcomplicating the issue over potentially incorrect outcomes for my means it makes no difference.  All upvoted either way.</span>
<span class="comment-copy">The thing is GMT isn't so much a time zone as a time standard, the UK has summertime but GMT doesn't shift (which I think is different to how other timezones work).</span>
<span class="comment-copy">@AndyHayden: Yes, it's completely inaccurate to call British Summer Time "GMT". But that isn't really different to how other timezones work—it's also inaccurate to call Pacific Daylight Time "PST". And anyway, that's what the OP asked for.</span>
<span class="comment-copy">tzset() is only available on Unix.</span>
<span class="comment-copy">@Brent81: Since you only want it "on POSIX platforms", why do you think that's an issue?</span>
<span class="comment-copy">@abarnert tks for your comment, I just want to add a tip. I'm not the questioner.</span>
<span class="comment-copy">I don't think this is what the OP actually wants.</span>
<span class="comment-copy">@abarnert having it say 01:00 GMT (when it's not) doesn't make any sense (and is wrong!), but you may be right...</span>
<span class="comment-copy">I agree that it doesn't make sense, but it is exactly, word for word, what the OP asked for.</span>
<span class="comment-copy">If he's getting something called "GMT Daylight Time" from his platform, the fact that no such timezone exists doesn't help him know what to do with it. Also, this seems like a comment on either the other Brent's answer or mine (which both show ways to strip it) rather than a separate answer.</span>
