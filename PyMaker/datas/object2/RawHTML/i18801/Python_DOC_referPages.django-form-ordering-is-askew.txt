<div class="post-text" itemprop="text">
<p>I am trying to create a form using django form library, yet when viewing the model populated by the form, the values are out of order..for no apparent reason.</p>
<p>Here is my view:</p>
<pre><code>def reoccurring_view(request):
if request.method == 'POST':
    form = ReoccurringForm(request.POST)
    counter = 0
    if form.is_valid():
        for key, value in request.POST.iteritems():
            counter += 1
            if value is not None:
                day = itemize(value, counter)
                add = Reoccurring(day.Day, day.N, day.S, day.E)
                add.save()
else:
    form = ReoccurringForm()
return render(request, 'Reoccurring.html', {'form': form})
</code></pre>
<p>here is my template:</p>
<pre><code>&lt;form action="" method="post"&gt;
        &lt;table&gt;
            {{ form.as_table }}
        &lt;/table&gt;
        {% csrf_token %}
        &lt;input class="btn btn-primary" style="float: left;" type="submit" value="Submit"&gt;
&lt;/form&gt;
</code></pre>
<p>here is the resulting html form (note that it is in order):</p>
<pre><code>Monday:

Tuesday:

Wednesday:

Thursday:

Friday:

Saturday:

Sunday:
</code></pre>
<p>here is my form class:</p>
<pre><code>class ReoccurringForm(forms.Form):
    monday = forms.CharField(required=False)
    tuesday = forms.CharField(required=False)
    wednesday = forms.CharField(required=False)
    thursday = forms.CharField(required=False)
    friday = forms.CharField(required=False)
    saturday = forms.CharField(required=False)
    sunday = forms.CharField(required=False)
</code></pre>
<p>Yet here are is the resulting populated model via admin:</p>
<pre><code>1   [u'monday'] [u'06:00 p.m.'] [u'07:30 p.m.']
2   [u'tuesday']    [u'06:00 p.m.'] [u'07:30 p.m.']
3   [u'friday'] [u'06:00 p.m.'] [u'07:30 p.m.']
4   [u'wednesday']  [u'08:30 a.m.'] [u'09:30 a.m.']
5   [u'thursday']   [u'06:00 p.m.'] [u'07:30 p.m.']
6   [u'sunday'] [u'06:00 p.m.'] [u'07:30 p.m.']
7   []  []  []
8   [u'saturday']   [u'06:00 p.m.'] [u'07:30 p.m.']
</code></pre>
<p>as you can see...they are out of order, along with an extra position that should not be there..is this a bug?(EDIT: the csrf token is passed into the dict as well, easily ignored) But the ordering is still a mystery!</p>
<p>Thanks!</p>
<p>EDIT: Upon further investigation I decided to output the dict itself and see if it was broken and it was, no idea why though ):</p>
<pre><code>&gt; &lt;QueryDict: {u'monday': [u'monday, 06:00 p.m. to 07:30 p.m.'],
&gt; u'tuesday': [u'tuesday, 06:00 p.m. to 07:30 p.m.'], u'friday':
&gt; [u'friday, 06:00 p.m. to 07:30 p.m.'], u'wednesday': [u''],
&gt; u'thursday': [u'thursday, 06:00 p.m. to 07:30 p.m.'], u'sunday':
&gt; [u'sunday, 06:00 p.m. to 07:30 p.m.'], u'csrfmiddlewaretoken':
&gt; [u'AcxRjdNeTFwij7vwtdplZPy2SRlwrnzl'], u'saturday': [u'saturday, 06:00
&gt; p.m. to 07:30 p.m.']}&gt;
</code></pre>
<p>I even tried to explicitly set the ordering of the fields:</p>
<pre><code>def __init__(self, *args, **kwargs):
        super(ReoccurringForm, self).__init__(*args, **kwargs)
        self.fields.keyOrder = [
            'monday',
            'tuesday',
            'wednesday',
            'thursday',
            'friday',
            'saturday',
            'sunday']
</code></pre>
<p>But this makes no difference whatsoever...it seems the ordering is correct, but the processing of the data into the POST dict is somehow getting messed up, any insight would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't rely on the ordering of the fields in Django's POST dict I'm afraid - it's essentially a dictionary so there is no set ordering.</p>
<p>If the ordering of the posted data matters, Django provides <code>request.raw_post_data</code> to get that.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python dictionaries are orderless.  Because the Django response is a dictionary, it is going to be in an arbitrary order that can not be relied on. </p>
</div>
<div class="post-text" itemprop="text">
<p>It's because <code>QueryDict</code> is dict type, so it returns its keys in arbitrary order.</p>
<blockquote>
<p>It is best to think of a dictionary as an unordered set of key: value
  pairs</p>
</blockquote>
<p><a href="http://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">http://docs.python.org/3/tutorial/datastructures.html#dictionaries</a></p>
</div>
<span class="comment-copy">And that order is bad when form is RENDERED or just if you are dumping that QueryDict?</span>
<span class="comment-copy">The rendered form was correct all along as in the original question, I specified and noted the rendered order was correct. Just the POST dump was incorrect.</span>
<span class="comment-copy">I was afraid of that, I suppose I was just hoping that 6 values could just magically stay in order through a request d: your answer is quite complete, but just as an aside to others reading this, request.raw_post_data is deprec and was replaced with request.body. But you are correct and have been marked as so! Thanks you! If there is any other way to get an ordered dict let me know!</span>
<span class="comment-copy">Good point about raw_post_data, thanks :)</span>
<span class="comment-copy">I tried your solution and it still gives me the messed up QueryDict as above..and yes I am saving to a database, but indirectly. But that QueryDict is taken directly from the POST data..So I am unsure why it is not correct. I tried to explicitly order the fields, as well as your solution and am at a loss. Thanks! (I could still just be missing something)</span>
<span class="comment-copy">@user2016117: what version of django do you use?</span>
<span class="comment-copy">I am using 1.5.1, I believe you and the other poster misunderstood my issue, as it is not in the rendering but in the ordering of the resulting dict of POST data.</span>
<span class="comment-copy">yes I underestimated the "arbitrary and not to be trusted" nature of dicts (; my mistake!</span>
<span class="comment-copy">Why have you edited your answer so the comments no longer make sense?!</span>
