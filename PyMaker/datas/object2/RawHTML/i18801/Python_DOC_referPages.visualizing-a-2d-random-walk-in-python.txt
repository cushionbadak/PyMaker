<div class="post-text" itemprop="text">
<p>I'm trying to make a random walk in 2d, and plot the 2d walk.
I've been able to make the walk, but the plot is not exactly what I wanted.
Would it be possible to see the walk live in python ? Or just add a label to every point so that you know which point came first and which point came second etc. ?</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
import random
def randomWalkb(length):
    steps = []
    x,y = 0,0
    walkx,walky = [x],[y]
    for i in range(length):

        new = random.randint(1,4)
        if new == 1:
            x += 1
        elif new == 2:
            y += 1
        elif new ==3 :
            x += -1
        else :
            y += -1
        walkx.append(x)
        walky.append(y)
    return [walkx,walky]

walk = randomWalkb(25)
print walk
plt.plot(walk[0],walk[1],'b+', label= 'Random walk')
plt.axis([-10,10,-10,10])
plt.show()
</code></pre>
<p><strong>Edit</strong> I copied my own code wrong, now it is compiling if you have the right packages installed.</p>
</div>
<div class="post-text" itemprop="text">
<p>The built-in <a href="http://docs.python.org/3/library/turtle.html?highlight=turtle#turtle" rel="noreferrer"><code>turtle</code></a> module could be used to draw the path at a perceptible rate.</p>
<pre><code>import turtle

turtle.speed('slowest')

walk = randomWalkb(25)

for x, y in zip(*walk):
    #multiply by 10, since 1 pixel differences are hard to see
    turtle.goto(x*10,y*10)

turtle.exitonclick()
</code></pre>
<p>Sample result:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/9hwd9.png"/></p>
</div>
<div class="post-text" itemprop="text">
<p>I would visualize the time-information using a color, i.e. try to plot</p>
<pre><code>plt.plot(walk[0],walk[1],label= 'Random walk')
plt.scatter(walk[0],walk[1],s=50,c=range(26))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>See the animation tutorial at <a href="http://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/" rel="nofollow">http://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/</a></p>
<p>In this case the animate function should perform one step of your walk and set the x-y data appropriately.  If you don't care to save the animation or don't have the codec installed, just ignore the anim.save call.</p>
</div>
