<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2464959/whats-the-u-prefix-in-a-python-string">What's the u prefix in a Python string?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>Just wondering what the significance of the 'u' before every line of my code is and how I would be able to remove them? I'm working in python. </p>
<pre><code>Last login: Mon Jul  1 09:58:27 on ttys000
Samuel-Finegolds-MacBook-Pro:~ samuelfinegold$ /var/folders/jv/9_sy0bn10mbdft1bk9t14qz40000gn/T/Cleanup\ At\ Startup/tutor-394379967.500.py.command ; exit;
{u'company': {u'address': {u'city': u'Chicago',
                           u'contactname': '',
                           u'geo': {u'latitude': u'41.92113',
                                    u'longitude': u'-87.70085'},
                           u'state': u'IL',
                           u'street_address': '',
                           u'zip': u'60647'},
              u'companyname': u'Wyzant',
              u'costtype': '',
              u'description': u'WyzAnt is the leading tutoring marketplace on the web with 67,000+ tutors offering private lessons in hundreds of subjects like math, science, test prep, foreign languages, music, computers and much more.',
              u'email': '',
              u'facebook': u'https://www.facebook.com/WyzAnt',
              u'image': '',
              u'language': '',
              u'linkedin': '',
              u'logo': '',
              u'phone': u'8779992681',
              u'program': {u'costrange': u'[]',
                           u'costtype': '',
                           u'programtype': ''},
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>u</code> is used to create unicode strings:</p>
<pre><code>&gt;&gt;&gt; unicode_string = u'my unicode string'
&gt;&gt;&gt; type(unicode_string)
&lt;type 'unicode'&gt;
&gt;&gt;&gt; ascii_string = 'my ascii string'
&gt;&gt;&gt; type(ascii_string)
&lt;type 'str'&gt;
</code></pre>
<p>You can convert a unicode string using <code>str</code>:</p>
<pre><code>&gt;&gt;&gt; converted_string = str(unicode_string)
&gt;&gt;&gt; type(converted_string)
</code></pre>
<p>However, this is only possible if the characters in your unicode string can be represented using ascii:</p>
<pre><code>&gt;&gt;&gt; unicode_string = u'ö'
&gt;&gt;&gt; converted_string = str(unicode_string)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
UnicodeEncodeError: 'ascii' codec can't encode character u'\xf6' in position 0: ordinal not in range(128)
</code></pre>
<p>You can read more about Python's unicode strings at <a href="http://docs.python.org/2/howto/unicode.html" rel="noreferrer">http://docs.python.org/2/howto/unicode.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>u</code> means it's an unicode string, if the string contains only ASCII chacacters then there's no need of conversion to normal <code>str</code> as:</p>
<pre><code>&gt;&gt;&gt; "foo" == u"foo"
True
</code></pre>
<p>But you can't compare a unicode string with a byte string that contains non-ASCII characters:</p>
<pre><code>&gt;&gt;&gt; u'ö' == 'ö'
False
&gt;&gt;&gt; 'ö'       #contains bytes
'\xc3\xb6'
&gt;&gt;&gt; u'ö'      #contains sequence of code-points 
u'\xf6'
</code></pre>
<p>The comparison can be done only if you convert the byte string to unicode(with proper encoding):</p>
<pre><code>&gt;&gt;&gt; u'ö' == 'ö'.decode('utf-8')
True
</code></pre>
<p>Docs : <a href="http://docs.python.org/2/howto/unicode.html" rel="nofollow">Unicode HOWTO</a></p>
<p>Ned Batchelder's ppt: <a href="http://nedbatchelder.com/text/unipain/unipain.html#1" rel="nofollow">Pragmatic Unicode : How Do I Stop the Pain?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The lower case <code>u</code> in front of a string means it's an unicode string.
It's only the encoding, and therefore is no harm at all.
Unicode strings are able to represent wider variety of characters (such as <code>£</code>) than normal strings and the <code>u</code> won't be shown in <code>print</code>s:</p>
<pre><code>&gt;&gt;&gt; print(u'hi')
'hi'
</code></pre>
<p>You can learn more about unicode strings from python documents: <a href="http://docs.python.org/3/howto/unicode.html" rel="nofollow">http://docs.python.org/3/howto/unicode.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>To remove the unicode, use type casting.</p>
<pre><code>    &gt;&gt;&gt; x = u'abcd'
    &gt;&gt;&gt; type(x)
    &lt;type 'unicode'&gt;
    &gt;&gt;&gt; y = str(x)
    &gt;&gt;&gt; type(y)
    &lt;type 'str'&gt;
</code></pre>
</div>
<span class="comment-copy">u == Unicode...</span>
<span class="comment-copy">Guessing you're calling <code>json.dumps</code>, look in this question: <a href="http://stackoverflow.com/questions/16261174/json-output-s-just-print-the-output-withou-u?rq=1" title="json output s just print the output withou u">stackoverflow.com/questions/16261174/…</a></span>
<span class="comment-copy">@downvoter care to explain your downvote so that I can improve my answer.</span>
<span class="comment-copy">Didn't downvote you, but "won't affect your output in any way" is a bit of stretch don't you think?</span>
<span class="comment-copy">@rantanplan Can you give me an example where my sentence could be wrong?</span>
<span class="comment-copy">Do this: go to your terminal and create 2 variables holding the same string, in the non-ascii range(greek, russian, etc). In one string you will prepend the <code>u</code>, in the other you won't. Then compare them with an equality test. They seem the same... yet so totally different!</span>
<span class="comment-copy">@rantanplan Thanks for the  constructive criticism. :)</span>
<span class="comment-copy">"It's only the encoding, and therefore is no harm at all". Are you serious people? What's with the "it's only encoding" meme in here? Encoding is the source of the <i>most</i> weird problems. Don't downplay it. Everyone should study about the differences between bytestings and unicode.</span>
