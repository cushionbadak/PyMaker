<div class="post-text" itemprop="text">
<p>There is a lot of examples of reading csv data using python, like this one:</p>
<pre><code>import csv
with open('some.csv', newline='') as f:
  reader = csv.reader(f)
  for row in reader:
    print(row)
</code></pre>
<p>I only want to read one line of data and enter it into various variables. How do I do that? I've looked everywhere for a working example.</p>
<p>My code only retrieves the value for i, and none of the other values</p>
<pre><code>reader = csv.reader(csvfile, delimiter=',', quotechar='"')
for row in reader:
  i = int(row[0])
  a1 = int(row[1])
  b1 = int(row[2])
  c1 = int(row[2])
  x1 = int(row[2])
  y1 = int(row[2])
  z1 = int(row[2])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To read only the first row of the csv file use <a href="https://docs.python.org/3/library/functions.html#next"><code>next()</code></a> on the reader object.</p>
<pre><code>with open('some.csv', newline='') as f:
  reader = csv.reader(f)
  row1 = next(reader)  # gets the first line
  # now do something here 
  # if first row is the header, then you can do one more next() to get the next row:
  # row2 = next(f)
</code></pre>
<p>or :</p>
<pre><code>with open('some.csv', newline='') as f:
  reader = csv.reader(f)
  for row in reader:
    # do something here with `row`
    break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you could get just the first row like:</p>
<pre><code>csv_reader = csv.reader(f)
csv_headings = next(csv_reader)
first_line = next(csv_reader)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use Pandas library to read the first few lines from the huge dataset.</p>
<pre><code>import pandas as pd

data = pd.read_csv("names.csv", nrows=1)
</code></pre>
<p>You can mention the number of lines to be read in the nrows parameter.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/2/library/csv.html#examples" rel="noreferrer">Python documentation</a>:</p>
<blockquote>
<p>And while the module doesnâ€™t directly support parsing strings, it can easily be done:</p>
</blockquote>
<pre><code>import csv
for row in csv.reader(['one,two,three']):
    print row
</code></pre>
<p>Just drop your string data into a singleton list.</p>
</div>
<div class="post-text" itemprop="text">
<p>The simple way to get any row in csv file</p>
<pre><code>import csv
csvfile = open('some.csv','rb')
csvFileArray = []
for row in csv.reader(csvfile, delimiter = '.'):
    csvFileArray.append(row)
print(csvFileArray[0])
</code></pre>
</div>
<span class="comment-copy">what is the structure of your csv? What is <code>row</code> when you are iterating through reader?</span>
<span class="comment-copy">To make this work in python3, just remove the 'b' in 'rb'</span>
<span class="comment-copy">This just works, actually without the <code>delimiter='.'</code>.</span>
