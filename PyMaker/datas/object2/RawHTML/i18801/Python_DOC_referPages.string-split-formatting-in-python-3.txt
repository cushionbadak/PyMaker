<div class="post-text" itemprop="text">
<p>I'm trying to format this string below where one row contains five words. However, I keep getting this as the output:</p>
<blockquote>
<p>I love cookies yes I do Let s see a dog</p>
</blockquote>
<p>First, I am not getting 5 words in one line, but instead, everything in one line. </p>
<p>Second, why does the "Let's" get split? I thought in splitting the string using "words", it will only split if there was a space in between? </p>
<p>Suggestions? </p>
<pre><code>string = """I love cookies. yes I do. Let's see a dog."""


# split string
words = re.split('\W+',string)

words = [i for i in words if i != '']


counter = 0
output=''
for i in words:
    if counter == 0:
        output +="{0:&gt;15s}".format(i)

# if counter == 5, new row
    elif counter % 5 == 0:
       output += '\n'
       output += "{0:&gt;15s}".format(i)

    else:
       output += "{0:&gt;15s}".format(i)

    # Increase the counter by 1
    counter += 1

print(output)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As a start, don't call a variable "string" since it shadows the <a href="http://docs.python.org/3/library/string.html#module-string" rel="noreferrer">module</a> with the same name</p>
<p>Secondly, use <a href="http://docs.python.org/3/library/stdtypes.html#str.split" rel="noreferrer"><code>split()</code></a> to do your word-splitting</p>
<pre><code>&gt;&gt;&gt; s = """I love cookies. yes I do. Let's see a dog."""
&gt;&gt;&gt; s.split()
['I', 'love', 'cookies.', 'yes', 'I', 'do.', "Let's", 'see', 'a', 'dog.']
</code></pre>
<p>From <a href="http://docs.python.org/3/library/re.html" rel="noreferrer">re-module</a></p>
<blockquote>
<blockquote>
<blockquote>
<p>\W
      Matches any character which is not a Unicode word character. This is the opposite of \w. If the ASCII flag is used this becomes the equivalent of [^a-zA-Z0-9_] (but the flag affects the entire regular expression, so in such cases using an explicit [^a-zA-Z0-9_] may be a better choice).</p>
</blockquote>
</blockquote>
</blockquote>
<p>Since the <code>'</code> is not listed in the above, the regexp used splits the "Let's" string into two parts:</p>
<pre><code>&gt;&gt;&gt; words = re.split('\W+', s)
&gt;&gt;&gt; words
['I', 'love', 'cookies', 'yes', 'I', 'do', 'Let', 's', 'see', 'a', 'dog', '']
</code></pre>
<p>This is the output I get using the strip()-approach above:</p>
<pre><code>$ ./sp3.py 
              I           love       cookies.            yes              I
            do.          Let's            see              a           dog.
</code></pre>
<p>The code could probably be simplified to this since <code>counter==0</code> and the else-clause does the same thing. I through in an <a href="http://docs.python.org/3/library/functions.html?highlight=enumerate#enumerate" rel="noreferrer">enumerate</a> there as well to get rid of the counter:</p>
<pre><code>#!/usr/bin/env python3

s = """I love cookies. yes I do. Let's see a dog."""
words = s.split()

output = ''
for n, i in enumerate(words):
    if n % 5 == 0:
        output += '\n'
    output += "{0:&gt;15s}".format(i)
print(output)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>words = string.split()
while (len(words))
     for word in words[:5]
          print(word, end=" ")
     print()
     words = words[5:]
</code></pre>
<p>That's the basic concept, split it using the split() method</p>
<p>Then slice it using slice notation to get the first 5 words</p>
<p>Then slice off the first 5 words, and loop again</p>
</div>
<span class="comment-copy">I forgot to copy that here. Just did it.</span>
<span class="comment-copy">Thanks! This post makes more sense now.</span>
<span class="comment-copy">Anymore insight on to why it won't format with one 5 words per row? Thanks</span>
<span class="comment-copy">@user1631819 - see my ouput, looks ok to me. Do you agree?</span>
<span class="comment-copy">@fredrickpihl You mean at a words.strip() before the loop?</span>
<span class="comment-copy">@user1631819 - posted complete code (somewhat simplified), please have a look</span>
<span class="comment-copy">It does look much better. I was trying to look at it through local host as an HTML output, so I kept on getting the one line. But does work through terminal .</span>
<span class="comment-copy">split(), well, splits on whitespace per default, no need for the <code>(" ")</code> part</span>
<span class="comment-copy">oops thanks edited</span>
<span class="comment-copy">@stephan I tried you suggestion, as I did this: <code>while i &lt; len(words):      print (words[:5] '\n')      words = words[5:]</code>I want a newline for every row, so I included '/n'. but now I'm getting a error at the new line. suggestions? thanks</span>
<span class="comment-copy">not sure why you changed the while loop, it works like it is.  I'll update my answer to print with proper formatting since it seems like you like mine</span>
