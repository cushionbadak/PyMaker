<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17159079/need-help-to-sort-processed-mdb-file-in-python-on-linux-machine">Need help to sort processed mdb file in Python on Linux machine</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<pre><code>import sys, subprocess, glob

mdbfiles = glob.glob('*.res')
for DATABASE in mdbfiles: 

    subprocess.call(["mdb-schema", DATABASE, "mysql"])

    table_names = subprocess.Popen(["mdb-tables", "-1", DATABASE],
                                   stdout=subprocess.PIPE).communicate()[0]
    tables = table_names.splitlines()

    sys.stdout.flush()

    a=str('Channel_Normal_Table')

    for table in tables:
        if table != '' and table==a:

            filename = DATABASE.replace(".res","") + ".csv"
            file = open(filename, 'w')
            print("Dumping " + table)
            contents = subprocess.Popen(["mdb-export", DATABASE, table],
                                        stdout=subprocess.PIPE).communicate()[0]

            # I NEED TO PUT SOMETHING HERE TO SORT AND EXTRACT THE DATA I NEED


            file.write(contents)
            file.close()
</code></pre>
<p>I have a table extracted from database. Lets call it <code>table</code>. I need to perform the following operations and I got a bit stuck:</p>
<pre><code>Cycle Test_Time  Current    Voltage
1     7.80E-002 0.00E+000   1.21E-001
1     3.01E+001 0.00E+000   1.19E-001
1     6.02E+001 0.00E+000   1.17E-001
2     9.02E+001 0.00E+000   1.14E-001
2     1.20E+002 0.00E+000   1.11E-001
2     1.50E+002 0.00E+000   1.08E-001
2     1.80E+002 0.00E+000   1.05E-001
2     2.10E+002 0.00E+000   1.02E-001
3     2.40E+002 0.00E+000   9.93E-002
3     2.70E+002 0.00E+000   9.66E-002
3     3.00E+002 0.00E+000   9.38E-002
3     3.10E+002 4.00E-001   1.26E+000
</code></pre>
<ol>
<li>Extract the just last (latest) row of each cycle or, more advanced, sort the cycle
by time and extract the row of the cycle with the latest time. As
you can see, last row does not always have the latest time due to
our testing machine glitch, but usually does. But the bigger the
number the later the time. </li>
<li>Extract all the rows for the last five cycles</li>
<li>Extract all the rows from cycle 4 to cycle 30.</li>
</ol>
<p>I tried various methods, like creating and sorting dictionaries and lists based on my limited Python  knowledge but none of them resulted to the desired output. It just drives me nuts. Thanks a lot!</p>
</div>
<div class="post-text" itemprop="text">
<p>This is not so hard, but you have to take it step-by-step:</p>
<pre><code>from collections import defaultdict

table = """\
Cycle Test_Time  Current    Voltage
1     7.80E-002 0.00E+000   1.21E-001
1     3.01E+001 0.00E+000   1.19E-001
1     6.02E+001 0.00E+000   1.17E-001
2     9.02E+001 0.00E+000   1.14E-001
2     1.20E+002 0.00E+000   1.11E-001
2     1.50E+002 0.00E+000   1.08E-001
2     1.80E+002 0.00E+000   1.05E-001
2     2.10E+002 0.00E+000   1.02E-001
3     2.40E+002 0.00E+000   9.93E-002
3     2.70E+002 0.00E+000   9.66E-002
3     3.00E+002 0.00E+000   9.38E-002
3     3.10E+002 4.00E-001   1.26E+000"""

# Split into rows
table = table.splitlines()

# Split each row into values
table = [row.split() for row in table]

# Associate the column names with their index
headers = table.pop(0)
H = {x: i for i, x in enumerate(headers)}
time_index = H["Test_Time"]
cycle_index = H["Cycle"]

# Sort by Test_Time
table.sort(key=lambda row: float(row[time_index]))

# Associate each test with its cycle
D = defaultdict(list)
for row in table:
  D[int(row[cycle_index])].append(row)

# Present the information
print(*headers, sep='\t')
print("Latest row for each cycle")
for cycle in sorted(D.keys()):
  tests = D[cycle]
  latest_test = tests[-1]
  print(*latest_test, sep='\t')

print("All rows for last 5 cycles")
for cycle in sorted(D.keys())[-5:]:
  tests = D[cycle]
  for test in tests:
    print(*test, sep='\t')

print("All rows for cycles 4 through 30")
for cycle in sorted(D.keys()):
    if 4 &lt;= cycle &lt;= 30:
      tests = D[cycle]
      for test in tests:
        print(*test, sep='\t')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can easily done your job with <a href="http://pandas.pydata.org/" rel="nofollow">pandas</a> and <a href="https://pypi.python.org/pypi/pymdb" rel="nofollow">pymdb</a></p>
<p>With pandas, you can handle your time series data with no pain.
Just take a look at pandas.DataFrame. That's all you need.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, let's read the file and convert the values found into ints for the cycle col and floats for the rest:</p>
<pre><code>databyrow=[]
with open('/tmp/temps.txt', 'r') as f:
    header=f.readline().strip().split()
    for line in f:
        temp=[]
        for i,val in enumerate(line.strip().split()):
            fn=int if i==0 else float
            try:
                val=fn(val)
            except ValueError:
                print val,'not converted'
            temp.append(val)    
        databyrow.append(temp)                
print databyrow  
</code></pre>
<p>Prints:</p>
<pre><code> [[1, 0.078, 0.0, 0.121],
 [1, 30.1, 0.0, 0.119],
 [1, 60.2, 0.0, 0.117],
 [2, 90.2, 0.0, 0.114],
 [2, 120.0, 0.0, 0.111],
 [2, 150.0, 0.0, 0.108],
 [2, 180.0, 0.0, 0.105],
 [2, 210.0, 0.0, 0.102],
 [3, 240.0, 0.0, 0.0993],
 [3, 270.0, 0.0, 0.0966],
 [3, 300.0, 0.0, 0.0938],
 [3, 310.0, 0.4, 1.26]]
</code></pre>
<p>Now you can create a group dictionary based on the cycle col list in the list of lists just created:</p>
<pre><code>from itertools import groupby
keyfn=lambda t:t[0]
sorted_input=sorted(databyrow,key=keyfn)
data_bycycle={k:list(g) for k,g in groupby(sorted_input,key=keyfn)}
</code></pre>
<p>Prints:</p>
<pre><code>{1: [[1, 0.078, 0.0, 0.121], [1, 30.1, 0.0, 0.119], [1, 60.2, 0.0, 0.117]], 
 2: [[2, 90.2, 0.0, 0.114], [2, 120.0, 0.0, 0.111], [2, 150.0, 0.0, 0.108], [2, 180.0, 0.0, 0.105], [2, 210.0, 0.0, 0.102]], 
 3: [[3, 240.0, 0.0, 0.0993], [3, 270.0, 0.0, 0.0966], [3, 300.0, 0.0, 0.0938], [3, 310.0, 0.4, 1.26]]}
</code></pre>
<p>Now you can get your last N rows of each cycle directly:</p>
<pre><code>&gt;&gt;&gt; N=2
&gt;&gt;&gt; data_bycycle[1][-N:]
[[1, 30.1, 0.0, 0.119], [1, 60.2, 0.0, 0.117]]    
</code></pre>
<p>If you want one of that group sorted by the latest time:</p>
<pre><code>&gt;&gt;&gt; sorted(data_bycycle[2],key=lambda li: li[1])[-1]
[2, 210.0, 0.0, 0.102]  
</code></pre>
<hr/>
<h2><em>Edit</em></h2>
<p>Downloading the linked dropbox file, you have a csv file -- not space delimited.</p>
<p>Here is how to read something like that:</p>
<pre><code>import csv

databyrow=[]
with open('/tmp/VC0307a.csv', 'r') as f:      # potentially you can use 'contents' here
    for i,row in enumerate(csv.reader(f)):
        if i==0:
            header=row
        else:
            temp=[]
            for j,val in enumerate(row):
                fn=int if j in (0,1) else float
                try:
                    val=fn(val)
                except ValueError:
                    print val, 'not converted'
                temp.append(val)     
            databyrow.append(temp)
</code></pre>
<p>Once you have it in memory, you can sort by a certain numerical column:</p>
<pre><code>&gt;&gt;&gt; header
['Test_ID', 'Data_Point', 'Test_Time', 'Step_Time', 'DateTime', 'Step_Index', 'Cycle_Index', 'Is_FC_Data', 'Current', 'Voltage', 'Charge_Capacity', 'Discharge_Capacity', 'Charge_Energy', 'Discharge_Energy', 'dV/dt', 'Internal_Resistance', 'AC_Impedance', 'ACI_Phase_Angle']

&gt;&gt;&gt; n=header.index('Test_Time') 
&gt;&gt;&gt; by_time=sorted(databyrow,key=lambda t: t[n])
</code></pre>
</div>
<span class="comment-copy">You might want to take a look at Pandas: <a href="http://pandas.pydata.org/" rel="nofollow noreferrer">pandas.pydata.org</a></span>
<span class="comment-copy">These are incredibly simple tasks using awk and  other shell utilities</span>
<span class="comment-copy">why cant you do this in the database itself ?</span>
<span class="comment-copy">Guys. This is the project I have to finish. We are converting scripts from bash to Python. I have .mdb files that I need to process. So I was able to extract necessary table, but I need to sort that able and extract particular data. I am not a programmer and have little knowledge of Python so any help will be appreciated. Thanks.</span>
<span class="comment-copy">Thanks! I will try it right now. Another thing. How can save that processed content into .csv file?</span>
<span class="comment-copy">Check out the python <a href="http://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a>.</span>
<span class="comment-copy">I am getting an error:       'alphanumeric characters and underscores: %r' % name) ValueError: Type names and field names can only contain alphanumeric characters and underscores: 'Test_ID,Data_Point,Test_Time,Step_Time,DateTime,Step_Index,Cycle_Index,Is_FC_Data,Current,Voltage,Charge_Capacity,Discharge_Capacity,Charge_Energy,Discharge_Energy,dV/dt,Internal_Resistance,AC_Impedance,ACI_Phase_Angle'</span>
<span class="comment-copy">Try changing the namedtuple line to <code>namedtuple("table_row", headers, rename=True)</code>. You seem to be using different headers from the sample file? Also be sure to accept the answer if this works for you!</span>
<span class="comment-copy">Thanks again. Yes, i am using different headers, since the whole table is like 26 columns long and can have million of rows.  I added the True statement but now I am getting another error:     table = [table_row(int(c), float(t), float(i), float(v)) for c, t, i, v in table[1:]] ValueError: need more than 1 value to unpack &gt;&gt;&gt;   Sure I will accept the answer. I just need to make that script work. Been battling with it for the whole day with no results. I am kinda new to Python and all that stuff looks very complicated to me as of now ((</span>
<span class="comment-copy">I am getting empty output in here when printing (((</span>
<span class="comment-copy">Which part of the printout?</span>
<span class="comment-copy">I am just about to give up with that battle. Didnt know that sorting a table from mdb file can become such a complicated task in Python[] {} Traceback (most recent call last):   File "dump3.py", line 55, in &lt;module&gt;     data_bycycle[1.0][-N:] KeyError: 1.0    Basically I am just getting a blank screen. Even previous Print lines produce blank output.</span>
<span class="comment-copy">What keys are in the dict data_bycycle? Try <code>print data_bycycle.keys()</code></span>
<span class="comment-copy">OK, there is some kind of an error at the begining where I try to pass the content of extracted table. I just opened a sample .txt file and got some output. But at the end I am still getting an error Traceback (most recent call last):   File "dump3.py", line 55, in &lt;module&gt;     data_bycycle[1.0][-N:] KeyError: 1.0</span>
