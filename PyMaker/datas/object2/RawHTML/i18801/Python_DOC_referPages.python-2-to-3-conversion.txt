<div class="post-text" itemprop="text">
<p>I'm new to Python and trying to convert some vendor suppplied code from python 2 to 3.  This function appears to check if an instance of the class is already created so it doesn't create a bunch of new instances but I'm not sure how to convert it to python 3.  The type class check vs an instance statement especially needs mondified since the old vs. new types in pythong 2/3 but I'm not sure how to do that.  Any help is greatly appreciated.</p>
<pre><code>def get_instance(self, classid = "Main", use_cache = TRUE):
    """ Either get the cached logger instance or create a new one

    Note that this is safe, even if you have your target set to sys.stdout
    or sys.stderr
    """

    cache = Logger.cache

    if (type(classid) == ClassType):
        classid = classid.__name__
    elif (type(classid) == InstanceType):
        classid = classid.__class__.__name__

    # classid has to be lowercase, because the ConfigParser returns sections lowercase
    classid = lower(classid)

    if ((cache.has_key(classid)) and (use_cache == TRUE)):
        cat = Logger.cache[classid]
    else:
        instance = Logger.instance

        # test for targets which won't deep copy
        targets = instance.__Logger_targets
        deepcopyable = TRUE
        for i in range(len(targets)):
            if (type(targets[i]) == FileType):
                deepcopyable = FALSE
        if (deepcopyable == FALSE):
            # swap the non-copyable target out for a moment
            del instance.__Logger_targets
            cat = copy.deepcopy(instance)
            instance.__Logger_targets = targets
            cat.__Logger_targets = targets
        else:
            cat = copy.deepcopy(instance)

        cat.__Logger_classname = classid
        # new categories have their own private Nested Diagnostic Contexts
        self.__Logger_ndc = []
        self.__Logger_classid = classid

        cat.debug("Class %s instantiated" % classid)
        if (use_cache == TRUE):
            cache[classid] = cat

    return cat
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Open a terminal and type in <code>2to3 nameofpythonfile.py</code> and the python file will be automatically converted.</p>
<p><strong>How to open a terminal</strong></p>
<p><strong>Windows</strong> : search for cmd</p>
<p>*<strong>nix</strong> : type <code>ctrl-alt-T</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>if (type(classid) == ClassType):
    classid = classid.__name__
elif (type(classid) == InstanceType):
    classid = classid.__class__.__name__
</code></pre>
<p>Is roughly equivalent to</p>
<pre><code>if isinstance(classid, type):
    classid = classid.__name__
else:
    classid = classid.__class__.__name__
</code></pre>
<p>2to3 should cover the rest</p>
</div>
<span class="comment-copy">Have you tried using the <code>2to3</code> <a href="http://docs.python.org/2/library/2to3.html" rel="nofollow noreferrer">conversion tool</a></span>
<span class="comment-copy">You can do it automatically <a href="http://docs.python.org/3/library/2to3.html" rel="nofollow noreferrer">docs.python.org/3/library/2to3.html</a></span>
<span class="comment-copy">This is terrible code. You should jsut rewrite it properly in Python3</span>
<span class="comment-copy">2to3 doesn't convert the ClassType or InstanceType</span>
