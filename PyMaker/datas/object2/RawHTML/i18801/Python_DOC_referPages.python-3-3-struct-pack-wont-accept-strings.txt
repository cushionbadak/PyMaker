<div class="post-text" itemprop="text">
<p>I'm trying to use struct.pack to write a padded string to a file but it seems with the 3.x interpreters this doesn't work anymore. An example of how I'm using it:</p>
<pre><code>mystring = anotherString+" sometext here"
output = struct.pack("30s", mystring);
</code></pre>
<p>This seems to be okay in earlier versions of python but with 3 it produces an error demanding a byte object. The docs seem to imply that it supposed to do a conversion of any string to a UTF-8 byte object without complaint (and I don't care if a multi-byte character happens to be truncated):</p>
<p><a href="http://docs.python.org/release/3.1.5/library/struct.html">http://docs.python.org/release/3.1.5/library/struct.html</a>:
<em>"The c, s and p conversion codes operate on bytes objects, but packing with such codes also supports str objects, which are encoded using UTF-8."</em></p>
<p>Am I misreading the docs and how are others using struct.pack with strings?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, up until 3.1 <code>struct.pack()</code> erroneously would implicitly encode strings to UTF-8 bytes; this was fixed in Python 3.2. See <a href="http://bugs.python.org/issue10783">issue 10783</a>.</p>
<p>The conclusion was that the implicit conversion was a Bad Idea, and it was reverted while the developers still had a chance to do so:</p>
<blockquote>
<p>I prefer to break the API today than having to maintain a broken API for
  10 or 20 years :-)  And we have a very small user base using Python 3,
  it's easier to change it now, than in the next release.</p>
</blockquote>
<p>This is also documented in the <a href="http://docs.python.org/3/whatsnew/3.2.html#porting-to-python-3-2">porting section of the 3.2 What's New guide</a>:</p>
<blockquote>
<p><code>struct.pack()</code> now only allows bytes for the <code>s</code> string pack code. Formerly, it would accept text arguments and implicitly encode them to bytes using UTF-8. This was problematic because it made assumptions about the correct encoding and because a variable-length encoding can fail when writing to fixed length segment of a structure.</p>
</blockquote>
<p>You need to explicitly encode your strings before packing.</p>
</div>
<div class="post-text" itemprop="text">
<p>I could be wrong but in this case won't <code>.encode('UTF-8')</code> work? 
eg: </p>
<pre><code>output = struct.pack("30s", mystring.encode('UTF-8'));
</code></pre>
<p>I stand to be corrected.</p>
</div>
<span class="comment-copy">Sure this'll work, but that wasn't the question. The issue was that the documentation implied a string object would be fine, and for a while that actually worked too.</span>
