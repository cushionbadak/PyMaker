<div class="post-text" itemprop="text">
<p>I need my XML attribute value pairs to be re-arranged in a specific order. This is because I run a third party tool to process these files and it looks for the attributes in a specific order.</p>
<p>I would like to have a list that details the order I specify</p>
<p>I've searched but been unable to find anything that does what I want.</p>
<pre><code>order = ["attrib1","attrib2","attrib3",.........]
</code></pre>
<p>XML Before:</p>
<pre><code>&lt;signal id = "signal1"
atrib6 = "value6"
atrib5 = "value5"
atrib4 = "value4"
atrib3 = "value3"
atrib2 = "value2"
atrib1 = "value1"/&gt;
&lt;signal id = "signal2"
atrib1 = "value1"
atrib7 = "value7"
atrib2 = "value2"
atrib4 = "value4"
atrib8 = "value8"
atrib15 = "value15"/&gt;
&lt;signal id = "signal3"
atrib10 = "value10"
atrib17 = "value17"
atrib3 = "value3"
atrib1 = "value1"
atrib6 = "value6"
atrib22 = "value22"/&gt;
</code></pre>
<p>XML After</p>
<pre><code>&lt;signal id = "signal1"
atrib1 = "value1"
atrib2 = "value2"
atrib3 = "value3"
atrib4 = "value4"
atrib5 = "value5"
atrib6 = "value6"/&gt;
&lt;signal id = "signal2"
atrib1 = "value1"
atrib2 = "value2"
atrib4 = "value4"
atrib7 = "value7"
atrib8 = "value8"
atrib15 = "value15"/&gt;
&lt;signal id = "signal3"
atrib1 = "value1"
atrib3 = "value3"
atrib6 = "value6"
atrib10 = "value10"
atrib17 = "value17"
atrib22 = "value22"/&gt;
</code></pre>
<p>I am aware that the XML specification says that the attribute order is not important. However, the 3rd party software tool will not work unless the attributes are in a specific order.</p>
</div>
<div class="post-text" itemprop="text">
<p>Ok here is my solution it turns my input file "input.xml" that looks like this:</p>
<pre><code>&lt;element-name attrib_7="value7" attrib_6="value6" attrib_5="value5" attrib_4="value4" attrib_3="value3" attrib_2="value2" attrib_1="value1" /&gt;
&lt;element-name attrib_5="value5" attrib_4="value4" attrib_3="value3" attrib_1="value1" attrib_2="value2" attrib_6="value6" attrib_2="value2" /&gt;
&lt;element-name attrib_6="value6" attrib_4="value4" attrib_2="value2" attrib_1="value1" /&gt;
</code></pre>
<p>into an output file "output.xml":</p>
<pre><code>&lt;element-name
attrib_1="value1"
attrib_2="value2"
attrib_3="value3"
attrib_4="value4"
attrib_5="value5"
attrib_6="value6"
attrib_7="value7"
/&gt;
&lt;element-name
attrib_1="value1"
attrib_2="value2"
attrib_3="value3"
attrib_4="value4"
attrib_5="value5"
attrib_6="value6"
/&gt;
&lt;element-name
attrib_1="value1"
attrib_2="value2"
attrib_4="value4"
attrib_6="value6"
/&gt;
</code></pre>
<p>The code is here:</p>
<pre><code>infile = open("input.xml","r")
outfile = open("output.xml","w")

xmlsorted =[]
span = 2

for line in infile:
    if "&lt;element-name" in line and "/&gt;" in line:
        attriblist =[]
        for i in range(0, len(line), span):
            step1 = line.split(" ")
        attriblist.append(step1)

        a,b,c,d,e,f,g,h,i = "","","","","","","","",""
        sortedattribs = []
        for attrib in step1:
            if "&lt;element-name" in attrib:
                a = attrib + "\n"
            if "attrib_1=" in attrib:
                b = attrib + "\n"
            if "attrib_2=" in attrib:
                c = attrib + "\n"
            if "attrib_3=" in attrib:
                d = attrib + "\n"
            if "attrib_4=" in attrib:
                e = attrib + "\n"
            if "attrib_5=" in attrib:
                f = attrib + "\n"       
            if "attrib_6=" in attrib:
                g = attrib + "\n"   
            if "attrib_7=" in attrib:
                h = attrib + "\n"
            if "/&gt;" in attrib:
                print("test123")
                i = attrib

        if a != "":
            sortedattribs.append(a)
        if b != "":
            sortedattribs.append(b)
        if c != "":
            sortedattribs.append(c)
        if d != "":
            sortedattribs.append(d)
        if e != "":
            sortedattribs.append(e)
        if f != "":
            sortedattribs.append(f)
        if g != "":
            sortedattribs.append(g)
        if h != "":
            sortedattribs.append(h)
        if i != "":
            sortedattribs.append(i)

        a,b,c,d,e,f,g,h,i = "","","","","","","","",""
        xmlsorted.append(sortedattribs)
        outfile.writelines(sortedattribs)

infile.close()
outfile.close()
</code></pre>
</div>
<span class="comment-copy">This answer may help: <a href="https://stackoverflow.com/a/14258802/2570277">stackoverflow.com/a/14258802/2570277</a></span>
<span class="comment-copy">That patch to ElementTree.py is more for maintaining the attribute order when using that module. I want to be able to specify a new order.</span>
<span class="comment-copy">@Rob Nick's intention was obviously to give you a hint at a possible solution (which part of ElementTree can be monkeypatched to control the attributes order). This should actually be enough to solve your issue by customising this part of the code to match your own needs.</span>
<span class="comment-copy">if I came across as rude then it wasn't my intention. I had already stumbled upon that link before and I don't believe that monkey hack would have helped without a deeper understanding of the library and a significant amount of research, which is why I was querying to see if anyone had resolved my specific problem in the past. Incidentally, I have managed to solve my issue using my own messy but effective method.</span>
<span class="comment-copy">Rob - You should add your solution as an answer and accept it. Maybe it will help others in the future.</span>
