<div class="post-text" itemprop="text">
<p>I am receiving the following string via an API in Python:</p>
<pre><code>{"id":13021,"buys":{"quantity":3494,"unit_price":257},"sells":{"quantity":3187,"unit_price":433}}
</code></pre>
<p>I can reliably isolate the <code>"id"</code> field via <code>.find</code>, but the <code>"buys"</code> and <code>"sells"</code> entries for <code>"unit_price"</code> are harder to recover since they don't share unique identifiers. Is my best bet to parse the whole thing with regular expressions, or does Python offer a more straightforward solution to access the required substrings?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your input data is JSON. Using regexp in this case is overkill. You could convert it to <code>dict</code> and work with it like</p>
<pre><code>import json
instr = '{"id":13021,"buys":{"quantity":3494,"unit_price":257},"sells":{"quantity":3187,"unit_price":433}}'

injs = json.loads(instr)

injs["buys"]
Out[62]: {'quantity': 3494, 'unit_price': 257}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; from ast import literal_eval
&gt;&gt;&gt; a = instr = '{"id":13021,"buys":{"quantity":3494,"unit_price":257},"sells":{"quantity":3187,"unit_price":433}}'
&gt;&gt;&gt; b=literal_eval(a)
&gt;&gt;&gt; b['sells']
{'unit_price': 433, 'quantity': 3187}
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">That's <a href="http://json.org/" rel="nofollow noreferrer">JSON</a>. Use the Python module <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a>.</span>
<span class="comment-copy">Thank you! That makes processing it a lot more straightforward. Here I was worried I'd have to parse it all manually.</span>
