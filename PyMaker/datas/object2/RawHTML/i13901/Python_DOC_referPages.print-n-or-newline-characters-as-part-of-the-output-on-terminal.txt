<div class="post-text" itemprop="text">
<p>I'm running Python on terminal</p>
<p>Given a string <code>string = "abcd\n"</code></p>
<p>I'd like to <code>print</code> it somehow so that the newline characters <code>'\n'</code> in <code>abcd\n</code> would be visible rather than go to the next line</p>
<p>Can I do this without having to modify the string and adding a double slash (<code>\\n</code>)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#repr"><code>repr</code></a></p>
<pre><code>&gt;&gt;&gt; string = "abcd\n"
&gt;&gt;&gt; print(repr(string))
'abcd\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're in control of the string, you could also
use a 'Raw' string type:</p>
<pre><code>&gt;&gt;&gt; string = r"abcd\n"
&gt;&gt;&gt; print(string)
abcd\n
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another suggestion is to do that way:</p>
<pre><code>string = "abcd\n"
print(string.replace("\n","\\n"))
</code></pre>
<p>But be aware that the print function actually print to the terminal the "\n", your terminal interpret that as a newline, that's it. So, my solution just change the newline in  \ + n</p>
</div>
<span class="comment-copy">Thanks. This is the only thing that worked for my particular purpose -- printing out a PANDAS dataframe.to_latex() and adding in \noalign and \vskip.</span>
<span class="comment-copy">isn't it the other way around - .replace("\\n","\n")?</span>
<span class="comment-copy">This is a better solution when replacing strings in languages with special characters (chinese, korean, even letters with an umlaut and stuff like that). The repr solution causes these characters to change to their encoded state.</span>
