<div class="post-text" itemprop="text">
<p>I'm trying to create a program that will fill out a form on this site: 
<a href="https://interactive.web.insurance.ca.gov/survey/" rel="nofollow">Insurance survey</a></p>
<p>I'm using python 2.7 and mechanize after numerous attempts with 3.4 and realizing mechanize doesn't work with 3.4. I'm a novice but have learned a LOT in trying to do this (python is awesome). </p>
<pre><code>import mechanize
br = mechanize.Browser() 
urlofmypage = 'https://interactive.web.insurance.ca.gov/survey/'
br.open(urlofmypage) 
print br.geturl()
br.select_form(nr=0)

br['location'] = ['ALAMEDA BERKELEY']   #SET FORM ENTRIES
br['coverageType'] = ['HOMEOWNERS']
br['coverageAmount'] = ['$150,000']
br['homeAge'] = ['1-3 Years']

result = br.submit()
print result
</code></pre>
<p>This is my error : mechanize._form.ItemNotFoundError: insufficient items with name '$150,000'</p>
<p>The problem is, only after I fill out the form fields location and coverageType then do the options for coverageAmount show up :( . I've been messing around with this and watching numerous videos online and all my research has led me to conclude that mechanize won't do this. </p>
<p>I've also read that this is an ajax call, and mechanize won't work for this. Things seem to be pointing towards selenium webdriver... Does anybody have any input?</p>
</div>
<div class="post-text" itemprop="text">
<p>AJAX calls are performed by javascript, and mechanize has no way to run javascript. Mechanize only looks at form fields on a static HTML page and allows you to fill &amp; submit those. This is why your research is pointing you towards things like Selenium or <a href="http://jeanphix.me/Ghost.py/" rel="nofollow noreferrer">Ghost</a>, which run on top of a real browser that can execute javascript.</p>
<p>There is a simpler way to do this though! If you use the developer tools on your browser (e.g. the Network tab in Firefox or Chrome) and fill out the form you can see the request your browser is making behind the scenes, even with AJAX:</p>
<p><a href="https://i.stack.imgur.com/MT2CS.png" rel="nofollow noreferrer"><img alt="Network tab in Firefox" src="https://i.stack.imgur.com/MT2CS.png"/></a></p>
<p>This tells you:</p>
<ul>
<li>The browser made a <code>POST</code> request</li>
<li>To this URL: <code>https://interactive.web.insurance.ca.gov/survey/survey?type=homeownerSurvey&amp;event=HOMEOWNERS</code></li>
<li>With the following form params:

<ul>
<li>location=ALAMEDA+ALAMEDA</li>
<li>coverageType=HOMEOWNERS</li>
<li>coverageAmount=150000</li>
<li>homeAge=New</li>
</ul></li>
</ul>
<p>You can use this information to make the same POST request in Python:</p>
<pre><code>import urllib.parse, urllib.request

url = "https://interactive.web.insurance.ca.gov/survey/survey?type=homeownerSurvey&amp;event=HOMEOWNERS"
data = urllib.parse.urlencode(dict(
    location="ALAMEDA ALAMEDA",
    coverageType="HOMEOWNERS",
    coverageAmount="150000",
    homeAge="New",
))
res = urllib.request.urlopen(URL, data.encode("utf8"))

print(res.read())
</code></pre>
<p>This is python3. The <a href="http://docs.python-requests.org/en/latest/" rel="nofollow noreferrer">requests</a> library provides an even nicer API for making HTTP requests.</p>
<hr/>
<p><strong>Edit</strong>: In response to your three questions:</p>
<blockquote>
<p>is it possible for the dictionary that you've created to have more than 1 location and cycle through them using a for loop?</p>
</blockquote>
<p>Yes, just add a loop around the code and pass a different value for <code>location</code> each time. I would put this code into a function to make the code cleaner, like this:</p>
<p><a href="https://gist.github.com/lost-theory/08786e3a27c8d8ce3839" rel="nofollow noreferrer">https://gist.github.com/lost-theory/08786e3a27c8d8ce3839</a></p>
<blockquote>
<p>the results are in a lot of jibberish, so I'd have to find a way to sift through it huh. Like pick out which is which</p>
</blockquote>
<p>Yes, the jibberish is HTML that you will need to parse to collect the data you're looking for. Look at <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer">HTMLParser</a> in the python standard library, or install a library like <a href="http://lxml.de/" rel="nofollow noreferrer">lxml</a> or <a href="http://www.crummy.com/software/BeautifulSoup/" rel="nofollow noreferrer">BeautifulSoup</a>, which have a little nicer API. You can also just try parsing the text by hand using <code>str.split</code>.</p>
<p>If you want to convert the table's rows into python <code>list</code>s you'll need to find all the rows, which look like this:</p>
<pre><code>  &lt;tr Valign="top"&gt;
    &lt;td align="left"&gt;Bankers Standard &lt;a href='http://interactive.web.insurance.ca.gov/companyprofile/companyprofile?event=companyProfile&amp;doFunction=getCompanyProfile&amp;eid=5906'&gt;&lt;small&gt;(Info)&lt;/small&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="left"&gt;&lt;div align="right"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;N/A&lt;/td&gt;
    &lt;td align="left"&gt;&lt;div align="right"&gt;250&lt;/div&gt;&lt;/td&gt;
    &lt;td align="left"&gt;&amp;nbsp;&lt;/td&gt;
    &lt;td align="left"&gt;Bankers Standard &lt;a href='http://interactive.web.insurance.ca.gov/companyprofile/companyprofile?event=companyProfile&amp;doFunction=getCompanyProfile&amp;eid=5906'&gt;&lt;small&gt;(Info)&lt;/small&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="left"&gt;&lt;div align="right"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1255&lt;/td&gt;
    &lt;td align="left"&gt;&lt;div align="right"&gt;500&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
</code></pre>
<p>You want to loop over all the <code>&lt;tr&gt;</code> (row) elements, grabbing all the <code>&lt;td&gt;</code> (column) elements inside each row, then clean up the text in each column (removing those <code>&amp;nbsp;</code> spaces, etc.).</p>
<p>There are lots of questions on StackOverflow and tutorials on the internet on how to parse or scrape HTML in python, like <a href="http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html#The%20basic%20find%20method:%20findAll(name,%20attrs,%20recursive,%20text,%20limit,%20**kwargs)" rel="nofollow noreferrer">this</a> or <a href="http://docs.python-guide.org/en/latest/scenarios/scrape/" rel="nofollow noreferrer">this</a>.</p>
<blockquote>
<p>could you explain why we had to do the data.encode line</p>
</blockquote>
<p>Sure! In the <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="nofollow noreferrer">documentation for <code>urlopen</code></a>, it says:</p>
<blockquote>
<p>data must be a bytes object specifying additional data to be sent to the server, or None if no such data is needed.</p>
</blockquote>
<p>The <code>urlencode</code> function returns a unicode string, and if we try to pass that into <code>urlopen</code>, we get this error:</p>
<pre><code>TypeError: POST data should be bytes or an iterable of bytes. It cannot be of type str.
</code></pre>
<p>So we use <code>data.encode('utf8')</code> to convert the unicode string to bytes. You typically need to use bytes for input &amp; output like reading from or writing to files on disk, sending or receiving data over the network like HTTP requests, etc. <a href="http://nedbatchelder.com/text/unipain.html" rel="nofollow noreferrer">This presentation</a> has a good explanation of bytes vs. unicode strings in python and why you need to decode/encode when doing I/O.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are no AJAX calls being made by that page. It is simple Javascript code that is executed from an <code>onchange</code> event for the "Type of Coverage:" select box.</p>
<p>If you look at the source for the page you will see that all the values are stored in the Javascript function <code>coverageTypeOnChange()</code>. From that you can work out what to post for all cases. Provided that these values do not change you will be able to automate scraping of the site without running Javascript code.</p>
<p>If, however, the values change over time (e.g. as premiums usually do), then you might be better off looking at Selenium or alternative headless browsers.</p>
</div>
<div class="post-text" itemprop="text">
<p>This problem gave me a big headache once. Regarding the following line:</p>
<pre><code>br['location'] = ['ALAMEDA BERKELEY']   #SET FORM ENTRIES
</code></pre>
<p>This implies that you are selecting 'ALAMEDA BERKELEY' from a list.  If so, then try adding a comma after the item:</p>
<pre><code>br['location'] = ['ALAMEDA BERKELEY',]
</code></pre>
<p>Otherwise use:</p>
<pre><code>br['location'] =  'ALAMEDA BERKELEY' 
</code></pre>
<p>I often try elaborate workarounds for mechanize problems, only to come back to my original code and make a slight modification... very powerful, very unforgiving</p>
</div>
<span class="comment-copy">Mechanize does not support JavaScript, and therefore does not suport ajax.</span>
<span class="comment-copy">There are no ajax calls on that page - it is standard form submission. Nevertheless, the info on posting with requests is useful.</span>
<span class="comment-copy">@mhawke: Good point.</span>
<span class="comment-copy">You've helped me do in a short time what I've been trying to do for the past few weeks... all my learning resources online has led me to mechanize and beautifulsoup, yet you did it using urllib.parse and urllib.request. Props bro!!   Forgive me if I'm noob, but is it possible for the dictionary that you've created to have more than 1 location and cycle through them using a for loop?   Also, the results are in a lot of jibberish, so I'd have to find a way to sift through it huh. Like pick out which is which?   And finally, could you explain why we had to do the data.encode line ?</span>
<span class="comment-copy">And if this post helped answer your questions don't forget to mark it as an accepted answer: <a href="http://stackoverflow.com/help/accepted-answer">stackoverflow.com/help/accepted-answer</a></span>
<span class="comment-copy">thank you very much steven, I really appreciate it. I'll work on it and try to understand this a little bit more.</span>
<span class="comment-copy">By working out alll the posts, do you mean what Steven K. below is talking about? or do you mean change the input form value (sorry im novice)</span>
