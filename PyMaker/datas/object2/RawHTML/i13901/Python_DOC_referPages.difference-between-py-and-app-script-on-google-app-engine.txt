<div class="post-text" itemprop="text">
<p>According to <a href="https://cloud.google.com/appengine/docs/python/config/appconfig#Python_app_yaml_Script_handlers" rel="nofollow">Google App Engine doc</a>, the script handler can call three types of Python scripts to handle the request match by the URL pattern.</p>
<blockquote>
<p>A script: directive can contain either a file path ending in .py
  (meaning that the script uses CGI), or a Python module path, with
  package names separated by dots (meaning that the script uses WSGI).
  The last component of a script: directive using a Python module path
  is the name of a global variable in the module: that variable must be
  a WSGI app, and is usually called app by convention.</p>
</blockquote>
<p>What is the difference between these three types and their use cases?</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually, there is no <code>.app</code> script file. This is not a valid extension name. Instead, it is a variable inside a script.</p>
<h1>Example</h1>
<p>You may see in a <code>app.yaml</code> file something like this:</p>
<pre><code>handlers:
- url: /.*
  script: application.app
</code></pre>
<p>In this case, the '.app' part is a variable inside application.py, and you can see a piece of code like this inside the <code>application.py</code>:</p>
<pre><code>app = webapp2.WSGIApplication([
    ('/', MainPageHandler)
], debug=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>A <code>script:</code> directive can contain either a <strong>file</strong> path ending in <code>.py</code> (meaning that the script uses CGI), or a <strong>Python module</strong> path, with package names separated by dots (meaning that the script uses WSGI). The last component of a <code>script:</code> directive using a <strong>Python module</strong> path is the name of a global variable in the module: that variable must be a WSGI app, and is usually called <code>app</code> by convention.</p>
<p><strong>Note</strong>: just like for a Python <code>import</code> statement, each subdirectory that is a package must contain a file named <code>__init__.py</code>.</p>
</blockquote>
<p>There are actually only two methods of referencing the Python script. First, a <strong>file</strong> path, e.g., <code>/home/tsr/myscript.py</code>. Second, a <strong>Python module</strong> path, e.g., <code>mypackage.mymodule</code>.</p>
<p>See <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow">Python's documentation on packages</a> for more information.</p>
</div>
<div class="post-text" itemprop="text">
<p>The .app is the WSGI use - the typical/most common one.</p>
<p>The .py is the CGI use - rare, apparently with issues, see <a href="https://stackoverflow.com/questions/19295153/does-google-app-engine-actually-implement-normal-cgi">Does Google App Engine actually implement "normal" CGI?</a></p>
</div>
